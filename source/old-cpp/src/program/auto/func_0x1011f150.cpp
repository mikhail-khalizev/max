FUNC_BEGIN(0x1011f150, 0x686641ef4ee11fc, 0x20, ({0x68, 0x74, 0, 0, 0, 0xe8, 0xf8, 0x6b, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x5c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x83, 0x3d, 0x68, 0x53, 0x1c, 0x10, 0, 0x75, 0x52, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0xe8, 0x8a, 0x6e, 0x4, 0, 0xa3, 0x68, 0x53, 0x1c, 0x10, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0xff, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x22, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x5d, 0x6e, 0x4, 0, 0xf, 0xbf, 0x55, 0xcc, 0xc1, 0xe2, 0x2, 0x89, 0xd3, 0x8b, 0x15, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xda, 0x89, 0x2, 0xeb, 0xcc, 0x8b, 0x45, 0xf8, 0xe8, 0x48, 0x8d, 0xf9, 0xff, 0xe8, 0xef, 0x8e, 0xf9, 0xff, 0xf, 0xbe, 0xc8, 0x8b, 0x45, 0xf8, 0xe8, 0x38, 0x8d, 0xf9, 0xff, 0xe8, 0x47, 0x18, 0, 0, 0xf, 0xbe, 0xd8, 0x8b, 0x15, 0x68, 0x53, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x32, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x1a, 0x8d, 0xf9, 0xff, 0xe8, 0x51, 0x8e, 0xf9, 0xff, 0x85, 0xc0, 0xf, 0x84, 0x25, 0x1, 0, 0, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xb4, 0xe8, 0xd6, 0xc9, 0xf6, 0xff, 0x89, 0x45, 0xb0, 0x80, 0x65, 0xec, 0xfe, 0xb9, 0x3, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xed, 0x8c, 0xf9, 0xff, 0xe8, 0xfc, 0x17, 0, 0, 0xf, 0xbe, 0xd8, 0x8d, 0x45, 0xb4, 0xe8, 0xbd, 0xb4, 0xf6, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xd3, 0x8c, 0xf9, 0xff, 0xe8, 0xa, 0x8e, 0xf9, 0xff, 0xe8, 0xd9, 0xfc, 0xff, 0xff, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0xff, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xb8, 0, 0, 0, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0xff, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x94, 0, 0, 0, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xb4, 0xe8, 0x8f, 0xb4, 0xf6, 0xff, 0xf, 0xbf, 0x55, 0xc8, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x1b, 0xf, 0xbf, 0x55, 0xcc, 0xc1, 0xe2, 0x2, 0xa1, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0, 0x1, 0xd0, 0x80, 0x8, 0x40, 0xeb, 0x57, 0xf, 0xbf, 0x45, 0xcc, 0xc1, 0xe0, 0x2, 0x8b, 0x15, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x35, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xb4, 0xe8, 0x35, 0xb4, 0xf6, 0xff, 0xf, 0xbf, 0x55, 0xc8, 0x1, 0xd0, 0x8a, 0, 0xb4, 0x3, 0xf6, 0xe4, 0xc, 0x80, 0x88, 0xc3, 0xf, 0xbf, 0x45, 0xcc, 0xc1, 0xe0, 0x2, 0x8b, 0x15, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0, 0x1, 0xd0, 0x88, 0x18, 0xe9, 0x56, 0xff, 0xff, 0xff, 0xe9, 0x32, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x6f, 0xc9, 0xf6, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc0, 0xe8, 0x62, 0x77, 0xf5, 0xff, 0x8d, 0x55, 0xbc, 0x8b, 0x45, 0xf8, 0xe8, 0xc3, 0x8b, 0xf9, 0xff, 0xe8, 0x32, 0x8d, 0xf9, 0xff, 0xf, 0xbf, 0x45, 0xc0, 0xc1, 0xe0, 0x2, 0x8b, 0x15, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc2, 0x8b, 0, 0x1, 0xd0, 0xc6, 0, 0x2, 0x8b, 0x45, 0xf8, 0xe8, 0x9c, 0x8b, 0xf9, 0xff, 0xe8, 0x7b, 0x16, 0, 0, 0x84, 0xc0, 0xf, 0x84, 0xe0, 0, 0, 0, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xac, 0xe8, 0x5b, 0x73, 0xf5, 0xff, 0x89, 0x45, 0xa8, 0x80, 0x65, 0xec, 0xfe, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xbe, 0xf, 0xbf, 0x55, 0xbc, 0x8b, 0x45, 0xfc, 0xe8, 0x5d, 0x5d, 0xf5, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xac, 0xe8, 0x78, 0x72, 0xf5, 0xff, 0x89, 0xca, 0xe8, 0xb2, 0xb9, 0x1, 0, 0x84, 0xc0, 0xf, 0x84, 0x98, 0, 0, 0, 0x8d, 0x45, 0xac, 0xe8, 0xa5, 0x71, 0xf5, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xcc, 0x8d, 0x45, 0xac, 0xe8, 0x96, 0x71, 0xf5, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xc8, 0xf, 0xbf, 0x45, 0xcc, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0xa1, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0, 0x1, 0xd0, 0xc6, 0, 0x2, 0x8d, 0x45, 0xac, 0xe8, 0x6c, 0x71, 0xf5, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x51, 0xf, 0xbf, 0x55, 0xcc, 0xc1, 0xe2, 0x2, 0xa1, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0, 0x1, 0xd0, 0xc6, 0x40, 0x1, 0x2, 0xf, 0xbf, 0x45, 0xcc, 0xc1, 0xe0, 0x2, 0x8b, 0x15, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0xc6, 0, 0x2, 0xf, 0xbf, 0x45, 0xcc, 0xc1, 0xe0, 0x2, 0x8b, 0x15, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0xc6, 0x40, 0x1, 0x2, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xc3, 0x6a, 0xf5, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0xa7, 0x8a, 0xf9, 0xff, 0xe8, 0x1a, 0xc0, 0xfa, 0xff, 0x89, 0x45, 0xd4, 0xdf, 0x45, 0xd4, 0xe8, 0xc5, 0x6b, 0x4, 0, 0xe8, 0xf8, 0x6b, 0x4, 0, 0xdb, 0x5d, 0xa4, 0x8b, 0x45, 0xa4, 0x89, 0x45, 0xc4, 0xc6, 0x45, 0xf0, 0, 0xf, 0xbf, 0x45, 0xc4, 0x85, 0xc0, 0x75, 0x34, 0xf, 0xbf, 0x45, 0xbc, 0xc1, 0xe0, 0x2, 0x8b, 0x15, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xbe, 0x8b, 0, 0x1, 0xc2, 0x31, 0xc0, 0x8a, 0x2, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xe0, 0x85, 0xc0, 0x74, 0x8, 0x66, 0xf7, 0x45, 0xe0, 0x80, 0, 0x74, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0x8b, 0x45, 0xbc, 0x2b, 0x45, 0xc4, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0xff, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x45, 0xbc, 0xf, 0x8d, 0x7b, 0x1, 0, 0, 0x8b, 0x45, 0xbe, 0x2b, 0x45, 0xc4, 0x89, 0x45, 0xc8, 0x8b, 0x55, 0xcc, 0x2b, 0x55, 0xbc, 0x8b, 0x45, 0xcc, 0x2b, 0x45, 0xbc, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xd8, 0x8b, 0x45, 0xc8, 0x66, 0x3b, 0x45, 0xbe, 0x7f, 0x27, 0xf, 0xbf, 0x45, 0xbe, 0xf, 0xbf, 0x55, 0xc8, 0x29, 0xc2, 0x89, 0xd3, 0xf, 0xbf, 0x45, 0xbe, 0xf, 0xbf, 0x55, 0xc8, 0x29, 0xc2, 0xf, 0xaf, 0xd3, 0xf, 0xbf, 0x45, 0xd8, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xd4, 0x39, 0xc2, 0x7f, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xc8, 0xff, 0x45, 0xc8, 0xeb, 0xc6, 0x80, 0x7d, 0xf0, 0, 0x75, 0x9, 0x8b, 0x45, 0xc8, 0x66, 0x3b, 0x45, 0xbe, 0x7e, 0x2, 0xeb, 0x6a, 0x8b, 0x45, 0xbc, 0x1, 0xc0, 0x2b, 0x45, 0xcc, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xbe, 0x1, 0xc0, 0x2b, 0x45, 0xc8, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xc8, 0xf, 0xbf, 0x45, 0xcc, 0xe8, 0x40, 0xfb, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xcc, 0xe8, 0x2b, 0xfb, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0xf, 0xbf, 0x55, 0xc8, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x16, 0xfb, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x1, 0xfb, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0x8b, 0x45, 0xc8, 0xff, 0x45, 0xc8, 0x8b, 0x45, 0xbe, 0x1, 0xc0, 0x2b, 0x45, 0xc8, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xc8, 0x85, 0xc0, 0x7d, 0x7, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xdc, 0x48, 0x39, 0xc2, 0x7e, 0xa, 0x66, 0xa1, 0x74, 0x81, 0x1c, 0x10, 0x48, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xcc, 0x40, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xbc, 0x1, 0xc0, 0x2b, 0x45, 0xd0, 0x89, 0x45, 0xe8, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0xff, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x66, 0x3b, 0x45, 0xdc, 0x7f, 0x48, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x19, 0xf, 0xbf, 0x55, 0xd0, 0xc1, 0xe2, 0x2, 0xa1, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0, 0x1, 0xd0, 0xc6, 0, 0x42, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x19, 0xf, 0xbf, 0x55, 0xe8, 0xc1, 0xe2, 0x2, 0xa1, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0, 0x1, 0xd0, 0xc6, 0, 0x42, 0xeb, 0xa9, 0xe9, 0x72, 0xfe, 0xff, 0xff, 0x8a, 0x45, 0xf0, 0x88, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011f150, 0x5)   pushd(0x74);                          /* push dword 0x74 */
    II(0x1011f155, 0x5)   calld(sys_check_available_stack_size, 0x46bf8); /* call 0x10165d52 */
    II(0x1011f15a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011f15b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011f15c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011f15d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011f15e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011f15f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011f161, 0x6)   sub(esp, 0x5c);                       /* sub esp, 0x5c */
    II(0x1011f167, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011f16a, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1011f16d, 0x7)   cmp(memd_a32(ds, 0x101c5368), 0);     /* cmp dword [0x101c5368], 0x0 */
    II(0x1011f174, 0x2)   jnzd(0x1011f1c8, 0x52);               /* jnz 0x1011f1c8 */
    II(0x1011f176, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x1011f17b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011f17e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011f181, 0x5)   calld(sys_new_arr, 0x46e8a);          /* call 0x10166010 */
    II(0x1011f186, 0x5)   mov(memd_a32(ds, 0x101c5368), eax);   /* mov [0x101c5368], eax */
    II(0x1011f18b, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x1011f192, 0x2)   jmpd(0x1011f19a, 0x6);                /* jmp 0x1011f19a */
l_0x1011f194:
    II(0x1011f194, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1011f197, 0x3)   inc(memd_a32(ss, ebp - 0x34));        /* inc dword [ebp-0x34] */
l_0x1011f19a:
    II(0x1011f19a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1011f19d, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1011f1a4, 0x2)   jged(0x1011f1c8, 0x22);               /* jge 0x1011f1c8 */
    II(0x1011f1a6, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x1011f1ab, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011f1ae, 0x5)   calld(sys_new_arr, 0x46e5d);          /* call 0x10166010 */
    II(0x1011f1b3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x1011f1b7, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011f1ba, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x1011f1bc, 0x6)   mov(edx, memd_a32(ds, 0x101c5368));   /* mov edx, [0x101c5368] */
    II(0x1011f1c2, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x1011f1c4, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x1011f1c6, 0x2)   jmpd(0x1011f194, -0x34);              /* jmp 0x1011f194 */
l_0x1011f1c8:
    II(0x1011f1c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011f1cb, 0x5)   calld(0x100b7f18, -0x672b8);          /* call 0x100b7f18 */
    II(0x1011f1d0, 0x5)   calld(0x100b80c4, -0x67111);          /* call 0x100b80c4 */
    II(0x1011f1d5, 0x3)   movsx(ecx, al);                       /* movsx ecx, al */
    II(0x1011f1d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011f1db, 0x5)   calld(0x100b7f18, -0x672c8);          /* call 0x100b7f18 */
    II(0x1011f1e0, 0x5)   calld(0x10120a2c, 0x1847);            /* call 0x10120a2c */
    II(0x1011f1e5, 0x3)   movsx(ebx, al);                       /* movsx ebx, al */
    II(0x1011f1e8, 0x6)   mov(edx, memd_a32(ds, 0x101c5368));   /* mov edx, [0x101c5368] */
    II(0x1011f1ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011f1f1, 0x5)   calld(0x1011ef28, -0x2ce);            /* call 0x1011ef28 */
    II(0x1011f1f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011f1f9, 0x5)   calld(0x100b7f18, -0x672e6);          /* call 0x100b7f18 */
    II(0x1011f1fe, 0x5)   calld(0x100b8054, -0x671af);          /* call 0x100b8054 */
    II(0x1011f203, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011f205, 0x6)   jzd(0x1011f330, 0x125);               /* jz dword 0x1011f330 */
    II(0x1011f20b, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x1011f20f, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011f212, 0x5)   calld(0x1008bbed, -0x9362a);          /* call 0x1008bbed */
    II(0x1011f217, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1011f21a, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x1011f21e, 0x5)   mov(ecx, 0x3);                        /* mov ecx, 0x3 */
    II(0x1011f223, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011f226, 0x5)   calld(0x100b7f18, -0x67313);          /* call 0x100b7f18 */
    II(0x1011f22b, 0x5)   calld(0x10120a2c, 0x17fc);            /* call 0x10120a2c */
    II(0x1011f230, 0x3)   movsx(ebx, al);                       /* movsx ebx, al */
    II(0x1011f233, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011f236, 0x5)   calld(0x1008a6f8, -0x94b43);          /* call 0x1008a6f8 */
    II(0x1011f23b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011f23d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011f240, 0x5)   calld(0x100b7f18, -0x6732d);          /* call 0x100b7f18 */
    II(0x1011f245, 0x5)   calld(0x100b8054, -0x671f6);          /* call 0x100b8054 */
    II(0x1011f24a, 0x5)   calld(0x1011ef28, -0x327);            /* call 0x1011ef28 */
    II(0x1011f24f, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x1011f256, 0x2)   jmpd(0x1011f25e, 0x6);                /* jmp 0x1011f25e */
l_0x1011f258:
    II(0x1011f258, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1011f25b, 0x3)   inc(memd_a32(ss, ebp - 0x34));        /* inc dword [ebp-0x34] */
l_0x1011f25e:
    II(0x1011f25e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1011f261, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1011f268, 0x6)   jged(0x1011f326, 0xb8);               /* jge dword 0x1011f326 */
    II(0x1011f26e, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
    II(0x1011f275, 0x2)   jmpd(0x1011f27d, 0x6);                /* jmp 0x1011f27d */
l_0x1011f277:
    II(0x1011f277, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1011f27a, 0x3)   inc(memd_a32(ss, ebp - 0x38));        /* inc dword [ebp-0x38] */
l_0x1011f27d:
    II(0x1011f27d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1011f280, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1011f287, 0x6)   jged(0x1011f321, 0x94);               /* jge dword 0x1011f321 */
    II(0x1011f28d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x1011f291, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011f294, 0x5)   calld(0x1008a728, -0x94b71);          /* call 0x1008a728 */
    II(0x1011f299, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f29d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f29f, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1011f2a1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011f2a6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011f2a8, 0x2)   jnzd(0x1011f2c5, 0x1b);               /* jnz 0x1011f2c5 */
    II(0x1011f2aa, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x1011f2ae, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011f2b1, 0x5)   mov(eax, memd_a32(ds, 0x101c5368));   /* mov eax, [0x101c5368] */
    II(0x1011f2b6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f2b8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f2bc, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011f2be, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f2c0, 0x3)   or_(memb_a32(ds, eax), 0x40);         /* or byte [eax], 0x40 */
    II(0x1011f2c3, 0x2)   jmpd(0x1011f31c, 0x57);               /* jmp 0x1011f31c */
l_0x1011f2c5:
    II(0x1011f2c5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011f2c9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011f2cc, 0x6)   mov(edx, memd_a32(ds, 0x101c5368));   /* mov edx, [0x101c5368] */
    II(0x1011f2d2, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f2d4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f2d8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011f2da, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f2dc, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1011f2de, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011f2e3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011f2e5, 0x2)   jnzd(0x1011f31c, 0x35);               /* jnz 0x1011f31c */
    II(0x1011f2e7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x1011f2eb, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011f2ee, 0x5)   calld(0x1008a728, -0x94bcb);          /* call 0x1008a728 */
    II(0x1011f2f3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f2f7, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f2f9, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1011f2fb, 0x2)   mov(ah, 0x3);                         /* mov ah, 0x3 */
    II(0x1011f2fd, 0x2)   mul(ah);                              /* mul ah */
    II(0x1011f2ff, 0x2)   or_(al, 0x80);                        /* or al, 0x80 */
    II(0x1011f301, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1011f303, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011f307, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011f30a, 0x6)   mov(edx, memd_a32(ds, 0x101c5368));   /* mov edx, [0x101c5368] */
    II(0x1011f310, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f312, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f316, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011f318, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f31a, 0x2)   mov(memb_a32(ds, eax), bl);           /* mov [eax], bl */
l_0x1011f31c:
    II(0x1011f31c, 0x5)   jmpd(0x1011f277, -0xaa);              /* jmp 0x1011f277 */
l_0x1011f321:
    II(0x1011f321, 0x5)   jmpd(0x1011f258, -0xce);              /* jmp 0x1011f258 */
l_0x1011f326:
    II(0x1011f326, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011f328, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011f32b, 0x5)   calld(0x1008bc9f, -0x93691);          /* call 0x1008bc9f */
l_0x1011f330:
    II(0x1011f330, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011f333, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1011f336, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011f339, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011f33c, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1011f33f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011f342, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1011f345, 0x5)   calld(0x10076aac, -0xa889e);          /* call 0x10076aac */
    II(0x1011f34a, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1011f34d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011f350, 0x5)   calld(0x100b7f18, -0x6743d);          /* call 0x100b7f18 */
    II(0x1011f355, 0x5)   calld(0x100b808c, -0x672ce);          /* call 0x100b808c */
    II(0x1011f35a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x40)); /* movsx eax, word [ebp-0x40] */
    II(0x1011f35e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011f361, 0x6)   mov(edx, memd_a32(ds, 0x101c5368));   /* mov edx, [0x101c5368] */
    II(0x1011f367, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f369, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3e)); /* movsx edx, word [ebp-0x3e] */
    II(0x1011f36d, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011f36f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f371, 0x3)   mov(memb_a32(ds, eax), 0x2);          /* mov byte [eax], 0x2 */
    II(0x1011f374, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011f377, 0x5)   calld(0x100b7f18, -0x67464);          /* call 0x100b7f18 */
    II(0x1011f37c, 0x5)   calld(0x101209fc, 0x167b);            /* call 0x101209fc */
    II(0x1011f381, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011f383, 0x6)   jzd(0x1011f469, 0xe0);                /* jz dword 0x1011f469 */
    II(0x1011f389, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x1011f38d, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1011f390, 0x5)   calld(my_ctor_0x101b38f8, -0xa8ca5);  /* call 0x100766f0 */
    II(0x1011f395, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x1011f398, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x1011f39c, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1011f39e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x42)); /* movsx ebx, word [ebp-0x42] */
    II(0x1011f3a2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x44)); /* movsx edx, word [ebp-0x44] */
    II(0x1011f3a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011f3a9, 0x5)   calld(0x1007510b, -0xaa2a3);          /* call 0x1007510b */
    II(0x1011f3ae, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011f3b0, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1011f3b3, 0x5)   calld(0x10076630, -0xa8d88);          /* call 0x10076630 */
    II(0x1011f3b8, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1011f3ba, 0x5)   calld(0x1013ad71, 0x1b9b2);           /* call 0x1013ad71 */
    II(0x1011f3bf, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011f3c1, 0x6)   jzd(0x1011f45f, 0x98);                /* jz dword 0x1011f45f */
    II(0x1011f3c7, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1011f3ca, 0x5)   calld(0x10076574, -0xa8e5b);          /* call 0x10076574 */
    II(0x1011f3cf, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1011f3d3, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1011f3d6, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1011f3d9, 0x5)   calld(0x10076574, -0xa8e6a);          /* call 0x10076574 */
    II(0x1011f3de, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1011f3e2, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1011f3e5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011f3e9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011f3ec, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011f3ee, 0x5)   mov(eax, memd_a32(ds, 0x101c5368));   /* mov eax, [0x101c5368] */
    II(0x1011f3f3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f3f5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f3f9, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011f3fb, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f3fd, 0x3)   mov(memb_a32(ds, eax), 0x2);          /* mov byte [eax], 0x2 */
    II(0x1011f400, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1011f403, 0x5)   calld(0x10076574, -0xa8e94);          /* call 0x10076574 */
    II(0x1011f408, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1011f40c, 0x2)   jzd(0x1011f45f, 0x51);                /* jz 0x1011f45f */
    II(0x1011f40e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x1011f412, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011f415, 0x5)   mov(eax, memd_a32(ds, 0x101c5368));   /* mov eax, [0x101c5368] */
    II(0x1011f41a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f41c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f420, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011f422, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f424, 0x4)   mov(memb_a32(ds, eax + 0x1), 0x2);    /* mov byte [eax+0x1], 0x2 */
    II(0x1011f428, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011f42c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011f42f, 0x6)   mov(edx, memd_a32(ds, 0x101c5368));   /* mov edx, [0x101c5368] */
    II(0x1011f435, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f437, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f43b, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x1011f43e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f440, 0x3)   mov(memb_a32(ds, eax), 0x2);          /* mov byte [eax], 0x2 */
    II(0x1011f443, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011f447, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011f44a, 0x6)   mov(edx, memd_a32(ds, 0x101c5368));   /* mov edx, [0x101c5368] */
    II(0x1011f450, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f452, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f456, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x1011f459, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f45b, 0x4)   mov(memb_a32(ds, eax + 0x1), 0x2);    /* mov byte [eax+0x1], 0x2 */
l_0x1011f45f:
    II(0x1011f45f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011f461, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1011f464, 0x5)   calld(0x10075f2c, -0xa953d);          /* call 0x10075f2c */
l_0x1011f469:
    II(0x1011f469, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011f46c, 0x5)   calld(0x100b7f18, -0x67559);          /* call 0x100b7f18 */
    II(0x1011f471, 0x5)   calld(0x100cb490, -0x53fe6);          /* call 0x100cb490 */
    II(0x1011f476, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1011f479, 0x3)   fild(memw_a32(ss, ebp - 0x2c));       /* fild word [ebp-0x2c] */
    II(0x1011f47c, 0x5)   calld(sys_sqrt, 0x46bc5);             /* call 0x10166046 */
    II(0x1011f481, 0x5)   calld(sys_round, 0x46bf8);            /* call 0x1016607e */
    II(0x1011f486, 0x3)   fistp(memd_a32(ss, ebp - 0x5c));      /* fistp dword [ebp-0x5c] */
    II(0x1011f489, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x1011f48c, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1011f48f, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x1011f493, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x1011f497, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011f499, 0x2)   jnzd(0x1011f4cf, 0x34);               /* jnz 0x1011f4cf */
    II(0x1011f49b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x44)); /* movsx eax, word [ebp-0x44] */
    II(0x1011f49f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011f4a2, 0x6)   mov(edx, memd_a32(ds, 0x101c5368));   /* mov edx, [0x101c5368] */
    II(0x1011f4a8, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f4aa, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x42)); /* movsx edx, word [ebp-0x42] */
    II(0x1011f4ae, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011f4b0, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011f4b2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1011f4b4, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x1011f4b6, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1011f4b9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1011f4bd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011f4bf, 0x2)   jzd(0x1011f4c9, 0x8);                 /* jz 0x1011f4c9 */
    II(0x1011f4c1, 0x6)   test(memw_a32(ss, ebp - 0x20), 0x80); /* test word [ebp-0x20], 0x80 */
    II(0x1011f4c7, 0x2)   jzd(0x1011f4cb, 0x2);                 /* jz 0x1011f4cb */
l_0x1011f4c9:
    II(0x1011f4c9, 0x2)   jmpd(0x1011f4cf, 0x4);                /* jmp 0x1011f4cf */
l_0x1011f4cb:
    II(0x1011f4cb, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x1011f4cf:
    II(0x1011f4cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1011f4d2, 0x3)   sub(eax, memd_a32(ss, ebp - 0x3c));   /* sub eax, [ebp-0x3c] */
    II(0x1011f4d5, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1011f4d8, 0x2)   jmpd(0x1011f4e0, 0x6);                /* jmp 0x1011f4e0 */
l_0x1011f4da:
    II(0x1011f4da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1011f4dd, 0x3)   inc(memd_a32(ss, ebp - 0x34));        /* inc dword [ebp-0x34] */
l_0x1011f4e0:
    II(0x1011f4e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1011f4e3, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x44));    /* cmp ax, [ebp-0x44] */
    II(0x1011f4e7, 0x6)   jged(0x1011f668, 0x17b);              /* jge dword 0x1011f668 */
    II(0x1011f4ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x42));   /* mov eax, [ebp-0x42] */
    II(0x1011f4f0, 0x3)   sub(eax, memd_a32(ss, ebp - 0x3c));   /* sub eax, [ebp-0x3c] */
    II(0x1011f4f3, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1011f4f6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x1011f4f9, 0x3)   sub(edx, memd_a32(ss, ebp - 0x44));   /* sub edx, [ebp-0x44] */
    II(0x1011f4fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1011f4ff, 0x3)   sub(eax, memd_a32(ss, ebp - 0x44));   /* sub eax, [ebp-0x44] */
    II(0x1011f502, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1011f505, 0x3)   mov(memd_a32(ss, ebp - 0x28), edx);   /* mov [ebp-0x28], edx */
l_0x1011f508:
    II(0x1011f508, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1011f50b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x42));    /* cmp ax, [ebp-0x42] */
    II(0x1011f50f, 0x2)   jgd(0x1011f538, 0x27);                /* jg 0x1011f538 */
    II(0x1011f511, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x42)); /* movsx eax, word [ebp-0x42] */
    II(0x1011f515, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f519, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1011f51b, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x1011f51d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x42)); /* movsx eax, word [ebp-0x42] */
    II(0x1011f521, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f525, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1011f527, 0x3)   imul(edx, ebx);                       /* imul edx, ebx */
    II(0x1011f52a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1011f52e, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011f530, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1011f534, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1011f536, 0x2)   jgd(0x1011f53a, 0x2);                 /* jg 0x1011f53a */
l_0x1011f538:
    II(0x1011f538, 0x2)   jmpd(0x1011f542, 0x8);                /* jmp 0x1011f542 */
l_0x1011f53a:
    II(0x1011f53a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1011f53d, 0x3)   inc(memd_a32(ss, ebp - 0x38));        /* inc dword [ebp-0x38] */
    II(0x1011f540, 0x2)   jmpd(0x1011f508, -0x3a);              /* jmp 0x1011f508 */
l_0x1011f542:
    II(0x1011f542, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x1011f546, 0x2)   jnzd(0x1011f551, 0x9);                /* jnz 0x1011f551 */
    II(0x1011f548, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1011f54b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x42));    /* cmp ax, [ebp-0x42] */
    II(0x1011f54f, 0x2)   jled(0x1011f553, 0x2);                /* jle 0x1011f553 */
l_0x1011f551:
    II(0x1011f551, 0x2)   jmpd(0x1011f5bd, 0x6a);               /* jmp 0x1011f5bd */
l_0x1011f553:
    II(0x1011f553, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1011f556, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1011f558, 0x3)   sub(eax, memd_a32(ss, ebp - 0x34));   /* sub eax, [ebp-0x34] */
    II(0x1011f55b, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011f55e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x42));   /* mov eax, [ebp-0x42] */
    II(0x1011f561, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1011f563, 0x3)   sub(eax, memd_a32(ss, ebp - 0x38));   /* sub eax, [ebp-0x38] */
    II(0x1011f566, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1011f569, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f56d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011f571, 0x5)   calld(0x1011f0b6, -0x4c0);            /* call 0x1011f0b6 */
    II(0x1011f576, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011f578, 0x2)   jzd(0x1011f57e, 0x4);                 /* jz 0x1011f57e */
    II(0x1011f57a, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x1011f57e:
    II(0x1011f57e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1011f582, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011f586, 0x5)   calld(0x1011f0b6, -0x4d5);            /* call 0x1011f0b6 */
    II(0x1011f58b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011f58d, 0x2)   jzd(0x1011f593, 0x4);                 /* jz 0x1011f593 */
    II(0x1011f58f, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x1011f593:
    II(0x1011f593, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f597, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1011f59b, 0x5)   calld(0x1011f0b6, -0x4ea);            /* call 0x1011f0b6 */
    II(0x1011f5a0, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011f5a2, 0x2)   jzd(0x1011f5a8, 0x4);                 /* jz 0x1011f5a8 */
    II(0x1011f5a4, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x1011f5a8:
    II(0x1011f5a8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1011f5ac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1011f5b0, 0x5)   calld(0x1011f0b6, -0x4ff);            /* call 0x1011f0b6 */
    II(0x1011f5b5, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011f5b7, 0x2)   jzd(0x1011f5bd, 0x4);                 /* jz 0x1011f5bd */
    II(0x1011f5b9, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x1011f5bd:
    II(0x1011f5bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1011f5c0, 0x3)   inc(memd_a32(ss, ebp - 0x38));        /* inc dword [ebp-0x38] */
    II(0x1011f5c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x42));   /* mov eax, [ebp-0x42] */
    II(0x1011f5c6, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1011f5c8, 0x3)   sub(eax, memd_a32(ss, ebp - 0x38));   /* sub eax, [ebp-0x38] */
    II(0x1011f5cb, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1011f5ce, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x1011f5d2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011f5d4, 0x2)   jged(0x1011f5dd, 0x7);                /* jge 0x1011f5dd */
    II(0x1011f5d6, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
l_0x1011f5dd:
    II(0x1011f5dd, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x1011f5e2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011f5e5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1011f5e9, 0x1)   dec(eax);                             /* dec eax */
    II(0x1011f5ea, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1011f5ec, 0x2)   jled(0x1011f5f8, 0xa);                /* jle 0x1011f5f8 */
    II(0x1011f5ee, 0x6)   mov(ax, memw_a32(ds, 0x101c8174));    /* mov ax, [0x101c8174] */
    II(0x1011f5f4, 0x1)   dec(eax);                             /* dec eax */
    II(0x1011f5f5, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x1011f5f8:
    II(0x1011f5f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1011f5fb, 0x1)   inc(eax);                             /* inc eax */
    II(0x1011f5fc, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1011f5ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1011f602, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1011f604, 0x3)   sub(eax, memd_a32(ss, ebp - 0x30));   /* sub eax, [ebp-0x30] */
    II(0x1011f607, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011f60a, 0x2)   jmpd(0x1011f612, 0x6);                /* jmp 0x1011f612 */
l_0x1011f60c:
    II(0x1011f60c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1011f60f, 0x3)   inc(memd_a32(ss, ebp - 0x38));        /* inc dword [ebp-0x38] */
l_0x1011f612:
    II(0x1011f612, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1011f615, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x1011f619, 0x2)   jgd(0x1011f663, 0x48);                /* jg 0x1011f663 */
    II(0x1011f61b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1011f61f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011f621, 0x2)   jld(0x1011f63c, 0x19);                /* jl 0x1011f63c */
    II(0x1011f623, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x1011f627, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011f62a, 0x5)   mov(eax, memd_a32(ds, 0x101c5368));   /* mov eax, [0x101c5368] */
    II(0x1011f62f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f631, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f635, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011f637, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f639, 0x3)   mov(memb_a32(ds, eax), 0x42);         /* mov byte [eax], 0x42 */
l_0x1011f63c:
    II(0x1011f63c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1011f63f, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1011f646, 0x2)   jged(0x1011f661, 0x19);               /* jge 0x1011f661 */
    II(0x1011f648, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1011f64c, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011f64f, 0x5)   mov(eax, memd_a32(ds, 0x101c5368));   /* mov eax, [0x101c5368] */
    II(0x1011f654, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f656, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011f65a, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011f65c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011f65e, 0x3)   mov(memb_a32(ds, eax), 0x42);         /* mov byte [eax], 0x42 */
l_0x1011f661:
    II(0x1011f661, 0x2)   jmpd(0x1011f60c, -0x57);              /* jmp 0x1011f60c */
l_0x1011f663:
    II(0x1011f663, 0x5)   jmpd(0x1011f4da, -0x18e);             /* jmp 0x1011f4da */
l_0x1011f668:
    II(0x1011f668, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x1011f66b, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
//    II(0x1011f66e, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x1011f671, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011f673, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011f674, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011f675, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011f676, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011f677, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011f678, 0x1)   retd();                               /* ret */
FUNC_END

