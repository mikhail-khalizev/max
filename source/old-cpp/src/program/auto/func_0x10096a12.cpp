FUNC_BEGIN(0x10096a12, 0xd8bcdab88b721c7d, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0x36, 0xf3, 0xc, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x80, 0x4d, 0xe8, 0x1, 0x8d, 0x45, 0xd0, 0xe8, 0xb0, 0x51, 0xff, 0xff, 0x89, 0x45, 0xd8, 0x80, 0x65, 0xe8, 0xfe, 0x8b, 0x5d, 0xf8, 0x8d, 0x45, 0xd0, 0xe8, 0xa9, 0x3c, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0xe8, 0xd, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x13, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x34, 0x52, 0xff, 0xff, 0xe9, 0x10, 0x1, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x78, 0, 0xfe, 0xff, 0xe8, 0x6a, 0x3d, 0x5, 0, 0xc6, 0x45, 0xf0, 0, 0x66, 0xc7, 0x45, 0xdc, 0x1, 0, 0xeb, 0x7, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x45, 0xdc, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xdc, 0x48, 0x39, 0xc2, 0xf, 0x8d, 0xbf, 0, 0, 0, 0x66, 0xc7, 0x45, 0xde, 0x1, 0, 0xeb, 0x7, 0x8b, 0x45, 0xde, 0x66, 0xff, 0x45, 0xde, 0xf, 0xbf, 0x55, 0xde, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x48, 0x39, 0xc2, 0xf, 0x8d, 0x96, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xde, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xd0, 0xe8, 0x4f, 0x3c, 0xff, 0xff, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x74, 0xf, 0xbf, 0x5d, 0xde, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xd0, 0xe8, 0x32, 0x3c, 0xff, 0xff, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xba, 0xff, 0, 0, 0, 0x29, 0xc2, 0x89, 0x55, 0xe0, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x13, 0x8d, 0x45, 0xcc, 0xe8, 0x4d, 0xf3, 0xfd, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xc8, 0xe8, 0x40, 0xf3, 0xfd, 0xff, 0x89, 0xda, 0xe8, 0x9f, 0xf4, 0, 0, 0x98, 0x8b, 0x55, 0xe0, 0xc1, 0xe2, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe0, 0x80, 0x7d, 0xf0, 0, 0x74, 0x8, 0x8b, 0x45, 0xe0, 0x3b, 0x45, 0xe4, 0x7d, 0x15, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0xe8, 0xf4, 0x1f, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xe4, 0xe9, 0x4e, 0xff, 0xff, 0xff, 0xe9, 0x25, 0xff, 0xff, 0xff, 0x8a, 0x45, 0xf0, 0x88, 0x45, 0xec, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x2b, 0x51, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x1f, 0x51, 0xff, 0xff, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10096a12, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x10096a17, 0x5)   calld(sys_check_available_stack_size, 0xcf336); /* call 0x10165d52 */
    II(0x10096a1c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10096a1d, 0x1)   pushd(esi);                           /* push esi */
    II(0x10096a1e, 0x1)   pushd(edi);                           /* push edi */
    II(0x10096a1f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10096a20, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10096a22, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x10096a28, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10096a2b, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10096a2e, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10096a31, 0x4)   or_(memb_a32(ss, ebp - 0x18), 0x1);   /* or byte [ebp-0x18], 0x1 */
    II(0x10096a35, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10096a38, 0x5)   calld(0x1008bbed, -0xae50);           /* call 0x1008bbed */
    II(0x10096a3d, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10096a40, 0x4)   and_(memb_a32(ss, ebp - 0x18), -0x2 /* 0xfe */); /* and byte [ebp-0x18], 0xfe */
    II(0x10096a44, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10096a47, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10096a4a, 0x5)   calld(0x1008a6f8, -0xc357);           /* call 0x1008a6f8 */
    II(0x10096a4f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10096a51, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10096a54, 0x5)   calld(0x10096666, -0x3f3);            /* call 0x10096666 */
    II(0x10096a59, 0x2)   test(al, al);                         /* test al, al */
    II(0x10096a5b, 0x2)   jnzd(0x10096a70, 0x13);               /* jnz 0x10096a70 */
    II(0x10096a5d, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x10096a61, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096a63, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10096a66, 0x5)   calld(0x1008bc9f, -0xadcc);           /* call 0x1008bc9f */
    II(0x10096a6b, 0x5)   jmpd(0x10096b80, 0x110);              /* jmp 0x10096b80 */
l_0x10096a70:
    II(0x10096a70, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10096a73, 0x5)   calld(my_ctor_0x101b4184, -0x1ff88);  /* call 0x10076af0 */
    II(0x10096a78, 0x5)   calld(0x100ea7e7, 0x53d6a);           /* call 0x100ea7e7 */
    II(0x10096a7d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x10096a81, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0x1);   /* mov word [ebp-0x24], 0x1 */
    II(0x10096a87, 0x2)   jmpd(0x10096a90, 0x7);                /* jmp 0x10096a90 */
l_0x10096a89:
    II(0x10096a89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10096a8c, 0x4)   inc(memw_a32(ss, ebp - 0x24));        /* inc word [ebp-0x24] */
l_0x10096a90:
    II(0x10096a90, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x10096a95, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10096a98, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10096a9c, 0x1)   dec(eax);                             /* dec eax */
    II(0x10096a9d, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10096a9f, 0x6)   jged(0x10096b64, 0xbf);               /* jge dword 0x10096b64 */
    II(0x10096aa5, 0x6)   mov(memw_a32(ss, ebp - 0x22), 0x1);   /* mov word [ebp-0x22], 0x1 */
    II(0x10096aab, 0x2)   jmpd(0x10096ab4, 0x7);                /* jmp 0x10096ab4 */
l_0x10096aad:
    II(0x10096aad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x10096ab0, 0x4)   inc(memw_a32(ss, ebp - 0x22));        /* inc word [ebp-0x22] */
l_0x10096ab4:
    II(0x10096ab4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x22)); /* movsx edx, word [ebp-0x22] */
    II(0x10096ab8, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x10096abd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10096ac0, 0x1)   dec(eax);                             /* dec eax */
    II(0x10096ac1, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10096ac3, 0x6)   jged(0x10096b5f, 0x96);               /* jge dword 0x10096b5f */
    II(0x10096ac9, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x22)); /* movsx ebx, word [ebp-0x22] */
    II(0x10096acd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10096ad1, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10096ad4, 0x5)   calld(0x1008a728, -0xc3b1);           /* call 0x1008a728 */
    II(0x10096ad9, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10096adb, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10096add, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10096ae2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10096ae4, 0x2)   jzd(0x10096b5a, 0x74);                /* jz 0x10096b5a */
    II(0x10096ae6, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x22)); /* movsx ebx, word [ebp-0x22] */
    II(0x10096aea, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10096aee, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10096af1, 0x5)   calld(0x1008a728, -0xc3ce);           /* call 0x1008a728 */
    II(0x10096af6, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10096af8, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10096afa, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10096aff, 0x5)   mov(edx, 0xff);                       /* mov edx, 0xff */
    II(0x10096b04, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10096b06, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x10096b09, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10096b0c, 0x3)   add(edx, 0x13);                       /* add edx, 0x13 */
    II(0x10096b0f, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10096b12, 0x5)   calld(0x10075e64, -0x20cb3);          /* call 0x10075e64 */
    II(0x10096b17, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10096b19, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x10096b1c, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10096b1f, 0x5)   calld(0x10075e64, -0x20cc0);          /* call 0x10075e64 */
    II(0x10096b24, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x10096b26, 0x5)   calld(0x100a5fca, 0xf49f);            /* call 0x100a5fca */
    II(0x10096b2b, 0x1)   cwde();                               /* cwde */
    II(0x10096b2c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x10096b2f, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x10096b32, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10096b34, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x10096b37, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x10096b3b, 0x2)   jzd(0x10096b45, 0x8);                 /* jz 0x10096b45 */
    II(0x10096b3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10096b40, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x1c));   /* cmp eax, [ebp-0x1c] */
    II(0x10096b43, 0x2)   jged(0x10096b5a, 0x15);               /* jge 0x10096b5a */
l_0x10096b45:
    II(0x10096b45, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x10096b48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10096b4b, 0x5)   calld(0x10088b44, -0xe00c);           /* call 0x10088b44 */
    II(0x10096b50, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x10096b54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10096b57, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x10096b5a:
    II(0x10096b5a, 0x5)   jmpd(0x10096aad, -0xb2);              /* jmp 0x10096aad */
l_0x10096b5f:
    II(0x10096b5f, 0x5)   jmpd(0x10096a89, -0xdb);              /* jmp 0x10096a89 */
l_0x10096b64:
    II(0x10096b64, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10096b67, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10096b6a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096b6c, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10096b6f, 0x5)   calld(0x1008bc9f, -0xaed5);           /* call 0x1008bc9f */
    II(0x10096b74, 0x2)   jmpd(0x10096b80, 0xa);                /* jmp 0x10096b80 */
//  II(0x10096b76, 0xa)   /* Недостижимый код. */
l_0x10096b80:
    II(0x10096b80, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10096b83, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10096b85, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10096b86, 0x1)   popd(edi);                            /* pop edi */
    II(0x10096b87, 0x1)   popd(esi);                            /* pop esi */
    II(0x10096b88, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10096b89, 0x1)   retd();                               /* ret */
FUNC_END

