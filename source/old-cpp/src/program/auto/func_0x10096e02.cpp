FUNC_BEGIN(0x10096e02, 0x9cfad5c54f17bd3e, 0x20, ({0x68, 0x34, 0x1, 0, 0, 0xe8, 0x46, 0xef, 0xc, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0x1, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xfc, 0x8d, 0x45, 0xd8, 0xe8, 0xc5, 0xfc, 0xfd, 0xff, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xc, 0x43, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x7d, 0x70, 0x3, 0, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xec, 0, 0xe9, 0x7d, 0x3, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xbb, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xbb, 0x8e, 0x4, 0, 0x89, 0xc2, 0xe8, 0xd4, 0xc2, 0, 0, 0x66, 0x3b, 0x42, 0x8, 0x7d, 0x9, 0xc6, 0x45, 0xec, 0, 0xe9, 0x48, 0x3, 0, 0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x21, 0xe8, 0x36, 0x58, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0x40, 0x57, 0, 0, 0xbb, 0xba, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x8, 0xff, 0xff, 0xff, 0xe8, 0x32, 0xef, 0xc, 0, 0xeb, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0x40, 0xfd, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xaf, 0x3e, 0xa, 0, 0x84, 0xc0, 0x74, 0x37, 0x8b, 0x45, 0xfc, 0x5, 0xfa, 0, 0, 0, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xc4, 0xe8, 0x1f, 0x56, 0, 0, 0xe8, 0xe6, 0xbc, 0, 0, 0x98, 0x85, 0xc0, 0x7f, 0x18, 0x8d, 0x45, 0xc4, 0xe8, 0xd, 0x56, 0, 0, 0xe8, 0xd4, 0x55, 0, 0, 0x98, 0x1, 0xc0, 0x66, 0xff, 0x84, 0x28, 0x8, 0xff, 0xff, 0xff, 0xeb, 0xb3, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x31, 0xf4, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0xa4, 0xf5, 0xfd, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0xdd, 0x6f, 0x3, 0, 0x89, 0x85, 0, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xf, 0xbf, 0x95, 0, 0xff, 0xff, 0xff, 0x8d, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0xe8, 0x52, 0x70, 0x3, 0, 0xeb, 0xb, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0xa8, 0xfc, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0x14, 0x3e, 0xa, 0, 0x84, 0xc0, 0x74, 0x3f, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0x34, 0xf4, 0xfd, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x18, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0x17, 0xf4, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x85, 0, 0xff, 0xff, 0xff, 0x74, 0x2, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0xeb, 0xa5, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8d, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0xe8, 0xae, 0x43, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xe4, 0x7e, 0x21, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0xe8, 0x59, 0x42, 0xff, 0xff, 0xf, 0xbf, 0, 0x1, 0xc0, 0x66, 0x8b, 0x84, 0x28, 0x8, 0xff, 0xff, 0xff, 0x1, 0x45, 0xdc, 0xeb, 0xc8, 0xf, 0xbf, 0x45, 0xe0, 0x1, 0xc0, 0xf, 0xbf, 0x55, 0xdc, 0x40, 0x39, 0xd0, 0x7f, 0x2d, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0xe8, 0x3, 0x1b, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0x5e, 0xef, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x54, 0x4a, 0, 0, 0xe9, 0xb2, 0x1, 0, 0, 0x66, 0x83, 0x7d, 0xf8, 0x5, 0x75, 0x12, 0x8d, 0x5d, 0xd8, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0xe8, 0xe1, 0xf9, 0xff, 0xff, 0x88, 0x45, 0xe8, 0xeb, 0x5a, 0x66, 0x83, 0x7d, 0xf8, 0x22, 0x74, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x25, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x24, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x23, 0x75, 0x21, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xb8, 0x5, 0, 0, 0, 0x50, 0x8d, 0x4d, 0xd8, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0xe8, 0x98, 0xee, 0xff, 0xff, 0x88, 0x45, 0xe8, 0xeb, 0x19, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0x8d, 0x4d, 0xd8, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0xe8, 0x98, 0xbd, 0xff, 0xff, 0x88, 0x45, 0xe8, 0x80, 0x7d, 0xe8, 0, 0xf, 0x84, 0xe7, 0, 0, 0, 0xb8, 0x35, 0, 0, 0, 0xe8, 0x5c, 0xed, 0xc, 0, 0x89, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0xf4, 0xfe, 0xff, 0xff, 0, 0x74, 0x3d, 0x8b, 0x45, 0xf0, 0x50, 0x8d, 0x55, 0xd8, 0x8d, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0xe8, 0x93, 0xed, 0xfd, 0xff, 0x50, 0xf, 0xbf, 0x4d, 0xf8, 0xf, 0xbf, 0x5d, 0xfc, 0x8b, 0x55, 0xf4, 0x8b, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0xe8, 0xb1, 0x58, 0xff, 0xff, 0x89, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xe8, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xe8, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0xe8, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0xc7, 0x56, 0, 0, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0x18, 0x56, 0, 0, 0x8b, 0x5d, 0xf0, 0x83, 0xc3, 0x21, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x65, 0x55, 0, 0, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0xfe, 0x55, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x6, 0xdc, 0, 0, 0xc6, 0x45, 0xec, 0x1, 0x31, 0xd2, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0x91, 0x48, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0xe8, 0x9c, 0x19, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0xf7, 0xed, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xed, 0x48, 0, 0, 0xeb, 0x4e, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0xe8, 0x72, 0x19, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0xcd, 0xed, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xc3, 0x48, 0, 0, 0xeb, 0x24, 0x31, 0xd2, 0x8d, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0xe8, 0x4c, 0x19, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0xa7, 0xed, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x9d, 0x48, 0, 0, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10096e02, 0x5)   pushd(0x134);                         /* push dword 0x134 */
    II(0x10096e07, 0x5)   calld(sys_check_available_stack_size, 0xcef46); /* call 0x10165d52 */
    II(0x10096e0c, 0x1)   pushd(esi);                           /* push esi */
    II(0x10096e0d, 0x1)   pushd(edi);                           /* push edi */
    II(0x10096e0e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10096e0f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10096e11, 0x6)   sub(esp, 0x11c);                      /* sub esp, 0x11c */
    II(0x10096e17, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10096e1a, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10096e1d, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x10096e20, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x10096e23, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10096e26, 0x5)   calld(my_ctor_0x101b4184, -0x2033b);  /* call 0x10076af0 */
    II(0x10096e2b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10096e2d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10096e2e, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10096e30, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10096e32, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096e34, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10096e37, 0x5)   calld(0x1008b148, -0xbcf4);           /* call 0x1008b148 */
    II(0x10096e3c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10096e40, 0x5)   calld(0x100cdec2, 0x3707d);           /* call 0x100cdec2 */
    II(0x10096e45, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10096e47, 0x2)   jnzd(0x10096e52, 0x9);                /* jnz 0x10096e52 */
    II(0x10096e49, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x10096e4d, 0x5)   jmpd(0x100971cf, 0x37d);              /* jmp 0x100971cf */
l_0x10096e52:
    II(0x10096e52, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10096e56, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10096e59, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10096e5c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10096e5f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10096e65, 0x5)   mov(ebx, 0x101ca468);                 /* mov ebx, 0x101ca468 */
    II(0x10096e6a, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10096e6c, 0x5)   calld(0x100dfd2c, 0x48ebb);           /* call 0x100dfd2c */
    II(0x10096e71, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10096e73, 0x5)   calld(0x100a314c, 0xc2d4);            /* call 0x100a314c */
    II(0x10096e78, 0x4)   cmp(ax, memw_a32(ds, edx + 0x8));     /* cmp ax, [edx+0x8] */
    II(0x10096e7c, 0x2)   jged(0x10096e87, 0x9);                /* jge 0x10096e87 */
    II(0x10096e7e, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x10096e82, 0x5)   jmpd(0x100971cf, 0x348);              /* jmp 0x100971cf */
l_0x10096e87:
    II(0x10096e87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10096e8a, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x10096e8d, 0x5)   calld(0x1009c6c8, 0x5836);            /* call 0x1009c6c8 */
    II(0x10096e92, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10096e94, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10096e97, 0x5)   calld(0x1009c5dc, 0x5740);            /* call 0x1009c5dc */
    II(0x10096e9c, 0x5)   mov(ebx, 0xba);                       /* mov ebx, 0xba */
    II(0x10096ea1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096ea3, 0x6)   lea(eax, ebp - 0xf8);                 /* lea eax, [ebp+0xffffff08] */
    II(0x10096ea9, 0x5)   calld(sys_memset, 0xcef32);           /* call 0x10165de0 */
    II(0x10096eae, 0x2)   jmpd(0x10096eb8, 0x8);                /* jmp 0x10096eb8 */
l_0x10096eb0:
    II(0x10096eb0, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10096eb3, 0x5)   calld(0x10076bf8, -0x202c0);          /* call 0x10076bf8 */
l_0x10096eb8:
    II(0x10096eb8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096eba, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10096ebd, 0x5)   calld(0x1013ad71, 0xa3eaf);           /* call 0x1013ad71 */
    II(0x10096ec2, 0x2)   test(al, al);                         /* test al, al */
    II(0x10096ec4, 0x2)   jzd(0x10096efd, 0x37);                /* jz 0x10096efd */
    II(0x10096ec6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10096ec9, 0x5)   add(eax, 0xfa);                       /* add eax, 0xfa */
    II(0x10096ece, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10096ed1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10096ed4, 0x5)   calld(0x1009c4f8, 0x561f);            /* call 0x1009c4f8 */
    II(0x10096ed9, 0x5)   calld(0x100a2bc4, 0xbce6);            /* call 0x100a2bc4 */
    II(0x10096ede, 0x1)   cwde();                               /* cwde */
    II(0x10096edf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10096ee1, 0x2)   jgd(0x10096efb, 0x18);                /* jg 0x10096efb */
    II(0x10096ee3, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10096ee6, 0x5)   calld(0x1009c4f8, 0x560d);            /* call 0x1009c4f8 */
    II(0x10096eeb, 0x5)   calld(0x1009c4c4, 0x55d4);            /* call 0x1009c4c4 */
    II(0x10096ef0, 0x1)   cwde();                               /* cwde */
    II(0x10096ef1, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10096ef3, 0x8)   inc(memw_a32(ds, eax + ebp - 0xf8));  /* inc word [eax+ebp+0xffffff08] */
l_0x10096efb:
    II(0x10096efb, 0x2)   jmpd(0x10096eb0, -0x4d);              /* jmp 0x10096eb0 */
l_0x10096efd:
    II(0x10096efd, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x10096f02, 0x5)   calld(0x10076338, -0x20bcf);          /* call 0x10076338 */
    II(0x10096f07, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10096f09, 0x6)   lea(eax, ebp - 0xfc);                 /* lea eax, [ebp+0xffffff04] */
    II(0x10096f0f, 0x5)   calld(0x100764b8, -0x20a5c);          /* call 0x100764b8 */
    II(0x10096f14, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10096f18, 0x5)   calld(0x100cdefa, 0x36fdd);           /* call 0x100cdefa */
    II(0x10096f1d, 0x6)   mov(memd_a32(ss, ebp - 0x100), eax);  /* mov [ebp+0xffffff00], eax */
    II(0x10096f23, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x10096f2a, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x10096f31, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x100)); /* movsx edx, word [ebp+0xffffff00] */
    II(0x10096f38, 0x6)   lea(eax, ebp - 0x104);                /* lea eax, [ebp+0xfffffefc] */
    II(0x10096f3e, 0x5)   calld(0x100cdf95, 0x37052);           /* call 0x100cdf95 */
    II(0x10096f43, 0x2)   jmpd(0x10096f50, 0xb);                /* jmp 0x10096f50 */
l_0x10096f45:
    II(0x10096f45, 0x6)   lea(eax, ebp - 0xfc);                 /* lea eax, [ebp+0xffffff04] */
    II(0x10096f4b, 0x5)   calld(0x10076bf8, -0x20358);          /* call 0x10076bf8 */
l_0x10096f50:
    II(0x10096f50, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096f52, 0x6)   lea(eax, ebp - 0xfc);                 /* lea eax, [ebp+0xffffff04] */
    II(0x10096f58, 0x5)   calld(0x1013ad71, 0xa3e14);           /* call 0x1013ad71 */
    II(0x10096f5d, 0x2)   test(al, al);                         /* test al, al */
    II(0x10096f5f, 0x2)   jzd(0x10096fa0, 0x3f);                /* jz 0x10096fa0 */
    II(0x10096f61, 0x6)   lea(eax, ebp - 0xfc);                 /* lea eax, [ebp+0xffffff04] */
    II(0x10096f67, 0x5)   calld(0x100763a0, -0x20bcc);          /* call 0x100763a0 */
    II(0x10096f6c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096f6e, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10096f71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10096f74, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10096f77, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10096f7a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10096f7c, 0x2)   jnzd(0x10096f96, 0x18);               /* jnz 0x10096f96 */
    II(0x10096f7e, 0x6)   lea(eax, ebp - 0xfc);                 /* lea eax, [ebp+0xffffff04] */
    II(0x10096f84, 0x5)   calld(0x100763a0, -0x20be9);          /* call 0x100763a0 */
    II(0x10096f89, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10096f8d, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x100));   /* cmp ax, [ebp+0xffffff00] */
    II(0x10096f94, 0x2)   jzd(0x10096f98, 0x2);                 /* jz 0x10096f98 */
l_0x10096f96:
    II(0x10096f96, 0x2)   jmpd(0x10096f9e, 0x6);                /* jmp 0x10096f9e */
l_0x10096f98:
    II(0x10096f98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10096f9b, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
l_0x10096f9e:
    II(0x10096f9e, 0x2)   jmpd(0x10096f45, -0x5b);              /* jmp 0x10096f45 */
l_0x10096fa0:
    II(0x10096fa0, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x10096fa7, 0x2)   jmpd(0x10096faf, 0x6);                /* jmp 0x10096faf */
l_0x10096fa9:
    II(0x10096fa9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10096fac, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x10096faf:
    II(0x10096faf, 0x6)   lea(eax, ebp - 0x104);                /* lea eax, [ebp+0xfffffefc] */
    II(0x10096fb5, 0x5)   calld(my_2_get_count, -0xbc52);       /* call 0x1008b368 */
    II(0x10096fba, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1c));    /* cmp ax, [ebp-0x1c] */
    II(0x10096fbe, 0x2)   jled(0x10096fe1, 0x21);               /* jle 0x10096fe1 */
    II(0x10096fc0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10096fc4, 0x6)   lea(eax, ebp - 0x104);                /* lea eax, [ebp+0xfffffefc] */
    II(0x10096fca, 0x5)   calld(0x1008b228, -0xbda7);           /* call 0x1008b228 */
    II(0x10096fcf, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10096fd2, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10096fd4, 0x8)   mov(ax, memw_a32(ds, eax + ebp - 0xf8)); /* mov ax, [eax+ebp+0xffffff08] */
    II(0x10096fdc, 0x3)   add(memd_a32(ss, ebp - 0x24), eax);   /* add [ebp-0x24], eax */
    II(0x10096fdf, 0x2)   jmpd(0x10096fa9, -0x38);              /* jmp 0x10096fa9 */
l_0x10096fe1:
    II(0x10096fe1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10096fe5, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10096fe7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10096feb, 0x1)   inc(eax);                             /* inc eax */
    II(0x10096fec, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10096fee, 0x2)   jgd(0x1009701d, 0x2d);                /* jg 0x1009701d */
    II(0x10096ff0, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x10096ff4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096ff6, 0x6)   lea(eax, ebp - 0x104);                /* lea eax, [ebp+0xfffffefc] */
    II(0x10096ffc, 0x5)   calld(0x10088b04, -0xe4fd);           /* call 0x10088b04 */
    II(0x10097001, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10097003, 0x6)   lea(eax, ebp - 0xfc);                 /* lea eax, [ebp+0xffffff04] */
    II(0x10097009, 0x5)   calld(0x10075f6c, -0x210a2);          /* call 0x10075f6c */
    II(0x1009700e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10097010, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10097013, 0x5)   calld(0x1009ba6c, 0x4a54);            /* call 0x1009ba6c */
    II(0x10097018, 0x5)   jmpd(0x100971cf, 0x1b2);              /* jmp 0x100971cf */
l_0x1009701d:
    II(0x1009701d, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x5);    /* cmp word [ebp-0x8], 0x5 */
    II(0x10097022, 0x2)   jnzd(0x10097036, 0x12);               /* jnz 0x10097036 */
    II(0x10097024, 0x3)   lea(ebx, ebp - 0x28);                 /* lea ebx, [ebp-0x28] */
    II(0x10097027, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10097029, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009702c, 0x5)   calld(0x10096a12, -0x61f);            /* call 0x10096a12 */
    II(0x10097031, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x10097034, 0x2)   jmpd(0x10097090, 0x5a);               /* jmp 0x10097090 */
l_0x10097036:
    II(0x10097036, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x22);   /* cmp word [ebp-0x8], 0x22 */
    II(0x1009703b, 0x2)   jzd(0x10097044, 0x7);                 /* jz 0x10097044 */
    II(0x1009703d, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x25);   /* cmp word [ebp-0x8], 0x25 */
    II(0x10097042, 0x2)   jnzd(0x10097046, 0x2);                /* jnz 0x10097046 */
l_0x10097044:
    II(0x10097044, 0x2)   jmpd(0x1009704d, 0x7);                /* jmp 0x1009704d */
l_0x10097046:
    II(0x10097046, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x24);   /* cmp word [ebp-0x8], 0x24 */
    II(0x1009704b, 0x2)   jnzd(0x1009704f, 0x2);                /* jnz 0x1009704f */
l_0x1009704d:
    II(0x1009704d, 0x2)   jmpd(0x10097056, 0x7);                /* jmp 0x10097056 */
l_0x1009704f:
    II(0x1009704f, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x23);   /* cmp word [ebp-0x8], 0x23 */
    II(0x10097054, 0x2)   jnzd(0x10097077, 0x21);               /* jnz 0x10097077 */
l_0x10097056:
    II(0x10097056, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1009705a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009705b, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10097060, 0x1)   pushd(eax);                           /* push eax */
    II(0x10097061, 0x3)   lea(ecx, ebp - 0x28);                 /* lea ecx, [ebp-0x28] */
    II(0x10097064, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10097066, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1009706a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009706d, 0x5)   calld(0x10095f0a, -0x1168);           /* call 0x10095f0a */
    II(0x10097072, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x10097075, 0x2)   jmpd(0x10097090, 0x19);               /* jmp 0x10097090 */
l_0x10097077:
    II(0x10097077, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1009707b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009707c, 0x3)   lea(ecx, ebp - 0x28);                 /* lea ecx, [ebp-0x28] */
    II(0x1009707f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10097081, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10097085, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10097088, 0x5)   calld(0x10092e25, -0x4268);           /* call 0x10092e25 */
    II(0x1009708d, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
l_0x10097090:
    II(0x10097090, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x10097094, 0x6)   jzd(0x10097181, 0xe7);                /* jz dword 0x10097181 */
    II(0x1009709a, 0x5)   mov(eax, 0x35);                       /* mov eax, 0x35 */
    II(0x1009709f, 0x5)   calld(sys_new, 0xced5c);              /* call 0x10165e00 */
    II(0x100970a4, 0x6)   mov(memd_a32(ss, ebp - 0x108), eax);  /* mov [ebp+0xfffffef8], eax */
//    II(0x100970aa, 0x6)   mov(eax, memd_a32(ss, ebp - 0x108));  /* mov eax, [ebp+0xfffffef8] */
    II(0x100970b0, 0x6)   mov(memd_a32(ss, ebp - 0x10c), eax);  /* mov [ebp+0xfffffef4], eax */
    II(0x100970b6, 0x7)   cmp(memd_a32(ss, ebp - 0x10c), 0);    /* cmp dword [ebp+0xfffffef4], 0x0 */
    II(0x100970bd, 0x2)   jzd(0x100970fc, 0x3d);                /* jz 0x100970fc */
    II(0x100970bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100970c2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100970c3, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100970c6, 0x6)   lea(eax, ebp - 0x110);                /* lea eax, [ebp+0xfffffef0] */
    II(0x100970cc, 0x5)   calld(0x10075e64, -0x2126d);          /* call 0x10075e64 */
    II(0x100970d1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100970d2, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x8));  /* movsx ecx, word [ebp-0x8] */
    II(0x100970d6, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100970da, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100970dd, 0x6)   mov(eax, memd_a32(ss, ebp - 0x108));  /* mov eax, [ebp+0xfffffef8] */
    II(0x100970e3, 0x5)   calld(0x1008c999, -0xa74f);           /* call 0x1008c999 */
    II(0x100970e8, 0x6)   mov(memd_a32(ss, ebp - 0x114), eax);  /* mov [ebp+0xfffffeec], eax */
//    II(0x100970ee, 0x6)   mov(eax, memd_a32(ss, ebp - 0x114));  /* mov eax, [ebp+0xfffffeec] */
    II(0x100970f4, 0x6)   mov(memd_a32(ss, ebp - 0x118), eax);  /* mov [ebp+0xfffffee8], eax */
    II(0x100970fa, 0x2)   jmpd(0x10097108, 0xc);                /* jmp 0x10097108 */
l_0x100970fc:
    II(0x100970fc, 0x6)   mov(eax, memd_a32(ss, ebp - 0x10c));  /* mov eax, [ebp+0xfffffef4] */
    II(0x10097102, 0x6)   mov(memd_a32(ss, ebp - 0x118), eax);  /* mov [ebp+0xfffffee8], eax */
l_0x10097108:
    II(0x10097108, 0x6)   mov(edx, memd_a32(ss, ebp - 0x118));  /* mov edx, [ebp+0xfffffee8] */
    II(0x1009710e, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10097114, 0x5)   calld(0x1009c7e0, 0x56c7);            /* call 0x1009c7e0 */
    II(0x10097119, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x1009711f, 0x5)   calld(0x1009c73c, 0x5618);            /* call 0x1009c73c */
    II(0x10097124, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x10097127, 0x3)   add(ebx, 0x21);                       /* add ebx, 0x21 */
    II(0x1009712a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009712c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009712e, 0x5)   calld(0x1009c698, 0x5565);            /* call 0x1009c698 */
    II(0x10097133, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10097139, 0x5)   calld(0x1009c73c, 0x55fe);            /* call 0x1009c73c */
    II(0x1009713e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10097140, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10097145, 0x5)   calld(0x100a4d50, 0xdc06);            /* call 0x100a4d50 */
    II(0x1009714a, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1009714e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10097150, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10097156, 0x5)   calld(0x1009b9ec, 0x4891);            /* call 0x1009b9ec */
    II(0x1009715b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009715d, 0x6)   lea(eax, ebp - 0x104);                /* lea eax, [ebp+0xfffffefc] */
    II(0x10097163, 0x5)   calld(0x10088b04, -0xe664);           /* call 0x10088b04 */
    II(0x10097168, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009716a, 0x6)   lea(eax, ebp - 0xfc);                 /* lea eax, [ebp+0xffffff04] */
    II(0x10097170, 0x5)   calld(0x10075f6c, -0x21209);          /* call 0x10075f6c */
    II(0x10097175, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10097177, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1009717a, 0x5)   calld(0x1009ba6c, 0x48ed);            /* call 0x1009ba6c */
    II(0x1009717f, 0x2)   jmpd(0x100971cf, 0x4e);               /* jmp 0x100971cf */
l_0x10097181:
    II(0x10097181, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x10097185, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10097187, 0x6)   lea(eax, ebp - 0x104);                /* lea eax, [ebp+0xfffffefc] */
    II(0x1009718d, 0x5)   calld(0x10088b04, -0xe68e);           /* call 0x10088b04 */
    II(0x10097192, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10097194, 0x6)   lea(eax, ebp - 0xfc);                 /* lea eax, [ebp+0xffffff04] */
    II(0x1009719a, 0x5)   calld(0x10075f6c, -0x21233);          /* call 0x10075f6c */
    II(0x1009719f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100971a1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100971a4, 0x5)   calld(0x1009ba6c, 0x48c3);            /* call 0x1009ba6c */
    II(0x100971a9, 0x2)   jmpd(0x100971cf, 0x24);               /* jmp 0x100971cf */
//  II(0x100971ab, 0x24)  /* Недостижимый код. */
l_0x100971cf:
    II(0x100971cf, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100971d2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100971d4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100971d5, 0x1)   popd(edi);                            /* pop edi */
    II(0x100971d6, 0x1)   popd(esi);                            /* pop esi */
    II(0x100971d7, 0x1)   retd();                               /* ret */
FUNC_END

