FUNC_BEGIN(0x100a3f3f, 0x8d878c765882470b, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x9, 0x1e, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x4, 0x68, 0xfe, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0, 0x6f, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0xa5, 0x6d, 0, 0, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x75, 0x6c, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xa, 0xe8, 0xfb, 0x67, 0x9, 0, 0x8d, 0x58, 0xdc, 0x8b, 0x45, 0xfc, 0xe8, 0xf0, 0x67, 0x9, 0, 0x1, 0xc3, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0xe3, 0x67, 0x9, 0, 0x1, 0xc3, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xd2, 0x2b, 0xfd, 0xff, 0x98, 0x1, 0xc3, 0x89, 0x5d, 0xf8, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x2a, 0x2c, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x99, 0x6d, 0x9, 0, 0x84, 0xc0, 0x74, 0x1c, 0x8d, 0x45, 0xf0, 0xe8, 0xe0, 0x6d, 0xfe, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x10, 0x1, 0x45, 0xf8, 0xeb, 0xce, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xf6, 0x2b, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x65, 0x6d, 0x9, 0, 0x84, 0xc0, 0x74, 0x1c, 0x8d, 0x45, 0xf4, 0xe8, 0x34, 0x6b, 0, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe4, 0xff, 0x52, 0xc, 0x1, 0x45, 0xf8, 0xeb, 0xce, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xe9, 0x6c, 0, 0, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x3d, 0x6b, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xab, 0x2b, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x1a, 0x6d, 0x9, 0, 0x84, 0xc0, 0x74, 0x1c, 0x8d, 0x45, 0xf4, 0xe8, 0xe9, 0x6a, 0, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe0, 0xff, 0x52, 0xc, 0x1, 0x45, 0xf8, 0xeb, 0xce, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xf1, 0x60, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x2b, 0x4b, 0xfe, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xdb, 0x60, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x15, 0x4b, 0xfe, 0xff, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a3f3f, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100a3f44, 0x5)   calld(sys_check_available_stack_size, 0xc1e09); /* call 0x10165d52 */
    II(0x100a3f49, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a3f4a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a3f4b, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a3f4c, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a3f4d, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a3f4e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a3f4f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a3f51, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100a3f57, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a3f5a, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a3f5f, 0x5)   calld(0x1008a768, -0x197fc);          /* call 0x1008a768 */
    II(0x100a3f64, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100a3f67, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a3f69, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a3f6b, 0x5)   calld(0x1008ae70, -0x19100);          /* call 0x1008ae70 */
    II(0x100a3f70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a3f73, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a3f76, 0x5)   calld(0x100aad20, 0x6da5);            /* call 0x100aad20 */
    II(0x100a3f7b, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100a3f7e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a3f80, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a3f82, 0x5)   calld(0x100aabfc, 0x6c75);            /* call 0x100aabfc */
    II(0x100a3f87, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100a3f8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a3f91, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x100a3f94, 0x5)   calld(0x1013a794, 0x967fb);           /* call 0x1013a794 */
    II(0x100a3f99, 0x3)   lea(ebx, eax - 0x24);                 /* lea ebx, [eax-0x24] */
    II(0x100a3f9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a3f9f, 0x5)   calld(0x1013a794, 0x967f0);           /* call 0x1013a794 */
    II(0x100a3fa4, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x100a3fa6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a3fa9, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a3fac, 0x5)   calld(0x1013a794, 0x967e3);           /* call 0x1013a794 */
    II(0x100a3fb1, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x100a3fb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a3fb6, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a3fb9, 0x5)   calld(0x10076b90, -0x2d42e);          /* call 0x10076b90 */
    II(0x100a3fbe, 0x1)   cwde();                               /* cwde */
    II(0x100a3fbf, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x100a3fc1, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100a3fc4, 0x2)   jmpd(0x100a3fce, 0x8);                /* jmp 0x100a3fce */
l_0x100a3fc6:
    II(0x100a3fc6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a3fc9, 0x5)   calld(0x10076bf8, -0x2d3d6);          /* call 0x10076bf8 */
l_0x100a3fce:
    II(0x100a3fce, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a3fd0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a3fd3, 0x5)   calld(0x1013ad71, 0x96d99);           /* call 0x1013ad71 */
    II(0x100a3fd8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a3fda, 0x2)   jzd(0x100a3ff8, 0x1c);                /* jz 0x100a3ff8 */
    II(0x100a3fdc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a3fdf, 0x5)   calld(0x1008adc4, -0x19220);          /* call 0x1008adc4 */
    II(0x100a3fe4, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100a3fe7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100a3fea, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a3fed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100a3ff0, 0x3)   calld_abs(memd_a32(ds, edx + 0x10));  /* call dword near [edx+0x10] */
    II(0x100a3ff3, 0x3)   add(memd_a32(ss, ebp - 0x8), eax);    /* add [ebp-0x8], eax */
    II(0x100a3ff6, 0x2)   jmpd(0x100a3fc6, -0x32);              /* jmp 0x100a3fc6 */
l_0x100a3ff8:
    II(0x100a3ff8, 0x2)   jmpd(0x100a4002, 0x8);                /* jmp 0x100a4002 */
l_0x100a3ffa:
    II(0x100a3ffa, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a3ffd, 0x5)   calld(0x10076bf8, -0x2d40a);          /* call 0x10076bf8 */
l_0x100a4002:
    II(0x100a4002, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4004, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a4007, 0x5)   calld(0x1013ad71, 0x96d65);           /* call 0x1013ad71 */
    II(0x100a400c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a400e, 0x2)   jzd(0x100a402c, 0x1c);                /* jz 0x100a402c */
    II(0x100a4010, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a4013, 0x5)   calld(0x100aab4c, 0x6b34);            /* call 0x100aab4c */
    II(0x100a4018, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100a401b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100a401e, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a4021, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100a4024, 0x3)   calld_abs(memd_a32(ds, edx + 0xc));   /* call dword near [edx+0xc] */
    II(0x100a4027, 0x3)   add(memd_a32(ss, ebp - 0x8), eax);    /* add [ebp-0x8], eax */
    II(0x100a402a, 0x2)   jmpd(0x100a3ffa, -0x32);              /* jmp 0x100a3ffa */
l_0x100a402c:
    II(0x100a402c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a402f, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a4032, 0x5)   calld(0x100aad20, 0x6ce9);            /* call 0x100aad20 */
    II(0x100a4037, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100a403a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a403c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a403e, 0x5)   calld(0x100aab80, 0x6b3d);            /* call 0x100aab80 */
    II(0x100a4043, 0x2)   jmpd(0x100a404d, 0x8);                /* jmp 0x100a404d */
l_0x100a4045:
    II(0x100a4045, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a4048, 0x5)   calld(0x10076bf8, -0x2d455);          /* call 0x10076bf8 */
l_0x100a404d:
    II(0x100a404d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a404f, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a4052, 0x5)   calld(0x1013ad71, 0x96d1a);           /* call 0x1013ad71 */
    II(0x100a4057, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a4059, 0x2)   jzd(0x100a4077, 0x1c);                /* jz 0x100a4077 */
    II(0x100a405b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a405e, 0x5)   calld(0x100aab4c, 0x6ae9);            /* call 0x100aab4c */
    II(0x100a4063, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100a4066, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100a4069, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a406c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100a406f, 0x3)   calld_abs(memd_a32(ds, edx + 0xc));   /* call dword near [edx+0xc] */
    II(0x100a4072, 0x3)   add(memd_a32(ss, ebp - 0x8), eax);    /* add [ebp-0x8], eax */
    II(0x100a4075, 0x2)   jmpd(0x100a4045, -0x32);              /* jmp 0x100a4045 */
l_0x100a4077:
    II(0x100a4077, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a407a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100a407d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a407f, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a4082, 0x5)   calld(0x100aa178, 0x60f1);            /* call 0x100aa178 */
    II(0x100a4087, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4089, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a408c, 0x5)   calld(0x10088bbc, -0x1b4d5);          /* call 0x10088bbc */
    II(0x100a4091, 0x2)   jmpd(0x100a40a7, 0x14);               /* jmp 0x100a40a7 */
//  II(0x100a4093, 0x14)  /* Недостижимый код. */
l_0x100a40a7:
    II(0x100a40a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a40aa, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a40ac, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a40ad, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a40ae, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a40af, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a40b0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a40b1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a40b2, 0x1)   retd();                               /* ret */
FUNC_END

