FUNC_BEGIN(0x100ec486, 0x47b56c78e5a196c, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xc2, 0x98, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x50, 0xff, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x2, 0xa0, 0xf8, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x31, 0xa7, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xa0, 0xe8, 0x4, 0, 0x84, 0xc0, 0x74, 0x41, 0x8d, 0x45, 0xec, 0xe8, 0xc3, 0x9e, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x75, 0x12, 0x8d, 0x45, 0xec, 0xe8, 0xae, 0x9e, 0xf8, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0x9a, 0x9e, 0xf8, 0xff, 0x80, 0x78, 0x3e, 0x1e, 0x75, 0x2, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xeb, 0xa9, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xf4, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x46, 0x9a, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x3a, 0x9a, 0xf8, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ec486, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100ec48b, 0x5)   calld(sys_check_available_stack_size, 0x798c2); /* call 0x10165d52 */
    II(0x100ec490, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ec491, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ec492, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ec493, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ec494, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ec495, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ec497, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100ec49d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ec4a0, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100ec4a3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ec4a7, 0x5)   calld(0x100ec3fc, -0xb0);             /* call 0x100ec3fc */
    II(0x100ec4ac, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ec4ae, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec4b1, 0x5)   calld(0x100764b8, -0x75ffe);          /* call 0x100764b8 */
    II(0x100ec4b6, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100ec4bd, 0x2)   jmpd(0x100ec4c7, 0x8);                /* jmp 0x100ec4c7 */
l_0x100ec4bf:
    II(0x100ec4bf, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec4c2, 0x5)   calld(0x10076bf8, -0x758cf);          /* call 0x10076bf8 */
l_0x100ec4c7:
    II(0x100ec4c7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec4c9, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec4cc, 0x5)   calld(0x1013ad71, 0x4e8a0);           /* call 0x1013ad71 */
    II(0x100ec4d1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec4d3, 0x2)   jzd(0x100ec516, 0x41);                /* jz 0x100ec516 */
    II(0x100ec4d5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec4d8, 0x5)   calld(0x100763a0, -0x7613d);          /* call 0x100763a0 */
    II(0x100ec4dd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec4df, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ec4e2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ec4e6, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ec4e8, 0x2)   jnzd(0x100ec4fc, 0x12);               /* jnz 0x100ec4fc */
    II(0x100ec4ea, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec4ed, 0x5)   calld(0x100763a0, -0x76152);          /* call 0x100763a0 */
    II(0x100ec4f2, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100ec4f6, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100ec4fa, 0x2)   jzd(0x100ec4fe, 0x2);                 /* jz 0x100ec4fe */
l_0x100ec4fc:
    II(0x100ec4fc, 0x2)   jmpd(0x100ec50c, 0xe);                /* jmp 0x100ec50c */
l_0x100ec4fe:
    II(0x100ec4fe, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec501, 0x5)   calld(0x100763a0, -0x76166);          /* call 0x100763a0 */
    II(0x100ec506, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1e);  /* cmp byte [eax+0x3e], 0x1e */
    II(0x100ec50a, 0x2)   jnzd(0x100ec50e, 0x2);                /* jnz 0x100ec50e */
l_0x100ec50c:
    II(0x100ec50c, 0x2)   jmpd(0x100ec514, 0x6);                /* jmp 0x100ec514 */
l_0x100ec50e:
    II(0x100ec50e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ec511, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100ec514:
    II(0x100ec514, 0x2)   jmpd(0x100ec4bf, -0x57);              /* jmp 0x100ec4bf */
l_0x100ec516:
    II(0x100ec516, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ec519, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ec51c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec51e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec521, 0x5)   calld(0x10075f6c, -0x765ba);          /* call 0x10075f6c */
    II(0x100ec526, 0x2)   jmpd(0x100ec532, 0xa);                /* jmp 0x100ec532 */
//  II(0x100ec528, 0xa)   /* Недостижимый код. */
l_0x100ec532:
    II(0x100ec532, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ec535, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ec537, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ec538, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ec539, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ec53a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ec53b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ec53c, 0x1)   retd();                               /* ret */
FUNC_END

