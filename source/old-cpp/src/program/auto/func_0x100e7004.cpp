FUNC_BEGIN(0x100e7004, 0xbf7c9daa8e9d548b, 0x20, ({0x68, 0xcc, 0x1, 0, 0, 0xe8, 0x44, 0xed, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xa4, 0x1, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x1d, 0x75, 0x72, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x7, 0x75, 0x28, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xd0, 0x47, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x5a, 0xc1, 0xf8, 0x18, 0x6b, 0xc0, 0xc, 0x1, 0xd0, 0x83, 0xb8, 0xf4, 0xa4, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0x3f, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x5a, 0xc1, 0xf8, 0x18, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0xb4, 0xb4, 0x1b, 0x10, 0xb8, 0x24, 0x1e, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x6c, 0xfe, 0xff, 0xff, 0x50, 0xe8, 0x81, 0xee, 0x7, 0, 0x83, 0xc4, 0xc, 0xbb, 0x1f, 0, 0x1, 0, 0x8d, 0x95, 0x6c, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x98, 0xfd, 0xff, 0xff, 0xe9, 0xe6, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x1f, 0xf, 0x85, 0x8c, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x6c, 0xf0, 0xf8, 0xff, 0x89, 0x85, 0x68, 0xfe, 0xff, 0xff, 0x8d, 0xbd, 0x5c, 0xfe, 0xff, 0xff, 0xbe, 0x44, 0x7f, 0x1b, 0x10, 0xa5, 0xa5, 0xa5, 0x8b, 0x85, 0x68, 0xfe, 0xff, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0x8b, 0x85, 0x68, 0xfe, 0xff, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xd3, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x18, 0xc1, 0xe0, 0x2, 0xff, 0xb4, 0x28, 0x5c, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x6c, 0xfe, 0xff, 0xff, 0x50, 0xe8, 0xfa, 0xed, 0x7, 0, 0x83, 0xc4, 0xc, 0x8b, 0x85, 0x68, 0xfe, 0xff, 0xff, 0xf6, 0x40, 0x13, 0x2, 0x74, 0x9, 0x8b, 0x85, 0x68, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xfc, 0xbb, 0x1f, 0, 0x1, 0, 0x8d, 0x95, 0x6c, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xfc, 0xfc, 0xff, 0xff, 0xeb, 0x4d, 0x80, 0x3d, 0xcb, 0x37, 0x1c, 0x10, 0, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x14, 0x40, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0xf, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x10, 0x75, 0x2, 0xeb, 0x21, 0x8d, 0x95, 0x6c, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xd5, 0x88, 0x6, 0, 0xbb, 0x4, 0, 0x1, 0, 0x8d, 0x95, 0x6c, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xad, 0xfc, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100e7004, 0x5)   pushd(0x1cc);                         /* push dword 0x1cc */
    II(0x100e7009, 0x5)   calld(sys_check_available_stack_size, 0x7ed44); /* call 0x10165d52 */
    II(0x100e700e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e700f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e7010, 0x1)   pushd(edx);                           /* push edx */
    II(0x100e7011, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e7012, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e7013, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e7014, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e7016, 0x6)   sub(esp, 0x1a4);                      /* sub esp, 0x1a4 */
    II(0x100e701c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100e701f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7022, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1d);   /* cmp word [eax+0x8], 0x1d */
    II(0x100e7027, 0x2)   jnzd(0x100e709b, 0x72);               /* jnz 0x100e709b */
    II(0x100e7029, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e702c, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x100e7030, 0x2)   jnzd(0x100e705a, 0x28);               /* jnz 0x100e705a */
    II(0x100e7032, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7035, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100e7038, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e703d, 0x6)   imul(edx, eax, 0x247);                /* imul edx, eax, 0x247 */
    II(0x100e7043, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7046, 0x3)   mov(eax, memd_a32(ds, eax + 0x5a));   /* mov eax, [eax+0x5a] */
    II(0x100e7049, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100e704c, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x100e704f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e7051, 0x7)   cmp(memd_a32(ds, eax + 0x101ca4f4), 0); /* cmp dword [eax+0x101ca4f4], 0x0 */
    II(0x100e7058, 0x2)   jzd(0x100e705c, 0x2);                 /* jz 0x100e705c */
l_0x100e705a:
    II(0x100e705a, 0x2)   jmpd(0x100e709b, 0x3f);               /* jmp 0x100e709b */
l_0x100e705c:
    II(0x100e705c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e705f, 0x3)   mov(eax, memd_a32(ds, eax + 0x5a));   /* mov eax, [eax+0x5a] */
    II(0x100e7062, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100e7065, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e7068, 0x6)   pushd(memd_a32(ds, eax + 0x101bb4b4)); /* push dword [eax+0x101bb4b4] */
    II(0x100e706e, 0x5)   mov(eax, 0x101a1e24);                 /* mov eax, 0x101a1e24 */ /* "%s research completed" */
    II(0x100e7073, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e7074, 0x6)   lea(eax, ebp - 0x194);                /* lea eax, [ebp+0xfffffe6c] */
    II(0x100e707a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e707b, 0x5)   calld(sys_sprintf, 0x7ee81);          /* call 0x10165f01 */
    II(0x100e7080, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100e7083, 0x5)   mov(ebx, 0x1001f);                    /* mov ebx, 0x1001f */
    II(0x100e7088, 0x6)   lea(edx, ebp - 0x194);                /* lea edx, [ebp+0xfffffe6c] */
    II(0x100e708e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7091, 0x5)   calld(0x100e6e2e, -0x268);            /* call 0x100e6e2e */
    II(0x100e7096, 0x5)   jmpd(0x100e7181, 0xe6);               /* jmp 0x100e7181 */
l_0x100e709b:
    II(0x100e709b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e709e, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1f);  /* cmp byte [eax+0x3e], 0x1f */
    II(0x100e70a2, 0x6)   jnzd(0x100e7134, 0x8c);               /* jnz dword 0x100e7134 */
    II(0x100e70a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e70ab, 0x5)   calld(0x1007611c, -0x70f94);          /* call 0x1007611c */
    II(0x100e70b0, 0x6)   mov(memd_a32(ss, ebp - 0x198), eax);  /* mov [ebp+0xfffffe68], eax */
    II(0x100e70b6, 0x6)   lea(edi, ebp - 0x1a4);                /* lea edi, [ebp+0xfffffe5c] */
    II(0x100e70bc, 0x5)   mov(esi, 0x101b7f44);                 /* mov esi, 0x101b7f44 */
    II(0x100e70c1, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e70c2, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e70c3, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e70c4, 0x6)   mov(eax, memd_a32(ss, ebp - 0x198));  /* mov eax, [ebp+0xfffffe68] */
    II(0x100e70ca, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100e70cd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e70d0, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100e70d3, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x100e70d9, 0x6)   mov(eax, memd_a32(ss, ebp - 0x198));  /* mov eax, [ebp+0xfffffe68] */
    II(0x100e70df, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100e70e2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e70e5, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100e70e8, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81d3)); /* mov eax, [eax+0x101c81d3] */
    II(0x100e70ee, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100e70f1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e70f4, 0x7)   pushd(memd_a32(ds, eax + ebp - 0x1a4)); /* push dword [eax+ebp+0xfffffe5c] */
    II(0x100e70fb, 0x6)   lea(eax, ebp - 0x194);                /* lea eax, [ebp+0xfffffe6c] */
    II(0x100e7101, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e7102, 0x5)   calld(sys_sprintf, 0x7edfa);          /* call 0x10165f01 */
    II(0x100e7107, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100e710a, 0x6)   mov(eax, memd_a32(ss, ebp - 0x198));  /* mov eax, [ebp+0xfffffe68] */
    II(0x100e7110, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x100e7114, 0x2)   jzd(0x100e711f, 0x9);                 /* jz 0x100e711f */
    II(0x100e7116, 0x6)   mov(eax, memd_a32(ss, ebp - 0x198));  /* mov eax, [ebp+0xfffffe68] */
    II(0x100e711c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x100e711f:
    II(0x100e711f, 0x5)   mov(ebx, 0x1001f);                    /* mov ebx, 0x1001f */
    II(0x100e7124, 0x6)   lea(edx, ebp - 0x194);                /* lea edx, [ebp+0xfffffe6c] */
    II(0x100e712a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e712d, 0x5)   calld(0x100e6e2e, -0x304);            /* call 0x100e6e2e */
    II(0x100e7132, 0x2)   jmpd(0x100e7181, 0x4d);               /* jmp 0x100e7181 */
l_0x100e7134:
    II(0x100e7134, 0x7)   cmp(memb_a32(ds, 0x101c37cb), 0);     /* cmp byte [0x101c37cb], 0x0 */
    II(0x100e713b, 0x2)   jzd(0x100e7146, 0x9);                 /* jz 0x100e7146 */
    II(0x100e713d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7140, 0x4)   test(memb_a32(ds, eax + 0x14), 0x40); /* test byte [eax+0x14], 0x40 */
    II(0x100e7144, 0x2)   jnzd(0x100e7148, 0x2);                /* jnz 0x100e7148 */
l_0x100e7146:
    II(0x100e7146, 0x2)   jmpd(0x100e7152, 0xa);                /* jmp 0x100e7152 */
l_0x100e7148:
    II(0x100e7148, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e714b, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xf);    /* cmp word [eax+0x8], 0xf */
    II(0x100e7150, 0x2)   jnzd(0x100e7154, 0x2);                /* jnz 0x100e7154 */
l_0x100e7152:
    II(0x100e7152, 0x2)   jmpd(0x100e715e, 0xa);                /* jmp 0x100e715e */
l_0x100e7154:
    II(0x100e7154, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7157, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x10);   /* cmp word [eax+0x8], 0x10 */
    II(0x100e715c, 0x2)   jnzd(0x100e7160, 0x2);                /* jnz 0x100e7160 */
l_0x100e715e:
    II(0x100e715e, 0x2)   jmpd(0x100e7181, 0x21);               /* jmp 0x100e7181 */
l_0x100e7160:
    II(0x100e7160, 0x6)   lea(edx, ebp - 0x194);                /* lea edx, [ebp+0xfffffe6c] */
    II(0x100e7166, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7169, 0x5)   calld(0x1014fa43, 0x688d5);           /* call 0x1014fa43 */
    II(0x100e716e, 0x5)   mov(ebx, 0x10004);                    /* mov ebx, 0x10004 */
    II(0x100e7173, 0x6)   lea(edx, ebp - 0x194);                /* lea edx, [ebp+0xfffffe6c] */
    II(0x100e7179, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e717c, 0x5)   calld(0x100e6e2e, -0x353);            /* call 0x100e6e2e */
l_0x100e7181:
    II(0x100e7181, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e7183, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e7184, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e7185, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e7186, 0x1)   popd(edx);                            /* pop edx */
    II(0x100e7187, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e7188, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e7189, 0x1)   retd();                               /* ret */
FUNC_END

