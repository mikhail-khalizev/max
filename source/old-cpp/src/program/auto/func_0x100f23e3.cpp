FUNC_BEGIN(0x100f23e3, 0xcf256f217b04ae6d, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x65, 0x39, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0xde, 0xf6, 0x4, 0, 0x89, 0x45, 0xf4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x58, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0xb5, 0x23, 0x1a, 0x10, 0x50, 0xb8, 0xc8, 0, 0, 0, 0x50, 0x8d, 0x45, 0xf0, 0x50, 0xe8, 0x5, 0xfc, 0x4, 0, 0x83, 0xc4, 0x10, 0xe8, 0xc6, 0x85, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xdb, 0x85, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x75, 0x73, 0xf9, 0xff, 0xe8, 0xcb, 0x38, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xc8, 0xf6, 0x4, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f23e3, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100f23e8, 0x5)   calld(sys_check_available_stack_size, 0x73965); /* call 0x10165d52 */
    II(0x100f23ed, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f23ee, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f23ef, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f23f0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f23f1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f23f2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f23f3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f23f5, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100f23fb, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f23fe, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100f2402, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100f2405, 0x5)   calld(my_string_ctor, 0x4f6de);       /* call 0x10141ae8 */
    II(0x100f240a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100f240d, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100f2411, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f2414, 0x3)   mov(al, memb_a32(ds, eax + 0x58));    /* mov al, [eax+0x58] */
    II(0x100f2417, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f241c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f241d, 0x5)   mov(eax, 0x101a23b5);                 /* mov eax, 0x101a23b5 */ /* "Turns to repair unit: %i." */
    II(0x100f2422, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f2423, 0x5)   mov(eax, 0xc8);                       /* mov eax, 0xc8 */
    II(0x100f2428, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f2429, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100f242c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f242d, 0x5)   calld(0x10142037, 0x4fc05);           /* call 0x10142037 */
    II(0x100f2432, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100f2435, 0x5)   calld(0x100caa00, -0x27a3a);          /* call 0x100caa00 */
    II(0x100f243a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f243f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f2440, 0x5)   calld(0x100caa20, -0x27a25);          /* call 0x100caa20 */
    II(0x100f2445, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f2447, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f2449, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f244b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100f244e, 0x5)   calld(my_strobj_c_str_v2, -0x68c8b);  /* call 0x100897c8 */
    II(0x100f2453, 0x5)   calld(0x10115d23, 0x238cb);           /* call 0x10115d23 */
    II(0x100f2458, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f245a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100f245d, 0x5)   calld(my_string_dtor, 0x4f6c8);       /* call 0x10141b2a */
    II(0x100f2462, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f2464, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f2465, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f2466, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f2467, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f2468, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f2469, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f246a, 0x1)   retd();                               /* ret */
FUNC_END

