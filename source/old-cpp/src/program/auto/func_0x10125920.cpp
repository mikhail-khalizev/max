FUNC_BEGIN(0x10125920, 0x34712168d33404a7, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x28, 0x4, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x8b, 0x15, 0x6c, 0x58, 0x1c, 0x10, 0xa1, 0x70, 0x58, 0x1c, 0x10, 0x8b, 0x12, 0x3b, 0x10, 0x75, 0x38, 0x31, 0xc0, 0xa0, 0x31, 0x56, 0x1c, 0x10, 0x85, 0xc0, 0x74, 0x21, 0xa1, 0xa0, 0x61, 0x1c, 0x10, 0xe8, 0x4f, 0x2c, 0x2, 0, 0x3d, 0xf4, 0x1, 0, 0, 0x76, 0x9, 0x80, 0x3d, 0xc9, 0x59, 0x1c, 0x10, 0, 0x75, 0x2, 0xeb, 0x5, 0xe8, 0x92, 0xfe, 0xff, 0xff, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xe9, 0x5c, 0x2, 0, 0, 0x8b, 0x15, 0x6c, 0x58, 0x1c, 0x10, 0xa1, 0x70, 0x58, 0x1c, 0x10, 0x8b, 0x12, 0x3b, 0x10, 0xf, 0x84, 0x36, 0x2, 0, 0, 0xa1, 0x70, 0x58, 0x1c, 0x10, 0x8b, 0x10, 0xa1, 0x70, 0x58, 0x1c, 0x10, 0xff, 0, 0xa1, 0x80, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x88, 0x45, 0xfc, 0xa1, 0x70, 0x58, 0x1c, 0x10, 0x81, 0x38, 0, 0x4, 0, 0, 0x75, 0xb, 0xa1, 0x70, 0x58, 0x1c, 0x10, 0xc7, 0, 0, 0, 0, 0, 0xa0, 0x31, 0x56, 0x1c, 0x10, 0x88, 0x45, 0xf4, 0xe9, 0xd7, 0x1, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x3d, 0xff, 0, 0, 0, 0xf, 0x84, 0xe2, 0x1, 0, 0, 0xc6, 0x5, 0x31, 0x56, 0x1c, 0x10, 0, 0x8a, 0x45, 0xfc, 0x3a, 0x5, 0xb9, 0x59, 0x1c, 0x10, 0x75, 0x11, 0x8a, 0x45, 0xfc, 0xa2, 0x34, 0x56, 0x1c, 0x10, 0xc6, 0x5, 0x31, 0x56, 0x1c, 0x10, 0x1, 0xeb, 0x5, 0xe8, 0xfa, 0xfd, 0xff, 0xff, 0xe9, 0xb5, 0x1, 0, 0, 0x30, 0xe4, 0x8a, 0x45, 0xfc, 0x66, 0xa3, 0x35, 0x56, 0x1c, 0x10, 0xc6, 0x5, 0x31, 0x56, 0x1c, 0x10, 0x2, 0xe9, 0x9e, 0x1, 0, 0, 0x30, 0xe4, 0x8a, 0x45, 0xfc, 0xc1, 0xe0, 0x8, 0x66, 0x9, 0x5, 0x35, 0x56, 0x1c, 0x10, 0x31, 0xc0, 0x66, 0xa1, 0x35, 0x56, 0x1c, 0x10, 0x3d, 0x26, 0x2, 0, 0, 0x7d, 0x1b, 0x66, 0xc7, 0x5, 0x64, 0x58, 0x1c, 0x10, 0, 0, 0x66, 0xc7, 0x5, 0xb6, 0x59, 0x1c, 0x10, 0, 0, 0xc6, 0x5, 0x31, 0x56, 0x1c, 0x10, 0x3, 0xeb, 0x5, 0xe8, 0xa0, 0xfd, 0xff, 0xff, 0xe9, 0x5b, 0x1, 0, 0, 0x66, 0xa1, 0x64, 0x58, 0x1c, 0x10, 0x66, 0xff, 0x5, 0x64, 0x58, 0x1c, 0x10, 0x31, 0xd2, 0x66, 0x89, 0xc2, 0x8a, 0x45, 0xfc, 0x88, 0x82, 0x37, 0x56, 0x1c, 0x10, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0xe8, 0x21, 0x83, 0xfa, 0xff, 0x66, 0xa1, 0x64, 0x58, 0x1c, 0x10, 0x66, 0x3b, 0x5, 0x35, 0x56, 0x1c, 0x10, 0x75, 0x7, 0xc6, 0x5, 0x31, 0x56, 0x1c, 0x10, 0x4, 0xe9, 0x1b, 0x1, 0, 0, 0x30, 0xe4, 0x8a, 0x45, 0xfc, 0x66, 0xa3, 0x62, 0x58, 0x1c, 0x10, 0xc6, 0x5, 0x31, 0x56, 0x1c, 0x10, 0x5, 0xe9, 0x4, 0x1, 0, 0, 0x30, 0xe4, 0x8a, 0x45, 0xfc, 0xc1, 0xe0, 0x8, 0x66, 0x9, 0x5, 0x62, 0x58, 0x1c, 0x10, 0x31, 0xc0, 0xe8, 0xd9, 0x82, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0xe8, 0xcf, 0x82, 0xfa, 0xff, 0xc6, 0x5, 0x31, 0x56, 0x1c, 0x10, 0, 0x66, 0xa1, 0xb6, 0x59, 0x1c, 0x10, 0x66, 0x3b, 0x5, 0x62, 0x58, 0x1c, 0x10, 0x74, 0xa, 0xe8, 0x9, 0xfd, 0xff, 0xff, 0xe9, 0xc4, 0, 0, 0, 0x31, 0xc0, 0xa0, 0x37, 0x56, 0x1c, 0x10, 0x3d, 0xff, 0, 0, 0, 0x75, 0x18, 0x31, 0xc0, 0xa0, 0x38, 0x56, 0x1c, 0x10, 0xe8, 0x54, 0xfd, 0xff, 0xff, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xe9, 0xb4, 0, 0, 0, 0x31, 0xdb, 0x66, 0x8b, 0x1d, 0x64, 0x58, 0x1c, 0x10, 0xba, 0x37, 0x56, 0x1c, 0x10, 0xb8, 0xf0, 0x59, 0x1c, 0x10, 0xe8, 0xa, 0x3, 0x4, 0, 0xa0, 0xb9, 0x59, 0x1c, 0x10, 0xfe, 0xc0, 0x24, 0x3f, 0xa2, 0xb9, 0x59, 0x1c, 0x10, 0xc7, 0x45, 0xf8, 0x1, 0, 0, 0, 0xe9, 0x82, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x3d, 0xff, 0, 0, 0, 0x75, 0x1a, 0xfe, 0xd, 0xa8, 0x61, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xa8, 0x61, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x7, 0xc6, 0x5, 0x31, 0x56, 0x1c, 0x10, 0x7, 0xeb, 0x7, 0xc6, 0x5, 0xa8, 0x61, 0x1c, 0x10, 0x4, 0xeb, 0x3d, 0xeb, 0x3b, 0xec, 0x59, 0x12, 0x10, 0x12, 0x5a, 0x12, 0x10, 0x29, 0x5a, 0x12, 0x10, 0x6c, 0x5a, 0x12, 0x10, 0xac, 0x5a, 0x12, 0x10, 0xc3, 0x5a, 0x12, 0x10, 0x5b, 0x5b, 0x12, 0x10, 0xd5, 0x59, 0x12, 0x10, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xf0, 0x80, 0x7d, 0xf0, 0x7, 0x77, 0xd2, 0x31, 0xc0, 0x8a, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x8c, 0x5b, 0x12, 0x10, 0xe9, 0xb5, 0xfd, 0xff, 0xff, 0xe8, 0x23, 0x27, 0x2, 0, 0xa3, 0xa0, 0x61, 0x1c, 0x10, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10125920, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10125925, 0x5)   calld(sys_check_available_stack_size, 0x40428); /* call 0x10165d52 */
    II(0x1012592a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012592b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012592c, 0x1)   pushd(edx);                           /* push edx */
    II(0x1012592d, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012592e, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012592f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10125930, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10125932, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10125938, 0x6)   mov(edx, memd_a32(ds, 0x101c586c));   /* mov edx, [0x101c586c] */
    II(0x1012593e, 0x5)   mov(eax, memd_a32(ds, 0x101c5870));   /* mov eax, [0x101c5870] */
    II(0x10125943, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10125945, 0x2)   cmp(edx, memd_a32(ds, eax));          /* cmp edx, [eax] */
    II(0x10125947, 0x2)   jnzd(0x10125981, 0x38);               /* jnz 0x10125981 */
    II(0x10125949, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012594b, 0x5)   mov(al, memb_a32(ds, 0x101c5631));    /* mov al, [0x101c5631] */
    II(0x10125950, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10125952, 0x2)   jzd(0x10125975, 0x21);                /* jz 0x10125975 */
    II(0x10125954, 0x5)   mov(eax, memd_a32(ds, 0x101c61a0));   /* mov eax, [0x101c61a0] */
    II(0x10125959, 0x5)   calld(0x101485ad, 0x22c4f);           /* call 0x101485ad */
    II(0x1012595e, 0x5)   cmp(eax, 0x1f4);                      /* cmp eax, 0x1f4 */
    II(0x10125963, 0x2)   jbed(0x1012596e, 0x9);                /* jbe 0x1012596e */
    II(0x10125965, 0x7)   cmp(memb_a32(ds, 0x101c59c9), 0);     /* cmp byte [0x101c59c9], 0x0 */
    II(0x1012596c, 0x2)   jnzd(0x10125970, 0x2);                /* jnz 0x10125970 */
l_0x1012596e:
    II(0x1012596e, 0x2)   jmpd(0x10125975, 0x5);                /* jmp 0x10125975 */
l_0x10125970:
    II(0x10125970, 0x5)   calld(0x10125807, -0x16e);            /* call 0x10125807 */
l_0x10125975:
    II(0x10125975, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1012597c, 0x5)   jmpd(0x10125bdd, 0x25c);              /* jmp 0x10125bdd */
l_0x10125981:
    II(0x10125981, 0x6)   mov(edx, memd_a32(ds, 0x101c586c));   /* mov edx, [0x101c586c] */
    II(0x10125987, 0x5)   mov(eax, memd_a32(ds, 0x101c5870));   /* mov eax, [0x101c5870] */
    II(0x1012598c, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x1012598e, 0x2)   cmp(edx, memd_a32(ds, eax));          /* cmp edx, [eax] */
    II(0x10125990, 0x6)   jzd(0x10125bcc, 0x236);               /* jz dword 0x10125bcc */
    II(0x10125996, 0x5)   mov(eax, memd_a32(ds, 0x101c5870));   /* mov eax, [0x101c5870] */
    II(0x1012599b, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x1012599d, 0x5)   mov(eax, memd_a32(ds, 0x101c5870));   /* mov eax, [0x101c5870] */
    II(0x101259a2, 0x2)   inc(memd_a32(ds, eax));               /* inc dword [eax] */
    II(0x101259a4, 0x5)   mov(eax, memd_a32(ds, 0x101c5980));   /* mov eax, [0x101c5980] */
    II(0x101259a9, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101259ab, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x101259ad, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x101259b0, 0x5)   mov(eax, memd_a32(ds, 0x101c5870));   /* mov eax, [0x101c5870] */
    II(0x101259b5, 0x6)   cmp(memd_a32(ds, eax), 0x400);        /* cmp dword [eax], 0x400 */
    II(0x101259bb, 0x2)   jnzd(0x101259c8, 0xb);                /* jnz 0x101259c8 */
    II(0x101259bd, 0x5)   mov(eax, memd_a32(ds, 0x101c5870));   /* mov eax, [0x101c5870] */
    II(0x101259c2, 0x6)   mov(memd_a32(ds, eax), 0);            /* mov dword [eax], 0x0 */
l_0x101259c8:
    II(0x101259c8, 0x5)   mov(al, memb_a32(ds, 0x101c5631));    /* mov al, [0x101c5631] */
    II(0x101259cd, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x101259d0, 0x5)   jmpd(0x10125bac, 0x1d7);              /* jmp 0x10125bac */
l_0x101259d5:
    II(0x101259d5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101259d7, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101259da, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x101259df, 0x6)   jzd(0x10125bc7, 0x1e2);               /* jz dword 0x10125bc7 */
    II(0x101259e5, 0x7)   mov(memb_a32(ds, 0x101c5631), 0);     /* mov byte [0x101c5631], 0x0 */
l_0x101259ec:
    II(0x101259ec, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101259ef, 0x6)   cmp(al, memb_a32(ds, 0x101c59b9));    /* cmp al, [0x101c59b9] */
    II(0x101259f5, 0x2)   jnzd(0x10125a08, 0x11);               /* jnz 0x10125a08 */
    II(0x101259f7, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101259fa, 0x5)   mov(memb_a32(ds, 0x101c5634), al);    /* mov [0x101c5634], al */
    II(0x101259ff, 0x7)   mov(memb_a32(ds, 0x101c5631), 0x1);   /* mov byte [0x101c5631], 0x1 */
    II(0x10125a06, 0x2)   jmpd(0x10125a0d, 0x5);                /* jmp 0x10125a0d */
l_0x10125a08:
    II(0x10125a08, 0x5)   calld(0x10125807, -0x206);            /* call 0x10125807 */
l_0x10125a0d:
    II(0x10125a0d, 0x5)   jmpd(0x10125bc7, 0x1b5);              /* jmp 0x10125bc7 */
l_0x10125a12:
    II(0x10125a12, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10125a14, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10125a17, 0x6)   mov(memw_a32(ds, 0x101c5635), ax);    /* mov [0x101c5635], ax */
    II(0x10125a1d, 0x7)   mov(memb_a32(ds, 0x101c5631), 0x2);   /* mov byte [0x101c5631], 0x2 */
    II(0x10125a24, 0x5)   jmpd(0x10125bc7, 0x19e);              /* jmp 0x10125bc7 */
l_0x10125a29:
    II(0x10125a29, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10125a2b, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10125a2e, 0x3)   shl(eax, 0x8);                        /* shl eax, 0x8 */
    II(0x10125a31, 0x7)   or_(memw_a32(ds, 0x101c5635), ax);    /* or [0x101c5635], ax */
    II(0x10125a38, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10125a3a, 0x6)   mov(ax, memw_a32(ds, 0x101c5635));    /* mov ax, [0x101c5635] */
    II(0x10125a40, 0x5)   cmp(eax, 0x226);                      /* cmp eax, 0x226 */
    II(0x10125a45, 0x2)   jged(0x10125a62, 0x1b);               /* jge 0x10125a62 */
    II(0x10125a47, 0x9)   mov(memw_a32(ds, 0x101c5864), 0);     /* mov word [0x101c5864], 0x0 */
    II(0x10125a50, 0x9)   mov(memw_a32(ds, 0x101c59b6), 0);     /* mov word [0x101c59b6], 0x0 */
    II(0x10125a59, 0x7)   mov(memb_a32(ds, 0x101c5631), 0x3);   /* mov byte [0x101c5631], 0x3 */
    II(0x10125a60, 0x2)   jmpd(0x10125a67, 0x5);                /* jmp 0x10125a67 */
l_0x10125a62:
    II(0x10125a62, 0x5)   calld(0x10125807, -0x260);            /* call 0x10125807 */
l_0x10125a67:
    II(0x10125a67, 0x5)   jmpd(0x10125bc7, 0x15b);              /* jmp 0x10125bc7 */
l_0x10125a6c:
    II(0x10125a6c, 0x6)   mov(ax, memw_a32(ds, 0x101c5864));    /* mov ax, [0x101c5864] */
    II(0x10125a72, 0x7)   inc(memw_a32(ds, 0x101c5864));        /* inc word [0x101c5864] */
    II(0x10125a79, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10125a7b, 0x3)   mov(dx, ax);                          /* mov dx, ax */
    II(0x10125a7e, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10125a81, 0x6)   mov(memb_a32(ds, edx + 0x101c5637), al); /* mov [edx+0x101c5637], al */
    II(0x10125a87, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10125a89, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10125a8c, 0x5)   calld(0x100cddb2, -0x57cdf);          /* call 0x100cddb2 */
    II(0x10125a91, 0x6)   mov(ax, memw_a32(ds, 0x101c5864));    /* mov ax, [0x101c5864] */
    II(0x10125a97, 0x7)   cmp(ax, memw_a32(ds, 0x101c5635));    /* cmp ax, [0x101c5635] */
    II(0x10125a9e, 0x2)   jnzd(0x10125aa7, 0x7);                /* jnz 0x10125aa7 */
    II(0x10125aa0, 0x7)   mov(memb_a32(ds, 0x101c5631), 0x4);   /* mov byte [0x101c5631], 0x4 */
l_0x10125aa7:
    II(0x10125aa7, 0x5)   jmpd(0x10125bc7, 0x11b);              /* jmp 0x10125bc7 */
l_0x10125aac:
    II(0x10125aac, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10125aae, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10125ab1, 0x6)   mov(memw_a32(ds, 0x101c5862), ax);    /* mov [0x101c5862], ax */
    II(0x10125ab7, 0x7)   mov(memb_a32(ds, 0x101c5631), 0x5);   /* mov byte [0x101c5631], 0x5 */
    II(0x10125abe, 0x5)   jmpd(0x10125bc7, 0x104);              /* jmp 0x10125bc7 */
l_0x10125ac3:
    II(0x10125ac3, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10125ac5, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10125ac8, 0x3)   shl(eax, 0x8);                        /* shl eax, 0x8 */
    II(0x10125acb, 0x7)   or_(memw_a32(ds, 0x101c5862), ax);    /* or [0x101c5862], ax */
    II(0x10125ad2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10125ad4, 0x5)   calld(0x100cddb2, -0x57d27);          /* call 0x100cddb2 */
    II(0x10125ad9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10125ade, 0x5)   calld(0x100cddb2, -0x57d31);          /* call 0x100cddb2 */
    II(0x10125ae3, 0x7)   mov(memb_a32(ds, 0x101c5631), 0);     /* mov byte [0x101c5631], 0x0 */
    II(0x10125aea, 0x6)   mov(ax, memw_a32(ds, 0x101c59b6));    /* mov ax, [0x101c59b6] */
    II(0x10125af0, 0x7)   cmp(ax, memw_a32(ds, 0x101c5862));    /* cmp ax, [0x101c5862] */
    II(0x10125af7, 0x2)   jzd(0x10125b03, 0xa);                 /* jz 0x10125b03 */
    II(0x10125af9, 0x5)   calld(0x10125807, -0x2f7);            /* call 0x10125807 */
    II(0x10125afe, 0x5)   jmpd(0x10125bc7, 0xc4);               /* jmp 0x10125bc7 */
l_0x10125b03:
    II(0x10125b03, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10125b05, 0x5)   mov(al, memb_a32(ds, 0x101c5637));    /* mov al, [0x101c5637] */
    II(0x10125b0a, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x10125b0f, 0x2)   jnzd(0x10125b29, 0x18);               /* jnz 0x10125b29 */
    II(0x10125b11, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10125b13, 0x5)   mov(al, memb_a32(ds, 0x101c5638));    /* mov al, [0x101c5638] */
    II(0x10125b18, 0x5)   calld(0x10125871, -0x2ac);            /* call 0x10125871 */
    II(0x10125b1d, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x10125b24, 0x5)   jmpd(0x10125bdd, 0xb4);               /* jmp 0x10125bdd */
l_0x10125b29:
    II(0x10125b29, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10125b2b, 0x7)   mov(bx, memw_a32(ds, 0x101c5864));    /* mov bx, [0x101c5864] */
    II(0x10125b32, 0x5)   mov(edx, 0x101c5637);                 /* mov edx, 0x101c5637 */
    II(0x10125b37, 0x5)   mov(eax, 0x101c59f0);                 /* mov eax, 0x101c59f0 */
    II(0x10125b3c, 0x5)   calld(sys_memcpy, 0x4030a);           /* call 0x10165e4b */
    II(0x10125b41, 0x5)   mov(al, memb_a32(ds, 0x101c59b9));    /* mov al, [0x101c59b9] */
    II(0x10125b46, 0x2)   inc(al);                              /* inc al */
    II(0x10125b48, 0x2)   and_(al, 0x3f);                       /* and al, 0x3f */
    II(0x10125b4a, 0x5)   mov(memb_a32(ds, 0x101c59b9), al);    /* mov [0x101c59b9], al */
    II(0x10125b4f, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x1);    /* mov dword [ebp-0x8], 0x1 */
    II(0x10125b56, 0x5)   jmpd(0x10125bdd, 0x82);               /* jmp 0x10125bdd */
l_0x10125b5b:
    II(0x10125b5b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10125b5d, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10125b60, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x10125b65, 0x2)   jnzd(0x10125b81, 0x1a);               /* jnz 0x10125b81 */
    II(0x10125b67, 0x6)   dec(memb_a32(ds, 0x101c61a8));        /* dec byte [0x101c61a8] */
    II(0x10125b6d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10125b6f, 0x5)   mov(al, memb_a32(ds, 0x101c61a8));    /* mov al, [0x101c61a8] */
    II(0x10125b74, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10125b76, 0x2)   jnzd(0x10125b7f, 0x7);                /* jnz 0x10125b7f */
    II(0x10125b78, 0x7)   mov(memb_a32(ds, 0x101c5631), 0x7);   /* mov byte [0x101c5631], 0x7 */
l_0x10125b7f:
    II(0x10125b7f, 0x2)   jmpd(0x10125b88, 0x7);                /* jmp 0x10125b88 */
l_0x10125b81:
    II(0x10125b81, 0x7)   mov(memb_a32(ds, 0x101c61a8), 0x4);   /* mov byte [0x101c61a8], 0x4 */
l_0x10125b88:
    II(0x10125b88, 0x2)   jmpd(0x10125bc7, 0x3d);               /* jmp 0x10125bc7 */
l_0x10125b8a:
    II(0x10125b8a, 0x2)   jmpd(0x10125bc7, 0x3b);               /* jmp 0x10125bc7 */
//    II(0x10125b8c, 0x20)  /* Служебная область с абсолютными адресами переходов. {0x101259ec, 0x10125a12, 0x10125a29, 0x10125a6c, 0x10125aac, 0x10125ac3, 0x10125b5b, 0x101259d5}. */
l_0x10125bac:
    II(0x10125bac, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10125baf, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x10125bb2, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0x7);   /* cmp byte [ebp-0x10], 0x7 */
    II(0x10125bb6, 0x2)   jad(0x10125b8a, -0x2e);               /* ja 0x10125b8a */
    II(0x10125bb8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10125bba, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10125bbd, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10125bc0, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x10125b8c), (0x101259d5)(0x101259ec)(0x10125a12)(0x10125a29)(0x10125a6c)(0x10125aac)(0x10125ac3)(0x10125b5b)); /* jmp dword near [cs:eax+0x10125b8c] */
l_0x10125bc7:
    II(0x10125bc7, 0x5)   jmpd(0x10125981, -0x24b);             /* jmp 0x10125981 */
l_0x10125bcc:
    II(0x10125bcc, 0x5)   calld(0x101482f4, 0x22723);           /* call 0x101482f4 */
    II(0x10125bd1, 0x5)   mov(memd_a32(ds, 0x101c61a0), eax);   /* mov [0x101c61a0], eax */
    II(0x10125bd6, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
l_0x10125bdd:
    II(0x10125bdd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10125be0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10125be2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10125be3, 0x1)   popd(edi);                            /* pop edi */
    II(0x10125be4, 0x1)   popd(esi);                            /* pop esi */
    II(0x10125be5, 0x1)   popd(edx);                            /* pop edx */
    II(0x10125be6, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10125be7, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10125be8, 0x1)   retd();                               /* ret */
FUNC_END

