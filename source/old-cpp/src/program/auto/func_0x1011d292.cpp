FUNC_BEGIN(0x1011d292, 0x809506d799ed5606, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0xb6, 0x8a, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x41, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x3f, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc8, 0xe8, 0xe3, 0x97, 0xf5, 0xff, 0x8d, 0x55, 0xcc, 0x8b, 0x45, 0xfc, 0xe8, 0x30, 0xaf, 0xf9, 0xff, 0xb8, 0x1c, 0, 0, 0, 0xe8, 0x22, 0x8b, 0x4, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x1b, 0xf, 0xbf, 0x5d, 0xca, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0x45, 0xdc, 0xe8, 0x59, 0xcc, 0xff, 0xff, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xec, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xec, 0x8b, 0x55, 0xec, 0x8d, 0x45, 0xd0, 0xe8, 0x97, 0xe0, 0xf8, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x1b, 0x8f, 0xf5, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xf4, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe0, 0xe8, 0x6a, 0x97, 0xf5, 0xff, 0x8b, 0x45, 0xf4, 0xf, 0xaf, 0x45, 0xf4, 0x89, 0x45, 0xf4, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8d, 0x45, 0xcc, 0xe8, 0x59, 0xaf, 0xf9, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0x25, 0x8d, 0x55, 0xc8, 0x8d, 0x45, 0xe8, 0xe8, 0xf0, 0x8a, 0xf5, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xe4, 0xe8, 0xe3, 0x8a, 0xf5, 0xff, 0x89, 0xda, 0xe8, 0xc9, 0x38, 0xf5, 0xff, 0x66, 0x3b, 0x45, 0xf4, 0x7f, 0x2, 0xeb, 0x62, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x45, 0xcc, 0xe8, 0xe0, 0xae, 0xf9, 0xff, 0x66, 0xf, 0xbe, 0, 0x66, 0x1, 0x45, 0xe0, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x45, 0xcc, 0xe8, 0xcc, 0xae, 0xf9, 0xff, 0x66, 0xf, 0xbe, 0x40, 0x1, 0x66, 0x1, 0x45, 0xe2, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x45, 0xcc, 0xe8, 0xb7, 0xae, 0xf9, 0xff, 0x66, 0xf, 0xbe, 0x40, 0x1, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x45, 0xcc, 0xe8, 0xa3, 0xae, 0xf9, 0xff, 0x66, 0xf, 0xbe, 0, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xd0, 0xe8, 0xf8, 0xde, 0xf8, 0xff, 0xe8, 0xb6, 0xd8, 0xff, 0xff, 0xe9, 0x63, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x75, 0xf, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0x2d, 0x96, 0xf5, 0xff, 0xeb, 0x4d, 0x8d, 0x45, 0xd0, 0xe8, 0x2b, 0xdf, 0xf8, 0xff, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x65, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x14, 0x96, 0xf5, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x2d, 0xf, 0xbf, 0x5d, 0xe2, 0xf, 0xbf, 0x55, 0xe0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0x9c, 0x95, 0xf5, 0xff, 0xe8, 0x7f, 0x37, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xef, 0xbc, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0xde, 0x95, 0xf5, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xd8, 0xca, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x2a, 0x9e, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011d292, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x1011d297, 0x5)   calld(sys_check_available_stack_size, 0x48ab6); /* call 0x10165d52 */
    II(0x1011d29c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011d29d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011d29e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011d29f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011d2a0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011d2a1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011d2a3, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x1011d2a9, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011d2ac, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1011d2af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011d2b2, 0x3)   mov(ebx, memd_a32(ds, eax + 0x41));   /* mov ebx, [eax+0x41] */
    II(0x1011d2b5, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011d2b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011d2bb, 0x3)   mov(edx, memd_a32(ds, eax + 0x3f));   /* mov edx, [eax+0x3f] */
    II(0x1011d2be, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011d2c1, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1011d2c4, 0x5)   calld(0x10076aac, -0xa681d);          /* call 0x10076aac */
    II(0x1011d2c9, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x1011d2cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011d2cf, 0x5)   calld(0x100b8204, -0x650d0);          /* call 0x100b8204 */
    II(0x1011d2d4, 0x5)   mov(eax, 0x1c);                       /* mov eax, 0x1c */
    II(0x1011d2d9, 0x5)   calld(sys_new, 0x48b22);              /* call 0x10165e00 */
    II(0x1011d2de, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x1011d2e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1011d2e4, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1011d2e7, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x1011d2eb, 0x2)   jzd(0x1011d308, 0x1b);                /* jz 0x1011d308 */
    II(0x1011d2ed, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x36)); /* movsx ebx, word [ebp-0x36] */
    II(0x1011d2f1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011d2f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1011d2f8, 0x5)   calld(my_ctor_c20, -0x33a7);          /* call 0x10119f56 */
    II(0x1011d2fd, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x1011d300, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1011d303, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011d306, 0x2)   jmpd(0x1011d30e, 0x6);                /* jmp 0x1011d30e */
l_0x1011d308:
    II(0x1011d308, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1011d30b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x1011d30e:
    II(0x1011d30e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x1011d311, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1011d314, 0x5)   calld(0x100ab3b0, -0x71f69);          /* call 0x100ab3b0 */
    II(0x1011d319, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011d31c, 0x5)   calld(0x1007623c, -0xa70e5);          /* call 0x1007623c */
    II(0x1011d321, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x1011d325, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1011d328, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1011d32b, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x1a));   /* mov ebx, [ebx+0x1a] */
    II(0x1011d32e, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011d331, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011d334, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1011d337, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011d33a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1011d33d, 0x5)   calld(0x10076aac, -0xa6896);          /* call 0x10076aac */
    II(0x1011d342, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011d345, 0x4)   imul(eax, memd_a32(ss, ebp - 0xc));   /* imul eax, [ebp-0xc] */
    II(0x1011d349, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1011d34c, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1011d353, 0x2)   jmpd(0x1011d35b, 0x6);                /* jmp 0x1011d35b */
l_0x1011d355:
    II(0x1011d355, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d358, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1011d35b:
    II(0x1011d35b, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1011d35e, 0x5)   calld(0x100b82bc, -0x650a7);          /* call 0x100b82bc */
    II(0x1011d363, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x1011d367, 0x2)   jled(0x1011d38e, 0x25);               /* jle 0x1011d38e */
    II(0x1011d369, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x1011d36c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1011d36f, 0x5)   calld(0x10075e64, -0xa7510);          /* call 0x10075e64 */
    II(0x1011d374, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1011d376, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x1011d379, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1011d37c, 0x5)   calld(0x10075e64, -0xa751d);          /* call 0x10075e64 */
    II(0x1011d381, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1011d383, 0x5)   calld(0x10070c51, -0xac737);          /* call 0x10070c51 */
    II(0x1011d388, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x1011d38c, 0x2)   jgd(0x1011d390, 0x2);                 /* jg 0x1011d390 */
l_0x1011d38e:
    II(0x1011d38e, 0x2)   jmpd(0x1011d3f2, 0x62);               /* jmp 0x1011d3f2 */
l_0x1011d390:
    II(0x1011d390, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1011d394, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1011d397, 0x5)   calld(0x100b827c, -0x65120);          /* call 0x100b827c */
    II(0x1011d39c, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x1011d3a0, 0x4)   add(memw_a32(ss, ebp - 0x20), ax);    /* add [ebp-0x20], ax */
    II(0x1011d3a4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1011d3a8, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1011d3ab, 0x5)   calld(0x100b827c, -0x65134);          /* call 0x100b827c */
    II(0x1011d3b0, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x1011d3b5, 0x4)   add(memw_a32(ss, ebp - 0x1e), ax);    /* add [ebp-0x1e], ax */
    II(0x1011d3b9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1011d3bd, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1011d3c0, 0x5)   calld(0x100b827c, -0x65149);          /* call 0x100b827c */
    II(0x1011d3c5, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x1011d3ca, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1011d3cd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1011d3d1, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1011d3d4, 0x5)   calld(0x100b827c, -0x6515d);          /* call 0x100b827c */
    II(0x1011d3d9, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x1011d3dd, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1011d3e0, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1011d3e3, 0x5)   calld(0x100ab2e0, -0x72108);          /* call 0x100ab2e0 */
    II(0x1011d3e8, 0x5)   calld(0x1011aca3, -0x274a);           /* call 0x1011aca3 */
    II(0x1011d3ed, 0x5)   jmpd(0x1011d355, -0x9d);              /* jmp 0x1011d355 */
l_0x1011d3f2:
    II(0x1011d3f2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1011d3f6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011d3f8, 0x2)   jnzd(0x1011d409, 0xf);                /* jnz 0x1011d409 */
    II(0x1011d3fa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011d3fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011d3ff, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1011d402, 0x5)   calld(0x10076a34, -0xa69d3);          /* call 0x10076a34 */
    II(0x1011d407, 0x2)   jmpd(0x1011d456, 0x4d);               /* jmp 0x1011d456 */
l_0x1011d409:
    II(0x1011d409, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1011d40c, 0x5)   calld(0x100ab33c, -0x720d5);          /* call 0x100ab33c */
    II(0x1011d411, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1011d414, 0x3)   add(ebx, 0x65);                       /* add ebx, 0x65 */
    II(0x1011d417, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011d419, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1011d41b, 0x5)   calld(0x10076a34, -0xa69ec);          /* call 0x10076a34 */
    II(0x1011d420, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011d423, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x1011d427, 0x2)   jzd(0x1011d456, 0x2d);                /* jz 0x1011d456 */
    II(0x1011d429, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1e)); /* movsx ebx, word [ebp-0x1e] */
    II(0x1011d42d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x1011d431, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011d434, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1011d437, 0x5)   calld(0x100769d8, -0xa6a64);          /* call 0x100769d8 */
    II(0x1011d43c, 0x5)   calld(0x10120bc0, 0x377f);            /* call 0x10120bc0 */
    II(0x1011d441, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011d444, 0x5)   calld(0x10119138, -0x4311);           /* call 0x10119138 */
    II(0x1011d449, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011d44b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011d44e, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1011d451, 0x5)   calld(0x10076a34, -0xa6a22);          /* call 0x10076a34 */
l_0x1011d456:
    II(0x1011d456, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011d458, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1011d45b, 0x5)   calld(0x100a9f38, -0x73528);          /* call 0x100a9f38 */
    II(0x1011d460, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011d462, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1011d465, 0x5)   calld(0x100b7294, -0x661d6);          /* call 0x100b7294 */
    II(0x1011d46a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011d46c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011d46d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011d46e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011d46f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011d470, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011d471, 0x1)   retd();                               /* ret */
FUNC_END

