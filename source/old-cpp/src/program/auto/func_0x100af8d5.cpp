FUNC_BEGIN(0x100af8d5, 0x5113cf6bea692e54, 0x20, ({0x68, 0x5c, 0, 0, 0, 0xe8, 0x73, 0x64, 0xb, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xec, 0xe8, 0xef, 0xac, 0xfd, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xe8, 0x8d, 0x55, 0xec, 0x8d, 0x45, 0xec, 0xe8, 0xe, 0xac, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0x5a, 0x6c, 0xfc, 0xff, 0xe8, 0x8d, 0x2d, 0xa, 0, 0xe8, 0x90, 0xbb, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x1a, 0x94, 0xfd, 0xff, 0xe9, 0x78, 0x2, 0, 0, 0x83, 0x7d, 0xfc, 0, 0x75, 0x21, 0xba, 0x2, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xd6, 0xab, 0xfd, 0xff, 0xe8, 0xde, 0xd6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf3, 0x93, 0xfd, 0xff, 0xe9, 0x51, 0x2, 0, 0, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xe8, 0xe8, 0xa3, 0x84, 0, 0, 0xe8, 0x96, 0x88, 0, 0, 0x8d, 0x55, 0xe0, 0x8b, 0x45, 0xfc, 0xe8, 0x8b, 0x88, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x9f, 0xab, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0xeb, 0x6b, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x89, 0xab, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0xd5, 0x6b, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xdc, 0xe8, 0xff, 0x70, 0xfc, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x7, 0x89, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x85, 0xc0, 0x7e, 0x9, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xaa, 0x6, 0, 0, 0xbb, 0xe1, 0xe, 0x1a, 0x10, 0xba, 0xed, 0xe, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xb3, 0x63, 0xb, 0, 0x89, 0x45, 0xd4, 0x8d, 0x45, 0xe0, 0xe8, 0xd2, 0x88, 0, 0, 0x66, 0x3b, 0x45, 0xd8, 0x7d, 0xb, 0x8d, 0x45, 0xe0, 0xe8, 0xc4, 0x88, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x85, 0xc0, 0x7e, 0x9, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xad, 0x6, 0, 0, 0xbb, 0xf7, 0xe, 0x1a, 0x10, 0xba, 0x3, 0xf, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x70, 0x63, 0xb, 0, 0x89, 0x45, 0xd0, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0xff, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x45, 0xd8, 0x7d, 0x6f, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xe4, 0xe8, 0x33, 0x88, 0, 0, 0x66, 0xf, 0xbe, 0, 0x66, 0x1, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xe4, 0xe8, 0x1f, 0x88, 0, 0, 0x66, 0xf, 0xbe, 0x40, 0x1, 0x66, 0x1, 0x45, 0xde, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xe4, 0xe8, 0xa, 0x88, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xe0, 0xe8, 0xfc, 0x87, 0, 0, 0x8a, 0x13, 0x3a, 0x10, 0x75, 0x22, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xe4, 0xe8, 0xea, 0x87, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xe0, 0xe8, 0xdc, 0x87, 0, 0, 0x8a, 0x53, 0x1, 0x3a, 0x50, 0x1, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x82, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xec, 0xe8, 0x69, 0xaa, 0xfd, 0xff, 0x83, 0xc0, 0x1a, 0xe8, 0x85, 0x90, 0xfd, 0xff, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x45, 0xd8, 0x75, 0x15, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x4d, 0xaa, 0xfd, 0xff, 0xe8, 0xdf, 0, 0, 0, 0xe9, 0xb4, 0, 0, 0, 0xb8, 0x1c, 0, 0, 0, 0xe8, 0x19, 0x63, 0xb, 0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x1b, 0xf, 0xbf, 0x5d, 0xde, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xc8, 0xe8, 0x50, 0xa4, 0x6, 0, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0xeb, 0x6, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xbc, 0x8b, 0x55, 0xbc, 0x8d, 0x45, 0xb8, 0xe8, 0x8e, 0xb8, 0xff, 0xff, 0xc7, 0x45, 0xb4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xb4, 0xff, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x66, 0x3b, 0x45, 0xcc, 0x7f, 0x36, 0xf, 0xbf, 0x55, 0xb4, 0x8d, 0x45, 0xe4, 0xe8, 0x36, 0x87, 0, 0, 0x66, 0xf, 0xbe, 0x40, 0x1, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xb4, 0x8d, 0x45, 0xe4, 0xe8, 0x22, 0x87, 0, 0, 0x66, 0xf, 0xbe, 0, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x77, 0xb7, 0xff, 0xff, 0xe8, 0x35, 0xb1, 0x6, 0, 0xeb, 0xbb, 0x8d, 0x45, 0xb8, 0xe8, 0xc4, 0xb7, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x9e, 0xa9, 0xfd, 0xff, 0xe8, 0x30, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xa7, 0xa3, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xf9, 0x76, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xef, 0x76, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x9d, 0x91, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100af8d5, 0x5)   pushd(0x5c);                          /* push dword 0x5c */
    II(0x100af8da, 0x5)   calld(sys_check_available_stack_size, 0xb6473); /* call 0x10165d52 */
    II(0x100af8df, 0x1)   pushd(esi);                           /* push esi */
    II(0x100af8e0, 0x1)   pushd(edi);                           /* push edi */
    II(0x100af8e1, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100af8e2, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100af8e4, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x100af8ea, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100af8ed, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100af8f0, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100af8f3, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100af8f6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100af8f9, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af8fc, 0x5)   calld(0x1008a5f0, -0x25311);          /* call 0x1008a5f0 */
    II(0x100af901, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100af904, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100af907, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100af90a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af90d, 0x5)   calld(0x1008a520, -0x253f2);          /* call 0x1008a520 */
    II(0x100af912, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af915, 0x5)   calld(0x10076574, -0x393a6);          /* call 0x10076574 */
    II(0x100af91a, 0x5)   calld(0x101526ac, 0xa2d8d);           /* call 0x101526ac */
    II(0x100af91f, 0x5)   calld(0x1008b4b4, -0x24470);          /* call 0x1008b4b4 */
    II(0x100af924, 0x2)   test(al, al);                         /* test al, al */
    II(0x100af926, 0x2)   jzd(0x100af937, 0xf);                 /* jz 0x100af937 */
    II(0x100af928, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af92a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af92d, 0x5)   calld(0x10088d4c, -0x26be6);          /* call 0x10088d4c */
    II(0x100af932, 0x5)   jmpd(0x100afbaf, 0x278);              /* jmp 0x100afbaf */
l_0x100af937:
    II(0x100af937, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100af93b, 0x2)   jnzd(0x100af95e, 0x21);               /* jnz 0x100af95e */
    II(0x100af93d, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100af942, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af945, 0x5)   calld(0x1008a520, -0x2542a);          /* call 0x1008a520 */
    II(0x100af94a, 0x5)   calld(0x100ad02d, -0x2922);           /* call 0x100ad02d */
    II(0x100af94f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af951, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af954, 0x5)   calld(0x10088d4c, -0x26c0d);          /* call 0x10088d4c */
    II(0x100af959, 0x5)   jmpd(0x100afbaf, 0x251);              /* jmp 0x100afbaf */
l_0x100af95e:
    II(0x100af95e, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100af961, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100af964, 0x5)   calld(0x100b7e0c, 0x84a3);            /* call 0x100b7e0c */
    II(0x100af969, 0x5)   calld(0x100b8204, 0x8896);            /* call 0x100b8204 */
    II(0x100af96e, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100af971, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af974, 0x5)   calld(0x100b8204, 0x888b);            /* call 0x100b8204 */
    II(0x100af979, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af97c, 0x5)   calld(0x1008a520, -0x25461);          /* call 0x1008a520 */
    II(0x100af981, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af984, 0x5)   calld(0x10076574, -0x39415);          /* call 0x10076574 */
    II(0x100af989, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100af98c, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100af98f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af992, 0x5)   calld(0x1008a520, -0x25477);          /* call 0x1008a520 */
    II(0x100af997, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af99a, 0x5)   calld(0x10076574, -0x3942b);          /* call 0x10076574 */
    II(0x100af99f, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100af9a2, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100af9a5, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100af9a8, 0x5)   calld(0x10076aac, -0x38f01);          /* call 0x10076aac */
    II(0x100af9ad, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af9b0, 0x5)   calld(0x100b82bc, 0x8907);            /* call 0x100b82bc */
    II(0x100af9b5, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100af9b8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100af9bc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100af9be, 0x2)   jled(0x100af9c9, 0x9);                /* jle 0x100af9c9 */
    II(0x100af9c0, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x100af9c7, 0x2)   jmpd(0x100af9e2, 0x19);               /* jmp 0x100af9e2 */
l_0x100af9c9:
    II(0x100af9c9, 0x5)   mov(ecx, 0x6aa);                      /* mov ecx, 0x6aa */
    II(0x100af9ce, 0x5)   mov(ebx, 0x101a0ee1);                 /* mov ebx, 0x101a0ee1 */ /* "ai_move.cpp" */
    II(0x100af9d3, 0x5)   mov(edx, 0x101a0eed);                 /* mov edx, 0x101a0eed */ /* "count > 0" */
    II(0x100af9d8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100af9da, 0x5)   calld(sys_assert, 0xb63b3);           /* call 0x10165d92 */
    II(0x100af9df, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100af9e2:
    II(0x100af9e2, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100af9e5, 0x5)   calld(0x100b82bc, 0x88d2);            /* call 0x100b82bc */
    II(0x100af9ea, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x28));    /* cmp ax, [ebp-0x28] */
    II(0x100af9ee, 0x2)   jged(0x100af9fb, 0xb);                /* jge 0x100af9fb */
    II(0x100af9f0, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100af9f3, 0x5)   calld(0x100b82bc, 0x88c4);            /* call 0x100b82bc */
    II(0x100af9f8, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100af9fb:
    II(0x100af9fb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100af9ff, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100afa01, 0x2)   jled(0x100afa0c, 0x9);                /* jle 0x100afa0c */
    II(0x100afa03, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x100afa0a, 0x2)   jmpd(0x100afa25, 0x19);               /* jmp 0x100afa25 */
l_0x100afa0c:
    II(0x100afa0c, 0x5)   mov(ecx, 0x6ad);                      /* mov ecx, 0x6ad */
    II(0x100afa11, 0x5)   mov(ebx, 0x101a0ef7);                 /* mov ebx, 0x101a0ef7 */ /* "ai_move.cpp" */
    II(0x100afa16, 0x5)   mov(edx, 0x101a0f03);                 /* mov edx, 0x101a0f03 */ /* "count > 0" */
    II(0x100afa1b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100afa1d, 0x5)   calld(sys_assert, 0xb6370);           /* call 0x10165d92 */
    II(0x100afa22, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
l_0x100afa25:
    II(0x100afa25, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x100afa2c, 0x2)   jmpd(0x100afa34, 0x6);                /* jmp 0x100afa34 */
l_0x100afa2e:
    II(0x100afa2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100afa31, 0x3)   inc(memd_a32(ss, ebp - 0x34));        /* inc dword [ebp-0x34] */
l_0x100afa34:
    II(0x100afa34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100afa37, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x28));    /* cmp ax, [ebp-0x28] */
    II(0x100afa3b, 0x2)   jged(0x100afaac, 0x6f);               /* jge 0x100afaac */
    II(0x100afa3d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x100afa41, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100afa44, 0x5)   calld(0x100b827c, 0x8833);            /* call 0x100b827c */
    II(0x100afa49, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x100afa4d, 0x4)   add(memw_a32(ss, ebp - 0x24), ax);    /* add [ebp-0x24], ax */
    II(0x100afa51, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x100afa55, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100afa58, 0x5)   calld(0x100b827c, 0x881f);            /* call 0x100b827c */
    II(0x100afa5d, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x100afa62, 0x4)   add(memw_a32(ss, ebp - 0x22), ax);    /* add [ebp-0x22], ax */
    II(0x100afa66, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x100afa6a, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100afa6d, 0x5)   calld(0x100b827c, 0x880a);            /* call 0x100b827c */
    II(0x100afa72, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100afa74, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x100afa78, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100afa7b, 0x5)   calld(0x100b827c, 0x87fc);            /* call 0x100b827c */
    II(0x100afa80, 0x2)   mov(dl, memb_a32(ds, ebx));           /* mov dl, [ebx] */
    II(0x100afa82, 0x2)   cmp(dl, memb_a32(ds, eax));           /* cmp dl, [eax] */
    II(0x100afa84, 0x2)   jnzd(0x100afaa8, 0x22);               /* jnz 0x100afaa8 */
    II(0x100afa86, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x100afa8a, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100afa8d, 0x5)   calld(0x100b827c, 0x87ea);            /* call 0x100b827c */
    II(0x100afa92, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100afa94, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x100afa98, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100afa9b, 0x5)   calld(0x100b827c, 0x87dc);            /* call 0x100b827c */
    II(0x100afaa0, 0x3)   mov(dl, memb_a32(ds, ebx + 0x1));     /* mov dl, [ebx+0x1] */
    II(0x100afaa3, 0x3)   cmp(dl, memb_a32(ds, eax + 0x1));     /* cmp dl, [eax+0x1] */
    II(0x100afaa6, 0x2)   jzd(0x100afaaa, 0x2);                 /* jz 0x100afaaa */
l_0x100afaa8:
    II(0x100afaa8, 0x2)   jmpd(0x100afaac, 0x2);                /* jmp 0x100afaac */
l_0x100afaaa:
    II(0x100afaaa, 0x2)   jmpd(0x100afa2e, -0x7e);              /* jmp 0x100afa2e */
l_0x100afaac:
    II(0x100afaac, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100afaaf, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100afab2, 0x5)   calld(0x1008a520, -0x25597);          /* call 0x1008a520 */
    II(0x100afab7, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100afaba, 0x5)   calld(0x10088b44, -0x26f7b);          /* call 0x10088b44 */
    II(0x100afabf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100afac2, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x28));    /* cmp ax, [ebp-0x28] */
    II(0x100afac6, 0x2)   jnzd(0x100afadd, 0x15);               /* jnz 0x100afadd */
    II(0x100afac8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100afacb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100aface, 0x5)   calld(0x1008a520, -0x255b3);          /* call 0x1008a520 */
    II(0x100afad3, 0x5)   calld(0x100afbb7, 0xdf);              /* call 0x100afbb7 */
    II(0x100afad8, 0x5)   jmpd(0x100afb91, 0xb4);               /* jmp 0x100afb91 */
l_0x100afadd:
    II(0x100afadd, 0x5)   mov(eax, 0x1c);                       /* mov eax, 0x1c */
    II(0x100afae2, 0x5)   calld(sys_new, 0xb6319);              /* call 0x10165e00 */
    II(0x100afae7, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100afaea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100afaed, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100afaf0, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x100afaf4, 0x2)   jzd(0x100afb11, 0x1b);                /* jz 0x100afb11 */
    II(0x100afaf6, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x22)); /* movsx ebx, word [ebp-0x22] */
    II(0x100afafa, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100afafe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100afb01, 0x5)   calld(my_ctor_c20, 0x6a450);          /* call 0x10119f56 */
    II(0x100afb06, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100afb09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100afb0c, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100afb0f, 0x2)   jmpd(0x100afb17, 0x6);                /* jmp 0x100afb17 */
l_0x100afb11:
    II(0x100afb11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100afb14, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x100afb17:
    II(0x100afb17, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x100afb1a, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100afb1d, 0x5)   calld(0x100ab3b0, -0x4772);           /* call 0x100ab3b0 */
    II(0x100afb22, 0x7)   mov(memd_a32(ss, ebp - 0x4c), 0);     /* mov dword [ebp-0x4c], 0x0 */
    II(0x100afb29, 0x2)   jmpd(0x100afb31, 0x6);                /* jmp 0x100afb31 */
l_0x100afb2b:
    II(0x100afb2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100afb2e, 0x3)   inc(memd_a32(ss, ebp - 0x4c));        /* inc dword [ebp-0x4c] */
l_0x100afb31:
    II(0x100afb31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100afb34, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x34));    /* cmp ax, [ebp-0x34] */
    II(0x100afb38, 0x2)   jgd(0x100afb70, 0x36);                /* jg 0x100afb70 */
    II(0x100afb3a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4c)); /* movsx edx, word [ebp-0x4c] */
    II(0x100afb3e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100afb41, 0x5)   calld(0x100b827c, 0x8736);            /* call 0x100b827c */
    II(0x100afb46, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x100afb4b, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100afb4e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4c)); /* movsx edx, word [ebp-0x4c] */
    II(0x100afb52, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100afb55, 0x5)   calld(0x100b827c, 0x8722);            /* call 0x100b827c */
    II(0x100afb5a, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x100afb5e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100afb61, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100afb64, 0x5)   calld(0x100ab2e0, -0x4889);           /* call 0x100ab2e0 */
    II(0x100afb69, 0x5)   calld(0x1011aca3, 0x6b135);           /* call 0x1011aca3 */
    II(0x100afb6e, 0x2)   jmpd(0x100afb2b, -0x45);              /* jmp 0x100afb2b */
l_0x100afb70:
    II(0x100afb70, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100afb73, 0x5)   calld(0x100ab33c, -0x483c);           /* call 0x100ab33c */
    II(0x100afb78, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100afb7a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100afb7d, 0x5)   calld(0x1008a520, -0x25662);          /* call 0x1008a520 */
    II(0x100afb82, 0x5)   calld(0x100afbb7, 0x30);              /* call 0x100afbb7 */
    II(0x100afb87, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100afb89, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100afb8c, 0x5)   calld(0x100a9f38, -0x5c59);           /* call 0x100a9f38 */
l_0x100afb91:
    II(0x100afb91, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100afb93, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100afb96, 0x5)   calld(0x100b7294, 0x76f9);            /* call 0x100b7294 */
    II(0x100afb9b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100afb9d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100afba0, 0x5)   calld(0x100b7294, 0x76ef);            /* call 0x100b7294 */
    II(0x100afba5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100afba7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100afbaa, 0x5)   calld(0x10088d4c, -0x26e63);          /* call 0x10088d4c */
l_0x100afbaf:
    II(0x100afbaf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100afbb1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100afbb2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100afbb3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100afbb4, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

