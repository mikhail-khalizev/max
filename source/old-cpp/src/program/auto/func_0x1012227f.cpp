FUNC_BEGIN(0x1012227f, 0x6ec88dbde44c71e0, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xc9, 0x3a, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x81, 0x78, 0x40, 0xcd, 0x6, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0x14, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0xec, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x21, 0xf, 0x83, 0x84, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x1c, 0x66, 0x8b, 0x80, 0x62, 0xb0, 0x1b, 0x10, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x1c, 0x8a, 0x80, 0x61, 0xb0, 0x1b, 0x10, 0x88, 0x45, 0xf0, 0x80, 0x7d, 0xf0, 0x40, 0x75, 0xf, 0x8b, 0x45, 0xfc, 0x66, 0x81, 0x78, 0x40, 0xc1, 0x6, 0xf, 0x85, 0x49, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x19, 0x75, 0x4, 0x83, 0x45, 0xf4, 0x14, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x1c, 0x80, 0xb8, 0x5c, 0xb0, 0x1b, 0x10, 0, 0xf, 0x84, 0xf3, 0, 0, 0, 0xf, 0xbe, 0x45, 0xf0, 0xe8, 0xab, 0x3c, 0xf5, 0xff, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x1c, 0x66, 0x89, 0x82, 0x74, 0xb0, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x1c, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x1c, 0x66, 0x8b, 0x80, 0x74, 0xb0, 0x1b, 0x10, 0x66, 0x89, 0x82, 0x76, 0xb0, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x1c, 0x8a, 0x80, 0x5c, 0xb0, 0x1b, 0x10, 0x88, 0x45, 0xe8, 0xe9, 0x8c, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xf4, 0xf, 0xbf, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x47, 0xf6, 0xff, 0xff, 0xe9, 0x90, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xf4, 0xf, 0xbf, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xf0, 0xf7, 0xff, 0xff, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x5, 0x3, 0, 0, 0, 0xba, 0x14, 0, 0, 0, 0x29, 0xc2, 0x89, 0xd0, 0x29, 0x45, 0xf4, 0xeb, 0x63, 0xf, 0xbf, 0x4d, 0xf4, 0xf, 0xbf, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xa0, 0xfc, 0xff, 0xff, 0xeb, 0x4d, 0xf, 0xbf, 0x4d, 0xf4, 0xf, 0xbf, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x58, 0xf9, 0xff, 0xff, 0xeb, 0x37, 0xeb, 0x35, 0xb6, 0x23, 0x12, 0x10, 0xcc, 0x23, 0x12, 0x10, 0xcc, 0x23, 0x12, 0x10, 0xcc, 0x23, 0x12, 0x10, 0x70, 0x23, 0x12, 0x10, 0x89, 0x23, 0x12, 0x10, 0x8a, 0x45, 0xe8, 0xfe, 0xc8, 0x88, 0x45, 0xe4, 0x80, 0x7d, 0xe4, 0x5, 0x77, 0xd8, 0x31, 0xc0, 0x8a, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0xe4, 0x23, 0x12, 0x10, 0xeb, 0x35, 0x8b, 0x45, 0xfc, 0x66, 0x81, 0x78, 0x40, 0xc1, 0x6, 0x75, 0x6, 0x80, 0x7d, 0xf0, 0x31, 0x75, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x49, 0xeb, 0x1b, 0x80, 0x7d, 0xf0, 0, 0x75, 0xc, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x49, 0xeb, 0x9, 0x83, 0x45, 0xf4, 0x14, 0xe9, 0x69, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1012227f, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x10122284, 0x5)   calld(sys_check_available_stack_size, 0x43ac9); /* call 0x10165d52 */
    II(0x10122289, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012228a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012228b, 0x1)   pushd(edx);                           /* push edx */
    II(0x1012228c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012228d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012228e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012228f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10122291, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10122297, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1012229a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012229d, 0x6)   cmp(memw_a32(ds, eax + 0x40), 0x6cd); /* cmp word [eax+0x40], 0x6cd */
    II(0x101222a3, 0x2)   jnzd(0x101222ae, 0x9);                /* jnz 0x101222ae */
    II(0x101222a5, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x14);   /* mov dword [ebp-0xc], 0x14 */
    II(0x101222ac, 0x2)   jmpd(0x101222b5, 0x7);                /* jmp 0x101222b5 */
l_0x101222ae:
    II(0x101222ae, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xffffffec); /* mov dword [ebp-0xc], 0xffffffec */
l_0x101222b5:
    II(0x101222b5, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x101222bc, 0x2)   jmpd(0x101222c4, 0x6);                /* jmp 0x101222c4 */
l_0x101222be:
    II(0x101222be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101222c1, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x101222c4:
    II(0x101222c4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101222c8, 0x3)   cmp(eax, 0x21);                       /* cmp eax, 0x21 */
    II(0x101222cb, 0x6)   jaed(0x10122455, 0x184);              /* jae dword 0x10122455 */
    II(0x101222d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101222d5, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x101222d8, 0x7)   mov(ax, memw_a32(ds, eax + 0x101bb062)); /* mov ax, [eax+0x101bb062] */
    II(0x101222df, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101222e2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101222e6, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x101222e9, 0x6)   mov(al, memb_a32(ds, eax + 0x101bb061)); /* mov al, [eax+0x101bb061] */
    II(0x101222ef, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x101222f2, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0x40);  /* cmp byte [ebp-0x10], 0x40 */
    II(0x101222f6, 0x2)   jnzd(0x10122307, 0xf);                /* jnz 0x10122307 */
    II(0x101222f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101222fb, 0x6)   cmp(memw_a32(ds, eax + 0x40), 0x6c1); /* cmp word [eax+0x40], 0x6c1 */
    II(0x10122301, 0x6)   jnzd(0x10122450, 0x149);              /* jnz dword 0x10122450 */
l_0x10122307:
    II(0x10122307, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012230b, 0x3)   cmp(eax, 0x19);                       /* cmp eax, 0x19 */
    II(0x1012230e, 0x2)   jnzd(0x10122314, 0x4);                /* jnz 0x10122314 */
    II(0x10122310, 0x4)   add(memd_a32(ss, ebp - 0xc), 0x14);   /* add dword [ebp-0xc], 0x14 */
l_0x10122314:
    II(0x10122314, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10122318, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x1012231b, 0x7)   cmp(memb_a32(ds, eax + 0x101bb05c), 0); /* cmp byte [eax+0x101bb05c], 0x0 */
    II(0x10122322, 0x6)   jzd(0x1012241b, 0xf3);                /* jz dword 0x1012241b */
    II(0x10122328, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x10)); /* movsx eax, byte [ebp-0x10] */
    II(0x1012232c, 0x5)   calld(0x10075fdc, -0xac355);          /* call 0x10075fdc */
    II(0x10122331, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10122335, 0x3)   imul(edx, edx, 0x1c);                 /* imul edx, edx, 0x1c */
    II(0x10122338, 0x7)   mov(memw_a32(ds, edx + 0x101bb074), ax); /* mov [edx+0x101bb074], ax */
    II(0x1012233f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10122343, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x10122346, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1012234a, 0x3)   imul(edx, edx, 0x1c);                 /* imul edx, edx, 0x1c */
    II(0x1012234d, 0x7)   mov(ax, memw_a32(ds, eax + 0x101bb074)); /* mov ax, [eax+0x101bb074] */
    II(0x10122354, 0x7)   mov(memw_a32(ds, edx + 0x101bb076), ax); /* mov [edx+0x101bb076], ax */
    II(0x1012235b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1012235f, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x10122362, 0x6)   mov(al, memb_a32(ds, eax + 0x101bb05c)); /* mov al, [eax+0x101bb05c] */
    II(0x10122368, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x1012236b, 0x5)   jmpd(0x101223fc, 0x8c);               /* jmp 0x101223fc */
l_0x10122370:
    II(0x10122370, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x10122374, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x10122378, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1012237c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012237f, 0x5)   calld(0x101219cb, -0x9b9);            /* call 0x101219cb */
    II(0x10122384, 0x5)   jmpd(0x10122419, 0x90);               /* jmp 0x10122419 */
l_0x10122389:
    II(0x10122389, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x1012238d, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x10122391, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10122395, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10122398, 0x5)   calld(0x10121b8d, -0x810);            /* call 0x10121b8d */
    II(0x1012239d, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x101223a3, 0x5)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x101223a8, 0x5)   mov(edx, 0x14);                       /* mov edx, 0x14 */
    II(0x101223ad, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x101223af, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101223b1, 0x3)   sub(memd_a32(ss, ebp - 0xc), eax);    /* sub [ebp-0xc], eax */
    II(0x101223b4, 0x2)   jmpd(0x10122419, 0x63);               /* jmp 0x10122419 */
l_0x101223b6:
    II(0x101223b6, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x101223ba, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x101223be, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x101223c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101223c5, 0x5)   calld(0x1012206a, -0x360);            /* call 0x1012206a */
    II(0x101223ca, 0x2)   jmpd(0x10122419, 0x4d);               /* jmp 0x10122419 */
l_0x101223cc:
    II(0x101223cc, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x101223d0, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x101223d4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x101223d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101223db, 0x5)   calld(0x10121d38, -0x6a8);            /* call 0x10121d38 */
    II(0x101223e0, 0x2)   jmpd(0x10122419, 0x37);               /* jmp 0x10122419 */
l_0x101223e2:
    II(0x101223e2, 0x2)   jmpd(0x10122419, 0x35);               /* jmp 0x10122419 */
//    II(0x101223e4, 0x18)  /* Служебная область с абсолютными адресами переходов. {0x101223b6, 0x101223cc, 0x101223cc, 0x101223cc, 0x10122370, 0x10122389}. */
l_0x101223fc:
    II(0x101223fc, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x101223ff, 0x2)   dec(al);                              /* dec al */
    II(0x10122401, 0x3)   mov(memb_a32(ss, ebp - 0x1c), al);    /* mov [ebp-0x1c], al */
    II(0x10122404, 0x4)   cmp(memb_a32(ss, ebp - 0x1c), 0x5);   /* cmp byte [ebp-0x1c], 0x5 */
    II(0x10122408, 0x2)   jad(0x101223e2, -0x28);               /* ja 0x101223e2 */
    II(0x1012240a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012240c, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x1012240f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10122412, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x101223e4), (0x10122370)(0x10122389)(0x101223b6)(0x101223cc)); /* jmp dword near [cs:eax+0x101223e4] */
l_0x10122419:
    II(0x10122419, 0x2)   jmpd(0x10122450, 0x35);               /* jmp 0x10122450 */
l_0x1012241b:
    II(0x1012241b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012241e, 0x6)   cmp(memw_a32(ds, eax + 0x40), 0x6c1); /* cmp word [eax+0x40], 0x6c1 */
    II(0x10122424, 0x2)   jnzd(0x1012242c, 0x6);                /* jnz 0x1012242c */
    II(0x10122426, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0x31);  /* cmp byte [ebp-0x10], 0x31 */
    II(0x1012242a, 0x2)   jnzd(0x1012242e, 0x2);                /* jnz 0x1012242e */
l_0x1012242c:
    II(0x1012242c, 0x2)   jmpd(0x1012243a, 0xc);                /* jmp 0x1012243a */
l_0x1012242e:
    II(0x1012242e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10122431, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10122434, 0x4)   mov(memw_a32(ds, edx + 0x49), ax);    /* mov [edx+0x49], ax */
    II(0x10122438, 0x2)   jmpd(0x10122455, 0x1b);               /* jmp 0x10122455 */
l_0x1012243a:
    II(0x1012243a, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x1012243e, 0x2)   jnzd(0x1012244c, 0xc);                /* jnz 0x1012244c */
    II(0x10122440, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10122443, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10122446, 0x4)   mov(memw_a32(ds, edx + 0x49), ax);    /* mov [edx+0x49], ax */
    II(0x1012244a, 0x2)   jmpd(0x10122455, 0x9);                /* jmp 0x10122455 */
l_0x1012244c:
    II(0x1012244c, 0x4)   add(memd_a32(ss, ebp - 0xc), 0x14);   /* add dword [ebp-0xc], 0x14 */
l_0x10122450:
    II(0x10122450, 0x5)   jmpd(0x101222be, -0x197);             /* jmp 0x101222be */
l_0x10122455:
    II(0x10122455, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10122457, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10122458, 0x1)   popd(edi);                            /* pop edi */
    II(0x10122459, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012245a, 0x1)   popd(edx);                            /* pop edx */
    II(0x1012245b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012245c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012245d, 0x1)   retd();                               /* ret */
FUNC_END

