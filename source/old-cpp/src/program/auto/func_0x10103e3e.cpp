FUNC_BEGIN(0x10103e3e, 0x929479781f5a2a6c, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xa, 0x1f, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x75, 0x19, 0xb9, 0x93, 0x1, 0, 0, 0xbb, 0x2b, 0x32, 0x1a, 0x10, 0xba, 0x34, 0x32, 0x1a, 0x10, 0xb8, 0x65, 0x32, 0x1a, 0x10, 0xe8, 0x5a, 0xc9, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xd2, 0x22, 0xf7, 0xff, 0x31, 0xd2, 0x66, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x18, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x5d, 0xf4, 0x6b, 0xdb, 0xa, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x2, 0x1, 0xd3, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x6a, 0x6c, 0xf8, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10103e3e, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x10103e43, 0x5)   calld(sys_check_available_stack_size, 0x61f0a); /* call 0x10165d52 */
    II(0x10103e48, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10103e49, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10103e4a, 0x1)   pushd(esi);                           /* push esi */
    II(0x10103e4b, 0x1)   pushd(edi);                           /* push edi */
    II(0x10103e4c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10103e4d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10103e4f, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x10103e55, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10103e58, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10103e5b, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x10103e5f, 0x2)   jnzd(0x10103e7a, 0x19);               /* jnz 0x10103e7a */
    II(0x10103e61, 0x5)   mov(ecx, 0x193);                      /* mov ecx, 0x193 */
    II(0x10103e66, 0x5)   mov(ebx, 0x101a322b);                 /* mov ebx, 0x101a322b */ /* "hash.cpp" */
    II(0x10103e6b, 0x5)   mov(edx, 0x101a3234);                 /* mov edx, 0x101a3234 */ /* "Attempted to add NULL unit from unit hash table." */
    II(0x10103e70, 0x5)   mov(eax, 0x101a3265);                 /* mov eax, 0x101a3265 */ /* "unit != 0" */
    II(0x10103e75, 0x5)   calld(0x100f07d4, -0x136a6);          /* call 0x100f07d4 */
l_0x10103e7a:
    II(0x10103e7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103e7d, 0x5)   calld(0x10076154, -0x8dd2e);          /* call 0x10076154 */
    II(0x10103e82, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103e84, 0x3)   mov(dx, ax);                          /* mov dx, ax */
    II(0x10103e87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103e8a, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10103e8d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10103e8f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10103e92, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10103e94, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10103e97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103e9a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x10103e9e, 0x3)   imul(ebx, ebx, 0xa);                  /* imul ebx, ebx, 0xa */
    II(0x10103ea1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10103ea4, 0x3)   mov(edx, memd_a32(ds, edx + 0x2));    /* mov edx, [edx+0x2] */
    II(0x10103ea7, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x10103ea9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10103eab, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10103ead, 0x5)   calld(0x1008ab1c, -0x79396);          /* call 0x1008ab1c */
    II(0x10103eb2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10103eb4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10103eb5, 0x1)   popd(edi);                            /* pop edi */
    II(0x10103eb6, 0x1)   popd(esi);                            /* pop esi */
    II(0x10103eb7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10103eb8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10103eb9, 0x1)   retd();                               /* ret */
FUNC_END

