FUNC_BEGIN(0x100e3451, 0xcab137369f2785f7, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0xf7, 0x28, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xd4, 0x8b, 0x55, 0xd4, 0x83, 0xc2, 0x18, 0x8d, 0x45, 0xe0, 0xe8, 0xe6, 0x31, 0xf9, 0xff, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xc8, 0xe8, 0xee, 0x57, 0xfa, 0xff, 0x89, 0x45, 0xd8, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xd4, 0x83, 0xc0, 0x1c, 0xe8, 0x98, 0x2e, 0xf9, 0xff, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc, 0x30, 0xf9, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0xc0, 0x30, 0xf9, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x40, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0xe0, 0xe8, 0xb0, 0x30, 0xf9, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x48, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe4, 0xe8, 0xd8, 0x35, 0xf9, 0xff, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x56, 0x7c, 0xfa, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x7a, 0x30, 0xf9, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x10, 0xc7, 0x45, 0xec, 0x3, 0, 0, 0, 0x8b, 0x45, 0xe6, 0x66, 0xff, 0x45, 0xe6, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0x2, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0xd7, 0x36, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x46, 0x78, 0x5, 0, 0x84, 0xc0, 0x74, 0x16, 0x8d, 0x45, 0xdc, 0xe8, 0x9d, 0x2e, 0xf9, 0xff, 0x8d, 0x5d, 0xc8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd9, 0x75, 0xfa, 0xff, 0xeb, 0xd4, 0x8b, 0x45, 0xd4, 0xe8, 0xda, 0x5, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xf0, 0x2, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x8, 0x7d, 0xd, 0x8d, 0x45, 0xc8, 0xe8, 0x25, 0x36, 0xf9, 0xff, 0x98, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0x7f, 0x1, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0xd, 0x8d, 0x45, 0xc8, 0xe8, 0xfb, 0x35, 0xf9, 0xff, 0x98, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0x50, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xef, 0x7b, 0xfa, 0xff, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xb8, 0xe8, 0xe, 0x4d, 0x2, 0, 0x84, 0xc0, 0xf, 0x84, 0x22, 0x1, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0x68, 0x2d, 0xf9, 0xff, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x60, 0x2e, 0xf9, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0x12, 0x36, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x81, 0x77, 0x5, 0, 0x84, 0xc0, 0x74, 0x36, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xe6, 0xf, 0xbf, 0x5d, 0xe4, 0x8d, 0x45, 0xdc, 0xe8, 0x96, 0x2d, 0xf9, 0xff, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xdc, 0xe8, 0x86, 0x2d, 0xf9, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x94, 0xcc, 0xf8, 0xff, 0x66, 0x85, 0xc0, 0x74, 0xb4, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x3d, 0x77, 0x5, 0, 0x84, 0xc0, 0xf, 0x84, 0xae, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x90, 0x2d, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x26, 0x2f, 0xf9, 0xff, 0xe8, 0x45, 0x73, 0xfa, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x19, 0x2f, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe4, 0x66, 0x89, 0x42, 0x41, 0x8d, 0x45, 0xe0, 0xe8, 0x8, 0x2f, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe6, 0x66, 0x89, 0x42, 0x43, 0xbb, 0x1, 0, 0, 0, 0xba, 0x5, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x49, 0x2f, 0xf9, 0xff, 0xe8, 0xc7, 0xf9, 0x7, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x19, 0xbb, 0x1, 0, 0, 0, 0xba, 0x5, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x29, 0x2f, 0xf9, 0xff, 0xe8, 0x78, 0xd7, 0xff, 0xff, 0xeb, 0x28, 0x8d, 0x45, 0xe0, 0xe8, 0xbe, 0x2e, 0xf9, 0xff, 0x80, 0x78, 0x3d, 0x5, 0x75, 0x1a, 0xe8, 0xf7, 0xf5, 0x7, 0, 0xe8, 0xce, 0x19, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x5e, 0xd7, 0x1, 0, 0xeb, 0xd8, 0x8d, 0x45, 0xdc, 0xe8, 0xae, 0x74, 0xfa, 0xff, 0x8d, 0x5d, 0xc8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2, 0x74, 0xfa, 0xff, 0xe9, 0x8f, 0xfe, 0xff, 0xff, 0xe9, 0x62, 0xfe, 0xff, 0xff, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xd2, 0x2e, 0xf9, 0xff, 0xe8, 0x6d, 0xc3, 0x1, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x5f, 0x28, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x25, 0x55, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xb, 0x28, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100e3451, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x100e3456, 0x5)   calld(sys_check_available_stack_size, 0x828f7); /* call 0x10165d52 */
    II(0x100e345b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e345c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e345d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e345e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e345f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e3460, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e3462, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x100e3468, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e346b, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100e346e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3471, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100e3474, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2c));   /* mov edx, [ebp-0x2c] */
    II(0x100e3477, 0x3)   add(edx, 0x18);                       /* add edx, 0x18 */
    II(0x100e347a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e347d, 0x5)   calld(0x10076668, -0x6ce1a);          /* call 0x10076668 */
    II(0x100e3482, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100e3486, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100e3489, 0x5)   calld(my_ctor_0x101b56fc, -0x5a812);  /* call 0x10088c7c */
    II(0x100e348e, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100e3491, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100e3495, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e3498, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x100e349b, 0x5)   calld(0x10076338, -0x6d168);          /* call 0x10076338 */
    II(0x100e34a0, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100e34a3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e34a5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100e34a7, 0x5)   calld(0x100764b8, -0x6cff4);          /* call 0x100764b8 */
    II(0x100e34ac, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e34af, 0x5)   calld(0x10076574, -0x6cf40);          /* call 0x10076574 */
    II(0x100e34b4, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100e34b8, 0x1)   inc(eax);                             /* inc eax */
    II(0x100e34b9, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100e34bc, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e34bf, 0x5)   calld(0x10076574, -0x6cf50);          /* call 0x10076574 */
    II(0x100e34c4, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100e34c8, 0x1)   dec(eax);                             /* dec eax */
    II(0x100e34c9, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e34cc, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e34cf, 0x5)   calld(0x10076aac, -0x6ca28);          /* call 0x10076aac */
    II(0x100e34d4, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100e34d9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e34dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e34dd, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100e34e3, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100e34e6, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e34e8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e34ea, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100e34ed, 0x5)   calld(0x1008b148, -0x583aa);          /* call 0x1008b148 */
    II(0x100e34f2, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e34f5, 0x5)   calld(0x10076574, -0x6cf86);          /* call 0x10076574 */
    II(0x100e34fa, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x100e34fe, 0x2)   jzd(0x100e3510, 0x10);                /* jz 0x100e3510 */
    II(0x100e3500, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x3);   /* mov dword [ebp-0x14], 0x3 */
    II(0x100e3507, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x100e350a, 0x4)   inc(memw_a32(ss, ebp - 0x1a));        /* inc word [ebp-0x1a] */
    II(0x100e350e, 0x2)   jmpd(0x100e3517, 0x7);                /* jmp 0x100e3517 */
l_0x100e3510:
    II(0x100e3510, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x2);   /* mov dword [ebp-0x14], 0x2 */
l_0x100e3517:
    II(0x100e3517, 0x2)   jmpd(0x100e3521, 0x8);                /* jmp 0x100e3521 */
l_0x100e3519:
    II(0x100e3519, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e351c, 0x5)   calld(0x10076bf8, -0x6c929);          /* call 0x10076bf8 */
l_0x100e3521:
    II(0x100e3521, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3523, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e3526, 0x5)   calld(0x1013ad71, 0x57846);           /* call 0x1013ad71 */
    II(0x100e352b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e352d, 0x2)   jzd(0x100e3545, 0x16);                /* jz 0x100e3545 */
    II(0x100e352f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e3532, 0x5)   calld(0x100763d4, -0x6d163);          /* call 0x100763d4 */
    II(0x100e3537, 0x3)   lea(ebx, ebp - 0x38);                 /* lea ebx, [ebp-0x38] */
    II(0x100e353a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e353c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100e353e, 0x5)   calld(0x1008ab1c, -0x58a27);          /* call 0x1008ab1c */
    II(0x100e3543, 0x2)   jmpd(0x100e3519, -0x2c);              /* jmp 0x100e3519 */
l_0x100e3545:
    II(0x100e3545, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e3548, 0x5)   calld(0x100e3b27, 0x5da);             /* call 0x100e3b27 */
    II(0x100e354d, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100e3554, 0x2)   jmpd(0x100e355a, 0x4);                /* jmp 0x100e355a */
l_0x100e3556:
    II(0x100e3556, 0x4)   add(memd_a32(ss, ebp - 0x10), 0x2);   /* add dword [ebp-0x10], 0x2 */
l_0x100e355a:
    II(0x100e355a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100e355e, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100e3561, 0x2)   jged(0x100e3570, 0xd);                /* jge 0x100e3570 */
    II(0x100e3563, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100e3566, 0x5)   calld(0x10076b90, -0x6c9db);          /* call 0x10076b90 */
    II(0x100e356b, 0x1)   cwde();                               /* cwde */
    II(0x100e356c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e356e, 0x2)   jgd(0x100e3575, 0x5);                 /* jg 0x100e3575 */
l_0x100e3570:
    II(0x100e3570, 0x5)   jmpd(0x100e36f4, 0x17f);              /* jmp 0x100e36f4 */
l_0x100e3575:
    II(0x100e3575, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100e357c, 0x2)   jmpd(0x100e3584, 0x6);                /* jmp 0x100e3584 */
l_0x100e357e:
    II(0x100e357e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e3581, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100e3584:
    II(0x100e3584, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e3587, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100e358b, 0x2)   jged(0x100e359a, 0xd);                /* jge 0x100e359a */
    II(0x100e358d, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100e3590, 0x5)   calld(0x10076b90, -0x6ca05);          /* call 0x10076b90 */
    II(0x100e3595, 0x1)   cwde();                               /* cwde */
    II(0x100e3596, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e3598, 0x2)   jgd(0x100e359f, 0x5);                 /* jg 0x100e359f */
l_0x100e359a:
    II(0x100e359a, 0x5)   jmpd(0x100e36ef, 0x150);              /* jmp 0x100e36ef */
l_0x100e359f:
    II(0x100e359f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100e35a3, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100e35a6, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x100e35ab, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e35ad, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e35b0, 0x5)   calld(0x1008b1a4, -0x58411);          /* call 0x1008b1a4 */
    II(0x100e35b5, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100e35b8, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100e35bb, 0x5)   calld(0x101082ce, 0x24d0e);           /* call 0x101082ce */
    II(0x100e35c0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e35c2, 0x6)   jzd(0x100e36ea, 0x122);               /* jz dword 0x100e36ea */
    II(0x100e35c8, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100e35cb, 0x5)   calld(0x10076338, -0x6d298);          /* call 0x10076338 */
    II(0x100e35d0, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100e35d3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e35d5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100e35d7, 0x5)   calld(0x1007643c, -0x6d1a0);          /* call 0x1007643c */
    II(0x100e35dc, 0x2)   jmpd(0x100e35e6, 0x8);                /* jmp 0x100e35e6 */
l_0x100e35de:
    II(0x100e35de, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e35e1, 0x5)   calld(0x10076bf8, -0x6c9ee);          /* call 0x10076bf8 */
l_0x100e35e6:
    II(0x100e35e6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e35e8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e35eb, 0x5)   calld(0x1013ad71, 0x57781);           /* call 0x1013ad71 */
    II(0x100e35f0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e35f2, 0x2)   jzd(0x100e362a, 0x36);                /* jz 0x100e362a */
    II(0x100e35f4, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100e35f9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e35fa, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x1a)); /* movsx ecx, word [ebp-0x1a] */
    II(0x100e35fe, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x100e3602, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e3605, 0x5)   calld(0x100763a0, -0x6d26a);          /* call 0x100763a0 */
    II(0x100e360a, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100e360d, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100e360f, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e3612, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e3615, 0x5)   calld(0x100763a0, -0x6d27a);          /* call 0x100763a0 */
    II(0x100e361a, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100e361d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e3620, 0x5)   calld(0x100702b9, -0x7336c);          /* call 0x100702b9 */
    II(0x100e3625, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100e3628, 0x2)   jzd(0x100e35de, -0x4c);               /* jz 0x100e35de */
l_0x100e362a:
    II(0x100e362a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e362c, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e362f, 0x5)   calld(0x1013ad71, 0x5773d);           /* call 0x1013ad71 */
    II(0x100e3634, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e3636, 0x6)   jzd(0x100e36ea, 0xae);                /* jz dword 0x100e36ea */
    II(0x100e363c, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e363f, 0x5)   calld(0x100763d4, -0x6d270);          /* call 0x100763d4 */
    II(0x100e3644, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e3646, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e3649, 0x5)   calld(0x10076574, -0x6d0da);          /* call 0x10076574 */
    II(0x100e364e, 0x5)   calld(0x1008a998, -0x58cbb);          /* call 0x1008a998 */
    II(0x100e3653, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e3656, 0x5)   calld(0x10076574, -0x6d0e7);          /* call 0x10076574 */
    II(0x100e365b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e365d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100e3660, 0x4)   mov(memw_a32(ds, edx + 0x41), ax);    /* mov [edx+0x41], ax */
    II(0x100e3664, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e3667, 0x5)   calld(0x10076574, -0x6d0f8);          /* call 0x10076574 */
    II(0x100e366c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e366e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x100e3671, 0x4)   mov(memw_a32(ds, edx + 0x43), ax);    /* mov [edx+0x43], ax */
    II(0x100e3675, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100e367a, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x100e367f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e3682, 0x5)   calld(0x100765d0, -0x6d0b7);          /* call 0x100765d0 */
    II(0x100e3687, 0x5)   calld(0x10163053, 0x7f9c7);           /* call 0x10163053 */
    II(0x100e368c, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100e3693, 0x2)   jzd(0x100e36ae, 0x19);                /* jz 0x100e36ae */
    II(0x100e3695, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100e369a, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x100e369f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e36a2, 0x5)   calld(0x100765d0, -0x6d0d7);          /* call 0x100765d0 */
    II(0x100e36a7, 0x5)   calld(0x100e0e24, -0x2888);           /* call 0x100e0e24 */
    II(0x100e36ac, 0x2)   jmpd(0x100e36d6, 0x28);               /* jmp 0x100e36d6 */
l_0x100e36ae:
    II(0x100e36ae, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e36b1, 0x5)   calld(0x10076574, -0x6d142);          /* call 0x10076574 */
    II(0x100e36b6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x5);   /* cmp byte [eax+0x3d], 0x5 */
    II(0x100e36ba, 0x2)   jnzd(0x100e36d6, 0x1a);               /* jnz 0x100e36d6 */
    II(0x100e36bc, 0x5)   calld(0x10162cb8, 0x7f5f7);           /* call 0x10162cb8 */
    II(0x100e36c1, 0x5)   calld(0x100d5094, -0xe632);           /* call 0x100d5094 */
    II(0x100e36c6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e36c8, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100e36ca, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100e36cf, 0x5)   calld(0x10100e32, 0x1d75e);           /* call 0x10100e32 */
    II(0x100e36d4, 0x2)   jmpd(0x100e36ae, -0x28);              /* jmp 0x100e36ae */
l_0x100e36d6:
    II(0x100e36d6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e36d9, 0x5)   calld(0x1008ab8c, -0x58b52);          /* call 0x1008ab8c */
    II(0x100e36de, 0x3)   lea(ebx, ebp - 0x38);                 /* lea ebx, [ebp-0x38] */
    II(0x100e36e1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e36e3, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100e36e5, 0x5)   calld(0x1008aaec, -0x58bfe);          /* call 0x1008aaec */
l_0x100e36ea:
    II(0x100e36ea, 0x5)   jmpd(0x100e357e, -0x171);             /* jmp 0x100e357e */
l_0x100e36ef:
    II(0x100e36ef, 0x5)   jmpd(0x100e3556, -0x19e);             /* jmp 0x100e3556 */
l_0x100e36f4:
    II(0x100e36f4, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e36f9, 0x5)   calld(0x100765d0, -0x6d12e);          /* call 0x100765d0 */
    II(0x100e36fe, 0x5)   calld(0x100ffa70, 0x1c36d);           /* call 0x100ffa70 */
    II(0x100e3703, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3705, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e3708, 0x5)   calld(0x10075f6c, -0x6d7a1);          /* call 0x10075f6c */
    II(0x100e370d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e370f, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100e3712, 0x5)   calld(my_dtor_0x101b56fc, -0x5aadb);  /* call 0x10088c3c */
    II(0x100e3717, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3719, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e371c, 0x5)   calld(0x10075f2c, -0x6d7f5);          /* call 0x10075f2c */
    II(0x100e3721, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e3723, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e3724, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e3725, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e3726, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e3727, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e3728, 0x1)   retd();                               /* ret */
FUNC_END

