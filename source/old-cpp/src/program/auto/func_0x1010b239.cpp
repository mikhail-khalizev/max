FUNC_BEGIN(0x1010b239, 0xa1fa3f7d75741de9, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xf, 0xab, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xd, 0x89, 0x45, 0xf8, 0xe9, 0x82, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0x64, 0, 0, 0, 0xe9, 0x8b, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0xc8, 0, 0, 0, 0xe9, 0x78, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0x90, 0x1, 0, 0, 0xeb, 0x68, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0xc7, 0x45, 0xf4, 0xc8, 0, 0, 0, 0xeb, 0x58, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0xc7, 0x45, 0xf4, 0x90, 0x1, 0, 0, 0xeb, 0x48, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0xc7, 0x45, 0xf4, 0x20, 0x3, 0, 0, 0xeb, 0x38, 0xeb, 0x36, 0x8b, 0xc0, 0x62, 0xb2, 0x10, 0x10, 0x75, 0xb2, 0x10, 0x10, 0x88, 0xb2, 0x10, 0x10, 0x98, 0xb2, 0x10, 0x10, 0xa8, 0xb2, 0x10, 0x10, 0xb8, 0xb2, 0x10, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xe8, 0x28, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0x5, 0x77, 0xd5, 0x8b, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0xcc, 0xb2, 0x10, 0x10, 0x8b, 0x55, 0xf0, 0xb8, 0x4a, 0, 0, 0, 0xe8, 0xef, 0xf7, 0xfb, 0xff, 0x8b, 0x55, 0xf4, 0xb8, 0x4b, 0, 0, 0, 0xe8, 0xe2, 0xf7, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x7b, 0xf3, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x12, 0xe8, 0x55, 0xc1, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010b239, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1010b23e, 0x5)   calld(sys_check_available_stack_size, 0x5ab0f); /* call 0x10165d52 */
    II(0x1010b243, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010b244, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010b245, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010b246, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010b247, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010b248, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010b249, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010b24b, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1010b251, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1010b254, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010b257, 0x3)   mov(eax, memd_a32(ds, eax + 0xd));    /* mov eax, [eax+0xd] */
    II(0x1010b25a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010b25d, 0x5)   jmpd(0x1010b2e4, 0x82);               /* jmp 0x1010b2e4 */
l_0x1010b262:
    II(0x1010b262, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1010b269, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x64);   /* mov dword [ebp-0xc], 0x64 */
    II(0x1010b270, 0x5)   jmpd(0x1010b300, 0x8b);               /* jmp 0x1010b300 */
l_0x1010b275:
    II(0x1010b275, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1010b27c, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xc8);   /* mov dword [ebp-0xc], 0xc8 */
    II(0x1010b283, 0x5)   jmpd(0x1010b300, 0x78);               /* jmp 0x1010b300 */
l_0x1010b288:
    II(0x1010b288, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1010b28f, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x190);  /* mov dword [ebp-0xc], 0x190 */
    II(0x1010b296, 0x2)   jmpd(0x1010b300, 0x68);               /* jmp 0x1010b300 */
l_0x1010b298:
    II(0x1010b298, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
    II(0x1010b29f, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xc8);   /* mov dword [ebp-0xc], 0xc8 */
    II(0x1010b2a6, 0x2)   jmpd(0x1010b300, 0x58);               /* jmp 0x1010b300 */
l_0x1010b2a8:
    II(0x1010b2a8, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
    II(0x1010b2af, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x190);  /* mov dword [ebp-0xc], 0x190 */
    II(0x1010b2b6, 0x2)   jmpd(0x1010b300, 0x48);               /* jmp 0x1010b300 */
l_0x1010b2b8:
    II(0x1010b2b8, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
    II(0x1010b2bf, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x320);  /* mov dword [ebp-0xc], 0x320 */
    II(0x1010b2c6, 0x2)   jmpd(0x1010b300, 0x38);               /* jmp 0x1010b300 */
l_0x1010b2c8:
    II(0x1010b2c8, 0x2)   jmpd(0x1010b300, 0x36);               /* jmp 0x1010b300 */
//    II(0x1010b2ca, 0x2)   /* Выравнивание. */
//    II(0x1010b2cc, 0x18)  /* Служебная область с абсолютными адресами переходов. {0x1010b262, 0x1010b275, 0x1010b288, 0x1010b298, 0x1010b2a8, 0x1010b2b8}. */
l_0x1010b2e4:
    II(0x1010b2e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b2e7, 0x3)   sub(eax, 0x28);                       /* sub eax, 0x28 */
    II(0x1010b2ea, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1010b2ed, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0x5);   /* cmp dword [ebp-0x14], 0x5 */
    II(0x1010b2f1, 0x2)   jad(0x1010b2c8, -0x2b);               /* ja 0x1010b2c8 */
    II(0x1010b2f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1010b2f6, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010b2f9, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x1010b2cc), (0x1010b262)(0x1010b275)(0x1010b288)(0x1010b298)(0x1010b2a8)(0x1010b2b8)); /* jmp dword near [cs:eax+0x1010b2cc] */
l_0x1010b300:
    II(0x1010b300, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1010b303, 0x5)   mov(eax, 0x4a);                       /* mov eax, 0x4a */
    II(0x1010b308, 0x5)   calld(0x100caafc, -0x40811);          /* call 0x100caafc */
    II(0x1010b30d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010b310, 0x5)   mov(eax, 0x4b);                       /* mov eax, 0x4b */
    II(0x1010b315, 0x5)   calld(0x100caafc, -0x4081e);          /* call 0x100caafc */
    II(0x1010b31a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010b31d, 0x5)   calld(0x1010a69d, -0xc85);            /* call 0x1010a69d */
    II(0x1010b322, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010b325, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010b327, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1010b32a, 0x5)   calld(sys_display_draw_0, 0x5c155);   /* call 0x10167484 */
    II(0x1010b32f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010b331, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010b332, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010b333, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010b334, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010b335, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010b336, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010b337, 0x1)   retd();                               /* ret */
FUNC_END

