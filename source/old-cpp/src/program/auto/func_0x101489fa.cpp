FUNC_BEGIN(0x101489fa, 0x428cd2fd0c95d532, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x4e, 0xd3, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xd7, 0xc4, 0xff, 0xff, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0xf3, 0x82, 0xfd, 0xff, 0x83, 0xe8, 0x65, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0xfc, 0xdd, 0xf2, 0xff, 0x83, 0xe8, 0x6c, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0x39, 0xdf, 0xf2, 0xff, 0x83, 0xe8, 0x70, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xe4, 0xe8, 0x7c, 0x29, 0xf4, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0x66, 0x27, 0xf4, 0xff, 0x83, 0xe8, 0x74, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x5, 0x82, 0, 0, 0, 0xe8, 0x59, 0xdc, 0xf2, 0xff, 0x2d, 0x82, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x5, 0x86, 0, 0, 0, 0xe8, 0x3e, 0xdc, 0xf2, 0xff, 0x2d, 0x86, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x5, 0x8a, 0, 0, 0, 0xe8, 0xa3, 0x3f, 0xf5, 0xff, 0x2d, 0x8a, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x5, 0x94, 0, 0, 0, 0xe8, 0x88, 0x3f, 0xf5, 0xff, 0x2d, 0x94, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x5, 0x9f, 0, 0, 0, 0xe8, 0xed, 0xdf, 0xf2, 0xff, 0x2d, 0x9f, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x5, 0xd9, 0, 0, 0, 0xe8, 0xd8, 0xdf, 0xf2, 0xff, 0x2d, 0xd9, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x2, 0x98, 0x73, 0x1b, 0x10, 0x66, 0xff, 0x5, 0x48, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x8, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0xa, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0xe, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0x9e, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x80, 0xa3, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0xa5, 0, 0, 0, 0x1, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x7e, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x4f, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x80, 0xa7, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x78, 0x1, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x80, 0xdd, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x5b, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x5c, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101489fa, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x101489ff, 0x5)   calld(sys_check_available_stack_size, 0x1d34e); /* call 0x10165d52 */
    II(0x10148a04, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10148a05, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10148a06, 0x1)   pushd(edx);                           /* push edx */
    II(0x10148a07, 0x1)   pushd(esi);                           /* push esi */
    II(0x10148a08, 0x1)   pushd(edi);                           /* push edi */
    II(0x10148a09, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10148a0a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10148a0c, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x10148a12, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10148a15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148a18, 0x5)   calld(0x10144ef4, -0x3b29);           /* call 0x10144ef4 */
    II(0x10148a1d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10148a20, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10148a23, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10148a26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148a29, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10148a2c, 0x5)   calld(0x10120d24, -0x27d0d);          /* call 0x10120d24 */
    II(0x10148a31, 0x3)   sub(eax, 0x65);                       /* sub eax, 0x65 */
    II(0x10148a34, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10148a37, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10148a3a, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10148a3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148a40, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10148a43, 0x5)   calld(my_ctor_0x101b38d0, -0xd2204);  /* call 0x10076844 */
    II(0x10148a48, 0x3)   sub(eax, 0x6c);                       /* sub eax, 0x6c */
    II(0x10148a4b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10148a4e, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10148a51, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10148a54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148a57, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x10148a5a, 0x5)   calld(0x10076998, -0xd20c7);          /* call 0x10076998 */
    II(0x10148a5f, 0x3)   sub(eax, 0x70);                       /* sub eax, 0x70 */
    II(0x10148a62, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10148a65, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10148a68, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10148a6b, 0x5)   calld(0x1008b3ec, -0xbd684);          /* call 0x1008b3ec */
    II(0x10148a70, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10148a73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148a76, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10148a79, 0x5)   calld(0x1008b1e4, -0xbd89a);          /* call 0x1008b1e4 */
    II(0x10148a7e, 0x3)   sub(eax, 0x74);                       /* sub eax, 0x74 */
    II(0x10148a81, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10148a84, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10148a87, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10148a8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148a8d, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x10148a92, 0x5)   calld(my_ctor_0x101b38f8, -0xd23a7);  /* call 0x100766f0 */
    II(0x10148a97, 0x5)   sub(eax, 0x82);                       /* sub eax, 0x82 */
    II(0x10148a9c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10148a9f, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10148aa2, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10148aa5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148aa8, 0x5)   add(eax, 0x86);                       /* add eax, 0x86 */
    II(0x10148aad, 0x5)   calld(my_ctor_0x101b38f8, -0xd23c2);  /* call 0x100766f0 */
    II(0x10148ab2, 0x5)   sub(eax, 0x86);                       /* sub eax, 0x86 */
    II(0x10148ab7, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10148aba, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10148abd, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10148ac0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148ac3, 0x5)   add(eax, 0x8a);                       /* add eax, 0x8a */
    II(0x10148ac8, 0x5)   calld(0x1009ca70, -0xac05d);          /* call 0x1009ca70 */
    II(0x10148acd, 0x5)   sub(eax, 0x8a);                       /* sub eax, 0x8a */
    II(0x10148ad2, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10148ad5, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10148ad8, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10148adb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148ade, 0x5)   add(eax, 0x94);                       /* add eax, 0x94 */
    II(0x10148ae3, 0x5)   calld(0x1009ca70, -0xac078);          /* call 0x1009ca70 */
    II(0x10148ae8, 0x5)   sub(eax, 0x94);                       /* sub eax, 0x94 */
    II(0x10148aed, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10148af0, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10148af3, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10148af6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148af9, 0x5)   add(eax, 0x9f);                       /* add eax, 0x9f */
    II(0x10148afe, 0x5)   calld(my_ctor_0x101b4184, -0xd2013);  /* call 0x10076af0 */
    II(0x10148b03, 0x5)   sub(eax, 0x9f);                       /* sub eax, 0x9f */
    II(0x10148b08, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10148b0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b0e, 0x5)   add(eax, 0xd9);                       /* add eax, 0xd9 */
    II(0x10148b13, 0x5)   calld(my_ctor_0x101b4184, -0xd2028);  /* call 0x10076af0 */
    II(0x10148b18, 0x5)   sub(eax, 0xd9);                       /* sub eax, 0xd9 */
    II(0x10148b1d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10148b20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b23, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b7398); /* mov dword [eax+0x2], 0x101b7398 */
    II(0x10148b2a, 0x7)   inc(memw_a32(ds, 0x101c8148));        /* inc word [0x101c8148] */
    II(0x10148b31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b34, 0x6)   mov(memw_a32(ds, eax + 0x8), 0xffff); /* mov word [eax+0x8], 0xffff */
    II(0x10148b3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b3d, 0x7)   mov(memd_a32(ds, eax + 0xa), 0);      /* mov dword [eax+0xa], 0x0 */
    II(0x10148b44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b47, 0x7)   mov(memd_a32(ds, eax + 0xe), 0);      /* mov dword [eax+0xe], 0x0 */
    II(0x10148b4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b51, 0x7)   mov(memb_a32(ds, eax + 0x9e), 0);     /* mov byte [eax+0x9e], 0x0 */
    II(0x10148b58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b5b, 0x9)   mov(memw_a32(ds, eax + 0xa3), 0);     /* mov word [eax+0xa3], 0x0 */
    II(0x10148b64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b67, 0x7)   mov(memb_a32(ds, eax + 0xa5), 0x1);   /* mov byte [eax+0xa5], 0x1 */
    II(0x10148b6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b71, 0x7)   mov(memd_a32(ds, eax + 0x7e), 0);     /* mov dword [eax+0x7e], 0x0 */
    II(0x10148b78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b7b, 0x4)   mov(memb_a32(ds, eax + 0x4f), 0);     /* mov byte [eax+0x4f], 0x0 */
    II(0x10148b7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b82, 0xa)   mov(memd_a32(ds, eax + 0xa7), 0);     /* mov dword [eax+0xa7], 0x0 */
    II(0x10148b8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b8f, 0x6)   mov(memw_a32(ds, eax + 0x78), 0x1);   /* mov word [eax+0x78], 0x1 */
    II(0x10148b95, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148b98, 0xa)   mov(memd_a32(ds, eax + 0xdd), 0);     /* mov dword [eax+0xdd], 0x0 */
    II(0x10148ba2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148ba5, 0x4)   mov(memb_a32(ds, eax + 0x5b), 0);     /* mov byte [eax+0x5b], 0x0 */
    II(0x10148ba9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148bac, 0x4)   mov(memb_a32(ds, eax + 0x5c), 0);     /* mov byte [eax+0x5c], 0x0 */
    II(0x10148bb0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10148bb3, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x10148bb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10148bb9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10148bbb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10148bbc, 0x1)   popd(edi);                            /* pop edi */
    II(0x10148bbd, 0x1)   popd(esi);                            /* pop esi */
    II(0x10148bbe, 0x1)   popd(edx);                            /* pop edx */
    II(0x10148bbf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10148bc0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10148bc1, 0x1)   retd();                               /* ret */
FUNC_END

