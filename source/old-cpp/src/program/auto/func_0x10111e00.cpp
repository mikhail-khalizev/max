FUNC_BEGIN(0x10111e00, 0xcb6f7351910ef0d3, 0x20, ({0x68, 0x68, 0, 0, 0, 0xe8, 0x48, 0x3f, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x40, 0, 0, 0, 0x31, 0xc0, 0xe8, 0x1e, 0x6a, 0xfd, 0xff, 0x89, 0x45, 0xec, 0xc6, 0x45, 0xfc, 0x1, 0xc7, 0x45, 0xf8, 0x1, 0, 0, 0, 0xba, 0xf0, 0, 0, 0, 0xb8, 0x40, 0x1, 0, 0, 0xe8, 0x80, 0xa4, 0x5, 0, 0x66, 0xc7, 0x5, 0x4e, 0x4e, 0x1c, 0x10, 0xff, 0xff, 0x31, 0xc0, 0xe8, 0x2c, 0x71, 0x6, 0, 0xe8, 0x6e, 0x40, 0x5, 0, 0xb8, 0x4a, 0, 0, 0, 0xe8, 0x81, 0x41, 0xf6, 0xff, 0x66, 0xa3, 0x66, 0x39, 0x1c, 0x10, 0xb8, 0x4b, 0, 0, 0, 0xe8, 0x71, 0x41, 0xf6, 0xff, 0x66, 0xa3, 0x68, 0x39, 0x1c, 0x10, 0xc6, 0x45, 0xe8, 0, 0xe8, 0x7a, 0x64, 0x3, 0, 0x89, 0x45, 0xe4, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0xe8, 0xab, 0x9f, 0x5, 0, 0xe8, 0xae, 0x34, 0xfc, 0xff, 0x98, 0x50, 0xe8, 0xcb, 0x34, 0xfc, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0xf, 0xbf, 0xc8, 0xbb, 0x80, 0x2, 0, 0, 0x8b, 0x55, 0xec, 0xb8, 0xc0, 0x6, 0, 0, 0xe8, 0x9d, 0x6d, 0xfd, 0xff, 0xba, 0x14, 0x47, 0x1a, 0x10, 0x8b, 0x45, 0xec, 0xe8, 0x67, 0xa7, 0xff, 0xff, 0x31, 0xdb, 0x8b, 0x15, 0x4c, 0x4e, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xec, 0xe8, 0xbf, 0xa7, 0xff, 0xff, 0x8b, 0x45, 0xec, 0xe8, 0x29, 0xfc, 0xff, 0xff, 0xe8, 0x13, 0x34, 0, 0, 0xf, 0xbf, 0xd8, 0xba, 0x8, 0, 0, 0, 0xb8, 0x1c, 0x90, 0x1b, 0x10, 0xe8, 0xfb, 0x7d, 0xff, 0xff, 0xe8, 0xcc, 0x9d, 0x5, 0, 0x31, 0xdb, 0xba, 0xa5, 0x6, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x85, 0xb0, 0x2, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x81, 0xee, 0, 0, 0xe8, 0xac, 0x9d, 0x5, 0, 0xc6, 0x45, 0xfc, 0, 0x31, 0xd2, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0xd4, 0x8b, 0xfb, 0xff, 0xc6, 0x45, 0xe0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xe0, 0x85, 0xc0, 0xf, 0x85, 0xc8, 0x2, 0, 0, 0x8b, 0x45, 0xe4, 0xe8, 0x6c, 0x66, 0x3, 0, 0x3d, 0x60, 0xea, 0, 0, 0x76, 0x45, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xdc, 0xe8, 0x37, 0x7c, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x30, 0xfc, 0xff, 0xff, 0x88, 0x45, 0xfc, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0xa, 0x7e, 0x7, 0xc7, 0x45, 0xf8, 0x1, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x85, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xdc, 0x66, 0x3b, 0x45, 0xf8, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0xcb, 0xe9, 0x74, 0x2, 0, 0, 0xe8, 0x76, 0x92, 0x5, 0, 0x89, 0x45, 0xd8, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xd0, 0xe8, 0xf8, 0xa2, 0x5, 0, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0xff, 0x75, 0x8, 0x8b, 0x45, 0xd0, 0x3b, 0x45, 0xf0, 0x74, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xd4, 0x3b, 0x45, 0xf4, 0x74, 0x14, 0xe8, 0x34, 0x63, 0x3, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xd8, 0xe8, 0xbd, 0xa, 0x6, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x85, 0xc0, 0x7e, 0xb, 0xf, 0xbf, 0x45, 0xd8, 0x3d, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xcc, 0xe9, 0x74, 0x1, 0, 0, 0xe8, 0x86, 0x7b, 0xff, 0xff, 0xe8, 0x3c, 0xf7, 0xff, 0xff, 0x88, 0x45, 0xfc, 0x80, 0x7d, 0xfc, 0, 0x74, 0x9, 0x66, 0xc7, 0x5, 0x4e, 0x4e, 0x1c, 0x10, 0xff, 0xff, 0xc6, 0x45, 0xe0, 0x1, 0xe9, 0xd8, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0xc, 0x75, 0x6, 0xc6, 0x45, 0xc8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xc8, 0, 0x8a, 0x45, 0xc8, 0x88, 0x45, 0xc4, 0xe8, 0x48, 0x7b, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x55, 0xc4, 0x31, 0xc0, 0xe8, 0xf1, 0x63, 0x2, 0, 0x89, 0x45, 0xd8, 0x66, 0x83, 0x7d, 0xd8, 0, 0x74, 0x36, 0x80, 0x7d, 0xc4, 0, 0x74, 0xf, 0xba, 0x7, 0, 0, 0, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x8f, 0x8a, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xd8, 0xb8, 0x3d, 0, 0, 0, 0xe8, 0x81, 0x8a, 0xfb, 0xff, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x35, 0xd0, 0xfe, 0xff, 0x66, 0xc7, 0x5, 0x4e, 0x4e, 0x1c, 0x10, 0xff, 0xff, 0xc6, 0x45, 0xfc, 0x1, 0xc6, 0x45, 0xe0, 0x1, 0xe9, 0x61, 0x1, 0, 0, 0xe8, 0xea, 0x7a, 0xff, 0xff, 0xe8, 0x8d, 0xde, 0xff, 0xff, 0x88, 0x45, 0xfc, 0x80, 0x7d, 0xfc, 0, 0x74, 0x9, 0x66, 0xc7, 0x5, 0x4e, 0x4e, 0x1c, 0x10, 0xff, 0xff, 0xc6, 0x45, 0xe0, 0x1, 0xe9, 0x3c, 0x1, 0, 0, 0xe8, 0xcb, 0x7b, 0xff, 0xff, 0xe8, 0x1b, 0x12, 0x1, 0, 0xe8, 0x5a, 0x7b, 0xff, 0xff, 0xe8, 0x20, 0x62, 0x3, 0, 0x89, 0x45, 0xe4, 0xe9, 0x20, 0x1, 0, 0, 0xe8, 0x53, 0x9d, 0x5, 0, 0xe8, 0xa4, 0x7a, 0xff, 0xff, 0xe8, 0x14, 0x37, 0, 0, 0xc6, 0x45, 0xfc, 0x1, 0xc6, 0x45, 0xe0, 0x1, 0xe9, 0x4, 0x1, 0, 0, 0xe8, 0x8d, 0x7a, 0xff, 0xff, 0xe8, 0x6a, 0xa0, 0xff, 0xff, 0xc6, 0x45, 0xfc, 0x1, 0xc6, 0x45, 0xe0, 0x1, 0xe9, 0xed, 0, 0, 0, 0xe8, 0x76, 0x7a, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x82, 0xd2, 0xfd, 0xff, 0xbb, 0x1, 0, 0, 0, 0xba, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xec, 0xe8, 0x63, 0xa5, 0xff, 0xff, 0xe9, 0xc7, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd8, 0x3d, 0, 0x70, 0, 0, 0x7c, 0x2e, 0x81, 0x45, 0xd8, 0, 0x90, 0xff, 0xff, 0x80, 0x7d, 0xe8, 0, 0x75, 0x9, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0x8, 0x72, 0x2, 0xeb, 0x12, 0xf, 0xbf, 0x45, 0xd8, 0x6b, 0xc0, 0x13, 0x8b, 0x80, 0x1c, 0x90, 0x1b, 0x10, 0xe8, 0x54, 0xda, 0xfb, 0xff, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0x89, 0, 0, 0, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc0, 0x66, 0x83, 0x7d, 0xc0, 0x4c, 0x72, 0x4a, 0x66, 0x83, 0x7d, 0xc0, 0x4c, 0xf, 0x86, 0x99, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xc0, 0x4e, 0x72, 0x33, 0x66, 0x83, 0x7d, 0xc0, 0x4e, 0xf, 0x86, 0x62, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xc0, 0x53, 0x72, 0x1c, 0x66, 0x83, 0x7d, 0xc0, 0x53, 0xf, 0x86, 0x11, 0xff, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xc0, 0x48, 0x1, 0xf, 0x84, 0x63, 0xff, 0xff, 0xff, 0xe9, 0x75, 0xff, 0xff, 0xff, 0xe9, 0x70, 0xff, 0xff, 0xff, 0xe9, 0xd1, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xc0, 0x45, 0x72, 0x1b, 0x66, 0x83, 0x7d, 0xc0, 0x45, 0xf, 0x86, 0x33, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xc0, 0x49, 0xf, 0x84, 0xf5, 0xfe, 0xff, 0xff, 0xe9, 0x49, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xc0, 0x43, 0xf, 0x84, 0x1, 0xff, 0xff, 0xff, 0xe9, 0x39, 0xff, 0xff, 0xff, 0xe9, 0x2b, 0xfd, 0xff, 0xff, 0xe9, 0x6b, 0xfc, 0xff, 0xff}))
    II(0x10111e00, 0x5)   pushd(0x68);                          /* push dword 0x68 */
    II(0x10111e05, 0x5)   calld(sys_check_available_stack_size, 0x53f48); /* call 0x10165d52 */
    II(0x10111e0a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10111e0b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10111e0c, 0x1)   pushd(edx);                           /* push edx */
    II(0x10111e0d, 0x1)   pushd(esi);                           /* push esi */
    II(0x10111e0e, 0x1)   pushd(edi);                           /* push edi */
    II(0x10111e0f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10111e10, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10111e12, 0x6)   sub(esp, 0x40);                       /* sub esp, 0x40 */
    II(0x10111e18, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10111e1a, 0x5)   calld(0x100e883d, -0x295e2);          /* call 0x100e883d */
    II(0x10111e1f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10111e22, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x10111e26, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x1);    /* mov dword [ebp-0x8], 0x1 */
    II(0x10111e2d, 0x5)   mov(edx, 0xf0);                       /* mov edx, 0xf0 */
    II(0x10111e32, 0x5)   mov(eax, 0x140);                      /* mov eax, 0x140 */
    II(0x10111e37, 0x5)   calld(/* sys */ 0x1016c2bc, 0x5a480); /* call 0x1016c2bc */
    II(0x10111e3c, 0x9)   mov(memw_a32(ds, 0x101c4e4e), 0xffff); /* mov word [0x101c4e4e], 0xffff */
    II(0x10111e45, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10111e47, 0x5)   calld(/* sys */ 0x10178f78, 0x6712c); /* call 0x10178f78 */
    II(0x10111e4c, 0x5)   calld(/* sys */ 0x10165ebf, 0x5406e); /* call 0x10165ebf */
    II(0x10111e51, 0x5)   mov(eax, 0x4a);                       /* mov eax, 0x4a */
    II(0x10111e56, 0x5)   calld(0x10075fdc, -0x9be7f);          /* call 0x10075fdc */
    II(0x10111e5b, 0x6)   mov(memw_a32(ds, 0x101c3966), ax);    /* mov [0x101c3966], ax */
    II(0x10111e61, 0x5)   mov(eax, 0x4b);                       /* mov eax, 0x4b */
    II(0x10111e66, 0x5)   calld(0x10075fdc, -0x9be8f);          /* call 0x10075fdc */
    II(0x10111e6b, 0x6)   mov(memw_a32(ds, 0x101c3968), ax);    /* mov [0x101c3968], ax */
l_0x10111e71:
    II(0x10111e71, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x10111e75, 0x5)   calld(0x101482f4, 0x3647a);           /* call 0x101482f4 */
    II(0x10111e7a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10111e7d, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
    II(0x10111e84, 0x5)   calld(/* sys */ 0x1016be34, 0x59fab); /* call 0x1016be34 */
    II(0x10111e89, 0x5)   calld(0x100d533c, -0x3cb52);          /* call 0x100d533c */
    II(0x10111e8e, 0x1)   cwde();                               /* cwde */
    II(0x10111e8f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10111e90, 0x5)   calld(0x100d5360, -0x3cb35);          /* call 0x100d5360 */
    II(0x10111e95, 0x1)   cwde();                               /* cwde */
    II(0x10111e96, 0x1)   pushd(eax);                           /* push eax */
    II(0x10111e97, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10111e99, 0x1)   pushd(eax);                           /* push eax */
    II(0x10111e9a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10111e9c, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10111e9f, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10111ea2, 0x5)   mov(ebx, 0x280);                      /* mov ebx, 0x280 */
    II(0x10111ea7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x10111eaa, 0x5)   mov(eax, 0x6c0);                      /* mov eax, 0x6c0 */
    II(0x10111eaf, 0x5)   calld(0x100e8c51, -0x29263);          /* call 0x100e8c51 */
    II(0x10111eb4, 0x5)   mov(edx, 0x101a4714);                 /* mov edx, 0x101a4714 */ /* "Main Menu" */
    II(0x10111eb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10111ebc, 0x5)   calld(0x1010c628, -0x5899);           /* call 0x1010c628 */
    II(0x10111ec1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10111ec3, 0x6)   mov(edx, memd_a32(ds, 0x101c4e4c));   /* mov edx, [0x101c4e4c] */
    II(0x10111ec9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10111ecc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10111ecf, 0x5)   calld(0x1010c693, -0x5841);           /* call 0x1010c693 */
    II(0x10111ed4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10111ed7, 0x5)   calld(0x10111b05, -0x3d7);            /* call 0x10111b05 */
    II(0x10111edc, 0x5)   calld(0x101152f4, 0x3413);            /* call 0x101152f4 */
    II(0x10111ee1, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10111ee4, 0x5)   mov(edx, 0x8);                        /* mov edx, 0x8 */
    II(0x10111ee9, 0x5)   mov(eax, 0x101b901c);                 /* mov eax, 0x101b901c */
    II(0x10111eee, 0x5)   calld(0x10109cee, -0x8205);           /* call 0x10109cee */
    II(0x10111ef3, 0x5)   calld(/* sys */ 0x1016bcc4, 0x59dcc); /* call 0x1016bcc4 */
    II(0x10111ef8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10111efa, 0x5)   mov(edx, 0x6a5);                      /* mov edx, 0x6a5 */
    II(0x10111eff, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10111f04, 0x5)   calld(0x1013cf8e, 0x2b085);           /* call 0x1013cf8e */
    II(0x10111f09, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10111f0e, 0x5)   calld(0x10120d94, 0xee81);            /* call 0x10120d94 */
    II(0x10111f13, 0x5)   calld(/* sys */ 0x1016bcc4, 0x59dac); /* call 0x1016bcc4 */
    II(0x10111f18, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
    II(0x10111f1c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10111f1e, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x10111f23, 0x5)   calld(0x100caafc, -0x4742c);          /* call 0x100caafc */
    II(0x10111f28, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0);     /* mov byte [ebp-0x20], 0x0 */
l_0x10111f2c:
    II(0x10111f2c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10111f2e, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x10111f31, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10111f33, 0x6)   jnzd(0x10112201, 0x2c8);              /* jnz dword 0x10112201 */
    II(0x10111f39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10111f3c, 0x5)   calld(0x101485ad, 0x3666c);           /* call 0x101485ad */
    II(0x10111f41, 0x5)   cmp(eax, 0xea60);                     /* cmp eax, 0xea60 */
    II(0x10111f46, 0x2)   jbed(0x10111f8d, 0x45);               /* jbe 0x10111f8d */
    II(0x10111f48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10111f4b, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10111f4e, 0x5)   calld(0x10109b8a, -0x83c9);           /* call 0x10109b8a */
l_0x10111f53:
    II(0x10111f53, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10111f57, 0x5)   calld(0x10111b8c, -0x3d0);            /* call 0x10111b8c */
    II(0x10111f5c, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x10111f5f, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
    II(0x10111f62, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10111f66, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x10111f69, 0x2)   jled(0x10111f72, 0x7);                /* jle 0x10111f72 */
    II(0x10111f6b, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x1);    /* mov dword [ebp-0x8], 0x1 */
l_0x10111f72:
    II(0x10111f72, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10111f74, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10111f77, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10111f79, 0x2)   jnzd(0x10111f84, 0x9);                /* jnz 0x10111f84 */
    II(0x10111f7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10111f7e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10111f82, 0x2)   jnzd(0x10111f86, 0x2);                /* jnz 0x10111f86 */
l_0x10111f84:
    II(0x10111f84, 0x2)   jmpd(0x10111f88, 0x2);                /* jmp 0x10111f88 */
l_0x10111f86:
    II(0x10111f86, 0x2)   jmpd(0x10111f53, -0x35);              /* jmp 0x10111f53 */
l_0x10111f88:
    II(0x10111f88, 0x5)   jmpd(0x10112201, 0x274);              /* jmp 0x10112201 */
l_0x10111f8d:
    II(0x10111f8d, 0x5)   calld(/* sys */ 0x1016b208, 0x59276); /* call 0x1016b208 */
    II(0x10111f92, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10111f95, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x10111f98, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10111f9b, 0x5)   calld(/* sys */ 0x1016c298, 0x5a2f8); /* call 0x1016c298 */
    II(0x10111fa0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10111fa4, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x10111fa7, 0x2)   jnzd(0x10111fb1, 0x8);                /* jnz 0x10111fb1 */
    II(0x10111fa9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10111fac, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x10));   /* cmp eax, [ebp-0x10] */
    II(0x10111faf, 0x2)   jzd(0x10111fb3, 0x2);                 /* jz 0x10111fb3 */
l_0x10111fb1:
    II(0x10111fb1, 0x2)   jmpd(0x10111fbb, 0x8);                /* jmp 0x10111fbb */
l_0x10111fb3:
    II(0x10111fb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10111fb6, 0x3)   cmp(eax, memd_a32(ss, ebp - 0xc));    /* cmp eax, [ebp-0xc] */
    II(0x10111fb9, 0x2)   jzd(0x10111fcf, 0x14);                /* jz 0x10111fcf */
l_0x10111fbb:
    II(0x10111fbb, 0x5)   calld(0x101482f4, 0x36334);           /* call 0x101482f4 */
    II(0x10111fc0, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10111fc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10111fc6, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10111fc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10111fcc, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x10111fcf:
    II(0x10111fcf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10111fd3, 0x5)   calld(sys_tolower, 0x60abd);          /* call 0x10172a95 */
    II(0x10111fd8, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10111fdb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10111fdf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10111fe1, 0x2)   jled(0x10111fee, 0xb);                /* jle 0x10111fee */
    II(0x10111fe3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10111fe7, 0x5)   cmp(eax, 0x7000);                     /* cmp eax, 0x7000 */
    II(0x10111fec, 0x2)   jld(0x10111ff0, 0x2);                 /* jl 0x10111ff0 */
l_0x10111fee:
    II(0x10111fee, 0x2)   jmpd(0x10111ff4, 0x4);                /* jmp 0x10111ff4 */
l_0x10111ff0:
    II(0x10111ff0, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x10111ff4:
    II(0x10111ff4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10111ff7, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10111ffa, 0x5)   jmpd(0x10112173, 0x174);              /* jmp 0x10112173 */
l_0x10111fff:
    II(0x10111fff, 0x5)   calld(0x10109b8a, -0x847a);           /* call 0x10109b8a */
    II(0x10112004, 0x5)   calld(0x10111745, -0x8c4);            /* call 0x10111745 */
    II(0x10112009, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x1011200c, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10112010, 0x2)   jzd(0x1011201b, 0x9);                 /* jz 0x1011201b */
    II(0x10112012, 0x9)   mov(memw_a32(ds, 0x101c4e4e), 0xffff); /* mov word [0x101c4e4e], 0xffff */
l_0x1011201b:
    II(0x1011201b, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
    II(0x1011201f, 0x5)   jmpd(0x101121fc, 0x1d8);              /* jmp 0x101121fc */
l_0x10112024:
    II(0x10112024, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10112028, 0x3)   cmp(eax, 0xc);                        /* cmp eax, 0xc */
    II(0x1011202b, 0x2)   jnzd(0x10112033, 0x6);                /* jnz 0x10112033 */
    II(0x1011202d, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0x1);   /* mov byte [ebp-0x38], 0x1 */
    II(0x10112031, 0x2)   jmpd(0x10112037, 0x4);                /* jmp 0x10112037 */
l_0x10112033:
    II(0x10112033, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0);     /* mov byte [ebp-0x38], 0x0 */
l_0x10112037:
    II(0x10112037, 0x3)   mov(al, memb_a32(ss, ebp - 0x38));    /* mov al, [ebp-0x38] */
    II(0x1011203a, 0x3)   mov(memb_a32(ss, ebp - 0x3c), al);    /* mov [ebp-0x3c], al */
    II(0x1011203d, 0x5)   calld(0x10109b8a, -0x84b8);           /* call 0x10109b8a */
    II(0x10112042, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10112044, 0x3)   mov(dl, memb_a32(ss, ebp - 0x3c));    /* mov dl, [ebp-0x3c] */
    II(0x10112047, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10112049, 0x5)   calld(0x1013843f, 0x263f1);           /* call 0x1013843f */
    II(0x1011204e, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10112051, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0);     /* cmp word [ebp-0x28], 0x0 */
    II(0x10112056, 0x2)   jzd(0x1011208e, 0x36);                /* jz 0x1011208e */
    II(0x10112058, 0x4)   cmp(memb_a32(ss, ebp - 0x3c), 0);     /* cmp byte [ebp-0x3c], 0x0 */
    II(0x1011205c, 0x2)   jzd(0x1011206d, 0xf);                 /* jz 0x1011206d */
    II(0x1011205e, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x10112063, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x10112068, 0x5)   calld(0x100caafc, -0x47571);          /* call 0x100caafc */
l_0x1011206d:
    II(0x1011206d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x10112071, 0x5)   mov(eax, 0x3d);                       /* mov eax, 0x3d */
    II(0x10112076, 0x5)   calld(0x100caafc, -0x4757f);          /* call 0x100caafc */
    II(0x1011207b, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x10112080, 0x5)   calld(0x100ff0ba, -0x12fcb);          /* call 0x100ff0ba */
    II(0x10112085, 0x9)   mov(memw_a32(ds, 0x101c4e4e), 0xffff); /* mov word [0x101c4e4e], 0xffff */
l_0x1011208e:
    II(0x1011208e, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x10112092, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
    II(0x10112096, 0x5)   jmpd(0x101121fc, 0x161);              /* jmp 0x101121fc */
l_0x1011209b:
    II(0x1011209b, 0x5)   calld(0x10109b8a, -0x8516);           /* call 0x10109b8a */
    II(0x101120a0, 0x5)   calld(0x1010ff32, -0x2173);           /* call 0x1010ff32 */
    II(0x101120a5, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x101120a8, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x101120ac, 0x2)   jzd(0x101120b7, 0x9);                 /* jz 0x101120b7 */
    II(0x101120ae, 0x9)   mov(memw_a32(ds, 0x101c4e4e), 0xffff); /* mov word [0x101c4e4e], 0xffff */
l_0x101120b7:
    II(0x101120b7, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
    II(0x101120bb, 0x5)   jmpd(0x101121fc, 0x13c);              /* jmp 0x101121fc */
l_0x101120c0:
    II(0x101120c0, 0x5)   calld(0x10109c90, -0x8435);           /* call 0x10109c90 */
    II(0x101120c5, 0x5)   calld(0x101232e5, 0x1121b);           /* call 0x101232e5 */
    II(0x101120ca, 0x5)   calld(0x10109c29, -0x84a6);           /* call 0x10109c29 */
    II(0x101120cf, 0x5)   calld(0x101482f4, 0x36220);           /* call 0x101482f4 */
    II(0x101120d4, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x101120d7, 0x5)   jmpd(0x101121fc, 0x120);              /* jmp 0x101121fc */
l_0x101120dc:
    II(0x101120dc, 0x5)   calld(/* sys */ 0x1016be34, 0x59d53); /* call 0x1016be34 */
    II(0x101120e1, 0x5)   calld(0x10109b8a, -0x855c);           /* call 0x10109b8a */
    II(0x101120e6, 0x5)   calld(my_play_video_company, 0x3714); /* call 0x101157ff */
    II(0x101120eb, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x101120ef, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
    II(0x101120f3, 0x5)   jmpd(0x101121fc, 0x104);              /* jmp 0x101121fc */
l_0x101120f8:
    II(0x101120f8, 0x5)   calld(0x10109b8a, -0x8573);           /* call 0x10109b8a */
    II(0x101120fd, 0x5)   calld(0x1010c16c, -0x5f96);           /* call 0x1010c16c */
    II(0x10112102, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x10112106, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
    II(0x1011210a, 0x5)   jmpd(0x101121fc, 0xed);               /* jmp 0x101121fc */
l_0x1011210f:
    II(0x1011210f, 0x5)   calld(0x10109b8a, -0x858a);           /* call 0x10109b8a */
    II(0x10112114, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10112119, 0x5)   calld(0x100ef3a0, -0x22d7e);          /* call 0x100ef3a0 */
l_0x1011211e:
    II(0x1011211e, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10112123, 0x5)   mov(edx, 0xffffffff);                 /* mov edx, 0xffffffff */
    II(0x10112128, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1011212b, 0x5)   calld(0x1010c693, -0x5a9d);           /* call 0x1010c693 */
    II(0x10112130, 0x5)   jmpd(0x101121fc, 0xc7);               /* jmp 0x101121fc */
l_0x10112135:
    II(0x10112135, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10112139, 0x5)   cmp(eax, 0x7000);                     /* cmp eax, 0x7000 */
    II(0x1011213e, 0x2)   jld(0x1011216e, 0x2e);                /* jl 0x1011216e */
    II(0x10112140, 0x7)   add(memd_a32(ss, ebp - 0x28), 0xffff9000); /* add dword [ebp-0x28], 0xffff9000 */
    II(0x10112147, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x1011214b, 0x2)   jnzd(0x10112156, 0x9);                /* jnz 0x10112156 */
    II(0x1011214d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10112151, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x10112154, 0x2)   jbd(0x10112158, 0x2);                 /* jb 0x10112158 */
l_0x10112156:
    II(0x10112156, 0x2)   jmpd(0x1011216a, 0x12);               /* jmp 0x1011216a */
l_0x10112158:
    II(0x10112158, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1011215c, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x1011215f, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b901c)); /* mov eax, [eax+0x101b901c] */
    II(0x10112165, 0x5)   calld(0x100cfbbe, -0x425ac);          /* call 0x100cfbbe */
l_0x1011216a:
    II(0x1011216a, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
l_0x1011216e:
    II(0x1011216e, 0x5)   jmpd(0x101121fc, 0x89);               /* jmp 0x101121fc */
l_0x10112173:
    II(0x10112173, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10112176, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x10112179, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x4c);  /* cmp word [ebp-0x40], 0x4c */
    II(0x1011217e, 0x2)   jbd(0x101121ca, 0x4a);                /* jb 0x101121ca */
    II(0x10112180, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x4c);  /* cmp word [ebp-0x40], 0x4c */
    II(0x10112185, 0x6)   jbed(0x10112024, -0x167);             /* jbe dword 0x10112024 */
    II(0x1011218b, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x4e);  /* cmp word [ebp-0x40], 0x4e */
    II(0x10112190, 0x2)   jbd(0x101121c5, 0x33);                /* jb 0x101121c5 */
    II(0x10112192, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x4e);  /* cmp word [ebp-0x40], 0x4e */
    II(0x10112197, 0x6)   jbed(0x10111fff, -0x19e);             /* jbe dword 0x10111fff */
    II(0x1011219d, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x53);  /* cmp word [ebp-0x40], 0x53 */
    II(0x101121a2, 0x2)   jbd(0x101121c0, 0x1c);                /* jb 0x101121c0 */
    II(0x101121a4, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x53);  /* cmp word [ebp-0x40], 0x53 */
    II(0x101121a9, 0x6)   jbed(0x101120c0, -0xef);              /* jbe dword 0x101120c0 */
    II(0x101121af, 0x6)   cmp(memw_a32(ss, ebp - 0x40), 0x148); /* cmp word [ebp-0x40], 0x148 */
    II(0x101121b5, 0x6)   jzd(0x1011211e, -0x9d);               /* jz dword 0x1011211e */
    II(0x101121bb, 0x5)   jmpd(0x10112135, -0x8b);              /* jmp 0x10112135 */
l_0x101121c0:
    II(0x101121c0, 0x5)   jmpd(0x10112135, -0x90);              /* jmp 0x10112135 */
l_0x101121c5:
    II(0x101121c5, 0x5)   jmpd(0x1011209b, -0x12f);             /* jmp 0x1011209b */
l_0x101121ca:
    II(0x101121ca, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x45);  /* cmp word [ebp-0x40], 0x45 */
    II(0x101121cf, 0x2)   jbd(0x101121ec, 0x1b);                /* jb 0x101121ec */
    II(0x101121d1, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x45);  /* cmp word [ebp-0x40], 0x45 */
    II(0x101121d6, 0x6)   jbed(0x1011210f, -0xcd);              /* jbe dword 0x1011210f */
    II(0x101121dc, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x49);  /* cmp word [ebp-0x40], 0x49 */
    II(0x101121e1, 0x6)   jzd(0x101120dc, -0x10b);              /* jz dword 0x101120dc */
    II(0x101121e7, 0x5)   jmpd(0x10112135, -0xb7);              /* jmp 0x10112135 */
l_0x101121ec:
    II(0x101121ec, 0x5)   cmp(memw_a32(ss, ebp - 0x40), 0x43);  /* cmp word [ebp-0x40], 0x43 */
    II(0x101121f1, 0x6)   jzd(0x101120f8, -0xff);               /* jz dword 0x101120f8 */
    II(0x101121f7, 0x5)   jmpd(0x10112135, -0xc7);              /* jmp 0x10112135 */
l_0x101121fc:
    II(0x101121fc, 0x5)   jmpd(0x10111f2c, -0x2d5);             /* jmp 0x10111f2c */
l_0x10112201:
    II(0x10112201, 0x5)   jmpd(0x10111e71, -0x395);             /* jmp 0x10111e71 */
FUNC_END

