FUNC_BEGIN(0x10162a8b, 0x96469db9933e7d4b, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xbd, 0x32, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x80, 0x3d, 0xfe, 0xb0, 0x1c, 0x10, 0, 0x75, 0x49, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x14, 0x7d, 0x23, 0xf, 0xbf, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0xc7, 0x80, 0x84, 0xb0, 0x1c, 0x10, 0xe6, 0xaa, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0x1, 0xd2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x82, 0xd4, 0xb0, 0x1c, 0x10, 0xeb, 0xce, 0xc6, 0x5, 0xfe, 0xb0, 0x1c, 0x10, 0x1, 0xc6, 0x5, 0x78, 0x39, 0x1c, 0x10, 0, 0x80, 0x3d, 0x78, 0x39, 0x1c, 0x10, 0, 0xf, 0x85, 0xad, 0x1, 0, 0, 0xa1, 0xfa, 0xb0, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0xd4, 0xb0, 0x1c, 0x10, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x13, 0x7d, 0x31, 0xf, 0xbf, 0x5d, 0xfc, 0xb8, 0x13, 0, 0, 0, 0x29, 0xd8, 0x89, 0xc3, 0x1, 0xdb, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0xba, 0xd4, 0xb0, 0x1c, 0x10, 0x1, 0xd0, 0x8d, 0x50, 0x2, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0xb9, 0xd4, 0xb0, 0x1c, 0x10, 0x1, 0xc8, 0xe8, 0x27, 0x36, 0, 0, 0xe8, 0x9f, 0x57, 0xfe, 0xff, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x89, 0x45, 0xf4, 0x81, 0x7d, 0xf4, 0xdc, 0x34, 0x12, 0, 0x76, 0x7, 0xc7, 0x45, 0xf4, 0xdc, 0x34, 0x12, 0, 0x8b, 0x15, 0xfa, 0xb0, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf4, 0x89, 0x82, 0x84, 0xb0, 0x1c, 0x10, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x13, 0x7d, 0x1d, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0x8b, 0x80, 0xd2, 0xb0, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x84, 0xb0, 0x1c, 0x10, 0x3b, 0x45, 0xf4, 0x72, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xeb, 0xd0, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x13, 0x7d, 0x33, 0xf, 0xbf, 0x5d, 0xfc, 0xb8, 0x13, 0, 0, 0, 0x29, 0xd8, 0x89, 0xc3, 0x1, 0xdb, 0xf, 0xbf, 0x55, 0xfc, 0x1, 0xd2, 0xb8, 0xd4, 0xb0, 0x1c, 0x10, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0x89, 0xc1, 0xb8, 0xd4, 0xb0, 0x1c, 0x10, 0x1, 0xc8, 0x83, 0xc0, 0x2, 0xe8, 0x81, 0x35, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0x1, 0xd2, 0x66, 0x8b, 0x1d, 0xfc, 0xb0, 0x1c, 0x10, 0x66, 0x89, 0x9a, 0xd4, 0xb0, 0x1c, 0x10, 0x8b, 0x15, 0xfa, 0xb0, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x42, 0xbb, 0x14, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x66, 0x89, 0x15, 0xfc, 0xb0, 0x1c, 0x10, 0x8b, 0x55, 0xf4, 0x8d, 0x14, 0x52, 0xd1, 0xea, 0x89, 0x55, 0xf0, 0x81, 0x7d, 0xf0, 0x37, 0x5d, 0, 0, 0x73, 0x7, 0xc7, 0x45, 0xf0, 0x37, 0x5d, 0, 0, 0x81, 0x7d, 0xf0, 0x5c, 0x9b, 0, 0, 0x76, 0x7, 0xc7, 0x45, 0xf0, 0x5c, 0x9b, 0, 0, 0xa1, 0xe6, 0xb0, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x84, 0xb0, 0x1c, 0x10, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x3, 0x45, 0xf0, 0xa3, 0x84, 0xdd, 0x1b, 0x10, 0x81, 0x7d, 0xf4, 0x5c, 0x9b, 0, 0, 0x73, 0x9, 0x81, 0x45, 0xf4, 0x5c, 0x9b, 0, 0, 0xeb, 0x3, 0xd1, 0x65, 0xf4, 0x8b, 0x45, 0xf4, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x73, 0x8, 0x8b, 0x45, 0xf4, 0xa3, 0x84, 0xdd, 0x1b, 0x10, 0x81, 0x3d, 0x84, 0xdd, 0x1b, 0x10, 0xe6, 0xaa, 0, 0, 0x73, 0xa, 0xc7, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0xe6, 0xaa, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10162a8b, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10162a90, 0x5)   calld(sys_check_available_stack_size, 0x32bd); /* call 0x10165d52 */
    II(0x10162a95, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10162a96, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10162a97, 0x1)   pushd(edx);                           /* push edx */
    II(0x10162a98, 0x1)   pushd(esi);                           /* push esi */
    II(0x10162a99, 0x1)   pushd(edi);                           /* push edi */
    II(0x10162a9a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10162a9b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10162a9d, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10162aa3, 0x7)   cmp(memb_a32(ds, 0x101cb0fe), 0);     /* cmp byte [0x101cb0fe], 0x0 */
    II(0x10162aaa, 0x2)   jnzd(0x10162af5, 0x49);               /* jnz 0x10162af5 */
    II(0x10162aac, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
    II(0x10162ab3, 0x2)   jmpd(0x10162abb, 0x6);                /* jmp 0x10162abb */
l_0x10162ab5:
    II(0x10162ab5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10162ab8, 0x3)   inc(memd_a32(ss, ebp - 0x4));         /* inc dword [ebp-0x4] */
l_0x10162abb:
    II(0x10162abb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10162abf, 0x3)   cmp(eax, 0x14);                       /* cmp eax, 0x14 */
    II(0x10162ac2, 0x2)   jged(0x10162ae7, 0x23);               /* jge 0x10162ae7 */
    II(0x10162ac4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10162ac8, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10162acb, 0xa)   mov(memd_a32(ds, eax + 0x101cb084), 0xaae6); /* mov dword [eax+0x101cb084], 0xaae6 */
    II(0x10162ad5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10162ad9, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10162adb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10162ade, 0x7)   mov(memw_a32(ds, edx + 0x101cb0d4), ax); /* mov [edx+0x101cb0d4], ax */
    II(0x10162ae5, 0x2)   jmpd(0x10162ab5, -0x32);              /* jmp 0x10162ab5 */
l_0x10162ae7:
    II(0x10162ae7, 0x7)   mov(memb_a32(ds, 0x101cb0fe), 0x1);   /* mov byte [0x101cb0fe], 0x1 */
    II(0x10162aee, 0x7)   mov(memb_a32(ds, 0x101c3978), 0);     /* mov byte [0x101c3978], 0x0 */
l_0x10162af5:
    II(0x10162af5, 0x7)   cmp(memb_a32(ds, 0x101c3978), 0);     /* cmp byte [0x101c3978], 0x0 */
    II(0x10162afc, 0x6)   jnzd(0x10162caf, 0x1ad);              /* jnz dword 0x10162caf */
    II(0x10162b02, 0x5)   mov(eax, memd_a32(ds, 0x101cb0fa));   /* mov eax, [0x101cb0fa] */
    II(0x10162b07, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10162b0a, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10162b0c, 0x7)   mov(ax, memw_a32(ds, eax + 0x101cb0d4)); /* mov ax, [eax+0x101cb0d4] */
    II(0x10162b13, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10162b16, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10162b1a, 0x3)   cmp(eax, 0x13);                       /* cmp eax, 0x13 */
    II(0x10162b1d, 0x2)   jged(0x10162b50, 0x31);               /* jge 0x10162b50 */
    II(0x10162b1f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x10162b23, 0x5)   mov(eax, 0x13);                       /* mov eax, 0x13 */
    II(0x10162b28, 0x2)   sub(eax, ebx);                        /* sub eax, ebx */
    II(0x10162b2a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10162b2c, 0x2)   add(ebx, ebx);                        /* add ebx, ebx */
    II(0x10162b2e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10162b32, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10162b34, 0x5)   mov(edx, 0x101cb0d4);                 /* mov edx, 0x101cb0d4 */
    II(0x10162b39, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10162b3b, 0x3)   lea(edx, eax + 0x2);                  /* lea edx, [eax+0x2] */
    II(0x10162b3e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10162b42, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10162b44, 0x5)   mov(ecx, 0x101cb0d4);                 /* mov ecx, 0x101cb0d4 */
    II(0x10162b49, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x10162b4b, 0x5)   calld(/* sys */ 0x10166177, 0x3627);  /* call 0x10166177 */
l_0x10162b50:
    II(0x10162b50, 0x5)   calld(0x101482f4, -0x1a861);          /* call 0x101482f4 */
    II(0x10162b55, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x10162b5b, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10162b5e, 0x7)   cmp(memd_a32(ss, ebp - 0xc), 0x1234dc); /* cmp dword [ebp-0xc], 0x1234dc */
    II(0x10162b65, 0x2)   jbed(0x10162b6e, 0x7);                /* jbe 0x10162b6e */
    II(0x10162b67, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x1234dc); /* mov dword [ebp-0xc], 0x1234dc */
l_0x10162b6e:
    II(0x10162b6e, 0x6)   mov(edx, memd_a32(ds, 0x101cb0fa));   /* mov edx, [0x101cb0fa] */
    II(0x10162b74, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10162b77, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10162b7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10162b7d, 0x6)   mov(memd_a32(ds, edx + 0x101cb084), eax); /* mov [edx+0x101cb084], eax */
    II(0x10162b83, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
l_0x10162b8a:
    II(0x10162b8a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10162b8e, 0x3)   cmp(eax, 0x13);                       /* cmp eax, 0x13 */
    II(0x10162b91, 0x2)   jged(0x10162bb0, 0x1d);               /* jge 0x10162bb0 */
    II(0x10162b93, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10162b97, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10162b99, 0x6)   mov(eax, memd_a32(ds, eax + 0x101cb0d2)); /* mov eax, [eax+0x101cb0d2] */
    II(0x10162b9f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10162ba2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10162ba5, 0x6)   mov(eax, memd_a32(ds, eax + 0x101cb084)); /* mov eax, [eax+0x101cb084] */
    II(0x10162bab, 0x3)   cmp(eax, memd_a32(ss, ebp - 0xc));    /* cmp eax, [ebp-0xc] */
    II(0x10162bae, 0x2)   jbd(0x10162bb2, 0x2);                 /* jb 0x10162bb2 */
l_0x10162bb0:
    II(0x10162bb0, 0x2)   jmpd(0x10162bba, 0x8);                /* jmp 0x10162bba */
l_0x10162bb2:
    II(0x10162bb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10162bb5, 0x3)   inc(memd_a32(ss, ebp - 0x4));         /* inc dword [ebp-0x4] */
    II(0x10162bb8, 0x2)   jmpd(0x10162b8a, -0x30);              /* jmp 0x10162b8a */
l_0x10162bba:
    II(0x10162bba, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10162bbe, 0x3)   cmp(eax, 0x13);                       /* cmp eax, 0x13 */
    II(0x10162bc1, 0x2)   jged(0x10162bf6, 0x33);               /* jge 0x10162bf6 */
    II(0x10162bc3, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x10162bc7, 0x5)   mov(eax, 0x13);                       /* mov eax, 0x13 */
    II(0x10162bcc, 0x2)   sub(eax, ebx);                        /* sub eax, ebx */
    II(0x10162bce, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10162bd0, 0x2)   add(ebx, ebx);                        /* add ebx, ebx */
    II(0x10162bd2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10162bd6, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10162bd8, 0x5)   mov(eax, 0x101cb0d4);                 /* mov eax, 0x101cb0d4 */
    II(0x10162bdd, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10162bdf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10162be3, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10162be5, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10162be7, 0x5)   mov(eax, 0x101cb0d4);                 /* mov eax, 0x101cb0d4 */
    II(0x10162bec, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x10162bee, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10162bf1, 0x5)   calld(/* sys */ 0x10166177, 0x3581);  /* call 0x10166177 */
l_0x10162bf6:
    II(0x10162bf6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10162bfa, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10162bfc, 0x7)   mov(bx, memw_a32(ds, 0x101cb0fc));    /* mov bx, [0x101cb0fc] */
    II(0x10162c03, 0x7)   mov(memw_a32(ds, edx + 0x101cb0d4), bx); /* mov [edx+0x101cb0d4], bx */
    II(0x10162c0a, 0x6)   mov(edx, memd_a32(ds, 0x101cb0fa));   /* mov edx, [0x101cb0fa] */
    II(0x10162c10, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10162c13, 0x1)   inc(edx);                             /* inc edx */
    II(0x10162c14, 0x5)   mov(ebx, 0x14);                       /* mov ebx, 0x14 */
    II(0x10162c19, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10162c1b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10162c1e, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10162c20, 0x7)   mov(memw_a32(ds, 0x101cb0fc), dx);    /* mov [0x101cb0fc], dx */
    II(0x10162c27, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10162c2a, 0x3)   lea(edx, edx + edx * 0x2);            /* lea edx, [edx+edx*2] */
    II(0x10162c2d, 0x2)   shr(edx, 0x1);                        /* shr edx, 1 */
    II(0x10162c2f, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x10162c32, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x5d37); /* cmp dword [ebp-0x10], 0x5d37 */
    II(0x10162c39, 0x2)   jaed(0x10162c42, 0x7);                /* jae 0x10162c42 */
    II(0x10162c3b, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x5d37); /* mov dword [ebp-0x10], 0x5d37 */
l_0x10162c42:
    II(0x10162c42, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x9b5c); /* cmp dword [ebp-0x10], 0x9b5c */
    II(0x10162c49, 0x2)   jbed(0x10162c52, 0x7);                /* jbe 0x10162c52 */
    II(0x10162c4b, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x9b5c); /* mov dword [ebp-0x10], 0x9b5c */
l_0x10162c52:
    II(0x10162c52, 0x5)   mov(eax, memd_a32(ds, 0x101cb0e6));   /* mov eax, [0x101cb0e6] */
    II(0x10162c57, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10162c5a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10162c5d, 0x6)   mov(eax, memd_a32(ds, eax + 0x101cb084)); /* mov eax, [eax+0x101cb084] */
    II(0x10162c63, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x10162c66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10162c69, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10162c6c, 0x5)   mov(memd_a32(ds, 0x101bdd84), eax);   /* mov [0x101bdd84], eax */
    II(0x10162c71, 0x7)   cmp(memd_a32(ss, ebp - 0xc), 0x9b5c); /* cmp dword [ebp-0xc], 0x9b5c */
    II(0x10162c78, 0x2)   jaed(0x10162c83, 0x9);                /* jae 0x10162c83 */
    II(0x10162c7a, 0x7)   add(memd_a32(ss, ebp - 0xc), 0x9b5c); /* add dword [ebp-0xc], 0x9b5c */
    II(0x10162c81, 0x2)   jmpd(0x10162c86, 0x3);                /* jmp 0x10162c86 */
l_0x10162c83:
    II(0x10162c83, 0x3)   shl(memd_a32(ss, ebp - 0xc), 0x1);    /* shl dword [ebp-0xc], 1 */
l_0x10162c86:
    II(0x10162c86, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10162c89, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x10162c8f, 0x2)   jaed(0x10162c99, 0x8);                /* jae 0x10162c99 */
    II(0x10162c91, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10162c94, 0x5)   mov(memd_a32(ds, 0x101bdd84), eax);   /* mov [0x101bdd84], eax */
l_0x10162c99:
    II(0x10162c99, 0xa)   cmp(memd_a32(ds, 0x101bdd84), 0xaae6); /* cmp dword [0x101bdd84], 0xaae6 */
    II(0x10162ca3, 0x2)   jaed(0x10162caf, 0xa);                /* jae 0x10162caf */
    II(0x10162ca5, 0xa)   mov(memd_a32(ds, 0x101bdd84), 0xaae6); /* mov dword [0x101bdd84], 0xaae6 */
l_0x10162caf:
    II(0x10162caf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10162cb1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10162cb2, 0x1)   popd(edi);                            /* pop edi */
    II(0x10162cb3, 0x1)   popd(esi);                            /* pop esi */
    II(0x10162cb4, 0x1)   popd(edx);                            /* pop edx */
    II(0x10162cb5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10162cb6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10162cb7, 0x1)   retd();                               /* ret */
FUNC_END

