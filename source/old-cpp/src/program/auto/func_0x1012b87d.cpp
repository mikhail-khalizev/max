FUNC_BEGIN(0x1012b87d, 0x8aaaa7e954536df2, 0x20, ({0x68, 0x5c, 0, 0, 0, 0xe8, 0xcb, 0xa4, 0x3, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x8, 0x8b, 0x55, 0xf0, 0x66, 0x2b, 0x2, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0xc, 0x8b, 0x55, 0xf0, 0x66, 0x2b, 0x42, 0x4, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x75, 0xe, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x8, 0x87, 0, 0, 0x89, 0x45, 0xcc, 0xeb, 0xc, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xfa, 0x86, 0, 0, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0xf, 0x84, 0xef, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0x10, 0x83, 0xf8, 0x6, 0x7d, 0x9, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0xeb, 0x1f, 0x8b, 0x55, 0xcc, 0x8b, 0x2, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xe4, 0x4a, 0x29, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x89, 0x45, 0xc8, 0xf, 0xbf, 0x5d, 0xe4, 0xf, 0xbf, 0x45, 0xc8, 0xc1, 0xe0, 0x2, 0x4b, 0x29, 0xc3, 0x8b, 0x45, 0xcc, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd3, 0x89, 0xda, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0xe, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x16, 0x1, 0xd0, 0x89, 0x45, 0xc4, 0xf, 0xbf, 0x55, 0x10, 0x83, 0xc2, 0x4, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x48, 0x6b, 0xc0, 0x5, 0x8b, 0x55, 0x10, 0x29, 0xc2, 0x89, 0x55, 0xbc, 0x8b, 0x55, 0xcc, 0x66, 0x8b, 0x2, 0xf, 0xaf, 0x45, 0xc0, 0x29, 0x45, 0xe0, 0x8b, 0x55, 0xc0, 0xc1, 0xe2, 0x2, 0xb8, 0x5, 0, 0, 0, 0x2b, 0x45, 0xbc, 0x29, 0xc2, 0x89, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x75, 0x12, 0x8b, 0x45, 0xcc, 0x66, 0x8b, 0, 0x89, 0x45, 0xb8, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x63, 0x8b, 0x45, 0xe0, 0x66, 0x3b, 0x45, 0xec, 0x7c, 0x2f, 0xf, 0xbf, 0x55, 0xe0, 0xf, 0xbf, 0x5d, 0xec, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8b, 0x55, 0xcc, 0x66, 0x3b, 0x2, 0x7e, 0x9, 0x8b, 0x45, 0xcc, 0x66, 0x8b, 0, 0x89, 0x45, 0xb8, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x2b, 0xc7, 0x45, 0xb8, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xe0, 0x29, 0xd0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xc0, 0x1, 0xd0, 0xf, 0xbf, 0x5d, 0xc0, 0x4b, 0x8d, 0x50, 0xfe, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xd0, 0x8b, 0x55, 0xb8, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xcc, 0x66, 0x3, 0x10, 0x2b, 0x55, 0xd0, 0x89, 0x55, 0xb4, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x66, 0x3b, 0x45, 0x10, 0xf, 0x8d, 0x8d, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd4, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x55, 0xe8, 0xf, 0xbf, 0x55, 0xd4, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xb4, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xf, 0xbf, 0x5d, 0xb8, 0xf, 0xaf, 0xc3, 0x1, 0xd0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xe8, 0xf, 0xaf, 0x45, 0xc8, 0x89, 0x45, 0xdc, 0x8b, 0x5d, 0xcc, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0xe, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x4d, 0xdc, 0xf, 0xaf, 0xc8, 0xf, 0xbf, 0x45, 0xd8, 0x3, 0x45, 0xc4, 0x1, 0xc8, 0xe8, 0x55, 0x39, 0x1, 0, 0x8b, 0x45, 0xf8, 0xff, 0x4d, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x75, 0xc, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x6, 0x85, 0, 0, 0x89, 0x45, 0xcc, 0xe9, 0x60, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x1012b87d, 0x5)   pushd(0x5c);                          /* push dword 0x5c */
    II(0x1012b882, 0x5)   calld(sys_check_available_stack_size, 0x3a4cb); /* call 0x10165d52 */
    II(0x1012b887, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012b888, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012b889, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012b88a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012b88c, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x1012b892, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012b895, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1012b898, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x1012b89b, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
//    II(0x1012b89e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012b8a1, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1012b8a5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1012b8a8, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x1012b8ab, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1012b8ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012b8b1, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x1012b8b5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1012b8b8, 0x4)   sub(ax, memw_a32(ds, edx + 0x4));     /* sub ax, [edx+0x4] */
    II(0x1012b8bc, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1012b8bf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1012b8c3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012b8c5, 0x2)   jnzd(0x1012b8d5, 0xe);                /* jnz 0x1012b8d5 */
    II(0x1012b8c7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1012b8cb, 0x5)   calld(my_get_res_data_by_id, 0x8708); /* call 0x10133fd8 */
    II(0x1012b8d0, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1012b8d3, 0x2)   jmpd(0x1012b8e1, 0xc);                /* jmp 0x1012b8e1 */
l_0x1012b8d5:
    II(0x1012b8d5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012b8d9, 0x5)   calld(my_get_res_data_by_id, 0x86fa); /* call 0x10133fd8 */
    II(0x1012b8de, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x1012b8e1:
    II(0x1012b8e1, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x1012b8e5, 0x6)   jzd(0x1012bada, 0x1ef);               /* jz dword 0x1012bada */
    II(0x1012b8eb, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x1012b8ef, 0x3)   cmp(eax, 0x6);                        /* cmp eax, 0x6 */
    II(0x1012b8f2, 0x2)   jged(0x1012b8fd, 0x9);                /* jge 0x1012b8fd */
    II(0x1012b8f4, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
    II(0x1012b8fb, 0x2)   jmpd(0x1012b91c, 0x1f);               /* jmp 0x1012b91c */
l_0x1012b8fd:
    II(0x1012b8fd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x1012b900, 0x2)   mov(eax, memd_a32(ds, edx));          /* mov eax, [edx] */
    II(0x1012b902, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012b905, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1012b909, 0x1)   dec(edx);                             /* dec edx */
    II(0x1012b90a, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1012b90c, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012b90e, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012b911, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1012b914, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x1012b916, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x1012b919, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
l_0x1012b91c:
    II(0x1012b91c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x1012b920, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x1012b924, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1012b927, 0x1)   dec(ebx);                             /* dec ebx */
    II(0x1012b928, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x1012b92a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1012b92d, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x1012b92f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012b932, 0x2)   sub(ebx, edx);                        /* sub ebx, edx */
    II(0x1012b934, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1012b936, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012b938, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012b93b, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012b93d, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012b93f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1012b942, 0x3)   mov(edx, memd_a32(ds, edx + 0xe));    /* mov edx, [edx+0xe] */
    II(0x1012b945, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012b948, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1012b94b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012b94e, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1012b951, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012b953, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1012b956, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x10)); /* movsx edx, word [ebp+0x10] */
    II(0x1012b95a, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x1012b95d, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x1012b962, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012b964, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012b967, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012b969, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x1012b96c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1012b96f, 0x1)   dec(eax);                             /* dec eax */
    II(0x1012b970, 0x3)   imul(eax, eax, 0x5);                  /* imul eax, eax, 0x5 */
    II(0x1012b973, 0x3)   mov(edx, memd_a32(ss, ebp + 0x10));   /* mov edx, [ebp+0x10] */
    II(0x1012b976, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1012b978, 0x3)   mov(memd_a32(ss, ebp - 0x44), edx);   /* mov [ebp-0x44], edx */
    II(0x1012b97b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x1012b97e, 0x3)   mov(ax, memw_a32(ds, edx));           /* mov ax, [edx] */
    II(0x1012b981, 0x4)   imul(eax, memd_a32(ss, ebp - 0x40));  /* imul eax, [ebp-0x40] */
    II(0x1012b985, 0x3)   sub(memd_a32(ss, ebp - 0x20), eax);   /* sub [ebp-0x20], eax */
    II(0x1012b988, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x1012b98b, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1012b98e, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1012b993, 0x3)   sub(eax, memd_a32(ss, ebp - 0x44));   /* sub eax, [ebp-0x44] */
    II(0x1012b996, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1012b998, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x1012b99b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012b99f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012b9a1, 0x2)   jnzd(0x1012b9b5, 0x12);               /* jnz 0x1012b9b5 */
    II(0x1012b9a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1012b9a6, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1012b9a9, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x1012b9ac, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x1012b9b3, 0x2)   jmpd(0x1012ba18, 0x63);               /* jmp 0x1012ba18 */
l_0x1012b9b5:
    II(0x1012b9b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1012b9b8, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x1012b9bc, 0x2)   jld(0x1012b9ed, 0x2f);                /* jl 0x1012b9ed */
    II(0x1012b9be, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x1012b9c2, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x1012b9c6, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012b9c8, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012b9cb, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012b9cd, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x1012b9d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1012b9d3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x1012b9d6, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x1012b9d9, 0x2)   jled(0x1012b9e4, 0x9);                /* jle 0x1012b9e4 */
    II(0x1012b9db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1012b9de, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1012b9e1, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
l_0x1012b9e4:
    II(0x1012b9e4, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x1012b9eb, 0x2)   jmpd(0x1012ba18, 0x2b);               /* jmp 0x1012ba18 */
l_0x1012b9ed:
    II(0x1012b9ed, 0x7)   mov(memd_a32(ss, ebp - 0x48), 0x1);   /* mov dword [ebp-0x48], 0x1 */
    II(0x1012b9f4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012b9f8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x1012b9fc, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012b9fe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012ba00, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x40)); /* movsx eax, word [ebp-0x40] */
    II(0x1012ba04, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012ba06, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x40)); /* movsx ebx, word [ebp-0x40] */
    II(0x1012ba0a, 0x1)   dec(ebx);                             /* dec ebx */
    II(0x1012ba0b, 0x3)   lea(edx, eax - 0x2);                  /* lea edx, [eax-0x2] */
    II(0x1012ba0e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012ba10, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012ba13, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012ba15, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
l_0x1012ba18:
    II(0x1012ba18, 0x3)   mov(edx, memd_a32(ss, ebp - 0x48));   /* mov edx, [ebp-0x48] */
    II(0x1012ba1b, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1012ba1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1012ba21, 0x3)   add(dx, memw_a32(ds, eax));           /* add dx, [eax] */
    II(0x1012ba24, 0x3)   sub(edx, memd_a32(ss, ebp - 0x30));   /* sub edx, [ebp-0x30] */
    II(0x1012ba27, 0x3)   mov(memd_a32(ss, ebp - 0x4c), edx);   /* mov [ebp-0x4c], edx */
    II(0x1012ba2a, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x1012ba31, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x1012ba38, 0x2)   jmpd(0x1012ba40, 0x6);                /* jmp 0x1012ba40 */
l_0x1012ba3a:
    II(0x1012ba3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1012ba3d, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
l_0x1012ba40:
    II(0x1012ba40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1012ba43, 0x4)   cmp(ax, memw_a32(ss, ebp + 0x10));    /* cmp ax, [ebp+0x10] */
    II(0x1012ba47, 0x6)   jged(0x1012bada, 0x8d);               /* jge dword 0x1012bada */
    II(0x1012ba4d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1012ba51, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x1012ba56, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012ba58, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012ba5b, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012ba5d, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x1012ba60, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1012ba64, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x1012ba69, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012ba6b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012ba6e, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012ba70, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4c)); /* movsx edx, word [ebp-0x4c] */
    II(0x1012ba74, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1012ba77, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1012ba7b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x48)); /* movsx ebx, word [ebp-0x48] */
    II(0x1012ba7f, 0x3)   imul(eax, ebx);                       /* imul eax, ebx */
    II(0x1012ba82, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012ba84, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1012ba87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1012ba8a, 0x4)   imul(eax, memd_a32(ss, ebp - 0x38));  /* imul eax, [ebp-0x38] */
    II(0x1012ba8e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1012ba91, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x34));   /* mov ebx, [ebp-0x34] */
    II(0x1012ba94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012ba97, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x1012ba9a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012ba9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012baa0, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1012baa3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012baa6, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x24)); /* movsx ecx, word [ebp-0x24] */
    II(0x1012baaa, 0x3)   imul(ecx, eax);                       /* imul ecx, eax */
    II(0x1012baad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1012bab1, 0x3)   add(eax, memd_a32(ss, ebp - 0x3c));   /* add eax, [ebp-0x3c] */
    II(0x1012bab4, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x1012bab6, 0x5)   calld(0x1013f410, 0x13955);           /* call 0x1013f410 */
    II(0x1012babb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012babe, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x1012bac1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1012bac5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012bac7, 0x2)   jnzd(0x1012bad5, 0xc);                /* jnz 0x1012bad5 */
    II(0x1012bac9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1012bacd, 0x5)   calld(my_get_res_data_by_id, 0x8506); /* call 0x10133fd8 */
    II(0x1012bad2, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x1012bad5:
    II(0x1012bad5, 0x5)   jmpd(0x1012ba3a, -0xa0);              /* jmp 0x1012ba3a */
l_0x1012bada:
    II(0x1012bada, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012badc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012badd, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012bade, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012badf, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

