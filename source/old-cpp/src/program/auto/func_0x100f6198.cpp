FUNC_BEGIN(0x100f6198, 0xfc70e5d5a4793b66, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xb0, 0xfb, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0x33, 0x4d, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x2, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x7c, 0xb, 0xf, 0xbf, 0x45, 0xfc, 0x3d, 0, 0x1, 0, 0, 0x7c, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0xe6, 0, 0, 0, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0xff, 0x4c, 0xff, 0xff, 0x98, 0x83, 0xf8, 0x1e, 0x7c, 0x14, 0xba, 0xe1, 0x25, 0x1a, 0x10, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0xc5, 0xbf, 0x4, 0, 0xe9, 0xbe, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0xeb, 0x6e, 0xe8, 0x54, 0xfe, 0x1, 0, 0xe8, 0x8f, 0xf7, 0xff, 0xff, 0xba, 0xe2, 0x25, 0x1a, 0x10, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0x9f, 0xbf, 0x4, 0, 0xe9, 0x73, 0, 0, 0, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0xb5, 0x4c, 0xff, 0xff, 0x83, 0xe8, 0x2, 0xf, 0xbf, 0xc8, 0x31, 0xdb, 0x8d, 0x55, 0xf0, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0x53, 0xb9, 0x4, 0, 0x89, 0xc2, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0xea, 0xbf, 0x4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xc4, 0xb8, 0x4, 0, 0xeb, 0x3c, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x24, 0xc8, 0x7, 0, 0x31, 0xd2, 0x88, 0xc2, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0x6b, 0xbb, 0x4, 0, 0xeb, 0x23, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xec, 0x66, 0x83, 0x7d, 0xec, 0x8, 0x72, 0x14, 0x66, 0x83, 0x7d, 0xec, 0x8, 0x76, 0x9c, 0x66, 0x83, 0x7d, 0xec, 0xd, 0xf, 0x84, 0x73, 0xff, 0xff, 0xff, 0xeb, 0xc6, 0xeb, 0xc4, 0xe8, 0x57, 0x47, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x6c, 0x47, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0x4, 0x35, 0xf9, 0xff, 0xe8, 0x5a, 0xfa, 0x1, 0, 0xc6, 0x45, 0xf8, 0x1, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f6198, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100f619d, 0x5)   calld(sys_check_available_stack_size, 0x6fbb0); /* call 0x10165d52 */
    II(0x100f61a2, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f61a3, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f61a4, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f61a5, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f61a6, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f61a7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f61a8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f61aa, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100f61b0, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f61b3, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f61b8, 0x5)   calld(0x100eaef0, -0xb2cd);           /* call 0x100eaef0 */
    II(0x100f61bd, 0x1)   cwde();                               /* cwde */
    II(0x100f61be, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f61c0, 0x2)   jnzd(0x100f61cb, 0x9);                /* jnz 0x100f61cb */
    II(0x100f61c2, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100f61c6, 0x5)   jmpd(0x100f62cd, 0x102);              /* jmp 0x100f62cd */
l_0x100f61cb:
    II(0x100f61cb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f61cf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f61d1, 0x2)   jld(0x100f61de, 0xb);                 /* jl 0x100f61de */
    II(0x100f61d3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f61d7, 0x5)   cmp(eax, 0x100);                      /* cmp eax, 0x100 */
    II(0x100f61dc, 0x2)   jld(0x100f61e7, 0x9);                 /* jl 0x100f61e7 */
l_0x100f61de:
    II(0x100f61de, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100f61e2, 0x5)   jmpd(0x100f62cd, 0xe6);               /* jmp 0x100f62cd */
l_0x100f61e7:
    II(0x100f61e7, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f61ec, 0x5)   calld(0x100eaef0, -0xb301);           /* call 0x100eaef0 */
    II(0x100f61f1, 0x1)   cwde();                               /* cwde */
    II(0x100f61f2, 0x3)   cmp(eax, 0x1e);                       /* cmp eax, 0x1e */
    II(0x100f61f5, 0x2)   jld(0x100f620b, 0x14);                /* jl 0x100f620b */
    II(0x100f61f7, 0x5)   mov(edx, 0x101a25e1);                 /* mov edx, 0x101a25e1 */ /* "" */
    II(0x100f61fc, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f6201, 0x5)   calld(0x101421cb, 0x4bfc5);           /* call 0x101421cb */
    II(0x100f6206, 0x5)   jmpd(0x100f62c9, 0xbe);               /* jmp 0x100f62c9 */
l_0x100f620b:
    II(0x100f620b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f620e, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100f6211, 0x2)   jmpd(0x100f6281, 0x6e);               /* jmp 0x100f6281 */
l_0x100f6213:
    II(0x100f6213, 0x5)   calld(0x1011606c, 0x1fe54);           /* call 0x1011606c */
    II(0x100f6218, 0x5)   calld(0x100f59ac, -0x871);            /* call 0x100f59ac */
    II(0x100f621d, 0x5)   mov(edx, 0x101a25e2);                 /* mov edx, 0x101a25e2 */ /* "" */
    II(0x100f6222, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f6227, 0x5)   calld(0x101421cb, 0x4bf9f);           /* call 0x101421cb */
    II(0x100f622c, 0x5)   jmpd(0x100f62a4, 0x73);               /* jmp 0x100f62a4 */
l_0x100f6231:
    II(0x100f6231, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f6236, 0x5)   calld(0x100eaef0, -0xb34b);           /* call 0x100eaef0 */
    II(0x100f623b, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x100f623e, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100f6241, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f6243, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x100f6246, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f624b, 0x5)   calld(0x10141ba3, 0x4b953);           /* call 0x10141ba3 */
    II(0x100f6250, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100f6252, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f6257, 0x5)   calld(0x10142246, 0x4bfea);           /* call 0x10142246 */
    II(0x100f625c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f625e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100f6261, 0x5)   calld(my_string_dtor, 0x4b8c4);       /* call 0x10141b2a */
    II(0x100f6266, 0x2)   jmpd(0x100f62a4, 0x3c);               /* jmp 0x100f62a4 */
l_0x100f6268:
    II(0x100f6268, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f626c, 0x5)   calld(sys_tolower, 0x7c824);          /* call 0x10172a95 */
    II(0x100f6271, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f6273, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100f6275, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f627a, 0x5)   calld(my_string_append_char, 0x4bb6b); /* call 0x10141dea */
    II(0x100f627f, 0x2)   jmpd(0x100f62a4, 0x23);               /* jmp 0x100f62a4 */
l_0x100f6281:
    II(0x100f6281, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f6284, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100f6287, 0x5)   cmp(memw_a32(ss, ebp - 0x14), 0x8);   /* cmp word [ebp-0x14], 0x8 */
    II(0x100f628c, 0x2)   jbd(0x100f62a2, 0x14);                /* jb 0x100f62a2 */
    II(0x100f628e, 0x5)   cmp(memw_a32(ss, ebp - 0x14), 0x8);   /* cmp word [ebp-0x14], 0x8 */
    II(0x100f6293, 0x2)   jbed(0x100f6231, -0x64);              /* jbe 0x100f6231 */
    II(0x100f6295, 0x5)   cmp(memw_a32(ss, ebp - 0x14), 0xd);   /* cmp word [ebp-0x14], 0xd */
    II(0x100f629a, 0x6)   jzd(0x100f6213, -0x8d);               /* jz dword 0x100f6213 */
    II(0x100f62a0, 0x2)   jmpd(0x100f6268, -0x3a);              /* jmp 0x100f6268 */
l_0x100f62a2:
    II(0x100f62a2, 0x2)   jmpd(0x100f6268, -0x3c);              /* jmp 0x100f6268 */
l_0x100f62a4:
    II(0x100f62a4, 0x5)   calld(0x100caa00, -0x2b8a9);          /* call 0x100caa00 */
    II(0x100f62a9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f62ae, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f62af, 0x5)   calld(0x100caa20, -0x2b894);          /* call 0x100caa20 */
    II(0x100f62b4, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f62b6, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f62b8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f62ba, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f62bf, 0x5)   calld(my_strobj_c_str_v2, -0x6cafc);  /* call 0x100897c8 */
    II(0x100f62c4, 0x5)   calld(0x10115d23, 0x1fa5a);           /* call 0x10115d23 */
l_0x100f62c9:
    II(0x100f62c9, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x100f62cd:
    II(0x100f62cd, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100f62d0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f62d2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f62d3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f62d4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f62d5, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f62d6, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f62d7, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f62d8, 0x1)   retd();                               /* ret */
FUNC_END

