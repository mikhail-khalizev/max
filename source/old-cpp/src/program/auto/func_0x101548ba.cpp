FUNC_BEGIN(0x101548ba, 0x88dce9681d31fdc8, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x8e, 0x14, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x8d, 0x17, 0xf2, 0xff, 0x84, 0xc0, 0x75, 0x9, 0x80, 0x3d, 0x80, 0x39, 0x1c, 0x10, 0, 0x74, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x88, 0x45, 0xf4, 0x80, 0x7d, 0xf4, 0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x96, 0x56, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1a, 0xc1, 0xe2, 0x6, 0x83, 0xc2, 0x20, 0x8b, 0x45, 0xfc, 0x66, 0x2b, 0x50, 0x16, 0x89, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1c, 0xc1, 0xe2, 0x6, 0x83, 0xc2, 0x20, 0x8b, 0x45, 0xfc, 0x66, 0x2b, 0x50, 0x18, 0x89, 0x55, 0xec, 0xf, 0xbf, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0xdf, 0x52, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x14, 0x1, 0x75, 0x2, 0xeb, 0x22, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x80, 0xdb, 0, 0, 0, 0xc0, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x90, 0xdb, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x90, 0xd9, 0, 0, 0, 0xeb, 0x20, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x80, 0xdb, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x90, 0xdb, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x90, 0xd9, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x23, 0x53, 0xff, 0xff, 0x80, 0x7d, 0xf4, 0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0xec, 0x55, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101548ba, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x101548bf, 0x5)   calld(sys_check_available_stack_size, 0x1148e); /* call 0x10165d52 */
    II(0x101548c4, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101548c5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101548c6, 0x1)   pushd(edx);                           /* push edx */
    II(0x101548c7, 0x1)   pushd(esi);                           /* push esi */
    II(0x101548c8, 0x1)   pushd(edi);                           /* push edi */
    II(0x101548c9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101548ca, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101548cc, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x101548d2, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x101548d5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101548d7, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x101548dc, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101548df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101548e2, 0x5)   calld(0x10076074, -0xde873);          /* call 0x10076074 */
    II(0x101548e7, 0x2)   test(al, al);                         /* test al, al */
    II(0x101548e9, 0x2)   jnzd(0x101548f4, 0x9);                /* jnz 0x101548f4 */
    II(0x101548eb, 0x7)   cmp(memb_a32(ds, 0x101c3980), 0);     /* cmp byte [0x101c3980], 0x0 */
    II(0x101548f2, 0x2)   jzd(0x101548fa, 0x6);                 /* jz 0x101548fa */
l_0x101548f4:
    II(0x101548f4, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x101548f8, 0x2)   jmpd(0x101548fe, 0x4);                /* jmp 0x101548fe */
l_0x101548fa:
    II(0x101548fa, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x101548fe:
    II(0x101548fe, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10154901, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x10154904, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x10154908, 0x2)   jzd(0x10154912, 0x8);                 /* jz 0x10154912 */
    II(0x1015490a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015490d, 0x5)   calld(0x10149fa8, -0xa96a);           /* call 0x10149fa8 */
l_0x10154912:
    II(0x10154912, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154915, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
    II(0x10154919, 0x3)   shl(edx, 0x6);                        /* shl edx, 0x6 */
    II(0x1015491c, 0x3)   add(edx, 0x20);                       /* add edx, 0x20 */
    II(0x1015491f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154922, 0x4)   sub(dx, memw_a32(ds, eax + 0x16));    /* sub dx, [eax+0x16] */
    II(0x10154926, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x10154929, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015492c, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x10154930, 0x3)   shl(edx, 0x6);                        /* shl edx, 0x6 */
    II(0x10154933, 0x3)   add(edx, 0x20);                       /* add edx, 0x20 */
    II(0x10154936, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154939, 0x4)   sub(dx, memw_a32(ds, eax + 0x18));    /* sub dx, [eax+0x18] */
    II(0x1015493d, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x10154940, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x10154944, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10154948, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015494b, 0x5)   calld(0x10149c2f, -0xad21);           /* call 0x10149c2f */
    II(0x10154950, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154953, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x10154957, 0x2)   jzd(0x10154962, 0x9);                 /* jz 0x10154962 */
    II(0x10154959, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015495c, 0x4)   test(memb_a32(ds, eax + 0x14), 0x1);  /* test byte [eax+0x14], 0x1 */
    II(0x10154960, 0x2)   jnzd(0x10154964, 0x2);                /* jnz 0x10154964 */
l_0x10154962:
    II(0x10154962, 0x2)   jmpd(0x10154986, 0x22);               /* jmp 0x10154986 */
l_0x10154964:
    II(0x10154964, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154967, 0x9)   mov(memw_a32(ds, eax + 0xdb), 0xffc0); /* mov word [eax+0xdb], 0xffc0 */
    II(0x10154970, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154973, 0x7)   mov(dx, memw_a32(ds, eax + 0xdb));    /* mov dx, [eax+0xdb] */
//    II(0x1015497a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015497d, 0x7)   mov(memw_a32(ds, eax + 0xd9), dx);    /* mov [eax+0xd9], dx */
    II(0x10154984, 0x2)   jmpd(0x101549a6, 0x20);               /* jmp 0x101549a6 */
l_0x10154986:
    II(0x10154986, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154989, 0x9)   mov(memw_a32(ds, eax + 0xdb), 0);     /* mov word [eax+0xdb], 0x0 */
    II(0x10154992, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154995, 0x7)   mov(dx, memw_a32(ds, eax + 0xdb));    /* mov dx, [eax+0xdb] */
//    II(0x1015499c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015499f, 0x7)   mov(memw_a32(ds, eax + 0xd9), dx);    /* mov [eax+0xd9], dx */
l_0x101549a6:
    II(0x101549a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101549a9, 0x5)   calld(0x10149cd1, -0xacdd);           /* call 0x10149cd1 */
    II(0x101549ae, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x101549b2, 0x2)   jzd(0x101549bc, 0x8);                 /* jz 0x101549bc */
    II(0x101549b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101549b7, 0x5)   calld(0x10149fa8, -0xaa14);           /* call 0x10149fa8 */
l_0x101549bc:
    II(0x101549bc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101549be, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101549bf, 0x1)   popd(edi);                            /* pop edi */
    II(0x101549c0, 0x1)   popd(esi);                            /* pop esi */
    II(0x101549c1, 0x1)   popd(edx);                            /* pop edx */
    II(0x101549c2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101549c3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101549c4, 0x1)   retd();                               /* ret */
FUNC_END

