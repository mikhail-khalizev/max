FUNC_BEGIN(0x1009f5b7, 0x1e37305f21efa7b2, 0x20, ({0x68, 0x88, 0, 0, 0, 0xe8, 0x91, 0x67, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x6c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xfc, 0xe8, 0xd2, 0xbe, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x70, 0x7, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x77, 0x6f, 0xfd, 0xff, 0xe8, 0x50, 0x34, 0xb, 0, 0x84, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x50, 0x7, 0, 0, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x25, 0x7, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x2f, 0x6f, 0xfd, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x5, 0x7, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x66, 0x8b, 0, 0x89, 0x45, 0xec, 0x80, 0x4d, 0xf0, 0x1, 0xe8, 0x56, 0xb0, 0xfe, 0xff, 0x98, 0x50, 0xb9, 0x3, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x3b, 0x6f, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0x22, 0x8, 0x8, 0, 0x89, 0x45, 0xcc, 0x80, 0x65, 0xf0, 0xfe, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0xf, 0x85, 0xc, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0xb2, 0x6e, 0xfd, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x83, 0xea, 0x5, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xa7, 0x77, 0xfd, 0xff, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x91, 0x6e, 0xfd, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x83, 0xc2, 0x6, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x48, 0xe8, 0x8a, 0xa0, 0xfe, 0xff, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x6c, 0x6e, 0xfd, 0xff, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x8d, 0x50, 0xfb, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x61, 0x77, 0xfd, 0xff, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x4b, 0x6e, 0xfd, 0xff, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x83, 0xc2, 0x6, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x48, 0xe8, 0x44, 0xa0, 0xfe, 0xff, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x2a, 0, 0x8b, 0x45, 0xbc, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x1f, 0xeb, 0x7, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x1f, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1d, 0xc1, 0xf8, 0x10, 0x3b, 0x45, 0xc4, 0xf, 0x8d, 0x92, 0x1, 0, 0, 0x8b, 0x45, 0xc0, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x21, 0xeb, 0x7, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x21, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x3b, 0x45, 0xc8, 0xf, 0x8d, 0x68, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x1f, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1d, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0x1, 0xc0, 0x8b, 0x15, 0x1c, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xb8, 0xf, 0xbf, 0x55, 0xb8, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc2, 0x74, 0x8, 0x66, 0xf7, 0x45, 0xb8, 0x1f, 0, 0x75, 0x5, 0xe9, 0x1b, 0x1, 0, 0, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x1f, 0x8d, 0x45, 0xb4, 0xe8, 0x7a, 0x66, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0xd9, 0x6d, 0xfd, 0xff, 0xe8, 0xa5, 0x14, 0xfd, 0xff, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x2a, 0, 0x74, 0xd, 0x8b, 0x45, 0xac, 0x66, 0x3b, 0x45, 0xb0, 0xf, 0x8e, 0xe2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1f, 0x48, 0x89, 0x45, 0xa8, 0xeb, 0x6, 0x8b, 0x45, 0xa8, 0xff, 0x45, 0xa8, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1d, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xa8, 0x40, 0x39, 0xc2, 0xf, 0x8f, 0xb9, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x21, 0x48, 0x89, 0x45, 0xa4, 0xeb, 0x6, 0x8b, 0x45, 0xa4, 0xff, 0x45, 0xa4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xa4, 0x40, 0x39, 0xc2, 0xf, 0x8f, 0x8b, 0, 0, 0, 0xf, 0xbf, 0x55, 0xa4, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xa8, 0x1, 0xd0, 0x1, 0xc0, 0x8b, 0x15, 0x1c, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xb8, 0xf, 0xbf, 0x55, 0xb8, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc2, 0x75, 0x17, 0xf, 0xbf, 0x55, 0xa4, 0xf, 0xbf, 0x45, 0xa8, 0xe8, 0x58, 0x44, 0xfd, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x83, 0xf8, 0x8, 0x75, 0x2, 0xeb, 0x1c, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x1f, 0x8d, 0x45, 0xa0, 0xe8, 0xa5, 0x65, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0x83, 0x6, 0x8, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x1e, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x2a, 0x1, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x1f, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x5d, 0x92, 0xfe, 0xff, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xac, 0xe9, 0x59, 0xff, 0xff, 0xff, 0xe9, 0x2b, 0xff, 0xff, 0xff, 0xe9, 0x7f, 0xfe, 0xff, 0xff, 0xe9, 0x55, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x2a, 0, 0x74, 0x56, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x5f, 0x6c, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x8b, 0x52, 0x23, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x49, 0x6c, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x8b, 0x52, 0x25, 0x66, 0x89, 0x50, 0x43, 0x31, 0xdb, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x88, 0x6c, 0xfd, 0xff, 0xe8, 0x6, 0x37, 0xc, 0, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xa1, 0x93, 0xfe, 0xff, 0xe9, 0xff, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x9, 0x6c, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x48, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x1f, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0xf2, 0x6b, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x40, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x21, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x1b, 0x1, 0, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x1d, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x2b, 0, 0, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x29, 0, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x3e, 0x93, 0xfe, 0xff, 0xe9, 0x9c, 0x3, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8d, 0x45, 0x9c, 0xe8, 0x1e, 0x71, 0xfd, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x97, 0x6b, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x42, 0x15, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x7e, 0x6b, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x8b, 0x5d, 0xf8, 0x66, 0x2b, 0x43, 0x13, 0x98, 0xe8, 0x32, 0xc9, 0xb, 0, 0x89, 0x45, 0xe0, 0xe8, 0xe5, 0x88, 0xa, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x72, 0xd, 0xf, 0xbf, 0x45, 0xe8, 0x83, 0xf8, 0x14, 0xf, 0x8d, 0x1b, 0x3, 0, 0, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1b, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1f, 0xe8, 0x56, 0xb7, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x2b, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x29, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x39, 0xc2, 0xf, 0x8c, 0xeb, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x2b, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x40, 0x1d, 0x2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1b, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x8, 0xf, 0x8c, 0xc8, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x2a, 0, 0x74, 0x5f, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0xcc, 0x6a, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x8b, 0x52, 0x23, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0xb6, 0x6a, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x8b, 0x52, 0x25, 0x66, 0x89, 0x50, 0x43, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x1b, 0, 0, 0x31, 0xdb, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0xec, 0x6a, 0xfd, 0xff, 0xe8, 0x6a, 0x35, 0xc, 0, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x5, 0x92, 0xfe, 0xff, 0xe9, 0x63, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x29, 0, 0x75, 0x32, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x64, 0x6a, 0xfd, 0xff, 0xc6, 0x40, 0x5c, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x55, 0x6a, 0xfd, 0xff, 0xe8, 0x59, 0x2d, 0xb, 0, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xca, 0x91, 0xfe, 0xff, 0xe9, 0x28, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x1d, 0, 0, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x29, 0, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x1b, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x48, 0x1f, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x21, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1d, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7c, 0x10, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1f, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0xd, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0x10, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x21, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x5, 0xe9, 0xa1, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x29, 0x1, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x1f, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1d, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0x1, 0xc0, 0x8b, 0x15, 0x1c, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x31, 0xd2, 0x66, 0x8b, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc2, 0xf, 0x85, 0x60, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x89, 0x69, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x8b, 0x52, 0x21, 0x66, 0x2b, 0x50, 0x1c, 0xf, 0xbf, 0xda, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x70, 0x69, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x8b, 0x52, 0x1f, 0x66, 0x2b, 0x50, 0x1a, 0xf, 0xbf, 0xc2, 0x89, 0xda, 0xe8, 0x20, 0xc7, 0xb, 0, 0x2b, 0x45, 0xe0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x5, 0x8, 0, 0, 0, 0x25, 0x7, 0, 0, 0, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x83, 0xf8, 0x4, 0x7e, 0xb, 0xb8, 0x8, 0, 0, 0, 0x2b, 0x45, 0xe4, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x2a, 0, 0x74, 0xc, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x27, 0x7e, 0x1c, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x1f, 0x8d, 0x45, 0x98, 0xe8, 0xfe, 0x61, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0xdc, 0x2, 0x8, 0, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0xc7, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x2a, 0x1, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x1f, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0xb3, 0x8e, 0xfe, 0xff, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x27, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x1f, 0x8d, 0x45, 0x9c, 0xe8, 0x9b, 0x8e, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x21, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x42, 0x15, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1f, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x42, 0x13, 0x98, 0x89, 0xda, 0xe8, 0x69, 0xc6, 0xb, 0, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0x9c, 0xe8, 0xbb, 0xb4, 0xfe, 0xff, 0xf, 0xbf, 0x45, 0x9c, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0x9c, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0x9e, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0x9e, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x19, 0x8d, 0x55, 0x9c, 0x8d, 0x45, 0x94, 0xe8, 0x42, 0x61, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0x20, 0x2, 0x8, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x4, 0x8e, 0xfe, 0xff, 0xe9, 0xc5, 0xfc, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xa9, 0x8f, 0xfe, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x9d, 0x8f, 0xfe, 0xff, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1009f5b7, 0x5)   pushd(0x88);                          /* push dword 0x88 */
    II(0x1009f5bc, 0x5)   calld(sys_check_available_stack_size, 0xc6791); /* call 0x10165d52 */
    II(0x1009f5c1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009f5c2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009f5c3, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009f5c4, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009f5c5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009f5c6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009f5c8, 0x6)   sub(esp, 0x6c);                       /* sub esp, 0x6c */
    II(0x1009f5ce, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1009f5d1, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1009f5d4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f5d7, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x1009f5da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009f5dd, 0x5)   calld(0x1008b4b4, -0x1412e);          /* call 0x1008b4b4 */
    II(0x1009f5e2, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009f5e4, 0x2)   jzd(0x1009f5ef, 0x9);                 /* jz 0x1009f5ef */
    II(0x1009f5e6, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1009f5ea, 0x5)   jmpd(0x1009fd5f, 0x770);              /* jmp 0x1009fd5f */
l_0x1009f5ef:
    II(0x1009f5ef, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f5f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f5f5, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f5f8, 0x5)   calld(0x10076574, -0x29089);          /* call 0x10076574 */
    II(0x1009f5fd, 0x5)   calld(0x10152a52, 0xb3450);           /* call 0x10152a52 */
    II(0x1009f602, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009f604, 0x2)   jnzd(0x1009f60f, 0x9);                /* jnz 0x1009f60f */
    II(0x1009f606, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1009f60a, 0x5)   jmpd(0x1009fd5f, 0x750);              /* jmp 0x1009fd5f */
l_0x1009f60f:
    II(0x1009f60f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1009f611, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x1009f616, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009f618, 0x2)   jnzd(0x1009f62f, 0x15);               /* jnz 0x1009f62f */
    II(0x1009f61a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f61d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1009f620, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f623, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009f625, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x1009f62b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1009f62d, 0x2)   jnzd(0x1009f631, 0x2);                /* jnz 0x1009f631 */
l_0x1009f62f:
    II(0x1009f62f, 0x2)   jmpd(0x1009f63a, 0x9);                /* jmp 0x1009f63a */
l_0x1009f631:
    II(0x1009f631, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1009f635, 0x5)   jmpd(0x1009fd5f, 0x725);              /* jmp 0x1009fd5f */
l_0x1009f63a:
    II(0x1009f63a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f63d, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f640, 0x5)   calld(0x10076574, -0x290d1);          /* call 0x10076574 */
    II(0x1009f645, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x1009f648, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1009f64d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009f64f, 0x2)   jnzd(0x1009f65a, 0x9);                /* jnz 0x1009f65a */
    II(0x1009f651, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1009f655, 0x5)   jmpd(0x1009fd5f, 0x705);              /* jmp 0x1009fd5f */
l_0x1009f65a:
    II(0x1009f65a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f65d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1009f660, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f663, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1009f669, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x1009f66f, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1009f672, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1009f675, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x1009f679, 0x5)   calld(0x1008a6d4, -0x14faa);          /* call 0x1008a6d4 */
    II(0x1009f67e, 0x1)   cwde();                               /* cwde */
    II(0x1009f67f, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009f680, 0x5)   mov(ecx, 0x3);                        /* mov ecx, 0x3 */
    II(0x1009f685, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1009f68a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f68d, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f690, 0x5)   calld(0x100765d0, -0x290c5);          /* call 0x100765d0 */
    II(0x1009f695, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009f697, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009f69a, 0x5)   calld(0x1011fec1, 0x80822);           /* call 0x1011fec1 */
    II(0x1009f69f, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1009f6a2, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x1009f6a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f6a9, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x1009f6ac, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f6af, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009f6b1, 0x6)   jnzd(0x1009f9c3, 0x30c);              /* jnz dword 0x1009f9c3 */
    II(0x1009f6b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f6ba, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f6bd, 0x5)   calld(0x10076574, -0x2914e);          /* call 0x10076574 */
    II(0x1009f6c2, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1009f6c5, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009f6c8, 0x3)   sub(edx, 0x5);                        /* sub edx, 0x5 */
    II(0x1009f6cb, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1009f6d0, 0x5)   calld(0x10076e7c, -0x28859);          /* call 0x10076e7c */
    II(0x1009f6d5, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x1009f6d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f6db, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f6de, 0x5)   calld(0x10076574, -0x2916f);          /* call 0x10076574 */
    II(0x1009f6e3, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1009f6e6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009f6e9, 0x3)   add(edx, 0x6);                        /* add edx, 0x6 */
    II(0x1009f6ec, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x1009f6f1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f6f4, 0x1)   dec(eax);                             /* dec eax */
    II(0x1009f6f5, 0x5)   calld(my_min, -0x15f76);              /* call 0x10089784 */
    II(0x1009f6fa, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1009f6fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f700, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f703, 0x5)   calld(0x10076574, -0x29194);          /* call 0x10076574 */
    II(0x1009f708, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x1009f70b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f70e, 0x3)   lea(edx, eax - 0x5);                  /* lea edx, [eax-0x5] */
    II(0x1009f711, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1009f716, 0x5)   calld(0x10076e7c, -0x2889f);          /* call 0x10076e7c */
    II(0x1009f71b, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1009f71e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f721, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f724, 0x5)   calld(0x10076574, -0x291b5);          /* call 0x10076574 */
    II(0x1009f729, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x1009f72c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009f72f, 0x3)   add(edx, 0x6);                        /* add edx, 0x6 */
    II(0x1009f732, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x1009f737, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f73a, 0x1)   dec(eax);                             /* dec eax */
    II(0x1009f73b, 0x5)   calld(my_min, -0x15fbc);              /* call 0x10089784 */
    II(0x1009f740, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1009f743, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f746, 0x4)   mov(memb_a32(ds, eax + 0x2a), 0);     /* mov byte [eax+0x2a], 0x0 */
    II(0x1009f74a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1009f74d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f750, 0x4)   mov(memw_a32(ds, edx + 0x1f), ax);    /* mov [edx+0x1f], ax */
    II(0x1009f754, 0x2)   jmpd(0x1009f75d, 0x7);                /* jmp 0x1009f75d */
l_0x1009f756:
    II(0x1009f756, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f759, 0x4)   inc(memw_a32(ds, eax + 0x1f));        /* inc word [eax+0x1f] */
l_0x1009f75d:
    II(0x1009f75d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f760, 0x3)   mov(eax, memd_a32(ds, eax + 0x1d));   /* mov eax, [eax+0x1d] */
    II(0x1009f763, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f766, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x3c));   /* cmp eax, [ebp-0x3c] */
    II(0x1009f769, 0x6)   jged(0x1009f901, 0x192);              /* jge dword 0x1009f901 */
    II(0x1009f76f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1009f772, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f775, 0x4)   mov(memw_a32(ds, edx + 0x21), ax);    /* mov [edx+0x21], ax */
    II(0x1009f779, 0x2)   jmpd(0x1009f782, 0x7);                /* jmp 0x1009f782 */
l_0x1009f77b:
    II(0x1009f77b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f77e, 0x4)   inc(memw_a32(ds, eax + 0x21));        /* inc word [eax+0x21] */
l_0x1009f782:
    II(0x1009f782, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f785, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009f788, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f78b, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x38));   /* cmp eax, [ebp-0x38] */
    II(0x1009f78e, 0x6)   jged(0x1009f8fc, 0x168);              /* jge dword 0x1009f8fc */
    II(0x1009f794, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f797, 0x3)   mov(edx, memd_a32(ds, eax + 0x1f));   /* mov edx, [eax+0x1f] */
    II(0x1009f79a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009f79d, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x1009f7a2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f7a5, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1009f7a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f7ab, 0x3)   mov(eax, memd_a32(ds, eax + 0x1d));   /* mov eax, [eax+0x1d] */
    II(0x1009f7ae, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f7b1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1009f7b3, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009f7b5, 0x6)   mov(edx, memd_a32(ds, 0x101c811c));   /* mov edx, [0x101c811c] */
    II(0x1009f7bb, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1009f7bd, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1009f7c0, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x1009f7c3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x48)); /* movsx edx, word [ebp-0x48] */
    II(0x1009f7c7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1009f7cb, 0x2)   test(edx, eax);                       /* test edx, eax */
    II(0x1009f7cd, 0x2)   jzd(0x1009f7d7, 0x8);                 /* jz 0x1009f7d7 */
    II(0x1009f7cf, 0x6)   test(memw_a32(ss, ebp - 0x48), 0x1f); /* test word [ebp-0x48], 0x1f */
    II(0x1009f7d5, 0x2)   jnzd(0x1009f7dc, 0x5);                /* jnz 0x1009f7dc */
l_0x1009f7d7:
    II(0x1009f7d7, 0x5)   jmpd(0x1009f8f7, 0x11b);              /* jmp 0x1009f8f7 */
l_0x1009f7dc:
    II(0x1009f7dc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f7df, 0x3)   add(edx, 0x1f);                       /* add edx, 0x1f */
    II(0x1009f7e2, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1009f7e5, 0x5)   calld(0x10075e64, -0x29986);          /* call 0x10075e64 */
    II(0x1009f7ea, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009f7ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f7ef, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f7f2, 0x5)   calld(0x100765d0, -0x29227);          /* call 0x100765d0 */
    II(0x1009f7f7, 0x5)   calld(0x10070ca1, -0x2eb5b);          /* call 0x10070ca1 */
    II(0x1009f7fc, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1009f7ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f802, 0x4)   cmp(memb_a32(ds, eax + 0x2a), 0);     /* cmp byte [eax+0x2a], 0x0 */
    II(0x1009f806, 0x2)   jzd(0x1009f815, 0xd);                 /* jz 0x1009f815 */
    II(0x1009f808, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x1009f80b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x50));    /* cmp ax, [ebp-0x50] */
    II(0x1009f80f, 0x6)   jled(0x1009f8f7, 0xe2);               /* jle dword 0x1009f8f7 */
l_0x1009f815:
    II(0x1009f815, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f818, 0x4)   mov(ax, memw_a32(ds, eax + 0x1f));    /* mov ax, [eax+0x1f] */
    II(0x1009f81c, 0x1)   dec(eax);                             /* dec eax */
    II(0x1009f81d, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x1009f820, 0x2)   jmpd(0x1009f828, 0x6);                /* jmp 0x1009f828 */
l_0x1009f822:
    II(0x1009f822, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x1009f825, 0x3)   inc(memd_a32(ss, ebp - 0x58));        /* inc dword [ebp-0x58] */
l_0x1009f828:
    II(0x1009f828, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f82b, 0x3)   mov(eax, memd_a32(ds, eax + 0x1d));   /* mov eax, [eax+0x1d] */
    II(0x1009f82e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f831, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x58)); /* movsx edx, word [ebp-0x58] */
    II(0x1009f835, 0x1)   inc(eax);                             /* inc eax */
    II(0x1009f836, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1009f838, 0x6)   jgd(0x1009f8f7, 0xb9);                /* jg dword 0x1009f8f7 */
    II(0x1009f83e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f841, 0x4)   mov(ax, memw_a32(ds, eax + 0x21));    /* mov ax, [eax+0x21] */
    II(0x1009f845, 0x1)   dec(eax);                             /* dec eax */
    II(0x1009f846, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x1009f849, 0x2)   jmpd(0x1009f851, 0x6);                /* jmp 0x1009f851 */
l_0x1009f84b:
    II(0x1009f84b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x1009f84e, 0x3)   inc(memd_a32(ss, ebp - 0x5c));        /* inc dword [ebp-0x5c] */
l_0x1009f851:
    II(0x1009f851, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f854, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009f857, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f85a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1009f85e, 0x1)   inc(eax);                             /* inc eax */
    II(0x1009f85f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1009f861, 0x6)   jgd(0x1009f8f2, 0x8b);                /* jg dword 0x1009f8f2 */
    II(0x1009f867, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1009f86b, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x1009f870, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f873, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1009f876, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x1009f87a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1009f87c, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009f87e, 0x6)   mov(edx, memd_a32(ds, 0x101c811c));   /* mov edx, [0x101c811c] */
    II(0x1009f884, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1009f886, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1009f889, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x1009f88c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x48)); /* movsx edx, word [ebp-0x48] */
    II(0x1009f890, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1009f894, 0x2)   test(edx, eax);                       /* test edx, eax */
    II(0x1009f896, 0x2)   jnzd(0x1009f8af, 0x17);               /* jnz 0x1009f8af */
    II(0x1009f898, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1009f89c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x1009f8a0, 0x5)   calld(0x10073cfd, -0x2bba8);          /* call 0x10073cfd */
    II(0x1009f8a5, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1009f8aa, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1009f8ad, 0x2)   jnzd(0x1009f8b1, 0x2);                /* jnz 0x1009f8b1 */
l_0x1009f8af:
    II(0x1009f8af, 0x2)   jmpd(0x1009f8cd, 0x1c);               /* jmp 0x1009f8cd */
l_0x1009f8b1:
    II(0x1009f8b1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f8b4, 0x3)   add(edx, 0x1f);                       /* add edx, 0x1f */
    II(0x1009f8b7, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x1009f8ba, 0x5)   calld(0x10075e64, -0x29a5b);          /* call 0x10075e64 */
    II(0x1009f8bf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009f8c1, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009f8c4, 0x5)   calld(0x1011ff4c, 0x80683);           /* call 0x1011ff4c */
    II(0x1009f8c9, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009f8cb, 0x2)   jnzd(0x1009f8cf, 0x2);                /* jnz 0x1009f8cf */
l_0x1009f8cd:
    II(0x1009f8cd, 0x2)   jmpd(0x1009f8ed, 0x1e);               /* jmp 0x1009f8ed */
l_0x1009f8cf:
    II(0x1009f8cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f8d2, 0x4)   mov(memb_a32(ds, eax + 0x2a), 0x1);   /* mov byte [eax+0x2a], 0x1 */
    II(0x1009f8d6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f8d9, 0x3)   add(edx, 0x1f);                       /* add edx, 0x1f */
    II(0x1009f8dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f8df, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x1009f8e2, 0x5)   calld(0x10088b44, -0x16da3);          /* call 0x10088b44 */
    II(0x1009f8e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1009f8ea, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
l_0x1009f8ed:
    II(0x1009f8ed, 0x5)   jmpd(0x1009f84b, -0xa7);              /* jmp 0x1009f84b */
l_0x1009f8f2:
    II(0x1009f8f2, 0x5)   jmpd(0x1009f822, -0xd5);              /* jmp 0x1009f822 */
l_0x1009f8f7:
    II(0x1009f8f7, 0x5)   jmpd(0x1009f77b, -0x181);             /* jmp 0x1009f77b */
l_0x1009f8fc:
    II(0x1009f8fc, 0x5)   jmpd(0x1009f756, -0x1ab);             /* jmp 0x1009f756 */
l_0x1009f901:
    II(0x1009f901, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f904, 0x4)   cmp(memb_a32(ds, eax + 0x2a), 0);     /* cmp byte [eax+0x2a], 0x0 */
    II(0x1009f908, 0x2)   jzd(0x1009f960, 0x56);                /* jz 0x1009f960 */
    II(0x1009f90a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f90d, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f910, 0x5)   calld(0x10076574, -0x293a1);          /* call 0x10076574 */
    II(0x1009f915, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f918, 0x4)   mov(dx, memw_a32(ds, edx + 0x23));    /* mov dx, [edx+0x23] */
    II(0x1009f91c, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x1009f920, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f923, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f926, 0x5)   calld(0x10076574, -0x293b7);          /* call 0x10076574 */
    II(0x1009f92b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f92e, 0x4)   mov(dx, memw_a32(ds, edx + 0x25));    /* mov dx, [edx+0x25] */
    II(0x1009f932, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x1009f936, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1009f938, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1009f93d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f940, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f943, 0x5)   calld(0x100765d0, -0x29378);          /* call 0x100765d0 */
    II(0x1009f948, 0x5)   calld(0x10163053, 0xc3706);           /* call 0x10163053 */
    II(0x1009f94d, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x1009f951, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009f953, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009f956, 0x5)   calld(my_dtor_d1, -0x16c5f);          /* call 0x10088cfc */
    II(0x1009f95b, 0x5)   jmpd(0x1009fd5f, 0x3ff);              /* jmp 0x1009fd5f */
l_0x1009f960:
    II(0x1009f960, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f963, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f966, 0x5)   calld(0x10076574, -0x293f7);          /* call 0x10076574 */
    II(0x1009f96b, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1009f96f, 0x1)   dec(eax);                             /* dec eax */
    II(0x1009f970, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f973, 0x4)   mov(memw_a32(ds, edx + 0x1f), ax);    /* mov [edx+0x1f], ax */
    II(0x1009f977, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f97a, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f97d, 0x5)   calld(0x10076574, -0x2940e);          /* call 0x10076574 */
    II(0x1009f982, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1009f986, 0x1)   inc(eax);                             /* inc eax */
    II(0x1009f987, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f98a, 0x4)   mov(memw_a32(ds, edx + 0x21), ax);    /* mov [edx+0x21], ax */
    II(0x1009f98e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f991, 0x6)   mov(memw_a32(ds, eax + 0x1b), 0x1);   /* mov word [eax+0x1b], 0x1 */
    II(0x1009f997, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f99a, 0x6)   mov(memw_a32(ds, eax + 0x1d), 0);     /* mov word [eax+0x1d], 0x0 */
    II(0x1009f9a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f9a3, 0x6)   mov(memw_a32(ds, eax + 0x2b), 0);     /* mov word [eax+0x2b], 0x0 */
    II(0x1009f9a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f9ac, 0x4)   mov(memb_a32(ds, eax + 0x29), 0);     /* mov byte [eax+0x29], 0x0 */
    II(0x1009f9b0, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x1009f9b4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009f9b6, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009f9b9, 0x5)   calld(my_dtor_d1, -0x16cc2);          /* call 0x10088cfc */
    II(0x1009f9be, 0x5)   jmpd(0x1009fd5f, 0x39c);              /* jmp 0x1009fd5f */
l_0x1009f9c3:
    II(0x1009f9c3, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1009f9ca, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x1009f9cd, 0x5)   calld(my_ctor_0x101b4184, -0x28ee2);  /* call 0x10076af0 */
    II(0x1009f9d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f9d5, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f9d8, 0x5)   calld(0x10076574, -0x29469);          /* call 0x10076574 */
    II(0x1009f9dd, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1009f9e1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f9e4, 0x4)   sub(ax, memw_a32(ds, edx + 0x15));    /* sub ax, [edx+0x15] */
    II(0x1009f9e8, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1009f9eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f9ee, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f9f1, 0x5)   calld(0x10076574, -0x29482);          /* call 0x10076574 */
    II(0x1009f9f6, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1009f9fa, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1009f9fd, 0x4)   sub(ax, memw_a32(ds, ebx + 0x13));    /* sub ax, [ebx+0x13] */
    II(0x1009fa01, 0x1)   cwde();                               /* cwde */
    II(0x1009fa02, 0x5)   calld(0x1015c339, 0xbc932);           /* call 0x1015c339 */
    II(0x1009fa07, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x1009fa0a:
    II(0x1009fa0a, 0x5)   calld(0x101482f4, 0xa88e5);           /* call 0x101482f4 */
    II(0x1009fa0f, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x1009fa15, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x1009fa1b, 0x2)   jbd(0x1009fa2a, 0xd);                 /* jb 0x1009fa2a */
    II(0x1009fa1d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1009fa21, 0x3)   cmp(eax, 0x14);                       /* cmp eax, 0x14 */
    II(0x1009fa24, 0x6)   jged(0x1009fd45, 0x31b);              /* jge dword 0x1009fd45 */
l_0x1009fa2a:
    II(0x1009fa2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1009fa2d, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x1009fa30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fa33, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x1009fa36, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009fa39, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009fa3c, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1009fa41, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009fa43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fa46, 0x3)   add(eax, 0x1f);                       /* add eax, 0x1f */
    II(0x1009fa49, 0x5)   calld(0x1008b1a4, -0x148aa);          /* call 0x1008b1a4 */
    II(0x1009fa4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fa51, 0x4)   inc(memw_a32(ds, eax + 0x2b));        /* inc word [eax+0x2b] */
    II(0x1009fa55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fa58, 0x3)   mov(edx, memd_a32(ds, eax + 0x29));   /* mov edx, [eax+0x29] */
    II(0x1009fa5b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009fa5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fa61, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x1009fa64, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009fa67, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009fa69, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1009fa6b, 0x6)   jld(0x1009fb5c, 0xeb);                /* jl dword 0x1009fb5c */
    II(0x1009fa71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fa74, 0x6)   mov(memw_a32(ds, eax + 0x2b), 0);     /* mov word [eax+0x2b], 0x0 */
    II(0x1009fa7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fa7d, 0x5)   add(memw_a32(ds, eax + 0x1d), 0x2);   /* add word [eax+0x1d], 0x2 */
    II(0x1009fa82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fa85, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x1009fa88, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009fa8b, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1009fa8e, 0x6)   jld(0x1009fb5c, 0xc8);                /* jl dword 0x1009fb5c */
    II(0x1009fa94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fa97, 0x4)   cmp(memb_a32(ds, eax + 0x2a), 0);     /* cmp byte [eax+0x2a], 0x0 */
    II(0x1009fa9b, 0x2)   jzd(0x1009fafc, 0x5f);                /* jz 0x1009fafc */
    II(0x1009fa9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009faa0, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009faa3, 0x5)   calld(0x10076574, -0x29534);          /* call 0x10076574 */
    II(0x1009faa8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009faab, 0x4)   mov(dx, memw_a32(ds, edx + 0x23));    /* mov dx, [edx+0x23] */
    II(0x1009faaf, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x1009fab3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fab6, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009fab9, 0x5)   calld(0x10076574, -0x2954a);          /* call 0x10076574 */
    II(0x1009fabe, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fac1, 0x4)   mov(dx, memw_a32(ds, edx + 0x25));    /* mov dx, [edx+0x25] */
    II(0x1009fac5, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x1009fac9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009facc, 0x6)   mov(memw_a32(ds, eax + 0x1b), 0);     /* mov word [eax+0x1b], 0x0 */
    II(0x1009fad2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1009fad4, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1009fad9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fadc, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009fadf, 0x5)   calld(0x100765d0, -0x29514);          /* call 0x100765d0 */
    II(0x1009fae4, 0x5)   calld(0x10163053, 0xc356a);           /* call 0x10163053 */
    II(0x1009fae9, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x1009faed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009faef, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009faf2, 0x5)   calld(my_dtor_d1, -0x16dfb);          /* call 0x10088cfc */
    II(0x1009faf7, 0x5)   jmpd(0x1009fd5f, 0x263);              /* jmp 0x1009fd5f */
l_0x1009fafc:
    II(0x1009fafc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009faff, 0x4)   cmp(memb_a32(ds, eax + 0x29), 0);     /* cmp byte [eax+0x29], 0x0 */
    II(0x1009fb03, 0x2)   jnzd(0x1009fb37, 0x32);               /* jnz 0x1009fb37 */
    II(0x1009fb05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb08, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009fb0b, 0x5)   calld(0x10076574, -0x2959c);          /* call 0x10076574 */
    II(0x1009fb10, 0x4)   mov(memb_a32(ds, eax + 0x5c), 0);     /* mov byte [eax+0x5c], 0x0 */
    II(0x1009fb14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb17, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009fb1a, 0x5)   calld(0x10076574, -0x295ab);          /* call 0x10076574 */
    II(0x1009fb1f, 0x5)   calld(0x1015287d, 0xb2d59);           /* call 0x1015287d */
    II(0x1009fb24, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1009fb28, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009fb2a, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009fb2d, 0x5)   calld(my_dtor_d1, -0x16e36);          /* call 0x10088cfc */
    II(0x1009fb32, 0x5)   jmpd(0x1009fd5f, 0x228);              /* jmp 0x1009fd5f */
l_0x1009fb37:
    II(0x1009fb37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb3a, 0x6)   mov(memw_a32(ds, eax + 0x1d), 0);     /* mov word [eax+0x1d], 0x0 */
    II(0x1009fb40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb43, 0x4)   mov(memb_a32(ds, eax + 0x29), 0);     /* mov byte [eax+0x29], 0x0 */
    II(0x1009fb47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb4a, 0x4)   inc(memw_a32(ds, eax + 0x1b));        /* inc word [eax+0x1b] */
    II(0x1009fb4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb51, 0x4)   dec(memw_a32(ds, eax + 0x1f));        /* dec word [eax+0x1f] */
    II(0x1009fb55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb58, 0x4)   inc(memw_a32(ds, eax + 0x21));        /* inc word [eax+0x21] */
l_0x1009fb5c:
    II(0x1009fb5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb5f, 0x3)   mov(eax, memd_a32(ds, eax + 0x1d));   /* mov eax, [eax+0x1d] */
    II(0x1009fb62, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009fb65, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009fb67, 0x2)   jld(0x1009fb79, 0x10);                /* jl 0x1009fb79 */
    II(0x1009fb69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb6c, 0x4)   mov(ax, memw_a32(ds, eax + 0x1f));    /* mov ax, [eax+0x1f] */
    II(0x1009fb70, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1009fb77, 0x2)   jld(0x1009fb7b, 0x2);                 /* jl 0x1009fb7b */
l_0x1009fb79:
    II(0x1009fb79, 0x2)   jmpd(0x1009fb88, 0xd);                /* jmp 0x1009fb88 */
l_0x1009fb7b:
    II(0x1009fb7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb7e, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009fb81, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009fb84, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009fb86, 0x2)   jged(0x1009fb8a, 0x2);                /* jge 0x1009fb8a */
l_0x1009fb88:
    II(0x1009fb88, 0x2)   jmpd(0x1009fb9a, 0x10);               /* jmp 0x1009fb9a */
l_0x1009fb8a:
    II(0x1009fb8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fb8d, 0x4)   mov(ax, memw_a32(ds, eax + 0x21));    /* mov ax, [eax+0x21] */
    II(0x1009fb91, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1009fb98, 0x2)   jld(0x1009fb9f, 0x5);                 /* jl 0x1009fb9f */
l_0x1009fb9a:
    II(0x1009fb9a, 0x5)   jmpd(0x1009fd40, 0x1a1);              /* jmp 0x1009fd40 */
l_0x1009fb9f:
    II(0x1009fb9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fba2, 0x4)   mov(memb_a32(ds, eax + 0x29), 0x1);   /* mov byte [eax+0x29], 0x1 */
    II(0x1009fba6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fba9, 0x3)   mov(edx, memd_a32(ds, eax + 0x1f));   /* mov edx, [eax+0x1f] */
    II(0x1009fbac, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009fbaf, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x1009fbb4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009fbb7, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1009fbba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fbbd, 0x3)   mov(eax, memd_a32(ds, eax + 0x1d));   /* mov eax, [eax+0x1d] */
    II(0x1009fbc0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009fbc3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1009fbc5, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009fbc7, 0x6)   mov(edx, memd_a32(ds, 0x101c811c));   /* mov edx, [0x101c811c] */
    II(0x1009fbcd, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1009fbcf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009fbd1, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x1009fbd4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1009fbd8, 0x2)   test(edx, eax);                       /* test edx, eax */
    II(0x1009fbda, 0x6)   jnzd(0x1009fd40, 0x160);              /* jnz dword 0x1009fd40 */
    II(0x1009fbe0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fbe3, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009fbe6, 0x5)   calld(0x10076574, -0x29677);          /* call 0x10076574 */
    II(0x1009fbeb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fbee, 0x4)   mov(dx, memw_a32(ds, edx + 0x21));    /* mov dx, [edx+0x21] */
    II(0x1009fbf2, 0x4)   sub(dx, memw_a32(ds, eax + 0x1c));    /* sub dx, [eax+0x1c] */
    II(0x1009fbf6, 0x3)   movsx(ebx, dx);                       /* movsx ebx, dx */
    II(0x1009fbf9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fbfc, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009fbff, 0x5)   calld(0x10076574, -0x29690);          /* call 0x10076574 */
    II(0x1009fc04, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fc07, 0x4)   mov(dx, memw_a32(ds, edx + 0x1f));    /* mov dx, [edx+0x1f] */
    II(0x1009fc0b, 0x4)   sub(dx, memw_a32(ds, eax + 0x1a));    /* sub dx, [eax+0x1a] */
    II(0x1009fc0f, 0x3)   movsx(eax, dx);                       /* movsx eax, dx */
    II(0x1009fc12, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1009fc14, 0x5)   calld(0x1015c339, 0xbc720);           /* call 0x1015c339 */
    II(0x1009fc19, 0x3)   sub(eax, memd_a32(ss, ebp - 0x20));   /* sub eax, [ebp-0x20] */
    II(0x1009fc1c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x1009fc1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1009fc22, 0x5)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x1009fc27, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x1009fc2c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1009fc2f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1009fc33, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1009fc36, 0x2)   jled(0x1009fc43, 0xb);                /* jle 0x1009fc43 */
    II(0x1009fc38, 0x5)   mov(eax, 0x8);                        /* mov eax, 0x8 */
    II(0x1009fc3d, 0x3)   sub(eax, memd_a32(ss, ebp - 0x1c));   /* sub eax, [ebp-0x1c] */
    II(0x1009fc40, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1009fc43:
    II(0x1009fc43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fc46, 0x4)   cmp(memb_a32(ds, eax + 0x2a), 0);     /* cmp byte [eax+0x2a], 0x0 */
    II(0x1009fc4a, 0x2)   jzd(0x1009fc58, 0xc);                 /* jz 0x1009fc58 */
    II(0x1009fc4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1009fc4f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fc52, 0x4)   cmp(ax, memw_a32(ds, edx + 0x27));    /* cmp ax, [edx+0x27] */
    II(0x1009fc56, 0x2)   jled(0x1009fc74, 0x1c);               /* jle 0x1009fc74 */
l_0x1009fc58:
    II(0x1009fc58, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fc5b, 0x3)   add(edx, 0x1f);                       /* add edx, 0x1f */
    II(0x1009fc5e, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x1009fc61, 0x5)   calld(0x10075e64, -0x29e02);          /* call 0x10075e64 */
    II(0x1009fc66, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009fc68, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009fc6b, 0x5)   calld(0x1011ff4c, 0x802dc);           /* call 0x1011ff4c */
    II(0x1009fc70, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009fc72, 0x2)   jnzd(0x1009fc79, 0x5);                /* jnz 0x1009fc79 */
l_0x1009fc74:
    II(0x1009fc74, 0x5)   jmpd(0x1009fd40, 0xc7);               /* jmp 0x1009fd40 */
l_0x1009fc79:
    II(0x1009fc79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fc7c, 0x4)   mov(memb_a32(ds, eax + 0x2a), 0x1);   /* mov byte [eax+0x2a], 0x1 */
    II(0x1009fc80, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fc83, 0x3)   add(edx, 0x1f);                       /* add edx, 0x1f */
    II(0x1009fc86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fc89, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x1009fc8c, 0x5)   calld(0x10088b44, -0x1714d);          /* call 0x10088b44 */
    II(0x1009fc91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1009fc94, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fc97, 0x4)   mov(memw_a32(ds, edx + 0x27), ax);    /* mov [edx+0x27], ax */
    II(0x1009fc9b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fc9e, 0x3)   add(edx, 0x1f);                       /* add edx, 0x1f */
    II(0x1009fca1, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x1009fca4, 0x5)   calld(0x10088b44, -0x17165);          /* call 0x10088b44 */
    II(0x1009fca9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fcac, 0x4)   mov(ax, memw_a32(ds, eax + 0x21));    /* mov ax, [eax+0x21] */
    II(0x1009fcb0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fcb3, 0x4)   sub(ax, memw_a32(ds, edx + 0x15));    /* sub ax, [edx+0x15] */
    II(0x1009fcb7, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1009fcba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fcbd, 0x4)   mov(ax, memw_a32(ds, eax + 0x1f));    /* mov ax, [eax+0x1f] */
    II(0x1009fcc1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009fcc4, 0x4)   sub(ax, memw_a32(ds, edx + 0x13));    /* sub ax, [edx+0x13] */
    II(0x1009fcc8, 0x1)   cwde();                               /* cwde */
    II(0x1009fcc9, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1009fccb, 0x5)   calld(0x1015c339, 0xbc669);           /* call 0x1015c339 */
    II(0x1009fcd0, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1009fcd3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1009fcd7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009fcda, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1009fcdf, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009fce1, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x1009fce4, 0x5)   calld(0x1008b1a4, -0x14b45);          /* call 0x1008b1a4 */
    II(0x1009fce9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x1009fced, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009fcef, 0x2)   jld(0x1009fcfd, 0xc);                 /* jl 0x1009fcfd */
    II(0x1009fcf1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x1009fcf4, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1009fcfb, 0x2)   jld(0x1009fcff, 0x2);                 /* jl 0x1009fcff */
l_0x1009fcfd:
    II(0x1009fcfd, 0x2)   jmpd(0x1009fd07, 0x8);                /* jmp 0x1009fd07 */
l_0x1009fcff:
    II(0x1009fcff, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x62)); /* movsx eax, word [ebp-0x62] */
    II(0x1009fd03, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009fd05, 0x2)   jged(0x1009fd09, 0x2);                /* jge 0x1009fd09 */
l_0x1009fd07:
    II(0x1009fd07, 0x2)   jmpd(0x1009fd15, 0xc);                /* jmp 0x1009fd15 */
l_0x1009fd09:
    II(0x1009fd09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x62));   /* mov eax, [ebp-0x62] */
    II(0x1009fd0c, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1009fd13, 0x2)   jld(0x1009fd17, 0x2);                 /* jl 0x1009fd17 */
l_0x1009fd15:
    II(0x1009fd15, 0x2)   jmpd(0x1009fd30, 0x19);               /* jmp 0x1009fd30 */
l_0x1009fd17:
    II(0x1009fd17, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x1009fd1a, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x1009fd1d, 0x5)   calld(0x10075e64, -0x29ebe);          /* call 0x10075e64 */
    II(0x1009fd22, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009fd24, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009fd27, 0x5)   calld(0x1011ff4c, 0x80220);           /* call 0x1011ff4c */
    II(0x1009fd2c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009fd2e, 0x2)   jnzd(0x1009fd32, 0x2);                /* jnz 0x1009fd32 */
l_0x1009fd30:
    II(0x1009fd30, 0x2)   jmpd(0x1009fd40, 0xe);                /* jmp 0x1009fd40 */
l_0x1009fd32:
    II(0x1009fd32, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x1009fd35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009fd38, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x1009fd3b, 0x5)   calld(0x10088b44, -0x171fc);          /* call 0x10088b44 */
l_0x1009fd40:
    II(0x1009fd40, 0x5)   jmpd(0x1009fa0a, -0x33b);             /* jmp 0x1009fa0a */
l_0x1009fd45:
    II(0x1009fd45, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1009fd49, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009fd4b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009fd4e, 0x5)   calld(my_dtor_d1, -0x17057);          /* call 0x10088cfc */
    II(0x1009fd53, 0x2)   jmpd(0x1009fd5f, 0xa);                /* jmp 0x1009fd5f */
//  II(0x1009fd55, 0xa)   /* Недостижимый код. */
l_0x1009fd5f:
    II(0x1009fd5f, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x1009fd62, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009fd64, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009fd65, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009fd66, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009fd67, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009fd68, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009fd69, 0x1)   retd();                               /* ret */
FUNC_END

