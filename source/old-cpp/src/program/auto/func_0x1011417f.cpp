FUNC_BEGIN(0x1011417f, 0x140dcfc3b73f0423, 0x20, ({0x68, 0xe0, 0, 0, 0, 0xe8, 0xc9, 0x1b, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc4, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x1f, 0x5, 0, 0, 0, 0xf, 0x84, 0xb6, 0x1, 0, 0, 0x80, 0x7d, 0xfc, 0, 0x75, 0x10, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x1e, 0x5, 0, 0, 0, 0xf, 0x84, 0x9e, 0x1, 0, 0, 0xba, 0x4, 0, 0, 0, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x2b, 0x69, 0xfb, 0xff, 0xe8, 0xc2, 0x11, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0x8d, 0x9d, 0x48, 0xff, 0xff, 0xff, 0xba, 0x4, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0x98, 0x5, 0, 0, 0x30, 0xe4, 0x98, 0xe8, 0xe8, 0x58, 0x2, 0, 0x8b, 0x45, 0xee, 0x8b, 0x55, 0xf8, 0x3b, 0x82, 0x99, 0x5, 0, 0, 0x74, 0x34, 0xba, 0x9, 0, 0, 0, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0xe9, 0x68, 0xfb, 0xff, 0xe8, 0x80, 0x11, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0x8d, 0x9d, 0x48, 0xff, 0xff, 0xff, 0xba, 0x9, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0x98, 0x5, 0, 0, 0x30, 0xe4, 0x98, 0xe8, 0xa6, 0x58, 0x2, 0, 0x8b, 0x45, 0xee, 0x8b, 0x55, 0xf8, 0x3b, 0x82, 0x99, 0x5, 0, 0, 0xf, 0x85, 0xe3, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x13, 0, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x1e, 0x5, 0, 0, 0, 0x74, 0x35, 0xc6, 0x85, 0x44, 0xff, 0xff, 0xff, 0x4, 0xfe, 0x8d, 0x44, 0xff, 0xff, 0xff, 0x80, 0xbd, 0x44, 0xff, 0xff, 0xff, 0xff, 0x74, 0x15, 0x31, 0xc0, 0x8a, 0x85, 0x44, 0xff, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0xa3, 0xee, 0xff, 0xff, 0xeb, 0xdc, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x1e, 0x5, 0, 0, 0, 0xc6, 0x85, 0x44, 0xff, 0xff, 0xff, 0x4, 0xfe, 0x8d, 0x44, 0xff, 0xff, 0xff, 0x80, 0xbd, 0x44, 0xff, 0xff, 0xff, 0xff, 0x74, 0x24, 0x31, 0xc0, 0x8a, 0x85, 0x44, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x54, 0x28, 0xe9, 0x31, 0xc0, 0x8a, 0x85, 0x44, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x66, 0x89, 0x90, 0xe4, 0x4, 0, 0, 0xeb, 0xcd, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x6, 0x1d, 0xf6, 0xff, 0x83, 0xf8, 0x4, 0x75, 0x10, 0x8d, 0x95, 0x48, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0xa8, 0xfc, 0xff, 0xff, 0xeb, 0x36, 0x31, 0xc0, 0x8b, 0x55, 0xf8, 0x8a, 0x42, 0x11, 0x89, 0x85, 0x40, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x40, 0xff, 0xff, 0xff, 0x81, 0xfa, 0xff, 0, 0, 0, 0x75, 0xa, 0xc7, 0x85, 0x40, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xf, 0xbf, 0x95, 0x40, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x35, 0xfa, 0xff, 0xff, 0xc7, 0x85, 0x3c, 0xff, 0xff, 0xff, 0x1, 0, 0, 0, 0xeb, 0x5b, 0xe8, 0xce, 0x66, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xe3, 0x66, 0xfb, 0xff, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0xbe, 0xec, 0x48, 0x1a, 0x10, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0xd1, 0x19, 0, 0, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x13, 0x1, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0xb, 0, 0xeb, 0x1c, 0xb8, 0x33, 0, 0, 0, 0xe8, 0x70, 0x1c, 0xf6, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0xa2, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x13, 0, 0xc7, 0x85, 0x3c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x8b, 0x85, 0x3c, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011417f, 0x5)   pushd(0xe0);                          /* push dword 0xe0 */
    II(0x10114184, 0x5)   calld(sys_check_available_stack_size, 0x51bc9); /* call 0x10165d52 */
    II(0x10114189, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011418a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011418b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011418c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011418d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011418e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10114190, 0x6)   sub(esp, 0xc4);                       /* sub esp, 0xc4 */
    II(0x10114196, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10114199, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x1011419c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011419f, 0x7)   cmp(memb_a32(ds, eax + 0x51f), 0);    /* cmp byte [eax+0x51f], 0x0 */
    II(0x101141a6, 0x6)   jzd(0x10114362, 0x1b6);               /* jz dword 0x10114362 */
    II(0x101141ac, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x101141b0, 0x2)   jnzd(0x101141c2, 0x10);               /* jnz 0x101141c2 */
    II(0x101141b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101141b5, 0x7)   cmp(memb_a32(ds, eax + 0x51e), 0);    /* cmp byte [eax+0x51e], 0x0 */
    II(0x101141bc, 0x6)   jzd(0x10114360, 0x19e);               /* jz dword 0x10114360 */
l_0x101141c2:
    II(0x101141c2, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x101141c7, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x101141cc, 0x5)   calld(0x100caafc, -0x496d5);          /* call 0x100caafc */
    II(0x101141d1, 0x5)   calld(0x10115398, 0x11c2);            /* call 0x10115398 */
    II(0x101141d6, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101141d8, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x101141da, 0x6)   lea(ebx, ebp - 0xb8);                 /* lea ebx, [ebp+0xffffff48] */
    II(0x101141e0, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x101141e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101141e8, 0x6)   mov(al, memb_a32(ds, eax + 0x598));   /* mov al, [eax+0x598] */
    II(0x101141ee, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101141f0, 0x1)   cwde();                               /* cwde */
    II(0x101141f1, 0x5)   calld(0x10139ade, 0x258e8);           /* call 0x10139ade */
    II(0x101141f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x101141f9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101141fc, 0x6)   cmp(eax, memd_a32(ds, edx + 0x599));  /* cmp eax, [edx+0x599] */
    II(0x10114202, 0x2)   jzd(0x10114238, 0x34);                /* jz 0x10114238 */
    II(0x10114204, 0x5)   mov(edx, 0x9);                        /* mov edx, 0x9 */
    II(0x10114209, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x1011420e, 0x5)   calld(0x100caafc, -0x49717);          /* call 0x100caafc */
    II(0x10114213, 0x5)   calld(0x10115398, 0x1180);            /* call 0x10115398 */
    II(0x10114218, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1011421a, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x1011421c, 0x6)   lea(ebx, ebp - 0xb8);                 /* lea ebx, [ebp+0xffffff48] */
    II(0x10114222, 0x5)   mov(edx, 0x9);                        /* mov edx, 0x9 */
    II(0x10114227, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011422a, 0x6)   mov(al, memb_a32(ds, eax + 0x598));   /* mov al, [eax+0x598] */
    II(0x10114230, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10114232, 0x1)   cwde();                               /* cwde */
    II(0x10114233, 0x5)   calld(0x10139ade, 0x258a6);           /* call 0x10139ade */
l_0x10114238:
    II(0x10114238, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x1011423b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011423e, 0x6)   cmp(eax, memd_a32(ds, edx + 0x599));  /* cmp eax, [edx+0x599] */
    II(0x10114244, 0x6)   jnzd(0x1011432d, 0xe3);               /* jnz dword 0x1011432d */
    II(0x1011424a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011424d, 0x4)   mov(memb_a32(ds, eax + 0x13), 0);     /* mov byte [eax+0x13], 0x0 */
    II(0x10114251, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10114254, 0x7)   cmp(memb_a32(ds, eax + 0x51e), 0);    /* cmp byte [eax+0x51e], 0x0 */
    II(0x1011425b, 0x2)   jzd(0x10114292, 0x35);                /* jz 0x10114292 */
    II(0x1011425d, 0x7)   mov(memb_a32(ss, ebp - 0xbc), 0x4);   /* mov byte [ebp+0xffffff44], 0x4 */
l_0x10114264:
    II(0x10114264, 0x6)   dec(memb_a32(ss, ebp - 0xbc));        /* dec byte [ebp+0xffffff44] */
    II(0x1011426a, 0x7)   cmp(memb_a32(ss, ebp - 0xbc), -0x1 /* 0xff */); /* cmp byte [ebp+0xffffff44], 0xff */
    II(0x10114271, 0x2)   jzd(0x10114288, 0x15);                /* jz 0x10114288 */
    II(0x10114273, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10114275, 0x6)   mov(al, memb_a32(ss, ebp - 0xbc));    /* mov al, [ebp+0xffffff44] */
    II(0x1011427b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1011427e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10114281, 0x5)   calld(0x10113129, -0x115d);           /* call 0x10113129 */
    II(0x10114286, 0x2)   jmpd(0x10114264, -0x24);              /* jmp 0x10114264 */
l_0x10114288:
    II(0x10114288, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011428b, 0x7)   mov(memb_a32(ds, eax + 0x51e), 0);    /* mov byte [eax+0x51e], 0x0 */
l_0x10114292:
    II(0x10114292, 0x7)   mov(memb_a32(ss, ebp - 0xbc), 0x4);   /* mov byte [ebp+0xffffff44], 0x4 */
l_0x10114299:
    II(0x10114299, 0x6)   dec(memb_a32(ss, ebp - 0xbc));        /* dec byte [ebp+0xffffff44] */
    II(0x1011429f, 0x7)   cmp(memb_a32(ss, ebp - 0xbc), -0x1 /* 0xff */); /* cmp byte [ebp+0xffffff44], 0xff */
    II(0x101142a6, 0x2)   jzd(0x101142cc, 0x24);                /* jz 0x101142cc */
    II(0x101142a8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101142aa, 0x6)   mov(al, memb_a32(ss, ebp - 0xbc));    /* mov al, [ebp+0xffffff44] */
    II(0x101142b0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101142b2, 0x4)   mov(dl, memb_a32(ds, eax + ebp - 0x17)); /* mov dl, [eax+ebp-0x17] */
    II(0x101142b6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101142b8, 0x6)   mov(al, memb_a32(ss, ebp - 0xbc));    /* mov al, [ebp+0xffffff44] */
    II(0x101142be, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101142c0, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101142c3, 0x7)   mov(memw_a32(ds, eax + 0x4e4), dx);   /* mov [eax+0x4e4], dx */
    II(0x101142ca, 0x2)   jmpd(0x10114299, -0x33);              /* jmp 0x10114299 */
l_0x101142cc:
    II(0x101142cc, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x101142d1, 0x5)   calld(0x10075fdc, -0x9e2fa);          /* call 0x10075fdc */
    II(0x101142d6, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x101142d9, 0x2)   jnzd(0x101142eb, 0x10);               /* jnz 0x101142eb */
    II(0x101142db, 0x6)   lea(edx, ebp - 0xb8);                 /* lea edx, [ebp+0xffffff48] */
    II(0x101142e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101142e4, 0x5)   calld(0x10113f91, -0x358);            /* call 0x10113f91 */
    II(0x101142e9, 0x2)   jmpd(0x10114321, 0x36);               /* jmp 0x10114321 */
l_0x101142eb:
    II(0x101142eb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101142ed, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101142f0, 0x3)   mov(al, memb_a32(ds, edx + 0x11));    /* mov al, [edx+0x11] */
    II(0x101142f3, 0x6)   mov(memd_a32(ss, ebp - 0xc0), eax);   /* mov [ebp+0xffffff40], eax */
    II(0x101142f9, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xc0)); /* movsx edx, word [ebp+0xffffff40] */
    II(0x10114300, 0x6)   cmp(edx, 0xff);                       /* cmp edx, 0xff */
    II(0x10114306, 0x2)   jnzd(0x10114312, 0xa);                /* jnz 0x10114312 */
    II(0x10114308, 0xa)   mov(memd_a32(ss, ebp - 0xc0), 0);     /* mov dword [ebp+0xffffff40], 0x0 */
l_0x10114312:
    II(0x10114312, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xc0)); /* movsx edx, word [ebp+0xffffff40] */
    II(0x10114319, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011431c, 0x5)   calld(0x10113d56, -0x5cb);            /* call 0x10113d56 */
l_0x10114321:
    II(0x10114321, 0xa)   mov(memd_a32(ss, ebp - 0xc4), 0x1);   /* mov dword [ebp+0xffffff3c], 0x1 */
    II(0x1011432b, 0x2)   jmpd(0x10114388, 0x5b);               /* jmp 0x10114388 */
l_0x1011432d:
    II(0x1011432d, 0x5)   calld(0x100caa00, -0x49932);          /* call 0x100caa00 */
    II(0x10114332, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10114337, 0x1)   pushd(eax);                           /* push eax */
    II(0x10114338, 0x5)   calld(0x100caa20, -0x4991d);          /* call 0x100caa20 */
    II(0x1011433d, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10114342, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10114344, 0x5)   mov(esi, 0x101a48ec);                 /* mov esi, 0x101a48ec */ /* "The host has selected a load file that is not compatible with the load file on your system. You will not be able to start this session until the host selects another load file or selects a new world map." */
    II(0x10114349, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1011434b, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1011434d, 0x5)   calld(0x10115d23, 0x19d1);            /* call 0x10115d23 */
    II(0x10114352, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10114355, 0x4)   mov(memb_a32(ds, eax + 0x13), 0x1);   /* mov byte [eax+0x13], 0x1 */
    II(0x10114359, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011435c, 0x4)   mov(memb_a32(ds, eax + 0xb), 0);      /* mov byte [eax+0xb], 0x0 */
l_0x10114360:
    II(0x10114360, 0x2)   jmpd(0x1011437e, 0x1c);               /* jmp 0x1011437e */
l_0x10114362:
    II(0x10114362, 0x5)   mov(eax, 0x33);                       /* mov eax, 0x33 */
    II(0x10114367, 0x5)   calld(0x10075fdc, -0x9e390);          /* call 0x10075fdc */
    II(0x1011436c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1011436f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10114372, 0x5)   calld(0x10114119, -0x25e);            /* call 0x10114119 */
    II(0x10114377, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011437a, 0x4)   mov(memb_a32(ds, eax + 0x13), 0);     /* mov byte [eax+0x13], 0x0 */
l_0x1011437e:
    II(0x1011437e, 0xa)   mov(memd_a32(ss, ebp - 0xc4), 0);     /* mov dword [ebp+0xffffff3c], 0x0 */
l_0x10114388:
    II(0x10114388, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc4));   /* mov eax, [ebp+0xffffff3c] */
    II(0x1011438e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10114390, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10114391, 0x1)   popd(edi);                            /* pop edi */
    II(0x10114392, 0x1)   popd(esi);                            /* pop esi */
    II(0x10114393, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10114394, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10114395, 0x1)   retd();                               /* ret */
FUNC_END

