FUNC_BEGIN(0x1008764d, 0x3ac058039e8d5e81, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xfb, 0xe6, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xc5, 0xec, 0xfe, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x39, 0xee, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x6f, 0xf5, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xde, 0x36, 0xb, 0, 0x84, 0xc0, 0x74, 0x63, 0x8d, 0x45, 0xf4, 0xe8, 0x35, 0xed, 0xfe, 0xff, 0xe8, 0x2d, 0x42, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x10, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xb6, 0xe8, 0xfe, 0xff, 0xeb, 0x5c, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf4, 0xe8, 0xdd, 0xec, 0xfe, 0xff, 0xe8, 0x8a, 0xb3, 0xc, 0, 0x84, 0xc0, 0x74, 0x14, 0x8d, 0x45, 0xf4, 0xe8, 0xcc, 0xec, 0xfe, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x16, 0xe8, 0xfd, 0x39, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0xe1, 0xec, 0xfe, 0xff, 0xe8, 0x85, 0xb2, 0x1, 0, 0xeb, 0x87, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x64, 0xe8, 0xfe, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x58, 0xe8, 0xfe, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008764d, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10087652, 0x5)   calld(sys_check_available_stack_size, 0xde6fb); /* call 0x10165d52 */
    II(0x10087657, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10087658, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10087659, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008765a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008765b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008765c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008765d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008765f, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x10087665, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10087668, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008766b, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1008766e, 0x5)   calld(0x10076338, -0x1133b);          /* call 0x10076338 */
    II(0x10087673, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x10087676, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10087678, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008767a, 0x5)   calld(0x100764b8, -0x111c7);          /* call 0x100764b8 */
    II(0x1008767f, 0x2)   jmpd(0x10087689, 0x8);                /* jmp 0x10087689 */
l_0x10087681:
    II(0x10087681, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10087684, 0x5)   calld(0x10076bf8, -0x10a91);          /* call 0x10076bf8 */
l_0x10087689:
    II(0x10087689, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008768b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008768e, 0x5)   calld(0x1013ad71, 0xb36de);           /* call 0x1013ad71 */
    II(0x10087693, 0x2)   test(al, al);                         /* test al, al */
    II(0x10087695, 0x2)   jzd(0x100876fa, 0x63);                /* jz 0x100876fa */
    II(0x10087697, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008769a, 0x5)   calld(0x100763d4, -0x112cb);          /* call 0x100763d4 */
    II(0x1008769f, 0x5)   calld(0x1007b8d1, -0xbdd3);           /* call 0x1007b8d1 */
    II(0x100876a4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100876a6, 0x2)   jzd(0x100876b8, 0x10);                /* jz 0x100876b8 */
    II(0x100876a8, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100876ac, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100876ae, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100876b1, 0x5)   calld(0x10075f6c, -0x1174a);          /* call 0x10075f6c */
    II(0x100876b6, 0x2)   jmpd(0x10087714, 0x5c);               /* jmp 0x10087714 */
l_0x100876b8:
    II(0x100876b8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100876bb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100876be, 0x5)   calld(0x100763a0, -0x11323);          /* call 0x100763a0 */
    II(0x100876c3, 0x5)   calld(0x10152a52, 0xcb38a);           /* call 0x10152a52 */
    II(0x100876c8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100876ca, 0x2)   jzd(0x100876e0, 0x14);                /* jz 0x100876e0 */
    II(0x100876cc, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100876cf, 0x5)   calld(0x100763a0, -0x11334);          /* call 0x100763a0 */
    II(0x100876d4, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100876d7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100876dc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100876de, 0x2)   jgd(0x100876e2, 0x2);                 /* jg 0x100876e2 */
l_0x100876e0:
    II(0x100876e0, 0x2)   jmpd(0x100876f8, 0x16);               /* jmp 0x100876f8 */
l_0x100876e2:
    II(0x100876e2, 0x5)   calld(0x1008b0e4, 0x39fd);            /* call 0x1008b0e4 */
    II(0x100876e7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100876e9, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100876eb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100876ee, 0x5)   calld(0x100763d4, -0x1131f);          /* call 0x100763d4 */
    II(0x100876f3, 0x5)   calld(0x100a297d, 0x1b285);           /* call 0x100a297d */
l_0x100876f8:
    II(0x100876f8, 0x2)   jmpd(0x10087681, -0x79);              /* jmp 0x10087681 */
l_0x100876fa:
    II(0x100876fa, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100876fe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10087700, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10087703, 0x5)   calld(0x10075f6c, -0x1179c);          /* call 0x10075f6c */
    II(0x10087708, 0x2)   jmpd(0x10087714, 0xa);                /* jmp 0x10087714 */
//  II(0x1008770a, 0xa)   /* Недостижимый код. */
l_0x10087714:
    II(0x10087714, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10087717, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10087719, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008771a, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008771b, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008771c, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008771d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008771e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008771f, 0x1)   retd();                               /* ret */
FUNC_END

