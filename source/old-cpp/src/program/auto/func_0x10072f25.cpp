FUNC_BEGIN(0x10072f25, 0xf63415714424bb2f, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x23, 0x2e, 0xf, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0xae, 0x35, 0, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0xe8, 0xdb, 0x33, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0xd5, 0x34, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x87, 0x3c, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xf6, 0x7d, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0xe5, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x15, 0x34, 0, 0, 0xe8, 0xf8, 0x31, 0, 0, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x33, 0x8d, 0x45, 0xf0, 0xe8, 0xff, 0x33, 0, 0, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0xd, 0x8d, 0x45, 0xf0, 0xe8, 0x52, 0x34, 0, 0, 0x3b, 0x45, 0xe8, 0x74, 0x2, 0xeb, 0xa, 0x31, 0xd2, 0x8b, 0x45, 0xe8, 0xe8, 0x8, 0x2, 0, 0, 0xe9, 0x97, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xcc, 0x33, 0, 0, 0x80, 0x78, 0x3d, 0x2, 0x74, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xbe, 0x33, 0, 0, 0x80, 0x78, 0x3d, 0x1b, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xae, 0x33, 0, 0, 0x80, 0x78, 0x3d, 0x1e, 0x75, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xa0, 0x33, 0, 0, 0x80, 0x78, 0x3e, 0x1, 0x74, 0x2, 0xeb, 0x15, 0x8d, 0x45, 0xf0, 0xe8, 0x90, 0x33, 0, 0, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0x79, 0x33, 0, 0, 0x80, 0x78, 0x4e, 0, 0x75, 0x2, 0xeb, 0x15, 0x8d, 0x45, 0xf0, 0xe8, 0x69, 0x33, 0, 0, 0x8a, 0x40, 0x60, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x1d, 0x31, 0xdb, 0x8d, 0x45, 0xf0, 0xe8, 0x50, 0x33, 0, 0, 0x8b, 0x50, 0x3a, 0xc1, 0xfa, 0x18, 0x8d, 0x45, 0xf0, 0xe8, 0x76, 0x33, 0, 0, 0xe8, 0xf0, 0xff, 0xe, 0, 0xe9, 0x1, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xfa, 0x2e, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10072f25, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10072f2a, 0x5)   calld(sys_check_available_stack_size, 0xf2e23); /* call 0x10165d52 */
    II(0x10072f2f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10072f30, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10072f31, 0x1)   pushd(esi);                           /* push esi */
    II(0x10072f32, 0x1)   pushd(edi);                           /* push edi */
    II(0x10072f33, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10072f34, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10072f36, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x10072f3c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10072f3f, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10072f42, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10072f46, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072f49, 0x5)   calld(0x100764fc, 0x35ae);            /* call 0x100764fc */
    II(0x10072f4e, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10072f51, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10072f55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10072f58, 0x5)   calld(0x10076338, 0x33db);            /* call 0x10076338 */
    II(0x10072f5d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10072f5f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072f62, 0x5)   calld(0x1007643c, 0x34d5);            /* call 0x1007643c */
    II(0x10072f67, 0x2)   jmpd(0x10072f71, 0x8);                /* jmp 0x10072f71 */
l_0x10072f69:
    II(0x10072f69, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072f6c, 0x5)   calld(0x10076bf8, 0x3c87);            /* call 0x10076bf8 */
l_0x10072f71:
    II(0x10072f71, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072f73, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072f76, 0x5)   calld(0x1013ad71, 0xc7df6);           /* call 0x1013ad71 */
    II(0x10072f7b, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072f7d, 0x6)   jzd(0x10073068, 0xe5);                /* jz dword 0x10073068 */
    II(0x10072f83, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072f86, 0x5)   calld(0x100763a0, 0x3415);            /* call 0x100763a0 */
    II(0x10072f8b, 0x5)   calld(0x10076188, 0x31f8);            /* call 0x10076188 */
    II(0x10072f90, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10072f93, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x10072f97, 0x2)   jzd(0x10072fcc, 0x33);                /* jz 0x10072fcc */
    II(0x10072f99, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072f9c, 0x5)   calld(0x100763a0, 0x33ff);            /* call 0x100763a0 */
    II(0x10072fa1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072fa3, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10072fa6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10072faa, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10072fac, 0x2)   jnzd(0x10072fbb, 0xd);                /* jnz 0x10072fbb */
    II(0x10072fae, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072fb1, 0x5)   calld(0x10076408, 0x3452);            /* call 0x10076408 */
    II(0x10072fb6, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x18));   /* cmp eax, [ebp-0x18] */
    II(0x10072fb9, 0x2)   jzd(0x10072fbd, 0x2);                 /* jz 0x10072fbd */
l_0x10072fbb:
    II(0x10072fbb, 0x2)   jmpd(0x10072fc7, 0xa);                /* jmp 0x10072fc7 */
l_0x10072fbd:
    II(0x10072fbd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072fbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10072fc2, 0x5)   calld(0x100731cf, 0x208);             /* call 0x100731cf */
l_0x10072fc7:
    II(0x10072fc7, 0x5)   jmpd(0x10073063, 0x97);               /* jmp 0x10073063 */
l_0x10072fcc:
    II(0x10072fcc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072fcf, 0x5)   calld(0x100763a0, 0x33cc);            /* call 0x100763a0 */
    II(0x10072fd4, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x10072fd8, 0x2)   jzd(0x10072fe8, 0xe);                 /* jz 0x10072fe8 */
    II(0x10072fda, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072fdd, 0x5)   calld(0x100763a0, 0x33be);            /* call 0x100763a0 */
    II(0x10072fe2, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x10072fe6, 0x2)   jnzd(0x10072fea, 0x2);                /* jnz 0x10072fea */
l_0x10072fe8:
    II(0x10072fe8, 0x2)   jmpd(0x10072ff8, 0xe);                /* jmp 0x10072ff8 */
l_0x10072fea:
    II(0x10072fea, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072fed, 0x5)   calld(0x100763a0, 0x33ae);            /* call 0x100763a0 */
    II(0x10072ff2, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x10072ff6, 0x2)   jnzd(0x10073006, 0xe);                /* jnz 0x10073006 */
l_0x10072ff8:
    II(0x10072ff8, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10072ffb, 0x5)   calld(0x100763a0, 0x33a0);            /* call 0x100763a0 */
    II(0x10073000, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x10073004, 0x2)   jzd(0x10073008, 0x2);                 /* jz 0x10073008 */
l_0x10073006:
    II(0x10073006, 0x2)   jmpd(0x1007301d, 0x15);               /* jmp 0x1007301d */
l_0x10073008:
    II(0x10073008, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007300b, 0x5)   calld(0x100763a0, 0x3390);            /* call 0x100763a0 */
    II(0x10073010, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10073012, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10073015, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10073019, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007301b, 0x2)   jzd(0x1007301f, 0x2);                 /* jz 0x1007301f */
l_0x1007301d:
    II(0x1007301d, 0x2)   jmpd(0x1007302d, 0xe);                /* jmp 0x1007302d */
l_0x1007301f:
    II(0x1007301f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10073022, 0x5)   calld(0x100763a0, 0x3379);            /* call 0x100763a0 */
    II(0x10073027, 0x4)   cmp(memb_a32(ds, eax + 0x4e), 0);     /* cmp byte [eax+0x4e], 0x0 */
    II(0x1007302b, 0x2)   jnzd(0x1007302f, 0x2);                /* jnz 0x1007302f */
l_0x1007302d:
    II(0x1007302d, 0x2)   jmpd(0x10073044, 0x15);               /* jmp 0x10073044 */
l_0x1007302f:
    II(0x1007302f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10073032, 0x5)   calld(0x100763a0, 0x3369);            /* call 0x100763a0 */
    II(0x10073037, 0x3)   mov(al, memb_a32(ds, eax + 0x60));    /* mov al, [eax+0x60] */
    II(0x1007303a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007303f, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x10073042, 0x2)   jzd(0x10073046, 0x2);                 /* jz 0x10073046 */
l_0x10073044:
    II(0x10073044, 0x2)   jmpd(0x10073063, 0x1d);               /* jmp 0x10073063 */
l_0x10073046:
    II(0x10073046, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10073048, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007304b, 0x5)   calld(0x100763a0, 0x3350);            /* call 0x100763a0 */
    II(0x10073050, 0x3)   mov(edx, memd_a32(ds, eax + 0x3a));   /* mov edx, [eax+0x3a] */
    II(0x10073053, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x10073056, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10073059, 0x5)   calld(0x100763d4, 0x3376);            /* call 0x100763d4 */
    II(0x1007305e, 0x5)   calld(0x10163053, 0xefff0);           /* call 0x10163053 */
l_0x10073063:
    II(0x10073063, 0x5)   jmpd(0x10072f69, -0xff);              /* jmp 0x10072f69 */
l_0x10073068:
    II(0x10073068, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007306a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007306d, 0x5)   calld(0x10075f6c, 0x2efa);            /* call 0x10075f6c */
    II(0x10073072, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10073074, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10073075, 0x1)   popd(edi);                            /* pop edi */
    II(0x10073076, 0x1)   popd(esi);                            /* pop esi */
    II(0x10073077, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10073078, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10073079, 0x1)   retd();                               /* ret */
FUNC_END

