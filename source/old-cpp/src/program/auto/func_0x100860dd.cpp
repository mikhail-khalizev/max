FUNC_BEGIN(0x100860dd, 0x8b1a945c63114e89, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x6b, 0xfc, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x5, 0x3c, 0, 0, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd5, 0x3a, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0xe1, 0x3, 0xff, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf8, 0xfe, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x3b, 0x4c, 0xb, 0, 0x84, 0xc0, 0x74, 0x17, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x2f, 0x4, 0xff, 0xff, 0xe8, 0xf2, 0, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x17, 0x89, 0x45, 0xf0, 0xeb, 0x8, 0x8d, 0x45, 0xe0, 0xe8, 0x9d, 0xa, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xc, 0x4c, 0xb, 0, 0x84, 0xc0, 0x74, 0x5a, 0x8d, 0x45, 0xe0, 0xe8, 0x5b, 0x39, 0, 0, 0xe8, 0x4e, 0x3e, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xbc, 0x2, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x6e, 0xa, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xdd, 0x4b, 0xb, 0, 0x84, 0xc0, 0x74, 0x29, 0x8d, 0x45, 0xe4, 0xe8, 0, 0x2, 0xff, 0xff, 0xe8, 0x97, 0, 0xff, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x40, 0x17, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0xa, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x40, 0x17, 0x89, 0x45, 0xf0, 0xeb, 0xc1, 0xeb, 0x90, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xf4, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x99, 0xfd, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x67, 0x2e, 0, 0, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x83, 0xfd, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x51, 0x2e, 0, 0, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100860dd, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100860e2, 0x5)   calld(sys_check_available_stack_size, 0xdfc6b); /* call 0x10165d52 */
    II(0x100860e7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100860e8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100860e9, 0x1)   pushd(edx);                           /* push edx */
    II(0x100860ea, 0x1)   pushd(esi);                           /* push esi */
    II(0x100860eb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100860ec, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100860ed, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100860ef, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100860f5, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100860f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100860fb, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100860fe, 0x5)   calld(0x10089d08, 0x3c05);            /* call 0x10089d08 */
    II(0x10086103, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x10086106, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086108, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008610a, 0x5)   calld(0x10089be4, 0x3ad5);            /* call 0x10089be4 */
    II(0x1008610f, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x10086113, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10086116, 0x5)   calld(0x100764fc, -0xfc1f);           /* call 0x100764fc */
    II(0x1008611b, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1008611e, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x10086122, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10086129, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008612b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008612e, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x10086131, 0x5)   calld(0x1013ad71, 0xb4c3b);           /* call 0x1013ad71 */
    II(0x10086136, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086138, 0x2)   jzd(0x10086151, 0x17);                /* jz 0x10086151 */
    II(0x1008613a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008613d, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x10086140, 0x5)   calld(0x10076574, -0xfbd1);           /* call 0x10076574 */
    II(0x10086145, 0x5)   calld(0x1007623c, -0xff0e);           /* call 0x1007623c */
    II(0x1008614a, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x1008614e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x10086151:
    II(0x10086151, 0x2)   jmpd(0x1008615b, 0x8);                /* jmp 0x1008615b */
l_0x10086153:
    II(0x10086153, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10086156, 0x5)   calld(0x10076bf8, -0xf563);           /* call 0x10076bf8 */
l_0x1008615b:
    II(0x1008615b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008615d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10086160, 0x5)   calld(0x1013ad71, 0xb4c0c);           /* call 0x1013ad71 */
    II(0x10086165, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086167, 0x2)   jzd(0x100861c3, 0x5a);                /* jz 0x100861c3 */
    II(0x10086169, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1008616c, 0x5)   calld(0x10089acc, 0x395b);            /* call 0x10089acc */
    II(0x10086171, 0x5)   calld(0x10089fc4, 0x3e4e);            /* call 0x10089fc4 */
    II(0x10086176, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086178, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008617b, 0x5)   calld(0x1007643c, -0xfd44);           /* call 0x1007643c */
    II(0x10086180, 0x2)   jmpd(0x1008618a, 0x8);                /* jmp 0x1008618a */
l_0x10086182:
    II(0x10086182, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10086185, 0x5)   calld(0x10076bf8, -0xf592);           /* call 0x10076bf8 */
l_0x1008618a:
    II(0x1008618a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008618c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008618f, 0x5)   calld(0x1013ad71, 0xb4bdd);           /* call 0x1013ad71 */
    II(0x10086194, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086196, 0x2)   jzd(0x100861c1, 0x29);                /* jz 0x100861c1 */
    II(0x10086198, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008619b, 0x5)   calld(0x100763a0, -0xfe00);           /* call 0x100763a0 */
    II(0x100861a0, 0x5)   calld(0x1007623c, -0xff69);           /* call 0x1007623c */
    II(0x100861a5, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100861a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100861ab, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x100861af, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100861b3, 0x2)   jled(0x100861bf, 0xa);                /* jle 0x100861bf */
    II(0x100861b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100861b8, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x100861bc, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x100861bf:
    II(0x100861bf, 0x2)   jmpd(0x10086182, -0x3f);              /* jmp 0x10086182 */
l_0x100861c1:
    II(0x100861c1, 0x2)   jmpd(0x10086153, -0x70);              /* jmp 0x10086153 */
l_0x100861c3:
    II(0x100861c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100861c6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100861c9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100861cb, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100861ce, 0x5)   calld(0x10075f6c, -0x10267);          /* call 0x10075f6c */
    II(0x100861d3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100861d5, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100861d8, 0x5)   calld(0x10089044, 0x2e67);            /* call 0x10089044 */
    II(0x100861dd, 0x2)   jmpd(0x100861f3, 0x14);               /* jmp 0x100861f3 */
//  II(0x100861df, 0x14)  /* Недостижимый код. */
l_0x100861f3:
    II(0x100861f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100861f6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100861f8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100861f9, 0x1)   popd(edi);                            /* pop edi */
    II(0x100861fa, 0x1)   popd(esi);                            /* pop esi */
    II(0x100861fb, 0x1)   popd(edx);                            /* pop edx */
    II(0x100861fc, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100861fd, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100861fe, 0x1)   retd();                               /* ret */
FUNC_END

