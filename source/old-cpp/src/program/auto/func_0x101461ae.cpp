FUNC_BEGIN(0x101461ae, 0x98f2bf684d4a9dde, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x9a, 0xfb, 0x1, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x5d, 0xfc, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xf4, 0xe8, 0x2f, 0x1, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x85, 0x1e, 0, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf0, 0xfe, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x79, 0x4b, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x21, 0x8d, 0x45, 0xe4, 0xe8, 0x5c, 0xa5, 0xf9, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe0, 0xff, 0x52, 0x10, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xd3, 0x1d, 0, 0, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xf8, 0xe8, 0, 0x1e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x26, 0x9f, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x80, 0xa1, 0xf9, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x10, 0x9f, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x6a, 0xa1, 0xf9, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x101461ae, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x101461b3, 0x5)   calld(sys_check_available_stack_size, 0x1fb9a); /* call 0x10165d52 */
    II(0x101461b8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101461b9, 0x1)   pushd(esi);                           /* push esi */
    II(0x101461ba, 0x1)   pushd(edi);                           /* push edi */
    II(0x101461bb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101461bc, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101461be, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x101461c4, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101461c7, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x101461ca, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x101461cd, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x101461d0, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x101461d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101461d6, 0x5)   calld(0x1014630a, 0x12f);             /* call 0x1014630a */
    II(0x101461db, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x101461df, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101461e2, 0x5)   calld(0x1014806c, 0x1e85);            /* call 0x1014806c */
    II(0x101461e7, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101461ea, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x101461ee, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101461f0, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x101461f3, 0x5)   calld(0x1013ad71, -0xb487);           /* call 0x1013ad71 */
    II(0x101461f8, 0x2)   test(al, al);                         /* test al, al */
    II(0x101461fa, 0x2)   jzd(0x1014621d, 0x21);                /* jz 0x1014621d */
    II(0x101461fc, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x101461ff, 0x5)   calld(0x100e0760, -0x65aa4);          /* call 0x100e0760 */
    II(0x10146204, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x10146207, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1014620a, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x1014620d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10146210, 0x3)   calld_abs(memd_a32(ds, edx + 0x10));  /* call dword near [edx+0x10] */
    II(0x10146213, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10146215, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10146218, 0x5)   calld(0x10147ff0, 0x1dd3);            /* call 0x10147ff0 */
l_0x1014621d:
    II(0x1014621d, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10146220, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10146223, 0x5)   calld(0x10148028, 0x1e00);            /* call 0x10148028 */
    II(0x10146228, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014622a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014622d, 0x5)   calld(0x100e0158, -0x660da);          /* call 0x100e0158 */
    II(0x10146232, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146234, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10146237, 0x5)   calld(0x100e03bc, -0x65e80);          /* call 0x100e03bc */
    II(0x1014623c, 0x2)   jmpd(0x10146252, 0x14);               /* jmp 0x10146252 */
//  II(0x1014623e, 0x14)  /* Недостижимый код. */
l_0x10146252:
    II(0x10146252, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10146255, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10146257, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10146258, 0x1)   popd(edi);                            /* pop edi */
    II(0x10146259, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014625a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014625b, 0x1)   retd();                               /* ret */
FUNC_END

