FUNC_BEGIN(0x10133330, 0xa6ada961611effe5, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0x18, 0x2a, 0x3, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xd0, 0x47, 0x2, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x1, 0xd0, 0x66, 0x8b, 0x80, 0xf0, 0xa4, 0x1c, 0x10, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x5d, 0xf, 0x8d, 0xde, 0x2, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0x8b, 0x45, 0xf0, 0xe8, 0x5, 0x83, 0xf9, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x49, 0x34, 0xf4, 0xff, 0xb8, 0x24, 0, 0, 0, 0xe8, 0x3f, 0x2a, 0x3, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x23, 0xf, 0xbf, 0x55, 0xe4, 0x8b, 0x45, 0xf0, 0xe8, 0x28, 0x7d, 0xf5, 0xff, 0x8b, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x10, 0x6f, 0xf9, 0xff, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd0, 0x8b, 0x55, 0xd0, 0x8d, 0x45, 0xcc, 0xe8, 0xfc, 0x33, 0xf4, 0xff, 0x8a, 0x45, 0xfc, 0x88, 0x45, 0xe8, 0xe9, 0x2d, 0x1, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x19, 0x33, 0xf4, 0xff, 0x66, 0x8b, 0x40, 0xe, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0xa, 0x33, 0xf4, 0xff, 0x83, 0xc0, 0xe, 0x89, 0x45, 0xc4, 0xe9, 0x26, 0x1, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xf7, 0x32, 0xf4, 0xff, 0x66, 0x8b, 0x40, 0x14, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0xe8, 0x32, 0xf4, 0xff, 0x83, 0xc0, 0x14, 0x89, 0x45, 0xc4, 0xe9, 0x4, 0x1, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xd5, 0x32, 0xf4, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0xc6, 0x32, 0xf4, 0xff, 0x83, 0xc0, 0x12, 0x89, 0x45, 0xc4, 0xe9, 0xe2, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xb3, 0x32, 0xf4, 0xff, 0x66, 0x8b, 0x40, 0xc, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0xa4, 0x32, 0xf4, 0xff, 0x83, 0xc0, 0xc, 0x89, 0x45, 0xc4, 0xe9, 0xc0, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x91, 0x32, 0xf4, 0xff, 0x66, 0x8b, 0x40, 0xa, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0x82, 0x32, 0xf4, 0xff, 0x83, 0xc0, 0xa, 0x89, 0x45, 0xc4, 0xe9, 0x9e, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x6f, 0x32, 0xf4, 0xff, 0x66, 0x8b, 0x40, 0x10, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0x60, 0x32, 0xf4, 0xff, 0x83, 0xc0, 0x10, 0x89, 0x45, 0xc4, 0xe9, 0x7c, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x4d, 0x32, 0xf4, 0xff, 0x66, 0x8b, 0x40, 0x17, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0x3e, 0x32, 0xf4, 0xff, 0x83, 0xc0, 0x17, 0x89, 0x45, 0xc4, 0xeb, 0x5d, 0x8d, 0x45, 0xe0, 0xe8, 0x2e, 0x32, 0xf4, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0x1f, 0x32, 0xf4, 0xff, 0x83, 0xc0, 0x8, 0x89, 0x45, 0xc4, 0xeb, 0x3e, 0x8d, 0x40, 0, 0xf, 0x34, 0x13, 0x10, 0x31, 0x34, 0x13, 0x10, 0x53, 0x34, 0x13, 0x10, 0x75, 0x34, 0x13, 0x10, 0x97, 0x34, 0x13, 0x10, 0xb9, 0x34, 0x13, 0x10, 0xdb, 0x34, 0x13, 0x10, 0xfa, 0x34, 0x13, 0x10, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xc0, 0x80, 0x7d, 0xc0, 0x7, 0x77, 0xcf, 0x31, 0xc0, 0x8a, 0x45, 0xc0, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x1c, 0x35, 0x13, 0x10, 0x80, 0x7d, 0xfc, 0x7, 0x75, 0x78, 0xf, 0xbf, 0x55, 0xf4, 0x83, 0xc2, 0xa, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xc8, 0x6b, 0xd2, 0xa, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0x8d, 0x58, 0xa, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xbc, 0xf, 0xbf, 0x55, 0xf4, 0x83, 0xc2, 0x9, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xc8, 0x6b, 0xd2, 0xa, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0x8d, 0x58, 0x9, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xb8, 0xba, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xbc, 0xe8, 0xbd, 0x38, 0xf4, 0xff, 0x89, 0x45, 0xbc, 0xba, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xb8, 0xe8, 0xac, 0x38, 0xf4, 0xff, 0x89, 0x45, 0xb8, 0xeb, 0x35, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xc8, 0x4a, 0xf, 0xaf, 0xd0, 0xbb, 0xa, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xb8, 0xf, 0xbf, 0x45, 0xc8, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xaf, 0xd0, 0xbb, 0xa, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x66, 0x3b, 0x45, 0xb8, 0x74, 0x4b, 0x8b, 0x55, 0xbc, 0x2b, 0x55, 0xb8, 0x8b, 0x45, 0xc4, 0x66, 0x1, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x9, 0x31, 0xf4, 0xff, 0xe8, 0xb8, 0x81, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xfa, 0x30, 0xf4, 0xff, 0xe8, 0x79, 0x81, 0xf9, 0xff, 0x8d, 0x45, 0xcc, 0xe8, 0x9, 0x81, 0xf9, 0xff, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xde, 0x7f, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x84, 0x28, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x7a, 0x28, 0xf4, 0xff, 0xe9, 0xf, 0xfd, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10133330, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x10133335, 0x5)   calld(sys_check_available_stack_size, 0x32a18); /* call 0x10165d52 */
    II(0x1013333a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013333b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013333c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013333d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013333e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013333f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10133341, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x10133347, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1013334a, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x1013334d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10133351, 0x6)   imul(edx, eax, 0x247);                /* imul edx, eax, 0x247 */
    II(0x10133357, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1013335b, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1013335e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10133360, 0x7)   mov(ax, memw_a32(ds, eax + 0x101ca4f0)); /* mov ax, [eax+0x101ca4f0] */
    II(0x10133367, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1013336a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013336e, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10133374, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x1013337a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013337d, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10133384, 0x2)   jmpd(0x1013338c, 0x6);                /* jmp 0x1013338c */
l_0x10133386:
    II(0x10133386, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10133389, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x1013338c:
    II(0x1013338c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10133390, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x10133393, 0x6)   jged(0x10133677, 0x2de);              /* jge dword 0x10133677 */
    II(0x10133399, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013339c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1013339f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x101333a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101333a6, 0x5)   calld(0x100cb6b0, -0x67cfb);          /* call 0x100cb6b0 */
    II(0x101333ab, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x101333ae, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101333b0, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x101333b2, 0x5)   calld(0x10076800, -0xbcbb7);          /* call 0x10076800 */
    II(0x101333b7, 0x5)   mov(eax, 0x24);                       /* mov eax, 0x24 */
    II(0x101333bc, 0x5)   calld(sys_new, 0x32a3f);              /* call 0x10165e00 */
    II(0x101333c1, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x101333c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101333c7, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x101333ca, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x101333ce, 0x2)   jzd(0x101333f3, 0x23);                /* jz 0x101333f3 */
    II(0x101333d0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x101333d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101333d7, 0x5)   calld(0x1008b104, -0xa82d8);          /* call 0x1008b104 */
    II(0x101333dc, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x24));   /* mov ebx, [ebp-0x24] */
    II(0x101333df, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101333e1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x101333e3, 0x5)   calld(0x100ca2f8, -0x690f0);          /* call 0x100ca2f8 */
    II(0x101333e8, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x101333eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x101333ee, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x101333f1, 0x2)   jmpd(0x101333f9, 0x6);                /* jmp 0x101333f9 */
l_0x101333f3:
    II(0x101333f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x101333f6, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
l_0x101333f9:
    II(0x101333f9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x101333fc, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x101333ff, 0x5)   calld(0x10076800, -0xbcc04);          /* call 0x10076800 */
    II(0x10133404, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10133407, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x1013340a, 0x5)   jmpd(0x1013353c, 0x12d);              /* jmp 0x1013353c */
l_0x1013340f:
    II(0x1013340f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10133412, 0x5)   calld(0x10076730, -0xbcce7);          /* call 0x10076730 */
    II(0x10133417, 0x4)   mov(ax, memw_a32(ds, eax + 0xe));     /* mov ax, [eax+0xe] */
    II(0x1013341b, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1013341e, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10133421, 0x5)   calld(0x10076730, -0xbccf6);          /* call 0x10076730 */
    II(0x10133426, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x10133429, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1013342c, 0x5)   jmpd(0x10133557, 0x126);              /* jmp 0x10133557 */
l_0x10133431:
    II(0x10133431, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10133434, 0x5)   calld(0x10076730, -0xbcd09);          /* call 0x10076730 */
    II(0x10133439, 0x4)   mov(ax, memw_a32(ds, eax + 0x14));    /* mov ax, [eax+0x14] */
    II(0x1013343d, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10133440, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10133443, 0x5)   calld(0x10076730, -0xbcd18);          /* call 0x10076730 */
    II(0x10133448, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x1013344b, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1013344e, 0x5)   jmpd(0x10133557, 0x104);              /* jmp 0x10133557 */
l_0x10133453:
    II(0x10133453, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10133456, 0x5)   calld(0x10076730, -0xbcd2b);          /* call 0x10076730 */
    II(0x1013345b, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x1013345f, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10133462, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10133465, 0x5)   calld(0x10076730, -0xbcd3a);          /* call 0x10076730 */
    II(0x1013346a, 0x3)   add(eax, 0x12);                       /* add eax, 0x12 */
    II(0x1013346d, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x10133470, 0x5)   jmpd(0x10133557, 0xe2);               /* jmp 0x10133557 */
l_0x10133475:
    II(0x10133475, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10133478, 0x5)   calld(0x10076730, -0xbcd4d);          /* call 0x10076730 */
    II(0x1013347d, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x10133481, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10133484, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10133487, 0x5)   calld(0x10076730, -0xbcd5c);          /* call 0x10076730 */
    II(0x1013348c, 0x3)   add(eax, 0xc);                        /* add eax, 0xc */
    II(0x1013348f, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x10133492, 0x5)   jmpd(0x10133557, 0xc0);               /* jmp 0x10133557 */
l_0x10133497:
    II(0x10133497, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1013349a, 0x5)   calld(0x10076730, -0xbcd6f);          /* call 0x10076730 */
    II(0x1013349f, 0x4)   mov(ax, memw_a32(ds, eax + 0xa));     /* mov ax, [eax+0xa] */
    II(0x101334a3, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x101334a6, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x101334a9, 0x5)   calld(0x10076730, -0xbcd7e);          /* call 0x10076730 */
    II(0x101334ae, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x101334b1, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x101334b4, 0x5)   jmpd(0x10133557, 0x9e);               /* jmp 0x10133557 */
l_0x101334b9:
    II(0x101334b9, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101334bc, 0x5)   calld(0x10076730, -0xbcd91);          /* call 0x10076730 */
    II(0x101334c1, 0x4)   mov(ax, memw_a32(ds, eax + 0x10));    /* mov ax, [eax+0x10] */
    II(0x101334c5, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x101334c8, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x101334cb, 0x5)   calld(0x10076730, -0xbcda0);          /* call 0x10076730 */
    II(0x101334d0, 0x3)   add(eax, 0x10);                       /* add eax, 0x10 */
    II(0x101334d3, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x101334d6, 0x5)   jmpd(0x10133557, 0x7c);               /* jmp 0x10133557 */
l_0x101334db:
    II(0x101334db, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101334de, 0x5)   calld(0x10076730, -0xbcdb3);          /* call 0x10076730 */
    II(0x101334e3, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x101334e7, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x101334ea, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x101334ed, 0x5)   calld(0x10076730, -0xbcdc2);          /* call 0x10076730 */
    II(0x101334f2, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x101334f5, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x101334f8, 0x2)   jmpd(0x10133557, 0x5d);               /* jmp 0x10133557 */
l_0x101334fa:
    II(0x101334fa, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101334fd, 0x5)   calld(0x10076730, -0xbcdd2);          /* call 0x10076730 */
    II(0x10133502, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10133506, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10133509, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1013350c, 0x5)   calld(0x10076730, -0xbcde1);          /* call 0x10076730 */
    II(0x10133511, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x10133514, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
l_0x10133517:
    II(0x10133517, 0x2)   jmpd(0x10133557, 0x3e);               /* jmp 0x10133557 */
//    II(0x10133519, 0x3)   /* Выравнивание. */
//    II(0x1013351c, 0x20)  /* Служебная область с абсолютными адресами переходов. {0x1013340f, 0x10133431, 0x10133453, 0x10133475, 0x10133497, 0x101334b9, 0x101334db, 0x101334fa}. */
l_0x1013353c:
    II(0x1013353c, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x1013353f, 0x3)   mov(memb_a32(ss, ebp - 0x40), al);    /* mov [ebp-0x40], al */
    II(0x10133542, 0x4)   cmp(memb_a32(ss, ebp - 0x40), 0x7);   /* cmp byte [ebp-0x40], 0x7 */
    II(0x10133546, 0x2)   jad(0x10133517, -0x31);               /* ja 0x10133517 */
    II(0x10133548, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013354a, 0x3)   mov(al, memb_a32(ss, ebp - 0x40));    /* mov al, [ebp-0x40] */
    II(0x1013354d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10133550, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x1013351c), (0x1013340f)(0x10133431)(0x10133453)(0x10133475)(0x10133497)(0x101334b9)(0x101334db)(0x101334fa)); /* jmp dword near [cs:eax+0x1013351c] */
l_0x10133557:
    II(0x10133557, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x7);    /* cmp byte [ebp-0x4], 0x7 */
    II(0x1013355b, 0x2)   jnzd(0x101335d5, 0x78);               /* jnz 0x101335d5 */
    II(0x1013355d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10133561, 0x3)   add(edx, 0xa);                        /* add edx, 0xa */
    II(0x10133564, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10133566, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10133569, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1013356b, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1013356d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x10133571, 0x3)   imul(edx, edx, 0xa);                  /* imul edx, edx, 0xa */
    II(0x10133574, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10133576, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1013357a, 0x3)   lea(ebx, eax + 0xa);                  /* lea ebx, [eax+0xa] */
    II(0x1013357d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013357f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10133582, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10133584, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x10133587, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1013358b, 0x3)   add(edx, 0x9);                        /* add edx, 0x9 */
    II(0x1013358e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10133590, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10133593, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10133595, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10133597, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1013359b, 0x3)   imul(edx, edx, 0xa);                  /* imul edx, edx, 0xa */
    II(0x1013359e, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101335a0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101335a4, 0x3)   lea(ebx, eax + 0x9);                  /* lea ebx, [eax+0x9] */
    II(0x101335a7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101335a9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101335ac, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x101335ae, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x101335b1, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101335b6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x44)); /* movsx eax, word [ebp-0x44] */
    II(0x101335ba, 0x5)   calld(0x10076e7c, -0xbc743);          /* call 0x10076e7c */
    II(0x101335bf, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x101335c2, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101335c7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x101335cb, 0x5)   calld(0x10076e7c, -0xbc754);          /* call 0x10076e7c */
    II(0x101335d0, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x101335d3, 0x2)   jmpd(0x1013360a, 0x35);               /* jmp 0x1013360a */
l_0x101335d5:
    II(0x101335d5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x101335d9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x101335dd, 0x1)   dec(edx);                             /* dec edx */
    II(0x101335de, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x101335e1, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x101335e6, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101335e8, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101335eb, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x101335ed, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x101335f0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x101335f4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x101335f8, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x101335fb, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x10133600, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10133602, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10133605, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10133607, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x1013360a:
    II(0x1013360a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1013360d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x48));    /* cmp ax, [ebp-0x48] */
    II(0x10133611, 0x2)   jzd(0x1013365e, 0x4b);                /* jz 0x1013365e */
    II(0x10133613, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x10133616, 0x3)   sub(edx, memd_a32(ss, ebp - 0x48));   /* sub edx, [ebp-0x48] */
    II(0x10133619, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1013361c, 0x3)   add(memw_a32(ds, eax), dx);           /* add [eax], dx */
    II(0x1013361f, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10133622, 0x5)   calld(0x10076730, -0xbcef7);          /* call 0x10076730 */
    II(0x10133627, 0x5)   calld(0x100cb7e4, -0x67e48);          /* call 0x100cb7e4 */
    II(0x1013362c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013362e, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10133631, 0x5)   calld(0x10076730, -0xbcf06);          /* call 0x10076730 */
    II(0x10133636, 0x5)   calld(0x100cb7b4, -0x67e87);          /* call 0x100cb7b4 */
    II(0x1013363b, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1013363e, 0x5)   calld(0x100cb74c, -0x67ef7);          /* call 0x100cb74c */
    II(0x10133643, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10133645, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10133649, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013364d, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10133653, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10133659, 0x5)   calld(0x100cb63c, -0x68022);          /* call 0x100cb63c */
l_0x1013365e:
    II(0x1013365e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10133660, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10133663, 0x5)   calld(0x10075eec, -0xbd77c);          /* call 0x10075eec */
    II(0x10133668, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013366a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1013366d, 0x5)   calld(0x10075eec, -0xbd786);          /* call 0x10075eec */
    II(0x10133672, 0x5)   jmpd(0x10133386, -0x2f1);             /* jmp 0x10133386 */
l_0x10133677:
    II(0x10133677, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10133679, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013367a, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013367b, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013367c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013367d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013367e, 0x1)   retd();                               /* ret */
FUNC_END

