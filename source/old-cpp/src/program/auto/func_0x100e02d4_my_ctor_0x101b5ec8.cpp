FUNC_BEGIN(my_ctor_0x101b5ec8, 0xc6dc098251da1a5c, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x74, 0x5a, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0xe8, 0xf8, 0xb0, 0xfa, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0xe5, 0xae, 0xfa, 0xff, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0xe8, 0x13, 0x7, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4, 0xe8, 0x9d, 0x6, 0, 0, 0x83, 0xe8, 0x4, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xfc, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100e02d4, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100e02d9, 0x5)   calld(sys_check_available_stack_size, 0x85a74); /* call 0x10165d52 */
    II(0x100e02de, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e02df, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e02e0, 0x1)   pushd(edx);                           /* push edx */
    II(0x100e02e1, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e02e2, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e02e3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e02e4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e02e6, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100e02ec, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100e02ef, 0x5)   calld(0x1008b3ec, -0x54f08);          /* call 0x1008b3ec */
    II(0x100e02f4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e02f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e02fa, 0x5)   calld(0x1008b1e4, -0x5511b);          /* call 0x1008b1e4 */
    II(0x100e02ff, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100e0302, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x100e0305, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100e0308, 0x5)   calld(0x100e0a20, 0x713);             /* call 0x100e0a20 */
    II(0x100e030d, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e0310, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e0313, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e0316, 0x5)   calld(0x100e09b8, 0x69d);             /* call 0x100e09b8 */
    II(0x100e031b, 0x3)   sub(eax, 0x4);                        /* sub eax, 0x4 */
    II(0x100e031e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100e0321, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x100e0324, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e0327, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e032a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100e032d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e0330, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e0332, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e0333, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e0334, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e0335, 0x1)   popd(edx);                            /* pop edx */
    II(0x100e0336, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e0337, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e0338, 0x1)   retd();                               /* ret */
FUNC_END

