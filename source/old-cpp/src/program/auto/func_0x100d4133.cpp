FUNC_BEGIN(0x100d4133, 0x6a3e1f3bff1ac39a, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0x15, 0x1c, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x40, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf7, 0x45, 0xfc, 0x4, 0, 0, 0, 0x74, 0x17, 0xba, 0xfc, 0x5b, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x52, 0x1e, 0x9, 0, 0xe8, 0x6d, 0x1e, 0x9, 0, 0xe9, 0x57, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x13, 0x50, 0x5c, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x8d, 0, 0, 0, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x1b, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x8b, 0x58, 0x40, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xc0, 0xff, 0x13, 0x89, 0x45, 0xdc, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x9d, 0, 0, 0, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xc8, 0xe8, 0x6e, 0xa3, 0xff, 0xff, 0xe8, 0x95, 0x1d, 0x9, 0, 0x89, 0x45, 0xe0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xa1, 0, 0, 0, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xcc, 0xe8, 0x41, 0xa3, 0xff, 0xff, 0xe8, 0x68, 0x1d, 0x9, 0, 0x89, 0x45, 0xe4, 0xeb, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xa5, 0, 0, 0, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd0, 0xe8, 0x14, 0xa3, 0xff, 0xff, 0xe8, 0x3b, 0x1d, 0x9, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x95, 0, 0, 0, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd4, 0xe8, 0xe7, 0xa2, 0xff, 0xff, 0xe8, 0xe, 0x1d, 0x9, 0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x99, 0, 0, 0, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd8, 0xe8, 0xba, 0xa2, 0xff, 0xff, 0xe8, 0xe1, 0x1c, 0x9, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x5, 0x87, 0, 0, 0, 0xe8, 0x66, 0x48, 0xfb, 0xff, 0x2d, 0x87, 0, 0, 0, 0x89, 0x45, 0xf8, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xff, 0xcd, 0xff, 0xff, 0x89, 0x45, 0xf8, 0xf7, 0x45, 0xfc, 0x2, 0, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x9d, 0x1c, 0x9, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d4133, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x100d4138, 0x5)   calld(sys_check_available_stack_size, 0x91c15); /* call 0x10165d52 */
    II(0x100d413d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d413e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d413f, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d4140, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d4141, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d4142, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d4144, 0x6)   sub(esp, 0x40);                       /* sub esp, 0x40 */
    II(0x100d414a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d414d, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100d4150, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x4);   /* test dword [ebp-0x4], 0x4 */
    II(0x100d4157, 0x2)   jzd(0x100d4170, 0x17);                /* jz 0x100d4170 */
    II(0x100d4159, 0x5)   mov(edx, 0x101b5bfc);                 /* mov edx, 0x101b5bfc */
    II(0x100d415e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d4161, 0x5)   calld(sys_call_dtor_arr, 0x91e52);    /* call 0x10165fb8 */
    II(0x100d4166, 0x5)   calld(sys_delete_arr, 0x91e6d);       /* call 0x10165fd8 */
    II(0x100d416b, 0x5)   jmpd(0x100d42c7, 0x157);              /* jmp 0x100d42c7 */
l_0x100d4170:
    II(0x100d4170, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d4173, 0x7)   mov(memd_a32(ds, eax + 0x13), 0x101b5c50); /* mov dword [eax+0x13], 0x101b5c50 */
    II(0x100d417a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d417d, 0x6)   mov(eax, memd_a32(ds, eax + 0x8d));   /* mov eax, [eax+0x8d] */
    II(0x100d4183, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100d4186, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x100d418a, 0x2)   jzd(0x100d41a7, 0x1b);                /* jz 0x100d41a7 */
    II(0x100d418c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100d418f, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100d4192, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100d4195, 0x3)   mov(ebx, memd_a32(ds, eax + 0x40));   /* mov ebx, [eax+0x40] */
    II(0x100d4198, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
//    II(0x100d419d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100d41a0, 0x2)   calld_abs(memd_a32(ds, ebx));         /* call dword near [ebx] */
    II(0x100d41a2, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100d41a5, 0x2)   jmpd(0x100d41ae, 0x7);                /* jmp 0x100d41ae */
l_0x100d41a7:
    II(0x100d41a7, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
l_0x100d41ae:
    II(0x100d41ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d41b1, 0x6)   mov(eax, memd_a32(ds, eax + 0x9d));   /* mov eax, [eax+0x9d] */
    II(0x100d41b7, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100d41ba, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x100d41be, 0x2)   jzd(0x100d41d4, 0x14);                /* jz 0x100d41d4 */
    II(0x100d41c0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d41c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100d41c5, 0x5)   calld(my_dtor_d2, -0x5c92);           /* call 0x100ce538 */
    II(0x100d41ca, 0x5)   calld(sys_delete, 0x91d95);           /* call 0x10165f64 */
    II(0x100d41cf, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100d41d2, 0x2)   jmpd(0x100d41db, 0x7);                /* jmp 0x100d41db */
l_0x100d41d4:
    II(0x100d41d4, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x100d41db:
    II(0x100d41db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d41de, 0x6)   mov(eax, memd_a32(ds, eax + 0xa1));   /* mov eax, [eax+0xa1] */
    II(0x100d41e4, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100d41e7, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100d41eb, 0x2)   jzd(0x100d4201, 0x14);                /* jz 0x100d4201 */
    II(0x100d41ed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d41ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100d41f2, 0x5)   calld(my_dtor_d2, -0x5cbf);           /* call 0x100ce538 */
    II(0x100d41f7, 0x5)   calld(sys_delete, 0x91d68);           /* call 0x10165f64 */
    II(0x100d41fc, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d41ff, 0x2)   jmpd(0x100d4208, 0x7);                /* jmp 0x100d4208 */
l_0x100d4201:
    II(0x100d4201, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x100d4208:
    II(0x100d4208, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d420b, 0x6)   mov(eax, memd_a32(ds, eax + 0xa5));   /* mov eax, [eax+0xa5] */
    II(0x100d4211, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100d4214, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x100d4218, 0x2)   jzd(0x100d422e, 0x14);                /* jz 0x100d422e */
    II(0x100d421a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d421c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100d421f, 0x5)   calld(my_dtor_d2, -0x5cec);           /* call 0x100ce538 */
    II(0x100d4224, 0x5)   calld(sys_delete, 0x91d3b);           /* call 0x10165f64 */
    II(0x100d4229, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100d422c, 0x2)   jmpd(0x100d4235, 0x7);                /* jmp 0x100d4235 */
l_0x100d422e:
    II(0x100d422e, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x100d4235:
    II(0x100d4235, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d4238, 0x6)   mov(eax, memd_a32(ds, eax + 0x95));   /* mov eax, [eax+0x95] */
    II(0x100d423e, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100d4241, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x100d4245, 0x2)   jzd(0x100d425b, 0x14);                /* jz 0x100d425b */
    II(0x100d4247, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d4249, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100d424c, 0x5)   calld(my_dtor_d2, -0x5d19);           /* call 0x100ce538 */
    II(0x100d4251, 0x5)   calld(sys_delete, 0x91d0e);           /* call 0x10165f64 */
    II(0x100d4256, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100d4259, 0x2)   jmpd(0x100d4262, 0x7);                /* jmp 0x100d4262 */
l_0x100d425b:
    II(0x100d425b, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x100d4262:
    II(0x100d4262, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d4265, 0x6)   mov(eax, memd_a32(ds, eax + 0x99));   /* mov eax, [eax+0x99] */
    II(0x100d426b, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100d426e, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x100d4272, 0x2)   jzd(0x100d4288, 0x14);                /* jz 0x100d4288 */
    II(0x100d4274, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d4276, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100d4279, 0x5)   calld(my_dtor_d2, -0x5d46);           /* call 0x100ce538 */
    II(0x100d427e, 0x5)   calld(sys_delete, 0x91ce1);           /* call 0x10165f64 */
    II(0x100d4283, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d4286, 0x2)   jmpd(0x100d428f, 0x7);                /* jmp 0x100d428f */
l_0x100d4288:
    II(0x100d4288, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x100d428f:
    II(0x100d428f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d4291, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d4294, 0x5)   add(eax, 0x87);                       /* add eax, 0x87 */
    II(0x100d4299, 0x5)   calld(0x10088b04, -0x4b79a);          /* call 0x10088b04 */
    II(0x100d429e, 0x5)   sub(eax, 0x87);                       /* sub eax, 0x87 */
    II(0x100d42a3, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d42a6, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
//    II(0x100d42ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d42ae, 0x5)   calld(0x100d10b2, -0x3201);           /* call 0x100d10b2 */
    II(0x100d42b3, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d42b6, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x2);   /* test dword [ebp-0x4], 0x2 */
    II(0x100d42bd, 0x2)   jzd(0x100d42c7, 0x8);                 /* jz 0x100d42c7 */
    II(0x100d42bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d42c2, 0x5)   calld(sys_delete, 0x91c9d);           /* call 0x10165f64 */
l_0x100d42c7:
    II(0x100d42c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d42ca, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100d42cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d42d0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d42d2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d42d3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d42d4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d42d5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d42d6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d42d7, 0x1)   retd();                               /* ret */
FUNC_END

