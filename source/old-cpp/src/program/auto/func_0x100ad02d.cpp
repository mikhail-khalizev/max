FUNC_BEGIN(0x100ad02d, 0x3a85848bbc824d10, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0x1b, 0x8d, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x1a, 0xdd, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x7c, 0, 0, 0, 0x31, 0xdb, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x5, 0x95, 0xfc, 0xff, 0xe8, 0xee, 0x58, 0xa, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xf, 0xe8, 0xf0, 0xdc, 0x8, 0, 0x84, 0xc0, 0x74, 0x22, 0xf, 0xbe, 0x5d, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x3c, 0x95, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xf, 0xe8, 0xe3, 0xde, 0xfd, 0xff, 0x8b, 0x4d, 0xf8, 0xff, 0x51, 0x40, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x7c, 0x95, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x3c, 0xe8, 0x37, 0xf8, 0xfe, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xf, 0xe8, 0x16, 0xdf, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x4c, 0x8d, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ad02d, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100ad032, 0x5)   calld(sys_check_available_stack_size, 0xb8d1b); /* call 0x10165d52 */
    II(0x100ad037, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ad038, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ad039, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ad03a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ad03b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ad03c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ad03e, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100ad044, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ad047, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100ad04a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ad04c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad04f, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad052, 0x5)   calld(0x1013ad71, 0x8dd1a);           /* call 0x1013ad71 */
    II(0x100ad057, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ad059, 0x6)   jzd(0x100ad0db, 0x7c);                /* jz dword 0x100ad0db */
    II(0x100ad05f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ad061, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ad064, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad067, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad06a, 0x5)   calld(0x10076574, -0x36afb);          /* call 0x10076574 */
    II(0x100ad06f, 0x5)   calld(0x10152962, 0xa58ee);           /* call 0x10152962 */
    II(0x100ad074, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ad076, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad079, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100ad07c, 0x5)   calld(0x1013ad71, 0x8dcf0);           /* call 0x1013ad71 */
    II(0x100ad081, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ad083, 0x2)   jzd(0x100ad0a7, 0x22);                /* jz 0x100ad0a7 */
    II(0x100ad085, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x100ad089, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad08c, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad08f, 0x5)   calld(0x100765d0, -0x36ac4);          /* call 0x100765d0 */
    II(0x100ad094, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ad096, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad099, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100ad09c, 0x5)   calld(0x1008af84, -0x2211d);          /* call 0x1008af84 */
    II(0x100ad0a1, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x100ad0a4, 0x3)   calld_abs(memd_a32(ds, ecx + 0x40));  /* call dword near [ecx+0x40] */
l_0x100ad0a7:
    II(0x100ad0a7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ad0a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad0ac, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad0af, 0x5)   calld(0x10076630, -0x36a84);          /* call 0x10076630 */
    II(0x100ad0b4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ad0b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad0b9, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100ad0bc, 0x5)   calld(0x1009c8f8, -0x107c9);          /* call 0x1009c8f8 */
    II(0x100ad0c1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ad0c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad0c6, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100ad0c9, 0x5)   calld(0x1008afe4, -0x220ea);          /* call 0x1008afe4 */
    II(0x100ad0ce, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ad0d1, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100ad0d6, 0x5)   calld(0x100a5e27, -0x72b4);           /* call 0x100a5e27 */
l_0x100ad0db:
    II(0x100ad0db, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ad0dd, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ad0de, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ad0df, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ad0e0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ad0e1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ad0e2, 0x1)   retd();                               /* ret */
FUNC_END

