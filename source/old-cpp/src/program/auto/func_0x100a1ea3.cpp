FUNC_BEGIN(0x100a1ea3, 0xaedd3211e4e26dfc, 0x20, ({0x68, 0xa4, 0x3, 0, 0, 0xe8, 0xa5, 0x3e, 0xc, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x94, 0x3, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf0, 0x88, 0x4d, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0xf, 0x84, 0x1c, 0x3, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0xc2, 0x16, 0xfd, 0xff, 0x80, 0x4d, 0xe8, 0x1, 0x8b, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xf8, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x4, 0xe2, 0xff, 0xff, 0x89, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0x80, 0x65, 0xe8, 0xfe, 0xf, 0xbf, 0x85, 0x9c, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7c, 0xb, 0xf, 0xbf, 0x85, 0x9e, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x85, 0x9a, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x85, 0xa0, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x85, 0xa2, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xfc, 0, 0x8b, 0x55, 0xf0, 0x8d, 0x85, 0xb4, 0xfc, 0xff, 0xff, 0xe8, 0xd5, 0x46, 0xfd, 0xff, 0x8a, 0x45, 0xfc, 0x88, 0x85, 0xbc, 0xfc, 0xff, 0xff, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x42, 0xe5, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x9c, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7c, 0xb, 0xf, 0xbf, 0x85, 0x9e, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x85, 0xa0, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x85, 0xa2, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xf, 0xf, 0xbf, 0x85, 0x9a, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x8d, 0xec, 0x1, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x7, 0xf2, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x9c, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x1b, 0x31, 0xc9, 0xf, 0xbf, 0x9d, 0x9c, 0xfc, 0xff, 0xff, 0xf7, 0xdb, 0xba, 0x80, 0, 0, 0, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x42, 0xed, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x9e, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x1b, 0x31, 0xc9, 0xf, 0xbf, 0x9d, 0x9e, 0xfc, 0xff, 0xff, 0xf7, 0xdb, 0xba, 0x20, 0, 0, 0, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x1c, 0xed, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x9a, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x1b, 0x31, 0xc9, 0xf, 0xbf, 0x9d, 0x9a, 0xfc, 0xff, 0xff, 0xf7, 0xdb, 0xba, 0x40, 0, 0, 0, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0xf6, 0xec, 0xff, 0xff, 0xc6, 0x45, 0xec, 0, 0xf, 0xbf, 0x85, 0x9c, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7c, 0xb, 0xf, 0xbf, 0x85, 0x9e, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x85, 0x9a, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x28, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x7a, 0xf5, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x13, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0xa0, 0xfb, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xec, 0x1, 0x80, 0x7d, 0xec, 0, 0xf, 0x85, 0xf, 0x1, 0, 0, 0xf, 0xbf, 0x85, 0xa2, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0xb, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0xa3, 0xf2, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x9c, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7c, 0xb, 0xf, 0xbf, 0x85, 0x9e, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x85, 0xa0, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x85, 0xa2, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xf, 0xf, 0xbf, 0x85, 0x9a, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x8d, 0xb8, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0xb4, 0xfc, 0xff, 0xff, 0xe8, 0x25, 0x8c, 0x9, 0, 0x84, 0xc0, 0x75, 0x23, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x85, 0xb4, 0xfc, 0xff, 0xff, 0xe8, 0xd0, 0x44, 0xfd, 0xff, 0x8d, 0x8d, 0x70, 0xfc, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x51, 0xf3, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x19, 0xbb, 0x1, 0, 0, 0, 0xba, 0x1d, 0, 0, 0, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0xee, 0xfa, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x19, 0xbb, 0x1, 0, 0, 0, 0xba, 0x1e, 0, 0, 0, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0xd3, 0xfa, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x16, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0xbb, 0xfa, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x14, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x6c, 0xf4, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0xf, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x5a, 0xf5, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0xf, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x3, 0x85, 0, 0, 0xeb, 0x67, 0xe9, 0xd3, 0xfd, 0xff, 0xff, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0xa, 0xe3, 0xff, 0xff, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x1c, 0xe7, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xe8, 0xf2, 0x13, 0xfd, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0xf, 0xf, 0xbf, 0x55, 0xf8, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0xc, 0x8b, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x98, 0x6b, 0x8, 0, 0x80, 0x7d, 0xfc, 0, 0x74, 0xb, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0xd9, 0xfb, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xfc, 0xff, 0xff, 0xe8, 0x9a, 0x84, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100a1ea3, 0x5)   pushd(0x3a4);                         /* push dword 0x3a4 */
    II(0x100a1ea8, 0x5)   calld(sys_check_available_stack_size, 0xc3ea5); /* call 0x10165d52 */
    II(0x100a1ead, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a1eae, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a1eaf, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a1eb0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a1eb2, 0x6)   sub(esp, 0x394);                      /* sub esp, 0x394 */
    II(0x100a1eb8, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a1ebb, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100a1ebe, 0x3)   mov(memd_a32(ss, ebp - 0x10), ebx);   /* mov [ebp-0x10], ebx */
    II(0x100a1ec1, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x100a1ec4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100a1ec8, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100a1ece, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100a1ed4, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a1ed9, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100a1edc, 0x6)   jzd(0x100a21fe, 0x31c);               /* jz dword 0x100a21fe */
    II(0x100a1ee2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a1ee5, 0x5)   calld(0x100735ac, -0x2e93e);          /* call 0x100735ac */
    II(0x100a1eea, 0x4)   or_(memb_a32(ss, ebp - 0x18), 0x1);   /* or byte [ebp-0x18], 0x1 */
    II(0x100a1eee, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100a1ef1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a1ef5, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a1efb, 0x5)   calld(0x100a0104, -0x1dfc);           /* call 0x100a0104 */
    II(0x100a1f00, 0x6)   mov(memd_a32(ss, ebp - 0x394), eax);  /* mov [ebp+0xfffffc6c], eax */
    II(0x100a1f06, 0x4)   and_(memb_a32(ss, ebp - 0x18), -0x2 /* 0xfe */); /* and byte [ebp-0x18], 0xfe */
    II(0x100a1f0a, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x364)); /* movsx eax, word [ebp+0xfffffc9c] */
    II(0x100a1f11, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1f13, 0x2)   jld(0x100a1f20, 0xb);                 /* jl 0x100a1f20 */
    II(0x100a1f15, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x362)); /* movsx eax, word [ebp+0xfffffc9e] */
    II(0x100a1f1c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1f1e, 0x2)   jged(0x100a1f22, 0x2);                /* jge 0x100a1f22 */
l_0x100a1f20:
    II(0x100a1f20, 0x2)   jmpd(0x100a1f2d, 0xb);                /* jmp 0x100a1f2d */
l_0x100a1f22:
    II(0x100a1f22, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x366)); /* movsx eax, word [ebp+0xfffffc9a] */
    II(0x100a1f29, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1f2b, 0x2)   jged(0x100a1f2f, 0x2);                /* jge 0x100a1f2f */
l_0x100a1f2d:
    II(0x100a1f2d, 0x2)   jmpd(0x100a1f3a, 0xb);                /* jmp 0x100a1f3a */
l_0x100a1f2f:
    II(0x100a1f2f, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x360)); /* movsx eax, word [ebp+0xfffffca0] */
    II(0x100a1f36, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1f38, 0x2)   jged(0x100a1f3c, 0x2);                /* jge 0x100a1f3c */
l_0x100a1f3a:
    II(0x100a1f3a, 0x2)   jmpd(0x100a1f47, 0xb);                /* jmp 0x100a1f47 */
l_0x100a1f3c:
    II(0x100a1f3c, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x35e)); /* movsx eax, word [ebp+0xfffffca2] */
    II(0x100a1f43, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1f45, 0x2)   jged(0x100a1f49, 0x2);                /* jge 0x100a1f49 */
l_0x100a1f47:
    II(0x100a1f47, 0x2)   jmpd(0x100a1f4d, 0x4);                /* jmp 0x100a1f4d */
l_0x100a1f49:
    II(0x100a1f49, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
l_0x100a1f4d:
    II(0x100a1f4d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100a1f50, 0x6)   lea(eax, ebp - 0x34c);                /* lea eax, [ebp+0xfffffcb4] */
    II(0x100a1f56, 0x5)   calld(0x10076630, -0x2b92b);          /* call 0x10076630 */
    II(0x100a1f5b, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100a1f5e, 0x6)   mov(memb_a32(ss, ebp - 0x344), al);   /* mov [ebp+0xfffffcbc], al */
    II(0x100a1f64, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a1f6a, 0x5)   calld(0x100a04b1, -0x1abe);           /* call 0x100a04b1 */
l_0x100a1f6f:
    II(0x100a1f6f, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x364)); /* movsx eax, word [ebp+0xfffffc9c] */
    II(0x100a1f76, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1f78, 0x2)   jld(0x100a1f85, 0xb);                 /* jl 0x100a1f85 */
    II(0x100a1f7a, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x362)); /* movsx eax, word [ebp+0xfffffc9e] */
    II(0x100a1f81, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1f83, 0x2)   jged(0x100a1f87, 0x2);                /* jge 0x100a1f87 */
l_0x100a1f85:
    II(0x100a1f85, 0x2)   jmpd(0x100a1f92, 0xb);                /* jmp 0x100a1f92 */
l_0x100a1f87:
    II(0x100a1f87, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x360)); /* movsx eax, word [ebp+0xfffffca0] */
    II(0x100a1f8e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1f90, 0x2)   jged(0x100a1f94, 0x2);                /* jge 0x100a1f94 */
l_0x100a1f92:
    II(0x100a1f92, 0x2)   jmpd(0x100a1f9f, 0xb);                /* jmp 0x100a1f9f */
l_0x100a1f94:
    II(0x100a1f94, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x35e)); /* movsx eax, word [ebp+0xfffffca2] */
    II(0x100a1f9b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1f9d, 0x2)   jged(0x100a1fa1, 0x2);                /* jge 0x100a1fa1 */
l_0x100a1f9f:
    II(0x100a1f9f, 0x2)   jmpd(0x100a1fb0, 0xf);                /* jmp 0x100a1fb0 */
l_0x100a1fa1:
    II(0x100a1fa1, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x366)); /* movsx eax, word [ebp+0xfffffc9a] */
    II(0x100a1fa8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1faa, 0x6)   jged(0x100a219c, 0x1ec);              /* jge dword 0x100a219c */
l_0x100a1fb0:
    II(0x100a1fb0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a1fb2, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a1fb8, 0x5)   calld(0x100a11c4, -0xdf9);            /* call 0x100a11c4 */
    II(0x100a1fbd, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x364)); /* movsx eax, word [ebp+0xfffffc9c] */
    II(0x100a1fc4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1fc6, 0x2)   jged(0x100a1fe3, 0x1b);               /* jge 0x100a1fe3 */
    II(0x100a1fc8, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100a1fca, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0x364)); /* movsx ebx, word [ebp+0xfffffc9c] */
    II(0x100a1fd1, 0x2)   neg(ebx);                             /* neg ebx */
    II(0x100a1fd3, 0x5)   mov(edx, 0x80);                       /* mov edx, 0x80 */
    II(0x100a1fd8, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a1fde, 0x5)   calld(0x100a0d25, -0x12be);           /* call 0x100a0d25 */
l_0x100a1fe3:
    II(0x100a1fe3, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x362)); /* movsx eax, word [ebp+0xfffffc9e] */
    II(0x100a1fea, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1fec, 0x2)   jged(0x100a2009, 0x1b);               /* jge 0x100a2009 */
    II(0x100a1fee, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100a1ff0, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0x362)); /* movsx ebx, word [ebp+0xfffffc9e] */
    II(0x100a1ff7, 0x2)   neg(ebx);                             /* neg ebx */
    II(0x100a1ff9, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x100a1ffe, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a2004, 0x5)   calld(0x100a0d25, -0x12e4);           /* call 0x100a0d25 */
l_0x100a2009:
    II(0x100a2009, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x366)); /* movsx eax, word [ebp+0xfffffc9a] */
    II(0x100a2010, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2012, 0x2)   jged(0x100a202f, 0x1b);               /* jge 0x100a202f */
    II(0x100a2014, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100a2016, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0x366)); /* movsx ebx, word [ebp+0xfffffc9a] */
    II(0x100a201d, 0x2)   neg(ebx);                             /* neg ebx */
    II(0x100a201f, 0x5)   mov(edx, 0x40);                       /* mov edx, 0x40 */
    II(0x100a2024, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a202a, 0x5)   calld(0x100a0d25, -0x130a);           /* call 0x100a0d25 */
l_0x100a202f:
    II(0x100a202f, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x100a2033, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x364)); /* movsx eax, word [ebp+0xfffffc9c] */
    II(0x100a203a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a203c, 0x2)   jld(0x100a2049, 0xb);                 /* jl 0x100a2049 */
    II(0x100a203e, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x362)); /* movsx eax, word [ebp+0xfffffc9e] */
    II(0x100a2045, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2047, 0x2)   jged(0x100a204b, 0x2);                /* jge 0x100a204b */
l_0x100a2049:
    II(0x100a2049, 0x2)   jmpd(0x100a2056, 0xb);                /* jmp 0x100a2056 */
l_0x100a204b:
    II(0x100a204b, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x366)); /* movsx eax, word [ebp+0xfffffc9a] */
    II(0x100a2052, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2054, 0x2)   jged(0x100a207e, 0x28);               /* jge 0x100a207e */
l_0x100a2056:
    II(0x100a2056, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a2058, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a205e, 0x5)   calld(0x100a15dd, -0xa86);            /* call 0x100a15dd */
    II(0x100a2063, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2065, 0x2)   jnzd(0x100a207a, 0x13);               /* jnz 0x100a207a */
    II(0x100a2067, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a2069, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a206b, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a2071, 0x5)   calld(0x100a1c16, -0x460);            /* call 0x100a1c16 */
    II(0x100a2076, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2078, 0x2)   jzd(0x100a207e, 0x4);                 /* jz 0x100a207e */
l_0x100a207a:
    II(0x100a207a, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
l_0x100a207e:
    II(0x100a207e, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x100a2082, 0x6)   jnzd(0x100a2197, 0x10f);              /* jnz dword 0x100a2197 */
    II(0x100a2088, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x35e)); /* movsx eax, word [ebp+0xfffffca2] */
    II(0x100a208f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2091, 0x2)   jged(0x100a209e, 0xb);                /* jge 0x100a209e */
    II(0x100a2093, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a2099, 0x5)   calld(0x100a1341, -0xd5d);            /* call 0x100a1341 */
l_0x100a209e:
    II(0x100a209e, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x364)); /* movsx eax, word [ebp+0xfffffc9c] */
    II(0x100a20a5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a20a7, 0x2)   jld(0x100a20b4, 0xb);                 /* jl 0x100a20b4 */
    II(0x100a20a9, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x362)); /* movsx eax, word [ebp+0xfffffc9e] */
    II(0x100a20b0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a20b2, 0x2)   jged(0x100a20b6, 0x2);                /* jge 0x100a20b6 */
l_0x100a20b4:
    II(0x100a20b4, 0x2)   jmpd(0x100a20c1, 0xb);                /* jmp 0x100a20c1 */
l_0x100a20b6:
    II(0x100a20b6, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x360)); /* movsx eax, word [ebp+0xfffffca0] */
    II(0x100a20bd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a20bf, 0x2)   jged(0x100a20c3, 0x2);                /* jge 0x100a20c3 */
l_0x100a20c1:
    II(0x100a20c1, 0x2)   jmpd(0x100a20ce, 0xb);                /* jmp 0x100a20ce */
l_0x100a20c3:
    II(0x100a20c3, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x35e)); /* movsx eax, word [ebp+0xfffffca2] */
    II(0x100a20ca, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a20cc, 0x2)   jged(0x100a20d0, 0x2);                /* jge 0x100a20d0 */
l_0x100a20ce:
    II(0x100a20ce, 0x2)   jmpd(0x100a20df, 0xf);                /* jmp 0x100a20df */
l_0x100a20d0:
    II(0x100a20d0, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x366)); /* movsx eax, word [ebp+0xfffffc9a] */
    II(0x100a20d7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a20d9, 0x6)   jged(0x100a2197, 0xb8);               /* jge dword 0x100a2197 */
l_0x100a20df:
    II(0x100a20df, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a20e1, 0x6)   lea(eax, ebp - 0x34c);                /* lea eax, [ebp+0xfffffcb4] */
    II(0x100a20e7, 0x5)   calld(0x1013ad11, 0x98c25);           /* call 0x1013ad11 */
    II(0x100a20ec, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a20ee, 0x2)   jnzd(0x100a2113, 0x23);               /* jnz 0x100a2113 */
    II(0x100a20f0, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100a20f5, 0x6)   lea(eax, ebp - 0x34c);                /* lea eax, [ebp+0xfffffcb4] */
    II(0x100a20fb, 0x5)   calld(0x100765d0, -0x2bb30);          /* call 0x100765d0 */
    II(0x100a2100, 0x6)   lea(ecx, ebp - 0x390);                /* lea ecx, [ebp+0xfffffc70] */
    II(0x100a2106, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a2108, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100a210a, 0x5)   calld(0x100a1460, -0xcaf);            /* call 0x100a1460 */
    II(0x100a210f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2111, 0x2)   jnzd(0x100a212c, 0x19);               /* jnz 0x100a212c */
l_0x100a2113:
    II(0x100a2113, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100a2118, 0x5)   mov(edx, 0x1d);                       /* mov edx, 0x1d */
    II(0x100a211d, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a2123, 0x5)   calld(0x100a1c16, -0x512);            /* call 0x100a1c16 */
    II(0x100a2128, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a212a, 0x2)   jzd(0x100a212e, 0x2);                 /* jz 0x100a212e */
l_0x100a212c:
    II(0x100a212c, 0x2)   jmpd(0x100a2147, 0x19);               /* jmp 0x100a2147 */
l_0x100a212e:
    II(0x100a212e, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100a2133, 0x5)   mov(edx, 0x1e);                       /* mov edx, 0x1e */
    II(0x100a2138, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a213e, 0x5)   calld(0x100a1c16, -0x52d);            /* call 0x100a1c16 */
    II(0x100a2143, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2145, 0x2)   jzd(0x100a2149, 0x2);                 /* jz 0x100a2149 */
l_0x100a2147:
    II(0x100a2147, 0x2)   jmpd(0x100a215f, 0x16);               /* jmp 0x100a215f */
l_0x100a2149:
    II(0x100a2149, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100a214e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a2150, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a2156, 0x5)   calld(0x100a1c16, -0x545);            /* call 0x100a1c16 */
    II(0x100a215b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a215d, 0x2)   jzd(0x100a2161, 0x2);                 /* jz 0x100a2161 */
l_0x100a215f:
    II(0x100a215f, 0x2)   jmpd(0x100a2175, 0x14);               /* jmp 0x100a2175 */
l_0x100a2161:
    II(0x100a2161, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100a2166, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a216c, 0x5)   calld(0x100a15dd, -0xb94);            /* call 0x100a15dd */
    II(0x100a2171, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2173, 0x2)   jzd(0x100a2177, 0x2);                 /* jz 0x100a2177 */
l_0x100a2175:
    II(0x100a2175, 0x2)   jmpd(0x100a2186, 0xf);                /* jmp 0x100a2186 */
l_0x100a2177:
    II(0x100a2177, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a217d, 0x5)   calld(0x100a16dc, -0xaa6);            /* call 0x100a16dc */
    II(0x100a2182, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a2184, 0x2)   jzd(0x100a2188, 0x2);                 /* jz 0x100a2188 */
l_0x100a2186:
    II(0x100a2186, 0x2)   jmpd(0x100a2197, 0xf);                /* jmp 0x100a2197 */
l_0x100a2188:
    II(0x100a2188, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a218a, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a2190, 0x5)   calld(0x100aa698, 0x8503);            /* call 0x100aa698 */
    II(0x100a2195, 0x2)   jmpd(0x100a21fe, 0x67);               /* jmp 0x100a21fe */
l_0x100a2197:
    II(0x100a2197, 0x5)   jmpd(0x100a1f6f, -0x22d);             /* jmp 0x100a1f6f */
l_0x100a219c:
    II(0x100a219c, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a21a2, 0x5)   calld(0x100a04b1, -0x1cf6);           /* call 0x100a04b1 */
    II(0x100a21a7, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a21ad, 0x5)   calld(0x100a08ce, -0x18e4);           /* call 0x100a08ce */
    II(0x100a21b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a21b5, 0x5)   calld(0x100735ac, -0x2ec0e);          /* call 0x100735ac */
    II(0x100a21ba, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100a21c1, 0x2)   jzd(0x100a21d2, 0xf);                 /* jz 0x100a21d2 */
    II(0x100a21c3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a21c7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a21c9, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100a21ce, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a21d0, 0x2)   jzd(0x100a21d4, 0x2);                 /* jz 0x100a21d4 */
l_0x100a21d2:
    II(0x100a21d2, 0x2)   jmpd(0x100a21e0, 0xc);                /* jmp 0x100a21e0 */
l_0x100a21d4:
    II(0x100a21d4, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100a21d7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100a21db, 0x5)   calld(0x10128d78, 0x86b98);           /* call 0x10128d78 */
l_0x100a21e0:
    II(0x100a21e0, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100a21e4, 0x2)   jzd(0x100a21f1, 0xb);                 /* jz 0x100a21f1 */
    II(0x100a21e6, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a21ec, 0x5)   calld(0x100a1dca, -0x427);            /* call 0x100a1dca */
l_0x100a21f1:
    II(0x100a21f1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a21f3, 0x6)   lea(eax, ebp - 0x390);                /* lea eax, [ebp+0xfffffc70] */
    II(0x100a21f9, 0x5)   calld(0x100aa698, 0x849a);            /* call 0x100aa698 */
l_0x100a21fe:
    II(0x100a21fe, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a2200, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a2201, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a2202, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a2203, 0x1)   retd();                               /* ret */
FUNC_END

