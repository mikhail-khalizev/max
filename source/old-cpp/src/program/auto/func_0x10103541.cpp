FUNC_BEGIN(0x10103541, 0x2f7d301348d59361, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x7, 0x28, 0x6, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x55, 0xf4, 0x8b, 0xa, 0xc1, 0xf9, 0x10, 0xf, 0xbf, 0x55, 0xf8, 0xd3, 0xe2, 0xf, 0xbf, 0x45, 0xfc, 0x31, 0xc2, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xf9, 0x89, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xc0, 0xa, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x4, 0x1, 0xc2, 0x89, 0x55, 0xec, 0x8b, 0x45, 0xec, 0xe8, 0x6, 0x11, 0, 0, 0x8d, 0x4d, 0xe8, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xe6, 0xf, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xbd, 0x77, 0x3, 0, 0x84, 0xc0, 0x74, 0x28, 0x8d, 0x45, 0xe8, 0xe8, 0xf0, 0xe, 0, 0, 0xe8, 0xcb, 0x11, 0, 0, 0x66, 0x3b, 0x45, 0xf8, 0x75, 0x13, 0x8d, 0x45, 0xe8, 0xe8, 0xdd, 0xe, 0, 0, 0xe8, 0x84, 0x11, 0, 0, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0xa, 0x8d, 0x45, 0xe8, 0xe8, 0xe, 0x36, 0xf7, 0xff, 0xeb, 0xbe, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x1b, 0x77, 0x3, 0, 0x84, 0xc0, 0x74, 0x13, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x65, 0xe, 0, 0, 0xeb, 0x2b, 0x8d, 0x45, 0xe8, 0xe8, 0x9b, 0xe, 0, 0, 0xe8, 0xaa, 0x11, 0, 0, 0xe8, 0x19, 0x2d, 0xf7, 0xff, 0x89, 0x45, 0xe4, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x44, 0xe, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x38, 0xe, 0, 0, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10103541, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10103546, 0x5)   calld(sys_check_available_stack_size, 0x62807); /* call 0x10165d52 */
    II(0x1010354b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010354c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010354d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010354e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010354f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10103551, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10103557, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1010355a, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1010355d, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10103560, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10103563, 0x2)   mov(ecx, memd_a32(ds, edx));          /* mov ecx, [edx] */
    II(0x10103565, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x10103568, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1010356c, 0x2)   shl(edx, cl);                         /* shl edx, cl */
    II(0x1010356e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10103572, 0x2)   xor_(edx, eax);                       /* xor edx, eax */
    II(0x10103574, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10103577, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1010357a, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1010357c, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1010357f, 0x2)   idiv(ecx);                            /* idiv ecx */
    II(0x10103581, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x10103584, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10103588, 0x3)   imul(eax, eax, 0xa);                  /* imul eax, eax, 0xa */
    II(0x1010358b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010358e, 0x3)   mov(edx, memd_a32(ds, edx + 0x4));    /* mov edx, [edx+0x4] */
    II(0x10103591, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10103593, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x10103596, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10103599, 0x5)   calld(0x101046a4, 0x1106);            /* call 0x101046a4 */
    II(0x1010359e, 0x3)   lea(ecx, ebp - 0x18);                 /* lea ecx, [ebp-0x18] */
    II(0x101035a1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101035a3, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x101035a5, 0x5)   calld(0x10104590, 0xfe6);             /* call 0x10104590 */
l_0x101035aa:
    II(0x101035aa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101035ac, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101035af, 0x5)   calld(0x1013ad71, 0x377bd);           /* call 0x1013ad71 */
    II(0x101035b4, 0x2)   test(al, al);                         /* test al, al */
    II(0x101035b6, 0x2)   jzd(0x101035e0, 0x28);                /* jz 0x101035e0 */
    II(0x101035b8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101035bb, 0x5)   calld(0x101044b0, 0xef0);             /* call 0x101044b0 */
    II(0x101035c0, 0x5)   calld(0x10104790, 0x11cb);            /* call 0x10104790 */
    II(0x101035c5, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x101035c9, 0x2)   jnzd(0x101035de, 0x13);               /* jnz 0x101035de */
    II(0x101035cb, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101035ce, 0x5)   calld(0x101044b0, 0xedd);             /* call 0x101044b0 */
    II(0x101035d3, 0x5)   calld(0x1010475c, 0x1184);            /* call 0x1010475c */
    II(0x101035d8, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x101035dc, 0x2)   jzd(0x101035e0, 0x2);                 /* jz 0x101035e0 */
l_0x101035de:
    II(0x101035de, 0x2)   jmpd(0x101035e2, 0x2);                /* jmp 0x101035e2 */
l_0x101035e0:
    II(0x101035e0, 0x2)   jmpd(0x101035ec, 0xa);                /* jmp 0x101035ec */
l_0x101035e2:
    II(0x101035e2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101035e5, 0x5)   calld(0x10076bf8, -0x8c9f2);          /* call 0x10076bf8 */
    II(0x101035ea, 0x2)   jmpd(0x101035aa, -0x42);              /* jmp 0x101035aa */
l_0x101035ec:
    II(0x101035ec, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101035ee, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101035f1, 0x5)   calld(0x1013ad11, 0x3771b);           /* call 0x1013ad11 */
    II(0x101035f6, 0x2)   test(al, al);                         /* test al, al */
    II(0x101035f8, 0x2)   jzd(0x1010360d, 0x13);                /* jz 0x1010360d */
    II(0x101035fa, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x10103601, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103603, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103606, 0x5)   calld(0x10104470, 0xe65);             /* call 0x10104470 */
    II(0x1010360b, 0x2)   jmpd(0x10103638, 0x2b);               /* jmp 0x10103638 */
l_0x1010360d:
    II(0x1010360d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103610, 0x5)   calld(0x101044b0, 0xe9b);             /* call 0x101044b0 */
    II(0x10103615, 0x5)   calld(0x101047c4, 0x11aa);            /* call 0x101047c4 */
    II(0x1010361a, 0x5)   calld(0x10076338, -0x8d2e7);          /* call 0x10076338 */
    II(0x1010361f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10103622, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103624, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103627, 0x5)   calld(0x10104470, 0xe44);             /* call 0x10104470 */
    II(0x1010362c, 0x2)   jmpd(0x10103638, 0xa);                /* jmp 0x10103638 */
//  II(0x1010362e, 0xa)   /* Недостижимый код. */
l_0x10103638:
    II(0x10103638, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1010363b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010363d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010363e, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010363f, 0x1)   popd(esi);                            /* pop esi */
    II(0x10103640, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10103641, 0x1)   retd();                               /* ret */
FUNC_END

