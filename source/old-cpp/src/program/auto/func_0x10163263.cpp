FUNC_BEGIN(0x10163263, 0xb0e54525753c73bc, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0xe5, 0x2a, 0, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x45, 0xec, 0x50, 0x8d, 0x45, 0xe8, 0x50, 0x8d, 0x4d, 0xf0, 0xbb, 0x1, 0, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x5c, 0xfa, 0xfd, 0xff, 0x8a, 0x45, 0xf0, 0x8b, 0x55, 0xf4, 0x88, 0x42, 0x4a, 0x8a, 0x45, 0xe8, 0x8b, 0x55, 0xf4, 0x88, 0x42, 0x4b, 0x8a, 0x45, 0xec, 0x8b, 0x55, 0xf4, 0x88, 0x42, 0x4c, 0xb8, 0x2, 0, 0, 0, 0xe8, 0xf1, 0xeb, 0xf0, 0xff, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xa4, 0x64, 0xf2, 0xff, 0x8b, 0x55, 0xf4, 0x88, 0x42, 0x48, 0x8b, 0x55, 0xf4, 0x31, 0xc0, 0x8a, 0x42, 0x48, 0xba, 0x10, 0, 0, 0, 0x29, 0xc2, 0x89, 0x55, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xf0, 0xe8, 0x7f, 0x64, 0xf2, 0xff, 0x8b, 0x55, 0xf4, 0x88, 0x42, 0x47, 0x8b, 0x55, 0xf4, 0x31, 0xc0, 0x8a, 0x42, 0x47, 0x29, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0x8b, 0x5d, 0xf4, 0x31, 0xc0, 0x8a, 0x43, 0x48, 0xf, 0xbf, 0x5d, 0xec, 0x29, 0xc3, 0x89, 0xd8, 0xe8, 0x55, 0x64, 0xf2, 0xff, 0x66, 0x89, 0x45, 0xec, 0x8a, 0x45, 0xec, 0x8b, 0x55, 0xf4, 0, 0x42, 0x48, 0x8b, 0x45, 0xec, 0x29, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x35, 0x64, 0xf2, 0xff, 0x8b, 0x55, 0xf4, 0x88, 0x42, 0x49, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x47, 0x8b, 0x55, 0xf4, 0x2, 0x42, 0x49, 0x88, 0xc4, 0x8b, 0x55, 0xf4, 0x8a, 0x42, 0x48, 0x8b, 0x55, 0xf4, 0, 0xc4, 0x88, 0x62, 0x46, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10163263, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x10163268, 0x5)   calld(sys_check_available_stack_size, 0x2ae5); /* call 0x10165d52 */
    II(0x1016326d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1016326e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1016326f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10163270, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10163271, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10163273, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10163279, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1016327c, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1016327f, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x10163282, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10163285, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10163288, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1016328a, 0x1)   cwde();                               /* cwde */
    II(0x1016328b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1016328c, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10163291, 0x1)   pushd(eax);                           /* push eax */
    II(0x10163292, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10163295, 0x1)   pushd(eax);                           /* push eax */
    II(0x10163296, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10163299, 0x1)   pushd(eax);                           /* push eax */
    II(0x1016329a, 0x3)   lea(ecx, ebp - 0x10);                 /* lea ecx, [ebp-0x10] */
    II(0x1016329d, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101632a2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x101632a6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101632aa, 0x5)   calld(0x10142d0b, -0x205a4);          /* call 0x10142d0b */
    II(0x101632af, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x101632b2, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101632b5, 0x3)   mov(memb_a32(ds, edx + 0x4a), al);    /* mov [edx+0x4a], al */
    II(0x101632b8, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x101632bb, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101632be, 0x3)   mov(memb_a32(ds, edx + 0x4b), al);    /* mov [edx+0x4b], al */
    II(0x101632c1, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x101632c4, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101632c7, 0x3)   mov(memb_a32(ds, edx + 0x4c), al);    /* mov [edx+0x4c], al */
    II(0x101632ca, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x101632cf, 0x5)   calld(0x10071ec5, -0xf140f);          /* call 0x10071ec5 */
    II(0x101632d4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101632d7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101632db, 0x5)   calld(my_min, -0xd9b5c);              /* call 0x10089784 */
    II(0x101632e0, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101632e3, 0x3)   mov(memb_a32(ds, edx + 0x48), al);    /* mov [edx+0x48], al */
    II(0x101632e6, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101632e9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101632eb, 0x3)   mov(al, memb_a32(ds, edx + 0x48));    /* mov al, [edx+0x48] */
    II(0x101632ee, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x101632f3, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x101632f5, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x101632f8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x101632fc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10163300, 0x5)   calld(my_min, -0xd9b81);              /* call 0x10089784 */
    II(0x10163305, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10163308, 0x3)   mov(memb_a32(ds, edx + 0x47), al);    /* mov [edx+0x47], al */
    II(0x1016330b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1016330e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10163310, 0x3)   mov(al, memb_a32(ds, edx + 0x47));    /* mov al, [edx+0x47] */
    II(0x10163313, 0x3)   sub(memd_a32(ss, ebp - 0x1c), eax);   /* sub [ebp-0x1c], eax */
    II(0x10163316, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1016331a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x1016331d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1016331f, 0x3)   mov(al, memb_a32(ds, ebx + 0x48));    /* mov al, [ebx+0x48] */
    II(0x10163322, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x10163326, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x10163328, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1016332a, 0x5)   calld(my_min, -0xd9bab);              /* call 0x10089784 */
    II(0x1016332f, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x10163333, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10163336, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10163339, 0x3)   add(memb_a32(ds, edx + 0x48), al);    /* add [edx+0x48], al */
    II(0x1016333c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1016333f, 0x3)   sub(memd_a32(ss, ebp - 0x1c), eax);   /* sub [ebp-0x1c], eax */
    II(0x10163342, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10163346, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1016334a, 0x5)   calld(my_min, -0xd9bcb);              /* call 0x10089784 */
    II(0x1016334f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10163352, 0x3)   mov(memb_a32(ds, edx + 0x49), al);    /* mov [edx+0x49], al */
    II(0x10163355, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10163358, 0x3)   mov(al, memb_a32(ds, eax + 0x47));    /* mov al, [eax+0x47] */
    II(0x1016335b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1016335e, 0x3)   add(al, memb_a32(ds, edx + 0x49));    /* add al, [edx+0x49] */
    II(0x10163361, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x10163363, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10163366, 0x3)   mov(al, memb_a32(ds, edx + 0x48));    /* mov al, [edx+0x48] */
//    II(0x10163369, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1016336c, 0x2)   add(ah, al);                          /* add ah, al */
    II(0x1016336e, 0x3)   mov(memb_a32(ds, edx + 0x46), ah);    /* mov [edx+0x46], ah */
    II(0x10163371, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10163373, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10163374, 0x1)   popd(edi);                            /* pop edi */
    II(0x10163375, 0x1)   popd(esi);                            /* pop esi */
    II(0x10163376, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10163377, 0x1)   retd();                               /* ret */
FUNC_END

