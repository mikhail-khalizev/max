FUNC_BEGIN(0x100b89ad, 0xc349ae5a1360492f, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x9b, 0xd3, 0xa, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x9, 0xe8, 0x4, 0x29, 0xff, 0xff, 0xe8, 0x23, 0xf8, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x83, 0xc2, 0xd, 0x8d, 0x45, 0xd4, 0xe8, 0x75, 0xd4, 0xfb, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0xf9, 0xe0, 0xfb, 0xff, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xd4, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x75, 0xc, 0x8b, 0x45, 0xd6, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x2, 0x74, 0x2b, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xd0, 0xe8, 0x53, 0xf8, 0xff, 0xff, 0x66, 0xf, 0xbe, 0, 0x66, 0x1, 0x45, 0xd4, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xd0, 0xe8, 0x3f, 0xf8, 0xff, 0xff, 0x66, 0xf, 0xbe, 0x40, 0x1, 0x66, 0x1, 0x45, 0xd6, 0xeb, 0xb8, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xd8, 0xe8, 0xf1, 0, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xe0, 0xe8, 0x6, 0xd4, 0xfb, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xdc, 0xe8, 0xf9, 0xd3, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0x58, 0xd5, 0xfe, 0xff, 0x89, 0x45, 0xe8, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8d, 0x45, 0xd0, 0xe8, 0x37, 0xf8, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xe4, 0xf, 0x8e, 0x89, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xd0, 0xe8, 0xe1, 0xf7, 0xff, 0xff, 0x66, 0xf, 0xbe, 0, 0x66, 0x1, 0x45, 0xd4, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xd0, 0xe8, 0xcd, 0xf7, 0xff, 0xff, 0x66, 0xf, 0xbe, 0x40, 0x1, 0x66, 0x1, 0x45, 0xd6, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xcc, 0xe8, 0xa1, 0xd3, 0xfb, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xc8, 0xe8, 0x94, 0xd3, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0xf3, 0xd4, 0xfe, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x45, 0xe8, 0x7d, 0x30, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xd8, 0xe8, 0x50, 0, 0xfd, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x75, 0x17, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xf4, 0xe8, 0x5d, 0xd3, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x83, 0xe7, 0xff, 0xff, 0xeb, 0x26, 0xe9, 0x5f, 0xff, 0xff, 0xff, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xf4, 0xe8, 0x41, 0xd3, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x67, 0xe7, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x5b, 0xe7, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100b89ad, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x100b89b2, 0x5)   calld(sys_check_available_stack_size, 0xad39b); /* call 0x10165d52 */
    II(0x100b89b7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b89b8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b89b9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b89ba, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b89bc, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x100b89c2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b89c5, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100b89c8, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100b89cb, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100b89ce, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100b89d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b89d4, 0x3)   add(eax, 0x9);                        /* add eax, 0x9 */
    II(0x100b89d7, 0x5)   calld(0x100ab2e0, -0xd6fc);           /* call 0x100ab2e0 */
    II(0x100b89dc, 0x5)   calld(0x100b8204, -0x7dd);            /* call 0x100b8204 */
    II(0x100b89e1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100b89e4, 0x3)   add(edx, 0xd);                        /* add edx, 0xd */
    II(0x100b89e7, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b89ea, 0x5)   calld(0x10075e64, -0x42b8b);          /* call 0x10075e64 */
    II(0x100b89ef, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b89f2, 0x5)   calld(my_ctor_0x101b4184, -0x41f07);  /* call 0x10076af0 */
    II(0x100b89f7, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100b89fe, 0x2)   jmpd(0x100b8a06, 0x6);                /* jmp 0x100b8a06 */
l_0x100b8a00:
    II(0x100b8a00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b8a03, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100b8a06:
    II(0x100b8a06, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100b8a09, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b8a0c, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100b8a0f, 0x2)   jnzd(0x100b8a1d, 0xc);                /* jnz 0x100b8a1d */
    II(0x100b8a11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2a));   /* mov eax, [ebp-0x2a] */
    II(0x100b8a14, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b8a17, 0x4)   cmp(ax, memw_a32(ds, edx + 0x2));     /* cmp ax, [edx+0x2] */
    II(0x100b8a1b, 0x2)   jzd(0x100b8a48, 0x2b);                /* jz 0x100b8a48 */
l_0x100b8a1d:
    II(0x100b8a1d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100b8a21, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100b8a24, 0x5)   calld(0x100b827c, -0x7ad);            /* call 0x100b827c */
    II(0x100b8a29, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x100b8a2d, 0x4)   add(memw_a32(ss, ebp - 0x2c), ax);    /* add [ebp-0x2c], ax */
    II(0x100b8a31, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100b8a35, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100b8a38, 0x5)   calld(0x100b827c, -0x7c1);            /* call 0x100b827c */
    II(0x100b8a3d, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x100b8a42, 0x4)   add(memw_a32(ss, ebp - 0x2a), ax);    /* add [ebp-0x2a], ax */
    II(0x100b8a46, 0x2)   jmpd(0x100b8a00, -0x48);              /* jmp 0x100b8a00 */
l_0x100b8a48:
    II(0x100b8a48, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100b8a4b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b8a4e, 0x5)   calld(0x10088b44, -0x2ff0f);          /* call 0x10088b44 */
    II(0x100b8a53, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b8a56, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b8a59, 0x5)   calld(0x10075e64, -0x42bfa);          /* call 0x10075e64 */
    II(0x100b8a5e, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b8a60, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100b8a63, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b8a66, 0x5)   calld(0x10075e64, -0x42c07);          /* call 0x10075e64 */
    II(0x100b8a6b, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100b8a6d, 0x5)   calld(0x100a5fca, -0x12aa8);          /* call 0x100a5fca */
    II(0x100b8a72, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b8a75, 0x2)   jmpd(0x100b8a7d, 0x6);                /* jmp 0x100b8a7d */
l_0x100b8a77:
    II(0x100b8a77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b8a7a, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100b8a7d:
    II(0x100b8a7d, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100b8a80, 0x5)   calld(0x100b82bc, -0x7c9);            /* call 0x100b82bc */
    II(0x100b8a85, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1c));    /* cmp ax, [ebp-0x1c] */
    II(0x100b8a89, 0x6)   jled(0x100b8b18, 0x89);               /* jle dword 0x100b8b18 */
    II(0x100b8a8f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100b8a93, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100b8a96, 0x5)   calld(0x100b827c, -0x81f);            /* call 0x100b827c */
    II(0x100b8a9b, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x100b8a9f, 0x4)   add(memw_a32(ss, ebp - 0x2c), ax);    /* add [ebp-0x2c], ax */
    II(0x100b8aa3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100b8aa7, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100b8aaa, 0x5)   calld(0x100b827c, -0x833);            /* call 0x100b827c */
    II(0x100b8aaf, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x100b8ab4, 0x4)   add(memw_a32(ss, ebp - 0x2a), ax);    /* add [ebp-0x2a], ax */
    II(0x100b8ab8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b8abb, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100b8abe, 0x5)   calld(0x10075e64, -0x42c5f);          /* call 0x10075e64 */
    II(0x100b8ac3, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b8ac5, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100b8ac8, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100b8acb, 0x5)   calld(0x10075e64, -0x42c6c);          /* call 0x10075e64 */
    II(0x100b8ad0, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100b8ad2, 0x5)   calld(0x100a5fca, -0x12b0d);          /* call 0x100a5fca */
    II(0x100b8ad7, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100b8ada, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100b8add, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100b8ae1, 0x2)   jged(0x100b8b13, 0x30);               /* jge 0x100b8b13 */
    II(0x100b8ae3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100b8ae6, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b8ae9, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100b8aec, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b8aef, 0x5)   calld(0x10088b44, -0x2ffb0);          /* call 0x10088b44 */
    II(0x100b8af4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100b8af8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b8afa, 0x2)   jnzd(0x100b8b13, 0x17);               /* jnz 0x100b8b13 */
    II(0x100b8afc, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100b8aff, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b8b02, 0x5)   calld(0x10075e64, -0x42ca3);          /* call 0x10075e64 */
    II(0x100b8b07, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b8b09, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100b8b0c, 0x5)   calld(0x100b7294, -0x187d);           /* call 0x100b7294 */
    II(0x100b8b11, 0x2)   jmpd(0x100b8b39, 0x26);               /* jmp 0x100b8b39 */
l_0x100b8b13:
    II(0x100b8b13, 0x5)   jmpd(0x100b8a77, -0xa1);              /* jmp 0x100b8a77 */
l_0x100b8b18:
    II(0x100b8b18, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100b8b1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b8b1e, 0x5)   calld(0x10075e64, -0x42cbf);          /* call 0x10075e64 */
    II(0x100b8b23, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b8b25, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100b8b28, 0x5)   calld(0x100b7294, -0x1899);           /* call 0x100b7294 */
    II(0x100b8b2d, 0x2)   jmpd(0x100b8b39, 0xa);                /* jmp 0x100b8b39 */
//  II(0x100b8b2f, 0xa)   /* Недостижимый код. */
l_0x100b8b39:
    II(0x100b8b39, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b8b3c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b8b3e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b8b3f, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b8b40, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b8b41, 0x1)   retd();                               /* ret */
FUNC_END

