FUNC_BEGIN(0x100a0774, 0xddf4503dec413d60, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xd4, 0x55, 0xc, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf4, 0x80, 0x78, 0x3d, 0x1a, 0xf, 0x84, 0x8b, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x80, 0x78, 0x3d, 0x7, 0x75, 0x3e, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x85, 0xc0, 0x7e, 0x8, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x8, 0xeb, 0x2a, 0xb8, 0x78, 0x8, 0x1a, 0x10, 0x50, 0xb9, 0x7d, 0x8, 0x1a, 0x10, 0xbb, 0x9d, 0x8, 0x1a, 0x10, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x9f, 0x7, 0, 0, 0x31, 0xdb, 0xba, 0x8, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0x6c, 0x28, 0xc, 0, 0xeb, 0x3e, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x10, 0x75, 0x30, 0xb8, 0xbc, 0x8, 0x1a, 0x10, 0x50, 0xb9, 0xc2, 0x8, 0x1a, 0x10, 0xbb, 0xe1, 0x8, 0x1a, 0x10, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x65, 0x7, 0, 0, 0x31, 0xdb, 0xba, 0x7, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0x32, 0x28, 0xc, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x8, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100a0774, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100a0779, 0x5)   calld(sys_check_available_stack_size, 0xc55d4); /* call 0x10165d52 */
    II(0x100a077e, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a077f, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a0780, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a0781, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a0783, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100a0789, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a078c, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100a078f, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100a0792, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100a0795, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a0798, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100a079c, 0x6)   jzd(0x100a082d, 0x8b);                /* jz dword 0x100a082d */
    II(0x100a07a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a07a5, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x100a07a9, 0x2)   jnzd(0x100a07e9, 0x3e);               /* jnz 0x100a07e9 */
    II(0x100a07ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a07ae, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100a07b1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a07b3, 0x2)   jled(0x100a07bd, 0x8);                /* jle 0x100a07bd */
    II(0x100a07b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a07b8, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
    II(0x100a07bb, 0x2)   jmpd(0x100a07e7, 0x2a);               /* jmp 0x100a07e7 */
l_0x100a07bd:
    II(0x100a07bd, 0x5)   mov(eax, 0x101a0878);                 /* mov eax, 0x101a0878 */ /* "fuel" */
    II(0x100a07c2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a07c3, 0x5)   mov(ecx, 0x101a087d);                 /* mov ecx, 0x101a087d */ /* "More %s needed, %s turned off.\n" */
    II(0x100a07c8, 0x5)   mov(ebx, 0x101a089d);                 /* mov ebx, 0x101a089d */ /* "Cannot turn %s on, %s needed.\n" */
    II(0x100a07cd, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100a07d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a07d3, 0x5)   calld(0x100a0f77, 0x79f);             /* call 0x100a0f77 */
    II(0x100a07d8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a07da, 0x5)   mov(edx, 0x8);                        /* mov edx, 0x8 */
    II(0x100a07df, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a07e2, 0x5)   calld(0x10163053, 0xc286c);           /* call 0x10163053 */
l_0x100a07e7:
    II(0x100a07e7, 0x2)   jmpd(0x100a0827, 0x3e);               /* jmp 0x100a0827 */
l_0x100a07e9:
    II(0x100a07e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a07ec, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100a07ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a07f2, 0x3)   cmp(dx, memw_a32(ds, eax));           /* cmp dx, [eax] */
    II(0x100a07f5, 0x2)   jnzd(0x100a0827, 0x30);               /* jnz 0x100a0827 */
    II(0x100a07f7, 0x5)   mov(eax, 0x101a08bc);                 /* mov eax, 0x101a08bc */ /* "power" */
    II(0x100a07fc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a07fd, 0x5)   mov(ecx, 0x101a08c2);                 /* mov ecx, 0x101a08c2 */ /* "More %s needed, %s turned on.\n" */
    II(0x100a0802, 0x5)   mov(ebx, 0x101a08e1);                 /* mov ebx, 0x101a08e1 */ /* "Cannot turn %s off, other buildings need %s.\n" */
    II(0x100a0807, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100a080a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a080d, 0x5)   calld(0x100a0f77, 0x765);             /* call 0x100a0f77 */
    II(0x100a0812, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a0814, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x100a0819, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a081c, 0x5)   calld(0x10163053, 0xc2832);           /* call 0x10163053 */
    II(0x100a0821, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a0824, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
l_0x100a0827:
    II(0x100a0827, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a082a, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
l_0x100a082d:
    II(0x100a082d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a082f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a0830, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a0831, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a0832, 0x1)   retd();                               /* ret */
FUNC_END

