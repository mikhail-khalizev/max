FUNC_BEGIN(0x100b670a, 0x3fe5e8258cf3892d, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x3e, 0xf6, 0xa, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0x45, 0x1, 0, 0, 0xb9, 0x80, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x7, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xe8, 0x18, 0xd1, 0xfb, 0xff, 0x85, 0xc0, 0xf, 0x84, 0x87, 0, 0, 0, 0xb8, 0x1f, 0, 0, 0, 0xe8, 0x7b, 0xf6, 0xa, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x19, 0x8b, 0x5d, 0xf0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xe8, 0xe8, 0x35, 0xc, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xec, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xec, 0x8b, 0x55, 0xec, 0x8d, 0x45, 0xdc, 0xe8, 0x9e, 0x19, 0, 0, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xdc, 0xe8, 0x5b, 0x40, 0xff, 0xff, 0xe8, 0x89, 0xd, 0xff, 0xff, 0x8d, 0x45, 0xdc, 0xe8, 0x1e, 0x19, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x7, 0xc1, 0xfb, 0x10, 0x69, 0xdb, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xbf, 0xb9, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xef, 0x50, 0xfe, 0xff, 0xe9, 0x95, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x43, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x70, 0x41, 0xfd, 0xff, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x9, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xd1, 0x10, 0, 0, 0xbb, 0x58, 0x11, 0x1a, 0x10, 0xba, 0x64, 0x11, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x2b, 0xf5, 0xa, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x75, 0x11, 0x31, 0xdb, 0xba, 0xa, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0xd0, 0xc7, 0xa, 0, 0xeb, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x5, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0xbc, 0xc7, 0xa, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100b670a, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100b670f, 0x5)   calld(sys_check_available_stack_size, 0xaf63e); /* call 0x10165d52 */
    II(0x100b6714, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b6715, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b6716, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b6717, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b6719, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100b671f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b6722, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100b6725, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100b6728, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100b672b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b672d, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100b6732, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6734, 0x2)   jnzd(0x100b674b, 0x15);               /* jnz 0x100b674b */
    II(0x100b6736, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b6739, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b673c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b673f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6741, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100b6747, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b6749, 0x2)   jnzd(0x100b674d, 0x2);                /* jnz 0x100b674d */
l_0x100b674b:
    II(0x100b674b, 0x2)   jmpd(0x100b6752, 0x5);                /* jmp 0x100b6752 */
l_0x100b674d:
    II(0x100b674d, 0x5)   jmpd(0x100b6897, 0x145);              /* jmp 0x100b6897 */
l_0x100b6752:
    II(0x100b6752, 0x5)   mov(ecx, 0x180);                      /* mov ecx, 0x180 */
    II(0x100b6757, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b675a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x7));    /* mov ebx, [eax+0x7] */
    II(0x100b675d, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b6760, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6763, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100b6765, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b6768, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b676b, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100b676e, 0x5)   calld(0x1007388b, -0x42ee8);          /* call 0x1007388b */
    II(0x100b6773, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6775, 0x6)   jzd(0x100b6802, 0x87);                /* jz dword 0x100b6802 */
    II(0x100b677b, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x100b6780, 0x5)   calld(sys_new, 0xaf67b);              /* call 0x10165e00 */
    II(0x100b6785, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100b6788, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b678b, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100b678e, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x100b6792, 0x2)   jzd(0x100b67ad, 0x19);                /* jz 0x100b67ad */
    II(0x100b6794, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x100b6797, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b679a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b679d, 0x5)   calld(0x100a73d7, -0xf3cb);           /* call 0x100a73d7 */
    II(0x100b67a2, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100b67a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100b67a8, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b67ab, 0x2)   jmpd(0x100b67b3, 0x6);                /* jmp 0x100b67b3 */
l_0x100b67ad:
    II(0x100b67ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b67b0, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x100b67b3:
    II(0x100b67b3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100b67b6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b67b9, 0x5)   calld(0x100b815c, 0x199e);            /* call 0x100b815c */
    II(0x100b67be, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b67c1, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b67c4, 0x5)   calld(0x100aa824, -0xbfa5);           /* call 0x100aa824 */
    II(0x100b67c9, 0x5)   calld(0x100a7557, -0xf277);           /* call 0x100a7557 */
    II(0x100b67ce, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b67d1, 0x5)   calld(0x100b80f4, 0x191e);            /* call 0x100b80f4 */
    II(0x100b67d6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b67d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b67db, 0x3)   mov(ebx, memd_a32(ds, eax + 0x7));    /* mov ebx, [eax+0x7] */
    II(0x100b67de, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b67e1, 0x6)   imul(ebx, ebx, 0xc5);                 /* imul ebx, ebx, 0xc5 */
    II(0x100b67e7, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100b67ec, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100b67ee, 0x5)   calld(0x100c21b2, 0xb9bf);            /* call 0x100c21b2 */
    II(0x100b67f3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b67f5, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b67f8, 0x5)   calld(0x1009b8ec, -0x1af11);          /* call 0x1009b8ec */
    II(0x100b67fd, 0x5)   jmpd(0x100b6897, 0x95);               /* jmp 0x100b6897 */
l_0x100b6802:
    II(0x100b6802, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6805, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100b6808, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b680b, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x100b680f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6812, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x100b6816, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b6819, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x100b681d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b6820, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b6823, 0x5)   calld(0x1008a998, -0x2be90);          /* call 0x1008a998 */
    II(0x100b6828, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b682a, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100b682f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6831, 0x2)   jnzd(0x100b6848, 0x15);               /* jnz 0x100b6848 */
    II(0x100b6833, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b6836, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b6839, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b683c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b683e, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100b6844, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b6846, 0x2)   jnzd(0x100b6851, 0x9);                /* jnz 0x100b6851 */
l_0x100b6848:
    II(0x100b6848, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100b684f, 0x2)   jmpd(0x100b686a, 0x19);               /* jmp 0x100b686a */
l_0x100b6851:
    II(0x100b6851, 0x5)   mov(ecx, 0x10d1);                     /* mov ecx, 0x10d1 */
    II(0x100b6856, 0x5)   mov(ebx, 0x101a1158);                 /* mov ebx, 0x101a1158 */ /* "ai_move.cpp" */
    II(0x100b685b, 0x5)   mov(edx, 0x101a1164);                 /* mov edx, 0x101a1164 */ /* "PlayMode != TURN_BASED || TeamTurnID == team" */
    II(0x100b6860, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b6862, 0x5)   calld(sys_assert, 0xaf52b);           /* call 0x10165d92 */
    II(0x100b6867, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100b686a:
    II(0x100b686a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b686d, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100b6872, 0x2)   jnzd(0x100b6885, 0x11);               /* jnz 0x100b6885 */
    II(0x100b6874, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b6876, 0x5)   mov(edx, 0xa);                        /* mov edx, 0xa */
    II(0x100b687b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b687e, 0x5)   calld(0x10163053, 0xac7d0);           /* call 0x10163053 */
    II(0x100b6883, 0x2)   jmpd(0x100b6897, 0x12);               /* jmp 0x100b6897 */
l_0x100b6885:
    II(0x100b6885, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100b688a, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x100b688f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b6892, 0x5)   calld(0x10163053, 0xac7bc);           /* call 0x10163053 */
l_0x100b6897:
    II(0x100b6897, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b6899, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b689a, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b689b, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b689c, 0x1)   retd();                               /* ret */
FUNC_END

