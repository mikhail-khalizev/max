FUNC_BEGIN(0x10082b78, 0x783e49fca6ed31a9, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xd0, 0x31, 0xe, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x3e, 0xe8, 0x6f, 0x81, 0xb, 0, 0x84, 0xc0, 0x74, 0xf, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xd, 0xff, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xf0, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10082b78, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10082b7d, 0x5)   calld(sys_check_available_stack_size, 0xe31d0); /* call 0x10165d52 */
    II(0x10082b82, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10082b83, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10082b84, 0x1)   pushd(esi);                           /* push esi */
    II(0x10082b85, 0x1)   pushd(edi);                           /* push edi */
    II(0x10082b86, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10082b87, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10082b89, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10082b8f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10082b92, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10082b95, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10082b97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10082b9a, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x10082b9d, 0x5)   calld(0x1013ad11, 0xb816f);           /* call 0x1013ad11 */
    II(0x10082ba2, 0x2)   test(al, al);                         /* test al, al */
    II(0x10082ba4, 0x2)   jzd(0x10082bb5, 0xf);                 /* jz 0x10082bb5 */
    II(0x10082ba6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10082ba9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10082bac, 0x5)   calld(0x10082abe, -0xf3);             /* call 0x10082abe */
    II(0x10082bb1, 0x2)   test(al, al);                         /* test al, al */
    II(0x10082bb3, 0x2)   jnzd(0x10082bb7, 0x2);                /* jnz 0x10082bb7 */
l_0x10082bb5:
    II(0x10082bb5, 0x2)   jmpd(0x10082bbd, 0x6);                /* jmp 0x10082bbd */
l_0x10082bb7:
    II(0x10082bb7, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x10082bbb, 0x2)   jmpd(0x10082bc1, 0x4);                /* jmp 0x10082bc1 */
l_0x10082bbd:
    II(0x10082bbd, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
l_0x10082bc1:
    II(0x10082bc1, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10082bc4, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
//    II(0x10082bc7, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10082bca, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10082bcc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10082bcd, 0x1)   popd(edi);                            /* pop edi */
    II(0x10082bce, 0x1)   popd(esi);                            /* pop esi */
    II(0x10082bcf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10082bd0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10082bd1, 0x1)   retd();                               /* ret */
FUNC_END

