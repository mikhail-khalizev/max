FUNC_BEGIN(0x100e5df1, 0xeaffa321ad834114, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x57, 0xff, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0xba, 0x78, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4e, 0xff, 0xff, 0xff, 0xba, 0x84, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x41, 0xff, 0xff, 0xff, 0xba, 0x9c, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x34, 0xff, 0xff, 0xff, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xfb, 0x4, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0x71, 0x6, 0xf9, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xa7, 0xd, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x16, 0x4f, 0x5, 0, 0x84, 0xc0, 0x74, 0x4a, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf4, 0xe8, 0x6a, 0x5, 0xf9, 0xff, 0xe8, 0x99, 0xf5, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x34, 0x8d, 0x45, 0xf4, 0xe8, 0x59, 0x5, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x5, 0x13, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x13, 0x5, 0xf9, 0xff, 0xf6, 0x40, 0x14, 0x1, 0x75, 0x14, 0x31, 0xdb, 0x8d, 0x45, 0xf4, 0xe8, 0x37, 0x5, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x16, 0x13, 0, 0, 0xeb, 0xa0, 0xb8, 0x90, 0x81, 0x1c, 0x10, 0xe8, 0x85, 0x4, 0xf9, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf9, 0x5, 0xf9, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0x2f, 0xd, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x9e, 0x4e, 0x5, 0, 0x84, 0xc0, 0x74, 0x1f, 0x8d, 0x45, 0xf8, 0xe8, 0xc1, 0x4, 0xf9, 0xff, 0xf6, 0x40, 0x12, 0x2, 0x74, 0xf, 0x8d, 0x45, 0xf8, 0xe8, 0xb3, 0x4, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x8, 0x59, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x2a, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf8, 0xe8, 0xd1, 0x4, 0xf9, 0xff, 0xe8, 0, 0xf5, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x14, 0x31, 0xdb, 0x8d, 0x45, 0xf8, 0xe8, 0xbe, 0x4, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x9d, 0x12, 0, 0, 0xeb, 0x9f, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xc, 0x4, 0xf9, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x4, 0x5, 0xf9, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xb6, 0xc, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x25, 0x4e, 0x5, 0, 0x84, 0xc0, 0x74, 0x38, 0x8d, 0x45, 0xf4, 0xe8, 0x48, 0x4, 0xf9, 0xff, 0xf6, 0x40, 0x14, 0x1, 0x74, 0x28, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf4, 0xe8, 0x6b, 0x4, 0xf9, 0xff, 0xe8, 0x9a, 0xf4, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x14, 0x31, 0xdb, 0x8d, 0x45, 0xf4, 0xe8, 0x58, 0x4, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x37, 0x12, 0, 0, 0xeb, 0xb2, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0x66, 0xc, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xd5, 0x4d, 0x5, 0, 0x84, 0xc0, 0x74, 0x2a, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf8, 0xe8, 0x29, 0x4, 0xf9, 0xff, 0xe8, 0x58, 0xf4, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x14, 0x31, 0xdb, 0x8d, 0x45, 0xf8, 0xe8, 0x16, 0x4, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xf5, 0x11, 0, 0, 0xeb, 0xc0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x98, 0xff, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x8e, 0xff, 0xf8, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100e5df1, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100e5df6, 0x5)   calld(sys_check_available_stack_size, 0x7ff57); /* call 0x10165d52 */
    II(0x100e5dfb, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e5dfc, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e5dfd, 0x1)   pushd(edx);                           /* push edx */
    II(0x100e5dfe, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e5dff, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e5e00, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e5e01, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e5e03, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100e5e09, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100e5e0c, 0x5)   mov(edx, 0x101c8178);                 /* mov edx, 0x101c8178 */
//    II(0x100e5e11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e5e14, 0x5)   calld(0x100e5d67, -0xb2);             /* call 0x100e5d67 */
    II(0x100e5e19, 0x5)   mov(edx, 0x101c8184);                 /* mov edx, 0x101c8184 */
    II(0x100e5e1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e5e21, 0x5)   calld(0x100e5d67, -0xbf);             /* call 0x100e5d67 */
    II(0x100e5e26, 0x5)   mov(edx, 0x101c819c);                 /* mov edx, 0x101c819c */
    II(0x100e5e2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e5e2e, 0x5)   calld(0x100e5d67, -0xcc);             /* call 0x100e5d67 */
    II(0x100e5e33, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100e5e38, 0x5)   calld(0x10076338, -0x6fb05);          /* call 0x10076338 */
    II(0x100e5e3d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e5e3f, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5e42, 0x5)   calld(0x100764b8, -0x6f98f);          /* call 0x100764b8 */
    II(0x100e5e47, 0x2)   jmpd(0x100e5e51, 0x8);                /* jmp 0x100e5e51 */
l_0x100e5e49:
    II(0x100e5e49, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5e4c, 0x5)   calld(0x10076bf8, -0x6f259);          /* call 0x10076bf8 */
l_0x100e5e51:
    II(0x100e5e51, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e5e53, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5e56, 0x5)   calld(0x1013ad71, 0x54f16);           /* call 0x1013ad71 */
    II(0x100e5e5b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e5e5d, 0x2)   jzd(0x100e5ea9, 0x4a);                /* jz 0x100e5ea9 */
    II(0x100e5e5f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100e5e62, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5e65, 0x5)   calld(0x100763d4, -0x6fa96);          /* call 0x100763d4 */
    II(0x100e5e6a, 0x5)   calld(0x100e5408, -0xa67);            /* call 0x100e5408 */
    II(0x100e5e6f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e5e71, 0x2)   jzd(0x100e5ea7, 0x34);                /* jz 0x100e5ea7 */
    II(0x100e5e73, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5e76, 0x5)   calld(0x100763d4, -0x6faa7);          /* call 0x100763d4 */
    II(0x100e5e7b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e5e7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e5e80, 0x5)   calld(0x100e718a, 0x1305);            /* call 0x100e718a */
    II(0x100e5e85, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5e88, 0x5)   calld(0x100763a0, -0x6faed);          /* call 0x100763a0 */
    II(0x100e5e8d, 0x4)   test(memb_a32(ds, eax + 0x14), 0x1);  /* test byte [eax+0x14], 0x1 */
    II(0x100e5e91, 0x2)   jnzd(0x100e5ea7, 0x14);               /* jnz 0x100e5ea7 */
    II(0x100e5e93, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e5e95, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5e98, 0x5)   calld(0x100763d4, -0x6fac9);          /* call 0x100763d4 */
    II(0x100e5e9d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e5e9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e5ea2, 0x5)   calld(0x100e71bd, 0x1316);            /* call 0x100e71bd */
l_0x100e5ea7:
    II(0x100e5ea7, 0x2)   jmpd(0x100e5e49, -0x60);              /* jmp 0x100e5e49 */
l_0x100e5ea9:
    II(0x100e5ea9, 0x5)   mov(eax, 0x101c8190);                 /* mov eax, 0x101c8190 */
    II(0x100e5eae, 0x5)   calld(0x10076338, -0x6fb7b);          /* call 0x10076338 */
    II(0x100e5eb3, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x100e5eb6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e5eb8, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100e5eba, 0x5)   calld(0x100764b8, -0x6fa07);          /* call 0x100764b8 */
    II(0x100e5ebf, 0x2)   jmpd(0x100e5ec9, 0x8);                /* jmp 0x100e5ec9 */
l_0x100e5ec1:
    II(0x100e5ec1, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5ec4, 0x5)   calld(0x10076bf8, -0x6f2d1);          /* call 0x10076bf8 */
l_0x100e5ec9:
    II(0x100e5ec9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e5ecb, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5ece, 0x5)   calld(0x1013ad71, 0x54e9e);           /* call 0x1013ad71 */
    II(0x100e5ed3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e5ed5, 0x2)   jzd(0x100e5ef6, 0x1f);                /* jz 0x100e5ef6 */
    II(0x100e5ed7, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5eda, 0x5)   calld(0x100763a0, -0x6fb3f);          /* call 0x100763a0 */
    II(0x100e5edf, 0x4)   test(memb_a32(ds, eax + 0x12), 0x2);  /* test byte [eax+0x12], 0x2 */
    II(0x100e5ee3, 0x2)   jzd(0x100e5ef4, 0xf);                 /* jz 0x100e5ef4 */
    II(0x100e5ee5, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5ee8, 0x5)   calld(0x100763a0, -0x6fb4d);          /* call 0x100763a0 */
    II(0x100e5eed, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x59);   /* cmp word [eax+0x8], 0x59 */
    II(0x100e5ef2, 0x2)   jnzd(0x100e5ef6, 0x2);                /* jnz 0x100e5ef6 */
l_0x100e5ef4:
    II(0x100e5ef4, 0x2)   jmpd(0x100e5ef8, 0x2);                /* jmp 0x100e5ef8 */
l_0x100e5ef6:
    II(0x100e5ef6, 0x2)   jmpd(0x100e5f22, 0x2a);               /* jmp 0x100e5f22 */
l_0x100e5ef8:
    II(0x100e5ef8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100e5efb, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5efe, 0x5)   calld(0x100763d4, -0x6fb2f);          /* call 0x100763d4 */
    II(0x100e5f03, 0x5)   calld(0x100e5408, -0xb00);            /* call 0x100e5408 */
    II(0x100e5f08, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e5f0a, 0x2)   jzd(0x100e5f20, 0x14);                /* jz 0x100e5f20 */
    II(0x100e5f0c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e5f0e, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5f11, 0x5)   calld(0x100763d4, -0x6fb42);          /* call 0x100763d4 */
    II(0x100e5f16, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e5f18, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e5f1b, 0x5)   calld(0x100e71bd, 0x129d);            /* call 0x100e71bd */
l_0x100e5f20:
    II(0x100e5f20, 0x2)   jmpd(0x100e5ec1, -0x61);              /* jmp 0x100e5ec1 */
l_0x100e5f22:
    II(0x100e5f22, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100e5f27, 0x5)   calld(0x10076338, -0x6fbf4);          /* call 0x10076338 */
    II(0x100e5f2c, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100e5f2f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e5f31, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100e5f33, 0x5)   calld(0x1007643c, -0x6fafc);          /* call 0x1007643c */
    II(0x100e5f38, 0x2)   jmpd(0x100e5f42, 0x8);                /* jmp 0x100e5f42 */
l_0x100e5f3a:
    II(0x100e5f3a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5f3d, 0x5)   calld(0x10076bf8, -0x6f34a);          /* call 0x10076bf8 */
l_0x100e5f42:
    II(0x100e5f42, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e5f44, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5f47, 0x5)   calld(0x1013ad71, 0x54e25);           /* call 0x1013ad71 */
    II(0x100e5f4c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e5f4e, 0x2)   jzd(0x100e5f88, 0x38);                /* jz 0x100e5f88 */
    II(0x100e5f50, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5f53, 0x5)   calld(0x100763a0, -0x6fbb8);          /* call 0x100763a0 */
    II(0x100e5f58, 0x4)   test(memb_a32(ds, eax + 0x14), 0x1);  /* test byte [eax+0x14], 0x1 */
    II(0x100e5f5c, 0x2)   jzd(0x100e5f86, 0x28);                /* jz 0x100e5f86 */
    II(0x100e5f5e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100e5f61, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5f64, 0x5)   calld(0x100763d4, -0x6fb95);          /* call 0x100763d4 */
    II(0x100e5f69, 0x5)   calld(0x100e5408, -0xb66);            /* call 0x100e5408 */
    II(0x100e5f6e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e5f70, 0x2)   jzd(0x100e5f86, 0x14);                /* jz 0x100e5f86 */
    II(0x100e5f72, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e5f74, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5f77, 0x5)   calld(0x100763d4, -0x6fba8);          /* call 0x100763d4 */
    II(0x100e5f7c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e5f7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e5f81, 0x5)   calld(0x100e71bd, 0x1237);            /* call 0x100e71bd */
l_0x100e5f86:
    II(0x100e5f86, 0x2)   jmpd(0x100e5f3a, -0x4e);              /* jmp 0x100e5f3a */
l_0x100e5f88:
    II(0x100e5f88, 0x2)   jmpd(0x100e5f92, 0x8);                /* jmp 0x100e5f92 */
l_0x100e5f8a:
    II(0x100e5f8a, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5f8d, 0x5)   calld(0x10076bf8, -0x6f39a);          /* call 0x10076bf8 */
l_0x100e5f92:
    II(0x100e5f92, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e5f94, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5f97, 0x5)   calld(0x1013ad71, 0x54dd5);           /* call 0x1013ad71 */
    II(0x100e5f9c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e5f9e, 0x2)   jzd(0x100e5fca, 0x2a);                /* jz 0x100e5fca */
    II(0x100e5fa0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100e5fa3, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5fa6, 0x5)   calld(0x100763d4, -0x6fbd7);          /* call 0x100763d4 */
    II(0x100e5fab, 0x5)   calld(0x100e5408, -0xba8);            /* call 0x100e5408 */
    II(0x100e5fb0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e5fb2, 0x2)   jzd(0x100e5fc8, 0x14);                /* jz 0x100e5fc8 */
    II(0x100e5fb4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e5fb6, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5fb9, 0x5)   calld(0x100763d4, -0x6fbea);          /* call 0x100763d4 */
    II(0x100e5fbe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e5fc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e5fc3, 0x5)   calld(0x100e71bd, 0x11f5);            /* call 0x100e71bd */
l_0x100e5fc8:
    II(0x100e5fc8, 0x2)   jmpd(0x100e5f8a, -0x40);              /* jmp 0x100e5f8a */
l_0x100e5fca:
    II(0x100e5fca, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e5fcc, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100e5fcf, 0x5)   calld(0x10075f6c, -0x70068);          /* call 0x10075f6c */
    II(0x100e5fd4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e5fd6, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e5fd9, 0x5)   calld(0x10075f6c, -0x70072);          /* call 0x10075f6c */
    II(0x100e5fde, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e5fe0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e5fe1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e5fe2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e5fe3, 0x1)   popd(edx);                            /* pop edx */
    II(0x100e5fe4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e5fe5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e5fe6, 0x1)   retd();                               /* ret */
FUNC_END

