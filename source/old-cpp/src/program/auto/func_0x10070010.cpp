FUNC_BEGIN(0x10070010, 0x4ff1313f27c13e90, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x38, 0x5d, 0xf, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf0, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0xf, 0xbf, 0x5d, 0xf8, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0xfe, 0x34, 0x9, 0, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x69, 0x64, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x53, 0x66, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe, 0xad, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0xa3, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x2d, 0x63, 0, 0, 0x66, 0xf7, 0x40, 0x12, 0x80, 0x1, 0xf, 0x84, 0x5f, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x19, 0x63, 0, 0, 0x80, 0x78, 0x3d, 0x10, 0xf, 0x84, 0x4b, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x7, 0x63, 0, 0, 0x80, 0x78, 0x3d, 0x2, 0x74, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0xf9, 0x62, 0, 0, 0x80, 0x78, 0x3d, 0x1b, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0xe9, 0x62, 0, 0, 0x80, 0x78, 0x3d, 0x1e, 0x75, 0x2, 0xeb, 0x20, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x5c, 0x5e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x92, 0x5e, 0, 0, 0xe9, 0xcf, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xb9, 0x62, 0, 0, 0x80, 0x78, 0x3e, 0x1, 0x74, 0x16, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xa9, 0x62, 0, 0, 0x83, 0xc0, 0x65, 0xe8, 0x12, 0xac, 0xc, 0, 0x84, 0xc0, 0x74, 0x20, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x18, 0x5e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x4e, 0x5e, 0, 0, 0xe9, 0x8b, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x75, 0x62, 0, 0, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x3b, 0x45, 0xfc, 0x75, 0x12, 0x8d, 0x45, 0xec, 0xe8, 0x63, 0x62, 0, 0, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x3b, 0x45, 0xf8, 0x74, 0x20, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd4, 0x5d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xa, 0x5e, 0, 0, 0xe9, 0x47, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x31, 0x62, 0, 0, 0x83, 0xc0, 0x65, 0xe8, 0x61, 0x68, 0, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x48, 0x2, 0x8b, 0x45, 0xf0, 0x2b, 0x45, 0xf8, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x2b, 0x45, 0xfc, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xe0, 0xff, 0x51, 0x1c, 0x84, 0xc0, 0x74, 0x20, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x7f, 0x5d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb5, 0x5d, 0, 0, 0xe9, 0xf2, 0, 0, 0, 0xc7, 0x45, 0xe4, 0x1, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x5f, 0x5d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x95, 0x5d, 0, 0, 0xe9, 0xd2, 0, 0, 0, 0xeb, 0x23, 0x8d, 0x45, 0xec, 0xe8, 0xba, 0x61, 0, 0, 0x66, 0x83, 0x78, 0x8, 0x27, 0x75, 0x14, 0x8d, 0x45, 0xec, 0xe8, 0x13, 0x62, 0, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2f, 0x64, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xef, 0x69, 0, 0, 0xe9, 0x4b, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x59, 0xab, 0xc, 0, 0x84, 0xc0, 0x74, 0x61, 0x8d, 0x45, 0xe8, 0xe8, 0x50, 0x63, 0, 0, 0x80, 0x78, 0x3d, 0, 0x75, 0x36, 0x80, 0x7d, 0x10, 0, 0x74, 0x19, 0xbb, 0x27, 0, 0, 0, 0xba, 0x2, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x8e, 0x63, 0, 0, 0xe8, 0x4f, 0x2d, 0xf, 0, 0xeb, 0x17, 0xbb, 0x26, 0, 0, 0, 0xba, 0x2, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x75, 0x63, 0, 0, 0xe8, 0x36, 0x2d, 0xf, 0, 0xc7, 0x45, 0xe4, 0x1, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xbb, 0x5c, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf1, 0x5c, 0, 0, 0xeb, 0x31, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x9e, 0x5c, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xd4, 0x5c, 0, 0, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x88, 0x5c, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xbe, 0x5c, 0, 0, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x10070010, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10070015, 0x5)   calld(sys_check_available_stack_size, 0xf5d38); /* call 0x10165d52 */
    II(0x1007001a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007001b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007001c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007001d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007001f, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10070025, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10070028, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x1007002b, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x1007002e, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x10070031, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x10070035, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10070039, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x1007003e, 0x5)   calld(0x10103541, 0x934fe);           /* call 0x10103541 */
    II(0x10070043, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x10070046, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10070048, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007004a, 0x5)   calld(0x100764b8, 0x6469);            /* call 0x100764b8 */
    II(0x1007004f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10070051, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10070054, 0x5)   calld(0x100766ac, 0x6653);            /* call 0x100766ac */
l_0x10070059:
    II(0x10070059, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007005b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007005e, 0x5)   calld(0x1013ad71, 0xcad0e);           /* call 0x1013ad71 */
    II(0x10070063, 0x2)   test(al, al);                         /* test al, al */
    II(0x10070065, 0x6)   jzd(0x1007020e, 0x1a3);               /* jz dword 0x1007020e */
    II(0x1007006b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007006e, 0x5)   calld(0x100763a0, 0x632d);            /* call 0x100763a0 */
    II(0x10070073, 0x6)   test(memw_a32(ds, eax + 0x12), 0x180); /* test word [eax+0x12], 0x180 */
    II(0x10070079, 0x6)   jzd(0x100701de, 0x15f);               /* jz dword 0x100701de */
    II(0x1007007f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10070082, 0x5)   calld(0x100763a0, 0x6319);            /* call 0x100763a0 */
    II(0x10070087, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x1007008b, 0x6)   jzd(0x100701dc, 0x14b);               /* jz dword 0x100701dc */
    II(0x10070091, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10070094, 0x5)   calld(0x100763a0, 0x6307);            /* call 0x100763a0 */
    II(0x10070099, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x1007009d, 0x2)   jzd(0x100700ad, 0xe);                 /* jz 0x100700ad */
    II(0x1007009f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100700a2, 0x5)   calld(0x100763a0, 0x62f9);            /* call 0x100763a0 */
    II(0x100700a7, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x100700ab, 0x2)   jnzd(0x100700af, 0x2);                /* jnz 0x100700af */
l_0x100700ad:
    II(0x100700ad, 0x2)   jmpd(0x100700bd, 0xe);                /* jmp 0x100700bd */
l_0x100700af:
    II(0x100700af, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100700b2, 0x5)   calld(0x100763a0, 0x62e9);            /* call 0x100763a0 */
    II(0x100700b7, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x100700bb, 0x2)   jnzd(0x100700bf, 0x2);                /* jnz 0x100700bf */
l_0x100700bd:
    II(0x100700bd, 0x2)   jmpd(0x100700df, 0x20);               /* jmp 0x100700df */
l_0x100700bf:
    II(0x100700bf, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100700c6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100700c8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100700cb, 0x5)   calld(0x10075f2c, 0x5e5c);            /* call 0x10075f2c */
    II(0x100700d0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100700d2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100700d5, 0x5)   calld(0x10075f6c, 0x5e92);            /* call 0x10075f6c */
    II(0x100700da, 0x5)   jmpd(0x100702ae, 0x1cf);              /* jmp 0x100702ae */
l_0x100700df:
    II(0x100700df, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100700e2, 0x5)   calld(0x100763a0, 0x62b9);            /* call 0x100763a0 */
    II(0x100700e7, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100700eb, 0x2)   jzd(0x10070103, 0x16);                /* jz 0x10070103 */
    II(0x100700ed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100700ef, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100700f2, 0x5)   calld(0x100763a0, 0x62a9);            /* call 0x100763a0 */
    II(0x100700f7, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100700fa, 0x5)   calld(0x1013ad11, 0xcac12);           /* call 0x1013ad11 */
    II(0x100700ff, 0x2)   test(al, al);                         /* test al, al */
    II(0x10070101, 0x2)   jzd(0x10070123, 0x20);                /* jz 0x10070123 */
l_0x10070103:
    II(0x10070103, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1007010a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007010c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007010f, 0x5)   calld(0x10075f2c, 0x5e18);            /* call 0x10075f2c */
    II(0x10070114, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10070116, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10070119, 0x5)   calld(0x10075f6c, 0x5e4e);            /* call 0x10075f6c */
    II(0x1007011e, 0x5)   jmpd(0x100702ae, 0x18b);              /* jmp 0x100702ae */
l_0x10070123:
    II(0x10070123, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10070126, 0x5)   calld(0x100763a0, 0x6275);            /* call 0x100763a0 */
    II(0x1007012b, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1007012f, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x10070133, 0x2)   jnzd(0x10070147, 0x12);               /* jnz 0x10070147 */
    II(0x10070135, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10070138, 0x5)   calld(0x100763a0, 0x6263);            /* call 0x100763a0 */
    II(0x1007013d, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x10070141, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10070145, 0x2)   jzd(0x10070167, 0x20);                /* jz 0x10070167 */
l_0x10070147:
    II(0x10070147, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1007014e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10070150, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10070153, 0x5)   calld(0x10075f2c, 0x5dd4);            /* call 0x10075f2c */
    II(0x10070158, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007015a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007015d, 0x5)   calld(0x10075f6c, 0x5e0a);            /* call 0x10075f6c */
    II(0x10070162, 0x5)   jmpd(0x100702ae, 0x147);              /* jmp 0x100702ae */
l_0x10070167:
    II(0x10070167, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007016a, 0x5)   calld(0x100763a0, 0x6231);            /* call 0x100763a0 */
    II(0x1007016f, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10070172, 0x5)   calld(0x100769d8, 0x6861);            /* call 0x100769d8 */
    II(0x10070177, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1007017a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1007017d, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x10070180, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10070183, 0x3)   sub(eax, memd_a32(ss, ebp - 0x8));    /* sub eax, [ebp-0x8] */
    II(0x10070186, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10070189, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007018c, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x1007018f, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10070192, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10070195, 0x3)   calld_abs(memd_a32(ds, ecx + 0x1c));  /* call dword near [ecx+0x1c] */
    II(0x10070198, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007019a, 0x2)   jzd(0x100701bc, 0x20);                /* jz 0x100701bc */
    II(0x1007019c, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100701a3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100701a5, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100701a8, 0x5)   calld(0x10075f2c, 0x5d7f);            /* call 0x10075f2c */
    II(0x100701ad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100701af, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100701b2, 0x5)   calld(0x10075f6c, 0x5db5);            /* call 0x10075f6c */
    II(0x100701b7, 0x5)   jmpd(0x100702ae, 0xf2);               /* jmp 0x100702ae */
l_0x100701bc:
    II(0x100701bc, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x1);   /* mov dword [ebp-0x1c], 0x1 */
    II(0x100701c3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100701c5, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100701c8, 0x5)   calld(0x10075f2c, 0x5d5f);            /* call 0x10075f2c */
    II(0x100701cd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100701cf, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100701d2, 0x5)   calld(0x10075f6c, 0x5d95);            /* call 0x10075f6c */
    II(0x100701d7, 0x5)   jmpd(0x100702ae, 0xd2);               /* jmp 0x100702ae */
l_0x100701dc:
    II(0x100701dc, 0x2)   jmpd(0x10070201, 0x23);               /* jmp 0x10070201 */
l_0x100701de:
    II(0x100701de, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100701e1, 0x5)   calld(0x100763a0, 0x61ba);            /* call 0x100763a0 */
    II(0x100701e6, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x27);   /* cmp word [eax+0x8], 0x27 */
    II(0x100701eb, 0x2)   jnzd(0x10070201, 0x14);               /* jnz 0x10070201 */
    II(0x100701ed, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100701f0, 0x5)   calld(0x10076408, 0x6213);            /* call 0x10076408 */
    II(0x100701f5, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100701f8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100701fa, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100701fc, 0x5)   calld(0x10076630, 0x642f);            /* call 0x10076630 */
l_0x10070201:
    II(0x10070201, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10070204, 0x5)   calld(0x10076bf8, 0x69ef);            /* call 0x10076bf8 */
    II(0x10070209, 0x5)   jmpd(0x10070059, -0x1b5);             /* jmp 0x10070059 */
l_0x1007020e:
    II(0x1007020e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10070210, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10070213, 0x5)   calld(0x1013ad71, 0xcab59);           /* call 0x1013ad71 */
    II(0x10070218, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007021a, 0x2)   jzd(0x1007027d, 0x61);                /* jz 0x1007027d */
    II(0x1007021c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007021f, 0x5)   calld(0x10076574, 0x6350);            /* call 0x10076574 */
    II(0x10070224, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0);     /* cmp byte [eax+0x3d], 0x0 */
    II(0x10070228, 0x2)   jnzd(0x10070260, 0x36);               /* jnz 0x10070260 */
    II(0x1007022a, 0x4)   cmp(memb_a32(ss, ebp + 0x10), 0);     /* cmp byte [ebp+0x10], 0x0 */
    II(0x1007022e, 0x2)   jzd(0x10070249, 0x19);                /* jz 0x10070249 */
    II(0x10070230, 0x5)   mov(ebx, 0x27);                       /* mov ebx, 0x27 */
    II(0x10070235, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1007023a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007023d, 0x5)   calld(0x100765d0, 0x638e);            /* call 0x100765d0 */
    II(0x10070242, 0x5)   calld(0x10162f96, 0xf2d4f);           /* call 0x10162f96 */
    II(0x10070247, 0x2)   jmpd(0x10070260, 0x17);               /* jmp 0x10070260 */
l_0x10070249:
    II(0x10070249, 0x5)   mov(ebx, 0x26);                       /* mov ebx, 0x26 */
    II(0x1007024e, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x10070253, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10070256, 0x5)   calld(0x100765d0, 0x6375);            /* call 0x100765d0 */
    II(0x1007025b, 0x5)   calld(0x10162f96, 0xf2d36);           /* call 0x10162f96 */
l_0x10070260:
    II(0x10070260, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x1);   /* mov dword [ebp-0x1c], 0x1 */
    II(0x10070267, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10070269, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007026c, 0x5)   calld(0x10075f2c, 0x5cbb);            /* call 0x10075f2c */
    II(0x10070271, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10070273, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10070276, 0x5)   calld(0x10075f6c, 0x5cf1);            /* call 0x10075f6c */
    II(0x1007027b, 0x2)   jmpd(0x100702ae, 0x31);               /* jmp 0x100702ae */
l_0x1007027d:
    II(0x1007027d, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x10070284, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10070286, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10070289, 0x5)   calld(0x10075f2c, 0x5c9e);            /* call 0x10075f2c */
    II(0x1007028e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10070290, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10070293, 0x5)   calld(0x10075f6c, 0x5cd4);            /* call 0x10075f6c */
    II(0x10070298, 0x2)   jmpd(0x100702ae, 0x14);               /* jmp 0x100702ae */
//  II(0x1007029a, 0x14)  /* Недостижимый код. */
l_0x100702ae:
    II(0x100702ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100702b1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100702b3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100702b4, 0x1)   popd(edi);                            /* pop edi */
    II(0x100702b5, 0x1)   popd(esi);                            /* pop esi */
    II(0x100702b6, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

