FUNC_BEGIN(0x100c303a, 0xe9580cb48326f1df, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xe, 0x2d, 0xa, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xf4, 0xe8, 0x7e, 0xf7, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x20, 0x3a, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x42, 0x57, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x13, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x21, 0x5d, 0xfc, 0xff, 0xe9, 0xc2, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd4, 0x81, 0x1c, 0x10, 0x88, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0x29, 0x80, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xe0, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0x83, 0xf8, 0x1, 0x75, 0x1f, 0xbb, 0x1, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xe0, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xdc, 0xe8, 0x64, 0x2d, 0xfb, 0xff, 0x89, 0xca, 0xe8, 0xba, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x10, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xb1, 0x5c, 0xfc, 0xff, 0xeb, 0x55, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0x83, 0xf8, 0x2, 0x75, 0x1f, 0xbb, 0x2, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xe0, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xd8, 0xe8, 0x29, 0x2d, 0xfb, 0xff, 0x89, 0xca, 0xe8, 0x7f, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x10, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x76, 0x5c, 0xfc, 0xff, 0xeb, 0x1a, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x66, 0x5c, 0xfc, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x5a, 0x5c, 0xfc, 0xff, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100c303a, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100c303f, 0x5)   calld(sys_check_available_stack_size, 0xa2d0e); /* call 0x10165d52 */
    II(0x100c3044, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c3045, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c3046, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c3047, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c3048, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c304a, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100c3050, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100c3053, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100c3056, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100c3059, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100c305e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3061, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x100c3064, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c3067, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100c306a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c306d, 0x5)   calld(0x100c27f0, -0x882);            /* call 0x100c27f0 */
    II(0x100c3072, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3075, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100c3078, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c307b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c307e, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100c3081, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c3084, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c3087, 0x5)   calld(0x10076aac, -0x4c5e0);          /* call 0x10076aac */
    II(0x100c308c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100c3090, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c3093, 0x5)   calld(0x100b87da, -0xa8be);           /* call 0x100b87da */
    II(0x100c3098, 0x1)   cwde();                               /* cwde */
    II(0x100c3099, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c309b, 0x2)   jnzd(0x100c30b0, 0x13);               /* jnz 0x100c30b0 */
    II(0x100c309d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100c30a1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c30a3, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c30a6, 0x5)   calld(0x10088dcc, -0x3a2df);          /* call 0x10088dcc */
    II(0x100c30ab, 0x5)   jmpd(0x100c3172, 0xc2);               /* jmp 0x100c3172 */
l_0x100c30b0:
    II(0x100c30b0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100c30b4, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100c30b7, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d4)); /* mov al, [eax+0x101c81d4] */
    II(0x100c30bd, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100c30c0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100c30c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c30c7, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c30ca, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c30d0, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x100c30d6, 0x5)   calld(0x1008b104, -0x37fd7);          /* call 0x1008b104 */
    II(0x100c30db, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x100c30df, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100c30e2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c30e4, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100c30e7, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100c30ea, 0x2)   jnzd(0x100c310b, 0x1f);               /* jnz 0x100c310b */
    II(0x100c30ec, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100c30f1, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x20)); /* movsx ecx, word [ebp-0x20] */
    II(0x100c30f5, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100c30f8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c30fb, 0x5)   calld(0x10075e64, -0x4d29c);          /* call 0x10075e64 */
    II(0x100c3100, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x100c3102, 0x5)   calld(0x100c2fc1, -0x146);            /* call 0x100c2fc1 */
    II(0x100c3107, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c3109, 0x2)   jzd(0x100c310d, 0x2);                 /* jz 0x100c310d */
l_0x100c310b:
    II(0x100c310b, 0x2)   jmpd(0x100c311d, 0x10);               /* jmp 0x100c311d */
l_0x100c310d:
    II(0x100c310d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100c3111, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3113, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c3116, 0x5)   calld(0x10088dcc, -0x3a34f);          /* call 0x10088dcc */
    II(0x100c311b, 0x2)   jmpd(0x100c3172, 0x55);               /* jmp 0x100c3172 */
l_0x100c311d:
    II(0x100c311d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c311f, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100c3122, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c3125, 0x2)   jnzd(0x100c3146, 0x1f);               /* jnz 0x100c3146 */
    II(0x100c3127, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100c312c, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x20)); /* movsx ecx, word [ebp-0x20] */
    II(0x100c3130, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100c3133, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100c3136, 0x5)   calld(0x10075e64, -0x4d2d7);          /* call 0x10075e64 */
    II(0x100c313b, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x100c313d, 0x5)   calld(0x100c2fc1, -0x181);            /* call 0x100c2fc1 */
    II(0x100c3142, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c3144, 0x2)   jzd(0x100c3148, 0x2);                 /* jz 0x100c3148 */
l_0x100c3146:
    II(0x100c3146, 0x2)   jmpd(0x100c3158, 0x10);               /* jmp 0x100c3158 */
l_0x100c3148:
    II(0x100c3148, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100c314c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c314e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c3151, 0x5)   calld(0x10088dcc, -0x3a38a);          /* call 0x10088dcc */
    II(0x100c3156, 0x2)   jmpd(0x100c3172, 0x1a);               /* jmp 0x100c3172 */
l_0x100c3158:
    II(0x100c3158, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100c315c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c315e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c3161, 0x5)   calld(0x10088dcc, -0x3a39a);          /* call 0x10088dcc */
    II(0x100c3166, 0x2)   jmpd(0x100c3172, 0xa);                /* jmp 0x100c3172 */
//  II(0x100c3168, 0xa)   /* Недостижимый код. */
l_0x100c3172:
    II(0x100c3172, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x100c3175, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c3177, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c3178, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c3179, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c317a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c317b, 0x1)   retd();                               /* ret */
FUNC_END

