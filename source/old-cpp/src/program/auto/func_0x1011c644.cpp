FUNC_BEGIN(0x1011c644, 0x8cf25b143e0703d6, 0x20, ({0x68, 0x5c, 0, 0, 0, 0xe8, 0x4, 0x97, 0x4, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x8d, 0x45, 0xf0, 0xe8, 0x85, 0xa4, 0xf5, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0x7d, 0xa4, 0xf5, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x75, 0xa4, 0xf5, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x6d, 0xa4, 0xf5, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x65, 0xa4, 0xf5, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0x11, 0x3e, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x1e, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x2, 0x66, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x20, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x42, 0x2, 0x66, 0x89, 0x45, 0xee, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x7e, 0x8, 0x66, 0xc7, 0x45, 0xe8, 0x1, 0, 0xeb, 0xa, 0x66, 0xf7, 0x5d, 0xec, 0x66, 0xc7, 0x45, 0xe8, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xee, 0x85, 0xc0, 0x7e, 0x8, 0x66, 0xc7, 0x45, 0xea, 0x1, 0, 0xeb, 0xa, 0x66, 0xf7, 0x5d, 0xee, 0x66, 0xc7, 0x45, 0xea, 0xff, 0xff, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x45, 0xee, 0x7d, 0x5b, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xd4, 0xf, 0xbf, 0x45, 0xd4, 0x85, 0xc0, 0x75, 0x11, 0xc7, 0x45, 0xd4, 0x1, 0, 0, 0, 0x66, 0xff, 0x45, 0xee, 0x66, 0xc7, 0x45, 0xec, 0x1, 0, 0x8b, 0x45, 0xea, 0x1, 0xc0, 0x5, 0x2, 0, 0, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xea, 0x74, 0x8, 0x66, 0xc7, 0x45, 0xe4, 0x1, 0, 0xeb, 0x16, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x75, 0x8, 0x66, 0xc7, 0x45, 0xe4, 0x7, 0, 0xeb, 0x6, 0x66, 0xc7, 0x45, 0xe4, 0xff, 0xff, 0x66, 0xc7, 0x45, 0xe6, 0, 0, 0xeb, 0x4b, 0x8b, 0x45, 0xee, 0x89, 0x45, 0xd4, 0xf, 0xbf, 0x45, 0xd4, 0x85, 0xc0, 0x75, 0x11, 0xc7, 0x45, 0xd4, 0x1, 0, 0, 0, 0x66, 0xff, 0x45, 0xec, 0x66, 0xc7, 0x45, 0xee, 0x1, 0, 0x8b, 0x45, 0xe8, 0x1, 0xc0, 0xba, 0x4, 0, 0, 0, 0x29, 0xc2, 0x89, 0x55, 0xd0, 0x8b, 0x45, 0xea, 0x66, 0x3b, 0x45, 0xe8, 0x74, 0x8, 0x66, 0xc7, 0x45, 0xe6, 0xff, 0xff, 0xeb, 0x6, 0x66, 0xc7, 0x45, 0xe6, 0x1, 0, 0x66, 0xc7, 0x45, 0xe4, 0, 0, 0x66, 0xc7, 0x45, 0xe0, 0, 0, 0x66, 0xc7, 0x45, 0xe2, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0, 0x66, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x2, 0x66, 0x89, 0x45, 0xda, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0x8b, 0x45, 0xd8, 0x8b, 0x55, 0xf4, 0x66, 0x3b, 0x42, 0x1e, 0x75, 0x10, 0x8b, 0x45, 0xda, 0x8b, 0x55, 0xf4, 0x66, 0x3b, 0x42, 0x20, 0xf, 0x84, 0x53, 0x1, 0, 0, 0x8b, 0x45, 0xd4, 0x66, 0x1, 0x45, 0xe0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xe0, 0x66, 0x3b, 0x45, 0xee, 0x7c, 0xd, 0x8b, 0x45, 0xe4, 0x1, 0x45, 0xcc, 0x8b, 0x45, 0xee, 0x66, 0x29, 0x45, 0xe0, 0x8b, 0x45, 0xd4, 0x66, 0x1, 0x45, 0xe2, 0x8b, 0x45, 0xe2, 0x66, 0x3b, 0x45, 0xec, 0x7c, 0xd, 0x8b, 0x45, 0xe6, 0x1, 0x45, 0xcc, 0x8b, 0x45, 0xec, 0x66, 0x29, 0x45, 0xe2, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xf0, 0xe8, 0x1d, 0xc3, 0xf6, 0xff, 0xf, 0xbf, 0x45, 0xcc, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x67, 0xe9, 0xf6, 0xff, 0x8b, 0x45, 0xf4, 0x31, 0xdb, 0x8a, 0x58, 0x22, 0x8d, 0x55, 0xf0, 0x8d, 0x45, 0xc8, 0xe8, 0x14, 0x96, 0xf5, 0xff, 0x89, 0xc1, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xc4, 0xe8, 0x7, 0x96, 0xf5, 0xff, 0x89, 0xca, 0xe8, 0xac, 0xf6, 0xff, 0xff, 0x89, 0x45, 0xc0, 0xf, 0xbf, 0x45, 0xc0, 0x85, 0xc0, 0xf, 0x84, 0xbc, 0, 0, 0, 0x80, 0x7d, 0xfc, 0, 0x75, 0x2a, 0x8b, 0x45, 0xf4, 0x31, 0xdb, 0x8a, 0x58, 0x22, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xbc, 0xe8, 0xd8, 0x95, 0xf5, 0xff, 0x89, 0xc1, 0x8d, 0x55, 0xf0, 0x8d, 0x45, 0xb8, 0xe8, 0xcb, 0x95, 0xf5, 0xff, 0x89, 0xca, 0xe8, 0x70, 0xf6, 0xff, 0xff, 0x89, 0x45, 0xc0, 0x66, 0xf7, 0x45, 0xcc, 0x1, 0, 0x74, 0x13, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x14, 0x52, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xc0, 0x8d, 0x55, 0xf0, 0x8b, 0x45, 0xf8, 0xe8, 0x7b, 0xc2, 0xf6, 0xff, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf2, 0x66, 0x89, 0x45, 0xda, 0x8b, 0x45, 0xc0, 0x66, 0x1, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf4, 0x8b, 0, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xf2, 0x1, 0xd2, 0x8b, 0, 0x1, 0xc2, 0x8b, 0x45, 0xdc, 0x66, 0x89, 0x2, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0xf, 0xbf, 0x5d, 0xf2, 0x8b, 0x10, 0x1, 0xda, 0x8a, 0x45, 0xcc, 0x88, 0x2, 0x31, 0xdb, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0xe, 0xe8, 0x92, 0x3c, 0, 0, 0xe9, 0x91, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1011c644, 0x5)   pushd(0x5c);                          /* push dword 0x5c */
    II(0x1011c649, 0x5)   calld(sys_check_available_stack_size, 0x49704); /* call 0x10165d52 */
    II(0x1011c64e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011c64f, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011c650, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011c651, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011c652, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011c654, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x1011c65a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1011c65d, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1011c660, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x1011c663, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011c666, 0x5)   calld(my_ctor_0x101b4184, -0xa5b7b);  /* call 0x10076af0 */
    II(0x1011c66b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1011c66e, 0x5)   calld(my_ctor_0x101b4184, -0xa5b83);  /* call 0x10076af0 */
    II(0x1011c673, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1011c676, 0x5)   calld(my_ctor_0x101b4184, -0xa5b8b);  /* call 0x10076af0 */
    II(0x1011c67b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1011c67e, 0x5)   calld(my_ctor_0x101b4184, -0xa5b93);  /* call 0x10076af0 */
    II(0x1011c683, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1011c686, 0x5)   calld(my_ctor_0x101b4184, -0xa5b9b);  /* call 0x10076af0 */
    II(0x1011c68b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1011c68e, 0x5)   calld(0x101204a4, 0x3e11);            /* call 0x101204a4 */
    II(0x1011c693, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011c696, 0x4)   mov(ax, memw_a32(ds, eax + 0x1e));    /* mov ax, [eax+0x1e] */
    II(0x1011c69a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011c69d, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x1011c6a0, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x1011c6a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011c6a7, 0x4)   mov(ax, memw_a32(ds, eax + 0x20));    /* mov ax, [eax+0x20] */
    II(0x1011c6ab, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011c6ae, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x1011c6b2, 0x4)   mov(memw_a32(ss, ebp - 0x12), ax);    /* mov [ebp-0x12], ax */
    II(0x1011c6b6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1011c6ba, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011c6bc, 0x2)   jled(0x1011c6c6, 0x8);                /* jle 0x1011c6c6 */
    II(0x1011c6be, 0x6)   mov(memw_a32(ss, ebp - 0x18), 0x1);   /* mov word [ebp-0x18], 0x1 */
    II(0x1011c6c4, 0x2)   jmpd(0x1011c6d0, 0xa);                /* jmp 0x1011c6d0 */
l_0x1011c6c6:
    II(0x1011c6c6, 0x4)   neg(memw_a32(ss, ebp - 0x14));        /* neg word [ebp-0x14] */
    II(0x1011c6ca, 0x6)   mov(memw_a32(ss, ebp - 0x18), 0xffff); /* mov word [ebp-0x18], 0xffff */
l_0x1011c6d0:
    II(0x1011c6d0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x1011c6d4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011c6d6, 0x2)   jled(0x1011c6e0, 0x8);                /* jle 0x1011c6e0 */
    II(0x1011c6d8, 0x6)   mov(memw_a32(ss, ebp - 0x16), 0x1);   /* mov word [ebp-0x16], 0x1 */
    II(0x1011c6de, 0x2)   jmpd(0x1011c6ea, 0xa);                /* jmp 0x1011c6ea */
l_0x1011c6e0:
    II(0x1011c6e0, 0x4)   neg(memw_a32(ss, ebp - 0x12));        /* neg word [ebp-0x12] */
    II(0x1011c6e4, 0x6)   mov(memw_a32(ss, ebp - 0x16), 0xffff); /* mov word [ebp-0x16], 0xffff */
l_0x1011c6ea:
    II(0x1011c6ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1011c6ed, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x12));    /* cmp ax, [ebp-0x12] */
    II(0x1011c6f1, 0x2)   jged(0x1011c74e, 0x5b);               /* jge 0x1011c74e */
    II(0x1011c6f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1011c6f6, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1011c6f9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1011c6fd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011c6ff, 0x2)   jnzd(0x1011c712, 0x11);               /* jnz 0x1011c712 */
    II(0x1011c701, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0x1);   /* mov dword [ebp-0x2c], 0x1 */
    II(0x1011c708, 0x4)   inc(memw_a32(ss, ebp - 0x12));        /* inc word [ebp-0x12] */
    II(0x1011c70c, 0x6)   mov(memw_a32(ss, ebp - 0x14), 0x1);   /* mov word [ebp-0x14], 0x1 */
l_0x1011c712:
    II(0x1011c712, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x1011c715, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1011c717, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x1011c71c, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1011c71f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1011c722, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x16));    /* cmp ax, [ebp-0x16] */
    II(0x1011c726, 0x2)   jzd(0x1011c730, 0x8);                 /* jz 0x1011c730 */
    II(0x1011c728, 0x6)   mov(memw_a32(ss, ebp - 0x1c), 0x1);   /* mov word [ebp-0x1c], 0x1 */
    II(0x1011c72e, 0x2)   jmpd(0x1011c746, 0x16);               /* jmp 0x1011c746 */
l_0x1011c730:
    II(0x1011c730, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1011c734, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011c736, 0x2)   jnzd(0x1011c740, 0x8);                /* jnz 0x1011c740 */
    II(0x1011c738, 0x6)   mov(memw_a32(ss, ebp - 0x1c), 0x7);   /* mov word [ebp-0x1c], 0x7 */
    II(0x1011c73e, 0x2)   jmpd(0x1011c746, 0x6);                /* jmp 0x1011c746 */
l_0x1011c740:
    II(0x1011c740, 0x6)   mov(memw_a32(ss, ebp - 0x1c), 0xffff); /* mov word [ebp-0x1c], 0xffff */
l_0x1011c746:
    II(0x1011c746, 0x6)   mov(memw_a32(ss, ebp - 0x1a), 0);     /* mov word [ebp-0x1a], 0x0 */
    II(0x1011c74c, 0x2)   jmpd(0x1011c799, 0x4b);               /* jmp 0x1011c799 */
l_0x1011c74e:
    II(0x1011c74e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x1011c751, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1011c754, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1011c758, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011c75a, 0x2)   jnzd(0x1011c76d, 0x11);               /* jnz 0x1011c76d */
    II(0x1011c75c, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0x1);   /* mov dword [ebp-0x2c], 0x1 */
    II(0x1011c763, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
    II(0x1011c767, 0x6)   mov(memw_a32(ss, ebp - 0x12), 0x1);   /* mov word [ebp-0x12], 0x1 */
l_0x1011c76d:
    II(0x1011c76d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1011c770, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1011c772, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x1011c777, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1011c779, 0x3)   mov(memd_a32(ss, ebp - 0x30), edx);   /* mov [ebp-0x30], edx */
    II(0x1011c77c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x1011c77f, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x1011c783, 0x2)   jzd(0x1011c78d, 0x8);                 /* jz 0x1011c78d */
    II(0x1011c785, 0x6)   mov(memw_a32(ss, ebp - 0x1a), 0xffff); /* mov word [ebp-0x1a], 0xffff */
    II(0x1011c78b, 0x2)   jmpd(0x1011c793, 0x6);                /* jmp 0x1011c793 */
l_0x1011c78d:
    II(0x1011c78d, 0x6)   mov(memw_a32(ss, ebp - 0x1a), 0x1);   /* mov word [ebp-0x1a], 0x1 */
l_0x1011c793:
    II(0x1011c793, 0x6)   mov(memw_a32(ss, ebp - 0x1c), 0);     /* mov word [ebp-0x1c], 0x0 */
l_0x1011c799:
    II(0x1011c799, 0x6)   mov(memw_a32(ss, ebp - 0x20), 0);     /* mov word [ebp-0x20], 0x0 */
    II(0x1011c79f, 0x6)   mov(memw_a32(ss, ebp - 0x1e), 0);     /* mov word [ebp-0x1e], 0x0 */
    II(0x1011c7a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011c7a8, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1011c7ab, 0x4)   mov(memw_a32(ss, ebp - 0x28), ax);    /* mov [ebp-0x28], ax */
    II(0x1011c7af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011c7b2, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x1011c7b6, 0x4)   mov(memw_a32(ss, ebp - 0x26), ax);    /* mov [ebp-0x26], ax */
    II(0x1011c7ba, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
l_0x1011c7c0:
    II(0x1011c7c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1011c7c3, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1011c7c6, 0x4)   cmp(ax, memw_a32(ds, edx + 0x1e));    /* cmp ax, [edx+0x1e] */
    II(0x1011c7ca, 0x2)   jnzd(0x1011c7dc, 0x10);               /* jnz 0x1011c7dc */
    II(0x1011c7cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x26));   /* mov eax, [ebp-0x26] */
    II(0x1011c7cf, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1011c7d2, 0x4)   cmp(ax, memw_a32(ds, edx + 0x20));    /* cmp ax, [edx+0x20] */
    II(0x1011c7d6, 0x6)   jzd(0x1011c92f, 0x153);               /* jz dword 0x1011c92f */
l_0x1011c7dc:
    II(0x1011c7dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1011c7df, 0x4)   add(memw_a32(ss, ebp - 0x20), ax);    /* add [ebp-0x20], ax */
    II(0x1011c7e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1011c7e6, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1011c7e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1011c7ec, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x12));    /* cmp ax, [ebp-0x12] */
    II(0x1011c7f0, 0x2)   jld(0x1011c7ff, 0xd);                 /* jl 0x1011c7ff */
    II(0x1011c7f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1011c7f5, 0x3)   add(memd_a32(ss, ebp - 0x34), eax);   /* add [ebp-0x34], eax */
    II(0x1011c7f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x1011c7fb, 0x4)   sub(memw_a32(ss, ebp - 0x20), ax);    /* sub [ebp-0x20], ax */
l_0x1011c7ff:
    II(0x1011c7ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1011c802, 0x4)   add(memw_a32(ss, ebp - 0x1e), ax);    /* add [ebp-0x1e], ax */
    II(0x1011c806, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x1011c809, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x1011c80d, 0x2)   jld(0x1011c81c, 0xd);                 /* jl 0x1011c81c */
    II(0x1011c80f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x1011c812, 0x3)   add(memd_a32(ss, ebp - 0x34), eax);   /* add [ebp-0x34], eax */
    II(0x1011c815, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1011c818, 0x4)   sub(memw_a32(ss, ebp - 0x1e), ax);    /* sub [ebp-0x1e], ax */
l_0x1011c81c:
    II(0x1011c81c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011c81f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011c822, 0x5)   calld(0x10088b44, -0x93ce3);          /* call 0x10088b44 */
    II(0x1011c827, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011c82b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011c82e, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1011c833, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011c835, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011c838, 0x5)   calld(0x1008b1a4, -0x91699);          /* call 0x1008b1a4 */
    II(0x1011c83d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011c840, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011c842, 0x3)   mov(bl, memb_a32(ds, eax + 0x22));    /* mov bl, [eax+0x22] */
    II(0x1011c845, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1011c848, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1011c84b, 0x5)   calld(0x10075e64, -0xa69ec);          /* call 0x10075e64 */
    II(0x1011c850, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1011c852, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011c855, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1011c858, 0x5)   calld(0x10075e64, -0xa69f9);          /* call 0x10075e64 */
    II(0x1011c85d, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1011c85f, 0x5)   calld(0x1011bf10, -0x954);            /* call 0x1011bf10 */
    II(0x1011c864, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1011c867, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x40)); /* movsx eax, word [ebp-0x40] */
    II(0x1011c86b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011c86d, 0x6)   jzd(0x1011c92f, 0xbc);                /* jz dword 0x1011c92f */
    II(0x1011c873, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1011c877, 0x2)   jnzd(0x1011c8a3, 0x2a);               /* jnz 0x1011c8a3 */
    II(0x1011c879, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011c87c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011c87e, 0x3)   mov(bl, memb_a32(ds, eax + 0x22));    /* mov bl, [eax+0x22] */
    II(0x1011c881, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011c884, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011c887, 0x5)   calld(0x10075e64, -0xa6a28);          /* call 0x10075e64 */
    II(0x1011c88c, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1011c88e, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1011c891, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1011c894, 0x5)   calld(0x10075e64, -0xa6a35);          /* call 0x10075e64 */
    II(0x1011c899, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1011c89b, 0x5)   calld(0x1011bf10, -0x990);            /* call 0x1011bf10 */
    II(0x1011c8a0, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x1011c8a3:
    II(0x1011c8a3, 0x6)   test(memw_a32(ss, ebp - 0x34), 0x1);  /* test word [ebp-0x34], 0x1 */
    II(0x1011c8a9, 0x2)   jzd(0x1011c8be, 0x13);                /* jz 0x1011c8be */
    II(0x1011c8ab, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x1011c8af, 0x3)   lea(edx, edx + edx * 0x2);            /* lea edx, [edx+edx*2] */
    II(0x1011c8b2, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1011c8b4, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1011c8b7, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1011c8b9, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1011c8bb, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x1011c8be:
    II(0x1011c8be, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1011c8c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011c8c4, 0x5)   calld(0x10088b44, -0x93d85);          /* call 0x10088b44 */
    II(0x1011c8c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011c8cc, 0x4)   mov(memw_a32(ss, ebp - 0x28), ax);    /* mov [ebp-0x28], ax */
    II(0x1011c8d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x1011c8d3, 0x4)   mov(memw_a32(ss, ebp - 0x26), ax);    /* mov [ebp-0x26], ax */
    II(0x1011c8d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1011c8da, 0x4)   add(memw_a32(ss, ebp - 0x24), ax);    /* add [ebp-0x24], ax */
    II(0x1011c8de, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1011c8e2, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011c8e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011c8e8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011c8ea, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011c8ec, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xe));  /* movsx edx, word [ebp-0xe] */
    II(0x1011c8f0, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1011c8f2, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011c8f4, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011c8f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1011c8f9, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x1011c8fc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1011c900, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011c903, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011c905, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011c908, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x1011c90b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011c90d, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xe));  /* movsx ebx, word [ebp-0xe] */
    II(0x1011c911, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x1011c913, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x1011c915, 0x3)   mov(al, memb_a32(ss, ebp - 0x34));    /* mov al, [ebp-0x34] */
    II(0x1011c918, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x1011c91a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011c91c, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x1011c91f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011c922, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1011c925, 0x5)   calld(0x101205bc, 0x3c92);            /* call 0x101205bc */
    II(0x1011c92a, 0x5)   jmpd(0x1011c7c0, -0x16f);             /* jmp 0x1011c7c0 */
l_0x1011c92f:
    II(0x1011c92f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011c931, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011c932, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011c933, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011c934, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011c935, 0x1)   retd();                               /* ret */
FUNC_END

