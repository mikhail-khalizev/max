FUNC_BEGIN(0x1012eb0d, 0x26861d866bc7f1bd, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x3b, 0x72, 0x3, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x6, 0x78, 0xf4, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x7c, 0x79, 0xf4, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xb2, 0x80, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x21, 0xc2, 0, 0, 0x84, 0xc0, 0xf, 0x84, 0x3a, 0x1, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x40, 0x78, 0xf4, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x17, 0x8d, 0x45, 0xf0, 0xe8, 0x28, 0x78, 0xf4, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x3, 0x45, 0xf8, 0x80, 0x78, 0x40, 0, 0x75, 0x2, 0xeb, 0x23, 0x8d, 0x45, 0xf0, 0xe8, 0xf, 0x78, 0xf4, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x13, 0x8d, 0x45, 0xf0, 0xe8, 0x1, 0x78, 0xf4, 0xff, 0x8b, 0x40, 0x3a, 0xc1, 0xf8, 0x18, 0x83, 0xf8, 0x1e, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2f, 0x80, 0x3d, 0xb2, 0x61, 0x1c, 0x10, 0, 0x74, 0x24, 0x8d, 0x45, 0xf0, 0xe8, 0xe1, 0x77, 0xf4, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x4d, 0x8d, 0x45, 0xf0, 0xe8, 0xd4, 0x77, 0xf4, 0xff, 0xe8, 0x6b, 0x76, 0xf4, 0xff, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0x5, 0xe9, 0xab, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0xe4, 0xc8, 0xf7, 0xff, 0x66, 0x3b, 0x45, 0xf4, 0xf, 0x8e, 0x76, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x27, 0x9a, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x89, 0x77, 0xf4, 0xff, 0x66, 0x8b, 0x52, 0x8, 0x66, 0x3b, 0x50, 0x8, 0x7f, 0x53, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x4, 0x9a, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x66, 0x77, 0xf4, 0xff, 0x66, 0x8b, 0x52, 0x8, 0x66, 0x3b, 0x50, 0x8, 0x75, 0x21, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0xe1, 0x99, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x43, 0x77, 0xf4, 0xff, 0x8a, 0x52, 0x27, 0x3a, 0x50, 0x27, 0x77, 0x2, 0xeb, 0x2, 0xeb, 0xb, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xe9, 0x75, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x5d, 0xf4, 0x8d, 0x45, 0xf0, 0xe8, 0x54, 0x77, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x6f, 0x99, 0xfb, 0xff, 0xe9, 0xac, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xd0, 0x72, 0xf4, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1012eb0d, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1012eb12, 0x5)   calld(sys_check_available_stack_size, 0x3723b); /* call 0x10165d52 */
    II(0x1012eb17, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012eb18, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012eb19, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012eb1a, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012eb1b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012eb1c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012eb1e, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1012eb24, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1012eb27, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1012eb2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012eb2d, 0x5)   calld(0x10076338, -0xb87fa);          /* call 0x10076338 */
    II(0x1012eb32, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012eb34, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012eb37, 0x5)   calld(0x100764b8, -0xb8684);          /* call 0x100764b8 */
    II(0x1012eb3c, 0x2)   jmpd(0x1012eb46, 0x8);                /* jmp 0x1012eb46 */
l_0x1012eb3e:
    II(0x1012eb3e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012eb41, 0x5)   calld(0x10076bf8, -0xb7f4e);          /* call 0x10076bf8 */
l_0x1012eb46:
    II(0x1012eb46, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012eb48, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012eb4b, 0x5)   calld(0x1013ad71, 0xc221);            /* call 0x1013ad71 */
    II(0x1012eb50, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012eb52, 0x6)   jzd(0x1012ec92, 0x13a);               /* jz dword 0x1012ec92 */
    II(0x1012eb58, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012eb5b, 0x5)   calld(0x100763a0, -0xb87c0);          /* call 0x100763a0 */
    II(0x1012eb60, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012eb62, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1012eb65, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012eb67, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1012eb6c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012eb6e, 0x2)   jnzd(0x1012eb87, 0x17);               /* jnz 0x1012eb87 */
    II(0x1012eb70, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012eb73, 0x5)   calld(0x100763a0, -0xb87d8);          /* call 0x100763a0 */
    II(0x1012eb78, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1012eb7b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012eb7e, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1012eb81, 0x4)   cmp(memb_a32(ds, eax + 0x40), 0);     /* cmp byte [eax+0x40], 0x0 */
    II(0x1012eb85, 0x2)   jnzd(0x1012eb89, 0x2);                /* jnz 0x1012eb89 */
l_0x1012eb87:
    II(0x1012eb87, 0x2)   jmpd(0x1012ebac, 0x23);               /* jmp 0x1012ebac */
l_0x1012eb89:
    II(0x1012eb89, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012eb8c, 0x5)   calld(0x100763a0, -0xb87f1);          /* call 0x100763a0 */
    II(0x1012eb91, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x1012eb95, 0x2)   jnzd(0x1012ebaa, 0x13);               /* jnz 0x1012ebaa */
    II(0x1012eb97, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012eb9a, 0x5)   calld(0x100763a0, -0xb87ff);          /* call 0x100763a0 */
    II(0x1012eb9f, 0x3)   mov(eax, memd_a32(ds, eax + 0x3a));   /* mov eax, [eax+0x3a] */
    II(0x1012eba2, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x1012eba5, 0x3)   cmp(eax, 0x1e);                       /* cmp eax, 0x1e */
    II(0x1012eba8, 0x2)   jzd(0x1012ebac, 0x2);                 /* jz 0x1012ebac */
l_0x1012ebaa:
    II(0x1012ebaa, 0x2)   jmpd(0x1012ebae, 0x2);                /* jmp 0x1012ebae */
l_0x1012ebac:
    II(0x1012ebac, 0x2)   jmpd(0x1012ebdd, 0x2f);               /* jmp 0x1012ebdd */
l_0x1012ebae:
    II(0x1012ebae, 0x7)   cmp(memb_a32(ds, 0x101c61b2), 0);     /* cmp byte [0x101c61b2], 0x0 */
    II(0x1012ebb5, 0x2)   jzd(0x1012ebdb, 0x24);                /* jz 0x1012ebdb */
    II(0x1012ebb7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012ebba, 0x5)   calld(0x100763a0, -0xb881f);          /* call 0x100763a0 */
    II(0x1012ebbf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012ebc1, 0x3)   mov(dl, memb_a32(ds, eax + 0x4d));    /* mov dl, [eax+0x4d] */
    II(0x1012ebc4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012ebc7, 0x5)   calld(0x100763a0, -0xb882c);          /* call 0x100763a0 */
    II(0x1012ebcc, 0x5)   calld(0x1007623c, -0xb8995);          /* call 0x1007623c */
    II(0x1012ebd1, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x1012ebd4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012ebd7, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012ebd9, 0x2)   jged(0x1012ebdd, 0x2);                /* jge 0x1012ebdd */
l_0x1012ebdb:
    II(0x1012ebdb, 0x2)   jmpd(0x1012ebe2, 0x5);                /* jmp 0x1012ebe2 */
l_0x1012ebdd:
    II(0x1012ebdd, 0x5)   jmpd(0x1012ec8d, 0xab);               /* jmp 0x1012ec8d */
l_0x1012ebe2:
    II(0x1012ebe2, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
l_0x1012ebe9:
    II(0x1012ebe9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012ebec, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012ebef, 0x5)   calld(my_1_get_count, -0x8371c);      /* call 0x100ab4d8 */
    II(0x1012ebf4, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x1012ebf8, 0x6)   jled(0x1012ec74, 0x76);               /* jle dword 0x1012ec74 */
    II(0x1012ebfe, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1012ec02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012ec05, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012ec08, 0x5)   calld(0x100e8634, -0x465d9);          /* call 0x100e8634 */
    II(0x1012ec0d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012ec0f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012ec12, 0x5)   calld(0x100763a0, -0xb8877);          /* call 0x100763a0 */
    II(0x1012ec17, 0x4)   mov(dx, memw_a32(ds, edx + 0x8));     /* mov dx, [edx+0x8] */
    II(0x1012ec1b, 0x4)   cmp(dx, memw_a32(ds, eax + 0x8));     /* cmp dx, [eax+0x8] */
    II(0x1012ec1f, 0x2)   jgd(0x1012ec74, 0x53);                /* jg 0x1012ec74 */
    II(0x1012ec21, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1012ec25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012ec28, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012ec2b, 0x5)   calld(0x100e8634, -0x465fc);          /* call 0x100e8634 */
    II(0x1012ec30, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012ec32, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012ec35, 0x5)   calld(0x100763a0, -0xb889a);          /* call 0x100763a0 */
    II(0x1012ec3a, 0x4)   mov(dx, memw_a32(ds, edx + 0x8));     /* mov dx, [edx+0x8] */
    II(0x1012ec3e, 0x4)   cmp(dx, memw_a32(ds, eax + 0x8));     /* cmp dx, [eax+0x8] */
    II(0x1012ec42, 0x2)   jnzd(0x1012ec65, 0x21);               /* jnz 0x1012ec65 */
    II(0x1012ec44, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1012ec48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012ec4b, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012ec4e, 0x5)   calld(0x100e8634, -0x4661f);          /* call 0x100e8634 */
    II(0x1012ec53, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012ec55, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012ec58, 0x5)   calld(0x100763a0, -0xb88bd);          /* call 0x100763a0 */
    II(0x1012ec5d, 0x3)   mov(dl, memb_a32(ds, edx + 0x27));    /* mov dl, [edx+0x27] */
    II(0x1012ec60, 0x3)   cmp(dl, memb_a32(ds, eax + 0x27));    /* cmp dl, [eax+0x27] */
    II(0x1012ec63, 0x2)   jad(0x1012ec67, 0x2);                 /* ja 0x1012ec67 */
l_0x1012ec65:
    II(0x1012ec65, 0x2)   jmpd(0x1012ec69, 0x2);                /* jmp 0x1012ec69 */
l_0x1012ec67:
    II(0x1012ec67, 0x2)   jmpd(0x1012ec74, 0xb);                /* jmp 0x1012ec74 */
l_0x1012ec69:
    II(0x1012ec69, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012ec6c, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
    II(0x1012ec6f, 0x5)   jmpd(0x1012ebe9, -0x8b);              /* jmp 0x1012ebe9 */
l_0x1012ec74:
    II(0x1012ec74, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1012ec78, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012ec7b, 0x5)   calld(0x100763d4, -0xb88ac);          /* call 0x100763d4 */
    II(0x1012ec80, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012ec82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012ec85, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012ec88, 0x5)   calld(0x100e85fc, -0x46691);          /* call 0x100e85fc */
l_0x1012ec8d:
    II(0x1012ec8d, 0x5)   jmpd(0x1012eb3e, -0x154);             /* jmp 0x1012eb3e */
l_0x1012ec92:
    II(0x1012ec92, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012ec94, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012ec97, 0x5)   calld(0x10075f6c, -0xb8d30);          /* call 0x10075f6c */
    II(0x1012ec9c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012ec9e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012ec9f, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012eca0, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012eca1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012eca2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012eca3, 0x1)   retd();                               /* ret */
FUNC_END

