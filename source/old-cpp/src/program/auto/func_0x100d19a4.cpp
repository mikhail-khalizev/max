FUNC_BEGIN(0x100d19a4, 0xb88a7568dd17cda4, 0x20, ({0x68, 0x8c, 0, 0, 0, 0xe8, 0xa4, 0x43, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x5c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0xf, 0x84, 0x2b, 0x7, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0xba, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xec, 0xb9, 0x6, 0, 0, 0, 0x8d, 0x7d, 0xd0, 0x8b, 0x75, 0xf8, 0x8d, 0x76, 0x17, 0xf3, 0xa5, 0x66, 0xa5, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0x6b, 0xd0, 0xd, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2d, 0x83, 0xc0, 0xb, 0x1, 0xd0, 0x89, 0x45, 0xe6, 0xe8, 0x2e, 0x39, 0, 0, 0x98, 0x50, 0xe8, 0x4b, 0x39, 0, 0, 0x98, 0x50, 0xe8, 0x68, 0x39, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x25, 0xc1, 0xfb, 0x10, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0xe8, 0x13, 0x72, 0x1, 0, 0x66, 0x85, 0xc0, 0x75, 0x48, 0x6a, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x25, 0xc1, 0xf9, 0x10, 0xbb, 0xf0, 0, 0, 0, 0xba, 0x2c, 0x1, 0, 0, 0x8b, 0x45, 0xe6, 0xe8, 0x18, 0x93, 0x9, 0, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x11, 0, 0, 0, 0x50, 0xb9, 0x10, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x25, 0xc1, 0xfb, 0x10, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0xe8, 0x4d, 0xea, 0x1, 0, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6a, 0xe8, 0xd0, 0x64, 0, 0, 0xb8, 0x71, 0x2, 0, 0, 0x50, 0xb8, 0x70, 0x2, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6a, 0xe8, 0xa5, 0x34, 0, 0, 0x98, 0x50, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xd8, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x53, 0xe2, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x25, 0xc1, 0xfa, 0x10, 0x8b, 0x75, 0xf8, 0x8b, 0x76, 0x25, 0xc1, 0xfe, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6a, 0xe8, 0xb3, 0x33, 0, 0, 0x98, 0xf, 0xaf, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6a, 0xe8, 0xd8, 0x33, 0, 0, 0x98, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2d, 0x3, 0x45, 0xcc, 0x1, 0xf0, 0xe8, 0x63, 0xe6, 0x6, 0, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0x9, 0x80, 0x3d, 0xd0, 0x7e, 0x1b, 0x10, 0, 0x75, 0x2, 0xeb, 0x46, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x4, 0x87, 0x9, 0, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0x68, 0xa2, 0, 0x1, 0, 0xb8, 0xe6, 0, 0, 0, 0x50, 0xb8, 0x22, 0x1, 0, 0, 0x50, 0xb8, 0x11, 0, 0, 0, 0x50, 0xb9, 0x10, 0, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x58, 0x1f, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x25, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2d, 0xe8, 0x61, 0x7f, 0x1, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x8b, 0x58, 0x13, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xc8, 0xff, 0x53, 0x10, 0x89, 0x45, 0xc4, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6e, 0xe8, 0xbe, 0x63, 0, 0, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x72, 0xe8, 0xad, 0x63, 0, 0, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x76, 0xe8, 0x9c, 0x63, 0, 0, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7a, 0xe8, 0x8b, 0x63, 0, 0, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7e, 0xe8, 0x7a, 0x63, 0, 0, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x82, 0, 0, 0, 0xe8, 0x66, 0x63, 0, 0, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x31, 0x8b, 0x5b, 0x50, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xc4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x42, 0x30, 0, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x38, 0x66, 0x3b, 0x45, 0xf0, 0xf, 0x8e, 0x8e, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x62, 0xe8, 0x2b, 0xdf, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x66, 0xe8, 0x1e, 0xdf, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x38, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x38, 0x89, 0x45, 0xc0, 0xeb, 0x38, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x5e, 0xe8, 0xf8, 0xde, 0xff, 0xff, 0xeb, 0x4c, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x62, 0xe8, 0xe6, 0xde, 0xff, 0xff, 0xeb, 0x3a, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x66, 0xe8, 0xd4, 0xde, 0xff, 0xff, 0xeb, 0x28, 0xeb, 0x26, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0x66, 0x83, 0x7d, 0xbc, 0x2, 0x72, 0x10, 0x66, 0x83, 0x7d, 0xbc, 0x2, 0x76, 0xc6, 0x66, 0x83, 0x7d, 0xbc, 0x4, 0x74, 0xd1, 0xeb, 0xe1, 0x66, 0x83, 0x7d, 0xbc, 0x1, 0x74, 0xa4, 0xeb, 0xd8, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x36, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x1, 0x75, 0x6, 0xc6, 0x45, 0xb8, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xb8, 0xa2, 0x31, 0xc0, 0x8a, 0x45, 0xb8, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x25, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6e, 0xe8, 0x5d, 0x32, 0, 0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xc4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6e, 0xe8, 0xe3, 0x31, 0, 0, 0xf, 0xbf, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2d, 0x1, 0xc6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6e, 0xe8, 0x35, 0x32, 0, 0, 0x98, 0x1, 0xc6, 0x89, 0x75, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x70, 0x25, 0xc1, 0xfe, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6e, 0xe8, 0x7f, 0x31, 0, 0, 0x98, 0xf, 0xaf, 0xc6, 0x8b, 0x75, 0xcc, 0x4e, 0x1, 0xf0, 0xe8, 0xc, 0x99, 0x5, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x36, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x1, 0x75, 0x6, 0xc6, 0x45, 0xb4, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xb4, 0xa2, 0x31, 0xc0, 0x8a, 0x45, 0xb4, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x25, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x72, 0xe8, 0xda, 0x31, 0, 0, 0xf, 0xbf, 0xd8, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x69, 0, 0xfa, 0xff, 0xf, 0xaf, 0x45, 0xc4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x72, 0xe8, 0x47, 0x31, 0, 0, 0x98, 0x8b, 0x75, 0xf8, 0x8b, 0x76, 0x2d, 0x1, 0xc6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x72, 0xe8, 0x9b, 0x31, 0, 0, 0x98, 0x1, 0xc6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x72, 0xe8, 0xe5, 0x30, 0, 0, 0x98, 0x8b, 0x7d, 0xcc, 0xf, 0xaf, 0xf8, 0x89, 0x7d, 0xcc, 0x8d, 0x46, 0xff, 0x3, 0x45, 0xcc, 0xe8, 0x6c, 0x98, 0x5, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x66, 0x83, 0x78, 0x8, 0x20, 0x75, 0x31, 0xe8, 0xe6, 0x33, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x62, 0xe8, 0x6d, 0xdc, 0xff, 0xff, 0xe8, 0xd0, 0x33, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x66, 0xe8, 0x57, 0xdc, 0xff, 0xff, 0xe9, 0xc2, 0x2, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x2, 0x7d, 0x1b, 0xe8, 0xac, 0x33, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x62, 0xe8, 0x33, 0xdc, 0xff, 0xff, 0xe9, 0x37, 0x1, 0, 0, 0xe8, 0x91, 0x33, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x62, 0xe8, 0x15, 0xdc, 0xff, 0xff, 0x8d, 0x4d, 0xc4, 0xbb, 0x2, 0, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xe8, 0xa, 0x31, 0x8, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x36, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x2, 0x75, 0x6, 0xc6, 0x45, 0xb0, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xb0, 0xa2, 0x31, 0xc0, 0x8a, 0x45, 0xb0, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x25, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6e, 0xe8, 0xa5, 0x30, 0, 0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xc4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x76, 0xe8, 0x2b, 0x30, 0, 0, 0xf, 0xbf, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2d, 0x1, 0xc6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x76, 0xe8, 0x7d, 0x30, 0, 0, 0x98, 0x1, 0xc6, 0x89, 0x75, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x70, 0x25, 0xc1, 0xfe, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x76, 0xe8, 0xc7, 0x2f, 0, 0, 0x98, 0xf, 0xaf, 0xc6, 0x8b, 0x75, 0xcc, 0x4e, 0x1, 0xf0, 0xe8, 0x54, 0x97, 0x5, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x36, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x2, 0x75, 0x6, 0xc6, 0x45, 0xac, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xac, 0xa2, 0x31, 0xc0, 0x8a, 0x45, 0xac, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x25, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7a, 0xe8, 0x22, 0x30, 0, 0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7a, 0xe8, 0xa8, 0x2f, 0, 0, 0xf, 0xbf, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2d, 0x1, 0xc6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7a, 0xe8, 0xfa, 0x2f, 0, 0, 0x98, 0x1, 0xc6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7a, 0xe8, 0x44, 0x2f, 0, 0, 0x98, 0xf, 0xaf, 0x45, 0xcc, 0x4e, 0x1, 0xf0, 0xe8, 0xd3, 0x96, 0x5, 0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0x7d, 0x1b, 0xe8, 0x51, 0x32, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x66, 0xe8, 0xd8, 0xda, 0xff, 0xff, 0xe9, 0x43, 0x1, 0, 0, 0xe8, 0x36, 0x32, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x66, 0xe8, 0xba, 0xda, 0xff, 0xff, 0x8d, 0x4d, 0xc4, 0xbb, 0x4, 0, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xe8, 0xaf, 0x2f, 0x8, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x36, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x4, 0x75, 0x6, 0xc6, 0x45, 0xa8, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xa8, 0xa2, 0x31, 0xc0, 0x8a, 0x45, 0xa8, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x25, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6e, 0xe8, 0x4a, 0x2f, 0, 0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xc4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7e, 0xe8, 0xd0, 0x2e, 0, 0, 0xf, 0xbf, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2d, 0x1, 0xc6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7e, 0xe8, 0x22, 0x2f, 0, 0, 0x98, 0x1, 0xc6, 0x89, 0x75, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x70, 0x25, 0xc1, 0xfe, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7e, 0xe8, 0x6c, 0x2e, 0, 0, 0x98, 0xf, 0xaf, 0xc6, 0x8b, 0x75, 0xcc, 0x4e, 0x1, 0xf0, 0xe8, 0xf9, 0x95, 0x5, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x36, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x4, 0x75, 0x6, 0xc6, 0x45, 0xa4, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xa4, 0xa2, 0x31, 0xc0, 0x8a, 0x45, 0xa4, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x25, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x82, 0, 0, 0, 0xe8, 0xc4, 0x2e, 0, 0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x82, 0, 0, 0, 0xe8, 0x47, 0x2e, 0, 0, 0xf, 0xbf, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2d, 0x1, 0xc6, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x82, 0, 0, 0, 0xe8, 0x96, 0x2e, 0, 0, 0x98, 0x1, 0xc6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x82, 0, 0, 0, 0xe8, 0xdd, 0x2d, 0, 0, 0x98, 0xf, 0xaf, 0x45, 0xcc, 0x4e, 0x1, 0xf0, 0xe8, 0x6c, 0x95, 0x5, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x29, 0xe8, 0x8d, 0x53, 0x9, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d19a4, 0x5)   pushd(0x8c);                          /* push dword 0x8c */
    II(0x100d19a9, 0x5)   calld(sys_check_available_stack_size, 0x943a4); /* call 0x10165d52 */
    II(0x100d19ae, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d19af, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d19b0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d19b1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d19b2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d19b3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d19b5, 0x6)   sub(esp, 0x5c);                       /* sub esp, 0x5c */
    II(0x100d19bb, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d19be, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100d19c1, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100d19c6, 0x6)   jzd(0x100d20f7, 0x72b);               /* jz dword 0x100d20f7 */
    II(0x100d19cc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100d19d0, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100d19d3, 0x5)   mov(edx, 0x101c81c0);                 /* mov edx, 0x101c81c0 */
    II(0x100d19d8, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d19da, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x100d19dd, 0x5)   mov(ecx, 0x6);                        /* mov ecx, 0x6 */
    II(0x100d19e2, 0x3)   lea(edi, ebp - 0x30);                 /* lea edi, [ebp-0x30] */
    II(0x100d19e5, 0x3)   mov(esi, memd_a32(ss, ebp - 0x8));    /* mov esi, [ebp-0x8] */
    II(0x100d19e8, 0x3)   lea(esi, esi + 0x17);                 /* lea esi, [esi+0x17] */
    II(0x100d19eb, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */
    II(0x100d19ed, 0x2)   movsw_a32();                          /* movsw */
    II(0x100d19ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d19f2, 0x3)   mov(eax, memd_a32(ds, eax + 0x25));   /* mov eax, [eax+0x25] */
    II(0x100d19f5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d19f8, 0x3)   imul(edx, eax, 0xd);                  /* imul edx, eax, 0xd */
    II(0x100d19fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d19fe, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x100d1a01, 0x3)   add(eax, 0xb);                        /* add eax, 0xb */
    II(0x100d1a04, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d1a06, 0x3)   mov(memd_a32(ss, ebp - 0x1a), eax);   /* mov [ebp-0x1a], eax */
    II(0x100d1a09, 0x5)   calld(0x100d533c, 0x392e);            /* call 0x100d533c */
    II(0x100d1a0e, 0x1)   cwde();                               /* cwde */
    II(0x100d1a0f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1a10, 0x5)   calld(0x100d5360, 0x394b);            /* call 0x100d5360 */
    II(0x100d1a15, 0x1)   cwde();                               /* cwde */
    II(0x100d1a16, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1a17, 0x5)   calld(0x100d5384, 0x3968);            /* call 0x100d5384 */
    II(0x100d1a1c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100d1a21, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1a22, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100d1a24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1a27, 0x3)   mov(ebx, memd_a32(ds, eax + 0x25));   /* mov ebx, [eax+0x25] */
    II(0x100d1a2a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100d1a2d, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100d1a30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d1a33, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x100d1a36, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1a39, 0x5)   calld(0x100e8c51, 0x17213);           /* call 0x100e8c51 */
    II(0x100d1a3e, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100d1a41, 0x2)   jnzd(0x100d1a8b, 0x48);               /* jnz 0x100d1a8b */
    II(0x100d1a43, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x100d1a45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1a48, 0x3)   mov(ecx, memd_a32(ds, eax + 0x25));   /* mov ecx, [eax+0x25] */
    II(0x100d1a4b, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100d1a4e, 0x5)   mov(ebx, 0xf0);                       /* mov ebx, 0xf0 */
    II(0x100d1a53, 0x5)   mov(edx, 0x12c);                      /* mov edx, 0x12c */
    II(0x100d1a58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x100d1a5b, 0x5)   calld(/* sys */ 0x1016ad78, 0x99318); /* call 0x1016ad78 */
    II(0x100d1a60, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d1a62, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1a63, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d1a65, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1a66, 0x5)   mov(eax, 0x11);                       /* mov eax, 0x11 */
    II(0x100d1a6b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1a6c, 0x5)   mov(ecx, 0x10);                       /* mov ecx, 0x10 */
    II(0x100d1a71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1a74, 0x3)   mov(ebx, memd_a32(ds, eax + 0x25));   /* mov ebx, [eax+0x25] */
    II(0x100d1a77, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100d1a7a, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100d1a7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d1a80, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100d1a83, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1a86, 0x5)   calld(0x100f04d8, 0x1ea4d);           /* call 0x100f04d8 */
l_0x100d1a8b:
    II(0x100d1a8b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d1a8e, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d1a91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1a94, 0x3)   mov(eax, memd_a32(ds, eax + 0x6a));   /* mov eax, [eax+0x6a] */
    II(0x100d1a97, 0x5)   calld(0x100d7f6c, 0x64d0);            /* call 0x100d7f6c */
    II(0x100d1a9c, 0x5)   mov(eax, 0x271);                      /* mov eax, 0x271 */
    II(0x100d1aa1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1aa2, 0x5)   mov(eax, 0x270);                      /* mov eax, 0x270 */
    II(0x100d1aa7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1aa8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1aab, 0x3)   mov(eax, memd_a32(ds, eax + 0x6a));   /* mov eax, [eax+0x6a] */
    II(0x100d1aae, 0x5)   calld(0x100d4f58, 0x34a5);            /* call 0x100d4f58 */
    II(0x100d1ab3, 0x1)   cwde();                               /* cwde */
    II(0x100d1ab4, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1ab5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100d1ab9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1abc, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d1abf, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100d1ac2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100d1ac7, 0x6)   imul(ebx, eax, 0x247);                /* imul ebx, eax, 0x247 */
    II(0x100d1acd, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x100d1ad2, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100d1ad4, 0x5)   calld(0x100dfd2c, 0xe253);            /* call 0x100dfd2c */
    II(0x100d1ad9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1ada, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1add, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d1ae0, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100d1ae3, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100d1ae5, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100d1ae8, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100d1aec, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d1aef, 0x3)   mov(edx, memd_a32(ds, edx + 0x25));   /* mov edx, [edx+0x25] */
    II(0x100d1af2, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d1af5, 0x3)   mov(esi, memd_a32(ss, ebp - 0x8));    /* mov esi, [ebp-0x8] */
    II(0x100d1af8, 0x3)   mov(esi, memd_a32(ds, esi + 0x25));   /* mov esi, [esi+0x25] */
    II(0x100d1afb, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x100d1afe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1b01, 0x3)   mov(eax, memd_a32(ds, eax + 0x6a));   /* mov eax, [eax+0x6a] */
    II(0x100d1b04, 0x5)   calld(0x100d4ebc, 0x33b3);            /* call 0x100d4ebc */
    II(0x100d1b09, 0x1)   cwde();                               /* cwde */
    II(0x100d1b0a, 0x3)   imul(esi, eax);                       /* imul esi, eax */
    II(0x100d1b0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1b10, 0x3)   mov(eax, memd_a32(ds, eax + 0x6a));   /* mov eax, [eax+0x6a] */
    II(0x100d1b13, 0x5)   calld(0x100d4ef0, 0x33d8);            /* call 0x100d4ef0 */
    II(0x100d1b18, 0x1)   cwde();                               /* cwde */
    II(0x100d1b19, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100d1b1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1b1f, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x100d1b22, 0x3)   add(eax, memd_a32(ss, ebp - 0x34));   /* add eax, [ebp-0x34] */
    II(0x100d1b25, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100d1b27, 0x5)   calld(0x1014018f, 0x6e663);           /* call 0x1014018f */
    II(0x100d1b2c, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100d1b31, 0x2)   jzd(0x100d1b3c, 0x9);                 /* jz 0x100d1b3c */
    II(0x100d1b33, 0x7)   cmp(memb_a32(ds, 0x101b7ed0), 0);     /* cmp byte [0x101b7ed0], 0x0 */
    II(0x100d1b3a, 0x2)   jnzd(0x100d1b3e, 0x2);                /* jnz 0x100d1b3e */
l_0x100d1b3c:
    II(0x100d1b3c, 0x2)   jmpd(0x100d1b84, 0x46);               /* jmp 0x100d1b84 */
l_0x100d1b3e:
    II(0x100d1b3e, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100d1b43, 0x5)   calld(/* sys */ 0x1016a24c, 0x98704); /* call 0x1016a24c */
    II(0x100d1b48, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d1b4a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1b4b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d1b4d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1b4e, 0x5)   pushd(0x100a2);                       /* push dword 0x100a2 */
    II(0x100d1b53, 0x5)   mov(eax, 0xe6);                       /* mov eax, 0xe6 */
    II(0x100d1b58, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1b59, 0x5)   mov(eax, 0x122);                      /* mov eax, 0x122 */
    II(0x100d1b5e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1b5f, 0x5)   mov(eax, 0x11);                       /* mov eax, 0x11 */
    II(0x100d1b64, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1b65, 0x5)   mov(ecx, 0x10);                       /* mov ecx, 0x10 */
    II(0x100d1b6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d1b6d, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1f));   /* mov ebx, [eax+0x1f] */
    II(0x100d1b70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1b73, 0x3)   mov(edx, memd_a32(ds, eax + 0x25));   /* mov edx, [eax+0x25] */
    II(0x100d1b76, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d1b79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1b7c, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x100d1b7f, 0x5)   calld(0x100e9ae5, 0x17f61);           /* call 0x100e9ae5 */
l_0x100d1b84:
    II(0x100d1b84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1b87, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100d1b8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100d1b8d, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
    II(0x100d1b90, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100d1b94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100d1b97, 0x3)   calld_abs(memd_a32(ds, ebx + 0x10));  /* call dword near [ebx+0x10] */
    II(0x100d1b9a, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100d1b9d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d1ba0, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d1ba3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1ba6, 0x3)   mov(eax, memd_a32(ds, eax + 0x6e));   /* mov eax, [eax+0x6e] */
    II(0x100d1ba9, 0x5)   calld(0x100d7f6c, 0x63be);            /* call 0x100d7f6c */
    II(0x100d1bae, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d1bb1, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d1bb4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1bb7, 0x3)   mov(eax, memd_a32(ds, eax + 0x72));   /* mov eax, [eax+0x72] */
    II(0x100d1bba, 0x5)   calld(0x100d7f6c, 0x63ad);            /* call 0x100d7f6c */
    II(0x100d1bbf, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d1bc2, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d1bc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1bc8, 0x3)   mov(eax, memd_a32(ds, eax + 0x76));   /* mov eax, [eax+0x76] */
    II(0x100d1bcb, 0x5)   calld(0x100d7f6c, 0x639c);            /* call 0x100d7f6c */
    II(0x100d1bd0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d1bd3, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d1bd6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1bd9, 0x3)   mov(eax, memd_a32(ds, eax + 0x7a));   /* mov eax, [eax+0x7a] */
    II(0x100d1bdc, 0x5)   calld(0x100d7f6c, 0x638b);            /* call 0x100d7f6c */
    II(0x100d1be1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d1be4, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d1be7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1bea, 0x3)   mov(eax, memd_a32(ds, eax + 0x7e));   /* mov eax, [eax+0x7e] */
    II(0x100d1bed, 0x5)   calld(0x100d7f6c, 0x637a);            /* call 0x100d7f6c */
    II(0x100d1bf2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d1bf5, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d1bf8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1bfb, 0x6)   mov(eax, memd_a32(ds, eax + 0x82));   /* mov eax, [eax+0x82] */
    II(0x100d1c01, 0x5)   calld(0x100d7f6c, 0x6366);            /* call 0x100d7f6c */
    II(0x100d1c06, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100d1c09, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x31));   /* mov ebx, [ebx+0x31] */
    II(0x100d1c0c, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x50));   /* mov ebx, [ebx+0x50] */
    II(0x100d1c0f, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100d1c12, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100d1c16, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1c19, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d1c1c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d1c1f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1c22, 0x5)   calld(0x100d4c69, 0x3042);            /* call 0x100d4c69 */
    II(0x100d1c27, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d1c2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1c2d, 0x4)   mov(ax, memw_a32(ds, eax + 0x38));    /* mov ax, [eax+0x38] */
    II(0x100d1c31, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100d1c35, 0x6)   jled(0x100d1cc9, 0x8e);               /* jle dword 0x100d1cc9 */
    II(0x100d1c3b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d1c3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1c40, 0x3)   mov(eax, memd_a32(ds, eax + 0x62));   /* mov eax, [eax+0x62] */
    II(0x100d1c43, 0x5)   calld(0x100cfb73, -0x20d5);           /* call 0x100cfb73 */
    II(0x100d1c48, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d1c4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1c4d, 0x3)   mov(eax, memd_a32(ds, eax + 0x66));   /* mov eax, [eax+0x66] */
    II(0x100d1c50, 0x5)   calld(0x100cfb73, -0x20e2);           /* call 0x100cfb73 */
    II(0x100d1c55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d1c58, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d1c5b, 0x4)   mov(memw_a32(ds, edx + 0x38), ax);    /* mov [edx+0x38], ax */
    II(0x100d1c5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1c62, 0x4)   mov(ax, memw_a32(ds, eax + 0x38));    /* mov ax, [eax+0x38] */
    II(0x100d1c66, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100d1c69, 0x2)   jmpd(0x100d1ca3, 0x38);               /* jmp 0x100d1ca3 */
l_0x100d1c6b:
    II(0x100d1c6b, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d1c70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1c73, 0x3)   mov(eax, memd_a32(ds, eax + 0x5e));   /* mov eax, [eax+0x5e] */
    II(0x100d1c76, 0x5)   calld(0x100cfb73, -0x2108);           /* call 0x100cfb73 */
    II(0x100d1c7b, 0x2)   jmpd(0x100d1cc9, 0x4c);               /* jmp 0x100d1cc9 */
l_0x100d1c7d:
    II(0x100d1c7d, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d1c82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1c85, 0x3)   mov(eax, memd_a32(ds, eax + 0x62));   /* mov eax, [eax+0x62] */
    II(0x100d1c88, 0x5)   calld(0x100cfb73, -0x211a);           /* call 0x100cfb73 */
    II(0x100d1c8d, 0x2)   jmpd(0x100d1cc9, 0x3a);               /* jmp 0x100d1cc9 */
l_0x100d1c8f:
    II(0x100d1c8f, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d1c94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1c97, 0x3)   mov(eax, memd_a32(ds, eax + 0x66));   /* mov eax, [eax+0x66] */
    II(0x100d1c9a, 0x5)   calld(0x100cfb73, -0x212c);           /* call 0x100cfb73 */
    II(0x100d1c9f, 0x2)   jmpd(0x100d1cc9, 0x28);               /* jmp 0x100d1cc9 */
l_0x100d1ca1:
    II(0x100d1ca1, 0x2)   jmpd(0x100d1cc9, 0x26);               /* jmp 0x100d1cc9 */
l_0x100d1ca3:
    II(0x100d1ca3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100d1ca6, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100d1ca9, 0x5)   cmp(memw_a32(ss, ebp - 0x44), 0x2);   /* cmp word [ebp-0x44], 0x2 */
    II(0x100d1cae, 0x2)   jbd(0x100d1cc0, 0x10);                /* jb 0x100d1cc0 */
    II(0x100d1cb0, 0x5)   cmp(memw_a32(ss, ebp - 0x44), 0x2);   /* cmp word [ebp-0x44], 0x2 */
    II(0x100d1cb5, 0x2)   jbed(0x100d1c7d, -0x3a);              /* jbe 0x100d1c7d */
    II(0x100d1cb7, 0x5)   cmp(memw_a32(ss, ebp - 0x44), 0x4);   /* cmp word [ebp-0x44], 0x4 */
    II(0x100d1cbc, 0x2)   jzd(0x100d1c8f, -0x2f);               /* jz 0x100d1c8f */
    II(0x100d1cbe, 0x2)   jmpd(0x100d1ca1, -0x1f);              /* jmp 0x100d1ca1 */
l_0x100d1cc0:
    II(0x100d1cc0, 0x5)   cmp(memw_a32(ss, ebp - 0x44), 0x1);   /* cmp word [ebp-0x44], 0x1 */
    II(0x100d1cc5, 0x2)   jzd(0x100d1c6b, -0x5c);               /* jz 0x100d1c6b */
    II(0x100d1cc7, 0x2)   jmpd(0x100d1ca1, -0x28);              /* jmp 0x100d1ca1 */
l_0x100d1cc9:
    II(0x100d1cc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1ccc, 0x3)   mov(eax, memd_a32(ds, eax + 0x36));   /* mov eax, [eax+0x36] */
    II(0x100d1ccf, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1cd2, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100d1cd5, 0x2)   jnzd(0x100d1cdd, 0x6);                /* jnz 0x100d1cdd */
    II(0x100d1cd7, 0x4)   mov(memb_a32(ss, ebp - 0x48), 0x2);   /* mov byte [ebp-0x48], 0x2 */
    II(0x100d1cdb, 0x2)   jmpd(0x100d1ce1, 0x4);                /* jmp 0x100d1ce1 */
l_0x100d1cdd:
    II(0x100d1cdd, 0x4)   mov(memb_a32(ss, ebp - 0x48), 0xa2);  /* mov byte [ebp-0x48], 0xa2 */
l_0x100d1ce1:
    II(0x100d1ce1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d1ce3, 0x3)   mov(al, memb_a32(ss, ebp - 0x48));    /* mov al, [ebp-0x48] */
    II(0x100d1ce6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1ce7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1cea, 0x3)   mov(ecx, memd_a32(ds, eax + 0x25));   /* mov ecx, [eax+0x25] */
    II(0x100d1ced, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100d1cf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1cf3, 0x3)   mov(eax, memd_a32(ds, eax + 0x6e));   /* mov eax, [eax+0x6e] */
    II(0x100d1cf6, 0x5)   calld(0x100d4f58, 0x325d);            /* call 0x100d4f58 */
    II(0x100d1cfb, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100d1cfe, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100d1d02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1d05, 0x3)   mov(eax, memd_a32(ds, eax + 0x6e));   /* mov eax, [eax+0x6e] */
    II(0x100d1d08, 0x5)   calld(0x100d4ef0, 0x31e3);            /* call 0x100d4ef0 */
    II(0x100d1d0d, 0x3)   movsx(esi, ax);                       /* movsx esi, ax */
    II(0x100d1d10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1d13, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x100d1d16, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d1d18, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1d1b, 0x3)   mov(eax, memd_a32(ds, eax + 0x6e));   /* mov eax, [eax+0x6e] */
    II(0x100d1d1e, 0x5)   calld(0x100d4f58, 0x3235);            /* call 0x100d4f58 */
    II(0x100d1d23, 0x1)   cwde();                               /* cwde */
    II(0x100d1d24, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d1d26, 0x3)   mov(memd_a32(ss, ebp - 0x34), esi);   /* mov [ebp-0x34], esi */
    II(0x100d1d29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1d2c, 0x3)   mov(esi, memd_a32(ds, eax + 0x25));   /* mov esi, [eax+0x25] */
    II(0x100d1d2f, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x100d1d32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1d35, 0x3)   mov(eax, memd_a32(ds, eax + 0x6e));   /* mov eax, [eax+0x6e] */
    II(0x100d1d38, 0x5)   calld(0x100d4ebc, 0x317f);            /* call 0x100d4ebc */
    II(0x100d1d3d, 0x1)   cwde();                               /* cwde */
    II(0x100d1d3e, 0x3)   imul(eax, esi);                       /* imul eax, esi */
    II(0x100d1d41, 0x3)   mov(esi, memd_a32(ss, ebp - 0x34));   /* mov esi, [ebp-0x34] */
    II(0x100d1d44, 0x1)   dec(esi);                             /* dec esi */
    II(0x100d1d45, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100d1d47, 0x5)   calld(0x1012b658, 0x5990c);           /* call 0x1012b658 */
    II(0x100d1d4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1d4f, 0x3)   mov(eax, memd_a32(ds, eax + 0x36));   /* mov eax, [eax+0x36] */
    II(0x100d1d52, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1d55, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100d1d58, 0x2)   jnzd(0x100d1d60, 0x6);                /* jnz 0x100d1d60 */
    II(0x100d1d5a, 0x4)   mov(memb_a32(ss, ebp - 0x4c), 0x2);   /* mov byte [ebp-0x4c], 0x2 */
    II(0x100d1d5e, 0x2)   jmpd(0x100d1d64, 0x4);                /* jmp 0x100d1d64 */
l_0x100d1d60:
    II(0x100d1d60, 0x4)   mov(memb_a32(ss, ebp - 0x4c), 0xa2);  /* mov byte [ebp-0x4c], 0xa2 */
l_0x100d1d64:
    II(0x100d1d64, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d1d66, 0x3)   mov(al, memb_a32(ss, ebp - 0x4c));    /* mov al, [ebp-0x4c] */
    II(0x100d1d69, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1d6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1d6d, 0x3)   mov(ecx, memd_a32(ds, eax + 0x25));   /* mov ecx, [eax+0x25] */
    II(0x100d1d70, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100d1d73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1d76, 0x3)   mov(eax, memd_a32(ds, eax + 0x72));   /* mov eax, [eax+0x72] */
    II(0x100d1d79, 0x5)   calld(0x100d4f58, 0x31da);            /* call 0x100d4f58 */
    II(0x100d1d7e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100d1d81, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d1d86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1d89, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d1d8c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d1d8f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1d92, 0x5)   calld(0x10071e00, -0x5ff97);          /* call 0x10071e00 */
    II(0x100d1d97, 0x4)   imul(eax, memd_a32(ss, ebp - 0x3c));  /* imul eax, [ebp-0x3c] */
    II(0x100d1d9b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100d1d9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1da1, 0x3)   mov(eax, memd_a32(ds, eax + 0x72));   /* mov eax, [eax+0x72] */
    II(0x100d1da4, 0x5)   calld(0x100d4ef0, 0x3147);            /* call 0x100d4ef0 */
    II(0x100d1da9, 0x1)   cwde();                               /* cwde */
    II(0x100d1daa, 0x3)   mov(esi, memd_a32(ss, ebp - 0x8));    /* mov esi, [ebp-0x8] */
    II(0x100d1dad, 0x3)   mov(esi, memd_a32(ds, esi + 0x2d));   /* mov esi, [esi+0x2d] */
    II(0x100d1db0, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d1db2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1db5, 0x3)   mov(eax, memd_a32(ds, eax + 0x72));   /* mov eax, [eax+0x72] */
    II(0x100d1db8, 0x5)   calld(0x100d4f58, 0x319b);            /* call 0x100d4f58 */
    II(0x100d1dbd, 0x1)   cwde();                               /* cwde */
    II(0x100d1dbe, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d1dc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1dc3, 0x3)   mov(eax, memd_a32(ds, eax + 0x25));   /* mov eax, [eax+0x25] */
    II(0x100d1dc6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1dc9, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100d1dcc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1dcf, 0x3)   mov(eax, memd_a32(ds, eax + 0x72));   /* mov eax, [eax+0x72] */
    II(0x100d1dd2, 0x5)   calld(0x100d4ebc, 0x30e5);            /* call 0x100d4ebc */
    II(0x100d1dd7, 0x1)   cwde();                               /* cwde */
    II(0x100d1dd8, 0x3)   mov(edi, memd_a32(ss, ebp - 0x34));   /* mov edi, [ebp-0x34] */
    II(0x100d1ddb, 0x3)   imul(edi, eax);                       /* imul edi, eax */
    II(0x100d1dde, 0x3)   mov(memd_a32(ss, ebp - 0x34), edi);   /* mov [ebp-0x34], edi */
    II(0x100d1de1, 0x3)   lea(eax, esi - 0x1);                  /* lea eax, [esi-0x1] */
    II(0x100d1de4, 0x3)   add(eax, memd_a32(ss, ebp - 0x34));   /* add eax, [ebp-0x34] */
    II(0x100d1de7, 0x5)   calld(0x1012b658, 0x5986c);           /* call 0x1012b658 */
    II(0x100d1dec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1def, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d1df2, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x20);   /* cmp word [eax+0x8], 0x20 */
    II(0x100d1df7, 0x2)   jnzd(0x100d1e2a, 0x31);               /* jnz 0x100d1e2a */
    II(0x100d1df9, 0x5)   calld(0x100d51e4, 0x33e6);            /* call 0x100d51e4 */
    II(0x100d1dfe, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100d1e00, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100d1e02, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d1e04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1e07, 0x3)   mov(eax, memd_a32(ds, eax + 0x62));   /* mov eax, [eax+0x62] */
    II(0x100d1e0a, 0x5)   calld(0x100cfa7c, -0x2393);           /* call 0x100cfa7c */
    II(0x100d1e0f, 0x5)   calld(0x100d51e4, 0x33d0);            /* call 0x100d51e4 */
    II(0x100d1e14, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100d1e16, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100d1e18, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d1e1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1e1d, 0x3)   mov(eax, memd_a32(ds, eax + 0x66));   /* mov eax, [eax+0x66] */
    II(0x100d1e20, 0x5)   calld(0x100cfa7c, -0x23a9);           /* call 0x100cfa7c */
    II(0x100d1e25, 0x5)   jmpd(0x100d20ec, 0x2c2);              /* jmp 0x100d20ec */
l_0x100d1e2a:
    II(0x100d1e2a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100d1e2e, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100d1e31, 0x2)   jged(0x100d1e4e, 0x1b);               /* jge 0x100d1e4e */
    II(0x100d1e33, 0x5)   calld(0x100d51e4, 0x33ac);            /* call 0x100d51e4 */
    II(0x100d1e38, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100d1e3a, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100d1e3c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d1e3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1e41, 0x3)   mov(eax, memd_a32(ds, eax + 0x62));   /* mov eax, [eax+0x62] */
    II(0x100d1e44, 0x5)   calld(0x100cfa7c, -0x23cd);           /* call 0x100cfa7c */
    II(0x100d1e49, 0x5)   jmpd(0x100d1f85, 0x137);              /* jmp 0x100d1f85 */
l_0x100d1e4e:
    II(0x100d1e4e, 0x5)   calld(0x100d51e4, 0x3391);            /* call 0x100d51e4 */
    II(0x100d1e53, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100d1e55, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100d1e57, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d1e5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1e5f, 0x3)   mov(eax, memd_a32(ds, eax + 0x62));   /* mov eax, [eax+0x62] */
    II(0x100d1e62, 0x5)   calld(0x100cfa7c, -0x23eb);           /* call 0x100cfa7c */
    II(0x100d1e67, 0x3)   lea(ecx, ebp - 0x3c);                 /* lea ecx, [ebp-0x3c] */
    II(0x100d1e6a, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100d1e6f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100d1e73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1e76, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d1e79, 0x5)   calld(0x10154f88, 0x8310a);           /* call 0x10154f88 */
    II(0x100d1e7e, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d1e81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1e84, 0x3)   mov(eax, memd_a32(ds, eax + 0x36));   /* mov eax, [eax+0x36] */
    II(0x100d1e87, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1e8a, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100d1e8d, 0x2)   jnzd(0x100d1e95, 0x6);                /* jnz 0x100d1e95 */
    II(0x100d1e8f, 0x4)   mov(memb_a32(ss, ebp - 0x50), 0x2);   /* mov byte [ebp-0x50], 0x2 */
    II(0x100d1e93, 0x2)   jmpd(0x100d1e99, 0x4);                /* jmp 0x100d1e99 */
l_0x100d1e95:
    II(0x100d1e95, 0x4)   mov(memb_a32(ss, ebp - 0x50), 0xa2);  /* mov byte [ebp-0x50], 0xa2 */
l_0x100d1e99:
    II(0x100d1e99, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d1e9b, 0x3)   mov(al, memb_a32(ss, ebp - 0x50));    /* mov al, [ebp-0x50] */
    II(0x100d1e9e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1e9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1ea2, 0x3)   mov(ecx, memd_a32(ds, eax + 0x25));   /* mov ecx, [eax+0x25] */
    II(0x100d1ea5, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100d1ea8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1eab, 0x3)   mov(eax, memd_a32(ds, eax + 0x6e));   /* mov eax, [eax+0x6e] */
    II(0x100d1eae, 0x5)   calld(0x100d4f58, 0x30a5);            /* call 0x100d4f58 */
    II(0x100d1eb3, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100d1eb6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100d1eba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1ebd, 0x3)   mov(eax, memd_a32(ds, eax + 0x76));   /* mov eax, [eax+0x76] */
    II(0x100d1ec0, 0x5)   calld(0x100d4ef0, 0x302b);            /* call 0x100d4ef0 */
    II(0x100d1ec5, 0x3)   movsx(esi, ax);                       /* movsx esi, ax */
    II(0x100d1ec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1ecb, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x100d1ece, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d1ed0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1ed3, 0x3)   mov(eax, memd_a32(ds, eax + 0x76));   /* mov eax, [eax+0x76] */
    II(0x100d1ed6, 0x5)   calld(0x100d4f58, 0x307d);            /* call 0x100d4f58 */
    II(0x100d1edb, 0x1)   cwde();                               /* cwde */
    II(0x100d1edc, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d1ede, 0x3)   mov(memd_a32(ss, ebp - 0x34), esi);   /* mov [ebp-0x34], esi */
    II(0x100d1ee1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1ee4, 0x3)   mov(esi, memd_a32(ds, eax + 0x25));   /* mov esi, [eax+0x25] */
    II(0x100d1ee7, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x100d1eea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1eed, 0x3)   mov(eax, memd_a32(ds, eax + 0x76));   /* mov eax, [eax+0x76] */
    II(0x100d1ef0, 0x5)   calld(0x100d4ebc, 0x2fc7);            /* call 0x100d4ebc */
    II(0x100d1ef5, 0x1)   cwde();                               /* cwde */
    II(0x100d1ef6, 0x3)   imul(eax, esi);                       /* imul eax, esi */
    II(0x100d1ef9, 0x3)   mov(esi, memd_a32(ss, ebp - 0x34));   /* mov esi, [ebp-0x34] */
    II(0x100d1efc, 0x1)   dec(esi);                             /* dec esi */
    II(0x100d1efd, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100d1eff, 0x5)   calld(0x1012b658, 0x59754);           /* call 0x1012b658 */
    II(0x100d1f04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1f07, 0x3)   mov(eax, memd_a32(ds, eax + 0x36));   /* mov eax, [eax+0x36] */
    II(0x100d1f0a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1f0d, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100d1f10, 0x2)   jnzd(0x100d1f18, 0x6);                /* jnz 0x100d1f18 */
    II(0x100d1f12, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0x2);   /* mov byte [ebp-0x54], 0x2 */
    II(0x100d1f16, 0x2)   jmpd(0x100d1f1c, 0x4);                /* jmp 0x100d1f1c */
l_0x100d1f18:
    II(0x100d1f18, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0xa2);  /* mov byte [ebp-0x54], 0xa2 */
l_0x100d1f1c:
    II(0x100d1f1c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d1f1e, 0x3)   mov(al, memb_a32(ss, ebp - 0x54));    /* mov al, [ebp-0x54] */
    II(0x100d1f21, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1f22, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1f25, 0x3)   mov(ecx, memd_a32(ds, eax + 0x25));   /* mov ecx, [eax+0x25] */
    II(0x100d1f28, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100d1f2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1f2e, 0x3)   mov(eax, memd_a32(ds, eax + 0x7a));   /* mov eax, [eax+0x7a] */
    II(0x100d1f31, 0x5)   calld(0x100d4f58, 0x3022);            /* call 0x100d4f58 */
    II(0x100d1f36, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100d1f39, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100d1f3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1f40, 0x3)   mov(eax, memd_a32(ds, eax + 0x7a));   /* mov eax, [eax+0x7a] */
    II(0x100d1f43, 0x5)   calld(0x100d4ef0, 0x2fa8);            /* call 0x100d4ef0 */
    II(0x100d1f48, 0x3)   movsx(esi, ax);                       /* movsx esi, ax */
    II(0x100d1f4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1f4e, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x100d1f51, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d1f53, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1f56, 0x3)   mov(eax, memd_a32(ds, eax + 0x7a));   /* mov eax, [eax+0x7a] */
    II(0x100d1f59, 0x5)   calld(0x100d4f58, 0x2ffa);            /* call 0x100d4f58 */
    II(0x100d1f5e, 0x1)   cwde();                               /* cwde */
    II(0x100d1f5f, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d1f61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1f64, 0x3)   mov(eax, memd_a32(ds, eax + 0x25));   /* mov eax, [eax+0x25] */
    II(0x100d1f67, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1f6a, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100d1f6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1f70, 0x3)   mov(eax, memd_a32(ds, eax + 0x7a));   /* mov eax, [eax+0x7a] */
    II(0x100d1f73, 0x5)   calld(0x100d4ebc, 0x2f44);            /* call 0x100d4ebc */
    II(0x100d1f78, 0x1)   cwde();                               /* cwde */
    II(0x100d1f79, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34));  /* imul eax, [ebp-0x34] */
    II(0x100d1f7d, 0x1)   dec(esi);                             /* dec esi */
    II(0x100d1f7e, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100d1f80, 0x5)   calld(0x1012b658, 0x596d3);           /* call 0x1012b658 */
l_0x100d1f85:
    II(0x100d1f85, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100d1f89, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100d1f8c, 0x2)   jged(0x100d1fa9, 0x1b);               /* jge 0x100d1fa9 */
    II(0x100d1f8e, 0x5)   calld(0x100d51e4, 0x3251);            /* call 0x100d51e4 */
    II(0x100d1f93, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100d1f95, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100d1f97, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d1f99, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1f9c, 0x3)   mov(eax, memd_a32(ds, eax + 0x66));   /* mov eax, [eax+0x66] */
    II(0x100d1f9f, 0x5)   calld(0x100cfa7c, -0x2528);           /* call 0x100cfa7c */
    II(0x100d1fa4, 0x5)   jmpd(0x100d20ec, 0x143);              /* jmp 0x100d20ec */
l_0x100d1fa9:
    II(0x100d1fa9, 0x5)   calld(0x100d51e4, 0x3236);            /* call 0x100d51e4 */
    II(0x100d1fae, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100d1fb0, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100d1fb2, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d1fb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1fba, 0x3)   mov(eax, memd_a32(ds, eax + 0x66));   /* mov eax, [eax+0x66] */
    II(0x100d1fbd, 0x5)   calld(0x100cfa7c, -0x2546);           /* call 0x100cfa7c */
    II(0x100d1fc2, 0x3)   lea(ecx, ebp - 0x3c);                 /* lea ecx, [ebp-0x3c] */
    II(0x100d1fc5, 0x5)   mov(ebx, 0x4);                        /* mov ebx, 0x4 */
    II(0x100d1fca, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100d1fce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1fd1, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d1fd4, 0x5)   calld(0x10154f88, 0x82faf);           /* call 0x10154f88 */
    II(0x100d1fd9, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d1fdc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1fdf, 0x3)   mov(eax, memd_a32(ds, eax + 0x36));   /* mov eax, [eax+0x36] */
    II(0x100d1fe2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1fe5, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100d1fe8, 0x2)   jnzd(0x100d1ff0, 0x6);                /* jnz 0x100d1ff0 */
    II(0x100d1fea, 0x4)   mov(memb_a32(ss, ebp - 0x58), 0x2);   /* mov byte [ebp-0x58], 0x2 */
    II(0x100d1fee, 0x2)   jmpd(0x100d1ff4, 0x4);                /* jmp 0x100d1ff4 */
l_0x100d1ff0:
    II(0x100d1ff0, 0x4)   mov(memb_a32(ss, ebp - 0x58), 0xa2);  /* mov byte [ebp-0x58], 0xa2 */
l_0x100d1ff4:
    II(0x100d1ff4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d1ff6, 0x3)   mov(al, memb_a32(ss, ebp - 0x58));    /* mov al, [ebp-0x58] */
    II(0x100d1ff9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d1ffa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d1ffd, 0x3)   mov(ecx, memd_a32(ds, eax + 0x25));   /* mov ecx, [eax+0x25] */
    II(0x100d2000, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100d2003, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d2006, 0x3)   mov(eax, memd_a32(ds, eax + 0x6e));   /* mov eax, [eax+0x6e] */
    II(0x100d2009, 0x5)   calld(0x100d4f58, 0x2f4a);            /* call 0x100d4f58 */
    II(0x100d200e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100d2011, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100d2015, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d2018, 0x3)   mov(eax, memd_a32(ds, eax + 0x7e));   /* mov eax, [eax+0x7e] */
    II(0x100d201b, 0x5)   calld(0x100d4ef0, 0x2ed0);            /* call 0x100d4ef0 */
    II(0x100d2020, 0x3)   movsx(esi, ax);                       /* movsx esi, ax */
    II(0x100d2023, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d2026, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x100d2029, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d202b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d202e, 0x3)   mov(eax, memd_a32(ds, eax + 0x7e));   /* mov eax, [eax+0x7e] */
    II(0x100d2031, 0x5)   calld(0x100d4f58, 0x2f22);            /* call 0x100d4f58 */
    II(0x100d2036, 0x1)   cwde();                               /* cwde */
    II(0x100d2037, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d2039, 0x3)   mov(memd_a32(ss, ebp - 0x34), esi);   /* mov [ebp-0x34], esi */
    II(0x100d203c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d203f, 0x3)   mov(esi, memd_a32(ds, eax + 0x25));   /* mov esi, [eax+0x25] */
    II(0x100d2042, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x100d2045, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d2048, 0x3)   mov(eax, memd_a32(ds, eax + 0x7e));   /* mov eax, [eax+0x7e] */
    II(0x100d204b, 0x5)   calld(0x100d4ebc, 0x2e6c);            /* call 0x100d4ebc */
    II(0x100d2050, 0x1)   cwde();                               /* cwde */
    II(0x100d2051, 0x3)   imul(eax, esi);                       /* imul eax, esi */
    II(0x100d2054, 0x3)   mov(esi, memd_a32(ss, ebp - 0x34));   /* mov esi, [ebp-0x34] */
    II(0x100d2057, 0x1)   dec(esi);                             /* dec esi */
    II(0x100d2058, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100d205a, 0x5)   calld(0x1012b658, 0x595f9);           /* call 0x1012b658 */
    II(0x100d205f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d2062, 0x3)   mov(eax, memd_a32(ds, eax + 0x36));   /* mov eax, [eax+0x36] */
    II(0x100d2065, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d2068, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100d206b, 0x2)   jnzd(0x100d2073, 0x6);                /* jnz 0x100d2073 */
    II(0x100d206d, 0x4)   mov(memb_a32(ss, ebp - 0x5c), 0x2);   /* mov byte [ebp-0x5c], 0x2 */
    II(0x100d2071, 0x2)   jmpd(0x100d2077, 0x4);                /* jmp 0x100d2077 */
l_0x100d2073:
    II(0x100d2073, 0x4)   mov(memb_a32(ss, ebp - 0x5c), 0xa2);  /* mov byte [ebp-0x5c], 0xa2 */
l_0x100d2077:
    II(0x100d2077, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d2079, 0x3)   mov(al, memb_a32(ss, ebp - 0x5c));    /* mov al, [ebp-0x5c] */
    II(0x100d207c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d207d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d2080, 0x3)   mov(ecx, memd_a32(ds, eax + 0x25));   /* mov ecx, [eax+0x25] */
    II(0x100d2083, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100d2086, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d2089, 0x6)   mov(eax, memd_a32(ds, eax + 0x82));   /* mov eax, [eax+0x82] */
    II(0x100d208f, 0x5)   calld(0x100d4f58, 0x2ec4);            /* call 0x100d4f58 */
    II(0x100d2094, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100d2097, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100d209b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d209e, 0x6)   mov(eax, memd_a32(ds, eax + 0x82));   /* mov eax, [eax+0x82] */
    II(0x100d20a4, 0x5)   calld(0x100d4ef0, 0x2e47);            /* call 0x100d4ef0 */
    II(0x100d20a9, 0x3)   movsx(esi, ax);                       /* movsx esi, ax */
    II(0x100d20ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d20af, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x100d20b2, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d20b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d20b7, 0x6)   mov(eax, memd_a32(ds, eax + 0x82));   /* mov eax, [eax+0x82] */
    II(0x100d20bd, 0x5)   calld(0x100d4f58, 0x2e96);            /* call 0x100d4f58 */
    II(0x100d20c2, 0x1)   cwde();                               /* cwde */
    II(0x100d20c3, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100d20c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d20c8, 0x3)   mov(eax, memd_a32(ds, eax + 0x25));   /* mov eax, [eax+0x25] */
    II(0x100d20cb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d20ce, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100d20d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d20d4, 0x6)   mov(eax, memd_a32(ds, eax + 0x82));   /* mov eax, [eax+0x82] */
    II(0x100d20da, 0x5)   calld(0x100d4ebc, 0x2ddd);            /* call 0x100d4ebc */
    II(0x100d20df, 0x1)   cwde();                               /* cwde */
    II(0x100d20e0, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34));  /* imul eax, [ebp-0x34] */
    II(0x100d20e4, 0x1)   dec(esi);                             /* dec esi */
    II(0x100d20e5, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100d20e7, 0x5)   calld(0x1012b658, 0x5956c);           /* call 0x1012b658 */
l_0x100d20ec:
    II(0x100d20ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d20ef, 0x3)   mov(eax, memd_a32(ds, eax + 0x29));   /* mov eax, [eax+0x29] */
    II(0x100d20f2, 0x5)   calld(sys_display_draw_0, 0x9538d);   /* call 0x10167484 */
l_0x100d20f7:
    II(0x100d20f7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d20f9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d20fa, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d20fb, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d20fc, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d20fd, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d20fe, 0x1)   retd();                               /* ret */
FUNC_END

