FUNC_BEGIN(0x100f1f41, 0x1d99e7fbbf30718, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x7, 0x3e, 0x7, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xf0, 0x2, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xf8, 0x48, 0x39, 0xd0, 0x7f, 0x16, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x8b, 0x55, 0xf0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0x12, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0x48, 0x39, 0xd0, 0x7e, 0x2, 0xeb, 0x16, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x8b, 0x55, 0xf0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100f1f41, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100f1f46, 0x5)   calld(sys_check_available_stack_size, 0x73e07); /* call 0x10165d52 */
    II(0x100f1f4b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f1f4c, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f1f4d, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f1f4e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f1f4f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f1f51, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100f1f57, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100f1f5a, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100f1f5d, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x100f1f60, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f1f63, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x100f1f67, 0x2)   jzd(0x100f1f72, 0x9);                 /* jz 0x100f1f72 */
    II(0x100f1f69, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x2);   /* mov dword [ebp-0x10], 0x2 */
    II(0x100f1f70, 0x2)   jmpd(0x100f1f79, 0x7);                /* jmp 0x100f1f79 */
l_0x100f1f72:
    II(0x100f1f72, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
l_0x100f1f79:
    II(0x100f1f79, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f1f7c, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100f1f7f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f1f82, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100f1f86, 0x1)   dec(eax);                             /* dec eax */
    II(0x100f1f87, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100f1f89, 0x2)   jgd(0x100f1fa1, 0x16);                /* jg 0x100f1fa1 */
    II(0x100f1f8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f1f8e, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100f1f91, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f1f94, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100f1f97, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100f1f99, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100f1f9d, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100f1f9f, 0x2)   jged(0x100f1fa3, 0x2);                /* jge 0x100f1fa3 */
l_0x100f1fa1:
    II(0x100f1fa1, 0x2)   jmpd(0x100f1fb5, 0x12);               /* jmp 0x100f1fb5 */
l_0x100f1fa3:
    II(0x100f1fa3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f1fa6, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100f1fa9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f1fac, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100f1fb0, 0x1)   dec(eax);                             /* dec eax */
    II(0x100f1fb1, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100f1fb3, 0x2)   jled(0x100f1fb7, 0x2);                /* jle 0x100f1fb7 */
l_0x100f1fb5:
    II(0x100f1fb5, 0x2)   jmpd(0x100f1fcd, 0x16);               /* jmp 0x100f1fcd */
l_0x100f1fb7:
    II(0x100f1fb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f1fba, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100f1fbd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f1fc0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100f1fc3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100f1fc5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f1fc9, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100f1fcb, 0x2)   jged(0x100f1fcf, 0x2);                /* jge 0x100f1fcf */
l_0x100f1fcd:
    II(0x100f1fcd, 0x2)   jmpd(0x100f1fd8, 0x9);                /* jmp 0x100f1fd8 */
l_0x100f1fcf:
    II(0x100f1fcf, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
    II(0x100f1fd6, 0x2)   jmpd(0x100f1fdf, 0x7);                /* jmp 0x100f1fdf */
l_0x100f1fd8:
    II(0x100f1fd8, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x100f1fdf:
    II(0x100f1fdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f1fe2, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100f1fe5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100f1fe8, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f1fea, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f1feb, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f1fec, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f1fed, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f1fee, 0x1)   retd();                               /* ret */
FUNC_END

