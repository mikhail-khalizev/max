FUNC_BEGIN(0x100df810, 0x9f53d74f963b9ed5, 0x20, ({0x68, 0x88, 0, 0, 0, 0xe8, 0x38, 0x65, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x70, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0xe7, 0xe, 0, 0, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf4, 0xfe, 0xba, 0xb4, 0x1a, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5d, 0x68, 0x6, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x6, 0xbb, 0xb9, 0x1a, 0x1a, 0x10, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0xf6, 0x69, 0x6, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x34, 0xe, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x82, 0xb, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xed, 0xb4, 0x5, 0, 0x84, 0xc0, 0xf, 0x84, 0xd0, 0, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0x88, 0xe, 0, 0, 0x89, 0x45, 0xd8, 0x80, 0x65, 0xf4, 0xfe, 0x31, 0xc9, 0xbb, 0xc5, 0x1a, 0x1a, 0x10, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xe0, 0xe8, 0x97, 0xd, 0, 0, 0xe8, 0xa6, 0x69, 0x6, 0, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xe2, 0xd, 0, 0, 0x89, 0xca, 0xe8, 0xa8, 0xb4, 0x5, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xd0, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xf, 0xb, 0, 0, 0x83, 0x7d, 0xcc, 0, 0x74, 0x5f, 0x8d, 0x4d, 0xc8, 0xbb, 0x40, 0x71, 0x1c, 0x10, 0xba, 0xca, 0x1a, 0x1a, 0x10, 0x8d, 0x45, 0xdc, 0xe8, 0x40, 0xd, 0, 0, 0xe8, 0x9f, 0x65, 0x6, 0, 0x84, 0xc0, 0x74, 0x3c, 0xbb, 0xcf, 0x1a, 0x1a, 0x10, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0xdc, 0xe8, 0x27, 0xd, 0, 0, 0xe8, 0x88, 0x68, 0x6, 0, 0xe8, 0x6d, 0x14, 0, 0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xc8, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x8, 0x1, 0xd8, 0xe8, 0x39, 0xbe, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xb, 0x8, 0, 0, 0xe9, 0x4d, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xa0, 0xa, 0, 0, 0xbb, 0xd6, 0x1a, 0x1a, 0x10, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0xf0, 0x68, 0x6, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x2e, 0xd, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x7c, 0xa, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xe7, 0xb3, 0x5, 0, 0x84, 0xc0, 0xf, 0x84, 0xd2, 0, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xc0, 0xe8, 0x82, 0xd, 0, 0, 0x89, 0x45, 0xbc, 0x80, 0x65, 0xf4, 0xfe, 0x31, 0xc9, 0xbb, 0xe5, 0x1a, 0x1a, 0x10, 0x8d, 0x55, 0xb8, 0x8d, 0x45, 0xe0, 0xe8, 0x91, 0xc, 0, 0, 0xe8, 0xa0, 0x68, 0x6, 0, 0x8d, 0x5d, 0xc0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xdc, 0xc, 0, 0, 0x89, 0xca, 0xe8, 0xa2, 0xb3, 0x5, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xb4, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xb4, 0, 0, 0, 0, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x9, 0xa, 0, 0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x61, 0x8d, 0x4d, 0xac, 0xbb, 0x40, 0x71, 0x1c, 0x10, 0xba, 0xea, 0x1a, 0x1a, 0x10, 0x8d, 0x45, 0xc0, 0xe8, 0x3a, 0xc, 0, 0, 0xe8, 0x99, 0x64, 0x6, 0, 0x84, 0xc0, 0x74, 0x3e, 0xbb, 0xef, 0x1a, 0x1a, 0x10, 0x8d, 0x55, 0xa8, 0x8d, 0x45, 0xc0, 0xe8, 0x21, 0xc, 0, 0, 0xe8, 0x82, 0x67, 0x6, 0, 0xe8, 0x67, 0x13, 0, 0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xac, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0x5, 0x7c, 0x1, 0, 0, 0x1, 0xd8, 0xe8, 0x31, 0xbd, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa8, 0xe8, 0x3, 0x7, 0, 0, 0xe9, 0x4b, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x98, 0x9, 0, 0, 0x8b, 0x45, 0xf8, 0x5, 0x14, 0x1, 0, 0, 0xe8, 0xbf, 0x6c, 0xf9, 0xff, 0xc6, 0x40, 0x16, 0, 0x8b, 0x45, 0xf8, 0x5, 0x88, 0x2, 0, 0, 0xe8, 0xae, 0x6c, 0xf9, 0xff, 0xc6, 0x40, 0x16, 0, 0x8b, 0x45, 0xf8, 0x5, 0xf0, 0x2, 0, 0, 0xe8, 0x61, 0xac, 0x5, 0, 0xbb, 0xf6, 0x1a, 0x1a, 0x10, 0x8d, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0xb9, 0x67, 0x6, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xf7, 0xb, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x45, 0x9, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xb0, 0xb2, 0x5, 0, 0x84, 0xc0, 0xf, 0x84, 0x99, 0, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xa4, 0xe8, 0x63, 0xd, 0, 0, 0x89, 0x45, 0xa0, 0x80, 0x65, 0xf4, 0xfe, 0x31, 0xc9, 0xbb, 0, 0x1b, 0x1a, 0x10, 0x8d, 0x55, 0x9c, 0x8d, 0x45, 0xe0, 0xe8, 0x5a, 0xb, 0, 0, 0xe8, 0x17, 0x68, 0x6, 0, 0x8d, 0x5d, 0xa4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xbd, 0xc, 0, 0, 0x89, 0xca, 0xe8, 0x6b, 0xb2, 0x5, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0x98, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0x98, 0, 0, 0, 0, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x94, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0x92, 0x8, 0, 0, 0x83, 0x7d, 0x94, 0, 0x74, 0x28, 0x8d, 0x45, 0xa4, 0xe8, 0x28, 0xc, 0, 0, 0x89, 0x45, 0x90, 0x8b, 0x45, 0x90, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0x90, 0xff, 0x52, 0x10, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x5, 0xf0, 0x2, 0, 0, 0xe8, 0x6a, 0x11, 0, 0, 0xeb, 0x84, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0x5a, 0x8, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x90, 0x8, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100df810, 0x5)   pushd(0x88);                          /* push dword 0x88 */
    II(0x100df815, 0x5)   calld(sys_check_available_stack_size, 0x86538); /* call 0x10165d52 */
    II(0x100df81a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100df81b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100df81c, 0x1)   pushd(esi);                           /* push esi */
    II(0x100df81d, 0x1)   pushd(edi);                           /* push edi */
    II(0x100df81e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100df81f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100df821, 0x6)   sub(esp, 0x70);                       /* sub esp, 0x70 */
    II(0x100df827, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100df82a, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100df82d, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100df831, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100df834, 0x5)   calld(0x100e0720, 0xee7);             /* call 0x100e0720 */
    II(0x100df839, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100df83c, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100df840, 0x5)   mov(edx, 0x101a1ab4);                 /* mov edx, 0x101a1ab4 */ /* "gold" */
    II(0x100df845, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df848, 0x5)   calld(0x101460aa, 0x6685d);           /* call 0x101460aa */
    II(0x100df84d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df84f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df852, 0x4)   mov(memw_a32(ds, eax + 0x6), dx);     /* mov [eax+0x6], dx */
    II(0x100df856, 0x5)   mov(ebx, 0x101a1ab9);                 /* mov ebx, 0x101a1ab9 */ /* "base_values" */
    II(0x100df85b, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100df85e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df861, 0x5)   calld(0x1014625c, 0x669f6);           /* call 0x1014625c */
    II(0x100df866, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df868, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100df86b, 0x5)   calld(0x100e06a4, 0xe34);             /* call 0x100e06a4 */
    II(0x100df870, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df872, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100df875, 0x5)   calld(0x100e03fc, 0xb82);             /* call 0x100e03fc */
    II(0x100df87a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df87c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100df87f, 0x5)   calld(0x1013ad71, 0x5b4ed);           /* call 0x1013ad71 */
    II(0x100df884, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df886, 0x6)   jzd(0x100df95c, 0xd0);                /* jz dword 0x100df95c */
    II(0x100df88c, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100df890, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df893, 0x5)   calld(0x100e0720, 0xe88);             /* call 0x100e0720 */
    II(0x100df898, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100df89b, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
l_0x100df89f:
    II(0x100df89f, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100df8a1, 0x5)   mov(ebx, 0x101a1ac5);                 /* mov ebx, 0x101a1ac5 */ /* "unit" */
    II(0x100df8a6, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100df8a9, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100df8ac, 0x5)   calld(0x100e0648, 0xd97);             /* call 0x100e0648 */
    II(0x100df8b1, 0x5)   calld(0x1014625c, 0x669a6);           /* call 0x1014625c */
    II(0x100df8b6, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100df8b9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df8bb, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100df8bd, 0x5)   calld(0x100e06a4, 0xde2);             /* call 0x100e06a4 */
    II(0x100df8c2, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x100df8c4, 0x5)   calld(0x1013ad71, 0x5b4a8);           /* call 0x1013ad71 */
    II(0x100df8c9, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df8cb, 0x2)   jzd(0x100df8d6, 0x9);                 /* jz 0x100df8d6 */
    II(0x100df8cd, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0x1);   /* mov dword [ebp-0x30], 0x1 */
    II(0x100df8d4, 0x2)   jmpd(0x100df8dd, 0x7);                /* jmp 0x100df8dd */
l_0x100df8d6:
    II(0x100df8d6, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
l_0x100df8dd:
    II(0x100df8dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100df8e0, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100df8e3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df8e5, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100df8e8, 0x5)   calld(0x100e03fc, 0xb0f);             /* call 0x100e03fc */
    II(0x100df8ed, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100df8f1, 0x2)   jzd(0x100df952, 0x5f);                /* jz 0x100df952 */
    II(0x100df8f3, 0x3)   lea(ecx, ebp - 0x38);                 /* lea ecx, [ebp-0x38] */
    II(0x100df8f6, 0x5)   mov(ebx, 0x101c7140);                 /* mov ebx, 0x101c7140 */
    II(0x100df8fb, 0x5)   mov(edx, 0x101a1aca);                 /* mov edx, 0x101a1aca */ /* "type" */
    II(0x100df900, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df903, 0x5)   calld(0x100e0648, 0xd40);             /* call 0x100e0648 */
    II(0x100df908, 0x5)   calld(0x10145eac, 0x6659f);           /* call 0x10145eac */
    II(0x100df90d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df90f, 0x2)   jzd(0x100df94d, 0x3c);                /* jz 0x100df94d */
    II(0x100df911, 0x5)   mov(ebx, 0x101a1acf);                 /* mov ebx, 0x101a1acf */ /* "values" */
    II(0x100df916, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100df919, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df91c, 0x5)   calld(0x100e0648, 0xd27);             /* call 0x100e0648 */
    II(0x100df921, 0x5)   calld(0x101461ae, 0x66888);           /* call 0x101461ae */
    II(0x100df926, 0x5)   calld(0x100e0d98, 0x146d);            /* call 0x100e0d98 */
    II(0x100df92b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df92d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x100df931, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100df934, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100df936, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df939, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100df93c, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100df93e, 0x5)   calld(0x100cb77c, -0x141c7);          /* call 0x100cb77c */
    II(0x100df943, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df945, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100df948, 0x5)   calld(0x100e0158, 0x80b);             /* call 0x100e0158 */
l_0x100df94d:
    II(0x100df94d, 0x5)   jmpd(0x100df89f, -0xb3);              /* jmp 0x100df89f */
l_0x100df952:
    II(0x100df952, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df954, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df957, 0x5)   calld(0x100e03fc, 0xaa0);             /* call 0x100e03fc */
l_0x100df95c:
    II(0x100df95c, 0x5)   mov(ebx, 0x101a1ad6);                 /* mov ebx, 0x101a1ad6 */ /* "current_values" */
    II(0x100df961, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100df964, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df967, 0x5)   calld(0x1014625c, 0x668f0);           /* call 0x1014625c */
    II(0x100df96c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df96e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100df971, 0x5)   calld(0x100e06a4, 0xd2e);             /* call 0x100e06a4 */
    II(0x100df976, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df978, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100df97b, 0x5)   calld(0x100e03fc, 0xa7c);             /* call 0x100e03fc */
    II(0x100df980, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df982, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100df985, 0x5)   calld(0x1013ad71, 0x5b3e7);           /* call 0x1013ad71 */
    II(0x100df98a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df98c, 0x6)   jzd(0x100dfa64, 0xd2);                /* jz dword 0x100dfa64 */
    II(0x100df992, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100df996, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100df999, 0x5)   calld(0x100e0720, 0xd82);             /* call 0x100e0720 */
    II(0x100df99e, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100df9a1, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
l_0x100df9a5:
    II(0x100df9a5, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100df9a7, 0x5)   mov(ebx, 0x101a1ae5);                 /* mov ebx, 0x101a1ae5 */ /* "unit" */
    II(0x100df9ac, 0x3)   lea(edx, ebp - 0x48);                 /* lea edx, [ebp-0x48] */
    II(0x100df9af, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100df9b2, 0x5)   calld(0x100e0648, 0xc91);             /* call 0x100e0648 */
    II(0x100df9b7, 0x5)   calld(0x1014625c, 0x668a0);           /* call 0x1014625c */
    II(0x100df9bc, 0x3)   lea(ebx, ebp - 0x40);                 /* lea ebx, [ebp-0x40] */
    II(0x100df9bf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df9c1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100df9c3, 0x5)   calld(0x100e06a4, 0xcdc);             /* call 0x100e06a4 */
    II(0x100df9c8, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x100df9ca, 0x5)   calld(0x1013ad71, 0x5b3a2);           /* call 0x1013ad71 */
    II(0x100df9cf, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df9d1, 0x2)   jzd(0x100df9dc, 0x9);                 /* jz 0x100df9dc */
    II(0x100df9d3, 0x7)   mov(memd_a32(ss, ebp - 0x4c), 0x1);   /* mov dword [ebp-0x4c], 0x1 */
    II(0x100df9da, 0x2)   jmpd(0x100df9e3, 0x7);                /* jmp 0x100df9e3 */
l_0x100df9dc:
    II(0x100df9dc, 0x7)   mov(memd_a32(ss, ebp - 0x4c), 0);     /* mov dword [ebp-0x4c], 0x0 */
l_0x100df9e3:
    II(0x100df9e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100df9e6, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100df9e9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df9eb, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100df9ee, 0x5)   calld(0x100e03fc, 0xa09);             /* call 0x100e03fc */
    II(0x100df9f3, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x100df9f7, 0x2)   jzd(0x100dfa5a, 0x61);                /* jz 0x100dfa5a */
    II(0x100df9f9, 0x3)   lea(ecx, ebp - 0x54);                 /* lea ecx, [ebp-0x54] */
    II(0x100df9fc, 0x5)   mov(ebx, 0x101c7140);                 /* mov ebx, 0x101c7140 */
    II(0x100dfa01, 0x5)   mov(edx, 0x101a1aea);                 /* mov edx, 0x101a1aea */ /* "type" */
    II(0x100dfa06, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100dfa09, 0x5)   calld(0x100e0648, 0xc3a);             /* call 0x100e0648 */
    II(0x100dfa0e, 0x5)   calld(0x10145eac, 0x66499);           /* call 0x10145eac */
    II(0x100dfa13, 0x2)   test(al, al);                         /* test al, al */
    II(0x100dfa15, 0x2)   jzd(0x100dfa55, 0x3e);                /* jz 0x100dfa55 */
    II(0x100dfa17, 0x5)   mov(ebx, 0x101a1aef);                 /* mov ebx, 0x101a1aef */ /* "values" */
    II(0x100dfa1c, 0x3)   lea(edx, ebp - 0x58);                 /* lea edx, [ebp-0x58] */
    II(0x100dfa1f, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100dfa22, 0x5)   calld(0x100e0648, 0xc21);             /* call 0x100e0648 */
    II(0x100dfa27, 0x5)   calld(0x101461ae, 0x66782);           /* call 0x101461ae */
    II(0x100dfa2c, 0x5)   calld(0x100e0d98, 0x1367);            /* call 0x100e0d98 */
    II(0x100dfa31, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dfa33, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x54)); /* movsx eax, word [ebp-0x54] */
    II(0x100dfa37, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dfa3a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100dfa3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dfa3f, 0x5)   add(eax, 0x17c);                      /* add eax, 0x17c */
    II(0x100dfa44, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100dfa46, 0x5)   calld(0x100cb77c, -0x142cf);          /* call 0x100cb77c */
    II(0x100dfa4b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfa4d, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100dfa50, 0x5)   calld(0x100e0158, 0x703);             /* call 0x100e0158 */
l_0x100dfa55:
    II(0x100dfa55, 0x5)   jmpd(0x100df9a5, -0xb5);              /* jmp 0x100df9a5 */
l_0x100dfa5a:
    II(0x100dfa5a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfa5c, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100dfa5f, 0x5)   calld(0x100e03fc, 0x998);             /* call 0x100e03fc */
l_0x100dfa64:
    II(0x100dfa64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dfa67, 0x5)   add(eax, 0x114);                      /* add eax, 0x114 */
    II(0x100dfa6c, 0x5)   calld(0x10076730, -0x69341);          /* call 0x10076730 */
    II(0x100dfa71, 0x4)   mov(memb_a32(ds, eax + 0x16), 0);     /* mov byte [eax+0x16], 0x0 */
    II(0x100dfa75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dfa78, 0x5)   add(eax, 0x288);                      /* add eax, 0x288 */
    II(0x100dfa7d, 0x5)   calld(0x10076730, -0x69352);          /* call 0x10076730 */
    II(0x100dfa82, 0x4)   mov(memb_a32(ds, eax + 0x16), 0);     /* mov byte [eax+0x16], 0x0 */
    II(0x100dfa86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dfa89, 0x5)   add(eax, 0x2f0);                      /* add eax, 0x2f0 */
    II(0x100dfa8e, 0x5)   calld(0x1013a6f4, 0x5ac61);           /* call 0x1013a6f4 */
    II(0x100dfa93, 0x5)   mov(ebx, 0x101a1af6);                 /* mov ebx, 0x101a1af6 */ /* "complexes" */
    II(0x100dfa98, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x100dfa9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfa9e, 0x5)   calld(0x1014625c, 0x667b9);           /* call 0x1014625c */
    II(0x100dfaa3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dfaa5, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100dfaa8, 0x5)   calld(0x100e06a4, 0xbf7);             /* call 0x100e06a4 */
    II(0x100dfaad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfaaf, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100dfab2, 0x5)   calld(0x100e03fc, 0x945);             /* call 0x100e03fc */
    II(0x100dfab7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfab9, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100dfabc, 0x5)   calld(0x1013ad71, 0x5b2b0);           /* call 0x1013ad71 */
    II(0x100dfac1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100dfac3, 0x6)   jzd(0x100dfb62, 0x99);                /* jz dword 0x100dfb62 */
    II(0x100dfac9, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100dfacd, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100dfad0, 0x5)   calld(0x100e0838, 0xd63);             /* call 0x100e0838 */
    II(0x100dfad5, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100dfad8, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
l_0x100dfadc:
    II(0x100dfadc, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100dfade, 0x5)   mov(ebx, 0x101a1b00);                 /* mov ebx, 0x101a1b00 */ /* "complex" */
    II(0x100dfae3, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100dfae6, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100dfae9, 0x5)   calld(0x100e0648, 0xb5a);             /* call 0x100e0648 */
    II(0x100dfaee, 0x5)   calld(0x1014630a, 0x66817);           /* call 0x1014630a */
    II(0x100dfaf3, 0x3)   lea(ebx, ebp - 0x5c);                 /* lea ebx, [ebp-0x5c] */
    II(0x100dfaf6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dfaf8, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100dfafa, 0x5)   calld(0x100e07bc, 0xcbd);             /* call 0x100e07bc */
    II(0x100dfaff, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x100dfb01, 0x5)   calld(0x1013ad71, 0x5b26b);           /* call 0x1013ad71 */
    II(0x100dfb06, 0x2)   test(al, al);                         /* test al, al */
    II(0x100dfb08, 0x2)   jzd(0x100dfb13, 0x9);                 /* jz 0x100dfb13 */
    II(0x100dfb0a, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0x1);   /* mov dword [ebp-0x68], 0x1 */
    II(0x100dfb11, 0x2)   jmpd(0x100dfb1a, 0x7);                /* jmp 0x100dfb1a */
l_0x100dfb13:
    II(0x100dfb13, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0);     /* mov dword [ebp-0x68], 0x0 */
l_0x100dfb1a:
    II(0x100dfb1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100dfb1d, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x100dfb20, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfb22, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100dfb25, 0x5)   calld(0x100e03bc, 0x892);             /* call 0x100e03bc */
    II(0x100dfb2a, 0x4)   cmp(memd_a32(ss, ebp - 0x6c), 0);     /* cmp dword [ebp-0x6c], 0x0 */
    II(0x100dfb2e, 0x2)   jzd(0x100dfb58, 0x28);                /* jz 0x100dfb58 */
    II(0x100dfb30, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100dfb33, 0x5)   calld(0x100e0760, 0xc28);             /* call 0x100e0760 */
    II(0x100dfb38, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
//    II(0x100dfb3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100dfb3e, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100dfb41, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100dfb44, 0x3)   calld_abs(memd_a32(ds, edx + 0x10));  /* call dword near [edx+0x10] */
    II(0x100dfb47, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dfb49, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dfb4c, 0x5)   add(eax, 0x2f0);                      /* add eax, 0x2f0 */
    II(0x100dfb51, 0x5)   calld(0x100e0cc0, 0x116a);            /* call 0x100e0cc0 */
    II(0x100dfb56, 0x2)   jmpd(0x100dfadc, -0x7c);              /* jmp 0x100dfadc */
l_0x100dfb58:
    II(0x100dfb58, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfb5a, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100dfb5d, 0x5)   calld(0x100e03bc, 0x85a);             /* call 0x100e03bc */
l_0x100dfb62:
    II(0x100dfb62, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfb64, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100dfb67, 0x5)   calld(0x100e03fc, 0x890);             /* call 0x100e03fc */
    II(0x100dfb6c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100dfb6e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100dfb6f, 0x1)   popd(edi);                            /* pop edi */
    II(0x100dfb70, 0x1)   popd(esi);                            /* pop esi */
    II(0x100dfb71, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100dfb72, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100dfb73, 0x1)   retd();                               /* ret */
FUNC_END

