FUNC_BEGIN(0x1016564c, 0xa5bd2688401fee80, 0x20, ({0x68, 0x70, 0, 0, 0, 0xe8, 0xfc, 0x6, 0, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x58, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf7, 0x45, 0xfc, 0x4, 0, 0, 0, 0x74, 0x17, 0xba, 0xa4, 0x75, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x39, 0x9, 0, 0, 0xe8, 0x54, 0x9, 0, 0, 0xe9, 0xc5, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x13, 0xb8, 0x75, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x64, 0x89, 0x45, 0xa8, 0x83, 0x7d, 0xa8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xa8, 0xe8, 0x87, 0x26, 0xf7, 0xff, 0xe8, 0xb3, 0x8, 0, 0, 0x89, 0x45, 0xd0, 0xeb, 0x7, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x68, 0x89, 0x45, 0xac, 0x83, 0x7d, 0xac, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xac, 0xe8, 0x5d, 0x26, 0xf7, 0xff, 0xe8, 0x89, 0x8, 0, 0, 0x89, 0x45, 0xd4, 0xeb, 0x7, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6c, 0x89, 0x45, 0xb0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xb0, 0xe8, 0x33, 0x26, 0xf7, 0xff, 0xe8, 0x5f, 0x8, 0, 0, 0x89, 0x45, 0xd8, 0xeb, 0x7, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x54, 0x89, 0x45, 0xb4, 0x83, 0x7d, 0xb4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xb4, 0xe8, 0xe, 0x8e, 0xf6, 0xff, 0xe8, 0x35, 0x8, 0, 0, 0x89, 0x45, 0xdc, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x58, 0x89, 0x45, 0xb8, 0x83, 0x7d, 0xb8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xb8, 0xe8, 0xe4, 0x8d, 0xf6, 0xff, 0xe8, 0xb, 0x8, 0, 0, 0x89, 0x45, 0xe0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x48, 0x89, 0x45, 0xbc, 0x83, 0x7d, 0xbc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xbc, 0xe8, 0xba, 0x8d, 0xf6, 0xff, 0xe8, 0xe1, 0x7, 0, 0, 0x89, 0x45, 0xe4, 0xeb, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x4c, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xc0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xc0, 0xe8, 0x90, 0x8d, 0xf6, 0xff, 0xe8, 0xb7, 0x7, 0, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x50, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xc4, 0xe8, 0x66, 0x8d, 0xf6, 0xff, 0xe8, 0x8d, 0x7, 0, 0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x60, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x1b, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x8b, 0x58, 0x27, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xc8, 0xff, 0x13, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xe2, 0xd, 0xf1, 0xff, 0xe8, 0x4d, 0xa2, 0xf9, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xd1, 0xb6, 0xf9, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x5f, 0x11, 0xf7, 0xff, 0x89, 0x45, 0xf8, 0xf7, 0x45, 0xfc, 0x2, 0, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x16, 0x7, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1016564c, 0x5)   pushd(0x70);                          /* push dword 0x70 */
    II(0x10165651, 0x5)   calld(sys_check_available_stack_size, 0x6fc); /* call 0x10165d52 */
    II(0x10165656, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10165657, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10165658, 0x1)   pushd(esi);                           /* push esi */
    II(0x10165659, 0x1)   pushd(edi);                           /* push edi */
    II(0x1016565a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1016565b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1016565d, 0x6)   sub(esp, 0x58);                       /* sub esp, 0x58 */
    II(0x10165663, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10165666, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10165669, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x4);   /* test dword [ebp-0x4], 0x4 */
    II(0x10165670, 0x2)   jzd(0x10165689, 0x17);                /* jz 0x10165689 */
    II(0x10165672, 0x5)   mov(edx, 0x101b75a4);                 /* mov edx, 0x101b75a4 */
    II(0x10165677, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1016567a, 0x5)   calld(sys_call_dtor_arr, 0x939);      /* call 0x10165fb8 */
    II(0x1016567f, 0x5)   calld(sys_delete_arr, 0x954);         /* call 0x10165fd8 */
    II(0x10165684, 0x5)   jmpd(0x1016584e, 0x1c5);              /* jmp 0x1016584e */
l_0x10165689:
    II(0x10165689, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1016568c, 0x7)   mov(memd_a32(ds, eax + 0x13), 0x101b75b8); /* mov dword [eax+0x13], 0x101b75b8 */
    II(0x10165693, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10165696, 0x3)   mov(eax, memd_a32(ds, eax + 0x64));   /* mov eax, [eax+0x64] */
    II(0x10165699, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x1016569c, 0x4)   cmp(memd_a32(ss, ebp - 0x58), 0);     /* cmp dword [ebp-0x58], 0x0 */
    II(0x101656a0, 0x2)   jzd(0x101656b6, 0x14);                /* jz 0x101656b6 */
    II(0x101656a2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101656a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x101656a7, 0x5)   calld(my_dtor_d3, -0x8d979);          /* call 0x100d7d33 */
    II(0x101656ac, 0x5)   calld(sys_delete, 0x8b3);             /* call 0x10165f64 */
    II(0x101656b1, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x101656b4, 0x2)   jmpd(0x101656bd, 0x7);                /* jmp 0x101656bd */
l_0x101656b6:
    II(0x101656b6, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
l_0x101656bd:
    II(0x101656bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101656c0, 0x3)   mov(eax, memd_a32(ds, eax + 0x68));   /* mov eax, [eax+0x68] */
    II(0x101656c3, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x101656c6, 0x4)   cmp(memd_a32(ss, ebp - 0x54), 0);     /* cmp dword [ebp-0x54], 0x0 */
    II(0x101656ca, 0x2)   jzd(0x101656e0, 0x14);                /* jz 0x101656e0 */
    II(0x101656cc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101656ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x101656d1, 0x5)   calld(my_dtor_d3, -0x8d9a3);          /* call 0x100d7d33 */
    II(0x101656d6, 0x5)   calld(sys_delete, 0x889);             /* call 0x10165f64 */
    II(0x101656db, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x101656de, 0x2)   jmpd(0x101656e7, 0x7);                /* jmp 0x101656e7 */
l_0x101656e0:
    II(0x101656e0, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
l_0x101656e7:
    II(0x101656e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101656ea, 0x3)   mov(eax, memd_a32(ds, eax + 0x6c));   /* mov eax, [eax+0x6c] */
    II(0x101656ed, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x101656f0, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x101656f4, 0x2)   jzd(0x1016570a, 0x14);                /* jz 0x1016570a */
    II(0x101656f6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101656f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x101656fb, 0x5)   calld(my_dtor_d3, -0x8d9cd);          /* call 0x100d7d33 */
    II(0x10165700, 0x5)   calld(sys_delete, 0x85f);             /* call 0x10165f64 */
    II(0x10165705, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10165708, 0x2)   jmpd(0x10165711, 0x7);                /* jmp 0x10165711 */
l_0x1016570a:
    II(0x1016570a, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
l_0x10165711:
    II(0x10165711, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10165714, 0x3)   mov(eax, memd_a32(ds, eax + 0x54));   /* mov eax, [eax+0x54] */
    II(0x10165717, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x1016571a, 0x4)   cmp(memd_a32(ss, ebp - 0x4c), 0);     /* cmp dword [ebp-0x4c], 0x0 */
    II(0x1016571e, 0x2)   jzd(0x10165734, 0x14);                /* jz 0x10165734 */
    II(0x10165720, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10165722, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10165725, 0x5)   calld(my_dtor_d2, -0x971f2);          /* call 0x100ce538 */
    II(0x1016572a, 0x5)   calld(sys_delete, 0x835);             /* call 0x10165f64 */
    II(0x1016572f, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10165732, 0x2)   jmpd(0x1016573b, 0x7);                /* jmp 0x1016573b */
l_0x10165734:
    II(0x10165734, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
l_0x1016573b:
    II(0x1016573b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1016573e, 0x3)   mov(eax, memd_a32(ds, eax + 0x58));   /* mov eax, [eax+0x58] */
    II(0x10165741, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x10165744, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0);     /* cmp dword [ebp-0x48], 0x0 */
    II(0x10165748, 0x2)   jzd(0x1016575e, 0x14);                /* jz 0x1016575e */
    II(0x1016574a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1016574c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1016574f, 0x5)   calld(my_dtor_d2, -0x9721c);          /* call 0x100ce538 */
    II(0x10165754, 0x5)   calld(sys_delete, 0x80b);             /* call 0x10165f64 */
    II(0x10165759, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1016575c, 0x2)   jmpd(0x10165765, 0x7);                /* jmp 0x10165765 */
l_0x1016575e:
    II(0x1016575e, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x10165765:
    II(0x10165765, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10165768, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x1016576b, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x1016576e, 0x4)   cmp(memd_a32(ss, ebp - 0x44), 0);     /* cmp dword [ebp-0x44], 0x0 */
    II(0x10165772, 0x2)   jzd(0x10165788, 0x14);                /* jz 0x10165788 */
    II(0x10165774, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10165776, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10165779, 0x5)   calld(my_dtor_d2, -0x97246);          /* call 0x100ce538 */
    II(0x1016577e, 0x5)   calld(sys_delete, 0x7e1);             /* call 0x10165f64 */
    II(0x10165783, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10165786, 0x2)   jmpd(0x1016578f, 0x7);                /* jmp 0x1016578f */
l_0x10165788:
    II(0x10165788, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x1016578f:
    II(0x1016578f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10165792, 0x3)   mov(eax, memd_a32(ds, eax + 0x4c));   /* mov eax, [eax+0x4c] */
    II(0x10165795, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x10165798, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x1016579c, 0x2)   jzd(0x101657b2, 0x14);                /* jz 0x101657b2 */
    II(0x1016579e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101657a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x101657a3, 0x5)   calld(my_dtor_d2, -0x97270);          /* call 0x100ce538 */
    II(0x101657a8, 0x5)   calld(sys_delete, 0x7b7);             /* call 0x10165f64 */
    II(0x101657ad, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x101657b0, 0x2)   jmpd(0x101657b9, 0x7);                /* jmp 0x101657b9 */
l_0x101657b2:
    II(0x101657b2, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x101657b9:
    II(0x101657b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101657bc, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x101657bf, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x101657c2, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x101657c6, 0x2)   jzd(0x101657dc, 0x14);                /* jz 0x101657dc */
    II(0x101657c8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101657ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x101657cd, 0x5)   calld(my_dtor_d2, -0x9729a);          /* call 0x100ce538 */
    II(0x101657d2, 0x5)   calld(sys_delete, 0x78d);             /* call 0x10165f64 */
    II(0x101657d7, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101657da, 0x2)   jmpd(0x101657e3, 0x7);                /* jmp 0x101657e3 */
l_0x101657dc:
    II(0x101657dc, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x101657e3:
    II(0x101657e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101657e6, 0x3)   mov(eax, memd_a32(ds, eax + 0x60));   /* mov eax, [eax+0x60] */
    II(0x101657e9, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x101657ec, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x101657f0, 0x2)   jzd(0x1016580d, 0x1b);                /* jz 0x1016580d */
    II(0x101657f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x101657f5, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x101657f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x101657fb, 0x3)   mov(ebx, memd_a32(ds, eax + 0x27));   /* mov ebx, [eax+0x27] */
    II(0x101657fe, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
//    II(0x10165803, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10165806, 0x2)   calld_abs(memd_a32(ds, ebx));         /* call dword near [ebx] */
    II(0x10165808, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1016580b, 0x2)   jmpd(0x10165814, 0x7);                /* jmp 0x10165814 */
l_0x1016580d:
    II(0x1016580d, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x10165814:
    II(0x10165814, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x10165819, 0x5)   calld(0x10076600, -0xef21e);          /* call 0x10076600 */
    II(0x1016581e, 0x5)   calld(0x100ffa70, -0x65db3);          /* call 0x100ffa70 */
    II(0x10165823, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10165828, 0x5)   calld(0x10100efe, -0x6492f);          /* call 0x10100efe */
    II(0x1016582d, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10165832, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10165835, 0x5)   calld(0x100d6999, -0x8eea1);          /* call 0x100d6999 */
    II(0x1016583a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1016583d, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x2);   /* test dword [ebp-0x4], 0x2 */
    II(0x10165844, 0x2)   jzd(0x1016584e, 0x8);                 /* jz 0x1016584e */
    II(0x10165846, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10165849, 0x5)   calld(sys_delete, 0x716);             /* call 0x10165f64 */
l_0x1016584e:
    II(0x1016584e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10165851, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x10165854, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10165857, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10165859, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1016585a, 0x1)   popd(edi);                            /* pop edi */
    II(0x1016585b, 0x1)   popd(esi);                            /* pop esi */
    II(0x1016585c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1016585d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1016585e, 0x1)   retd();                               /* ret */
FUNC_END

