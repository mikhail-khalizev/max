FUNC_BEGIN(0x1013f629, 0x8fd030fe0fd6ce2e, 0x20, ({0x68, 0x68, 0, 0, 0, 0xe8, 0x1f, 0x67, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x85, 0x49, 0xff, 0xff, 0x89, 0x45, 0xc4, 0xf, 0xbf, 0x45, 0x10, 0xe8, 0x79, 0x49, 0xff, 0xff, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xc4, 0, 0x75, 0xc, 0xc7, 0x45, 0xbc, 0, 0, 0, 0, 0xe9, 0x25, 0x2, 0, 0, 0x83, 0x7d, 0xc0, 0, 0x75, 0x6, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0x14, 0x29, 0x45, 0x18, 0x66, 0x83, 0x7d, 0x18, 0, 0x74, 0x4, 0x83, 0x45, 0xfc, 0xfb, 0xf, 0xbf, 0x45, 0x14, 0x83, 0xf8, 0x6, 0x7d, 0x9, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0xeb, 0x21, 0x8b, 0x45, 0xc4, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0xb8, 0x12, 0, 0, 0, 0x29, 0xd0, 0x89, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x89, 0x45, 0xc8, 0xf, 0xbf, 0x45, 0xc8, 0xc1, 0xe0, 0x2, 0xbb, 0x12, 0, 0, 0, 0x29, 0xc3, 0x8b, 0x45, 0xc4, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd3, 0x89, 0xda, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xf8, 0xf, 0xaf, 0xc2, 0x8b, 0x55, 0xf0, 0x1, 0xc2, 0x89, 0x55, 0xb8, 0xf, 0xbf, 0x55, 0x14, 0x83, 0xc2, 0x4, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x48, 0x6b, 0xc0, 0x5, 0x8b, 0x55, 0x14, 0x29, 0xc2, 0x89, 0x55, 0xe0, 0xf, 0xbf, 0x55, 0x18, 0x83, 0xc2, 0x4, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x48, 0x6b, 0xc0, 0x5, 0x8b, 0x55, 0x18, 0x29, 0xc2, 0x89, 0x55, 0xe8, 0x8b, 0x45, 0xb4, 0x3, 0x45, 0xe4, 0x89, 0x45, 0xec, 0x8b, 0x55, 0xc4, 0x66, 0x8b, 0x2, 0xf, 0xaf, 0x45, 0xec, 0x29, 0x45, 0xfc, 0x8b, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0xb8, 0x5, 0, 0, 0, 0x2b, 0x45, 0xe0, 0x29, 0xc2, 0x89, 0x55, 0xd4, 0x66, 0x83, 0x7d, 0xe4, 0, 0x74, 0xb, 0xb8, 0x5, 0, 0, 0, 0x2b, 0x45, 0xe8, 0x29, 0x45, 0xd4, 0xf, 0xbf, 0x45, 0xd4, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xc4, 0x66, 0x8b, 0, 0x89, 0x45, 0xcc, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xe9, 0x70, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x45, 0xd4, 0x7c, 0x2f, 0xf, 0xbf, 0x55, 0xfc, 0xf, 0xbf, 0x5d, 0xd4, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x8b, 0x55, 0xc4, 0x66, 0x3b, 0x2, 0x7e, 0x9, 0x8b, 0x45, 0xc4, 0x66, 0x8b, 0, 0x89, 0x45, 0xcc, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x38, 0xc7, 0x45, 0xcc, 0x1, 0, 0, 0, 0x66, 0x83, 0x7d, 0xe4, 0, 0x74, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x4d, 0xec, 0xf, 0xbf, 0x45, 0xd4, 0xf, 0xbf, 0x55, 0xfc, 0x29, 0xd0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xd0, 0xf, 0xbf, 0x5d, 0xec, 0x4b, 0x8d, 0x50, 0xfe, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xd8, 0x8b, 0x55, 0xcc, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xc4, 0x66, 0x3, 0x10, 0x2b, 0x55, 0xd8, 0x89, 0x55, 0xd0, 0xf, 0xbf, 0x45, 0xc8, 0x50, 0xf, 0xbf, 0x45, 0xd0, 0x50, 0xf, 0xbf, 0x45, 0xcc, 0x50, 0xf, 0xbf, 0x4d, 0x14, 0x8b, 0x5d, 0xc4, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xb8, 0xe8, 0x30, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xdc, 0x66, 0x83, 0x7d, 0x18, 0, 0x74, 0x4d, 0x6a, 0x1, 0x6a, 0x10, 0x6a, 0, 0xb9, 0x2, 0, 0, 0, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xf8, 0xf, 0xbf, 0x45, 0xdc, 0x3, 0x45, 0xf0, 0x83, 0xc0, 0x2, 0xe8, 0x3a, 0xad, 0x2, 0, 0x83, 0x45, 0xdc, 0x5, 0xf, 0xbf, 0x45, 0xc8, 0x50, 0xf, 0xbf, 0x45, 0xd0, 0x50, 0xf, 0xbf, 0x45, 0xcc, 0x50, 0xf, 0xbf, 0x4d, 0x18, 0x8b, 0x5d, 0xc0, 0xf, 0xbf, 0x55, 0xf8, 0xf, 0xbf, 0x45, 0xdc, 0x3, 0x45, 0xb8, 0xe8, 0xdc, 0xfc, 0xff, 0xff, 0x1, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0xc, 0}))
    II(0x1013f629, 0x5)   pushd(0x68);                          /* push dword 0x68 */
    II(0x1013f62e, 0x5)   calld(sys_check_available_stack_size, 0x2671f); /* call 0x10165d52 */
    II(0x1013f633, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013f634, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013f635, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013f636, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013f638, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x1013f63e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013f641, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1013f644, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x1013f647, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x1013f64a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1013f64e, 0x5)   calld(my_get_res_data_by_id, -0xb67b); /* call 0x10133fd8 */
    II(0x1013f653, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1013f656, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x1013f65a, 0x5)   calld(my_get_res_data_by_id, -0xb687); /* call 0x10133fd8 */
    II(0x1013f65f, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1013f662, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x1013f666, 0x2)   jnzd(0x1013f674, 0xc);                /* jnz 0x1013f674 */
    II(0x1013f668, 0x7)   mov(memd_a32(ss, ebp - 0x44), 0);     /* mov dword [ebp-0x44], 0x0 */
    II(0x1013f66f, 0x5)   jmpd(0x1013f899, 0x225);              /* jmp 0x1013f899 */
l_0x1013f674:
    II(0x1013f674, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x1013f678, 0x2)   jnzd(0x1013f680, 0x6);                /* jnz 0x1013f680 */
    II(0x1013f67a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1013f67d, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x1013f680:
    II(0x1013f680, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1013f683, 0x3)   sub(memd_a32(ss, ebp + 0x18), eax);   /* sub [ebp+0x18], eax */
    II(0x1013f686, 0x5)   cmp(memw_a32(ss, ebp + 0x18), 0);     /* cmp word [ebp+0x18], 0x0 */
    II(0x1013f68b, 0x2)   jzd(0x1013f691, 0x4);                 /* jz 0x1013f691 */
    II(0x1013f68d, 0x4)   add(memd_a32(ss, ebp - 0x4), -0x5 /* 0xfb */); /* add dword [ebp-0x4], 0xfb */
l_0x1013f691:
    II(0x1013f691, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x1013f695, 0x3)   cmp(eax, 0x6);                        /* cmp eax, 0x6 */
    II(0x1013f698, 0x2)   jged(0x1013f6a3, 0x9);                /* jge 0x1013f6a3 */
    II(0x1013f69a, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
    II(0x1013f6a1, 0x2)   jmpd(0x1013f6c4, 0x21);               /* jmp 0x1013f6c4 */
l_0x1013f6a3:
    II(0x1013f6a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1013f6a6, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x1013f6a8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1013f6ab, 0x5)   mov(eax, 0x12);                       /* mov eax, 0x12 */
    II(0x1013f6b0, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1013f6b2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
//    II(0x1013f6b4, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013f6b6, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013f6b9, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1013f6bc, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x1013f6be, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x1013f6c1, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
l_0x1013f6c4:
    II(0x1013f6c4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x1013f6c8, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1013f6cb, 0x5)   mov(ebx, 0x12);                       /* mov ebx, 0x12 */
    II(0x1013f6d0, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x1013f6d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1013f6d5, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x1013f6d7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1013f6da, 0x2)   sub(ebx, edx);                        /* sub ebx, edx */
    II(0x1013f6dc, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1013f6de, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013f6e0, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013f6e3, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1013f6e5, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1013f6e7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1013f6eb, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1013f6ee, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1013f6f1, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013f6f3, 0x3)   mov(memd_a32(ss, ebp - 0x48), edx);   /* mov [ebp-0x48], edx */
    II(0x1013f6f6, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x14)); /* movsx edx, word [ebp+0x14] */
    II(0x1013f6fa, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x1013f6fd, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x1013f702, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013f704, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013f707, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1013f709, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x1013f70c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1013f70f, 0x1)   dec(eax);                             /* dec eax */
    II(0x1013f710, 0x3)   imul(eax, eax, 0x5);                  /* imul eax, eax, 0x5 */
    II(0x1013f713, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x1013f716, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1013f718, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x1013f71b, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x18)); /* movsx edx, word [ebp+0x18] */
    II(0x1013f71f, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x1013f722, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x1013f727, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013f729, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013f72c, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1013f72e, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x1013f731, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1013f734, 0x1)   dec(eax);                             /* dec eax */
    II(0x1013f735, 0x3)   imul(eax, eax, 0x5);                  /* imul eax, eax, 0x5 */
    II(0x1013f738, 0x3)   mov(edx, memd_a32(ss, ebp + 0x18));   /* mov edx, [ebp+0x18] */
    II(0x1013f73b, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1013f73d, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x1013f740, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1013f743, 0x3)   add(eax, memd_a32(ss, ebp - 0x1c));   /* add eax, [ebp-0x1c] */
    II(0x1013f746, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1013f749, 0x3)   mov(edx, memd_a32(ss, ebp - 0x3c));   /* mov edx, [ebp-0x3c] */
    II(0x1013f74c, 0x3)   mov(ax, memw_a32(ds, edx));           /* mov ax, [edx] */
    II(0x1013f74f, 0x4)   imul(eax, memd_a32(ss, ebp - 0x14));  /* imul eax, [ebp-0x14] */
    II(0x1013f753, 0x3)   sub(memd_a32(ss, ebp - 0x4), eax);    /* sub [ebp-0x4], eax */
    II(0x1013f756, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x1013f759, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1013f75c, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1013f761, 0x3)   sub(eax, memd_a32(ss, ebp - 0x20));   /* sub eax, [ebp-0x20] */
    II(0x1013f764, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1013f766, 0x3)   mov(memd_a32(ss, ebp - 0x2c), edx);   /* mov [ebp-0x2c], edx */
    II(0x1013f769, 0x5)   cmp(memw_a32(ss, ebp - 0x1c), 0);     /* cmp word [ebp-0x1c], 0x0 */
    II(0x1013f76e, 0x2)   jzd(0x1013f77b, 0xb);                 /* jz 0x1013f77b */
    II(0x1013f770, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1013f775, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x1013f778, 0x3)   sub(memd_a32(ss, ebp - 0x2c), eax);   /* sub [ebp-0x2c], eax */
l_0x1013f77b:
    II(0x1013f77b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1013f77f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1013f781, 0x2)   jnzd(0x1013f798, 0x15);               /* jnz 0x1013f798 */
    II(0x1013f783, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1013f786, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1013f789, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1013f78c, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x1013f793, 0x5)   jmpd(0x1013f808, 0x70);               /* jmp 0x1013f808 */
l_0x1013f798:
    II(0x1013f798, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013f79b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x2c));    /* cmp ax, [ebp-0x2c] */
    II(0x1013f79f, 0x2)   jld(0x1013f7d0, 0x2f);                /* jl 0x1013f7d0 */
    II(0x1013f7a1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013f7a5, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x2c)); /* movsx ebx, word [ebp-0x2c] */
    II(0x1013f7a9, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013f7ab, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013f7ae, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1013f7b0, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x1013f7b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1013f7b6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x3c));   /* mov edx, [ebp-0x3c] */
    II(0x1013f7b9, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x1013f7bc, 0x2)   jled(0x1013f7c7, 0x9);                /* jle 0x1013f7c7 */
    II(0x1013f7be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1013f7c1, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1013f7c4, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x1013f7c7:
    II(0x1013f7c7, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x1013f7ce, 0x2)   jmpd(0x1013f808, 0x38);               /* jmp 0x1013f808 */
l_0x1013f7d0:
    II(0x1013f7d0, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x1);   /* mov dword [ebp-0x34], 0x1 */
    II(0x1013f7d7, 0x5)   cmp(memw_a32(ss, ebp - 0x1c), 0);     /* cmp word [ebp-0x1c], 0x0 */
    II(0x1013f7dc, 0x2)   jzd(0x1013f7e4, 0x6);                 /* jz 0x1013f7e4 */
    II(0x1013f7de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013f7e1, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
l_0x1013f7e4:
    II(0x1013f7e4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1013f7e8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013f7ec, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1013f7ee, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1013f7f0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1013f7f4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013f7f6, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x1013f7fa, 0x1)   dec(ebx);                             /* dec ebx */
    II(0x1013f7fb, 0x3)   lea(edx, eax - 0x2);                  /* lea edx, [eax-0x2] */
    II(0x1013f7fe, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013f800, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013f803, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1013f805, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x1013f808:
    II(0x1013f808, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x1013f80b, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1013f80e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1013f811, 0x3)   add(dx, memw_a32(ds, eax));           /* add dx, [eax] */
    II(0x1013f814, 0x3)   sub(edx, memd_a32(ss, ebp - 0x28));   /* sub edx, [ebp-0x28] */
    II(0x1013f817, 0x3)   mov(memd_a32(ss, ebp - 0x30), edx);   /* mov [ebp-0x30], edx */
    II(0x1013f81a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x1013f81e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f81f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1013f823, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f824, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1013f828, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f829, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x14)); /* movsx ecx, word [ebp+0x14] */
    II(0x1013f82d, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x3c));   /* mov ebx, [ebp-0x3c] */
    II(0x1013f830, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1013f834, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1013f837, 0x5)   calld(0x1013f56c, -0x2d0);            /* call 0x1013f56c */
    II(0x1013f83c, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1013f83f, 0x5)   cmp(memw_a32(ss, ebp + 0x18), 0);     /* cmp word [ebp+0x18], 0x0 */
    II(0x1013f844, 0x2)   jzd(0x1013f893, 0x4d);                /* jz 0x1013f893 */
    II(0x1013f846, 0x2)   pushd(0x1);                           /* push 0x1 */
    II(0x1013f848, 0x2)   pushd(0x10);                          /* push 0x10 */
    II(0x1013f84a, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x1013f84c, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x1013f851, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1013f853, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1013f857, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1013f85b, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1013f85e, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x1013f861, 0x5)   calld(/* sys */ 0x1016a5a0, 0x2ad3a); /* call 0x1016a5a0 */
    II(0x1013f866, 0x4)   add(memd_a32(ss, ebp - 0x24), 0x5);   /* add dword [ebp-0x24], 0x5 */
    II(0x1013f86a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x1013f86e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f86f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1013f873, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f874, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1013f878, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f879, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x18)); /* movsx ecx, word [ebp+0x18] */
    II(0x1013f87d, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x40));   /* mov ebx, [ebp-0x40] */
    II(0x1013f880, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1013f884, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1013f888, 0x3)   add(eax, memd_a32(ss, ebp - 0x48));   /* add eax, [ebp-0x48] */
    II(0x1013f88b, 0x5)   calld(0x1013f56c, -0x324);            /* call 0x1013f56c */
    II(0x1013f890, 0x3)   add(memd_a32(ss, ebp - 0x24), eax);   /* add [ebp-0x24], eax */
l_0x1013f893:
    II(0x1013f893, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1013f896, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x1013f899:
    II(0x1013f899, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1013f89c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013f89e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013f89f, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013f8a0, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013f8a1, 0x3)   retd(0xc);                            /* ret 0xc */
FUNC_END

