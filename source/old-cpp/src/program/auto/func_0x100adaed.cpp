FUNC_BEGIN(0x100adaed, 0xdc1c221ff6b8a822, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0x5b, 0x82, 0xb, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xdc, 0xe8, 0x4d, 0x83, 0xfc, 0xff, 0x8d, 0x55, 0xe0, 0x8b, 0x45, 0xfc, 0xe8, 0xe2, 0xa6, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xc6, 0x45, 0xf0, 0, 0xc6, 0x45, 0xec, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8d, 0x45, 0xe0, 0xe8, 0x74, 0xa7, 0, 0, 0x66, 0x3b, 0x45, 0xe8, 0xf, 0x8e, 0xc6, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xe0, 0xe8, 0x1e, 0xa7, 0, 0, 0x66, 0xf, 0xbe, 0, 0x66, 0x1, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xe0, 0xe8, 0xa, 0xa7, 0, 0, 0x66, 0xf, 0xbe, 0x40, 0x1, 0x66, 0x1, 0x45, 0xde, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x4d, 0xde, 0xf, 0xbf, 0x5d, 0xdc, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x13, 0xe8, 0xda, 0x89, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x14, 0x27, 0xfc, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x4f, 0x80, 0x7d, 0xf0, 0, 0x75, 0x41, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xe0, 0xe8, 0xc0, 0xa6, 0, 0, 0x66, 0xf, 0xbe, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x5d, 0xdc, 0x29, 0xd3, 0x66, 0x89, 0x58, 0x1e, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xe0, 0xe8, 0xa4, 0xa6, 0, 0, 0x66, 0xf, 0xbe, 0x50, 0x1, 0x8b, 0x45, 0xf4, 0x8b, 0x5d, 0xde, 0x29, 0xd3, 0x66, 0x89, 0x58, 0x20, 0xc6, 0x45, 0xf0, 0x1, 0xc6, 0x45, 0xec, 0x1, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0xeb, 0x1a, 0x80, 0x7d, 0xf0, 0, 0x74, 0x14, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x28, 0xe8, 0x37, 0xaf, 0xfd, 0xff, 0xc6, 0x45, 0xf0, 0, 0xeb, 0x5, 0xe9, 0x22, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xec, 0, 0x75, 0x27, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xd8, 0xe8, 0x38, 0x82, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0xe8, 0xad, 0xf4, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x54, 0x96, 0, 0, 0xe9, 0x69, 0x2, 0, 0, 0x80, 0x7d, 0xf0, 0, 0x74, 0x31, 0x8b, 0x45, 0xf4, 0x80, 0x78, 0x47, 0, 0x74, 0xc, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0x5d, 0xef, 0xff, 0xff, 0xeb, 0xd, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0xc0, 0xf3, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x1d, 0x96, 0, 0, 0xe9, 0x32, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x80, 0x78, 0x47, 0, 0x75, 0x6b, 0xb8, 0x11, 0, 0, 0, 0xe8, 0x71, 0x81, 0xb, 0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x74, 0x2e, 0x8b, 0x4d, 0xfc, 0x8b, 0x45, 0xf4, 0x8b, 0x58, 0x24, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x13, 0xe8, 0x1b, 0x89, 0xfc, 0xff, 0x8b, 0x75, 0xd4, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x2f, 0xac, 0, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xc8, 0x8b, 0x55, 0xc8, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xd8, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x21, 0xbf, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x26, 0x48, 0x75, 0x1c, 0xbb, 0x48, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x20, 0xf9, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x5, 0xe9, 0x1e, 0x1, 0, 0, 0xbb, 0x17, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xff, 0xf8, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x4, 0x83, 0x45, 0xe4, 0xec, 0xf, 0xbf, 0x45, 0xe4, 0x83, 0xf8, 0xa, 0xf, 0x8d, 0xf1, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xc4, 0xe8, 0x11, 0x81, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xd8, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x34, 0xc0, 0, 0, 0x89, 0x45, 0xc0, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xdc, 0xe8, 0xc6, 0xad, 0xfd, 0xff, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8d, 0x45, 0xe0, 0xe8, 0x27, 0xa5, 0, 0, 0x66, 0x3b, 0x45, 0xe8, 0xf, 0x8e, 0x9a, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xe0, 0xe8, 0xd1, 0xa4, 0, 0, 0x66, 0xf, 0xbe, 0, 0x66, 0x1, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xe0, 0xe8, 0xbd, 0xa4, 0, 0, 0x66, 0xf, 0xbe, 0x40, 0x1, 0x66, 0x1, 0x45, 0xde, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x4d, 0xde, 0xf, 0xbf, 0x5d, 0xdc, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x13, 0xe8, 0x8d, 0x87, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xc7, 0x24, 0xfc, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x23, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x4d, 0xde, 0xf, 0xbf, 0x5d, 0xdc, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0xb8, 0x27, 0, 0, 0, 0xe8, 0xa4, 0x24, 0xfc, 0xff, 0x66, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x18, 0x8b, 0x5d, 0xf4, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xbc, 0xe8, 0x3a, 0x80, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xc0, 0xe8, 0x77, 0x8e, 0xfe, 0xff, 0xe9, 0x4e, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x24, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0xe8, 0x6b, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x50, 0x1e, 0x75, 0x10, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x50, 0x20, 0x74, 0x2, 0xeb, 0x21, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8b, 0x58, 0x2, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x13, 0xe8, 0x4e, 0x87, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xb8, 0xff, 0x53, 0x44, 0xeb, 0x18, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xb4, 0xe8, 0xca, 0x7f, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0xe8, 0x3f, 0xf2, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xe6, 0x93, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100adaed, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x100adaf2, 0x5)   calld(sys_check_available_stack_size, 0xb825b); /* call 0x10165d52 */
    II(0x100adaf7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100adaf8, 0x1)   pushd(esi);                           /* push esi */
    II(0x100adaf9, 0x1)   pushd(edi);                           /* push edi */
    II(0x100adafa, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100adafb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100adafd, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x100adb03, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100adb06, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100adb09, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x100adb0c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100adb0f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100adb12, 0x5)   calld(0x10075e64, -0x37cb3);          /* call 0x10075e64 */
    II(0x100adb17, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100adb1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100adb1d, 0x5)   calld(0x100b8204, 0xa6e2);            /* call 0x100b8204 */
    II(0x100adb22, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100adb29, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100adb2d, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x100adb31, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100adb38, 0x2)   jmpd(0x100adb40, 0x6);                /* jmp 0x100adb40 */
l_0x100adb3a:
    II(0x100adb3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100adb3d, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100adb40:
    II(0x100adb40, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100adb43, 0x5)   calld(0x100b82bc, 0xa774);            /* call 0x100b82bc */
    II(0x100adb48, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100adb4c, 0x6)   jled(0x100adc18, 0xc6);               /* jle dword 0x100adc18 */
    II(0x100adb52, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100adb56, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100adb59, 0x5)   calld(0x100b827c, 0xa71e);            /* call 0x100b827c */
    II(0x100adb5e, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x100adb62, 0x4)   add(memw_a32(ss, ebp - 0x24), ax);    /* add [ebp-0x24], ax */
    II(0x100adb66, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100adb6a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100adb6d, 0x5)   calld(0x100b827c, 0xa70a);            /* call 0x100b827c */
    II(0x100adb72, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x100adb77, 0x4)   add(memw_a32(ss, ebp - 0x22), ax);    /* add [ebp-0x22], ax */
    II(0x100adb7b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100adb7d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100adb7e, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x22)); /* movsx ecx, word [ebp-0x22] */
    II(0x100adb82, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x24)); /* movsx ebx, word [ebp-0x24] */
    II(0x100adb86, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adb89, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100adb8c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100adb8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adb92, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100adb95, 0x5)   calld(0x10076574, -0x37626);          /* call 0x10076574 */
    II(0x100adb9a, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100adb9d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100adba0, 0x5)   calld(0x100702b9, -0x3d8ec);          /* call 0x100702b9 */
    II(0x100adba5, 0x1)   cwde();                               /* cwde */
    II(0x100adba6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100adba8, 0x2)   jnzd(0x100adbf9, 0x4f);               /* jnz 0x100adbf9 */
    II(0x100adbaa, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x100adbae, 0x2)   jnzd(0x100adbf1, 0x41);               /* jnz 0x100adbf1 */
    II(0x100adbb0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100adbb4, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100adbb7, 0x5)   calld(0x100b827c, 0xa6c0);            /* call 0x100b827c */
    II(0x100adbbc, 0x4)   movsx(dx, memb_a32(ds, eax));         /* movsx dx, byte [eax] */
    II(0x100adbc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adbc3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x24));   /* mov ebx, [ebp-0x24] */
    II(0x100adbc6, 0x2)   sub(ebx, edx);                        /* sub ebx, edx */
    II(0x100adbc8, 0x4)   mov(memw_a32(ds, eax + 0x1e), bx);    /* mov [eax+0x1e], bx */
    II(0x100adbcc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100adbd0, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100adbd3, 0x5)   calld(0x100b827c, 0xa6a4);            /* call 0x100b827c */
    II(0x100adbd8, 0x5)   movsx(dx, memb_a32(ds, eax + 0x1));   /* movsx dx, byte [eax+0x1] */
    II(0x100adbdd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adbe0, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x22));   /* mov ebx, [ebp-0x22] */
    II(0x100adbe3, 0x2)   sub(ebx, edx);                        /* sub ebx, edx */
    II(0x100adbe5, 0x4)   mov(memw_a32(ds, eax + 0x20), bx);    /* mov [eax+0x20], bx */
    II(0x100adbe9, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100adbed, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
l_0x100adbf1:
    II(0x100adbf1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100adbf4, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100adbf7, 0x2)   jmpd(0x100adc13, 0x1a);               /* jmp 0x100adc13 */
l_0x100adbf9:
    II(0x100adbf9, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x100adbfd, 0x2)   jzd(0x100adc13, 0x14);                /* jz 0x100adc13 */
    II(0x100adbff, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100adc02, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adc05, 0x3)   add(eax, 0x28);                       /* add eax, 0x28 */
    II(0x100adc08, 0x5)   calld(0x10088b44, -0x250c9);          /* call 0x10088b44 */
    II(0x100adc0d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100adc11, 0x2)   jmpd(0x100adc18, 0x5);                /* jmp 0x100adc18 */
l_0x100adc13:
    II(0x100adc13, 0x5)   jmpd(0x100adb3a, -0xde);              /* jmp 0x100adb3a */
l_0x100adc18:
    II(0x100adc18, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x100adc1c, 0x2)   jnzd(0x100adc45, 0x27);               /* jnz 0x100adc45 */
    II(0x100adc1e, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100adc21, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100adc24, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100adc27, 0x5)   calld(0x10075e64, -0x37dc8);          /* call 0x10075e64 */
    II(0x100adc2c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100adc2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adc31, 0x5)   calld(0x100ad0e3, -0xb53);            /* call 0x100ad0e3 */
    II(0x100adc36, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100adc38, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100adc3b, 0x5)   calld(0x100b7294, 0x9654);            /* call 0x100b7294 */
    II(0x100adc40, 0x5)   jmpd(0x100adeae, 0x269);              /* jmp 0x100adeae */
l_0x100adc45:
    II(0x100adc45, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x100adc49, 0x2)   jzd(0x100adc7c, 0x31);                /* jz 0x100adc7c */
    II(0x100adc4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adc4e, 0x4)   cmp(memb_a32(ds, eax + 0x47), 0);     /* cmp byte [eax+0x47], 0x0 */
    II(0x100adc52, 0x2)   jzd(0x100adc60, 0xc);                 /* jz 0x100adc60 */
    II(0x100adc54, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100adc56, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adc59, 0x5)   calld(0x100acbbb, -0x10a3);           /* call 0x100acbbb */
    II(0x100adc5e, 0x2)   jmpd(0x100adc6d, 0xd);                /* jmp 0x100adc6d */
l_0x100adc60:
    II(0x100adc60, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100adc65, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adc68, 0x5)   calld(0x100ad02d, -0xc40);            /* call 0x100ad02d */
l_0x100adc6d:
    II(0x100adc6d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100adc6f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100adc72, 0x5)   calld(0x100b7294, 0x961d);            /* call 0x100b7294 */
    II(0x100adc77, 0x5)   jmpd(0x100adeae, 0x232);              /* jmp 0x100adeae */
l_0x100adc7c:
    II(0x100adc7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adc7f, 0x4)   cmp(memb_a32(ds, eax + 0x47), 0);     /* cmp byte [eax+0x47], 0x0 */
    II(0x100adc83, 0x2)   jnzd(0x100adcf0, 0x6b);               /* jnz 0x100adcf0 */
    II(0x100adc85, 0x5)   mov(eax, 0x11);                       /* mov eax, 0x11 */
    II(0x100adc8a, 0x5)   calld(sys_new, 0xb8171);              /* call 0x10165e00 */
    II(0x100adc8f, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x100adc92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100adc95, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100adc98, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x100adc9c, 0x2)   jzd(0x100adccc, 0x2e);                /* jz 0x100adccc */
    II(0x100adc9e, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x100adca1, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adca4, 0x3)   mov(ebx, memd_a32(ds, eax + 0x24));   /* mov ebx, [eax+0x24] */
    II(0x100adca7, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100adcaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adcad, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100adcb0, 0x5)   calld(0x100765d0, -0x376e5);          /* call 0x100765d0 */
    II(0x100adcb5, 0x3)   mov(esi, memd_a32(ss, ebp - 0x2c));   /* mov esi, [ebp-0x2c] */
    II(0x100adcb8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100adcba, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100adcbc, 0x5)   calld(0x100b88f0, 0xac2f);            /* call 0x100b88f0 */
    II(0x100adcc1, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x100adcc4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100adcc7, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100adcca, 0x2)   jmpd(0x100adcd2, 0x6);                /* jmp 0x100adcd2 */
l_0x100adccc:
    II(0x100adccc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100adccf, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
l_0x100adcd2:
    II(0x100adcd2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x38));   /* mov edx, [ebp-0x38] */
    II(0x100adcd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adcd8, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100adcdb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100adcde, 0x6)   imul(ebx, eax, 0xc5);                 /* imul ebx, eax, 0xc5 */
    II(0x100adce4, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100adce9, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100adceb, 0x5)   calld(0x100b9c11, 0xbf21);            /* call 0x100b9c11 */
l_0x100adcf0:
    II(0x100adcf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adcf3, 0x5)   cmp(memw_a32(ds, eax + 0x26), 0x48);  /* cmp word [eax+0x26], 0x48 */
    II(0x100adcf8, 0x2)   jnzd(0x100add16, 0x1c);               /* jnz 0x100add16 */
    II(0x100adcfa, 0x5)   mov(ebx, 0x48);                       /* mov ebx, 0x48 */
    II(0x100adcff, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100add02, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100add05, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100add08, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100add0d, 0x5)   calld(0x100ad632, -0x6e0);            /* call 0x100ad632 */
    II(0x100add12, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100add14, 0x2)   jzd(0x100add1b, 0x5);                 /* jz 0x100add1b */
l_0x100add16:
    II(0x100add16, 0x5)   jmpd(0x100ade39, 0x11e);              /* jmp 0x100ade39 */
l_0x100add1b:
    II(0x100add1b, 0x5)   mov(ebx, 0x17);                       /* mov ebx, 0x17 */
    II(0x100add20, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100add23, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100add26, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100add29, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100add2e, 0x5)   calld(0x100ad632, -0x701);            /* call 0x100ad632 */
    II(0x100add33, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100add35, 0x2)   jnzd(0x100add3b, 0x4);                /* jnz 0x100add3b */
    II(0x100add37, 0x4)   add(memd_a32(ss, ebp - 0x1c), -0x14 /* 0xec */); /* add dword [ebp-0x1c], 0xec */
l_0x100add3b:
    II(0x100add3b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100add3f, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100add42, 0x6)   jged(0x100ade39, 0xf1);               /* jge dword 0x100ade39 */
    II(0x100add48, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100add4b, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100add4e, 0x5)   calld(0x10075e64, -0x37eef);          /* call 0x10075e64 */
    II(0x100add53, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100add55, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100add58, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100add5b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100add5e, 0x6)   imul(ebx, eax, 0xc5);                 /* imul ebx, eax, 0xc5 */
    II(0x100add64, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100add69, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100add6b, 0x5)   calld(0x100b9da4, 0xc034);            /* call 0x100b9da4 */
    II(0x100add70, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100add73, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100add76, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100add79, 0x5)   calld(0x10088b44, -0x2523a);          /* call 0x10088b44 */
    II(0x100add7e, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100add85, 0x2)   jmpd(0x100add8d, 0x6);                /* jmp 0x100add8d */
l_0x100add87:
    II(0x100add87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100add8a, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100add8d:
    II(0x100add8d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100add90, 0x5)   calld(0x100b82bc, 0xa527);            /* call 0x100b82bc */
    II(0x100add95, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100add99, 0x6)   jled(0x100ade39, 0x9a);               /* jle dword 0x100ade39 */
    II(0x100add9f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100adda3, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100adda6, 0x5)   calld(0x100b827c, 0xa4d1);            /* call 0x100b827c */
    II(0x100addab, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x100addaf, 0x4)   add(memw_a32(ss, ebp - 0x24), ax);    /* add [ebp-0x24], ax */
    II(0x100addb3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100addb7, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100addba, 0x5)   calld(0x100b827c, 0xa4bd);            /* call 0x100b827c */
    II(0x100addbf, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x100addc4, 0x4)   add(memw_a32(ss, ebp - 0x22), ax);    /* add [ebp-0x22], ax */
    II(0x100addc8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100addca, 0x1)   pushd(eax);                           /* push eax */
    II(0x100addcb, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x22)); /* movsx ecx, word [ebp-0x22] */
    II(0x100addcf, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x24)); /* movsx ebx, word [ebp-0x24] */
    II(0x100addd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100addd6, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100addd9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100adddc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100adddf, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100adde2, 0x5)   calld(0x10076574, -0x37873);          /* call 0x10076574 */
    II(0x100adde7, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100addea, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100added, 0x5)   calld(0x100702b9, -0x3db39);          /* call 0x100702b9 */
    II(0x100addf2, 0x1)   cwde();                               /* cwde */
    II(0x100addf3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100addf5, 0x2)   jnzd(0x100ade1a, 0x23);               /* jnz 0x100ade1a */
    II(0x100addf7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100addf9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100addfa, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x22)); /* movsx ecx, word [ebp-0x22] */
    II(0x100addfe, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x24)); /* movsx ebx, word [ebp-0x24] */
    II(0x100ade02, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ade05, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100ade08, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ade0b, 0x5)   mov(eax, 0x27);                       /* mov eax, 0x27 */
    II(0x100ade10, 0x5)   calld(0x100702b9, -0x3db5c);          /* call 0x100702b9 */
    II(0x100ade15, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100ade18, 0x2)   jnzd(0x100ade1c, 0x2);                /* jnz 0x100ade1c */
l_0x100ade1a:
    II(0x100ade1a, 0x2)   jmpd(0x100ade34, 0x18);               /* jmp 0x100ade34 */
l_0x100ade1c:
    II(0x100ade1c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100ade1f, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100ade22, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ade25, 0x5)   calld(0x10075e64, -0x37fc6);          /* call 0x10075e64 */
    II(0x100ade2a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ade2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100ade2f, 0x5)   calld(0x10096cab, -0x17189);          /* call 0x10096cab */
l_0x100ade34:
    II(0x100ade34, 0x5)   jmpd(0x100add87, -0xb2);              /* jmp 0x100add87 */
l_0x100ade39:
    II(0x100ade39, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ade3c, 0x3)   mov(edx, memd_a32(ds, eax + 0x24));   /* mov edx, [eax+0x24] */
    II(0x100ade3f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ade42, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ade45, 0x5)   calld(0x100adeb5, 0x6b);              /* call 0x100adeb5 */
    II(0x100ade4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ade4d, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100ade50, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ade53, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1e));    /* cmp dx, [eax+0x1e] */
    II(0x100ade57, 0x2)   jnzd(0x100ade69, 0x10);               /* jnz 0x100ade69 */
    II(0x100ade59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ade5c, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x100ade60, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ade63, 0x4)   cmp(dx, memw_a32(ds, eax + 0x20));    /* cmp dx, [eax+0x20] */
    II(0x100ade67, 0x2)   jzd(0x100ade6b, 0x2);                 /* jz 0x100ade6b */
l_0x100ade69:
    II(0x100ade69, 0x2)   jmpd(0x100ade8c, 0x21);               /* jmp 0x100ade8c */
l_0x100ade6b:
    II(0x100ade6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ade6e, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x100ade71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100ade74, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
//    II(0x100ade77, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ade7a, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ade7d, 0x5)   calld(0x100765d0, -0x378b2);          /* call 0x100765d0 */
    II(0x100ade82, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ade84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100ade87, 0x3)   calld_abs(memd_a32(ds, ebx + 0x44));  /* call dword near [ebx+0x44] */
    II(0x100ade8a, 0x2)   jmpd(0x100adea4, 0x18);               /* jmp 0x100adea4 */
l_0x100ade8c:
    II(0x100ade8c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100ade8f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ade92, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100ade95, 0x5)   calld(0x10075e64, -0x38036);          /* call 0x10075e64 */
    II(0x100ade9a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ade9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ade9f, 0x5)   calld(0x100ad0e3, -0xdc1);            /* call 0x100ad0e3 */
l_0x100adea4:
    II(0x100adea4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100adea6, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100adea9, 0x5)   calld(0x100b7294, 0x93e6);            /* call 0x100b7294 */
l_0x100adeae:
    II(0x100adeae, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100adeb0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100adeb1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100adeb2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100adeb3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100adeb4, 0x1)   retd();                               /* ret */
FUNC_END

