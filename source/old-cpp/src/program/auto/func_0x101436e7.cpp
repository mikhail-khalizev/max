FUNC_BEGIN(0x101436e7, 0x3e42544954e8cc5a, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x61, 0x26, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xc, 0x85, 0x45, 0xf4, 0x75, 0x8, 0x8b, 0x45, 0x10, 0x80, 0x38, 0, 0x75, 0x5, 0xe9, 0x87, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x3, 0x45, 0xe8, 0x3b, 0x45, 0xfc, 0x7e, 0x12, 0x8b, 0x45, 0xf8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x29, 0xc2, 0x89, 0x55, 0xe8, 0x8b, 0x45, 0x10, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x3b, 0x45, 0xe8, 0x7d, 0xa, 0x31, 0xc0, 0x8b, 0x55, 0x10, 0x8a, 0x2, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x8b, 0x48, 0xc, 0x8b, 0x5d, 0xe8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4, 0xe8, 0x63, 0x31, 0xf3, 0xff, 0xe8, 0x4f, 0, 0, 0, 0x89, 0x45, 0xe8, 0x8a, 0x45, 0xe8, 0x8b, 0x55, 0x10, 0x28, 0x2, 0x8a, 0x45, 0xe8, 0x8b, 0x55, 0xf8, 0, 0x2, 0x8b, 0x45, 0xe8, 0x8b, 0x55, 0xf0, 0x1, 0x42, 0x10, 0x8b, 0x45, 0xe8, 0x8b, 0x55, 0xf0, 0x29, 0x42, 0x8, 0x8b, 0x45, 0xf0, 0x83, 0x78, 0x8, 0, 0x75, 0x9, 0xc7, 0x45, 0xe4, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x101436e7, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x101436ec, 0x5)   calld(sys_check_available_stack_size, 0x22661); /* call 0x10165d52 */
    II(0x101436f1, 0x1)   pushd(esi);                           /* push esi */
    II(0x101436f2, 0x1)   pushd(edi);                           /* push edi */
    II(0x101436f3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101436f4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101436f6, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x101436fc, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101436ff, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10143702, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10143705, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
//    II(0x10143708, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014370b, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x1014370e, 0x3)   test(memd_a32(ss, ebp - 0xc), eax);   /* test [ebp-0xc], eax */
    II(0x10143711, 0x2)   jnzd(0x1014371b, 0x8);                /* jnz 0x1014371b */
    II(0x10143713, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10143716, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x10143719, 0x2)   jnzd(0x10143720, 0x5);                /* jnz 0x10143720 */
l_0x1014371b:
    II(0x1014371b, 0x5)   jmpd(0x101437a7, 0x87);               /* jmp 0x101437a7 */
l_0x10143720:
    II(0x10143720, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10143723, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x10143726, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10143729, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014372c, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1014372e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10143733, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x10143736, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x10143739, 0x2)   jled(0x1014374d, 0x12);               /* jle 0x1014374d */
    II(0x1014373b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014373e, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10143740, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10143745, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10143748, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1014374a, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
l_0x1014374d:
    II(0x1014374d, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10143750, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10143752, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10143757, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x18));   /* cmp eax, [ebp-0x18] */
    II(0x1014375a, 0x2)   jged(0x10143766, 0xa);                /* jge 0x10143766 */
    II(0x1014375c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014375e, 0x3)   mov(edx, memd_a32(ss, ebp + 0x10));   /* mov edx, [ebp+0x10] */
    II(0x10143761, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10143763, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x10143766:
    II(0x10143766, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10143769, 0x3)   mov(ecx, memd_a32(ds, eax + 0xc));    /* mov ecx, [eax+0xc] */
    II(0x1014376c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x18));   /* mov ebx, [ebp-0x18] */
    II(0x1014376f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
//    II(0x10143772, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10143775, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x10143778, 0x5)   calld(0x100768e0, -0xcce9d);          /* call 0x100768e0 */
    II(0x1014377d, 0x5)   calld(0x101437d1, 0x4f);              /* call 0x101437d1 */
    II(0x10143782, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10143785, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x10143788, 0x3)   mov(edx, memd_a32(ss, ebp + 0x10));   /* mov edx, [ebp+0x10] */
    II(0x1014378b, 0x2)   sub(memb_a32(ds, edx), al);           /* sub [edx], al */
    II(0x1014378d, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x10143790, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10143793, 0x2)   add(memb_a32(ds, edx), al);           /* add [edx], al */
    II(0x10143795, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10143798, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1014379b, 0x3)   add(memd_a32(ds, edx + 0x10), eax);   /* add [edx+0x10], eax */
    II(0x1014379e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101437a1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101437a4, 0x3)   sub(memd_a32(ds, edx + 0x8), eax);    /* sub [edx+0x8], eax */
l_0x101437a7:
    II(0x101437a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101437aa, 0x4)   cmp(memd_a32(ds, eax + 0x8), 0);      /* cmp dword [eax+0x8], 0x0 */
    II(0x101437ae, 0x2)   jnzd(0x101437b9, 0x9);                /* jnz 0x101437b9 */
    II(0x101437b0, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x1);   /* mov dword [ebp-0x1c], 0x1 */
    II(0x101437b7, 0x2)   jmpd(0x101437c0, 0x7);                /* jmp 0x101437c0 */
l_0x101437b9:
    II(0x101437b9, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x101437c0:
    II(0x101437c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101437c3, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x101437c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101437c9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101437cb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101437cc, 0x1)   popd(edi);                            /* pop edi */
    II(0x101437cd, 0x1)   popd(esi);                            /* pop esi */
    II(0x101437ce, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

