FUNC_BEGIN(0x101262e2, 0x4fab7750390e72e, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x66, 0xfa, 0x3, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xf2, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x45, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x11, 0x8b, 0x45, 0xf8, 0xe8, 0x79, 0x66, 0xf7, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x13, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x15, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x27, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x17, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x1d, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x19, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x1b, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x4d, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x1f, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x4e, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x21, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x50, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x23, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x52, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x25, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x54, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x27, 0xc7, 0x45, 0xf4, 0x29, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101262e2, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x101262e7, 0x5)   calld(sys_check_available_stack_size, 0x3fa66); /* call 0x10165d52 */
    II(0x101262ec, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101262ed, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101262ee, 0x1)   pushd(esi);                           /* push esi */
    II(0x101262ef, 0x1)   pushd(edi);                           /* push edi */
    II(0x101262f0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101262f1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101262f3, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x101262f9, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101262fc, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101262ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10126302, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x10126305, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10126308, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012630b, 0x5)   calld(0x10126202, -0x10e);            /* call 0x10126202 */
    II(0x10126310, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10126313, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10126315, 0x3)   mov(dl, memb_a32(ds, eax + 0x45));    /* mov dl, [eax+0x45] */
    II(0x10126318, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012631b, 0x4)   mov(memw_a32(ds, eax + 0x11), dx);    /* mov [eax+0x11], dx */
    II(0x1012631f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10126322, 0x5)   calld(0x1009c9a0, -0x89987);          /* call 0x1009c9a0 */
    II(0x10126327, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10126329, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012632c, 0x4)   mov(memw_a32(ds, eax + 0x13), dx);    /* mov [eax+0x13], dx */
    II(0x10126330, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10126333, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x10126337, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012633a, 0x4)   mov(memw_a32(ds, eax + 0x15), dx);    /* mov [eax+0x15], dx */
    II(0x1012633e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10126341, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10126343, 0x3)   mov(dl, memb_a32(ds, eax + 0x27));    /* mov dl, [eax+0x27] */
    II(0x10126346, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10126349, 0x4)   mov(memw_a32(ds, eax + 0x17), dx);    /* mov [eax+0x17], dx */
    II(0x1012634d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10126350, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10126352, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10126355, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10126358, 0x4)   mov(memw_a32(ds, eax + 0x1d), dx);    /* mov [eax+0x1d], dx */
    II(0x1012635c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012635f, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
    II(0x10126363, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10126366, 0x4)   mov(memw_a32(ds, eax + 0x19), dx);    /* mov [eax+0x19], dx */
    II(0x1012636a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012636d, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x10126371, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10126374, 0x4)   mov(memw_a32(ds, eax + 0x1b), dx);    /* mov [eax+0x1b], dx */
    II(0x10126378, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012637b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012637d, 0x3)   mov(dl, memb_a32(ds, eax + 0x4d));    /* mov dl, [eax+0x4d] */
    II(0x10126380, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10126383, 0x4)   mov(memw_a32(ds, eax + 0x1f), dx);    /* mov [eax+0x1f], dx */
    II(0x10126387, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012638a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012638c, 0x3)   mov(dl, memb_a32(ds, eax + 0x4e));    /* mov dl, [eax+0x4e] */
    II(0x1012638f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10126392, 0x4)   mov(memw_a32(ds, eax + 0x21), dx);    /* mov [eax+0x21], dx */
    II(0x10126396, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10126399, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012639b, 0x3)   mov(al, memb_a32(ds, edx + 0x50));    /* mov al, [edx+0x50] */
    II(0x1012639e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101263a1, 0x4)   mov(memw_a32(ds, edx + 0x23), ax);    /* mov [edx+0x23], ax */
    II(0x101263a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101263a8, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x101263ac, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101263af, 0x4)   mov(memw_a32(ds, edx + 0x25), ax);    /* mov [edx+0x25], ax */
    II(0x101263b3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101263b6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101263b8, 0x3)   mov(al, memb_a32(ds, edx + 0x54));    /* mov al, [edx+0x54] */
    II(0x101263bb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101263be, 0x4)   mov(memw_a32(ds, edx + 0x27), ax);    /* mov [edx+0x27], ax */
    II(0x101263c2, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x29);   /* mov dword [ebp-0xc], 0x29 */
    II(0x101263c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101263cc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101263ce, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101263cf, 0x1)   popd(edi);                            /* pop edi */
    II(0x101263d0, 0x1)   popd(esi);                            /* pop esi */
    II(0x101263d1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101263d2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101263d3, 0x1)   retd();                               /* ret */
FUNC_END

