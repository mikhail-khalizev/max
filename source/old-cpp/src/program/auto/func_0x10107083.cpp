FUNC_BEGIN(0x10107083, 0x3ffd25f36d04d401, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xc5, 0xec, 0x5, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xf4, 0x88, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x2c, 0x25, 0xff, 0xff, 0, 0, 0x86, 0xc4, 0x83, 0xe8, 0x1e, 0x89, 0x45, 0xf0, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf0, 0x85, 0xc0, 0x7e, 0xd, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf0, 0x3d, 0x2e, 0x2, 0, 0, 0x76, 0x5, 0xe9, 0x42, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x50, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x30, 0x41, 0x1c, 0x10, 0x89, 0x45, 0xe8, 0xbb, 0x40, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x48, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x48, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x88, 0x55, 0xe4, 0x8b, 0x45, 0xf0, 0x83, 0xe8, 0x8, 0x89, 0x45, 0xe0, 0x80, 0x7d, 0xfc, 0, 0x75, 0x2d, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xe0, 0x85, 0xc0, 0x74, 0x1e, 0x31, 0xdb, 0x8a, 0x5d, 0xe4, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0xe0, 0x8b, 0x45, 0xec, 0xe8, 0xf0, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x50, 0x4e, 0x74, 0x5, 0xe9, 0xd2, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0xff, 0x80, 0x60, 0x41, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x7, 0x89, 0xc2, 0x31, 0xc0, 0x8a, 0x45, 0xe4, 0x1, 0xc0, 0x1, 0xc2, 0x8b, 0x45, 0xe0, 0x66, 0x89, 0x82, 0x70, 0x41, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xf8, 0xc1, 0xe2, 0x2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x8, 0x89, 0xc3, 0x31, 0xc0, 0x8a, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0x1, 0xd8, 0x8b, 0x92, 0x30, 0x41, 0x1c, 0x10, 0x89, 0x90, 0x70, 0x43, 0x1c, 0x10, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf0, 0x3, 0x45, 0xe8, 0x3d, 0, 0x4, 0, 0, 0x7e, 0x3f, 0xb8, 0, 0x4, 0, 0, 0x2b, 0x45, 0xe8, 0x89, 0x45, 0xdc, 0x31, 0xdb, 0x66, 0x8b, 0x5d, 0xdc, 0x8b, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x40, 0x41, 0x1c, 0x10, 0x3, 0x45, 0xe8, 0xe8, 0x83, 0xec, 0x5, 0, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xdc, 0x1, 0x45, 0xec, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x29, 0x45, 0xf0, 0x31, 0xdb, 0x66, 0x8b, 0x5d, 0xf0, 0x8b, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x40, 0x41, 0x1c, 0x10, 0x3, 0x45, 0xe8, 0xe8, 0x4f, 0xec, 0x5, 0, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0xf0, 0x3, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x89, 0x90, 0x30, 0x41, 0x1c, 0x10, 0xeb, 0x6, 0xff, 0x5, 0xb0, 0x4d, 0x1c, 0x10, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10107083, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x10107088, 0x5)   calld(sys_check_available_stack_size, 0x5ecc5); /* call 0x10165d52 */
    II(0x1010708d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010708e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010708f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10107090, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10107091, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10107093, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x10107099, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010709c, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1010709f, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x101070a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101070a5, 0x4)   mov(ax, memw_a32(ds, eax + 0x2c));    /* mov ax, [eax+0x2c] */
    II(0x101070a9, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x101070ae, 0x2)   xchg(ah, al);                         /* xchg ah, al */
    II(0x101070b0, 0x3)   sub(eax, 0x1e);                       /* sub eax, 0x1e */
    II(0x101070b3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101070b6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101070b8, 0x4)   mov(ax, memw_a32(ss, ebp - 0x10));    /* mov ax, [ebp-0x10] */
    II(0x101070bc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101070be, 0x2)   jled(0x101070cd, 0xd);                /* jle 0x101070cd */
    II(0x101070c0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101070c2, 0x4)   mov(ax, memw_a32(ss, ebp - 0x10));    /* mov ax, [ebp-0x10] */
    II(0x101070c6, 0x5)   cmp(eax, 0x22e);                      /* cmp eax, 0x22e */
    II(0x101070cb, 0x2)   jbed(0x101070d2, 0x5);                /* jbe 0x101070d2 */
l_0x101070cd:
    II(0x101070cd, 0x5)   jmpd(0x10107214, 0x142);              /* jmp 0x10107214 */
l_0x101070d2:
    II(0x101070d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101070d5, 0x3)   add(eax, 0x50);                       /* add eax, 0x50 */
    II(0x101070d8, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101070db, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101070df, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101070e2, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4130)); /* mov eax, [eax+0x101c4130] */
    II(0x101070e8, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x101070eb, 0x5)   mov(ebx, 0x40);                       /* mov ebx, 0x40 */
    II(0x101070f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101070f3, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x101070f6, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101070f9, 0x3)   mov(edx, memd_a32(ds, edx + 0x48));   /* mov edx, [edx+0x48] */
    II(0x101070fc, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101070ff, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10107101, 0x3)   mov(memb_a32(ss, ebp - 0x1c), dl);    /* mov [ebp-0x1c], dl */
    II(0x10107104, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10107107, 0x3)   sub(eax, 0x8);                        /* sub eax, 0x8 */
    II(0x1010710a, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1010710d, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10107111, 0x2)   jnzd(0x10107140, 0x2d);               /* jnz 0x10107140 */
    II(0x10107113, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10107115, 0x4)   mov(ax, memw_a32(ss, ebp - 0x20));    /* mov ax, [ebp-0x20] */
    II(0x10107119, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1010711b, 0x2)   jzd(0x1010713b, 0x1e);                /* jz 0x1010713b */
    II(0x1010711d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010711f, 0x3)   mov(bl, memb_a32(ss, ebp - 0x1c));    /* mov bl, [ebp-0x1c] */
    II(0x10107122, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10107124, 0x4)   mov(dx, memw_a32(ss, ebp - 0x20));    /* mov dx, [ebp-0x20] */
    II(0x10107128, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1010712b, 0x5)   calld(0x10107020, -0x110);            /* call 0x10107020 */
    II(0x10107130, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10107132, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10107135, 0x4)   cmp(dx, memw_a32(ds, eax + 0x4e));    /* cmp dx, [eax+0x4e] */
    II(0x10107139, 0x2)   jzd(0x10107140, 0x5);                 /* jz 0x10107140 */
l_0x1010713b:
    II(0x1010713b, 0x5)   jmpd(0x10107212, 0xd2);               /* jmp 0x10107212 */
l_0x10107140:
    II(0x10107140, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107144, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10107147, 0x6)   inc(memd_a32(ds, eax + 0x101c4160));  /* inc dword [eax+0x101c4160] */
    II(0x1010714d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107151, 0x3)   shl(eax, 0x7);                        /* shl eax, 0x7 */
    II(0x10107154, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10107156, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10107158, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x1010715b, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1010715d, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010715f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10107162, 0x7)   mov(memw_a32(ds, edx + 0x101c4170), ax); /* mov [edx+0x101c4170], ax */
    II(0x10107169, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1010716d, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10107170, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107174, 0x3)   shl(eax, 0x8);                        /* shl eax, 0x8 */
    II(0x10107177, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10107179, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010717b, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x1010717e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10107181, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10107183, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c4130)); /* mov edx, [edx+0x101c4130] */
    II(0x10107189, 0x6)   mov(memd_a32(ds, eax + 0x101c4370), edx); /* mov [eax+0x101c4370], edx */
    II(0x1010718f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10107191, 0x4)   mov(ax, memw_a32(ss, ebp - 0x10));    /* mov ax, [ebp-0x10] */
    II(0x10107195, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x10107198, 0x5)   cmp(eax, 0x400);                      /* cmp eax, 0x400 */
    II(0x1010719d, 0x2)   jled(0x101071de, 0x3f);               /* jle 0x101071de */
    II(0x1010719f, 0x5)   mov(eax, 0x400);                      /* mov eax, 0x400 */
    II(0x101071a4, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x101071a7, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101071aa, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101071ac, 0x4)   mov(bx, memw_a32(ss, ebp - 0x24));    /* mov bx, [ebp-0x24] */
    II(0x101071b0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x101071b3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101071b7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101071ba, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4140)); /* mov eax, [eax+0x101c4140] */
    II(0x101071c0, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x101071c3, 0x5)   calld(sys_memcpy, 0x5ec83);           /* call 0x10165e4b */
    II(0x101071c8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101071ca, 0x4)   mov(ax, memw_a32(ss, ebp - 0x24));    /* mov ax, [ebp-0x24] */
    II(0x101071ce, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
    II(0x101071d1, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x101071d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101071db, 0x3)   sub(memd_a32(ss, ebp - 0x10), eax);   /* sub [ebp-0x10], eax */
l_0x101071de:
    II(0x101071de, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101071e0, 0x4)   mov(bx, memw_a32(ss, ebp - 0x10));    /* mov bx, [ebp-0x10] */
    II(0x101071e4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x101071e7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101071eb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101071ee, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4140)); /* mov eax, [eax+0x101c4140] */
    II(0x101071f4, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x101071f7, 0x5)   calld(sys_memcpy, 0x5ec4f);           /* call 0x10165e4b */
    II(0x101071fc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101071fe, 0x4)   mov(dx, memw_a32(ss, ebp - 0x10));    /* mov dx, [ebp-0x10] */
    II(0x10107202, 0x3)   add(edx, memd_a32(ss, ebp - 0x18));   /* add edx, [ebp-0x18] */
    II(0x10107205, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107209, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010720c, 0x6)   mov(memd_a32(ds, eax + 0x101c4130), edx); /* mov [eax+0x101c4130], edx */
l_0x10107212:
    II(0x10107212, 0x2)   jmpd(0x1010721a, 0x6);                /* jmp 0x1010721a */
l_0x10107214:
    II(0x10107214, 0x6)   inc(memd_a32(ds, 0x101c4db0));        /* inc dword [0x101c4db0] */
l_0x1010721a:
    II(0x1010721a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010721c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010721d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010721e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010721f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10107220, 0x1)   retd();                               /* ret */
FUNC_END

