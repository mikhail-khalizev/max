FUNC_BEGIN(0x1014ac97, 0x59c5c20d2f2d6e5b, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xb1, 0xb0, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xee, 0xf2, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xa1, 0, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0xeb, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0x31, 0, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x6e, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x20, 0x74, 0x4e, 0x8b, 0x45, 0xfc, 0xe8, 0x27, 0xb4, 0xf2, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xab, 0xb9, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x59, 0xb8, 0xf2, 0xff, 0xe8, 0x28, 0x3e, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa4, 0x45, 0x1, 0, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xf6, 0xb1, 0xf2, 0xff, 0xe9, 0x83, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x6c, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x14, 0x1, 0x74, 0x2, 0xeb, 0x1f, 0x31, 0xdb, 0xba, 0xe, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x21, 0x82, 0x1, 0, 0xb8, 0xc1, 0xd2, 0x1a, 0x10, 0xe8, 0xcb, 0xdd, 0xf5, 0xff, 0xc6, 0x45, 0xf8, 0, 0xeb, 0x39, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0xa, 0xb8, 0xcf, 0xd2, 0x1a, 0x10, 0xe8, 0xac, 0xdd, 0xf5, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0x2f, 0xbc, 0xf2, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xff, 0x53, 0x28, 0x88, 0x45, 0xf8, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1014ac97, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x1014ac9c, 0x5)   calld(sys_check_available_stack_size, 0x1b0b1); /* call 0x10165d52 */
    II(0x1014aca1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1014aca2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1014aca3, 0x1)   pushd(edx);                           /* push edx */
    II(0x1014aca4, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014aca5, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014aca6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014aca7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014aca9, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1014acaf, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1014acb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014acb5, 0x5)   calld(0x10149fa8, -0xd12);            /* call 0x10149fa8 */
    II(0x1014acba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014acbd, 0x6)   mov(eax, memd_a32(ds, eax + 0xa1));   /* mov eax, [eax+0xa1] */
    II(0x1014acc3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014acc6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014acc8, 0x2)   jled(0x1014acd3, 0x9);                /* jle 0x1014acd3 */
    II(0x1014acca, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1014acce, 0x5)   jmpd(0x1014adbe, 0xeb);               /* jmp 0x1014adbe */
l_0x1014acd3:
    II(0x1014acd3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014acd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014acd8, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1014acdb, 0x5)   calld(0x1013ad11, -0xffcf);           /* call 0x1013ad11 */
    II(0x1014ace0, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014ace2, 0x2)   jzd(0x1014ad52, 0x6e);                /* jz 0x1014ad52 */
    II(0x1014ace4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ace7, 0x4)   test(memb_a32(ds, eax + 0x12), 0x20); /* test byte [eax+0x12], 0x20 */
    II(0x1014aceb, 0x2)   jzd(0x1014ad3b, 0x4e);                /* jz 0x1014ad3b */
    II(0x1014aced, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014acf0, 0x5)   calld(0x1007611c, -0xd4bd9);          /* call 0x1007611c */
    II(0x1014acf5, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x1014acf8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014acfa, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1014acfc, 0x5)   calld(0x100766ac, -0xd4655);          /* call 0x100766ac */
    II(0x1014ad01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ad04, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1014ad07, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014ad0a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ad0d, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1014ad10, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014ad13, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1014ad16, 0x5)   calld(0x10076574, -0xd47a7);          /* call 0x10076574 */
    II(0x1014ad1b, 0x5)   calld(0x1014eb48, 0x3e28);            /* call 0x1014eb48 */
    II(0x1014ad20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ad23, 0x5)   calld(0x1015f2cc, 0x145a4);           /* call 0x1015f2cc */
    II(0x1014ad28, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1014ad2c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014ad2e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1014ad31, 0x5)   calld(0x10075f2c, -0xd4e0a);          /* call 0x10075f2c */
    II(0x1014ad36, 0x5)   jmpd(0x1014adbe, 0x83);               /* jmp 0x1014adbe */
l_0x1014ad3b:
    II(0x1014ad3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ad3e, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1014ad42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ad45, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1014ad49, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1014ad4d, 0x5)   jmpd(0x1014adbe, 0x6c);               /* jmp 0x1014adbe */
l_0x1014ad52:
    II(0x1014ad52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ad55, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x1014ad59, 0x2)   jzd(0x1014ad64, 0x9);                 /* jz 0x1014ad64 */
    II(0x1014ad5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ad5e, 0x4)   test(memb_a32(ds, eax + 0x14), 0x1);  /* test byte [eax+0x14], 0x1 */
    II(0x1014ad62, 0x2)   jzd(0x1014ad66, 0x2);                 /* jz 0x1014ad66 */
l_0x1014ad64:
    II(0x1014ad64, 0x2)   jmpd(0x1014ad85, 0x1f);               /* jmp 0x1014ad85 */
l_0x1014ad66:
    II(0x1014ad66, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014ad68, 0x5)   mov(edx, 0xe);                        /* mov edx, 0xe */
    II(0x1014ad6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ad70, 0x5)   calld(0x10162f96, 0x18221);           /* call 0x10162f96 */
    II(0x1014ad75, 0x5)   mov(eax, 0x101ad2c1);                 /* mov eax, 0x101ad2c1 */ /* "plane takeoff" */
    II(0x1014ad7a, 0x5)   calld(0x100a8b4a, -0xa2235);          /* call 0x100a8b4a */
    II(0x1014ad7f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1014ad83, 0x2)   jmpd(0x1014adbe, 0x39);               /* jmp 0x1014adbe */
l_0x1014ad85:
    II(0x1014ad85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ad88, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x1014ad8b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014ad90, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014ad92, 0x2)   jzd(0x1014ad9e, 0xa);                 /* jz 0x1014ad9e */
    II(0x1014ad94, 0x5)   mov(eax, 0x101ad2cf);                 /* mov eax, 0x101ad2cf */ /* "moving" */
    II(0x1014ad99, 0x5)   calld(0x100a8b4a, -0xa2254);          /* call 0x100a8b4a */
l_0x1014ad9e:
    II(0x1014ad9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ada1, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1014ada4, 0x5)   calld(0x100769d8, -0xd43d1);          /* call 0x100769d8 */
    II(0x1014ada9, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x1014adac, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014adaf, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1014adb2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x1014adb5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014adb8, 0x3)   calld_abs(memd_a32(ds, ebx + 0x28));  /* call dword near [ebx+0x28] */
    II(0x1014adbb, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
l_0x1014adbe:
    II(0x1014adbe, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1014adc1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014adc3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014adc4, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014adc5, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014adc6, 0x1)   popd(edx);                            /* pop edx */
    II(0x1014adc7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014adc8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1014adc9, 0x1)   retd();                               /* ret */
FUNC_END

