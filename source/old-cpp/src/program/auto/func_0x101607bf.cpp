FUNC_BEGIN(0x101607bf, 0xbe85f26fc3011b4e, 0x20, ({0x68, 0x80, 0, 0, 0, 0xe8, 0x89, 0x55, 0, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x6b, 0xc0, 0x33, 0xba, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xcc, 0x31, 0xc0, 0x8b, 0x55, 0xf8, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xec, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x40, 0x3d, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf8, 0xe8, 0x68, 0x97, 0xfe, 0xff, 0xf7, 0x45, 0xd0, 0, 0x2, 0, 0, 0x74, 0x58, 0x8b, 0x45, 0xf8, 0xe8, 0x5d, 0xb5, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x1d, 0x75, 0x1c, 0xbb, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x5a, 0xc1, 0xfa, 0x18, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0xb6, 0x29, 0xfd, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x75, 0x20, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x50, 0xc1, 0xfa, 0x10, 0x29, 0x90, 0x50, 0xa5, 0x1c, 0x10, 0x83, 0x7d, 0xfc, 0, 0x74, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0x2, 0xeb, 0x9, 0xf7, 0x45, 0xd0, 0x8, 0, 0x1, 0, 0x74, 0x2, 0xeb, 0x14, 0x8b, 0x5d, 0xd0, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xe0, 0xe8, 0x38, 0x38, 0xf1, 0xff, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x55, 0xf7, 0x45, 0xd0, 0x10, 0, 0, 0, 0x74, 0x9, 0xc7, 0x45, 0xc4, 0xd, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xc4, 0xe, 0, 0, 0, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0xe8, 0x9f, 0, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x80, 0xb8, 0xd5, 0x81, 0x1c, 0x10, 0x1, 0x75, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x52, 0x1, 0x45, 0xe8, 0xf7, 0x45, 0xd0, 0x40, 0x3, 0, 0, 0x74, 0x9, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x14, 0x1, 0x74, 0x2, 0xeb, 0x45, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xe0, 0xe8, 0x85, 0x3b, 0xf1, 0xff, 0xf7, 0x45, 0xd0, 0x10, 0, 0, 0, 0x74, 0x2f, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xe0, 0x40, 0x98, 0xe8, 0x6e, 0x3b, 0xf1, 0xff, 0x8b, 0x45, 0xf0, 0x40, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe0, 0xe8, 0x5e, 0x3b, 0xf1, 0xff, 0x8b, 0x45, 0xf0, 0x40, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xe0, 0x40, 0x98, 0xe8, 0x4d, 0x3b, 0xf1, 0xff, 0x66, 0x83, 0x7d, 0xdc, 0x29, 0x74, 0xb, 0x66, 0x83, 0x7d, 0xdc, 0x2a, 0xf, 0x85, 0xab, 0, 0, 0, 0xb9, 0x80, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xe0, 0xf, 0xbf, 0x45, 0xe4, 0xe8, 0xe4, 0x3b, 0xf1, 0xff, 0x8d, 0x5d, 0xc0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xea, 0x5c, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x45, 0xa3, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x1a, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xe0, 0x8b, 0x45, 0xf8, 0xe8, 0x3e, 0x45, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xc0, 0xe8, 0x46, 0x5c, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x7d, 0xa3, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x42, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xc0, 0xe8, 0x70, 0x5b, 0xf1, 0xff, 0xe8, 0x2b, 0xec, 0xfe, 0xff, 0x8d, 0x45, 0xc0, 0xe8, 0x63, 0x5b, 0xf1, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x29, 0x83, 0xc2, 0x4, 0xbb, 0x7, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0xca, 0x31, 0xdb, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xc0, 0xe8, 0x3f, 0x5b, 0xf1, 0xff, 0xe8, 0xb8, 0x9e, 0xfe, 0xff, 0xc7, 0x45, 0xec, 0xff, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xe1, 0x54, 0xf1, 0xff, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xc8, 0xe8, 0xa5, 0x5a, 0xf1, 0xff, 0x89, 0x45, 0xd4, 0x80, 0x65, 0xf4, 0xfe, 0x66, 0x83, 0x7d, 0xdc, 0xa, 0x74, 0x7, 0x66, 0x83, 0x7d, 0xdc, 0x1b, 0x75, 0x18, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xc2, 0x58, 0xf1, 0xff, 0x8d, 0x5d, 0xc8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xba, 0x59, 0xf1, 0xff, 0xeb, 0x16, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xaa, 0x58, 0xf1, 0xff, 0x8d, 0x5d, 0xc8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xa2, 0x59, 0xf1, 0xff, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xf8, 0xe8, 0xf, 0x24, 0xf1, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xe2, 0, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0xeb, 0x58, 0xf1, 0xff, 0x66, 0x83, 0x78, 0x8, 0x48, 0x74, 0xf, 0x8d, 0x45, 0xc8, 0xe8, 0xdc, 0x58, 0xf1, 0xff, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xc8, 0xe8, 0xcb, 0x58, 0xf1, 0xff, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x72, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x52, 0x58, 0xf1, 0xff, 0x8d, 0x5d, 0xbc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc6, 0x59, 0xf1, 0xff, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xc8, 0xe8, 0xb, 0x59, 0xf1, 0xff, 0xe8, 0xb2, 0x23, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0x3e, 0x8d, 0x45, 0xbc, 0xe8, 0x92, 0x58, 0xf1, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xd0, 0x47, 0x2, 0, 0, 0x8d, 0x45, 0xbc, 0xe8, 0x7c, 0x58, 0xf1, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x1, 0xd0, 0x66, 0xff, 0x80, 0xe9, 0xa5, 0x1c, 0x10, 0x8d, 0x45, 0xbc, 0xe8, 0xcb, 0x58, 0xf1, 0xff, 0xe8, 0x8a, 0xe7, 0xff, 0xff, 0xeb, 0xae, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0x1e, 0x54, 0xf1, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x4a, 0x58, 0xf1, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xd0, 0x47, 0x2, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0x34, 0x58, 0xf1, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x1, 0xd0, 0x66, 0xff, 0x80, 0xe9, 0xa5, 0x1c, 0x10, 0x8d, 0x45, 0xc8, 0xe8, 0x83, 0x58, 0xf1, 0xff, 0xe8, 0x42, 0xe7, 0xff, 0xff, 0xe9, 0xb, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x35, 0xe7, 0xff, 0xff, 0xf7, 0x45, 0xd0, 0, 0x2, 0, 0, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xe4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x2, 0xeb, 0x19, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0x7, 0xe8, 0xf7, 0xff, 0xf7, 0x45, 0xd0, 0x10, 0, 0x80, 0, 0x75, 0x9, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0x4, 0x75, 0x2, 0xeb, 0xd, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0xb, 0xf, 0x85, 0x84, 0, 0, 0, 0x66, 0x83, 0x7d, 0xdc, 0x31, 0x75, 0x9, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0x4, 0x74, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xec, 0xe, 0x74, 0x2, 0xeb, 0x4c, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xe0, 0xf, 0xbf, 0x45, 0xe4, 0xe8, 0x26, 0x33, 0xf1, 0xff, 0x8d, 0x5d, 0xb8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x7e, 0x5a, 0xf1, 0xff, 0x8d, 0x45, 0xb8, 0xe8, 0x3e, 0x59, 0xf1, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xe0, 0x8d, 0x45, 0xb8, 0xe8, 0x2f, 0x59, 0xf1, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xec, 0xd, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xcf, 0x52, 0xf1, 0xff, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xe0, 0xe8, 0x1b, 0x37, 0xf1, 0xff, 0x66, 0x83, 0x7d, 0xec, 0xff, 0x74, 0x7c, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc6, 0x81, 0x1c, 0x10, 0x8a, 0x40, 0x1, 0x30, 0xe4, 0x48, 0x89, 0x45, 0xb4, 0xf, 0xbf, 0x55, 0xb4, 0xe8, 0xfb, 0x51, 0, 0, 0x42, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x89, 0x45, 0xb4, 0xe8, 0xd5, 0x1e, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xea, 0x1e, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xb4, 0x50, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0xf, 0xbf, 0x45, 0xe0, 0x50, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xe4, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xb0, 0xe8, 0xf9, 0x95, 0xff, 0xff, 0xe8, 0xea, 0x58, 0xf1, 0xff, 0x89, 0x45, 0xac, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0x39, 0x52, 0xf1, 0xff, 0x8b, 0x45, 0xe8, 0x8b, 0x55, 0xac, 0x66, 0x89, 0x42, 0x52, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x5e, 0x52, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101607bf, 0x5)   pushd(0x80);                          /* push dword 0x80 */
    II(0x101607c4, 0x5)   calld(sys_check_available_stack_size, 0x5589); /* call 0x10165d52 */
    II(0x101607c9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101607ca, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101607cb, 0x1)   pushd(esi);                           /* push esi */
    II(0x101607cc, 0x1)   pushd(edi);                           /* push edi */
    II(0x101607cd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101607ce, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101607d0, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x101607d6, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101607d9, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x101607dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101607df, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x101607e3, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101607e6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x101607ea, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x101607ed, 0x5)   mov(edx, 0x101c81c0);                 /* mov edx, 0x101c81c0 */
    II(0x101607f2, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101607f4, 0x3)   mov(memd_a32(ss, ebp - 0x34), edx);   /* mov [ebp-0x34], edx */
    II(0x101607f7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101607f9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101607fc, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x101607ff, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10160802, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160805, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10160808, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1016080b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1016080e, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x10160812, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10160815, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160818, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1016081c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1016081f, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffffffff); /* mov dword [ebp-0x14], 0xffffffff */
    II(0x10160826, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1016082d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160830, 0x5)   movsx(ax, memb_a32(ds, eax + 0x3d));  /* movsx ax, byte [eax+0x3d] */
    II(0x10160835, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10160838, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1016083b, 0x5)   calld(0x10149fa8, -0x16898);          /* call 0x10149fa8 */
    II(0x10160840, 0x7)   test(memd_a32(ss, ebp - 0x30), 0x200); /* test dword [ebp-0x30], 0x200 */
    II(0x10160847, 0x2)   jzd(0x101608a1, 0x58);                /* jz 0x101608a1 */
    II(0x10160849, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1016084c, 0x5)   calld(0x1015bdae, -0x4aa3);           /* call 0x1015bdae */
    II(0x10160851, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160854, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1d);   /* cmp word [eax+0x8], 0x1d */
    II(0x10160859, 0x2)   jnzd(0x10160877, 0x1c);               /* jnz 0x10160877 */
    II(0x1016085b, 0x5)   mov(ebx, 0xffffffff);                 /* mov ebx, 0xffffffff */
    II(0x10160860, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160863, 0x3)   mov(edx, memd_a32(ds, eax + 0x5a));   /* mov edx, [eax+0x5a] */
    II(0x10160866, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x10160869, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1016086c, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1016086f, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10160871, 0x1)   cwde();                               /* cwde */
    II(0x10160872, 0x5)   calld(0x1013322d, -0x2d64a);          /* call 0x1013322d */
l_0x10160877:
    II(0x10160877, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1016087a, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x1016087f, 0x2)   jnzd(0x101608a1, 0x20);               /* jnz 0x101608a1 */
    II(0x10160881, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160884, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10160887, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1016088c, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10160892, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10160895, 0x3)   mov(edx, memd_a32(ds, edx + 0x50));   /* mov edx, [edx+0x50] */
    II(0x10160898, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1016089b, 0x6)   sub(memd_a32(ds, eax + 0x101ca550), edx); /* sub [eax+0x101ca550], edx */
l_0x101608a1:
    II(0x101608a1, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x101608a5, 0x2)   jzd(0x101608b1, 0xa);                 /* jz 0x101608b1 */
    II(0x101608a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101608aa, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x101608af, 0x2)   jnzd(0x101608b3, 0x2);                /* jnz 0x101608b3 */
l_0x101608b1:
    II(0x101608b1, 0x2)   jmpd(0x101608bd, 0xa);                /* jmp 0x101608bd */
l_0x101608b3:
    II(0x101608b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101608b6, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x101608bb, 0x2)   jnzd(0x101608bf, 0x2);                /* jnz 0x101608bf */
l_0x101608bd:
    II(0x101608bd, 0x2)   jmpd(0x101608c8, 0x9);                /* jmp 0x101608c8 */
l_0x101608bf:
    II(0x101608bf, 0x7)   test(memd_a32(ss, ebp - 0x30), 0x10008); /* test dword [ebp-0x30], 0x10008 */
    II(0x101608c6, 0x2)   jzd(0x101608ca, 0x2);                 /* jz 0x101608ca */
l_0x101608c8:
    II(0x101608c8, 0x2)   jmpd(0x101608de, 0x14);               /* jmp 0x101608de */
l_0x101608ca:
    II(0x101608ca, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x30));   /* mov ebx, [ebp-0x30] */
    II(0x101608cd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x101608d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x101608d5, 0x5)   calld(0x10074112, -0xec7c8);          /* call 0x10074112 */
    II(0x101608da, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101608dc, 0x2)   jnzd(0x101608e0, 0x2);                /* jnz 0x101608e0 */
l_0x101608de:
    II(0x101608de, 0x2)   jmpd(0x10160935, 0x55);               /* jmp 0x10160935 */
l_0x101608e0:
    II(0x101608e0, 0x7)   test(memd_a32(ss, ebp - 0x30), 0x10); /* test dword [ebp-0x30], 0x10 */
    II(0x101608e7, 0x2)   jzd(0x101608f2, 0x9);                 /* jz 0x101608f2 */
    II(0x101608e9, 0x7)   mov(memd_a32(ss, ebp - 0x3c), 0xd);   /* mov dword [ebp-0x3c], 0xd */
    II(0x101608f0, 0x2)   jmpd(0x101608f9, 0x7);                /* jmp 0x101608f9 */
l_0x101608f2:
    II(0x101608f2, 0x7)   mov(memd_a32(ss, ebp - 0x3c), 0xe);   /* mov dword [ebp-0x3c], 0xe */
l_0x101608f9:
    II(0x101608f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x101608fc, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101608ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160902, 0x5)   calld(0x101509a6, -0xff61);           /* call 0x101509a6 */
    II(0x10160907, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1016090a, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016090c, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1016090f, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10160911, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10160913, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10160916, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160919, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1016091c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1016091f, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10160922, 0x7)   cmp(memb_a32(ds, eax + 0x101c81d5), 0x1); /* cmp byte [eax+0x101c81d5], 0x1 */
    II(0x10160929, 0x2)   jnzd(0x10160935, 0xa);                /* jnz 0x10160935 */
    II(0x1016092b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1016092e, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x10160932, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
l_0x10160935:
    II(0x10160935, 0x7)   test(memd_a32(ss, ebp - 0x30), 0x340); /* test dword [ebp-0x30], 0x340 */
    II(0x1016093c, 0x2)   jzd(0x10160947, 0x9);                 /* jz 0x10160947 */
    II(0x1016093e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160941, 0x4)   test(memb_a32(ds, eax + 0x14), 0x1);  /* test byte [eax+0x14], 0x1 */
    II(0x10160945, 0x2)   jzd(0x10160949, 0x2);                 /* jz 0x10160949 */
l_0x10160947:
    II(0x10160947, 0x2)   jmpd(0x1016098e, 0x45);               /* jmp 0x1016098e */
l_0x10160949:
    II(0x10160949, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1016094d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10160951, 0x5)   calld(0x100744db, -0xec47b);          /* call 0x100744db */
    II(0x10160956, 0x7)   test(memd_a32(ss, ebp - 0x30), 0x10); /* test dword [ebp-0x30], 0x10 */
    II(0x1016095d, 0x2)   jzd(0x1016098e, 0x2f);                /* jz 0x1016098e */
    II(0x1016095f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10160963, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10160966, 0x1)   inc(eax);                             /* inc eax */
    II(0x10160967, 0x1)   cwde();                               /* cwde */
    II(0x10160968, 0x5)   calld(0x100744db, -0xec492);          /* call 0x100744db */
    II(0x1016096d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10160970, 0x1)   inc(eax);                             /* inc eax */
    II(0x10160971, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10160974, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10160978, 0x5)   calld(0x100744db, -0xec4a2);          /* call 0x100744db */
    II(0x1016097d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10160980, 0x1)   inc(eax);                             /* inc eax */
    II(0x10160981, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10160984, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10160987, 0x1)   inc(eax);                             /* inc eax */
    II(0x10160988, 0x1)   cwde();                               /* cwde */
    II(0x10160989, 0x5)   calld(0x100744db, -0xec4b3);          /* call 0x100744db */
l_0x1016098e:
    II(0x1016098e, 0x5)   cmp(memw_a32(ss, ebp - 0x24), 0x29);  /* cmp word [ebp-0x24], 0x29 */
    II(0x10160993, 0x2)   jzd(0x101609a0, 0xb);                 /* jz 0x101609a0 */
    II(0x10160995, 0x5)   cmp(memw_a32(ss, ebp - 0x24), 0x2a);  /* cmp word [ebp-0x24], 0x2a */
    II(0x1016099a, 0x6)   jnzd(0x10160a4b, 0xab);               /* jnz dword 0x10160a4b */
l_0x101609a0:
    II(0x101609a0, 0x5)   mov(ecx, 0x180);                      /* mov ecx, 0x180 */
    II(0x101609a5, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x101609a9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x101609ad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x101609b1, 0x5)   calld(0x1007459a, -0xec41c);          /* call 0x1007459a */
    II(0x101609b6, 0x3)   lea(ebx, ebp - 0x40);                 /* lea ebx, [ebp-0x40] */
    II(0x101609b9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101609bb, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x101609bd, 0x5)   calld(0x100766ac, -0xea316);          /* call 0x100766ac */
    II(0x101609c2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101609c4, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x101609c7, 0x5)   calld(0x1013ad11, -0x25cbb);          /* call 0x1013ad11 */
    II(0x101609cc, 0x2)   test(al, al);                         /* test al, al */
    II(0x101609ce, 0x2)   jzd(0x101609ea, 0x1a);                /* jz 0x101609ea */
    II(0x101609d0, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x101609d4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x101609d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101609db, 0x5)   calld(0x10074f1e, -0xebac2);          /* call 0x10074f1e */
    II(0x101609e0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101609e2, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x101609e5, 0x5)   calld(0x10076630, -0xea3ba);          /* call 0x10076630 */
l_0x101609ea:
    II(0x101609ea, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101609ec, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x101609ef, 0x5)   calld(0x1013ad71, -0x25c83);          /* call 0x1013ad71 */
    II(0x101609f4, 0x2)   test(al, al);                         /* test al, al */
    II(0x101609f6, 0x2)   jzd(0x10160a3a, 0x42);                /* jz 0x10160a3a */
    II(0x101609f8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x101609fc, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x101609ff, 0x5)   calld(0x10076574, -0xea490);          /* call 0x10076574 */
    II(0x10160a04, 0x5)   calld(0x1014f634, -0x113d5);          /* call 0x1014f634 */
    II(0x10160a09, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10160a0c, 0x5)   calld(0x10076574, -0xea49d);          /* call 0x10076574 */
    II(0x10160a11, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10160a13, 0x3)   mov(dl, memb_a32(ds, eax + 0x29));    /* mov dl, [eax+0x29] */
    II(0x10160a16, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x10160a19, 0x5)   mov(ebx, 0x7);                        /* mov ebx, 0x7 */
    II(0x10160a1e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10160a20, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10160a23, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10160a25, 0x3)   movsx(ecx, dx);                       /* movsx ecx, dx */
    II(0x10160a28, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10160a2a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10160a2d, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10160a30, 0x5)   calld(0x10076574, -0xea4c1);          /* call 0x10076574 */
    II(0x10160a35, 0x5)   calld(0x1014a8f2, -0x16148);          /* call 0x1014a8f2 */
l_0x10160a3a:
    II(0x10160a3a, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffffffff); /* mov dword [ebp-0x14], 0xffffffff */
    II(0x10160a41, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10160a43, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10160a46, 0x5)   calld(0x10075f2c, -0xeab1f);          /* call 0x10075f2c */
l_0x10160a4b:
    II(0x10160a4b, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10160a4f, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10160a52, 0x5)   calld(0x100764fc, -0xea55b);          /* call 0x100764fc */
    II(0x10160a57, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10160a5a, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10160a5e, 0x5)   cmp(memw_a32(ss, ebp - 0x24), 0xa);   /* cmp word [ebp-0x24], 0xa */
    II(0x10160a63, 0x2)   jzd(0x10160a6c, 0x7);                 /* jz 0x10160a6c */
    II(0x10160a65, 0x5)   cmp(memw_a32(ss, ebp - 0x24), 0x1b);  /* cmp word [ebp-0x24], 0x1b */
    II(0x10160a6a, 0x2)   jnzd(0x10160a84, 0x18);               /* jnz 0x10160a84 */
l_0x10160a6c:
    II(0x10160a6c, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x10160a71, 0x5)   calld(0x10076338, -0xea73e);          /* call 0x10076338 */
    II(0x10160a76, 0x3)   lea(ebx, ebp - 0x38);                 /* lea ebx, [ebp-0x38] */
    II(0x10160a79, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10160a7b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10160a7d, 0x5)   calld(0x1007643c, -0xea646);          /* call 0x1007643c */
    II(0x10160a82, 0x2)   jmpd(0x10160a9a, 0x16);               /* jmp 0x10160a9a */
l_0x10160a84:
    II(0x10160a84, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x10160a89, 0x5)   calld(0x10076338, -0xea756);          /* call 0x10076338 */
    II(0x10160a8e, 0x3)   lea(ebx, ebp - 0x38);                 /* lea ebx, [ebp-0x38] */
    II(0x10160a91, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10160a93, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10160a95, 0x5)   calld(0x1007643c, -0xea65e);          /* call 0x1007643c */
l_0x10160a9a:
    II(0x10160a9a, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x10160a9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160aa0, 0x5)   calld(0x10072eb4, -0xedbf1);          /* call 0x10072eb4 */
    II(0x10160aa5, 0x2)   test(al, al);                         /* test al, al */
    II(0x10160aa7, 0x6)   jzd(0x10160b8f, 0xe2);                /* jz dword 0x10160b8f */
    II(0x10160aad, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10160ab0, 0x5)   calld(0x100763a0, -0xea715);          /* call 0x100763a0 */
    II(0x10160ab5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x48);   /* cmp word [eax+0x8], 0x48 */
    II(0x10160aba, 0x2)   jzd(0x10160acb, 0xf);                 /* jz 0x10160acb */
    II(0x10160abc, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10160abf, 0x5)   calld(0x100763a0, -0xea724);          /* call 0x100763a0 */
    II(0x10160ac4, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x10160ac9, 0x2)   jnzd(0x10160acd, 0x2);                /* jnz 0x10160acd */
l_0x10160acb:
    II(0x10160acb, 0x2)   jmpd(0x10160adc, 0xf);                /* jmp 0x10160adc */
l_0x10160acd:
    II(0x10160acd, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10160ad0, 0x5)   calld(0x100763a0, -0xea735);          /* call 0x100763a0 */
    II(0x10160ad5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x10160ada, 0x2)   jnzd(0x10160b4e, 0x72);               /* jnz 0x10160b4e */
l_0x10160adc:
    II(0x10160adc, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x10160ae1, 0x5)   calld(0x10076338, -0xea7ae);          /* call 0x10076338 */
    II(0x10160ae6, 0x3)   lea(ebx, ebp - 0x44);                 /* lea ebx, [ebp-0x44] */
    II(0x10160ae9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10160aeb, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10160aed, 0x5)   calld(0x100764b8, -0xea63a);          /* call 0x100764b8 */
l_0x10160af2:
    II(0x10160af2, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x10160af5, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10160af8, 0x5)   calld(0x10076408, -0xea6f5);          /* call 0x10076408 */
    II(0x10160afd, 0x5)   calld(0x10072eb4, -0xedc4e);          /* call 0x10072eb4 */
    II(0x10160b02, 0x2)   test(al, al);                         /* test al, al */
    II(0x10160b04, 0x2)   jzd(0x10160b44, 0x3e);                /* jz 0x10160b44 */
    II(0x10160b06, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x10160b09, 0x5)   calld(0x100763a0, -0xea76e);          /* call 0x100763a0 */
    II(0x10160b0e, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10160b11, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10160b16, 0x6)   imul(edx, eax, 0x247);                /* imul edx, eax, 0x247 */
    II(0x10160b1c, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x10160b1f, 0x5)   calld(0x100763a0, -0xea784);          /* call 0x100763a0 */
    II(0x10160b24, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10160b27, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10160b2a, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10160b2c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10160b2e, 0x7)   inc(memw_a32(ds, eax + 0x101ca5e9));  /* inc word [eax+0x101ca5e9] */
    II(0x10160b35, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x10160b38, 0x5)   calld(0x10076408, -0xea735);          /* call 0x10076408 */
    II(0x10160b3d, 0x5)   calld(0x1015f2cc, -0x1876);           /* call 0x1015f2cc */
    II(0x10160b42, 0x2)   jmpd(0x10160af2, -0x52);              /* jmp 0x10160af2 */
l_0x10160b44:
    II(0x10160b44, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10160b46, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x10160b49, 0x5)   calld(0x10075f6c, -0xeabe2);          /* call 0x10075f6c */
l_0x10160b4e:
    II(0x10160b4e, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10160b51, 0x5)   calld(0x100763a0, -0xea7b6);          /* call 0x100763a0 */
    II(0x10160b56, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10160b59, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10160b5e, 0x6)   imul(edx, eax, 0x247);                /* imul edx, eax, 0x247 */
    II(0x10160b64, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10160b67, 0x5)   calld(0x100763a0, -0xea7cc);          /* call 0x100763a0 */
    II(0x10160b6c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10160b6f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10160b72, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10160b74, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10160b76, 0x7)   inc(memw_a32(ds, eax + 0x101ca5e9));  /* inc word [eax+0x101ca5e9] */
    II(0x10160b7d, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10160b80, 0x5)   calld(0x10076408, -0xea77d);          /* call 0x10076408 */
    II(0x10160b85, 0x5)   calld(0x1015f2cc, -0x18be);           /* call 0x1015f2cc */
    II(0x10160b8a, 0x5)   jmpd(0x10160a9a, -0xf5);              /* jmp 0x10160a9a */
l_0x10160b8f:
    II(0x10160b8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10160b92, 0x5)   calld(0x1015f2cc, -0x18cb);           /* call 0x1015f2cc */
    II(0x10160b97, 0x7)   test(memd_a32(ss, ebp - 0x30), 0x200); /* test dword [ebp-0x30], 0x200 */
    II(0x10160b9e, 0x2)   jzd(0x10160bba, 0x1a);                /* jz 0x10160bba */
    II(0x10160ba0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10160ba4, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10160baa, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10160bb0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10160bb5, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10160bb8, 0x2)   jnzd(0x10160bbc, 0x2);                /* jnz 0x10160bbc */
l_0x10160bba:
    II(0x10160bba, 0x2)   jmpd(0x10160bd5, 0x19);               /* jmp 0x10160bd5 */
l_0x10160bbc:
    II(0x10160bbc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10160bc0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10160bc4, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10160bca, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10160bd0, 0x5)   calld(0x100df3dc, -0x817f9);          /* call 0x100df3dc */
l_0x10160bd5:
    II(0x10160bd5, 0x7)   test(memd_a32(ss, ebp - 0x30), 0x800010); /* test dword [ebp-0x30], 0x800010 */
    II(0x10160bdc, 0x2)   jnzd(0x10160be7, 0x9);                /* jnz 0x10160be7 */
    II(0x10160bde, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10160be2, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10160be5, 0x2)   jnzd(0x10160be9, 0x2);                /* jnz 0x10160be9 */
l_0x10160be7:
    II(0x10160be7, 0x2)   jmpd(0x10160bf6, 0xd);                /* jmp 0x10160bf6 */
l_0x10160be9:
    II(0x10160be9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10160bed, 0x3)   cmp(eax, 0xb);                        /* cmp eax, 0xb */
    II(0x10160bf0, 0x6)   jnzd(0x10160c7a, 0x84);               /* jnz dword 0x10160c7a */
l_0x10160bf6:
    II(0x10160bf6, 0x5)   cmp(memw_a32(ss, ebp - 0x24), 0x31);  /* cmp word [ebp-0x24], 0x31 */
    II(0x10160bfb, 0x2)   jnzd(0x10160c06, 0x9);                /* jnz 0x10160c06 */
    II(0x10160bfd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10160c01, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10160c04, 0x2)   jzd(0x10160c08, 0x2);                 /* jz 0x10160c08 */
l_0x10160c06:
    II(0x10160c06, 0x2)   jmpd(0x10160c0f, 0x7);                /* jmp 0x10160c0f */
l_0x10160c08:
    II(0x10160c08, 0x5)   cmp(memw_a32(ss, ebp - 0x14), 0xe);   /* cmp word [ebp-0x14], 0xe */
    II(0x10160c0d, 0x2)   jzd(0x10160c11, 0x2);                 /* jz 0x10160c11 */
l_0x10160c0f:
    II(0x10160c0f, 0x2)   jmpd(0x10160c5d, 0x4c);               /* jmp 0x10160c5d */
l_0x10160c11:
    II(0x10160c11, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x10160c15, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10160c19, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10160c1d, 0x5)   calld(0x10073f48, -0xeccda);          /* call 0x10073f48 */
    II(0x10160c22, 0x3)   lea(ebx, ebp - 0x48);                 /* lea ebx, [ebp-0x48] */
    II(0x10160c25, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10160c27, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10160c29, 0x5)   calld(0x100766ac, -0xea582);          /* call 0x100766ac */
    II(0x10160c2e, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10160c31, 0x5)   calld(0x10076574, -0xea6c2);          /* call 0x10076574 */
    II(0x10160c36, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x10160c3a, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10160c3d, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10160c40, 0x5)   calld(0x10076574, -0xea6d1);          /* call 0x10076574 */
    II(0x10160c45, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x10160c49, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10160c4c, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xd);   /* mov dword [ebp-0x14], 0xd */
    II(0x10160c53, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10160c55, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10160c58, 0x5)   calld(0x10075f2c, -0xead31);          /* call 0x10075f2c */
l_0x10160c5d:
    II(0x10160c5d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10160c5f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10160c60, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10160c62, 0x1)   pushd(eax);                           /* push eax */
    II(0x10160c63, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10160c68, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10160c6d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10160c71, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10160c75, 0x5)   calld(0x10074395, -0xec8e5);          /* call 0x10074395 */
l_0x10160c7a:
    II(0x10160c7a, 0x5)   cmp(memw_a32(ss, ebp - 0x14), -0x1 /* 0xff */); /* cmp word [ebp-0x14], 0xff */
    II(0x10160c7f, 0x2)   jzd(0x10160cfd, 0x7c);                /* jz 0x10160cfd */
    II(0x10160c81, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10160c85, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10160c88, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c6)); /* mov eax, [eax+0x101c81c6] */
    II(0x10160c8e, 0x3)   mov(al, memb_a32(ds, eax + 0x1));     /* mov al, [eax+0x1] */
    II(0x10160c91, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10160c93, 0x1)   dec(eax);                             /* dec eax */
    II(0x10160c94, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x10160c97, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4c)); /* movsx edx, word [ebp-0x4c] */
    II(0x10160c9b, 0x5)   calld(/* sys */ 0x10165e9b, 0x51fb);  /* call 0x10165e9b */
    II(0x10160ca0, 0x1)   inc(edx);                             /* inc edx */
    II(0x10160ca1, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10160ca4, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x10160ca7, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x10160caa, 0x5)   calld(0x10102b84, -0x5e12b);          /* call 0x10102b84 */
    II(0x10160caf, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10160cb4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10160cb5, 0x5)   calld(0x10102ba4, -0x5e116);          /* call 0x10102ba4 */
    II(0x10160cba, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10160cbf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10160cc0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4c)); /* movsx eax, word [ebp-0x4c] */
    II(0x10160cc4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10160cc5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10160cc9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10160cca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10160cce, 0x1)   pushd(eax);                           /* push eax */
    II(0x10160ccf, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10160cd1, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x10160cd5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10160cd9, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x10160cdc, 0x5)   calld(0x1015a2da, -0x6a07);           /* call 0x1015a2da */
    II(0x10160ce1, 0x5)   calld(0x100765d0, -0xea716);          /* call 0x100765d0 */
    II(0x10160ce6, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x10160ce9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10160ceb, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x10160cee, 0x5)   calld(0x10075f2c, -0xeadc7);          /* call 0x10075f2c */
    II(0x10160cf3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10160cf6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x54));   /* mov edx, [ebp-0x54] */
    II(0x10160cf9, 0x4)   mov(memw_a32(ds, edx + 0x52), ax);    /* mov [edx+0x52], ax */
l_0x10160cfd:
    II(0x10160cfd, 0x7)   mov(memb_a32(ds, 0x101c391b), 0x1);   /* mov byte [0x101c391b], 0x1 */
    II(0x10160d04, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10160d06, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10160d09, 0x5)   calld(0x10075f6c, -0xeada2);          /* call 0x10075f6c */
    II(0x10160d0e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10160d10, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10160d11, 0x1)   popd(edi);                            /* pop edi */
    II(0x10160d12, 0x1)   popd(esi);                            /* pop esi */
    II(0x10160d13, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10160d14, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10160d15, 0x1)   retd();                               /* ret */
FUNC_END

