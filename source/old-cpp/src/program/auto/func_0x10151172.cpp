FUNC_BEGIN(0x10151172, 0xf8290815290cb044, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0xd6, 0x4b, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0x89, 0x2d, 0xf2, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0xe3, 0x54, 0xf2, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xa3, 0x53, 0xf2, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x95, 0x53, 0xf2, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0xbf, 0x58, 0xf2, 0xff, 0xf7, 0x45, 0xf4, 0x10, 0, 0, 0, 0xf, 0x84, 0xe1, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xee, 0x58, 0xf2, 0xff, 0x8b, 0x45, 0xec, 0x66, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0x8b, 0x45, 0xe8, 0x66, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xe8, 0x83, 0xc0, 0x2, 0x39, 0xc2, 0xf, 0x8d, 0xb6, 0, 0, 0, 0x8b, 0x45, 0xee, 0x66, 0x89, 0x45, 0xea, 0xeb, 0x7, 0x8b, 0x45, 0xea, 0x66, 0xff, 0x45, 0xea, 0xf, 0xbf, 0x45, 0xee, 0xf, 0xbf, 0x55, 0xea, 0x83, 0xc0, 0x2, 0x39, 0xc2, 0xf, 0x8d, 0x8e, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xea, 0xf, 0xbf, 0x55, 0xe8, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0xe7, 0x22, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x54, 0x52, 0xf2, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x8a, 0x59, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xf9, 0x9a, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x4b, 0x8d, 0x45, 0xe4, 0xe8, 0x1c, 0x51, 0xf2, 0xff, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xd, 0x51, 0xf2, 0xff, 0x66, 0x83, 0x78, 0x8, 0x47, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xfc, 0x50, 0xf2, 0xff, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x1a, 0x8d, 0x55, 0xec, 0x8d, 0x45, 0xe0, 0xe8, 0xae, 0x4b, 0xf2, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x14, 0x51, 0xf2, 0xff, 0xe8, 0xe5, 0xfc, 0xff, 0xff, 0xeb, 0x9f, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x9b, 0x4c, 0xf2, 0xff, 0xe9, 0x58, 0xff, 0xff, 0xff, 0xe9, 0x30, 0xff, 0xff, 0xff, 0xf7, 0x45, 0xf4, 0, 0, 0, 0x1, 0xf, 0x84, 0x9f, 0, 0, 0, 0xf7, 0x45, 0xf4, 0x10, 0, 0, 0, 0x74, 0x9, 0xc7, 0x45, 0xdc, 0x11, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0x12, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0xe8, 0x78, 0x18, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x8d, 0x18, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xd8, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc6, 0x81, 0x1c, 0x10, 0x31, 0xd2, 0x8a, 0x50, 0x1, 0xe8, 0x67, 0x4b, 0x1, 0, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xee, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0x31, 0xc9, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xd4, 0xe8, 0x7b, 0x8f, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0xd, 0x52, 0xf2, 0xff, 0xc6, 0x40, 0x2d, 0x4, 0xba, 0x20, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x88, 0x52, 0xf2, 0xff, 0xe8, 0x8d, 0x1b, 0x1, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xa5, 0x4b, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x9b, 0x4b, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10151172, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x10151177, 0x5)   calld(sys_check_available_stack_size, 0x14bd6); /* call 0x10165d52 */
    II(0x1015117c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015117d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015117e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015117f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10151180, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10151181, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10151183, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x10151189, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1015118c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1015118f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10151193, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10151196, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c0)); /* mov eax, [eax+0x101c81c0] */
    II(0x1015119c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015119f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101511a2, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x101511a5, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101511a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101511ab, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x101511ae, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101511b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101511b4, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x101511b7, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101511b9, 0x1)   cwde();                               /* cwde */
    II(0x101511ba, 0x5)   calld(0x10073f48, -0xdd277);          /* call 0x10073f48 */
    II(0x101511bf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101511c1, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x101511c4, 0x5)   calld(0x100766ac, -0xdab1d);          /* call 0x100766ac */
    II(0x101511c9, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x101511cc, 0x5)   calld(0x10076574, -0xdac5d);          /* call 0x10076574 */
    II(0x101511d1, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x101511d4, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101511d7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x101511da, 0x5)   calld(0x10076574, -0xdac6b);          /* call 0x10076574 */
    II(0x101511df, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x101511e2, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101511e5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101511e8, 0x5)   calld(0x10076aac, -0xda741);          /* call 0x10076aac */
    II(0x101511ed, 0x7)   test(memd_a32(ss, ebp - 0xc), 0x10);  /* test dword [ebp-0xc], 0x10 */
    II(0x101511f4, 0x6)   jzd(0x101512db, 0xe1);                /* jz dword 0x101512db */
    II(0x101511fa, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101511fd, 0x5)   calld(my_ctor_0x101b4184, -0xda712);  /* call 0x10076af0 */
    II(0x10151202, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10151205, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x10151209, 0x2)   jmpd(0x10151212, 0x7);                /* jmp 0x10151212 */
l_0x1015120b:
    II(0x1015120b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015120e, 0x4)   inc(memw_a32(ss, ebp - 0x18));        /* inc word [ebp-0x18] */
l_0x10151212:
    II(0x10151212, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10151216, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1015121a, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x1015121d, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1015121f, 0x6)   jged(0x101512db, 0xb6);               /* jge dword 0x101512db */
    II(0x10151225, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x10151228, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x1015122c, 0x2)   jmpd(0x10151235, 0x7);                /* jmp 0x10151235 */
l_0x1015122e:
    II(0x1015122e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x10151231, 0x4)   inc(memw_a32(ss, ebp - 0x16));        /* inc word [ebp-0x16] */
l_0x10151235:
    II(0x10151235, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x10151239, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x16)); /* movsx edx, word [ebp-0x16] */
    II(0x1015123d, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10151240, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10151242, 0x6)   jged(0x101512d6, 0x8e);               /* jge dword 0x101512d6 */
    II(0x10151248, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x16)); /* movsx ebx, word [ebp-0x16] */
    II(0x1015124c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10151250, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x10151255, 0x5)   calld(0x10103541, -0x4dd19);          /* call 0x10103541 */
    II(0x1015125a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015125c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015125f, 0x5)   calld(0x100764b8, -0xdadac);          /* call 0x100764b8 */
    II(0x10151264, 0x2)   jmpd(0x1015126e, 0x8);                /* jmp 0x1015126e */
l_0x10151266:
    II(0x10151266, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151269, 0x5)   calld(0x10076bf8, -0xda676);          /* call 0x10076bf8 */
l_0x1015126e:
    II(0x1015126e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151270, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151273, 0x5)   calld(0x1013ad71, -0x16507);          /* call 0x1013ad71 */
    II(0x10151278, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015127a, 0x2)   jzd(0x101512c7, 0x4b);                /* jz 0x101512c7 */
    II(0x1015127c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015127f, 0x5)   calld(0x100763a0, -0xdaee4);          /* call 0x100763a0 */
    II(0x10151284, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x10151289, 0x2)   jzd(0x1015129a, 0xf);                 /* jz 0x1015129a */
    II(0x1015128b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015128e, 0x5)   calld(0x100763a0, -0xdaef3);          /* call 0x100763a0 */
    II(0x10151293, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x47);   /* cmp word [eax+0x8], 0x47 */
    II(0x10151298, 0x2)   jnzd(0x1015129c, 0x2);                /* jnz 0x1015129c */
l_0x1015129a:
    II(0x1015129a, 0x2)   jmpd(0x101512ab, 0xf);                /* jmp 0x101512ab */
l_0x1015129c:
    II(0x1015129c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015129f, 0x5)   calld(0x100763a0, -0xdaf04);          /* call 0x100763a0 */
    II(0x101512a4, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x101512a9, 0x2)   jnzd(0x101512c5, 0x1a);               /* jnz 0x101512c5 */
l_0x101512ab:
    II(0x101512ab, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x101512ae, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101512b1, 0x5)   calld(0x10075e64, -0xdb452);          /* call 0x10075e64 */
    II(0x101512b6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101512b8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x101512bb, 0x5)   calld(0x100763d4, -0xdaeec);          /* call 0x100763d4 */
    II(0x101512c0, 0x5)   calld(0x10150faa, -0x31b);            /* call 0x10150faa */
l_0x101512c5:
    II(0x101512c5, 0x2)   jmpd(0x10151266, -0x61);              /* jmp 0x10151266 */
l_0x101512c7:
    II(0x101512c7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101512c9, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x101512cc, 0x5)   calld(0x10075f6c, -0xdb365);          /* call 0x10075f6c */
    II(0x101512d1, 0x5)   jmpd(0x1015122e, -0xa8);              /* jmp 0x1015122e */
l_0x101512d6:
    II(0x101512d6, 0x5)   jmpd(0x1015120b, -0xd0);              /* jmp 0x1015120b */
l_0x101512db:
    II(0x101512db, 0x7)   test(memd_a32(ss, ebp - 0xc), 0x1000000); /* test dword [ebp-0xc], 0x1000000 */
    II(0x101512e2, 0x6)   jzd(0x10151387, 0x9f);                /* jz dword 0x10151387 */
    II(0x101512e8, 0x7)   test(memd_a32(ss, ebp - 0xc), 0x10);  /* test dword [ebp-0xc], 0x10 */
    II(0x101512ef, 0x2)   jzd(0x101512fa, 0x9);                 /* jz 0x101512fa */
    II(0x101512f1, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0x11);  /* mov dword [ebp-0x24], 0x11 */
    II(0x101512f8, 0x2)   jmpd(0x10151301, 0x7);                /* jmp 0x10151301 */
l_0x101512fa:
    II(0x101512fa, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0x12);  /* mov dword [ebp-0x24], 0x12 */
l_0x10151301:
    II(0x10151301, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10151304, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10151307, 0x5)   calld(0x10102b84, -0x4e788);          /* call 0x10102b84 */
    II(0x1015130c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10151311, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151312, 0x5)   calld(0x10102ba4, -0x4e773);          /* call 0x10102ba4 */
    II(0x10151317, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015131c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015131d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10151321, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10151324, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c6)); /* mov eax, [eax+0x101c81c6] */
    II(0x1015132a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015132c, 0x3)   mov(dl, memb_a32(ds, eax + 0x1));     /* mov dl, [eax+0x1] */
    II(0x1015132f, 0x5)   calld(/* sys */ 0x10165e9b, 0x14b67); /* call 0x10165e9b */
    II(0x10151334, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10151337, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x1015133a, 0x1)   cwde();                               /* cwde */
    II(0x1015133b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015133c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x10151340, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151341, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10151345, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151346, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10151348, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1015134b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015134d, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x10151350, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10151353, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x10151357, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1015135a, 0x5)   calld(0x1015a2da, 0x8f7b);            /* call 0x1015a2da */
    II(0x1015135f, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10151362, 0x5)   calld(0x10076574, -0xdadf3);          /* call 0x10076574 */
    II(0x10151367, 0x4)   mov(memb_a32(ds, eax + 0x2d), 0x4);   /* mov byte [eax+0x2d], 0x4 */
    II(0x1015136b, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x10151370, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10151373, 0x5)   calld(0x10076600, -0xdad78);          /* call 0x10076600 */
    II(0x10151378, 0x5)   calld(0x10162f0a, 0x11b8d);           /* call 0x10162f0a */
    II(0x1015137d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015137f, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10151382, 0x5)   calld(0x10075f2c, -0xdb45b);          /* call 0x10075f2c */
l_0x10151387:
    II(0x10151387, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151389, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015138c, 0x5)   calld(0x10075f2c, -0xdb465);          /* call 0x10075f2c */
    II(0x10151391, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10151393, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10151394, 0x1)   popd(edi);                            /* pop edi */
    II(0x10151395, 0x1)   popd(esi);                            /* pop esi */
    II(0x10151396, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10151397, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10151398, 0x1)   retd();                               /* ret */
FUNC_END

