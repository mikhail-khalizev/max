FUNC_BEGIN(0x1010bf06, 0xf91988e8a2cf953a, 0x20, ({0x68, 0xc0, 0x3, 0, 0, 0xe8, 0x42, 0x9e, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xa4, 0x3, 0, 0, 0x88, 0x45, 0xfc, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xfc, 0x88, 0x85, 0x74, 0xfc, 0xff, 0xff, 0x8d, 0x85, 0x68, 0xfc, 0xff, 0xff, 0xe8, 0x78, 0xeb, 0xff, 0xff, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0x75, 0x5, 0xe8, 0x4d, 0xed, 0x1, 0, 0xe8, 0xbc, 0xf2, 0x5, 0, 0x89, 0x85, 0x75, 0xfc, 0xff, 0xff, 0x83, 0xbd, 0x75, 0xfc, 0xff, 0xff, 0, 0x7e, 0xc, 0x81, 0xbd, 0x75, 0xfc, 0xff, 0xff, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x83, 0x7d, 0xa9, 0, 0xf, 0x84, 0x85, 0, 0, 0, 0x8b, 0x95, 0x75, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xa9, 0xe8, 0xfe, 0xf2, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x4d, 0x83, 0xbd, 0x75, 0xfc, 0xff, 0xff, 0x1b, 0x74, 0x9, 0x83, 0xbd, 0x75, 0xfc, 0xff, 0xff, 0xd, 0x75, 0x2c, 0x83, 0xbd, 0x75, 0xfc, 0xff, 0xff, 0xd, 0x75, 0x9, 0xc6, 0x85, 0x64, 0xfc, 0xff, 0xff, 0x1, 0xeb, 0x7, 0xc6, 0x85, 0x64, 0xfc, 0xff, 0xff, 0, 0x31, 0xd2, 0x8a, 0x95, 0x64, 0xfc, 0xff, 0xff, 0x8d, 0x85, 0x68, 0xfc, 0xff, 0xff, 0xe8, 0x5c, 0xf5, 0xff, 0xff, 0xc7, 0x85, 0x75, 0xfc, 0xff, 0xff, 0, 0, 0, 0, 0xe9, 0xe6, 0, 0, 0, 0x83, 0xbd, 0x75, 0xfc, 0xff, 0xff, 0, 0x7e, 0x1d, 0xba, 0xd, 0, 0, 0, 0x8b, 0x45, 0xa9, 0xe8, 0x97, 0xf2, 0xfd, 0xff, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x68, 0xfc, 0xff, 0xff, 0xe8, 0x27, 0xf5, 0xff, 0xff, 0xc7, 0x85, 0x60, 0xfc, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x60, 0xfc, 0xff, 0xff, 0xff, 0x85, 0x60, 0xfc, 0xff, 0xff, 0x83, 0xbd, 0x60, 0xfc, 0xff, 0xff, 0x33, 0xf, 0x8d, 0x9b, 0, 0, 0, 0x8b, 0x85, 0x60, 0xfc, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x83, 0xbc, 0x28, 0xdd, 0xfe, 0xff, 0xff, 0, 0xf, 0x84, 0x7f, 0, 0, 0, 0x6b, 0x95, 0x60, 0xfc, 0xff, 0xff, 0xc, 0x8b, 0x85, 0x75, 0xfc, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x7d, 0xfc, 0xff, 0xff, 0x75, 0x14, 0x6b, 0x85, 0x60, 0xfc, 0xff, 0xff, 0xc, 0x8b, 0x84, 0x28, 0x79, 0xfc, 0xff, 0xff, 0x89, 0x85, 0x75, 0xfc, 0xff, 0xff, 0x6b, 0x95, 0x60, 0xfc, 0xff, 0xff, 0xc, 0x8b, 0x85, 0x75, 0xfc, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x79, 0xfc, 0xff, 0xff, 0x75, 0x3f, 0x80, 0x7d, 0xf8, 0, 0x75, 0x15, 0x8b, 0x85, 0x60, 0xfc, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0xdd, 0xfe, 0xff, 0xff, 0xe8, 0x2b, 0x3b, 0xfc, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x81, 0x85, 0x75, 0xfc, 0xff, 0xff, 0x18, 0xfc, 0xff, 0xff, 0x6b, 0x95, 0x60, 0xfc, 0xff, 0xff, 0xc, 0x8d, 0x85, 0x68, 0xfc, 0xff, 0xff, 0xff, 0x94, 0x2a, 0x81, 0xfc, 0xff, 0xff, 0xeb, 0x5, 0xe9, 0x4c, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x6c, 0xfc, 0xff, 0xff, 0, 0x75, 0x9, 0x83, 0xbd, 0x70, 0xfc, 0xff, 0xff, 0, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0x64, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x68, 0xfc, 0xff, 0xff, 0xe8, 0x6d, 0xee, 0xff, 0xff, 0x8b, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0x89, 0x85, 0x5c, 0xfc, 0xff, 0xff, 0x8b, 0x85, 0x5c, 0xfc, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010bf06, 0x5)   pushd(0x3c0);                         /* push dword 0x3c0 */
    II(0x1010bf0b, 0x5)   calld(sys_check_available_stack_size, 0x59e42); /* call 0x10165d52 */
    II(0x1010bf10, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010bf11, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010bf12, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010bf13, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010bf14, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010bf15, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010bf16, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010bf18, 0x6)   sub(esp, 0x3a4);                      /* sub esp, 0x3a4 */
    II(0x1010bf1e, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x1010bf21, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
//    II(0x1010bf25, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1010bf28, 0x6)   mov(memb_a32(ss, ebp - 0x38c), al);   /* mov [ebp+0xfffffc74], al */
    II(0x1010bf2e, 0x6)   lea(eax, ebp - 0x398);                /* lea eax, [ebp+0xfffffc68] */
    II(0x1010bf34, 0x5)   calld(0x1010aab1, -0x1488);           /* call 0x1010aab1 */
l_0x1010bf39:
    II(0x1010bf39, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x1010bf40, 0x2)   jnzd(0x1010bf47, 0x5);                /* jnz 0x1010bf47 */
    II(0x1010bf42, 0x5)   calld(0x1012ac94, 0x1ed4d);           /* call 0x1012ac94 */
l_0x1010bf47:
    II(0x1010bf47, 0x5)   calld(/* sys */ 0x1016b208, 0x5f2bc); /* call 0x1016b208 */
    II(0x1010bf4c, 0x6)   mov(memd_a32(ss, ebp - 0x38b), eax);  /* mov [ebp+0xfffffc75], eax */
    II(0x1010bf52, 0x7)   cmp(memd_a32(ss, ebp - 0x38b), 0);    /* cmp dword [ebp+0xfffffc75], 0x0 */
    II(0x1010bf59, 0x2)   jled(0x1010bf67, 0xc);                /* jle 0x1010bf67 */
    II(0x1010bf5b, 0xa)   cmp(memd_a32(ss, ebp - 0x38b), 0x7000); /* cmp dword [ebp+0xfffffc75], 0x7000 */
    II(0x1010bf65, 0x2)   jld(0x1010bf69, 0x2);                 /* jl 0x1010bf69 */
l_0x1010bf67:
    II(0x1010bf67, 0x2)   jmpd(0x1010bf6d, 0x4);                /* jmp 0x1010bf6d */
l_0x1010bf69:
    II(0x1010bf69, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x1010bf6d:
    II(0x1010bf6d, 0x4)   cmp(memd_a32(ss, ebp - 0x57), 0);     /* cmp dword [ebp-0x57], 0x0 */
    II(0x1010bf71, 0x6)   jzd(0x1010bffc, 0x85);                /* jz dword 0x1010bffc */
    II(0x1010bf77, 0x6)   mov(edx, memd_a32(ss, ebp - 0x38b));  /* mov edx, [ebp+0xfffffc75] */
    II(0x1010bf7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x57));   /* mov eax, [ebp-0x57] */
    II(0x1010bf80, 0x5)   calld(0x100eb283, -0x20d02);          /* call 0x100eb283 */
    II(0x1010bf85, 0x2)   test(al, al);                         /* test al, al */
    II(0x1010bf87, 0x2)   jzd(0x1010bfd6, 0x4d);                /* jz 0x1010bfd6 */
    II(0x1010bf89, 0x7)   cmp(memd_a32(ss, ebp - 0x38b), 0x1b); /* cmp dword [ebp+0xfffffc75], 0x1b */
    II(0x1010bf90, 0x2)   jzd(0x1010bf9b, 0x9);                 /* jz 0x1010bf9b */
    II(0x1010bf92, 0x7)   cmp(memd_a32(ss, ebp - 0x38b), 0xd);  /* cmp dword [ebp+0xfffffc75], 0xd */
    II(0x1010bf99, 0x2)   jnzd(0x1010bfc7, 0x2c);               /* jnz 0x1010bfc7 */
l_0x1010bf9b:
    II(0x1010bf9b, 0x7)   cmp(memd_a32(ss, ebp - 0x38b), 0xd);  /* cmp dword [ebp+0xfffffc75], 0xd */
    II(0x1010bfa2, 0x2)   jnzd(0x1010bfad, 0x9);                /* jnz 0x1010bfad */
    II(0x1010bfa4, 0x7)   mov(memb_a32(ss, ebp - 0x39c), 0x1);  /* mov byte [ebp+0xfffffc64], 0x1 */
    II(0x1010bfab, 0x2)   jmpd(0x1010bfb4, 0x7);                /* jmp 0x1010bfb4 */
l_0x1010bfad:
    II(0x1010bfad, 0x7)   mov(memb_a32(ss, ebp - 0x39c), 0);    /* mov byte [ebp+0xfffffc64], 0x0 */
l_0x1010bfb4:
    II(0x1010bfb4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010bfb6, 0x6)   mov(dl, memb_a32(ss, ebp - 0x39c));   /* mov dl, [ebp+0xfffffc64] */
    II(0x1010bfbc, 0x6)   lea(eax, ebp - 0x398);                /* lea eax, [ebp+0xfffffc68] */
    II(0x1010bfc2, 0x5)   calld(0x1010b523, -0xaa4);            /* call 0x1010b523 */
l_0x1010bfc7:
    II(0x1010bfc7, 0xa)   mov(memd_a32(ss, ebp - 0x38b), 0);    /* mov dword [ebp+0xfffffc75], 0x0 */
    II(0x1010bfd1, 0x5)   jmpd(0x1010c0bc, 0xe6);               /* jmp 0x1010c0bc */
l_0x1010bfd6:
    II(0x1010bfd6, 0x7)   cmp(memd_a32(ss, ebp - 0x38b), 0);    /* cmp dword [ebp+0xfffffc75], 0x0 */
    II(0x1010bfdd, 0x2)   jled(0x1010bffc, 0x1d);               /* jle 0x1010bffc */
    II(0x1010bfdf, 0x5)   mov(edx, 0xd);                        /* mov edx, 0xd */
    II(0x1010bfe4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x57));   /* mov eax, [ebp-0x57] */
    II(0x1010bfe7, 0x5)   calld(0x100eb283, -0x20d69);          /* call 0x100eb283 */
    II(0x1010bfec, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1010bff1, 0x6)   lea(eax, ebp - 0x398);                /* lea eax, [ebp+0xfffffc68] */
    II(0x1010bff7, 0x5)   calld(0x1010b523, -0xad9);            /* call 0x1010b523 */
l_0x1010bffc:
    II(0x1010bffc, 0xa)   mov(memd_a32(ss, ebp - 0x3a0), 0);    /* mov dword [ebp+0xfffffc60], 0x0 */
    II(0x1010c006, 0x2)   jmpd(0x1010c014, 0xc);                /* jmp 0x1010c014 */
l_0x1010c008:
    II(0x1010c008, 0x6)   mov(eax, memd_a32(ss, ebp - 0x3a0));  /* mov eax, [ebp+0xfffffc60] */
    II(0x1010c00e, 0x6)   inc(memd_a32(ss, ebp - 0x3a0));       /* inc dword [ebp+0xfffffc60] */
l_0x1010c014:
    II(0x1010c014, 0x7)   cmp(memd_a32(ss, ebp - 0x3a0), 0x33); /* cmp dword [ebp+0xfffffc60], 0x33 */
    II(0x1010c01b, 0x6)   jged(0x1010c0bc, 0x9b);               /* jge dword 0x1010c0bc */
    II(0x1010c021, 0x6)   mov(eax, memd_a32(ss, ebp - 0x3a0));  /* mov eax, [ebp+0xfffffc60] */
    II(0x1010c027, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010c02a, 0x8)   cmp(memd_a32(ds, eax + ebp - 0x123), 0); /* cmp dword [eax+ebp+0xfffffedd], 0x0 */
    II(0x1010c032, 0x6)   jzd(0x1010c0b7, 0x7f);                /* jz dword 0x1010c0b7 */
    II(0x1010c038, 0x7)   imul(edx, memd_a32(ss, ebp - 0x3a0), 0xc); /* imul edx, [ebp+0xfffffc60], 0xc */
    II(0x1010c03f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x38b));  /* mov eax, [ebp+0xfffffc75] */
    II(0x1010c045, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0x383)); /* cmp eax, [edx+ebp+0xfffffc7d] */
    II(0x1010c04c, 0x2)   jnzd(0x1010c062, 0x14);               /* jnz 0x1010c062 */
    II(0x1010c04e, 0x7)   imul(eax, memd_a32(ss, ebp - 0x3a0), 0xc); /* imul eax, [ebp+0xfffffc60], 0xc */
    II(0x1010c055, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x387)); /* mov eax, [eax+ebp+0xfffffc79] */
    II(0x1010c05c, 0x6)   mov(memd_a32(ss, ebp - 0x38b), eax);  /* mov [ebp+0xfffffc75], eax */
l_0x1010c062:
    II(0x1010c062, 0x7)   imul(edx, memd_a32(ss, ebp - 0x3a0), 0xc); /* imul edx, [ebp+0xfffffc60], 0xc */
    II(0x1010c069, 0x6)   mov(eax, memd_a32(ss, ebp - 0x38b));  /* mov eax, [ebp+0xfffffc75] */
    II(0x1010c06f, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0x387)); /* cmp eax, [edx+ebp+0xfffffc79] */
    II(0x1010c076, 0x2)   jnzd(0x1010c0b7, 0x3f);               /* jnz 0x1010c0b7 */
    II(0x1010c078, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1010c07c, 0x2)   jnzd(0x1010c093, 0x15);               /* jnz 0x1010c093 */
    II(0x1010c07e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x3a0));  /* mov eax, [ebp+0xfffffc60] */
    II(0x1010c084, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010c087, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x123)); /* mov eax, [eax+ebp+0xfffffedd] */
    II(0x1010c08e, 0x5)   calld(0x100cfbbe, -0x3c4d5);          /* call 0x100cfbbe */
l_0x1010c093:
    II(0x1010c093, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1010c097, 0xa)   add(memd_a32(ss, ebp - 0x38b), 0xfffffc18); /* add dword [ebp+0xfffffc75], 0xfffffc18 */
    II(0x1010c0a1, 0x7)   imul(edx, memd_a32(ss, ebp - 0x3a0), 0xc); /* imul edx, [ebp+0xfffffc60], 0xc */
    II(0x1010c0a8, 0x6)   lea(eax, ebp - 0x398);                /* lea eax, [ebp+0xfffffc68] */
    II(0x1010c0ae, 0x7)   calld_abs(memd_a32(ds, edx + ebp - 0x37f)); /* call dword near [edx+ebp+0xfffffc81] */
    II(0x1010c0b5, 0x2)   jmpd(0x1010c0bc, 0x5);                /* jmp 0x1010c0bc */
l_0x1010c0b7:
    II(0x1010c0b7, 0x5)   jmpd(0x1010c008, -0xb4);              /* jmp 0x1010c008 */
l_0x1010c0bc:
    II(0x1010c0bc, 0x7)   cmp(memd_a32(ss, ebp - 0x394), 0);    /* cmp dword [ebp+0xfffffc6c], 0x0 */
    II(0x1010c0c3, 0x2)   jnzd(0x1010c0ce, 0x9);                /* jnz 0x1010c0ce */
    II(0x1010c0c5, 0x7)   cmp(memd_a32(ss, ebp - 0x390), 0);    /* cmp dword [ebp+0xfffffc70], 0x0 */
    II(0x1010c0cc, 0x2)   jzd(0x1010c0d0, 0x2);                 /* jz 0x1010c0d0 */
l_0x1010c0ce:
    II(0x1010c0ce, 0x2)   jmpd(0x1010c0d5, 0x5);                /* jmp 0x1010c0d5 */
l_0x1010c0d0:
    II(0x1010c0d0, 0x5)   jmpd(0x1010bf39, -0x19c);             /* jmp 0x1010bf39 */
l_0x1010c0d5:
    II(0x1010c0d5, 0x6)   lea(eax, ebp - 0x398);                /* lea eax, [ebp+0xfffffc68] */
    II(0x1010c0db, 0x5)   calld(0x1010af4d, -0x1193);           /* call 0x1010af4d */
    II(0x1010c0e0, 0x6)   mov(eax, memd_a32(ss, ebp - 0x394));  /* mov eax, [ebp+0xfffffc6c] */
    II(0x1010c0e6, 0x6)   mov(memd_a32(ss, ebp - 0x3a4), eax);  /* mov [ebp+0xfffffc5c], eax */
//    II(0x1010c0ec, 0x6)   mov(eax, memd_a32(ss, ebp - 0x3a4));  /* mov eax, [ebp+0xfffffc5c] */
    II(0x1010c0f2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010c0f4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010c0f5, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010c0f6, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010c0f7, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010c0f8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010c0f9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010c0fa, 0x1)   retd();                               /* ret */
FUNC_END

