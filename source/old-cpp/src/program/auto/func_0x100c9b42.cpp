FUNC_BEGIN(0x100c9b42, 0xa04f6c3b00ae2b89, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x6, 0xc2, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xc0, 0x8b, 0x55, 0xfc, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xf4, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xc4, 0xc7, 0xfa, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x38, 0xc9, 0xfa, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x6e, 0xd0, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xdd, 0x11, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xb4, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xfc, 0xc7, 0xfa, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf4, 0x39, 0xc2, 0x74, 0x15, 0xf, 0xbf, 0x55, 0xf4, 0x8d, 0x45, 0xf0, 0xe8, 0xe3, 0xc7, 0xfa, 0xff, 0xe8, 0xb2, 0xc4, 0xfa, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xf0, 0xe8, 0xd0, 0xc7, 0xfa, 0xff, 0xe8, 0x67, 0xc6, 0xfa, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xb7, 0xc7, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xa7, 0xc7, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xf0, 0xe8, 0x97, 0xc7, 0xfa, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x20, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x6, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x78, 0xc7, 0xfa, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xa1, 0xad, 0xfa, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xf0, 0xe8, 0x93, 0xc7, 0xfa, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xf1, 0xfc, 0xff, 0xff, 0xe9, 0x32, 0xff, 0xff, 0xff, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xde, 0xc6, 0xfa, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd6, 0xc7, 0xfa, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x88, 0xcf, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xf7, 0x10, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xb4, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x16, 0xc7, 0xfa, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf4, 0x39, 0xc2, 0x74, 0x15, 0xf, 0xbf, 0x55, 0xf4, 0x8d, 0x45, 0xf0, 0xe8, 0xfd, 0xc6, 0xfa, 0xff, 0xe8, 0xcc, 0xc3, 0xfa, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xf0, 0xe8, 0xea, 0xc6, 0xfa, 0xff, 0xe8, 0x81, 0xc5, 0xfa, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xd1, 0xc6, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xc1, 0xc6, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xf0, 0xe8, 0xb1, 0xc6, 0xfa, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x20, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x6, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x92, 0xc6, 0xfa, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xbb, 0xac, 0xfa, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xf0, 0xe8, 0xad, 0xc6, 0xfa, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xb, 0xfc, 0xff, 0xff, 0xe9, 0x32, 0xff, 0xff, 0xff, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xf8, 0xc5, 0xfa, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf0, 0xc6, 0xfa, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xa2, 0xce, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x11, 0x10, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xb4, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x30, 0xc6, 0xfa, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf4, 0x39, 0xc2, 0x74, 0x15, 0xf, 0xbf, 0x55, 0xf4, 0x8d, 0x45, 0xf0, 0xe8, 0x17, 0xc6, 0xfa, 0xff, 0xe8, 0xe6, 0xc2, 0xfa, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xf0, 0xe8, 0x4, 0xc6, 0xfa, 0xff, 0xe8, 0x9b, 0xc4, 0xfa, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xeb, 0xc5, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xdb, 0xc5, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xf0, 0xe8, 0xcb, 0xc5, 0xfa, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x20, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x6, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0xac, 0xc5, 0xfa, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xd5, 0xab, 0xfa, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xf0, 0xe8, 0xc7, 0xc5, 0xfa, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x25, 0xfb, 0xff, 0xff, 0xe9, 0x32, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x46, 0xc1, 0xfa, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100c9b42, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100c9b47, 0x5)   calld(sys_check_available_stack_size, 0x9c206); /* call 0x10165d52 */
    II(0x100c9b4c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100c9b4d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c9b4e, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c9b4f, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c9b50, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c9b51, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c9b53, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100c9b59, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100c9b5c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100c9b5f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c9b61, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c9b64, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x100c9b67, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100c9b6a, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100c9b6f, 0x5)   calld(0x10076338, -0x5383c);          /* call 0x10076338 */
    II(0x100c9b74, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100c9b77, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c9b79, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c9b7b, 0x5)   calld(0x100764b8, -0x536c8);          /* call 0x100764b8 */
    II(0x100c9b80, 0x2)   jmpd(0x100c9b8a, 0x8);                /* jmp 0x100c9b8a */
l_0x100c9b82:
    II(0x100c9b82, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9b85, 0x5)   calld(0x10076bf8, -0x52f92);          /* call 0x10076bf8 */
l_0x100c9b8a:
    II(0x100c9b8a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c9b8c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9b8f, 0x5)   calld(0x1013ad71, 0x711dd);           /* call 0x1013ad71 */
    II(0x100c9b94, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c9b96, 0x6)   jzd(0x100c9c50, 0xb4);                /* jz dword 0x100c9c50 */
    II(0x100c9b9c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9b9f, 0x5)   calld(0x100763a0, -0x53804);          /* call 0x100763a0 */
    II(0x100c9ba4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c9ba6, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c9ba9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100c9bad, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c9baf, 0x2)   jzd(0x100c9bc6, 0x15);                /* jz 0x100c9bc6 */
    II(0x100c9bb1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100c9bb5, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9bb8, 0x5)   calld(0x100763a0, -0x5381d);          /* call 0x100763a0 */
    II(0x100c9bbd, 0x5)   calld(0x10076074, -0x53b4e);          /* call 0x10076074 */
    II(0x100c9bc2, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c9bc4, 0x2)   jnzd(0x100c9bc8, 0x2);                /* jnz 0x100c9bc8 */
l_0x100c9bc6:
    II(0x100c9bc6, 0x2)   jmpd(0x100c9bdf, 0x17);               /* jmp 0x100c9bdf */
l_0x100c9bc8:
    II(0x100c9bc8, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9bcb, 0x5)   calld(0x100763a0, -0x53830);          /* call 0x100763a0 */
    II(0x100c9bd0, 0x5)   calld(0x1007623c, -0x53999);          /* call 0x1007623c */
    II(0x100c9bd5, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100c9bd8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c9bdb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c9bdd, 0x2)   jgd(0x100c9be1, 0x2);                 /* jg 0x100c9be1 */
l_0x100c9bdf:
    II(0x100c9bdf, 0x2)   jmpd(0x100c9bef, 0xe);                /* jmp 0x100c9bef */
l_0x100c9be1:
    II(0x100c9be1, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9be4, 0x5)   calld(0x100763a0, -0x53849);          /* call 0x100763a0 */
    II(0x100c9be9, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100c9bed, 0x2)   jnzd(0x100c9bf1, 0x2);                /* jnz 0x100c9bf1 */
l_0x100c9bef:
    II(0x100c9bef, 0x2)   jmpd(0x100c9bff, 0xe);                /* jmp 0x100c9bff */
l_0x100c9bf1:
    II(0x100c9bf1, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9bf4, 0x5)   calld(0x100763a0, -0x53859);          /* call 0x100763a0 */
    II(0x100c9bf9, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100c9bfd, 0x2)   jnzd(0x100c9c01, 0x2);                /* jnz 0x100c9c01 */
l_0x100c9bff:
    II(0x100c9bff, 0x2)   jmpd(0x100c9c15, 0x14);               /* jmp 0x100c9c15 */
l_0x100c9c01:
    II(0x100c9c01, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9c04, 0x5)   calld(0x100763a0, -0x53869);          /* call 0x100763a0 */
    II(0x100c9c09, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100c9c0c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c9c11, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c9c13, 0x2)   jgd(0x100c9c17, 0x2);                 /* jg 0x100c9c17 */
l_0x100c9c15:
    II(0x100c9c15, 0x2)   jmpd(0x100c9c37, 0x20);               /* jmp 0x100c9c37 */
l_0x100c9c17:
    II(0x100c9c17, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c9c1a, 0x3)   mov(edx, memd_a32(ds, edx + 0x6));    /* mov edx, [edx+0x6] */
    II(0x100c9c1d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c9c20, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9c23, 0x5)   calld(0x100763a0, -0x53888);          /* call 0x100763a0 */
    II(0x100c9c28, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100c9c2b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c9c2e, 0x5)   calld(0x100749d4, -0x5525f);          /* call 0x100749d4 */
    II(0x100c9c33, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c9c35, 0x2)   jnzd(0x100c9c39, 0x2);                /* jnz 0x100c9c39 */
l_0x100c9c37:
    II(0x100c9c37, 0x2)   jmpd(0x100c9c4b, 0x12);               /* jmp 0x100c9c4b */
l_0x100c9c39:
    II(0x100c9c39, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9c3c, 0x5)   calld(0x100763d4, -0x5386d);          /* call 0x100763d4 */
    II(0x100c9c41, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c9c43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c9c46, 0x5)   calld(0x100c993c, -0x30f);            /* call 0x100c993c */
l_0x100c9c4b:
    II(0x100c9c4b, 0x5)   jmpd(0x100c9b82, -0xce);              /* jmp 0x100c9b82 */
l_0x100c9c50:
    II(0x100c9c50, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100c9c55, 0x5)   calld(0x10076338, -0x53922);          /* call 0x10076338 */
    II(0x100c9c5a, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100c9c5d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c9c5f, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c9c61, 0x5)   calld(0x1007643c, -0x5382a);          /* call 0x1007643c */
    II(0x100c9c66, 0x2)   jmpd(0x100c9c70, 0x8);                /* jmp 0x100c9c70 */
l_0x100c9c68:
    II(0x100c9c68, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9c6b, 0x5)   calld(0x10076bf8, -0x53078);          /* call 0x10076bf8 */
l_0x100c9c70:
    II(0x100c9c70, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c9c72, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9c75, 0x5)   calld(0x1013ad71, 0x710f7);           /* call 0x1013ad71 */
    II(0x100c9c7a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c9c7c, 0x6)   jzd(0x100c9d36, 0xb4);                /* jz dword 0x100c9d36 */
    II(0x100c9c82, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9c85, 0x5)   calld(0x100763a0, -0x538ea);          /* call 0x100763a0 */
    II(0x100c9c8a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c9c8c, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c9c8f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100c9c93, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c9c95, 0x2)   jzd(0x100c9cac, 0x15);                /* jz 0x100c9cac */
    II(0x100c9c97, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100c9c9b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9c9e, 0x5)   calld(0x100763a0, -0x53903);          /* call 0x100763a0 */
    II(0x100c9ca3, 0x5)   calld(0x10076074, -0x53c34);          /* call 0x10076074 */
    II(0x100c9ca8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c9caa, 0x2)   jnzd(0x100c9cae, 0x2);                /* jnz 0x100c9cae */
l_0x100c9cac:
    II(0x100c9cac, 0x2)   jmpd(0x100c9cc5, 0x17);               /* jmp 0x100c9cc5 */
l_0x100c9cae:
    II(0x100c9cae, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9cb1, 0x5)   calld(0x100763a0, -0x53916);          /* call 0x100763a0 */
    II(0x100c9cb6, 0x5)   calld(0x1007623c, -0x53a7f);          /* call 0x1007623c */
    II(0x100c9cbb, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100c9cbe, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c9cc1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c9cc3, 0x2)   jgd(0x100c9cc7, 0x2);                 /* jg 0x100c9cc7 */
l_0x100c9cc5:
    II(0x100c9cc5, 0x2)   jmpd(0x100c9cd5, 0xe);                /* jmp 0x100c9cd5 */
l_0x100c9cc7:
    II(0x100c9cc7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9cca, 0x5)   calld(0x100763a0, -0x5392f);          /* call 0x100763a0 */
    II(0x100c9ccf, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100c9cd3, 0x2)   jnzd(0x100c9cd7, 0x2);                /* jnz 0x100c9cd7 */
l_0x100c9cd5:
    II(0x100c9cd5, 0x2)   jmpd(0x100c9ce5, 0xe);                /* jmp 0x100c9ce5 */
l_0x100c9cd7:
    II(0x100c9cd7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9cda, 0x5)   calld(0x100763a0, -0x5393f);          /* call 0x100763a0 */
    II(0x100c9cdf, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100c9ce3, 0x2)   jnzd(0x100c9ce7, 0x2);                /* jnz 0x100c9ce7 */
l_0x100c9ce5:
    II(0x100c9ce5, 0x2)   jmpd(0x100c9cfb, 0x14);               /* jmp 0x100c9cfb */
l_0x100c9ce7:
    II(0x100c9ce7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9cea, 0x5)   calld(0x100763a0, -0x5394f);          /* call 0x100763a0 */
    II(0x100c9cef, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100c9cf2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c9cf7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c9cf9, 0x2)   jgd(0x100c9cfd, 0x2);                 /* jg 0x100c9cfd */
l_0x100c9cfb:
    II(0x100c9cfb, 0x2)   jmpd(0x100c9d1d, 0x20);               /* jmp 0x100c9d1d */
l_0x100c9cfd:
    II(0x100c9cfd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c9d00, 0x3)   mov(edx, memd_a32(ds, edx + 0x6));    /* mov edx, [edx+0x6] */
    II(0x100c9d03, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c9d06, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9d09, 0x5)   calld(0x100763a0, -0x5396e);          /* call 0x100763a0 */
    II(0x100c9d0e, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100c9d11, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c9d14, 0x5)   calld(0x100749d4, -0x55345);          /* call 0x100749d4 */
    II(0x100c9d19, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c9d1b, 0x2)   jnzd(0x100c9d1f, 0x2);                /* jnz 0x100c9d1f */
l_0x100c9d1d:
    II(0x100c9d1d, 0x2)   jmpd(0x100c9d31, 0x12);               /* jmp 0x100c9d31 */
l_0x100c9d1f:
    II(0x100c9d1f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9d22, 0x5)   calld(0x100763d4, -0x53953);          /* call 0x100763d4 */
    II(0x100c9d27, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c9d29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c9d2c, 0x5)   calld(0x100c993c, -0x3f5);            /* call 0x100c993c */
l_0x100c9d31:
    II(0x100c9d31, 0x5)   jmpd(0x100c9c68, -0xce);              /* jmp 0x100c9c68 */
l_0x100c9d36:
    II(0x100c9d36, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100c9d3b, 0x5)   calld(0x10076338, -0x53a08);          /* call 0x10076338 */
    II(0x100c9d40, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100c9d43, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c9d45, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c9d47, 0x5)   calld(0x1007643c, -0x53910);          /* call 0x1007643c */
    II(0x100c9d4c, 0x2)   jmpd(0x100c9d56, 0x8);                /* jmp 0x100c9d56 */
l_0x100c9d4e:
    II(0x100c9d4e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9d51, 0x5)   calld(0x10076bf8, -0x5315e);          /* call 0x10076bf8 */
l_0x100c9d56:
    II(0x100c9d56, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c9d58, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9d5b, 0x5)   calld(0x1013ad71, 0x71011);           /* call 0x1013ad71 */
    II(0x100c9d60, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c9d62, 0x6)   jzd(0x100c9e1c, 0xb4);                /* jz dword 0x100c9e1c */
    II(0x100c9d68, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9d6b, 0x5)   calld(0x100763a0, -0x539d0);          /* call 0x100763a0 */
    II(0x100c9d70, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c9d72, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c9d75, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100c9d79, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c9d7b, 0x2)   jzd(0x100c9d92, 0x15);                /* jz 0x100c9d92 */
    II(0x100c9d7d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100c9d81, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9d84, 0x5)   calld(0x100763a0, -0x539e9);          /* call 0x100763a0 */
    II(0x100c9d89, 0x5)   calld(0x10076074, -0x53d1a);          /* call 0x10076074 */
    II(0x100c9d8e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c9d90, 0x2)   jnzd(0x100c9d94, 0x2);                /* jnz 0x100c9d94 */
l_0x100c9d92:
    II(0x100c9d92, 0x2)   jmpd(0x100c9dab, 0x17);               /* jmp 0x100c9dab */
l_0x100c9d94:
    II(0x100c9d94, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9d97, 0x5)   calld(0x100763a0, -0x539fc);          /* call 0x100763a0 */
    II(0x100c9d9c, 0x5)   calld(0x1007623c, -0x53b65);          /* call 0x1007623c */
    II(0x100c9da1, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100c9da4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c9da7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c9da9, 0x2)   jgd(0x100c9dad, 0x2);                 /* jg 0x100c9dad */
l_0x100c9dab:
    II(0x100c9dab, 0x2)   jmpd(0x100c9dbb, 0xe);                /* jmp 0x100c9dbb */
l_0x100c9dad:
    II(0x100c9dad, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9db0, 0x5)   calld(0x100763a0, -0x53a15);          /* call 0x100763a0 */
    II(0x100c9db5, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100c9db9, 0x2)   jnzd(0x100c9dbd, 0x2);                /* jnz 0x100c9dbd */
l_0x100c9dbb:
    II(0x100c9dbb, 0x2)   jmpd(0x100c9dcb, 0xe);                /* jmp 0x100c9dcb */
l_0x100c9dbd:
    II(0x100c9dbd, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9dc0, 0x5)   calld(0x100763a0, -0x53a25);          /* call 0x100763a0 */
    II(0x100c9dc5, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100c9dc9, 0x2)   jnzd(0x100c9dcd, 0x2);                /* jnz 0x100c9dcd */
l_0x100c9dcb:
    II(0x100c9dcb, 0x2)   jmpd(0x100c9de1, 0x14);               /* jmp 0x100c9de1 */
l_0x100c9dcd:
    II(0x100c9dcd, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9dd0, 0x5)   calld(0x100763a0, -0x53a35);          /* call 0x100763a0 */
    II(0x100c9dd5, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100c9dd8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c9ddd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c9ddf, 0x2)   jgd(0x100c9de3, 0x2);                 /* jg 0x100c9de3 */
l_0x100c9de1:
    II(0x100c9de1, 0x2)   jmpd(0x100c9e03, 0x20);               /* jmp 0x100c9e03 */
l_0x100c9de3:
    II(0x100c9de3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c9de6, 0x3)   mov(edx, memd_a32(ds, edx + 0x6));    /* mov edx, [edx+0x6] */
    II(0x100c9de9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c9dec, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9def, 0x5)   calld(0x100763a0, -0x53a54);          /* call 0x100763a0 */
    II(0x100c9df4, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100c9df7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c9dfa, 0x5)   calld(0x100749d4, -0x5542b);          /* call 0x100749d4 */
    II(0x100c9dff, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c9e01, 0x2)   jnzd(0x100c9e05, 0x2);                /* jnz 0x100c9e05 */
l_0x100c9e03:
    II(0x100c9e03, 0x2)   jmpd(0x100c9e17, 0x12);               /* jmp 0x100c9e17 */
l_0x100c9e05:
    II(0x100c9e05, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9e08, 0x5)   calld(0x100763d4, -0x53a39);          /* call 0x100763d4 */
    II(0x100c9e0d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c9e0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c9e12, 0x5)   calld(0x100c993c, -0x4db);            /* call 0x100c993c */
l_0x100c9e17:
    II(0x100c9e17, 0x5)   jmpd(0x100c9d4e, -0xce);              /* jmp 0x100c9d4e */
l_0x100c9e1c:
    II(0x100c9e1c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c9e1e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c9e21, 0x5)   calld(0x10075f6c, -0x53eba);          /* call 0x10075f6c */
    II(0x100c9e26, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c9e28, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c9e29, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c9e2a, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c9e2b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c9e2c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100c9e2d, 0x1)   retd();                               /* ret */
FUNC_END

