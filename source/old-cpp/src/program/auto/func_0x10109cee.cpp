FUNC_BEGIN(0x10109cee, 0xe9a38dee75257f70, 0x20, ({0x68, 0x6c, 0, 0, 0, 0xe8, 0x5a, 0xc0, 0x5, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x31, 0xc0, 0xe8, 0x29, 0xeb, 0xfd, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0xa3, 0x48, 0x4e, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0x66, 0xa3, 0x4c, 0x4e, 0x1c, 0x10, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x1a, 0x5, 0x6, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0xf, 0x84, 0x4f, 0x2, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x80, 0x78, 0x4, 0, 0x74, 0x10, 0xc7, 0x45, 0xe8, 0xbb, 0x2, 0, 0, 0xc7, 0x45, 0xec, 0xbc, 0x2, 0, 0, 0xeb, 0xe, 0xc7, 0x45, 0xe8, 0xbd, 0x2, 0, 0, 0xc7, 0x45, 0xec, 0xbe, 0x2, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x83, 0x78, 0x9, 0, 0xf, 0x84, 0xbe, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x74, 0xc0, 0x5, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x3c, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x5, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0x48, 0x3, 0xc1, 0xf9, 0x10, 0xf, 0xbf, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xe4, 0xe8, 0x43, 0x46, 0xfc, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x13, 0x3, 0x55, 0xf4, 0x8b, 0x45, 0xd8, 0x89, 0x2, 0x8d, 0x45, 0xd4, 0xe8, 0x30, 0xb4, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xd0, 0xe8, 0x53, 0xb4, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xcc, 0xe8, 0x76, 0xb4, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xc8, 0xe8, 0x99, 0xb4, 0xfc, 0xff, 0x50, 0xe8, 0xbf, 0xb4, 0xfc, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0xdb, 0xb4, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0x50, 0x9, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0, 0xe8, 0x26, 0x51, 0xfc, 0xff, 0xeb, 0x6e, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xb6, 0xbf, 0x5, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xc0, 0, 0x74, 0x3e, 0xb8, 0xf0, 0, 0, 0, 0x50, 0xb9, 0x2c, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xf8, 0x6b, 0xdb, 0x13, 0x3, 0x5d, 0xf4, 0x8b, 0x5b, 0x5, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0x50, 0x3, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xc4, 0xe8, 0x11, 0x45, 0xfc, 0xff, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0xeb, 0x6, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xb8, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0x8b, 0x45, 0xb8, 0x89, 0x2, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0x50, 0xd, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0, 0xe8, 0x68, 0xb2, 0xfc, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x90, 0, 0x70, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0, 0xe8, 0x7d, 0xb2, 0xfc, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0x8b, 0x52, 0xf, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0, 0xe8, 0xca, 0xb1, 0xfc, 0xff, 0x66, 0x83, 0x7d, 0xfc, 0, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x45, 0xf8, 0x74, 0x2, 0xeb, 0x34, 0xba, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0, 0xe8, 0x62, 0xb2, 0xfc, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0x50, 0xd, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0, 0xe8, 0x14, 0xb2, 0xfc, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x12, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0, 0xe8, 0xf5, 0x58, 0xfc, 0xff, 0xe8, 0x78, 0xb2, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x8f, 0xb2, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x3, 0x45, 0xf4, 0x8b, 0, 0xe8, 0xf2, 0x5a, 0xfc, 0xff, 0xe9, 0xa3, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x12, 0xe8, 0xea, 0xd4, 0x5, 0, 0xe8, 0x25, 0x1d, 0x6, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10109cee, 0x5)   pushd(0x6c);                          /* push dword 0x6c */
    II(0x10109cf3, 0x5)   calld(sys_check_available_stack_size, 0x5c05a); /* call 0x10165d52 */
    II(0x10109cf8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10109cf9, 0x1)   pushd(esi);                           /* push esi */
    II(0x10109cfa, 0x1)   pushd(edi);                           /* push edi */
    II(0x10109cfb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10109cfc, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10109cfe, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x10109d04, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10109d07, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10109d0a, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10109d0d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10109d0f, 0x5)   calld(0x100e883d, -0x214d7);          /* call 0x100e883d */
    II(0x10109d14, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10109d17, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10109d1a, 0x5)   mov(memd_a32(ds, 0x101c4e48), eax);   /* mov [0x101c4e48], eax */
    II(0x10109d1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10109d22, 0x6)   mov(memw_a32(ds, 0x101c4e4c), ax);    /* mov [0x101c4e4c], ax */
    II(0x10109d28, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10109d2d, 0x5)   calld(/* sys */ 0x1016a24c, 0x6051a); /* call 0x1016a24c */
l_0x10109d32:
    II(0x10109d32, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x10109d35, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x10109d3a, 0x6)   jzd(0x10109f8f, 0x24f);               /* jz dword 0x10109f8f */
    II(0x10109d40, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109d44, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109d47, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109d4a, 0x4)   cmp(memb_a32(ds, eax + 0x4), 0);      /* cmp byte [eax+0x4], 0x0 */
    II(0x10109d4e, 0x2)   jzd(0x10109d60, 0x10);                /* jz 0x10109d60 */
    II(0x10109d50, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x2bb); /* mov dword [ebp-0x18], 0x2bb */
    II(0x10109d57, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x2bc); /* mov dword [ebp-0x14], 0x2bc */
    II(0x10109d5e, 0x2)   jmpd(0x10109d6e, 0xe);                /* jmp 0x10109d6e */
l_0x10109d60:
    II(0x10109d60, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x2bd); /* mov dword [ebp-0x18], 0x2bd */
    II(0x10109d67, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x2be); /* mov dword [ebp-0x14], 0x2be */
l_0x10109d6e:
    II(0x10109d6e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109d72, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109d75, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109d78, 0x4)   cmp(memd_a32(ds, eax + 0x9), 0);      /* cmp dword [eax+0x9], 0x0 */
    II(0x10109d7c, 0x6)   jzd(0x10109e40, 0xbe);                /* jz dword 0x10109e40 */
    II(0x10109d82, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10109d87, 0x5)   calld(sys_new, 0x5c074);              /* call 0x10165e00 */
    II(0x10109d8c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x10109d8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10109d92, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10109d95, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x10109d99, 0x2)   jzd(0x10109dd7, 0x3c);                /* jz 0x10109dd7 */
    II(0x10109d9b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109d9f, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109da2, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109da5, 0x3)   mov(eax, memd_a32(ds, eax + 0x5));    /* mov eax, [eax+0x5] */
    II(0x10109da8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10109dab, 0x1)   pushd(eax);                           /* push eax */
    II(0x10109dac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109db0, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109db3, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109db6, 0x3)   mov(ecx, memd_a32(ds, eax + 0x3));    /* mov ecx, [eax+0x3] */
    II(0x10109db9, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x10109dbc, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x10109dc0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10109dc4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10109dc7, 0x5)   calld(my_ctor_c17, -0x3b9bd);         /* call 0x100ce40f */
    II(0x10109dcc, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x10109dcf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10109dd2, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10109dd5, 0x2)   jmpd(0x10109ddd, 0x6);                /* jmp 0x10109ddd */
l_0x10109dd7:
    II(0x10109dd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10109dda, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x10109ddd:
    II(0x10109ddd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10109de1, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x10109de4, 0x3)   add(edx, memd_a32(ss, ebp - 0xc));    /* add edx, [ebp-0xc] */
    II(0x10109de7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10109dea, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x10109dec, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10109def, 0x5)   calld(0x100d5224, -0x34bd0);          /* call 0x100d5224 */
    II(0x10109df4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10109df5, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10109df8, 0x5)   calld(0x100d5250, -0x34bad);          /* call 0x100d5250 */
    II(0x10109dfd, 0x1)   pushd(eax);                           /* push eax */
    II(0x10109dfe, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10109e01, 0x5)   calld(0x100d527c, -0x34b8a);          /* call 0x100d527c */
    II(0x10109e06, 0x1)   pushd(eax);                           /* push eax */
    II(0x10109e07, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10109e0a, 0x5)   calld(0x100d52a8, -0x34b67);          /* call 0x100d52a8 */
    II(0x10109e0f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10109e10, 0x5)   calld(0x100d52d4, -0x34b41);          /* call 0x100d52d4 */
    II(0x10109e15, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10109e18, 0x5)   calld(0x100d52f8, -0x34b25);          /* call 0x100d52f8 */
    II(0x10109e1d, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10109e20, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109e24, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109e27, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109e2a, 0x3)   mov(edx, memd_a32(ds, eax + 0x9));    /* mov edx, [eax+0x9] */
    II(0x10109e2d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109e31, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109e34, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109e37, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10109e39, 0x5)   calld(0x100cef64, -0x3aeda);          /* call 0x100cef64 */
    II(0x10109e3e, 0x2)   jmpd(0x10109eae, 0x6e);               /* jmp 0x10109eae */
l_0x10109e40:
    II(0x10109e40, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10109e45, 0x5)   calld(sys_new, 0x5bfb6);              /* call 0x10165e00 */
    II(0x10109e4a, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x10109e4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10109e50, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x10109e53, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x10109e57, 0x2)   jzd(0x10109e97, 0x3e);                /* jz 0x10109e97 */
    II(0x10109e59, 0x5)   mov(eax, 0xf0);                       /* mov eax, 0xf0 */
    II(0x10109e5e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10109e5f, 0x5)   mov(ecx, 0x12c);                      /* mov ecx, 0x12c */
    II(0x10109e64, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x10109e68, 0x3)   imul(ebx, ebx, 0x13);                 /* imul ebx, ebx, 0x13 */
    II(0x10109e6b, 0x3)   add(ebx, memd_a32(ss, ebp - 0xc));    /* add ebx, [ebp-0xc] */
    II(0x10109e6e, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x5));    /* mov ebx, [ebx+0x5] */
    II(0x10109e71, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10109e74, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109e78, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109e7b, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109e7e, 0x3)   mov(edx, memd_a32(ds, eax + 0x3));    /* mov edx, [eax+0x3] */
    II(0x10109e81, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10109e84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10109e87, 0x5)   calld(0x100ce39d, -0x3baef);          /* call 0x100ce39d */
    II(0x10109e8c, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x10109e8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10109e92, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x10109e95, 0x2)   jmpd(0x10109e9d, 0x6);                /* jmp 0x10109e9d */
l_0x10109e97:
    II(0x10109e97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10109e9a, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
l_0x10109e9d:
    II(0x10109e9d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109ea1, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109ea4, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10109ea7, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10109ea9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10109eac, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
l_0x10109eae:
    II(0x10109eae, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109eb2, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109eb5, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109eb8, 0x3)   mov(edx, memd_a32(ds, eax + 0xd));    /* mov edx, [eax+0xd] */
    II(0x10109ebb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109ebf, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109ec2, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109ec5, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10109ec7, 0x5)   calld(0x100d5134, -0x34d98);          /* call 0x100d5134 */
    II(0x10109ecc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109ed0, 0x6)   lea(edx, eax + 0x7000);               /* lea edx, [eax+0x7000] */
    II(0x10109ed6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109eda, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109edd, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109ee0, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10109ee2, 0x5)   calld(0x100d5164, -0x34d83);          /* call 0x100d5164 */
    II(0x10109ee7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109eeb, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109eee, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10109ef1, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10109ef3, 0x3)   mov(edx, memd_a32(ds, edx + 0xf));    /* mov edx, [edx+0xf] */
    II(0x10109ef6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10109ef9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109efd, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109f00, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109f03, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10109f05, 0x5)   calld(0x100d50d4, -0x34e36);          /* call 0x100d50d4 */
    II(0x10109f0a, 0x5)   cmp(memw_a32(ss, ebp - 0x4), 0);      /* cmp word [ebp-0x4], 0x0 */
    II(0x10109f0f, 0x2)   jzd(0x10109f1a, 0x9);                 /* jz 0x10109f1a */
    II(0x10109f11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10109f14, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10109f18, 0x2)   jzd(0x10109f1c, 0x2);                 /* jz 0x10109f1c */
l_0x10109f1a:
    II(0x10109f1a, 0x2)   jmpd(0x10109f50, 0x34);               /* jmp 0x10109f50 */
l_0x10109f1c:
    II(0x10109f1c, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10109f21, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109f25, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109f28, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109f2b, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10109f2d, 0x5)   calld(0x100d5194, -0x34d9e);          /* call 0x100d5194 */
    II(0x10109f32, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109f36, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109f39, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109f3c, 0x3)   mov(edx, memd_a32(ds, eax + 0xd));    /* mov edx, [eax+0xd] */
    II(0x10109f3f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109f43, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109f46, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109f49, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10109f4b, 0x5)   calld(0x100d5164, -0x34dec);          /* call 0x100d5164 */
l_0x10109f50:
    II(0x10109f50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10109f53, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x10109f56, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109f5a, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109f5d, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109f60, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10109f62, 0x5)   calld(0x100cf85c, -0x3a70b);          /* call 0x100cf85c */
    II(0x10109f67, 0x5)   calld(0x100d51e4, -0x34d88);          /* call 0x100d51e4 */
    II(0x10109f6c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10109f6e, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10109f70, 0x5)   calld(0x100d5204, -0x34d71);          /* call 0x100d5204 */
    II(0x10109f75, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10109f77, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10109f79, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10109f7d, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10109f80, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109f83, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10109f85, 0x5)   calld(0x100cfa7c, -0x3a50e);          /* call 0x100cfa7c */
    II(0x10109f8a, 0x5)   jmpd(0x10109d32, -0x25d);             /* jmp 0x10109d32 */
l_0x10109f8f:
    II(0x10109f8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10109f92, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10109f95, 0x5)   calld(sys_display_draw_0, 0x5d4ea);   /* call 0x10167484 */
    II(0x10109f9a, 0x5)   calld(/* sys */ 0x1016bcc4, 0x61d25); /* call 0x1016bcc4 */
    II(0x10109f9f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10109fa1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10109fa2, 0x1)   popd(edi);                            /* pop edi */
    II(0x10109fa3, 0x1)   popd(esi);                            /* pop esi */
    II(0x10109fa4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10109fa5, 0x1)   retd();                               /* ret */
FUNC_END

