FUNC_BEGIN(0x100b43b0, 0x764c5c8e932f12f3, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x98, 0x19, 0xb, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe4, 0xff, 0x52, 0x14, 0xf, 0xbf, 0xc8, 0x8b, 0x5d, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x9f, 0x69, 0xfd, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0xe8, 0xd5, 0xe2, 0xfe, 0xff, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x13, 0xe8, 0xe0, 0x22, 0xfc, 0xff, 0x83, 0xe8, 0x13, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0xc9, 0x22, 0xfc, 0xff, 0x83, 0xe8, 0x17, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x2, 0x64, 0x52, 0x1b, 0x10, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x13, 0xe8, 0xe5, 0x21, 0xfc, 0xff, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0xd7, 0x21, 0xfc, 0xff, 0x8b, 0x45, 0x10, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x1b, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100b43b0, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100b43b5, 0x5)   calld(sys_check_available_stack_size, 0xb1998); /* call 0x10165d52 */
    II(0x100b43ba, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b43bb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b43bc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b43bd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b43bf, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100b43c5, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b43c8, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100b43cb, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100b43ce, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100b43d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b43d4, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100b43d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b43da, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b43dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b43e0, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100b43e3, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100b43e6, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100b43e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b43ec, 0x5)   calld(0x1008ad90, -0x29661);          /* call 0x1008ad90 */
    II(0x100b43f1, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100b43f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b43f7, 0x5)   calld(0x100a26d1, -0x11d2b);          /* call 0x100a26d1 */
    II(0x100b43fc, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b43ff, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b4402, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100b4405, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b4408, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b440b, 0x5)   calld(my_ctor_0x101b38f8, -0x3dd20);  /* call 0x100766f0 */
    II(0x100b4410, 0x3)   sub(eax, 0x13);                       /* sub eax, 0x13 */
    II(0x100b4413, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b4416, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b4419, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b441c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b441f, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100b4422, 0x5)   calld(my_ctor_0x101b38f8, -0x3dd37);  /* call 0x100766f0 */
    II(0x100b4427, 0x3)   sub(eax, 0x17);                       /* sub eax, 0x17 */
    II(0x100b442a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b442d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b4430, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b4433, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b4436, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b5264); /* mov dword [eax+0x2], 0x101b5264 */
    II(0x100b443d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100b4440, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b4443, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b4446, 0x5)   calld(0x10076630, -0x3de1b);          /* call 0x10076630 */
    II(0x100b444b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b444e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b4451, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100b4454, 0x5)   calld(0x10076630, -0x3de29);          /* call 0x10076630 */
    II(0x100b4459, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100b445c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100b445f, 0x3)   mov(memd_a32(ds, edx + 0x1b), eax);   /* mov [edx+0x1b], eax */
    II(0x100b4462, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b4465, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100b4468, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100b446b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b446d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b446e, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b446f, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b4470, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

