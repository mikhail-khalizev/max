FUNC_BEGIN(0x100f8f46, 0x931ce6d992e7afeb, 0x20, ({0x68, 0xf8, 0, 0, 0, 0xe8, 0x2, 0xce, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xd4, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x37, 0xba, 0xe4, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xde, 0x4c, 0x4, 0, 0xe8, 0x80, 0x1a, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x95, 0x1a, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0x6b, 0x27, 0x1a, 0x10, 0xe8, 0x85, 0xcd, 0x1, 0, 0xe9, 0x70, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x6b, 0xd2, 0x33, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x92, 0xd5, 0x81, 0x1c, 0x10, 0x3a, 0x90, 0xd5, 0x81, 0x1c, 0x10, 0x74, 0x49, 0x8b, 0x45, 0xfc, 0xe8, 0x33, 0xd2, 0xf7, 0xff, 0x85, 0xc0, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x13, 0x2, 0x75, 0x5, 0xe9, 0x30, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x6b, 0xd2, 0x33, 0x8b, 0x92, 0xd2, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x18, 0x8b, 0x45, 0xfc, 0xe8, 0x4, 0xd2, 0xf7, 0xff, 0xe8, 0x4a, 0xe4, 0xff, 0xff, 0x89, 0x45, 0xfc, 0x83, 0x7d, 0xfc, 0, 0xf, 0x84, 0x1, 0x1, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x7b, 0x19, 0xf9, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x72, 0xcc, 0x6, 0, 0x89, 0x45, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0, 0xf, 0x84, 0xe0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x41, 0x31, 0xdb, 0xba, 0x14, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x7, 0xa0, 0x6, 0, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xa3, 0xcd, 0x6, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x80, 0xb8, 0xd5, 0x81, 0x1c, 0x10, 0x1, 0x75, 0x1c, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0xb8, 0x91, 0x27, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x7d, 0xce, 0x6, 0, 0x83, 0xc4, 0xc, 0xeb, 0x4b, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x80, 0xb8, 0xd5, 0x81, 0x1c, 0x10, 0x2, 0x75, 0x1c, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0xb8, 0xb1, 0x27, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x4c, 0xce, 0x6, 0, 0x83, 0xc4, 0xc, 0xeb, 0x1a, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0xb8, 0xcc, 0x27, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x30, 0xce, 0x6, 0, 0x83, 0xc4, 0xc, 0xe8, 0x27, 0x19, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x3c, 0x19, 0xfd, 0xff, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0xb5, 0x2c, 0xff, 0xff, 0xff, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0x2c, 0xcc, 0x1, 0, 0xe8, 0x74, 0xc3, 0xfd, 0xff, 0xf, 0xbf, 0xc8, 0xbb, 0xf4, 0x3, 0, 0, 0xba, 0xf4, 0x3, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xd7, 0x49, 0x4, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100f8f46, 0x5)   pushd(0xf8);                          /* push dword 0xf8 */
    II(0x100f8f4b, 0x5)   calld(sys_check_available_stack_size, 0x6ce02); /* call 0x10165d52 */
    II(0x100f8f50, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f8f51, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f8f52, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f8f53, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f8f54, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f8f55, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f8f57, 0x6)   sub(esp, 0xd4);                       /* sub esp, 0xd4 */
    II(0x100f8f5d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f8f60, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100f8f63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8f66, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100f8f6a, 0x2)   jnzd(0x100f8fa3, 0x37);               /* jnz 0x100f8fa3 */
    II(0x100f8f6c, 0x5)   mov(edx, 0x4e4);                      /* mov edx, 0x4e4 */
    II(0x100f8f71, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f8f76, 0x5)   calld(0x1013dc59, 0x44cde);           /* call 0x1013dc59 */
    II(0x100f8f7b, 0x5)   calld(0x100caa00, -0x2e580);          /* call 0x100caa00 */
    II(0x100f8f80, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f8f85, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f8f86, 0x5)   calld(0x100caa20, -0x2e56b);          /* call 0x100caa20 */
    II(0x100f8f8b, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f8f8d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f8f8f, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100f8f94, 0x5)   mov(eax, 0x101a276b);                 /* mov eax, 0x101a276b */ /* "Unable to transfer to disabled units." */
    II(0x100f8f99, 0x5)   calld(0x10115d23, 0x1cd85);           /* call 0x10115d23 */
    II(0x100f8f9e, 0x5)   jmpd(0x100f9113, 0x170);              /* jmp 0x100f9113 */
l_0x100f8fa3:
    II(0x100f8fa3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f8fa6, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100f8fa9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f8fac, 0x3)   imul(edx, edx, 0x33);                 /* imul edx, edx, 0x33 */
    II(0x100f8faf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8fb2, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100f8fb5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f8fb8, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100f8fbb, 0x6)   mov(dl, memb_a32(ds, edx + 0x101c81d5)); /* mov dl, [edx+0x101c81d5] */
    II(0x100f8fc1, 0x6)   cmp(dl, memb_a32(ds, eax + 0x101c81d5)); /* cmp dl, [eax+0x101c81d5] */
    II(0x100f8fc7, 0x2)   jzd(0x100f9012, 0x49);                /* jz 0x100f9012 */
    II(0x100f8fc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8fcc, 0x5)   calld(0x10076204, -0x82dcd);          /* call 0x10076204 */
    II(0x100f8fd1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f8fd3, 0x2)   jzd(0x100f8fde, 0x9);                 /* jz 0x100f8fde */
    II(0x100f8fd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8fd8, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x100f8fdc, 0x2)   jnzd(0x100f8fe3, 0x5);                /* jnz 0x100f8fe3 */
l_0x100f8fde:
    II(0x100f8fde, 0x5)   jmpd(0x100f9113, 0x130);              /* jmp 0x100f9113 */
l_0x100f8fe3:
    II(0x100f8fe3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f8fe6, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100f8fe9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f8fec, 0x3)   imul(edx, edx, 0x33);                 /* imul edx, edx, 0x33 */
    II(0x100f8fef, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c81d2)); /* mov edx, [edx+0x101c81d2] */
    II(0x100f8ff5, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x100f8ff8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8ffb, 0x5)   calld(0x10076204, -0x82dfc);          /* call 0x10076204 */
    II(0x100f9000, 0x5)   calld(0x100f744f, -0x1bb6);           /* call 0x100f744f */
    II(0x100f9005, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f9008, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100f900c, 0x6)   jzd(0x100f9113, 0x101);               /* jz dword 0x100f9113 */
l_0x100f9012:
    II(0x100f9012, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f9015, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f9018, 0x5)   calld(0x1008a998, -0x6e685);          /* call 0x1008a998 */
    II(0x100f901d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f9020, 0x5)   calld(0x10165c97, 0x6cc72);           /* call 0x10165c97 */
    II(0x100f9025, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100f9028, 0x5)   cmp(memw_a32(ss, ebp - 0xc), 0);      /* cmp word [ebp-0xc], 0x0 */
    II(0x100f902d, 0x6)   jzd(0x100f9113, 0xe0);                /* jz dword 0x100f9113 */
    II(0x100f9033, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f9036, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100f9039, 0x4)   mov(memw_a32(ds, edx + 0x41), ax);    /* mov [edx+0x41], ax */
    II(0x100f903d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f903f, 0x5)   mov(edx, 0x14);                       /* mov edx, 0x14 */
    II(0x100f9044, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f9047, 0x5)   calld(0x10163053, 0x6a007);           /* call 0x10163053 */
    II(0x100f904c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f9050, 0x5)   calld(/* sys */ 0x10165df8, 0x6cda3); /* call 0x10165df8 */
    II(0x100f9055, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100f9058, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f905b, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100f905e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f9061, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100f9064, 0x7)   cmp(memb_a32(ds, eax + 0x101c81d5), 0x1); /* cmp byte [eax+0x101c81d5], 0x1 */
    II(0x100f906b, 0x2)   jnzd(0x100f9089, 0x1c);               /* jnz 0x100f9089 */
    II(0x100f906d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f9071, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f9072, 0x5)   mov(eax, 0x101a2791);                 /* mov eax, 0x101a2791 */ /* "Total materials transferred: %i" */
    II(0x100f9077, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f9078, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100f907e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f907f, 0x5)   calld(sys_sprintf, 0x6ce7d);          /* call 0x10165f01 */
    II(0x100f9084, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100f9087, 0x2)   jmpd(0x100f90d4, 0x4b);               /* jmp 0x100f90d4 */
l_0x100f9089:
    II(0x100f9089, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f908c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100f908f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f9092, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100f9095, 0x7)   cmp(memb_a32(ds, eax + 0x101c81d5), 0x2); /* cmp byte [eax+0x101c81d5], 0x2 */
    II(0x100f909c, 0x2)   jnzd(0x100f90ba, 0x1c);               /* jnz 0x100f90ba */
    II(0x100f909e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f90a2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f90a3, 0x5)   mov(eax, 0x101a27b1);                 /* mov eax, 0x101a27b1 */ /* "Total fuel transferred: %i" */
    II(0x100f90a8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f90a9, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100f90af, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f90b0, 0x5)   calld(sys_sprintf, 0x6ce4c);          /* call 0x10165f01 */
    II(0x100f90b5, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100f90b8, 0x2)   jmpd(0x100f90d4, 0x1a);               /* jmp 0x100f90d4 */
l_0x100f90ba:
    II(0x100f90ba, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f90be, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f90bf, 0x5)   mov(eax, 0x101a27cc);                 /* mov eax, 0x101a27cc */ /* "Total gold transferred: %i" */
    II(0x100f90c4, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f90c5, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100f90cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f90cc, 0x5)   calld(sys_sprintf, 0x6ce30);          /* call 0x10165f01 */
    II(0x100f90d1, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
l_0x100f90d4:
    II(0x100f90d4, 0x5)   calld(0x100caa00, -0x2e6d9);          /* call 0x100caa00 */
    II(0x100f90d9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f90de, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f90df, 0x5)   calld(0x100caa20, -0x2e6c4);          /* call 0x100caa20 */
    II(0x100f90e4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f90e6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f90e8, 0x6)   lea(esi, ebp - 0xd4);                 /* lea esi, [ebp+0xffffff2c] */
    II(0x100f90ee, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f90f0, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100f90f2, 0x5)   calld(0x10115d23, 0x1cc2c);           /* call 0x10115d23 */
    II(0x100f90f7, 0x5)   calld(0x100d5470, -0x23c8c);          /* call 0x100d5470 */
    II(0x100f90fc, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100f90ff, 0x5)   mov(ebx, 0x3f4);                      /* mov ebx, 0x3f4 */
    II(0x100f9104, 0x5)   mov(edx, 0x3f4);                      /* mov edx, 0x3f4 */
    II(0x100f9109, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f910e, 0x5)   calld(0x1013daea, 0x449d7);           /* call 0x1013daea */
l_0x100f9113:
    II(0x100f9113, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f9115, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f9116, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f9117, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f9118, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f9119, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f911a, 0x1)   retd();                               /* ret */
FUNC_END

