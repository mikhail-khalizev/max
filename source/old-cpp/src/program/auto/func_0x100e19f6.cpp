FUNC_BEGIN(0x100e19f6, 0x4bb6d1100bb9fd8e, 0x20, ({0x68, 0x68, 0, 0, 0, 0xe8, 0x52, 0x43, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xf8, 0x8b, 0, 0xe8, 0xf1, 0x4f, 0xff, 0xff, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0x3e, 0x65, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0xb7, 0x34, 0xff, 0xff, 0x98, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0x74, 0x34, 0xff, 0xff, 0x98, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0x99, 0x34, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0xf3, 0x34, 0xff, 0xff, 0x98, 0x1, 0xd0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0xae, 0x34, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xc8, 0xf, 0xbf, 0x45, 0xc8, 0x8b, 0x55, 0xd0, 0x1, 0xc2, 0x89, 0x55, 0xd8, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x4, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0xcc, 0x4a, 0xf9, 0xff, 0xe8, 0x8f, 0x47, 0xf9, 0xff, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0xb5, 0x4a, 0xf9, 0xff, 0x8a, 0x40, 0x4d, 0x30, 0xe4, 0x98, 0x50, 0xb8, 0x77, 0x2, 0, 0, 0x50, 0xb9, 0x76, 0x2, 0, 0, 0x8d, 0x5d, 0xcc, 0x8b, 0x55, 0xee, 0xb8, 0x8f, 0x1b, 0x1a, 0x10, 0xe8, 0x1, 0xa0, 0x4, 0, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0xca, 0x33, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0x24, 0x34, 0xff, 0xff, 0x98, 0x1, 0xc2, 0x89, 0x55, 0xd8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0x63, 0x4a, 0xf9, 0xff, 0xe8, 0x26, 0x47, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x1b, 0, 0x74, 0x52, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0x43, 0x4a, 0xf9, 0xff, 0xe8, 0x6, 0x47, 0xf9, 0xff, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0x2c, 0x4a, 0xf9, 0xff, 0x8a, 0x40, 0x54, 0x30, 0xe4, 0x98, 0x50, 0xb8, 0x7d, 0x2, 0, 0, 0x50, 0xb9, 0x7c, 0x2, 0, 0, 0x8d, 0x5d, 0xcc, 0x8b, 0x55, 0xee, 0xb8, 0x94, 0x1b, 0x1a, 0x10, 0xe8, 0x78, 0x9f, 0x4, 0, 0xe9, 0xb4, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0xfa, 0x49, 0xf9, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x1a, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0xdf, 0x49, 0xf9, 0xff, 0xe8, 0xa2, 0x46, 0xf9, 0xff, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x7d, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0xc3, 0x49, 0xf9, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xd2, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x18, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0xb8, 0x3c, 0xd3, 0x1b, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xc4, 0x31, 0xc0, 0x50, 0xb8, 0xa, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0x8e, 0x49, 0xf9, 0xff, 0xe8, 0x51, 0x46, 0xf9, 0xff, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0x77, 0x49, 0xf9, 0xff, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xc4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xc4, 0xf, 0xbf, 0x8, 0x8d, 0x5d, 0xcc, 0x8b, 0x55, 0xee, 0xb8, 0x99, 0x1b, 0x1a, 0x10, 0xe8, 0xbf, 0x9e, 0x4, 0, 0x80, 0x7d, 0xfc, 0, 0x74, 0x67, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0xbc, 0x32, 0xff, 0xff, 0x98, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0x79, 0x32, 0xff, 0xff, 0x98, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0x9e, 0x32, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0xf8, 0x32, 0xff, 0xff, 0x98, 0x1, 0xc2, 0x89, 0x55, 0xd4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0x4b, 0x32, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xe8, 0xa5, 0x32, 0xff, 0xff, 0x98, 0x1, 0xc2, 0x89, 0x55, 0xd8, 0x8d, 0x55, 0xcc, 0x8b, 0x45, 0xee, 0xe8, 0x18, 0x58, 0x8, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100e19f6, 0x5)   pushd(0x68);                          /* push dword 0x68 */
    II(0x100e19fb, 0x5)   calld(sys_check_available_stack_size, 0x84352); /* call 0x10165d52 */
    II(0x100e1a00, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e1a01, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e1a02, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e1a03, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e1a04, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e1a05, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e1a07, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x100e1a0d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e1a10, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100e1a13, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100e1a16, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1a19, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100e1a1b, 0x5)   calld(0x100d6a11, -0xb00f);           /* call 0x100d6a11 */
    II(0x100e1a20, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100e1a23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1a26, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1a29, 0x5)   calld(0x100d7f6c, -0x9ac2);           /* call 0x100d7f6c */
    II(0x100e1a2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1a31, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1a34, 0x5)   calld(0x100d4ef0, -0xcb49);           /* call 0x100d4ef0 */
    II(0x100e1a39, 0x1)   cwde();                               /* cwde */
    II(0x100e1a3a, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100e1a3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1a40, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1a43, 0x5)   calld(0x100d4ebc, -0xcb8c);           /* call 0x100d4ebc */
    II(0x100e1a48, 0x1)   cwde();                               /* cwde */
    II(0x100e1a49, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100e1a4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1a4f, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1a52, 0x5)   calld(0x100d4ef0, -0xcb67);           /* call 0x100d4ef0 */
    II(0x100e1a57, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e1a5a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1a5d, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1a60, 0x5)   calld(0x100d4f58, -0xcb0d);           /* call 0x100d4f58 */
    II(0x100e1a65, 0x1)   cwde();                               /* cwde */
    II(0x100e1a66, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e1a68, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100e1a6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1a6e, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1a71, 0x5)   calld(0x100d4f24, -0xcb52);           /* call 0x100d4f24 */
    II(0x100e1a76, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e1a79, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e1a7b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e1a7e, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100e1a80, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100e1a82, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100e1a85, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x100e1a89, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x100e1a8c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e1a8e, 0x3)   mov(memd_a32(ss, ebp - 0x28), edx);   /* mov [ebp-0x28], edx */
    II(0x100e1a91, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100e1a96, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1a97, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x100e1a9c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1a9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1aa0, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1aa3, 0x5)   calld(0x10076574, -0x6b534);          /* call 0x10076574 */
    II(0x100e1aa8, 0x5)   calld(0x1007623c, -0x6b871);          /* call 0x1007623c */
    II(0x100e1aad, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100e1ab0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e1ab3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1ab4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1ab7, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1aba, 0x5)   calld(0x10076574, -0x6b54b);          /* call 0x10076574 */
    II(0x100e1abf, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100e1ac2, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100e1ac4, 0x1)   cwde();                               /* cwde */
    II(0x100e1ac5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1ac6, 0x5)   mov(eax, 0x277);                      /* mov eax, 0x277 */
    II(0x100e1acb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1acc, 0x5)   mov(ecx, 0x276);                      /* mov ecx, 0x276 */
    II(0x100e1ad1, 0x3)   lea(ebx, ebp - 0x34);                 /* lea ebx, [ebp-0x34] */
    II(0x100e1ad4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x12));   /* mov edx, [ebp-0x12] */
    II(0x100e1ad7, 0x5)   mov(eax, 0x101a1b8f);                 /* mov eax, 0x101a1b8f */ /* "Hits" */
    II(0x100e1adc, 0x5)   calld(0x1012bae2, 0x4a001);           /* call 0x1012bae2 */
    II(0x100e1ae1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100e1ae4, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100e1ae7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1aea, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1aed, 0x5)   calld(0x100d4ebc, -0xcc36);           /* call 0x100d4ebc */
    II(0x100e1af2, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e1af5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1af8, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1afb, 0x5)   calld(0x100d4f24, -0xcbdc);           /* call 0x100d4f24 */
    II(0x100e1b00, 0x1)   cwde();                               /* cwde */
    II(0x100e1b01, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e1b03, 0x3)   mov(memd_a32(ss, ebp - 0x28), edx);   /* mov [ebp-0x28], edx */
    II(0x100e1b06, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1b09, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1b0c, 0x5)   calld(0x10076574, -0x6b59d);          /* call 0x10076574 */
    II(0x100e1b11, 0x5)   calld(0x1007623c, -0x6b8da);          /* call 0x1007623c */
    II(0x100e1b16, 0x5)   cmp(memw_a32(ds, eax + 0x1b), 0);     /* cmp word [eax+0x1b], 0x0 */
    II(0x100e1b1b, 0x2)   jzd(0x100e1b6f, 0x52);                /* jz 0x100e1b6f */
    II(0x100e1b1d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e1b1f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1b20, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100e1b25, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1b26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1b29, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1b2c, 0x5)   calld(0x10076574, -0x6b5bd);          /* call 0x10076574 */
    II(0x100e1b31, 0x5)   calld(0x1007623c, -0x6b8fa);          /* call 0x1007623c */
    II(0x100e1b36, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x100e1b39, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e1b3c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1b3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1b40, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1b43, 0x5)   calld(0x10076574, -0x6b5d4);          /* call 0x10076574 */
    II(0x100e1b48, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x100e1b4b, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100e1b4d, 0x1)   cwde();                               /* cwde */
    II(0x100e1b4e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1b4f, 0x5)   mov(eax, 0x27d);                      /* mov eax, 0x27d */
    II(0x100e1b54, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1b55, 0x5)   mov(ecx, 0x27c);                      /* mov ecx, 0x27c */
    II(0x100e1b5a, 0x3)   lea(ebx, ebp - 0x34);                 /* lea ebx, [ebp-0x34] */
    II(0x100e1b5d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x12));   /* mov edx, [ebp-0x12] */
    II(0x100e1b60, 0x5)   mov(eax, 0x101a1b94);                 /* mov eax, 0x101a1b94 */ /* "Ammo" */
    II(0x100e1b65, 0x5)   calld(0x1012bae2, 0x49f78);           /* call 0x1012bae2 */
    II(0x100e1b6a, 0x5)   jmpd(0x100e1c23, 0xb4);               /* jmp 0x100e1c23 */
l_0x100e1b6f:
    II(0x100e1b6f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1b72, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1b75, 0x5)   calld(0x10076574, -0x6b606);          /* call 0x10076574 */
    II(0x100e1b7a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e1b7c, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100e1b7f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e1b81, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100e1b86, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100e1b88, 0x2)   jnzd(0x100e1ba4, 0x1a);               /* jnz 0x100e1ba4 */
    II(0x100e1b8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1b8d, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1b90, 0x5)   calld(0x10076574, -0x6b621);          /* call 0x10076574 */
    II(0x100e1b95, 0x5)   calld(0x1007623c, -0x6b95e);          /* call 0x1007623c */
    II(0x100e1b9a, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x100e1b9d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e1ba0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e1ba2, 0x2)   jgd(0x100e1ba6, 0x2);                 /* jg 0x100e1ba6 */
l_0x100e1ba4:
    II(0x100e1ba4, 0x2)   jmpd(0x100e1c23, 0x7d);               /* jmp 0x100e1c23 */
l_0x100e1ba6:
    II(0x100e1ba6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1ba9, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1bac, 0x5)   calld(0x10076574, -0x6b63d);          /* call 0x10076574 */
    II(0x100e1bb1, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100e1bb4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e1bb7, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100e1bba, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81d2)); /* mov eax, [eax+0x101c81d2] */
    II(0x100e1bc0, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100e1bc3, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e1bc6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e1bc8, 0x5)   mov(eax, 0x101bd33c);                 /* mov eax, 0x101bd33c */
    II(0x100e1bcd, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e1bcf, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100e1bd2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e1bd4, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1bd5, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x100e1bda, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1bdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1bde, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1be1, 0x5)   calld(0x10076574, -0x6b672);          /* call 0x10076574 */
    II(0x100e1be6, 0x5)   calld(0x1007623c, -0x6b9af);          /* call 0x1007623c */
    II(0x100e1beb, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x100e1bee, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e1bf1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1bf2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1bf5, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e1bf8, 0x5)   calld(0x10076574, -0x6b689);          /* call 0x10076574 */
    II(0x100e1bfd, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100e1c00, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e1c03, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1c04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100e1c07, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100e1c09, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e1c0c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1c0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100e1c10, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x100e1c13, 0x3)   lea(ebx, ebp - 0x34);                 /* lea ebx, [ebp-0x34] */
    II(0x100e1c16, 0x3)   mov(edx, memd_a32(ss, ebp - 0x12));   /* mov edx, [ebp-0x12] */
    II(0x100e1c19, 0x5)   mov(eax, 0x101a1b99);                 /* mov eax, 0x101a1b99 */ /* "Cargo" */
    II(0x100e1c1e, 0x5)   calld(0x1012bae2, 0x49ebf);           /* call 0x1012bae2 */
l_0x100e1c23:
    II(0x100e1c23, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100e1c27, 0x2)   jzd(0x100e1c90, 0x67);                /* jz 0x100e1c90 */
    II(0x100e1c29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1c2c, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1c2f, 0x5)   calld(0x100d4ef0, -0xcd44);           /* call 0x100d4ef0 */
    II(0x100e1c34, 0x1)   cwde();                               /* cwde */
    II(0x100e1c35, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100e1c38, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1c3b, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1c3e, 0x5)   calld(0x100d4ebc, -0xcd87);           /* call 0x100d4ebc */
    II(0x100e1c43, 0x1)   cwde();                               /* cwde */
    II(0x100e1c44, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100e1c47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1c4a, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1c4d, 0x5)   calld(0x100d4ef0, -0xcd62);           /* call 0x100d4ef0 */
    II(0x100e1c52, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e1c55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1c58, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1c5b, 0x5)   calld(0x100d4f58, -0xcd08);           /* call 0x100d4f58 */
    II(0x100e1c60, 0x1)   cwde();                               /* cwde */
    II(0x100e1c61, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e1c63, 0x3)   mov(memd_a32(ss, ebp - 0x2c), edx);   /* mov [ebp-0x2c], edx */
    II(0x100e1c66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1c69, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1c6c, 0x5)   calld(0x100d4ebc, -0xcdb5);           /* call 0x100d4ebc */
    II(0x100e1c71, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e1c74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e1c77, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e1c7a, 0x5)   calld(0x100d4f24, -0xcd5b);           /* call 0x100d4f24 */
    II(0x100e1c7f, 0x1)   cwde();                               /* cwde */
    II(0x100e1c80, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e1c82, 0x3)   mov(memd_a32(ss, ebp - 0x28), edx);   /* mov [ebp-0x28], edx */
    II(0x100e1c85, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x100e1c88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x100e1c8b, 0x5)   calld(sys_display_draw_1, 0x85818);   /* call 0x101674a8 */
l_0x100e1c90:
    II(0x100e1c90, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e1c92, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e1c93, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e1c94, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e1c95, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e1c96, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e1c97, 0x1)   retd();                               /* ret */
FUNC_END

