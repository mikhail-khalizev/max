FUNC_BEGIN(0x1014e823, 0xb20a5746ac1e4a23, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x25, 0x75, 0x1, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf4, 0x8b, 0x45, 0xf4, 0xe8, 0xec, 0x7a, 0xf2, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x62, 0x7c, 0xf2, 0xff, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0xcf, 0x7e, 0xf2, 0xff, 0x8b, 0x40, 0x1b, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xe8, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xfd, 0xc4, 0xfe, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x78, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x1c, 0x7b, 0xf2, 0xff, 0xf6, 0x40, 0x14, 0x40, 0x74, 0x1d, 0xf, 0xbf, 0x4d, 0xe8, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8d, 0x45, 0xec, 0xe8, 0x6a, 0x7b, 0xf2, 0xff, 0xe8, 0xc5, 0x24, 0xf2, 0xff, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x28, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8d, 0x45, 0xe4, 0xe8, 0xf3, 0x81, 0xf2, 0xff, 0x89, 0xc3, 0x8d, 0x45, 0xec, 0xe8, 0x45, 0x7b, 0xf2, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0xe8, 0x5e, 0x62, 0xf2, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xec, 0xe8, 0xc5, 0x7a, 0xf2, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0x10, 0x66, 0x1, 0x82, 0xa3, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x9, 0x83, 0xf2, 0xff, 0xe9, 0x76, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x6e, 0x76, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x1014e823, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x1014e828, 0x5)   calld(sys_check_available_stack_size, 0x17525); /* call 0x10165d52 */
    II(0x1014e82d, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014e82e, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014e82f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014e830, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014e832, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x1014e838, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1014e83b, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1014e83e, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x1014e841, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x1014e844, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014e847, 0x5)   calld(0x10076338, -0xd8514);          /* call 0x10076338 */
    II(0x1014e84c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014e84e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014e851, 0x5)   calld(0x100764b8, -0xd839e);          /* call 0x100764b8 */
    II(0x1014e856, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014e859, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014e85c, 0x5)   calld(0x10076730, -0xd8131);          /* call 0x10076730 */
    II(0x1014e861, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x1014e864, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014e867, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x1014e86a:
    II(0x1014e86a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014e86c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014e86f, 0x5)   calld(0x1013ad71, -0x13b03);          /* call 0x1013ad71 */
    II(0x1014e874, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014e876, 0x6)   jzd(0x1014e8f4, 0x78);                /* jz dword 0x1014e8f4 */
    II(0x1014e87c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014e87f, 0x5)   calld(0x100763a0, -0xd84e4);          /* call 0x100763a0 */
    II(0x1014e884, 0x4)   test(memb_a32(ds, eax + 0x14), 0x40); /* test byte [eax+0x14], 0x40 */
    II(0x1014e888, 0x2)   jzd(0x1014e8a7, 0x1d);                /* jz 0x1014e8a7 */
    II(0x1014e88a, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x18)); /* movsx ecx, word [ebp-0x18] */
    II(0x1014e88e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1014e892, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1014e896, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014e899, 0x5)   calld(0x10076408, -0xd8496);          /* call 0x10076408 */
    II(0x1014e89e, 0x5)   calld(0x10070d68, -0xddb3b);          /* call 0x10070d68 */
    II(0x1014e8a3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014e8a5, 0x2)   jnzd(0x1014e8a9, 0x2);                /* jnz 0x1014e8a9 */
l_0x1014e8a7:
    II(0x1014e8a7, 0x2)   jmpd(0x1014e8d1, 0x28);               /* jmp 0x1014e8d1 */
l_0x1014e8a9:
    II(0x1014e8a9, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1014e8ad, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1014e8b1, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014e8b4, 0x5)   calld(0x10076aac, -0xd7e0d);          /* call 0x10076aac */
    II(0x1014e8b9, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1014e8bb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014e8be, 0x5)   calld(0x10076408, -0xd84bb);          /* call 0x10076408 */
    II(0x1014e8c3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014e8c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014e8c8, 0x5)   calld(0x10074b2b, -0xd9da2);          /* call 0x10074b2b */
    II(0x1014e8cd, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014e8cf, 0x2)   jnzd(0x1014e8d3, 0x2);                /* jnz 0x1014e8d3 */
l_0x1014e8d1:
    II(0x1014e8d1, 0x2)   jmpd(0x1014e8e7, 0x14);               /* jmp 0x1014e8e7 */
l_0x1014e8d3:
    II(0x1014e8d3, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014e8d6, 0x5)   calld(0x100763a0, -0xd853b);          /* call 0x100763a0 */
    II(0x1014e8db, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014e8dd, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1014e8e0, 0x7)   add(memw_a32(ds, edx + 0xa3), ax);    /* add [edx+0xa3], ax */
l_0x1014e8e7:
    II(0x1014e8e7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014e8ea, 0x5)   calld(0x10076bf8, -0xd7cf7);          /* call 0x10076bf8 */
    II(0x1014e8ef, 0x5)   jmpd(0x1014e86a, -0x8a);              /* jmp 0x1014e86a */
l_0x1014e8f4:
    II(0x1014e8f4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014e8f6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014e8f9, 0x5)   calld(0x10075f6c, -0xd8992);          /* call 0x10075f6c */
    II(0x1014e8fe, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014e900, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014e901, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014e902, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014e903, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

