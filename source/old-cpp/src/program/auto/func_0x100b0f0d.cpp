FUNC_BEGIN(0x100b0f0d, 0x13e97d3f6876f918, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x3b, 0x4e, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xda, 0x9d, 0x8, 0, 0x84, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x2e, 0x56, 0xfc, 0xff, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0x8b, 0x1, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xd9, 0x53, 0xfc, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x4d, 0x55, 0xfc, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x83, 0x5c, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xf2, 0x9d, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x4f, 0x1, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x11, 0x54, 0xfc, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x1c, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x15, 0x8d, 0x45, 0xf4, 0xe8, 0xfd, 0x53, 0xfc, 0xff, 0xe8, 0x74, 0x51, 0xfc, 0xff, 0xe8, 0xeb, 0x5d, 0xfc, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x1a, 0x8d, 0x45, 0xf4, 0xe8, 0xe5, 0x53, 0xfc, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x5, 0xe9, 0xff, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0xc6, 0x53, 0xfc, 0xff, 0xe8, 0xcd, 0x16, 0xa, 0, 0x85, 0xc0, 0x74, 0x20, 0x8d, 0x45, 0xf4, 0xe8, 0xb5, 0x53, 0xfc, 0xff, 0xe8, 0xbc, 0x16, 0xa, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf0, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x74, 0x4e, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xf3, 0x4d, 0xb, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x22, 0xbb, 0xbb, 0xe, 0xb, 0x10, 0x8d, 0x45, 0xf4, 0xe8, 0xab, 0x53, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xec, 0xe8, 0x2a, 0xb4, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe0, 0x8b, 0x55, 0xe0, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xff, 0x3c, 0xff, 0xff, 0x8d, 0x45, 0xf4, 0xe8, 0x47, 0x53, 0xfc, 0xff, 0xe8, 0x4e, 0x16, 0xa, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xdc, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x75, 0x9, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x85, 0x8, 0, 0, 0xbb, 0xee, 0xf, 0x1a, 0x10, 0xba, 0xfa, 0xf, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x2, 0x4d, 0xb, 0, 0x89, 0x45, 0xd8, 0x8d, 0x45, 0xf4, 0xe8, 0x5, 0x53, 0xfc, 0xff, 0xe8, 0xc, 0x16, 0xa, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x6a, 0x6b, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xbf, 0x54, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xd1, 0x5a, 0xfc, 0xff, 0x66, 0x3b, 0x42, 0x52, 0x75, 0xc, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x9d, 0x4e, 0xfc, 0xff, 0xeb, 0xf, 0xe9, 0x97, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x8c, 0x4e, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b0f0d, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x100b0f12, 0x5)   calld(sys_check_available_stack_size, 0xb4e3b); /* call 0x10165d52 */
    II(0x100b0f17, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b0f18, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b0f19, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b0f1a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b0f1b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b0f1c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b0f1e, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100b0f24, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b0f27, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b0f2a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0f2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b0f2f, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b0f32, 0x5)   calld(0x1013ad11, 0x89dda);           /* call 0x1013ad11 */
    II(0x100b0f37, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b0f39, 0x2)   jnzd(0x100b0f50, 0x15);               /* jnz 0x100b0f50 */
    II(0x100b0f3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b0f3e, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b0f41, 0x5)   calld(0x10076574, -0x3a9d2);          /* call 0x10076574 */
    II(0x100b0f46, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100b0f49, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b0f4c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b0f4e, 0x2)   jnzd(0x100b0f55, 0x5);                /* jnz 0x100b0f55 */
l_0x100b0f50:
    II(0x100b0f50, 0x5)   jmpd(0x100b10e0, 0x18b);              /* jmp 0x100b10e0 */
l_0x100b0f55:
    II(0x100b0f55, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100b0f5a, 0x5)   calld(0x10076338, -0x3ac27);          /* call 0x10076338 */
    II(0x100b0f5f, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100b0f62, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b0f64, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b0f66, 0x5)   calld(0x100764b8, -0x3aab3);          /* call 0x100764b8 */
    II(0x100b0f6b, 0x2)   jmpd(0x100b0f75, 0x8);                /* jmp 0x100b0f75 */
l_0x100b0f6d:
    II(0x100b0f6d, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b0f70, 0x5)   calld(0x10076bf8, -0x3a37d);          /* call 0x10076bf8 */
l_0x100b0f75:
    II(0x100b0f75, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0f77, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b0f7a, 0x5)   calld(0x1013ad71, 0x89df2);           /* call 0x1013ad71 */
    II(0x100b0f7f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b0f81, 0x6)   jzd(0x100b10d6, 0x14f);               /* jz dword 0x100b10d6 */
    II(0x100b0f87, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b0f8a, 0x5)   calld(0x100763a0, -0x3abef);          /* call 0x100763a0 */
    II(0x100b0f8f, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100b0f93, 0x2)   jnzd(0x100b0fb1, 0x1c);               /* jnz 0x100b0fb1 */
    II(0x100b0f95, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b0f98, 0x3)   add(edx, 0x15);                       /* add edx, 0x15 */
    II(0x100b0f9b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b0f9e, 0x5)   calld(0x100763a0, -0x3ac03);          /* call 0x100763a0 */
    II(0x100b0fa3, 0x5)   calld(0x1007611c, -0x3ae8c);          /* call 0x1007611c */
    II(0x100b0fa8, 0x5)   calld(0x10076d98, -0x3a215);          /* call 0x10076d98 */
    II(0x100b0fad, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b0faf, 0x2)   jnzd(0x100b0fb3, 0x2);                /* jnz 0x100b0fb3 */
l_0x100b0fb1:
    II(0x100b0fb1, 0x2)   jmpd(0x100b0fcd, 0x1a);               /* jmp 0x100b0fcd */
l_0x100b0fb3:
    II(0x100b0fb3, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b0fb6, 0x5)   calld(0x100763a0, -0x3ac1b);          /* call 0x100763a0 */
    II(0x100b0fbb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0fbd, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100b0fc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b0fc3, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b0fc6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b0fc9, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b0fcb, 0x2)   jzd(0x100b0fd2, 0x5);                 /* jz 0x100b0fd2 */
l_0x100b0fcd:
    II(0x100b0fcd, 0x5)   jmpd(0x100b10d1, 0xff);               /* jmp 0x100b10d1 */
l_0x100b0fd2:
    II(0x100b0fd2, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b0fd5, 0x5)   calld(0x100763a0, -0x3ac3a);          /* call 0x100763a0 */
    II(0x100b0fda, 0x5)   calld(0x101526ac, 0xa16cd);           /* call 0x101526ac */
    II(0x100b0fdf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b0fe1, 0x2)   jzd(0x100b1003, 0x20);                /* jz 0x100b1003 */
    II(0x100b0fe3, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b0fe6, 0x5)   calld(0x100763a0, -0x3ac4b);          /* call 0x100763a0 */
    II(0x100b0feb, 0x5)   calld(0x101526ac, 0xa16bc);           /* call 0x101526ac */
    II(0x100b0ff0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100b0ff3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b0ff6, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b0ff9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b0ffc, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100b0fff, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x100b1001, 0x2)   jzd(0x100b1051, 0x4e);                /* jz 0x100b1051 */
l_0x100b1003:
    II(0x100b1003, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100b1008, 0x5)   calld(sys_new, 0xb4df3);              /* call 0x10165e00 */
    II(0x100b100d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100b1010, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100b1013, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b1016, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100b101a, 0x2)   jzd(0x100b103e, 0x22);                /* jz 0x100b103e */
    II(0x100b101c, 0x5)   mov(ebx, 0x100b0ebb);                 /* mov ebx, 0x100b0ebb */
    II(0x100b1021, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b1024, 0x5)   calld(0x100763d4, -0x3ac55);          /* call 0x100763d4 */
    II(0x100b1029, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b102b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100b102e, 0x5)   calld(0x100ac45d, -0x4bd6);           /* call 0x100ac45d */
    II(0x100b1033, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100b1036, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b1039, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100b103c, 0x2)   jmpd(0x100b1044, 0x6);                /* jmp 0x100b1044 */
l_0x100b103e:
    II(0x100b103e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b1041, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100b1044:
    II(0x100b1044, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x100b1047, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b104c, 0x5)   calld(0x100a4d50, -0xc301);           /* call 0x100a4d50 */
l_0x100b1051:
    II(0x100b1051, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b1054, 0x5)   calld(0x100763a0, -0x3acb9);          /* call 0x100763a0 */
    II(0x100b1059, 0x5)   calld(0x101526ac, 0xa164e);           /* call 0x101526ac */
    II(0x100b105e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100b1061, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100b1064, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b1067, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100b106a, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100b106d, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x100b106f, 0x2)   jnzd(0x100b107a, 0x9);                /* jnz 0x100b107a */
    II(0x100b1071, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100b1078, 0x2)   jmpd(0x100b1093, 0x19);               /* jmp 0x100b1093 */
l_0x100b107a:
    II(0x100b107a, 0x5)   mov(ecx, 0x885);                      /* mov ecx, 0x885 */
    II(0x100b107f, 0x5)   mov(ebx, 0x101a0fee);                 /* mov ebx, 0x101a0fee */ /* "ai_move.cpp" */
    II(0x100b1084, 0x5)   mov(edx, 0x101a0ffa);                 /* mov edx, 0x101a0ffa */ /* "unit->GetTask()->GetType() == task_move" */
    II(0x100b1089, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b108b, 0x5)   calld(sys_assert, 0xb4d02);           /* call 0x10165d92 */
    II(0x100b1090, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100b1093:
    II(0x100b1093, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b1096, 0x5)   calld(0x100763a0, -0x3acfb);          /* call 0x100763a0 */
    II(0x100b109b, 0x5)   calld(0x101526ac, 0xa160c);           /* call 0x101526ac */
    II(0x100b10a0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b10a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b10a5, 0x5)   calld(0x100b7c14, 0x6b6a);            /* call 0x100b7c14 */
    II(0x100b10aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b10ad, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b10b0, 0x5)   calld(0x10076574, -0x3ab41);          /* call 0x10076574 */
    II(0x100b10b5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b10b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b10ba, 0x5)   calld(0x10076b90, -0x3a52f);          /* call 0x10076b90 */
    II(0x100b10bf, 0x4)   cmp(ax, memw_a32(ds, edx + 0x52));    /* cmp ax, [edx+0x52] */
    II(0x100b10c3, 0x2)   jnzd(0x100b10d1, 0xc);                /* jnz 0x100b10d1 */
    II(0x100b10c5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b10c7, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b10ca, 0x5)   calld(0x10075f6c, -0x3b163);          /* call 0x10075f6c */
    II(0x100b10cf, 0x2)   jmpd(0x100b10e0, 0xf);                /* jmp 0x100b10e0 */
l_0x100b10d1:
    II(0x100b10d1, 0x5)   jmpd(0x100b0f6d, -0x169);             /* jmp 0x100b0f6d */
l_0x100b10d6:
    II(0x100b10d6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b10d8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b10db, 0x5)   calld(0x10075f6c, -0x3b174);          /* call 0x10075f6c */
l_0x100b10e0:
    II(0x100b10e0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b10e2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b10e3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b10e4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b10e5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b10e6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b10e7, 0x1)   retd();                               /* ret */
FUNC_END

