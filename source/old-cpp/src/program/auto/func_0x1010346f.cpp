FUNC_BEGIN(0x1010346f, 0x808f1ca56ee97f67, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xd9, 0x28, 0x6, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x83, 0x7d, 0xf8, 0, 0x75, 0x19, 0xb9, 0xce, 0, 0, 0, 0xbb, 0x5e, 0x31, 0x1a, 0x10, 0xba, 0x67, 0x31, 0x1a, 0x10, 0xb8, 0x95, 0x31, 0x1a, 0x10, 0xe8, 0x27, 0xd3, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xec, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x4d, 0xec, 0xf, 0xbf, 0x5d, 0xf0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x31, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x57, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x4d, 0xec, 0x8b, 0x45, 0xf0, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xc, 0xfe, 0xff, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x50, 0x8b, 0x45, 0xec, 0x40, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xf0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xf0, 0xfd, 0xff, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x50, 0x8b, 0x45, 0xec, 0x40, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf0, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xd1, 0xfd, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1010346f, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10103474, 0x5)   calld(sys_check_available_stack_size, 0x628d9); /* call 0x10165d52 */
    II(0x10103479, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010347a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010347b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010347c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010347d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010347f, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10103485, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10103488, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1010348b, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x1010348e, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x10103492, 0x2)   jnzd(0x101034ad, 0x19);               /* jnz 0x101034ad */
    II(0x10103494, 0x5)   mov(ecx, 0xce);                       /* mov ecx, 0xce */
    II(0x10103499, 0x5)   mov(ebx, 0x101a315e);                 /* mov ebx, 0x101a315e */ /* "hash.cpp" */
    II(0x1010349e, 0x5)   mov(edx, 0x101a3167);                 /* mov edx, 0x101a3167 */ /* "Attempted to add NULL unit to map hash table." */
    II(0x101034a3, 0x5)   mov(eax, 0x101a3195);                 /* mov eax, 0x101a3195 */ /* "unit != 0" */
    II(0x101034a8, 0x5)   calld(0x100f07d4, -0x12cd9);          /* call 0x100f07d4 */
l_0x101034ad:
    II(0x101034ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101034b0, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x101034b4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101034b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101034ba, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x101034be, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101034c1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101034c3, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101034c6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101034c7, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x14)); /* movsx ecx, word [ebp-0x14] */
    II(0x101034cb, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x101034cf, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101034d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101034d5, 0x5)   calld(0x1010330b, -0x1cf);            /* call 0x1010330b */
    II(0x101034da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101034dd, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x101034e1, 0x2)   jzd(0x1010353a, 0x57);                /* jz 0x1010353a */
    II(0x101034e3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101034e5, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101034e8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101034e9, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x14)); /* movsx ecx, word [ebp-0x14] */
    II(0x101034ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101034f0, 0x1)   inc(eax);                             /* inc eax */
    II(0x101034f1, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101034f4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101034f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101034fa, 0x5)   calld(0x1010330b, -0x1f4);            /* call 0x1010330b */
    II(0x101034ff, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10103501, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10103504, 0x1)   pushd(eax);                           /* push eax */
    II(0x10103505, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10103508, 0x1)   inc(eax);                             /* inc eax */
    II(0x10103509, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1010350c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x10103510, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10103513, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10103516, 0x5)   calld(0x1010330b, -0x210);            /* call 0x1010330b */
    II(0x1010351b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010351d, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10103520, 0x1)   pushd(eax);                           /* push eax */
    II(0x10103521, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10103524, 0x1)   inc(eax);                             /* inc eax */
    II(0x10103525, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10103528, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010352b, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010352c, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1010352f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10103532, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10103535, 0x5)   calld(0x1010330b, -0x22f);            /* call 0x1010330b */
l_0x1010353a:
    II(0x1010353a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010353c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010353d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010353e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010353f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10103540, 0x1)   retd();                               /* ret */
FUNC_END

