FUNC_BEGIN(0x1015a0f9, 0xff04165c0db345f8, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x4f, 0xbc, 0, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0, 0x8b, 0x45, 0xf4, 0x66, 0xff, 0x8, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x75, 0x61, 0xf1, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf0, 0x1, 0xe9, 0x7e, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0, 0x3, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x40, 0x61, 0xf1, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf0, 0x1, 0xe9, 0x49, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x28, 0x3, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x5, 0x61, 0xf1, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf0, 0x1, 0xe9, 0xe, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0, 0x3, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x2, 0, 0, 0, 0xe8, 0xd0, 0x60, 0xf1, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf0, 0x1, 0xe9, 0xd9, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x28, 0x2, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x8, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x95, 0x60, 0xf1, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf0, 0x1, 0xe9, 0x9e, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0xff, 0, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x61, 0x60, 0xf1, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x6d, 0x8b, 0x45, 0xf4, 0x66, 0xff, 0x8, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0, 0x3, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x29, 0x60, 0xf1, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x35, 0x8b, 0x45, 0xf4, 0x66, 0xff, 0, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x2, 0, 0, 0, 0xe8, 0xf8, 0x5f, 0xf1, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1015a0f9, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1015a0fe, 0x5)   calld(sys_check_available_stack_size, 0xbc4f); /* call 0x10165d52 */
    II(0x1015a103, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015a104, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015a105, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015a106, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015a107, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015a109, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1015a10f, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1015a112, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1015a115, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1015a118, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a11b, 0x3)   inc(memw_a32(ds, eax));               /* inc word [eax] */
    II(0x1015a11e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a121, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
    II(0x1015a124, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a129, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a12a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a12d, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1015a130, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a133, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x1015a136, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1015a13a, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a13f, 0x5)   calld(0x100702b9, -0xe9e8b);          /* call 0x100702b9 */
    II(0x1015a144, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x1015a147, 0x2)   jzd(0x1015a152, 0x9);                 /* jz 0x1015a152 */
    II(0x1015a149, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1015a14d, 0x5)   jmpd(0x1015a2d0, 0x17e);              /* jmp 0x1015a2d0 */
l_0x1015a152:
    II(0x1015a152, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a155, 0x4)   add(memw_a32(ds, eax), 0x3);          /* add word [eax], 0x3 */
    II(0x1015a159, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a15e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a15f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a162, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1015a165, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a168, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x1015a16b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1015a16f, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a174, 0x5)   calld(0x100702b9, -0xe9ec0);          /* call 0x100702b9 */
    II(0x1015a179, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x1015a17c, 0x2)   jzd(0x1015a187, 0x9);                 /* jz 0x1015a187 */
    II(0x1015a17e, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1015a182, 0x5)   jmpd(0x1015a2d0, 0x149);              /* jmp 0x1015a2d0 */
l_0x1015a187:
    II(0x1015a187, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a18a, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
    II(0x1015a18d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a190, 0x4)   sub(memw_a32(ds, eax), 0x3);          /* sub word [eax], 0x3 */
    II(0x1015a194, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a199, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a19a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a19d, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1015a1a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a1a3, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x1015a1a6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1015a1aa, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a1af, 0x5)   calld(0x100702b9, -0xe9efb);          /* call 0x100702b9 */
    II(0x1015a1b4, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x1015a1b7, 0x2)   jzd(0x1015a1c2, 0x9);                 /* jz 0x1015a1c2 */
    II(0x1015a1b9, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1015a1bd, 0x5)   jmpd(0x1015a2d0, 0x10e);              /* jmp 0x1015a2d0 */
l_0x1015a1c2:
    II(0x1015a1c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a1c5, 0x4)   add(memw_a32(ds, eax), 0x3);          /* add word [eax], 0x3 */
    II(0x1015a1c9, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a1ce, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a1cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a1d2, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1015a1d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a1d8, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x1015a1db, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1015a1df, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a1e4, 0x5)   calld(0x100702b9, -0xe9f30);          /* call 0x100702b9 */
    II(0x1015a1e9, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x1015a1ec, 0x2)   jzd(0x1015a1f7, 0x9);                 /* jz 0x1015a1f7 */
    II(0x1015a1ee, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1015a1f2, 0x5)   jmpd(0x1015a2d0, 0xd9);               /* jmp 0x1015a2d0 */
l_0x1015a1f7:
    II(0x1015a1f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a1fa, 0x4)   sub(memw_a32(ds, eax), 0x2);          /* sub word [eax], 0x2 */
    II(0x1015a1fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a201, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
    II(0x1015a204, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a209, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a20a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a20d, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1015a210, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a213, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x1015a216, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1015a21a, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a21f, 0x5)   calld(0x100702b9, -0xe9f6b);          /* call 0x100702b9 */
    II(0x1015a224, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x1015a227, 0x2)   jzd(0x1015a232, 0x9);                 /* jz 0x1015a232 */
    II(0x1015a229, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1015a22d, 0x5)   jmpd(0x1015a2d0, 0x9e);               /* jmp 0x1015a2d0 */
l_0x1015a232:
    II(0x1015a232, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a235, 0x3)   inc(memw_a32(ds, eax));               /* inc word [eax] */
    II(0x1015a238, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a23d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a23e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a241, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1015a244, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a247, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x1015a24a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1015a24e, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a253, 0x5)   calld(0x100702b9, -0xe9f9f);          /* call 0x100702b9 */
    II(0x1015a258, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x1015a25b, 0x2)   jzd(0x1015a263, 0x6);                 /* jz 0x1015a263 */
    II(0x1015a25d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1015a261, 0x2)   jmpd(0x1015a2d0, 0x6d);               /* jmp 0x1015a2d0 */
l_0x1015a263:
    II(0x1015a263, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a266, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
    II(0x1015a269, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a26c, 0x4)   add(memw_a32(ds, eax), 0x3);          /* add word [eax], 0x3 */
    II(0x1015a270, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a275, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a276, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a279, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1015a27c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a27f, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x1015a282, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1015a286, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a28b, 0x5)   calld(0x100702b9, -0xe9fd7);          /* call 0x100702b9 */
    II(0x1015a290, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x1015a293, 0x2)   jzd(0x1015a29b, 0x6);                 /* jz 0x1015a29b */
    II(0x1015a295, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1015a299, 0x2)   jmpd(0x1015a2d0, 0x35);               /* jmp 0x1015a2d0 */
l_0x1015a29b:
    II(0x1015a29b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a29e, 0x3)   inc(memw_a32(ds, eax));               /* inc word [eax] */
    II(0x1015a2a1, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a2a6, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a2a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a2aa, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1015a2ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015a2b0, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x1015a2b3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1015a2b7, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015a2bc, 0x5)   calld(0x100702b9, -0xea008);          /* call 0x100702b9 */
    II(0x1015a2c1, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x1015a2c4, 0x2)   jzd(0x1015a2cc, 0x6);                 /* jz 0x1015a2cc */
    II(0x1015a2c6, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1015a2ca, 0x2)   jmpd(0x1015a2d0, 0x4);                /* jmp 0x1015a2d0 */
l_0x1015a2cc:
    II(0x1015a2cc, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x1015a2d0:
    II(0x1015a2d0, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x1015a2d3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015a2d5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015a2d6, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015a2d7, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015a2d8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015a2d9, 0x1)   retd();                               /* ret */
FUNC_END

