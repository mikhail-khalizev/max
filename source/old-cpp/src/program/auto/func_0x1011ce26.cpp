FUNC_BEGIN(0x1011ce26, 0xc0ab1917d1997361, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0x22, 0x8f, 0x4, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xb8, 0x1c, 0, 0, 0, 0xe8, 0xaf, 0x8f, 0x4, 0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x74, 0x25, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x1e, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x1c, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xd4, 0xe8, 0xdc, 0xd0, 0xff, 0xff, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xc8, 0x8b, 0x55, 0xc8, 0x8d, 0x45, 0xc4, 0xe8, 0x1a, 0xe5, 0xf8, 0xff, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xb4, 0xe8, 0xc6, 0xd1, 0xfa, 0xff, 0x89, 0x45, 0xb0, 0x80, 0x65, 0xec, 0xfe, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x1e, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x20, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xe8, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x2, 0x75, 0x10, 0x8b, 0x45, 0xac, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x2, 0xf, 0x84, 0xd6, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xac, 0x8b, 0, 0x1, 0xc2, 0x31, 0xc0, 0x8a, 0x2, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xe0, 0x83, 0xf8, 0x7, 0x7e, 0x23, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0xa7, 0xe4, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0xad, 0xd4, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x1b, 0xd0, 0xf8, 0xff, 0xe9, 0xbd, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xe0, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xb4, 0xe8, 0x2c, 0xdb, 0xf8, 0xff, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0x66, 0x8b, 0x80, 0x48, 0x53, 0x1c, 0x10, 0x29, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0x66, 0x8b, 0x80, 0x4a, 0x53, 0x1c, 0x10, 0x29, 0x45, 0xac, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xac, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xac, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x23, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0x20, 0xe4, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x26, 0xd4, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x94, 0xcf, 0xf8, 0xff, 0xe9, 0x36, 0x1, 0, 0, 0xe9, 0xf, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xb4, 0xe8, 0xca, 0xe4, 0xf6, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x23, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0xeb, 0xe3, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0xf1, 0xd3, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x5f, 0xcf, 0xf8, 0xff, 0xe9, 0x1, 0x1, 0, 0, 0x8d, 0x45, 0xb4, 0xe8, 0x9a, 0xe4, 0xf6, 0xff, 0x89, 0x45, 0xd8, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xff, 0x4d, 0xd8, 0x66, 0x83, 0x7d, 0xd8, 0xff, 0x74, 0x9, 0x8b, 0x45, 0xdc, 0x66, 0x3b, 0x45, 0xfc, 0x7c, 0x5, 0xe9, 0xa2, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xb4, 0xe8, 0x14, 0xda, 0xf8, 0xff, 0x66, 0x8b, 0, 0x1, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xb4, 0xe8, 0x2, 0xda, 0xf8, 0xff, 0x66, 0x8b, 0x40, 0x2, 0x1, 0x45, 0xac, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x8b, 0x15, 0x68, 0x53, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xac, 0x8b, 0, 0x1, 0xd0, 0x8a, 0, 0x24, 0x1f, 0x30, 0xe4, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x74, 0x8, 0xf, 0xbf, 0x45, 0xac, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x13, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x14, 0x52, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x1, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xb4, 0xe8, 0xa4, 0xd9, 0xf8, 0xff, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xb4, 0xe8, 0x93, 0xd9, 0xf8, 0xff, 0xf, 0xbf, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0x40, 0xe2, 0xf8, 0xff, 0xe8, 0xfe, 0xdb, 0xff, 0xff, 0xe9, 0x46, 0xff, 0xff, 0xff, 0x8d, 0x55, 0xc4, 0x8b, 0x45, 0xf4, 0xe8, 0xb7, 0xe2, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x1, 0xd3, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x6f, 0xce, 0xf8, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0xeb, 0xd2, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x59, 0xce, 0xf8, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x1011ce26, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x1011ce2b, 0x5)   calld(sys_check_available_stack_size, 0x48f22); /* call 0x10165d52 */
    II(0x1011ce30, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011ce31, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011ce32, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011ce33, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011ce35, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x1011ce3b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1011ce3e, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1011ce41, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1011ce44, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1011ce47, 0x5)   mov(eax, 0x1c);                       /* mov eax, 0x1c */
    II(0x1011ce4c, 0x5)   calld(sys_new, 0x48faf);              /* call 0x10165e00 */
    II(0x1011ce51, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x1011ce54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1011ce57, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1011ce5a, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x1011ce5e, 0x2)   jzd(0x1011ce85, 0x25);                /* jz 0x1011ce85 */
    II(0x1011ce60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011ce63, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1e));   /* mov ebx, [eax+0x1e] */
    II(0x1011ce66, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011ce69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011ce6c, 0x3)   mov(edx, memd_a32(ds, eax + 0x1c));   /* mov edx, [eax+0x1c] */
    II(0x1011ce6f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011ce72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1011ce75, 0x5)   calld(my_ctor_c20, -0x2f24);          /* call 0x10119f56 */
    II(0x1011ce7a, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x1011ce7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1011ce80, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1011ce83, 0x2)   jmpd(0x1011ce8b, 0x6);                /* jmp 0x1011ce8b */
l_0x1011ce85:
    II(0x1011ce85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1011ce88, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
l_0x1011ce8b:
    II(0x1011ce8b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x38));   /* mov edx, [ebp-0x38] */
    II(0x1011ce8e, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1011ce91, 0x5)   calld(0x100ab3b0, -0x71ae6);          /* call 0x100ab3b0 */
    II(0x1011ce96, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x1011ce9a, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011ce9d, 0x5)   calld(0x100ca068, -0x52e3a);          /* call 0x100ca068 */
    II(0x1011cea2, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1011cea5, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x1011cea9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011ceac, 0x4)   mov(ax, memw_a32(ds, eax + 0x1e));    /* mov ax, [eax+0x1e] */
    II(0x1011ceb0, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011ceb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011ceb6, 0x4)   mov(ax, memw_a32(ds, eax + 0x20));    /* mov ax, [eax+0x20] */
    II(0x1011ceba, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
l_0x1011cebd:
    II(0x1011cebd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1011cec0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011cec3, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x1011cec6, 0x2)   jnzd(0x1011ced8, 0x10);               /* jnz 0x1011ced8 */
    II(0x1011cec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x1011cecb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011cece, 0x4)   cmp(ax, memw_a32(ds, edx + 0x2));     /* cmp ax, [edx+0x2] */
    II(0x1011ced2, 0x6)   jzd(0x1011cfae, 0xd6);                /* jz dword 0x1011cfae */
l_0x1011ced8:
    II(0x1011ced8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1011cedc, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011cedf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011cee2, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x1011cee5, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011cee7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x54)); /* movsx edx, word [ebp-0x54] */
    II(0x1011ceeb, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011ceed, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011ceef, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1011cef1, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x1011cef3, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1011cef6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1011cefa, 0x3)   cmp(eax, 0x7);                        /* cmp eax, 0x7 */
    II(0x1011cefd, 0x2)   jled(0x1011cf22, 0x23);               /* jle 0x1011cf22 */
    II(0x1011ceff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011cf01, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011cf04, 0x5)   calld(0x100ab3b0, -0x71b59);          /* call 0x100ab3b0 */
    II(0x1011cf09, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011cf0b, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011cf0e, 0x5)   calld(0x100aa3c0, -0x72b53);          /* call 0x100aa3c0 */
    II(0x1011cf13, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011cf15, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1011cf18, 0x5)   calld(0x100a9f38, -0x72fe5);          /* call 0x100a9f38 */
    II(0x1011cf1d, 0x5)   jmpd(0x1011d0df, 0x1bd);              /* jmp 0x1011d0df */
l_0x1011cf22:
    II(0x1011cf22, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x1011cf26, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011cf29, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x1011cf2e, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011cf30, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011cf33, 0x5)   calld(0x100aaa64, -0x724d4);          /* call 0x100aaa64 */
    II(0x1011cf38, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1011cf3c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011cf3f, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c5348)); /* mov ax, [eax+0x101c5348] */
    II(0x1011cf46, 0x3)   sub(memd_a32(ss, ebp - 0x18), eax);   /* sub [ebp-0x18], eax */
    II(0x1011cf49, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1011cf4d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011cf50, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c534a)); /* mov ax, [eax+0x101c534a] */
    II(0x1011cf57, 0x3)   sub(memd_a32(ss, ebp - 0x54), eax);   /* sub [ebp-0x54], eax */
    II(0x1011cf5a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1011cf5e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011cf60, 0x2)   jld(0x1011cf6e, 0xc);                 /* jl 0x1011cf6e */
    II(0x1011cf62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1011cf65, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1011cf6c, 0x2)   jld(0x1011cf70, 0x2);                 /* jl 0x1011cf70 */
l_0x1011cf6e:
    II(0x1011cf6e, 0x2)   jmpd(0x1011cf78, 0x8);                /* jmp 0x1011cf78 */
l_0x1011cf70:
    II(0x1011cf70, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x54)); /* movsx eax, word [ebp-0x54] */
    II(0x1011cf74, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011cf76, 0x2)   jged(0x1011cf7a, 0x2);                /* jge 0x1011cf7a */
l_0x1011cf78:
    II(0x1011cf78, 0x2)   jmpd(0x1011cf86, 0xc);                /* jmp 0x1011cf86 */
l_0x1011cf7a:
    II(0x1011cf7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x1011cf7d, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1011cf84, 0x2)   jld(0x1011cfa9, 0x23);                /* jl 0x1011cfa9 */
l_0x1011cf86:
    II(0x1011cf86, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011cf88, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011cf8b, 0x5)   calld(0x100ab3b0, -0x71be0);          /* call 0x100ab3b0 */
    II(0x1011cf90, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011cf92, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011cf95, 0x5)   calld(0x100aa3c0, -0x72bda);          /* call 0x100aa3c0 */
    II(0x1011cf9a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011cf9c, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1011cf9f, 0x5)   calld(0x100a9f38, -0x7306c);          /* call 0x100a9f38 */
    II(0x1011cfa4, 0x5)   jmpd(0x1011d0df, 0x136);              /* jmp 0x1011d0df */
l_0x1011cfa9:
    II(0x1011cfa9, 0x5)   jmpd(0x1011cebd, -0xf1);              /* jmp 0x1011cebd */
l_0x1011cfae:
    II(0x1011cfae, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011cfb1, 0x5)   calld(my_3_get_count, -0x91b36);      /* call 0x1008b480 */
    II(0x1011cfb6, 0x1)   cwde();                               /* cwde */
    II(0x1011cfb7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011cfb9, 0x2)   jnzd(0x1011cfde, 0x23);               /* jnz 0x1011cfde */
    II(0x1011cfbb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011cfbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011cfc0, 0x5)   calld(0x100ab3b0, -0x71c15);          /* call 0x100ab3b0 */
    II(0x1011cfc5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011cfc7, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011cfca, 0x5)   calld(0x100aa3c0, -0x72c0f);          /* call 0x100aa3c0 */
    II(0x1011cfcf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011cfd1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1011cfd4, 0x5)   calld(0x100a9f38, -0x730a1);          /* call 0x100a9f38 */
    II(0x1011cfd9, 0x5)   jmpd(0x1011d0df, 0x101);              /* jmp 0x1011d0df */
l_0x1011cfde:
    II(0x1011cfde, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011cfe1, 0x5)   calld(my_3_get_count, -0x91b66);      /* call 0x1008b480 */
    II(0x1011cfe6, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1011cfe9, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
l_0x1011cff0:
    II(0x1011cff0, 0x3)   dec(memd_a32(ss, ebp - 0x28));        /* dec dword [ebp-0x28] */
    II(0x1011cff3, 0x5)   cmp(memw_a32(ss, ebp - 0x28), -0x1 /* 0xff */); /* cmp word [ebp-0x28], 0xff */
    II(0x1011cff8, 0x2)   jzd(0x1011d003, 0x9);                 /* jz 0x1011d003 */
    II(0x1011cffa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1011cffd, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x1011d001, 0x2)   jld(0x1011d008, 0x5);                 /* jl 0x1011d008 */
l_0x1011d003:
    II(0x1011d003, 0x5)   jmpd(0x1011d0aa, 0xa2);               /* jmp 0x1011d0aa */
l_0x1011d008:
    II(0x1011d008, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1011d00c, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011d00f, 0x5)   calld(0x100aaa28, -0x725ec);          /* call 0x100aaa28 */
    II(0x1011d014, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1011d017, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
    II(0x1011d01a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1011d01e, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011d021, 0x5)   calld(0x100aaa28, -0x725fe);          /* call 0x100aaa28 */
    II(0x1011d026, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x1011d02a, 0x3)   add(memd_a32(ss, ebp - 0x54), eax);   /* add [ebp-0x54], eax */
    II(0x1011d02d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1011d031, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011d034, 0x6)   mov(edx, memd_a32(ds, 0x101c5368));   /* mov edx, [0x101c5368] */
    II(0x1011d03a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011d03c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x54)); /* movsx edx, word [ebp-0x54] */
    II(0x1011d040, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011d042, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011d044, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1011d046, 0x2)   and_(al, 0x1f);                       /* and al, 0x1f */
    II(0x1011d048, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1011d04a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1011d04d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1011d051, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011d053, 0x2)   jzd(0x1011d05d, 0x8);                 /* jz 0x1011d05d */
    II(0x1011d055, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x54)); /* movsx eax, word [ebp-0x54] */
    II(0x1011d059, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011d05b, 0x2)   jnzd(0x1011d05f, 0x2);                /* jnz 0x1011d05f */
l_0x1011d05d:
    II(0x1011d05d, 0x2)   jmpd(0x1011d072, 0x13);               /* jmp 0x1011d072 */
l_0x1011d05f:
    II(0x1011d05f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1011d063, 0x3)   lea(edx, edx + edx * 0x2);            /* lea edx, [edx+edx*2] */
    II(0x1011d066, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1011d068, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1011d06b, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1011d06d, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1011d06f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1011d072:
    II(0x1011d072, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1011d075, 0x3)   add(memd_a32(ss, ebp - 0x24), eax);   /* add [ebp-0x24], eax */
    II(0x1011d078, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1011d07c, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011d07f, 0x5)   calld(0x100aaa28, -0x7265c);          /* call 0x100aaa28 */
    II(0x1011d084, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x1011d086, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011d089, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1011d08d, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011d090, 0x5)   calld(0x100aaa28, -0x7266d);          /* call 0x100aaa28 */
    II(0x1011d095, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1011d098, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1011d09b, 0x5)   calld(0x100ab2e0, -0x71dc0);          /* call 0x100ab2e0 */
    II(0x1011d0a0, 0x5)   calld(0x1011aca3, -0x2402);           /* call 0x1011aca3 */
    II(0x1011d0a5, 0x5)   jmpd(0x1011cff0, -0xba);              /* jmp 0x1011cff0 */
l_0x1011d0aa:
    II(0x1011d0aa, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x1011d0ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011d0b0, 0x5)   calld(0x100ab36c, -0x71d49);          /* call 0x100ab36c */
    II(0x1011d0b5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011d0b7, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011d0ba, 0x5)   calld(0x100aa3c0, -0x72cff);          /* call 0x100aa3c0 */
    II(0x1011d0bf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011d0c1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1011d0c4, 0x5)   calld(0x100a9f38, -0x73191);          /* call 0x100a9f38 */
    II(0x1011d0c9, 0x2)   jmpd(0x1011d0df, 0x14);               /* jmp 0x1011d0df */
//  II(0x1011d0cb, 0x14)  /* Недостижимый код. */
l_0x1011d0df:
    II(0x1011d0df, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011d0e2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011d0e4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011d0e5, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011d0e6, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011d0e7, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

