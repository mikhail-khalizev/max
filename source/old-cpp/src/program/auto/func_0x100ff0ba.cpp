FUNC_BEGIN(0x100ff0ba, 0xe9fbe2388bd5a60c, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x8e, 0x6c, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x88, 0x45, 0xfc, 0x80, 0x7d, 0xfc, 0xa, 0x75, 0xf, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0xf7, 0x6e, 0xf7, 0xff, 0x83, 0xf8, 0x5, 0x74, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0xa2, 0x38, 0x39, 0x1c, 0x10, 0xf, 0xbe, 0x45, 0xfc, 0xe8, 0xcd, 0xed, 0xff, 0xff, 0x66, 0xa1, 0xdc, 0x37, 0x1c, 0x10, 0x89, 0x45, 0xf4, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0xf, 0x85, 0x13, 0x4, 0, 0, 0xe8, 0x5e, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xf0, 0xa1, 0xda, 0x37, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xc5, 0x41, 0xff, 0xff, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x83, 0xf8, 0x1, 0xf, 0x85, 0x4a, 0x2, 0, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x38, 0xb8, 0x8, 0, 0, 0, 0xe8, 0x87, 0x6e, 0xf7, 0xff, 0x85, 0xc0, 0x74, 0x25, 0xe8, 0xa2, 0xb8, 0xfc, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xb7, 0xb8, 0xfc, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x9a, 0x2a, 0x1a, 0x10, 0xe8, 0xaa, 0x6b, 0x1, 0, 0xe8, 0x84, 0xb6, 0x2, 0, 0xe8, 0xd0, 0xa5, 0x2, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x66, 0, 0, 0, 0x80, 0x7d, 0xfc, 0xa, 0x74, 0xf, 0xf, 0xbf, 0x55, 0xec, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x36, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x15, 0x8a, 0x45, 0xec, 0xa2, 0xc8, 0x37, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0xc4, 0x3c, 0xff, 0xff, 0xeb, 0x87, 0x66, 0xc7, 0x45, 0xec, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xec, 0x66, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x4, 0x7d, 0x36, 0xf, 0xbf, 0x55, 0xec, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x9, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x3c, 0x98, 0xfa, 0xff, 0xeb, 0xba, 0xbb, 0x1, 0, 0, 0, 0xf, 0xbe, 0x55, 0xfc, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0xe7, 0xf4, 0xff, 0xff, 0x31, 0xc0, 0xe8, 0, 0x8, 0, 0, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0x9, 0xe8, 0xad, 0xf7, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x66, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x22, 0xe8, 0x6e, 0xb7, 0xfc, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x83, 0xb7, 0xfc, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0xb9, 0x2a, 0x1a, 0x10, 0xe8, 0x76, 0x6a, 0x1, 0, 0xeb, 0x20, 0xe8, 0x4c, 0xb7, 0xfc, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x61, 0xb7, 0xfc, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0xd6, 0x2a, 0x1a, 0x10, 0xe8, 0x54, 0x6a, 0x1, 0, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0x9, 0xe8, 0x4e, 0xf7, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x7, 0xe8, 0x44, 0x20, 0, 0, 0xeb, 0xe5, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0x27, 0xc6, 0x5, 0xc9, 0x37, 0x1c, 0x10, 0x2, 0xe8, 0xc8, 0x60, 0xff, 0xff, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0x9, 0xe8, 0xba, 0x64, 0xf7, 0xff, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x7, 0xe8, 0x14, 0x20, 0, 0, 0xeb, 0xe5, 0xc6, 0x5, 0xc9, 0x37, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0xc4, 0x42, 0xff, 0xff, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xa, 0x75, 0xd, 0xc6, 0x45, 0xfc, 0xa, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0xeb, 0x43, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0x3a, 0x66, 0xc7, 0x45, 0xec, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xec, 0x66, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x4, 0x7d, 0x1e, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x80, 0xb8, 0x91, 0xa4, 0x1c, 0x10, 0, 0x74, 0x9, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x7b, 0xfa, 0xff, 0xff, 0xeb, 0xd2, 0xc6, 0x45, 0xfc, 0x8, 0xe9, 0x1c, 0x1, 0, 0, 0x80, 0x7d, 0xfc, 0xa, 0x75, 0xd, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xec, 0xeb, 0x6, 0x66, 0xc7, 0x45, 0xec, 0, 0, 0xc6, 0x45, 0xe8, 0x1, 0xeb, 0x7, 0x8b, 0x45, 0xec, 0x66, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xe9, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x5, 0xe9, 0xac, 0, 0, 0, 0x80, 0x7d, 0xfc, 0xa, 0x74, 0x9, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xf6, 0xf9, 0xff, 0xff, 0x80, 0x3d, 0x38, 0x39, 0x1c, 0x10, 0, 0x74, 0x24, 0xe8, 0x40, 0x6c, 0xf7, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xc0, 0xa0, 0x20, 0x39, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x2e, 0x29, 0xf7, 0xff, 0x8a, 0x45, 0xec, 0xa2, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0x5d, 0xec, 0x69, 0xdb, 0x47, 0x2, 0, 0, 0xc6, 0x83, 0x91, 0xa4, 0x1c, 0x10, 0, 0x31, 0xdb, 0x8a, 0x5d, 0xe8, 0xf, 0xbe, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xfa, 0xf2, 0xff, 0xff, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xa, 0x75, 0xd, 0xc6, 0x45, 0xfc, 0xa, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0xeb, 0x3c, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0x2c, 0xe8, 0x4d, 0x5f, 0xff, 0xff, 0xe8, 0x48, 0x63, 0xf7, 0xff, 0x85, 0xc0, 0x74, 0x7, 0xe8, 0xa4, 0x1e, 0, 0, 0xeb, 0xf0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0x5b, 0x41, 0xff, 0xff, 0xc6, 0x45, 0xfc, 0x8, 0xc6, 0x45, 0xe8, 0, 0xeb, 0x2, 0xeb, 0x5, 0xe9, 0x3, 0xff, 0xff, 0xff, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0xf, 0x85, 0x76, 0, 0, 0, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0x31, 0xdb, 0x8a, 0x1d, 0x38, 0x39, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xf4, 0xa1, 0xda, 0x37, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xd0, 0xfa, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x57, 0x66, 0xc7, 0x45, 0xec, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xec, 0x66, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x4, 0x7d, 0x26, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x80, 0xb8, 0x91, 0xa4, 0x1c, 0x10, 0, 0x74, 0x11, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc6, 0x80, 0x91, 0xa4, 0x1c, 0x10, 0, 0xeb, 0xca, 0xe8, 0xd0, 0xf9, 0xff, 0xff, 0xff, 0x5, 0xdc, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xf0, 0xe8, 0x1e, 0xfb, 0xff, 0xff, 0xe9, 0xe0, 0xfb, 0xff, 0xff, 0xe8, 0x8b, 0xf5, 0xff, 0xff, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xf, 0x75, 0xa, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x58, 0xfe, 0xfe, 0xff, 0x31, 0xdb, 0xba, 0xa5, 0x6, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x35, 0xda, 0x3, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ff0ba, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100ff0bf, 0x5)   calld(sys_check_available_stack_size, 0x66c8e); /* call 0x10165d52 */
    II(0x100ff0c4, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ff0c5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ff0c6, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ff0c7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ff0c8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ff0c9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ff0ca, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ff0cc, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100ff0d2, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x100ff0d5, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0xa);    /* cmp byte [ebp-0x4], 0xa */
    II(0x100ff0d9, 0x2)   jnzd(0x100ff0ea, 0xf);                /* jnz 0x100ff0ea */
    II(0x100ff0db, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x100ff0e0, 0x5)   calld(0x10075fdc, -0x89109);          /* call 0x10075fdc */
    II(0x100ff0e5, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x100ff0e8, 0x2)   jzd(0x100ff0ec, 0x2);                 /* jz 0x100ff0ec */
l_0x100ff0ea:
    II(0x100ff0ea, 0x2)   jmpd(0x100ff0f2, 0x6);                /* jmp 0x100ff0f2 */
l_0x100ff0ec:
    II(0x100ff0ec, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100ff0f0, 0x2)   jmpd(0x100ff0f6, 0x4);                /* jmp 0x100ff0f6 */
l_0x100ff0f2:
    II(0x100ff0f2, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x100ff0f6:
    II(0x100ff0f6, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100ff0f9, 0x5)   mov(memb_a32(ds, 0x101c3938), al);    /* mov [0x101c3938], al */
    II(0x100ff0fe, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x100ff102, 0x5)   calld(my_game_map_start_animatioin, -0x1233); /* call 0x100fded4 */
    II(0x100ff107, 0x6)   mov(ax, memw_a32(ds, 0x101c37dc));    /* mov ax, [0x101c37dc] */
    II(0x100ff10d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x100ff110:
    II(0x100ff110, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x8);   /* cmp byte [0x101c391e], 0x8 */
    II(0x100ff117, 0x6)   jnzd(0x100ff530, 0x413);              /* jnz dword 0x100ff530 */
    II(0x100ff11d, 0x5)   calld(0x100fef80, -0x1a2);            /* call 0x100fef80 */
    II(0x100ff122, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ff125, 0x5)   mov(eax, memd_a32(ds, 0x101c37da));   /* mov eax, [0x101c37da] */
    II(0x100ff12a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ff12d, 0x5)   calld(0x100f32f7, -0xbe3b);           /* call 0x100f32f7 */
    II(0x100ff132, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff134, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100ff139, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ff13c, 0x6)   jnzd(0x100ff38c, 0x24a);              /* jnz dword 0x100ff38c */
    II(0x100ff142, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100ff149, 0x2)   jzd(0x100ff183, 0x38);                /* jz 0x100ff183 */
    II(0x100ff14b, 0x5)   mov(eax, 0x8);                        /* mov eax, 0x8 */
    II(0x100ff150, 0x5)   calld(0x10075fdc, -0x89179);          /* call 0x10075fdc */
    II(0x100ff155, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ff157, 0x2)   jzd(0x100ff17e, 0x25);                /* jz 0x100ff17e */
    II(0x100ff159, 0x5)   calld(0x100caa00, -0x3475e);          /* call 0x100caa00 */
    II(0x100ff15e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff163, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ff164, 0x5)   calld(0x100caa20, -0x34749);          /* call 0x100caa20 */
    II(0x100ff169, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100ff16b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ff16d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff16f, 0x5)   mov(eax, 0x101a2a9a);                 /* mov eax, 0x101a2a9a */ /* "Starting announcement phase..." */
    II(0x100ff174, 0x5)   calld(0x10115d23, 0x16baa);           /* call 0x10115d23 */
    II(0x100ff179, 0x5)   calld(0x1012a802, 0x2b684);           /* call 0x1012a802 */
l_0x100ff17e:
    II(0x100ff17e, 0x5)   calld(0x10129753, 0x2a5d0);           /* call 0x10129753 */
l_0x100ff183:
    II(0x100ff183, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100ff18a, 0x2)   jmpd(0x100ff192, 0x6);                /* jmp 0x100ff192 */
l_0x100ff18c:
    II(0x100ff18c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ff18f, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100ff192:
    II(0x100ff192, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff196, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ff199, 0x6)   jged(0x100ff205, 0x66);               /* jge dword 0x100ff205 */
    II(0x100ff19f, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0xa);    /* cmp byte [ebp-0x4], 0xa */
    II(0x100ff1a3, 0x2)   jzd(0x100ff1b4, 0xf);                 /* jz 0x100ff1b4 */
    II(0x100ff1a5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100ff1a9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff1ab, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100ff1b0, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ff1b2, 0x2)   jnzd(0x100ff1b6, 0x2);                /* jnz 0x100ff1b6 */
l_0x100ff1b4:
    II(0x100ff1b4, 0x2)   jmpd(0x100ff1ec, 0x36);               /* jmp 0x100ff1ec */
l_0x100ff1b6:
    II(0x100ff1b6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff1ba, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff1c0, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ff1c6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff1cb, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ff1ce, 0x2)   jzd(0x100ff1ea, 0x1a);                /* jz 0x100ff1ea */
    II(0x100ff1d0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff1d4, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff1da, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ff1e0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff1e5, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100ff1e8, 0x2)   jnzd(0x100ff1ec, 0x2);                /* jnz 0x100ff1ec */
l_0x100ff1ea:
    II(0x100ff1ea, 0x2)   jmpd(0x100ff1ee, 0x2);                /* jmp 0x100ff1ee */
l_0x100ff1ec:
    II(0x100ff1ec, 0x2)   jmpd(0x100ff203, 0x15);               /* jmp 0x100ff203 */
l_0x100ff1ee:
    II(0x100ff1ee, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100ff1f1, 0x5)   mov(memb_a32(ds, 0x101c37c8), al);    /* mov [0x101c37c8], al */
    II(0x100ff1f6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff1f8, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100ff1fd, 0x1)   cwde();                               /* cwde */
    II(0x100ff1fe, 0x5)   calld(0x100f2ec7, -0xc33c);           /* call 0x100f2ec7 */
l_0x100ff203:
    II(0x100ff203, 0x2)   jmpd(0x100ff18c, -0x79);              /* jmp 0x100ff18c */
l_0x100ff205:
    II(0x100ff205, 0x6)   mov(memw_a32(ss, ebp - 0x14), 0);     /* mov word [ebp-0x14], 0x0 */
    II(0x100ff20b, 0x2)   jmpd(0x100ff214, 0x7);                /* jmp 0x100ff214 */
l_0x100ff20d:
    II(0x100ff20d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ff210, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
l_0x100ff214:
    II(0x100ff214, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff218, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ff21b, 0x2)   jged(0x100ff253, 0x36);               /* jge 0x100ff253 */
    II(0x100ff21d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100ff221, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff223, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100ff228, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ff22a, 0x2)   jzd(0x100ff246, 0x1a);                /* jz 0x100ff246 */
    II(0x100ff22c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff230, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff236, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ff23c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff241, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ff244, 0x2)   jzd(0x100ff248, 0x2);                 /* jz 0x100ff248 */
l_0x100ff246:
    II(0x100ff246, 0x2)   jmpd(0x100ff251, 0x9);                /* jmp 0x100ff251 */
l_0x100ff248:
    II(0x100ff248, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff24c, 0x5)   calld(0x100a8a8d, -0x567c4);          /* call 0x100a8a8d */
l_0x100ff251:
    II(0x100ff251, 0x2)   jmpd(0x100ff20d, -0x46);              /* jmp 0x100ff20d */
l_0x100ff253:
    II(0x100ff253, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100ff258, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x100ff25c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff25e, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100ff263, 0x1)   cwde();                               /* cwde */
    II(0x100ff264, 0x5)   calld(0x100fe750, -0xb19);            /* call 0x100fe750 */
    II(0x100ff269, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff26b, 0x5)   calld(0x100ffa70, 0x800);             /* call 0x100ffa70 */
    II(0x100ff270, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x100ff277, 0x2)   jnzd(0x100ff282, 0x9);                /* jnz 0x100ff282 */
    II(0x100ff279, 0x5)   calld(0x100fea2b, -0x853);            /* call 0x100fea2b */
    II(0x100ff27e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ff280, 0x2)   jzd(0x100ff284, 0x2);                 /* jz 0x100ff284 */
l_0x100ff282:
    II(0x100ff282, 0x2)   jmpd(0x100ff2ea, 0x66);               /* jmp 0x100ff2ea */
l_0x100ff284:
    II(0x100ff284, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100ff28b, 0x2)   jzd(0x100ff2af, 0x22);                /* jz 0x100ff2af */
    II(0x100ff28d, 0x5)   calld(0x100caa00, -0x34892);          /* call 0x100caa00 */
    II(0x100ff292, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff297, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ff298, 0x5)   calld(0x100caa20, -0x3487d);          /* call 0x100caa20 */
    II(0x100ff29d, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100ff29f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ff2a1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff2a3, 0x5)   mov(eax, 0x101a2ab9);                 /* mov eax, 0x101a2ab9 */ /* "Waiting for remote End Turn." */
    II(0x100ff2a8, 0x5)   calld(0x10115d23, 0x16a76);           /* call 0x10115d23 */
    II(0x100ff2ad, 0x2)   jmpd(0x100ff2cf, 0x20);               /* jmp 0x100ff2cf */
l_0x100ff2af:
    II(0x100ff2af, 0x5)   calld(0x100caa00, -0x348b4);          /* call 0x100caa00 */
    II(0x100ff2b4, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff2b9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ff2ba, 0x5)   calld(0x100caa20, -0x3489f);          /* call 0x100caa20 */
    II(0x100ff2bf, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100ff2c1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ff2c3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff2c5, 0x5)   mov(eax, 0x101a2ad6);                 /* mov eax, 0x101a2ad6 */ /* "Waiting for computer to finish turn." */
    II(0x100ff2ca, 0x5)   calld(0x10115d23, 0x16a54);           /* call 0x10115d23 */
l_0x100ff2cf:
    II(0x100ff2cf, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x100ff2d6, 0x2)   jnzd(0x100ff2e1, 0x9);                /* jnz 0x100ff2e1 */
    II(0x100ff2d8, 0x5)   calld(0x100fea2b, -0x8b2);            /* call 0x100fea2b */
    II(0x100ff2dd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ff2df, 0x2)   jzd(0x100ff2e3, 0x2);                 /* jz 0x100ff2e3 */
l_0x100ff2e1:
    II(0x100ff2e1, 0x2)   jmpd(0x100ff2ea, 0x7);                /* jmp 0x100ff2ea */
l_0x100ff2e3:
    II(0x100ff2e3, 0x5)   calld(0x1010132c, 0x2044);            /* call 0x1010132c */
    II(0x100ff2e8, 0x2)   jmpd(0x100ff2cf, -0x1b);              /* jmp 0x100ff2cf */
l_0x100ff2ea:
    II(0x100ff2ea, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x100ff2f1, 0x2)   jnzd(0x100ff31a, 0x27);               /* jnz 0x100ff31a */
    II(0x100ff2f3, 0x7)   mov(memb_a32(ds, 0x101c37c9), 0x2);   /* mov byte [0x101c37c9], 0x2 */
    II(0x100ff2fa, 0x5)   calld(0x100f53c7, -0x9f38);           /* call 0x100f53c7 */
l_0x100ff2ff:
    II(0x100ff2ff, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x100ff306, 0x2)   jnzd(0x100ff311, 0x9);                /* jnz 0x100ff311 */
    II(0x100ff308, 0x5)   calld(0x100757c7, -0x89b46);          /* call 0x100757c7 */
    II(0x100ff30d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ff30f, 0x2)   jnzd(0x100ff313, 0x2);                /* jnz 0x100ff313 */
l_0x100ff311:
    II(0x100ff311, 0x2)   jmpd(0x100ff31a, 0x7);                /* jmp 0x100ff31a */
l_0x100ff313:
    II(0x100ff313, 0x5)   calld(0x1010132c, 0x2014);            /* call 0x1010132c */
    II(0x100ff318, 0x2)   jmpd(0x100ff2ff, -0x1b);              /* jmp 0x100ff2ff */
l_0x100ff31a:
    II(0x100ff31a, 0x7)   mov(memb_a32(ds, 0x101c37c9), 0x1);   /* mov byte [0x101c37c9], 0x1 */
    II(0x100ff321, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff323, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100ff328, 0x1)   cwde();                               /* cwde */
    II(0x100ff329, 0x5)   calld(0x100f35f2, -0xbd3c);           /* call 0x100f35f2 */
    II(0x100ff32e, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xa);   /* cmp byte [0x101c391e], 0xa */
    II(0x100ff335, 0x2)   jnzd(0x100ff344, 0xd);                /* jnz 0x100ff344 */
    II(0x100ff337, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0xa);    /* mov byte [ebp-0x4], 0xa */
    II(0x100ff33b, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x8);   /* mov byte [0x101c391e], 0x8 */
    II(0x100ff342, 0x2)   jmpd(0x100ff387, 0x43);               /* jmp 0x100ff387 */
l_0x100ff344:
    II(0x100ff344, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x100ff34b, 0x2)   jnzd(0x100ff387, 0x3a);               /* jnz 0x100ff387 */
    II(0x100ff34d, 0x6)   mov(memw_a32(ss, ebp - 0x14), 0);     /* mov word [ebp-0x14], 0x0 */
    II(0x100ff353, 0x2)   jmpd(0x100ff35c, 0x7);                /* jmp 0x100ff35c */
l_0x100ff355:
    II(0x100ff355, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ff358, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
l_0x100ff35c:
    II(0x100ff35c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff360, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ff363, 0x2)   jged(0x100ff383, 0x1e);               /* jge 0x100ff383 */
    II(0x100ff365, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff369, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff36f, 0x7)   cmp(memb_a32(ds, eax + 0x101ca491), 0); /* cmp byte [eax+0x101ca491], 0x0 */
    II(0x100ff376, 0x2)   jzd(0x100ff381, 0x9);                 /* jz 0x100ff381 */
    II(0x100ff378, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff37c, 0x5)   calld(0x100fedfc, -0x585);            /* call 0x100fedfc */
l_0x100ff381:
    II(0x100ff381, 0x2)   jmpd(0x100ff355, -0x2e);              /* jmp 0x100ff355 */
l_0x100ff383:
    II(0x100ff383, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x8);    /* mov byte [ebp-0x4], 0x8 */
l_0x100ff387:
    II(0x100ff387, 0x5)   jmpd(0x100ff4a8, 0x11c);              /* jmp 0x100ff4a8 */
l_0x100ff38c:
    II(0x100ff38c, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0xa);    /* cmp byte [ebp-0x4], 0xa */
    II(0x100ff390, 0x2)   jnzd(0x100ff39f, 0xd);                /* jnz 0x100ff39f */
    II(0x100ff392, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff394, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100ff399, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x100ff39d, 0x2)   jmpd(0x100ff3a5, 0x6);                /* jmp 0x100ff3a5 */
l_0x100ff39f:
    II(0x100ff39f, 0x6)   mov(memw_a32(ss, ebp - 0x14), 0);     /* mov word [ebp-0x14], 0x0 */
l_0x100ff3a5:
    II(0x100ff3a5, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x100ff3a9, 0x2)   jmpd(0x100ff3b2, 0x7);                /* jmp 0x100ff3b2 */
l_0x100ff3ab:
    II(0x100ff3ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ff3ae, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
l_0x100ff3b2:
    II(0x100ff3b2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff3b6, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ff3b9, 0x6)   jged(0x100ff4a8, 0xe9);               /* jge dword 0x100ff4a8 */
    II(0x100ff3bf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff3c3, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff3c9, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ff3cf, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff3d4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ff3d6, 0x2)   jzd(0x100ff3f2, 0x1a);                /* jz 0x100ff3f2 */
    II(0x100ff3d8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff3dc, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff3e2, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ff3e8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff3ed, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ff3f0, 0x2)   jnzd(0x100ff3f7, 0x5);                /* jnz 0x100ff3f7 */
l_0x100ff3f2:
    II(0x100ff3f2, 0x5)   jmpd(0x100ff4a3, 0xac);               /* jmp 0x100ff4a3 */
l_0x100ff3f7:
    II(0x100ff3f7, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0xa);    /* cmp byte [ebp-0x4], 0xa */
    II(0x100ff3fb, 0x2)   jzd(0x100ff406, 0x9);                 /* jz 0x100ff406 */
    II(0x100ff3fd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff401, 0x5)   calld(0x100fedfc, -0x60a);            /* call 0x100fedfc */
l_0x100ff406:
    II(0x100ff406, 0x7)   cmp(memb_a32(ds, 0x101c3938), 0);     /* cmp byte [0x101c3938], 0x0 */
    II(0x100ff40d, 0x2)   jzd(0x100ff433, 0x24);                /* jz 0x100ff433 */
    II(0x100ff40f, 0x5)   calld(0x10076054, -0x893c0);          /* call 0x10076054 */
    II(0x100ff414, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ff416, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ff418, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff41a, 0x5)   mov(al, memb_a32(ds, 0x101c3920));    /* mov al, [0x101c3920] */
    II(0x100ff41f, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100ff422, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff426, 0x5)   calld(0x10071d59, -0x8d6d2);          /* call 0x10071d59 */
    II(0x100ff42b, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100ff42e, 0x5)   mov(memb_a32(ds, 0x101c37da), al);    /* mov [0x101c37da], al */
l_0x100ff433:
    II(0x100ff433, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x100ff437, 0x6)   imul(ebx, ebx, 0x247);                /* imul ebx, ebx, 0x247 */
    II(0x100ff43d, 0x7)   mov(memb_a32(ds, ebx + 0x101ca491), 0); /* mov byte [ebx+0x101ca491], 0x0 */
    II(0x100ff444, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ff446, 0x3)   mov(bl, memb_a32(ss, ebp - 0x18));    /* mov bl, [ebp-0x18] */
    II(0x100ff449, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x100ff44d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff451, 0x5)   calld(0x100fe750, -0xd06);            /* call 0x100fe750 */
    II(0x100ff456, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xa);   /* cmp byte [0x101c391e], 0xa */
    II(0x100ff45d, 0x2)   jnzd(0x100ff46c, 0xd);                /* jnz 0x100ff46c */
    II(0x100ff45f, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0xa);    /* mov byte [ebp-0x4], 0xa */
    II(0x100ff463, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x8);   /* mov byte [0x101c391e], 0x8 */
    II(0x100ff46a, 0x2)   jmpd(0x100ff4a8, 0x3c);               /* jmp 0x100ff4a8 */
l_0x100ff46c:
    II(0x100ff46c, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x100ff473, 0x2)   jnzd(0x100ff4a1, 0x2c);               /* jnz 0x100ff4a1 */
    II(0x100ff475, 0x5)   calld(0x100f53c7, -0xa0b3);           /* call 0x100f53c7 */
l_0x100ff47a:
    II(0x100ff47a, 0x5)   calld(0x100757c7, -0x89cb8);          /* call 0x100757c7 */
    II(0x100ff47f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ff481, 0x2)   jzd(0x100ff48a, 0x7);                 /* jz 0x100ff48a */
    II(0x100ff483, 0x5)   calld(0x1010132c, 0x1ea4);            /* call 0x1010132c */
    II(0x100ff488, 0x2)   jmpd(0x100ff47a, -0x10);              /* jmp 0x100ff47a */
l_0x100ff48a:
    II(0x100ff48a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff48c, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100ff491, 0x1)   cwde();                               /* cwde */
    II(0x100ff492, 0x5)   calld(0x100f35f2, -0xbea5);           /* call 0x100f35f2 */
    II(0x100ff497, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x8);    /* mov byte [ebp-0x4], 0x8 */
    II(0x100ff49b, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x100ff49f, 0x2)   jmpd(0x100ff4a3, 0x2);                /* jmp 0x100ff4a3 */
l_0x100ff4a1:
    II(0x100ff4a1, 0x2)   jmpd(0x100ff4a8, 0x5);                /* jmp 0x100ff4a8 */
l_0x100ff4a3:
    II(0x100ff4a3, 0x5)   jmpd(0x100ff3ab, -0xfd);              /* jmp 0x100ff3ab */
l_0x100ff4a8:
    II(0x100ff4a8, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x100ff4af, 0x6)   jnzd(0x100ff52b, 0x76);               /* jnz dword 0x100ff52b */
    II(0x100ff4b5, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x8);   /* mov byte [0x101c391e], 0x8 */
    II(0x100ff4bc, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ff4be, 0x6)   mov(bl, memb_a32(ds, 0x101c3938));    /* mov bl, [0x101c3938] */
    II(0x100ff4c4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100ff4c8, 0x5)   mov(eax, memd_a32(ds, 0x101c37da));   /* mov eax, [0x101c37da] */
    II(0x100ff4cd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ff4d0, 0x5)   calld(0x100eefa5, -0x10530);          /* call 0x100eefa5 */
    II(0x100ff4d5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ff4d7, 0x2)   jnzd(0x100ff530, 0x57);               /* jnz 0x100ff530 */
    II(0x100ff4d9, 0x6)   mov(memw_a32(ss, ebp - 0x14), 0);     /* mov word [ebp-0x14], 0x0 */
    II(0x100ff4df, 0x2)   jmpd(0x100ff4e8, 0x7);                /* jmp 0x100ff4e8 */
l_0x100ff4e1:
    II(0x100ff4e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ff4e4, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
l_0x100ff4e8:
    II(0x100ff4e8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff4ec, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ff4ef, 0x2)   jged(0x100ff517, 0x26);               /* jge 0x100ff517 */
    II(0x100ff4f1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff4f5, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff4fb, 0x7)   cmp(memb_a32(ds, eax + 0x101ca491), 0); /* cmp byte [eax+0x101ca491], 0x0 */
    II(0x100ff502, 0x2)   jzd(0x100ff515, 0x11);                /* jz 0x100ff515 */
    II(0x100ff504, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ff508, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff50e, 0x7)   mov(memb_a32(ds, eax + 0x101ca491), 0); /* mov byte [eax+0x101ca491], 0x0 */
l_0x100ff515:
    II(0x100ff515, 0x2)   jmpd(0x100ff4e1, -0x36);              /* jmp 0x100ff4e1 */
l_0x100ff517:
    II(0x100ff517, 0x5)   calld(0x100feeec, -0x630);            /* call 0x100feeec */
    II(0x100ff51c, 0x6)   inc(memd_a32(ds, 0x101c37dc));        /* inc dword [0x101c37dc] */
    II(0x100ff522, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ff526, 0x5)   calld(0x100ff049, -0x4e2);            /* call 0x100ff049 */
l_0x100ff52b:
    II(0x100ff52b, 0x5)   jmpd(0x100ff110, -0x420);             /* jmp 0x100ff110 */
l_0x100ff530:
    II(0x100ff530, 0x5)   calld(0x100feac0, -0xa75);            /* call 0x100feac0 */
    II(0x100ff535, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xf);   /* cmp byte [0x101c391e], 0xf */
    II(0x100ff53c, 0x2)   jnzd(0x100ff548, 0xa);                /* jnz 0x100ff548 */
    II(0x100ff53e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ff543, 0x5)   calld(0x100ef3a0, -0x101a8);          /* call 0x100ef3a0 */
l_0x100ff548:
    II(0x100ff548, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ff54a, 0x5)   mov(edx, 0x6a5);                      /* mov edx, 0x6a5 */
    II(0x100ff54f, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100ff554, 0x5)   calld(0x1013cf8e, 0x3da35);           /* call 0x1013cf8e */
    II(0x100ff559, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ff55b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ff55c, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ff55d, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ff55e, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ff55f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ff560, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ff561, 0x1)   retd();                               /* ret */
FUNC_END

