FUNC_BEGIN(0x10124631, 0x4f0906e87fd4ddb6, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0x17, 0x17, 0x4, 0, 0x53, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x8b, 0x45, 0x18, 0x50, 0x8b, 0x45, 0x14, 0x50, 0xe8, 0xfc, 0xf1, 0xff, 0xff, 0x83, 0xc4, 0x8, 0x85, 0xc0, 0x74, 0x1c, 0x8b, 0x45, 0x1c, 0x50, 0x8b, 0x45, 0x14, 0x50, 0xe8, 0x1a, 0xf7, 0xff, 0xff, 0x83, 0xc4, 0x8, 0xc7, 0x45, 0xfc, 0x1, 0, 0, 0, 0xe9, 0x2e, 0x1, 0, 0, 0x83, 0x7d, 0x24, 0x10, 0x75, 0x1a, 0xc6, 0x45, 0xd0, 0x30, 0xc6, 0x45, 0xd1, 0x78, 0xbb, 0x10, 0, 0, 0, 0x8d, 0x55, 0xd2, 0x8b, 0x45, 0x1c, 0xe8, 0x63, 0x4d, 0x5, 0, 0xeb, 0x10, 0xbb, 0xa, 0, 0, 0, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0x1c, 0xe8, 0x51, 0x4d, 0x5, 0, 0x8b, 0x45, 0x14, 0x8b, 0x80, 0x90, 0, 0, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xd0, 0xe8, 0xc, 0xd8, 0x4, 0, 0x8b, 0x55, 0x20, 0x83, 0xc2, 0x4, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0x8b, 0x45, 0x14, 0x8b, 0x90, 0x88, 0, 0, 0, 0x3, 0x55, 0xf4, 0x8b, 0x45, 0x14, 0x3b, 0x90, 0x8c, 0, 0, 0, 0x76, 0xc, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xe9, 0xbc, 0, 0, 0, 0x8b, 0x45, 0x14, 0x8b, 0x90, 0x84, 0, 0, 0, 0x8b, 0x45, 0x14, 0x3, 0x90, 0x88, 0, 0, 0, 0x2b, 0x55, 0xf0, 0x89, 0xd3, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xf0, 0x3, 0x45, 0xf4, 0xe8, 0x69, 0x1a, 0x4, 0, 0x8b, 0x45, 0x18, 0x80, 0x38, 0, 0x74, 0x18, 0x8b, 0x55, 0x18, 0xff, 0x45, 0x18, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8a, 0x12, 0x88, 0x10, 0x8b, 0x45, 0x20, 0xff, 0x4d, 0x20, 0xeb, 0xe0, 0xff, 0x4d, 0x20, 0x83, 0x7d, 0x20, 0xff, 0x74, 0xb, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xc6, 0, 0x20, 0xeb, 0xec, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xc6, 0, 0x3d, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xc6, 0, 0x20, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0x7c, 0x28, 0xd0, 0, 0x74, 0x14, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x55, 0xf0, 0xff, 0x45, 0xf0, 0x8a, 0x44, 0x28, 0xd0, 0x88, 0x2, 0xeb, 0xe2, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xc6, 0, 0xd, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xc6, 0, 0xa, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0x14, 0x1, 0x82, 0x88, 0, 0, 0, 0x8b, 0x45, 0x14, 0x80, 0x48, 0x1, 0x80, 0xc7, 0x45, 0xfc, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5b, 0xc3}))
    II(0x10124631, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x10124636, 0x5)   calld(sys_check_available_stack_size, 0x41717); /* call 0x10165d52 */
    II(0x1012463b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012463c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012463d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012463e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012463f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10124641, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x10124647, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x1012464a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012464b, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1012464e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012464f, 0x5)   calld(0x10123850, -0xe04);            /* call 0x10123850 */
    II(0x10124654, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x10124657, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10124659, 0x2)   jzd(0x10124677, 0x1c);                /* jz 0x10124677 */
    II(0x1012465b, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x1012465e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012465f, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10124662, 0x1)   pushd(eax);                           /* push eax */
    II(0x10124663, 0x5)   calld(0x10123d82, -0x8e6);            /* call 0x10123d82 */
    II(0x10124668, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x1012466b, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x1);    /* mov dword [ebp-0x4], 0x1 */
    II(0x10124672, 0x5)   jmpd(0x101247a5, 0x12e);              /* jmp 0x101247a5 */
l_0x10124677:
    II(0x10124677, 0x4)   cmp(memd_a32(ss, ebp + 0x24), 0x10);  /* cmp dword [ebp+0x24], 0x10 */
    II(0x1012467b, 0x2)   jnzd(0x10124697, 0x1a);               /* jnz 0x10124697 */
    II(0x1012467d, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0x30);  /* mov byte [ebp-0x30], 0x30 */
    II(0x10124681, 0x4)   mov(memb_a32(ss, ebp - 0x2f), 0x78);  /* mov byte [ebp-0x2f], 0x78 */
    II(0x10124685, 0x5)   mov(ebx, 0x10);                       /* mov ebx, 0x10 */
    II(0x1012468a, 0x3)   lea(edx, ebp - 0x2e);                 /* lea edx, [ebp-0x2e] */
    II(0x1012468d, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x10124690, 0x5)   calld(/* sys */ 0x101793f8, 0x54d63); /* call 0x101793f8 */
    II(0x10124695, 0x2)   jmpd(0x101246a7, 0x10);               /* jmp 0x101246a7 */
l_0x10124697:
    II(0x10124697, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x1012469c, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x1012469f, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x101246a2, 0x5)   calld(/* sys */ 0x101793f8, 0x54d51); /* call 0x101793f8 */
l_0x101246a7:
    II(0x101246a7, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101246aa, 0x6)   mov(eax, memd_a32(ds, eax + 0x90));   /* mov eax, [eax+0x90] */
    II(0x101246b0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101246b3, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x101246b6, 0x5)   calld(sys_strlen, 0x4d80c);           /* call 0x10171ec7 */
    II(0x101246bb, 0x3)   mov(edx, memd_a32(ss, ebp + 0x20));   /* mov edx, [ebp+0x20] */
    II(0x101246be, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x101246c1, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101246c3, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x101246c6, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101246c9, 0x6)   mov(edx, memd_a32(ds, eax + 0x88));   /* mov edx, [eax+0x88] */
    II(0x101246cf, 0x3)   add(edx, memd_a32(ss, ebp - 0xc));    /* add edx, [ebp-0xc] */
    II(0x101246d2, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101246d5, 0x6)   cmp(edx, memd_a32(ds, eax + 0x8c));   /* cmp edx, [eax+0x8c] */
    II(0x101246db, 0x2)   jbed(0x101246e9, 0xc);                /* jbe 0x101246e9 */
    II(0x101246dd, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
    II(0x101246e4, 0x5)   jmpd(0x101247a5, 0xbc);               /* jmp 0x101247a5 */
l_0x101246e9:
    II(0x101246e9, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101246ec, 0x6)   mov(edx, memd_a32(ds, eax + 0x84));   /* mov edx, [eax+0x84] */
//    II(0x101246f2, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101246f5, 0x6)   add(edx, memd_a32(ds, eax + 0x88));   /* add edx, [eax+0x88] */
    II(0x101246fb, 0x3)   sub(edx, memd_a32(ss, ebp - 0x10));   /* sub edx, [ebp-0x10] */
    II(0x101246fe, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x10124700, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10124703, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10124706, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10124709, 0x5)   calld(/* sys */ 0x10166177, 0x41a69); /* call 0x10166177 */
l_0x1012470e:
    II(0x1012470e, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x10124711, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x10124714, 0x2)   jzd(0x1012472e, 0x18);                /* jz 0x1012472e */
    II(0x10124716, 0x3)   mov(edx, memd_a32(ss, ebp + 0x18));   /* mov edx, [ebp+0x18] */
    II(0x10124719, 0x3)   inc(memd_a32(ss, ebp + 0x18));        /* inc dword [ebp+0x18] */
    II(0x1012471c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012471f, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x10124722, 0x2)   mov(dl, memb_a32(ds, edx));           /* mov dl, [edx] */
    II(0x10124724, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x10124726, 0x3)   mov(eax, memd_a32(ss, ebp + 0x20));   /* mov eax, [ebp+0x20] */
    II(0x10124729, 0x3)   dec(memd_a32(ss, ebp + 0x20));        /* dec dword [ebp+0x20] */
    II(0x1012472c, 0x2)   jmpd(0x1012470e, -0x20);              /* jmp 0x1012470e */
l_0x1012472e:
    II(0x1012472e, 0x3)   dec(memd_a32(ss, ebp + 0x20));        /* dec dword [ebp+0x20] */
    II(0x10124731, 0x4)   cmp(memd_a32(ss, ebp + 0x20), -0x1 /* 0xff */); /* cmp dword [ebp+0x20], 0xff */
    II(0x10124735, 0x2)   jzd(0x10124742, 0xb);                 /* jz 0x10124742 */
    II(0x10124737, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012473a, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x1012473d, 0x3)   mov(memb_a32(ds, eax), 0x20);         /* mov byte [eax], 0x20 */
    II(0x10124740, 0x2)   jmpd(0x1012472e, -0x14);              /* jmp 0x1012472e */
l_0x10124742:
    II(0x10124742, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10124745, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x10124748, 0x3)   mov(memb_a32(ds, eax), 0x3d);         /* mov byte [eax], 0x3d */
    II(0x1012474b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012474e, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x10124751, 0x3)   mov(memb_a32(ds, eax), 0x20);         /* mov byte [eax], 0x20 */
    II(0x10124754, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
l_0x1012475b:
    II(0x1012475b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012475e, 0x5)   cmp(memb_a32(ds, eax + ebp - 0x30), 0); /* cmp byte [eax+ebp-0x30], 0x0 */
    II(0x10124763, 0x2)   jzd(0x10124779, 0x14);                /* jz 0x10124779 */
    II(0x10124765, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10124768, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
    II(0x1012476b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1012476e, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x10124771, 0x4)   mov(al, memb_a32(ds, eax + ebp - 0x30)); /* mov al, [eax+ebp-0x30] */
    II(0x10124775, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x10124777, 0x2)   jmpd(0x1012475b, -0x1e);              /* jmp 0x1012475b */
l_0x10124779:
    II(0x10124779, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012477c, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x1012477f, 0x3)   mov(memb_a32(ds, eax), 0xd);          /* mov byte [eax], 0xd */
    II(0x10124782, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10124785, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x10124788, 0x3)   mov(memb_a32(ds, eax), 0xa);          /* mov byte [eax], 0xa */
    II(0x1012478b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012478e, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x10124791, 0x6)   add(memd_a32(ds, edx + 0x88), eax);   /* add [edx+0x88], eax */
    II(0x10124797, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1012479a, 0x4)   or_(memb_a32(ds, eax + 0x1), -0x80 /* 0x80 */); /* or byte [eax+0x1], 0x80 */
    II(0x1012479e, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x1);    /* mov dword [ebp-0x4], 0x1 */
l_0x101247a5:
    II(0x101247a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101247a8, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101247aa, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101247ab, 0x1)   popd(edi);                            /* pop edi */
    II(0x101247ac, 0x1)   popd(esi);                            /* pop esi */
    II(0x101247ad, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101247ae, 0x1)   retd();                               /* ret */
FUNC_END

