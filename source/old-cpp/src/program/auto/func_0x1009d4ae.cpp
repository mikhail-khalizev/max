FUNC_BEGIN(0x1009d4ae, 0x79b9b473ea13c882, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x9a, 0x88, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xf4, 0xe8, 0x1f, 0x96, 0xfd, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x98, 0x90, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x85, 0x90, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x45, 0xf6, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0, 0xf, 0x84, 0x51, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x35, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x31, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x33, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x2f, 0x98, 0x89, 0xda, 0xe8, 0xe, 0xee, 0xb, 0, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2f, 0xe8, 0x5d, 0xdc, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x2f, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x33, 0x75, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x31, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x35, 0x74, 0x2, 0xeb, 0x26, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x33, 0x1, 0xd2, 0x8b, 0x45, 0xfc, 0x2b, 0x55, 0xf4, 0x66, 0x89, 0x50, 0x33, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x35, 0x1, 0xd2, 0x8b, 0x45, 0xfc, 0x2b, 0x55, 0xf6, 0x66, 0x89, 0x50, 0x35, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x2f, 0x8d, 0x45, 0xf0, 0xe8, 0xc7, 0x88, 0xfd, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xf4, 0x8d, 0x45, 0xec, 0xe8, 0xba, 0x88, 0xfd, 0xff, 0x89, 0xda, 0xe8, 0x19, 0x8a, 0, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x37, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0x1, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x42, 0x37, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x39, 0x74, 0x75, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x37, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x39, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x2f, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x23, 0xe8, 0x4a, 0xb5, 0xfe, 0xff, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x2f, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x27, 0xe8, 0x39, 0xb5, 0xfe, 0xff, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x2, 0x8b, 0x45, 0xfc, 0x83, 0xe2, 0x7, 0x66, 0x89, 0x50, 0x2b, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x6, 0x8b, 0x45, 0xfc, 0x83, 0xe2, 0x7, 0x66, 0x89, 0x50, 0x2d, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x21, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x3b, 0x1, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x45, 0, 0, 0, 0x84, 0xc0, 0x75, 0x38, 0xe9, 0xa2, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x1b, 0, 0x74, 0x22, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1b, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x58, 0x2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x58, 0x8f, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe8, 0xff, 0x53, 0x70, 0x8b, 0x45, 0xfc, 0xe8, 0x94, 0xc, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1009d4ae, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x1009d4b3, 0x5)   calld(sys_check_available_stack_size, 0xc889a); /* call 0x10165d52 */
    II(0x1009d4b8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009d4b9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009d4ba, 0x1)   pushd(edx);                           /* push edx */
    II(0x1009d4bb, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009d4bc, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009d4bd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009d4be, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009d4c0, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x1009d4c6, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1009d4c9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009d4cc, 0x5)   calld(my_ctor_0x101b4184, -0x269e1);  /* call 0x10076af0 */
    II(0x1009d4d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d4d4, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009d4d7, 0x5)   calld(0x10076574, -0x26f68);          /* call 0x10076574 */
    II(0x1009d4dc, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1009d4e0, 0x4)   mov(memw_a32(ss, ebp - 0xc), ax);     /* mov [ebp-0xc], ax */
    II(0x1009d4e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d4e7, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009d4ea, 0x5)   calld(0x10076574, -0x26f7b);          /* call 0x10076574 */
    II(0x1009d4ef, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1009d4f3, 0x4)   mov(memw_a32(ss, ebp - 0xa), ax);     /* mov [ebp-0xa], ax */
l_0x1009d4f7:
    II(0x1009d4f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d4fa, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0);     /* cmp byte [eax+0x3d], 0x0 */
    II(0x1009d4fe, 0x6)   jzd(0x1009d655, 0x151);               /* jz dword 0x1009d655 */
    II(0x1009d504, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d507, 0x4)   mov(ax, memw_a32(ds, eax + 0x35));    /* mov ax, [eax+0x35] */
    II(0x1009d50b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d50e, 0x4)   sub(ax, memw_a32(ds, edx + 0x31));    /* sub ax, [edx+0x31] */
    II(0x1009d512, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1009d515, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d518, 0x4)   mov(ax, memw_a32(ds, eax + 0x33));    /* mov ax, [eax+0x33] */
    II(0x1009d51c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d51f, 0x4)   sub(ax, memw_a32(ds, edx + 0x2f));    /* sub ax, [edx+0x2f] */
    II(0x1009d523, 0x1)   cwde();                               /* cwde */
    II(0x1009d524, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1009d526, 0x5)   calld(0x1015c339, 0xbee0e);           /* call 0x1015c339 */
    II(0x1009d52b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1009d52e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1009d532, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009d535, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1009d53a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009d53c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d53f, 0x3)   add(eax, 0x2f);                       /* add eax, 0x2f */
    II(0x1009d542, 0x5)   calld(0x1008b1a4, -0x123a3);          /* call 0x1008b1a4 */
    II(0x1009d547, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d54a, 0x4)   mov(dx, memw_a32(ds, eax + 0x2f));    /* mov dx, [eax+0x2f] */
//    II(0x1009d54e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d551, 0x4)   cmp(dx, memw_a32(ds, eax + 0x33));    /* cmp dx, [eax+0x33] */
    II(0x1009d555, 0x2)   jnzd(0x1009d567, 0x10);               /* jnz 0x1009d567 */
    II(0x1009d557, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d55a, 0x4)   mov(dx, memw_a32(ds, eax + 0x31));    /* mov dx, [eax+0x31] */
//    II(0x1009d55e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d561, 0x4)   cmp(dx, memw_a32(ds, eax + 0x35));    /* cmp dx, [eax+0x35] */
    II(0x1009d565, 0x2)   jzd(0x1009d569, 0x2);                 /* jz 0x1009d569 */
l_0x1009d567:
    II(0x1009d567, 0x2)   jmpd(0x1009d58f, 0x26);               /* jmp 0x1009d58f */
l_0x1009d569:
    II(0x1009d569, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d56c, 0x4)   mov(dx, memw_a32(ds, eax + 0x33));    /* mov dx, [eax+0x33] */
    II(0x1009d570, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1009d572, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d575, 0x3)   sub(edx, memd_a32(ss, ebp - 0xc));    /* sub edx, [ebp-0xc] */
    II(0x1009d578, 0x4)   mov(memw_a32(ds, eax + 0x33), dx);    /* mov [eax+0x33], dx */
    II(0x1009d57c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d57f, 0x4)   mov(dx, memw_a32(ds, eax + 0x35));    /* mov dx, [eax+0x35] */
    II(0x1009d583, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1009d585, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d588, 0x3)   sub(edx, memd_a32(ss, ebp - 0xa));    /* sub edx, [ebp-0xa] */
    II(0x1009d58b, 0x4)   mov(memw_a32(ds, eax + 0x35), dx);    /* mov [eax+0x35], dx */
l_0x1009d58f:
    II(0x1009d58f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d592, 0x3)   add(edx, 0x2f);                       /* add edx, 0x2f */
    II(0x1009d595, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1009d598, 0x5)   calld(0x10075e64, -0x27739);          /* call 0x10075e64 */
    II(0x1009d59d, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1009d59f, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x1009d5a2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009d5a5, 0x5)   calld(0x10075e64, -0x27746);          /* call 0x10075e64 */
    II(0x1009d5aa, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1009d5ac, 0x5)   calld(0x100a5fca, 0x8a19);            /* call 0x100a5fca */
    II(0x1009d5b1, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1009d5b4, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1009d5b6, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1009d5b9, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1009d5bb, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1009d5bd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d5c0, 0x4)   mov(memw_a32(ds, edx + 0x37), ax);    /* mov [edx+0x37], ax */
    II(0x1009d5c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d5c7, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x1);   /* mov byte [eax+0x3d], 0x1 */
    II(0x1009d5cb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d5ce, 0x4)   mov(ax, memw_a32(ds, edx + 0x37));    /* mov ax, [edx+0x37] */
//    II(0x1009d5d2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d5d5, 0x4)   cmp(ax, memw_a32(ds, edx + 0x39));    /* cmp ax, [edx+0x39] */
    II(0x1009d5d9, 0x2)   jzd(0x1009d650, 0x75);                /* jz 0x1009d650 */
    II(0x1009d5db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d5de, 0x4)   mov(dx, memw_a32(ds, eax + 0x37));    /* mov dx, [eax+0x37] */
//    II(0x1009d5e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d5e5, 0x4)   mov(memw_a32(ds, eax + 0x39), dx);    /* mov [eax+0x39], dx */
    II(0x1009d5e9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d5ec, 0x3)   add(edx, 0x2f);                       /* add edx, 0x2f */
    II(0x1009d5ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d5f2, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x1009d5f5, 0x5)   calld(0x10088b44, -0x14ab6);          /* call 0x10088b44 */
    II(0x1009d5fa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d5fd, 0x3)   add(edx, 0x2f);                       /* add edx, 0x2f */
    II(0x1009d600, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d603, 0x3)   add(eax, 0x27);                       /* add eax, 0x27 */
    II(0x1009d606, 0x5)   calld(0x10088b44, -0x14ac7);          /* call 0x10088b44 */
    II(0x1009d60b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009d60e, 0x3)   add(edx, 0x2);                        /* add edx, 0x2 */
    II(0x1009d611, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d614, 0x3)   and_(edx, 0x7);                       /* and edx, 0x7 */
    II(0x1009d617, 0x4)   mov(memw_a32(ds, eax + 0x2b), dx);    /* mov [eax+0x2b], dx */
    II(0x1009d61b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009d61e, 0x3)   add(edx, 0x6);                        /* add edx, 0x6 */
    II(0x1009d621, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d624, 0x3)   and_(edx, 0x7);                       /* and edx, 0x7 */
    II(0x1009d627, 0x4)   mov(memw_a32(ds, eax + 0x2d), dx);    /* mov [eax+0x2d], dx */
    II(0x1009d62b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d62e, 0x6)   mov(memw_a32(ds, eax + 0x21), 0);     /* mov word [eax+0x21], 0x0 */
    II(0x1009d634, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d637, 0x6)   mov(memw_a32(ds, eax + 0x3b), 0x1);   /* mov word [eax+0x3b], 0x1 */
    II(0x1009d63d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d640, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1009d644, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d647, 0x5)   calld(0x1009d691, 0x45);              /* call 0x1009d691 */
    II(0x1009d64c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009d64e, 0x2)   jnzd(0x1009d688, 0x38);               /* jnz 0x1009d688 */
l_0x1009d650:
    II(0x1009d650, 0x5)   jmpd(0x1009d4f7, -0x15e);             /* jmp 0x1009d4f7 */
l_0x1009d655:
    II(0x1009d655, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d658, 0x4)   cmp(memd_a32(ds, eax + 0x1b), 0);     /* cmp dword [eax+0x1b], 0x0 */
    II(0x1009d65c, 0x2)   jzd(0x1009d680, 0x22);                /* jz 0x1009d680 */
    II(0x1009d65e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d661, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x1009d664, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1009d667, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1009d66a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1009d66d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d670, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009d673, 0x5)   calld(0x100765d0, -0x270a8);          /* call 0x100765d0 */
    II(0x1009d678, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009d67a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1009d67d, 0x3)   calld_abs(memd_a32(ds, ebx + 0x70));  /* call dword near [ebx+0x70] */
l_0x1009d680:
    II(0x1009d680, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d683, 0x5)   calld(0x1009e31c, 0xc94);             /* call 0x1009e31c */
l_0x1009d688:
    II(0x1009d688, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009d68a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009d68b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009d68c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009d68d, 0x1)   popd(edx);                            /* pop edx */
    II(0x1009d68e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009d68f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009d690, 0x1)   retd();                               /* ret */
FUNC_END

