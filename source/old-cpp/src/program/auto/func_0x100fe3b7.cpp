FUNC_BEGIN(0x100fe3b7, 0xccbf3a76027a22cf, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x91, 0x79, 0x6, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x9, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x4, 0x75, 0x2, 0xeb, 0xc, 0xf, 0xbf, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0xe9, 0xbd, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0x2a, 0x7f, 0xf7, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xa0, 0x80, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x4f, 0xc9, 0x3, 0, 0x84, 0xc0, 0xf, 0x84, 0x7c, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x6e, 0x7f, 0xf7, 0xff, 0xe8, 0x1d, 0x7d, 0xf7, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x3d, 0xff, 0xff, 0, 0, 0x74, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0x55, 0x7f, 0xf7, 0xff, 0xf6, 0x40, 0x12, 0x2, 0x74, 0x2, 0xeb, 0x15, 0x8d, 0x45, 0xec, 0xe8, 0x45, 0x7f, 0xf7, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x74, 0x5, 0xe9, 0x2c, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x27, 0x7f, 0xf7, 0xff, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0xd0, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0xd, 0x7f, 0xf7, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xb6, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0xf3, 0x7e, 0xf7, 0xff, 0x8a, 0x40, 0x27, 0x30, 0xe4, 0x98, 0xe8, 0x9c, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0xd9, 0x7e, 0xf7, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0x82, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0xbf, 0x7e, 0xf7, 0xff, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0xe8, 0x68, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0xa5, 0x7e, 0xf7, 0xff, 0x8a, 0x40, 0x4d, 0x30, 0xe4, 0x98, 0xe8, 0x4e, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x8f, 0x7e, 0xf7, 0xff, 0xf6, 0x40, 0x13, 0x2, 0x75, 0x1a, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x7d, 0x7e, 0xf7, 0xff, 0x8a, 0x40, 0x4e, 0x30, 0xe4, 0x98, 0xe8, 0x26, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x63, 0x7e, 0xf7, 0xff, 0x8a, 0x40, 0x50, 0x30, 0xe4, 0x98, 0xe8, 0xc, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x4d, 0x7e, 0xf7, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x80, 0xb8, 0xd5, 0x81, 0x1c, 0x10, 0, 0x74, 0x1a, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x2f, 0x7e, 0xf7, 0xff, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0xe8, 0xd8, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x15, 0x7e, 0xf7, 0xff, 0x8a, 0x40, 0x54, 0x30, 0xe4, 0x98, 0xe8, 0xbe, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x57, 0x86, 0xf7, 0xff, 0xe9, 0x72, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb5, 0x79, 0xf7, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xa9, 0x79, 0xf7, 0xff, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100fe3b7, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100fe3bc, 0x5)   calld(sys_check_available_stack_size, 0x67991); /* call 0x10165d52 */
    II(0x100fe3c1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100fe3c2, 0x1)   pushd(esi);                           /* push esi */
    II(0x100fe3c3, 0x1)   pushd(edi);                           /* push edi */
    II(0x100fe3c4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100fe3c5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100fe3c7, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100fe3cd, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100fe3d0, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100fe3d3, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100fe3d6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100fe3da, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fe3e0, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100fe3e6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100fe3eb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100fe3ed, 0x2)   jnzd(0x100fe3f8, 0x9);                /* jnz 0x100fe3f8 */
    II(0x100fe3ef, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100fe3f3, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100fe3f6, 0x2)   jnzd(0x100fe3fa, 0x2);                /* jnz 0x100fe3fa */
l_0x100fe3f8:
    II(0x100fe3f8, 0x2)   jmpd(0x100fe406, 0xc);                /* jmp 0x100fe406 */
l_0x100fe3fa:
    II(0x100fe3fa, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fe3fe, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100fe401, 0x5)   jmpd(0x100fe5c3, 0x1bd);              /* jmp 0x100fe5c3 */
l_0x100fe406:
    II(0x100fe406, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fe409, 0x5)   calld(0x10076338, -0x880d6);          /* call 0x10076338 */
    II(0x100fe40e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fe410, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe413, 0x5)   calld(0x100764b8, -0x87f60);          /* call 0x100764b8 */
l_0x100fe418:
    II(0x100fe418, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fe41a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe41d, 0x5)   calld(0x1013ad71, 0x3c94f);           /* call 0x1013ad71 */
    II(0x100fe422, 0x2)   test(al, al);                         /* test al, al */
    II(0x100fe424, 0x6)   jzd(0x100fe5a6, 0x17c);               /* jz dword 0x100fe5a6 */
    II(0x100fe42a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe42d, 0x5)   calld(0x100763a0, -0x88092);          /* call 0x100763a0 */
    II(0x100fe432, 0x5)   calld(0x10076154, -0x882e3);          /* call 0x10076154 */
    II(0x100fe437, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x100fe43c, 0x5)   cmp(eax, 0xffff);                     /* cmp eax, 0xffff */
    II(0x100fe441, 0x2)   jzd(0x100fe451, 0xe);                 /* jz 0x100fe451 */
    II(0x100fe443, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe446, 0x5)   calld(0x100763a0, -0x880ab);          /* call 0x100763a0 */
    II(0x100fe44b, 0x4)   test(memb_a32(ds, eax + 0x12), 0x2);  /* test byte [eax+0x12], 0x2 */
    II(0x100fe44f, 0x2)   jzd(0x100fe453, 0x2);                 /* jz 0x100fe453 */
l_0x100fe451:
    II(0x100fe451, 0x2)   jmpd(0x100fe468, 0x15);               /* jmp 0x100fe468 */
l_0x100fe453:
    II(0x100fe453, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe456, 0x5)   calld(0x100763a0, -0x880bb);          /* call 0x100763a0 */
    II(0x100fe45b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fe45d, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100fe460, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100fe464, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100fe466, 0x2)   jzd(0x100fe46d, 0x5);                 /* jz 0x100fe46d */
l_0x100fe468:
    II(0x100fe468, 0x5)   jmpd(0x100fe599, 0x12c);              /* jmp 0x100fe599 */
l_0x100fe46d:
    II(0x100fe46d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe471, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe474, 0x5)   calld(0x100763a0, -0x880d9);          /* call 0x100763a0 */
    II(0x100fe479, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100fe47c, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100fe47e, 0x1)   cwde();                               /* cwde */
    II(0x100fe47f, 0x5)   calld(0x100fe354, -0x130);            /* call 0x100fe354 */
    II(0x100fe484, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100fe487, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe48b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe48e, 0x5)   calld(0x100763a0, -0x880f3);          /* call 0x100763a0 */
    II(0x100fe493, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100fe496, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fe499, 0x5)   calld(0x100fe354, -0x14a);            /* call 0x100fe354 */
    II(0x100fe49e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100fe4a1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe4a5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe4a8, 0x5)   calld(0x100763a0, -0x8810d);          /* call 0x100763a0 */
    II(0x100fe4ad, 0x3)   mov(al, memb_a32(ds, eax + 0x27));    /* mov al, [eax+0x27] */
    II(0x100fe4b0, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100fe4b2, 0x1)   cwde();                               /* cwde */
    II(0x100fe4b3, 0x5)   calld(0x100fe354, -0x164);            /* call 0x100fe354 */
    II(0x100fe4b8, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100fe4bb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe4bf, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe4c2, 0x5)   calld(0x100763a0, -0x88127);          /* call 0x100763a0 */
    II(0x100fe4c7, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100fe4ca, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fe4cd, 0x5)   calld(0x100fe354, -0x17e);            /* call 0x100fe354 */
    II(0x100fe4d2, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100fe4d5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe4d9, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe4dc, 0x5)   calld(0x100763a0, -0x88141);          /* call 0x100763a0 */
    II(0x100fe4e1, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100fe4e4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fe4e7, 0x5)   calld(0x100fe354, -0x198);            /* call 0x100fe354 */
    II(0x100fe4ec, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100fe4ef, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe4f3, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe4f6, 0x5)   calld(0x100763a0, -0x8815b);          /* call 0x100763a0 */
    II(0x100fe4fb, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100fe4fe, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100fe500, 0x1)   cwde();                               /* cwde */
    II(0x100fe501, 0x5)   calld(0x100fe354, -0x1b2);            /* call 0x100fe354 */
    II(0x100fe506, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100fe509, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe50c, 0x5)   calld(0x100763a0, -0x88171);          /* call 0x100763a0 */
    II(0x100fe511, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x100fe515, 0x2)   jnzd(0x100fe531, 0x1a);               /* jnz 0x100fe531 */
    II(0x100fe517, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe51b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe51e, 0x5)   calld(0x100763a0, -0x88183);          /* call 0x100763a0 */
    II(0x100fe523, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100fe526, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100fe528, 0x1)   cwde();                               /* cwde */
    II(0x100fe529, 0x5)   calld(0x100fe354, -0x1da);            /* call 0x100fe354 */
    II(0x100fe52e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x100fe531:
    II(0x100fe531, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe535, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe538, 0x5)   calld(0x100763a0, -0x8819d);          /* call 0x100763a0 */
    II(0x100fe53d, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100fe540, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100fe542, 0x1)   cwde();                               /* cwde */
    II(0x100fe543, 0x5)   calld(0x100fe354, -0x1f4);            /* call 0x100fe354 */
    II(0x100fe548, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100fe54b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe54e, 0x5)   calld(0x100763a0, -0x881b3);          /* call 0x100763a0 */
    II(0x100fe553, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100fe556, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fe559, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100fe55c, 0x7)   cmp(memb_a32(ds, eax + 0x101c81d5), 0); /* cmp byte [eax+0x101c81d5], 0x0 */
    II(0x100fe563, 0x2)   jzd(0x100fe57f, 0x1a);                /* jz 0x100fe57f */
    II(0x100fe565, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe569, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe56c, 0x5)   calld(0x100763a0, -0x881d1);          /* call 0x100763a0 */
    II(0x100fe571, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100fe574, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fe577, 0x5)   calld(0x100fe354, -0x228);            /* call 0x100fe354 */
    II(0x100fe57c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x100fe57f:
    II(0x100fe57f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fe583, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe586, 0x5)   calld(0x100763a0, -0x881eb);          /* call 0x100763a0 */
    II(0x100fe58b, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x100fe58e, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100fe590, 0x1)   cwde();                               /* cwde */
    II(0x100fe591, 0x5)   calld(0x100fe354, -0x242);            /* call 0x100fe354 */
    II(0x100fe596, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x100fe599:
    II(0x100fe599, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe59c, 0x5)   calld(0x10076bf8, -0x879a9);          /* call 0x10076bf8 */
    II(0x100fe5a1, 0x5)   jmpd(0x100fe418, -0x18e);             /* jmp 0x100fe418 */
l_0x100fe5a6:
    II(0x100fe5a6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fe5aa, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100fe5ad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fe5af, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100fe5b2, 0x5)   calld(0x10075f6c, -0x8864b);          /* call 0x10075f6c */
    II(0x100fe5b7, 0x2)   jmpd(0x100fe5c3, 0xa);                /* jmp 0x100fe5c3 */
//  II(0x100fe5b9, 0xa)   /* Недостижимый код. */
l_0x100fe5c3:
    II(0x100fe5c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100fe5c6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100fe5c8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100fe5c9, 0x1)   popd(edi);                            /* pop edi */
    II(0x100fe5ca, 0x1)   popd(esi);                            /* pop esi */
    II(0x100fe5cb, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100fe5cc, 0x1)   retd();                               /* ret */
FUNC_END

