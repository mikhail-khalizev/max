FUNC_BEGIN(0x100b4d3b, 0x311addf822f5d65a, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0xd, 0x10, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xcd, 0x18, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xc0, 0x18, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x67, 0x62, 0xfd, 0xff, 0x8b, 0x55, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x9d, 0x10, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100b4d3b, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100b4d40, 0x5)   calld(sys_check_available_stack_size, 0xb100d); /* call 0x10165d52 */
    II(0x100b4d45, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b4d46, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b4d47, 0x1)   pushd(edx);                           /* push edx */
    II(0x100b4d48, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b4d49, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b4d4a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b4d4b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b4d4d, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x100b4d53, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100b4d56, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b4d58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b4d5b, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b4d5e, 0x5)   calld(0x10076630, -0x3e733);          /* call 0x10076630 */
    II(0x100b4d63, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b4d65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b4d68, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100b4d6b, 0x5)   calld(0x10076630, -0x3e740);          /* call 0x10076630 */
    II(0x100b4d70, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b4d72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b4d75, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100b4d78, 0x5)   calld(0x1008afe4, -0x29d99);          /* call 0x1008afe4 */
    II(0x100b4d7d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b4d80, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b4d85, 0x5)   calld(0x100a5e27, -0xef63);           /* call 0x100a5e27 */
    II(0x100b4d8a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b4d8c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b4d8d, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b4d8e, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b4d8f, 0x1)   popd(edx);                            /* pop edx */
    II(0x100b4d90, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b4d91, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b4d92, 0x1)   retd();                               /* ret */
FUNC_END

