FUNC_BEGIN(0x100ec26f, 0x244bf5f18d1a6e23, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xd9, 0x9a, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x89, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0xe8, 0xa4, 0xa0, 0xf8, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x1a, 0xa2, 0xf8, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x49, 0xa9, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb8, 0xea, 0x4, 0, 0x84, 0xc0, 0x74, 0x27, 0x8d, 0x45, 0xec, 0xe8, 0xdb, 0xa0, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0xc6, 0xa0, 0xf8, 0xff, 0xe8, 0xc7, 0x46, 0x6, 0, 0x1, 0x45, 0xf0, 0xeb, 0xc3, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xf4, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x78, 0x9c, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x6c, 0x9c, 0xf8, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ec26f, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100ec274, 0x5)   calld(sys_check_available_stack_size, 0x79ad9); /* call 0x10165d52 */
    II(0x100ec279, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ec27a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ec27b, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ec27c, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ec27d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ec27e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ec280, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100ec286, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ec289, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100ec28c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ec28f, 0x5)   calld(0x10076338, -0x75f5c);          /* call 0x10076338 */
    II(0x100ec294, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ec296, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec299, 0x5)   calld(0x100764b8, -0x75de6);          /* call 0x100764b8 */
    II(0x100ec29e, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100ec2a5, 0x2)   jmpd(0x100ec2af, 0x8);                /* jmp 0x100ec2af */
l_0x100ec2a7:
    II(0x100ec2a7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec2aa, 0x5)   calld(0x10076bf8, -0x756b7);          /* call 0x10076bf8 */
l_0x100ec2af:
    II(0x100ec2af, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec2b1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec2b4, 0x5)   calld(0x1013ad71, 0x4eab8);           /* call 0x1013ad71 */
    II(0x100ec2b9, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec2bb, 0x2)   jzd(0x100ec2e4, 0x27);                /* jz 0x100ec2e4 */
    II(0x100ec2bd, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec2c0, 0x5)   calld(0x100763a0, -0x75f25);          /* call 0x100763a0 */
    II(0x100ec2c5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec2c7, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ec2ca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ec2ce, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ec2d0, 0x2)   jnzd(0x100ec2e2, 0x10);               /* jnz 0x100ec2e2 */
    II(0x100ec2d2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec2d5, 0x5)   calld(0x100763a0, -0x75f3a);          /* call 0x100763a0 */
    II(0x100ec2da, 0x5)   calld(0x101509a6, 0x646c7);           /* call 0x101509a6 */
    II(0x100ec2df, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x100ec2e2:
    II(0x100ec2e2, 0x2)   jmpd(0x100ec2a7, -0x3d);              /* jmp 0x100ec2a7 */
l_0x100ec2e4:
    II(0x100ec2e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ec2e7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ec2ea, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec2ec, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ec2ef, 0x5)   calld(0x10075f6c, -0x76388);          /* call 0x10075f6c */
    II(0x100ec2f4, 0x2)   jmpd(0x100ec300, 0xa);                /* jmp 0x100ec300 */
//  II(0x100ec2f6, 0xa)   /* Недостижимый код. */
l_0x100ec300:
    II(0x100ec300, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ec303, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ec305, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ec306, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ec307, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ec308, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ec309, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ec30a, 0x1)   retd();                               /* ret */
FUNC_END

