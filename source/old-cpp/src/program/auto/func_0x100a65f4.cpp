FUNC_BEGIN(0x100a65f4, 0xd4bb338b950778d4, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x54, 0xf7, 0xb, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xdd, 0xfe, 0xfc, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xec, 0xfe, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xc6, 0x45, 0xf0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc1, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x18, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xed, 0xfc, 0xfc, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xe5, 0xfd, 0xfc, 0xff, 0xeb, 0x3e, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x40, 0x74, 0x18, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xc5, 0xfc, 0xfc, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xbd, 0xfd, 0xfc, 0xff, 0xeb, 0x16, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xad, 0xfc, 0xfc, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xa5, 0xfd, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd0, 0x46, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0x3f, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xef, 0xfc, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xf8, 0xf, 0x85, 0x1c, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xd9, 0xfc, 0xfc, 0xff, 0x80, 0x78, 0x3d, 0x4, 0x75, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0xcb, 0xfc, 0xfc, 0xff, 0x66, 0xf7, 0x40, 0x12, 0xc0, 0x1, 0x75, 0x5, 0xe9, 0x80, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xb6, 0xfc, 0xfc, 0xff, 0x31, 0xc9, 0x8a, 0x48, 0x45, 0x8d, 0x45, 0xe8, 0xe8, 0xa9, 0xfc, 0xfc, 0xff, 0xe8, 0x40, 0xfb, 0xfc, 0xff, 0x66, 0xf, 0xaf, 0x48, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0x97, 0xfc, 0xfc, 0xff, 0x8b, 0x55, 0xf4, 0x66, 0x8b, 0x52, 0x19, 0x66, 0x2b, 0x50, 0x1c, 0xf, 0xbf, 0xda, 0x8d, 0x45, 0xe8, 0xe8, 0x81, 0xfc, 0xfc, 0xff, 0x8b, 0x55, 0xf4, 0x66, 0x8b, 0x52, 0x17, 0x66, 0x2b, 0x50, 0x1a, 0xf, 0xbf, 0xc2, 0x89, 0xda, 0xe8, 0x31, 0xf8, 0xff, 0xff, 0x1, 0xc8, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xe0, 0, 0x74, 0x9, 0x8b, 0x45, 0xd8, 0x66, 0x3b, 0x45, 0xdc, 0x7e, 0x15, 0xc6, 0x45, 0xf0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xb4, 0xfc, 0xfc, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0xe9, 0x79, 0, 0, 0, 0x31, 0xdb, 0x8a, 0x5d, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0xfd, 0xfb, 0xfc, 0xff, 0x8b, 0x4d, 0xf4, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x4b, 0xfd, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x5c, 0x8d, 0x45, 0xe8, 0xe8, 0x19, 0xfc, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x19, 0x66, 0x2b, 0x42, 0x1c, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0xe8, 0xe8, 0x1, 0xfc, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x17, 0x66, 0x2b, 0x42, 0x1a, 0x98, 0x89, 0xda, 0xe8, 0xb1, 0xf7, 0xff, 0xff, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xe0, 0, 0x74, 0x9, 0x8b, 0x45, 0xd8, 0x66, 0x3b, 0x45, 0xdc, 0x7e, 0x15, 0xc6, 0x45, 0xf0, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x36, 0xfc, 0xfc, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0x8d, 0x45, 0xe8, 0xe8, 0x15, 0x4, 0xfd, 0xff, 0xe9, 0xaf, 0xfe, 0xff, 0xff, 0x80, 0x7d, 0xf0, 0, 0x75, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xd4, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x67, 0xf7, 0xfc, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x5b, 0xf7, 0xfc, 0xff, 0x8b, 0x45, 0xd4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100a65f4, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x100a65f9, 0x5)   calld(sys_check_available_stack_size, 0xbf754); /* call 0x10165d52 */
    II(0x100a65fe, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a65ff, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a6600, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a6601, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a6602, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a6604, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x100a660a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a660d, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100a6610, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100a6613, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x100a6617, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a661a, 0x5)   calld(0x100764fc, -0x30123);          /* call 0x100764fc */
    II(0x100a661f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100a6622, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x100a6626, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100a662d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100a6631, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100a6635, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100a6638, 0x7)   test(memb_a32(ds, eax + 0x101c81c1), 0x2); /* test byte [eax+0x101c81c1], 0x2 */
    II(0x100a663f, 0x2)   jzd(0x100a6659, 0x18);                /* jz 0x100a6659 */
    II(0x100a6641, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100a6646, 0x5)   calld(0x10076338, -0x30313);          /* call 0x10076338 */
    II(0x100a664b, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100a664e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a6650, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a6652, 0x5)   calld(0x1007643c, -0x3021b);          /* call 0x1007643c */
    II(0x100a6657, 0x2)   jmpd(0x100a6697, 0x3e);               /* jmp 0x100a6697 */
l_0x100a6659:
    II(0x100a6659, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100a665d, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100a6660, 0x7)   test(memb_a32(ds, eax + 0x101c81c0), 0x40); /* test byte [eax+0x101c81c0], 0x40 */
    II(0x100a6667, 0x2)   jzd(0x100a6681, 0x18);                /* jz 0x100a6681 */
    II(0x100a6669, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100a666e, 0x5)   calld(0x10076338, -0x3033b);          /* call 0x10076338 */
    II(0x100a6673, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100a6676, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a6678, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a667a, 0x5)   calld(0x1007643c, -0x30243);          /* call 0x1007643c */
    II(0x100a667f, 0x2)   jmpd(0x100a6697, 0x16);               /* jmp 0x100a6697 */
l_0x100a6681:
    II(0x100a6681, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100a6686, 0x5)   calld(0x10076338, -0x30353);          /* call 0x10076338 */
    II(0x100a668b, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100a668e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a6690, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a6692, 0x5)   calld(0x1007643c, -0x3025b);          /* call 0x1007643c */
l_0x100a6697:
    II(0x100a6697, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6699, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a669c, 0x5)   calld(0x1013ad71, 0x946d0);           /* call 0x1013ad71 */
    II(0x100a66a1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a66a3, 0x6)   jzd(0x100a67e8, 0x13f);               /* jz dword 0x100a67e8 */
    II(0x100a66a9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a66ac, 0x5)   calld(0x100763a0, -0x30311);          /* call 0x100763a0 */
    II(0x100a66b1, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100a66b5, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100a66b9, 0x6)   jnzd(0x100a67db, 0x11c);              /* jnz dword 0x100a67db */
    II(0x100a66bf, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a66c2, 0x5)   calld(0x100763a0, -0x30327);          /* call 0x100763a0 */
    II(0x100a66c7, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x100a66cb, 0x2)   jnzd(0x100a66dd, 0x10);               /* jnz 0x100a66dd */
    II(0x100a66cd, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a66d0, 0x5)   calld(0x100763a0, -0x30335);          /* call 0x100763a0 */
    II(0x100a66d5, 0x6)   test(memw_a32(ds, eax + 0x12), 0x1c0); /* test word [eax+0x12], 0x1c0 */
    II(0x100a66db, 0x2)   jnzd(0x100a66e2, 0x5);                /* jnz 0x100a66e2 */
l_0x100a66dd:
    II(0x100a66dd, 0x5)   jmpd(0x100a6762, 0x80);               /* jmp 0x100a6762 */
l_0x100a66e2:
    II(0x100a66e2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a66e5, 0x5)   calld(0x100763a0, -0x3034a);          /* call 0x100763a0 */
    II(0x100a66ea, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100a66ec, 0x3)   mov(cl, memb_a32(ds, eax + 0x45));    /* mov cl, [eax+0x45] */
    II(0x100a66ef, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a66f2, 0x5)   calld(0x100763a0, -0x30357);          /* call 0x100763a0 */
    II(0x100a66f7, 0x5)   calld(0x1007623c, -0x304c0);          /* call 0x1007623c */
    II(0x100a66fc, 0x5)   imul(cx, memw_a32(ds, eax + 0x10));   /* imul cx, [eax+0x10] */
    II(0x100a6701, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6704, 0x5)   calld(0x100763a0, -0x30369);          /* call 0x100763a0 */
    II(0x100a6709, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100a670c, 0x4)   mov(dx, memw_a32(ds, edx + 0x19));    /* mov dx, [edx+0x19] */
    II(0x100a6710, 0x4)   sub(dx, memw_a32(ds, eax + 0x1c));    /* sub dx, [eax+0x1c] */
    II(0x100a6714, 0x3)   movsx(ebx, dx);                       /* movsx ebx, dx */
    II(0x100a6717, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a671a, 0x5)   calld(0x100763a0, -0x3037f);          /* call 0x100763a0 */
    II(0x100a671f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100a6722, 0x4)   mov(dx, memw_a32(ds, edx + 0x17));    /* mov dx, [edx+0x17] */
    II(0x100a6726, 0x4)   sub(dx, memw_a32(ds, eax + 0x1a));    /* sub dx, [eax+0x1a] */
    II(0x100a672a, 0x3)   movsx(eax, dx);                       /* movsx eax, dx */
    II(0x100a672d, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100a672f, 0x5)   calld(0x100a5f65, -0x7cf);            /* call 0x100a5f65 */
    II(0x100a6734, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x100a6736, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100a6739, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x100a673d, 0x2)   jzd(0x100a6748, 0x9);                 /* jz 0x100a6748 */
    II(0x100a673f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100a6742, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x100a6746, 0x2)   jled(0x100a675d, 0x15);               /* jle 0x100a675d */
l_0x100a6748:
    II(0x100a6748, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100a674c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a674f, 0x5)   calld(0x10076408, -0x3034c);          /* call 0x10076408 */
    II(0x100a6754, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100a6757, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100a675a, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100a675d:
    II(0x100a675d, 0x5)   jmpd(0x100a67db, 0x79);               /* jmp 0x100a67db */
l_0x100a6762:
    II(0x100a6762, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a6764, 0x3)   mov(bl, memb_a32(ss, ebp - 0x4));     /* mov bl, [ebp-0x4] */
    II(0x100a6767, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a676a, 0x5)   calld(0x1007636c, -0x30403);          /* call 0x1007636c */
    II(0x100a676f, 0x3)   mov(ecx, memd_a32(ss, ebp - 0xc));    /* mov ecx, [ebp-0xc] */
    II(0x100a6772, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a6774, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100a6776, 0x5)   calld(0x100a64c6, -0x2b5);            /* call 0x100a64c6 */
    II(0x100a677b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a677d, 0x2)   jzd(0x100a67db, 0x5c);                /* jz 0x100a67db */
    II(0x100a677f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6782, 0x5)   calld(0x100763a0, -0x303e7);          /* call 0x100763a0 */
    II(0x100a6787, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a6789, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a678c, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x100a6790, 0x4)   sub(ax, memw_a32(ds, edx + 0x1c));    /* sub ax, [edx+0x1c] */
    II(0x100a6794, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100a6797, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a679a, 0x5)   calld(0x100763a0, -0x303ff);          /* call 0x100763a0 */
    II(0x100a679f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a67a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a67a4, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x100a67a8, 0x4)   sub(ax, memw_a32(ds, edx + 0x1a));    /* sub ax, [edx+0x1a] */
    II(0x100a67ac, 0x1)   cwde();                               /* cwde */
    II(0x100a67ad, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100a67af, 0x5)   calld(0x100a5f65, -0x84f);            /* call 0x100a5f65 */
    II(0x100a67b4, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100a67b7, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x100a67bb, 0x2)   jzd(0x100a67c6, 0x9);                 /* jz 0x100a67c6 */
    II(0x100a67bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100a67c0, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x100a67c4, 0x2)   jled(0x100a67db, 0x15);               /* jle 0x100a67db */
l_0x100a67c6:
    II(0x100a67c6, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100a67ca, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a67cd, 0x5)   calld(0x10076408, -0x303ca);          /* call 0x10076408 */
    II(0x100a67d2, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100a67d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100a67d8, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100a67db:
    II(0x100a67db, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a67de, 0x5)   calld(0x10076bf8, -0x2fbeb);          /* call 0x10076bf8 */
    II(0x100a67e3, 0x5)   jmpd(0x100a6697, -0x151);             /* jmp 0x100a6697 */
l_0x100a67e8:
    II(0x100a67e8, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x100a67ec, 0x2)   jnzd(0x100a67f5, 0x7);                /* jnz 0x100a67f5 */
    II(0x100a67ee, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x100a67f5:
    II(0x100a67f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100a67f8, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100a67fb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a67fd, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6800, 0x5)   calld(0x10075f6c, -0x30899);          /* call 0x10075f6c */
    II(0x100a6805, 0x2)   jmpd(0x100a6811, 0xa);                /* jmp 0x100a6811 */
//  II(0x100a6807, 0xa)   /* Недостижимый код. */
l_0x100a6811:
    II(0x100a6811, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100a6814, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a6816, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a6817, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a6818, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a6819, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a681a, 0x1)   retd();                               /* ret */
FUNC_END

