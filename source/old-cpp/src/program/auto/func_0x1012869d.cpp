FUNC_BEGIN(0x1012869d, 0xcbcda7aa5b42469b, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xab, 0xd6, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x88, 0x45, 0xfc, 0xe8, 0x30, 0xef, 0xff, 0xff, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0x74, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x7, 0x75, 0x2, 0xeb, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xa, 0x75, 0x2, 0xeb, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xc, 0x75, 0x2, 0xeb, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xd, 0x75, 0x16, 0xe8, 0xff, 0xfb, 0x1, 0, 0xa3, 0xa4, 0x61, 0x1c, 0x10, 0xc6, 0x5, 0xc4, 0x59, 0x1c, 0x10, 0x1, 0xe9, 0x26, 0x1, 0, 0, 0xe8, 0xe9, 0xfb, 0x1, 0, 0x89, 0x45, 0xf8, 0xc6, 0x45, 0xf4, 0x1, 0x80, 0x7d, 0xf4, 0, 0x74, 0x9, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x75, 0x5, 0xe9, 0xe7, 0, 0, 0, 0xe8, 0xc2, 0xee, 0xff, 0xff, 0xe8, 0xb7, 0x20, 0xfc, 0xff, 0x80, 0x3d, 0xc4, 0x59, 0x1c, 0x10, 0, 0x75, 0xf, 0x8b, 0x45, 0xf8, 0xe8, 0x6c, 0xfe, 0x1, 0, 0x3d, 0xf4, 0x1, 0, 0, 0x76, 0x2b, 0x31, 0xdb, 0x8a, 0x1d, 0xbc, 0x59, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x33, 0x1, 0, 0, 0xe8, 0x8b, 0xfb, 0x1, 0, 0x89, 0x45, 0xf8, 0xc6, 0x5, 0xc4, 0x59, 0x1c, 0x10, 0, 0xc6, 0x45, 0xf4, 0, 0xc7, 0x45, 0xf0, 0x4, 0, 0, 0, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0x74, 0x66, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x4a, 0x31, 0xc0, 0xa0, 0xbc, 0x59, 0x1c, 0x10, 0x48, 0x83, 0xe0, 0x3f, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0x8a, 0x80, 0xc0, 0x59, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x39, 0xc2, 0x75, 0x2a, 0xa1, 0xa4, 0x61, 0x1c, 0x10, 0xe8, 0xe1, 0xfd, 0x1, 0, 0x3d, 0x30, 0x75, 0, 0, 0x76, 0x15, 0xbb, 0x1, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0xe8, 0xa9, 0xec, 0xff, 0xff, 0xeb, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x90, 0x80, 0x7d, 0xf4, 0, 0x74, 0x6, 0x80, 0x7d, 0xfc, 0, 0x75, 0x2, 0xeb, 0xc, 0xe8, 0xf3, 0xfa, 0x1, 0, 0xa3, 0xa4, 0x61, 0x1c, 0x10, 0xeb, 0x24, 0xe9, 0x5, 0xff, 0xff, 0xff, 0xa0, 0xbc, 0x59, 0x1c, 0x10, 0xfe, 0xc0, 0x24, 0x3f, 0xa2, 0xbc, 0x59, 0x1c, 0x10, 0xe8, 0xd4, 0xfa, 0x1, 0, 0xa3, 0xa4, 0x61, 0x1c, 0x10, 0xc6, 0x5, 0xc4, 0x59, 0x1c, 0x10, 0x1, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1012869d, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x101286a2, 0x5)   calld(sys_check_available_stack_size, 0x3d6ab); /* call 0x10165d52 */
    II(0x101286a7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101286a8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101286a9, 0x1)   pushd(edx);                           /* push edx */
    II(0x101286aa, 0x1)   pushd(esi);                           /* push esi */
    II(0x101286ab, 0x1)   pushd(edi);                           /* push edi */
    II(0x101286ac, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101286ad, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101286af, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x101286b5, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x101286b8, 0x5)   calld(0x101275ed, -0x10d0);           /* call 0x101275ed */
    II(0x101286bd, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x3);   /* cmp byte [0x101c391e], 0x3 */
    II(0x101286c4, 0x2)   jzd(0x101286cf, 0x9);                 /* jz 0x101286cf */
    II(0x101286c6, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x7);   /* cmp byte [0x101c391e], 0x7 */
    II(0x101286cd, 0x2)   jnzd(0x101286d1, 0x2);                /* jnz 0x101286d1 */
l_0x101286cf:
    II(0x101286cf, 0x2)   jmpd(0x101286da, 0x9);                /* jmp 0x101286da */
l_0x101286d1:
    II(0x101286d1, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xa);   /* cmp byte [0x101c391e], 0xa */
    II(0x101286d8, 0x2)   jnzd(0x101286dc, 0x2);                /* jnz 0x101286dc */
l_0x101286da:
    II(0x101286da, 0x2)   jmpd(0x101286e5, 0x9);                /* jmp 0x101286e5 */
l_0x101286dc:
    II(0x101286dc, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xc);   /* cmp byte [0x101c391e], 0xc */
    II(0x101286e3, 0x2)   jnzd(0x101286e7, 0x2);                /* jnz 0x101286e7 */
l_0x101286e5:
    II(0x101286e5, 0x2)   jmpd(0x101286f0, 0x9);                /* jmp 0x101286f0 */
l_0x101286e7:
    II(0x101286e7, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xd);   /* cmp byte [0x101c391e], 0xd */
    II(0x101286ee, 0x2)   jnzd(0x10128706, 0x16);               /* jnz 0x10128706 */
l_0x101286f0:
    II(0x101286f0, 0x5)   calld(0x101482f4, 0x1fbff);           /* call 0x101482f4 */
    II(0x101286f5, 0x5)   mov(memd_a32(ds, 0x101c61a4), eax);   /* mov [0x101c61a4], eax */
    II(0x101286fa, 0x7)   mov(memb_a32(ds, 0x101c59c4), 0x1);   /* mov byte [0x101c59c4], 0x1 */
    II(0x10128701, 0x5)   jmpd(0x1012882c, 0x126);              /* jmp 0x1012882c */
l_0x10128706:
    II(0x10128706, 0x5)   calld(0x101482f4, 0x1fbe9);           /* call 0x101482f4 */
    II(0x1012870b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1012870e, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x10128712:
    II(0x10128712, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x10128716, 0x2)   jzd(0x10128721, 0x9);                 /* jz 0x10128721 */
    II(0x10128718, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x1012871f, 0x2)   jnzd(0x10128726, 0x5);                /* jnz 0x10128726 */
l_0x10128721:
    II(0x10128721, 0x5)   jmpd(0x1012880d, 0xe7);               /* jmp 0x1012880d */
l_0x10128726:
    II(0x10128726, 0x5)   calld(0x101275ed, -0x113e);           /* call 0x101275ed */
    II(0x1012872b, 0x5)   calld(0x100ea7e7, -0x3df49);          /* call 0x100ea7e7 */
    II(0x10128730, 0x7)   cmp(memb_a32(ds, 0x101c59c4), 0);     /* cmp byte [0x101c59c4], 0x0 */
    II(0x10128737, 0x2)   jnzd(0x10128748, 0xf);                /* jnz 0x10128748 */
    II(0x10128739, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012873c, 0x5)   calld(0x101485ad, 0x1fe6c);           /* call 0x101485ad */
    II(0x10128741, 0x5)   cmp(eax, 0x1f4);                      /* cmp eax, 0x1f4 */
    II(0x10128746, 0x2)   jbed(0x10128773, 0x2b);               /* jbe 0x10128773 */
l_0x10128748:
    II(0x10128748, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1012874a, 0x6)   mov(bl, memb_a32(ds, 0x101c59bc));    /* mov bl, [0x101c59bc] */
    II(0x10128750, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10128752, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10128757, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012875a, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012875f, 0x5)   calld(0x10128897, 0x133);             /* call 0x10128897 */
    II(0x10128764, 0x5)   calld(0x101482f4, 0x1fb8b);           /* call 0x101482f4 */
    II(0x10128769, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1012876c, 0x7)   mov(memb_a32(ds, 0x101c59c4), 0);     /* mov byte [0x101c59c4], 0x0 */
l_0x10128773:
    II(0x10128773, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x10128777, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x4);   /* mov dword [ebp-0x10], 0x4 */
l_0x1012877e:
    II(0x1012877e, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x10128781, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x10128786, 0x2)   jzd(0x101287ee, 0x66);                /* jz 0x101287ee */
    II(0x10128788, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012878c, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10128792, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10128798, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012879d, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x101287a0, 0x2)   jnzd(0x101287ec, 0x4a);               /* jnz 0x101287ec */
    II(0x101287a2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101287a4, 0x5)   mov(al, memb_a32(ds, 0x101c59bc));    /* mov al, [0x101c59bc] */
    II(0x101287a9, 0x1)   dec(eax);                             /* dec eax */
    II(0x101287aa, 0x3)   and_(eax, 0x3f);                      /* and eax, 0x3f */
    II(0x101287ad, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101287af, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x101287b3, 0x6)   mov(al, memb_a32(ds, eax + 0x101c59c0)); /* mov al, [eax+0x101c59c0] */
    II(0x101287b9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101287be, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x101287c0, 0x2)   jnzd(0x101287ec, 0x2a);               /* jnz 0x101287ec */
    II(0x101287c2, 0x5)   mov(eax, memd_a32(ds, 0x101c61a4));   /* mov eax, [0x101c61a4] */
    II(0x101287c7, 0x5)   calld(0x101485ad, 0x1fde1);           /* call 0x101485ad */
    II(0x101287cc, 0x5)   cmp(eax, 0x7530);                     /* cmp eax, 0x7530 */
    II(0x101287d1, 0x2)   jbed(0x101287e8, 0x15);               /* jbe 0x101287e8 */
    II(0x101287d3, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101287d8, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101287dd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x101287e1, 0x5)   calld(0x1012748f, -0x1357);           /* call 0x1012748f */
    II(0x101287e6, 0x2)   jmpd(0x101287ee, 0x6);                /* jmp 0x101287ee */
l_0x101287e8:
    II(0x101287e8, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x101287ec:
    II(0x101287ec, 0x2)   jmpd(0x1012877e, -0x70);              /* jmp 0x1012877e */
l_0x101287ee:
    II(0x101287ee, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x101287f2, 0x2)   jzd(0x101287fa, 0x6);                 /* jz 0x101287fa */
    II(0x101287f4, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x101287f8, 0x2)   jnzd(0x101287fc, 0x2);                /* jnz 0x101287fc */
l_0x101287fa:
    II(0x101287fa, 0x2)   jmpd(0x10128808, 0xc);                /* jmp 0x10128808 */
l_0x101287fc:
    II(0x101287fc, 0x5)   calld(0x101482f4, 0x1faf3);           /* call 0x101482f4 */
    II(0x10128801, 0x5)   mov(memd_a32(ds, 0x101c61a4), eax);   /* mov [0x101c61a4], eax */
    II(0x10128806, 0x2)   jmpd(0x1012882c, 0x24);               /* jmp 0x1012882c */
l_0x10128808:
    II(0x10128808, 0x5)   jmpd(0x10128712, -0xfb);              /* jmp 0x10128712 */
l_0x1012880d:
    II(0x1012880d, 0x5)   mov(al, memb_a32(ds, 0x101c59bc));    /* mov al, [0x101c59bc] */
    II(0x10128812, 0x2)   inc(al);                              /* inc al */
    II(0x10128814, 0x2)   and_(al, 0x3f);                       /* and al, 0x3f */
    II(0x10128816, 0x5)   mov(memb_a32(ds, 0x101c59bc), al);    /* mov [0x101c59bc], al */
    II(0x1012881b, 0x5)   calld(0x101482f4, 0x1fad4);           /* call 0x101482f4 */
    II(0x10128820, 0x5)   mov(memd_a32(ds, 0x101c61a4), eax);   /* mov [0x101c61a4], eax */
    II(0x10128825, 0x7)   mov(memb_a32(ds, 0x101c59c4), 0x1);   /* mov byte [0x101c59c4], 0x1 */
l_0x1012882c:
    II(0x1012882c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012882e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012882f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10128830, 0x1)   popd(esi);                            /* pop esi */
    II(0x10128831, 0x1)   popd(edx);                            /* pop edx */
    II(0x10128832, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10128833, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10128834, 0x1)   retd();                               /* ret */
FUNC_END

