FUNC_BEGIN(0x1015dfe7, 0x9205f8d1a303f637, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x61, 0x7d, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x1e, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x1, 0x74, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x59, 0, 0x74, 0x2, 0xeb, 0x20, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0xc1, 0xe0, 0x2, 0xbb, 0xb4, 0x94, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x34, 0xcd, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x7, 0x3, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xc6, 0x45, 0xf8, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x93, 0x8a, 0xf1, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xd7, 0x81, 0xf1, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0x70, 0x80, 0xf1, 0xff, 0x85, 0xc0, 0xf, 0x84, 0x31, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x60, 0x80, 0xf1, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x5d, 0xe4, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe0, 0xe8, 0x1c, 0xf9, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xa5, 0xaa, 0xf2, 0xff, 0x8b, 0x45, 0xe4, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7e, 0xf, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0xe, 0x8b, 0x45, 0xe4, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x3a, 0x50, 0x26, 0x75, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xe4, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x2b, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xe4, 0xe8, 0x87, 0x7f, 0xf1, 0xff, 0x84, 0xc0, 0x75, 0x12, 0x8b, 0x45, 0xe4, 0xe8, 0x43, 0x81, 0xf1, 0xff, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x19, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xf3, 0x44, 0xff, 0xff, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xe9, 0x8f, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x12, 0x8b, 0x45, 0xfc, 0xe8, 0xf5, 0x80, 0xf1, 0xff, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x29, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0xf, 0xaf, 0xd0, 0x89, 0xd1, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0xdc, 0xe8, 0xfb, 0x7c, 0xf1, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2c, 0x2b, 0xf1, 0xff, 0x98, 0x39, 0xc8, 0x7f, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x28, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x83, 0x7d, 0xe4, 0, 0x75, 0x66, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x74, 0x3c, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0xce, 0x7e, 0xf1, 0xff, 0xbb, 0x18, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0x66, 0x4e, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0xe, 0x44, 0xff, 0xff, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x94, 0x8b, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x3d, 0x27, 0xfa, 0xff, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x38, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0xf, 0xaf, 0xd0, 0x89, 0xd1, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0xec, 0xe8, 0x33, 0x7c, 0xf1, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x64, 0x2a, 0xf1, 0xff, 0x98, 0x39, 0xc8, 0x7e, 0x35, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0xc2, 0xca, 0xfd, 0xff, 0x84, 0xc0, 0x75, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x41, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x50, 0x1a, 0x74, 0x2, 0xeb, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x43, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x50, 0x1c, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0x6f, 0, 0, 0, 0x8b, 0x45, 0xe4, 0x80, 0x78, 0x3d, 0x2, 0x74, 0x9, 0x8b, 0x45, 0xe4, 0x80, 0x78, 0x3d, 0x1b, 0x75, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xe4, 0x80, 0x78, 0x3d, 0x1e, 0x75, 0x9, 0x8b, 0x45, 0xe4, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x49, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x85, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0xbb, 0x1c, 0, 0, 0, 0xba, 0x1e, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x6e, 0x4d, 0, 0, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x66, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x50, 0, 0x74, 0x18, 0xf, 0xbf, 0x4d, 0xf0, 0xf, 0xbf, 0x5d, 0xea, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0x60, 0x2a, 0xf1, 0xff, 0x85, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xf4, 0, 0xeb, 0x3f, 0xb8, 0x90, 0x81, 0x1c, 0x10, 0xe8, 0x74, 0x88, 0xf1, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x6, 0xc6, 0x45, 0xf4, 0, 0xeb, 0x2a, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0xb8, 0xb4, 0x94, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xea, 0x82, 0xf1, 0xff, 0xc6, 0x5, 0x70, 0x81, 0x1c, 0x10, 0x1, 0xc6, 0x45, 0xf4, 0x1, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015dfe7, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x1015dfec, 0x5)   calld(sys_check_available_stack_size, 0x7d61); /* call 0x10165d52 */
    II(0x1015dff1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015dff2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015dff3, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015dff4, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015dff5, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015dff6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015dff7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015dff9, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1015dfff, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015e002, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e005, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x1015e009, 0x2)   jnzd(0x1015e014, 0x9);                /* jnz 0x1015e014 */
    II(0x1015e00b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e00e, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x1015e012, 0x2)   jzd(0x1015e016, 0x2);                 /* jz 0x1015e016 */
l_0x1015e014:
    II(0x1015e014, 0x2)   jmpd(0x1015e01f, 0x9);                /* jmp 0x1015e01f */
l_0x1015e016:
    II(0x1015e016, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e019, 0x4)   cmp(memb_a32(ds, eax + 0x59), 0);     /* cmp byte [eax+0x59], 0x0 */
    II(0x1015e01d, 0x2)   jzd(0x1015e021, 0x2);                 /* jz 0x1015e021 */
l_0x1015e01f:
    II(0x1015e01f, 0x2)   jmpd(0x1015e041, 0x20);               /* jmp 0x1015e041 */
l_0x1015e021:
    II(0x1015e021, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e023, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e026, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015e029, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e02e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1015e031, 0x5)   mov(ebx, 0x101c94b4);                 /* mov ebx, 0x101c94b4 */
    II(0x1015e036, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1015e038, 0x5)   calld(0x1013ad71, -0x232cc);          /* call 0x1013ad71 */
    II(0x1015e03d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015e03f, 0x2)   jzd(0x1015e04a, 0x9);                 /* jz 0x1015e04a */
l_0x1015e041:
    II(0x1015e041, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1015e045, 0x5)   jmpd(0x1015e351, 0x307);              /* jmp 0x1015e351 */
l_0x1015e04a:
    II(0x1015e04a, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1015e051, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1015e055, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1015e058, 0x5)   calld(my_ctor_0x101b4184, -0xe756d);  /* call 0x10076af0 */
    II(0x1015e05d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e060, 0x5)   calld(0x1007623c, -0xe7e29);          /* call 0x1007623c */
    II(0x1015e065, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x1015e069, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1015e06c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e06f, 0x5)   calld(0x100760e4, -0xe7f90);          /* call 0x100760e4 */
    II(0x1015e074, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015e076, 0x6)   jzd(0x1015e1ad, 0x131);               /* jz dword 0x1015e1ad */
    II(0x1015e07c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e07f, 0x5)   calld(0x100760e4, -0xe7fa0);          /* call 0x100760e4 */
    II(0x1015e084, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1015e087, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x1c));   /* mov ebx, [ebp-0x1c] */
    II(0x1015e08a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015e08d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015e090, 0x5)   calld(0x1015d9b1, -0x6e4);            /* call 0x1015d9b1 */
    II(0x1015e095, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015e097, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1015e09a, 0x5)   calld(0x10088b44, -0xd555b);          /* call 0x10088b44 */
    II(0x1015e09f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e0a2, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x1015e0a5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e0aa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015e0ac, 0x2)   jled(0x1015e0bd, 0xf);                /* jle 0x1015e0bd */
    II(0x1015e0ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e0b1, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x1015e0b4, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e0b9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015e0bb, 0x2)   jnzd(0x1015e0bf, 0x2);                /* jnz 0x1015e0bf */
l_0x1015e0bd:
    II(0x1015e0bd, 0x2)   jmpd(0x1015e0cd, 0xe);                /* jmp 0x1015e0cd */
l_0x1015e0bf:
    II(0x1015e0bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e0c2, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1015e0c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e0c8, 0x3)   cmp(dl, memb_a32(ds, eax + 0x26));    /* cmp dl, [eax+0x26] */
    II(0x1015e0cb, 0x2)   jnzd(0x1015e0cf, 0x2);                /* jnz 0x1015e0cf */
l_0x1015e0cd:
    II(0x1015e0cd, 0x2)   jmpd(0x1015e0d8, 0x9);                /* jmp 0x1015e0d8 */
l_0x1015e0cf:
    II(0x1015e0cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e0d2, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x1015e0d6, 0x2)   jnzd(0x1015e0da, 0x2);                /* jnz 0x1015e0da */
l_0x1015e0d8:
    II(0x1015e0d8, 0x2)   jmpd(0x1015e105, 0x2b);               /* jmp 0x1015e105 */
l_0x1015e0da:
    II(0x1015e0da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e0dd, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015e0e0, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015e0e2, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015e0e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e0e8, 0x5)   calld(0x10076074, -0xe8079);          /* call 0x10076074 */
    II(0x1015e0ed, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015e0ef, 0x2)   jnzd(0x1015e103, 0x12);               /* jnz 0x1015e103 */
    II(0x1015e0f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e0f4, 0x5)   calld(0x1007623c, -0xe7ebd);          /* call 0x1007623c */
    II(0x1015e0f9, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1015e0fc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015e0ff, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015e101, 0x2)   jgd(0x1015e105, 0x2);                 /* jg 0x1015e105 */
l_0x1015e103:
    II(0x1015e103, 0x2)   jmpd(0x1015e11e, 0x19);               /* jmp 0x1015e11e */
l_0x1015e105:
    II(0x1015e105, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1015e10a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e10d, 0x5)   calld(0x10152605, -0xbb0d);           /* call 0x10152605 */
    II(0x1015e112, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1015e119, 0x5)   jmpd(0x1015e1ad, 0x8f);               /* jmp 0x1015e1ad */
l_0x1015e11e:
    II(0x1015e11e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e121, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015e124, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e129, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015e12f, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1015e135, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e13a, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1015e13d, 0x2)   jzd(0x1015e151, 0x12);                /* jz 0x1015e151 */
    II(0x1015e13f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e142, 0x5)   calld(0x1007623c, -0xe7f0b);          /* call 0x1007623c */
    II(0x1015e147, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1015e14a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015e14d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015e14f, 0x2)   jnzd(0x1015e17a, 0x29);               /* jnz 0x1015e17a */
l_0x1015e151:
    II(0x1015e151, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1015e155, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1015e159, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1015e15c, 0x2)   mov(ecx, edx);                        /* mov ecx, edx */
    II(0x1015e15e, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x1015e161, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1015e164, 0x5)   calld(0x10075e64, -0xe8305);          /* call 0x10075e64 */
    II(0x1015e169, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1015e16c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015e16e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015e170, 0x5)   calld(0x10070ca1, -0xed4d4);          /* call 0x10070ca1 */
    II(0x1015e175, 0x1)   cwde();                               /* cwde */
    II(0x1015e176, 0x2)   cmp(eax, ecx);                        /* cmp eax, ecx */
    II(0x1015e178, 0x2)   jgd(0x1015e17c, 0x2);                 /* jg 0x1015e17c */
l_0x1015e17a:
    II(0x1015e17a, 0x2)   jmpd(0x1015e185, 0x9);                /* jmp 0x1015e185 */
l_0x1015e17c:
    II(0x1015e17c, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1015e183, 0x2)   jmpd(0x1015e1ad, 0x28);               /* jmp 0x1015e1ad */
l_0x1015e185:
    II(0x1015e185, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e188, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015e18b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e190, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015e196, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1015e19c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e1a1, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1015e1a4, 0x2)   jnzd(0x1015e1ad, 0x7);                /* jnz 0x1015e1ad */
    II(0x1015e1a6, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x1015e1ad:
    II(0x1015e1ad, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1015e1b1, 0x2)   jnzd(0x1015e219, 0x66);               /* jnz 0x1015e219 */
    II(0x1015e1b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e1b6, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015e1b9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e1be, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015e1c4, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1015e1ca, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e1cf, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x1015e1d2, 0x2)   jzd(0x1015e210, 0x3c);                /* jz 0x1015e210 */
    II(0x1015e1d4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e1d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e1d9, 0x5)   calld(0x100760ac, -0xe8132);          /* call 0x100760ac */
    II(0x1015e1de, 0x5)   mov(ebx, 0x18);                       /* mov ebx, 0x18 */
    II(0x1015e1e3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e1e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e1e8, 0x5)   calld(0x10163053, 0x4e66);            /* call 0x10163053 */
    II(0x1015e1ed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e1ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e1f2, 0x5)   calld(0x10152605, -0xbbf2);           /* call 0x10152605 */
    II(0x1015e1f7, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1015e1fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e1ff, 0x5)   calld(0x10076d98, -0xe746c);          /* call 0x10076d98 */
    II(0x1015e204, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015e206, 0x2)   jzd(0x1015e210, 0x8);                 /* jz 0x1015e210 */
    II(0x1015e208, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e20b, 0x5)   calld(0x1010094d, -0x5d8c3);          /* call 0x1010094d */
l_0x1015e210:
    II(0x1015e210, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1015e214, 0x5)   jmpd(0x1015e351, 0x138);              /* jmp 0x1015e351 */
l_0x1015e219:
    II(0x1015e219, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1015e21d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1015e221, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1015e224, 0x2)   mov(ecx, edx);                        /* mov ecx, edx */
    II(0x1015e226, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x1015e229, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1015e22c, 0x5)   calld(0x10075e64, -0xe83cd);          /* call 0x10075e64 */
    II(0x1015e231, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1015e234, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015e236, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015e238, 0x5)   calld(0x10070ca1, -0xed59c);          /* call 0x10070ca1 */
    II(0x1015e23d, 0x1)   cwde();                               /* cwde */
    II(0x1015e23e, 0x2)   cmp(eax, ecx);                        /* cmp eax, ecx */
    II(0x1015e240, 0x2)   jled(0x1015e277, 0x35);               /* jle 0x1015e277 */
    II(0x1015e242, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e244, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e247, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1015e24a, 0x5)   calld(0x1013ad11, -0x2353e);          /* call 0x1013ad11 */
    II(0x1015e24f, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015e251, 0x2)   jnzd(0x1015e263, 0x10);               /* jnz 0x1015e263 */
    II(0x1015e253, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e256, 0x4)   mov(dx, memw_a32(ds, eax + 0x41));    /* mov dx, [eax+0x41] */
    II(0x1015e25a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e25d, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1a));    /* cmp dx, [eax+0x1a] */
    II(0x1015e261, 0x2)   jzd(0x1015e265, 0x2);                 /* jz 0x1015e265 */
l_0x1015e263:
    II(0x1015e263, 0x2)   jmpd(0x1015e275, 0x10);               /* jmp 0x1015e275 */
l_0x1015e265:
    II(0x1015e265, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e268, 0x4)   mov(dx, memw_a32(ds, eax + 0x43));    /* mov dx, [eax+0x43] */
    II(0x1015e26c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e26f, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1c));    /* cmp dx, [eax+0x1c] */
    II(0x1015e273, 0x2)   jzd(0x1015e277, 0x2);                 /* jz 0x1015e277 */
l_0x1015e275:
    II(0x1015e275, 0x2)   jmpd(0x1015e27c, 0x5);                /* jmp 0x1015e27c */
l_0x1015e277:
    II(0x1015e277, 0x5)   jmpd(0x1015e2eb, 0x6f);               /* jmp 0x1015e2eb */
l_0x1015e27c:
    II(0x1015e27c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e27f, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x1015e283, 0x2)   jzd(0x1015e28e, 0x9);                 /* jz 0x1015e28e */
    II(0x1015e285, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e288, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x1015e28c, 0x2)   jnzd(0x1015e290, 0x2);                /* jnz 0x1015e290 */
l_0x1015e28e:
    II(0x1015e28e, 0x2)   jmpd(0x1015e299, 0x9);                /* jmp 0x1015e299 */
l_0x1015e290:
    II(0x1015e290, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e293, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x1015e297, 0x2)   jnzd(0x1015e2a2, 0x9);                /* jnz 0x1015e2a2 */
l_0x1015e299:
    II(0x1015e299, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015e29c, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x1015e2a0, 0x2)   jnzd(0x1015e2eb, 0x49);               /* jnz 0x1015e2eb */
l_0x1015e2a2:
    II(0x1015e2a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e2a5, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015e2a8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e2ad, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015e2b3, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1015e2b9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e2be, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x1015e2c1, 0x2)   jnzd(0x1015e2cc, 0x9);                /* jnz 0x1015e2cc */
    II(0x1015e2c3, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1015e2c7, 0x5)   jmpd(0x1015e351, 0x85);               /* jmp 0x1015e351 */
l_0x1015e2cc:
    II(0x1015e2cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e2cf, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1015e2d3, 0x5)   mov(ebx, 0x1c);                       /* mov ebx, 0x1c */
    II(0x1015e2d8, 0x5)   mov(edx, 0x1e);                       /* mov edx, 0x1e */
    II(0x1015e2dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e2e0, 0x5)   calld(0x10163053, 0x4d6e);            /* call 0x10163053 */
    II(0x1015e2e5, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x1015e2e9, 0x2)   jmpd(0x1015e351, 0x66);               /* jmp 0x1015e351 */
l_0x1015e2eb:
    II(0x1015e2eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e2ee, 0x4)   cmp(memb_a32(ds, eax + 0x50), 0);     /* cmp byte [eax+0x50], 0x0 */
    II(0x1015e2f2, 0x2)   jzd(0x1015e30c, 0x18);                /* jz 0x1015e30c */
    II(0x1015e2f4, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x1015e2f8, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x16)); /* movsx ebx, word [ebp-0x16] */
    II(0x1015e2fc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1015e300, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e303, 0x5)   calld(0x10070d68, -0xed5a0);          /* call 0x10070d68 */
    II(0x1015e308, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015e30a, 0x2)   jnzd(0x1015e312, 0x6);                /* jnz 0x1015e312 */
l_0x1015e30c:
    II(0x1015e30c, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1015e310, 0x2)   jmpd(0x1015e351, 0x3f);               /* jmp 0x1015e351 */
l_0x1015e312:
    II(0x1015e312, 0x5)   mov(eax, 0x101c8190);                 /* mov eax, 0x101c8190 */
    II(0x1015e317, 0x5)   calld(0x10076b90, -0xe778c);          /* call 0x10076b90 */
    II(0x1015e31c, 0x1)   cwde();                               /* cwde */
    II(0x1015e31d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015e31f, 0x2)   jled(0x1015e327, 0x6);                /* jle 0x1015e327 */
    II(0x1015e321, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1015e325, 0x2)   jmpd(0x1015e351, 0x2a);               /* jmp 0x1015e351 */
l_0x1015e327:
    II(0x1015e327, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015e32a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e32d, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015e330, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e335, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1015e338, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1015e33a, 0x5)   mov(eax, 0x101c94b4);                 /* mov eax, 0x101c94b4 */
    II(0x1015e33f, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1015e341, 0x5)   calld(0x10076630, -0xe7d16);          /* call 0x10076630 */
    II(0x1015e346, 0x7)   mov(memb_a32(ds, 0x101c8170), 0x1);   /* mov byte [0x101c8170], 0x1 */
    II(0x1015e34d, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x1015e351:
    II(0x1015e351, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x1015e354, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015e356, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015e357, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015e358, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015e359, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015e35a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015e35b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015e35c, 0x1)   retd();                               /* ret */
FUNC_END

