FUNC_BEGIN(0x10124319, 0xdb56764a9366c24d, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x2f, 0x1a, 0x4, 0, 0x53, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x8b, 0x45, 0x18, 0x50, 0x8b, 0x45, 0x14, 0x50, 0xe8, 0xbe, 0xf3, 0xff, 0xff, 0x83, 0xc4, 0x8, 0x85, 0xc0, 0x75, 0xc, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xe9, 0x7f, 0, 0, 0, 0x8b, 0x45, 0x14, 0x8b, 0x80, 0x98, 0, 0, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0x14, 0x8b, 0x90, 0x84, 0, 0, 0, 0x8b, 0x45, 0x14, 0x8b, 0x80, 0x88, 0, 0, 0, 0x1, 0xd0, 0x89, 0x45, 0xf8, 0xc7, 0x45, 0xfc, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xfc, 0x80, 0x38, 0x5b, 0x74, 0xb, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xfc, 0x3b, 0x45, 0xf8, 0x72, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xeb, 0xe0, 0x8b, 0x5d, 0xf4, 0x3, 0x5d, 0xfc, 0x8b, 0x45, 0xf8, 0x29, 0xd8, 0x89, 0xc3, 0x8b, 0x55, 0xf4, 0x3, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xe8, 0xc3, 0x1d, 0x4, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0x14, 0x29, 0x82, 0x88, 0, 0, 0, 0x8b, 0x45, 0x14, 0x80, 0x48, 0x1, 0x80, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5b, 0xc3}))
    II(0x10124319, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x1012431e, 0x5)   calld(sys_check_available_stack_size, 0x41a2f); /* call 0x10165d52 */
    II(0x10124323, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10124324, 0x1)   pushd(esi);                           /* push esi */
    II(0x10124325, 0x1)   pushd(edi);                           /* push edi */
    II(0x10124326, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10124327, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10124329, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1012432f, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x10124332, 0x1)   pushd(eax);                           /* push eax */
    II(0x10124333, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10124336, 0x1)   pushd(eax);                           /* push eax */
    II(0x10124337, 0x5)   calld(0x101236fa, -0xc42);            /* call 0x101236fa */
    II(0x1012433c, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x1012433f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10124341, 0x2)   jnzd(0x1012434f, 0xc);                /* jnz 0x1012434f */
    II(0x10124343, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1012434a, 0x5)   jmpd(0x101243ce, 0x7f);               /* jmp 0x101243ce */
l_0x1012434f:
    II(0x1012434f, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10124352, 0x6)   mov(eax, memd_a32(ds, eax + 0x98));   /* mov eax, [eax+0x98] */
    II(0x10124358, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1012435b, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1012435e, 0x6)   mov(edx, memd_a32(ds, eax + 0x84));   /* mov edx, [eax+0x84] */
//    II(0x10124364, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10124367, 0x6)   mov(eax, memd_a32(ds, eax + 0x88));   /* mov eax, [eax+0x88] */
    II(0x1012436d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012436f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10124372, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x1);    /* mov dword [ebp-0x4], 0x1 */
l_0x10124379:
    II(0x10124379, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012437c, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1012437f, 0x3)   cmp(memb_a32(ds, eax), 0x5b);         /* cmp byte [eax], 0x5b */
    II(0x10124382, 0x2)   jzd(0x1012438f, 0xb);                 /* jz 0x1012438f */
    II(0x10124384, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10124387, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1012438a, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x8));    /* cmp eax, [ebp-0x8] */
    II(0x1012438d, 0x2)   jbd(0x10124391, 0x2);                 /* jb 0x10124391 */
l_0x1012438f:
    II(0x1012438f, 0x2)   jmpd(0x10124399, 0x8);                /* jmp 0x10124399 */
l_0x10124391:
    II(0x10124391, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10124394, 0x3)   inc(memd_a32(ss, ebp - 0x4));         /* inc dword [ebp-0x4] */
    II(0x10124397, 0x2)   jmpd(0x10124379, -0x20);              /* jmp 0x10124379 */
l_0x10124399:
    II(0x10124399, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x1012439c, 0x3)   add(ebx, memd_a32(ss, ebp - 0x4));    /* add ebx, [ebp-0x4] */
    II(0x1012439f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101243a2, 0x2)   sub(eax, ebx);                        /* sub eax, ebx */
    II(0x101243a4, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x101243a6, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101243a9, 0x3)   add(edx, memd_a32(ss, ebp - 0x4));    /* add edx, [ebp-0x4] */
    II(0x101243ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101243af, 0x5)   calld(/* sys */ 0x10166177, 0x41dc3); /* call 0x10166177 */
    II(0x101243b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101243b7, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x101243ba, 0x6)   sub(memd_a32(ds, edx + 0x88), eax);   /* sub [edx+0x88], eax */
    II(0x101243c0, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101243c3, 0x4)   or_(memb_a32(ds, eax + 0x1), -0x80 /* 0x80 */); /* or byte [eax+0x1], 0x80 */
    II(0x101243c7, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
l_0x101243ce:
    II(0x101243ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101243d1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101243d3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101243d4, 0x1)   popd(edi);                            /* pop edi */
    II(0x101243d5, 0x1)   popd(esi);                            /* pop esi */
    II(0x101243d6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101243d7, 0x1)   retd();                               /* ret */
FUNC_END

