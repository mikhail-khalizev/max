FUNC_BEGIN(0x100fef80, 0x4937b1effc5163a6, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xc8, 0x6d, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0xa1, 0x64, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x1, 0x74, 0xc, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xe9, 0x8c, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xf8, 0x4, 0, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0x67, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x2, 0xeb, 0x15, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x50, 0xa5, 0x1c, 0x10, 0x3b, 0x45, 0xf0, 0x7d, 0x2, 0xeb, 0x19, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x50, 0xa5, 0x1c, 0x10, 0x89, 0x45, 0xf0, 0xeb, 0x8f, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100fef80, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100fef85, 0x5)   calld(sys_check_available_stack_size, 0x66dc8); /* call 0x10165d52 */
    II(0x100fef8a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100fef8b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100fef8c, 0x1)   pushd(edx);                           /* push edx */
    II(0x100fef8d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100fef8e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100fef8f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100fef90, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100fef92, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100fef98, 0x5)   mov(eax, memd_a32(ds, 0x101c3964));   /* mov eax, [0x101c3964] */
    II(0x100fef9d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fefa0, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100fefa3, 0x2)   jzd(0x100fefb1, 0xc);                 /* jz 0x100fefb1 */
    II(0x100fefa5, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
    II(0x100fefac, 0x5)   jmpd(0x100ff03d, 0x8c);               /* jmp 0x100ff03d */
l_0x100fefb1:
    II(0x100fefb1, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100fefb8, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100fefbf, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x4);    /* mov dword [ebp-0x8], 0x4 */
l_0x100fefc6:
    II(0x100fefc6, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x100fefc9, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x100fefce, 0x2)   jzd(0x100ff037, 0x67);                /* jz 0x100ff037 */
    II(0x100fefd0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100fefd4, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fefda, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100fefe0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100fefe5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100fefe7, 0x2)   jzd(0x100ff003, 0x1a);                /* jz 0x100ff003 */
    II(0x100fefe9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100fefed, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100feff3, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100feff9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100feffe, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ff001, 0x2)   jnzd(0x100ff005, 0x2);                /* jnz 0x100ff005 */
l_0x100ff003:
    II(0x100ff003, 0x2)   jmpd(0x100ff01a, 0x15);               /* jmp 0x100ff01a */
l_0x100ff005:
    II(0x100ff005, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ff009, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff00f, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca550)); /* mov eax, [eax+0x101ca550] */
    II(0x100ff015, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x10));   /* cmp eax, [ebp-0x10] */
    II(0x100ff018, 0x2)   jged(0x100ff01c, 0x2);                /* jge 0x100ff01c */
l_0x100ff01a:
    II(0x100ff01a, 0x2)   jmpd(0x100ff035, 0x19);               /* jmp 0x100ff035 */
l_0x100ff01c:
    II(0x100ff01c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ff01f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ff022, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ff026, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff02c, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca550)); /* mov eax, [eax+0x101ca550] */
    II(0x100ff032, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x100ff035:
    II(0x100ff035, 0x2)   jmpd(0x100fefc6, -0x71);              /* jmp 0x100fefc6 */
l_0x100ff037:
    II(0x100ff037, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ff03a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x100ff03d:
    II(0x100ff03d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff040, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ff042, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ff043, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ff044, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ff045, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ff046, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ff047, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ff048, 0x1)   retd();                               /* ret */
FUNC_END

