FUNC_BEGIN(0x100de188, 0x988131951b37cf2c, 0x20, ({0x68, 0x74, 0, 0, 0, 0xe8, 0xc0, 0x7b, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x5c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf7, 0x45, 0xfc, 0x4, 0, 0, 0, 0x74, 0x17, 0xba, 0x3c, 0x5e, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xfd, 0x7d, 0x8, 0, 0xe8, 0x18, 0x7e, 0x8, 0, 0xe9, 0x13, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x13, 0xe0, 0x5e, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xbb, 0x3, 0, 0, 0x89, 0x45, 0xa8, 0x83, 0x7d, 0xa8, 0, 0x74, 0x1b, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa4, 0x8b, 0x58, 0x40, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xa4, 0xff, 0x13, 0x89, 0x45, 0xd0, 0xeb, 0x7, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xcb, 0x3, 0, 0, 0x89, 0x45, 0xac, 0x83, 0x7d, 0xac, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xac, 0xe8, 0x19, 0x3, 0xff, 0xff, 0xe8, 0x40, 0x7d, 0x8, 0, 0x89, 0x45, 0xd4, 0xeb, 0x7, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xcf, 0x3, 0, 0, 0x89, 0x45, 0xb0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xb0, 0xe8, 0xec, 0x2, 0xff, 0xff, 0xe8, 0x13, 0x7d, 0x8, 0, 0x89, 0x45, 0xd8, 0xeb, 0x7, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xc3, 0x3, 0, 0, 0x89, 0x45, 0xb4, 0x83, 0x7d, 0xb4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xb4, 0xe8, 0xbf, 0x2, 0xff, 0xff, 0xe8, 0xe6, 0x7c, 0x8, 0, 0x89, 0x45, 0xdc, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xc7, 0x3, 0, 0, 0x89, 0x45, 0xb8, 0x83, 0x7d, 0xb8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xb8, 0xe8, 0x92, 0x2, 0xff, 0xff, 0xe8, 0xb9, 0x7c, 0x8, 0, 0x89, 0x45, 0xe0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xd3, 0x3, 0, 0, 0x89, 0x45, 0xbc, 0x83, 0x7d, 0xbc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xbc, 0xe8, 0x65, 0x2, 0xff, 0xff, 0xe8, 0x8c, 0x7c, 0x8, 0, 0x89, 0x45, 0xe4, 0xeb, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xd7, 0x3, 0, 0, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xc0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xc0, 0xe8, 0x38, 0x2, 0xff, 0xff, 0xe8, 0x5f, 0x7c, 0x8, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xdb, 0x3, 0, 0, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xc4, 0xe8, 0xb, 0x2, 0xff, 0xff, 0xe8, 0x32, 0x7c, 0x8, 0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xdf, 0x3, 0, 0, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x1b, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x8b, 0x58, 0x27, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xc8, 0xff, 0x13, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x5, 0xb7, 0x3, 0, 0, 0xe8, 0xc3, 0x1e, 0, 0, 0x2d, 0xb7, 0x3, 0, 0, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x5, 0xb3, 0x3, 0, 0, 0xe8, 0x6c, 0xa7, 0xfa, 0xff, 0x2d, 0xb3, 0x3, 0, 0, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x5, 0xaf, 0x3, 0, 0, 0xe8, 0x55, 0xa7, 0xfa, 0xff, 0x2d, 0xaf, 0x3, 0, 0, 0x89, 0x45, 0xf8, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x86, 0xb6, 0xff, 0xff, 0x89, 0x45, 0xf8, 0xf7, 0x45, 0xfc, 0x2, 0, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x8c, 0x7b, 0x8, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100de188, 0x5)   pushd(0x74);                          /* push dword 0x74 */
    II(0x100de18d, 0x5)   calld(sys_check_available_stack_size, 0x87bc0); /* call 0x10165d52 */
    II(0x100de192, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100de193, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100de194, 0x1)   pushd(esi);                           /* push esi */
    II(0x100de195, 0x1)   pushd(edi);                           /* push edi */
    II(0x100de196, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100de197, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100de199, 0x6)   sub(esp, 0x5c);                       /* sub esp, 0x5c */
    II(0x100de19f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100de1a2, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100de1a5, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x4);   /* test dword [ebp-0x4], 0x4 */
    II(0x100de1ac, 0x2)   jzd(0x100de1c5, 0x17);                /* jz 0x100de1c5 */
    II(0x100de1ae, 0x5)   mov(edx, 0x101b5e3c);                 /* mov edx, 0x101b5e3c */
    II(0x100de1b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de1b6, 0x5)   calld(sys_call_dtor_arr, 0x87dfd);    /* call 0x10165fb8 */
    II(0x100de1bb, 0x5)   calld(sys_delete_arr, 0x87e18);       /* call 0x10165fd8 */
    II(0x100de1c0, 0x5)   jmpd(0x100de3d8, 0x213);              /* jmp 0x100de3d8 */
l_0x100de1c5:
    II(0x100de1c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de1c8, 0x7)   mov(memd_a32(ds, eax + 0x13), 0x101b5ee0); /* mov dword [eax+0x13], 0x101b5ee0 */
    II(0x100de1cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de1d2, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bb));  /* mov eax, [eax+0x3bb] */
    II(0x100de1d8, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100de1db, 0x4)   cmp(memd_a32(ss, ebp - 0x58), 0);     /* cmp dword [ebp-0x58], 0x0 */
    II(0x100de1df, 0x2)   jzd(0x100de1fc, 0x1b);                /* jz 0x100de1fc */
    II(0x100de1e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100de1e4, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
//    II(0x100de1e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100de1ea, 0x3)   mov(ebx, memd_a32(ds, eax + 0x40));   /* mov ebx, [eax+0x40] */
    II(0x100de1ed, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
//    II(0x100de1f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100de1f5, 0x2)   calld_abs(memd_a32(ds, ebx));         /* call dword near [ebx] */
    II(0x100de1f7, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100de1fa, 0x2)   jmpd(0x100de203, 0x7);                /* jmp 0x100de203 */
l_0x100de1fc:
    II(0x100de1fc, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
l_0x100de203:
    II(0x100de203, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de206, 0x6)   mov(eax, memd_a32(ds, eax + 0x3cb));  /* mov eax, [eax+0x3cb] */
    II(0x100de20c, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100de20f, 0x4)   cmp(memd_a32(ss, ebp - 0x54), 0);     /* cmp dword [ebp-0x54], 0x0 */
    II(0x100de213, 0x2)   jzd(0x100de229, 0x14);                /* jz 0x100de229 */
    II(0x100de215, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de217, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100de21a, 0x5)   calld(my_dtor_d2, -0xfce7);           /* call 0x100ce538 */
    II(0x100de21f, 0x5)   calld(sys_delete, 0x87d40);           /* call 0x10165f64 */
    II(0x100de224, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100de227, 0x2)   jmpd(0x100de230, 0x7);                /* jmp 0x100de230 */
l_0x100de229:
    II(0x100de229, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
l_0x100de230:
    II(0x100de230, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de233, 0x6)   mov(eax, memd_a32(ds, eax + 0x3cf));  /* mov eax, [eax+0x3cf] */
    II(0x100de239, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100de23c, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x100de240, 0x2)   jzd(0x100de256, 0x14);                /* jz 0x100de256 */
    II(0x100de242, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de244, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100de247, 0x5)   calld(my_dtor_d2, -0xfd14);           /* call 0x100ce538 */
    II(0x100de24c, 0x5)   calld(sys_delete, 0x87d13);           /* call 0x10165f64 */
    II(0x100de251, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100de254, 0x2)   jmpd(0x100de25d, 0x7);                /* jmp 0x100de25d */
l_0x100de256:
    II(0x100de256, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
l_0x100de25d:
    II(0x100de25d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de260, 0x6)   mov(eax, memd_a32(ds, eax + 0x3c3));  /* mov eax, [eax+0x3c3] */
    II(0x100de266, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100de269, 0x4)   cmp(memd_a32(ss, ebp - 0x4c), 0);     /* cmp dword [ebp-0x4c], 0x0 */
    II(0x100de26d, 0x2)   jzd(0x100de283, 0x14);                /* jz 0x100de283 */
    II(0x100de26f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de271, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100de274, 0x5)   calld(my_dtor_d2, -0xfd41);           /* call 0x100ce538 */
    II(0x100de279, 0x5)   calld(sys_delete, 0x87ce6);           /* call 0x10165f64 */
    II(0x100de27e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100de281, 0x2)   jmpd(0x100de28a, 0x7);                /* jmp 0x100de28a */
l_0x100de283:
    II(0x100de283, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
l_0x100de28a:
    II(0x100de28a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de28d, 0x6)   mov(eax, memd_a32(ds, eax + 0x3c7));  /* mov eax, [eax+0x3c7] */
    II(0x100de293, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100de296, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0);     /* cmp dword [ebp-0x48], 0x0 */
    II(0x100de29a, 0x2)   jzd(0x100de2b0, 0x14);                /* jz 0x100de2b0 */
    II(0x100de29c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de29e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100de2a1, 0x5)   calld(my_dtor_d2, -0xfd6e);           /* call 0x100ce538 */
    II(0x100de2a6, 0x5)   calld(sys_delete, 0x87cb9);           /* call 0x10165f64 */
    II(0x100de2ab, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100de2ae, 0x2)   jmpd(0x100de2b7, 0x7);                /* jmp 0x100de2b7 */
l_0x100de2b0:
    II(0x100de2b0, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x100de2b7:
    II(0x100de2b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de2ba, 0x6)   mov(eax, memd_a32(ds, eax + 0x3d3));  /* mov eax, [eax+0x3d3] */
    II(0x100de2c0, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100de2c3, 0x4)   cmp(memd_a32(ss, ebp - 0x44), 0);     /* cmp dword [ebp-0x44], 0x0 */
    II(0x100de2c7, 0x2)   jzd(0x100de2dd, 0x14);                /* jz 0x100de2dd */
    II(0x100de2c9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de2cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100de2ce, 0x5)   calld(my_dtor_d2, -0xfd9b);           /* call 0x100ce538 */
    II(0x100de2d3, 0x5)   calld(sys_delete, 0x87c8c);           /* call 0x10165f64 */
    II(0x100de2d8, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100de2db, 0x2)   jmpd(0x100de2e4, 0x7);                /* jmp 0x100de2e4 */
l_0x100de2dd:
    II(0x100de2dd, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x100de2e4:
    II(0x100de2e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de2e7, 0x6)   mov(eax, memd_a32(ds, eax + 0x3d7));  /* mov eax, [eax+0x3d7] */
    II(0x100de2ed, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100de2f0, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x100de2f4, 0x2)   jzd(0x100de30a, 0x14);                /* jz 0x100de30a */
    II(0x100de2f6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de2f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100de2fb, 0x5)   calld(my_dtor_d2, -0xfdc8);           /* call 0x100ce538 */
    II(0x100de300, 0x5)   calld(sys_delete, 0x87c5f);           /* call 0x10165f64 */
    II(0x100de305, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100de308, 0x2)   jmpd(0x100de311, 0x7);                /* jmp 0x100de311 */
l_0x100de30a:
    II(0x100de30a, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x100de311:
    II(0x100de311, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de314, 0x6)   mov(eax, memd_a32(ds, eax + 0x3db));  /* mov eax, [eax+0x3db] */
    II(0x100de31a, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100de31d, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x100de321, 0x2)   jzd(0x100de337, 0x14);                /* jz 0x100de337 */
    II(0x100de323, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de325, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100de328, 0x5)   calld(my_dtor_d2, -0xfdf5);           /* call 0x100ce538 */
    II(0x100de32d, 0x5)   calld(sys_delete, 0x87c32);           /* call 0x10165f64 */
    II(0x100de332, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100de335, 0x2)   jmpd(0x100de33e, 0x7);                /* jmp 0x100de33e */
l_0x100de337:
    II(0x100de337, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x100de33e:
    II(0x100de33e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de341, 0x6)   mov(eax, memd_a32(ds, eax + 0x3df));  /* mov eax, [eax+0x3df] */
    II(0x100de347, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100de34a, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100de34e, 0x2)   jzd(0x100de36b, 0x1b);                /* jz 0x100de36b */
    II(0x100de350, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100de353, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100de356, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100de359, 0x3)   mov(ebx, memd_a32(ds, eax + 0x27));   /* mov ebx, [eax+0x27] */
    II(0x100de35c, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
//    II(0x100de361, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100de364, 0x2)   calld_abs(memd_a32(ds, ebx));         /* call dword near [ebx] */
    II(0x100de366, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100de369, 0x2)   jmpd(0x100de372, 0x7);                /* jmp 0x100de372 */
l_0x100de36b:
    II(0x100de36b, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x100de372:
    II(0x100de372, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de374, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de377, 0x5)   add(eax, 0x3b7);                      /* add eax, 0x3b7 */
    II(0x100de37c, 0x5)   calld(0x100e0244, 0x1ec3);            /* call 0x100e0244 */
    II(0x100de381, 0x5)   sub(eax, 0x3b7);                      /* sub eax, 0x3b7 */
    II(0x100de386, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100de389, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de38b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de38e, 0x5)   add(eax, 0x3b3);                      /* add eax, 0x3b3 */
    II(0x100de393, 0x5)   calld(0x10088b04, -0x55894);          /* call 0x10088b04 */
    II(0x100de398, 0x5)   sub(eax, 0x3b3);                      /* sub eax, 0x3b3 */
    II(0x100de39d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100de3a0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de3a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de3a5, 0x5)   add(eax, 0x3af);                      /* add eax, 0x3af */
    II(0x100de3aa, 0x5)   calld(0x10088b04, -0x558ab);          /* call 0x10088b04 */
    II(0x100de3af, 0x5)   sub(eax, 0x3af);                      /* sub eax, 0x3af */
    II(0x100de3b4, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100de3b7, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
//    II(0x100de3bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de3bf, 0x5)   calld(0x100d9a4a, -0x497a);           /* call 0x100d9a4a */
    II(0x100de3c4, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100de3c7, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x2);   /* test dword [ebp-0x4], 0x2 */
    II(0x100de3ce, 0x2)   jzd(0x100de3d8, 0x8);                 /* jz 0x100de3d8 */
    II(0x100de3d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de3d3, 0x5)   calld(sys_delete, 0x87b8c);           /* call 0x10165f64 */
l_0x100de3d8:
    II(0x100de3d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100de3db, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100de3de, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100de3e1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100de3e3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100de3e4, 0x1)   popd(edi);                            /* pop edi */
    II(0x100de3e5, 0x1)   popd(esi);                            /* pop esi */
    II(0x100de3e6, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100de3e7, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100de3e8, 0x1)   retd();                               /* ret */
FUNC_END

