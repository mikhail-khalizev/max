FUNC_BEGIN(0x100eb97d, 0x32b757f8451a6539, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0xcb, 0xa3, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x32, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xe4, 0xfb, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x32, 0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x35, 0x1, 0x75, 0x13, 0x8a, 0x45, 0xfc, 0xfe, 0xc0, 0x25, 0xff, 0, 0, 0, 0xf6, 0x80, 0xc0, 0x75, 0x1b, 0x10, 0x20, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0x12, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x35, 0x2, 0x75, 0x13, 0x8a, 0x45, 0xfc, 0xfe, 0xc0, 0x25, 0xff, 0, 0, 0, 0xf6, 0x80, 0xc0, 0x75, 0x1b, 0x10, 0x10, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0xef, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x2c, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x23, 0xe8, 0xbb, 0x64, 0x8, 0, 0x4a, 0x39, 0xd0, 0xf, 0x83, 0xd2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x2b, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x9b, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x2a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x23, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x27, 0xe8, 0xa2, 0x64, 0x8, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x2a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x27, 0x1, 0xc2, 0x8a, 0x45, 0xfc, 0x88, 0x2, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x2a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x27, 0x1, 0xd0, 0xc6, 0x40, 0x1, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x2a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x23, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x27, 0xe8, 0xac, 0xa4, 0x7, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x27, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x89, 0xc2, 0xb8, 0, 0x1f, 0x1a, 0x10, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x8, 0x8b, 0x5d, 0xf8, 0x2b, 0x3, 0x39, 0xc2, 0x7f, 0x38, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x23, 0xe8, 0xf, 0xa4, 0x7, 0, 0xe8, 0x3f, 0xa6, 0xfe, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x10, 0xfb, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x2c, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x2b, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xd8, 0xfb, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100eb97d, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100eb982, 0x5)   calld(sys_check_available_stack_size, 0x7a3cb); /* call 0x10165d52 */
    II(0x100eb987, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100eb988, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100eb989, 0x1)   pushd(esi);                           /* push esi */
    II(0x100eb98a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100eb98b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100eb98c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100eb98e, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100eb994, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100eb997, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100eb99a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb99d, 0x4)   cmp(memb_a32(ds, eax + 0x32), 0);     /* cmp byte [eax+0x32], 0x0 */
    II(0x100eb9a1, 0x2)   jzd(0x100eb9ab, 0x8);                 /* jz 0x100eb9ab */
    II(0x100eb9a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb9a6, 0x5)   calld(0x100eb58f, -0x41c);            /* call 0x100eb58f */
l_0x100eb9ab:
    II(0x100eb9ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb9ae, 0x4)   mov(memb_a32(ds, eax + 0x32), 0);     /* mov byte [eax+0x32], 0x0 */
    II(0x100eb9b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb9b5, 0x4)   cmp(memb_a32(ds, eax + 0x35), 0x1);   /* cmp byte [eax+0x35], 0x1 */
    II(0x100eb9b9, 0x2)   jnzd(0x100eb9ce, 0x13);               /* jnz 0x100eb9ce */
    II(0x100eb9bb, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100eb9be, 0x2)   inc(al);                              /* inc al */
    II(0x100eb9c0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100eb9c5, 0x7)   test(memb_a32(ds, eax + 0x101b75c0), 0x20); /* test byte [eax+0x101b75c0], 0x20 */
    II(0x100eb9cc, 0x2)   jzd(0x100eb9d0, 0x2);                 /* jz 0x100eb9d0 */
l_0x100eb9ce:
    II(0x100eb9ce, 0x2)   jmpd(0x100eb9d5, 0x5);                /* jmp 0x100eb9d5 */
l_0x100eb9d0:
    II(0x100eb9d0, 0x5)   jmpd(0x100ebae7, 0x112);              /* jmp 0x100ebae7 */
l_0x100eb9d5:
    II(0x100eb9d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb9d8, 0x4)   cmp(memb_a32(ds, eax + 0x35), 0x2);   /* cmp byte [eax+0x35], 0x2 */
    II(0x100eb9dc, 0x2)   jnzd(0x100eb9f1, 0x13);               /* jnz 0x100eb9f1 */
    II(0x100eb9de, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100eb9e1, 0x2)   inc(al);                              /* inc al */
    II(0x100eb9e3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100eb9e8, 0x7)   test(memb_a32(ds, eax + 0x101b75c0), 0x10); /* test byte [eax+0x101b75c0], 0x10 */
    II(0x100eb9ef, 0x2)   jzd(0x100eb9f3, 0x2);                 /* jz 0x100eb9f3 */
l_0x100eb9f1:
    II(0x100eb9f1, 0x2)   jmpd(0x100eb9f8, 0x5);                /* jmp 0x100eb9f8 */
l_0x100eb9f3:
    II(0x100eb9f3, 0x5)   jmpd(0x100ebae7, 0xef);               /* jmp 0x100ebae7 */
l_0x100eb9f8:
    II(0x100eb9f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb9fb, 0x3)   mov(edx, memd_a32(ds, eax + 0x2c));   /* mov edx, [eax+0x2c] */
    II(0x100eb9fe, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100eba01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba04, 0x3)   mov(eax, memd_a32(ds, eax + 0x23));   /* mov eax, [eax+0x23] */
    II(0x100eba07, 0x5)   calld(sys_strlen, 0x864bb);           /* call 0x10171ec7 */
    II(0x100eba0c, 0x1)   dec(edx);                             /* dec edx */
    II(0x100eba0d, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100eba0f, 0x6)   jaed(0x100ebae7, 0xd2);               /* jae dword 0x100ebae7 */
    II(0x100eba15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba18, 0x4)   mov(memb_a32(ds, eax + 0x2b), 0);     /* mov byte [eax+0x2b], 0x0 */
    II(0x100eba1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba1f, 0x5)   calld(0x100eb6bf, -0x365);            /* call 0x100eb6bf */
    II(0x100eba24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba27, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2a));   /* mov ebx, [eax+0x2a] */
    II(0x100eba2a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100eba2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba30, 0x3)   mov(edx, memd_a32(ds, eax + 0x23));   /* mov edx, [eax+0x23] */
//    II(0x100eba33, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba36, 0x3)   mov(eax, memd_a32(ds, eax + 0x27));   /* mov eax, [eax+0x27] */
    II(0x100eba39, 0x5)   calld(sys_strncpy, 0x864a2);          /* call 0x10171ee0 */
    II(0x100eba3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba41, 0x3)   mov(edx, memd_a32(ds, eax + 0x2a));   /* mov edx, [eax+0x2a] */
    II(0x100eba44, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100eba47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba4a, 0x3)   mov(eax, memd_a32(ds, eax + 0x27));   /* mov eax, [eax+0x27] */
    II(0x100eba4d, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100eba4f, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100eba52, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x100eba54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba57, 0x3)   mov(edx, memd_a32(ds, eax + 0x2a));   /* mov edx, [eax+0x2a] */
    II(0x100eba5a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100eba5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba60, 0x3)   mov(eax, memd_a32(ds, eax + 0x27));   /* mov eax, [eax+0x27] */
    II(0x100eba63, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100eba65, 0x4)   mov(memb_a32(ds, eax + 0x1), 0);      /* mov byte [eax+0x1], 0x0 */
    II(0x100eba69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba6c, 0x3)   mov(edx, memd_a32(ds, eax + 0x2a));   /* mov edx, [eax+0x2a] */
    II(0x100eba6f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100eba72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba75, 0x3)   mov(eax, memd_a32(ds, eax + 0x23));   /* mov eax, [eax+0x23] */
    II(0x100eba78, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100eba7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba7d, 0x3)   mov(eax, memd_a32(ds, eax + 0x27));   /* mov eax, [eax+0x27] */
    II(0x100eba80, 0x5)   calld(sys_strcat, 0x7a4ac);           /* call 0x10165f31 */
    II(0x100eba85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eba88, 0x3)   mov(eax, memd_a32(ds, eax + 0x27));   /* mov eax, [eax+0x27] */
    II(0x100eba8b, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x100eba91, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100eba93, 0x5)   mov(eax, 0x101a1f00);                 /* mov eax, 0x101a1f00 */ /* "|" */
    II(0x100eba98, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x100eba9e, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ebaa0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ebaa3, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100ebaa6, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100ebaa9, 0x2)   sub(eax, memd_a32(ds, ebx));          /* sub eax, [ebx] */
    II(0x100ebaab, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ebaad, 0x2)   jgd(0x100ebae7, 0x38);                /* jg 0x100ebae7 */
    II(0x100ebaaf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ebab2, 0x3)   mov(edx, memd_a32(ds, eax + 0x27));   /* mov edx, [eax+0x27] */
//    II(0x100ebab5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ebab8, 0x3)   mov(eax, memd_a32(ds, eax + 0x23));   /* mov eax, [eax+0x23] */
    II(0x100ebabb, 0x5)   calld(sys_strcpy, 0x7a40f);           /* call 0x10165ecf */
    II(0x100ebac0, 0x5)   calld(0x100d6104, -0x159c1);          /* call 0x100d6104 */
    II(0x100ebac5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebac7, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100ebac9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ebacc, 0x5)   calld(0x100eb5e1, -0x4f0);            /* call 0x100eb5e1 */
    II(0x100ebad1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ebad4, 0x4)   inc(memw_a32(ds, eax + 0x2c));        /* inc word [eax+0x2c] */
    II(0x100ebad8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ebadb, 0x4)   mov(memb_a32(ds, eax + 0x2b), 0);     /* mov byte [eax+0x2b], 0x0 */
    II(0x100ebadf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ebae2, 0x5)   calld(0x100eb6bf, -0x428);            /* call 0x100eb6bf */
l_0x100ebae7:
    II(0x100ebae7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ebae9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ebaea, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ebaeb, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ebaec, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ebaed, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ebaee, 0x1)   retd();                               /* ret */
FUNC_END

