FUNC_BEGIN(0x1008b874, 0x815c70c582b417b9, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xd4, 0xa4, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x9f, 0xaa, 0xfe, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x13, 0xac, 0xfe, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x42, 0xb3, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xb1, 0xf4, 0xa, 0, 0x84, 0xc0, 0x74, 0x35, 0x8d, 0x45, 0xf4, 0xe8, 0xd4, 0xaa, 0xfe, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0x1e, 0x8d, 0x45, 0xf4, 0xe8, 0xbf, 0xaa, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x7, 0x75, 0xf, 0x8d, 0x45, 0xf4, 0xe8, 0xb0, 0xaa, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x1, 0x45, 0xf0, 0xeb, 0xb5, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0xa, 0x7d, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x50, 0xa6, 0xfe, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x44, 0xa6, 0xfe, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008b874, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1008b879, 0x5)   calld(sys_check_available_stack_size, 0xda4d4); /* call 0x10165d52 */
    II(0x1008b87e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008b87f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008b880, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008b881, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008b882, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008b883, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008b884, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008b886, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1008b88c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1008b88f, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1008b894, 0x5)   calld(0x10076338, -0x15561);          /* call 0x10076338 */
    II(0x1008b899, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x1008b89c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008b89e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008b8a0, 0x5)   calld(0x100764b8, -0x153ed);          /* call 0x100764b8 */
    II(0x1008b8a5, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1008b8ac, 0x2)   jmpd(0x1008b8b6, 0x8);                /* jmp 0x1008b8b6 */
l_0x1008b8ae:
    II(0x1008b8ae, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b8b1, 0x5)   calld(0x10076bf8, -0x14cbe);          /* call 0x10076bf8 */
l_0x1008b8b6:
    II(0x1008b8b6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b8b8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b8bb, 0x5)   calld(0x1013ad71, 0xaf4b1);           /* call 0x1013ad71 */
    II(0x1008b8c0, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008b8c2, 0x2)   jzd(0x1008b8f9, 0x35);                /* jz 0x1008b8f9 */
    II(0x1008b8c4, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b8c7, 0x5)   calld(0x100763a0, -0x1552c);          /* call 0x100763a0 */
    II(0x1008b8cc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b8ce, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1008b8d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1008b8d5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008b8d7, 0x2)   jnzd(0x1008b8f7, 0x1e);               /* jnz 0x1008b8f7 */
    II(0x1008b8d9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b8dc, 0x5)   calld(0x100763a0, -0x15541);          /* call 0x100763a0 */
    II(0x1008b8e1, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x7);    /* cmp word [eax+0x8], 0x7 */
    II(0x1008b8e6, 0x2)   jnzd(0x1008b8f7, 0xf);                /* jnz 0x1008b8f7 */
    II(0x1008b8e8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b8eb, 0x5)   calld(0x100763a0, -0x15550);          /* call 0x100763a0 */
    II(0x1008b8f0, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x1008b8f4, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1008b8f7:
    II(0x1008b8f7, 0x2)   jmpd(0x1008b8ae, -0x4b);              /* jmp 0x1008b8ae */
l_0x1008b8f9:
    II(0x1008b8f9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1008b8fd, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x1008b900, 0x2)   jged(0x1008b908, 0x6);                /* jge 0x1008b908 */
    II(0x1008b902, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1008b906, 0x2)   jmpd(0x1008b90c, 0x4);                /* jmp 0x1008b90c */
l_0x1008b908:
    II(0x1008b908, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x1008b90c:
    II(0x1008b90c, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1008b90f, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x1008b912, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b914, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b917, 0x5)   calld(0x10075f6c, -0x159b0);          /* call 0x10075f6c */
    II(0x1008b91c, 0x2)   jmpd(0x1008b928, 0xa);                /* jmp 0x1008b928 */
//  II(0x1008b91e, 0xa)   /* Недостижимый код. */
l_0x1008b928:
    II(0x1008b928, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1008b92b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008b92d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008b92e, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008b92f, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008b930, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008b931, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008b932, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008b933, 0x1)   retd();                               /* ret */
FUNC_END

