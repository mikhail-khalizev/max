FUNC_BEGIN(0x1013679b, 0xaff5bdd343a27235, 0x20, ({0x68, 0x7c, 0, 0, 0, 0xe8, 0xad, 0xf5, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xbb, 0x26, 0, 0, 0, 0xba, 0xe5, 0x6, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xd9, 0, 0xfa, 0xff, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x13, 0x7c, 0x6e, 0x1b, 0x10, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x65, 0x3a, 0x3, 0, 0xe8, 0x38, 0xf9, 0xf9, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xe7, 0x2, 0xfa, 0xff, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0xe8, 0xb, 0x2, 0xfa, 0xff, 0xba, 0x78, 0x36, 0x1c, 0x10, 0x8d, 0x45, 0xf4, 0xe8, 0x65, 0xe5, 0xf9, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1e, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0x50, 0xb9, 0x8c, 0, 0, 0, 0x31, 0xdb, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x58, 0x43, 0xfb, 0xff, 0xb8, 0x2f, 0, 0, 0, 0xe8, 0xb1, 0xf5, 0x2, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x5c, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0x6a, 0, 0x6a, 0, 0x6a, 0, 0xb8, 0x1e, 0x2, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xc7, 0x48, 0xf5, 0xff, 0x89, 0xc6, 0xb8, 0xc0, 0, 0, 0, 0x50, 0xb9, 0xab, 0, 0, 0, 0xbb, 0xaf, 0, 0, 0, 0xba, 0xe, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xa8, 0x48, 0xf5, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xe4, 0x89, 0xf1, 0xe8, 0x57, 0xe, 0xfa, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xf0, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x31, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x4, 0xba, 0x64, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xe8, 0x9d, 0x6, 0xfa, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xe8, 0x32, 0x6, 0xfa, 0xff, 0xba, 0x24, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xe8, 0xd1, 0xa1, 0xfa, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xec, 0xff, 0x52, 0x8, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x29, 0xe8, 0x77, 0xb, 0x3, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1013679b, 0x5)   pushd(0x7c);                          /* push dword 0x7c */
    II(0x101367a0, 0x5)   calld(sys_check_available_stack_size, 0x2f5ad); /* call 0x10165d52 */
    II(0x101367a5, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101367a6, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101367a7, 0x1)   pushd(esi);                           /* push esi */
    II(0x101367a8, 0x1)   pushd(edi);                           /* push edi */
    II(0x101367a9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101367aa, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101367ac, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x101367b2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101367b5, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101367b8, 0x5)   mov(ebx, 0x26);                       /* mov ebx, 0x26 */
    II(0x101367bd, 0x5)   mov(edx, 0x6e5);                      /* mov edx, 0x6e5 */
//    II(0x101367c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101367c5, 0x5)   calld(0x100d68a3, -0x5ff27);          /* call 0x100d68a3 */
    II(0x101367ca, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101367cd, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x101367d0, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x101367d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101367d6, 0x7)   mov(memd_a32(ds, eax + 0x13), 0x101b6e7c); /* mov dword [eax+0x13], 0x101b6e7c */
    II(0x101367dd, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x101367e2, 0x5)   calld(/* sys */ 0x1016a24c, 0x33a65); /* call 0x1016a24c */
    II(0x101367e7, 0x5)   calld(0x100d6124, -0x606c8);          /* call 0x100d6124 */
    II(0x101367ec, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101367ee, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x101367f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101367f3, 0x5)   calld(0x100d6adf, -0x5fd19);          /* call 0x100d6adf */
    II(0x101367f8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101367fb, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x101367fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10136801, 0x5)   calld(0x100d6a11, -0x5fdf5);          /* call 0x100d6a11 */
    II(0x10136806, 0x5)   mov(edx, 0x101c3678);                 /* mov edx, 0x101c3678 */
    II(0x1013680b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1013680e, 0x5)   calld(0x100d4d78, -0x61a9b);          /* call 0x100d4d78 */
    II(0x10136813, 0x1)   pushd(eax);                           /* push eax */
    II(0x10136814, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10136819, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013681a, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1013681f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10136820, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x10136825, 0x1)   pushd(eax);                           /* push eax */
    II(0x10136826, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10136829, 0x3)   mov(eax, memd_a32(ds, eax + 0x25));   /* mov eax, [eax+0x25] */
    II(0x1013682c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013682f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10136830, 0x5)   mov(ecx, 0x8c);                       /* mov ecx, 0x8c */
    II(0x10136835, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10136837, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1013683a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013683d, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x10136840, 0x5)   calld(0x100eab9d, -0x4bca8);          /* call 0x100eab9d */
    II(0x10136845, 0x5)   mov(eax, 0x2f);                       /* mov eax, 0x2f */
    II(0x1013684a, 0x5)   calld(sys_new, 0x2f5b1);              /* call 0x10165e00 */
    II(0x1013684f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x10136852, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10136855, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10136858, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x1013685c, 0x2)   jzd(0x101368ba, 0x5c);                /* jz 0x101368ba */
    II(0x1013685e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10136860, 0x1)   pushd(eax);                           /* push eax */
    II(0x10136861, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10136863, 0x1)   pushd(eax);                           /* push eax */
    II(0x10136864, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x10136866, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x10136868, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x1013686a, 0x5)   mov(eax, 0x21e);                      /* mov eax, 0x21e */
    II(0x1013686f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10136870, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10136872, 0x1)   pushd(eax);                           /* push eax */
    II(0x10136873, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10136875, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10136877, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10136879, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1013687c, 0x5)   calld(0x1008b148, -0xab739);          /* call 0x1008b148 */
    II(0x10136881, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x10136883, 0x5)   mov(eax, 0xc0);                       /* mov eax, 0xc0 */
    II(0x10136888, 0x1)   pushd(eax);                           /* push eax */
    II(0x10136889, 0x5)   mov(ecx, 0xab);                       /* mov ecx, 0xab */
    II(0x1013688e, 0x5)   mov(ebx, 0xaf);                       /* mov ebx, 0xaf */
    II(0x10136893, 0x5)   mov(edx, 0xe);                        /* mov edx, 0xe */
    II(0x10136898, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1013689b, 0x5)   calld(0x1008b148, -0xab758);          /* call 0x1008b148 */
    II(0x101368a0, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x101368a2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101368a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101368a8, 0x2)   mov(ecx, esi);                        /* mov ecx, esi */
    II(0x101368aa, 0x5)   calld(0x100d7706, -0x5f1a9);          /* call 0x100d7706 */
    II(0x101368af, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x101368b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101368b5, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101368b8, 0x2)   jmpd(0x101368c0, 0x6);                /* jmp 0x101368c0 */
l_0x101368ba:
    II(0x101368ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101368bd, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x101368c0:
    II(0x101368c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101368c3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101368c6, 0x3)   mov(memd_a32(ds, edx + 0x31), eax);   /* mov [edx+0x31], eax */
    II(0x101368c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101368cc, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x101368cf, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x101368d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101368d5, 0x3)   mov(edx, memd_a32(ds, eax + 0x27));   /* mov edx, [eax+0x27] */
//    II(0x101368d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101368db, 0x3)   calld_abs(memd_a32(ds, edx + 0x4));   /* call dword near [edx+0x4] */
    II(0x101368de, 0x5)   mov(edx, 0x64);                       /* mov edx, 0x64 */
    II(0x101368e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101368e6, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x101368e9, 0x5)   calld(0x100d6f8b, -0x5f963);          /* call 0x100d6f8b */
    II(0x101368ee, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101368f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101368f3, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x101368f6, 0x5)   calld(0x100d6f2d, -0x5f9ce);          /* call 0x100d6f2d */
    II(0x101368fb, 0x5)   mov(edx, 0x224);                      /* mov edx, 0x224 */
    II(0x10136900, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10136903, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x10136906, 0x5)   calld(0x100e0adc, -0x55e2f);          /* call 0x100e0adc */
    II(0x1013690b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013690e, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x10136911, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x10136914, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10136917, 0x3)   mov(edx, memd_a32(ds, eax + 0x27));   /* mov edx, [eax+0x27] */
//    II(0x1013691a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013691d, 0x3)   calld_abs(memd_a32(ds, edx + 0x8));   /* call dword near [edx+0x8] */
    II(0x10136920, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10136923, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x10136926, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10136929, 0x3)   mov(eax, memd_a32(ds, eax + 0x29));   /* mov eax, [eax+0x29] */
    II(0x1013692c, 0x5)   calld(sys_display_draw_1, 0x30b77);   /* call 0x101674a8 */
    II(0x10136931, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10136934, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x10136937, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1013693a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013693c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013693d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013693e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013693f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10136940, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10136941, 0x1)   retd();                               /* ret */
FUNC_END

