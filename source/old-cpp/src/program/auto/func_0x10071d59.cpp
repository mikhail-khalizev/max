FUNC_BEGIN(0x10071d59, 0xb930e3c6d3f8279d, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xef, 0x3f, 0xf, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0xc7, 0x45, 0xf0, 0, 0x31, 0, 0, 0xf, 0xbf, 0x5d, 0xf0, 0x8b, 0x15, 0xe8, 0x70, 0x1c, 0x10, 0xa1, 0xe0, 0x70, 0x1c, 0x10, 0xe8, 0xb8, 0x40, 0xf, 0, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x75, 0x5e, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0x74, 0x54, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x6, 0x80, 0x7d, 0xfc, 0, 0x74, 0x2b, 0xf, 0xbf, 0x45, 0xf0, 0x8b, 0x15, 0xe0, 0x70, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x8b, 0x15, 0xcc, 0x70, 0x1c, 0x10, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0x8b, 0x1d, 0xe0, 0x70, 0x1c, 0x10, 0x1, 0xd8, 0x8a, 0x12, 0x88, 0x10, 0xeb, 0xa2, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10071d59, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x10071d5e, 0x5)   calld(sys_check_available_stack_size, 0xf3fef); /* call 0x10165d52 */
    II(0x10071d63, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10071d64, 0x1)   pushd(esi);                           /* push esi */
    II(0x10071d65, 0x1)   pushd(edi);                           /* push edi */
    II(0x10071d66, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10071d67, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10071d69, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10071d6f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10071d72, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10071d75, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x10071d78, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x3100); /* mov dword [ebp-0x10], 0x3100 */
    II(0x10071d7f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x10071d83, 0x6)   mov(edx, memd_a32(ds, 0x101c70e8));   /* mov edx, [0x101c70e8] */
    II(0x10071d89, 0x5)   mov(eax, memd_a32(ds, 0x101c70e0));   /* mov eax, [0x101c70e0] */
    II(0x10071d8e, 0x5)   calld(sys_memcpy, 0xf40b8);           /* call 0x10165e4b */
    II(0x10071d93, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10071d97, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10071d99, 0x2)   jnzd(0x10071df9, 0x5e);               /* jnz 0x10071df9 */
l_0x10071d9b:
    II(0x10071d9b, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x10071d9e, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x10071da3, 0x2)   jzd(0x10071df9, 0x54);                /* jz 0x10071df9 */
    II(0x10071da5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10071da9, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10071daf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10071db3, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x10071db9, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10071dbb, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10071dbd, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10071dc2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10071dc4, 0x2)   jzd(0x10071dcc, 0x6);                 /* jz 0x10071dcc */
    II(0x10071dc6, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10071dca, 0x2)   jzd(0x10071df7, 0x2b);                /* jz 0x10071df7 */
l_0x10071dcc:
    II(0x10071dcc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10071dd0, 0x6)   mov(edx, memd_a32(ds, 0x101c70e0));   /* mov edx, [0x101c70e0] */
    II(0x10071dd6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10071dd8, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10071dda, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10071ddf, 0x6)   mov(edx, memd_a32(ds, 0x101c70cc));   /* mov edx, [0x101c70cc] */
    II(0x10071de5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10071de7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10071deb, 0x6)   mov(ebx, memd_a32(ds, 0x101c70e0));   /* mov ebx, [0x101c70e0] */
    II(0x10071df1, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10071df3, 0x2)   mov(dl, memb_a32(ds, edx));           /* mov dl, [edx] */
    II(0x10071df5, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
l_0x10071df7:
    II(0x10071df7, 0x2)   jmpd(0x10071d9b, -0x5e);              /* jmp 0x10071d9b */
l_0x10071df9:
    II(0x10071df9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10071dfb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10071dfc, 0x1)   popd(edi);                            /* pop edi */
    II(0x10071dfd, 0x1)   popd(esi);                            /* pop esi */
    II(0x10071dfe, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10071dff, 0x1)   retd();                               /* ret */
FUNC_END

