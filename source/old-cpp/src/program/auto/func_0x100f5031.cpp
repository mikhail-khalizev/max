FUNC_BEGIN(0x100f5031, 0x5174a6e4fc45e9c, 0x20, ({0x68, 0x8, 0x1, 0, 0, 0xe8, 0x17, 0xd, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xd4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xe4, 0x12, 0xf8, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0x5a, 0x14, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x9, 0x5d, 0x4, 0, 0x84, 0xc0, 0xf, 0x84, 0x91, 0x1, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x28, 0x13, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x3, 0x74, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0x1a, 0x13, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x9, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xa, 0x13, 0xf8, 0xff, 0x80, 0x78, 0x3e, 0xe, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xfa, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x5, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xea, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x17, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xda, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x19, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xca, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x18, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xba, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x16, 0x75, 0x2, 0xeb, 0x1e, 0x8d, 0x45, 0xf4, 0xe8, 0xaa, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0x9c, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x1e, 0x8d, 0x45, 0xf4, 0xe8, 0x8a, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x1b, 0x75, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0x7c, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x1e, 0x8d, 0x45, 0xf4, 0xe8, 0x6a, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x1e, 0x75, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0x5c, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xf4, 0xe8, 0x4a, 0x12, 0xf8, 0xff, 0x80, 0x78, 0x3e, 0, 0xf, 0x85, 0x94, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x38, 0x12, 0xf8, 0xff, 0x8b, 0x40, 0x3a, 0xc1, 0xf8, 0x18, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x78, 0x89, 0x1b, 0x10, 0x8d, 0x45, 0xf4, 0xe8, 0x21, 0x12, 0xf8, 0xff, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0x8d, 0x45, 0xf4, 0xe8, 0x11, 0x12, 0xf8, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0x8d, 0x45, 0xf4, 0xe8, 0x1, 0x12, 0xf8, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0xb8, 0x3f, 0x25, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x41, 0xd, 0x7, 0, 0x83, 0xc4, 0x18, 0xe8, 0x38, 0x58, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x4d, 0x58, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0xe8, 0x3f, 0xb, 0x2, 0, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x7a, 0xd, 0xf8, 0xff, 0xeb, 0x27, 0x8d, 0x45, 0xf4, 0xe8, 0xfc, 0x19, 0xf8, 0xff, 0xe9, 0x5d, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x5d, 0xd, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x51, 0xd, 0xf8, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f5031, 0x5)   pushd(0x108);                         /* push dword 0x108 */
    II(0x100f5036, 0x5)   calld(sys_check_available_stack_size, 0x70d17); /* call 0x10165d52 */
    II(0x100f503b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f503c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f503d, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f503e, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f503f, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f5040, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f5041, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f5043, 0x6)   sub(esp, 0xd4);                       /* sub esp, 0xd4 */
    II(0x100f5049, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100f504c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f504f, 0x5)   calld(0x10076338, -0x7ed1c);          /* call 0x10076338 */
    II(0x100f5054, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100f5056, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f5059, 0x5)   calld(0x100764b8, -0x7eba6);          /* call 0x100764b8 */
l_0x100f505e:
    II(0x100f505e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f5060, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f5063, 0x5)   calld(0x1013ad71, 0x45d09);           /* call 0x1013ad71 */
    II(0x100f5068, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f506a, 0x6)   jzd(0x100f5201, 0x191);               /* jz dword 0x100f5201 */
    II(0x100f5070, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f5073, 0x5)   calld(0x100763a0, -0x7ecd8);          /* call 0x100763a0 */
    II(0x100f5078, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x3);   /* cmp byte [eax+0x3d], 0x3 */
    II(0x100f507c, 0x2)   jzd(0x100f508c, 0xe);                 /* jz 0x100f508c */
    II(0x100f507e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f5081, 0x5)   calld(0x100763a0, -0x7ece6);          /* call 0x100763a0 */
    II(0x100f5086, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x9);   /* cmp byte [eax+0x3d], 0x9 */
    II(0x100f508a, 0x2)   jnzd(0x100f508e, 0x2);                /* jnz 0x100f508e */
l_0x100f508c:
    II(0x100f508c, 0x2)   jmpd(0x100f509c, 0xe);                /* jmp 0x100f509c */
l_0x100f508e:
    II(0x100f508e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f5091, 0x5)   calld(0x100763a0, -0x7ecf6);          /* call 0x100763a0 */
    II(0x100f5096, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0xe);   /* cmp byte [eax+0x3e], 0xe */
    II(0x100f509a, 0x2)   jnzd(0x100f509e, 0x2);                /* jnz 0x100f509e */
l_0x100f509c:
    II(0x100f509c, 0x2)   jmpd(0x100f50ac, 0xe);                /* jmp 0x100f50ac */
l_0x100f509e:
    II(0x100f509e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f50a1, 0x5)   calld(0x100763a0, -0x7ed06);          /* call 0x100763a0 */
    II(0x100f50a6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x5);   /* cmp byte [eax+0x3d], 0x5 */
    II(0x100f50aa, 0x2)   jnzd(0x100f50ae, 0x2);                /* jnz 0x100f50ae */
l_0x100f50ac:
    II(0x100f50ac, 0x2)   jmpd(0x100f50bc, 0xe);                /* jmp 0x100f50bc */
l_0x100f50ae:
    II(0x100f50ae, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f50b1, 0x5)   calld(0x100763a0, -0x7ed16);          /* call 0x100763a0 */
    II(0x100f50b6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x17);  /* cmp byte [eax+0x3d], 0x17 */
    II(0x100f50ba, 0x2)   jnzd(0x100f50be, 0x2);                /* jnz 0x100f50be */
l_0x100f50bc:
    II(0x100f50bc, 0x2)   jmpd(0x100f50cc, 0xe);                /* jmp 0x100f50cc */
l_0x100f50be:
    II(0x100f50be, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f50c1, 0x5)   calld(0x100763a0, -0x7ed26);          /* call 0x100763a0 */
    II(0x100f50c6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x19);  /* cmp byte [eax+0x3d], 0x19 */
    II(0x100f50ca, 0x2)   jnzd(0x100f50ce, 0x2);                /* jnz 0x100f50ce */
l_0x100f50cc:
    II(0x100f50cc, 0x2)   jmpd(0x100f50dc, 0xe);                /* jmp 0x100f50dc */
l_0x100f50ce:
    II(0x100f50ce, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f50d1, 0x5)   calld(0x100763a0, -0x7ed36);          /* call 0x100763a0 */
    II(0x100f50d6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x18);  /* cmp byte [eax+0x3d], 0x18 */
    II(0x100f50da, 0x2)   jnzd(0x100f50de, 0x2);                /* jnz 0x100f50de */
l_0x100f50dc:
    II(0x100f50dc, 0x2)   jmpd(0x100f50ec, 0xe);                /* jmp 0x100f50ec */
l_0x100f50de:
    II(0x100f50de, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f50e1, 0x5)   calld(0x100763a0, -0x7ed46);          /* call 0x100763a0 */
    II(0x100f50e6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x16);  /* cmp byte [eax+0x3d], 0x16 */
    II(0x100f50ea, 0x2)   jnzd(0x100f50ee, 0x2);                /* jnz 0x100f50ee */
l_0x100f50ec:
    II(0x100f50ec, 0x2)   jmpd(0x100f510c, 0x1e);               /* jmp 0x100f510c */
l_0x100f50ee:
    II(0x100f50ee, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f50f1, 0x5)   calld(0x100763a0, -0x7ed56);          /* call 0x100763a0 */
    II(0x100f50f6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x100f50fa, 0x2)   jnzd(0x100f510a, 0xe);                /* jnz 0x100f510a */
    II(0x100f50fc, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f50ff, 0x5)   calld(0x100763a0, -0x7ed64);          /* call 0x100763a0 */
    II(0x100f5104, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100f5108, 0x2)   jnzd(0x100f510c, 0x2);                /* jnz 0x100f510c */
l_0x100f510a:
    II(0x100f510a, 0x2)   jmpd(0x100f510e, 0x2);                /* jmp 0x100f510e */
l_0x100f510c:
    II(0x100f510c, 0x2)   jmpd(0x100f512c, 0x1e);               /* jmp 0x100f512c */
l_0x100f510e:
    II(0x100f510e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f5111, 0x5)   calld(0x100763a0, -0x7ed76);          /* call 0x100763a0 */
    II(0x100f5116, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x100f511a, 0x2)   jnzd(0x100f512a, 0xe);                /* jnz 0x100f512a */
    II(0x100f511c, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f511f, 0x5)   calld(0x100763a0, -0x7ed84);          /* call 0x100763a0 */
    II(0x100f5124, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100f5128, 0x2)   jnzd(0x100f512c, 0x2);                /* jnz 0x100f512c */
l_0x100f512a:
    II(0x100f512a, 0x2)   jmpd(0x100f512e, 0x2);                /* jmp 0x100f512e */
l_0x100f512c:
    II(0x100f512c, 0x2)   jmpd(0x100f514c, 0x1e);               /* jmp 0x100f514c */
l_0x100f512e:
    II(0x100f512e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f5131, 0x5)   calld(0x100763a0, -0x7ed96);          /* call 0x100763a0 */
    II(0x100f5136, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x100f513a, 0x2)   jnzd(0x100f514a, 0xe);                /* jnz 0x100f514a */
    II(0x100f513c, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f513f, 0x5)   calld(0x100763a0, -0x7eda4);          /* call 0x100763a0 */
    II(0x100f5144, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100f5148, 0x2)   jnzd(0x100f514c, 0x2);                /* jnz 0x100f514c */
l_0x100f514a:
    II(0x100f514a, 0x2)   jmpd(0x100f514e, 0x2);                /* jmp 0x100f514e */
l_0x100f514c:
    II(0x100f514c, 0x2)   jmpd(0x100f5160, 0x12);               /* jmp 0x100f5160 */
l_0x100f514e:
    II(0x100f514e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f5151, 0x5)   calld(0x100763a0, -0x7edb6);          /* call 0x100763a0 */
    II(0x100f5156, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0);     /* cmp byte [eax+0x3e], 0x0 */
    II(0x100f515a, 0x6)   jnzd(0x100f51f4, 0x94);               /* jnz dword 0x100f51f4 */
l_0x100f5160:
    II(0x100f5160, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f5163, 0x5)   calld(0x100763a0, -0x7edc8);          /* call 0x100763a0 */
    II(0x100f5168, 0x3)   mov(eax, memd_a32(ds, eax + 0x3a));   /* mov eax, [eax+0x3a] */
    II(0x100f516b, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100f516e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f5171, 0x6)   pushd(memd_a32(ds, eax + 0x101b8978)); /* push dword [eax+0x101b8978] */
    II(0x100f5177, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f517a, 0x5)   calld(0x100763a0, -0x7eddf);          /* call 0x100763a0 */
    II(0x100f517f, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100f5182, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f5185, 0x1)   inc(eax);                             /* inc eax */
    II(0x100f5186, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f5187, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f518a, 0x5)   calld(0x100763a0, -0x7edef);          /* call 0x100763a0 */
    II(0x100f518f, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100f5192, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f5195, 0x1)   inc(eax);                             /* inc eax */
    II(0x100f5196, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f5197, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f519a, 0x5)   calld(0x100763a0, -0x7edff);          /* call 0x100763a0 */
    II(0x100f519f, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100f51a2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f51a5, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100f51a8, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x100f51ae, 0x5)   mov(eax, 0x101a253f);                 /* mov eax, 0x101a253f */ /* "End turn delayed because %s at [%i,%i] is %s" */
    II(0x100f51b3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f51b4, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100f51ba, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f51bb, 0x5)   calld(sys_sprintf, 0x70d41);          /* call 0x10165f01 */
    II(0x100f51c0, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100f51c3, 0x5)   calld(0x100caa00, -0x2a7c8);          /* call 0x100caa00 */
    II(0x100f51c8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f51cd, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f51ce, 0x5)   calld(0x100caa20, -0x2a7b3);          /* call 0x100caa20 */
    II(0x100f51d3, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f51d5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f51d7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f51d9, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100f51df, 0x5)   calld(0x10115d23, 0x20b3f);           /* call 0x10115d23 */
    II(0x100f51e4, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100f51e8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f51ea, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f51ed, 0x5)   calld(0x10075f6c, -0x7f286);          /* call 0x10075f6c */
    II(0x100f51f2, 0x2)   jmpd(0x100f521b, 0x27);               /* jmp 0x100f521b */
l_0x100f51f4:
    II(0x100f51f4, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f51f7, 0x5)   calld(0x10076bf8, -0x7e604);          /* call 0x10076bf8 */
    II(0x100f51fc, 0x5)   jmpd(0x100f505e, -0x1a3);             /* jmp 0x100f505e */
l_0x100f5201:
    II(0x100f5201, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100f5205, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f5207, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f520a, 0x5)   calld(0x10075f6c, -0x7f2a3);          /* call 0x10075f6c */
    II(0x100f520f, 0x2)   jmpd(0x100f521b, 0xa);                /* jmp 0x100f521b */
//  II(0x100f5211, 0xa)   /* Недостижимый код. */
l_0x100f521b:
    II(0x100f521b, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100f521e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f5220, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f5221, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f5222, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f5223, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f5224, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f5225, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f5226, 0x1)   retd();                               /* ret */
FUNC_END

