FUNC_BEGIN(0x101434d4, 0xa0d1ce0ed2077717, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x74, 0x28, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0xff, 0x2f, 0xf3, 0xff, 0x89, 0x45, 0xf0, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0xe8, 0xda, 0xeb, 0xf2, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x22, 0x2e, 0xf3, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x1c, 0x2f, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x47, 0x78, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xd2, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x66, 0x2e, 0xf3, 0xff, 0xe8, 0xc5, 0x2c, 0xf3, 0xff, 0x3b, 0x45, 0xf8, 0x75, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0x54, 0x2e, 0xf3, 0xff, 0x80, 0x78, 0x3d, 0x8, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0x44, 0x2e, 0xf3, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0x34, 0x2e, 0xf3, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x5, 0xe9, 0x80, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x32, 0xeb, 0xf2, 0xff, 0xe8, 0x90, 0x2a, 0xf3, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xec, 0xe8, 0x75, 0x2e, 0xf3, 0xff, 0xe8, 0xf0, 0xed, 0xf2, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0, 0x2e, 0xf3, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x75, 0x33, 0x8d, 0x45, 0xec, 0xe8, 0xf1, 0x2d, 0xf3, 0xff, 0x8a, 0x40, 0x49, 0x30, 0xe4, 0x66, 0x29, 0x45, 0xe0, 0x8d, 0x45, 0xec, 0xe8, 0xe0, 0x2d, 0xf3, 0xff, 0x8a, 0x40, 0x47, 0x30, 0xe4, 0x66, 0x29, 0x45, 0xe2, 0x8d, 0x45, 0xec, 0xe8, 0xcf, 0x2d, 0xf3, 0xff, 0x8a, 0x40, 0x48, 0x30, 0xe4, 0x66, 0x29, 0x45, 0xe4, 0x8b, 0x45, 0xe0, 0x8b, 0x55, 0xfc, 0x66, 0x29, 0x2, 0x8b, 0x45, 0xe2, 0x8b, 0x55, 0xfc, 0x66, 0x29, 0x42, 0x2, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xfc, 0x66, 0x29, 0x42, 0x4, 0x8d, 0x45, 0xec, 0xe8, 0xf9, 0x35, 0xf3, 0xff, 0xe9, 0x1c, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x5e, 0x29, 0xf3, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101434d4, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x101434d9, 0x5)   calld(sys_check_available_stack_size, 0x22874); /* call 0x10165d52 */
    II(0x101434de, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101434df, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101434e0, 0x1)   pushd(esi);                           /* push esi */
    II(0x101434e1, 0x1)   pushd(edi);                           /* push edi */
    II(0x101434e2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101434e3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101434e5, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x101434eb, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101434ee, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101434f1, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x101434f5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101434f8, 0x5)   calld(0x100764fc, -0xcd001);          /* call 0x100764fc */
    II(0x101434fd, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10143500, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10143504, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10143507, 0x5)   calld(0x100720e6, -0xd1426);          /* call 0x100720e6 */
    II(0x1014350c, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10143511, 0x5)   calld(0x10076338, -0xcd1de);          /* call 0x10076338 */
    II(0x10143516, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10143518, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014351b, 0x5)   calld(0x1007643c, -0xcd0e4);          /* call 0x1007643c */
l_0x10143520:
    II(0x10143520, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143522, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10143525, 0x5)   calld(0x1013ad71, -0x87b9);           /* call 0x1013ad71 */
    II(0x1014352a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014352c, 0x6)   jzd(0x10143604, 0xd2);                /* jz dword 0x10143604 */
    II(0x10143532, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10143535, 0x5)   calld(0x100763a0, -0xcd19a);          /* call 0x100763a0 */
    II(0x1014353a, 0x5)   calld(0x10076204, -0xcd33b);          /* call 0x10076204 */
    II(0x1014353f, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x8));    /* cmp eax, [ebp-0x8] */
    II(0x10143542, 0x2)   jnzd(0x10143552, 0xe);                /* jnz 0x10143552 */
    II(0x10143544, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10143547, 0x5)   calld(0x100763a0, -0xcd1ac);          /* call 0x100763a0 */
    II(0x1014354c, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x8);   /* cmp byte [eax+0x3d], 0x8 */
    II(0x10143550, 0x2)   jnzd(0x10143554, 0x2);                /* jnz 0x10143554 */
l_0x10143552:
    II(0x10143552, 0x2)   jmpd(0x10143562, 0xe);                /* jmp 0x10143562 */
l_0x10143554:
    II(0x10143554, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10143557, 0x5)   calld(0x100763a0, -0xcd1bc);          /* call 0x100763a0 */
    II(0x1014355c, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x10143560, 0x2)   jnzd(0x10143564, 0x2);                /* jnz 0x10143564 */
l_0x10143562:
    II(0x10143562, 0x2)   jmpd(0x10143572, 0xe);                /* jmp 0x10143572 */
l_0x10143564:
    II(0x10143564, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10143567, 0x5)   calld(0x100763a0, -0xcd1cc);          /* call 0x100763a0 */
    II(0x1014356c, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x10143570, 0x2)   jnzd(0x10143577, 0x5);                /* jnz 0x10143577 */
l_0x10143572:
    II(0x10143572, 0x5)   jmpd(0x101435f7, 0x80);               /* jmp 0x101435f7 */
l_0x10143577:
    II(0x10143577, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1014357a, 0x5)   calld(0x100720b1, -0xd14ce);          /* call 0x100720b1 */
    II(0x1014357f, 0x5)   calld(0x10076014, -0xcd570);          /* call 0x10076014 */
    II(0x10143584, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10143586, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10143588, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x1014358b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014358e, 0x5)   calld(0x10076408, -0xcd18b);          /* call 0x10076408 */
    II(0x10143593, 0x5)   calld(0x10072388, -0xd1210);          /* call 0x10072388 */
    II(0x10143598, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014359b, 0x5)   calld(0x100763a0, -0xcd200);          /* call 0x100763a0 */
    II(0x101435a0, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x101435a5, 0x2)   jnzd(0x101435da, 0x33);               /* jnz 0x101435da */
    II(0x101435a7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101435aa, 0x5)   calld(0x100763a0, -0xcd20f);          /* call 0x100763a0 */
    II(0x101435af, 0x3)   mov(al, memb_a32(ds, eax + 0x49));    /* mov al, [eax+0x49] */
    II(0x101435b2, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101435b4, 0x4)   sub(memw_a32(ss, ebp - 0x20), ax);    /* sub [ebp-0x20], ax */
    II(0x101435b8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101435bb, 0x5)   calld(0x100763a0, -0xcd220);          /* call 0x100763a0 */
    II(0x101435c0, 0x3)   mov(al, memb_a32(ds, eax + 0x47));    /* mov al, [eax+0x47] */
    II(0x101435c3, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101435c5, 0x4)   sub(memw_a32(ss, ebp - 0x1e), ax);    /* sub [ebp-0x1e], ax */
    II(0x101435c9, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101435cc, 0x5)   calld(0x100763a0, -0xcd231);          /* call 0x100763a0 */
    II(0x101435d1, 0x3)   mov(al, memb_a32(ds, eax + 0x48));    /* mov al, [eax+0x48] */
    II(0x101435d4, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101435d6, 0x4)   sub(memw_a32(ss, ebp - 0x1c), ax);    /* sub [ebp-0x1c], ax */
l_0x101435da:
    II(0x101435da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101435dd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101435e0, 0x3)   sub(memw_a32(ds, edx), ax);           /* sub [edx], ax */
    II(0x101435e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x101435e6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101435e9, 0x4)   sub(memw_a32(ds, edx + 0x2), ax);     /* sub [edx+0x2], ax */
    II(0x101435ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101435f0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101435f3, 0x4)   sub(memw_a32(ds, edx + 0x4), ax);     /* sub [edx+0x4], ax */
l_0x101435f7:
    II(0x101435f7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101435fa, 0x5)   calld(0x10076bf8, -0xcca07);          /* call 0x10076bf8 */
    II(0x101435ff, 0x5)   jmpd(0x10143520, -0xe4);              /* jmp 0x10143520 */
l_0x10143604:
    II(0x10143604, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143606, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10143609, 0x5)   calld(0x10075f6c, -0xcd6a2);          /* call 0x10075f6c */
    II(0x1014360e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10143610, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10143611, 0x1)   popd(edi);                            /* pop edi */
    II(0x10143612, 0x1)   popd(esi);                            /* pop esi */
    II(0x10143613, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10143614, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10143615, 0x1)   retd();                               /* ret */
FUNC_END

