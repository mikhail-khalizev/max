FUNC_BEGIN(0x1014dc87, 0xcfeb12a5a03a2fdd, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0xc1, 0x80, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x6, 0xc1, 0xf9, 0x10, 0xbb, 0x40, 0x71, 0x1c, 0x10, 0xba, 0x5d, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x24, 0x9a, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x7c, 0xba, 0x67, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x20, 0x98, 0xff, 0xff, 0xba, 0x6a, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfc, 0x96, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x15, 0x8, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x70, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x81, 0x9a, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x15, 0x4, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x80, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x66, 0x9a, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x15, 0x2, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x8c, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4b, 0x9a, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x15, 0x1, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x9a, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x30, 0x9a, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x14, 0x80, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0xa8, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x15, 0x9a, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x14, 0x40, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0xb3, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfa, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x14, 0x20, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0xbe, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xdf, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x14, 0x8, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0xce, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc4, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x14, 0x4, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0xdf, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa9, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x14, 0x2, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0xee, 0xd8, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8e, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x14, 0x1, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x73, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x13, 0x40, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x9, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x58, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x13, 0x2, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x15, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x3d, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x13, 0x1, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x20, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x22, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x80, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x31, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x7, 0x99, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x41, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xec, 0x98, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x20, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x51, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd1, 0x98, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x5e, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xb6, 0x98, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x8, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x67, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x9b, 0x98, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x4, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x76, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x80, 0x98, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x2, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x7f, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x65, 0x98, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x1, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x89, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4a, 0x98, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xa, 0x95, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x14, 0xc1, 0xfb, 0x10, 0xba, 0x96, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa3, 0x95, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x16, 0xc1, 0xfb, 0x10, 0xba, 0x98, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8d, 0x95, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x8d, 0x58, 0x1, 0xba, 0x9a, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x74, 0x95, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x8d, 0x58, 0x1, 0xba, 0xa1, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5b, 0x95, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xb8, 0xa7, 0, 0, 0, 0, 0x75, 0x14, 0xbb, 0xa8, 0xd9, 0x1a, 0x10, 0xba, 0xa9, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd1, 0x94, 0xff, 0xff, 0xeb, 0x16, 0x8b, 0x45, 0xf8, 0x8b, 0x98, 0xa7, 0, 0, 0, 0xba, 0xae, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xb9, 0x94, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x98, 0xd7, 0, 0, 0, 0xc1, 0xfb, 0x10, 0xba, 0xb3, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc, 0x95, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x9b, 0xd9, 0, 0, 0, 0xc1, 0xfb, 0x10, 0xba, 0xc3, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf3, 0x94, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0xf, 0xbf, 0xc8, 0xbb, 0x5c, 0x71, 0x1c, 0x10, 0xba, 0xd3, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc4, 0x96, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x27, 0xba, 0xd8, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc1, 0x94, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x28, 0xba, 0xe0, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xac, 0x94, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x29, 0xba, 0xeb, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x97, 0x94, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x98, 0xab, 0, 0, 0, 0xba, 0xf1, 0xd9, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8, 0x97, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x98, 0xac, 0, 0, 0, 0xba, 0, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf0, 0x96, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x98, 0xad, 0, 0, 0, 0xba, 0x11, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd8, 0x96, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x98, 0xae, 0, 0, 0, 0xba, 0x21, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc0, 0x96, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8a, 0x9b, 0xb0, 0, 0, 0, 0x81, 0xe3, 0xff, 0, 0, 0, 0xba, 0x31, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa4, 0x96, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x98, 0xb1, 0, 0, 0, 0xba, 0x40, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8c, 0x96, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x98, 0xb2, 0, 0, 0, 0xba, 0x51, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x74, 0x96, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x98, 0xb3, 0, 0, 0, 0xba, 0x61, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5c, 0x96, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x2a, 0xba, 0x71, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xbe, 0x93, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x2b, 0xba, 0x7e, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa9, 0x93, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x2c, 0xf, 0xbf, 0xc8, 0xbb, 0xcc, 0x71, 0x1c, 0x10, 0xba, 0x87, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x7a, 0x95, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x2d, 0xba, 0x8d, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x77, 0x93, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8a, 0x5b, 0x2e, 0x81, 0xe3, 0xff, 0, 0, 0, 0xba, 0x9b, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5e, 0x93, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x2c, 0xc1, 0xfb, 0x18, 0xba, 0xa8, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x48, 0x93, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x2d, 0xc1, 0xfb, 0x18, 0xba, 0xb8, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x32, 0x93, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x2f, 0xc1, 0xfb, 0x10, 0xba, 0xc8, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x1c, 0x93, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x31, 0xc1, 0xfb, 0x10, 0xba, 0xd5, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x6, 0x93, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x33, 0xc1, 0xfb, 0x10, 0xba, 0xe0, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf0, 0x92, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x35, 0xc1, 0xfb, 0x10, 0xba, 0xf2, 0xda, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xda, 0x92, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x37, 0xc1, 0xfb, 0x10, 0xba, 0x4, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc4, 0x92, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x9b, 0xd3, 0, 0, 0, 0xc1, 0xfb, 0x10, 0xba, 0x19, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xab, 0x92, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x9b, 0xd5, 0, 0, 0, 0xc1, 0xfb, 0x10, 0xba, 0x25, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x92, 0x92, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x39, 0xc1, 0xfb, 0x10, 0xba, 0x38, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x7c, 0x92, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x40, 0x3d, 0xf, 0xbf, 0xc8, 0xbb, 0xe8, 0x71, 0x1c, 0x10, 0xba, 0x48, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4d, 0x94, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x40, 0x3e, 0xf, 0xbf, 0xc8, 0xbb, 0x4, 0x72, 0x1c, 0x10, 0xba, 0x4f, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x30, 0x94, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x40, 0x3f, 0xf, 0xbf, 0xc8, 0xbb, 0xe8, 0x71, 0x1c, 0x10, 0xba, 0x55, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x13, 0x94, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x40, 0x40, 0xf, 0xbf, 0xc8, 0xbb, 0x4, 0x72, 0x1c, 0x10, 0xba, 0x62, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf6, 0x93, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x80, 0xa6, 0, 0, 0, 0xf, 0xbf, 0xc8, 0xbb, 0x20, 0x72, 0x1c, 0x10, 0xba, 0x6e, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd6, 0x93, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x3f, 0xc1, 0xfb, 0x10, 0xba, 0x7b, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd2, 0x91, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x41, 0xc1, 0xfb, 0x10, 0xba, 0x89, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xbc, 0x91, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8a, 0x5b, 0x45, 0x81, 0xe3, 0xff, 0, 0, 0, 0xba, 0x97, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa3, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x46, 0xba, 0xa2, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8e, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x47, 0xba, 0xaf, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x79, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x48, 0xba, 0xba, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x64, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x49, 0xba, 0xc6, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4f, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x4a, 0xba, 0xd2, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x3a, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x4c, 0xba, 0xe1, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x25, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x4b, 0xba, 0xf1, 0xdb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x10, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x4d, 0xba, 0x1, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfb, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x4e, 0xba, 0x6, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe6, 0x90, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8a, 0x5b, 0x50, 0x81, 0xe3, 0xff, 0, 0, 0, 0xba, 0xc, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xcd, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x51, 0xba, 0x12, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x41, 0x93, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x50, 0xc1, 0xfb, 0x10, 0xba, 0x20, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa2, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x54, 0xba, 0x28, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8d, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x55, 0xba, 0x2d, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x1, 0x93, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x56, 0xba, 0x3c, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xec, 0x92, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x40, 0x57, 0xf, 0xbf, 0xc8, 0xbb, 0x3c, 0x72, 0x1c, 0x10, 0xba, 0x47, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x34, 0x92, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x58, 0xba, 0x4e, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x31, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x59, 0xba, 0x5b, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa5, 0x92, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8a, 0x5b, 0x5a, 0x81, 0xe3, 0xff, 0, 0, 0, 0xba, 0x6c, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8c, 0x92, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x40, 0x5d, 0xf, 0xbf, 0xc8, 0xbb, 0x94, 0x71, 0x1c, 0x10, 0xba, 0x7e, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd4, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x5e, 0xba, 0x8d, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5a, 0x92, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x5f, 0xba, 0x93, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x45, 0x92, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x60, 0xf, 0xbf, 0xc8, 0xbb, 0x58, 0x72, 0x1c, 0x10, 0xba, 0x9a, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8d, 0x91, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x61, 0xf, 0xbf, 0xc8, 0xbb, 0x58, 0x72, 0x1c, 0x10, 0xba, 0xa1, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x70, 0x91, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x62, 0xf, 0xbf, 0xc8, 0xbb, 0x58, 0x72, 0x1c, 0x10, 0xba, 0xa8, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x53, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x63, 0xba, 0xad, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x50, 0x8f, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x64, 0xba, 0xbb, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x3b, 0x8f, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x7b, 0xba, 0xc9, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xaf, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x7a, 0xba, 0xd3, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x9a, 0x91, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x76, 0xc1, 0xfb, 0x10, 0xba, 0xe0, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfb, 0x8e, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0xdb, 0x6d, 0, 0, 0xba, 0xeb, 0xdc, 0x1a, 0x10, 0x8b, 0x4d, 0xfc, 0x89, 0xc3, 0x89, 0xc8, 0xe8, 0x54, 0x8f, 0xff, 0xff, 0xba, 0xf0, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xbb, 0x8d, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x69, 0x1, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0xfb, 0xdc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x40, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x69, 0x2, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0xe, 0xdd, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x25, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x69, 0x4, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x22, 0xdd, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa, 0x91, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x69, 0x8, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x33, 0xdd, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xef, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x69, 0x10, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x47, 0xdd, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd4, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x69, 0x20, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x5a, 0xdd, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xb9, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x69, 0x40, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x6e, 0xdd, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x9e, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x69, 0x80, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x7f, 0xdd, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x83, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x6a, 0x4, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0x93, 0xdd, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x68, 0x90, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x28, 0x8d, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0x23, 0xd0, 0xf7, 0xff, 0xba, 0xab, 0xdd, 0x1a, 0x10, 0x8b, 0x4d, 0xfc, 0x89, 0xc3, 0x89, 0xc8, 0xe8, 0x30, 0x8e, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x70, 0xe8, 0xcf, 0x6b, 0, 0, 0xba, 0xb7, 0xdd, 0x1a, 0x10, 0x8b, 0x4d, 0xfc, 0x89, 0xc3, 0x89, 0xc8, 0xe8, 0x14, 0x8e, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x5, 0x82, 0, 0, 0, 0xe8, 0x6d, 0x7e, 0xf2, 0xff, 0x89, 0xc3, 0xba, 0xbf, 0xdd, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf8, 0x8d, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x74, 0xe8, 0x5d, 0x16, 0xf8, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1014dc87, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x1014dc8c, 0x5)   calld(sys_check_available_stack_size, 0x180c1); /* call 0x10165d52 */
    II(0x1014dc91, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1014dc92, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1014dc93, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014dc94, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014dc95, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014dc96, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014dc98, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x1014dc9e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1014dca1, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1014dca4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dca7, 0x3)   mov(ecx, memd_a32(ds, eax + 0x6));    /* mov ecx, [eax+0x6] */
    II(0x1014dcaa, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1014dcad, 0x5)   mov(ebx, 0x101c7140);                 /* mov ebx, 0x101c7140 */
    II(0x1014dcb2, 0x5)   mov(edx, 0x101ad85d);                 /* mov edx, 0x101ad85d */ /* "unit_type" */
    II(0x1014dcb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dcba, 0x5)   calld(0x101476e3, -0x65dc);           /* call 0x101476e3 */
    II(0x1014dcbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dcc2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014dcc4, 0x4)   mov(bx, memw_a32(ds, eax + 0x7c));    /* mov bx, [eax+0x7c] */
    II(0x1014dcc8, 0x5)   mov(edx, 0x101ad867);                 /* mov edx, 0x101ad867 */ /* "id" */
    II(0x1014dccd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dcd0, 0x5)   calld(0x101474f5, -0x67e0);           /* call 0x101474f5 */
    II(0x1014dcd5, 0x5)   mov(edx, 0x101ad86a);                 /* mov edx, 0x101ad86a */ /* "flags" */
    II(0x1014dcda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dcdd, 0x5)   calld(0x101473de, -0x6904);           /* call 0x101473de */
    II(0x1014dce2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dce5, 0x4)   test(memb_a32(ds, eax + 0x15), 0x8);  /* test byte [eax+0x15], 0x8 */
    II(0x1014dce9, 0x2)   jzd(0x1014dcfd, 0x12);                /* jz 0x1014dcfd */
    II(0x1014dceb, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014dcf0, 0x5)   mov(edx, 0x101ad870);                 /* mov edx, 0x101ad870 */ /* "spinning_turret" */
    II(0x1014dcf5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dcf8, 0x5)   calld(0x1014777e, -0x657f);           /* call 0x1014777e */
l_0x1014dcfd:
    II(0x1014dcfd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dd00, 0x4)   test(memb_a32(ds, eax + 0x15), 0x4);  /* test byte [eax+0x15], 0x4 */
    II(0x1014dd04, 0x2)   jzd(0x1014dd18, 0x12);                /* jz 0x1014dd18 */
    II(0x1014dd06, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014dd0b, 0x5)   mov(edx, 0x101ad880);                 /* mov edx, 0x101ad880 */ /* "sentry_unit" */
    II(0x1014dd10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dd13, 0x5)   calld(0x1014777e, -0x659a);           /* call 0x1014777e */
l_0x1014dd18:
    II(0x1014dd18, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dd1b, 0x4)   test(memb_a32(ds, eax + 0x15), 0x2);  /* test byte [eax+0x15], 0x2 */
    II(0x1014dd1f, 0x2)   jzd(0x1014dd33, 0x12);                /* jz 0x1014dd33 */
    II(0x1014dd21, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014dd26, 0x5)   mov(edx, 0x101ad88c);                 /* mov edx, 0x101ad88c */ /* "turret_sprite" */
    II(0x1014dd2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dd2e, 0x5)   calld(0x1014777e, -0x65b5);           /* call 0x1014777e */
l_0x1014dd33:
    II(0x1014dd33, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dd36, 0x4)   test(memb_a32(ds, eax + 0x15), 0x1);  /* test byte [eax+0x15], 0x1 */
    II(0x1014dd3a, 0x2)   jzd(0x1014dd4e, 0x12);                /* jz 0x1014dd4e */
    II(0x1014dd3c, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014dd41, 0x5)   mov(edx, 0x101ad89a);                 /* mov edx, 0x101ad89a */ /* "requires_slab" */
    II(0x1014dd46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dd49, 0x5)   calld(0x1014777e, -0x65d0);           /* call 0x1014777e */
l_0x1014dd4e:
    II(0x1014dd4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dd51, 0x4)   test(memb_a32(ds, eax + 0x14), 0x80); /* test byte [eax+0x14], 0x80 */
    II(0x1014dd55, 0x2)   jzd(0x1014dd69, 0x12);                /* jz 0x1014dd69 */
    II(0x1014dd57, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014dd5c, 0x5)   mov(edx, 0x101ad8a8);                 /* mov edx, 0x101ad8a8 */ /* "standalone" */
    II(0x1014dd61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dd64, 0x5)   calld(0x1014777e, -0x65eb);           /* call 0x1014777e */
l_0x1014dd69:
    II(0x1014dd69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dd6c, 0x4)   test(memb_a32(ds, eax + 0x14), 0x40); /* test byte [eax+0x14], 0x40 */
    II(0x1014dd70, 0x2)   jzd(0x1014dd84, 0x12);                /* jz 0x1014dd84 */
    II(0x1014dd72, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014dd77, 0x5)   mov(edx, 0x101ad8b3);                 /* mov edx, 0x101ad8b3 */ /* "selectable" */
    II(0x1014dd7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dd7f, 0x5)   calld(0x1014777e, -0x6606);           /* call 0x1014777e */
l_0x1014dd84:
    II(0x1014dd84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dd87, 0x4)   test(memb_a32(ds, eax + 0x14), 0x20); /* test byte [eax+0x14], 0x20 */
    II(0x1014dd8b, 0x2)   jzd(0x1014dd9f, 0x12);                /* jz 0x1014dd9f */
    II(0x1014dd8d, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014dd92, 0x5)   mov(edx, 0x101ad8be);                 /* mov edx, 0x101ad8be */ /* "electronic_unit" */
    II(0x1014dd97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dd9a, 0x5)   calld(0x1014777e, -0x6621);           /* call 0x1014777e */
l_0x1014dd9f:
    II(0x1014dd9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dda2, 0x4)   test(memb_a32(ds, eax + 0x14), 0x8);  /* test byte [eax+0x14], 0x8 */
    II(0x1014dda6, 0x2)   jzd(0x1014ddba, 0x12);                /* jz 0x1014ddba */
    II(0x1014dda8, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014ddad, 0x5)   mov(edx, 0x101ad8ce);                 /* mov edx, 0x101ad8ce */ /* "constructor_unit" */
    II(0x1014ddb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ddb5, 0x5)   calld(0x1014777e, -0x663c);           /* call 0x1014777e */
l_0x1014ddba:
    II(0x1014ddba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014ddbd, 0x4)   test(memb_a32(ds, eax + 0x14), 0x4);  /* test byte [eax+0x14], 0x4 */
    II(0x1014ddc1, 0x2)   jzd(0x1014ddd5, 0x12);                /* jz 0x1014ddd5 */
    II(0x1014ddc3, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014ddc8, 0x5)   mov(edx, 0x101ad8df);                 /* mov edx, 0x101ad8df */ /* "fires_missiles" */
    II(0x1014ddcd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ddd0, 0x5)   calld(0x1014777e, -0x6657);           /* call 0x1014777e */
l_0x1014ddd5:
    II(0x1014ddd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014ddd8, 0x4)   test(memb_a32(ds, eax + 0x14), 0x2);  /* test byte [eax+0x14], 0x2 */
    II(0x1014dddc, 0x2)   jzd(0x1014ddf0, 0x12);                /* jz 0x1014ddf0 */
    II(0x1014ddde, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014dde3, 0x5)   mov(edx, 0x101ad8ee);                 /* mov edx, 0x101ad8ee */ /* "has_firing_sprite" */
    II(0x1014dde8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ddeb, 0x5)   calld(0x1014777e, -0x6672);           /* call 0x1014777e */
l_0x1014ddf0:
    II(0x1014ddf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014ddf3, 0x4)   test(memb_a32(ds, eax + 0x14), 0x1);  /* test byte [eax+0x14], 0x1 */
    II(0x1014ddf7, 0x2)   jzd(0x1014de0b, 0x12);                /* jz 0x1014de0b */
    II(0x1014ddf9, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014ddfe, 0x5)   mov(edx, 0x101ad900);                 /* mov edx, 0x101ad900 */ /* "hovering" */
    II(0x1014de03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014de06, 0x5)   calld(0x1014777e, -0x668d);           /* call 0x1014777e */
l_0x1014de0b:
    II(0x1014de0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014de0e, 0x4)   test(memb_a32(ds, eax + 0x13), 0x40); /* test byte [eax+0x13], 0x40 */
    II(0x1014de12, 0x2)   jzd(0x1014de26, 0x12);                /* jz 0x1014de26 */
    II(0x1014de14, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014de19, 0x5)   mov(edx, 0x101ad909);                 /* mov edx, 0x101ad909 */ /* "upgradeable" */
    II(0x1014de1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014de21, 0x5)   calld(0x1014777e, -0x66a8);           /* call 0x1014777e */
l_0x1014de26:
    II(0x1014de26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014de29, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x1014de2d, 0x2)   jzd(0x1014de41, 0x12);                /* jz 0x1014de41 */
    II(0x1014de2f, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014de34, 0x5)   mov(edx, 0x101ad915);                 /* mov edx, 0x101ad915 */ /* "stationary" */
    II(0x1014de39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014de3c, 0x5)   calld(0x1014777e, -0x66c3);           /* call 0x1014777e */
l_0x1014de41:
    II(0x1014de41, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014de44, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x1014de48, 0x2)   jzd(0x1014de5c, 0x12);                /* jz 0x1014de5c */
    II(0x1014de4a, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014de4f, 0x5)   mov(edx, 0x101ad920);                 /* mov edx, 0x101ad920 */ /* "mobile_land_unit" */
    II(0x1014de54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014de57, 0x5)   calld(0x1014777e, -0x66de);           /* call 0x1014777e */
l_0x1014de5c:
    II(0x1014de5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014de5f, 0x4)   test(memb_a32(ds, eax + 0x12), 0x80); /* test byte [eax+0x12], 0x80 */
    II(0x1014de63, 0x2)   jzd(0x1014de77, 0x12);                /* jz 0x1014de77 */
    II(0x1014de65, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014de6a, 0x5)   mov(edx, 0x101ad931);                 /* mov edx, 0x101ad931 */ /* "mobile_sea_unit" */
    II(0x1014de6f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014de72, 0x5)   calld(0x1014777e, -0x66f9);           /* call 0x1014777e */
l_0x1014de77:
    II(0x1014de77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014de7a, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x1014de7e, 0x2)   jzd(0x1014de92, 0x12);                /* jz 0x1014de92 */
    II(0x1014de80, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014de85, 0x5)   mov(edx, 0x101ad941);                 /* mov edx, 0x101ad941 */ /* "mobile_air_unit" */
    II(0x1014de8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014de8d, 0x5)   calld(0x1014777e, -0x6714);           /* call 0x1014777e */
l_0x1014de92:
    II(0x1014de92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014de95, 0x4)   test(memb_a32(ds, eax + 0x12), 0x20); /* test byte [eax+0x12], 0x20 */
    II(0x1014de99, 0x2)   jzd(0x1014dead, 0x12);                /* jz 0x1014dead */
    II(0x1014de9b, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014dea0, 0x5)   mov(edx, 0x101ad951);                 /* mov edx, 0x101ad951 */ /* "missile_unit" */
    II(0x1014dea5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dea8, 0x5)   calld(0x1014777e, -0x672f);           /* call 0x1014777e */
l_0x1014dead:
    II(0x1014dead, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014deb0, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1014deb4, 0x2)   jzd(0x1014dec8, 0x12);                /* jz 0x1014dec8 */
    II(0x1014deb6, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014debb, 0x5)   mov(edx, 0x101ad95e);                 /* mov edx, 0x101ad95e */ /* "building" */
    II(0x1014dec0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dec3, 0x5)   calld(0x1014777e, -0x674a);           /* call 0x1014777e */
l_0x1014dec8:
    II(0x1014dec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014decb, 0x4)   test(memb_a32(ds, eax + 0x12), 0x8);  /* test byte [eax+0x12], 0x8 */
    II(0x1014decf, 0x2)   jzd(0x1014dee3, 0x12);                /* jz 0x1014dee3 */
    II(0x1014ded1, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014ded6, 0x5)   mov(edx, 0x101ad967);                 /* mov edx, 0x101ad967 */ /* "connector_unit" */
    II(0x1014dedb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dede, 0x5)   calld(0x1014777e, -0x6765);           /* call 0x1014777e */
l_0x1014dee3:
    II(0x1014dee3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dee6, 0x4)   test(memb_a32(ds, eax + 0x12), 0x4);  /* test byte [eax+0x12], 0x4 */
    II(0x1014deea, 0x2)   jzd(0x1014defe, 0x12);                /* jz 0x1014defe */
    II(0x1014deec, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014def1, 0x5)   mov(edx, 0x101ad976);                 /* mov edx, 0x101ad976 */ /* "animated" */
    II(0x1014def6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014def9, 0x5)   calld(0x1014777e, -0x6780);           /* call 0x1014777e */
l_0x1014defe:
    II(0x1014defe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014df01, 0x4)   test(memb_a32(ds, eax + 0x12), 0x2);  /* test byte [eax+0x12], 0x2 */
    II(0x1014df05, 0x2)   jzd(0x1014df19, 0x12);                /* jz 0x1014df19 */
    II(0x1014df07, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014df0c, 0x5)   mov(edx, 0x101ad97f);                 /* mov edx, 0x101ad97f */ /* "exploding" */
    II(0x1014df11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014df14, 0x5)   calld(0x1014777e, -0x679b);           /* call 0x1014777e */
l_0x1014df19:
    II(0x1014df19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014df1c, 0x4)   test(memb_a32(ds, eax + 0x12), 0x1);  /* test byte [eax+0x12], 0x1 */
    II(0x1014df20, 0x2)   jzd(0x1014df34, 0x12);                /* jz 0x1014df34 */
    II(0x1014df22, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014df27, 0x5)   mov(edx, 0x101ad989);                 /* mov edx, 0x101ad989 */ /* "ground_cover" */
    II(0x1014df2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014df2f, 0x5)   calld(0x1014777e, -0x67b6);           /* call 0x1014777e */
l_0x1014df34:
    II(0x1014df34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014df37, 0x5)   calld(0x10147446, -0x6af6);           /* call 0x10147446 */
    II(0x1014df3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014df3f, 0x3)   mov(ebx, memd_a32(ds, eax + 0x14));   /* mov ebx, [eax+0x14] */
    II(0x1014df42, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014df45, 0x5)   mov(edx, 0x101ad996);                 /* mov edx, 0x101ad996 */ /* "x" */
    II(0x1014df4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014df4d, 0x5)   calld(0x101474f5, -0x6a5d);           /* call 0x101474f5 */
    II(0x1014df52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014df55, 0x3)   mov(ebx, memd_a32(ds, eax + 0x16));   /* mov ebx, [eax+0x16] */
    II(0x1014df58, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014df5b, 0x5)   mov(edx, 0x101ad998);                 /* mov edx, 0x101ad998 */ /* "y" */
    II(0x1014df60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014df63, 0x5)   calld(0x101474f5, -0x6a73);           /* call 0x101474f5 */
    II(0x1014df68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014df6b, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1014df6e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014df71, 0x3)   lea(ebx, eax + 0x1);                  /* lea ebx, [eax+0x1] */
    II(0x1014df74, 0x5)   mov(edx, 0x101ad99a);                 /* mov edx, 0x101ad99a */ /* "grid_x" */
    II(0x1014df79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014df7c, 0x5)   calld(0x101474f5, -0x6a8c);           /* call 0x101474f5 */
    II(0x1014df81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014df84, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x1014df87, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014df8a, 0x3)   lea(ebx, eax + 0x1);                  /* lea ebx, [eax+0x1] */
    II(0x1014df8d, 0x5)   mov(edx, 0x101ad9a1);                 /* mov edx, 0x101ad9a1 */ /* "grid_y" */
    II(0x1014df92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014df95, 0x5)   calld(0x101474f5, -0x6aa5);           /* call 0x101474f5 */
    II(0x1014df9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014df9d, 0x7)   cmp(memd_a32(ds, eax + 0xa7), 0);     /* cmp dword [eax+0xa7], 0x0 */
    II(0x1014dfa4, 0x2)   jnzd(0x1014dfba, 0x14);               /* jnz 0x1014dfba */
    II(0x1014dfa6, 0x5)   mov(ebx, 0x101ad9a8);                 /* mov ebx, 0x101ad9a8 */ /* "" */
    II(0x1014dfab, 0x5)   mov(edx, 0x101ad9a9);                 /* mov edx, 0x101ad9a9 */ /* "name" */
    II(0x1014dfb0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dfb3, 0x5)   calld(0x10147489, -0x6b2f);           /* call 0x10147489 */
    II(0x1014dfb8, 0x2)   jmpd(0x1014dfd0, 0x16);               /* jmp 0x1014dfd0 */
l_0x1014dfba:
    II(0x1014dfba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dfbd, 0x6)   mov(ebx, memd_a32(ds, eax + 0xa7));   /* mov ebx, [eax+0xa7] */
    II(0x1014dfc3, 0x5)   mov(edx, 0x101ad9ae);                 /* mov edx, 0x101ad9ae */ /* "name" */
    II(0x1014dfc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dfcb, 0x5)   calld(0x10147489, -0x6b47);           /* call 0x10147489 */
l_0x1014dfd0:
    II(0x1014dfd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dfd3, 0x6)   mov(ebx, memd_a32(ds, eax + 0xd7));   /* mov ebx, [eax+0xd7] */
    II(0x1014dfd9, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014dfdc, 0x5)   mov(edx, 0x101ad9b3);                 /* mov edx, 0x101ad9b3 */ /* "shadow_offset_x" */
    II(0x1014dfe1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dfe4, 0x5)   calld(0x101474f5, -0x6af4);           /* call 0x101474f5 */
    II(0x1014dfe9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014dfec, 0x6)   mov(ebx, memd_a32(ds, ebx + 0xd9));   /* mov ebx, [ebx+0xd9] */
    II(0x1014dff2, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014dff5, 0x5)   mov(edx, 0x101ad9c3);                 /* mov edx, 0x101ad9c3 */ /* "shadow_offset_y" */
    II(0x1014dffa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dffd, 0x5)   calld(0x101474f5, -0x6b0d);           /* call 0x101474f5 */
    II(0x1014e002, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014e005, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014e007, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x1014e00a, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e00d, 0x5)   mov(ebx, 0x101c715c);                 /* mov ebx, 0x101c715c */
    II(0x1014e012, 0x5)   mov(edx, 0x101ad9d3);                 /* mov edx, 0x101ad9d3 */ /* "team" */
    II(0x1014e017, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e01a, 0x5)   calld(0x101476e3, -0x693c);           /* call 0x101476e3 */
    II(0x1014e01f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e022, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e024, 0x3)   mov(bl, memb_a32(ds, eax + 0x27));    /* mov bl, [eax+0x27] */
    II(0x1014e027, 0x5)   mov(edx, 0x101ad9d8);                 /* mov edx, 0x101ad9d8 */ /* "unit_id" */
    II(0x1014e02c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e02f, 0x5)   calld(0x101474f5, -0x6b3f);           /* call 0x101474f5 */
    II(0x1014e034, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e037, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e039, 0x3)   mov(bl, memb_a32(ds, eax + 0x28));    /* mov bl, [eax+0x28] */
    II(0x1014e03c, 0x5)   mov(edx, 0x101ad9e0);                 /* mov edx, 0x101ad9e0 */ /* "brightness" */
    II(0x1014e041, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e044, 0x5)   calld(0x101474f5, -0x6b54);           /* call 0x101474f5 */
    II(0x1014e049, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e04c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e04e, 0x3)   mov(bl, memb_a32(ds, eax + 0x29));    /* mov bl, [eax+0x29] */
    II(0x1014e051, 0x5)   mov(edx, 0x101ad9eb);                 /* mov edx, 0x101ad9eb */ /* "angle" */
    II(0x1014e056, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e059, 0x5)   calld(0x101474f5, -0x6b69);           /* call 0x101474f5 */
    II(0x1014e05e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e061, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e063, 0x6)   mov(bl, memb_a32(ds, eax + 0xab));    /* mov bl, [eax+0xab] */
    II(0x1014e069, 0x5)   mov(edx, 0x101ad9f1);                 /* mov edx, 0x101ad9f1 */ /* "visible_to_red" */
    II(0x1014e06e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e071, 0x5)   calld(0x1014777e, -0x68f8);           /* call 0x1014777e */
    II(0x1014e076, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e079, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e07b, 0x6)   mov(bl, memb_a32(ds, eax + 0xac));    /* mov bl, [eax+0xac] */
    II(0x1014e081, 0x5)   mov(edx, 0x101ada00);                 /* mov edx, 0x101ada00 */ /* "visible_to_green" */
    II(0x1014e086, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e089, 0x5)   calld(0x1014777e, -0x6910);           /* call 0x1014777e */
    II(0x1014e08e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e091, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e093, 0x6)   mov(bl, memb_a32(ds, eax + 0xad));    /* mov bl, [eax+0xad] */
    II(0x1014e099, 0x5)   mov(edx, 0x101ada11);                 /* mov edx, 0x101ada11 */ /* "visible_to_blue" */
    II(0x1014e09e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e0a1, 0x5)   calld(0x1014777e, -0x6928);           /* call 0x1014777e */
    II(0x1014e0a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e0a9, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e0ab, 0x6)   mov(bl, memb_a32(ds, eax + 0xae));    /* mov bl, [eax+0xae] */
    II(0x1014e0b1, 0x5)   mov(edx, 0x101ada21);                 /* mov edx, 0x101ada21 */ /* "visible_to_gray" */
    II(0x1014e0b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e0b9, 0x5)   calld(0x1014777e, -0x6940);           /* call 0x1014777e */
    II(0x1014e0be, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e0c1, 0x6)   mov(bl, memb_a32(ds, ebx + 0xb0));    /* mov bl, [ebx+0xb0] */
    II(0x1014e0c7, 0x6)   and_(ebx, 0xff);                      /* and ebx, 0xff */
    II(0x1014e0cd, 0x5)   mov(edx, 0x101ada31);                 /* mov edx, 0x101ada31 */ /* "spotted_by_red" */
    II(0x1014e0d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e0d5, 0x5)   calld(0x1014777e, -0x695c);           /* call 0x1014777e */
    II(0x1014e0da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e0dd, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e0df, 0x6)   mov(bl, memb_a32(ds, eax + 0xb1));    /* mov bl, [eax+0xb1] */
    II(0x1014e0e5, 0x5)   mov(edx, 0x101ada40);                 /* mov edx, 0x101ada40 */ /* "spotted_by_green" */
    II(0x1014e0ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e0ed, 0x5)   calld(0x1014777e, -0x6974);           /* call 0x1014777e */
    II(0x1014e0f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e0f5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e0f7, 0x6)   mov(bl, memb_a32(ds, eax + 0xb2));    /* mov bl, [eax+0xb2] */
    II(0x1014e0fd, 0x5)   mov(edx, 0x101ada51);                 /* mov edx, 0x101ada51 */ /* "spotted_by_blue" */
    II(0x1014e102, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e105, 0x5)   calld(0x1014777e, -0x698c);           /* call 0x1014777e */
    II(0x1014e10a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e10d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e10f, 0x6)   mov(bl, memb_a32(ds, eax + 0xb3));    /* mov bl, [eax+0xb3] */
    II(0x1014e115, 0x5)   mov(edx, 0x101ada61);                 /* mov edx, 0x101ada61 */ /* "spotted_by_gray" */
    II(0x1014e11a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e11d, 0x5)   calld(0x1014777e, -0x69a4);           /* call 0x1014777e */
    II(0x1014e122, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e125, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e127, 0x3)   mov(bl, memb_a32(ds, eax + 0x2a));    /* mov bl, [eax+0x2a] */
    II(0x1014e12a, 0x5)   mov(edx, 0x101ada71);                 /* mov edx, 0x101ada71 */ /* "max_velocity" */
    II(0x1014e12f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e132, 0x5)   calld(0x101474f5, -0x6c42);           /* call 0x101474f5 */
    II(0x1014e137, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e13a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e13c, 0x3)   mov(bl, memb_a32(ds, eax + 0x2b));    /* mov bl, [eax+0x2b] */
    II(0x1014e13f, 0x5)   mov(edx, 0x101ada7e);                 /* mov edx, 0x101ada7e */ /* "velocity" */
    II(0x1014e144, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e147, 0x5)   calld(0x101474f5, -0x6c57);           /* call 0x101474f5 */
    II(0x1014e14c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014e14f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014e151, 0x3)   mov(al, memb_a32(ds, edx + 0x2c));    /* mov al, [edx+0x2c] */
    II(0x1014e154, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e157, 0x5)   mov(ebx, 0x101c71cc);                 /* mov ebx, 0x101c71cc */
    II(0x1014e15c, 0x5)   mov(edx, 0x101ada87);                 /* mov edx, 0x101ada87 */ /* "sound" */
    II(0x1014e161, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e164, 0x5)   calld(0x101476e3, -0x6a86);           /* call 0x101476e3 */
    II(0x1014e169, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e16c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e16e, 0x3)   mov(bl, memb_a32(ds, eax + 0x2d));    /* mov bl, [eax+0x2d] */
    II(0x1014e171, 0x5)   mov(edx, 0x101ada8d);                 /* mov edx, 0x101ada8d */ /* "scaler_adjust" */
    II(0x1014e176, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e179, 0x5)   calld(0x101474f5, -0x6c89);           /* call 0x101474f5 */
    II(0x1014e17e, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e181, 0x3)   mov(bl, memb_a32(ds, ebx + 0x2e));    /* mov bl, [ebx+0x2e] */
    II(0x1014e184, 0x6)   and_(ebx, 0xff);                      /* and ebx, 0xff */
    II(0x1014e18a, 0x5)   mov(edx, 0x101ada9b);                 /* mov edx, 0x101ada9b */ /* "turret_angle" */
    II(0x1014e18f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e192, 0x5)   calld(0x101474f5, -0x6ca2);           /* call 0x101474f5 */
    II(0x1014e197, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e19a, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x2c));   /* mov ebx, [ebx+0x2c] */
    II(0x1014e19d, 0x3)   sar(ebx, 0x18);                       /* sar ebx, 0x18 */
    II(0x1014e1a0, 0x5)   mov(edx, 0x101adaa8);                 /* mov edx, 0x101adaa8 */ /* "turret_offset_x" */
    II(0x1014e1a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e1a8, 0x5)   calld(0x101474f5, -0x6cb8);           /* call 0x101474f5 */
    II(0x1014e1ad, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e1b0, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x2d));   /* mov ebx, [ebx+0x2d] */
    II(0x1014e1b3, 0x3)   sar(ebx, 0x18);                       /* sar ebx, 0x18 */
    II(0x1014e1b6, 0x5)   mov(edx, 0x101adab8);                 /* mov edx, 0x101adab8 */ /* "turret_offset_y" */
    II(0x1014e1bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e1be, 0x5)   calld(0x101474f5, -0x6cce);           /* call 0x101474f5 */
    II(0x1014e1c3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e1c6, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x2f));   /* mov ebx, [ebx+0x2f] */
    II(0x1014e1c9, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e1cc, 0x5)   mov(edx, 0x101adac8);                 /* mov edx, 0x101adac8 */ /* "total_images" */
    II(0x1014e1d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e1d4, 0x5)   calld(0x101474f5, -0x6ce4);           /* call 0x101474f5 */
    II(0x1014e1d9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e1dc, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x31));   /* mov ebx, [ebx+0x31] */
    II(0x1014e1df, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e1e2, 0x5)   mov(edx, 0x101adad5);                 /* mov edx, 0x101adad5 */ /* "image_base" */
    II(0x1014e1e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e1ea, 0x5)   calld(0x101474f5, -0x6cfa);           /* call 0x101474f5 */
    II(0x1014e1ef, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e1f2, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x33));   /* mov ebx, [ebx+0x33] */
    II(0x1014e1f5, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e1f8, 0x5)   mov(edx, 0x101adae0);                 /* mov edx, 0x101adae0 */ /* "turret_image_base" */
    II(0x1014e1fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e200, 0x5)   calld(0x101474f5, -0x6d10);           /* call 0x101474f5 */
    II(0x1014e205, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e208, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x35));   /* mov ebx, [ebx+0x35] */
    II(0x1014e20b, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e20e, 0x5)   mov(edx, 0x101adaf2);                 /* mov edx, 0x101adaf2 */ /* "firing_image_base" */
    II(0x1014e213, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e216, 0x5)   calld(0x101474f5, -0x6d26);           /* call 0x101474f5 */
    II(0x1014e21b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e21e, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x37));   /* mov ebx, [ebx+0x37] */
    II(0x1014e221, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e224, 0x5)   mov(edx, 0x101adb04);                 /* mov edx, 0x101adb04 */ /* "connector_image_base" */
    II(0x1014e229, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e22c, 0x5)   calld(0x101474f5, -0x6d3c);           /* call 0x101474f5 */
    II(0x1014e231, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e234, 0x6)   mov(ebx, memd_a32(ds, ebx + 0xd3));   /* mov ebx, [ebx+0xd3] */
    II(0x1014e23a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e23d, 0x5)   mov(edx, 0x101adb19);                 /* mov edx, 0x101adb19 */ /* "image_index" */
    II(0x1014e242, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e245, 0x5)   calld(0x101474f5, -0x6d55);           /* call 0x101474f5 */
    II(0x1014e24a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e24d, 0x6)   mov(ebx, memd_a32(ds, ebx + 0xd5));   /* mov ebx, [ebx+0xd5] */
    II(0x1014e253, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e256, 0x5)   mov(edx, 0x101adb25);                 /* mov edx, 0x101adb25 */ /* "turret_image_index" */
    II(0x1014e25b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e25e, 0x5)   calld(0x101474f5, -0x6d6e);           /* call 0x101474f5 */
    II(0x1014e263, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e266, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x39));   /* mov ebx, [ebx+0x39] */
    II(0x1014e269, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e26c, 0x5)   mov(edx, 0x101adb38);                 /* mov edx, 0x101adb38 */ /* "image_index_max" */
    II(0x1014e271, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e274, 0x5)   calld(0x101474f5, -0x6d84);           /* call 0x101474f5 */
    II(0x1014e279, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e27c, 0x5)   movsx(ax, memb_a32(ds, eax + 0x3d));  /* movsx ax, byte [eax+0x3d] */
    II(0x1014e281, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e284, 0x5)   mov(ebx, 0x101c71e8);                 /* mov ebx, 0x101c71e8 */
    II(0x1014e289, 0x5)   mov(edx, 0x101adb48);                 /* mov edx, 0x101adb48 */ /* "orders" */
    II(0x1014e28e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e291, 0x5)   calld(0x101476e3, -0x6bb3);           /* call 0x101476e3 */
    II(0x1014e296, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e299, 0x5)   movsx(ax, memb_a32(ds, eax + 0x3e));  /* movsx ax, byte [eax+0x3e] */
    II(0x1014e29e, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e2a1, 0x5)   mov(ebx, 0x101c7204);                 /* mov ebx, 0x101c7204 */
    II(0x1014e2a6, 0x5)   mov(edx, 0x101adb4f);                 /* mov edx, 0x101adb4f */ /* "state" */
    II(0x1014e2ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e2ae, 0x5)   calld(0x101476e3, -0x6bd0);           /* call 0x101476e3 */
    II(0x1014e2b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e2b6, 0x5)   movsx(ax, memb_a32(ds, eax + 0x3f));  /* movsx ax, byte [eax+0x3f] */
    II(0x1014e2bb, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e2be, 0x5)   mov(ebx, 0x101c71e8);                 /* mov ebx, 0x101c71e8 */
    II(0x1014e2c3, 0x5)   mov(edx, 0x101adb55);                 /* mov edx, 0x101adb55 */ /* "prior_orders" */
    II(0x1014e2c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e2cb, 0x5)   calld(0x101476e3, -0x6bed);           /* call 0x101476e3 */
    II(0x1014e2d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e2d3, 0x5)   movsx(ax, memb_a32(ds, eax + 0x40));  /* movsx ax, byte [eax+0x40] */
    II(0x1014e2d8, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e2db, 0x5)   mov(ebx, 0x101c7204);                 /* mov ebx, 0x101c7204 */
    II(0x1014e2e0, 0x5)   mov(edx, 0x101adb62);                 /* mov edx, 0x101adb62 */ /* "prior_state" */
    II(0x1014e2e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e2e8, 0x5)   calld(0x101476e3, -0x6c0a);           /* call 0x101476e3 */
    II(0x1014e2ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e2f0, 0x8)   movsx(ax, memb_a32(ds, eax + 0xa6));  /* movsx ax, byte [eax+0xa6] */
    II(0x1014e2f8, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e2fb, 0x5)   mov(ebx, 0x101c7220);                 /* mov ebx, 0x101c7220 */
    II(0x1014e300, 0x5)   mov(edx, 0x101adb6e);                 /* mov edx, 0x101adb6e */ /* "laying_state" */
    II(0x1014e305, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e308, 0x5)   calld(0x101476e3, -0x6c2a);           /* call 0x101476e3 */
    II(0x1014e30d, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e310, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x3f));   /* mov ebx, [ebx+0x3f] */
    II(0x1014e313, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e316, 0x5)   mov(edx, 0x101adb7b);                 /* mov edx, 0x101adb7b */ /* "target_grid_x" */
    II(0x1014e31b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e31e, 0x5)   calld(0x101474f5, -0x6e2e);           /* call 0x101474f5 */
    II(0x1014e323, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e326, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x41));   /* mov ebx, [ebx+0x41] */
    II(0x1014e329, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e32c, 0x5)   mov(edx, 0x101adb89);                 /* mov edx, 0x101adb89 */ /* "target_grid_y" */
    II(0x1014e331, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e334, 0x5)   calld(0x101474f5, -0x6e44);           /* call 0x101474f5 */
    II(0x1014e339, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e33c, 0x3)   mov(bl, memb_a32(ds, ebx + 0x45));    /* mov bl, [ebx+0x45] */
    II(0x1014e33f, 0x6)   and_(ebx, 0xff);                      /* and ebx, 0xff */
    II(0x1014e345, 0x5)   mov(edx, 0x101adb97);                 /* mov edx, 0x101adb97 */ /* "build_time" */
    II(0x1014e34a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e34d, 0x5)   calld(0x101474f5, -0x6e5d);           /* call 0x101474f5 */
    II(0x1014e352, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e355, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e357, 0x3)   mov(bl, memb_a32(ds, eax + 0x46));    /* mov bl, [eax+0x46] */
    II(0x1014e35a, 0x5)   mov(edx, 0x101adba2);                 /* mov edx, 0x101adba2 */ /* "total_mining" */
    II(0x1014e35f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e362, 0x5)   calld(0x101474f5, -0x6e72);           /* call 0x101474f5 */
    II(0x1014e367, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e36a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e36c, 0x3)   mov(bl, memb_a32(ds, eax + 0x47));    /* mov bl, [eax+0x47] */
    II(0x1014e36f, 0x5)   mov(edx, 0x101adbaf);                 /* mov edx, 0x101adbaf */ /* "raw_mining" */
    II(0x1014e374, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e377, 0x5)   calld(0x101474f5, -0x6e87);           /* call 0x101474f5 */
    II(0x1014e37c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e37f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e381, 0x3)   mov(bl, memb_a32(ds, eax + 0x48));    /* mov bl, [eax+0x48] */
    II(0x1014e384, 0x5)   mov(edx, 0x101adbba);                 /* mov edx, 0x101adbba */ /* "fuel_mining" */
    II(0x1014e389, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e38c, 0x5)   calld(0x101474f5, -0x6e9c);           /* call 0x101474f5 */
    II(0x1014e391, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e394, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e396, 0x3)   mov(bl, memb_a32(ds, eax + 0x49));    /* mov bl, [eax+0x49] */
    II(0x1014e399, 0x5)   mov(edx, 0x101adbc6);                 /* mov edx, 0x101adbc6 */ /* "gold_mining" */
    II(0x1014e39e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e3a1, 0x5)   calld(0x101474f5, -0x6eb1);           /* call 0x101474f5 */
    II(0x1014e3a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e3a9, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e3ab, 0x3)   mov(bl, memb_a32(ds, eax + 0x4a));    /* mov bl, [eax+0x4a] */
    II(0x1014e3ae, 0x5)   mov(edx, 0x101adbd2);                 /* mov edx, 0x101adbd2 */ /* "raw_mining_max" */
    II(0x1014e3b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e3b6, 0x5)   calld(0x101474f5, -0x6ec6);           /* call 0x101474f5 */
    II(0x1014e3bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e3be, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e3c0, 0x3)   mov(bl, memb_a32(ds, eax + 0x4c));    /* mov bl, [eax+0x4c] */
    II(0x1014e3c3, 0x5)   mov(edx, 0x101adbe1);                 /* mov edx, 0x101adbe1 */ /* "fuel_mining_max" */
    II(0x1014e3c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e3cb, 0x5)   calld(0x101474f5, -0x6edb);           /* call 0x101474f5 */
    II(0x1014e3d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e3d3, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e3d5, 0x3)   mov(bl, memb_a32(ds, eax + 0x4b));    /* mov bl, [eax+0x4b] */
    II(0x1014e3d8, 0x5)   mov(edx, 0x101adbf1);                 /* mov edx, 0x101adbf1 */ /* "gold_mining_max" */
    II(0x1014e3dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e3e0, 0x5)   calld(0x101474f5, -0x6ef0);           /* call 0x101474f5 */
    II(0x1014e3e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e3e8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e3ea, 0x3)   mov(bl, memb_a32(ds, eax + 0x4d));    /* mov bl, [eax+0x4d] */
    II(0x1014e3ed, 0x5)   mov(edx, 0x101adc01);                 /* mov edx, 0x101adc01 */ /* "hits" */
    II(0x1014e3f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e3f5, 0x5)   calld(0x101474f5, -0x6f05);           /* call 0x101474f5 */
    II(0x1014e3fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e3fd, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e3ff, 0x3)   mov(bl, memb_a32(ds, eax + 0x4e));    /* mov bl, [eax+0x4e] */
    II(0x1014e402, 0x5)   mov(edx, 0x101adc06);                 /* mov edx, 0x101adc06 */ /* "speed" */
    II(0x1014e407, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e40a, 0x5)   calld(0x101474f5, -0x6f1a);           /* call 0x101474f5 */
    II(0x1014e40f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e412, 0x3)   mov(bl, memb_a32(ds, ebx + 0x50));    /* mov bl, [ebx+0x50] */
    II(0x1014e415, 0x6)   and_(ebx, 0xff);                      /* and ebx, 0xff */
    II(0x1014e41b, 0x5)   mov(edx, 0x101adc0c);                 /* mov edx, 0x101adc0c */ /* "shots" */
    II(0x1014e420, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e423, 0x5)   calld(0x101474f5, -0x6f33);           /* call 0x101474f5 */
    II(0x1014e428, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e42b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e42d, 0x3)   mov(bl, memb_a32(ds, eax + 0x51));    /* mov bl, [eax+0x51] */
    II(0x1014e430, 0x5)   mov(edx, 0x101adc12);                 /* mov edx, 0x101adc12 */ /* "move_and_fire" */
    II(0x1014e435, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e438, 0x5)   calld(0x1014777e, -0x6cbf);           /* call 0x1014777e */
    II(0x1014e43d, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e440, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x50));   /* mov ebx, [ebx+0x50] */
    II(0x1014e443, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e446, 0x5)   mov(edx, 0x101adc20);                 /* mov edx, 0x101adc20 */ /* "storage" */
    II(0x1014e44b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e44e, 0x5)   calld(0x101474f5, -0x6f5e);           /* call 0x101474f5 */
    II(0x1014e453, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e456, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e458, 0x3)   mov(bl, memb_a32(ds, eax + 0x54));    /* mov bl, [eax+0x54] */
    II(0x1014e45b, 0x5)   mov(edx, 0x101adc28);                 /* mov edx, 0x101adc28 */ /* "ammo" */
    II(0x1014e460, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e463, 0x5)   calld(0x101474f5, -0x6f73);           /* call 0x101474f5 */
    II(0x1014e468, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e46b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e46d, 0x3)   mov(bl, memb_a32(ds, eax + 0x55));    /* mov bl, [eax+0x55] */
    II(0x1014e470, 0x5)   mov(edx, 0x101adc2d);                 /* mov edx, 0x101adc2d */ /* "targeting_mode" */
    II(0x1014e475, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e478, 0x5)   calld(0x1014777e, -0x6cff);           /* call 0x1014777e */
    II(0x1014e47d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e480, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e482, 0x3)   mov(bl, memb_a32(ds, eax + 0x56));    /* mov bl, [eax+0x56] */
    II(0x1014e485, 0x5)   mov(edx, 0x101adc3c);                 /* mov edx, 0x101adc3c */ /* "enter_mode" */
    II(0x1014e48a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e48d, 0x5)   calld(0x1014777e, -0x6d14);           /* call 0x1014777e */
    II(0x1014e492, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e495, 0x5)   movsx(ax, memb_a32(ds, eax + 0x57));  /* movsx ax, byte [eax+0x57] */
    II(0x1014e49a, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e49d, 0x5)   mov(ebx, 0x101c723c);                 /* mov ebx, 0x101c723c */
    II(0x1014e4a2, 0x5)   mov(edx, 0x101adc47);                 /* mov edx, 0x101adc47 */ /* "cursor" */
    II(0x1014e4a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e4aa, 0x5)   calld(0x101476e3, -0x6dcc);           /* call 0x101476e3 */
    II(0x1014e4af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e4b2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e4b4, 0x3)   mov(bl, memb_a32(ds, eax + 0x58));    /* mov bl, [eax+0x58] */
    II(0x1014e4b7, 0x5)   mov(edx, 0x101adc4e);                 /* mov edx, 0x101adc4e */ /* "recoil_delay" */
    II(0x1014e4bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e4bf, 0x5)   calld(0x101474f5, -0x6fcf);           /* call 0x101474f5 */
    II(0x1014e4c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e4c7, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e4c9, 0x3)   mov(bl, memb_a32(ds, eax + 0x59));    /* mov bl, [eax+0x59] */
    II(0x1014e4cc, 0x5)   mov(edx, 0x101adc5b);                 /* mov edx, 0x101adc5b */ /* "delayed_reaction" */
    II(0x1014e4d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e4d4, 0x5)   calld(0x1014777e, -0x6d5b);           /* call 0x1014777e */
    II(0x1014e4d9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e4dc, 0x3)   mov(bl, memb_a32(ds, ebx + 0x5a));    /* mov bl, [ebx+0x5a] */
    II(0x1014e4df, 0x6)   and_(ebx, 0xff);                      /* and ebx, 0xff */
    II(0x1014e4e5, 0x5)   mov(edx, 0x101adc6c);                 /* mov edx, 0x101adc6c */ /* "damaged_this_turn" */
    II(0x1014e4ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e4ed, 0x5)   calld(0x1014777e, -0x6d74);           /* call 0x1014777e */
    II(0x1014e4f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e4f5, 0x5)   movsx(ax, memb_a32(ds, eax + 0x5d));  /* movsx ax, byte [eax+0x5d] */
    II(0x1014e4fa, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e4fd, 0x5)   mov(ebx, 0x101c7194);                 /* mov ebx, 0x101c7194 */
    II(0x1014e502, 0x5)   mov(edx, 0x101adc7e);                 /* mov edx, 0x101adc7e */ /* "research_topic" */
    II(0x1014e507, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e50a, 0x5)   calld(0x101476e3, -0x6e2c);           /* call 0x101476e3 */
    II(0x1014e50f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e512, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e514, 0x3)   mov(bl, memb_a32(ds, eax + 0x5e));    /* mov bl, [eax+0x5e] */
    II(0x1014e517, 0x5)   mov(edx, 0x101adc8d);                 /* mov edx, 0x101adc8d */ /* "moved" */
    II(0x1014e51c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e51f, 0x5)   calld(0x1014777e, -0x6da6);           /* call 0x1014777e */
    II(0x1014e524, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e527, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e529, 0x3)   mov(bl, memb_a32(ds, eax + 0x5f));    /* mov bl, [eax+0x5f] */
    II(0x1014e52c, 0x5)   mov(edx, 0x101adc93);                 /* mov edx, 0x101adc93 */ /* "bobbed" */
    II(0x1014e531, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e534, 0x5)   calld(0x1014777e, -0x6dbb);           /* call 0x1014777e */
    II(0x1014e539, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014e53c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014e53e, 0x3)   mov(al, memb_a32(ds, edx + 0x60));    /* mov al, [edx+0x60] */
    II(0x1014e541, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e544, 0x5)   mov(ebx, 0x101c7258);                 /* mov ebx, 0x101c7258 */
    II(0x1014e549, 0x5)   mov(edx, 0x101adc9a);                 /* mov edx, 0x101adc9a */ /* "engine" */
    II(0x1014e54e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e551, 0x5)   calld(0x101476e3, -0x6e73);           /* call 0x101476e3 */
    II(0x1014e556, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014e559, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014e55b, 0x3)   mov(al, memb_a32(ds, edx + 0x61));    /* mov al, [edx+0x61] */
    II(0x1014e55e, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e561, 0x5)   mov(ebx, 0x101c7258);                 /* mov ebx, 0x101c7258 */
    II(0x1014e566, 0x5)   mov(edx, 0x101adca1);                 /* mov edx, 0x101adca1 */ /* "weapon" */
    II(0x1014e56b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e56e, 0x5)   calld(0x101476e3, -0x6e90);           /* call 0x101476e3 */
    II(0x1014e573, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014e576, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014e578, 0x3)   mov(al, memb_a32(ds, edx + 0x62));    /* mov al, [edx+0x62] */
    II(0x1014e57b, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014e57e, 0x5)   mov(ebx, 0x101c7258);                 /* mov ebx, 0x101c7258 */
    II(0x1014e583, 0x5)   mov(edx, 0x101adca8);                 /* mov edx, 0x101adca8 */ /* "comm" */
    II(0x1014e588, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e58b, 0x5)   calld(0x101476e3, -0x6ead);           /* call 0x101476e3 */
    II(0x1014e590, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e593, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e595, 0x3)   mov(bl, memb_a32(ds, eax + 0x63));    /* mov bl, [eax+0x63] */
    II(0x1014e598, 0x5)   mov(edx, 0x101adcad);                 /* mov edx, 0x101adcad */ /* "fuel_distance" */
    II(0x1014e59d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e5a0, 0x5)   calld(0x101474f5, -0x70b0);           /* call 0x101474f5 */
    II(0x1014e5a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e5a8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e5aa, 0x3)   mov(bl, memb_a32(ds, eax + 0x64));    /* mov bl, [eax+0x64] */
    II(0x1014e5ad, 0x5)   mov(edx, 0x101adcbb);                 /* mov edx, 0x101adcbb */ /* "move_fraction" */
    II(0x1014e5b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e5b5, 0x5)   calld(0x101474f5, -0x70c5);           /* call 0x101474f5 */
    II(0x1014e5ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e5bd, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e5bf, 0x3)   mov(bl, memb_a32(ds, eax + 0x7b));    /* mov bl, [eax+0x7b] */
    II(0x1014e5c2, 0x5)   mov(edx, 0x101adcc9);                 /* mov edx, 0x101adcc9 */ /* "energized" */
    II(0x1014e5c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e5ca, 0x5)   calld(0x1014777e, -0x6e51);           /* call 0x1014777e */
    II(0x1014e5cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e5d2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014e5d4, 0x3)   mov(bl, memb_a32(ds, eax + 0x7a));    /* mov bl, [eax+0x7a] */
    II(0x1014e5d7, 0x5)   mov(edx, 0x101adcd3);                 /* mov edx, 0x101adcd3 */ /* "repeat_build" */
    II(0x1014e5dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e5df, 0x5)   calld(0x1014777e, -0x6e66);           /* call 0x1014777e */
    II(0x1014e5e4, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014e5e7, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x76));   /* mov ebx, [ebx+0x76] */
    II(0x1014e5ea, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014e5ed, 0x5)   mov(edx, 0x101adce0);                 /* mov edx, 0x101adce0 */ /* "build_rate" */
    II(0x1014e5f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e5f5, 0x5)   calld(0x101474f5, -0x7105);           /* call 0x101474f5 */
    II(0x1014e5fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e5fd, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1014e600, 0x5)   calld(0x101553e0, 0x6ddb);            /* call 0x101553e0 */
    II(0x1014e605, 0x5)   mov(edx, 0x101adceb);                 /* mov edx, 0x101adceb */ /* "path" */
    II(0x1014e60a, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x1014e60d, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1014e60f, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1014e611, 0x5)   calld(0x1014756a, -0x70ac);           /* call 0x1014756a */
    II(0x1014e616, 0x5)   mov(edx, 0x101adcf0);                 /* mov edx, 0x101adcf0 */ /* "connectors" */
    II(0x1014e61b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e61e, 0x5)   calld(0x101473de, -0x7245);           /* call 0x101473de */
    II(0x1014e623, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e626, 0x4)   test(memb_a32(ds, eax + 0x69), 0x1);  /* test byte [eax+0x69], 0x1 */
    II(0x1014e62a, 0x2)   jzd(0x1014e63e, 0x12);                /* jz 0x1014e63e */
    II(0x1014e62c, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014e631, 0x5)   mov(edx, 0x101adcfb);                 /* mov edx, 0x101adcfb */ /* "connect_north_left" */
    II(0x1014e636, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e639, 0x5)   calld(0x1014777e, -0x6ec0);           /* call 0x1014777e */
l_0x1014e63e:
    II(0x1014e63e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e641, 0x4)   test(memb_a32(ds, eax + 0x69), 0x2);  /* test byte [eax+0x69], 0x2 */
    II(0x1014e645, 0x2)   jzd(0x1014e659, 0x12);                /* jz 0x1014e659 */
    II(0x1014e647, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014e64c, 0x5)   mov(edx, 0x101add0e);                 /* mov edx, 0x101add0e */ /* "connect_north_right" */
    II(0x1014e651, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e654, 0x5)   calld(0x1014777e, -0x6edb);           /* call 0x1014777e */
l_0x1014e659:
    II(0x1014e659, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e65c, 0x4)   test(memb_a32(ds, eax + 0x69), 0x4);  /* test byte [eax+0x69], 0x4 */
    II(0x1014e660, 0x2)   jzd(0x1014e674, 0x12);                /* jz 0x1014e674 */
    II(0x1014e662, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014e667, 0x5)   mov(edx, 0x101add22);                 /* mov edx, 0x101add22 */ /* "connect_east_top" */
    II(0x1014e66c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e66f, 0x5)   calld(0x1014777e, -0x6ef6);           /* call 0x1014777e */
l_0x1014e674:
    II(0x1014e674, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e677, 0x4)   test(memb_a32(ds, eax + 0x69), 0x8);  /* test byte [eax+0x69], 0x8 */
    II(0x1014e67b, 0x2)   jzd(0x1014e68f, 0x12);                /* jz 0x1014e68f */
    II(0x1014e67d, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014e682, 0x5)   mov(edx, 0x101add33);                 /* mov edx, 0x101add33 */ /* "connect_east_bottom" */
    II(0x1014e687, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e68a, 0x5)   calld(0x1014777e, -0x6f11);           /* call 0x1014777e */
l_0x1014e68f:
    II(0x1014e68f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e692, 0x4)   test(memb_a32(ds, eax + 0x69), 0x10); /* test byte [eax+0x69], 0x10 */
    II(0x1014e696, 0x2)   jzd(0x1014e6aa, 0x12);                /* jz 0x1014e6aa */
    II(0x1014e698, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014e69d, 0x5)   mov(edx, 0x101add47);                 /* mov edx, 0x101add47 */ /* "connect_south_left" */
    II(0x1014e6a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e6a5, 0x5)   calld(0x1014777e, -0x6f2c);           /* call 0x1014777e */
l_0x1014e6aa:
    II(0x1014e6aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e6ad, 0x4)   test(memb_a32(ds, eax + 0x69), 0x20); /* test byte [eax+0x69], 0x20 */
    II(0x1014e6b1, 0x2)   jzd(0x1014e6c5, 0x12);                /* jz 0x1014e6c5 */
    II(0x1014e6b3, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014e6b8, 0x5)   mov(edx, 0x101add5a);                 /* mov edx, 0x101add5a */ /* "connect_south_right" */
    II(0x1014e6bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e6c0, 0x5)   calld(0x1014777e, -0x6f47);           /* call 0x1014777e */
l_0x1014e6c5:
    II(0x1014e6c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e6c8, 0x4)   test(memb_a32(ds, eax + 0x69), 0x40); /* test byte [eax+0x69], 0x40 */
    II(0x1014e6cc, 0x2)   jzd(0x1014e6e0, 0x12);                /* jz 0x1014e6e0 */
    II(0x1014e6ce, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014e6d3, 0x5)   mov(edx, 0x101add6e);                 /* mov edx, 0x101add6e */ /* "connect_west_top" */
    II(0x1014e6d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e6db, 0x5)   calld(0x1014777e, -0x6f62);           /* call 0x1014777e */
l_0x1014e6e0:
    II(0x1014e6e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e6e3, 0x4)   test(memb_a32(ds, eax + 0x69), 0x80); /* test byte [eax+0x69], 0x80 */
    II(0x1014e6e7, 0x2)   jzd(0x1014e6fb, 0x12);                /* jz 0x1014e6fb */
    II(0x1014e6e9, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014e6ee, 0x5)   mov(edx, 0x101add7f);                 /* mov edx, 0x101add7f */ /* "connect_west_bottom" */
    II(0x1014e6f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e6f6, 0x5)   calld(0x1014777e, -0x6f7d);           /* call 0x1014777e */
l_0x1014e6fb:
    II(0x1014e6fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e6fe, 0x4)   test(memb_a32(ds, eax + 0x6a), 0x4);  /* test byte [eax+0x6a], 0x4 */
    II(0x1014e702, 0x2)   jzd(0x1014e716, 0x12);                /* jz 0x1014e716 */
    II(0x1014e704, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1014e709, 0x5)   mov(edx, 0x101add93);                 /* mov edx, 0x101add93 */ /* "connection_being_tested" */
    II(0x1014e70e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e711, 0x5)   calld(0x1014777e, -0x6f98);           /* call 0x1014777e */
l_0x1014e716:
    II(0x1014e716, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e719, 0x5)   calld(0x10147446, -0x72d8);           /* call 0x10147446 */
    II(0x1014e71e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e721, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014e724, 0x5)   calld(0x100cb74c, -0x82fdd);          /* call 0x100cb74c */
    II(0x1014e729, 0x5)   mov(edx, 0x101addab);                 /* mov edx, 0x101addab */ /* "base_values" */
    II(0x1014e72e, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x1014e731, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1014e733, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1014e735, 0x5)   calld(0x1014756a, -0x71d0);           /* call 0x1014756a */
    II(0x1014e73a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e73d, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014e740, 0x5)   calld(0x10155314, 0x6bcf);            /* call 0x10155314 */
    II(0x1014e745, 0x5)   mov(edx, 0x101addb7);                 /* mov edx, 0x101addb7 */ /* "complex" */
    II(0x1014e74a, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x1014e74d, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1014e74f, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1014e751, 0x5)   calld(0x1014756a, -0x71ec);           /* call 0x1014756a */
    II(0x1014e756, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e759, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x1014e75e, 0x5)   calld(0x100765d0, -0xd8193);          /* call 0x100765d0 */
    II(0x1014e763, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1014e765, 0x5)   mov(edx, 0x101addbf);                 /* mov edx, 0x101addbf */ /* "parent_unit" */
    II(0x1014e76a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014e76d, 0x5)   calld(0x1014756a, -0x7208);           /* call 0x1014756a */
    II(0x1014e772, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1014e775, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014e778, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x1014e77b, 0x5)   calld(0x100cfddd, -0x7e9a3);          /* call 0x100cfddd */
    II(0x1014e780, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014e782, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014e783, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014e784, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014e785, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014e786, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1014e787, 0x1)   retd();                               /* ret */
FUNC_END

