FUNC_BEGIN(0x10130262, 0xaa2e826e21b97bf, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xe6, 0x5a, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xb1, 0x60, 0xf4, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf8, 0xe8, 0x27, 0x62, 0xf4, 0xff, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x16, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xa9, 0x5c, 0xf4, 0xff, 0xe9, 0x72, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0x26, 0x69, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x95, 0xaa, 0, 0, 0x84, 0xc0, 0x74, 0x3e, 0x8d, 0x45, 0xf8, 0xe8, 0xb8, 0x60, 0xf4, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xf8, 0xe8, 0xa3, 0x60, 0xf4, 0xff, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf8, 0xe8, 0x92, 0x60, 0xf4, 0xff, 0x80, 0x78, 0x3d, 0x7, 0x74, 0x2, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xeb, 0xac, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xf0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x3e, 0x5c, 0xf4, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x32, 0x5c, 0xf4, 0xff, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10130262, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10130267, 0x5)   calld(sys_check_available_stack_size, 0x35ae6); /* call 0x10165d52 */
    II(0x1013026c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013026d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013026e, 0x1)   pushd(edx);                           /* push edx */
    II(0x1013026f, 0x1)   pushd(esi);                           /* push esi */
    II(0x10130270, 0x1)   pushd(edi);                           /* push edi */
    II(0x10130271, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10130272, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10130274, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1013027a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1013027d, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10130282, 0x5)   calld(0x10076338, -0xb9f4f);          /* call 0x10076338 */
    II(0x10130287, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10130289, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1013028c, 0x5)   calld(0x100764b8, -0xb9dd9);          /* call 0x100764b8 */
    II(0x10130291, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10130298, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013029c, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101302a2, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x101302a8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101302ad, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x101302b0, 0x2)   jnzd(0x101302c8, 0x16);               /* jnz 0x101302c8 */
    II(0x101302b2, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x101302b9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101302bb, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x101302be, 0x5)   calld(0x10075f6c, -0xba357);          /* call 0x10075f6c */
    II(0x101302c3, 0x5)   jmpd(0x1013033a, 0x72);               /* jmp 0x1013033a */
l_0x101302c8:
    II(0x101302c8, 0x2)   jmpd(0x101302d2, 0x8);                /* jmp 0x101302d2 */
l_0x101302ca:
    II(0x101302ca, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x101302cd, 0x5)   calld(0x10076bf8, -0xb96da);          /* call 0x10076bf8 */
l_0x101302d2:
    II(0x101302d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101302d4, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x101302d7, 0x5)   calld(0x1013ad71, 0xaa95);            /* call 0x1013ad71 */
    II(0x101302dc, 0x2)   test(al, al);                         /* test al, al */
    II(0x101302de, 0x2)   jzd(0x1013031e, 0x3e);                /* jz 0x1013031e */
    II(0x101302e0, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x101302e3, 0x5)   calld(0x100763a0, -0xb9f48);          /* call 0x100763a0 */
    II(0x101302e8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101302ea, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x101302ed, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101302f1, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x101302f3, 0x2)   jnzd(0x10130304, 0xf);                /* jnz 0x10130304 */
    II(0x101302f5, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x101302f8, 0x5)   calld(0x100763a0, -0xb9f5d);          /* call 0x100763a0 */
    II(0x101302fd, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x10130302, 0x2)   jzd(0x10130306, 0x2);                 /* jz 0x10130306 */
l_0x10130304:
    II(0x10130304, 0x2)   jmpd(0x10130314, 0xe);                /* jmp 0x10130314 */
l_0x10130306:
    II(0x10130306, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10130309, 0x5)   calld(0x100763a0, -0xb9f6e);          /* call 0x100763a0 */
    II(0x1013030e, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x10130312, 0x2)   jzd(0x10130316, 0x2);                 /* jz 0x10130316 */
l_0x10130314:
    II(0x10130314, 0x2)   jmpd(0x1013031c, 0x6);                /* jmp 0x1013031c */
l_0x10130316:
    II(0x10130316, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10130319, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1013031c:
    II(0x1013031c, 0x2)   jmpd(0x101302ca, -0x54);              /* jmp 0x101302ca */
l_0x1013031e:
    II(0x1013031e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10130321, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10130324, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10130326, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10130329, 0x5)   calld(0x10075f6c, -0xba3c2);          /* call 0x10075f6c */
    II(0x1013032e, 0x2)   jmpd(0x1013033a, 0xa);                /* jmp 0x1013033a */
//  II(0x10130330, 0xa)   /* Недостижимый код. */
l_0x1013033a:
    II(0x1013033a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013033d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013033f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10130340, 0x1)   popd(edi);                            /* pop edi */
    II(0x10130341, 0x1)   popd(esi);                            /* pop esi */
    II(0x10130342, 0x1)   popd(edx);                            /* pop edx */
    II(0x10130343, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10130344, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10130345, 0x1)   retd();                               /* ret */
FUNC_END

