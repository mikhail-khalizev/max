FUNC_BEGIN(0x100f8b93, 0xec0e9b35ad0f2fa9, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xb5, 0xd1, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xd2, 0xb8, 0xc0, 0x37, 0x1c, 0x10, 0xe8, 0xb7, 0x21, 0x4, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x52, 0x10, 0, 0, 0xbb, 0x7c, 0x26, 0x1a, 0x10, 0xba, 0x88, 0x26, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xb5, 0xd1, 0x6, 0, 0x89, 0x45, 0xf8, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0xe1, 0x3, 0, 0, 0xba, 0xde, 0x3, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xf1, 0x4e, 0x4, 0, 0xb8, 0xc0, 0x37, 0x1c, 0x10, 0xe8, 0x71, 0xd9, 0xf7, 0xff, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x41, 0xb8, 0xc0, 0x37, 0x1c, 0x10, 0xe8, 0x5c, 0xd9, 0xf7, 0xff, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x43, 0xb8, 0xc0, 0x37, 0x1c, 0x10, 0xe8, 0xd3, 0xd9, 0xf7, 0xff, 0xe8, 0x9a, 0x66, 0x6, 0, 0x31, 0xd2, 0xb8, 0xc0, 0x37, 0x1c, 0x10, 0xe8, 0xf2, 0xd9, 0xf7, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0xe9, 0xdd, 0xf7, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x31, 0x22, 0x3, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x3d, 0x75, 0x22, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x41, 0x75, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x43, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0xa4, 0, 0, 0, 0xb8, 0x1c, 0, 0, 0, 0xe8, 0x69, 0xd1, 0x6, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xf0, 0x83, 0x7d, 0xf0, 0, 0x74, 0x25, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x41, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x3f, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0xe8, 0x96, 0x12, 0x2, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0x8b, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0x55, 0xdd, 0xf7, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0xee, 0xdc, 0xf7, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x48, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x43, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1c, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x41, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1a, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xe4, 0xff, 0x51, 0x44, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x61, 0x21, 0x3, 0, 0xe8, 0x90, 0x68, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x3f, 0xa6, 0x6, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x77, 0x8c, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f8b93, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100f8b98, 0x5)   calld(sys_check_available_stack_size, 0x6d1b5); /* call 0x10165d52 */
    II(0x100f8b9d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f8b9e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f8b9f, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f8ba0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f8ba1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f8ba2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f8ba3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f8ba5, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100f8bab, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f8bae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f8bb0, 0x5)   mov(eax, 0x101c37c0);                 /* mov eax, 0x101c37c0 */
    II(0x100f8bb5, 0x5)   calld(0x1013ad71, 0x421b7);           /* call 0x1013ad71 */
    II(0x100f8bba, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f8bbc, 0x2)   jzd(0x100f8bc7, 0x9);                 /* jz 0x100f8bc7 */
    II(0x100f8bbe, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100f8bc5, 0x2)   jmpd(0x100f8be0, 0x19);               /* jmp 0x100f8be0 */
l_0x100f8bc7:
    II(0x100f8bc7, 0x5)   mov(ecx, 0x1052);                     /* mov ecx, 0x1052 */
    II(0x100f8bcc, 0x5)   mov(ebx, 0x101a267c);                 /* mov ebx, 0x101a267c */ /* "gamemgr.cpp" */
    II(0x100f8bd1, 0x5)   mov(edx, 0x101a2688);                 /* mov edx, 0x101a2688 */ /* "temp_tape != 0" */
    II(0x100f8bd6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f8bd8, 0x5)   calld(sys_assert, 0x6d1b5);           /* call 0x10165d92 */
    II(0x100f8bdd, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
l_0x100f8be0:
    II(0x100f8be0, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x100f8be5, 0x5)   mov(ebx, 0x3e1);                      /* mov ebx, 0x3e1 */
    II(0x100f8bea, 0x5)   mov(edx, 0x3de);                      /* mov edx, 0x3de */
    II(0x100f8bef, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f8bf4, 0x5)   calld(0x1013daea, 0x44ef1);           /* call 0x1013daea */
    II(0x100f8bf9, 0x5)   mov(eax, 0x101c37c0);                 /* mov eax, 0x101c37c0 */
    II(0x100f8bfe, 0x5)   calld(0x10076574, -0x8268f);          /* call 0x10076574 */
    II(0x100f8c03, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
    II(0x100f8c07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8c0a, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x100f8c0e, 0x5)   mov(eax, 0x101c37c0);                 /* mov eax, 0x101c37c0 */
    II(0x100f8c13, 0x5)   calld(0x10076574, -0x826a4);          /* call 0x10076574 */
    II(0x100f8c18, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x100f8c1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8c1f, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x100f8c23, 0x5)   mov(eax, 0x101c37c0);                 /* mov eax, 0x101c37c0 */
    II(0x100f8c28, 0x5)   calld(0x10076600, -0x8262d);          /* call 0x10076600 */
    II(0x100f8c2d, 0x5)   calld(0x1015f2cc, 0x6669a);           /* call 0x1015f2cc */
    II(0x100f8c32, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f8c34, 0x5)   mov(eax, 0x101c37c0);                 /* mov eax, 0x101c37c0 */
    II(0x100f8c39, 0x5)   calld(0x10076630, -0x8260e);          /* call 0x10076630 */
    II(0x100f8c3e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f8c40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8c43, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100f8c46, 0x5)   calld(0x10076a34, -0x82217);          /* call 0x10076a34 */
    II(0x100f8c4b, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100f8c52, 0x2)   jzd(0x100f8c5c, 0x8);                 /* jz 0x100f8c5c */
    II(0x100f8c54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8c57, 0x5)   calld(0x1012ae8d, 0x32231);           /* call 0x1012ae8d */
l_0x100f8c5c:
    II(0x100f8c5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8c5f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3d);   /* cmp word [eax+0x8], 0x3d */
    II(0x100f8c64, 0x2)   jnzd(0x100f8c88, 0x22);               /* jnz 0x100f8c88 */
    II(0x100f8c66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8c69, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
//    II(0x100f8c6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8c70, 0x4)   cmp(dx, memw_a32(ds, eax + 0x41));    /* cmp dx, [eax+0x41] */
    II(0x100f8c74, 0x2)   jnzd(0x100f8c86, 0x10);               /* jnz 0x100f8c86 */
    II(0x100f8c76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8c79, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
//    II(0x100f8c7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8c80, 0x4)   cmp(dx, memw_a32(ds, eax + 0x43));    /* cmp dx, [eax+0x43] */
    II(0x100f8c84, 0x2)   jzd(0x100f8c88, 0x2);                 /* jz 0x100f8c88 */
l_0x100f8c86:
    II(0x100f8c86, 0x2)   jmpd(0x100f8c8d, 0x5);                /* jmp 0x100f8c8d */
l_0x100f8c88:
    II(0x100f8c88, 0x5)   jmpd(0x100f8d31, 0xa4);               /* jmp 0x100f8d31 */
l_0x100f8c8d:
    II(0x100f8c8d, 0x5)   mov(eax, 0x1c);                       /* mov eax, 0x1c */
    II(0x100f8c92, 0x5)   calld(sys_new, 0x6d169);              /* call 0x10165e00 */
    II(0x100f8c97, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100f8c9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f8c9d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100f8ca0, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x100f8ca4, 0x2)   jzd(0x100f8ccb, 0x25);                /* jz 0x100f8ccb */
    II(0x100f8ca6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8ca9, 0x3)   mov(ebx, memd_a32(ds, eax + 0x41));   /* mov ebx, [eax+0x41] */
    II(0x100f8cac, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100f8caf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8cb2, 0x3)   mov(edx, memd_a32(ds, eax + 0x3f));   /* mov edx, [eax+0x3f] */
    II(0x100f8cb5, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f8cb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f8cbb, 0x5)   calld(my_ctor_c20, 0x21296);          /* call 0x10119f56 */
    II(0x100f8cc0, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100f8cc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f8cc6, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100f8cc9, 0x2)   jmpd(0x100f8cd1, 0x6);                /* jmp 0x100f8cd1 */
l_0x100f8ccb:
    II(0x100f8ccb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f8cce, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x100f8cd1:
    II(0x100f8cd1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x100f8cd4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8cd7, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100f8cda, 0x5)   calld(0x10076a34, -0x822ab);          /* call 0x10076a34 */
    II(0x100f8cdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8ce2, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100f8ce5, 0x5)   calld(0x100769d8, -0x82312);          /* call 0x100769d8 */
    II(0x100f8cea, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100f8ced, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100f8cf0, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x100f8cf3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8cf6, 0x4)   mov(ax, memw_a32(ds, eax + 0x43));    /* mov ax, [eax+0x43] */
    II(0x100f8cfa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f8cfd, 0x4)   sub(ax, memw_a32(ds, edx + 0x1c));    /* sub ax, [edx+0x1c] */
    II(0x100f8d01, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100f8d04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8d07, 0x4)   mov(ax, memw_a32(ds, eax + 0x41));    /* mov ax, [eax+0x41] */
    II(0x100f8d0b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f8d0e, 0x4)   sub(ax, memw_a32(ds, edx + 0x1a));    /* sub ax, [edx+0x1a] */
    II(0x100f8d12, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f8d15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100f8d18, 0x3)   calld_abs(memd_a32(ds, ecx + 0x44));  /* call dword near [ecx+0x44] */
    II(0x100f8d1b, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100f8d22, 0x2)   jzd(0x100f8d2c, 0x8);                 /* jz 0x100f8d2c */
    II(0x100f8d24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8d27, 0x5)   calld(0x1012ae8d, 0x32161);           /* call 0x1012ae8d */
l_0x100f8d2c:
    II(0x100f8d2c, 0x5)   calld(0x100ff5c1, 0x6890);            /* call 0x100ff5c1 */
l_0x100f8d31:
    II(0x100f8d31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8d34, 0x5)   calld(0x10163378, 0x6a63f);           /* call 0x10163378 */
    II(0x100f8d39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8d3c, 0x5)   calld(0x101019b8, 0x8c77);            /* call 0x101019b8 */
    II(0x100f8d41, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f8d43, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f8d44, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f8d45, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f8d46, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f8d47, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f8d48, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f8d49, 0x1)   retd();                               /* ret */
FUNC_END

