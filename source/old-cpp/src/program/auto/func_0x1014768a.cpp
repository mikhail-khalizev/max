FUNC_BEGIN(0x1014768a, 0x8b56904f53540e69, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xbe, 0xe6, 0x1, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x2a, 0xfd, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xe8, 0xf, 0x4b, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xff, 0x53, 0x14, 0x8b, 0x45, 0xf4, 0xe8, 0x6a, 0xfd, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1014768a, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x1014768f, 0x5)   calld(sys_check_available_stack_size, 0x1e6be); /* call 0x10165d52 */
    II(0x10147694, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10147695, 0x1)   pushd(esi);                           /* push esi */
    II(0x10147696, 0x1)   pushd(edi);                           /* push edi */
    II(0x10147697, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10147698, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014769a, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x101476a0, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101476a3, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x101476a6, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x101476a9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
//    II(0x101476ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101476af, 0x5)   calld(0x101473de, -0x2d6);            /* call 0x101473de */
    II(0x101476b4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101476b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101476ba, 0x5)   calld(0x1013c1ce, -0xb4f1);           /* call 0x1013c1ce */
    II(0x101476bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101476c2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x101476c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101476c8, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x101476cb, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
//    II(0x101476ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101476d1, 0x3)   calld_abs(memd_a32(ds, ebx + 0x14));  /* call dword near [ebx+0x14] */
    II(0x101476d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101476d7, 0x5)   calld(0x10147446, -0x296);            /* call 0x10147446 */
    II(0x101476dc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101476de, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101476df, 0x1)   popd(edi);                            /* pop edi */
    II(0x101476e0, 0x1)   popd(esi);                            /* pop esi */
    II(0x101476e1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101476e2, 0x1)   retd();                               /* ret */
FUNC_END

