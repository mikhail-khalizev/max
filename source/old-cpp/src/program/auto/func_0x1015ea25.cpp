FUNC_BEGIN(0x1015ea25, 0xd9ab44b24450b3ef, 0x20, ({0x68, 0xcc, 0x1, 0, 0, 0xe8, 0x23, 0x73, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xa0, 0x1, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x92, 0x57, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xdf, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xc4, 0x76, 0xf1, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x48, 0x7c, 0xf1, 0xff, 0x8d, 0x45, 0xf8, 0xe8, 0x8, 0x7b, 0xf1, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xd0, 0x33, 0xb8, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0x1, 0xbf, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xd, 0x3c, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x24, 0x8b, 0x45, 0xfc, 0xe8, 0x1, 0x3c, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x48, 0x2, 0x8d, 0x45, 0xf8, 0xe8, 0x14, 0x7b, 0xf1, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xff, 0x51, 0x68, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc4, 0x82, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0x4d, 0x8d, 0x45, 0xf8, 0xe8, 0x94, 0x7a, 0xf1, 0xff, 0x8a, 0x40, 0x27, 0x25, 0xff, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf4, 0xff, 0x70, 0x17, 0xb8, 0x8e, 0x28, 0x1b, 0x10, 0x50, 0x8d, 0x85, 0x60, 0xfe, 0xff, 0xff, 0x50, 0xe8, 0, 0x74, 0, 0, 0x83, 0xc4, 0x10, 0xe8, 0xf7, 0xbe, 0xf6, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xc, 0xbf, 0xf6, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x85, 0x60, 0xfe, 0xff, 0xff, 0xe8, 0xfe, 0x71, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xfd, 0x73, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015ea25, 0x5)   pushd(0x1cc);                         /* push dword 0x1cc */
    II(0x1015ea2a, 0x5)   calld(sys_check_available_stack_size, 0x7323); /* call 0x10165d52 */
    II(0x1015ea2f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015ea30, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015ea31, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015ea32, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015ea33, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015ea34, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015ea35, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015ea37, 0x6)   sub(esp, 0x1a0);                      /* sub esp, 0x1a0 */
    II(0x1015ea3d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015ea40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ea43, 0x5)   calld(0x101541da, -0xa86e);           /* call 0x101541da */
    II(0x1015ea48, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015ea4a, 0x6)   jzd(0x1015eb2f, 0xdf);                /* jz dword 0x1015eb2f */
    II(0x1015ea50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ea53, 0x5)   calld(0x1007611c, -0xe893c);          /* call 0x1007611c */
    II(0x1015ea58, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x1015ea5b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015ea5d, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015ea5f, 0x5)   calld(0x100766ac, -0xe83b8);          /* call 0x100766ac */
    II(0x1015ea64, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015ea67, 0x5)   calld(0x10076574, -0xe84f8);          /* call 0x10076574 */
    II(0x1015ea6c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1015ea6f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015ea72, 0x3)   imul(edx, eax, 0x33);                 /* imul edx, eax, 0x33 */
    II(0x1015ea75, 0x5)   mov(eax, 0x101c81c0);                 /* mov eax, 0x101c81c0 */
    II(0x1015ea7a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1015ea7c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015ea7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ea82, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1015ea86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ea89, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1015ea8d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015ea8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ea92, 0x5)   calld(0x1008a998, -0xd40ff);          /* call 0x1008a998 */
    II(0x1015ea97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ea9a, 0x5)   calld(0x101526ac, -0xc3f3);           /* call 0x101526ac */
    II(0x1015ea9f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015eaa1, 0x2)   jzd(0x1015eac7, 0x24);                /* jz 0x1015eac7 */
    II(0x1015eaa3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015eaa6, 0x5)   calld(0x101526ac, -0xc3ff);           /* call 0x101526ac */
    II(0x1015eaab, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1015eaae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015eab1, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x1015eab4, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015eab7, 0x5)   calld(0x100765d0, -0xe84ec);          /* call 0x100765d0 */
    II(0x1015eabc, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1015eabe, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015eac1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015eac4, 0x3)   calld_abs(memd_a32(ds, ecx + 0x68));  /* call dword near [ecx+0x68] */
l_0x1015eac7:
    II(0x1015eac7, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1015eacc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015eacf, 0x5)   calld(0x10076d98, -0xe7d3c);          /* call 0x10076d98 */
    II(0x1015ead4, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015ead6, 0x2)   jzd(0x1015eb25, 0x4d);                /* jz 0x1015eb25 */
    II(0x1015ead8, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015eadb, 0x5)   calld(0x10076574, -0xe856c);          /* call 0x10076574 */
    II(0x1015eae0, 0x3)   mov(al, memb_a32(ds, eax + 0x27));    /* mov al, [eax+0x27] */
    II(0x1015eae3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015eae8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015eae9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015eaec, 0x3)   pushd(memd_a32(ds, eax + 0x17));      /* push dword [eax+0x17] */
    II(0x1015eaef, 0x5)   mov(eax, 0x101b288e);                 /* mov eax, 0x101b288e */ /* "%s %i has been unloaded\nfrom air transport." */
    II(0x1015eaf4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015eaf5, 0x6)   lea(eax, ebp - 0x1a0);                /* lea eax, [ebp+0xfffffe60] */
    II(0x1015eafb, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015eafc, 0x5)   calld(sys_sprintf, 0x7400);           /* call 0x10165f01 */
    II(0x1015eb01, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x1015eb04, 0x5)   calld(0x100caa00, -0x94109);          /* call 0x100caa00 */
    II(0x1015eb09, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015eb0e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015eb0f, 0x5)   calld(0x100caa20, -0x940f4);          /* call 0x100caa20 */
    II(0x1015eb14, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1015eb16, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015eb18, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015eb1a, 0x6)   lea(eax, ebp - 0x1a0);                /* lea eax, [ebp+0xfffffe60] */
    II(0x1015eb20, 0x5)   calld(0x10115d23, -0x48e02);          /* call 0x10115d23 */
l_0x1015eb25:
    II(0x1015eb25, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015eb27, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015eb2a, 0x5)   calld(0x10075f2c, -0xe8c03);          /* call 0x10075f2c */
l_0x1015eb2f:
    II(0x1015eb2f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015eb31, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015eb32, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015eb33, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015eb34, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015eb35, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015eb36, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015eb37, 0x1)   retd();                               /* ret */
FUNC_END

