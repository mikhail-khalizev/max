FUNC_BEGIN(0x100a0f77, 0x472a4feb85fcf4d6, 0x20, ({0x68, 0x5c, 0x1, 0, 0, 0xe8, 0xd1, 0x4d, 0xc, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0x1, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf0, 0x80, 0x78, 0x4c, 0, 0x74, 0x17, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x48, 0xe8, 0xb6, 0xa2, 0xfe, 0xff, 0x98, 0x83, 0xf8, 0xff, 0x74, 0x5, 0xe9, 0xa7, 0, 0, 0, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x48, 0xe8, 0xda, 0xa2, 0xfe, 0xff, 0x8b, 0x55, 0xf0, 0x83, 0xc2, 0x44, 0x8b, 0x45, 0xf4, 0xe8, 0xbc, 0x5d, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x2b, 0x8b, 0x45, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0x50, 0x8d, 0x85, 0xc4, 0xfe, 0xff, 0xff, 0x50, 0xe8, 0xfb, 0x4e, 0xc, 0, 0x83, 0xc4, 0x10, 0xeb, 0x48, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x10, 0xba, 0xf, 0x9, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4d, 0xe8, 0xa5, 0x4e, 0xc, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x50, 0x8d, 0x85, 0xc4, 0xfe, 0xff, 0xff, 0x50, 0xe8, 0xb1, 0x4e, 0xc, 0, 0x83, 0xc4, 0x10, 0x8d, 0x95, 0xc4, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4d, 0xe8, 0xcd, 0x4e, 0xc, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100a0f77, 0x5)   pushd(0x15c);                         /* push dword 0x15c */
    II(0x100a0f7c, 0x5)   calld(sys_check_available_stack_size, 0xc4dd1); /* call 0x10165d52 */
    II(0x100a0f81, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a0f82, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a0f83, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a0f84, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a0f86, 0x6)   sub(esp, 0x13c);                      /* sub esp, 0x13c */
    II(0x100a0f8c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a0f8f, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100a0f92, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100a0f95, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
//    II(0x100a0f98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a0f9b, 0x4)   cmp(memb_a32(ds, eax + 0x4c), 0);     /* cmp byte [eax+0x4c], 0x0 */
    II(0x100a0f9f, 0x2)   jzd(0x100a0fb8, 0x17);                /* jz 0x100a0fb8 */
    II(0x100a0fa1, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100a0fa4, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x100a0fa7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a0faa, 0x3)   add(eax, 0x48);                       /* add eax, 0x48 */
    II(0x100a0fad, 0x5)   calld(0x1008b268, -0x15d4a);          /* call 0x1008b268 */
    II(0x100a0fb2, 0x1)   cwde();                               /* cwde */
    II(0x100a0fb3, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x100a0fb6, 0x2)   jzd(0x100a0fbd, 0x5);                 /* jz 0x100a0fbd */
l_0x100a0fb8:
    II(0x100a0fb8, 0x5)   jmpd(0x100a1064, 0xa7);               /* jmp 0x100a1064 */
l_0x100a0fbd:
    II(0x100a0fbd, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100a0fc0, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x100a0fc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a0fc6, 0x3)   add(eax, 0x48);                       /* add eax, 0x48 */
    II(0x100a0fc9, 0x5)   calld(0x1008b2a8, -0x15d26);          /* call 0x1008b2a8 */
    II(0x100a0fce, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100a0fd1, 0x3)   add(edx, 0x44);                       /* add edx, 0x44 */
    II(0x100a0fd4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a0fd7, 0x5)   calld(0x10076d98, -0x2a244);          /* call 0x10076d98 */
    II(0x100a0fdc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a0fde, 0x2)   jzd(0x100a100b, 0x2b);                /* jz 0x100a100b */
    II(0x100a0fe0, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100a0fe3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a0fe4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a0fe7, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a0fea, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a0fed, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100a0ff0, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x100a0ff6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a0ff9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a0ffa, 0x6)   lea(eax, ebp - 0x13c);                /* lea eax, [ebp+0xfffffec4] */
    II(0x100a1000, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a1001, 0x5)   calld(sys_sprintf, 0xc4efb);          /* call 0x10165f01 */
    II(0x100a1006, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100a1009, 0x2)   jmpd(0x100a1053, 0x48);               /* jmp 0x100a1053 */
l_0x100a100b:
    II(0x100a100b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a100e, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100a1011, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a1016, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1018, 0x2)   jnzd(0x100a102a, 0x10);               /* jnz 0x100a102a */
    II(0x100a101a, 0x5)   mov(edx, 0x101a090f);                 /* mov edx, 0x101a090f */ /* "Adjustments made:\n" */
    II(0x100a101f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a1022, 0x3)   add(eax, 0x4d);                       /* add eax, 0x4d */
    II(0x100a1025, 0x5)   calld(sys_strcpy, 0xc4ea5);           /* call 0x10165ecf */
l_0x100a102a:
    II(0x100a102a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a102d, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a1030, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a1033, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100a1036, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x100a103c, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100a103f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a1040, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1043, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a1044, 0x6)   lea(eax, ebp - 0x13c);                /* lea eax, [ebp+0xfffffec4] */
    II(0x100a104a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a104b, 0x5)   calld(sys_sprintf, 0xc4eb1);          /* call 0x10165f01 */
    II(0x100a1050, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
l_0x100a1053:
    II(0x100a1053, 0x6)   lea(edx, ebp - 0x13c);                /* lea edx, [ebp+0xfffffec4] */
    II(0x100a1059, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a105c, 0x3)   add(eax, 0x4d);                       /* add eax, 0x4d */
    II(0x100a105f, 0x5)   calld(sys_strcat, 0xc4ecd);           /* call 0x10165f31 */
l_0x100a1064:
    II(0x100a1064, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a1066, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a1067, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a1068, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a1069, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

