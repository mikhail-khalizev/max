FUNC_BEGIN(0x100a32c3, 0xc98376d056e3a5b6, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0x85, 0x2a, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xba, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0x8b, 0x55, 0xf8, 0x8b, 0x5a, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x9a, 0x37, 0xfd, 0xff, 0x31, 0xc0, 0x8b, 0x55, 0xf8, 0x8a, 0x42, 0x4d, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0xe8, 0x5b, 0x77, 0xfe, 0xff, 0xa8, 0x1, 0x74, 0x9, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0x2d, 0x1, 0, 0, 0x80, 0x7d, 0xfc, 0x3, 0x75, 0x7, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbe, 0x4d, 0xfc, 0x8d, 0x55, 0xf0, 0x8d, 0x45, 0xe4, 0xe8, 0x10, 0x2b, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x8b, 0x75, 0xf4, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x7c, 0xed, 0x1, 0, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0x9, 0xc6, 0x45, 0xe8, 0, 0xe9, 0xed, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0xd5, 0, 0, 0, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbe, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x36, 0xec, 0x1, 0, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x75, 0x9, 0xc6, 0x45, 0xe8, 0, 0xe9, 0xaf, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x4e, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0x8d, 0x55, 0xf0, 0x8d, 0x45, 0xdc, 0xe8, 0x9e, 0x2a, 0xfd, 0xff, 0x8d, 0x4d, 0xcc, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xef, 0x61, 0, 0, 0x8d, 0x45, 0xcc, 0xe8, 0x86, 0x64, 0xfe, 0xff, 0xf, 0xbf, 0xd0, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xe0, 0x8d, 0x45, 0xcc, 0xe8, 0x41, 0x64, 0xfe, 0xff, 0x98, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xd0, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0x3a, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8d, 0x45, 0xcc, 0xe8, 0x23, 0x64, 0xfe, 0xff, 0xf, 0xbf, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0x4c, 0x64, 0xfe, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x89, 0xce, 0xfc, 0xff, 0x66, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xe8, 0, 0xeb, 0x22, 0x8d, 0x45, 0xcc, 0xe8, 0x96, 0x62, 0, 0, 0x84, 0xc0, 0x75, 0x89, 0xbb, 0x1, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xc5, 0x7c, 0, 0, 0xc6, 0x45, 0xe8, 0x1, 0x8a, 0x45, 0xe8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a32c3, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x100a32c8, 0x5)   calld(sys_check_available_stack_size, 0xc2a85); /* call 0x10165d52 */
    II(0x100a32cd, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a32ce, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a32cf, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a32d0, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a32d1, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a32d2, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a32d4, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x100a32da, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a32dd, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100a32e0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a32e3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a32e5, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x100a32e8, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100a32ee, 0x5)   mov(edx, 0x101c31c4);                 /* mov edx, 0x101c31c4 */
    II(0x100a32f3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100a32f5, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100a32f8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a32fb, 0x3)   mov(ebx, memd_a32(ds, edx + 0x1a));   /* mov ebx, [edx+0x1a] */
    II(0x100a32fe, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100a3301, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a3304, 0x3)   mov(edx, memd_a32(ds, edx + 0x18));   /* mov edx, [edx+0x18] */
    II(0x100a3307, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100a330a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a330d, 0x5)   calld(0x10076aac, -0x2c866);          /* call 0x10076aac */
    II(0x100a3312, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a3314, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a3317, 0x3)   mov(al, memb_a32(ds, edx + 0x4d));    /* mov al, [edx+0x4d] */
    II(0x100a331a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100a331d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3320, 0x5)   calld(0x1008aa80, -0x188a5);          /* call 0x1008aa80 */
    II(0x100a3325, 0x2)   test(al, 0x1);                        /* test al, 0x1 */
    II(0x100a3327, 0x2)   jzd(0x100a3332, 0x9);                 /* jz 0x100a3332 */
    II(0x100a3329, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x100a332d, 0x5)   jmpd(0x100a345f, 0x12d);              /* jmp 0x100a345f */
l_0x100a3332:
    II(0x100a3332, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x3);    /* cmp byte [ebp-0x4], 0x3 */
    II(0x100a3336, 0x2)   jnzd(0x100a333f, 0x7);                /* jnz 0x100a333f */
    II(0x100a3338, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
l_0x100a333f:
    II(0x100a333f, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100a3344, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a3345, 0x4)   movsx(ecx, memb_a32(ss, ebp - 0x4));  /* movsx ecx, byte [ebp-0x4] */
    II(0x100a3349, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x100a334c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100a334f, 0x5)   calld(0x10075e64, -0x2d4f0);          /* call 0x10075e64 */
    II(0x100a3354, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a3357, 0x3)   mov(esi, memd_a32(ss, ebp - 0xc));    /* mov esi, [ebp-0xc] */
    II(0x100a335a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100a335c, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100a335e, 0x5)   calld(0x100c20df, 0x1ed7c);           /* call 0x100c20df */
    II(0x100a3363, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100a3367, 0x2)   jged(0x100a3372, 0x9);                /* jge 0x100a3372 */
    II(0x100a3369, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x100a336d, 0x5)   jmpd(0x100a345f, 0xed);               /* jmp 0x100a345f */
l_0x100a3372:
    II(0x100a3372, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3375, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100a3378, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a337d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a337f, 0x2)   jnzd(0x100a338a, 0x9);                /* jnz 0x100a338a */
    II(0x100a3381, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x100a3385, 0x5)   jmpd(0x100a345f, 0xd5);               /* jmp 0x100a345f */
l_0x100a338a:
    II(0x100a338a, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100a338f, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x100a3393, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a3396, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a3399, 0x5)   calld(0x100c1fd4, 0x1ec36);           /* call 0x100c1fd4 */
    II(0x100a339e, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100a33a1, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x100a33a5, 0x2)   jnzd(0x100a33b0, 0x9);                /* jnz 0x100a33b0 */
    II(0x100a33a7, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x100a33ab, 0x5)   jmpd(0x100a345f, 0xaf);               /* jmp 0x100a345f */
l_0x100a33b0:
    II(0x100a33b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a33b3, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100a33b6, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100a33b8, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100a33bb, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x100a33be, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a33c1, 0x5)   calld(0x10075e64, -0x2d562);          /* call 0x10075e64 */
    II(0x100a33c6, 0x3)   lea(ecx, ebp - 0x34);                 /* lea ecx, [ebp-0x34] */
    II(0x100a33c9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a33cb, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100a33cd, 0x5)   calld(0x100a95c1, 0x61ef);            /* call 0x100a95c1 */
l_0x100a33d2:
    II(0x100a33d2, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100a33d5, 0x5)   calld(0x10089860, -0x19b7a);          /* call 0x10089860 */
    II(0x100a33da, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a33dd, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100a33e0, 0x3)   add(edx, memd_a32(ss, ebp - 0x20));   /* add edx, [ebp-0x20] */
    II(0x100a33e3, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100a33e6, 0x5)   calld(0x1008982c, -0x19bbf);          /* call 0x1008982c */
    II(0x100a33eb, 0x1)   cwde();                               /* cwde */
    II(0x100a33ec, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100a33ee, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100a33f0, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100a33f2, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100a33f5, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100a33f9, 0x2)   jged(0x100a3435, 0x3a);               /* jge 0x100a3435 */
    II(0x100a33fb, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100a3400, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a3401, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100a3404, 0x5)   calld(0x1008982c, -0x19bdd);          /* call 0x1008982c */
    II(0x100a3409, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100a340c, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100a340f, 0x5)   calld(0x10089860, -0x19bb4);          /* call 0x10089860 */
    II(0x100a3414, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100a3417, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a341a, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100a341d, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100a341f, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a3422, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3425, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a3428, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a342b, 0x5)   calld(0x100702b9, -0x33177);          /* call 0x100702b9 */
    II(0x100a3430, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100a3433, 0x2)   jnzd(0x100a3437, 0x2);                /* jnz 0x100a3437 */
l_0x100a3435:
    II(0x100a3435, 0x2)   jmpd(0x100a343d, 0x6);                /* jmp 0x100a343d */
l_0x100a3437:
    II(0x100a3437, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x100a343b, 0x2)   jmpd(0x100a345f, 0x22);               /* jmp 0x100a345f */
l_0x100a343d:
    II(0x100a343d, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100a3440, 0x5)   calld(0x100a96db, 0x6296);            /* call 0x100a96db */
    II(0x100a3445, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a3447, 0x2)   jnzd(0x100a33d2, -0x77);              /* jnz 0x100a33d2 */
    II(0x100a3449, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100a344e, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100a3453, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3456, 0x5)   calld(0x100ab120, 0x7cc5);            /* call 0x100ab120 */
    II(0x100a345b, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
l_0x100a345f:
    II(0x100a345f, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x100a3462, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a3464, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a3465, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a3466, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a3467, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a3468, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a3469, 0x1)   retd();                               /* ret */
FUNC_END

