FUNC_BEGIN(0x100f911b, 0xff960ce22076e77b, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x2d, 0xcc, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xe8, 0xf7, 0xce, 0xf7, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xd5, 0xba, 0xf7, 0xff, 0x89, 0x45, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x74, 0x5f, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x50, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x22, 0xe8, 0x88, 0x18, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x9d, 0x18, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0xe7, 0x27, 0x1a, 0x10, 0xe8, 0x90, 0xcb, 0x1, 0, 0xeb, 0x2e, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xf8, 0x17, 0xf9, 0xff, 0xe8, 0xf6, 0xcc, 0x6, 0, 0x6b, 0xc0, 0x65, 0xc1, 0xe8, 0xf, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x41, 0x31, 0xdb, 0xba, 0x18, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x90, 0x9e, 0x6, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100f911b, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100f9120, 0x5)   calld(sys_check_available_stack_size, 0x6cc2d); /* call 0x10165d52 */
    II(0x100f9125, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f9126, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f9127, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f9128, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f9129, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f912a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f912c, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100f9132, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f9135, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100f9138, 0x5)   calld(0x10076034, -0x83109);          /* call 0x10076034 */
    II(0x100f913d, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100f913f, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x100f9141, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f9144, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100f9147, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100f914a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f914d, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100f9150, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f9153, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f9156, 0x5)   calld(0x10074c30, -0x8452b);          /* call 0x10074c30 */
    II(0x100f915b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f915e, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100f9162, 0x2)   jzd(0x100f91c3, 0x5f);                /* jz 0x100f91c3 */
    II(0x100f9164, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f9167, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100f916a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f916f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f9171, 0x2)   jnzd(0x100f9195, 0x22);               /* jnz 0x100f9195 */
    II(0x100f9173, 0x5)   calld(0x100caa00, -0x2e778);          /* call 0x100caa00 */
    II(0x100f9178, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f917d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f917e, 0x5)   calld(0x100caa20, -0x2e763);          /* call 0x100caa20 */
    II(0x100f9183, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f9185, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f9187, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f9189, 0x5)   mov(eax, 0x101a27e7);                 /* mov eax, 0x101a27e7 */ /* "Infiltrator has already used his action this turn.  Try again next turn." */
    II(0x100f918e, 0x5)   calld(0x10115d23, 0x1cb90);           /* call 0x10115d23 */
    II(0x100f9193, 0x2)   jmpd(0x100f91c3, 0x2e);               /* jmp 0x100f91c3 */
l_0x100f9195:
    II(0x100f9195, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f9198, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f919b, 0x5)   calld(0x1008a998, -0x6e808);          /* call 0x1008a998 */
    II(0x100f91a0, 0x5)   calld(/* sys */ 0x10165e9b, 0x6ccf6); /* call 0x10165e9b */
    II(0x100f91a5, 0x3)   imul(eax, eax, 0x65);                 /* imul eax, eax, 0x65 */
    II(0x100f91a8, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100f91ab, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100f91ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f91b0, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x100f91b4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f91b6, 0x5)   mov(edx, 0x18);                       /* mov edx, 0x18 */
    II(0x100f91bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f91be, 0x5)   calld(0x10163053, 0x69e90);           /* call 0x10163053 */
l_0x100f91c3:
    II(0x100f91c3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f91c5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f91c6, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f91c7, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f91c8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f91c9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f91ca, 0x1)   retd();                               /* ret */
FUNC_END

