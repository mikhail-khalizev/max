FUNC_BEGIN(0x10096b8a, 0x9aac71f8161cc937, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0xbe, 0xf1, 0xc, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x17, 0xe8, 0x84, 0xf7, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xfa, 0xf8, 0xfd, 0xff, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x79, 0x45, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0xed, 0x58, 0, 0, 0x89, 0x45, 0xe8, 0x66, 0x83, 0x7d, 0xe8, 0x5, 0x75, 0x16, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x23, 0xfe, 0xff, 0xff, 0x88, 0x45, 0xf0, 0xe9, 0x7a, 0, 0, 0, 0x66, 0x83, 0x7d, 0xe8, 0x22, 0x74, 0x7, 0x66, 0x83, 0x7d, 0xe8, 0x25, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xe8, 0x24, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xe8, 0x23, 0x75, 0x31, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xd0, 0xff, 0x52, 0x14, 0x98, 0x50, 0xb8, 0x5, 0, 0, 0, 0x50, 0x8b, 0x4d, 0xfc, 0x8b, 0x5d, 0xf8, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xf4, 0xe8, 0xc7, 0xf2, 0xff, 0xff, 0x88, 0x45, 0xf0, 0xeb, 0x29, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xcc, 0xff, 0x52, 0x14, 0x98, 0x50, 0x8b, 0x4d, 0xfc, 0x8b, 0x5d, 0xf8, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xf4, 0xe8, 0xb7, 0xc1, 0xff, 0xff, 0x88, 0x45, 0xf0, 0x80, 0x7d, 0xf0, 0, 0x74, 0x10, 0xc6, 0x45, 0xec, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xe7, 0xf2, 0xfd, 0xff, 0xeb, 0x1a, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xd7, 0xf2, 0xfd, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xcb, 0xf2, 0xfd, 0xff, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10096b8a, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x10096b8f, 0x5)   calld(sys_check_available_stack_size, 0xcf1be); /* call 0x10165d52 */
    II(0x10096b94, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10096b95, 0x1)   pushd(esi);                           /* push esi */
    II(0x10096b96, 0x1)   pushd(edi);                           /* push edi */
    II(0x10096b97, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10096b98, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10096b9a, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x10096ba0, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10096ba3, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10096ba6, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x10096ba9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10096bac, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x10096baf, 0x5)   calld(0x10076338, -0x2087c);          /* call 0x10076338 */
    II(0x10096bb4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10096bb6, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10096bb9, 0x5)   calld(0x100764b8, -0x20706);          /* call 0x100764b8 */
    II(0x10096bbe, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10096bc0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10096bc1, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10096bc3, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10096bc5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096bc7, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10096bca, 0x5)   calld(0x1008b148, -0xba87);           /* call 0x1008b148 */
    II(0x10096bcf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10096bd2, 0x5)   calld(0x1009c4c4, 0x58ed);            /* call 0x1009c4c4 */
    II(0x10096bd7, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10096bda, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x5);   /* cmp word [ebp-0x18], 0x5 */
    II(0x10096bdf, 0x2)   jnzd(0x10096bf7, 0x16);               /* jnz 0x10096bf7 */
    II(0x10096be1, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x10096be4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10096be7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10096bea, 0x5)   calld(0x10096a12, -0x1dd);            /* call 0x10096a12 */
    II(0x10096bef, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x10096bf2, 0x5)   jmpd(0x10096c71, 0x7a);               /* jmp 0x10096c71 */
l_0x10096bf7:
    II(0x10096bf7, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x22);  /* cmp word [ebp-0x18], 0x22 */
    II(0x10096bfc, 0x2)   jzd(0x10096c05, 0x7);                 /* jz 0x10096c05 */
    II(0x10096bfe, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x25);  /* cmp word [ebp-0x18], 0x25 */
    II(0x10096c03, 0x2)   jnzd(0x10096c07, 0x2);                /* jnz 0x10096c07 */
l_0x10096c05:
    II(0x10096c05, 0x2)   jmpd(0x10096c0e, 0x7);                /* jmp 0x10096c0e */
l_0x10096c07:
    II(0x10096c07, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x24);  /* cmp word [ebp-0x18], 0x24 */
    II(0x10096c0c, 0x2)   jnzd(0x10096c10, 0x2);                /* jnz 0x10096c10 */
l_0x10096c0e:
    II(0x10096c0e, 0x2)   jmpd(0x10096c17, 0x7);                /* jmp 0x10096c17 */
l_0x10096c10:
    II(0x10096c10, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x23);  /* cmp word [ebp-0x18], 0x23 */
    II(0x10096c15, 0x2)   jnzd(0x10096c48, 0x31);               /* jnz 0x10096c48 */
l_0x10096c17:
    II(0x10096c17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10096c1a, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x10096c1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10096c20, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10096c23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10096c26, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x10096c29, 0x1)   cwde();                               /* cwde */
    II(0x10096c2a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10096c2b, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10096c30, 0x1)   pushd(eax);                           /* push eax */
    II(0x10096c31, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x10096c34, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10096c37, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10096c3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10096c3e, 0x5)   calld(0x10095f0a, -0xd39);            /* call 0x10095f0a */
    II(0x10096c43, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x10096c46, 0x2)   jmpd(0x10096c71, 0x29);               /* jmp 0x10096c71 */
l_0x10096c48:
    II(0x10096c48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10096c4b, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x10096c4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10096c51, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10096c54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10096c57, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x10096c5a, 0x1)   cwde();                               /* cwde */
    II(0x10096c5b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10096c5c, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x10096c5f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10096c62, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10096c66, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10096c69, 0x5)   calld(0x10092e25, -0x3e49);           /* call 0x10092e25 */
    II(0x10096c6e, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
l_0x10096c71:
    II(0x10096c71, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x10096c75, 0x2)   jzd(0x10096c87, 0x10);                /* jz 0x10096c87 */
    II(0x10096c77, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x10096c7b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096c7d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10096c80, 0x5)   calld(0x10075f6c, -0x20d19);          /* call 0x10075f6c */
    II(0x10096c85, 0x2)   jmpd(0x10096ca1, 0x1a);               /* jmp 0x10096ca1 */
l_0x10096c87:
    II(0x10096c87, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x10096c8b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096c8d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10096c90, 0x5)   calld(0x10075f6c, -0x20d29);          /* call 0x10075f6c */
    II(0x10096c95, 0x2)   jmpd(0x10096ca1, 0xa);                /* jmp 0x10096ca1 */
//  II(0x10096c97, 0xa)   /* Недостижимый код. */
l_0x10096ca1:
    II(0x10096ca1, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10096ca4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10096ca6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10096ca7, 0x1)   popd(edi);                            /* pop edi */
    II(0x10096ca8, 0x1)   popd(esi);                            /* pop esi */
    II(0x10096ca9, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10096caa, 0x1)   retd();                               /* ret */
FUNC_END

