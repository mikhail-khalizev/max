FUNC_BEGIN(0x10149237, 0xf5bf5dab82836639, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0x11, 0xcb, 0x1, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x40, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0x8b, 0x45, 0xf0, 0xe8, 0x94, 0xbc, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x65, 0xe8, 0xb0, 0x7a, 0xfd, 0xff, 0x83, 0xe8, 0x65, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0xb9, 0xd5, 0xf2, 0xff, 0x83, 0xe8, 0x6c, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x70, 0xe8, 0xf6, 0xd6, 0xf2, 0xff, 0x83, 0xe8, 0x70, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0xe8, 0x39, 0x21, 0xf4, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x74, 0xe8, 0x23, 0x1f, 0xf4, 0xff, 0x83, 0xe8, 0x74, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xf0, 0x5, 0x82, 0, 0, 0, 0xe8, 0x16, 0xd4, 0xf2, 0xff, 0x2d, 0x82, 0, 0, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf0, 0x5, 0x86, 0, 0, 0, 0xe8, 0xfb, 0xd3, 0xf2, 0xff, 0x2d, 0x86, 0, 0, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xf0, 0x5, 0x8a, 0, 0, 0, 0xe8, 0x60, 0x37, 0xf5, 0xff, 0x2d, 0x8a, 0, 0, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xf0, 0x5, 0x94, 0, 0, 0, 0xe8, 0x45, 0x37, 0xf5, 0xff, 0x2d, 0x94, 0, 0, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf0, 0x5, 0x9f, 0, 0, 0, 0xe8, 0xaa, 0xd7, 0xf2, 0xff, 0x2d, 0x9f, 0, 0, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x5, 0xd9, 0, 0, 0, 0xe8, 0x95, 0xd7, 0xf2, 0xff, 0x2d, 0xd9, 0, 0, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x2, 0x98, 0x73, 0x1b, 0x10, 0x66, 0xff, 0x5, 0x48, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x3e, 0x1, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x3f, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x40, 0x1, 0x8b, 0x45, 0xf0, 0xc6, 0x80, 0xa6, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x41, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x43, 0, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x46, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x47, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x48, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x49, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x4a, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x4b, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x4c, 0, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0xa, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0xe, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x80, 0x9e, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x80, 0xa3, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xc7, 0x80, 0xa7, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x8, 0x8a, 0x45, 0xfc, 0x8b, 0x55, 0xf0, 0x88, 0x42, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x7c, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x5b, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x57, 0, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xbb, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xd3, 0x68, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0x16, 0x23, 0xf8, 0xff, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x27, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x78, 0x1, 0, 0x8b, 0x45, 0xf0, 0xc7, 0x80, 0xdd, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x7b, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x45, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8b, 0x90, 0xc0, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x12, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xf0, 0x9, 0x50, 0x12, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x22, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x28, 0xff, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x59, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x5a, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x7a, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x80, 0xa5, 0, 0, 0, 0x1, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x64, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x69, 0, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x2d, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0x5, 0x82, 0, 0, 0, 0xe8, 0x7, 0xd1, 0xf2, 0xff, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x5d, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x2b, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x2c, 0, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x7e, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x4f, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x80, 0xd9, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x80, 0xdb, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x5c, 0, 0x8b, 0x45, 0xf0, 0xe8, 0xc0, 0x1d, 0x1, 0, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x33, 0xba, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xc8, 0x8b, 0x45, 0xc8, 0x8b, 0x40, 0x27, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x66, 0x8b, 0, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x31, 0x8b, 0x45, 0xc8, 0x8b, 0x40, 0x6, 0x8a, 0, 0x30, 0xe4, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x33, 0x8b, 0x45, 0xc8, 0x8b, 0x40, 0x6, 0x8a, 0x40, 0x2, 0x30, 0xe4, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x35, 0x8b, 0x45, 0xc8, 0x8b, 0x40, 0x6, 0x8a, 0x40, 0x4, 0x30, 0xe4, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x37, 0x8b, 0x45, 0xc8, 0x8b, 0x40, 0x6, 0x8a, 0x40, 0x6, 0x30, 0xe4, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x39, 0x66, 0x83, 0x7d, 0xf4, 0x28, 0x75, 0x25, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0xef, 0xa4, 0x1c, 0x10, 0x30, 0xe4, 0x48, 0x1, 0xc0, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x66, 0x1, 0x50, 0x33, 0x8a, 0x45, 0x10, 0x8b, 0x55, 0xf0, 0x88, 0x42, 0x29, 0x8b, 0x45, 0xf0, 0x31, 0xdb, 0x8a, 0x58, 0x29, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x50, 0x33, 0x8b, 0x45, 0xf0, 0x1, 0xd3, 0x66, 0x89, 0x98, 0xd5, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x31, 0xdb, 0x8a, 0x58, 0x29, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x50, 0x35, 0x8b, 0x45, 0xf0, 0x1, 0xd3, 0x66, 0x89, 0x98, 0xd7, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0xb, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x3b, 0x67, 0, 0xeb, 0x32, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0xb, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x3b, 0x67, 0, 0xeb, 0x1d, 0x8b, 0x45, 0xc8, 0x8b, 0x40, 0x6, 0x31, 0xd2, 0x8a, 0x50, 0x1, 0x8b, 0x45, 0xf0, 0x66, 0x3, 0x90, 0xd5, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x4a, 0x66, 0x89, 0x50, 0x3b, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0x8f, 0xd0, 0xf2, 0xff, 0x8a, 0x50, 0xa, 0x8b, 0x45, 0xf0, 0x88, 0x50, 0x4d, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0x7b, 0xd0, 0xf2, 0xff, 0x8a, 0x50, 0x10, 0x8b, 0x45, 0xf0, 0x88, 0x50, 0x4e, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0x67, 0xd0, 0xf2, 0xff, 0x8a, 0x50, 0x14, 0x8b, 0x45, 0xf0, 0x88, 0x50, 0x50, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0x53, 0xd0, 0xf2, 0xff, 0x8a, 0x50, 0x16, 0x8b, 0x45, 0xf0, 0x88, 0x50, 0x51, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0x3f, 0xd0, 0xf2, 0xff, 0x8a, 0x50, 0x1b, 0x8b, 0x45, 0xf0, 0x88, 0x50, 0x54, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0x2b, 0xd0, 0xf2, 0xff, 0x66, 0x8b, 0x40, 0x19, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x52, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x60, 0x2, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6c, 0xe8, 0xe, 0xd0, 0xf2, 0xff, 0x66, 0x83, 0x78, 0xe, 0, 0x74, 0x9, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x61, 0x2, 0xeb, 0x7, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x61, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x62, 0x2, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x5e, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x5f, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x6b, 0, 0x8b, 0x45, 0xf0, 0xe8, 0x95, 0x5a, 0, 0, 0x8b, 0x45, 0xf0, 0xf7, 0x40, 0x12, 0x18, 0, 0x80, 0, 0x74, 0x9, 0x8b, 0x45, 0xf0, 0xf6, 0x40, 0x12, 0x1, 0x74, 0x2, 0xeb, 0x13, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x7c, 0x25, 0xff, 0xff, 0, 0, 0x3d, 0xff, 0xff, 0, 0, 0x75, 0x2, 0xeb, 0x15, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x99, 0xf1, 0xff, 0xff, 0x8b, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2b, 0x22, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x10149237, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x1014923c, 0x5)   calld(sys_check_available_stack_size, 0x1cb11); /* call 0x10165d52 */
    II(0x10149241, 0x1)   pushd(esi);                           /* push esi */
    II(0x10149242, 0x1)   pushd(edi);                           /* push edi */
    II(0x10149243, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10149244, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10149246, 0x6)   sub(esp, 0x40);                       /* sub esp, 0x40 */
    II(0x1014924c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1014924f, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10149252, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10149255, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
//    II(0x10149258, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014925b, 0x5)   calld(0x10144ef4, -0x436c);           /* call 0x10144ef4 */
    II(0x10149260, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10149263, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10149266, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10149269, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014926c, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1014926f, 0x5)   calld(0x10120d24, -0x28550);          /* call 0x10120d24 */
    II(0x10149274, 0x3)   sub(eax, 0x65);                       /* sub eax, 0x65 */
    II(0x10149277, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1014927a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1014927d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10149280, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149283, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10149286, 0x5)   calld(my_ctor_0x101b38d0, -0xd2a47);  /* call 0x10076844 */
    II(0x1014928b, 0x3)   sub(eax, 0x6c);                       /* sub eax, 0x6c */
    II(0x1014928e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10149291, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10149294, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10149297, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014929a, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014929d, 0x5)   calld(0x10076998, -0xd290a);          /* call 0x10076998 */
    II(0x101492a2, 0x3)   sub(eax, 0x70);                       /* sub eax, 0x70 */
    II(0x101492a5, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101492a8, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x101492ab, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x101492ae, 0x5)   calld(0x1008b3ec, -0xbdec7);          /* call 0x1008b3ec */
    II(0x101492b3, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101492b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101492b9, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x101492bc, 0x5)   calld(0x1008b1e4, -0xbe0dd);          /* call 0x1008b1e4 */
    II(0x101492c1, 0x3)   sub(eax, 0x74);                       /* sub eax, 0x74 */
    II(0x101492c4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101492c7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x101492ca, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101492cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101492d0, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x101492d5, 0x5)   calld(my_ctor_0x101b38f8, -0xd2bea);  /* call 0x100766f0 */
    II(0x101492da, 0x5)   sub(eax, 0x82);                       /* sub eax, 0x82 */
    II(0x101492df, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101492e2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x101492e5, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x101492e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101492eb, 0x5)   add(eax, 0x86);                       /* add eax, 0x86 */
    II(0x101492f0, 0x5)   calld(my_ctor_0x101b38f8, -0xd2c05);  /* call 0x100766f0 */
    II(0x101492f5, 0x5)   sub(eax, 0x86);                       /* sub eax, 0x86 */
    II(0x101492fa, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101492fd, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10149300, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10149303, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149306, 0x5)   add(eax, 0x8a);                       /* add eax, 0x8a */
    II(0x1014930b, 0x5)   calld(0x1009ca70, -0xac8a0);          /* call 0x1009ca70 */
    II(0x10149310, 0x5)   sub(eax, 0x8a);                       /* sub eax, 0x8a */
    II(0x10149315, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10149318, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1014931b, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1014931e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149321, 0x5)   add(eax, 0x94);                       /* add eax, 0x94 */
    II(0x10149326, 0x5)   calld(0x1009ca70, -0xac8bb);          /* call 0x1009ca70 */
    II(0x1014932b, 0x5)   sub(eax, 0x94);                       /* sub eax, 0x94 */
    II(0x10149330, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10149333, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10149336, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10149339, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014933c, 0x5)   add(eax, 0x9f);                       /* add eax, 0x9f */
    II(0x10149341, 0x5)   calld(my_ctor_0x101b4184, -0xd2856);  /* call 0x10076af0 */
    II(0x10149346, 0x5)   sub(eax, 0x9f);                       /* sub eax, 0x9f */
    II(0x1014934b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1014934e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149351, 0x5)   add(eax, 0xd9);                       /* add eax, 0xd9 */
    II(0x10149356, 0x5)   calld(my_ctor_0x101b4184, -0xd286b);  /* call 0x10076af0 */
    II(0x1014935b, 0x5)   sub(eax, 0xd9);                       /* sub eax, 0xd9 */
    II(0x10149360, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x10149363, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149366, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b7398); /* mov dword [eax+0x2], 0x101b7398 */
    II(0x1014936d, 0x7)   inc(memw_a32(ds, 0x101c8148));        /* inc word [0x101c8148] */
    II(0x10149374, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149377, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1014937b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014937e, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x10149382, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149385, 0x4)   mov(memb_a32(ds, eax + 0x3f), 0);     /* mov byte [eax+0x3f], 0x0 */
    II(0x10149389, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014938c, 0x4)   mov(memb_a32(ds, eax + 0x40), 0x1);   /* mov byte [eax+0x40], 0x1 */
    II(0x10149390, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149393, 0x7)   mov(memb_a32(ds, eax + 0xa6), 0);     /* mov byte [eax+0xa6], 0x0 */
    II(0x1014939a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014939d, 0x6)   mov(memw_a32(ds, eax + 0x41), 0);     /* mov word [eax+0x41], 0x0 */
    II(0x101493a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493a6, 0x6)   mov(memw_a32(ds, eax + 0x43), 0);     /* mov word [eax+0x43], 0x0 */
    II(0x101493ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493af, 0x4)   mov(memb_a32(ds, eax + 0x46), 0);     /* mov byte [eax+0x46], 0x0 */
    II(0x101493b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493b6, 0x4)   mov(memb_a32(ds, eax + 0x47), 0);     /* mov byte [eax+0x47], 0x0 */
    II(0x101493ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493bd, 0x4)   mov(memb_a32(ds, eax + 0x48), 0);     /* mov byte [eax+0x48], 0x0 */
    II(0x101493c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493c4, 0x4)   mov(memb_a32(ds, eax + 0x49), 0);     /* mov byte [eax+0x49], 0x0 */
    II(0x101493c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493cb, 0x4)   mov(memb_a32(ds, eax + 0x4a), 0);     /* mov byte [eax+0x4a], 0x0 */
    II(0x101493cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493d2, 0x4)   mov(memb_a32(ds, eax + 0x4b), 0);     /* mov byte [eax+0x4b], 0x0 */
    II(0x101493d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493d9, 0x4)   mov(memb_a32(ds, eax + 0x4c), 0);     /* mov byte [eax+0x4c], 0x0 */
    II(0x101493dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493e0, 0x7)   mov(memd_a32(ds, eax + 0xa), 0);      /* mov dword [eax+0xa], 0x0 */
    II(0x101493e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493ea, 0x7)   mov(memd_a32(ds, eax + 0xe), 0);      /* mov dword [eax+0xe], 0x0 */
    II(0x101493f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493f4, 0x7)   mov(memb_a32(ds, eax + 0x9e), 0);     /* mov byte [eax+0x9e], 0x0 */
    II(0x101493fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101493fe, 0x9)   mov(memw_a32(ds, eax + 0xa3), 0);     /* mov word [eax+0xa3], 0x0 */
    II(0x10149407, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014940a, 0xa)   mov(memd_a32(ds, eax + 0xa7), 0);     /* mov dword [eax+0xa7], 0x0 */
    II(0x10149414, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10149417, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1014941a, 0x4)   mov(memw_a32(ds, edx + 0x8), ax);     /* mov [edx+0x8], ax */
    II(0x1014941e, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10149421, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10149424, 0x3)   mov(memb_a32(ds, edx + 0x26), al);    /* mov [edx+0x26], al */
    II(0x10149427, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014942a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1014942d, 0x4)   mov(memw_a32(ds, edx + 0x7c), ax);    /* mov [edx+0x7c], ax */
    II(0x10149431, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149434, 0x4)   mov(memb_a32(ds, eax + 0x5b), 0);     /* mov byte [eax+0x5b], 0x0 */
    II(0x10149438, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014943b, 0x4)   mov(memb_a32(ds, eax + 0x57), 0);     /* mov byte [eax+0x57], 0x0 */
    II(0x1014943f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10149443, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10149447, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1014944d, 0x5)   mov(ebx, 0x101ca468);                 /* mov ebx, 0x101ca468 */
    II(0x10149452, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10149454, 0x5)   calld(0x100dfd2c, -0x6972d);          /* call 0x100dfd2c */
    II(0x10149459, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014945b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014945e, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10149461, 0x5)   calld(0x100cb77c, -0x7dcea);          /* call 0x100cb77c */
    II(0x10149466, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149469, 0x4)   mov(memb_a32(ds, eax + 0x27), 0);     /* mov byte [eax+0x27], 0x0 */
    II(0x1014946d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149470, 0x6)   mov(memw_a32(ds, eax + 0x78), 0x1);   /* mov word [eax+0x78], 0x1 */
    II(0x10149476, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149479, 0xa)   mov(memd_a32(ds, eax + 0xdd), 0);     /* mov dword [eax+0xdd], 0x0 */
    II(0x10149483, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149486, 0x4)   mov(memb_a32(ds, eax + 0x7b), 0);     /* mov byte [eax+0x7b], 0x0 */
    II(0x1014948a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014948d, 0x4)   mov(memb_a32(ds, eax + 0x45), 0);     /* mov byte [eax+0x45], 0x0 */
    II(0x10149491, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149494, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10149497, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014949a, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1014949d, 0x6)   mov(edx, memd_a32(ds, eax + 0x101c81c0)); /* mov edx, [eax+0x101c81c0] */
    II(0x101494a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101494a6, 0x3)   mov(memd_a32(ds, eax + 0x12), edx);   /* mov [eax+0x12], edx */
    II(0x101494a9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101494ad, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101494b3, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x101494b9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101494bb, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x101494be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101494c1, 0x3)   or_(memd_a32(ds, eax + 0x12), edx);   /* or [eax+0x12], edx */
    II(0x101494c4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101494c8, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101494ce, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x101494d4, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
    II(0x101494d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101494da, 0x3)   mov(memd_a32(ds, eax + 0x22), edx);   /* mov [eax+0x22], edx */
    II(0x101494dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101494e0, 0x4)   mov(memb_a32(ds, eax + 0x28), 0xff);  /* mov byte [eax+0x28], 0xff */
    II(0x101494e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101494e7, 0x4)   mov(memb_a32(ds, eax + 0x59), 0);     /* mov byte [eax+0x59], 0x0 */
    II(0x101494eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101494ee, 0x4)   mov(memb_a32(ds, eax + 0x5a), 0);     /* mov byte [eax+0x5a], 0x0 */
    II(0x101494f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101494f5, 0x4)   mov(memb_a32(ds, eax + 0x7a), 0);     /* mov byte [eax+0x7a], 0x0 */
    II(0x101494f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101494fc, 0x7)   mov(memb_a32(ds, eax + 0xa5), 0x1);   /* mov byte [eax+0xa5], 0x1 */
    II(0x10149503, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149506, 0x4)   mov(memb_a32(ds, eax + 0x64), 0);     /* mov byte [eax+0x64], 0x0 */
    II(0x1014950a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014950d, 0x6)   mov(memw_a32(ds, eax + 0x69), 0);     /* mov word [eax+0x69], 0x0 */
    II(0x10149513, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149516, 0x4)   mov(memb_a32(ds, eax + 0x2d), 0);     /* mov byte [eax+0x2d], 0x0 */
    II(0x1014951a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014951c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014951f, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x10149524, 0x5)   calld(0x10076630, -0xd2ef9);          /* call 0x10076630 */
    II(0x10149529, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014952c, 0x4)   mov(memb_a32(ds, eax + 0x5d), 0);     /* mov byte [eax+0x5d], 0x0 */
    II(0x10149530, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149533, 0x4)   mov(memb_a32(ds, eax + 0x2b), 0);     /* mov byte [eax+0x2b], 0x0 */
    II(0x10149537, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014953a, 0x4)   mov(memb_a32(ds, eax + 0x2c), 0);     /* mov byte [eax+0x2c], 0x0 */
    II(0x1014953e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149541, 0x7)   mov(memd_a32(ds, eax + 0x7e), 0);     /* mov dword [eax+0x7e], 0x0 */
    II(0x10149548, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014954b, 0x4)   mov(memb_a32(ds, eax + 0x4f), 0);     /* mov byte [eax+0x4f], 0x0 */
    II(0x1014954f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149552, 0x9)   mov(memw_a32(ds, eax + 0xd9), 0);     /* mov word [eax+0xd9], 0x0 */
    II(0x1014955b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014955e, 0x9)   mov(memw_a32(ds, eax + 0xdb), 0);     /* mov word [eax+0xdb], 0x0 */
    II(0x10149567, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014956a, 0x4)   mov(memb_a32(ds, eax + 0x5c), 0);     /* mov byte [eax+0x5c], 0x0 */
    II(0x1014956e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149571, 0x5)   calld(0x1015b336, 0x11dc0);           /* call 0x1015b336 */
    II(0x10149576, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1014957a, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1014957d, 0x5)   mov(edx, 0x101c81c0);                 /* mov edx, 0x101c81c0 */
    II(0x10149582, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10149584, 0x3)   mov(memd_a32(ss, ebp - 0x38), edx);   /* mov [ebp-0x38], edx */
    II(0x10149587, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1014958a, 0x3)   mov(eax, memd_a32(ds, eax + 0x27));   /* mov eax, [eax+0x27] */
    II(0x1014958d, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x10149590, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10149593, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10149596, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10149599, 0x4)   mov(memw_a32(ds, edx + 0x31), ax);    /* mov [edx+0x31], ax */
    II(0x1014959d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x101495a0, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101495a3, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x101495a5, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101495a7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101495aa, 0x4)   mov(memw_a32(ds, edx + 0x33), ax);    /* mov [edx+0x33], ax */
    II(0x101495ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x101495b1, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101495b4, 0x3)   mov(al, memb_a32(ds, eax + 0x2));     /* mov al, [eax+0x2] */
    II(0x101495b7, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101495b9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101495bc, 0x4)   mov(memw_a32(ds, edx + 0x35), ax);    /* mov [edx+0x35], ax */
    II(0x101495c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x101495c3, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101495c6, 0x3)   mov(al, memb_a32(ds, eax + 0x4));     /* mov al, [eax+0x4] */
    II(0x101495c9, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101495cb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101495ce, 0x4)   mov(memw_a32(ds, edx + 0x37), ax);    /* mov [edx+0x37], ax */
    II(0x101495d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x101495d5, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101495d8, 0x3)   mov(al, memb_a32(ds, eax + 0x6));     /* mov al, [eax+0x6] */
    II(0x101495db, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101495dd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101495e0, 0x4)   mov(memw_a32(ds, edx + 0x39), ax);    /* mov [edx+0x39], ax */
    II(0x101495e4, 0x5)   cmp(memw_a32(ss, ebp - 0xc), 0x28);   /* cmp word [ebp-0xc], 0x28 */
    II(0x101495e9, 0x2)   jnzd(0x10149610, 0x25);               /* jnz 0x10149610 */
    II(0x101495eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101495ee, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x101495f1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101495f6, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101495fc, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca4ef)); /* mov al, [eax+0x101ca4ef] */
    II(0x10149602, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10149604, 0x1)   dec(eax);                             /* dec eax */
    II(0x10149605, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10149607, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10149609, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014960c, 0x4)   add(memw_a32(ds, eax + 0x33), dx);    /* add [eax+0x33], dx */
l_0x10149610:
    II(0x10149610, 0x3)   mov(al, memb_a32(ss, ebp + 0x10));    /* mov al, [ebp+0x10] */
    II(0x10149613, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10149616, 0x3)   mov(memb_a32(ds, edx + 0x29), al);    /* mov [edx+0x29], al */
    II(0x10149619, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014961c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014961e, 0x3)   mov(bl, memb_a32(ds, eax + 0x29));    /* mov bl, [eax+0x29] */
    II(0x10149621, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149624, 0x4)   mov(dx, memw_a32(ds, eax + 0x33));    /* mov dx, [eax+0x33] */
//    II(0x10149628, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014962b, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x1014962d, 0x7)   mov(memw_a32(ds, eax + 0xd5), bx);    /* mov [eax+0xd5], bx */
    II(0x10149634, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149637, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10149639, 0x3)   mov(bl, memb_a32(ds, eax + 0x29));    /* mov bl, [eax+0x29] */
    II(0x1014963c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014963f, 0x4)   mov(dx, memw_a32(ds, eax + 0x35));    /* mov dx, [eax+0x35] */
//    II(0x10149643, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149646, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x10149648, 0x7)   mov(memw_a32(ds, eax + 0xd7), bx);    /* mov [eax+0xd7], bx */
    II(0x1014964f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149652, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x10149657, 0x2)   jnzd(0x10149664, 0xb);                /* jnz 0x10149664 */
    II(0x10149659, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014965c, 0x6)   mov(memw_a32(ds, eax + 0x3b), 0x67);  /* mov word [eax+0x3b], 0x67 */
    II(0x10149662, 0x2)   jmpd(0x10149696, 0x32);               /* jmp 0x10149696 */
l_0x10149664:
    II(0x10149664, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149667, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x1014966c, 0x2)   jnzd(0x10149679, 0xb);                /* jnz 0x10149679 */
    II(0x1014966e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149671, 0x6)   mov(memw_a32(ds, eax + 0x3b), 0x67);  /* mov word [eax+0x3b], 0x67 */
    II(0x10149677, 0x2)   jmpd(0x10149696, 0x1d);               /* jmp 0x10149696 */
l_0x10149679:
    II(0x10149679, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1014967c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1014967f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10149681, 0x3)   mov(dl, memb_a32(ds, eax + 0x1));     /* mov dl, [eax+0x1] */
    II(0x10149684, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149687, 0x7)   add(dx, memw_a32(ds, eax + 0xd5));    /* add dx, [eax+0xd5] */
    II(0x1014968e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149691, 0x1)   dec(edx);                             /* dec edx */
    II(0x10149692, 0x4)   mov(memw_a32(ds, eax + 0x3b), dx);    /* mov [eax+0x3b], dx */
l_0x10149696:
    II(0x10149696, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149699, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014969c, 0x5)   calld(0x10076730, -0xd2f71);          /* call 0x10076730 */
    II(0x101496a1, 0x3)   mov(dl, memb_a32(ds, eax + 0xa));     /* mov dl, [eax+0xa] */
    II(0x101496a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496a7, 0x3)   mov(memb_a32(ds, eax + 0x4d), dl);    /* mov [eax+0x4d], dl */
    II(0x101496aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496ad, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x101496b0, 0x5)   calld(0x10076730, -0xd2f85);          /* call 0x10076730 */
    II(0x101496b5, 0x3)   mov(dl, memb_a32(ds, eax + 0x10));    /* mov dl, [eax+0x10] */
    II(0x101496b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496bb, 0x3)   mov(memb_a32(ds, eax + 0x4e), dl);    /* mov [eax+0x4e], dl */
    II(0x101496be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496c1, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x101496c4, 0x5)   calld(0x10076730, -0xd2f99);          /* call 0x10076730 */
    II(0x101496c9, 0x3)   mov(dl, memb_a32(ds, eax + 0x14));    /* mov dl, [eax+0x14] */
    II(0x101496cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496cf, 0x3)   mov(memb_a32(ds, eax + 0x50), dl);    /* mov [eax+0x50], dl */
    II(0x101496d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496d5, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x101496d8, 0x5)   calld(0x10076730, -0xd2fad);          /* call 0x10076730 */
    II(0x101496dd, 0x3)   mov(dl, memb_a32(ds, eax + 0x16));    /* mov dl, [eax+0x16] */
    II(0x101496e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496e3, 0x3)   mov(memb_a32(ds, eax + 0x51), dl);    /* mov [eax+0x51], dl */
    II(0x101496e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496e9, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x101496ec, 0x5)   calld(0x10076730, -0xd2fc1);          /* call 0x10076730 */
    II(0x101496f1, 0x3)   mov(dl, memb_a32(ds, eax + 0x1b));    /* mov dl, [eax+0x1b] */
    II(0x101496f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496f7, 0x3)   mov(memb_a32(ds, eax + 0x54), dl);    /* mov [eax+0x54], dl */
    II(0x101496fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101496fd, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10149700, 0x5)   calld(0x10076730, -0xd2fd5);          /* call 0x10076730 */
    II(0x10149705, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x10149709, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1014970c, 0x4)   mov(memw_a32(ds, edx + 0x52), ax);    /* mov [edx+0x52], ax */
    II(0x10149710, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149713, 0x4)   mov(memb_a32(ds, eax + 0x60), 0x2);   /* mov byte [eax+0x60], 0x2 */
    II(0x10149717, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014971a, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014971d, 0x5)   calld(0x10076730, -0xd2ff2);          /* call 0x10076730 */
    II(0x10149722, 0x5)   cmp(memw_a32(ds, eax + 0xe), 0);      /* cmp word [eax+0xe], 0x0 */
    II(0x10149727, 0x2)   jzd(0x10149732, 0x9);                 /* jz 0x10149732 */
    II(0x10149729, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014972c, 0x4)   mov(memb_a32(ds, eax + 0x61), 0x2);   /* mov byte [eax+0x61], 0x2 */
    II(0x10149730, 0x2)   jmpd(0x10149739, 0x7);                /* jmp 0x10149739 */
l_0x10149732:
    II(0x10149732, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149735, 0x4)   mov(memb_a32(ds, eax + 0x61), 0);     /* mov byte [eax+0x61], 0x0 */
l_0x10149739:
    II(0x10149739, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014973c, 0x4)   mov(memb_a32(ds, eax + 0x62), 0x2);   /* mov byte [eax+0x62], 0x2 */
    II(0x10149740, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149743, 0x4)   mov(memb_a32(ds, eax + 0x5e), 0);     /* mov byte [eax+0x5e], 0x0 */
    II(0x10149747, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014974a, 0x4)   mov(memb_a32(ds, eax + 0x5f), 0);     /* mov byte [eax+0x5f], 0x0 */
    II(0x1014974e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149751, 0x4)   mov(memb_a32(ds, eax + 0x6b), 0);     /* mov byte [eax+0x6b], 0x0 */
    II(0x10149755, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149758, 0x5)   calld(0x1014f1f2, 0x5a95);            /* call 0x1014f1f2 */
    II(0x1014975d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149760, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800018); /* test dword [eax+0x12], 0x800018 */
    II(0x10149767, 0x2)   jzd(0x10149772, 0x9);                 /* jz 0x10149772 */
    II(0x10149769, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014976c, 0x4)   test(memb_a32(ds, eax + 0x12), 0x1);  /* test byte [eax+0x12], 0x1 */
    II(0x10149770, 0x2)   jzd(0x10149774, 0x2);                 /* jz 0x10149774 */
l_0x10149772:
    II(0x10149772, 0x2)   jmpd(0x10149787, 0x13);               /* jmp 0x10149787 */
l_0x10149774:
    II(0x10149774, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10149777, 0x4)   mov(ax, memw_a32(ds, eax + 0x7c));    /* mov ax, [eax+0x7c] */
    II(0x1014977b, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10149780, 0x5)   cmp(eax, 0xffff);                     /* cmp eax, 0xffff */
    II(0x10149785, 0x2)   jnzd(0x10149789, 0x2);                /* jnz 0x10149789 */
l_0x10149787:
    II(0x10149787, 0x2)   jmpd(0x1014979e, 0x15);               /* jmp 0x1014979e */
l_0x10149789:
    II(0x10149789, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1014978d, 0x5)   calld(0x1014892b, -0xe67);            /* call 0x1014892b */
    II(0x10149792, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x10149795, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10149797, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10149799, 0x5)   calld(0x1014b9c9, 0x222b);            /* call 0x1014b9c9 */
l_0x1014979e:
    II(0x1014979e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101497a1, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x101497a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x101497a7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101497a9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101497aa, 0x1)   popd(edi);                            /* pop edi */
    II(0x101497ab, 0x1)   popd(esi);                            /* pop esi */
    II(0x101497ac, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

