FUNC_BEGIN(0x100ba2c3, 0x2c521c6e5b05c698, 0x20, ({0x68, 0x68, 0, 0, 0, 0xe8, 0x85, 0xba, 0xa, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0xed, 0x1, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x7d, 0x8d, 0x45, 0xf0, 0xe8, 0x4, 0xe2, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x41, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xb5, 0xea, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0xb8, 0x1, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x81, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xcc, 0xe1, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x9, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x7d, 0xea, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x80, 0x1, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x85, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x94, 0xe1, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0xd1, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x45, 0xea, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x48, 0x1, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x89, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x5c, 0xe1, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x99, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xd, 0xea, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x10, 0x1, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x8d, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x24, 0xe1, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x61, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xd5, 0xe9, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0xd8, 0, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x91, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xec, 0xe0, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x29, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x9d, 0xe9, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0xa0, 0, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x95, 0, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0xb4, 0xe0, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0xf1, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x65, 0xe9, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x68, 0, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x99, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x7c, 0xe0, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0xb9, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x2d, 0xe9, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x30, 0, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x9d, 0, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x44, 0xe0, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x81, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xf5, 0xe8, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0xf8, 0xff, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xa1, 0, 0, 0, 0x8d, 0x45, 0xcc, 0xe8, 0xc, 0xe0, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x49, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xbd, 0xe8, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0xc0, 0xff, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xa5, 0, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0xd4, 0xdf, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x11, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x85, 0xe8, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x88, 0xff, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xa9, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x9c, 0xdf, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0xd9, 0xfc, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x4d, 0xe8, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x50, 0xff, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xad, 0, 0, 0, 0x8d, 0x45, 0xc0, 0xe8, 0x64, 0xdf, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0xa1, 0xfc, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x15, 0xe8, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x18, 0xff, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xb1, 0, 0, 0, 0x8d, 0x45, 0xbc, 0xe8, 0x2c, 0xdf, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x69, 0xfc, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0xdd, 0xe7, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0xe0, 0xfe, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xb5, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xf4, 0xde, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x31, 0xfc, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xa5, 0xe7, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0xa8, 0xfe, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xb9, 0, 0, 0, 0x8d, 0x45, 0xb4, 0xe8, 0xbc, 0xde, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0xf9, 0xfb, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x6d, 0xe7, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x70, 0xfe, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xbd, 0, 0, 0, 0x8d, 0x45, 0xb0, 0xe8, 0x84, 0xde, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0xc1, 0xfb, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0x35, 0xe7, 0xfc, 0xff, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x75, 0xf8, 0xe8, 0x38, 0xfe, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xc1, 0, 0, 0, 0x8d, 0x45, 0xac, 0xe8, 0x4c, 0xde, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0xf3, 0xe8, 0x89, 0xfb, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xfd, 0xe6, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100ba2c3, 0x5)   pushd(0x68);                          /* push dword 0x68 */
    II(0x100ba2c8, 0x5)   calld(sys_check_available_stack_size, 0xaba85); /* call 0x10165d52 */
    II(0x100ba2cd, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ba2ce, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ba2cf, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ba2d0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ba2d1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ba2d3, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x100ba2d9, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ba2dc, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100ba2df, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100ba2e2, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba2e6, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba2ea, 0x5)   calld(0x1008a4dc, -0x2fe13);          /* call 0x1008a4dc */
    II(0x100ba2ef, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba2f1, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba2f3, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba2f6, 0x3)   add(edx, 0x7d);                       /* add edx, 0x7d */
    II(0x100ba2f9, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ba2fc, 0x5)   calld(0x100b8505, -0x1dfc);           /* call 0x100b8505 */
    II(0x100ba301, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba303, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba306, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba308, 0x5)   calld(0x100ba24e, -0xbf);             /* call 0x100ba24e */
    II(0x100ba30d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba30f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ba312, 0x5)   calld(0x10088dcc, -0x3154b);          /* call 0x10088dcc */
    II(0x100ba317, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba31b, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba31f, 0x5)   calld(0x1008a4dc, -0x2fe48);          /* call 0x1008a4dc */
    II(0x100ba324, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba326, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba328, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba32b, 0x6)   add(edx, 0x81);                       /* add edx, 0x81 */
    II(0x100ba331, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ba334, 0x5)   calld(0x100b8505, -0x1e34);           /* call 0x100b8505 */
    II(0x100ba339, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba33b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba33e, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba340, 0x5)   calld(0x100ba24e, -0xf7);             /* call 0x100ba24e */
    II(0x100ba345, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba347, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ba34a, 0x5)   calld(0x10088dcc, -0x31583);          /* call 0x10088dcc */
    II(0x100ba34f, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba353, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba357, 0x5)   calld(0x1008a4dc, -0x2fe80);          /* call 0x1008a4dc */
    II(0x100ba35c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba35e, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba360, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba363, 0x6)   add(edx, 0x85);                       /* add edx, 0x85 */
    II(0x100ba369, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ba36c, 0x5)   calld(0x100b8505, -0x1e6c);           /* call 0x100b8505 */
    II(0x100ba371, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba373, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba376, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba378, 0x5)   calld(0x100ba24e, -0x12f);            /* call 0x100ba24e */
    II(0x100ba37d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba37f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ba382, 0x5)   calld(0x10088dcc, -0x315bb);          /* call 0x10088dcc */
    II(0x100ba387, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba38b, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba38f, 0x5)   calld(0x1008a4dc, -0x2feb8);          /* call 0x1008a4dc */
    II(0x100ba394, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba396, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba398, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba39b, 0x6)   add(edx, 0x89);                       /* add edx, 0x89 */
    II(0x100ba3a1, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100ba3a4, 0x5)   calld(0x100b8505, -0x1ea4);           /* call 0x100b8505 */
    II(0x100ba3a9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba3ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba3ae, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba3b0, 0x5)   calld(0x100ba24e, -0x167);            /* call 0x100ba24e */
    II(0x100ba3b5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba3b7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100ba3ba, 0x5)   calld(0x10088dcc, -0x315f3);          /* call 0x10088dcc */
    II(0x100ba3bf, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba3c3, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba3c7, 0x5)   calld(0x1008a4dc, -0x2fef0);          /* call 0x1008a4dc */
    II(0x100ba3cc, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba3ce, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba3d0, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba3d3, 0x6)   add(edx, 0x8d);                       /* add edx, 0x8d */
    II(0x100ba3d9, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100ba3dc, 0x5)   calld(0x100b8505, -0x1edc);           /* call 0x100b8505 */
    II(0x100ba3e1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba3e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba3e6, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba3e8, 0x5)   calld(0x100ba24e, -0x19f);            /* call 0x100ba24e */
    II(0x100ba3ed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba3ef, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100ba3f2, 0x5)   calld(0x10088dcc, -0x3162b);          /* call 0x10088dcc */
    II(0x100ba3f7, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba3fb, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba3ff, 0x5)   calld(0x1008a4dc, -0x2ff28);          /* call 0x1008a4dc */
    II(0x100ba404, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba406, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba408, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba40b, 0x6)   add(edx, 0x91);                       /* add edx, 0x91 */
    II(0x100ba411, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100ba414, 0x5)   calld(0x100b8505, -0x1f14);           /* call 0x100b8505 */
    II(0x100ba419, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba41b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba41e, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba420, 0x5)   calld(0x100ba24e, -0x1d7);            /* call 0x100ba24e */
    II(0x100ba425, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba427, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100ba42a, 0x5)   calld(0x10088dcc, -0x31663);          /* call 0x10088dcc */
    II(0x100ba42f, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba433, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba437, 0x5)   calld(0x1008a4dc, -0x2ff60);          /* call 0x1008a4dc */
    II(0x100ba43c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba43e, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba440, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba443, 0x6)   add(edx, 0x95);                       /* add edx, 0x95 */
    II(0x100ba449, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ba44c, 0x5)   calld(0x100b8505, -0x1f4c);           /* call 0x100b8505 */
    II(0x100ba451, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba453, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba456, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba458, 0x5)   calld(0x100ba24e, -0x20f);            /* call 0x100ba24e */
    II(0x100ba45d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba45f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ba462, 0x5)   calld(0x10088dcc, -0x3169b);          /* call 0x10088dcc */
    II(0x100ba467, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba46b, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba46f, 0x5)   calld(0x1008a4dc, -0x2ff98);          /* call 0x1008a4dc */
    II(0x100ba474, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba476, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba478, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba47b, 0x6)   add(edx, 0x99);                       /* add edx, 0x99 */
    II(0x100ba481, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100ba484, 0x5)   calld(0x100b8505, -0x1f84);           /* call 0x100b8505 */
    II(0x100ba489, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba48b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba48e, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba490, 0x5)   calld(0x100ba24e, -0x247);            /* call 0x100ba24e */
    II(0x100ba495, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba497, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100ba49a, 0x5)   calld(0x10088dcc, -0x316d3);          /* call 0x10088dcc */
    II(0x100ba49f, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba4a3, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba4a7, 0x5)   calld(0x1008a4dc, -0x2ffd0);          /* call 0x1008a4dc */
    II(0x100ba4ac, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba4ae, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba4b0, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba4b3, 0x6)   add(edx, 0x9d);                       /* add edx, 0x9d */
    II(0x100ba4b9, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100ba4bc, 0x5)   calld(0x100b8505, -0x1fbc);           /* call 0x100b8505 */
    II(0x100ba4c1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba4c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba4c6, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba4c8, 0x5)   calld(0x100ba24e, -0x27f);            /* call 0x100ba24e */
    II(0x100ba4cd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba4cf, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100ba4d2, 0x5)   calld(0x10088dcc, -0x3170b);          /* call 0x10088dcc */
    II(0x100ba4d7, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba4db, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba4df, 0x5)   calld(0x1008a4dc, -0x30008);          /* call 0x1008a4dc */
    II(0x100ba4e4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba4e6, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba4e8, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba4eb, 0x6)   add(edx, 0xa1);                       /* add edx, 0xa1 */
    II(0x100ba4f1, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100ba4f4, 0x5)   calld(0x100b8505, -0x1ff4);           /* call 0x100b8505 */
    II(0x100ba4f9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba4fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba4fe, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba500, 0x5)   calld(0x100ba24e, -0x2b7);            /* call 0x100ba24e */
    II(0x100ba505, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba507, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100ba50a, 0x5)   calld(0x10088dcc, -0x31743);          /* call 0x10088dcc */
    II(0x100ba50f, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba513, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba517, 0x5)   calld(0x1008a4dc, -0x30040);          /* call 0x1008a4dc */
    II(0x100ba51c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba51e, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba520, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba523, 0x6)   add(edx, 0xa5);                       /* add edx, 0xa5 */
    II(0x100ba529, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100ba52c, 0x5)   calld(0x100b8505, -0x202c);           /* call 0x100b8505 */
    II(0x100ba531, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba533, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba536, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba538, 0x5)   calld(0x100ba24e, -0x2ef);            /* call 0x100ba24e */
    II(0x100ba53d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba53f, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100ba542, 0x5)   calld(0x10088dcc, -0x3177b);          /* call 0x10088dcc */
    II(0x100ba547, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba54b, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba54f, 0x5)   calld(0x1008a4dc, -0x30078);          /* call 0x1008a4dc */
    II(0x100ba554, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba556, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba558, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba55b, 0x6)   add(edx, 0xa9);                       /* add edx, 0xa9 */
    II(0x100ba561, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ba564, 0x5)   calld(0x100b8505, -0x2064);           /* call 0x100b8505 */
    II(0x100ba569, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba56b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba56e, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba570, 0x5)   calld(0x100ba24e, -0x327);            /* call 0x100ba24e */
    II(0x100ba575, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba577, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ba57a, 0x5)   calld(0x10088dcc, -0x317b3);          /* call 0x10088dcc */
    II(0x100ba57f, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba583, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba587, 0x5)   calld(0x1008a4dc, -0x300b0);          /* call 0x1008a4dc */
    II(0x100ba58c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba58e, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba590, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba593, 0x6)   add(edx, 0xad);                       /* add edx, 0xad */
    II(0x100ba599, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100ba59c, 0x5)   calld(0x100b8505, -0x209c);           /* call 0x100b8505 */
    II(0x100ba5a1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba5a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba5a6, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba5a8, 0x5)   calld(0x100ba24e, -0x35f);            /* call 0x100ba24e */
    II(0x100ba5ad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba5af, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100ba5b2, 0x5)   calld(0x10088dcc, -0x317eb);          /* call 0x10088dcc */
    II(0x100ba5b7, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba5bb, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba5bf, 0x5)   calld(0x1008a4dc, -0x300e8);          /* call 0x1008a4dc */
    II(0x100ba5c4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba5c6, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba5c8, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba5cb, 0x6)   add(edx, 0xb1);                       /* add edx, 0xb1 */
    II(0x100ba5d1, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ba5d4, 0x5)   calld(0x100b8505, -0x20d4);           /* call 0x100b8505 */
    II(0x100ba5d9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba5db, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba5de, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba5e0, 0x5)   calld(0x100ba24e, -0x397);            /* call 0x100ba24e */
    II(0x100ba5e5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba5e7, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ba5ea, 0x5)   calld(0x10088dcc, -0x31823);          /* call 0x10088dcc */
    II(0x100ba5ef, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba5f3, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba5f7, 0x5)   calld(0x1008a4dc, -0x30120);          /* call 0x1008a4dc */
    II(0x100ba5fc, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba5fe, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba600, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba603, 0x6)   add(edx, 0xb5);                       /* add edx, 0xb5 */
    II(0x100ba609, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100ba60c, 0x5)   calld(0x100b8505, -0x210c);           /* call 0x100b8505 */
    II(0x100ba611, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba613, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba616, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba618, 0x5)   calld(0x100ba24e, -0x3cf);            /* call 0x100ba24e */
    II(0x100ba61d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba61f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100ba622, 0x5)   calld(0x10088dcc, -0x3185b);          /* call 0x10088dcc */
    II(0x100ba627, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba62b, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba62f, 0x5)   calld(0x1008a4dc, -0x30158);          /* call 0x1008a4dc */
    II(0x100ba634, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba636, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba638, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba63b, 0x6)   add(edx, 0xb9);                       /* add edx, 0xb9 */
    II(0x100ba641, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100ba644, 0x5)   calld(0x100b8505, -0x2144);           /* call 0x100b8505 */
    II(0x100ba649, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba64b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba64e, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba650, 0x5)   calld(0x100ba24e, -0x407);            /* call 0x100ba24e */
    II(0x100ba655, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba657, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100ba65a, 0x5)   calld(0x10088dcc, -0x31893);          /* call 0x10088dcc */
    II(0x100ba65f, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba663, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba667, 0x5)   calld(0x1008a4dc, -0x30190);          /* call 0x1008a4dc */
    II(0x100ba66c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba66e, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba670, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba673, 0x6)   add(edx, 0xbd);                       /* add edx, 0xbd */
    II(0x100ba679, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100ba67c, 0x5)   calld(0x100b8505, -0x217c);           /* call 0x100b8505 */
    II(0x100ba681, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba683, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba686, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba688, 0x5)   calld(0x100ba24e, -0x43f);            /* call 0x100ba24e */
    II(0x100ba68d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba68f, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100ba692, 0x5)   calld(0x10088dcc, -0x318cb);          /* call 0x10088dcc */
    II(0x100ba697, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100ba69b, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x8));  /* movsx esi, word [ebp-0x8] */
    II(0x100ba69f, 0x5)   calld(0x1008a4dc, -0x301c8);          /* call 0x1008a4dc */
    II(0x100ba6a4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ba6a6, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ba6a8, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ba6ab, 0x6)   add(edx, 0xc1);                       /* add edx, 0xc1 */
    II(0x100ba6b1, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100ba6b4, 0x5)   calld(0x100b8505, -0x21b4);           /* call 0x100b8505 */
    II(0x100ba6b9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba6bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ba6be, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100ba6c0, 0x5)   calld(0x100ba24e, -0x477);            /* call 0x100ba24e */
    II(0x100ba6c5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba6c7, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100ba6ca, 0x5)   calld(0x10088dcc, -0x31903);          /* call 0x10088dcc */
    II(0x100ba6cf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ba6d1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ba6d2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ba6d3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ba6d4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ba6d5, 0x1)   retd();                               /* ret */
FUNC_END

