FUNC_BEGIN(0x1007b032, 0x38ad22f0fdae8e60, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x16, 0xad, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0xd9, 0xb2, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x4f, 0xb4, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x40, 0xff, 0, 0, 0x89, 0x45, 0xf0, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x77, 0xbb, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe6, 0xfc, 0xb, 0, 0x84, 0xc0, 0x74, 0x3a, 0x8d, 0x45, 0xec, 0xe8, 0x3d, 0xb3, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0xe8, 0x63, 0xb7, 0, 0, 0x84, 0xc0, 0x74, 0x22, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x78, 0xf1, 0, 0, 0xe8, 0xbb, 0xf2, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x15, 0xb3, 0xff, 0xff, 0xe8, 0xb6, 0xfe, 0xff, 0xff, 0x1, 0x45, 0xf4, 0xeb, 0xb0, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x93, 0xae, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x87, 0xae, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1007b032, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1007b037, 0x5)   calld(sys_check_available_stack_size, 0xead16); /* call 0x10165d52 */
    II(0x1007b03c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007b03d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007b03e, 0x1)   pushd(edx);                           /* push edx */
    II(0x1007b03f, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007b040, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007b041, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007b042, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007b044, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1007b04a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1007b04d, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
//    II(0x1007b054, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b057, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x1007b05a, 0x5)   calld(0x10076338, -0x4d27);           /* call 0x10076338 */
    II(0x1007b05f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007b061, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007b064, 0x5)   calld(0x100764b8, -0x4bb1);           /* call 0x100764b8 */
    II(0x1007b069, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b06c, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1007b06f, 0x5)   calld(0x1008afb4, 0xff40);            /* call 0x1008afb4 */
    II(0x1007b074, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007b077, 0x2)   jmpd(0x1007b081, 0x8);                /* jmp 0x1007b081 */
l_0x1007b079:
    II(0x1007b079, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007b07c, 0x5)   calld(0x10076bf8, -0x4489);           /* call 0x10076bf8 */
l_0x1007b081:
    II(0x1007b081, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007b083, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007b086, 0x5)   calld(0x1013ad71, 0xbfce6);           /* call 0x1013ad71 */
    II(0x1007b08b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007b08d, 0x2)   jzd(0x1007b0c9, 0x3a);                /* jz 0x1007b0c9 */
    II(0x1007b08f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007b092, 0x5)   calld(0x100763d4, -0x4cc3);           /* call 0x100763d4 */
    II(0x1007b097, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007b099, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007b09c, 0x5)   calld(0x10086804, 0xb763);            /* call 0x10086804 */
    II(0x1007b0a1, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007b0a3, 0x2)   jzd(0x1007b0c7, 0x22);                /* jz 0x1007b0c7 */
    II(0x1007b0a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b0a8, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1007b0ab, 0x5)   calld(0x1008a228, 0xf178);            /* call 0x1008a228 */
    II(0x1007b0b0, 0x5)   calld(0x1008a370, 0xf2bb);            /* call 0x1008a370 */
    II(0x1007b0b5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007b0b7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007b0ba, 0x5)   calld(0x100763d4, -0x4ceb);           /* call 0x100763d4 */
    II(0x1007b0bf, 0x5)   calld(0x1007af7a, -0x14a);            /* call 0x1007af7a */
    II(0x1007b0c4, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
l_0x1007b0c7:
    II(0x1007b0c7, 0x2)   jmpd(0x1007b079, -0x50);              /* jmp 0x1007b079 */
l_0x1007b0c9:
    II(0x1007b0c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007b0cc, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1007b0cf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007b0d1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007b0d4, 0x5)   calld(0x10075f6c, -0x516d);           /* call 0x10075f6c */
    II(0x1007b0d9, 0x2)   jmpd(0x1007b0e5, 0xa);                /* jmp 0x1007b0e5 */
//  II(0x1007b0db, 0xa)   /* Недостижимый код. */
l_0x1007b0e5:
    II(0x1007b0e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007b0e8, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007b0ea, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007b0eb, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007b0ec, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007b0ed, 0x1)   popd(edx);                            /* pop edx */
    II(0x1007b0ee, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007b0ef, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1007b0f0, 0x1)   retd();                               /* ret */
FUNC_END

