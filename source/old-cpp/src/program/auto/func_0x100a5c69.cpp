FUNC_BEGIN(0x100a5c69, 0x56f78230ae449d95, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xdf, 0, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xaa, 0x6, 0xfd, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x1e, 0x8, 0xfd, 0xff, 0xc7, 0x45, 0xf0, 0xf6, 0xff, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x4d, 0xf, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xbc, 0x50, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0x6b, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0xdb, 0x6, 0xfd, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0x1a, 0x8d, 0x45, 0xf4, 0xe8, 0xc6, 0x6, 0xfd, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x80, 0xb8, 0xd5, 0x81, 0x1c, 0x10, 0x1, 0x74, 0x2, 0xeb, 0x35, 0x8d, 0x45, 0xf4, 0xe8, 0xaa, 0x6, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x1, 0x45, 0xf0, 0x8d, 0x45, 0xf4, 0xe8, 0x9b, 0x6, 0xfd, 0xff, 0x66, 0x83, 0x78, 0x8, 0x3d, 0x75, 0x4, 0x83, 0x45, 0xf0, 0xf1, 0x8d, 0x45, 0xf4, 0xe8, 0x88, 0x6, 0xfd, 0xff, 0x66, 0x83, 0x78, 0x8, 0x31, 0x75, 0x4, 0x83, 0x45, 0xf0, 0xe2, 0xe9, 0x7b, 0xff, 0xff, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x6, 0x6, 0xfd, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xfe, 0x6, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xb0, 0xe, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x1f, 0x50, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0x93, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x3e, 0x6, 0xfd, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0xf, 0x85, 0x75, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x20, 0x6, 0xfd, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x75, 0xc0, 0xfc, 0xff, 0x29, 0x45, 0xf0, 0x8d, 0x45, 0xf4, 0xe8, 0xa, 0x6, 0xfd, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x80, 0xb8, 0xd5, 0x81, 0x1c, 0x10, 0x1, 0x75, 0x40, 0x8d, 0x45, 0xf4, 0xe8, 0xf0, 0x5, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x1, 0x45, 0xf0, 0x8d, 0x45, 0xf4, 0xe8, 0xe1, 0x5, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0xd7, 0x5, 0xfd, 0xff, 0xe8, 0x6e, 0x4, 0xfd, 0xff, 0x66, 0x8b, 0x52, 0x52, 0x66, 0x3b, 0x50, 0x19, 0x75, 0x10, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x86, 0x1, 0xfd, 0xff, 0xeb, 0x33, 0xe9, 0x53, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x7d, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x5d, 0x1, 0xfd, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x51, 0x1, 0xfd, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a5c69, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100a5c6e, 0x5)   calld(sys_check_available_stack_size, 0xc00df); /* call 0x10165d52 */
    II(0x100a5c73, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a5c74, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a5c75, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a5c76, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a5c77, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a5c78, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a5c79, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a5c7b, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100a5c81, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a5c84, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100a5c89, 0x5)   calld(0x10076338, -0x2f956);          /* call 0x10076338 */
    II(0x100a5c8e, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100a5c91, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a5c93, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a5c95, 0x5)   calld(0x100764b8, -0x2f7e2);          /* call 0x100764b8 */
    II(0x100a5c9a, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0xfffffff6); /* mov dword [ebp-0x10], 0xfffffff6 */
    II(0x100a5ca1, 0x2)   jmpd(0x100a5cab, 0x8);                /* jmp 0x100a5cab */
l_0x100a5ca3:
    II(0x100a5ca3, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5ca6, 0x5)   calld(0x10076bf8, -0x2f0b3);          /* call 0x10076bf8 */
l_0x100a5cab:
    II(0x100a5cab, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a5cad, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5cb0, 0x5)   calld(0x1013ad71, 0x950bc);           /* call 0x1013ad71 */
    II(0x100a5cb5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a5cb7, 0x6)   jzd(0x100a5d28, 0x6b);                /* jz dword 0x100a5d28 */
    II(0x100a5cbd, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5cc0, 0x5)   calld(0x100763a0, -0x2f925);          /* call 0x100763a0 */
    II(0x100a5cc5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a5cc7, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100a5cca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100a5cce, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a5cd0, 0x2)   jnzd(0x100a5cec, 0x1a);               /* jnz 0x100a5cec */
    II(0x100a5cd2, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5cd5, 0x5)   calld(0x100763a0, -0x2f93a);          /* call 0x100763a0 */
    II(0x100a5cda, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a5cdd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a5ce0, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100a5ce3, 0x7)   cmp(memb_a32(ds, eax + 0x101c81d5), 0x1); /* cmp byte [eax+0x101c81d5], 0x1 */
    II(0x100a5cea, 0x2)   jzd(0x100a5cee, 0x2);                 /* jz 0x100a5cee */
l_0x100a5cec:
    II(0x100a5cec, 0x2)   jmpd(0x100a5d23, 0x35);               /* jmp 0x100a5d23 */
l_0x100a5cee:
    II(0x100a5cee, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5cf1, 0x5)   calld(0x100763a0, -0x2f956);          /* call 0x100763a0 */
    II(0x100a5cf6, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x100a5cfa, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100a5cfd, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5d00, 0x5)   calld(0x100763a0, -0x2f965);          /* call 0x100763a0 */
    II(0x100a5d05, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3d);   /* cmp word [eax+0x8], 0x3d */
    II(0x100a5d0a, 0x2)   jnzd(0x100a5d10, 0x4);                /* jnz 0x100a5d10 */
    II(0x100a5d0c, 0x4)   add(memd_a32(ss, ebp - 0x10), -0xf /* 0xf1 */); /* add dword [ebp-0x10], 0xf1 */
l_0x100a5d10:
    II(0x100a5d10, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5d13, 0x5)   calld(0x100763a0, -0x2f978);          /* call 0x100763a0 */
    II(0x100a5d18, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x100a5d1d, 0x2)   jnzd(0x100a5d23, 0x4);                /* jnz 0x100a5d23 */
    II(0x100a5d1f, 0x4)   add(memd_a32(ss, ebp - 0x10), -0x1e /* 0xe2 */); /* add dword [ebp-0x10], 0xe2 */
l_0x100a5d23:
    II(0x100a5d23, 0x5)   jmpd(0x100a5ca3, -0x85);              /* jmp 0x100a5ca3 */
l_0x100a5d28:
    II(0x100a5d28, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100a5d2d, 0x5)   calld(0x10076338, -0x2f9fa);          /* call 0x10076338 */
    II(0x100a5d32, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100a5d35, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a5d37, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a5d39, 0x5)   calld(0x1007643c, -0x2f902);          /* call 0x1007643c */
    II(0x100a5d3e, 0x2)   jmpd(0x100a5d48, 0x8);                /* jmp 0x100a5d48 */
l_0x100a5d40:
    II(0x100a5d40, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5d43, 0x5)   calld(0x10076bf8, -0x2f150);          /* call 0x10076bf8 */
l_0x100a5d48:
    II(0x100a5d48, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a5d4a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5d4d, 0x5)   calld(0x1013ad71, 0x9501f);           /* call 0x1013ad71 */
    II(0x100a5d52, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a5d54, 0x6)   jzd(0x100a5ded, 0x93);                /* jz dword 0x100a5ded */
    II(0x100a5d5a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5d5d, 0x5)   calld(0x100763a0, -0x2f9c2);          /* call 0x100763a0 */
    II(0x100a5d62, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a5d64, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100a5d67, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100a5d6b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a5d6d, 0x6)   jnzd(0x100a5de8, 0x75);               /* jnz dword 0x100a5de8 */
    II(0x100a5d73, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100a5d78, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5d7b, 0x5)   calld(0x100763a0, -0x2f9e0);          /* call 0x100763a0 */
    II(0x100a5d80, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a5d83, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a5d86, 0x5)   calld(0x10071e00, -0x33f8b);          /* call 0x10071e00 */
    II(0x100a5d8b, 0x3)   sub(memd_a32(ss, ebp - 0x10), eax);   /* sub [ebp-0x10], eax */
    II(0x100a5d8e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5d91, 0x5)   calld(0x100763a0, -0x2f9f6);          /* call 0x100763a0 */
    II(0x100a5d96, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a5d99, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a5d9c, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100a5d9f, 0x7)   cmp(memb_a32(ds, eax + 0x101c81d5), 0x1); /* cmp byte [eax+0x101c81d5], 0x1 */
    II(0x100a5da6, 0x2)   jnzd(0x100a5de8, 0x40);               /* jnz 0x100a5de8 */
    II(0x100a5da8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5dab, 0x5)   calld(0x100763a0, -0x2fa10);          /* call 0x100763a0 */
    II(0x100a5db0, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x100a5db4, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100a5db7, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5dba, 0x5)   calld(0x100763a0, -0x2fa1f);          /* call 0x100763a0 */
    II(0x100a5dbf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a5dc1, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5dc4, 0x5)   calld(0x100763a0, -0x2fa29);          /* call 0x100763a0 */
    II(0x100a5dc9, 0x5)   calld(0x1007623c, -0x2fb92);          /* call 0x1007623c */
    II(0x100a5dce, 0x4)   mov(dx, memw_a32(ds, edx + 0x52));    /* mov dx, [edx+0x52] */
    II(0x100a5dd2, 0x4)   cmp(dx, memw_a32(ds, eax + 0x19));    /* cmp dx, [eax+0x19] */
    II(0x100a5dd6, 0x2)   jnzd(0x100a5de8, 0x10);               /* jnz 0x100a5de8 */
    II(0x100a5dd8, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100a5ddc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a5dde, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5de1, 0x5)   calld(0x10075f6c, -0x2fe7a);          /* call 0x10075f6c */
    II(0x100a5de6, 0x2)   jmpd(0x100a5e1b, 0x33);               /* jmp 0x100a5e1b */
l_0x100a5de8:
    II(0x100a5de8, 0x5)   jmpd(0x100a5d40, -0xad);              /* jmp 0x100a5d40 */
l_0x100a5ded:
    II(0x100a5ded, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100a5df1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a5df3, 0x2)   jged(0x100a5dfb, 0x6);                /* jge 0x100a5dfb */
    II(0x100a5df5, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x100a5df9, 0x2)   jmpd(0x100a5dff, 0x4);                /* jmp 0x100a5dff */
l_0x100a5dfb:
    II(0x100a5dfb, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x100a5dff:
    II(0x100a5dff, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100a5e02, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x100a5e05, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a5e07, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a5e0a, 0x5)   calld(0x10075f6c, -0x2fea3);          /* call 0x10075f6c */
    II(0x100a5e0f, 0x2)   jmpd(0x100a5e1b, 0xa);                /* jmp 0x100a5e1b */
//  II(0x100a5e11, 0xa)   /* Недостижимый код. */
l_0x100a5e1b:
    II(0x100a5e1b, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100a5e1e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a5e20, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a5e21, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a5e22, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a5e23, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a5e24, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a5e25, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a5e26, 0x1)   retd();                               /* ret */
FUNC_END

