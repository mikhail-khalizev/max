FUNC_BEGIN(0x100fb576, 0xa75dedd678880f96, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0xd2, 0xa7, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0xc6, 0x5, 0xb0, 0x39, 0x1c, 0x10, 0, 0xb8, 0x36, 0, 0, 0, 0xe8, 0x3d, 0xaa, 0xf7, 0xff, 0x89, 0xc2, 0xbb, 0x3, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0xd8, 0xba, 0x4, 0, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xd6, 0x1b, 0x4, 0, 0xe8, 0x11, 0x8f, 0x3, 0, 0xb8, 0xbe, 0x6, 0, 0, 0xe8, 0x10, 0xd5, 0xfe, 0xff, 0xe8, 0x9f, 0xf4, 0x5, 0, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x5d, 0x7d, 0x28, 0xf, 0xbf, 0x55, 0xfc, 0x6b, 0xd2, 0x2b, 0xb8, 0xc8, 0x94, 0x1c, 0x10, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0xbb, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xd5, 0xda, 0xfe, 0xff, 0xe8, 0xd6, 0xf1, 0xfe, 0xff, 0xeb, 0xc9, 0xc7, 0x45, 0xfc, 0x5, 0, 0, 0, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0xb, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x1, 0xaa, 0x3, 0, 0xeb, 0xeb, 0xc7, 0x45, 0xfc, 0x4, 0, 0, 0, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0xd, 0xf, 0xbf, 0x45, 0xfc, 0xc6, 0x80, 0x34, 0x39, 0x1c, 0x10, 0x1, 0xeb, 0xe9, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x18, 0x73, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0xe, 0xc6, 0x80, 0x57, 0x87, 0x1b, 0x10, 0, 0xeb, 0xe1, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0xe, 0x31, 0xc0, 0xe8, 0xf3, 0xd8, 0x7, 0, 0xe8, 0x35, 0xa8, 0x6, 0, 0xeb, 0x16, 0x31, 0xc0, 0xe8, 0xe5, 0xd8, 0x7, 0, 0xa3, 0x28, 0x56, 0x1c, 0x10, 0xa1, 0x28, 0x56, 0x1c, 0x10, 0xe8, 0x1d, 0xa8, 0x6, 0, 0xc7, 0x5, 0xc8, 0x38, 0x1c, 0x10, 0xff, 0, 0, 0, 0xc6, 0x5, 0x70, 0x39, 0x1c, 0x10, 0, 0xc6, 0x5, 0x88, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0x8c, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0x8a, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0x89, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0x8d, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0x8e, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0xcc, 0x37, 0x1c, 0x10, 0, 0xc6, 0x5, 0xcd, 0x37, 0x1c, 0x10, 0, 0xc6, 0x5, 0xce, 0x37, 0x1c, 0x10, 0, 0xc6, 0x5, 0xcf, 0x37, 0x1c, 0x10, 0, 0xc6, 0x5, 0xcb, 0x37, 0x1c, 0x10, 0, 0xc6, 0x5, 0xd0, 0x37, 0x1c, 0x10, 0, 0xc6, 0x5, 0xd1, 0x37, 0x1c, 0x10, 0, 0xc6, 0x5, 0x8b, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0x8f, 0x38, 0x1c, 0x10, 0x1, 0xc6, 0x5, 0xd2, 0x37, 0x1c, 0x10, 0, 0xc6, 0x5, 0x90, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0x84, 0x39, 0x1c, 0x10, 0, 0xc6, 0x5, 0xd3, 0x37, 0x1c, 0x10, 0x1, 0xc6, 0x5, 0xa2, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0xa3, 0x38, 0x1c, 0x10, 0, 0xc6, 0x5, 0x1d, 0x39, 0x1c, 0x10, 0, 0xc6, 0x5, 0x11, 0x39, 0x1c, 0x10, 0, 0xc6, 0x5, 0x13, 0x39, 0x1c, 0x10, 0, 0xc6, 0x5, 0x10, 0x39, 0x1c, 0x10, 0, 0xc6, 0x5, 0xd4, 0x37, 0x1c, 0x10, 0, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x69, 0xa8, 0xf7, 0xff, 0xa2, 0x20, 0x39, 0x1c, 0x10, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x5a, 0xa8, 0xf7, 0xff, 0xa2, 0x15, 0x39, 0x1c, 0x10, 0xb8, 0x49, 0, 0, 0, 0xe8, 0x4b, 0xa8, 0xf7, 0xff, 0xa2, 0xc9, 0x37, 0x1c, 0x10, 0xb8, 0x55, 0, 0, 0, 0xe8, 0x3c, 0xa8, 0xf7, 0xff, 0xa2, 0xca, 0x37, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0, 0x39, 0x1c, 0x10, 0, 0, 0xc7, 0x5, 0x4, 0x39, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0xdc, 0x37, 0x1c, 0x10, 0x1, 0, 0, 0, 0x66, 0xc7, 0x5, 0xe2, 0x38, 0x1c, 0x10, 0, 0, 0x66, 0xc7, 0x5, 0xe4, 0x38, 0x1c, 0x10, 0, 0, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x50, 0xae, 0xf7, 0xff, 0xc6, 0x5, 0xe4, 0x37, 0x1c, 0x10, 0, 0xc7, 0x5, 0xac, 0x39, 0x1c, 0x10, 0, 0, 0, 0, 0x66, 0xc7, 0x5, 0x62, 0x39, 0x1c, 0x10, 0, 0, 0x66, 0xc7, 0x5, 0xba, 0x38, 0x1c, 0x10, 0xff, 0xff, 0x66, 0xa1, 0xba, 0x38, 0x1c, 0x10, 0x66, 0xa3, 0xb8, 0x38, 0x1c, 0x10, 0xb8, 0x24, 0x39, 0x1c, 0x10, 0xe8, 0xdb, 0xee, 0x3, 0, 0x66, 0xc7, 0x5, 0x20, 0x71, 0x1c, 0x10, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100fb576, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100fb57b, 0x5)   calld(sys_check_available_stack_size, 0x6a7d2); /* call 0x10165d52 */
    II(0x100fb580, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100fb581, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100fb582, 0x1)   pushd(edx);                           /* push edx */
    II(0x100fb583, 0x1)   pushd(esi);                           /* push esi */
    II(0x100fb584, 0x1)   pushd(edi);                           /* push edi */
    II(0x100fb585, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100fb586, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100fb588, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x100fb58e, 0x7)   mov(memb_a32(ds, 0x101c39b0), 0);     /* mov byte [0x101c39b0], 0x0 */
    II(0x100fb595, 0x5)   mov(eax, 0x36);                       /* mov eax, 0x36 */
    II(0x100fb59a, 0x5)   calld(0x10075fdc, -0x855c3);          /* call 0x10075fdc */
    II(0x100fb59f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fb5a1, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
//    II(0x100fb5a6, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fb5a8, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fb5ab, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100fb5ad, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100fb5b0, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x100fb5b5, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100fb5ba, 0x5)   calld(0x1013d195, 0x41bd6);           /* call 0x1013d195 */
    II(0x100fb5bf, 0x5)   calld(0x101344d5, 0x38f11);           /* call 0x101344d5 */
    II(0x100fb5c4, 0x5)   mov(eax, 0x6be);                      /* mov eax, 0x6be */
    II(0x100fb5c9, 0x5)   calld(0x100e8ade, -0x12af0);          /* call 0x100e8ade */
    II(0x100fb5ce, 0x5)   calld(0x1015aa72, 0x5f49f);           /* call 0x1015aa72 */
    II(0x100fb5d3, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
    II(0x100fb5da, 0x2)   jmpd(0x100fb5e2, 0x6);                /* jmp 0x100fb5e2 */
l_0x100fb5dc:
    II(0x100fb5dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fb5df, 0x3)   inc(memd_a32(ss, ebp - 0x4));         /* inc dword [ebp-0x4] */
l_0x100fb5e2:
    II(0x100fb5e2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb5e6, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x100fb5e9, 0x2)   jged(0x100fb613, 0x28);               /* jge 0x100fb613 */
    II(0x100fb5eb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fb5ef, 0x3)   imul(edx, edx, 0x2b);                 /* imul edx, edx, 0x2b */
    II(0x100fb5f2, 0x5)   mov(eax, 0x101c94c8);                 /* mov eax, 0x101c94c8 */
    II(0x100fb5f7, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fb5f9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb5fd, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100fb600, 0x5)   mov(ebx, 0x101c81c0);                 /* mov ebx, 0x101c81c0 */
    II(0x100fb605, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100fb607, 0x5)   calld(0x100e90e1, -0x1252b);          /* call 0x100e90e1 */
    II(0x100fb60c, 0x5)   calld(0x100ea7e7, -0x10e2a);          /* call 0x100ea7e7 */
    II(0x100fb611, 0x2)   jmpd(0x100fb5dc, -0x37);              /* jmp 0x100fb5dc */
l_0x100fb613:
    II(0x100fb613, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x5);    /* mov dword [ebp-0x4], 0x5 */
l_0x100fb61a:
    II(0x100fb61a, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x100fb61d, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100fb622, 0x2)   jzd(0x100fb62f, 0xb);                 /* jz 0x100fb62f */
    II(0x100fb624, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb628, 0x5)   calld(0x1013602e, 0x3aa01);           /* call 0x1013602e */
    II(0x100fb62d, 0x2)   jmpd(0x100fb61a, -0x15);              /* jmp 0x100fb61a */
l_0x100fb62f:
    II(0x100fb62f, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x4);    /* mov dword [ebp-0x4], 0x4 */
l_0x100fb636:
    II(0x100fb636, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x100fb639, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100fb63e, 0x2)   jzd(0x100fb64d, 0xd);                 /* jz 0x100fb64d */
    II(0x100fb640, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb644, 0x7)   mov(memb_a32(ds, eax + 0x101c3934), 0x1); /* mov byte [eax+0x101c3934], 0x1 */
    II(0x100fb64b, 0x2)   jmpd(0x100fb636, -0x17);              /* jmp 0x100fb636 */
l_0x100fb64d:
    II(0x100fb64d, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
    II(0x100fb654, 0x2)   jmpd(0x100fb65c, 0x6);                /* jmp 0x100fb65c */
l_0x100fb656:
    II(0x100fb656, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fb659, 0x3)   inc(memd_a32(ss, ebp - 0x4));         /* inc dword [ebp-0x4] */
l_0x100fb65c:
    II(0x100fb65c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb660, 0x3)   cmp(eax, 0x18);                       /* cmp eax, 0x18 */
    II(0x100fb663, 0x2)   jaed(0x100fb675, 0x10);               /* jae 0x100fb675 */
    II(0x100fb665, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb669, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100fb66c, 0x7)   mov(memb_a32(ds, eax + 0x101b8757), 0); /* mov byte [eax+0x101b8757], 0x0 */
    II(0x100fb673, 0x2)   jmpd(0x100fb656, -0x1f);              /* jmp 0x100fb656 */
l_0x100fb675:
    II(0x100fb675, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100fb67c, 0x2)   jzd(0x100fb68c, 0xe);                 /* jz 0x100fb68c */
    II(0x100fb67e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fb680, 0x5)   calld(/* sys */ 0x10178f78, 0x7d8f3); /* call 0x10178f78 */
    II(0x100fb685, 0x5)   calld(/* sys */ 0x10165ebf, 0x6a835); /* call 0x10165ebf */
    II(0x100fb68a, 0x2)   jmpd(0x100fb6a2, 0x16);               /* jmp 0x100fb6a2 */
l_0x100fb68c:
    II(0x100fb68c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fb68e, 0x5)   calld(/* sys */ 0x10178f78, 0x7d8e5); /* call 0x10178f78 */
    II(0x100fb693, 0x5)   mov(memd_a32(ds, 0x101c5628), eax);   /* mov [0x101c5628], eax */
//    II(0x100fb698, 0x5)   mov(eax, memd_a32(ds, 0x101c5628));   /* mov eax, [0x101c5628] */
    II(0x100fb69d, 0x5)   calld(/* sys */ 0x10165ebf, 0x6a81d); /* call 0x10165ebf */
l_0x100fb6a2:
    II(0x100fb6a2, 0xa)   mov(memd_a32(ds, 0x101c38c8), 0xff);  /* mov dword [0x101c38c8], 0xff */
    II(0x100fb6ac, 0x7)   mov(memb_a32(ds, 0x101c3970), 0);     /* mov byte [0x101c3970], 0x0 */
    II(0x100fb6b3, 0x7)   mov(memb_a32(ds, 0x101c3888), 0);     /* mov byte [0x101c3888], 0x0 */
    II(0x100fb6ba, 0x7)   mov(memb_a32(ds, 0x101c388c), 0);     /* mov byte [0x101c388c], 0x0 */
    II(0x100fb6c1, 0x7)   mov(memb_a32(ds, 0x101c388a), 0);     /* mov byte [0x101c388a], 0x0 */
    II(0x100fb6c8, 0x7)   mov(memb_a32(ds, 0x101c3889), 0);     /* mov byte [0x101c3889], 0x0 */
    II(0x100fb6cf, 0x7)   mov(memb_a32(ds, 0x101c388d), 0);     /* mov byte [0x101c388d], 0x0 */
    II(0x100fb6d6, 0x7)   mov(memb_a32(ds, 0x101c388e), 0);     /* mov byte [0x101c388e], 0x0 */
    II(0x100fb6dd, 0x7)   mov(memb_a32(ds, 0x101c37cc), 0);     /* mov byte [0x101c37cc], 0x0 */
    II(0x100fb6e4, 0x7)   mov(memb_a32(ds, 0x101c37cd), 0);     /* mov byte [0x101c37cd], 0x0 */
    II(0x100fb6eb, 0x7)   mov(memb_a32(ds, 0x101c37ce), 0);     /* mov byte [0x101c37ce], 0x0 */
    II(0x100fb6f2, 0x7)   mov(memb_a32(ds, 0x101c37cf), 0);     /* mov byte [0x101c37cf], 0x0 */
    II(0x100fb6f9, 0x7)   mov(memb_a32(ds, 0x101c37cb), 0);     /* mov byte [0x101c37cb], 0x0 */
    II(0x100fb700, 0x7)   mov(memb_a32(ds, 0x101c37d0), 0);     /* mov byte [0x101c37d0], 0x0 */
    II(0x100fb707, 0x7)   mov(memb_a32(ds, 0x101c37d1), 0);     /* mov byte [0x101c37d1], 0x0 */
    II(0x100fb70e, 0x7)   mov(memb_a32(ds, 0x101c388b), 0);     /* mov byte [0x101c388b], 0x0 */
    II(0x100fb715, 0x7)   mov(memb_a32(ds, 0x101c388f), 0x1);   /* mov byte [0x101c388f], 0x1 */
    II(0x100fb71c, 0x7)   mov(memb_a32(ds, 0x101c37d2), 0);     /* mov byte [0x101c37d2], 0x0 */
    II(0x100fb723, 0x7)   mov(memb_a32(ds, 0x101c3890), 0);     /* mov byte [0x101c3890], 0x0 */
    II(0x100fb72a, 0x7)   mov(memb_a32(ds, 0x101c3984), 0);     /* mov byte [0x101c3984], 0x0 */
    II(0x100fb731, 0x7)   mov(memb_a32(ds, 0x101c37d3), 0x1);   /* mov byte [0x101c37d3], 0x1 */
    II(0x100fb738, 0x7)   mov(memb_a32(ds, 0x101c38a2), 0);     /* mov byte [0x101c38a2], 0x0 */
    II(0x100fb73f, 0x7)   mov(memb_a32(ds, 0x101c38a3), 0);     /* mov byte [0x101c38a3], 0x0 */
    II(0x100fb746, 0x7)   mov(memb_a32(ds, 0x101c391d), 0);     /* mov byte [0x101c391d], 0x0 */
    II(0x100fb74d, 0x7)   mov(memb_a32(ds, 0x101c3911), 0);     /* mov byte [0x101c3911], 0x0 */
    II(0x100fb754, 0x7)   mov(memb_a32(ds, 0x101c3913), 0);     /* mov byte [0x101c3913], 0x0 */
    II(0x100fb75b, 0x7)   mov(memb_a32(ds, 0x101c3910), 0);     /* mov byte [0x101c3910], 0x0 */
    II(0x100fb762, 0x7)   mov(memb_a32(ds, 0x101c37d4), 0);     /* mov byte [0x101c37d4], 0x0 */
    II(0x100fb769, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100fb76e, 0x5)   calld(0x10075fdc, -0x85797);          /* call 0x10075fdc */
    II(0x100fb773, 0x5)   mov(memb_a32(ds, 0x101c3920), al);    /* mov [0x101c3920], al */
    II(0x100fb778, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100fb77d, 0x5)   calld(0x10075fdc, -0x857a6);          /* call 0x10075fdc */
    II(0x100fb782, 0x5)   mov(memb_a32(ds, 0x101c3915), al);    /* mov [0x101c3915], al */
    II(0x100fb787, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100fb78c, 0x5)   calld(0x10075fdc, -0x857b5);          /* call 0x10075fdc */
    II(0x100fb791, 0x5)   mov(memb_a32(ds, 0x101c37c9), al);    /* mov [0x101c37c9], al */
    II(0x100fb796, 0x5)   mov(eax, 0x55);                       /* mov eax, 0x55 */
    II(0x100fb79b, 0x5)   calld(0x10075fdc, -0x857c4);          /* call 0x10075fdc */
    II(0x100fb7a0, 0x5)   mov(memb_a32(ds, 0x101c37ca), al);    /* mov [0x101c37ca], al */
    II(0x100fb7a5, 0x9)   mov(memw_a32(ds, 0x101c3900), 0);     /* mov word [0x101c3900], 0x0 */
    II(0x100fb7ae, 0xa)   mov(memd_a32(ds, 0x101c3904), 0);     /* mov dword [0x101c3904], 0x0 */
    II(0x100fb7b8, 0xa)   mov(memd_a32(ds, 0x101c37dc), 0x1);   /* mov dword [0x101c37dc], 0x1 */
    II(0x100fb7c2, 0x9)   mov(memw_a32(ds, 0x101c38e2), 0);     /* mov word [0x101c38e2], 0x0 */
    II(0x100fb7cb, 0x9)   mov(memw_a32(ds, 0x101c38e4), 0);     /* mov word [0x101c38e4], 0x0 */
    II(0x100fb7d4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fb7d6, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fb7db, 0x5)   calld(0x10076630, -0x851b0);          /* call 0x10076630 */
    II(0x100fb7e0, 0x7)   mov(memb_a32(ds, 0x101c37e4), 0);     /* mov byte [0x101c37e4], 0x0 */
    II(0x100fb7e7, 0xa)   mov(memd_a32(ds, 0x101c39ac), 0);     /* mov dword [0x101c39ac], 0x0 */
    II(0x100fb7f1, 0x9)   mov(memw_a32(ds, 0x101c3962), 0);     /* mov word [0x101c3962], 0x0 */
    II(0x100fb7fa, 0x9)   mov(memw_a32(ds, 0x101c38ba), 0xffff); /* mov word [0x101c38ba], 0xffff */
    II(0x100fb803, 0x6)   mov(ax, memw_a32(ds, 0x101c38ba));    /* mov ax, [0x101c38ba] */
    II(0x100fb809, 0x6)   mov(memw_a32(ds, 0x101c38b8), ax);    /* mov [0x101c38b8], ax */
    II(0x100fb80f, 0x5)   mov(eax, 0x101c3924);                 /* mov eax, 0x101c3924 */
    II(0x100fb814, 0x5)   calld(0x1013a6f4, 0x3eedb);           /* call 0x1013a6f4 */
    II(0x100fb819, 0x9)   mov(memw_a32(ds, 0x101c7120), 0xffff); /* mov word [0x101c7120], 0xffff */
    II(0x100fb822, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100fb824, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100fb825, 0x1)   popd(edi);                            /* pop edi */
    II(0x100fb826, 0x1)   popd(esi);                            /* pop esi */
    II(0x100fb827, 0x1)   popd(edx);                            /* pop edx */
    II(0x100fb828, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100fb829, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100fb82a, 0x1)   retd();                               /* ret */
FUNC_END

