FUNC_BEGIN(0x1012fe49, 0xd75b70d1b667e2e2, 0x20, ({0x68, 0xd0, 0, 0, 0, 0xe8, 0xff, 0x5e, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x98, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x38, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xa9, 0x50, 0xfa, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x5a, 0x50, 0xfa, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x34, 0xb6, 0xf7, 0xff, 0x98, 0x8b, 0x55, 0xfc, 0x8b, 0x4a, 0x38, 0xc1, 0xf9, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x5a, 0x2e, 0xc1, 0xfb, 0x10, 0x1, 0xcb, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc2, 0x98, 0xf5, 0xff, 0x89, 0x45, 0xf4, 0x8d, 0x55, 0xcc, 0x8b, 0x45, 0xfc, 0xe8, 0x41, 0x6b, 0xfa, 0xff, 0xf, 0xbf, 0x55, 0xe8, 0x83, 0xea, 0x32, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xcc, 0x4f, 0xfa, 0xff, 0x98, 0x1, 0xd0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x30, 0x89, 0x45, 0xec, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x45, 0xf4, 0xf, 0x8d, 0x9b, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x5, 0x19, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xf0, 0x5, 0x10, 0, 0, 0, 0x98, 0x50, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xf2, 0x86, 0xfb, 0xff, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xe2, 0xe8, 0x5b, 0xb7, 0xff, 0xff, 0x8d, 0x4d, 0x98, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xce, 0x86, 0xfb, 0xff, 0x89, 0xca, 0xe8, 0xd6, 0xfa, 0x1, 0, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xd5, 0xa2, 0x3, 0, 0xe8, 0xa0, 0x53, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x68, 0xa2, 0, 0, 0, 0xb8, 0x32, 0, 0, 0, 0x50, 0xb8, 0x50, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0x8b, 0x45, 0xf0, 0x5, 0x23, 0, 0, 0, 0xf, 0xbf, 0xc8, 0x8d, 0x5d, 0x98, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xe2, 0xe8, 0x30, 0x9b, 0xfb, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xc0, 0x75, 0x89, 0x45, 0x88, 0xf, 0xbf, 0x45, 0xf8, 0x89, 0x45, 0x8c, 0xf, 0xbf, 0x45, 0xf0, 0x5, 0x4, 0x1, 0, 0, 0x89, 0x45, 0x90, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0x89, 0x45, 0x94, 0x8d, 0x5d, 0x88, 0x8b, 0x4d, 0xde, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x43, 0x86, 0xfb, 0xff, 0x89, 0xca, 0xe8, 0x71, 0xc4, 0xff, 0xff, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x4a, 0xa2, 0x3, 0, 0xe8, 0x15, 0x53, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x68, 0xa2, 0, 0, 0, 0xb8, 0x32, 0, 0, 0, 0x50, 0xb8, 0x28, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0x8b, 0x45, 0xf0, 0x5, 0x9, 0x1, 0, 0, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xf1, 0x85, 0xfb, 0xff, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xda, 0x85, 0xfb, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0xb8, 0x9c, 0x88, 0x1a, 0x10, 0x50, 0xb8, 0xa, 0, 0, 0, 0x50, 0x8d, 0x45, 0x84, 0xe8, 0x72, 0x1a, 0x1, 0, 0x50, 0xe8, 0xbb, 0x1f, 0x1, 0, 0x83, 0xc4, 0x14, 0xe8, 0x44, 0x97, 0xf5, 0xff, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x75, 0xe2, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x51, 0x9a, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x84, 0xe8, 0x8c, 0x1a, 0x1, 0, 0xb8, 0x32, 0, 0, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xa6, 0x4e, 0xfa, 0xff, 0x81, 0xe8, 0x36, 0x1, 0, 0, 0x98, 0x50, 0xf, 0xbf, 0x4d, 0xf8, 0x8b, 0x45, 0xf0, 0x5, 0x36, 0x1, 0, 0, 0xf, 0xbf, 0xd8, 0x8d, 0x75, 0xcc, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x59, 0x85, 0xfb, 0xff, 0x89, 0xf2, 0xe8, 0xeb, 0xfa, 0xff, 0xff, 0xbb, 0xbc, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x3e, 0x85, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0x9b, 0x6c, 0xf4, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xa0, 0, 0, 0, 0xe8, 0xaa, 0x4f, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0x80, 0xff, 0x75, 0x80, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x10, 0x85, 0xfb, 0xff, 0x8b, 0x40, 0x12, 0x83, 0xe0, 0x10, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xff, 0xb5, 0x7c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xef, 0x84, 0xfb, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x74, 0xc, 0xc7, 0x85, 0x78, 0xff, 0xff, 0xff, 0, 0, 0x4, 0, 0xeb, 0xa, 0xc7, 0x85, 0x78, 0xff, 0xff, 0xff, 0, 0, 0x2, 0, 0xff, 0xb5, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x5, 0x29, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xf0, 0x5, 0x20, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xf8, 0x5, 0x9, 0, 0, 0, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0x8b, 0x45, 0xf8, 0x5, 0x9, 0, 0, 0, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xe2, 0xe8, 0xce, 0x20, 0xfd, 0xff, 0x8b, 0x45, 0xe8, 0x1, 0x45, 0xf8, 0xe9, 0x52, 0xfd, 0xff, 0xff, 0xe8, 0x2f, 0x50, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2e, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x9, 0xc6, 0x85, 0x70, 0xff, 0xff, 0xff, 0x1, 0xeb, 0x7, 0xc6, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0x31, 0xd2, 0x8a, 0x95, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xce, 0, 0, 0, 0x8b, 0x9d, 0x74, 0xff, 0xff, 0xff, 0xe8, 0x83, 0xf8, 0xf9, 0xff, 0xe8, 0xe6, 0x4f, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x2e, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x38, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xb0, 0xb2, 0xf7, 0xff, 0x98, 0x39, 0xc2, 0x7d, 0x9, 0xc6, 0x85, 0x68, 0xff, 0xff, 0xff, 0x1, 0xeb, 0x7, 0xc6, 0x85, 0x68, 0xff, 0xff, 0xff, 0, 0x31, 0xd2, 0x8a, 0x95, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xd2, 0, 0, 0, 0x8b, 0x9d, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0x23, 0xf8, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1012fe49, 0x5)   pushd(0xd0);                          /* push dword 0xd0 */
    II(0x1012fe4e, 0x5)   calld(sys_check_available_stack_size, 0x35eff); /* call 0x10165d52 */
    II(0x1012fe53, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012fe54, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012fe55, 0x1)   pushd(edx);                           /* push edx */
    II(0x1012fe56, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012fe57, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012fe58, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012fe59, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012fe5b, 0x6)   sub(esp, 0x98);                       /* sub esp, 0x98 */
    II(0x1012fe61, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1012fe64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fe67, 0x3)   mov(ebx, memd_a32(ds, eax + 0x38));   /* mov ebx, [eax+0x38] */
    II(0x1012fe6a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012fe6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fe70, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012fe76, 0x5)   calld(0x100d4f24, -0x5af57);          /* call 0x100d4f24 */
    II(0x1012fe7b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012fe7e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012fe80, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012fe83, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012fe85, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1012fe88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fe8b, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012fe91, 0x5)   calld(0x100d4ef0, -0x5afa6);          /* call 0x100d4ef0 */
    II(0x1012fe96, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012fe99, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fe9c, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012fe9f, 0x5)   calld(my_1_get_count, -0x849cc);      /* call 0x100ab4d8 */
    II(0x1012fea4, 0x1)   cwde();                               /* cwde */
    II(0x1012fea5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012fea8, 0x3)   mov(ecx, memd_a32(ds, edx + 0x38));   /* mov ecx, [edx+0x38] */
    II(0x1012feab, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1012feae, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012feb1, 0x3)   mov(ebx, memd_a32(ds, edx + 0x2e));   /* mov ebx, [edx+0x2e] */
    II(0x1012feb4, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012feb7, 0x2)   add(ebx, ecx);                        /* add ebx, ecx */
    II(0x1012feb9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012febb, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1012febd, 0x5)   calld(my_min, -0xa673e);              /* call 0x10089784 */
    II(0x1012fec2, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1012fec5, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x1012fec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fecb, 0x5)   calld(0x100d6a11, -0x594bf);          /* call 0x100d6a11 */
    II(0x1012fed0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1012fed4, 0x3)   sub(edx, 0x32);                       /* sub edx, 0x32 */
    II(0x1012fed7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012fed9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012fedc, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012fede, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012fee0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012fee2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fee5, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012feeb, 0x5)   calld(0x100d4ebc, -0x5b034);          /* call 0x100d4ebc */
    II(0x1012fef0, 0x1)   cwde();                               /* cwde */
    II(0x1012fef1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012fef3, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1012fef6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fef9, 0x4)   mov(ax, memw_a32(ds, eax + 0x30));    /* mov ax, [eax+0x30] */
    II(0x1012fefd, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1012ff00, 0x2)   jmpd(0x1012ff08, 0x6);                /* jmp 0x1012ff08 */
l_0x1012ff02:
    II(0x1012ff02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012ff05, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x1012ff08:
    II(0x1012ff08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012ff0b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x1012ff0f, 0x6)   jged(0x101301b0, 0x29b);              /* jge dword 0x101301b0 */
    II(0x1012ff15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012ff18, 0x5)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x1012ff1d, 0x1)   cwde();                               /* cwde */
    II(0x1012ff1e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012ff1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012ff22, 0x5)   add(eax, 0x10);                       /* add eax, 0x10 */
    II(0x1012ff27, 0x1)   cwde();                               /* cwde */
    II(0x1012ff28, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012ff29, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012ff2b, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1012ff30, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1012ff33, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012ff37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ff3a, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012ff3d, 0x5)   calld(0x100e8634, -0x4790e);          /* call 0x100e8634 */
    II(0x1012ff42, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x1012ff45, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012ff48, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1012ff4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x1012ff4f, 0x5)   calld(0x1012b6af, -0x48a5);           /* call 0x1012b6af */
    II(0x1012ff54, 0x3)   lea(ecx, ebp - 0x68);                 /* lea ecx, [ebp-0x68] */
    II(0x1012ff57, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012ff5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ff5e, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012ff61, 0x5)   calld(0x100e8634, -0x47932);          /* call 0x100e8634 */
    II(0x1012ff66, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1012ff68, 0x5)   calld(0x1014fa43, 0x1fad6);           /* call 0x1014fa43 */
    II(0x1012ff6d, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1012ff72, 0x5)   calld(/* sys */ 0x1016a24c, 0x3a2d5); /* call 0x1016a24c */
    II(0x1012ff77, 0x5)   calld(0x100d531c, -0x5ac60);          /* call 0x100d531c */
    II(0x1012ff7c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012ff81, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012ff82, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012ff84, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012ff85, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x1012ff8a, 0x5)   mov(eax, 0x32);                       /* mov eax, 0x32 */
    II(0x1012ff8f, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012ff90, 0x5)   mov(eax, 0x50);                       /* mov eax, 0x50 */
    II(0x1012ff95, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012ff96, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1012ff9a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012ff9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012ff9e, 0x5)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x1012ffa3, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1012ffa6, 0x3)   lea(ebx, ebp - 0x68);                 /* lea ebx, [ebp-0x68] */
    II(0x1012ffa9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1012ffad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x1012ffb0, 0x5)   calld(0x100e9ae5, -0x464d0);          /* call 0x100e9ae5 */
    II(0x1012ffb5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012ffb9, 0x3)   add(eax, 0x75);                       /* add eax, 0x75 */
    II(0x1012ffbc, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x1012ffbf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1012ffc3, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x1012ffc6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012ffca, 0x5)   add(eax, 0x104);                      /* add eax, 0x104 */
    II(0x1012ffcf, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x1012ffd2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1012ffd6, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x1012ffd9, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x1012ffdc, 0x3)   lea(ebx, ebp - 0x78);                 /* lea ebx, [ebp-0x78] */
    II(0x1012ffdf, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x22));   /* mov ecx, [ebp-0x22] */
    II(0x1012ffe2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012ffe6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ffe9, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012ffec, 0x5)   calld(0x100e8634, -0x479bd);          /* call 0x100e8634 */
    II(0x1012fff1, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1012fff3, 0x5)   calld(0x1012c469, -0x3b8f);           /* call 0x1012c469 */
    II(0x1012fff8, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1012fffd, 0x5)   calld(/* sys */ 0x1016a24c, 0x3a24a); /* call 0x1016a24c */
    II(0x10130002, 0x5)   calld(0x100d531c, -0x5aceb);          /* call 0x100d531c */
    II(0x10130007, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013000c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013000d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10130012, 0x1)   pushd(eax);                           /* push eax */
    II(0x10130013, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x10130018, 0x5)   mov(eax, 0x32);                       /* mov eax, 0x32 */
    II(0x1013001d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013001e, 0x5)   mov(eax, 0x28);                       /* mov eax, 0x28 */
    II(0x10130023, 0x1)   pushd(eax);                           /* push eax */
    II(0x10130024, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10130028, 0x1)   pushd(eax);                           /* push eax */
    II(0x10130029, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013002c, 0x5)   add(eax, 0x109);                      /* add eax, 0x109 */
    II(0x10130031, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10130034, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10130038, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013003b, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1013003e, 0x5)   calld(0x100e8634, -0x47a0f);          /* call 0x100e8634 */
    II(0x10130043, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x10130046, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10130049, 0x1)   inc(eax);                             /* inc eax */
    II(0x1013004a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013004b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1013004f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10130052, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x10130055, 0x5)   calld(0x100e8634, -0x47a26);          /* call 0x100e8634 */
    II(0x1013005a, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1013005d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10130060, 0x1)   inc(eax);                             /* inc eax */
    II(0x10130061, 0x1)   pushd(eax);                           /* push eax */
    II(0x10130062, 0x5)   mov(eax, 0x101a889c);                 /* mov eax, 0x101a889c */ /* "%i,%i" */
    II(0x10130067, 0x1)   pushd(eax);                           /* push eax */
    II(0x10130068, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x1013006d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013006e, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x10130071, 0x5)   calld(my_string_ctor, 0x11a72);       /* call 0x10141ae8 */
    II(0x10130076, 0x1)   pushd(eax);                           /* push eax */
    II(0x10130077, 0x5)   calld(0x10142037, 0x11fbb);           /* call 0x10142037 */
    II(0x1013007c, 0x3)   add(esp, 0x14);                       /* add esp, 0x14 */
    II(0x1013007f, 0x5)   calld(my_strobj_c_str_v2, -0xa68bc);  /* call 0x100897c8 */
    II(0x10130084, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10130088, 0x3)   mov(esi, memd_a32(ss, ebp - 0x1e));   /* mov esi, [ebp-0x1e] */
    II(0x1013008b, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1013008d, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1013008f, 0x5)   calld(0x100e9ae5, -0x465af);          /* call 0x100e9ae5 */
    II(0x10130094, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10130096, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x10130099, 0x5)   calld(my_string_dtor, 0x11a8c);       /* call 0x10141b2a */
    II(0x1013009e, 0x5)   mov(eax, 0x32);                       /* mov eax, 0x32 */
    II(0x101300a3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101300a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101300a7, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x101300ad, 0x5)   calld(0x100d4f58, -0x5b15a);          /* call 0x100d4f58 */
    II(0x101300b2, 0x6)   sub(eax, 0x136);                      /* sub eax, 0x136 */
    II(0x101300b8, 0x1)   cwde();                               /* cwde */
    II(0x101300b9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101300ba, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x8));  /* movsx ecx, word [ebp-0x8] */
    II(0x101300be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101300c1, 0x5)   add(eax, 0x136);                      /* add eax, 0x136 */
    II(0x101300c6, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101300c9, 0x3)   lea(esi, ebp - 0x34);                 /* lea esi, [ebp-0x34] */
    II(0x101300cc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x101300d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101300d3, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x101300d6, 0x5)   calld(0x100e8634, -0x47aa7);          /* call 0x100e8634 */
    II(0x101300db, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x101300dd, 0x5)   calld(0x1012fbcd, -0x515);            /* call 0x1012fbcd */
    II(0x101300e2, 0x5)   mov(ebx, 0x101c37bc);                 /* mov ebx, 0x101c37bc */
    II(0x101300e7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x101300eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101300ee, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x101300f1, 0x5)   calld(0x100e8634, -0x47ac2);          /* call 0x100e8634 */
    II(0x101300f6, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x101300f8, 0x5)   calld(0x10076d98, -0xb9365);          /* call 0x10076d98 */
    II(0x101300fd, 0x2)   test(al, al);                         /* test al, al */
    II(0x101300ff, 0x6)   jzd(0x101301a5, 0xa0);                /* jz dword 0x101301a5 */
    II(0x10130105, 0x5)   calld(0x100d50b4, -0x5b056);          /* call 0x100d50b4 */
    II(0x1013010a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013010f, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
    II(0x10130112, 0x3)   pushd(memd_a32(ss, ebp - 0x80));      /* push dword [ebp-0x80] */
    II(0x10130115, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10130119, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013011c, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1013011f, 0x5)   calld(0x100e8634, -0x47af0);          /* call 0x100e8634 */
    II(0x10130124, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10130127, 0x3)   and_(eax, 0x10);                      /* and eax, 0x10 */
    II(0x1013012a, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
    II(0x10130130, 0x6)   pushd(memd_a32(ss, ebp - 0x84));      /* push dword [ebp+0xffffff7c] */
    II(0x10130136, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1013013a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013013d, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x10130140, 0x5)   calld(0x100e8634, -0x47b11);          /* call 0x100e8634 */
    II(0x10130145, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x10130149, 0x2)   jzd(0x10130157, 0xc);                 /* jz 0x10130157 */
    II(0x1013014b, 0xa)   mov(memd_a32(ss, ebp - 0x88), 0x40000); /* mov dword [ebp+0xffffff78], 0x40000 */
    II(0x10130155, 0x2)   jmpd(0x10130161, 0xa);                /* jmp 0x10130161 */
l_0x10130157:
    II(0x10130157, 0xa)   mov(memd_a32(ss, ebp - 0x88), 0x20000); /* mov dword [ebp+0xffffff78], 0x20000 */
l_0x10130161:
    II(0x10130161, 0x6)   pushd(memd_a32(ss, ebp - 0x88));      /* push dword [ebp+0xffffff78] */
    II(0x10130167, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013016a, 0x5)   add(eax, 0x29);                       /* add eax, 0x29 */
    II(0x1013016f, 0x1)   cwde();                               /* cwde */
    II(0x10130170, 0x1)   pushd(eax);                           /* push eax */
    II(0x10130171, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10130174, 0x5)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10130179, 0x1)   cwde();                               /* cwde */
    II(0x1013017a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013017b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013017e, 0x5)   add(eax, 0x9);                        /* add eax, 0x9 */
    II(0x10130183, 0x1)   cwde();                               /* cwde */
    II(0x10130184, 0x1)   pushd(eax);                           /* push eax */
    II(0x10130185, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10130189, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013018a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013018d, 0x5)   add(eax, 0x9);                        /* add eax, 0x9 */
    II(0x10130192, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10130195, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x10130199, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1013019d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x101301a0, 0x5)   calld(0x10102273, -0x2df32);          /* call 0x10102273 */
l_0x101301a5:
    II(0x101301a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101301a8, 0x3)   add(memd_a32(ss, ebp - 0x8), eax);    /* add [ebp-0x8], eax */
    II(0x101301ab, 0x5)   jmpd(0x1012ff02, -0x2ae);             /* jmp 0x1012ff02 */
l_0x101301b0:
    II(0x101301b0, 0x5)   calld(0x100d51e4, -0x5afd1);          /* call 0x100d51e4 */
    II(0x101301b5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101301ba, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
    II(0x101301c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101301c3, 0x3)   mov(eax, memd_a32(ds, eax + 0x2e));   /* mov eax, [eax+0x2e] */
    II(0x101301c6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101301c9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101301cb, 0x2)   jled(0x101301d6, 0x9);                /* jle 0x101301d6 */
    II(0x101301cd, 0x7)   mov(memb_a32(ss, ebp - 0x90), 0x1);   /* mov byte [ebp+0xffffff70], 0x1 */
    II(0x101301d4, 0x2)   jmpd(0x101301dd, 0x7);                /* jmp 0x101301dd */
l_0x101301d6:
    II(0x101301d6, 0x7)   mov(memb_a32(ss, ebp - 0x90), 0);     /* mov byte [ebp+0xffffff70], 0x0 */
l_0x101301dd:
    II(0x101301dd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101301df, 0x6)   mov(dl, memb_a32(ss, ebp - 0x90));    /* mov dl, [ebp+0xffffff70] */
    II(0x101301e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101301e8, 0x6)   mov(eax, memd_a32(ds, eax + 0xce));   /* mov eax, [eax+0xce] */
    II(0x101301ee, 0x6)   mov(ebx, memd_a32(ss, ebp - 0x8c));   /* mov ebx, [ebp+0xffffff74] */
    II(0x101301f4, 0x5)   calld(0x100cfa7c, -0x6077d);          /* call 0x100cfa7c */
    II(0x101301f9, 0x5)   calld(0x100d51e4, -0x5b01a);          /* call 0x100d51e4 */
    II(0x101301fe, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10130203, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
    II(0x10130209, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013020c, 0x3)   mov(edx, memd_a32(ds, eax + 0x2e));   /* mov edx, [eax+0x2e] */
    II(0x1013020f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10130212, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10130215, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x10130218, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013021b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013021d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10130220, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x10130223, 0x5)   calld(my_1_get_count, -0x84d50);      /* call 0x100ab4d8 */
    II(0x10130228, 0x1)   cwde();                               /* cwde */
    II(0x10130229, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1013022b, 0x2)   jged(0x10130236, 0x9);                /* jge 0x10130236 */
    II(0x1013022d, 0x7)   mov(memb_a32(ss, ebp - 0x98), 0x1);   /* mov byte [ebp+0xffffff68], 0x1 */
    II(0x10130234, 0x2)   jmpd(0x1013023d, 0x7);                /* jmp 0x1013023d */
l_0x10130236:
    II(0x10130236, 0x7)   mov(memb_a32(ss, ebp - 0x98), 0);     /* mov byte [ebp+0xffffff68], 0x0 */
l_0x1013023d:
    II(0x1013023d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013023f, 0x6)   mov(dl, memb_a32(ss, ebp - 0x98));    /* mov dl, [ebp+0xffffff68] */
    II(0x10130245, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10130248, 0x6)   mov(eax, memd_a32(ds, eax + 0xd2));   /* mov eax, [eax+0xd2] */
    II(0x1013024e, 0x6)   mov(ebx, memd_a32(ss, ebp - 0x94));   /* mov ebx, [ebp+0xffffff6c] */
    II(0x10130254, 0x5)   calld(0x100cfa7c, -0x607dd);          /* call 0x100cfa7c */
    II(0x10130259, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013025b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013025c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013025d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013025e, 0x1)   popd(edx);                            /* pop edx */
    II(0x1013025f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10130260, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10130261, 0x1)   retd();                               /* ret */
FUNC_END

