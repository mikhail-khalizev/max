FUNC_BEGIN(0x101437d1, 0x7e831a00268246a9, 0x20, ({0x68, 0x78, 0, 0, 0, 0xe8, 0x77, 0x25, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0xfe, 0x2c, 0xf3, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xec, 0xfe, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xc8, 0xe8, 0x9f, 0x16, 0, 0, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xec, 0xfe, 0x83, 0x7d, 0xf8, 0, 0x75, 0x20, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x3d, 0x16, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x33, 0x27, 0xf3, 0xff, 0xe9, 0x22, 0x3, 0, 0, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xcc, 0xe8, 0x5f, 0x7a, 0xf6, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xd0, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xb, 0x45, 0xf4, 0x89, 0x45, 0xd4, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xcf, 0x2a, 0xf3, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xc9, 0x2b, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xf4, 0x74, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xab, 0x2, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x13, 0x2b, 0xf3, 0xff, 0xe8, 0x72, 0x29, 0xf3, 0xff, 0x3b, 0x45, 0xf0, 0x75, 0xf, 0x8d, 0x45, 0xe0, 0xe8, 0x1, 0x2b, 0xf3, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xf0, 0x2a, 0xf3, 0xff, 0x80, 0x78, 0x3d, 0x8, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xe0, 0x2a, 0xf3, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xd0, 0x2a, 0xf3, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x5, 0xe9, 0x48, 0x2, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xbd, 0x2a, 0xf3, 0xff, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x45, 0xc4, 0x50, 0x8d, 0x45, 0xc0, 0x50, 0x8d, 0x45, 0xbc, 0x50, 0xb9, 0x10, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x92, 0x2a, 0xf3, 0xff, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe0, 0xe8, 0x84, 0x2a, 0xf3, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0xf1, 0xf1, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xb8, 0xeb, 0x44, 0x8d, 0x45, 0xe0, 0xe8, 0x69, 0x2a, 0xf3, 0xff, 0x83, 0xc0, 0x47, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb0, 0xeb, 0x4d, 0x8d, 0x45, 0xe0, 0xe8, 0x53, 0x2a, 0xf3, 0xff, 0x83, 0xc0, 0x48, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xb0, 0xeb, 0x37, 0x8d, 0x45, 0xe0, 0xe8, 0x3d, 0x2a, 0xf3, 0xff, 0x83, 0xc0, 0x49, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xb0, 0xeb, 0x21, 0xeb, 0x1f, 0x83, 0x7d, 0xb8, 0x40, 0x72, 0x11, 0x83, 0x7d, 0xb8, 0x40, 0x76, 0xdc, 0x81, 0x7d, 0xb8, 0x80, 0, 0, 0, 0x74, 0xa7, 0xeb, 0xe7, 0x83, 0x7d, 0xb8, 0x20, 0x74, 0xb5, 0xeb, 0xdf, 0x8b, 0x45, 0xb4, 0x31, 0xd2, 0x8a, 0x10, 0xf, 0xbf, 0x45, 0xb0, 0x39, 0xc2, 0xf, 0x8d, 0x7e, 0x1, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xf3, 0x29, 0xf3, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x47, 0x8d, 0x45, 0xe0, 0xe8, 0xe6, 0x29, 0xf3, 0xff, 0x8a, 0x40, 0x48, 0x25, 0xff, 0, 0, 0, 0x1, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xd4, 0x29, 0xf3, 0xff, 0x8a, 0x40, 0x49, 0x25, 0xff, 0, 0, 0, 0x1, 0xd0, 0x83, 0xf8, 0x10, 0xf, 0x8d, 0xba, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xb9, 0x29, 0xf3, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x47, 0x8d, 0x45, 0xe0, 0xe8, 0xac, 0x29, 0xf3, 0xff, 0x8a, 0x40, 0x49, 0x25, 0xff, 0, 0, 0, 0x1, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x9a, 0x29, 0xf3, 0xff, 0x8a, 0x40, 0x48, 0x25, 0xff, 0, 0, 0, 0x1, 0xd0, 0xba, 0x10, 0, 0, 0, 0x29, 0xc2, 0x89, 0x55, 0xac, 0x8b, 0x45, 0xac, 0x3b, 0x45, 0xd0, 0x7e, 0x6, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xb4, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xb0, 0x29, 0xc2, 0x3b, 0x55, 0xac, 0x7d, 0x13, 0x8b, 0x45, 0xb4, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xb0, 0x29, 0xc2, 0x89, 0x55, 0xac, 0x8a, 0x45, 0xac, 0x8b, 0x55, 0xb4, 0, 0x2, 0x8d, 0x45, 0xe0, 0xe8, 0x40, 0x29, 0xf3, 0xff, 0x89, 0xc2, 0x8a, 0x45, 0xac, 0, 0x42, 0x46, 0x8b, 0x45, 0xac, 0x1, 0x45, 0xd8, 0x8b, 0x45, 0xac, 0x29, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x75, 0x1f, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xdc, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xe2, 0x13, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xd8, 0x24, 0xf3, 0xff, 0xe9, 0xc7, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xff, 0x28, 0xf3, 0xff, 0x83, 0xc0, 0x47, 0x50, 0xf, 0xbf, 0x4d, 0xb0, 0x8b, 0x5d, 0xb4, 0xba, 0x80, 0, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0x2e, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x24, 0x8d, 0x45, 0xe0, 0xe8, 0xdb, 0x28, 0xf3, 0xff, 0x83, 0xc0, 0x48, 0x50, 0xf, 0xbf, 0x4d, 0xb0, 0x8b, 0x5d, 0xb4, 0xba, 0x20, 0, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0xa, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x24, 0x8d, 0x45, 0xe0, 0xe8, 0xb5, 0x28, 0xf3, 0xff, 0x83, 0xc0, 0x49, 0x50, 0xf, 0xbf, 0x4d, 0xb0, 0x8b, 0x5d, 0xb4, 0xba, 0x40, 0, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0xe4, 0xfb, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x1c, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xdc, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x55, 0x13, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x4b, 0x24, 0xf3, 0xff, 0xeb, 0x3d, 0x8d, 0x45, 0xe0, 0xe8, 0xcd, 0x30, 0xf3, 0xff, 0xe9, 0x43, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xdc, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x2c, 0x13, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x22, 0x24, 0xf3, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x16, 0x13, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xc, 0x24, 0xf3, 0xff, 0x8b, 0x45, 0xdc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x101437d1, 0x5)   pushd(0x78);                          /* push dword 0x78 */
    II(0x101437d6, 0x5)   calld(sys_check_available_stack_size, 0x22577); /* call 0x10165d52 */
    II(0x101437db, 0x1)   pushd(esi);                           /* push esi */
    II(0x101437dc, 0x1)   pushd(edi);                           /* push edi */
    II(0x101437dd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101437de, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101437e0, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x101437e6, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101437e9, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x101437ec, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x101437ef, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x101437f2, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x101437f6, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101437f9, 0x5)   calld(0x100764fc, -0xcd302);          /* call 0x100764fc */
    II(0x101437fe, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10143801, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x10143805, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x10143809, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1014380c, 0x5)   calld(0x10144eb0, 0x169f);            /* call 0x10144eb0 */
    II(0x10143811, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10143814, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x10143818, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x1014381c, 0x2)   jnzd(0x1014383e, 0x20);               /* jnz 0x1014383e */
    II(0x1014381e, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x10143825, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143827, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1014382a, 0x5)   calld(0x10144e6c, 0x163d);            /* call 0x10144e6c */
    II(0x1014382f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143831, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143834, 0x5)   calld(0x10075f6c, -0xcd8cd);          /* call 0x10075f6c */
    II(0x10143839, 0x5)   jmpd(0x10143b60, 0x322);              /* jmp 0x10143b60 */
l_0x1014383e:
    II(0x1014383e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10143841, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10143844, 0x5)   calld(0x100ab2a8, -0x985a1);          /* call 0x100ab2a8 */
    II(0x10143849, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014384c, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1014384f, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x10143856, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10143859, 0x3)   or_(eax, memd_a32(ss, ebp - 0xc));    /* or eax, [ebp-0xc] */
    II(0x1014385c, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1014385f, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10143864, 0x5)   calld(0x10076338, -0xcd531);          /* call 0x10076338 */
    II(0x10143869, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014386b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1014386e, 0x5)   calld(0x1007643c, -0xcd437);          /* call 0x1007643c */
l_0x10143873:
    II(0x10143873, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143875, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143878, 0x5)   calld(0x1013ad71, -0x8b0c);           /* call 0x1013ad71 */
    II(0x1014387d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014387f, 0x6)   jzd(0x10143b30, 0x2ab);               /* jz dword 0x10143b30 */
    II(0x10143885, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143888, 0x5)   calld(0x100763a0, -0xcd4ed);          /* call 0x100763a0 */
    II(0x1014388d, 0x5)   calld(0x10076204, -0xcd68e);          /* call 0x10076204 */
    II(0x10143892, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x10));   /* cmp eax, [ebp-0x10] */
    II(0x10143895, 0x2)   jnzd(0x101438a6, 0xf);                /* jnz 0x101438a6 */
    II(0x10143897, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1014389a, 0x5)   calld(0x100763a0, -0xcd4ff);          /* call 0x100763a0 */
    II(0x1014389f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x101438a4, 0x2)   jzd(0x101438a8, 0x2);                 /* jz 0x101438a8 */
l_0x101438a6:
    II(0x101438a6, 0x2)   jmpd(0x101438b6, 0xe);                /* jmp 0x101438b6 */
l_0x101438a8:
    II(0x101438a8, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101438ab, 0x5)   calld(0x100763a0, -0xcd510);          /* call 0x100763a0 */
    II(0x101438b0, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x8);   /* cmp byte [eax+0x3d], 0x8 */
    II(0x101438b4, 0x2)   jnzd(0x101438b8, 0x2);                /* jnz 0x101438b8 */
l_0x101438b6:
    II(0x101438b6, 0x2)   jmpd(0x101438c6, 0xe);                /* jmp 0x101438c6 */
l_0x101438b8:
    II(0x101438b8, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101438bb, 0x5)   calld(0x100763a0, -0xcd520);          /* call 0x100763a0 */
    II(0x101438c0, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x101438c4, 0x2)   jnzd(0x101438c8, 0x2);                /* jnz 0x101438c8 */
l_0x101438c6:
    II(0x101438c6, 0x2)   jmpd(0x101438d6, 0xe);                /* jmp 0x101438d6 */
l_0x101438c8:
    II(0x101438c8, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101438cb, 0x5)   calld(0x100763a0, -0xcd530);          /* call 0x100763a0 */
    II(0x101438d0, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x101438d4, 0x2)   jnzd(0x101438db, 0x5);                /* jnz 0x101438db */
l_0x101438d6:
    II(0x101438d6, 0x5)   jmpd(0x10143b23, 0x248);              /* jmp 0x10143b23 */
l_0x101438db:
    II(0x101438db, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101438de, 0x5)   calld(0x100763a0, -0xcd543);          /* call 0x100763a0 */
    II(0x101438e3, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x101438e6, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101438e8, 0x1)   cwde();                               /* cwde */
    II(0x101438e9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101438ea, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101438ef, 0x1)   pushd(eax);                           /* push eax */
    II(0x101438f0, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x101438f3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101438f4, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x101438f7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101438f8, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x101438fb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101438fc, 0x5)   mov(ecx, 0x10);                       /* mov ecx, 0x10 */
    II(0x10143901, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10143906, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143909, 0x5)   calld(0x100763a0, -0xcd56e);          /* call 0x100763a0 */
    II(0x1014390e, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x10143911, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10143914, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143917, 0x5)   calld(0x100763a0, -0xcd57c);          /* call 0x100763a0 */
    II(0x1014391c, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1014391f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10143922, 0x5)   calld(0x10142b18, -0xe0f);            /* call 0x10142b18 */
    II(0x10143927, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014392a, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x1014392d, 0x2)   jmpd(0x10143973, 0x44);               /* jmp 0x10143973 */
l_0x1014392f:
    II(0x1014392f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143932, 0x5)   calld(0x100763a0, -0xcd597);          /* call 0x100763a0 */
    II(0x10143937, 0x3)   add(eax, 0x47);                       /* add eax, 0x47 */
    II(0x1014393a, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x1014393d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10143940, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x10143943, 0x2)   jmpd(0x10143992, 0x4d);               /* jmp 0x10143992 */
l_0x10143945:
    II(0x10143945, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143948, 0x5)   calld(0x100763a0, -0xcd5ad);          /* call 0x100763a0 */
    II(0x1014394d, 0x3)   add(eax, 0x48);                       /* add eax, 0x48 */
    II(0x10143950, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x10143953, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10143956, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x10143959, 0x2)   jmpd(0x10143992, 0x37);               /* jmp 0x10143992 */
l_0x1014395b:
    II(0x1014395b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1014395e, 0x5)   calld(0x100763a0, -0xcd5c3);          /* call 0x100763a0 */
    II(0x10143963, 0x3)   add(eax, 0x49);                       /* add eax, 0x49 */
    II(0x10143966, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x10143969, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1014396c, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1014396f, 0x2)   jmpd(0x10143992, 0x21);               /* jmp 0x10143992 */
l_0x10143971:
    II(0x10143971, 0x2)   jmpd(0x10143992, 0x1f);               /* jmp 0x10143992 */
l_0x10143973:
    II(0x10143973, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0x40);  /* cmp dword [ebp-0x48], 0x40 */
    II(0x10143977, 0x2)   jbd(0x1014398a, 0x11);                /* jb 0x1014398a */
    II(0x10143979, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0x40);  /* cmp dword [ebp-0x48], 0x40 */
    II(0x1014397d, 0x2)   jbed(0x1014395b, -0x24);              /* jbe 0x1014395b */
    II(0x1014397f, 0x7)   cmp(memd_a32(ss, ebp - 0x48), 0x80);  /* cmp dword [ebp-0x48], 0x80 */
    II(0x10143986, 0x2)   jzd(0x1014392f, -0x59);               /* jz 0x1014392f */
    II(0x10143988, 0x2)   jmpd(0x10143971, -0x19);              /* jmp 0x10143971 */
l_0x1014398a:
    II(0x1014398a, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0x20);  /* cmp dword [ebp-0x48], 0x20 */
    II(0x1014398e, 0x2)   jzd(0x10143945, -0x4b);               /* jz 0x10143945 */
    II(0x10143990, 0x2)   jmpd(0x10143971, -0x21);              /* jmp 0x10143971 */
l_0x10143992:
    II(0x10143992, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10143995, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143997, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10143999, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x50)); /* movsx eax, word [ebp-0x50] */
    II(0x1014399d, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1014399f, 0x6)   jged(0x10143b23, 0x17e);              /* jge dword 0x10143b23 */
    II(0x101439a5, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101439a8, 0x5)   calld(0x100763a0, -0xcd60d);          /* call 0x100763a0 */
    II(0x101439ad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101439af, 0x3)   mov(dl, memb_a32(ds, eax + 0x47));    /* mov dl, [eax+0x47] */
    II(0x101439b2, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101439b5, 0x5)   calld(0x100763a0, -0xcd61a);          /* call 0x100763a0 */
    II(0x101439ba, 0x3)   mov(al, memb_a32(ds, eax + 0x48));    /* mov al, [eax+0x48] */
    II(0x101439bd, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101439c2, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101439c4, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101439c7, 0x5)   calld(0x100763a0, -0xcd62c);          /* call 0x100763a0 */
    II(0x101439cc, 0x3)   mov(al, memb_a32(ds, eax + 0x49));    /* mov al, [eax+0x49] */
    II(0x101439cf, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101439d4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101439d6, 0x3)   cmp(eax, 0x10);                       /* cmp eax, 0x10 */
    II(0x101439d9, 0x6)   jged(0x10143a99, 0xba);               /* jge dword 0x10143a99 */
    II(0x101439df, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101439e2, 0x5)   calld(0x100763a0, -0xcd647);          /* call 0x100763a0 */
    II(0x101439e7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101439e9, 0x3)   mov(dl, memb_a32(ds, eax + 0x47));    /* mov dl, [eax+0x47] */
    II(0x101439ec, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101439ef, 0x5)   calld(0x100763a0, -0xcd654);          /* call 0x100763a0 */
    II(0x101439f4, 0x3)   mov(al, memb_a32(ds, eax + 0x49));    /* mov al, [eax+0x49] */
    II(0x101439f7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101439fc, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101439fe, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143a01, 0x5)   calld(0x100763a0, -0xcd666);          /* call 0x100763a0 */
    II(0x10143a06, 0x3)   mov(al, memb_a32(ds, eax + 0x48));    /* mov al, [eax+0x48] */
    II(0x10143a09, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10143a0e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10143a10, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x10143a15, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10143a17, 0x3)   mov(memd_a32(ss, ebp - 0x54), edx);   /* mov [ebp-0x54], edx */
    II(0x10143a1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x10143a1d, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x30));   /* cmp eax, [ebp-0x30] */
    II(0x10143a20, 0x2)   jled(0x10143a28, 0x6);                /* jle 0x10143a28 */
    II(0x10143a22, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10143a25, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
l_0x10143a28:
    II(0x10143a28, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10143a2b, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10143a2d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10143a32, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x50)); /* movsx edx, word [ebp-0x50] */
    II(0x10143a36, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10143a38, 0x3)   cmp(edx, memd_a32(ss, ebp - 0x54));   /* cmp edx, [ebp-0x54] */
    II(0x10143a3b, 0x2)   jged(0x10143a50, 0x13);               /* jge 0x10143a50 */
    II(0x10143a3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10143a40, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10143a42, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10143a47, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x50)); /* movsx edx, word [ebp-0x50] */
    II(0x10143a4b, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10143a4d, 0x3)   mov(memd_a32(ss, ebp - 0x54), edx);   /* mov [ebp-0x54], edx */
l_0x10143a50:
    II(0x10143a50, 0x3)   mov(al, memb_a32(ss, ebp - 0x54));    /* mov al, [ebp-0x54] */
    II(0x10143a53, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4c));   /* mov edx, [ebp-0x4c] */
    II(0x10143a56, 0x2)   add(memb_a32(ds, edx), al);           /* add [edx], al */
    II(0x10143a58, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143a5b, 0x5)   calld(0x100763a0, -0xcd6c0);          /* call 0x100763a0 */
    II(0x10143a60, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10143a62, 0x3)   mov(al, memb_a32(ss, ebp - 0x54));    /* mov al, [ebp-0x54] */
    II(0x10143a65, 0x3)   add(memb_a32(ds, edx + 0x46), al);    /* add [edx+0x46], al */
    II(0x10143a68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x10143a6b, 0x3)   add(memd_a32(ss, ebp - 0x28), eax);   /* add [ebp-0x28], eax */
    II(0x10143a6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x10143a71, 0x3)   sub(memd_a32(ss, ebp - 0x30), eax);   /* sub [ebp-0x30], eax */
    II(0x10143a74, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x10143a78, 0x2)   jnzd(0x10143a99, 0x1f);               /* jnz 0x10143a99 */
    II(0x10143a7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10143a7d, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10143a80, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143a82, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10143a85, 0x5)   calld(0x10144e6c, 0x13e2);            /* call 0x10144e6c */
    II(0x10143a8a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143a8c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143a8f, 0x5)   calld(0x10075f6c, -0xcdb28);          /* call 0x10075f6c */
    II(0x10143a94, 0x5)   jmpd(0x10143b60, 0xc7);               /* jmp 0x10143b60 */
l_0x10143a99:
    II(0x10143a99, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143a9c, 0x5)   calld(0x100763a0, -0xcd701);          /* call 0x100763a0 */
    II(0x10143aa1, 0x3)   add(eax, 0x47);                       /* add eax, 0x47 */
    II(0x10143aa4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10143aa5, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x50)); /* movsx ecx, word [ebp-0x50] */
    II(0x10143aa9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4c));   /* mov ebx, [ebp-0x4c] */
    II(0x10143aac, 0x5)   mov(edx, 0x80);                       /* mov edx, 0x80 */
    II(0x10143ab1, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10143ab4, 0x5)   calld(0x101436e7, -0x3d2);            /* call 0x101436e7 */
    II(0x10143ab9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10143abb, 0x2)   jnzd(0x10143ae1, 0x24);               /* jnz 0x10143ae1 */
    II(0x10143abd, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143ac0, 0x5)   calld(0x100763a0, -0xcd725);          /* call 0x100763a0 */
    II(0x10143ac5, 0x3)   add(eax, 0x48);                       /* add eax, 0x48 */
    II(0x10143ac8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10143ac9, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x50)); /* movsx ecx, word [ebp-0x50] */
    II(0x10143acd, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4c));   /* mov ebx, [ebp-0x4c] */
    II(0x10143ad0, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x10143ad5, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10143ad8, 0x5)   calld(0x101436e7, -0x3f6);            /* call 0x101436e7 */
    II(0x10143add, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10143adf, 0x2)   jzd(0x10143ae3, 0x2);                 /* jz 0x10143ae3 */
l_0x10143ae1:
    II(0x10143ae1, 0x2)   jmpd(0x10143b07, 0x24);               /* jmp 0x10143b07 */
l_0x10143ae3:
    II(0x10143ae3, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143ae6, 0x5)   calld(0x100763a0, -0xcd74b);          /* call 0x100763a0 */
    II(0x10143aeb, 0x3)   add(eax, 0x49);                       /* add eax, 0x49 */
    II(0x10143aee, 0x1)   pushd(eax);                           /* push eax */
    II(0x10143aef, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x50)); /* movsx ecx, word [ebp-0x50] */
    II(0x10143af3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4c));   /* mov ebx, [ebp-0x4c] */
    II(0x10143af6, 0x5)   mov(edx, 0x40);                       /* mov edx, 0x40 */
    II(0x10143afb, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10143afe, 0x5)   calld(0x101436e7, -0x41c);            /* call 0x101436e7 */
    II(0x10143b03, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10143b05, 0x2)   jzd(0x10143b23, 0x1c);                /* jz 0x10143b23 */
l_0x10143b07:
    II(0x10143b07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10143b0a, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10143b0d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143b0f, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10143b12, 0x5)   calld(0x10144e6c, 0x1355);            /* call 0x10144e6c */
    II(0x10143b17, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143b19, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143b1c, 0x5)   calld(0x10075f6c, -0xcdbb5);          /* call 0x10075f6c */
    II(0x10143b21, 0x2)   jmpd(0x10143b60, 0x3d);               /* jmp 0x10143b60 */
l_0x10143b23:
    II(0x10143b23, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143b26, 0x5)   calld(0x10076bf8, -0xccf33);          /* call 0x10076bf8 */
    II(0x10143b2b, 0x5)   jmpd(0x10143873, -0x2bd);             /* jmp 0x10143873 */
l_0x10143b30:
    II(0x10143b30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10143b33, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10143b36, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143b38, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10143b3b, 0x5)   calld(0x10144e6c, 0x132c);            /* call 0x10144e6c */
    II(0x10143b40, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143b42, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143b45, 0x5)   calld(0x10075f6c, -0xcdbde);          /* call 0x10075f6c */
    II(0x10143b4a, 0x2)   jmpd(0x10143b60, 0x14);               /* jmp 0x10143b60 */
//  II(0x10143b4c, 0x14)  /* Недостижимый код. */
l_0x10143b60:
    II(0x10143b60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10143b63, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10143b65, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10143b66, 0x1)   popd(edi);                            /* pop edi */
    II(0x10143b67, 0x1)   popd(esi);                            /* pop esi */
    II(0x10143b68, 0x1)   retd();                               /* ret */
FUNC_END

