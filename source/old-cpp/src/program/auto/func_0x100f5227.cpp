FUNC_BEGIN(0x100f5227, 0xd9d6f9800fc43d02, 0x20, ({0x68, 0xc, 0x1, 0, 0, 0xe8, 0x21, 0xb, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xdc, 0, 0, 0, 0x88, 0x45, 0xfc, 0xa1, 0x1e, 0x71, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0xff, 0x75, 0x11, 0x31, 0xd2, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0xe8, 0x63, 0xfc, 0xff, 0xff, 0xe9, 0x5e, 0x1, 0, 0, 0xe8, 0xab, 0x49, 0x4, 0, 0x88, 0x45, 0xf8, 0xf, 0xbe, 0x5d, 0xf8, 0xc1, 0xe3, 0x2, 0xff, 0xb3, 0x2c, 0xd4, 0x1b, 0x10, 0xa1, 0x1e, 0x71, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x6c, 0x25, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0xe8, 0x50, 0xe8, 0x74, 0xc, 0x7, 0, 0x83, 0xc4, 0x10, 0x31, 0xc9, 0x8d, 0x9d, 0x38, 0xff, 0xff, 0xff, 0x66, 0xf, 0xbe, 0x45, 0xf8, 0xf, 0xbf, 0xd0, 0xa1, 0x1e, 0x71, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x31, 0x48, 0x4, 0, 0x80, 0x8d, 0x34, 0xff, 0xff, 0xff, 0x1, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0x29, 0xc8, 0x4, 0, 0x89, 0x85, 0x2c, 0xff, 0xff, 0xff, 0x80, 0xa5, 0x34, 0xff, 0xff, 0xff, 0xfe, 0x8d, 0x85, 0x3b, 0xff, 0xff, 0xff, 0x50, 0x8d, 0x45, 0xe8, 0x50, 0x80, 0x7d, 0xfc, 0, 0x74, 0xc, 0xc7, 0x85, 0x28, 0xff, 0xff, 0xff, 0x76, 0x25, 0x1a, 0x10, 0xeb, 0xa, 0xc7, 0x85, 0x28, 0xff, 0xff, 0xff, 0x8f, 0x25, 0x1a, 0x10, 0xff, 0xb5, 0x28, 0xff, 0xff, 0xff, 0xb8, 0xc8, 0, 0, 0, 0x50, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x2c, 0xcd, 0x4, 0, 0x83, 0xc4, 0x14, 0x31, 0xd2, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0xad, 0x44, 0xf9, 0xff, 0xe8, 0x16, 0x1d, 0x2, 0, 0x85, 0xc0, 0x75, 0x12, 0x31, 0xd2, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0xf9, 0xc7, 0x4, 0, 0xe9, 0x88, 0, 0, 0, 0x80, 0x7d, 0xfc, 0, 0x74, 0x4f, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0xe, 0x8d, 0x95, 0x3b, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x2, 0x3e, 0x3, 0, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x95, 0x3b, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x1b, 0x1b, 0x4, 0, 0xe8, 0x95, 0x56, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xaa, 0x56, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0xa8, 0x25, 0x1a, 0x10, 0xe8, 0x9a, 0x9, 0x2, 0, 0xeb, 0x26, 0xe8, 0xb8, 0x9f, 0xff, 0xff, 0x98, 0xe8, 0x3, 0xe1, 0xff, 0xff, 0x89, 0x85, 0x24, 0xff, 0xff, 0xff, 0x31, 0xdb, 0x8b, 0x95, 0x24, 0xff, 0xff, 0xff, 0xa1, 0x1e, 0x71, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x3, 0xe6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0x6c, 0xc7, 0x4, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f5227, 0x5)   pushd(0x10c);                         /* push dword 0x10c */
    II(0x100f522c, 0x5)   calld(sys_check_available_stack_size, 0x70b21); /* call 0x10165d52 */
    II(0x100f5231, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f5232, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f5233, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f5234, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f5235, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f5236, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f5237, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f5239, 0x6)   sub(esp, 0xdc);                       /* sub esp, 0xdc */
    II(0x100f523f, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x100f5242, 0x5)   mov(eax, memd_a32(ds, 0x101c711e));   /* mov eax, [0x101c711e] */
    II(0x100f5247, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f524a, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x100f524d, 0x2)   jnzd(0x100f5260, 0x11);               /* jnz 0x100f5260 */
    II(0x100f524f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f5251, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f5253, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100f5256, 0x5)   calld(0x100f4ebe, -0x39d);            /* call 0x100f4ebe */
    II(0x100f525b, 0x5)   jmpd(0x100f53be, 0x15e);              /* jmp 0x100f53be */
l_0x100f5260:
    II(0x100f5260, 0x5)   calld(0x10139c10, 0x449ab);           /* call 0x10139c10 */
    II(0x100f5265, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x100f5268, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x8));  /* movsx ebx, byte [ebp-0x8] */
    II(0x100f526c, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x100f526f, 0x6)   pushd(memd_a32(ds, ebx + 0x101bd42c)); /* push dword [ebx+0x101bd42c] */
    II(0x100f5275, 0x5)   mov(eax, memd_a32(ds, 0x101c711e));   /* mov eax, [0x101c711e] */
    II(0x100f527a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f527d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f527e, 0x5)   mov(eax, 0x101a256c);                 /* mov eax, 0x101a256c */ /* "save%i.%s" */
    II(0x100f5283, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f5284, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100f5287, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f5288, 0x5)   calld(sys_sprintf, 0x70c74);          /* call 0x10165f01 */
    II(0x100f528d, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100f5290, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100f5292, 0x6)   lea(ebx, ebp - 0xc8);                 /* lea ebx, [ebp+0xffffff38] */
    II(0x100f5298, 0x5)   movsx(ax, memb_a32(ss, ebp - 0x8));   /* movsx ax, byte [ebp-0x8] */
    II(0x100f529d, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f52a0, 0x5)   mov(eax, memd_a32(ds, 0x101c711e));   /* mov eax, [0x101c711e] */
    II(0x100f52a5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f52a8, 0x5)   calld(0x10139ade, 0x44831);           /* call 0x10139ade */
    II(0x100f52ad, 0x7)   or_(memb_a32(ss, ebp - 0xcc), 0x1);   /* or byte [ebp+0xffffff34], 0x1 */
    II(0x100f52b4, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x100f52ba, 0x5)   calld(my_string_ctor, 0x4c829);       /* call 0x10141ae8 */
    II(0x100f52bf, 0x6)   mov(memd_a32(ss, ebp - 0xd4), eax);   /* mov [ebp+0xffffff2c], eax */
    II(0x100f52c5, 0x7)   and_(memb_a32(ss, ebp - 0xcc), -0x2 /* 0xfe */); /* and byte [ebp+0xffffff34], 0xfe */
    II(0x100f52cc, 0x6)   lea(eax, ebp - 0xc5);                 /* lea eax, [ebp+0xffffff3b] */
    II(0x100f52d2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f52d3, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100f52d6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f52d7, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100f52db, 0x2)   jzd(0x100f52e9, 0xc);                 /* jz 0x100f52e9 */
    II(0x100f52dd, 0xa)   mov(memd_a32(ss, ebp - 0xd8), 0x101a2576); /* mov dword [ebp+0xffffff28], 0x101a2576 */ /* "OK to save file?\n%s\n"%s"" */
    II(0x100f52e7, 0x2)   jmpd(0x100f52f3, 0xa);                /* jmp 0x100f52f3 */
l_0x100f52e9:
    II(0x100f52e9, 0xa)   mov(memd_a32(ss, ebp - 0xd8), 0x101a258f); /* mov dword [ebp+0xffffff28], 0x101a258f */ /* "OK to load file?\n%s\n"%s"" */
l_0x100f52f3:
    II(0x100f52f3, 0x6)   pushd(memd_a32(ss, ebp - 0xd8));      /* push dword [ebp+0xffffff28] */
    II(0x100f52f9, 0x5)   mov(eax, 0xc8);                       /* mov eax, 0xc8 */
    II(0x100f52fe, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f52ff, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x100f5305, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f5306, 0x5)   calld(0x10142037, 0x4cd2c);           /* call 0x10142037 */
    II(0x100f530b, 0x3)   add(esp, 0x14);                       /* add esp, 0x14 */
    II(0x100f530e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f5310, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x100f5316, 0x5)   calld(my_strobj_c_str_v2, -0x6bb53);  /* call 0x100897c8 */
    II(0x100f531b, 0x5)   calld(0x10117036, 0x21d16);           /* call 0x10117036 */
    II(0x100f5320, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f5322, 0x2)   jnzd(0x100f5336, 0x12);               /* jnz 0x100f5336 */
    II(0x100f5324, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f5326, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x100f532c, 0x5)   calld(my_string_dtor, 0x4c7f9);       /* call 0x10141b2a */
    II(0x100f5331, 0x5)   jmpd(0x100f53be, 0x88);               /* jmp 0x100f53be */
l_0x100f5336:
    II(0x100f5336, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100f533a, 0x2)   jzd(0x100f538b, 0x4f);                /* jz 0x100f538b */
    II(0x100f533c, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100f5343, 0x2)   jzd(0x100f5353, 0xe);                 /* jz 0x100f5353 */
    II(0x100f5345, 0x6)   lea(edx, ebp - 0xc5);                 /* lea edx, [ebp+0xffffff3b] */
    II(0x100f534b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100f534e, 0x5)   calld(0x10129155, 0x33e02);           /* call 0x10129155 */
l_0x100f5353:
    II(0x100f5353, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100f5358, 0x6)   lea(edx, ebp - 0xc5);                 /* lea edx, [ebp+0xffffff3b] */
    II(0x100f535e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100f5361, 0x5)   calld(0x10136e81, 0x41b1b);           /* call 0x10136e81 */
    II(0x100f5366, 0x5)   calld(0x100caa00, -0x2a96b);          /* call 0x100caa00 */
    II(0x100f536b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f5370, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f5371, 0x5)   calld(0x100caa20, -0x2a956);          /* call 0x100caa20 */
    II(0x100f5376, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f5378, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f537a, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100f537f, 0x5)   mov(eax, 0x101a25a8);                 /* mov eax, 0x101a25a8 */ /* "Game saved." */
    II(0x100f5384, 0x5)   calld(0x10115d23, 0x2099a);           /* call 0x10115d23 */
    II(0x100f5389, 0x2)   jmpd(0x100f53b1, 0x26);               /* jmp 0x100f53b1 */
l_0x100f538b:
    II(0x100f538b, 0x5)   calld(0x100ef348, -0x6048);           /* call 0x100ef348 */
    II(0x100f5390, 0x1)   cwde();                               /* cwde */
    II(0x100f5391, 0x5)   calld(0x100f3499, -0x1efd);           /* call 0x100f3499 */
    II(0x100f5396, 0x6)   mov(memd_a32(ss, ebp - 0xdc), eax);   /* mov [ebp+0xffffff24], eax */
    II(0x100f539c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f539e, 0x6)   mov(edx, memd_a32(ss, ebp - 0xdc));   /* mov edx, [ebp+0xffffff24] */
    II(0x100f53a4, 0x5)   mov(eax, memd_a32(ds, 0x101c711e));   /* mov eax, [0x101c711e] */
    II(0x100f53a9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f53ac, 0x5)   calld(0x100f39b4, -0x19fd);           /* call 0x100f39b4 */
l_0x100f53b1:
    II(0x100f53b1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f53b3, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x100f53b9, 0x5)   calld(my_string_dtor, 0x4c76c);       /* call 0x10141b2a */
l_0x100f53be:
    II(0x100f53be, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f53c0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f53c1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f53c2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f53c3, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f53c4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f53c5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f53c6, 0x1)   retd();                               /* ret */
FUNC_END

