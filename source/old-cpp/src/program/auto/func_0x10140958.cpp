FUNC_BEGIN(0x10140958, 0x26a121c36465e44a, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xf0, 0x53, 0x2, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xcf, 0x98, 0x2, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2c, 0xe8, 0xe1, 0x75, 0xf9, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x26, 0x8b, 0x55, 0xfc, 0x66, 0x3, 0x42, 0x2a, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1c, 0xe8, 0x31, 0xab, 0xf6, 0xff, 0x66, 0x3b, 0x45, 0xf4, 0x7e, 0x1f, 0xe8, 0x32, 0x48, 0xf9, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x49, 0x48, 0xf9, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x34, 0xe8, 0xb2, 0xf0, 0xf8, 0xff, 0xeb, 0x22, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1c, 0xe8, 0x1, 0xab, 0xf6, 0xff, 0x89, 0x45, 0xf4, 0xe8, 0xe5, 0x47, 0xf9, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x34, 0xe8, 0x18, 0xf1, 0xf8, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x24, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x16, 0xe8, 0xc4, 0x47, 0xf9, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x30, 0xe8, 0xf7, 0xf0, 0xf8, 0xff, 0xeb, 0x1d, 0xe8, 0xce, 0x47, 0xf9, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xe5, 0x47, 0xf9, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x30, 0xe8, 0x4e, 0xf0, 0xf8, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x26, 0x89, 0x45, 0xf8, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x45, 0xf4, 0xf, 0x8d, 0xa4, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x28, 0x7d, 0x2a, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1c, 0xe8, 0x27, 0xb, 0, 0, 0x89, 0xc1, 0xbb, 0x31, 0xce, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0xbd, 0xfd, 0xff, 0xff, 0xeb, 0x5e, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x28, 0x75, 0x2a, 0xb8, 0x30, 0, 0, 0, 0x50, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1c, 0xe8, 0xf1, 0xa, 0, 0, 0x89, 0xc1, 0xbb, 0x3a, 0xce, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0x87, 0xfd, 0xff, 0xff, 0xeb, 0x28, 0xb8, 0x4, 0, 0, 0, 0x50, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1c, 0xe8, 0xc7, 0xa, 0, 0, 0x89, 0xc1, 0xbb, 0x41, 0xce, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0x5d, 0xfd, 0xff, 0xff, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x1, 0xc0, 0x1, 0x45, 0xf0, 0xe9, 0x49, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x12, 0xe8, 0x81, 0x69, 0x2, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10140958, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1014095d, 0x5)   calld(sys_check_available_stack_size, 0x253f0); /* call 0x10165d52 */
    II(0x10140962, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10140963, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10140964, 0x1)   pushd(edx);                           /* push edx */
    II(0x10140965, 0x1)   pushd(esi);                           /* push esi */
    II(0x10140966, 0x1)   pushd(edi);                           /* push edi */
    II(0x10140967, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10140968, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014096a, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10140970, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10140973, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10140978, 0x5)   calld(/* sys */ 0x1016a24c, 0x298cf); /* call 0x1016a24c */
    II(0x1014097d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10140980, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140983, 0x3)   mov(eax, memd_a32(ds, eax + 0x2c));   /* mov eax, [eax+0x2c] */
    II(0x10140986, 0x5)   calld(0x100d7f6c, -0x68a1f);          /* call 0x100d7f6c */
    II(0x1014098b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014098e, 0x4)   mov(ax, memw_a32(ds, eax + 0x26));    /* mov ax, [eax+0x26] */
    II(0x10140992, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10140995, 0x4)   add(ax, memw_a32(ds, edx + 0x2a));    /* add ax, [edx+0x2a] */
    II(0x10140999, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014099c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014099f, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x101409a2, 0x5)   calld(my_1_get_count, -0x954cf);      /* call 0x100ab4d8 */
    II(0x101409a7, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x101409ab, 0x2)   jled(0x101409cc, 0x1f);               /* jle 0x101409cc */
    II(0x101409ad, 0x5)   calld(0x100d51e4, -0x6b7ce);          /* call 0x100d51e4 */
    II(0x101409b2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101409b4, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x101409b6, 0x5)   calld(0x100d5204, -0x6b7b7);          /* call 0x100d5204 */
    II(0x101409bb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101409bd, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x101409bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101409c2, 0x3)   mov(eax, memd_a32(ds, eax + 0x34));   /* mov eax, [eax+0x34] */
    II(0x101409c5, 0x5)   calld(0x100cfa7c, -0x70f4e);          /* call 0x100cfa7c */
    II(0x101409ca, 0x2)   jmpd(0x101409ee, 0x22);               /* jmp 0x101409ee */
l_0x101409cc:
    II(0x101409cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101409cf, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x101409d2, 0x5)   calld(my_1_get_count, -0x954ff);      /* call 0x100ab4d8 */
    II(0x101409d7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101409da, 0x5)   calld(0x100d51c4, -0x6b81b);          /* call 0x100d51c4 */
    II(0x101409df, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101409e1, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x101409e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101409e6, 0x3)   mov(eax, memd_a32(ds, eax + 0x34));   /* mov eax, [eax+0x34] */
    II(0x101409e9, 0x5)   calld(0x100cfb06, -0x70ee8);          /* call 0x100cfb06 */
l_0x101409ee:
    II(0x101409ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101409f1, 0x3)   mov(eax, memd_a32(ds, eax + 0x24));   /* mov eax, [eax+0x24] */
    II(0x101409f4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101409f7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101409f9, 0x2)   jnzd(0x10140a11, 0x16);               /* jnz 0x10140a11 */
    II(0x101409fb, 0x5)   calld(0x100d51c4, -0x6b83c);          /* call 0x100d51c4 */
    II(0x10140a00, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10140a02, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10140a04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140a07, 0x3)   mov(eax, memd_a32(ds, eax + 0x30));   /* mov eax, [eax+0x30] */
    II(0x10140a0a, 0x5)   calld(0x100cfb06, -0x70f09);          /* call 0x100cfb06 */
    II(0x10140a0f, 0x2)   jmpd(0x10140a2e, 0x1d);               /* jmp 0x10140a2e */
l_0x10140a11:
    II(0x10140a11, 0x5)   calld(0x100d51e4, -0x6b832);          /* call 0x100d51e4 */
    II(0x10140a16, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10140a18, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10140a1a, 0x5)   calld(0x100d5204, -0x6b81b);          /* call 0x100d5204 */
    II(0x10140a1f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10140a21, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10140a23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140a26, 0x3)   mov(eax, memd_a32(ds, eax + 0x30));   /* mov eax, [eax+0x30] */
    II(0x10140a29, 0x5)   calld(0x100cfa7c, -0x70fb2);          /* call 0x100cfa7c */
l_0x10140a2e:
    II(0x10140a2e, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10140a35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140a38, 0x4)   mov(ax, memw_a32(ds, eax + 0x26));    /* mov ax, [eax+0x26] */
    II(0x10140a3c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10140a3f, 0x2)   jmpd(0x10140a47, 0x6);                /* jmp 0x10140a47 */
l_0x10140a41:
    II(0x10140a41, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140a44, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x10140a47:
    II(0x10140a47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140a4a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x10140a4e, 0x6)   jged(0x10140af8, 0xa4);               /* jge dword 0x10140af8 */
    II(0x10140a54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140a57, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10140a5a, 0x4)   cmp(ax, memw_a32(ds, edx + 0x28));    /* cmp ax, [edx+0x28] */
    II(0x10140a5e, 0x2)   jged(0x10140a8a, 0x2a);               /* jge 0x10140a8a */
    II(0x10140a60, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10140a65, 0x1)   pushd(eax);                           /* push eax */
    II(0x10140a66, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10140a6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140a6d, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10140a70, 0x5)   calld(0x1014159c, 0xb27);             /* call 0x1014159c */
    II(0x10140a75, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10140a77, 0x5)   mov(ebx, 0x101ace31);                 /* mov ebx, 0x101ace31 */ /* "Parent: " */
    II(0x10140a7c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10140a80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140a83, 0x5)   calld(0x10140845, -0x243);            /* call 0x10140845 */
    II(0x10140a88, 0x2)   jmpd(0x10140ae8, 0x5e);               /* jmp 0x10140ae8 */
l_0x10140a8a:
    II(0x10140a8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140a8d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10140a90, 0x4)   cmp(ax, memw_a32(ds, edx + 0x28));    /* cmp ax, [edx+0x28] */
    II(0x10140a94, 0x2)   jnzd(0x10140ac0, 0x2a);               /* jnz 0x10140ac0 */
    II(0x10140a96, 0x5)   mov(eax, 0x30);                       /* mov eax, 0x30 */
    II(0x10140a9b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10140a9c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10140aa0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140aa3, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10140aa6, 0x5)   calld(0x1014159c, 0xaf1);             /* call 0x1014159c */
    II(0x10140aab, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10140aad, 0x5)   mov(ebx, 0x101ace3a);                 /* mov ebx, 0x101ace3a */ /* "Task: " */
    II(0x10140ab2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10140ab6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140ab9, 0x5)   calld(0x10140845, -0x279);            /* call 0x10140845 */
    II(0x10140abe, 0x2)   jmpd(0x10140ae8, 0x28);               /* jmp 0x10140ae8 */
l_0x10140ac0:
    II(0x10140ac0, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x10140ac5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10140ac6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10140aca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140acd, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10140ad0, 0x5)   calld(0x1014159c, 0xac7);             /* call 0x1014159c */
    II(0x10140ad5, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10140ad7, 0x5)   mov(ebx, 0x101ace41);                 /* mov ebx, 0x101ace41 */ /* "Child: " */
    II(0x10140adc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10140ae0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140ae3, 0x5)   calld(0x10140845, -0x2a3);            /* call 0x10140845 */
l_0x10140ae8:
    II(0x10140ae8, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x10140aee, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10140af0, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x10140af3, 0x5)   jmpd(0x10140a41, -0xb7);              /* jmp 0x10140a41 */
l_0x10140af8:
    II(0x10140af8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140afb, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10140afe, 0x5)   calld(sys_display_draw_0, 0x26981);   /* call 0x10167484 */
    II(0x10140b03, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10140b05, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10140b06, 0x1)   popd(edi);                            /* pop edi */
    II(0x10140b07, 0x1)   popd(esi);                            /* pop esi */
    II(0x10140b08, 0x1)   popd(edx);                            /* pop edx */
    II(0x10140b09, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10140b0a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10140b0b, 0x1)   retd();                               /* ret */
FUNC_END

