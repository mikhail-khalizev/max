FUNC_BEGIN(0x100bdec7, 0xa31c8063aa6ff838, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x81, 0x7e, 0xa, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0xe, 0x86, 0xfb, 0xff, 0x89, 0x45, 0xf0, 0x80, 0x65, 0xf8, 0xfe, 0xa1, 0xbe, 0x31, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x2, 0x75, 0x13, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x5c, 0x80, 0xfb, 0xff, 0xe9, 0x73, 0x1, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x19, 0x84, 0xfb, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x11, 0x85, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xc3, 0x8c, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x32, 0xce, 0x7, 0, 0x84, 0xc0, 0x74, 0x46, 0x8d, 0x45, 0xec, 0xe8, 0x55, 0x84, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x2d, 0xe8, 0x4d, 0xbb, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x69, 0x84, 0xfb, 0xff, 0xe8, 0xd0, 0xa8, 0xfb, 0xff, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xea, 0x7f, 0xfb, 0xff, 0xe9, 0x1, 0x1, 0, 0, 0xeb, 0xa4, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xa5, 0x83, 0xfb, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x9d, 0x84, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x4f, 0x8c, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xbe, 0xcd, 0x7, 0, 0x84, 0xc0, 0x74, 0x46, 0x8d, 0x45, 0xec, 0xe8, 0xe1, 0x83, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x2d, 0xe8, 0xd9, 0xba, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xf5, 0x83, 0xfb, 0xff, 0xe8, 0x5c, 0xa8, 0xfb, 0xff, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x76, 0x7f, 0xfb, 0xff, 0xe9, 0x8d, 0, 0, 0, 0xeb, 0xa4, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x31, 0x83, 0xfb, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x29, 0x84, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xdb, 0x8b, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x4a, 0xcd, 0x7, 0, 0x84, 0xc0, 0x74, 0x43, 0x8d, 0x45, 0xec, 0xe8, 0x6d, 0x83, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x2a, 0xe8, 0x65, 0xba, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x81, 0x83, 0xfb, 0xff, 0xe8, 0xe8, 0xa7, 0xfb, 0xff, 0x84, 0xc0, 0x74, 0x10, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x2, 0x7f, 0xfb, 0xff, 0xeb, 0x1c, 0xeb, 0xa7, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf0, 0x7e, 0xfb, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe4, 0x7e, 0xfb, 0xff, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100bdec7, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100bdecc, 0x5)   calld(sys_check_available_stack_size, 0xa7e81); /* call 0x10165d52 */
    II(0x100bded1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100bded2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100bded3, 0x1)   pushd(edx);                           /* push edx */
    II(0x100bded4, 0x1)   pushd(esi);                           /* push esi */
    II(0x100bded5, 0x1)   pushd(edi);                           /* push edi */
    II(0x100bded6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100bded7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100bded9, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100bdedf, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100bdee2, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100bdee6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdee9, 0x5)   calld(0x100764fc, -0x479f2);          /* call 0x100764fc */
    II(0x100bdeee, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100bdef1, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100bdef5, 0x5)   mov(eax, memd_a32(ds, 0x101c31be));   /* mov eax, [0x101c31be] */
    II(0x100bdefa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bdefd, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100bdf00, 0x2)   jnzd(0x100bdf15, 0x13);               /* jnz 0x100bdf15 */
    II(0x100bdf02, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100bdf06, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdf08, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdf0b, 0x5)   calld(0x10075f6c, -0x47fa4);          /* call 0x10075f6c */
    II(0x100bdf10, 0x5)   jmpd(0x100be088, 0x173);              /* jmp 0x100be088 */
l_0x100bdf15:
    II(0x100bdf15, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bdf1a, 0x5)   calld(0x10076338, -0x47be7);          /* call 0x10076338 */
    II(0x100bdf1f, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100bdf22, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bdf24, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bdf26, 0x5)   calld(0x1007643c, -0x47aef);          /* call 0x1007643c */
    II(0x100bdf2b, 0x2)   jmpd(0x100bdf35, 0x8);                /* jmp 0x100bdf35 */
l_0x100bdf2d:
    II(0x100bdf2d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdf30, 0x5)   calld(0x10076bf8, -0x4733d);          /* call 0x10076bf8 */
l_0x100bdf35:
    II(0x100bdf35, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdf37, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdf3a, 0x5)   calld(0x1013ad71, 0x7ce32);           /* call 0x1013ad71 */
    II(0x100bdf3f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bdf41, 0x2)   jzd(0x100bdf89, 0x46);                /* jz 0x100bdf89 */
    II(0x100bdf43, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdf46, 0x5)   calld(0x100763a0, -0x47bab);          /* call 0x100763a0 */
    II(0x100bdf4b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdf4d, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bdf50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bdf53, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bdf56, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bdf58, 0x2)   jnzd(0x100bdf87, 0x2d);               /* jnz 0x100bdf87 */
    II(0x100bdf5a, 0x5)   calld(0x10089aac, -0x344b3);          /* call 0x10089aac */
    II(0x100bdf5f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdf61, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100bdf63, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdf66, 0x5)   calld(0x100763d4, -0x47b97);          /* call 0x100763d4 */
    II(0x100bdf6b, 0x5)   calld(0x10078840, -0x45730);          /* call 0x10078840 */
    II(0x100bdf70, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bdf72, 0x2)   jzd(0x100bdf87, 0x13);                /* jz 0x100bdf87 */
    II(0x100bdf74, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100bdf78, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdf7a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdf7d, 0x5)   calld(0x10075f6c, -0x48016);          /* call 0x10075f6c */
    II(0x100bdf82, 0x5)   jmpd(0x100be088, 0x101);              /* jmp 0x100be088 */
l_0x100bdf87:
    II(0x100bdf87, 0x2)   jmpd(0x100bdf2d, -0x5c);              /* jmp 0x100bdf2d */
l_0x100bdf89:
    II(0x100bdf89, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100bdf8e, 0x5)   calld(0x10076338, -0x47c5b);          /* call 0x10076338 */
    II(0x100bdf93, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100bdf96, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bdf98, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bdf9a, 0x5)   calld(0x1007643c, -0x47b63);          /* call 0x1007643c */
    II(0x100bdf9f, 0x2)   jmpd(0x100bdfa9, 0x8);                /* jmp 0x100bdfa9 */
l_0x100bdfa1:
    II(0x100bdfa1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdfa4, 0x5)   calld(0x10076bf8, -0x473b1);          /* call 0x10076bf8 */
l_0x100bdfa9:
    II(0x100bdfa9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdfab, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdfae, 0x5)   calld(0x1013ad71, 0x7cdbe);           /* call 0x1013ad71 */
    II(0x100bdfb3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bdfb5, 0x2)   jzd(0x100bdffd, 0x46);                /* jz 0x100bdffd */
    II(0x100bdfb7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdfba, 0x5)   calld(0x100763a0, -0x47c1f);          /* call 0x100763a0 */
    II(0x100bdfbf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdfc1, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bdfc4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bdfc7, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bdfca, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bdfcc, 0x2)   jnzd(0x100bdffb, 0x2d);               /* jnz 0x100bdffb */
    II(0x100bdfce, 0x5)   calld(0x10089aac, -0x34527);          /* call 0x10089aac */
    II(0x100bdfd3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdfd5, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100bdfd7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdfda, 0x5)   calld(0x100763d4, -0x47c0b);          /* call 0x100763d4 */
    II(0x100bdfdf, 0x5)   calld(0x10078840, -0x457a4);          /* call 0x10078840 */
    II(0x100bdfe4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bdfe6, 0x2)   jzd(0x100bdffb, 0x13);                /* jz 0x100bdffb */
    II(0x100bdfe8, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100bdfec, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdfee, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bdff1, 0x5)   calld(0x10075f6c, -0x4808a);          /* call 0x10075f6c */
    II(0x100bdff6, 0x5)   jmpd(0x100be088, 0x8d);               /* jmp 0x100be088 */
l_0x100bdffb:
    II(0x100bdffb, 0x2)   jmpd(0x100bdfa1, -0x5c);              /* jmp 0x100bdfa1 */
l_0x100bdffd:
    II(0x100bdffd, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100be002, 0x5)   calld(0x10076338, -0x47ccf);          /* call 0x10076338 */
    II(0x100be007, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100be00a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100be00c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100be00e, 0x5)   calld(0x1007643c, -0x47bd7);          /* call 0x1007643c */
    II(0x100be013, 0x2)   jmpd(0x100be01d, 0x8);                /* jmp 0x100be01d */
l_0x100be015:
    II(0x100be015, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100be018, 0x5)   calld(0x10076bf8, -0x47425);          /* call 0x10076bf8 */
l_0x100be01d:
    II(0x100be01d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be01f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100be022, 0x5)   calld(0x1013ad71, 0x7cd4a);           /* call 0x1013ad71 */
    II(0x100be027, 0x2)   test(al, al);                         /* test al, al */
    II(0x100be029, 0x2)   jzd(0x100be06e, 0x43);                /* jz 0x100be06e */
    II(0x100be02b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100be02e, 0x5)   calld(0x100763a0, -0x47c93);          /* call 0x100763a0 */
    II(0x100be033, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be035, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100be038, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be03b, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100be03e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100be040, 0x2)   jnzd(0x100be06c, 0x2a);               /* jnz 0x100be06c */
    II(0x100be042, 0x5)   calld(0x10089aac, -0x3459b);          /* call 0x10089aac */
    II(0x100be047, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be049, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100be04b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100be04e, 0x5)   calld(0x100763d4, -0x47c7f);          /* call 0x100763d4 */
    II(0x100be053, 0x5)   calld(0x10078840, -0x45818);          /* call 0x10078840 */
    II(0x100be058, 0x2)   test(al, al);                         /* test al, al */
    II(0x100be05a, 0x2)   jzd(0x100be06c, 0x10);                /* jz 0x100be06c */
    II(0x100be05c, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100be060, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be062, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100be065, 0x5)   calld(0x10075f6c, -0x480fe);          /* call 0x10075f6c */
    II(0x100be06a, 0x2)   jmpd(0x100be088, 0x1c);               /* jmp 0x100be088 */
l_0x100be06c:
    II(0x100be06c, 0x2)   jmpd(0x100be015, -0x59);              /* jmp 0x100be015 */
l_0x100be06e:
    II(0x100be06e, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100be072, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be074, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100be077, 0x5)   calld(0x10075f6c, -0x48110);          /* call 0x10075f6c */
    II(0x100be07c, 0x2)   jmpd(0x100be088, 0xa);                /* jmp 0x100be088 */
//  II(0x100be07e, 0xa)   /* Недостижимый код. */
l_0x100be088:
    II(0x100be088, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100be08b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100be08d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100be08e, 0x1)   popd(edi);                            /* pop edi */
    II(0x100be08f, 0x1)   popd(esi);                            /* pop esi */
    II(0x100be090, 0x1)   popd(edx);                            /* pop edx */
    II(0x100be091, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100be092, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100be093, 0x1)   retd();                               /* ret */
FUNC_END

