FUNC_BEGIN(0x1010697a, 0x19f954d62ff3406a, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xce, 0xf3, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xb8, 0x84, 0, 0, 0, 0, 0x75, 0xc, 0xc7, 0x45, 0xf4, 0xff, 0x7f, 0, 0, 0xe9, 0x70, 0, 0, 0, 0xb8, 0x57, 0x3b, 0x1a, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x50, 0xe8, 0x3c, 0xcd, 0x1, 0, 0x83, 0xc4, 0x8, 0x85, 0xc0, 0x74, 0x53, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xd0, 0x7, 0xa1, 0xec, 0x70, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0xff, 0x74, 0x36, 0x8d, 0x45, 0xec, 0x50, 0xf, 0xbf, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x20, 0xb5, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x50, 0xe8, 0x17, 0xd7, 0x1, 0, 0x83, 0xc4, 0xc, 0x85, 0xc0, 0x74, 0x15, 0x69, 0x45, 0xec, 0xff, 0x7f, 0, 0, 0xbb, 0x64, 0, 0, 0, 0x31, 0xd2, 0xf7, 0xf3, 0x89, 0x45, 0xf4, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0xff, 0x7f, 0, 0, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1010697a, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x1010697f, 0x5)   calld(sys_check_available_stack_size, 0x5f3ce); /* call 0x10165d52 */
    II(0x10106984, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10106985, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10106986, 0x1)   pushd(esi);                           /* push esi */
    II(0x10106987, 0x1)   pushd(edi);                           /* push edi */
    II(0x10106988, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10106989, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010698b, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10106991, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10106994, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x10106997, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010699a, 0x7)   cmp(memd_a32(ds, eax + 0x84), 0);     /* cmp dword [eax+0x84], 0x0 */
    II(0x101069a1, 0x2)   jnzd(0x101069af, 0xc);                /* jnz 0x101069af */
    II(0x101069a3, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x7fff); /* mov dword [ebp-0xc], 0x7fff */
    II(0x101069aa, 0x5)   jmpd(0x10106a1f, 0x70);               /* jmp 0x10106a1f */
l_0x101069af:
    II(0x101069af, 0x5)   mov(eax, 0x101a3b57);                 /* mov eax, 0x101a3b57 */ /* "Unit Volumes" */
    II(0x101069b4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101069b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101069b8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101069b9, 0x5)   calld(0x101236fa, 0x1cd3c);           /* call 0x101236fa */
    II(0x101069be, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x101069c1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101069c3, 0x2)   jzd(0x10106a18, 0x53);                /* jz 0x10106a18 */
    II(0x101069c5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101069c9, 0x3)   imul(edx, eax, 0x7);                  /* imul edx, eax, 0x7 */
    II(0x101069cc, 0x5)   mov(eax, memd_a32(ds, ptr_arr_meta_by_id)); /* mov eax, [0x101c70ec] */
    II(0x101069d1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101069d3, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x101069d6, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101069d9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x101069dd, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x101069e0, 0x2)   jzd(0x10106a18, 0x36);                /* jz 0x10106a18 */
    II(0x101069e2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101069e5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101069e6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101069ea, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101069ed, 0x6)   pushd(memd_a32(ds, eax + 0x101bb520)); /* push dword [eax+0x101bb520] */
    II(0x101069f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101069f6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101069f7, 0x5)   calld(0x10124113, 0x1d717);           /* call 0x10124113 */
    II(0x101069fc, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x101069ff, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10106a01, 0x2)   jzd(0x10106a18, 0x15);                /* jz 0x10106a18 */
    II(0x10106a03, 0x7)   imul(eax, memd_a32(ss, ebp - 0x14), 0x7fff); /* imul eax, [ebp-0x14], 0x7fff */
    II(0x10106a0a, 0x5)   mov(ebx, 0x64);                       /* mov ebx, 0x64 */
    II(0x10106a0f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10106a11, 0x2)   div(ebx);                             /* div ebx */
    II(0x10106a13, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10106a16, 0x2)   jmpd(0x10106a1f, 0x7);                /* jmp 0x10106a1f */
l_0x10106a18:
    II(0x10106a18, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x7fff); /* mov dword [ebp-0xc], 0x7fff */
l_0x10106a1f:
    II(0x10106a1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10106a22, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10106a24, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10106a25, 0x1)   popd(edi);                            /* pop edi */
    II(0x10106a26, 0x1)   popd(esi);                            /* pop esi */
    II(0x10106a27, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10106a28, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10106a29, 0x1)   retd();                               /* ret */
FUNC_END

