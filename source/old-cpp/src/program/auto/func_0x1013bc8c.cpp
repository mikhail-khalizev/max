FUNC_BEGIN(0x1013bc8c, 0x309d2126dacb0c3e, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xbc, 0xa0, 0x2, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xa0, 0xff, 0xff, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x89, 0x45, 0xf0, 0x83, 0x7d, 0xf0, 0, 0x75, 0xc, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xe9, 0xf3, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4, 0xe8, 0x4, 0xf8, 0xf6, 0xff, 0x98, 0x3b, 0x45, 0xf0, 0x72, 0x1a, 0x8b, 0x45, 0xf0, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4, 0xe8, 0xc, 0x9, 0, 0, 0x89, 0x45, 0xec, 0xe9, 0xc8, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4, 0xe8, 0xd9, 0xf7, 0xf6, 0xff, 0x98, 0x40, 0x3b, 0x45, 0xf0, 0x75, 0x9, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xb7, 0, 0, 0, 0xbb, 0x63, 0xcc, 0x1a, 0x10, 0xba, 0x70, 0xcc, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x6d, 0xa0, 0x2, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0x1f, 0xff, 0xff, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x9, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xbf, 0, 0, 0, 0xbb, 0x9c, 0xcc, 0x1a, 0x10, 0xba, 0xa9, 0xcc, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x35, 0xa0, 0x2, 0, 0x89, 0x45, 0xe4, 0xa1, 0x74, 0x72, 0x1c, 0x10, 0xe8, 0x6e, 0xf7, 0xf6, 0xff, 0x98, 0x3b, 0x45, 0xf4, 0x72, 0x9, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xc0, 0, 0, 0, 0xbb, 0xb9, 0xcc, 0x1a, 0x10, 0xba, 0xc6, 0xcc, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x3, 0xa0, 0x2, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd0, 0xa1, 0x74, 0x72, 0x1c, 0x10, 0xe8, 0xf5, 0x9, 0, 0, 0xe8, 0x60, 0xa, 0, 0, 0x89, 0x45, 0xf8, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xb, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1013bc8c, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1013bc91, 0x5)   calld(sys_check_available_stack_size, 0x2a0bc); /* call 0x10165d52 */
    II(0x1013bc96, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013bc97, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013bc98, 0x1)   pushd(edx);                           /* push edx */
    II(0x1013bc99, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013bc9a, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013bc9b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013bc9c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013bc9e, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1013bca4, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1013bca7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013bcaa, 0x5)   calld(0x1013bc4f, -0x60);             /* call 0x1013bc4f */
    II(0x1013bcaf, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1013bcb4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013bcb7, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x1013bcbb, 0x2)   jnzd(0x1013bcc9, 0xc);                /* jnz 0x1013bcc9 */
    II(0x1013bcbd, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1013bcc4, 0x5)   jmpd(0x1013bdbc, 0xf3);               /* jmp 0x1013bdbc */
l_0x1013bcc9:
    II(0x1013bcc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013bccc, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x1013bccf, 0x5)   calld(my_1_get_count, -0x907fc);      /* call 0x100ab4d8 */
    II(0x1013bcd4, 0x1)   cwde();                               /* cwde */
    II(0x1013bcd5, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x10));   /* cmp eax, [ebp-0x10] */
    II(0x1013bcd8, 0x2)   jbd(0x1013bcf4, 0x1a);                /* jb 0x1013bcf4 */
    II(0x1013bcda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013bcdd, 0x1)   dec(eax);                             /* dec eax */
    II(0x1013bcde, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1013bce1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013bce4, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x1013bce7, 0x5)   calld(0x1013c5f8, 0x90c);             /* call 0x1013c5f8 */
    II(0x1013bcec, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1013bcef, 0x5)   jmpd(0x1013bdbc, 0xc8);               /* jmp 0x1013bdbc */
l_0x1013bcf4:
    II(0x1013bcf4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013bcf7, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x1013bcfa, 0x5)   calld(my_1_get_count, -0x90827);      /* call 0x100ab4d8 */
    II(0x1013bcff, 0x1)   cwde();                               /* cwde */
    II(0x1013bd00, 0x1)   inc(eax);                             /* inc eax */
    II(0x1013bd01, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x10));   /* cmp eax, [ebp-0x10] */
    II(0x1013bd04, 0x2)   jnzd(0x1013bd0f, 0x9);                /* jnz 0x1013bd0f */
    II(0x1013bd06, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1013bd0d, 0x2)   jmpd(0x1013bd28, 0x19);               /* jmp 0x1013bd28 */
l_0x1013bd0f:
    II(0x1013bd0f, 0x5)   mov(ecx, 0xb7);                       /* mov ecx, 0xb7 */
    II(0x1013bd14, 0x5)   mov(ebx, 0x101acc63);                 /* mov ebx, 0x101acc63 */ /* "smrtfile.cpp" */
    II(0x1013bd19, 0x5)   mov(edx, 0x101acc70);                 /* mov edx, 0x101acc70 */ /* "object_index == read_objects.GetCount() + 1" */
    II(0x1013bd1e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013bd20, 0x5)   calld(sys_assert, 0x2a06d);           /* call 0x10165d92 */
    II(0x1013bd25, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x1013bd28:
    II(0x1013bd28, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013bd2b, 0x5)   calld(0x1013bc4f, -0xe1);             /* call 0x1013bc4f */
    II(0x1013bd30, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1013bd35, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1013bd38, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1013bd3c, 0x2)   jzd(0x1013bd47, 0x9);                 /* jz 0x1013bd47 */
    II(0x1013bd3e, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1013bd45, 0x2)   jmpd(0x1013bd60, 0x19);               /* jmp 0x1013bd60 */
l_0x1013bd47:
    II(0x1013bd47, 0x5)   mov(ecx, 0xbf);                       /* mov ecx, 0xbf */
    II(0x1013bd4c, 0x5)   mov(ebx, 0x101acc9c);                 /* mov ebx, 0x101acc9c */ /* "smrtfile.cpp" */
    II(0x1013bd51, 0x5)   mov(edx, 0x101acca9);                 /* mov edx, 0x101acca9 */ /* "type_index != 0" */
    II(0x1013bd56, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013bd58, 0x5)   calld(sys_assert, 0x2a035);           /* call 0x10165d92 */
    II(0x1013bd5d, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1013bd60:
    II(0x1013bd60, 0x5)   mov(eax, memd_a32(ds, 0x101c7274));   /* mov eax, [0x101c7274] */
    II(0x1013bd65, 0x5)   calld(my_1_get_count, -0x90892);      /* call 0x100ab4d8 */
    II(0x1013bd6a, 0x1)   cwde();                               /* cwde */
    II(0x1013bd6b, 0x3)   cmp(eax, memd_a32(ss, ebp - 0xc));    /* cmp eax, [ebp-0xc] */
    II(0x1013bd6e, 0x2)   jbd(0x1013bd79, 0x9);                 /* jb 0x1013bd79 */
    II(0x1013bd70, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x1013bd77, 0x2)   jmpd(0x1013bd92, 0x19);               /* jmp 0x1013bd92 */
l_0x1013bd79:
    II(0x1013bd79, 0x5)   mov(ecx, 0xc0);                       /* mov ecx, 0xc0 */
    II(0x1013bd7e, 0x5)   mov(ebx, 0x101accb9);                 /* mov ebx, 0x101accb9 */ /* "smrtfile.cpp" */
    II(0x1013bd83, 0x5)   mov(edx, 0x101accc6);                 /* mov edx, 0x101accc6 */ /* "type_index <= registered_classes->GetCount()" */
    II(0x1013bd88, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013bd8a, 0x5)   calld(sys_assert, 0x2a003);           /* call 0x10165d92 */
    II(0x1013bd8f, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x1013bd92:
    II(0x1013bd92, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013bd95, 0x1)   dec(eax);                             /* dec eax */
    II(0x1013bd96, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1013bd99, 0x5)   mov(eax, memd_a32(ds, 0x101c7274));   /* mov eax, [0x101c7274] */
    II(0x1013bd9e, 0x5)   calld(0x1013c798, 0x9f5);             /* call 0x1013c798 */
    II(0x1013bda3, 0x5)   calld(0x1013c808, 0xa60);             /* call 0x1013c808 */
    II(0x1013bda8, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1013bdab, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013bdae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013bdb1, 0x5)   calld(0x1013bac1, -0x2f5);            /* call 0x1013bac1 */
    II(0x1013bdb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013bdb9, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x1013bdbc:
    II(0x1013bdbc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013bdbf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013bdc1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013bdc2, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013bdc3, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013bdc4, 0x1)   popd(edx);                            /* pop edx */
    II(0x1013bdc5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013bdc6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013bdc7, 0x1)   retd();                               /* ret */
FUNC_END

