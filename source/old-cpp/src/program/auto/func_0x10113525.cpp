FUNC_BEGIN(0x10113525, 0x3145e6b49d88b53a, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x23, 0x28, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xf8, 0x8, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xa5, 0x5, 0, 0, 0xe8, 0x12, 0x4a, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x47, 0xe8, 0xaa, 0x1d, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0xa2, 0, 0, 0, 0xba, 0xb4, 0x9d, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x78, 0x54, 0xff, 0xff, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0x14, 0x31, 0xdb, 0x8a, 0x45, 0xf8, 0x4, 0x2, 0xf, 0xbe, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0xb4, 0xf2, 0xff, 0xff, 0xeb, 0xe2, 0xe9, 0x7, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x9, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x9, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0x17, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x4, 0x2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xb4, 0xd, 0, 0, 0xe9, 0xd0, 0, 0, 0, 0x66, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0xf, 0x84, 0xc1, 0, 0, 0, 0x8a, 0x45, 0xf8, 0x4, 0x2, 0x88, 0x45, 0xf4, 0x31, 0xc0, 0x50, 0xb9, 0x14, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x1e, 0x8b, 0x5d, 0xfc, 0x81, 0xc3, 0x38, 0x2, 0, 0, 0x1, 0xc3, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x22, 0xf6, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xf8, 0, 0x74, 0x56, 0x6a, 0x2, 0xf, 0xbe, 0x45, 0xf4, 0x6b, 0xc0, 0x18, 0x8b, 0x80, 0xa4, 0x9e, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbe, 0x45, 0xf4, 0x6b, 0xc0, 0x18, 0x8b, 0x80, 0xa6, 0x9e, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbe, 0x4d, 0xf4, 0x6b, 0xc9, 0x18, 0x8b, 0x89, 0xa4, 0x9e, 0x1b, 0x10, 0xc1, 0xf9, 0x10, 0xf, 0xbe, 0x45, 0xf4, 0x6b, 0xc0, 0x18, 0x8b, 0x98, 0xa2, 0x9e, 0x1b, 0x10, 0xc1, 0xfb, 0x10, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x16, 0xe8, 0x1f, 0x6f, 0x5, 0, 0xf, 0xbf, 0x45, 0xf8, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0x26, 0x3, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x31, 0xdb, 0x8a, 0x5d, 0xf0, 0xf, 0xbe, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0xab, 0xf1, 0xff, 0xff, 0xe9, 0x30, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10113525, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x1011352a, 0x5)   calld(sys_check_available_stack_size, 0x52823); /* call 0x10165d52 */
    II(0x1011352f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10113530, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10113531, 0x1)   pushd(edx);                           /* push edx */
    II(0x10113532, 0x1)   pushd(esi);                           /* push esi */
    II(0x10113533, 0x1)   pushd(edi);                           /* push edi */
    II(0x10113534, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10113535, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10113537, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1011353d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10113540, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x8);    /* mov dword [ebp-0x8], 0x8 */
//    II(0x10113547, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011354a, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x1011354c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011354f, 0x6)   mov(eax, memd_a32(ds, eax + 0x5a5));  /* mov eax, [eax+0x5a5] */
    II(0x10113555, 0x5)   calld(0x100d7f6c, -0x3b5ee);          /* call 0x100d7f6c */
    II(0x1011355a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011355d, 0x3)   mov(al, memb_a32(ds, eax + 0x10));    /* mov al, [eax+0x10] */
    II(0x10113560, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10113565, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113567, 0x2)   jnzd(0x101135b0, 0x47);               /* jnz 0x101135b0 */
    II(0x10113569, 0x5)   calld(0x10115318, 0x1daa);            /* call 0x10115318 */
    II(0x1011356e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10113573, 0x1)   pushd(eax);                           /* push eax */
    II(0x10113574, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10113579, 0x5)   mov(ebx, 0xa2);                       /* mov ebx, 0xa2 */
    II(0x1011357e, 0x5)   mov(edx, 0x101b9db4);                 /* mov edx, 0x101b9db4 */
    II(0x10113583, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113586, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10113588, 0x5)   calld(0x10108a05, -0xab88);           /* call 0x10108a05 */
l_0x1011358d:
    II(0x1011358d, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x10113590, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x10113595, 0x2)   jzd(0x101135ab, 0x14);                /* jz 0x101135ab */
    II(0x10113597, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10113599, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1011359c, 0x2)   add(al, 0x2);                         /* add al, 0x2 */
    II(0x1011359e, 0x3)   movsx(edx, al);                       /* movsx edx, al */
    II(0x101135a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101135a4, 0x5)   calld(0x1011285d, -0xd4c);            /* call 0x1011285d */
    II(0x101135a9, 0x2)   jmpd(0x1011358d, -0x1e);              /* jmp 0x1011358d */
l_0x101135ab:
    II(0x101135ab, 0x5)   jmpd(0x101136b7, 0x107);              /* jmp 0x101136b7 */
l_0x101135b0:
    II(0x101135b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101135b3, 0x3)   mov(al, memb_a32(ds, eax + 0x9));     /* mov al, [eax+0x9] */
    II(0x101135b6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101135bb, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x101135be, 0x2)   jzd(0x101135d0, 0x10);                /* jz 0x101135d0 */
    II(0x101135c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101135c3, 0x3)   mov(al, memb_a32(ds, eax + 0x9));     /* mov al, [eax+0x9] */
    II(0x101135c6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101135cb, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x101135ce, 0x2)   jnzd(0x101135e7, 0x17);               /* jnz 0x101135e7 */
l_0x101135d0:
    II(0x101135d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101135d3, 0x7)   mov(memd_a32(ds, eax + 0x4), 0x2);    /* mov dword [eax+0x4], 0x2 */
    II(0x101135da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101135dd, 0x5)   calld(0x10114396, 0xdb4);             /* call 0x10114396 */
    II(0x101135e2, 0x5)   jmpd(0x101136b7, 0xd0);               /* jmp 0x101136b7 */
l_0x101135e7:
    II(0x101135e7, 0x4)   dec(memw_a32(ss, ebp - 0x8));         /* dec word [ebp-0x8] */
    II(0x101135eb, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x101135f0, 0x6)   jzd(0x101136b7, 0xc1);                /* jz dword 0x101136b7 */
    II(0x101135f6, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x101135f9, 0x2)   add(al, 0x2);                         /* add al, 0x2 */
    II(0x101135fb, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x101135fe, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113600, 0x1)   pushd(eax);                           /* push eax */
    II(0x10113601, 0x5)   mov(ecx, 0x14);                       /* mov ecx, 0x14 */
    II(0x10113606, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1011360a, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x1011360d, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x10113610, 0x6)   add(ebx, 0x238);                      /* add ebx, 0x238 */
    II(0x10113616, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x10113618, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1011361c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011361f, 0x5)   calld(0x10112c46, -0x9de);            /* call 0x10112c46 */
    II(0x10113624, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0);      /* cmp word [ebp-0x8], 0x0 */
    II(0x10113629, 0x2)   jzd(0x10113681, 0x56);                /* jz 0x10113681 */
    II(0x1011362b, 0x2)   pushd(0x2);                           /* push 0x2 */
    II(0x1011362d, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113631, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x10113634, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b9ea4)); /* mov eax, [eax+0x101b9ea4] */
    II(0x1011363a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011363d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011363e, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113642, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x10113645, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b9ea6)); /* mov eax, [eax+0x101b9ea6] */
    II(0x1011364b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011364e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011364f, 0x4)   movsx(ecx, memb_a32(ss, ebp - 0xc));  /* movsx ecx, byte [ebp-0xc] */
    II(0x10113653, 0x3)   imul(ecx, ecx, 0x18);                 /* imul ecx, ecx, 0x18 */
    II(0x10113656, 0x6)   mov(ecx, memd_a32(ds, ecx + 0x101b9ea4)); /* mov ecx, [ecx+0x101b9ea4] */
    II(0x1011365c, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1011365f, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113663, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x10113666, 0x6)   mov(ebx, memd_a32(ds, eax + 0x101b9ea2)); /* mov ebx, [eax+0x101b9ea2] */
    II(0x1011366c, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011366f, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x10113674, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113677, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10113679, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011367c, 0x5)   calld(/* sys */ 0x1016a5a0, 0x56f1f); /* call 0x1016a5a0 */
l_0x10113681:
    II(0x10113681, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10113685, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10113687, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1011368a, 0x6)   mov(eax, memd_a32(ds, eax + 0x326));  /* mov eax, [eax+0x326] */
    II(0x10113690, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10113693, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113695, 0x2)   jzd(0x1011369d, 0x6);                 /* jz 0x1011369d */
    II(0x10113697, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1011369b, 0x2)   jmpd(0x101136a1, 0x4);                /* jmp 0x101136a1 */
l_0x1011369d:
    II(0x1011369d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x101136a1:
    II(0x101136a1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101136a3, 0x3)   mov(bl, memb_a32(ss, ebp - 0x10));    /* mov bl, [ebp-0x10] */
    II(0x101136a6, 0x4)   movsx(edx, memb_a32(ss, ebp - 0xc));  /* movsx edx, byte [ebp-0xc] */
    II(0x101136aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101136ad, 0x5)   calld(0x1011285d, -0xe55);            /* call 0x1011285d */
    II(0x101136b2, 0x5)   jmpd(0x101135e7, -0xd0);              /* jmp 0x101135e7 */
l_0x101136b7:
    II(0x101136b7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101136b9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101136ba, 0x1)   popd(edi);                            /* pop edi */
    II(0x101136bb, 0x1)   popd(esi);                            /* pop esi */
    II(0x101136bc, 0x1)   popd(edx);                            /* pop edx */
    II(0x101136bd, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101136be, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101136bf, 0x1)   retd();                               /* ret */
FUNC_END

