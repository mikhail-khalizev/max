FUNC_BEGIN(0x10077381, 0x296bedfea2ff8b48, 0x20, ({0x68, 0x90, 0, 0, 0, 0xe8, 0xc7, 0xe9, 0xe, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x7c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x5d, 0x14, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xdc, 0xe8, 0xb3, 0xea, 0xff, 0xff, 0x8d, 0x4d, 0xcc, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x4, 0x22, 0x3, 0, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xd0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xee, 0x2c, 0x1, 0, 0x89, 0x45, 0xc8, 0xc6, 0x45, 0xec, 0, 0x8b, 0x45, 0x14, 0x89, 0x45, 0xc4, 0x80, 0x4d, 0xe0, 0x1, 0xe8, 0xe4, 0x32, 0x1, 0, 0x98, 0x50, 0x31, 0xc9, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xb4, 0xe8, 0xbd, 0x8a, 0xa, 0, 0x89, 0x45, 0xb0, 0x80, 0x65, 0xe0, 0xfe, 0x80, 0x7d, 0x18, 0, 0x74, 0x40, 0x8b, 0x45, 0xf0, 0xe8, 0x23, 0xee, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x8a, 0x52, 0x4e, 0x30, 0xf6, 0x66, 0x8b, 0x40, 0x12, 0x1, 0xd0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd4, 0x81, 0x1c, 0x10, 0x24, 0x3, 0x3c, 0x3, 0x75, 0x9, 0x8b, 0x45, 0xf0, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0x18, 0, 0x8b, 0x45, 0xc4, 0xf, 0xaf, 0x45, 0xc4, 0x89, 0x45, 0xc4, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbe, 0x5d, 0x10, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xf0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x50, 0xab, 0x4, 0, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0, 0xff, 0x7f, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xa8, 0xe8, 0xca, 0xe9, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0xe8, 0xfd, 0x97, 0xff, 0xff, 0x89, 0x45, 0xa4, 0xc7, 0x45, 0xa0, 0, 0, 0, 0, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0x9c, 0xe8, 0xab, 0xe9, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0xe8, 0xde, 0x97, 0xff, 0xff, 0x89, 0x45, 0x98, 0xf, 0xbf, 0x55, 0x14, 0xf, 0xbf, 0x45, 0x14, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0x98, 0x39, 0xc2, 0x7f, 0x9, 0x8b, 0x45, 0x98, 0x66, 0x3b, 0x45, 0xc4, 0x7e, 0x2, 0xeb, 0x55, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x10, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x2, 0xc7, 0x45, 0xa4, 0, 0, 0, 0, 0x83, 0x7d, 0xac, 0, 0x74, 0x20, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x10, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xac, 0x8b, 0x45, 0xf8, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x2, 0xc6, 0x45, 0xec, 0x1, 0x83, 0x7d, 0xac, 0, 0x74, 0x26, 0x8d, 0x45, 0xcc, 0xe8, 0x19, 0x23, 0x1, 0, 0xf, 0xbf, 0xd0, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xac, 0x8d, 0x45, 0xcc, 0xe8, 0xd4, 0x22, 0x1, 0, 0x98, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x7e, 0xd, 0x8b, 0x45, 0xa4, 0x66, 0x3b, 0x45, 0xc4, 0xf, 0x8e, 0x3f, 0x1, 0, 0, 0x8d, 0x45, 0xcc, 0xe8, 0xf, 0x23, 0x1, 0, 0x89, 0xc2, 0x8d, 0x45, 0x94, 0xe8, 0xd5, 0xe8, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0xe8, 0x8, 0x97, 0xff, 0xff, 0x89, 0x45, 0x98, 0x8b, 0x45, 0xa0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x7f, 0x26, 0x8b, 0x45, 0xa0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x7c, 0x9, 0x8b, 0x45, 0x98, 0x66, 0x3b, 0x45, 0xa4, 0x7d, 0x6, 0xc6, 0x45, 0x90, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0x90, 0, 0x8a, 0x45, 0x90, 0x88, 0x45, 0xe8, 0xeb, 0x19, 0x8b, 0x45, 0x98, 0x66, 0x3b, 0x45, 0xc4, 0x7f, 0x6, 0xc6, 0x45, 0x8c, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0x8c, 0, 0x8a, 0x45, 0x8c, 0x88, 0x45, 0xe8, 0x80, 0x7d, 0xe8, 0, 0xf, 0x84, 0xcc, 0, 0, 0, 0xc6, 0x45, 0xe8, 0, 0x83, 0x7d, 0xc8, 0, 0x74, 0x27, 0x8d, 0x45, 0xcc, 0xe8, 0x5e, 0x22, 0x1, 0, 0x98, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xc8, 0x1, 0xc2, 0x8d, 0x45, 0xcc, 0xe8, 0x19, 0x22, 0x1, 0, 0x98, 0x8b, 0x12, 0x1, 0xd0, 0xf6, 0, 0x8, 0xf, 0x85, 0x70, 0, 0, 0, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8d, 0x45, 0xcc, 0xe8, 0xfd, 0x21, 0x1, 0, 0xf, 0xbf, 0xc8, 0x8d, 0x45, 0xcc, 0xe8, 0x26, 0x22, 0x1, 0, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x63, 0x8c, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x74, 0x36, 0x80, 0x7d, 0x18, 0, 0x74, 0x20, 0x8d, 0x45, 0xcc, 0xe8, 0x2b, 0x22, 0x1, 0, 0x89, 0xc2, 0x8d, 0x45, 0x84, 0xe8, 0xf1, 0xe7, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xb4, 0xe8, 0xcf, 0x88, 0xa, 0, 0x84, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0x88, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0x88, 0, 0x8a, 0x45, 0x88, 0x88, 0x45, 0xe8, 0x80, 0x7d, 0xe8, 0, 0x74, 0x25, 0xc6, 0x45, 0xec, 0x1, 0x8b, 0x45, 0xa0, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x2, 0x8b, 0x45, 0x98, 0x89, 0x45, 0xa4, 0x8d, 0x45, 0xcc, 0xe8, 0xe2, 0x21, 0x1, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x88, 0x14, 0x1, 0, 0x8d, 0x45, 0xcc, 0xe8, 0x17, 0x20, 0x3, 0, 0x84, 0xc0, 0xf, 0x85, 0x6d, 0xfe, 0xff, 0xff, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xe4, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x20, 0x16, 0x1, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x14, 0x16, 0x1, 0, 0x8a, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0xc, 0}))
    II(0x10077381, 0x5)   pushd(0x90);                          /* push dword 0x90 */
    II(0x10077386, 0x5)   calld(sys_check_available_stack_size, 0xee9c7); /* call 0x10165d52 */
    II(0x1007738b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007738c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007738d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007738e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10077390, 0x6)   sub(esp, 0x7c);                       /* sub esp, 0x7c */
    II(0x10077396, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10077399, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1007739c, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1007739f, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100773a2, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x14)); /* movsx ebx, word [ebp+0x14] */
    II(0x100773a6, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100773a9, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100773ac, 0x5)   calld(0x10075e64, -0x154d);           /* call 0x10075e64 */
    II(0x100773b1, 0x3)   lea(ecx, ebp - 0x34);                 /* lea ecx, [ebp-0x34] */
    II(0x100773b4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100773b6, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100773b8, 0x5)   calld(0x100a95c1, 0x32204);           /* call 0x100a95c1 */
    II(0x100773bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100773c0, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100773c3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100773c8, 0x6)   imul(edx, eax, 0xc5);                 /* imul edx, eax, 0xc5 */
    II(0x100773ce, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100773d3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100773d5, 0x5)   calld(0x1008a0c8, 0x12cee);           /* call 0x1008a0c8 */
    II(0x100773da, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100773dd, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x100773e1, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100773e4, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100773e7, 0x4)   or_(memb_a32(ss, ebp - 0x20), 0x1);   /* or byte [ebp-0x20], 0x1 */
    II(0x100773eb, 0x5)   calld(0x1008a6d4, 0x132e4);           /* call 0x1008a6d4 */
    II(0x100773f0, 0x1)   cwde();                               /* cwde */
    II(0x100773f1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100773f2, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100773f4, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100773f9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100773fc, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100773ff, 0x5)   calld(0x1011fec1, 0xa8abd);           /* call 0x1011fec1 */
    II(0x10077404, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x10077407, 0x4)   and_(memb_a32(ss, ebp - 0x20), -0x2 /* 0xfe */); /* and byte [ebp-0x20], 0xfe */
    II(0x1007740b, 0x4)   cmp(memb_a32(ss, ebp + 0x18), 0);     /* cmp byte [ebp+0x18], 0x0 */
    II(0x1007740f, 0x2)   jzd(0x10077451, 0x40);                /* jz 0x10077451 */
    II(0x10077411, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10077414, 0x5)   calld(0x1007623c, -0x11dd);           /* call 0x1007623c */
    II(0x10077419, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1007741c, 0x3)   mov(dl, memb_a32(ds, edx + 0x4e));    /* mov dl, [edx+0x4e] */
    II(0x1007741f, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10077421, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x10077425, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10077427, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1007742a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007742d, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10077430, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10077433, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10077436, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d4)); /* mov al, [eax+0x101c81d4] */
    II(0x1007743c, 0x2)   and_(al, 0x3);                        /* and al, 0x3 */
    II(0x1007743e, 0x2)   cmp(al, 0x3);                         /* cmp al, 0x3 */
    II(0x10077440, 0x2)   jnzd(0x1007744b, 0x9);                /* jnz 0x1007744b */
    II(0x10077442, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10077445, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x10077449, 0x2)   jzd(0x1007744d, 0x2);                 /* jz 0x1007744d */
l_0x1007744b:
    II(0x1007744b, 0x2)   jmpd(0x10077451, 0x4);                /* jmp 0x10077451 */
l_0x1007744d:
    II(0x1007744d, 0x4)   mov(memb_a32(ss, ebp + 0x18), 0);     /* mov byte [ebp+0x18], 0x0 */
l_0x10077451:
    II(0x10077451, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10077454, 0x4)   imul(eax, memd_a32(ss, ebp - 0x3c));  /* imul eax, [ebp-0x3c] */
    II(0x10077458, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1007745b, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10077460, 0x4)   movsx(ebx, memb_a32(ss, ebp + 0x10)); /* movsx ebx, byte [ebp+0x10] */
    II(0x10077464, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10077467, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007746a, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1007746d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10077472, 0x6)   imul(esi, eax, 0xc5);                 /* imul esi, eax, 0xc5 */
    II(0x10077478, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x1007747d, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x1007747f, 0x5)   calld(0x100c1fd4, 0x4ab50);           /* call 0x100c1fd4 */
    II(0x10077484, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x10077487, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007748a, 0x5)   mov(memw_a32(ds, eax), 0x7fff);       /* mov word [eax], 0x7fff */
    II(0x1007748f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10077492, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x10077495, 0x5)   calld(0x10075e64, -0x1636);           /* call 0x10075e64 */
    II(0x1007749a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007749c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007749f, 0x5)   calld(0x10070ca1, -0x6803);           /* call 0x10070ca1 */
    II(0x100774a4, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100774a7, 0x7)   mov(memd_a32(ss, ebp - 0x60), 0);     /* mov dword [ebp-0x60], 0x0 */
    II(0x100774ae, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100774b1, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100774b4, 0x5)   calld(0x10075e64, -0x1655);           /* call 0x10075e64 */
    II(0x100774b9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100774bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100774be, 0x5)   calld(0x10070ca1, -0x6822);           /* call 0x10070ca1 */
    II(0x100774c3, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x100774c6, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x14)); /* movsx edx, word [ebp+0x14] */
    II(0x100774ca, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100774ce, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100774d1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x68)); /* movsx edx, word [ebp-0x68] */
    II(0x100774d5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100774d7, 0x2)   jgd(0x100774e2, 0x9);                 /* jg 0x100774e2 */
    II(0x100774d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100774dc, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x3c));    /* cmp ax, [ebp-0x3c] */
    II(0x100774e0, 0x2)   jled(0x100774e4, 0x2);                /* jle 0x100774e4 */
l_0x100774e2:
    II(0x100774e2, 0x2)   jmpd(0x10077539, 0x55);               /* jmp 0x10077539 */
l_0x100774e4:
    II(0x100774e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100774e7, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
    II(0x100774eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100774ee, 0x3)   mov(memw_a32(ds, eax), dx);           /* mov [eax], dx */
    II(0x100774f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100774f4, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x100774f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100774fb, 0x4)   mov(memw_a32(ds, eax + 0x2), dx);     /* mov [eax+0x2], dx */
    II(0x100774ff, 0x7)   mov(memd_a32(ss, ebp - 0x5c), 0);     /* mov dword [ebp-0x5c], 0x0 */
    II(0x10077506, 0x4)   cmp(memd_a32(ss, ebp - 0x54), 0);     /* cmp dword [ebp-0x54], 0x0 */
    II(0x1007750a, 0x2)   jzd(0x1007752c, 0x20);                /* jz 0x1007752c */
    II(0x1007750c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007750f, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x10077512, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10077515, 0x3)   add(edx, memd_a32(ss, ebp - 0x54));   /* add edx, [ebp-0x54] */
    II(0x10077518, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007751b, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1007751d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10077520, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10077522, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10077524, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10077526, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10077529, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
l_0x1007752c:
    II(0x1007752c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1007752f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10077532, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x10077535, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
l_0x10077539:
    II(0x10077539, 0x4)   cmp(memd_a32(ss, ebp - 0x54), 0);     /* cmp dword [ebp-0x54], 0x0 */
    II(0x1007753d, 0x2)   jzd(0x10077565, 0x26);                /* jz 0x10077565 */
    II(0x1007753f, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10077542, 0x5)   calld(0x10089860, 0x12319);           /* call 0x10089860 */
    II(0x10077547, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007754a, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1007754d, 0x3)   add(edx, memd_a32(ss, ebp - 0x54));   /* add edx, [ebp-0x54] */
    II(0x10077550, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10077553, 0x5)   calld(0x1008982c, 0x122d4);           /* call 0x1008982c */
    II(0x10077558, 0x1)   cwde();                               /* cwde */
    II(0x10077559, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1007755b, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x1007755d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007755f, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10077562, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
l_0x10077565:
    II(0x10077565, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x10077568, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007756b, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x1007756e, 0x2)   jled(0x1007757d, 0xd);                /* jle 0x1007757d */
    II(0x10077570, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x10077573, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x3c));    /* cmp ax, [ebp-0x3c] */
    II(0x10077577, 0x6)   jled(0x100776bc, 0x13f);              /* jle dword 0x100776bc */
l_0x1007757d:
    II(0x1007757d, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10077580, 0x5)   calld(0x10089894, 0x1230f);           /* call 0x10089894 */
    II(0x10077585, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10077587, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x1007758a, 0x5)   calld(0x10075e64, -0x172b);           /* call 0x10075e64 */
    II(0x1007758f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10077591, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10077594, 0x5)   calld(0x10070ca1, -0x68f8);           /* call 0x10070ca1 */
    II(0x10077599, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x1007759c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1007759f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100775a2, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100775a5, 0x2)   jgd(0x100775cd, 0x26);                /* jg 0x100775cd */
    II(0x100775a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100775aa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100775ad, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100775b0, 0x2)   jld(0x100775bb, 0x9);                 /* jl 0x100775bb */
    II(0x100775b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100775b5, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x5c));    /* cmp ax, [ebp-0x5c] */
    II(0x100775b9, 0x2)   jged(0x100775c1, 0x6);                /* jge 0x100775c1 */
l_0x100775bb:
    II(0x100775bb, 0x4)   mov(memb_a32(ss, ebp - 0x70), 0x1);   /* mov byte [ebp-0x70], 0x1 */
    II(0x100775bf, 0x2)   jmpd(0x100775c5, 0x4);                /* jmp 0x100775c5 */
l_0x100775c1:
    II(0x100775c1, 0x4)   mov(memb_a32(ss, ebp - 0x70), 0);     /* mov byte [ebp-0x70], 0x0 */
l_0x100775c5:
    II(0x100775c5, 0x3)   mov(al, memb_a32(ss, ebp - 0x70));    /* mov al, [ebp-0x70] */
    II(0x100775c8, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x100775cb, 0x2)   jmpd(0x100775e6, 0x19);               /* jmp 0x100775e6 */
l_0x100775cd:
    II(0x100775cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100775d0, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x3c));    /* cmp ax, [ebp-0x3c] */
    II(0x100775d4, 0x2)   jgd(0x100775dc, 0x6);                 /* jg 0x100775dc */
    II(0x100775d6, 0x4)   mov(memb_a32(ss, ebp - 0x74), 0x1);   /* mov byte [ebp-0x74], 0x1 */
    II(0x100775da, 0x2)   jmpd(0x100775e0, 0x4);                /* jmp 0x100775e0 */
l_0x100775dc:
    II(0x100775dc, 0x4)   mov(memb_a32(ss, ebp - 0x74), 0);     /* mov byte [ebp-0x74], 0x0 */
l_0x100775e0:
    II(0x100775e0, 0x3)   mov(al, memb_a32(ss, ebp - 0x74));    /* mov al, [ebp-0x74] */
    II(0x100775e3, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
l_0x100775e6:
    II(0x100775e6, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x100775ea, 0x6)   jzd(0x100776bc, 0xcc);                /* jz dword 0x100776bc */
    II(0x100775f0, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x100775f4, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x100775f8, 0x2)   jzd(0x10077621, 0x27);                /* jz 0x10077621 */
    II(0x100775fa, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100775fd, 0x5)   calld(0x10089860, 0x1225e);           /* call 0x10089860 */
    II(0x10077602, 0x1)   cwde();                               /* cwde */
    II(0x10077603, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10077606, 0x3)   mov(edx, memd_a32(ss, ebp - 0x38));   /* mov edx, [ebp-0x38] */
    II(0x10077609, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1007760b, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007760e, 0x5)   calld(0x1008982c, 0x12219);           /* call 0x1008982c */
    II(0x10077613, 0x1)   cwde();                               /* cwde */
    II(0x10077614, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10077616, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10077618, 0x3)   test(memb_a32(ds, eax), 0x8);         /* test byte [eax], 0x8 */
    II(0x1007761b, 0x6)   jnzd(0x10077691, 0x70);               /* jnz dword 0x10077691 */
l_0x10077621:
    II(0x10077621, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10077626, 0x1)   pushd(eax);                           /* push eax */
    II(0x10077627, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007762a, 0x5)   calld(0x1008982c, 0x121fd);           /* call 0x1008982c */
    II(0x1007762f, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10077632, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10077635, 0x5)   calld(0x10089860, 0x12226);           /* call 0x10089860 */
    II(0x1007763a, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1007763d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10077640, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10077643, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10077645, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10077648, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007764b, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1007764e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10077651, 0x5)   calld(0x100702b9, -0x739d);           /* call 0x100702b9 */
    II(0x10077656, 0x1)   cwde();                               /* cwde */
    II(0x10077657, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10077659, 0x2)   jzd(0x10077691, 0x36);                /* jz 0x10077691 */
    II(0x1007765b, 0x4)   cmp(memb_a32(ss, ebp + 0x18), 0);     /* cmp byte [ebp+0x18], 0x0 */
    II(0x1007765f, 0x2)   jzd(0x10077681, 0x20);                /* jz 0x10077681 */
    II(0x10077661, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10077664, 0x5)   calld(0x10089894, 0x1222b);           /* call 0x10089894 */
    II(0x10077669, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007766b, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x1007766e, 0x5)   calld(0x10075e64, -0x180f);           /* call 0x10075e64 */
    II(0x10077673, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10077675, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x10077678, 0x5)   calld(0x1011ff4c, 0xa88cf);           /* call 0x1011ff4c */
    II(0x1007767d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007767f, 0x2)   jzd(0x10077687, 0x6);                 /* jz 0x10077687 */
l_0x10077681:
    II(0x10077681, 0x4)   mov(memb_a32(ss, ebp - 0x78), 0x1);   /* mov byte [ebp-0x78], 0x1 */
    II(0x10077685, 0x2)   jmpd(0x1007768b, 0x4);                /* jmp 0x1007768b */
l_0x10077687:
    II(0x10077687, 0x4)   mov(memb_a32(ss, ebp - 0x78), 0);     /* mov byte [ebp-0x78], 0x0 */
l_0x1007768b:
    II(0x1007768b, 0x3)   mov(al, memb_a32(ss, ebp - 0x78));    /* mov al, [ebp-0x78] */
    II(0x1007768e, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
l_0x10077691:
    II(0x10077691, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x10077695, 0x2)   jzd(0x100776bc, 0x25);                /* jz 0x100776bc */
    II(0x10077697, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1007769b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1007769e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100776a1, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x100776a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100776a7, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100776aa, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100776ad, 0x5)   calld(0x10089894, 0x121e2);           /* call 0x10089894 */
    II(0x100776b2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100776b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100776b7, 0x5)   calld(0x10088b44, 0x11488);           /* call 0x10088b44 */
l_0x100776bc:
    II(0x100776bc, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100776bf, 0x5)   calld(0x100a96db, 0x32017);           /* call 0x100a96db */
    II(0x100776c4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100776c6, 0x6)   jnzd(0x10077539, -0x193);             /* jnz dword 0x10077539 */
    II(0x100776cc, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100776cf, 0x3)   mov(memb_a32(ss, ebp - 0x1c), al);    /* mov [ebp-0x1c], al */
    II(0x100776d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100776d4, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100776d7, 0x5)   calld(my_dtor_d1, 0x11620);           /* call 0x10088cfc */
    II(0x100776dc, 0x2)   jmpd(0x100776e8, 0xa);                /* jmp 0x100776e8 */
//  II(0x100776de, 0xa)   /* Недостижимый код. */
l_0x100776e8:
    II(0x100776e8, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x100776eb, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100776ed, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100776ee, 0x1)   popd(edi);                            /* pop edi */
    II(0x100776ef, 0x1)   popd(esi);                            /* pop esi */
    II(0x100776f0, 0x3)   retd(0xc);                            /* ret 0xc */
FUNC_END

