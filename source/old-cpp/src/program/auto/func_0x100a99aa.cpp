FUNC_BEGIN(0x100a99aa, 0x5ee773ead9a12df6, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x9e, 0xc3, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0xf9, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x4, 0x1, 0x74, 0x18, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x12, 0xf, 0xbf, 0, 0x85, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0xde, 0, 0, 0, 0xeb, 0x2b, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x12, 0xf, 0xbf, 0, 0xe8, 0xf2, 0xc3, 0xb, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xf, 0xbf, 0, 0xe8, 0xe2, 0xc3, 0xb, 0, 0x39, 0xc2, 0x7d, 0x9, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0xb1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x83, 0xc0, 0x2, 0xa8, 0x4, 0x74, 0x9, 0xc7, 0x45, 0xf4, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x4, 0x4, 0x74, 0x9, 0xc7, 0x45, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x40, 0xa8, 0x2, 0x74, 0x2e, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xc, 0x8b, 0x55, 0xfc, 0x89, 0x42, 0x12, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xa, 0x8b, 0x55, 0xfc, 0x89, 0x42, 0x16, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x1a, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x1c, 0xeb, 0x2c, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xa, 0x8b, 0x55, 0xfc, 0x89, 0x42, 0x12, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xc, 0x8b, 0x55, 0xfc, 0x89, 0x42, 0x16, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x1a, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x1c, 0xe9, 0xf5, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a99aa, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100a99af, 0x5)   calld(sys_check_available_stack_size, 0xbc39e); /* call 0x10165d52 */
    II(0x100a99b4, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a99b5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a99b6, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a99b7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a99b8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a99b9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a99ba, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a99bc, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100a99c2, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x100a99c5:
    II(0x100a99c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a99c8, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100a99cb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a99ce, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100a99d1, 0x6)   jged(0x100a9ad0, 0xf9);               /* jge dword 0x100a9ad0 */
    II(0x100a99d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a99da, 0x4)   test(memb_a32(ds, eax + 0x4), 0x1);   /* test byte [eax+0x4], 0x1 */
    II(0x100a99de, 0x2)   jzd(0x100a99f8, 0x18);                /* jz 0x100a99f8 */
    II(0x100a99e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a99e3, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100a99e6, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100a99e9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a99eb, 0x2)   jzd(0x100a99f6, 0x9);                 /* jz 0x100a99f6 */
    II(0x100a99ed, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100a99f1, 0x5)   jmpd(0x100a9ad4, 0xde);               /* jmp 0x100a9ad4 */
l_0x100a99f6:
    II(0x100a99f6, 0x2)   jmpd(0x100a9a23, 0x2b);               /* jmp 0x100a9a23 */
l_0x100a99f8:
    II(0x100a99f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a99fb, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100a99fe, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100a9a01, 0x5)   calld(/* sys */ 0x10165df8, 0xbc3f2); /* call 0x10165df8 */
    II(0x100a9a06, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a9a08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9a0b, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100a9a0e, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100a9a11, 0x5)   calld(/* sys */ 0x10165df8, 0xbc3e2); /* call 0x10165df8 */
    II(0x100a9a16, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a9a18, 0x2)   jged(0x100a9a23, 0x9);                /* jge 0x100a9a23 */
    II(0x100a9a1a, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100a9a1e, 0x5)   jmpd(0x100a9ad4, 0xb1);               /* jmp 0x100a9ad4 */
l_0x100a9a23:
    II(0x100a9a23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9a26, 0x4)   inc(memw_a32(ds, eax + 0x4));         /* inc word [eax+0x4] */
    II(0x100a9a2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9a2d, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100a9a30, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a9a33, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100a9a36, 0x2)   test(al, 0x4);                        /* test al, 0x4 */
    II(0x100a9a38, 0x2)   jzd(0x100a9a43, 0x9);                 /* jz 0x100a9a43 */
    II(0x100a9a3a, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xffffffff); /* mov dword [ebp-0xc], 0xffffffff */
    II(0x100a9a41, 0x2)   jmpd(0x100a9a4a, 0x7);                /* jmp 0x100a9a4a */
l_0x100a9a43:
    II(0x100a9a43, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x1);    /* mov dword [ebp-0xc], 0x1 */
l_0x100a9a4a:
    II(0x100a9a4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9a4d, 0x4)   test(memb_a32(ds, eax + 0x4), 0x4);   /* test byte [eax+0x4], 0x4 */
    II(0x100a9a51, 0x2)   jzd(0x100a9a5c, 0x9);                 /* jz 0x100a9a5c */
    II(0x100a9a53, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0xffffffff); /* mov dword [ebp-0x10], 0xffffffff */
    II(0x100a9a5a, 0x2)   jmpd(0x100a9a63, 0x7);                /* jmp 0x100a9a63 */
l_0x100a9a5c:
    II(0x100a9a5c, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
l_0x100a9a63:
    II(0x100a9a63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9a66, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100a9a69, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a9a6c, 0x1)   inc(eax);                             /* inc eax */
    II(0x100a9a6d, 0x2)   test(al, 0x2);                        /* test al, 0x2 */
    II(0x100a9a6f, 0x2)   jzd(0x100a9a9f, 0x2e);                /* jz 0x100a9a9f */
    II(0x100a9a71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9a74, 0x3)   add(eax, 0xc);                        /* add eax, 0xc */
    II(0x100a9a77, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9a7a, 0x3)   mov(memd_a32(ds, edx + 0x12), eax);   /* mov [edx+0x12], eax */
    II(0x100a9a7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9a80, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x100a9a83, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9a86, 0x3)   mov(memd_a32(ds, edx + 0x16), eax);   /* mov [edx+0x16], eax */
    II(0x100a9a89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a9a8c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9a8f, 0x4)   mov(memw_a32(ds, edx + 0x1a), ax);    /* mov [edx+0x1a], ax */
    II(0x100a9a93, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a9a96, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9a99, 0x4)   mov(memw_a32(ds, edx + 0x1c), ax);    /* mov [edx+0x1c], ax */
    II(0x100a9a9d, 0x2)   jmpd(0x100a9acb, 0x2c);               /* jmp 0x100a9acb */
l_0x100a9a9f:
    II(0x100a9a9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9aa2, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x100a9aa5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9aa8, 0x3)   mov(memd_a32(ds, edx + 0x12), eax);   /* mov [edx+0x12], eax */
    II(0x100a9aab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9aae, 0x3)   add(eax, 0xc);                        /* add eax, 0xc */
    II(0x100a9ab1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9ab4, 0x3)   mov(memd_a32(ds, edx + 0x16), eax);   /* mov [edx+0x16], eax */
    II(0x100a9ab7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a9aba, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9abd, 0x4)   mov(memw_a32(ds, edx + 0x1a), ax);    /* mov [edx+0x1a], ax */
    II(0x100a9ac1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a9ac4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9ac7, 0x4)   mov(memw_a32(ds, edx + 0x1c), ax);    /* mov [edx+0x1c], ax */
l_0x100a9acb:
    II(0x100a9acb, 0x5)   jmpd(0x100a99c5, -0x10b);             /* jmp 0x100a99c5 */
l_0x100a9ad0:
    II(0x100a9ad0, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x100a9ad4:
    II(0x100a9ad4, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100a9ad7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a9ad9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a9ada, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a9adb, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a9adc, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a9add, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a9ade, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a9adf, 0x1)   retd();                               /* ret */
FUNC_END

