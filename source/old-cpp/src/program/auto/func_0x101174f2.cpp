FUNC_BEGIN(0x101174f2, 0x132fbe6cc5afa3e6, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0x56, 0xe8, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0xe8, 0x44, 0x22, 0x1, 0, 0x80, 0x4d, 0xfc, 0x1, 0x8d, 0x45, 0xb8, 0xe8, 0x7f, 0xfb, 0xff, 0xff, 0x89, 0x45, 0xf8, 0x80, 0x65, 0xfc, 0xfe, 0x8d, 0x45, 0xb8, 0xe8, 0xc1, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xe2, 0xfd, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xd6, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101174f2, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x101174f7, 0x5)   calld(sys_check_available_stack_size, 0x4e856); /* call 0x10165d52 */
    II(0x101174fc, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101174fd, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101174fe, 0x1)   pushd(edx);                           /* push edx */
    II(0x101174ff, 0x1)   pushd(esi);                           /* push esi */
    II(0x10117500, 0x1)   pushd(edi);                           /* push edi */
    II(0x10117501, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10117502, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10117504, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x1011750a, 0x5)   calld(0x10129753, 0x12244);           /* call 0x10129753 */
    II(0x1011750f, 0x4)   or_(memb_a32(ss, ebp - 0x4), 0x1);    /* or byte [ebp-0x4], 0x1 */
    II(0x10117513, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10117516, 0x5)   calld(0x1011709a, -0x481);            /* call 0x1011709a */
    II(0x1011751b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011751e, 0x4)   and_(memb_a32(ss, ebp - 0x4), -0x2 /* 0xfe */); /* and byte [ebp-0x4], 0xfe */
    II(0x10117522, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10117525, 0x5)   calld(0x101173eb, -0x13f);            /* call 0x101173eb */
    II(0x1011752a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1011752d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011752f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10117532, 0x5)   calld(0x10117319, -0x21e);            /* call 0x10117319 */
    II(0x10117537, 0x2)   jmpd(0x10117543, 0xa);                /* jmp 0x10117543 */
//  II(0x10117539, 0xa)   /* Недостижимый код. */
l_0x10117543:
    II(0x10117543, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10117546, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10117548, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10117549, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011754a, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011754b, 0x1)   popd(edx);                            /* pop edx */
    II(0x1011754c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011754d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011754e, 0x1)   retd();                               /* ret */
FUNC_END

