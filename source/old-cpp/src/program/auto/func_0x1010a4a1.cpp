FUNC_BEGIN(0x1010a4a1, 0x9684f9755782f640, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xa7, 0xb8, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0xba, 0x4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa2, 0xfd, 0xff, 0xff, 0xc7, 0x45, 0xf4, 0x6, 0, 0, 0, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x30, 0xe8, 0xc9, 0xad, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0x8d, 0x45, 0xf0, 0xe8, 0xdd, 0xad, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xc0, 0x1f, 0x6b, 0xc0, 0x14, 0xba, 0xac, 0xa5, 0x1b, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0xcf, 0xfd, 0xff, 0xff, 0xeb, 0xc6, 0xb8, 0x48, 0, 0, 0, 0xe8, 0xc8, 0xba, 0xf6, 0xff, 0x89, 0x45, 0xf8, 0xc7, 0x45, 0xf4, 0x6, 0, 0, 0, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x1d, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xc0, 0x25, 0x6b, 0xc0, 0x14, 0x8b, 0x80, 0xbc, 0xa5, 0x1b, 0x10, 0xe8, 0x91, 0xeb, 0x6, 0, 0xf, 0xbf, 0x55, 0xf8, 0x39, 0xc2, 0x7c, 0xd9, 0xf, 0xbf, 0x4d, 0xf4, 0xbb, 0x25, 0, 0, 0, 0xba, 0x6, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x13, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010a4a1, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x1010a4a6, 0x5)   calld(sys_check_available_stack_size, 0x5b8a7); /* call 0x10165d52 */
    II(0x1010a4ab, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010a4ac, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010a4ad, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010a4ae, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010a4af, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010a4b0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010a4b1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010a4b3, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1010a4b9, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010a4bc, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
//    II(0x1010a4c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a4c4, 0x5)   calld(0x1010a26b, -0x25e);            /* call 0x1010a26b */
    II(0x1010a4c9, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x6);    /* mov dword [ebp-0xc], 0x6 */
l_0x1010a4d0:
    II(0x1010a4d0, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
    II(0x1010a4d3, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x1010a4d8, 0x2)   jzd(0x1010a50a, 0x30);                /* jz 0x1010a50a */
    II(0x1010a4da, 0x5)   calld(0x101152a8, 0xadc9);            /* call 0x101152a8 */
    II(0x1010a4df, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010a4e1, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x1010a4e3, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1010a4e6, 0x5)   calld(0x101152c8, 0xaddd);            /* call 0x101152c8 */
    II(0x1010a4eb, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1010a4ed, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010a4f1, 0x3)   add(eax, 0x1f);                       /* add eax, 0x1f */
    II(0x1010a4f4, 0x3)   imul(eax, eax, 0x14);                 /* imul eax, eax, 0x14 */
    II(0x1010a4f7, 0x5)   mov(edx, 0x101ba5ac);                 /* mov edx, 0x101ba5ac */
    II(0x1010a4fc, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010a4fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a501, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010a503, 0x5)   calld(0x1010a2d7, -0x231);            /* call 0x1010a2d7 */
    II(0x1010a508, 0x2)   jmpd(0x1010a4d0, -0x3a);              /* jmp 0x1010a4d0 */
l_0x1010a50a:
    II(0x1010a50a, 0x5)   mov(eax, 0x48);                       /* mov eax, 0x48 */
    II(0x1010a50f, 0x5)   calld(0x10075fdc, -0x94538);          /* call 0x10075fdc */
    II(0x1010a514, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010a517, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x6);    /* mov dword [ebp-0xc], 0x6 */
l_0x1010a51e:
    II(0x1010a51e, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
    II(0x1010a521, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x1010a526, 0x2)   jzd(0x1010a545, 0x1d);                /* jz 0x1010a545 */
    II(0x1010a528, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010a52c, 0x3)   add(eax, 0x25);                       /* add eax, 0x25 */
    II(0x1010a52f, 0x3)   imul(eax, eax, 0x14);                 /* imul eax, eax, 0x14 */
    II(0x1010a532, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ba5bc)); /* mov eax, [eax+0x101ba5bc] */
    II(0x1010a538, 0x5)   calld(/* sys */ 0x101790ce, 0x6eb91); /* call 0x101790ce */
    II(0x1010a53d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1010a541, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1010a543, 0x2)   jld(0x1010a51e, -0x27);               /* jl 0x1010a51e */
l_0x1010a545:
    II(0x1010a545, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x1010a549, 0x5)   mov(ebx, 0x25);                       /* mov ebx, 0x25 */
    II(0x1010a54e, 0x5)   mov(edx, 0x6);                        /* mov edx, 0x6 */
    II(0x1010a553, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a556, 0x5)   calld(0x1010a36e, -0x1ed);            /* call 0x1010a36e */
    II(0x1010a55b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010a55d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010a55e, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010a55f, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010a560, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010a561, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010a562, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010a563, 0x1)   retd();                               /* ret */
FUNC_END

