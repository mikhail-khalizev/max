FUNC_BEGIN(0x100fdc7b, 0xa3b078bfd7833ec8, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xcd, 0x80, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x66, 0xc7, 0x5, 0x82, 0x39, 0x1c, 0x10, 0, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0xe, 0x31, 0xc0, 0xe8, 0xcc, 0xb2, 0x7, 0, 0xe8, 0xe, 0x82, 0x6, 0, 0xeb, 0x5, 0xe8, 0x5e, 0x86, 0x3, 0, 0xc7, 0x45, 0xfc, 0x4, 0, 0, 0, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0x3e, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xfc, 0x8b, 0x80, 0x3d, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x18, 0xe8, 0xed, 0x82, 0xf7, 0xff, 0x66, 0x89, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x8b, 0x55, 0xf0, 0x88, 0x42, 0x28, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0xf4, 0x84, 0x3, 0, 0xeb, 0xb8, 0xb8, 0x4, 0, 0, 0, 0xe8, 0xe8, 0x84, 0x3, 0, 0xe8, 0xe7, 0xfe, 0xff, 0xff, 0xc7, 0x45, 0xfc, 0x4, 0, 0, 0, 0xc6, 0x5, 0xda, 0x37, 0x1c, 0x10, 0x4, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0x35, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x19, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0xff, 0xe3, 0xff, 0xff, 0x85, 0xc0, 0x75, 0xc, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xe9, 0x67, 0x1, 0, 0, 0xeb, 0xc1, 0x80, 0x3d, 0x8b, 0x38, 0x1c, 0x10, 0, 0x74, 0x9, 0xe8, 0x1, 0xe3, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0xc, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xe9, 0x45, 0x1, 0, 0, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x4, 0x7d, 0x5d, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0x41, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x83, 0xf8, 0x4, 0x75, 0x8, 0x8a, 0x45, 0xfc, 0xa2, 0xda, 0x37, 0x1c, 0x10, 0x83, 0x3d, 0x50, 0x94, 0x1c, 0x10, 0, 0x75, 0x5, 0xe8, 0x54, 0xda, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x9a, 0x48, 0xfa, 0xff, 0x84, 0xc0, 0x74, 0x12, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x9, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0xc, 0xb1, 0x2, 0, 0xeb, 0x94, 0xe8, 0x48, 0xf2, 0xff, 0xff, 0xb8, 0x2c, 0, 0, 0, 0xe8, 0xd5, 0x81, 0xf7, 0xff, 0xf, 0xbf, 0xd0, 0xb8, 0x2b, 0, 0, 0, 0xe8, 0xc8, 0x81, 0xf7, 0xff, 0x98, 0xe8, 0xe, 0xfc, 0xff, 0xff, 0x66, 0xc7, 0x45, 0xfc, 0x4, 0, 0x66, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0x32, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x17, 0x83, 0x3d, 0x50, 0x94, 0x1c, 0x10, 0, 0x75, 0x5, 0xe8, 0xd9, 0xd9, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x9d, 0x3e, 0, 0, 0xeb, 0xc3, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xc0, 0x13, 0x66, 0x8b, 0x80, 0xbc, 0x35, 0x1c, 0x10, 0x66, 0xa3, 0xe2, 0x38, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xc0, 0x13, 0x66, 0x8b, 0x80, 0xbe, 0x35, 0x1c, 0x10, 0x66, 0xa3, 0xe4, 0x38, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0x8b, 0x15, 0xe2, 0x38, 0x1c, 0x10, 0x66, 0x89, 0x90, 0x6c, 0xa5, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0x8b, 0x15, 0xe4, 0x38, 0x1c, 0x10, 0x66, 0x89, 0x90, 0x6e, 0xa5, 0x1c, 0x10, 0xc7, 0x45, 0xf8, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100fdc7b, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100fdc80, 0x5)   calld(sys_check_available_stack_size, 0x680cd); /* call 0x10165d52 */
    II(0x100fdc85, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100fdc86, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100fdc87, 0x1)   pushd(edx);                           /* push edx */
    II(0x100fdc88, 0x1)   pushd(esi);                           /* push esi */
    II(0x100fdc89, 0x1)   pushd(edi);                           /* push edi */
    II(0x100fdc8a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100fdc8b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100fdc8d, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100fdc93, 0x9)   mov(memw_a32(ds, 0x101c3982), 0);     /* mov word [0x101c3982], 0x0 */
    II(0x100fdc9c, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100fdca3, 0x2)   jzd(0x100fdcb3, 0xe);                 /* jz 0x100fdcb3 */
    II(0x100fdca5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fdca7, 0x5)   calld(/* sys */ 0x10178f78, 0x7b2cc); /* call 0x10178f78 */
    II(0x100fdcac, 0x5)   calld(/* sys */ 0x10165ebf, 0x6820e); /* call 0x10165ebf */
    II(0x100fdcb1, 0x2)   jmpd(0x100fdcb8, 0x5);                /* jmp 0x100fdcb8 */
l_0x100fdcb3:
    II(0x100fdcb3, 0x5)   calld(0x10136316, 0x3865e);           /* call 0x10136316 */
l_0x100fdcb8:
    II(0x100fdcb8, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x4);    /* mov dword [ebp-0x4], 0x4 */
l_0x100fdcbf:
    II(0x100fdcbf, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x100fdcc2, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100fdcc7, 0x2)   jzd(0x100fdd07, 0x3e);                /* jz 0x100fdd07 */
    II(0x100fdcc9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fdccd, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fdcd3, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x100fdcd8, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fdcda, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x100fdcdd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fdce1, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b873d)); /* mov eax, [eax+0x101b873d] */
    II(0x100fdce7, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100fdcea, 0x5)   calld(0x10075fdc, -0x87d13);          /* call 0x10075fdc */
    II(0x100fdcef, 0x4)   mov(memw_a32(ss, ebp - 0xc), ax);     /* mov [ebp-0xc], ax */
    II(0x100fdcf3, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100fdcf6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100fdcf9, 0x3)   mov(memb_a32(ds, edx + 0x28), al);    /* mov [edx+0x28], al */
    II(0x100fdcfc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fdd00, 0x5)   calld(0x101361f9, 0x384f4);           /* call 0x101361f9 */
    II(0x100fdd05, 0x2)   jmpd(0x100fdcbf, -0x48);              /* jmp 0x100fdcbf */
l_0x100fdd07:
    II(0x100fdd07, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x100fdd0c, 0x5)   calld(0x101361f9, 0x384e8);           /* call 0x101361f9 */
    II(0x100fdd11, 0x5)   calld(0x100fdbfd, -0x119);            /* call 0x100fdbfd */
    II(0x100fdd16, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x4);    /* mov dword [ebp-0x4], 0x4 */
    II(0x100fdd1d, 0x7)   mov(memb_a32(ds, 0x101c37da), 0x4);   /* mov byte [0x101c37da], 0x4 */
l_0x100fdd24:
    II(0x100fdd24, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x100fdd27, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100fdd2c, 0x2)   jzd(0x100fdd63, 0x35);                /* jz 0x100fdd63 */
    II(0x100fdd2e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fdd32, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fdd38, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100fdd3e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100fdd43, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100fdd46, 0x2)   jnzd(0x100fdd61, 0x19);               /* jnz 0x100fdd61 */
    II(0x100fdd48, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fdd4c, 0x5)   calld(0x100fc150, -0x1c01);           /* call 0x100fc150 */
    II(0x100fdd51, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100fdd53, 0x2)   jnzd(0x100fdd61, 0xc);                /* jnz 0x100fdd61 */
    II(0x100fdd55, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100fdd5c, 0x5)   jmpd(0x100fdec8, 0x167);              /* jmp 0x100fdec8 */
l_0x100fdd61:
    II(0x100fdd61, 0x2)   jmpd(0x100fdd24, -0x3f);              /* jmp 0x100fdd24 */
l_0x100fdd63:
    II(0x100fdd63, 0x7)   cmp(memb_a32(ds, 0x101c388b), 0);     /* cmp byte [0x101c388b], 0x0 */
    II(0x100fdd6a, 0x2)   jzd(0x100fdd75, 0x9);                 /* jz 0x100fdd75 */
    II(0x100fdd6c, 0x5)   calld(0x100fc072, -0x1cff);           /* call 0x100fc072 */
    II(0x100fdd71, 0x2)   test(al, al);                         /* test al, al */
    II(0x100fdd73, 0x2)   jzd(0x100fdd77, 0x2);                 /* jz 0x100fdd77 */
l_0x100fdd75:
    II(0x100fdd75, 0x2)   jmpd(0x100fdd83, 0xc);                /* jmp 0x100fdd83 */
l_0x100fdd77:
    II(0x100fdd77, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100fdd7e, 0x5)   jmpd(0x100fdec8, 0x145);              /* jmp 0x100fdec8 */
l_0x100fdd83:
    II(0x100fdd83, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
    II(0x100fdd8a, 0x2)   jmpd(0x100fdd92, 0x6);                /* jmp 0x100fdd92 */
l_0x100fdd8c:
    II(0x100fdd8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fdd8f, 0x3)   inc(memd_a32(ss, ebp - 0x4));         /* inc dword [ebp-0x4] */
l_0x100fdd92:
    II(0x100fdd92, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fdd96, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100fdd99, 0x2)   jged(0x100fddf8, 0x5d);               /* jge 0x100fddf8 */
    II(0x100fdd9b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fdd9f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fdda5, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100fddab, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100fddb0, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100fddb3, 0x2)   jnzd(0x100fddf6, 0x41);               /* jnz 0x100fddf6 */
    II(0x100fddb5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fddb7, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fddbc, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100fddbf, 0x2)   jnzd(0x100fddc9, 0x8);                /* jnz 0x100fddc9 */
    II(0x100fddc1, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100fddc4, 0x5)   mov(memb_a32(ds, 0x101c37da), al);    /* mov [0x101c37da], al */
l_0x100fddc9:
    II(0x100fddc9, 0x7)   cmp(memd_a32(ds, 0x101c9450), 0);     /* cmp dword [0x101c9450], 0x0 */
    II(0x100fddd0, 0x2)   jnzd(0x100fddd7, 0x5);                /* jnz 0x100fddd7 */
    II(0x100fddd2, 0x5)   calld(0x100fb82b, -0x25ac);           /* call 0x100fb82b */
l_0x100fddd7:
    II(0x100fddd7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fdddb, 0x5)   calld(0x100a267a, -0x5b766);          /* call 0x100a267a */
    II(0x100fdde0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100fdde2, 0x2)   jzd(0x100fddf6, 0x12);                /* jz 0x100fddf6 */
    II(0x100fdde4, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100fddeb, 0x2)   jzd(0x100fddf6, 0x9);                 /* jz 0x100fddf6 */
    II(0x100fdded, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fddf1, 0x5)   calld(0x10128f02, 0x2b10c);           /* call 0x10128f02 */
l_0x100fddf6:
    II(0x100fddf6, 0x2)   jmpd(0x100fdd8c, -0x6c);              /* jmp 0x100fdd8c */
l_0x100fddf8:
    II(0x100fddf8, 0x5)   calld(0x100fd045, -0xdb8);            /* call 0x100fd045 */
    II(0x100fddfd, 0x5)   mov(eax, 0x2c);                       /* mov eax, 0x2c */
    II(0x100fde02, 0x5)   calld(0x10075fdc, -0x87e2b);          /* call 0x10075fdc */
    II(0x100fde07, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100fde0a, 0x5)   mov(eax, 0x2b);                       /* mov eax, 0x2b */
    II(0x100fde0f, 0x5)   calld(0x10075fdc, -0x87e38);          /* call 0x10075fdc */
    II(0x100fde14, 0x1)   cwde();                               /* cwde */
    II(0x100fde15, 0x5)   calld(0x100fda28, -0x3f2);            /* call 0x100fda28 */
    II(0x100fde1a, 0x6)   mov(memw_a32(ss, ebp - 0x4), 0x4);    /* mov word [ebp-0x4], 0x4 */
l_0x100fde20:
    II(0x100fde20, 0x4)   dec(memw_a32(ss, ebp - 0x4));         /* dec word [ebp-0x4] */
    II(0x100fde24, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100fde29, 0x2)   jzd(0x100fde5d, 0x32);                /* jz 0x100fde5d */
    II(0x100fde2b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fde2f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fde35, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100fde3b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100fde40, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100fde42, 0x2)   jzd(0x100fde5b, 0x17);                /* jz 0x100fde5b */
    II(0x100fde44, 0x7)   cmp(memd_a32(ds, 0x101c9450), 0);     /* cmp dword [0x101c9450], 0x0 */
    II(0x100fde4b, 0x2)   jnzd(0x100fde52, 0x5);                /* jnz 0x100fde52 */
    II(0x100fde4d, 0x5)   calld(0x100fb82b, -0x2627);           /* call 0x100fb82b */
l_0x100fde52:
    II(0x100fde52, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fde56, 0x5)   calld(0x10101cf8, 0x3e9d);            /* call 0x10101cf8 */
l_0x100fde5b:
    II(0x100fde5b, 0x2)   jmpd(0x100fde20, -0x3d);              /* jmp 0x100fde20 */
l_0x100fde5d:
    II(0x100fde5d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fde5f, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fde64, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100fde67, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c35bc)); /* mov ax, [eax+0x101c35bc] */
    II(0x100fde6e, 0x6)   mov(memw_a32(ds, 0x101c38e2), ax);    /* mov [0x101c38e2], ax */
    II(0x100fde74, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fde76, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fde7b, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100fde7e, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c35be)); /* mov ax, [eax+0x101c35be] */
    II(0x100fde85, 0x6)   mov(memw_a32(ds, 0x101c38e4), ax);    /* mov [0x101c38e4], ax */
    II(0x100fde8b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fde8d, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fde92, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fde98, 0x7)   mov(dx, memw_a32(ds, 0x101c38e2));    /* mov dx, [0x101c38e2] */
    II(0x100fde9f, 0x7)   mov(memw_a32(ds, eax + 0x101ca56c), dx); /* mov [eax+0x101ca56c], dx */
    II(0x100fdea6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fdea8, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fdead, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fdeb3, 0x7)   mov(dx, memw_a32(ds, 0x101c38e4));    /* mov dx, [0x101c38e4] */
    II(0x100fdeba, 0x7)   mov(memw_a32(ds, eax + 0x101ca56e), dx); /* mov [eax+0x101ca56e], dx */
    II(0x100fdec1, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x1);    /* mov dword [ebp-0x8], 0x1 */
l_0x100fdec8:
    II(0x100fdec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100fdecb, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100fdecd, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100fdece, 0x1)   popd(edi);                            /* pop edi */
    II(0x100fdecf, 0x1)   popd(esi);                            /* pop esi */
    II(0x100fded0, 0x1)   popd(edx);                            /* pop edx */
    II(0x100fded1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100fded2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100fded3, 0x1)   retd();                               /* ret */
FUNC_END

