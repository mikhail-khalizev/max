FUNC_BEGIN(0x10090c63, 0x4370a634f404734f, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0xe5, 0x50, 0xd, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x66, 0x8b, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x92, 0x56, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x8, 0x58, 0xfe, 0xff, 0xc6, 0x45, 0xf4, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0x3a, 0x5f, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xa9, 0xa0, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x7c, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xc8, 0x56, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x21, 0x74, 0xf, 0x8d, 0x45, 0xdc, 0xe8, 0xb9, 0x56, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x27, 0x75, 0x2, 0xeb, 0x57, 0x8d, 0x55, 0xcc, 0x8d, 0x45, 0xdc, 0xe8, 0xa5, 0x56, 0xfe, 0xff, 0xe8, 0x32, 0x18, 0xc, 0, 0x31, 0xc0, 0x50, 0x8b, 0x45, 0xd8, 0x5, 0xa, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xd4, 0x5, 0xa, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xd0, 0x83, 0xe8, 0xa, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xcc, 0x83, 0xe8, 0xa, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x76, 0xfd, 0xff, 0xff, 0x8d, 0x45, 0xdc, 0xe8, 0x64, 0x56, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x75, 0x4, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x6a, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xd7, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0, 0x89, 0x45, 0xe0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xa4, 0, 0, 0, 0x8b, 0x45, 0xe0, 0xf, 0xbf, 0, 0x85, 0xc0, 0x74, 0x16, 0x80, 0x7d, 0xf4, 0, 0x75, 0xb, 0x8b, 0x45, 0xe0, 0xf, 0xbf, 0, 0x83, 0xf8, 0x1, 0x75, 0x5, 0xe9, 0x78, 0, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0x1, 0xd0, 0x1, 0xc0, 0x8b, 0x15, 0x1c, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf0, 0x85, 0xc2, 0x74, 0xe, 0x8b, 0x45, 0xe4, 0x25, 0x1f, 0, 0, 0, 0x66, 0x3d, 0x8, 0, 0x7d, 0x2, 0xeb, 0x2d, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xec, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xe8, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xec, 0x48, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xe8, 0x48, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x83, 0xfc, 0xff, 0xff, 0xeb, 0x8, 0x8b, 0x45, 0xe0, 0x66, 0xc7, 0, 0x4, 0, 0x8b, 0x45, 0xe0, 0x83, 0x45, 0xe0, 0x2, 0xe9, 0x46, 0xff, 0xff, 0xff, 0xe9, 0x13, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x20, 0x51, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10090c63, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x10090c68, 0x5)   calld(sys_check_available_stack_size, 0xd50e5); /* call 0x10165d52 */
    II(0x10090c6d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10090c6e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10090c6f, 0x1)   pushd(esi);                           /* push esi */
    II(0x10090c70, 0x1)   pushd(edi);                           /* push edi */
    II(0x10090c71, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10090c72, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10090c74, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x10090c7a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10090c7d, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x10090c80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090c83, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10090c86, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10090c89, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10090c8f, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10090c95, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10090c98, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10090c9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090c9e, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x10090ca1, 0x5)   calld(0x10076338, -0x1a96e);          /* call 0x10076338 */
    II(0x10090ca6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10090ca8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10090cab, 0x5)   calld(0x100764b8, -0x1a7f8);          /* call 0x100764b8 */
    II(0x10090cb0, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x10090cb4, 0x2)   jmpd(0x10090cbe, 0x8);                /* jmp 0x10090cbe */
l_0x10090cb6:
    II(0x10090cb6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10090cb9, 0x5)   calld(0x10076bf8, -0x1a0c6);          /* call 0x10076bf8 */
l_0x10090cbe:
    II(0x10090cbe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10090cc0, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10090cc3, 0x5)   calld(0x1013ad71, 0xaa0a9);           /* call 0x1013ad71 */
    II(0x10090cc8, 0x2)   test(al, al);                         /* test al, al */
    II(0x10090cca, 0x6)   jzd(0x10090d4c, 0x7c);                /* jz dword 0x10090d4c */
    II(0x10090cd0, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10090cd3, 0x5)   calld(0x100763a0, -0x1a938);          /* call 0x100763a0 */
    II(0x10090cd8, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x21);   /* cmp word [eax+0x8], 0x21 */
    II(0x10090cdd, 0x2)   jzd(0x10090cee, 0xf);                 /* jz 0x10090cee */
    II(0x10090cdf, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10090ce2, 0x5)   calld(0x100763a0, -0x1a947);          /* call 0x100763a0 */
    II(0x10090ce7, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x27);   /* cmp word [eax+0x8], 0x27 */
    II(0x10090cec, 0x2)   jnzd(0x10090cf0, 0x2);                /* jnz 0x10090cf0 */
l_0x10090cee:
    II(0x10090cee, 0x2)   jmpd(0x10090d47, 0x57);               /* jmp 0x10090d47 */
l_0x10090cf0:
    II(0x10090cf0, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x10090cf3, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10090cf6, 0x5)   calld(0x100763a0, -0x1a95b);          /* call 0x100763a0 */
    II(0x10090cfb, 0x5)   calld(0x10152532, 0xc1832);           /* call 0x10152532 */
    II(0x10090d00, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10090d02, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090d03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10090d06, 0x5)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x10090d0b, 0x1)   cwde();                               /* cwde */
    II(0x10090d0c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090d0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10090d10, 0x5)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x10090d15, 0x1)   cwde();                               /* cwde */
    II(0x10090d16, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090d17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10090d1a, 0x3)   sub(eax, 0xa);                        /* sub eax, 0xa */
    II(0x10090d1d, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10090d20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10090d23, 0x3)   sub(eax, 0xa);                        /* sub eax, 0xa */
    II(0x10090d26, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10090d29, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090d2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090d2f, 0x5)   calld(0x10090aaa, -0x28a);            /* call 0x10090aaa */
    II(0x10090d34, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10090d37, 0x5)   calld(0x100763a0, -0x1a99c);          /* call 0x100763a0 */
    II(0x10090d3c, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x10090d41, 0x2)   jnzd(0x10090d47, 0x4);                /* jnz 0x10090d47 */
    II(0x10090d43, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x10090d47:
    II(0x10090d47, 0x5)   jmpd(0x10090cb6, -0x96);              /* jmp 0x10090cb6 */
l_0x10090d4c:
    II(0x10090d4c, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x10090d53, 0x2)   jmpd(0x10090d5b, 0x6);                /* jmp 0x10090d5b */
l_0x10090d55:
    II(0x10090d55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10090d58, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x10090d5b:
    II(0x10090d5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10090d5e, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x10090d65, 0x6)   jged(0x10090e42, 0xd7);               /* jge dword 0x10090e42 */
    II(0x10090d6b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10090d6f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10090d72, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10090d75, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10090d77, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10090d7a, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10090d81, 0x2)   jmpd(0x10090d89, 0x6);                /* jmp 0x10090d89 */
l_0x10090d83:
    II(0x10090d83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10090d86, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x10090d89:
    II(0x10090d89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10090d8c, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x10090d93, 0x6)   jged(0x10090e3d, 0xa4);               /* jge dword 0x10090e3d */
    II(0x10090d99, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10090d9c, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10090d9f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10090da1, 0x2)   jzd(0x10090db9, 0x16);                /* jz 0x10090db9 */
    II(0x10090da3, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x10090da7, 0x2)   jnzd(0x10090db4, 0xb);                /* jnz 0x10090db4 */
    II(0x10090da9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10090dac, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10090daf, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10090db2, 0x2)   jnzd(0x10090db9, 0x5);                /* jnz 0x10090db9 */
l_0x10090db4:
    II(0x10090db4, 0x5)   jmpd(0x10090e31, 0x78);               /* jmp 0x10090e31 */
l_0x10090db9:
    II(0x10090db9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10090dbd, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x10090dc2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10090dc5, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10090dc8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10090dcc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10090dce, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10090dd0, 0x6)   mov(edx, memd_a32(ds, 0x101c811c));   /* mov edx, [0x101c811c] */
    II(0x10090dd6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10090dd8, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10090ddb, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10090dde, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10090de2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10090de4, 0x4)   mov(ax, memw_a32(ss, ebp - 0x10));    /* mov ax, [ebp-0x10] */
    II(0x10090de8, 0x2)   test(edx, eax);                       /* test edx, eax */
    II(0x10090dea, 0x2)   jzd(0x10090dfa, 0xe);                 /* jz 0x10090dfa */
    II(0x10090dec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10090def, 0x5)   and_(eax, 0x1f);                      /* and eax, 0x1f */
    II(0x10090df4, 0x4)   cmp(ax, 0x8);                         /* cmp ax, 0x8 */
    II(0x10090df8, 0x2)   jged(0x10090dfc, 0x2);                /* jge 0x10090dfc */
l_0x10090dfa:
    II(0x10090dfa, 0x2)   jmpd(0x10090e29, 0x2d);               /* jmp 0x10090e29 */
l_0x10090dfc:
    II(0x10090dfc, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10090e01, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090e02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10090e05, 0x1)   inc(eax);                             /* inc eax */
    II(0x10090e06, 0x1)   cwde();                               /* cwde */
    II(0x10090e07, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090e08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10090e0b, 0x1)   inc(eax);                             /* inc eax */
    II(0x10090e0c, 0x1)   cwde();                               /* cwde */
    II(0x10090e0d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090e0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10090e11, 0x1)   dec(eax);                             /* dec eax */
    II(0x10090e12, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10090e15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10090e18, 0x1)   dec(eax);                             /* dec eax */
    II(0x10090e19, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10090e1c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090e1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090e22, 0x5)   calld(0x10090aaa, -0x37d);            /* call 0x10090aaa */
    II(0x10090e27, 0x2)   jmpd(0x10090e31, 0x8);                /* jmp 0x10090e31 */
l_0x10090e29:
    II(0x10090e29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10090e2c, 0x5)   mov(memw_a32(ds, eax), 0x4);          /* mov word [eax], 0x4 */
l_0x10090e31:
    II(0x10090e31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10090e34, 0x4)   add(memd_a32(ss, ebp - 0x20), 0x2);   /* add dword [ebp-0x20], 0x2 */
    II(0x10090e38, 0x5)   jmpd(0x10090d83, -0xba);              /* jmp 0x10090d83 */
l_0x10090e3d:
    II(0x10090e3d, 0x5)   jmpd(0x10090d55, -0xed);              /* jmp 0x10090d55 */
l_0x10090e42:
    II(0x10090e42, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10090e44, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10090e47, 0x5)   calld(0x10075f6c, -0x1aee0);          /* call 0x10075f6c */
    II(0x10090e4c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10090e4e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10090e4f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10090e50, 0x1)   popd(esi);                            /* pop esi */
    II(0x10090e51, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10090e52, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10090e53, 0x1)   retd();                               /* ret */
FUNC_END

