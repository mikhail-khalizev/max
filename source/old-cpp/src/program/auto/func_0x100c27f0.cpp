FUNC_BEGIN(0x100c27f0, 0xd13b34b3bb032005, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x58, 0x35, 0xa, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x80, 0x4d, 0xec, 0x1, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf8, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xf0, 0xe8, 0xd4, 0xfa, 0xff, 0xff, 0x8d, 0x75, 0xe4, 0x89, 0xcb, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0xce, 0x5c, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xec, 0xfe, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x84, 0x65, 0xfc, 0xff, 0x66, 0xf7, 0x45, 0xfc, 0x1, 0, 0x74, 0x4c, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0x8d, 0x45, 0xe4, 0xe8, 0x39, 0x7c, 0xfc, 0xff, 0x66, 0x3b, 0x45, 0xdc, 0x7e, 0x2f, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xe4, 0xe8, 0x63, 0x7b, 0xfc, 0xff, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc1, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x12, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xe4, 0xe8, 0x48, 0x7b, 0xfc, 0xff, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0xeb, 0xbd, 0x66, 0xf7, 0x45, 0xfc, 0x2, 0, 0x74, 0x4c, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0x8d, 0x45, 0xe4, 0xe8, 0xe5, 0x7b, 0xfc, 0xff, 0x66, 0x3b, 0x45, 0xdc, 0x7e, 0x2f, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xe4, 0xe8, 0xf, 0x7b, 0xfc, 0xff, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc3, 0x81, 0x1c, 0x10, 0x10, 0x74, 0x12, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xe4, 0xe8, 0xf4, 0x7a, 0xfc, 0xff, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0xeb, 0xbd, 0xe8, 0xe7, 0x7b, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xf4, 0xe8, 0x1, 0x5c, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xbe, 0x64, 0xfc, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xb2, 0x64, 0xfc, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100c27f0, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100c27f5, 0x5)   calld(sys_check_available_stack_size, 0xa3558); /* call 0x10165d52 */
    II(0x100c27fa, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c27fb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c27fc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c27fd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c27ff, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100c2805, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c2808, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100c280b, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100c280e, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100c2811, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x100c2815, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100c281a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100c281e, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100c2821, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c2824, 0x5)   calld(0x100c22fd, -0x52c);            /* call 0x100c22fd */
    II(0x100c2829, 0x3)   lea(esi, ebp - 0x1c);                 /* lea esi, [ebp-0x1c] */
    II(0x100c282c, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x100c282e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c2830, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100c2832, 0x5)   calld(0x100b8505, -0xa332);           /* call 0x100b8505 */
    II(0x100c2837, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100c283a, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x100c283e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c2840, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c2843, 0x5)   calld(0x10088dcc, -0x39a7c);          /* call 0x10088dcc */
    II(0x100c2848, 0x6)   test(memw_a32(ss, ebp - 0x4), 0x1);   /* test word [ebp-0x4], 0x1 */
    II(0x100c284e, 0x2)   jzd(0x100c289c, 0x4c);                /* jz 0x100c289c */
    II(0x100c2850, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100c2857, 0x2)   jmpd(0x100c285f, 0x6);                /* jmp 0x100c285f */
l_0x100c2859:
    II(0x100c2859, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100c285c, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x100c285f:
    II(0x100c285f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c2862, 0x5)   calld(0x1008a4a0, -0x383c7);          /* call 0x1008a4a0 */
    II(0x100c2867, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x100c286b, 0x2)   jled(0x100c289c, 0x2f);               /* jle 0x100c289c */
    II(0x100c286d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100c2871, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c2874, 0x5)   calld(0x1008a3dc, -0x3849d);          /* call 0x1008a3dc */
    II(0x100c2879, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c287c, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100c287f, 0x7)   test(memb_a32(ds, eax + 0x101c81c1), 0x2); /* test byte [eax+0x101c81c1], 0x2 */
    II(0x100c2886, 0x2)   jzd(0x100c289a, 0x12);                /* jz 0x100c289a */
    II(0x100c2888, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100c288c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c288f, 0x5)   calld(0x1008a3dc, -0x384b8);          /* call 0x1008a3dc */
    II(0x100c2894, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
l_0x100c289a:
    II(0x100c289a, 0x2)   jmpd(0x100c2859, -0x43);              /* jmp 0x100c2859 */
l_0x100c289c:
    II(0x100c289c, 0x6)   test(memw_a32(ss, ebp - 0x4), 0x2);   /* test word [ebp-0x4], 0x2 */
    II(0x100c28a2, 0x2)   jzd(0x100c28f0, 0x4c);                /* jz 0x100c28f0 */
    II(0x100c28a4, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100c28ab, 0x2)   jmpd(0x100c28b3, 0x6);                /* jmp 0x100c28b3 */
l_0x100c28ad:
    II(0x100c28ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100c28b0, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x100c28b3:
    II(0x100c28b3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c28b6, 0x5)   calld(0x1008a4a0, -0x3841b);          /* call 0x1008a4a0 */
    II(0x100c28bb, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x100c28bf, 0x2)   jled(0x100c28f0, 0x2f);               /* jle 0x100c28f0 */
    II(0x100c28c1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100c28c5, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c28c8, 0x5)   calld(0x1008a3dc, -0x384f1);          /* call 0x1008a3dc */
    II(0x100c28cd, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c28d0, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100c28d3, 0x7)   test(memb_a32(ds, eax + 0x101c81c3), 0x10); /* test byte [eax+0x101c81c3], 0x10 */
    II(0x100c28da, 0x2)   jzd(0x100c28ee, 0x12);                /* jz 0x100c28ee */
    II(0x100c28dc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100c28e0, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c28e3, 0x5)   calld(0x1008a3dc, -0x3850c);          /* call 0x1008a3dc */
    II(0x100c28e8, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
l_0x100c28ee:
    II(0x100c28ee, 0x2)   jmpd(0x100c28ad, -0x43);              /* jmp 0x100c28ad */
l_0x100c28f0:
    II(0x100c28f0, 0x5)   calld(0x1008a4dc, -0x38419);          /* call 0x1008a4dc */
    II(0x100c28f5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c28f7, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c28f9, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100c28fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c28ff, 0x5)   calld(0x100b8505, -0xa3ff);           /* call 0x100b8505 */
    II(0x100c2904, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c2906, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c2909, 0x5)   calld(0x10088dcc, -0x39b42);          /* call 0x10088dcc */
    II(0x100c290e, 0x2)   jmpd(0x100c291a, 0xa);                /* jmp 0x100c291a */
//  II(0x100c2910, 0xa)   /* Недостижимый код. */
l_0x100c291a:
    II(0x100c291a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c291d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c291f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c2920, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c2921, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c2922, 0x1)   retd();                               /* ret */
FUNC_END

