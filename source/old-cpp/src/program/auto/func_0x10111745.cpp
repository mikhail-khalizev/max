FUNC_BEGIN(0x10111745, 0xf89b4dd009f70011, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x3, 0x46, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x31, 0xc0, 0xe8, 0xd9, 0x70, 0xfd, 0xff, 0x89, 0x45, 0xf8, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0x83, 0x7d, 0xfc, 0x1b, 0x74, 0x9, 0x81, 0x7d, 0xfc, 0x28, 0x23, 0, 0, 0x75, 0x5, 0xe9, 0x58, 0x3, 0, 0, 0xc6, 0x45, 0xec, 0, 0xe8, 0xa9, 0xa6, 0x5, 0, 0xe8, 0xac, 0x3b, 0xfc, 0xff, 0x98, 0x50, 0xe8, 0xc9, 0x3b, 0xfc, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0xbb, 0x80, 0x2, 0, 0, 0x8b, 0x55, 0xf8, 0xb8, 0xc0, 0x6, 0, 0, 0xe8, 0xa1, 0x74, 0xfd, 0xff, 0xba, 0xcd, 0x46, 0x1a, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x6b, 0xae, 0xff, 0xff, 0x31, 0xdb, 0x8b, 0x15, 0x4c, 0x4e, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xc3, 0xae, 0xff, 0xff, 0xbb, 0x5, 0, 0, 0, 0xba, 0x8, 0, 0, 0, 0xb8, 0xb4, 0x90, 0x1b, 0x10, 0xe8, 0xa, 0x85, 0xff, 0xff, 0xe8, 0xdb, 0xa4, 0x5, 0, 0xc6, 0x45, 0xf0, 0, 0xc6, 0x45, 0xe8, 0, 0xe8, 0x12, 0x9a, 0x5, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x94, 0x12, 0x6, 0, 0x89, 0x45, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x7e, 0x9, 0x81, 0x7d, 0xfc, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe4, 0xe9, 0xde, 0x1, 0, 0, 0xe8, 0x61, 0x83, 0xff, 0xff, 0x31, 0xd2, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0xc7, 0x92, 0xfb, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xa0, 0xcf, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x7, 0xc7, 0x45, 0xfc, 0x28, 0x23, 0, 0, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0x78, 0x2, 0, 0, 0xe8, 0x32, 0x83, 0xff, 0xff, 0xe8, 0xfb, 0x3a, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x12, 0x3b, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x12, 0xfb, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x7, 0xc7, 0x45, 0xfc, 0x28, 0x23, 0, 0, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0x43, 0x2, 0, 0, 0xe8, 0xfd, 0x82, 0xff, 0xff, 0xe8, 0xc6, 0x3a, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xdd, 0x3a, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0xb8, 0x8, 0, 0, 0, 0xe8, 0xdd, 0xfa, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x7, 0xc7, 0x45, 0xfc, 0x28, 0x23, 0, 0, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0xe, 0x2, 0, 0, 0xe8, 0xc8, 0x82, 0xff, 0xff, 0xe8, 0x91, 0x3a, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xa8, 0x3a, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0xb8, 0x2, 0, 0, 0, 0xe8, 0xa8, 0xfa, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x7, 0xc7, 0x45, 0xfc, 0x28, 0x23, 0, 0, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0xd9, 0x1, 0, 0, 0xe8, 0x93, 0x82, 0xff, 0xff, 0x31, 0xd2, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0xf9, 0x91, 0xfb, 0xff, 0xe8, 0x50, 0x3a, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x67, 0x3a, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0xb8, 0x9, 0, 0, 0, 0xe8, 0x67, 0xfa, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x7, 0xc7, 0x45, 0xfc, 0x28, 0x23, 0, 0, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0x98, 0x1, 0, 0, 0x80, 0x75, 0xf0, 0x1, 0xa1, 0x13, 0x91, 0x1b, 0x10, 0xe8, 0x7d, 0xe2, 0xfb, 0xff, 0x80, 0x7d, 0xf0, 0, 0x74, 0xa, 0x8b, 0x45, 0xf8, 0xe8, 0xb5, 0x7e, 0xff, 0xff, 0xeb, 0x9, 0xe8, 0x34, 0x82, 0xff, 0xff, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0x6c, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x1d, 0x81, 0xff, 0xff, 0xe9, 0x5f, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x91, 0x81, 0xff, 0xff, 0xe9, 0x52, 0x1, 0, 0, 0xe8, 0xc, 0x82, 0xff, 0xff, 0xc7, 0x45, 0xfc, 0x1b, 0, 0, 0, 0xc6, 0x45, 0xe8, 0x1, 0xe9, 0x3d, 0x1, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xf0, 0x85, 0xc0, 0x75, 0x12, 0xbb, 0x1, 0, 0, 0, 0xba, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0xea, 0xac, 0xff, 0xff, 0xe9, 0x1d, 0x1, 0, 0, 0x81, 0x7d, 0xfc, 0, 0x70, 0, 0, 0x7c, 0x6, 0x80, 0x7d, 0xec, 0, 0x74, 0x2, 0xeb, 0x3e, 0x81, 0x45, 0xfc, 0, 0x90, 0xff, 0xff, 0x81, 0x7d, 0xfc, 0xe8, 0x3, 0, 0, 0x74, 0x9, 0x81, 0x7d, 0xfc, 0xe9, 0x3, 0, 0, 0x75, 0xc, 0xa1, 0xe0, 0x4d, 0x1c, 0x10, 0xe8, 0xdc, 0xe1, 0xfb, 0xff, 0xeb, 0x15, 0x83, 0x7d, 0xfc, 0x8, 0x73, 0xf, 0x6b, 0x45, 0xfc, 0x13, 0x8b, 0x80, 0xb4, 0x90, 0x1b, 0x10, 0xe8, 0xc5, 0xe1, 0xfb, 0xff, 0xc6, 0x45, 0xec, 0x1, 0xe9, 0xc9, 0, 0, 0, 0x83, 0x7d, 0xe4, 0x53, 0x72, 0x6b, 0x83, 0x7d, 0xe4, 0x53, 0xf, 0x86, 0x76, 0xfe, 0xff, 0xff, 0x81, 0x7d, 0xe4, 0x48, 0x1, 0, 0, 0x72, 0x3a, 0x81, 0x7d, 0xe4, 0x48, 0x1, 0, 0, 0xf, 0x86, 0x66, 0xff, 0xff, 0xff, 0x81, 0x7d, 0xe4, 0xe8, 0x3, 0, 0, 0x72, 0x1f, 0x81, 0x7d, 0xe4, 0xe8, 0x3, 0, 0, 0xf, 0x86, 0x21, 0xff, 0xff, 0xff, 0x81, 0x7d, 0xe4, 0xe9, 0x3, 0, 0, 0xf, 0x84, 0x21, 0xff, 0xff, 0xff, 0xe9, 0x5e, 0xff, 0xff, 0xff, 0xe9, 0x59, 0xff, 0xff, 0xff, 0x83, 0x7d, 0xe4, 0x54, 0xf, 0x86, 0xf4, 0xfd, 0xff, 0xff, 0x83, 0x7d, 0xe4, 0x55, 0xf, 0x84, 0xbb, 0xfd, 0xff, 0xff, 0xe9, 0x40, 0xff, 0xff, 0xff, 0xe9, 0x3b, 0xff, 0xff, 0xff, 0x83, 0x7d, 0xe4, 0x43, 0x72, 0x2e, 0x83, 0x7d, 0xe4, 0x43, 0xf, 0x86, 0xf6, 0xfe, 0xff, 0xff, 0x83, 0x7d, 0xe4, 0x49, 0x72, 0x19, 0x83, 0x7d, 0xe4, 0x49, 0xf, 0x86, 0xa0, 0xfe, 0xff, 0xff, 0x83, 0x7d, 0xe4, 0x4d, 0xf, 0x84, 0x55, 0xfe, 0xff, 0xff, 0xe9, 0xc, 0xff, 0xff, 0xff, 0xe9, 0x7, 0xff, 0xff, 0xff, 0x83, 0x7d, 0xe4, 0x1b, 0x72, 0x19, 0x83, 0x7d, 0xe4, 0x1b, 0xf, 0x86, 0xc2, 0xfe, 0xff, 0xff, 0x83, 0x7d, 0xe4, 0x41, 0xf, 0x84, 0xfc, 0xfd, 0xff, 0xff, 0xe9, 0xe8, 0xfe, 0xff, 0xff, 0xe9, 0xe3, 0xfe, 0xff, 0xff, 0x80, 0x7d, 0xe8, 0, 0xf, 0x84, 0x1c, 0xfd, 0xff, 0xff, 0xe9, 0x94, 0xfc, 0xff, 0xff, 0x81, 0x7d, 0xfc, 0x28, 0x23, 0, 0, 0x75, 0x9, 0xc7, 0x45, 0xe0, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10111745, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x1011174a, 0x5)   calld(sys_check_available_stack_size, 0x54603); /* call 0x10165d52 */
    II(0x1011174f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10111750, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10111751, 0x1)   pushd(edx);                           /* push edx */
    II(0x10111752, 0x1)   pushd(esi);                           /* push esi */
    II(0x10111753, 0x1)   pushd(edi);                           /* push edi */
    II(0x10111754, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10111755, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10111757, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1011175d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1011175f, 0x5)   calld(0x100e883d, -0x28f27);          /* call 0x100e883d */
    II(0x10111764, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10111767, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
l_0x1011176e:
    II(0x1011176e, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0x1b);   /* cmp dword [ebp-0x4], 0x1b */
    II(0x10111772, 0x2)   jzd(0x1011177d, 0x9);                 /* jz 0x1011177d */
    II(0x10111774, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x2328); /* cmp dword [ebp-0x4], 0x2328 */
    II(0x1011177b, 0x2)   jnzd(0x10111782, 0x5);                /* jnz 0x10111782 */
l_0x1011177d:
    II(0x1011177d, 0x5)   jmpd(0x10111ada, 0x358);              /* jmp 0x10111ada */
l_0x10111782:
    II(0x10111782, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x10111786, 0x5)   calld(/* sys */ 0x1016be34, 0x5a6a9); /* call 0x1016be34 */
    II(0x1011178b, 0x5)   calld(0x100d533c, -0x3c454);          /* call 0x100d533c */
    II(0x10111790, 0x1)   cwde();                               /* cwde */
    II(0x10111791, 0x1)   pushd(eax);                           /* push eax */
    II(0x10111792, 0x5)   calld(0x100d5360, -0x3c437);          /* call 0x100d5360 */
    II(0x10111797, 0x1)   cwde();                               /* cwde */
    II(0x10111798, 0x1)   pushd(eax);                           /* push eax */
    II(0x10111799, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1011179b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011179c, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1011179e, 0x5)   mov(ebx, 0x280);                      /* mov ebx, 0x280 */
    II(0x101117a3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101117a6, 0x5)   mov(eax, 0x6c0);                      /* mov eax, 0x6c0 */
    II(0x101117ab, 0x5)   calld(0x100e8c51, -0x28b5f);          /* call 0x100e8c51 */
    II(0x101117b0, 0x5)   mov(edx, 0x101a46cd);                 /* mov edx, 0x101a46cd */ /* "New Game Menu" */
    II(0x101117b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101117b8, 0x5)   calld(0x1010c628, -0x5195);           /* call 0x1010c628 */
    II(0x101117bd, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101117bf, 0x6)   mov(edx, memd_a32(ds, 0x101c4e4c));   /* mov edx, [0x101c4e4c] */
    II(0x101117c5, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101117c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101117cb, 0x5)   calld(0x1010c693, -0x513d);           /* call 0x1010c693 */
    II(0x101117d0, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x101117d5, 0x5)   mov(edx, 0x8);                        /* mov edx, 0x8 */
    II(0x101117da, 0x5)   mov(eax, 0x101b90b4);                 /* mov eax, 0x101b90b4 */
    II(0x101117df, 0x5)   calld(0x10109cee, -0x7af6);           /* call 0x10109cee */
    II(0x101117e4, 0x5)   calld(/* sys */ 0x1016bcc4, 0x5a4db); /* call 0x1016bcc4 */
    II(0x101117e9, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x101117ed, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x101117f1:
    II(0x101117f1, 0x5)   calld(/* sys */ 0x1016b208, 0x59a12); /* call 0x1016b208 */
    II(0x101117f6, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x101117f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101117fc, 0x5)   calld(sys_tolower, 0x61294);          /* call 0x10172a95 */
    II(0x10111801, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10111804, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x10111808, 0x2)   jled(0x10111813, 0x9);                /* jle 0x10111813 */
    II(0x1011180a, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x7000); /* cmp dword [ebp-0x4], 0x7000 */
    II(0x10111811, 0x2)   jld(0x10111815, 0x2);                 /* jl 0x10111815 */
l_0x10111813:
    II(0x10111813, 0x2)   jmpd(0x10111819, 0x4);                /* jmp 0x10111819 */
l_0x10111815:
    II(0x10111815, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x10111819:
    II(0x10111819, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011181c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1011181f, 0x5)   jmpd(0x10111a02, 0x1de);              /* jmp 0x10111a02 */
l_0x10111824:
    II(0x10111824, 0x5)   calld(0x10109b8a, -0x7c9f);           /* call 0x10109b8a */
    II(0x10111829, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011182b, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x10111830, 0x5)   calld(0x100caafc, -0x46d39);          /* call 0x100caafc */
    II(0x10111835, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1011183a, 0x5)   calld(0x1010e7df, -0x3060);           /* call 0x1010e7df */
    II(0x1011183f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10111841, 0x2)   jzd(0x1011184a, 0x7);                 /* jz 0x1011184a */
    II(0x10111843, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x2328); /* mov dword [ebp-0x4], 0x2328 */
l_0x1011184a:
    II(0x1011184a, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x1011184e, 0x5)   jmpd(0x10111acb, 0x278);              /* jmp 0x10111acb */
l_0x10111853:
    II(0x10111853, 0x5)   calld(0x10109b8a, -0x7cce);           /* call 0x10109b8a */
    II(0x10111858, 0x5)   calld(0x10115358, 0x3afb);            /* call 0x10115358 */
    II(0x1011185d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011185f, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10111861, 0x5)   calld(0x10115378, 0x3b12);            /* call 0x10115378 */
    II(0x10111866, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10111868, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011186a, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1011186f, 0x5)   calld(0x10111386, -0x4ee);            /* call 0x10111386 */
    II(0x10111874, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10111876, 0x2)   jzd(0x1011187f, 0x7);                 /* jz 0x1011187f */
    II(0x10111878, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x2328); /* mov dword [ebp-0x4], 0x2328 */
l_0x1011187f:
    II(0x1011187f, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x10111883, 0x5)   jmpd(0x10111acb, 0x243);              /* jmp 0x10111acb */
l_0x10111888:
    II(0x10111888, 0x5)   calld(0x10109b8a, -0x7d03);           /* call 0x10109b8a */
    II(0x1011188d, 0x5)   calld(0x10115358, 0x3ac6);            /* call 0x10115358 */
    II(0x10111892, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10111894, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10111896, 0x5)   calld(0x10115378, 0x3add);            /* call 0x10115378 */
    II(0x1011189b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011189d, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011189f, 0x5)   mov(eax, 0x8);                        /* mov eax, 0x8 */
    II(0x101118a4, 0x5)   calld(0x10111386, -0x523);            /* call 0x10111386 */
    II(0x101118a9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101118ab, 0x2)   jzd(0x101118b4, 0x7);                 /* jz 0x101118b4 */
    II(0x101118ad, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x2328); /* mov dword [ebp-0x4], 0x2328 */
l_0x101118b4:
    II(0x101118b4, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x101118b8, 0x5)   jmpd(0x10111acb, 0x20e);              /* jmp 0x10111acb */
l_0x101118bd:
    II(0x101118bd, 0x5)   calld(0x10109b8a, -0x7d38);           /* call 0x10109b8a */
    II(0x101118c2, 0x5)   calld(0x10115358, 0x3a91);            /* call 0x10115358 */
    II(0x101118c7, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101118c9, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x101118cb, 0x5)   calld(0x10115378, 0x3aa8);            /* call 0x10115378 */
    II(0x101118d0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101118d2, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x101118d4, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x101118d9, 0x5)   calld(0x10111386, -0x558);            /* call 0x10111386 */
    II(0x101118de, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101118e0, 0x2)   jzd(0x101118e9, 0x7);                 /* jz 0x101118e9 */
    II(0x101118e2, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x2328); /* mov dword [ebp-0x4], 0x2328 */
l_0x101118e9:
    II(0x101118e9, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x101118ed, 0x5)   jmpd(0x10111acb, 0x1d9);              /* jmp 0x10111acb */
l_0x101118f2:
    II(0x101118f2, 0x5)   calld(0x10109b8a, -0x7d6d);           /* call 0x10109b8a */
    II(0x101118f7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101118f9, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x101118fe, 0x5)   calld(0x100caafc, -0x46e07);          /* call 0x100caafc */
    II(0x10111903, 0x5)   calld(0x10115358, 0x3a50);            /* call 0x10115358 */
    II(0x10111908, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011190a, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1011190c, 0x5)   calld(0x10115378, 0x3a67);            /* call 0x10115378 */
    II(0x10111911, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10111913, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10111915, 0x5)   mov(eax, 0x9);                        /* mov eax, 0x9 */
    II(0x1011191a, 0x5)   calld(0x10111386, -0x599);            /* call 0x10111386 */
    II(0x1011191f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10111921, 0x2)   jzd(0x1011192a, 0x7);                 /* jz 0x1011192a */
    II(0x10111923, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x2328); /* mov dword [ebp-0x4], 0x2328 */
l_0x1011192a:
    II(0x1011192a, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x1011192e, 0x5)   jmpd(0x10111acb, 0x198);              /* jmp 0x10111acb */
l_0x10111933:
    II(0x10111933, 0x4)   xor_(memb_a32(ss, ebp - 0x10), 0x1);  /* xor byte [ebp-0x10], 0x1 */
    II(0x10111937, 0x5)   mov(eax, memd_a32(ds, 0x101b9113));   /* mov eax, [0x101b9113] */
    II(0x1011193c, 0x5)   calld(0x100cfbbe, -0x41d83);          /* call 0x100cfbbe */
    II(0x10111941, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x10111945, 0x2)   jzd(0x10111951, 0xa);                 /* jz 0x10111951 */
    II(0x10111947, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011194a, 0x5)   calld(0x10109804, -0x814b);           /* call 0x10109804 */
    II(0x1011194f, 0x2)   jmpd(0x1011195a, 0x9);                /* jmp 0x1011195a */
l_0x10111951:
    II(0x10111951, 0x5)   calld(0x10109b8a, -0x7dcc);           /* call 0x10109b8a */
    II(0x10111956, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
l_0x1011195a:
    II(0x1011195a, 0x5)   jmpd(0x10111acb, 0x16c);              /* jmp 0x10111acb */
l_0x1011195f:
    II(0x1011195f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10111962, 0x5)   calld(0x10109a84, -0x7ee3);           /* call 0x10109a84 */
    II(0x10111967, 0x5)   jmpd(0x10111acb, 0x15f);              /* jmp 0x10111acb */
l_0x1011196c:
    II(0x1011196c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011196f, 0x5)   calld(0x10109b05, -0x7e6f);           /* call 0x10109b05 */
    II(0x10111974, 0x5)   jmpd(0x10111acb, 0x152);              /* jmp 0x10111acb */
l_0x10111979:
    II(0x10111979, 0x5)   calld(0x10109b8a, -0x7df4);           /* call 0x10109b8a */
    II(0x1011197e, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x1b);   /* mov dword [ebp-0x4], 0x1b */
    II(0x10111985, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x10111989, 0x5)   jmpd(0x10111acb, 0x13d);              /* jmp 0x10111acb */
l_0x1011198e:
    II(0x1011198e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10111990, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10111993, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10111995, 0x2)   jnzd(0x101119a9, 0x12);               /* jnz 0x101119a9 */
    II(0x10111997, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1011199c, 0x5)   mov(edx, 0xffffffff);                 /* mov edx, 0xffffffff */
    II(0x101119a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101119a4, 0x5)   calld(0x1010c693, -0x5316);           /* call 0x1010c693 */
l_0x101119a9:
    II(0x101119a9, 0x5)   jmpd(0x10111acb, 0x11d);              /* jmp 0x10111acb */
l_0x101119ae:
    II(0x101119ae, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x7000); /* cmp dword [ebp-0x4], 0x7000 */
    II(0x101119b5, 0x2)   jld(0x101119bd, 0x6);                 /* jl 0x101119bd */
    II(0x101119b7, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x101119bb, 0x2)   jzd(0x101119bf, 0x2);                 /* jz 0x101119bf */
l_0x101119bd:
    II(0x101119bd, 0x2)   jmpd(0x101119fd, 0x3e);               /* jmp 0x101119fd */
l_0x101119bf:
    II(0x101119bf, 0x7)   add(memd_a32(ss, ebp - 0x4), 0xffff9000); /* add dword [ebp-0x4], 0xffff9000 */
    II(0x101119c6, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x3e8);  /* cmp dword [ebp-0x4], 0x3e8 */
    II(0x101119cd, 0x2)   jzd(0x101119d8, 0x9);                 /* jz 0x101119d8 */
    II(0x101119cf, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x3e9);  /* cmp dword [ebp-0x4], 0x3e9 */
    II(0x101119d6, 0x2)   jnzd(0x101119e4, 0xc);                /* jnz 0x101119e4 */
l_0x101119d8:
    II(0x101119d8, 0x5)   mov(eax, memd_a32(ds, 0x101c4de0));   /* mov eax, [0x101c4de0] */
    II(0x101119dd, 0x5)   calld(0x100cfbbe, -0x41e24);          /* call 0x100cfbbe */
    II(0x101119e2, 0x2)   jmpd(0x101119f9, 0x15);               /* jmp 0x101119f9 */
l_0x101119e4:
    II(0x101119e4, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0x8);    /* cmp dword [ebp-0x4], 0x8 */
    II(0x101119e8, 0x2)   jaed(0x101119f9, 0xf);                /* jae 0x101119f9 */
    II(0x101119ea, 0x4)   imul(eax, memd_a32(ss, ebp - 0x4), 0x13); /* imul eax, [ebp-0x4], 0x13 */
    II(0x101119ee, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b90b4)); /* mov eax, [eax+0x101b90b4] */
    II(0x101119f4, 0x5)   calld(0x100cfbbe, -0x41e3b);          /* call 0x100cfbbe */
l_0x101119f9:
    II(0x101119f9, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
l_0x101119fd:
    II(0x101119fd, 0x5)   jmpd(0x10111acb, 0xc9);               /* jmp 0x10111acb */
l_0x10111a02:
    II(0x10111a02, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x53);  /* cmp dword [ebp-0x1c], 0x53 */
    II(0x10111a06, 0x2)   jbd(0x10111a73, 0x6b);                /* jb 0x10111a73 */
    II(0x10111a08, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x53);  /* cmp dword [ebp-0x1c], 0x53 */
    II(0x10111a0c, 0x6)   jbed(0x10111888, -0x18a);             /* jbe dword 0x10111888 */
    II(0x10111a12, 0x7)   cmp(memd_a32(ss, ebp - 0x1c), 0x148); /* cmp dword [ebp-0x1c], 0x148 */
    II(0x10111a19, 0x2)   jbd(0x10111a55, 0x3a);                /* jb 0x10111a55 */
    II(0x10111a1b, 0x7)   cmp(memd_a32(ss, ebp - 0x1c), 0x148); /* cmp dword [ebp-0x1c], 0x148 */
    II(0x10111a22, 0x6)   jbed(0x1011198e, -0x9a);              /* jbe dword 0x1011198e */
    II(0x10111a28, 0x7)   cmp(memd_a32(ss, ebp - 0x1c), 0x3e8); /* cmp dword [ebp-0x1c], 0x3e8 */
    II(0x10111a2f, 0x2)   jbd(0x10111a50, 0x1f);                /* jb 0x10111a50 */
    II(0x10111a31, 0x7)   cmp(memd_a32(ss, ebp - 0x1c), 0x3e8); /* cmp dword [ebp-0x1c], 0x3e8 */
    II(0x10111a38, 0x6)   jbed(0x1011195f, -0xdf);              /* jbe dword 0x1011195f */
    II(0x10111a3e, 0x7)   cmp(memd_a32(ss, ebp - 0x1c), 0x3e9); /* cmp dword [ebp-0x1c], 0x3e9 */
    II(0x10111a45, 0x6)   jzd(0x1011196c, -0xdf);               /* jz dword 0x1011196c */
    II(0x10111a4b, 0x5)   jmpd(0x101119ae, -0xa2);              /* jmp 0x101119ae */
l_0x10111a50:
    II(0x10111a50, 0x5)   jmpd(0x101119ae, -0xa7);              /* jmp 0x101119ae */
l_0x10111a55:
    II(0x10111a55, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x54);  /* cmp dword [ebp-0x1c], 0x54 */
    II(0x10111a59, 0x6)   jbed(0x10111853, -0x20c);             /* jbe dword 0x10111853 */
    II(0x10111a5f, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x55);  /* cmp dword [ebp-0x1c], 0x55 */
    II(0x10111a63, 0x6)   jzd(0x10111824, -0x245);              /* jz dword 0x10111824 */
    II(0x10111a69, 0x5)   jmpd(0x101119ae, -0xc0);              /* jmp 0x101119ae */
//  II(0x10111a6e, 0x5)   /* Недостижимый код. */
l_0x10111a73:
    II(0x10111a73, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x43);  /* cmp dword [ebp-0x1c], 0x43 */
    II(0x10111a77, 0x2)   jbd(0x10111aa7, 0x2e);                /* jb 0x10111aa7 */
    II(0x10111a79, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x43);  /* cmp dword [ebp-0x1c], 0x43 */
    II(0x10111a7d, 0x6)   jbed(0x10111979, -0x10a);             /* jbe dword 0x10111979 */
    II(0x10111a83, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x49);  /* cmp dword [ebp-0x1c], 0x49 */
    II(0x10111a87, 0x2)   jbd(0x10111aa2, 0x19);                /* jb 0x10111aa2 */
    II(0x10111a89, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x49);  /* cmp dword [ebp-0x1c], 0x49 */
    II(0x10111a8d, 0x6)   jbed(0x10111933, -0x160);             /* jbe dword 0x10111933 */
    II(0x10111a93, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x4d);  /* cmp dword [ebp-0x1c], 0x4d */
    II(0x10111a97, 0x6)   jzd(0x101118f2, -0x1ab);              /* jz dword 0x101118f2 */
    II(0x10111a9d, 0x5)   jmpd(0x101119ae, -0xf4);              /* jmp 0x101119ae */
l_0x10111aa2:
    II(0x10111aa2, 0x5)   jmpd(0x101119ae, -0xf9);              /* jmp 0x101119ae */
l_0x10111aa7:
    II(0x10111aa7, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x1b);  /* cmp dword [ebp-0x1c], 0x1b */
    II(0x10111aab, 0x2)   jbd(0x10111ac6, 0x19);                /* jb 0x10111ac6 */
    II(0x10111aad, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x1b);  /* cmp dword [ebp-0x1c], 0x1b */
    II(0x10111ab1, 0x6)   jbed(0x10111979, -0x13e);             /* jbe dword 0x10111979 */
    II(0x10111ab7, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0x41);  /* cmp dword [ebp-0x1c], 0x41 */
    II(0x10111abb, 0x6)   jzd(0x101118bd, -0x204);              /* jz dword 0x101118bd */
    II(0x10111ac1, 0x5)   jmpd(0x101119ae, -0x118);             /* jmp 0x101119ae */
l_0x10111ac6:
    II(0x10111ac6, 0x5)   jmpd(0x101119ae, -0x11d);             /* jmp 0x101119ae */
l_0x10111acb:
    II(0x10111acb, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x10111acf, 0x6)   jzd(0x101117f1, -0x2e4);              /* jz dword 0x101117f1 */
    II(0x10111ad5, 0x5)   jmpd(0x1011176e, -0x36c);             /* jmp 0x1011176e */
l_0x10111ada:
    II(0x10111ada, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x2328); /* cmp dword [ebp-0x4], 0x2328 */
    II(0x10111ae1, 0x2)   jnzd(0x10111aec, 0x9);                /* jnz 0x10111aec */
    II(0x10111ae3, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x1);   /* mov dword [ebp-0x20], 0x1 */
    II(0x10111aea, 0x2)   jmpd(0x10111af3, 0x7);                /* jmp 0x10111af3 */
l_0x10111aec:
    II(0x10111aec, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x10111af3:
    II(0x10111af3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10111af6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x10111af9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10111afc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10111afe, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10111aff, 0x1)   popd(edi);                            /* pop edi */
    II(0x10111b00, 0x1)   popd(esi);                            /* pop esi */
    II(0x10111b01, 0x1)   popd(edx);                            /* pop edx */
    II(0x10111b02, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10111b03, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10111b04, 0x1)   retd();                               /* ret */
FUNC_END

