FUNC_BEGIN(0x100c2e41, 0xbc29880081ae8564, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x7, 0x2f, 0xa, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x67, 0, 0xf, 0x84, 0x4e, 0x1, 0, 0, 0x8b, 0x5d, 0xfc, 0x8b, 0x5b, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x27, 0x3c, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xaf, 0x33, 0xfb, 0xff, 0x66, 0x8b, 0x40, 0xe, 0x89, 0x45, 0xf4, 0xb8, 0x7, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0xb9, 0x2, 0, 0, 0, 0x8b, 0x45, 0xf2, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0x65, 0xfe, 0xff, 0xff, 0xb8, 0x5, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0xb9, 0x4, 0, 0, 0, 0x8b, 0x45, 0xf2, 0x5, 0x2, 0, 0, 0, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x83, 0xe8, 0x2, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0x39, 0xfe, 0xff, 0xff, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0xb9, 0x6, 0, 0, 0, 0x8b, 0x45, 0xf2, 0x5, 0x3, 0, 0, 0, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x83, 0xe8, 0x3, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0xd, 0xfe, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0xb9, 0x8, 0, 0, 0, 0x8b, 0x45, 0xf2, 0x5, 0x4, 0, 0, 0, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x83, 0xe8, 0x4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0xe1, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x21, 0xe8, 0xc6, 0x7d, 0x7, 0, 0x84, 0xc0, 0x74, 0x6a, 0xb8, 0x23, 0, 0, 0, 0xe8, 0xa7, 0x2e, 0xa, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x26, 0x8d, 0x55, 0xf0, 0x8d, 0x45, 0xe4, 0xe8, 0xf1, 0x2e, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xec, 0xe8, 0x90, 0xbf, 0xfd, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xdc, 0x8b, 0x55, 0xdc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x21, 0xe8, 0x42, 0x80, 0xfc, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x21, 0xe8, 0xd7, 0x7f, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x97, 0x1d, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100c2e41, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x100c2e46, 0x5)   calld(sys_check_available_stack_size, 0xa2f07); /* call 0x10165d52 */
    II(0x100c2e4b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100c2e4c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c2e4d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c2e4e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c2e4f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c2e50, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c2e52, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100c2e58, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100c2e5b, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100c2e5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2e61, 0x4)   cmp(memd_a32(ds, eax + 0x67), 0);     /* cmp dword [eax+0x67], 0x0 */
    II(0x100c2e65, 0x6)   jzd(0x100c2fb9, 0x14e);               /* jz dword 0x100c2fb9 */
    II(0x100c2e6b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100c2e6e, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x1a));   /* mov ebx, [ebx+0x1a] */
    II(0x100c2e71, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c2e74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c2e77, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100c2e7a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c2e7d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c2e80, 0x5)   calld(0x10076aac, -0x4c3d9);          /* call 0x10076aac */
    II(0x100c2e85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c2e88, 0x5)   calld(0x1007623c, -0x4cc51);          /* call 0x1007623c */
    II(0x100c2e8d, 0x4)   mov(ax, memw_a32(ds, eax + 0xe));     /* mov ax, [eax+0xe] */
    II(0x100c2e91, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100c2e94, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x100c2e99, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c2e9a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100c2e9e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c2e9f, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x100c2ea4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100c2ea7, 0x1)   inc(eax);                             /* inc eax */
    II(0x100c2ea8, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100c2eab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c2eae, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c2eaf, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c2eb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2eb5, 0x5)   calld(0x100c2d1f, -0x19b);            /* call 0x100c2d1f */
    II(0x100c2eba, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100c2ebf, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c2ec0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100c2ec4, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c2ec5, 0x5)   mov(ecx, 0x4);                        /* mov ecx, 0x4 */
    II(0x100c2eca, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100c2ecd, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100c2ed2, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100c2ed5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c2ed8, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x100c2edb, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c2ede, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2ee1, 0x5)   calld(0x100c2d1f, -0x1c7);            /* call 0x100c2d1f */
    II(0x100c2ee6, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100c2eeb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c2eec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100c2ef0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c2ef1, 0x5)   mov(ecx, 0x6);                        /* mov ecx, 0x6 */
    II(0x100c2ef6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100c2ef9, 0x5)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x100c2efe, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100c2f01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c2f04, 0x3)   sub(eax, 0x3);                        /* sub eax, 0x3 */
    II(0x100c2f07, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c2f0a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2f0d, 0x5)   calld(0x100c2d1f, -0x1f3);            /* call 0x100c2d1f */
    II(0x100c2f12, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100c2f17, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c2f18, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100c2f1c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c2f1d, 0x5)   mov(ecx, 0x8);                        /* mov ecx, 0x8 */
    II(0x100c2f22, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100c2f25, 0x5)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100c2f2a, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100c2f2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c2f30, 0x3)   sub(eax, 0x4);                        /* sub eax, 0x4 */
    II(0x100c2f33, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c2f36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2f39, 0x5)   calld(0x100c2d1f, -0x21f);            /* call 0x100c2d1f */
    II(0x100c2f3e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c2f40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2f43, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x100c2f46, 0x5)   calld(0x1013ad11, 0x77dc6);           /* call 0x1013ad11 */
    II(0x100c2f4b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c2f4d, 0x2)   jzd(0x100c2fb9, 0x6a);                /* jz 0x100c2fb9 */
    II(0x100c2f4f, 0x5)   mov(eax, 0x23);                       /* mov eax, 0x23 */
    II(0x100c2f54, 0x5)   calld(sys_new, 0xa2ea7);              /* call 0x10165e00 */
    II(0x100c2f59, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100c2f5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c2f5f, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100c2f62, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100c2f66, 0x2)   jzd(0x100c2f8e, 0x26);                /* jz 0x100c2f8e */
    II(0x100c2f68, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x100c2f6b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c2f6e, 0x5)   calld(0x10075e64, -0x4d10f);          /* call 0x10075e64 */
    II(0x100c2f73, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c2f75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2f78, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100c2f7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c2f7e, 0x5)   calld(0x1009ef13, -0x24070);          /* call 0x1009ef13 */
    II(0x100c2f83, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100c2f86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100c2f89, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100c2f8c, 0x2)   jmpd(0x100c2f94, 0x6);                /* jmp 0x100c2f94 */
l_0x100c2f8e:
    II(0x100c2f8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c2f91, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100c2f94:
    II(0x100c2f94, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100c2f97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2f9a, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x100c2f9d, 0x5)   calld(0x1008afe4, -0x37fbe);          /* call 0x1008afe4 */
    II(0x100c2fa2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2fa5, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x100c2fa8, 0x5)   calld(0x1008af84, -0x38029);          /* call 0x1008af84 */
    II(0x100c2fad, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c2faf, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100c2fb4, 0x5)   calld(0x100a4d50, -0x1e269);          /* call 0x100a4d50 */
l_0x100c2fb9:
    II(0x100c2fb9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c2fbb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c2fbc, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c2fbd, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c2fbe, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c2fbf, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100c2fc0, 0x1)   retd();                               /* ret */
FUNC_END

