FUNC_BEGIN(0x10105b00, 0xe5b8663a9b80fe0f, 0x20, ({0x68, 0xb0, 0x4, 0, 0, 0xe8, 0x48, 0x2, 0x6, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x94, 0x4, 0, 0, 0x88, 0x45, 0xf4, 0x88, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0xfd, 0x51, 0xfe, 0xff, 0xb8, 0x1d, 0, 0, 0, 0xe8, 0x63, 0xb2, 0x1, 0, 0x6a, 0x10, 0x6a, 0, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0x31, 0xc0, 0xe8, 0x1c, 0xc, 0x6, 0, 0x89, 0x45, 0xe8, 0xe8, 0xb3, 0x4d, 0xfe, 0xff, 0xe8, 0xb3, 0x56, 0x6, 0, 0x83, 0xf8, 0x1b, 0xf, 0x84, 0x32, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xcd, 0x4d, 0xfe, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xa5, 0, 0, 0, 0xf6, 0x45, 0xec, 0x20, 0xf, 0x85, 0x18, 0x1, 0, 0, 0xf6, 0x45, 0xec, 0x10, 0xf, 0x84, 0x91, 0, 0, 0, 0xba, 0xff, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xc8, 0x80, 0x3, 0, 0x80, 0x7d, 0xf4, 0x9, 0x75, 0x15, 0xf, 0xbf, 0x55, 0xef, 0xf, 0xbf, 0x45, 0xed, 0xe8, 0x45, 0xfe, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x85, 0xe4, 0, 0, 0, 0x80, 0x4d, 0xe4, 0x1, 0xf, 0xbe, 0x45, 0xf8, 0x50, 0xf, 0xbf, 0x4d, 0xef, 0xf, 0xbf, 0x5d, 0xed, 0xf, 0xbe, 0x55, 0xf4, 0x8d, 0x85, 0x70, 0xfb, 0xff, 0xff, 0xe8, 0x50, 0xed, 0xff, 0xff, 0x89, 0x85, 0x6c, 0xfb, 0xff, 0xff, 0x80, 0x65, 0xe4, 0xfe, 0x31, 0xd2, 0x8a, 0x55, 0xfc, 0x8d, 0x85, 0x70, 0xfb, 0xff, 0xff, 0xe8, 0xc, 0xfd, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x12, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xfb, 0xff, 0xff, 0xe8, 0x56, 0xf1, 0xff, 0xff, 0xe9, 0x94, 0, 0, 0, 0xb8, 0x1d, 0, 0, 0, 0xe8, 0x8e, 0xb1, 0x1, 0, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xfb, 0xff, 0xff, 0xe8, 0x3a, 0xf1, 0xff, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x85, 0xc0, 0xf, 0x85, 0x6b, 0, 0, 0, 0x80, 0x7d, 0xf8, 0x26, 0x75, 0xe, 0x31, 0xd2, 0xb8, 0x1, 0, 0, 0, 0xe8, 0, 0xb2, 0xff, 0xff, 0xeb, 0x57, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0x74, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0xb, 0x31, 0xd2, 0x31, 0xc0, 0xe8, 0xe3, 0xb1, 0xff, 0xff, 0xeb, 0x3a, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0, 0x74, 0x10, 0xe8, 0x35, 0x50, 0x2, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x2, 0x74, 0x28, 0xeb, 0x21, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x18, 0xe8, 0x6c, 0xe6, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0xe8, 0xb3, 0x2b, 0x2, 0, 0x85, 0xc0, 0x74, 0x5, 0xe8, 0x2d, 0xd0, 0x5, 0, 0xe9, 0xc0, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xe8, 0xe8, 0xf8, 0xc, 0x6, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xf2, 0xb0, 0x1, 0, 0xe8, 0x5c, 0x4c, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10105b00, 0x5)   pushd(0x4b0);                         /* push dword 0x4b0 */
    II(0x10105b05, 0x5)   calld(sys_check_available_stack_size, 0x60248); /* call 0x10165d52 */
    II(0x10105b0a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10105b0b, 0x1)   pushd(esi);                           /* push esi */
    II(0x10105b0c, 0x1)   pushd(edi);                           /* push edi */
    II(0x10105b0d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10105b0e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10105b10, 0x6)   sub(esp, 0x494);                      /* sub esp, 0x494 */
    II(0x10105b16, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x10105b19, 0x3)   mov(memb_a32(ss, ebp - 0x8), dl);     /* mov [ebp-0x8], dl */
    II(0x10105b1c, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x10105b1f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10105b22, 0x5)   calld(0x100ead24, -0x1ae03);          /* call 0x100ead24 */
    II(0x10105b27, 0x5)   mov(eax, 0x1d);                       /* mov eax, 0x1d */
    II(0x10105b2c, 0x5)   calld(0x10120d94, 0x1b263);           /* call 0x10120d94 */
    II(0x10105b31, 0x2)   pushd(0x10);                          /* push 0x10 */
    II(0x10105b33, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x10105b35, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10105b3a, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10105b3f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10105b41, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10105b43, 0x5)   calld(/* sys */ 0x10166764, 0x60c1c); /* call 0x10166764 */
    II(0x10105b48, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10105b4b, 0x5)   calld(0x100ea903, -0x1b24d);          /* call 0x100ea903 */
l_0x10105b50:
    II(0x10105b50, 0x5)   calld(/* sys */ 0x1016b208, 0x656b3); /* call 0x1016b208 */
    II(0x10105b55, 0x3)   cmp(eax, 0x1b);                       /* cmp eax, 0x1b */
    II(0x10105b58, 0x6)   jzd(0x10105c90, 0x132);               /* jz dword 0x10105c90 */
    II(0x10105b5e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10105b61, 0x5)   calld(0x100ea933, -0x1b233);          /* call 0x100ea933 */
    II(0x10105b66, 0x2)   test(al, al);                         /* test al, al */
    II(0x10105b68, 0x6)   jzd(0x10105c13, 0xa5);                /* jz dword 0x10105c13 */
    II(0x10105b6e, 0x4)   test(memb_a32(ss, ebp - 0x14), 0x20); /* test byte [ebp-0x14], 0x20 */
    II(0x10105b72, 0x6)   jnzd(0x10105c90, 0x118);              /* jnz dword 0x10105c90 */
    II(0x10105b78, 0x4)   test(memb_a32(ss, ebp - 0x14), 0x10); /* test byte [ebp-0x14], 0x10 */
    II(0x10105b7c, 0x6)   jzd(0x10105c13, 0x91);                /* jz dword 0x10105c13 */
    II(0x10105b82, 0x5)   mov(edx, 0x4ff);                      /* mov edx, 0x4ff */
    II(0x10105b87, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10105b8c, 0x5)   calld(0x1013dc59, 0x380c8);           /* call 0x1013dc59 */
    II(0x10105b91, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0x9);    /* cmp byte [ebp-0xc], 0x9 */
    II(0x10105b95, 0x2)   jnzd(0x10105bac, 0x15);               /* jnz 0x10105bac */
    II(0x10105b97, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x11)); /* movsx edx, word [ebp-0x11] */
    II(0x10105b9b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x13)); /* movsx eax, word [ebp-0x13] */
    II(0x10105b9f, 0x5)   calld(0x101059e9, -0x1bb);            /* call 0x101059e9 */
    II(0x10105ba4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10105ba6, 0x6)   jnzd(0x10105c90, 0xe4);               /* jnz dword 0x10105c90 */
l_0x10105bac:
    II(0x10105bac, 0x4)   or_(memb_a32(ss, ebp - 0x1c), 0x1);   /* or byte [ebp-0x1c], 0x1 */
    II(0x10105bb0, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10105bb4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105bb5, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x11)); /* movsx ecx, word [ebp-0x11] */
    II(0x10105bb9, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x13)); /* movsx ebx, word [ebp-0x13] */
    II(0x10105bbd, 0x4)   movsx(edx, memb_a32(ss, ebp - 0xc));  /* movsx edx, byte [ebp-0xc] */
    II(0x10105bc1, 0x6)   lea(eax, ebp - 0x490);                /* lea eax, [ebp+0xfffffb70] */
    II(0x10105bc7, 0x5)   calld(0x1010491c, -0x12b0);           /* call 0x1010491c */
    II(0x10105bcc, 0x6)   mov(memd_a32(ss, ebp - 0x494), eax);  /* mov [ebp+0xfffffb6c], eax */
    II(0x10105bd2, 0x4)   and_(memb_a32(ss, ebp - 0x1c), -0x2 /* 0xfe */); /* and byte [ebp-0x1c], 0xfe */
    II(0x10105bd6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10105bd8, 0x3)   mov(dl, memb_a32(ss, ebp - 0x4));     /* mov dl, [ebp-0x4] */
    II(0x10105bdb, 0x6)   lea(eax, ebp - 0x490);                /* lea eax, [ebp+0xfffffb70] */
    II(0x10105be1, 0x5)   calld(0x101058f2, -0x2f4);            /* call 0x101058f2 */
    II(0x10105be6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10105be8, 0x2)   jnzd(0x10105bfc, 0x12);               /* jnz 0x10105bfc */
    II(0x10105bea, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10105bec, 0x6)   lea(eax, ebp - 0x490);                /* lea eax, [ebp+0xfffffb70] */
    II(0x10105bf2, 0x5)   calld(0x10104d4d, -0xeaa);            /* call 0x10104d4d */
    II(0x10105bf7, 0x5)   jmpd(0x10105c90, 0x94);               /* jmp 0x10105c90 */
l_0x10105bfc:
    II(0x10105bfc, 0x5)   mov(eax, 0x1d);                       /* mov eax, 0x1d */
    II(0x10105c01, 0x5)   calld(0x10120d94, 0x1b18e);           /* call 0x10120d94 */
    II(0x10105c06, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10105c08, 0x6)   lea(eax, ebp - 0x490);                /* lea eax, [ebp+0xfffffb70] */
    II(0x10105c0e, 0x5)   calld(0x10104d4d, -0xec6);            /* call 0x10104d4d */
l_0x10105c13:
    II(0x10105c13, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10105c15, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10105c18, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10105c1a, 0x6)   jnzd(0x10105c8b, 0x6b);               /* jnz dword 0x10105c8b */
    II(0x10105c20, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0x26);   /* cmp byte [ebp-0x8], 0x26 */
    II(0x10105c24, 0x2)   jnzd(0x10105c34, 0xe);                /* jnz 0x10105c34 */
    II(0x10105c26, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10105c28, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10105c2d, 0x5)   calld(0x10100e32, -0x4e00);           /* call 0x10100e32 */
    II(0x10105c32, 0x2)   jmpd(0x10105c8b, 0x57);               /* jmp 0x10105c8b */
l_0x10105c34:
    II(0x10105c34, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x8);   /* cmp byte [0x101c391e], 0x8 */
    II(0x10105c3b, 0x2)   jzd(0x10105c46, 0x9);                 /* jz 0x10105c46 */
    II(0x10105c3d, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x10105c44, 0x2)   jnzd(0x10105c51, 0xb);                /* jnz 0x10105c51 */
l_0x10105c46:
    II(0x10105c46, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10105c48, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10105c4a, 0x5)   calld(0x10100e32, -0x4e1d);           /* call 0x10100e32 */
    II(0x10105c4f, 0x2)   jmpd(0x10105c8b, 0x3a);               /* jmp 0x10105c8b */
l_0x10105c51:
    II(0x10105c51, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0);     /* cmp byte [0x101c5630], 0x0 */
    II(0x10105c58, 0x2)   jzd(0x10105c6a, 0x10);                /* jz 0x10105c6a */
    II(0x10105c5a, 0x5)   calld(0x1012ac94, 0x25035);           /* call 0x1012ac94 */
    II(0x10105c5f, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x2);   /* cmp byte [0x101c5630], 0x2 */
    II(0x10105c66, 0x2)   jzd(0x10105c90, 0x28);                /* jz 0x10105c90 */
    II(0x10105c68, 0x2)   jmpd(0x10105c8b, 0x21);               /* jmp 0x10105c8b */
l_0x10105c6a:
    II(0x10105c6a, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x10105c71, 0x2)   jzd(0x10105c8b, 0x18);                /* jz 0x10105c8b */
    II(0x10105c73, 0x5)   calld(0x100e42e4, -0x21994);          /* call 0x100e42e4 */
    II(0x10105c78, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10105c7d, 0x5)   calld(0x10128835, 0x22bb3);           /* call 0x10128835 */
    II(0x10105c82, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10105c84, 0x2)   jzd(0x10105c8b, 0x5);                 /* jz 0x10105c8b */
    II(0x10105c86, 0x5)   calld(0x10162cb8, 0x5d02d);           /* call 0x10162cb8 */
l_0x10105c8b:
    II(0x10105c8b, 0x5)   jmpd(0x10105b50, -0x140);             /* jmp 0x10105b50 */
l_0x10105c90:
    II(0x10105c90, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10105c93, 0x5)   calld(/* sys */ 0x10166990, 0x60cf8); /* call 0x10166990 */
    II(0x10105c98, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10105c9d, 0x5)   calld(0x10120d94, 0x1b0f2);           /* call 0x10120d94 */
    II(0x10105ca2, 0x5)   calld(0x100ea903, -0x1b3a4);          /* call 0x100ea903 */
    II(0x10105ca7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10105ca9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10105caa, 0x1)   popd(edi);                            /* pop edi */
    II(0x10105cab, 0x1)   popd(esi);                            /* pop esi */
    II(0x10105cac, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10105cad, 0x1)   retd();                               /* ret */
FUNC_END

