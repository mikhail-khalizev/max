FUNC_BEGIN(0x10110812, 0x9f0f990e6b9a18b5, 0x20, ({0x68, 0xe4, 0, 0, 0, 0xe8, 0x36, 0x55, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xbc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x51, 0x8e, 0xff, 0xff, 0xc7, 0x45, 0xf8, 0xc, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0x41, 0x1, 0, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0xf, 0x84, 0x91, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x18, 0xba, 0x94, 0xad, 0x1b, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0xb, 0x7d, 0x37, 0x6a, 0x2, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x4, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x48, 0x4, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x16, 0xe8, 0xf9, 0x9c, 0x5, 0, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x83, 0xb8, 0xf4, 0x4d, 0x1c, 0x10, 0, 0x74, 0x12, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xf4, 0x4d, 0x1c, 0x10, 0xe8, 0x9b, 0x56, 0x5, 0, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0xc7, 0x80, 0xf4, 0x4d, 0x1c, 0x10, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0xb8, 0x43, 0x1, 0, 0, 0x2, 0x75, 0x3f, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x90, 0x40, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x1, 0xc2, 0xb8, 0x41, 0, 0, 0, 0xe8, 0xdb, 0x56, 0xf6, 0xff, 0x39, 0xc2, 0x7e, 0x20, 0xe8, 0xba, 0x48, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x10, 0xe8, 0xe6, 0xf1, 0xfb, 0xff, 0xe9, 0xbd, 0, 0, 0, 0x31, 0xc9, 0x8d, 0x9d, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0xf, 0xbe, 0x80, 0x43, 0x1, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8a, 0x80, 0x40, 0x1, 0, 0, 0x30, 0xe4, 0x3, 0x45, 0xf8, 0x98, 0xe8, 0x8f, 0x91, 0x2, 0, 0x85, 0xc0, 0x75, 0x1d, 0xe8, 0x6c, 0x48, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x10, 0xe8, 0x98, 0xf1, 0xfb, 0xff, 0xeb, 0x72, 0x8b, 0x45, 0xfc, 0xfe, 0x80, 0x41, 0x1, 0, 0, 0xb8, 0x1e, 0, 0, 0, 0xe8, 0x8d, 0x56, 0x5, 0, 0xf, 0xbf, 0x55, 0xf8, 0xc1, 0xe2, 0x2, 0x89, 0x82, 0xf4, 0x4d, 0x1c, 0x10, 0x8d, 0x95, 0x47, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xf4, 0x4d, 0x1c, 0x10, 0xe8, 0x27, 0x55, 0x5, 0, 0xbb, 0x2, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xdd, 0xf8, 0xff, 0xff, 0xe8, 0x26, 0x48, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x3d, 0x48, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x10, 0xe8, 0x9f, 0xf0, 0xfb, 0xff, 0xe8, 0x76, 0xa8, 0x5, 0, 0xe9, 0x61, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10110812, 0x5)   pushd(0xe4);                          /* push dword 0xe4 */
    II(0x10110817, 0x5)   calld(sys_check_available_stack_size, 0x55536); /* call 0x10165d52 */
    II(0x1011081c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011081d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011081e, 0x1)   pushd(edx);                           /* push edx */
    II(0x1011081f, 0x1)   pushd(esi);                           /* push esi */
    II(0x10110820, 0x1)   pushd(edi);                           /* push edi */
    II(0x10110821, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10110822, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10110824, 0x6)   sub(esp, 0xbc);                       /* sub esp, 0xbc */
    II(0x1011082a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1011082d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110830, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10110832, 0x5)   calld(0x10109688, -0x71af);           /* call 0x10109688 */
    II(0x10110837, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0xc);    /* mov dword [ebp-0x8], 0xc */
    II(0x1011083e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110841, 0x7)   mov(memb_a32(ds, eax + 0x141), 0);    /* mov byte [eax+0x141], 0x0 */
l_0x10110848:
    II(0x10110848, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x1011084b, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x10110850, 0x6)   jzd(0x101109e7, 0x191);               /* jz dword 0x101109e7 */
    II(0x10110856, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1011085a, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x1011085d, 0x5)   mov(edx, 0x101bad94);                 /* mov edx, 0x101bad94 */
    II(0x10110862, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10110864, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10110867, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1011086b, 0x3)   cmp(eax, 0xb);                        /* cmp eax, 0xb */
    II(0x1011086e, 0x2)   jged(0x101108a7, 0x37);               /* jge 0x101108a7 */
    II(0x10110870, 0x2)   pushd(0x2);                           /* push 0x2 */
    II(0x10110872, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10110875, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10110878, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011087b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011087c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011087f, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x10110882, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10110885, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110886, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10110889, 0x3)   mov(ecx, memd_a32(ds, eax + 0x4));    /* mov ecx, [eax+0x4] */
    II(0x1011088c, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1011088f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10110892, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10110895, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x1011089a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011089d, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011089f, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101108a2, 0x5)   calld(/* sys */ 0x1016a5a0, 0x59cf9); /* call 0x1016a5a0 */
l_0x101108a7:
    II(0x101108a7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101108ab, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101108ae, 0x7)   cmp(memd_a32(ds, eax + 0x101c4df4), 0); /* cmp dword [eax+0x101c4df4], 0x0 */
    II(0x101108b5, 0x2)   jzd(0x101108c9, 0x12);                /* jz 0x101108c9 */
    II(0x101108b7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101108bb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101108be, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4df4)); /* mov eax, [eax+0x101c4df4] */
    II(0x101108c4, 0x5)   calld(sys_delete, 0x5569b);           /* call 0x10165f64 */
l_0x101108c9:
    II(0x101108c9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101108cd, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101108d0, 0xa)   mov(memd_a32(ds, eax + 0x101c4df4), 0); /* mov dword [eax+0x101c4df4], 0x0 */
    II(0x101108da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101108dd, 0x7)   cmp(memb_a32(ds, eax + 0x143), 0x2);  /* cmp byte [eax+0x143], 0x2 */
    II(0x101108e4, 0x2)   jnzd(0x10110925, 0x3f);               /* jnz 0x10110925 */
    II(0x101108e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101108e9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101108eb, 0x6)   mov(dl, memb_a32(ds, eax + 0x140));   /* mov dl, [eax+0x140] */
    II(0x101108f1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101108f5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101108f7, 0x5)   mov(eax, 0x41);                       /* mov eax, 0x41 */
    II(0x101108fc, 0x5)   calld(0x10075fdc, -0x9a925);          /* call 0x10075fdc */
    II(0x10110901, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10110903, 0x2)   jled(0x10110925, 0x20);               /* jle 0x10110925 */
    II(0x10110905, 0x5)   calld(0x100d51c4, -0x3b746);          /* call 0x100d51c4 */
    II(0x1011090a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011090c, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011090e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10110912, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110915, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10110918, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x1011091b, 0x5)   calld(0x100cfb06, -0x40e1a);          /* call 0x100cfb06 */
    II(0x10110920, 0x5)   jmpd(0x101109e2, 0xbd);               /* jmp 0x101109e2 */
l_0x10110925:
    II(0x10110925, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10110927, 0x6)   lea(ebx, ebp - 0xbc);                 /* lea ebx, [ebp+0xffffff44] */
    II(0x1011092d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110930, 0x8)   movsx(ax, memb_a32(ds, eax + 0x143)); /* movsx ax, byte [eax+0x143] */
    II(0x10110938, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1011093b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011093e, 0x6)   mov(al, memb_a32(ds, eax + 0x140));   /* mov al, [eax+0x140] */
    II(0x10110944, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10110946, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10110949, 0x1)   cwde();                               /* cwde */
    II(0x1011094a, 0x5)   calld(0x10139ade, 0x2918f);           /* call 0x10139ade */
    II(0x1011094f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10110951, 0x2)   jnzd(0x10110970, 0x1d);               /* jnz 0x10110970 */
    II(0x10110953, 0x5)   calld(0x100d51c4, -0x3b794);          /* call 0x100d51c4 */
    II(0x10110958, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011095a, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011095c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10110960, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110963, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10110966, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x10110969, 0x5)   calld(0x100cfb06, -0x40e68);          /* call 0x100cfb06 */
    II(0x1011096e, 0x2)   jmpd(0x101109e2, 0x72);               /* jmp 0x101109e2 */
l_0x10110970:
    II(0x10110970, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110973, 0x6)   inc(memb_a32(ds, eax + 0x141));       /* inc byte [eax+0x141] */
    II(0x10110979, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x1011097e, 0x5)   calld(sys_new_arr, 0x5568d);          /* call 0x10166010 */
    II(0x10110983, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10110987, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011098a, 0x6)   mov(memd_a32(ds, edx + 0x101c4df4), eax); /* mov [edx+0x101c4df4], eax */
    II(0x10110990, 0x6)   lea(edx, ebp - 0xb9);                 /* lea edx, [ebp+0xffffff47] */
    II(0x10110996, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1011099a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011099d, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4df4)); /* mov eax, [eax+0x101c4df4] */
    II(0x101109a3, 0x5)   calld(sys_strcpy, 0x55527);           /* call 0x10165ecf */
    II(0x101109a8, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x101109ad, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x101109b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101109b4, 0x5)   calld(0x10110296, -0x723);            /* call 0x10110296 */
    II(0x101109b9, 0x5)   calld(0x100d51e4, -0x3b7da);          /* call 0x100d51e4 */
    II(0x101109be, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101109c0, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x101109c2, 0x5)   calld(0x100d5204, -0x3b7c3);          /* call 0x100d5204 */
    II(0x101109c7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101109c9, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x101109cb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101109cf, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101109d2, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x101109d5, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x101109d8, 0x5)   calld(0x100cfa7c, -0x40f61);          /* call 0x100cfa7c */
    II(0x101109dd, 0x5)   calld(/* sys */ 0x1016b258, 0x5a876); /* call 0x1016b258 */
l_0x101109e2:
    II(0x101109e2, 0x5)   jmpd(0x10110848, -0x19f);             /* jmp 0x10110848 */
l_0x101109e7:
    II(0x101109e7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101109e9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101109ea, 0x1)   popd(edi);                            /* pop edi */
    II(0x101109eb, 0x1)   popd(esi);                            /* pop esi */
    II(0x101109ec, 0x1)   popd(edx);                            /* pop edx */
    II(0x101109ed, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101109ee, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101109ef, 0x1)   retd();                               /* ret */
FUNC_END

