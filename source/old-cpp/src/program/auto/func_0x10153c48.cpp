FUNC_BEGIN(0x10153c48, 0x507768e074427ebb, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0, 0x21, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x38, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x4a, 0x75, 0x18, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0xae, 0x2a, 0xf2, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x52, 0x66, 0x3b, 0x50, 0x19, 0x7c, 0x5, 0xe9, 0xfc, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x4a, 0x75, 0x9, 0xc7, 0x45, 0xf0, 0x2a, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0x29, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0x71, 0xf8, 0xfa, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0xde, 0x27, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x8d, 0x70, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x12, 0x8d, 0x45, 0xf4, 0xe8, 0xb0, 0x26, 0xf2, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xf8, 0x75, 0x2, 0xeb, 0xa, 0x8d, 0x45, 0xf4, 0xe8, 0xf4, 0x2e, 0xf2, 0xff, 0xeb, 0xd4, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x1, 0x70, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0xc, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x4e, 0x22, 0xf2, 0xff, 0xeb, 0x70, 0x8d, 0x45, 0xf4, 0xe8, 0xac, 0x26, 0xf2, 0xff, 0xe8, 0x9f, 0xb5, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x52, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0xf1, 0x29, 0xf2, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x52, 0x66, 0x3b, 0x50, 0x19, 0x75, 0xa, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0xa6, 0, 0, 0, 0, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x35, 0x30, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x1f, 0x8b, 0x45, 0xfc, 0xe8, 0xde, 0xcb, 0xfa, 0xff, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x10, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x3a, 0x98, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xdc, 0x21, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10153c48, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10153c4d, 0x5)   calld(sys_check_available_stack_size, 0x12100); /* call 0x10165d52 */
    II(0x10153c52, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10153c53, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10153c54, 0x1)   pushd(edx);                           /* push edx */
    II(0x10153c55, 0x1)   pushd(esi);                           /* push esi */
    II(0x10153c56, 0x1)   pushd(edi);                           /* push edi */
    II(0x10153c57, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10153c58, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10153c5a, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10153c60, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10153c63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153c66, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x38);   /* cmp word [eax+0x8], 0x38 */
    II(0x10153c6b, 0x2)   jzd(0x10153c77, 0xa);                 /* jz 0x10153c77 */
    II(0x10153c6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153c70, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4a);   /* cmp word [eax+0x8], 0x4a */
    II(0x10153c75, 0x2)   jnzd(0x10153c8f, 0x18);               /* jnz 0x10153c8f */
l_0x10153c77:
    II(0x10153c77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153c7a, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10153c7d, 0x5)   calld(0x10076730, -0xdd552);          /* call 0x10076730 */
    II(0x10153c82, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10153c85, 0x4)   mov(dx, memw_a32(ds, edx + 0x52));    /* mov dx, [edx+0x52] */
    II(0x10153c89, 0x4)   cmp(dx, memw_a32(ds, eax + 0x19));    /* cmp dx, [eax+0x19] */
    II(0x10153c8d, 0x2)   jld(0x10153c94, 0x5);                 /* jl 0x10153c94 */
l_0x10153c8f:
    II(0x10153c8f, 0x5)   jmpd(0x10153d90, 0xfc);               /* jmp 0x10153d90 */
l_0x10153c94:
    II(0x10153c94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153c97, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4a);   /* cmp word [eax+0x8], 0x4a */
    II(0x10153c9c, 0x2)   jnzd(0x10153ca7, 0x9);                /* jnz 0x10153ca7 */
    II(0x10153c9e, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x2a);  /* mov dword [ebp-0x10], 0x2a */
    II(0x10153ca5, 0x2)   jmpd(0x10153cae, 0x7);                /* jmp 0x10153cae */
l_0x10153ca7:
    II(0x10153ca7, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x29);  /* mov dword [ebp-0x10], 0x29 */
l_0x10153cae:
    II(0x10153cae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10153cb1, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10153cb4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153cb7, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10153cba, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10153cbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153cc0, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10153cc3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10153cc6, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x10153ccb, 0x5)   calld(0x10103541, -0x5078f);          /* call 0x10103541 */
    II(0x10153cd0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10153cd2, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10153cd5, 0x5)   calld(0x100764b8, -0xdd822);          /* call 0x100764b8 */
l_0x10153cda:
    II(0x10153cda, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153cdc, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10153cdf, 0x5)   calld(0x1013ad71, -0x18f73);          /* call 0x1013ad71 */
    II(0x10153ce4, 0x2)   test(al, al);                         /* test al, al */
    II(0x10153ce6, 0x2)   jzd(0x10153cfa, 0x12);                /* jz 0x10153cfa */
    II(0x10153ce8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10153ceb, 0x5)   calld(0x100763a0, -0xdd950);          /* call 0x100763a0 */
    II(0x10153cf0, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10153cf4, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10153cf8, 0x2)   jnzd(0x10153cfc, 0x2);                /* jnz 0x10153cfc */
l_0x10153cfa:
    II(0x10153cfa, 0x2)   jmpd(0x10153d06, 0xa);                /* jmp 0x10153d06 */
l_0x10153cfc:
    II(0x10153cfc, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10153cff, 0x5)   calld(0x10076bf8, -0xdd10c);          /* call 0x10076bf8 */
    II(0x10153d04, 0x2)   jmpd(0x10153cda, -0x2c);              /* jmp 0x10153cda */
l_0x10153d06:
    II(0x10153d06, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153d08, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10153d0b, 0x5)   calld(0x1013ad11, -0x18fff);          /* call 0x1013ad11 */
    II(0x10153d10, 0x2)   test(al, al);                         /* test al, al */
    II(0x10153d12, 0x2)   jzd(0x10153d20, 0xc);                 /* jz 0x10153d20 */
    II(0x10153d14, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153d16, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10153d19, 0x5)   calld(0x10075f6c, -0xdddb2);          /* call 0x10075f6c */
    II(0x10153d1e, 0x2)   jmpd(0x10153d90, 0x70);               /* jmp 0x10153d90 */
l_0x10153d20:
    II(0x10153d20, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10153d23, 0x5)   calld(0x100763d4, -0xdd954);          /* call 0x100763d4 */
    II(0x10153d28, 0x5)   calld(0x1015f2cc, 0xb59f);            /* call 0x1015f2cc */
    II(0x10153d2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153d30, 0x4)   inc(memw_a32(ds, eax + 0x52));        /* inc word [eax+0x52] */
    II(0x10153d34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153d37, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10153d3a, 0x5)   calld(0x10076730, -0xdd60f);          /* call 0x10076730 */
    II(0x10153d3f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10153d42, 0x4)   mov(dx, memw_a32(ds, edx + 0x52));    /* mov dx, [edx+0x52] */
    II(0x10153d46, 0x4)   cmp(dx, memw_a32(ds, eax + 0x19));    /* cmp dx, [eax+0x19] */
    II(0x10153d4a, 0x2)   jnzd(0x10153d56, 0xa);                /* jnz 0x10153d56 */
    II(0x10153d4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153d4f, 0x7)   mov(memb_a32(ds, eax + 0xa6), 0);     /* mov byte [eax+0xa6], 0x0 */
l_0x10153d56:
    II(0x10153d56, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x10153d5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153d5e, 0x5)   calld(0x10076d98, -0xdcfcb);          /* call 0x10076d98 */
    II(0x10153d63, 0x2)   test(al, al);                         /* test al, al */
    II(0x10153d65, 0x2)   jzd(0x10153d86, 0x1f);                /* jz 0x10153d86 */
    II(0x10153d67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153d6a, 0x5)   calld(0x1010094d, -0x53422);          /* call 0x1010094d */
    II(0x10153d6f, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10153d74, 0x5)   mov(ebx, 0x10);                       /* mov ebx, 0x10 */
    II(0x10153d79, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10153d7c, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10153d81, 0x5)   calld(0x1013d5c0, -0x167c6);          /* call 0x1013d5c0 */
l_0x10153d86:
    II(0x10153d86, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153d88, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10153d8b, 0x5)   calld(0x10075f6c, -0xdde24);          /* call 0x10075f6c */
l_0x10153d90:
    II(0x10153d90, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10153d92, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10153d93, 0x1)   popd(edi);                            /* pop edi */
    II(0x10153d94, 0x1)   popd(esi);                            /* pop esi */
    II(0x10153d95, 0x1)   popd(edx);                            /* pop edx */
    II(0x10153d96, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10153d97, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10153d98, 0x1)   retd();                               /* ret */
FUNC_END

