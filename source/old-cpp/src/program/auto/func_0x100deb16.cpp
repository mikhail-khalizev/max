FUNC_BEGIN(0x100deb16, 0x3cf0e0e69b2ad0e1, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x32, 0x72, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc6, 0x45, 0xf8, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x5, 0xb3, 0x3, 0, 0, 0xe8, 0x17, 0xc8, 0xfa, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0xf, 0x8e, 0x10, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x5, 0xb3, 0x3, 0, 0, 0xe8, 0xbc, 0xc6, 0xfa, 0xff, 0xf, 0xbf, 0, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xfc, 0x81, 0xc2, 0xcf, 0x1, 0, 0, 0x1, 0xd0, 0xe8, 0xae, 0x7b, 0xf9, 0xff, 0x66, 0x8b, 0x40, 0x19, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x5, 0xb7, 0x3, 0, 0, 0xe8, 0x22, 0x1d, 0, 0, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xf4, 0xf, 0x8e, 0xbf, 0, 0, 0, 0xc6, 0x45, 0xf8, 0x1, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x5, 0xb7, 0x3, 0, 0, 0xe8, 0, 0x1d, 0, 0, 0xf, 0xbf, 0, 0xf, 0xbf, 0x55, 0xf4, 0x29, 0xd0, 0x89, 0xc2, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4d, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x4f, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x5, 0xb7, 0x3, 0, 0, 0xe8, 0xc4, 0x1c, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xbb, 0x3, 0, 0, 0xe8, 0xa, 0x64, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x75, 0x52, 0xf, 0xbf, 0x55, 0xf4, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xdf, 0x3, 0, 0, 0xe8, 0x56, 0x83, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x5, 0xb7, 0x3, 0, 0, 0xe8, 0x76, 0x1c, 0, 0, 0xf, 0xbf, 0x10, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xdf, 0x3, 0, 0, 0xe8, 0xc7, 0x82, 0xff, 0xff, 0xe9, 0xd3, 0xfe, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0, 0x74, 0x23, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x58, 0x13, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xbb, 0x3, 0, 0, 0xe8, 0xbe, 0x14, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xec, 0xff, 0x53, 0x18, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100deb16, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100deb1b, 0x5)   calld(sys_check_available_stack_size, 0x87232); /* call 0x10165d52 */
    II(0x100deb20, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100deb21, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100deb22, 0x1)   pushd(edx);                           /* push edx */
    II(0x100deb23, 0x1)   pushd(esi);                           /* push esi */
    II(0x100deb24, 0x1)   pushd(edi);                           /* push edi */
    II(0x100deb25, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100deb26, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100deb28, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100deb2e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100deb31, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100deb35, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100deb3c, 0x2)   jmpd(0x100deb44, 0x6);                /* jmp 0x100deb44 */
l_0x100deb3e:
    II(0x100deb3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100deb41, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100deb44:
    II(0x100deb44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100deb47, 0x5)   add(eax, 0x3b3);                      /* add eax, 0x3b3 */
    II(0x100deb4c, 0x5)   calld(my_2_get_count, -0x537e9);      /* call 0x1008b368 */
    II(0x100deb51, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100deb55, 0x6)   jled(0x100dec6b, 0x110);              /* jle dword 0x100dec6b */
    II(0x100deb5b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100deb5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100deb62, 0x5)   add(eax, 0x3b3);                      /* add eax, 0x3b3 */
    II(0x100deb67, 0x5)   calld(0x1008b228, -0x53944);          /* call 0x1008b228 */
    II(0x100deb6c, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100deb6f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100deb72, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100deb75, 0x6)   add(edx, 0x1cf);                      /* add edx, 0x1cf */
    II(0x100deb7b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100deb7d, 0x5)   calld(0x10076730, -0x68452);          /* call 0x10076730 */
    II(0x100deb82, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x100deb86, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100deb89, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100deb8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100deb90, 0x5)   add(eax, 0x3b7);                      /* add eax, 0x3b7 */
    II(0x100deb95, 0x5)   calld(0x100e08bc, 0x1d22);            /* call 0x100e08bc */
    II(0x100deb9a, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100deb9d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100deba1, 0x6)   jled(0x100dec66, 0xbf);               /* jle dword 0x100dec66 */
    II(0x100deba7, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100debab, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100debaf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100debb2, 0x5)   add(eax, 0x3b7);                      /* add eax, 0x3b7 */
    II(0x100debb7, 0x5)   calld(0x100e08bc, 0x1d00);            /* call 0x100e08bc */
    II(0x100debbc, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100debbf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100debc3, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100debc5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100debc7, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
//    II(0x100debcc, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100debce, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100debd1, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100debd3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100debd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100debd8, 0x3)   mov(eax, memd_a32(ds, eax + 0x4d));   /* mov eax, [eax+0x4d] */
    II(0x100debdb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100debde, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100debe0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100debe3, 0x4)   mov(memw_a32(ds, edx + 0x4f), ax);    /* mov [edx+0x4f], ax */
    II(0x100debe7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100debeb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100debee, 0x5)   add(eax, 0x3b7);                      /* add eax, 0x3b7 */
    II(0x100debf3, 0x5)   calld(0x100e08bc, 0x1cc4);            /* call 0x100e08bc */
    II(0x100debf8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100debfa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100debfd, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x100dec00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dec03, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bb));  /* mov eax, [eax+0x3bb] */
    II(0x100dec09, 0x5)   calld(0x100d5018, -0x9bf6);           /* call 0x100d5018 */
    II(0x100dec0e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100dec12, 0x2)   jnzd(0x100dec66, 0x52);               /* jnz 0x100dec66 */
    II(0x100dec14, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100dec18, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x100dec1d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100dec1f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100dec22, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100dec24, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100dec27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dec2a, 0x6)   mov(eax, memd_a32(ds, eax + 0x3df));  /* mov eax, [eax+0x3df] */
    II(0x100dec30, 0x5)   calld(0x100d6f8b, -0x7caa);           /* call 0x100d6f8b */
    II(0x100dec35, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100dec39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dec3c, 0x5)   add(eax, 0x3b7);                      /* add eax, 0x3b7 */
    II(0x100dec41, 0x5)   calld(0x100e08bc, 0x1c76);            /* call 0x100e08bc */
    II(0x100dec46, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100dec49, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x100dec4e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100dec50, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100dec53, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100dec55, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100dec58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dec5b, 0x6)   mov(eax, memd_a32(ds, eax + 0x3df));  /* mov eax, [eax+0x3df] */
    II(0x100dec61, 0x5)   calld(0x100d6f2d, -0x7d39);           /* call 0x100d6f2d */
l_0x100dec66:
    II(0x100dec66, 0x5)   jmpd(0x100deb3e, -0x12d);             /* jmp 0x100deb3e */
l_0x100dec6b:
    II(0x100dec6b, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x100dec6f, 0x2)   jzd(0x100dec94, 0x23);                /* jz 0x100dec94 */
    II(0x100dec71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dec74, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100dec77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100dec7a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
//    II(0x100dec7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dec80, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bb));  /* mov eax, [eax+0x3bb] */
    II(0x100dec86, 0x5)   calld(0x100d0149, -0xeb42);           /* call 0x100d0149 */
    II(0x100dec8b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100dec8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100dec91, 0x3)   calld_abs(memd_a32(ds, ebx + 0x18));  /* call dword near [ebx+0x18] */
l_0x100dec94:
    II(0x100dec94, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100dec96, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100dec97, 0x1)   popd(edi);                            /* pop edi */
    II(0x100dec98, 0x1)   popd(esi);                            /* pop esi */
    II(0x100dec99, 0x1)   popd(edx);                            /* pop edx */
    II(0x100dec9a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100dec9b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100dec9c, 0x1)   retd();                               /* ret */
FUNC_END

