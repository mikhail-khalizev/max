FUNC_BEGIN(0x1014bb98, 0xe79dfdb6455fa522, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xb0, 0xa1, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0xd9, 0xad, 0xf2, 0xff, 0x89, 0x45, 0xf0, 0x80, 0x65, 0xf8, 0xfe, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0x9e, 0xf1, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x20, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0x9f, 0xac, 0xf2, 0xff, 0xe8, 0x9b, 0x86, 0x1, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0xb1, 0xf6, 0xf5, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x1, 0x74, 0x5a, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xb1, 0xfb, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x34, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf1, 0xf0, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x24, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x70, 0xe8, 0x55, 0xac, 0xf2, 0xff, 0xe8, 0x30, 0x51, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x46, 0xac, 0xf2, 0xff, 0xe8, 0x21, 0x51, 0xf9, 0xff, 0x66, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0x2, 0xeb, 0xe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x70, 0x8d, 0x45, 0xec, 0xe8, 0xea, 0x96, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x2, 0x74, 0x5a, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x4e, 0xfb, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x34, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x8e, 0xf0, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x24, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x70, 0xe8, 0xf2, 0xab, 0xf2, 0xff, 0xe8, 0xcd, 0x50, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xe3, 0xab, 0xf2, 0xff, 0xe8, 0xbe, 0x50, 0xf9, 0xff, 0x66, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0x2, 0xeb, 0xe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x70, 0x8d, 0x45, 0xec, 0xe8, 0x87, 0x96, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x4, 0x74, 0x56, 0xba, 0x4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xeb, 0xfa, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x40, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x2b, 0xf0, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x24, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x70, 0xe8, 0x8f, 0xab, 0xf2, 0xff, 0xe8, 0x6a, 0x50, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x80, 0xab, 0xf2, 0xff, 0xe8, 0x5b, 0x50, 0xf9, 0xff, 0x66, 0x39, 0xc2, 0x7d, 0xe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x70, 0x8d, 0x45, 0xec, 0xe8, 0x28, 0x96, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x8, 0x74, 0x56, 0xba, 0x8, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x8c, 0xfa, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x40, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xcc, 0xef, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x24, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x70, 0xe8, 0x30, 0xab, 0xf2, 0xff, 0xe8, 0xb, 0x50, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x21, 0xab, 0xf2, 0xff, 0xe8, 0xfc, 0x4f, 0xf9, 0xff, 0x66, 0x39, 0xc2, 0x7d, 0xe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x70, 0x8d, 0x45, 0xec, 0xe8, 0xc9, 0x95, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x20, 0x74, 0x56, 0xba, 0x20, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x2d, 0xfa, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x40, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x6d, 0xef, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x24, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x70, 0xe8, 0xd1, 0xaa, 0xf2, 0xff, 0xe8, 0xac, 0x4f, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xc2, 0xaa, 0xf2, 0xff, 0xe8, 0x9d, 0x4f, 0xf9, 0xff, 0x66, 0x39, 0xc2, 0x7d, 0xe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x70, 0x8d, 0x45, 0xec, 0xe8, 0x6a, 0x95, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x10, 0x74, 0x56, 0xba, 0x10, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xce, 0xf9, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x40, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe, 0xef, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x24, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x70, 0xe8, 0x72, 0xaa, 0xf2, 0xff, 0xe8, 0x4d, 0x4f, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x63, 0xaa, 0xf2, 0xff, 0xe8, 0x3e, 0x4f, 0xf9, 0xff, 0x66, 0x39, 0xc2, 0x7d, 0xe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x70, 0x8d, 0x45, 0xec, 0xe8, 0xb, 0x95, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x80, 0x74, 0x56, 0xba, 0x80, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x6f, 0xf9, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x40, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xaf, 0xee, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x24, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x70, 0xe8, 0x13, 0xaa, 0xf2, 0xff, 0xe8, 0xee, 0x4e, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x4, 0xaa, 0xf2, 0xff, 0xe8, 0xdf, 0x4e, 0xf9, 0xff, 0x66, 0x39, 0xc2, 0x7d, 0xe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x70, 0x8d, 0x45, 0xec, 0xe8, 0xac, 0x94, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x40, 0x74, 0x56, 0xba, 0x40, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x10, 0xf9, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x40, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x50, 0xee, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x24, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x70, 0xe8, 0xb4, 0xa9, 0xf2, 0xff, 0xe8, 0x8f, 0x4e, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xa5, 0xa9, 0xf2, 0xff, 0xe8, 0x80, 0x4e, 0xf9, 0xff, 0x66, 0x39, 0xc2, 0x7d, 0xe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x70, 0x8d, 0x45, 0xec, 0xe8, 0x4d, 0x94, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x10, 0xee, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x1a, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0x18, 0xca, 0xff, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x89, 0xf3, 0xf5, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0xb9, 0xa9, 0xf2, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x98, 0xfa, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x71, 0x9f, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1014bb98, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1014bb9d, 0x5)   calld(sys_check_available_stack_size, 0x1a1b0); /* call 0x10165d52 */
    II(0x1014bba2, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1014bba3, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1014bba4, 0x1)   pushd(edx);                           /* push edx */
    II(0x1014bba5, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014bba6, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014bba7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014bba8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014bbaa, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1014bbb0, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1014bbb3, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1014bbb7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bbba, 0x5)   calld(0x10076998, -0xd5227);          /* call 0x10076998 */
    II(0x1014bbbf, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1014bbc2, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1014bbc6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bbc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bbcb, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014bbce, 0x5)   calld(0x1013ad71, -0x10e62);          /* call 0x1013ad71 */
    II(0x1014bbd3, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014bbd5, 0x2)   jzd(0x1014bbf7, 0x20);                /* jz 0x1014bbf7 */
    II(0x1014bbd7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1014bbda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bbdd, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014bbe0, 0x5)   calld(0x10076884, -0xd5361);          /* call 0x10076884 */
    II(0x1014bbe5, 0x5)   calld(0x10164285, 0x1869b);           /* call 0x10164285 */
    II(0x1014bbea, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bbec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bbef, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014bbf2, 0x5)   calld(0x100ab2a8, -0xa094f);          /* call 0x100ab2a8 */
l_0x1014bbf7:
    II(0x1014bbf7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bbfa, 0x4)   test(memb_a32(ds, eax + 0x69), 0x1);  /* test byte [eax+0x69], 0x1 */
    II(0x1014bbfe, 0x2)   jzd(0x1014bc5a, 0x5a);                /* jz 0x1014bc5a */
    II(0x1014bc00, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1014bc05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bc08, 0x5)   calld(0x1014b7be, -0x44f);            /* call 0x1014b7be */
    II(0x1014bc0d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014bc10, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1014bc14, 0x2)   jzd(0x1014bc4a, 0x34);                /* jz 0x1014bc4a */
    II(0x1014bc16, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bc18, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bc1b, 0x5)   calld(0x1013ad11, -0x10f0f);          /* call 0x1013ad11 */
    II(0x1014bc20, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014bc22, 0x2)   jnzd(0x1014bc48, 0x24);               /* jnz 0x1014bc48 */
    II(0x1014bc24, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014bc27, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014bc2a, 0x5)   calld(0x10076884, -0xd53ab);          /* call 0x10076884 */
    II(0x1014bc2f, 0x5)   calld(0x100e0d64, -0x6aed0);          /* call 0x100e0d64 */
    II(0x1014bc34, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014bc36, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bc39, 0x5)   calld(0x10076884, -0xd53ba);          /* call 0x10076884 */
    II(0x1014bc3e, 0x5)   calld(0x100e0d64, -0x6aedf);          /* call 0x100e0d64 */
    II(0x1014bc43, 0x3)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x1014bc46, 0x2)   jged(0x1014bc4a, 0x2);                /* jge 0x1014bc4a */
l_0x1014bc48:
    II(0x1014bc48, 0x2)   jmpd(0x1014bc4c, 0x2);                /* jmp 0x1014bc4c */
l_0x1014bc4a:
    II(0x1014bc4a, 0x2)   jmpd(0x1014bc5a, 0xe);                /* jmp 0x1014bc5a */
l_0x1014bc4c:
    II(0x1014bc4c, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014bc4f, 0x3)   add(edx, 0x70);                       /* add edx, 0x70 */
    II(0x1014bc52, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bc55, 0x5)   calld(0x10155344, 0x96ea);            /* call 0x10155344 */
l_0x1014bc5a:
    II(0x1014bc5a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bc5d, 0x4)   test(memb_a32(ds, eax + 0x69), 0x2);  /* test byte [eax+0x69], 0x2 */
    II(0x1014bc61, 0x2)   jzd(0x1014bcbd, 0x5a);                /* jz 0x1014bcbd */
    II(0x1014bc63, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1014bc68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bc6b, 0x5)   calld(0x1014b7be, -0x4b2);            /* call 0x1014b7be */
    II(0x1014bc70, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014bc73, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1014bc77, 0x2)   jzd(0x1014bcad, 0x34);                /* jz 0x1014bcad */
    II(0x1014bc79, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bc7b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bc7e, 0x5)   calld(0x1013ad11, -0x10f72);          /* call 0x1013ad11 */
    II(0x1014bc83, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014bc85, 0x2)   jnzd(0x1014bcab, 0x24);               /* jnz 0x1014bcab */
    II(0x1014bc87, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014bc8a, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014bc8d, 0x5)   calld(0x10076884, -0xd540e);          /* call 0x10076884 */
    II(0x1014bc92, 0x5)   calld(0x100e0d64, -0x6af33);          /* call 0x100e0d64 */
    II(0x1014bc97, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014bc99, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bc9c, 0x5)   calld(0x10076884, -0xd541d);          /* call 0x10076884 */
    II(0x1014bca1, 0x5)   calld(0x100e0d64, -0x6af42);          /* call 0x100e0d64 */
    II(0x1014bca6, 0x3)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x1014bca9, 0x2)   jged(0x1014bcad, 0x2);                /* jge 0x1014bcad */
l_0x1014bcab:
    II(0x1014bcab, 0x2)   jmpd(0x1014bcaf, 0x2);                /* jmp 0x1014bcaf */
l_0x1014bcad:
    II(0x1014bcad, 0x2)   jmpd(0x1014bcbd, 0xe);                /* jmp 0x1014bcbd */
l_0x1014bcaf:
    II(0x1014bcaf, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014bcb2, 0x3)   add(edx, 0x70);                       /* add edx, 0x70 */
    II(0x1014bcb5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bcb8, 0x5)   calld(0x10155344, 0x9687);            /* call 0x10155344 */
l_0x1014bcbd:
    II(0x1014bcbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bcc0, 0x4)   test(memb_a32(ds, eax + 0x69), 0x4);  /* test byte [eax+0x69], 0x4 */
    II(0x1014bcc4, 0x2)   jzd(0x1014bd1c, 0x56);                /* jz 0x1014bd1c */
    II(0x1014bcc6, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x1014bccb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bcce, 0x5)   calld(0x1014b7be, -0x515);            /* call 0x1014b7be */
    II(0x1014bcd3, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014bcd6, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1014bcda, 0x2)   jzd(0x1014bd1c, 0x40);                /* jz 0x1014bd1c */
    II(0x1014bcdc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bcde, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bce1, 0x5)   calld(0x1013ad11, -0x10fd5);          /* call 0x1013ad11 */
    II(0x1014bce6, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014bce8, 0x2)   jnzd(0x1014bd0e, 0x24);               /* jnz 0x1014bd0e */
    II(0x1014bcea, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014bced, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014bcf0, 0x5)   calld(0x10076884, -0xd5471);          /* call 0x10076884 */
    II(0x1014bcf5, 0x5)   calld(0x100e0d64, -0x6af96);          /* call 0x100e0d64 */
    II(0x1014bcfa, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014bcfc, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bcff, 0x5)   calld(0x10076884, -0xd5480);          /* call 0x10076884 */
    II(0x1014bd04, 0x5)   calld(0x100e0d64, -0x6afa5);          /* call 0x100e0d64 */
    II(0x1014bd09, 0x3)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x1014bd0c, 0x2)   jged(0x1014bd1c, 0xe);                /* jge 0x1014bd1c */
l_0x1014bd0e:
    II(0x1014bd0e, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014bd11, 0x3)   add(edx, 0x70);                       /* add edx, 0x70 */
    II(0x1014bd14, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bd17, 0x5)   calld(0x10155344, 0x9628);            /* call 0x10155344 */
l_0x1014bd1c:
    II(0x1014bd1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bd1f, 0x4)   test(memb_a32(ds, eax + 0x69), 0x8);  /* test byte [eax+0x69], 0x8 */
    II(0x1014bd23, 0x2)   jzd(0x1014bd7b, 0x56);                /* jz 0x1014bd7b */
    II(0x1014bd25, 0x5)   mov(edx, 0x8);                        /* mov edx, 0x8 */
    II(0x1014bd2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bd2d, 0x5)   calld(0x1014b7be, -0x574);            /* call 0x1014b7be */
    II(0x1014bd32, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014bd35, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1014bd39, 0x2)   jzd(0x1014bd7b, 0x40);                /* jz 0x1014bd7b */
    II(0x1014bd3b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bd3d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bd40, 0x5)   calld(0x1013ad11, -0x11034);          /* call 0x1013ad11 */
    II(0x1014bd45, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014bd47, 0x2)   jnzd(0x1014bd6d, 0x24);               /* jnz 0x1014bd6d */
    II(0x1014bd49, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014bd4c, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014bd4f, 0x5)   calld(0x10076884, -0xd54d0);          /* call 0x10076884 */
    II(0x1014bd54, 0x5)   calld(0x100e0d64, -0x6aff5);          /* call 0x100e0d64 */
    II(0x1014bd59, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014bd5b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bd5e, 0x5)   calld(0x10076884, -0xd54df);          /* call 0x10076884 */
    II(0x1014bd63, 0x5)   calld(0x100e0d64, -0x6b004);          /* call 0x100e0d64 */
    II(0x1014bd68, 0x3)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x1014bd6b, 0x2)   jged(0x1014bd7b, 0xe);                /* jge 0x1014bd7b */
l_0x1014bd6d:
    II(0x1014bd6d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014bd70, 0x3)   add(edx, 0x70);                       /* add edx, 0x70 */
    II(0x1014bd73, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bd76, 0x5)   calld(0x10155344, 0x95c9);            /* call 0x10155344 */
l_0x1014bd7b:
    II(0x1014bd7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bd7e, 0x4)   test(memb_a32(ds, eax + 0x69), 0x20); /* test byte [eax+0x69], 0x20 */
    II(0x1014bd82, 0x2)   jzd(0x1014bdda, 0x56);                /* jz 0x1014bdda */
    II(0x1014bd84, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x1014bd89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bd8c, 0x5)   calld(0x1014b7be, -0x5d3);            /* call 0x1014b7be */
    II(0x1014bd91, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014bd94, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1014bd98, 0x2)   jzd(0x1014bdda, 0x40);                /* jz 0x1014bdda */
    II(0x1014bd9a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bd9c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bd9f, 0x5)   calld(0x1013ad11, -0x11093);          /* call 0x1013ad11 */
    II(0x1014bda4, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014bda6, 0x2)   jnzd(0x1014bdcc, 0x24);               /* jnz 0x1014bdcc */
    II(0x1014bda8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014bdab, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014bdae, 0x5)   calld(0x10076884, -0xd552f);          /* call 0x10076884 */
    II(0x1014bdb3, 0x5)   calld(0x100e0d64, -0x6b054);          /* call 0x100e0d64 */
    II(0x1014bdb8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014bdba, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bdbd, 0x5)   calld(0x10076884, -0xd553e);          /* call 0x10076884 */
    II(0x1014bdc2, 0x5)   calld(0x100e0d64, -0x6b063);          /* call 0x100e0d64 */
    II(0x1014bdc7, 0x3)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x1014bdca, 0x2)   jged(0x1014bdda, 0xe);                /* jge 0x1014bdda */
l_0x1014bdcc:
    II(0x1014bdcc, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014bdcf, 0x3)   add(edx, 0x70);                       /* add edx, 0x70 */
    II(0x1014bdd2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bdd5, 0x5)   calld(0x10155344, 0x956a);            /* call 0x10155344 */
l_0x1014bdda:
    II(0x1014bdda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bddd, 0x4)   test(memb_a32(ds, eax + 0x69), 0x10); /* test byte [eax+0x69], 0x10 */
    II(0x1014bde1, 0x2)   jzd(0x1014be39, 0x56);                /* jz 0x1014be39 */
    II(0x1014bde3, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x1014bde8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bdeb, 0x5)   calld(0x1014b7be, -0x632);            /* call 0x1014b7be */
    II(0x1014bdf0, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014bdf3, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1014bdf7, 0x2)   jzd(0x1014be39, 0x40);                /* jz 0x1014be39 */
    II(0x1014bdf9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bdfb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bdfe, 0x5)   calld(0x1013ad11, -0x110f2);          /* call 0x1013ad11 */
    II(0x1014be03, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014be05, 0x2)   jnzd(0x1014be2b, 0x24);               /* jnz 0x1014be2b */
    II(0x1014be07, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014be0a, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014be0d, 0x5)   calld(0x10076884, -0xd558e);          /* call 0x10076884 */
    II(0x1014be12, 0x5)   calld(0x100e0d64, -0x6b0b3);          /* call 0x100e0d64 */
    II(0x1014be17, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014be19, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014be1c, 0x5)   calld(0x10076884, -0xd559d);          /* call 0x10076884 */
    II(0x1014be21, 0x5)   calld(0x100e0d64, -0x6b0c2);          /* call 0x100e0d64 */
    II(0x1014be26, 0x3)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x1014be29, 0x2)   jged(0x1014be39, 0xe);                /* jge 0x1014be39 */
l_0x1014be2b:
    II(0x1014be2b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014be2e, 0x3)   add(edx, 0x70);                       /* add edx, 0x70 */
    II(0x1014be31, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014be34, 0x5)   calld(0x10155344, 0x950b);            /* call 0x10155344 */
l_0x1014be39:
    II(0x1014be39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014be3c, 0x4)   test(memb_a32(ds, eax + 0x69), 0x80); /* test byte [eax+0x69], 0x80 */
    II(0x1014be40, 0x2)   jzd(0x1014be98, 0x56);                /* jz 0x1014be98 */
    II(0x1014be42, 0x5)   mov(edx, 0x80);                       /* mov edx, 0x80 */
    II(0x1014be47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014be4a, 0x5)   calld(0x1014b7be, -0x691);            /* call 0x1014b7be */
    II(0x1014be4f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014be52, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1014be56, 0x2)   jzd(0x1014be98, 0x40);                /* jz 0x1014be98 */
    II(0x1014be58, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014be5a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014be5d, 0x5)   calld(0x1013ad11, -0x11151);          /* call 0x1013ad11 */
    II(0x1014be62, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014be64, 0x2)   jnzd(0x1014be8a, 0x24);               /* jnz 0x1014be8a */
    II(0x1014be66, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014be69, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014be6c, 0x5)   calld(0x10076884, -0xd55ed);          /* call 0x10076884 */
    II(0x1014be71, 0x5)   calld(0x100e0d64, -0x6b112);          /* call 0x100e0d64 */
    II(0x1014be76, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014be78, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014be7b, 0x5)   calld(0x10076884, -0xd55fc);          /* call 0x10076884 */
    II(0x1014be80, 0x5)   calld(0x100e0d64, -0x6b121);          /* call 0x100e0d64 */
    II(0x1014be85, 0x3)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x1014be88, 0x2)   jged(0x1014be98, 0xe);                /* jge 0x1014be98 */
l_0x1014be8a:
    II(0x1014be8a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014be8d, 0x3)   add(edx, 0x70);                       /* add edx, 0x70 */
    II(0x1014be90, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014be93, 0x5)   calld(0x10155344, 0x94ac);            /* call 0x10155344 */
l_0x1014be98:
    II(0x1014be98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014be9b, 0x4)   test(memb_a32(ds, eax + 0x69), 0x40); /* test byte [eax+0x69], 0x40 */
    II(0x1014be9f, 0x2)   jzd(0x1014bef7, 0x56);                /* jz 0x1014bef7 */
    II(0x1014bea1, 0x5)   mov(edx, 0x40);                       /* mov edx, 0x40 */
    II(0x1014bea6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bea9, 0x5)   calld(0x1014b7be, -0x6f0);            /* call 0x1014b7be */
    II(0x1014beae, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014beb1, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1014beb5, 0x2)   jzd(0x1014bef7, 0x40);                /* jz 0x1014bef7 */
    II(0x1014beb7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014beb9, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bebc, 0x5)   calld(0x1013ad11, -0x111b0);          /* call 0x1013ad11 */
    II(0x1014bec1, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014bec3, 0x2)   jnzd(0x1014bee9, 0x24);               /* jnz 0x1014bee9 */
    II(0x1014bec5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014bec8, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1014becb, 0x5)   calld(0x10076884, -0xd564c);          /* call 0x10076884 */
    II(0x1014bed0, 0x5)   calld(0x100e0d64, -0x6b171);          /* call 0x100e0d64 */
    II(0x1014bed5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014bed7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014beda, 0x5)   calld(0x10076884, -0xd565b);          /* call 0x10076884 */
    II(0x1014bedf, 0x5)   calld(0x100e0d64, -0x6b180);          /* call 0x100e0d64 */
    II(0x1014bee4, 0x3)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x1014bee7, 0x2)   jged(0x1014bef7, 0xe);                /* jge 0x1014bef7 */
l_0x1014bee9:
    II(0x1014bee9, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014beec, 0x3)   add(edx, 0x70);                       /* add edx, 0x70 */
    II(0x1014beef, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bef2, 0x5)   calld(0x10155344, 0x944d);            /* call 0x10155344 */
l_0x1014bef7:
    II(0x1014bef7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bef9, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014befc, 0x5)   calld(0x1013ad11, -0x111f0);          /* call 0x1013ad11 */
    II(0x1014bf01, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014bf03, 0x2)   jzd(0x1014bf1f, 0x1a);                /* jz 0x1014bf1f */
    II(0x1014bf05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bf08, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014bf0b, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014bf0d, 0x1)   cwde();                               /* cwde */
    II(0x1014bf0e, 0x5)   calld(0x1014892b, -0x35e8);           /* call 0x1014892b */
    II(0x1014bf13, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x1014bf16, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014bf18, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1014bf1a, 0x5)   calld(0x100ab2a8, -0xa0c77);          /* call 0x100ab2a8 */
l_0x1014bf1f:
    II(0x1014bf1f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bf22, 0x5)   calld(0x100768e0, -0xd5647);          /* call 0x100768e0 */
    II(0x1014bf27, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014bf29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014bf2c, 0x5)   calld(0x1014b9c9, -0x568);            /* call 0x1014b9c9 */
    II(0x1014bf31, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014bf33, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014bf36, 0x5)   calld(0x10075eac, -0xd608f);          /* call 0x10075eac */
    II(0x1014bf3b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014bf3d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014bf3e, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014bf3f, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014bf40, 0x1)   popd(edx);                            /* pop edx */
    II(0x1014bf41, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014bf42, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1014bf43, 0x1)   retd();                               /* ret */
FUNC_END

