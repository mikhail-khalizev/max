FUNC_BEGIN(0x1011e5df, 0x12a3316e030a238a, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x69, 0x77, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0x6b, 0xc7, 0x1, 0, 0x84, 0xc0, 0xf, 0x84, 0x99, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x5e, 0x99, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0x11, 0x22, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x16, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0xfd, 0xdb, 0xff, 0xff, 0xe8, 0x1a, 0x79, 0x4, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x1a, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0xe8, 0xca, 0xdb, 0xff, 0xff, 0xe8, 0xe7, 0x78, 0x4, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x16, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x1a, 0, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0xfd, 0x98, 0xf9, 0xff, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0x7f, 0x21, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011e5df, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1011e5e4, 0x5)   calld(sys_check_available_stack_size, 0x47769); /* call 0x10165d52 */
    II(0x1011e5e9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011e5ea, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011e5eb, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011e5ec, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011e5ed, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011e5ee, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011e5f0, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x1011e5f6, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011e5f9, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1011e5fc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011e5fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e601, 0x5)   calld(0x1013ad71, 0x1c76b);           /* call 0x1013ad71 */
    II(0x1011e606, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011e608, 0x6)   jzd(0x1011e6a7, 0x99);                /* jz dword 0x1011e6a7 */
    II(0x1011e60e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e611, 0x5)   calld(0x100b7f74, -0x666a2);          /* call 0x100b7f74 */
    II(0x1011e616, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011e618, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e61b, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x1011e61e, 0x5)   calld(0x10120834, 0x2211);            /* call 0x10120834 */
    II(0x1011e623, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e626, 0x4)   cmp(memd_a32(ds, eax + 0x16), 0);     /* cmp dword [eax+0x16], 0x0 */
    II(0x1011e62a, 0x2)   jzd(0x1011e656, 0x2a);                /* jz 0x1011e656 */
    II(0x1011e62c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e62f, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011e632, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1011e635, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1011e639, 0x2)   jzd(0x1011e64f, 0x14);                /* jz 0x1011e64f */
    II(0x1011e63b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011e63d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011e640, 0x5)   calld(my_dtor_d7, -0x2403);           /* call 0x1011c242 */
    II(0x1011e645, 0x5)   calld(sys_delete, 0x4791a);           /* call 0x10165f64 */
    II(0x1011e64a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1011e64d, 0x2)   jmpd(0x1011e656, 0x7);                /* jmp 0x1011e656 */
l_0x1011e64f:
    II(0x1011e64f, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x1011e656:
    II(0x1011e656, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e659, 0x4)   cmp(memd_a32(ds, eax + 0x1a), 0);     /* cmp dword [eax+0x1a], 0x0 */
    II(0x1011e65d, 0x2)   jzd(0x1011e689, 0x2a);                /* jz 0x1011e689 */
    II(0x1011e65f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e662, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x1011e665, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011e668, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x1011e66c, 0x2)   jzd(0x1011e682, 0x14);                /* jz 0x1011e682 */
    II(0x1011e66e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011e670, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1011e673, 0x5)   calld(my_dtor_d7, -0x2436);           /* call 0x1011c242 */
    II(0x1011e678, 0x5)   calld(sys_delete, 0x478e7);           /* call 0x10165f64 */
    II(0x1011e67d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011e680, 0x2)   jmpd(0x1011e689, 0x7);                /* jmp 0x1011e689 */
l_0x1011e682:
    II(0x1011e682, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x1011e689:
    II(0x1011e689, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e68c, 0x7)   mov(memd_a32(ds, eax + 0x16), 0);     /* mov dword [eax+0x16], 0x0 */
    II(0x1011e693, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e696, 0x7)   mov(memd_a32(ds, eax + 0x1a), 0);     /* mov dword [eax+0x1a], 0x0 */
    II(0x1011e69d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011e69f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e6a2, 0x5)   calld(0x100b7fa4, -0x66703);          /* call 0x100b7fa4 */
l_0x1011e6a7:
    II(0x1011e6a7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1011e6aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e6ad, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x1011e6b0, 0x5)   calld(0x10120834, 0x217f);            /* call 0x10120834 */
    II(0x1011e6b5, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011e6b7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011e6b8, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011e6b9, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011e6ba, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011e6bb, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011e6bc, 0x1)   retd();                               /* ret */
FUNC_END

