FUNC_BEGIN(0x10130c16, 0x5aed7eea2f7cab38, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x32, 0x51, 0x3, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xf8, 0xe8, 0xd3, 0x5d, 0xfa, 0xff, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x1d, 0x73, 0xfa, 0xff, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x17, 0x88, 0x45, 0xf4, 0xeb, 0x3a, 0x8b, 0x45, 0xf8, 0xe8, 0xe7, 0xf1, 0xff, 0xff, 0xeb, 0x4b, 0x8b, 0x45, 0xf8, 0xe8, 0xb2, 0xe6, 0xff, 0xff, 0xeb, 0x41, 0x8b, 0x45, 0xf8, 0xe8, 0xd0, 0xf6, 0xff, 0xff, 0xeb, 0x37, 0x8b, 0x45, 0xf8, 0xe8, 0xf2, 0xe9, 0xff, 0xff, 0xeb, 0x2d, 0xeb, 0x2b, 0x5a, 0xc, 0x13, 0x10, 0x64, 0xc, 0x13, 0x10, 0x6e, 0xc, 0x13, 0x10, 0x78, 0xc, 0x13, 0x10, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xd4, 0x80, 0x7d, 0xd4, 0x3, 0x77, 0xe2, 0x31, 0xc0, 0x8a, 0x45, 0xd4, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x84, 0xc, 0x13, 0x10, 0x80, 0x7d, 0xfc, 0, 0x74, 0x8, 0x8b, 0x45, 0xea, 0xe8, 0xc7, 0x67, 0x3, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10130c16, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x10130c1b, 0x5)   calld(sys_check_available_stack_size, 0x35132); /* call 0x10165d52 */
    II(0x10130c20, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10130c21, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10130c22, 0x1)   pushd(esi);                           /* push esi */
    II(0x10130c23, 0x1)   pushd(edi);                           /* push edi */
    II(0x10130c24, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10130c25, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10130c27, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x10130c2d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10130c30, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10130c33, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x10130c36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10130c39, 0x5)   calld(0x100d6a11, -0x5a22d);          /* call 0x100d6a11 */
    II(0x10130c3e, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x10130c41, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10130c44, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x10130c4a, 0x5)   calld(0x100d7f6c, -0x58ce3);          /* call 0x100d7f6c */
    II(0x10130c4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10130c52, 0x3)   mov(al, memb_a32(ds, eax + 0x17));    /* mov al, [eax+0x17] */
    II(0x10130c55, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x10130c58, 0x2)   jmpd(0x10130c94, 0x3a);               /* jmp 0x10130c94 */
l_0x10130c5a:
    II(0x10130c5a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10130c5d, 0x5)   calld(0x1012fe49, -0xe19);            /* call 0x1012fe49 */
    II(0x10130c62, 0x2)   jmpd(0x10130caf, 0x4b);               /* jmp 0x10130caf */
l_0x10130c64:
    II(0x10130c64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10130c67, 0x5)   calld(0x1012f31e, -0x194e);           /* call 0x1012f31e */
    II(0x10130c6c, 0x2)   jmpd(0x10130caf, 0x41);               /* jmp 0x10130caf */
l_0x10130c6e:
    II(0x10130c6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10130c71, 0x5)   calld(0x10130346, -0x930);            /* call 0x10130346 */
    II(0x10130c76, 0x2)   jmpd(0x10130caf, 0x37);               /* jmp 0x10130caf */
l_0x10130c78:
    II(0x10130c78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10130c7b, 0x5)   calld(0x1012f672, -0x160e);           /* call 0x1012f672 */
    II(0x10130c80, 0x2)   jmpd(0x10130caf, 0x2d);               /* jmp 0x10130caf */
l_0x10130c82:
    II(0x10130c82, 0x2)   jmpd(0x10130caf, 0x2b);               /* jmp 0x10130caf */
//    II(0x10130c84, 0x10)  /* Служебная область с абсолютными адресами переходов. {0x10130c5a, 0x10130c64, 0x10130c6e, 0x10130c78}. */
l_0x10130c94:
    II(0x10130c94, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10130c97, 0x3)   mov(memb_a32(ss, ebp - 0x2c), al);    /* mov [ebp-0x2c], al */
    II(0x10130c9a, 0x4)   cmp(memb_a32(ss, ebp - 0x2c), 0x3);   /* cmp byte [ebp-0x2c], 0x3 */
    II(0x10130c9e, 0x2)   jad(0x10130c82, -0x1e);               /* ja 0x10130c82 */
    II(0x10130ca0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10130ca2, 0x3)   mov(al, memb_a32(ss, ebp - 0x2c));    /* mov al, [ebp-0x2c] */
    II(0x10130ca5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10130ca8, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x10130c84), (0x10130c5a)(0x10130c64)(0x10130c6e)(0x10130c78)); /* jmp dword near [cs:eax+0x10130c84] */
l_0x10130caf:
    II(0x10130caf, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10130cb3, 0x2)   jzd(0x10130cbd, 0x8);                 /* jz 0x10130cbd */
    II(0x10130cb5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x10130cb8, 0x5)   calld(sys_display_draw_0, 0x367c7);   /* call 0x10167484 */
l_0x10130cbd:
    II(0x10130cbd, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10130cbf, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10130cc0, 0x1)   popd(edi);                            /* pop edi */
    II(0x10130cc1, 0x1)   popd(esi);                            /* pop esi */
    II(0x10130cc2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10130cc3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10130cc4, 0x1)   retd();                               /* ret */
FUNC_END

