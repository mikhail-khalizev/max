FUNC_BEGIN(0x100ac45d, 0x2d19cd243db5a52a, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xeb, 0x98, 0xb, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xb9, 0, 0x29, 0, 0, 0x31, 0xdb, 0x8b, 0x55, 0xf8, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0xe8, 0x3b, 0x62, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x13, 0xe8, 0x46, 0xa2, 0xfc, 0xff, 0x83, 0xe8, 0x13, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x1a, 0xe8, 0x2f, 0xa6, 0xfc, 0xff, 0x83, 0xe8, 0x1a, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x1e, 0xe8, 0x1e, 0xa6, 0xfc, 0xff, 0x83, 0xe8, 0x1e, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x22, 0xe8, 0xd, 0xa6, 0xfc, 0xff, 0x83, 0xe8, 0x22, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x28, 0xe8, 0xfc, 0xa5, 0xfc, 0xff, 0x83, 0xe8, 0x28, 0x89, 0x45, 0xf4, 0xe8, 0x29, 0xe6, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x2c, 0xe8, 0xc7, 0xe5, 0xff, 0xff, 0x83, 0xe8, 0x2c, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x3c, 0xe8, 0xc, 0x4, 0xff, 0xff, 0x83, 0xe8, 0x3c, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x2, 0x94, 0x54, 0x1b, 0x10, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x13, 0xe8, 0xe8, 0xa0, 0xfc, 0xff, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x45, 0, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x47, 0, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x17, 0, 0, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x19, 0x3, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x22, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x24, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x22, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x1e, 0xe8, 0xbb, 0xc5, 0xfd, 0xff, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x22, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x1a, 0xe8, 0xaa, 0xc5, 0xfd, 0xff, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x28, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x2a, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x68, 0x9b, 0xfc, 0xff, 0x66, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x89, 0x42, 0x40, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x44, 0, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x46, 0, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100ac45d, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100ac462, 0x5)   calld(sys_check_available_stack_size, 0xb98eb); /* call 0x10165d52 */
    II(0x100ac467, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ac468, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ac469, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ac46a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ac46b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ac46d, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100ac473, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ac476, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100ac479, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100ac47c, 0x5)   mov(ecx, 0x2900);                     /* mov ecx, 0x2900 */
    II(0x100ac481, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ac483, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ac486, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ac488, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x100ac48b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100ac48e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac491, 0x5)   calld(0x100a26d1, -0x9dc5);           /* call 0x100a26d1 */
    II(0x100ac496, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ac499, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ac49c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100ac49f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac4a2, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac4a5, 0x5)   calld(my_ctor_0x101b38f8, -0x35dba);  /* call 0x100766f0 */
    II(0x100ac4aa, 0x3)   sub(eax, 0x13);                       /* sub eax, 0x13 */
    II(0x100ac4ad, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ac4b0, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ac4b3, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100ac4b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac4b9, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100ac4bc, 0x5)   calld(my_ctor_0x101b4184, -0x359d1);  /* call 0x10076af0 */
    II(0x100ac4c1, 0x3)   sub(eax, 0x1a);                       /* sub eax, 0x1a */
    II(0x100ac4c4, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100ac4c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac4ca, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100ac4cd, 0x5)   calld(my_ctor_0x101b4184, -0x359e2);  /* call 0x10076af0 */
    II(0x100ac4d2, 0x3)   sub(eax, 0x1e);                       /* sub eax, 0x1e */
    II(0x100ac4d5, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100ac4d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac4db, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x100ac4de, 0x5)   calld(my_ctor_0x101b4184, -0x359f3);  /* call 0x10076af0 */
    II(0x100ac4e3, 0x3)   sub(eax, 0x22);                       /* sub eax, 0x22 */
    II(0x100ac4e6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100ac4e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac4ec, 0x3)   add(eax, 0x28);                       /* add eax, 0x28 */
    II(0x100ac4ef, 0x5)   calld(my_ctor_0x101b4184, -0x35a04);  /* call 0x10076af0 */
    II(0x100ac4f4, 0x3)   sub(eax, 0x28);                       /* sub eax, 0x28 */
    II(0x100ac4f7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ac4fa, 0x5)   calld(0x100aab28, -0x19d7);           /* call 0x100aab28 */
    II(0x100ac4ff, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100ac502, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac505, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100ac508, 0x5)   calld(0x100aaad4, -0x1a39);           /* call 0x100aaad4 */
    II(0x100ac50d, 0x3)   sub(eax, 0x2c);                       /* sub eax, 0x2c */
    II(0x100ac510, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ac513, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ac516, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100ac519, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac51c, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100ac51f, 0x5)   calld(0x1009c930, -0xfbf4);           /* call 0x1009c930 */
    II(0x100ac524, 0x3)   sub(eax, 0x3c);                       /* sub eax, 0x3c */
    II(0x100ac527, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ac52a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ac52d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ac530, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac533, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b5494); /* mov dword [eax+0x2], 0x101b5494 */
    II(0x100ac53a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ac53d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac540, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac543, 0x5)   calld(0x10076630, -0x35f18);          /* call 0x10076630 */
    II(0x100ac548, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac54b, 0x4)   mov(memb_a32(ds, eax + 0x45), 0);     /* mov byte [eax+0x45], 0x0 */
    II(0x100ac54f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac552, 0x4)   mov(memb_a32(ds, eax + 0x47), 0);     /* mov byte [eax+0x47], 0x0 */
    II(0x100ac556, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac559, 0x6)   mov(memw_a32(ds, eax + 0x17), 0);     /* mov word [eax+0x17], 0x0 */
    II(0x100ac55f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac562, 0x4)   mov(memb_a32(ds, eax + 0x19), 0x3);   /* mov byte [eax+0x19], 0x3 */
    II(0x100ac566, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac569, 0x6)   mov(memw_a32(ds, eax + 0x22), 0xffff); /* mov word [eax+0x22], 0xffff */
    II(0x100ac56f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac572, 0x6)   mov(memw_a32(ds, eax + 0x24), 0xffff); /* mov word [eax+0x24], 0xffff */
    II(0x100ac578, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ac57b, 0x3)   add(edx, 0x22);                       /* add edx, 0x22 */
    II(0x100ac57e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac581, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100ac584, 0x5)   calld(0x10088b44, -0x23a45);          /* call 0x10088b44 */
    II(0x100ac589, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ac58c, 0x3)   add(edx, 0x22);                       /* add edx, 0x22 */
    II(0x100ac58f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac592, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100ac595, 0x5)   calld(0x10088b44, -0x23a56);          /* call 0x10088b44 */
    II(0x100ac59a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac59d, 0x6)   mov(memw_a32(ds, eax + 0x28), 0xffff); /* mov word [eax+0x28], 0xffff */
    II(0x100ac5a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac5a6, 0x6)   mov(memw_a32(ds, eax + 0x2a), 0xffff); /* mov word [eax+0x2a], 0xffff */
    II(0x100ac5ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ac5af, 0x5)   calld(0x1007611c, -0x36498);          /* call 0x1007611c */
    II(0x100ac5b4, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x100ac5b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac5bb, 0x4)   mov(memw_a32(ds, eax + 0x26), dx);    /* mov [eax+0x26], dx */
    II(0x100ac5bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac5c2, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ac5c5, 0x3)   mov(memd_a32(ds, edx + 0x40), eax);   /* mov [edx+0x40], eax */
    II(0x100ac5c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac5cb, 0x4)   mov(memb_a32(ds, eax + 0x44), 0);     /* mov byte [eax+0x44], 0x0 */
    II(0x100ac5cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac5d2, 0x4)   mov(memb_a32(ds, eax + 0x46), 0);     /* mov byte [eax+0x46], 0x0 */
    II(0x100ac5d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ac5d9, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100ac5dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100ac5df, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ac5e1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ac5e2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ac5e3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ac5e4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ac5e5, 0x1)   retd();                               /* ret */
FUNC_END

