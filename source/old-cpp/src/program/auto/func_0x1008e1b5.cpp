FUNC_BEGIN(0x1008e1b5, 0x8e726144dce38d5f, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0x93, 0x7b, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x44, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2b, 0xe8, 0xb5, 0x89, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0xa7, 0x1, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0x7, 0x83, 0xfe, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x58, 0x2, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xe0, 0xff, 0x53, 0x1c, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xec, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x3b, 0x45, 0xd8, 0xf, 0x8d, 0x2a, 0x1, 0, 0, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xf0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x3b, 0x45, 0xdc, 0xf, 0x8d, 0xa, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xec, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0xe8, 0x52, 0x7, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xd9, 0x81, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x8b, 0x89, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xfa, 0xca, 0xa, 0, 0x84, 0xc0, 0x74, 0x40, 0x8d, 0x45, 0xe4, 0xe8, 0x1d, 0x81, 0xfe, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x20, 0x8d, 0x45, 0xe4, 0xe8, 0x3, 0x81, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x29, 0x74, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xf4, 0x80, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x2a, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0xaa, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xac, 0xca, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x7f, 0, 0, 0, 0xb8, 0x1b, 0, 0, 0, 0xe8, 0x29, 0x7b, 0xd, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x20, 0x8d, 0x45, 0xe4, 0xe8, 0xe6, 0x80, 0xfe, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xcc, 0xe8, 0xc3, 0xc8, 0, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc0, 0x8b, 0x55, 0xc0, 0x8d, 0x45, 0xbc, 0xe8, 0x49, 0xcd, 0xff, 0xff, 0x8d, 0x45, 0xbc, 0xe8, 0x65, 0xcc, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2b, 0xe8, 0x14, 0xe7, 0, 0, 0x8d, 0x45, 0xbc, 0xe8, 0x50, 0xcc, 0xff, 0xff, 0xbb, 0x80, 0x31, 0x1c, 0x10, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xe, 0x6a, 0x1, 0, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0x30, 0xa8, 0xff, 0xff, 0xe9, 0xe3, 0xfe, 0xff, 0xff, 0xe9, 0xc3, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2b, 0xe8, 0x2f, 0x88, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x10, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xf8, 0x7b, 0xfe, 0xff, 0xeb, 0x1a, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xe8, 0x7b, 0xfe, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xdc, 0x7b, 0xfe, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008e1b5, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x1008e1ba, 0x5)   calld(sys_check_available_stack_size, 0xd7b93); /* call 0x10165d52 */
    II(0x1008e1bf, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008e1c0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008e1c1, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008e1c2, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008e1c3, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008e1c4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008e1c5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008e1c7, 0x6)   sub(esp, 0x44);                       /* sub esp, 0x44 */
    II(0x1008e1cd, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1008e1d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e1d3, 0x3)   add(eax, 0x2b);                       /* add eax, 0x2b */
    II(0x1008e1d6, 0x5)   calld(0x10076b90, -0x1764b);          /* call 0x10076b90 */
    II(0x1008e1db, 0x1)   cwde();                               /* cwde */
    II(0x1008e1dc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e1de, 0x2)   jzd(0x1008e1e9, 0x9);                 /* jz 0x1008e1e9 */
    II(0x1008e1e0, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1008e1e4, 0x5)   jmpd(0x1008e390, 0x1a7);              /* jmp 0x1008e390 */
l_0x1008e1e9:
    II(0x1008e1e9, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1008e1ed, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e1f0, 0x5)   calld(0x100764fc, -0x17cf9);          /* call 0x100764fc */
    II(0x1008e1f5, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1008e1f8, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1008e1fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e1ff, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1008e202, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008e205, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1008e208, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x1008e20b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008e20e, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x1008e211, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1008e214, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1008e217, 0x2)   jmpd(0x1008e21f, 0x6);                /* jmp 0x1008e21f */
l_0x1008e219:
    II(0x1008e219, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1008e21c, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x1008e21f:
    II(0x1008e21f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1008e223, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x28));   /* cmp eax, [ebp-0x28] */
    II(0x1008e226, 0x6)   jged(0x1008e356, 0x12a);              /* jge dword 0x1008e356 */
    II(0x1008e22c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1008e22f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008e232, 0x2)   jmpd(0x1008e23a, 0x6);                /* jmp 0x1008e23a */
l_0x1008e234:
    II(0x1008e234, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008e237, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1008e23a:
    II(0x1008e23a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1008e23e, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x24));   /* cmp eax, [ebp-0x24] */
    II(0x1008e241, 0x6)   jged(0x1008e351, 0x10a);              /* jge dword 0x1008e351 */
    II(0x1008e247, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x1008e24b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1008e24f, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x1008e254, 0x5)   calld(0x10103541, 0x752e8);           /* call 0x10103541 */
    II(0x1008e259, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008e25b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e25e, 0x5)   calld(0x1007643c, -0x17e27);          /* call 0x1007643c */
    II(0x1008e263, 0x2)   jmpd(0x1008e26d, 0x8);                /* jmp 0x1008e26d */
l_0x1008e265:
    II(0x1008e265, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e268, 0x5)   calld(0x10076bf8, -0x17675);          /* call 0x10076bf8 */
l_0x1008e26d:
    II(0x1008e26d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e26f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e272, 0x5)   calld(0x1013ad71, 0xacafa);           /* call 0x1013ad71 */
    II(0x1008e277, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008e279, 0x2)   jzd(0x1008e2bb, 0x40);                /* jz 0x1008e2bb */
    II(0x1008e27b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e27e, 0x5)   calld(0x100763a0, -0x17ee3);          /* call 0x100763a0 */
    II(0x1008e283, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e285, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1008e288, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e28b, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1008e28e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008e291, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008e293, 0x2)   jnzd(0x1008e2b5, 0x20);               /* jnz 0x1008e2b5 */
    II(0x1008e295, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e298, 0x5)   calld(0x100763a0, -0x17efd);          /* call 0x100763a0 */
    II(0x1008e29d, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x29);   /* cmp word [eax+0x8], 0x29 */
    II(0x1008e2a2, 0x2)   jzd(0x1008e2b3, 0xf);                 /* jz 0x1008e2b3 */
    II(0x1008e2a4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e2a7, 0x5)   calld(0x100763a0, -0x17f0c);          /* call 0x100763a0 */
    II(0x1008e2ac, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x2a);   /* cmp word [eax+0x8], 0x2a */
    II(0x1008e2b1, 0x2)   jnzd(0x1008e2b5, 0x2);                /* jnz 0x1008e2b5 */
l_0x1008e2b3:
    II(0x1008e2b3, 0x2)   jmpd(0x1008e2b7, 0x2);                /* jmp 0x1008e2b7 */
l_0x1008e2b5:
    II(0x1008e2b5, 0x2)   jmpd(0x1008e2b9, 0x2);                /* jmp 0x1008e2b9 */
l_0x1008e2b7:
    II(0x1008e2b7, 0x2)   jmpd(0x1008e2bb, 0x2);                /* jmp 0x1008e2bb */
l_0x1008e2b9:
    II(0x1008e2b9, 0x2)   jmpd(0x1008e265, -0x56);              /* jmp 0x1008e265 */
l_0x1008e2bb:
    II(0x1008e2bb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e2bd, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e2c0, 0x5)   calld(0x1013ad71, 0xacaac);           /* call 0x1013ad71 */
    II(0x1008e2c5, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008e2c7, 0x6)   jzd(0x1008e34c, 0x7f);                /* jz dword 0x1008e34c */
    II(0x1008e2cd, 0x5)   mov(eax, 0x1b);                       /* mov eax, 0x1b */
    II(0x1008e2d2, 0x5)   calld(sys_new, 0xd7b29);              /* call 0x10165e00 */
    II(0x1008e2d7, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x1008e2da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1008e2dd, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1008e2e0, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x1008e2e4, 0x2)   jzd(0x1008e306, 0x20);                /* jz 0x1008e306 */
    II(0x1008e2e6, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e2e9, 0x5)   calld(0x100763d4, -0x17f1a);          /* call 0x100763d4 */
    II(0x1008e2ee, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1008e2f0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008e2f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1008e2f6, 0x5)   calld(0x1009abbe, 0xc8c3);            /* call 0x1009abbe */
    II(0x1008e2fb, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x1008e2fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1008e301, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1008e304, 0x2)   jmpd(0x1008e30c, 0x6);                /* jmp 0x1008e30c */
l_0x1008e306:
    II(0x1008e306, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1008e309, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x1008e30c:
    II(0x1008e30c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x1008e30f, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1008e312, 0x5)   calld(0x1008b060, -0x32b7);           /* call 0x1008b060 */
    II(0x1008e317, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1008e31a, 0x5)   calld(0x1008af84, -0x339b);           /* call 0x1008af84 */
    II(0x1008e31f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008e321, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e324, 0x3)   add(eax, 0x2b);                       /* add eax, 0x2b */
    II(0x1008e327, 0x5)   calld(0x1009ca40, 0xe714);            /* call 0x1009ca40 */
    II(0x1008e32c, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1008e32f, 0x5)   calld(0x1008af84, -0x33b0);           /* call 0x1008af84 */
    II(0x1008e334, 0x5)   mov(ebx, 0x101c3180);                 /* mov ebx, 0x101c3180 */
    II(0x1008e339, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008e33b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008e33d, 0x5)   calld(0x100a4d50, 0x16a0e);           /* call 0x100a4d50 */
    II(0x1008e342, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e344, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1008e347, 0x5)   calld(0x10088b7c, -0x57d0);           /* call 0x10088b7c */
l_0x1008e34c:
    II(0x1008e34c, 0x5)   jmpd(0x1008e234, -0x11d);             /* jmp 0x1008e234 */
l_0x1008e351:
    II(0x1008e351, 0x5)   jmpd(0x1008e219, -0x13d);             /* jmp 0x1008e219 */
l_0x1008e356:
    II(0x1008e356, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e359, 0x3)   add(eax, 0x2b);                       /* add eax, 0x2b */
    II(0x1008e35c, 0x5)   calld(0x10076b90, -0x177d1);          /* call 0x10076b90 */
    II(0x1008e361, 0x1)   cwde();                               /* cwde */
    II(0x1008e362, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e364, 0x2)   jled(0x1008e376, 0x10);               /* jle 0x1008e376 */
    II(0x1008e366, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1008e36a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e36c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e36f, 0x5)   calld(0x10075f6c, -0x18408);          /* call 0x10075f6c */
    II(0x1008e374, 0x2)   jmpd(0x1008e390, 0x1a);               /* jmp 0x1008e390 */
l_0x1008e376:
    II(0x1008e376, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1008e37a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e37c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e37f, 0x5)   calld(0x10075f6c, -0x18418);          /* call 0x10075f6c */
    II(0x1008e384, 0x2)   jmpd(0x1008e390, 0xa);                /* jmp 0x1008e390 */
//  II(0x1008e386, 0xa)   /* Недостижимый код. */
l_0x1008e390:
    II(0x1008e390, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1008e393, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008e395, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008e396, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008e397, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008e398, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008e399, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008e39a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008e39b, 0x1)   retd();                               /* ret */
FUNC_END

