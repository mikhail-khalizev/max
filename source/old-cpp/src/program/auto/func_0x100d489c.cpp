FUNC_BEGIN(0x100d489c, 0x4ea7656b475edeb2, 0x20, ({0x68, 0x68, 0, 0, 0, 0xe8, 0xac, 0x14, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x31, 0xe8, 0x9a, 0xc1, 0x7, 0, 0x8d, 0x45, 0xec, 0xe8, 0x2b, 0x82, 0xfc, 0xff, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x5, 0x87, 0, 0, 0, 0xe8, 0x7f, 0x6a, 0xfb, 0xff, 0x66, 0x3b, 0x45, 0xf4, 0x7e, 0x1d, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x5, 0x87, 0, 0, 0, 0xe8, 0x28, 0x69, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x9e, 0x69, 0xfb, 0xff, 0xeb, 0xca, 0x8d, 0x45, 0xec, 0xe8, 0x54, 0x6a, 0xfb, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x2b, 0xbb, 0xd, 0, 0, 0, 0xba, 0x15, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x31, 0xe8, 0x25, 0xe7, 0x8, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x36, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xc5, 0x41, 0xfb, 0xff, 0xe9, 0x51, 0x1, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xda, 0x68, 0xfb, 0xff, 0x66, 0x8b, 0, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xf0, 0x6b, 0xd2, 0x33, 0xb8, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x36, 0x1, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x35, 0x1, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x58, 0x13, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xe4, 0xff, 0x53, 0x10, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x31, 0x88, 0x50, 0x45, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x36, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x31, 0xe8, 0xc8, 0x7f, 0xfc, 0xff, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0x34, 0xd1, 0x6, 0, 0x89, 0x45, 0xdc, 0x80, 0x65, 0xf8, 0xfe, 0x8d, 0x7d, 0xd0, 0xbe, 0x60, 0x7e, 0x1b, 0x10, 0xa5, 0xa5, 0xa5, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x31, 0x31, 0xd2, 0x8a, 0x50, 0x45, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x36, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x5d, 0xfc, 0x8b, 0x5b, 0x36, 0xc1, 0xfb, 0x10, 0x4a, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x31, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0x1, 0xd0, 0x8a, 0x80, 0x92, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x50, 0x8b, 0x45, 0xe8, 0xff, 0x70, 0x17, 0x8b, 0x45, 0xe8, 0x8b, 0x40, 0x13, 0xc1, 0xf8, 0x18, 0xc1, 0xe0, 0x2, 0xff, 0x74, 0x28, 0xd0, 0xb8, 0xfa, 0, 0, 0, 0x50, 0x8d, 0x45, 0xe0, 0x50, 0xe8, 0xfe, 0xd5, 0x6, 0, 0x83, 0xc4, 0x18, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x31, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x31, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x50, 0x20, 0xfa, 0xff, 0x8b, 0x8, 0x8b, 0x5d, 0xfc, 0x8b, 0x5b, 0x31, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x57, 0x4d, 0xfb, 0xff, 0xe8, 0xea, 0x10, 0x4, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x31, 0xe8, 0x6, 0xd9, 0x7, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x9f, 0xd0, 0x6, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x6f, 0x40, 0xfb, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100d489c, 0x5)   pushd(0x68);                          /* push dword 0x68 */
    II(0x100d48a1, 0x5)   calld(sys_check_available_stack_size, 0x914ac); /* call 0x10165d52 */
    II(0x100d48a6, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d48a7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d48a8, 0x1)   pushd(edx);                           /* push edx */
    II(0x100d48a9, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d48aa, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d48ab, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d48ac, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d48ae, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x100d48b4, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100d48b7, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100d48ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d48bd, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d48c0, 0x5)   calld(0x10150a5f, 0x7c19a);           /* call 0x10150a5f */
    II(0x100d48c5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100d48c8, 0x5)   calld(0x1009caf8, -0x37dd5);          /* call 0x1009caf8 */
    II(0x100d48cd, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100d48d4, 0x2)   jmpd(0x100d48dc, 0x6);                /* jmp 0x100d48dc */
l_0x100d48d6:
    II(0x100d48d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d48d9, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100d48dc:
    II(0x100d48dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d48df, 0x5)   add(eax, 0x87);                       /* add eax, 0x87 */
    II(0x100d48e4, 0x5)   calld(my_2_get_count, -0x49581);      /* call 0x1008b368 */
    II(0x100d48e9, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100d48ed, 0x2)   jled(0x100d490c, 0x1d);               /* jle 0x100d490c */
    II(0x100d48ef, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100d48f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d48f6, 0x5)   add(eax, 0x87);                       /* add eax, 0x87 */
    II(0x100d48fb, 0x5)   calld(0x1008b228, -0x496d8);          /* call 0x1008b228 */
    II(0x100d4900, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d4902, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100d4905, 0x5)   calld(0x1008b2a8, -0x49662);          /* call 0x1008b2a8 */
    II(0x100d490a, 0x2)   jmpd(0x100d48d6, -0x36);              /* jmp 0x100d48d6 */
l_0x100d490c:
    II(0x100d490c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100d490f, 0x5)   calld(my_2_get_count, -0x495ac);      /* call 0x1008b368 */
    II(0x100d4914, 0x1)   cwde();                               /* cwde */
    II(0x100d4915, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d4917, 0x2)   jnzd(0x100d4944, 0x2b);               /* jnz 0x100d4944 */
    II(0x100d4919, 0x5)   mov(ebx, 0xd);                        /* mov ebx, 0xd */
    II(0x100d491e, 0x5)   mov(edx, 0x15);                       /* mov edx, 0x15 */
    II(0x100d4923, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d4926, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d4929, 0x5)   calld(0x10163053, 0x8e725);           /* call 0x10163053 */
    II(0x100d492e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d4931, 0x4)   mov(memb_a32(ds, eax + 0x36), 0x1);   /* mov byte [eax+0x36], 0x1 */
    II(0x100d4935, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d4937, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100d493a, 0x5)   calld(0x10088b04, -0x4be3b);          /* call 0x10088b04 */
    II(0x100d493f, 0x5)   jmpd(0x100d4a95, 0x151);              /* jmp 0x100d4a95 */
l_0x100d4944:
    II(0x100d4944, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d4946, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100d4949, 0x5)   calld(0x1008b228, -0x49726);          /* call 0x1008b228 */
    II(0x100d494e, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100d4951, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d4954, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100d4958, 0x3)   imul(edx, edx, 0x33);                 /* imul edx, edx, 0x33 */
    II(0x100d495b, 0x5)   mov(eax, 0x101c81c0);                 /* mov eax, 0x101c81c0 */
    II(0x100d4960, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d4962, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100d4965, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d4968, 0x4)   mov(memb_a32(ds, eax + 0x36), 0x1);   /* mov byte [eax+0x36], 0x1 */
    II(0x100d496c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d496f, 0x4)   mov(memb_a32(ds, eax + 0x35), 0x1);   /* mov byte [eax+0x35], 0x1 */
    II(0x100d4973, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d4976, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100d4979, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d497c, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
    II(0x100d497f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100d4983, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d4986, 0x3)   calld_abs(memd_a32(ds, ebx + 0x10));  /* call dword near [ebx+0x10] */
    II(0x100d4989, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d498b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d498e, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d4991, 0x3)   mov(memb_a32(ds, eax + 0x45), dl);    /* mov [eax+0x45], dl */
    II(0x100d4994, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d4997, 0x3)   mov(edx, memd_a32(ds, eax + 0x36));   /* mov edx, [eax+0x36] */
    II(0x100d499a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d499d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d49a0, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d49a3, 0x5)   calld(0x1009c970, -0x38038);          /* call 0x1009c970 */
    II(0x100d49a8, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100d49ac, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100d49af, 0x5)   calld(my_string_ctor, 0x6d134);       /* call 0x10141ae8 */
    II(0x100d49b4, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100d49b7, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100d49bb, 0x3)   lea(edi, ebp - 0x30);                 /* lea edi, [ebp-0x30] */
    II(0x100d49be, 0x5)   mov(esi, 0x101b7e60);                 /* mov esi, 0x101b7e60 */
    II(0x100d49c3, 0x1)   movsd_a32();                          /* movsd */
    II(0x100d49c4, 0x1)   movsd_a32();                          /* movsd */
    II(0x100d49c5, 0x1)   movsd_a32();                          /* movsd */
    II(0x100d49c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d49c9, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d49cc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d49ce, 0x3)   mov(dl, memb_a32(ds, eax + 0x45));    /* mov dl, [eax+0x45] */
    II(0x100d49d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d49d4, 0x3)   mov(eax, memd_a32(ds, eax + 0x36));   /* mov eax, [eax+0x36] */
    II(0x100d49d7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d49da, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d49dc, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100d49df, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x36));   /* mov ebx, [ebx+0x36] */
    II(0x100d49e2, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100d49e5, 0x1)   dec(edx);                             /* dec edx */
    II(0x100d49e6, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100d49e8, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100d49eb, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100d49ed, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d49ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d49f1, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d49f4, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100d49f7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100d49fc, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100d4a02, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100d4a06, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d4a08, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca492)); /* mov al, [eax+0x101ca492] */
    II(0x100d4a0e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100d4a13, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d4a14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d4a17, 0x3)   pushd(memd_a32(ds, eax + 0x17));      /* push dword [eax+0x17] */
    II(0x100d4a1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d4a1d, 0x3)   mov(eax, memd_a32(ds, eax + 0x13));   /* mov eax, [eax+0x13] */
    II(0x100d4a20, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100d4a23, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d4a26, 0x4)   pushd(memd_a32(ds, eax + ebp - 0x30)); /* push dword [eax+ebp-0x30] */
    II(0x100d4a2a, 0x5)   mov(eax, 0xfa);                       /* mov eax, 0xfa */
    II(0x100d4a2f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d4a30, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100d4a33, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d4a34, 0x5)   calld(0x10142037, 0x6d5fe);           /* call 0x10142037 */
    II(0x100d4a39, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100d4a3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d4a3f, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d4a42, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100d4a45, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100d4a48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d4a4b, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d4a4e, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100d4a51, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d4a54, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100d4a57, 0x5)   calld(0x10076aac, -0x5dfb0);          /* call 0x10076aac */
    II(0x100d4a5c, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x100d4a5e, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100d4a61, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x31));   /* mov ebx, [ebx+0x31] */
    II(0x100d4a64, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d4a69, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100d4a6c, 0x5)   calld(my_strobj_c_str_v2, -0x4b2a9);  /* call 0x100897c8 */
    II(0x100d4a71, 0x5)   calld(0x10115b60, 0x410ea);           /* call 0x10115b60 */
    II(0x100d4a76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d4a79, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d4a7c, 0x5)   calld(0x10152387, 0x7d906);           /* call 0x10152387 */
    II(0x100d4a81, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d4a83, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100d4a86, 0x5)   calld(my_string_dtor, 0x6d09f);       /* call 0x10141b2a */
    II(0x100d4a8b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d4a8d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100d4a90, 0x5)   calld(0x10088b04, -0x4bf91);          /* call 0x10088b04 */
l_0x100d4a95:
    II(0x100d4a95, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d4a97, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d4a98, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d4a99, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d4a9a, 0x1)   popd(edx);                            /* pop edx */
    II(0x100d4a9b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d4a9c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d4a9d, 0x1)   retd();                               /* ret */
FUNC_END

