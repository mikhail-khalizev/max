FUNC_BEGIN(0x100ab5f3, 0xb2f87dd7a2a9ed4e, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0x55, 0xa7, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x50, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0xe, 0x8b, 0x45, 0xf8, 0xe8, 0x15, 0xac, 0xfc, 0xff, 0x80, 0x78, 0x16, 0, 0x74, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x31, 0x4, 0, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xba, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x3e, 0xea, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0x40, 0xeb, 0xfd, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x7b, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0xe, 0xf, 0xbf, 0x45, 0xf0, 0xc6, 0x44, 0x28, 0xd4, 0, 0xe9, 0x4f, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x47, 0x74, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x1d, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xe8, 0x7a, 0x86, 0xfc, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xf8, 0xe8, 0x8e, 0xab, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x52, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa7, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xd0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd0, 0, 0xf, 0xbf, 0x55, 0xf0, 0x8a, 0x45, 0xd0, 0x88, 0x44, 0x2a, 0xd4, 0xe9, 0xb8, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xf8, 0xe8, 0x20, 0xab, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x4f, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xab, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xcc, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xcc, 0, 0xf, 0xbf, 0x55, 0xf0, 0x8a, 0x45, 0xcc, 0x88, 0x44, 0x2a, 0xd4, 0xeb, 0x4d, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xc8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xc8, 0, 0xf, 0xbf, 0x55, 0xf0, 0x8a, 0x45, 0xc8, 0x88, 0x44, 0x2a, 0xd4, 0xe9, 0x72, 0xfe, 0xff, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0x7d, 0x20, 0xf, 0xbf, 0x45, 0xf0, 0x80, 0x7c, 0x28, 0xd4, 0, 0x74, 0x13, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xeb, 0xcd, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0x75, 0x13, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0, 0xd6, 0xfd, 0xff, 0xe9, 0x16, 0x2, 0, 0, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe0, 0xe8, 0xfe, 0xa5, 0xfc, 0xff, 0x8b, 0x75, 0xf8, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x87, 0xd8, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x13, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xc8, 0xd5, 0xfd, 0xff, 0xe9, 0xde, 0x1, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xd8, 0xe8, 0x65, 0xb3, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xd4, 0xf4, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x90, 0x1, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x4b, 0xe8, 0xfd, 0xff, 0xe8, 0xbe, 0xea, 0xfd, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0xe8, 0x7f, 0xa9, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xdc, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x12, 0x8b, 0x45, 0xdc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x80, 0x7c, 0x28, 0xd4, 0, 0x75, 0x2, 0xeb, 0xf, 0x8b, 0x45, 0xdc, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x45, 0xec, 0x7f, 0x2, 0xeb, 0x28, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xc4, 0xe8, 0x56, 0xa5, 0xfc, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xdc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xf2, 0x90, 0xfc, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0, 0x1, 0, 0, 0x8b, 0x45, 0xdc, 0xe8, 0x4, 0xa9, 0xfc, 0xff, 0x89, 0x45, 0xc0, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xd8, 0xe8, 0xb2, 0xe7, 0xfd, 0xff, 0xe8, 0x18, 0xd5, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x4c, 0x53, 0xfc, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xc0, 0x66, 0x3, 0x42, 0x1d, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xc0, 0x80, 0x78, 0x16, 0, 0x74, 0x1d, 0x8b, 0x55, 0xc0, 0x8b, 0x52, 0xe, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xb8, 0x1, 0xc2, 0x89, 0x55, 0xb8, 0xeb, 0x32, 0x8b, 0x55, 0xc0, 0x8b, 0x5a, 0x12, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xc0, 0x8b, 0x42, 0xe, 0xc1, 0xf8, 0x10, 0x40, 0x8d, 0x53, 0xff, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xc0, 0x8b, 0x58, 0x12, 0xc1, 0xfb, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xb8, 0x1, 0xc2, 0x89, 0x55, 0xb8, 0xf, 0xbf, 0x55, 0xb8, 0xf, 0xbf, 0x45, 0xb8, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0xe8, 0x39, 0xc2, 0x7f, 0x60, 0x8b, 0x45, 0xf8, 0xe8, 0x64, 0xa8, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x42, 0x12, 0x7e, 0x13, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x5b, 0xd4, 0xfd, 0xff, 0xe9, 0x71, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xc7, 0x8f, 0xfc, 0xff, 0x84, 0xc0, 0x75, 0x10, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x2d, 0xd4, 0xfd, 0xff, 0xeb, 0x46, 0x8b, 0x45, 0xf8, 0xe8, 0x13, 0xa8, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xec, 0xe9, 0x56, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x75, 0x10, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x1, 0xd4, 0xfd, 0xff, 0xeb, 0x1a, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xf1, 0xd3, 0xfd, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xe5, 0xd3, 0xfd, 0xff, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ab5f3, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x100ab5f8, 0x5)   calld(sys_check_available_stack_size, 0xba755); /* call 0x10165d52 */
    II(0x100ab5fd, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ab5fe, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ab5ff, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ab600, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ab601, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ab602, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ab604, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x100ab60a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ab60d, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100ab610, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab613, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100ab616, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab61b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ab61d, 0x2)   jzd(0x100ab62d, 0xe);                 /* jz 0x100ab62d */
    II(0x100ab61f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab622, 0x5)   calld(0x1007623c, -0x353eb);          /* call 0x1007623c */
    II(0x100ab627, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x100ab62b, 0x2)   jzd(0x100ab636, 0x9);                 /* jz 0x100ab636 */
l_0x100ab62d:
    II(0x100ab62d, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100ab631, 0x5)   jmpd(0x100aba67, 0x431);              /* jmp 0x100aba67 */
l_0x100ab636:
    II(0x100ab636, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100ab63d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab640, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100ab643, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab648, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100ab64e, 0x5)   mov(edx, 0x101c31c4);                 /* mov edx, 0x101c31c4 */
    II(0x100ab653, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100ab655, 0x5)   calld(0x100ba098, 0xea3e);            /* call 0x100ba098 */
    II(0x100ab65a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ab65c, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ab65f, 0x5)   calld(0x1008a1a4, -0x214c0);          /* call 0x1008a1a4 */
    II(0x100ab664, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100ab66b, 0x2)   jmpd(0x100ab673, 0x6);                /* jmp 0x100ab673 */
l_0x100ab66d:
    II(0x100ab66d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ab670, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100ab673:
    II(0x100ab673, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ab677, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ab67a, 0x6)   jged(0x100ab7fb, 0x17b);              /* jge dword 0x100ab7fb */
    II(0x100ab680, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ab684, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ab68a, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ab690, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab695, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ab697, 0x2)   jnzd(0x100ab6a7, 0xe);                /* jnz 0x100ab6a7 */
    II(0x100ab699, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ab69d, 0x5)   mov(memb_a32(ds, eax + ebp - 0x2c), 0); /* mov byte [eax+ebp-0x2c], 0x0 */
    II(0x100ab6a2, 0x5)   jmpd(0x100ab7f6, 0x14f);              /* jmp 0x100ab7f6 */
l_0x100ab6a7:
    II(0x100ab6a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab6aa, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x47);   /* cmp word [eax+0x8], 0x47 */
    II(0x100ab6af, 0x2)   jzd(0x100ab6bb, 0xa);                 /* jz 0x100ab6bb */
    II(0x100ab6b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab6b4, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x100ab6b9, 0x2)   jnzd(0x100ab6d8, 0x1d);               /* jnz 0x100ab6d8 */
l_0x100ab6bb:
    II(0x100ab6bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab6be, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100ab6c0, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ab6c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab6c6, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100ab6c9, 0x5)   calld(0x10073d48, -0x37986);          /* call 0x10073d48 */
    II(0x100ab6ce, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x100ab6d3, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ab6d6, 0x2)   jzd(0x100ab6da, 0x2);                 /* jz 0x100ab6da */
l_0x100ab6d8:
    II(0x100ab6d8, 0x2)   jmpd(0x100ab6ea, 0x10);               /* jmp 0x100ab6ea */
l_0x100ab6da:
    II(0x100ab6da, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100ab6de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab6e1, 0x5)   calld(0x10076274, -0x35472);          /* call 0x10076274 */
    II(0x100ab6e6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ab6e8, 0x2)   jzd(0x100ab6ec, 0x2);                 /* jz 0x100ab6ec */
l_0x100ab6ea:
    II(0x100ab6ea, 0x2)   jmpd(0x100ab73e, 0x52);               /* jmp 0x100ab73e */
l_0x100ab6ec:
    II(0x100ab6ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab6ef, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100ab6f1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ab6f4, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100ab6f9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ab6fc, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100ab6ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab702, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100ab705, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ab707, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ab70b, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ab711, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a7)); /* mov eax, [eax+0x101ca6a7] */
    II(0x100ab717, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100ab719, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100ab71b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab720, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ab722, 0x2)   jzd(0x100ab72a, 0x6);                 /* jz 0x100ab72a */
    II(0x100ab724, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0x1);   /* mov byte [ebp-0x30], 0x1 */
    II(0x100ab728, 0x2)   jmpd(0x100ab72e, 0x4);                /* jmp 0x100ab72e */
l_0x100ab72a:
    II(0x100ab72a, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0);     /* mov byte [ebp-0x30], 0x0 */
l_0x100ab72e:
    II(0x100ab72e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100ab732, 0x3)   mov(al, memb_a32(ss, ebp - 0x30));    /* mov al, [ebp-0x30] */
    II(0x100ab735, 0x4)   mov(memb_a32(ds, edx + ebp - 0x2c), al); /* mov [edx+ebp-0x2c], al */
    II(0x100ab739, 0x5)   jmpd(0x100ab7f6, 0xb8);               /* jmp 0x100ab7f6 */
l_0x100ab73e:
    II(0x100ab73e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab741, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100ab746, 0x2)   jnzd(0x100ab758, 0x10);               /* jnz 0x100ab758 */
    II(0x100ab748, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100ab74c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab74f, 0x5)   calld(0x10076274, -0x354e0);          /* call 0x10076274 */
    II(0x100ab754, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ab756, 0x2)   jzd(0x100ab75a, 0x2);                 /* jz 0x100ab75a */
l_0x100ab758:
    II(0x100ab758, 0x2)   jmpd(0x100ab7a9, 0x4f);               /* jmp 0x100ab7a9 */
l_0x100ab75a:
    II(0x100ab75a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab75d, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100ab75f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ab762, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100ab767, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ab76a, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100ab76d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab770, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100ab773, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ab775, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ab779, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ab77f, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6ab)); /* mov eax, [eax+0x101ca6ab] */
    II(0x100ab785, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100ab787, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100ab789, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab78e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ab790, 0x2)   jzd(0x100ab798, 0x6);                 /* jz 0x100ab798 */
    II(0x100ab792, 0x4)   mov(memb_a32(ss, ebp - 0x34), 0x1);   /* mov byte [ebp-0x34], 0x1 */
    II(0x100ab796, 0x2)   jmpd(0x100ab79c, 0x4);                /* jmp 0x100ab79c */
l_0x100ab798:
    II(0x100ab798, 0x4)   mov(memb_a32(ss, ebp - 0x34), 0);     /* mov byte [ebp-0x34], 0x0 */
l_0x100ab79c:
    II(0x100ab79c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100ab7a0, 0x3)   mov(al, memb_a32(ss, ebp - 0x34));    /* mov al, [ebp-0x34] */
    II(0x100ab7a3, 0x4)   mov(memb_a32(ds, edx + ebp - 0x2c), al); /* mov [edx+ebp-0x2c], al */
    II(0x100ab7a7, 0x2)   jmpd(0x100ab7f6, 0x4d);               /* jmp 0x100ab7f6 */
l_0x100ab7a9:
    II(0x100ab7a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab7ac, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100ab7ae, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ab7b1, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100ab7b6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ab7b9, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100ab7bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab7bf, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100ab7c2, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ab7c4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ab7c8, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ab7ce, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x100ab7d4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100ab7d6, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100ab7d8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab7dd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ab7df, 0x2)   jzd(0x100ab7e7, 0x6);                 /* jz 0x100ab7e7 */
    II(0x100ab7e1, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0x1);   /* mov byte [ebp-0x38], 0x1 */
    II(0x100ab7e5, 0x2)   jmpd(0x100ab7eb, 0x4);                /* jmp 0x100ab7eb */
l_0x100ab7e7:
    II(0x100ab7e7, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0);     /* mov byte [ebp-0x38], 0x0 */
l_0x100ab7eb:
    II(0x100ab7eb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100ab7ef, 0x3)   mov(al, memb_a32(ss, ebp - 0x38));    /* mov al, [ebp-0x38] */
    II(0x100ab7f2, 0x4)   mov(memb_a32(ds, edx + ebp - 0x2c), al); /* mov [edx+ebp-0x2c], al */
l_0x100ab7f6:
    II(0x100ab7f6, 0x5)   jmpd(0x100ab66d, -0x18e);             /* jmp 0x100ab66d */
l_0x100ab7fb:
    II(0x100ab7fb, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x100ab802:
    II(0x100ab802, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ab806, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ab809, 0x2)   jged(0x100ab82b, 0x20);               /* jge 0x100ab82b */
    II(0x100ab80b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ab80f, 0x5)   cmp(memb_a32(ds, eax + ebp - 0x2c), 0); /* cmp byte [eax+ebp-0x2c], 0x0 */
    II(0x100ab814, 0x2)   jzd(0x100ab829, 0x13);                /* jz 0x100ab829 */
    II(0x100ab816, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab819, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100ab81c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab821, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100ab825, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ab827, 0x2)   jnzd(0x100ab82b, 0x2);                /* jnz 0x100ab82b */
l_0x100ab829:
    II(0x100ab829, 0x2)   jmpd(0x100ab82d, 0x2);                /* jmp 0x100ab82d */
l_0x100ab82b:
    II(0x100ab82b, 0x2)   jmpd(0x100ab835, 0x8);                /* jmp 0x100ab835 */
l_0x100ab82d:
    II(0x100ab82d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ab830, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x100ab833, 0x2)   jmpd(0x100ab802, -0x33);              /* jmp 0x100ab802 */
l_0x100ab835:
    II(0x100ab835, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ab839, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ab83c, 0x2)   jnzd(0x100ab851, 0x13);               /* jnz 0x100ab851 */
    II(0x100ab83e, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100ab842, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ab844, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ab847, 0x5)   calld(0x10088e4c, -0x22a00);          /* call 0x10088e4c */
    II(0x100ab84c, 0x5)   jmpd(0x100aba67, 0x216);              /* jmp 0x100aba67 */
l_0x100ab851:
    II(0x100ab851, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ab856, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100ab85b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ab85e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100ab861, 0x5)   calld(0x10075e64, -0x35a02);          /* call 0x10075e64 */
    II(0x100ab866, 0x3)   mov(esi, memd_a32(ss, ebp - 0x8));    /* mov esi, [ebp-0x8] */
    II(0x100ab869, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ab86b, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100ab86d, 0x5)   calld(0x100a90f9, -0x2779);           /* call 0x100a90f9 */
    II(0x100ab872, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ab874, 0x2)   jnzd(0x100ab889, 0x13);               /* jnz 0x100ab889 */
    II(0x100ab876, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100ab87a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ab87c, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ab87f, 0x5)   calld(0x10088e4c, -0x22a38);          /* call 0x10088e4c */
    II(0x100ab884, 0x5)   jmpd(0x100aba67, 0x1de);              /* jmp 0x100aba67 */
l_0x100ab889:
    II(0x100ab889, 0x2)   jmpd(0x100ab893, 0x8);                /* jmp 0x100ab893 */
l_0x100ab88b:
    II(0x100ab88b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ab88e, 0x5)   calld(0x10076bf8, -0x34c9b);          /* call 0x10076bf8 */
l_0x100ab893:
    II(0x100ab893, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ab895, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ab898, 0x5)   calld(0x1013ad71, 0x8f4d4);           /* call 0x1013ad71 */
    II(0x100ab89d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ab89f, 0x6)   jzd(0x100aba35, 0x190);               /* jz dword 0x100aba35 */
    II(0x100ab8a5, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ab8a8, 0x5)   calld(0x1008a0f8, -0x217b5);          /* call 0x1008a0f8 */
    II(0x100ab8ad, 0x5)   calld(0x1008a370, -0x21542);          /* call 0x1008a370 */
    II(0x100ab8b2, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100ab8b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ab8b8, 0x5)   calld(0x1007623c, -0x35681);          /* call 0x1007623c */
    II(0x100ab8bd, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x100ab8c1, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100ab8c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ab8c7, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x100ab8ca, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab8cf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ab8d1, 0x2)   jzd(0x100ab8e5, 0x12);                /* jz 0x100ab8e5 */
    II(0x100ab8d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ab8d6, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100ab8d9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab8de, 0x5)   cmp(memb_a32(ds, eax + ebp - 0x2c), 0); /* cmp byte [eax+ebp-0x2c], 0x0 */
    II(0x100ab8e3, 0x2)   jnzd(0x100ab8e7, 0x2);                /* jnz 0x100ab8e7 */
l_0x100ab8e5:
    II(0x100ab8e5, 0x2)   jmpd(0x100ab8f6, 0xf);                /* jmp 0x100ab8f6 */
l_0x100ab8e7:
    II(0x100ab8e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ab8ea, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x100ab8ed, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab8f2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ab8f4, 0x2)   jgd(0x100ab8f8, 0x2);                 /* jg 0x100ab8f8 */
l_0x100ab8f6:
    II(0x100ab8f6, 0x2)   jmpd(0x100ab901, 0x9);                /* jmp 0x100ab901 */
l_0x100ab8f8:
    II(0x100ab8f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ab8fb, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100ab8ff, 0x2)   jgd(0x100ab903, 0x2);                 /* jg 0x100ab903 */
l_0x100ab901:
    II(0x100ab901, 0x2)   jmpd(0x100ab92b, 0x28);               /* jmp 0x100ab92b */
l_0x100ab903:
    II(0x100ab903, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ab906, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ab909, 0x5)   calld(0x10075e64, -0x35aaa);          /* call 0x10075e64 */
    II(0x100ab90e, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100ab910, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab913, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100ab916, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ab919, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ab91c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ab91f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ab922, 0x5)   calld(0x10074a19, -0x36f0e);          /* call 0x10074a19 */
    II(0x100ab927, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ab929, 0x2)   jnzd(0x100ab930, 0x5);                /* jnz 0x100ab930 */
l_0x100ab92b:
    II(0x100ab92b, 0x5)   jmpd(0x100aba30, 0x100);              /* jmp 0x100aba30 */
l_0x100ab930:
    II(0x100ab930, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ab933, 0x5)   calld(0x1007623c, -0x356fc);          /* call 0x1007623c */
    II(0x100ab938, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100ab93b, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x100ab93e, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ab941, 0x5)   calld(0x1008a0f8, -0x2184e);          /* call 0x1008a0f8 */
    II(0x100ab946, 0x5)   calld(0x100b8e63, 0xd518);            /* call 0x100b8e63 */
    II(0x100ab94b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ab94d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab950, 0x5)   calld(0x10070ca1, -0x3acb4);          /* call 0x10070ca1 */
    II(0x100ab955, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100ab958, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ab95b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x100ab95e, 0x4)   add(ax, memw_a32(ds, edx + 0x1d));    /* add ax, [edx+0x1d] */
    II(0x100ab962, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100ab965, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100ab968, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x100ab96c, 0x2)   jzd(0x100ab98b, 0x1d);                /* jz 0x100ab98b */
    II(0x100ab96e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x100ab971, 0x3)   mov(edx, memd_a32(ds, edx + 0xe));    /* mov edx, [edx+0xe] */
    II(0x100ab974, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ab977, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100ab979, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100ab97c, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100ab97e, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100ab980, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x48)); /* movsx edx, word [ebp-0x48] */
    II(0x100ab984, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ab986, 0x3)   mov(memd_a32(ss, ebp - 0x48), edx);   /* mov [ebp-0x48], edx */
    II(0x100ab989, 0x2)   jmpd(0x100ab9bd, 0x32);               /* jmp 0x100ab9bd */
l_0x100ab98b:
    II(0x100ab98b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x100ab98e, 0x3)   mov(ebx, memd_a32(ds, edx + 0x12));   /* mov ebx, [edx+0x12] */
    II(0x100ab991, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100ab994, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x100ab997, 0x3)   mov(eax, memd_a32(ds, edx + 0xe));    /* mov eax, [edx+0xe] */
    II(0x100ab99a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ab99d, 0x1)   inc(eax);                             /* inc eax */
    II(0x100ab99e, 0x3)   lea(edx, ebx - 0x1);                  /* lea edx, [ebx-0x1] */
    II(0x100ab9a1, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100ab9a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100ab9a7, 0x3)   mov(ebx, memd_a32(ds, eax + 0x12));   /* mov ebx, [eax+0x12] */
    II(0x100ab9aa, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100ab9ad, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100ab9af, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100ab9b2, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100ab9b4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x48)); /* movsx edx, word [ebp-0x48] */
    II(0x100ab9b8, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ab9ba, 0x3)   mov(memd_a32(ss, ebp - 0x48), edx);   /* mov [ebp-0x48], edx */
l_0x100ab9bd:
    II(0x100ab9bd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x48)); /* movsx edx, word [ebp-0x48] */
    II(0x100ab9c1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x100ab9c5, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100ab9c8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100ab9cc, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ab9ce, 0x2)   jgd(0x100aba30, 0x60);                /* jg 0x100aba30 */
    II(0x100ab9d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ab9d3, 0x5)   calld(0x1007623c, -0x3579c);          /* call 0x1007623c */
    II(0x100ab9d8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ab9da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ab9dd, 0x4)   cmp(ax, memw_a32(ds, edx + 0x12));    /* cmp ax, [edx+0x12] */
    II(0x100ab9e1, 0x2)   jled(0x100ab9f6, 0x13);               /* jle 0x100ab9f6 */
    II(0x100ab9e3, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100ab9e7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ab9e9, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ab9ec, 0x5)   calld(0x10088e4c, -0x22ba5);          /* call 0x10088e4c */
    II(0x100ab9f1, 0x5)   jmpd(0x100aba67, 0x71);               /* jmp 0x100aba67 */
l_0x100ab9f6:
    II(0x100ab9f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ab9f9, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100ab9fc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ab9ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100aba02, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100aba05, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100aba08, 0x5)   calld(0x100749d4, -0x37039);          /* call 0x100749d4 */
    II(0x100aba0d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100aba0f, 0x2)   jnzd(0x100aba21, 0x10);               /* jnz 0x100aba21 */
    II(0x100aba11, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100aba15, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aba17, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100aba1a, 0x5)   calld(0x10088e4c, -0x22bd3);          /* call 0x10088e4c */
    II(0x100aba1f, 0x2)   jmpd(0x100aba67, 0x46);               /* jmp 0x100aba67 */
l_0x100aba21:
    II(0x100aba21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100aba24, 0x5)   calld(0x1007623c, -0x357ed);          /* call 0x1007623c */
    II(0x100aba29, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x100aba2d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x100aba30:
    II(0x100aba30, 0x5)   jmpd(0x100ab88b, -0x1aa);             /* jmp 0x100ab88b */
l_0x100aba35:
    II(0x100aba35, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100aba39, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100aba3b, 0x2)   jnzd(0x100aba4d, 0x10);               /* jnz 0x100aba4d */
    II(0x100aba3d, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100aba41, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aba43, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100aba46, 0x5)   calld(0x10088e4c, -0x22bff);          /* call 0x10088e4c */
    II(0x100aba4b, 0x2)   jmpd(0x100aba67, 0x1a);               /* jmp 0x100aba67 */
l_0x100aba4d:
    II(0x100aba4d, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100aba51, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aba53, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100aba56, 0x5)   calld(0x10088e4c, -0x22c0f);          /* call 0x10088e4c */
    II(0x100aba5b, 0x2)   jmpd(0x100aba67, 0xa);                /* jmp 0x100aba67 */
//  II(0x100aba5d, 0xa)   /* Недостижимый код. */
l_0x100aba67:
    II(0x100aba67, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100aba6a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100aba6c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100aba6d, 0x1)   popd(edi);                            /* pop edi */
    II(0x100aba6e, 0x1)   popd(esi);                            /* pop esi */
    II(0x100aba6f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100aba70, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100aba71, 0x1)   retd();                               /* ret */
FUNC_END

