FUNC_BEGIN(0x10103ff1, 0xcd31af0c1806b1f0, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x57, 0x1d, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0xe4, 0x24, 0xf7, 0xff, 0x89, 0x45, 0xf0, 0x80, 0x65, 0xf8, 0xfe, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x7d, 0x6a, 0xf, 0xbf, 0x55, 0xf4, 0x6b, 0xd2, 0xa, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2, 0x1, 0xd0, 0xe8, 0xeb, 0x22, 0xf7, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xe5, 0x23, 0xf7, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x97, 0x2b, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x6, 0x6d, 0x3, 0, 0x84, 0xc0, 0x74, 0x1e, 0x8d, 0x45, 0xec, 0xe8, 0x29, 0x23, 0xf7, 0xff, 0xe8, 0x41, 0x76, 0x4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x1a, 0x23, 0xf7, 0xff, 0xe8, 0xd, 0x69, 0xf8, 0xff, 0xeb, 0xcc, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xd0, 0xa, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2, 0x1, 0xd0, 0xe8, 0x53, 0x66, 0x3, 0, 0xeb, 0x85, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xbf, 0x1e, 0xf7, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10103ff1, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10103ff6, 0x5)   calld(sys_check_available_stack_size, 0x61d57); /* call 0x10165d52 */
    II(0x10103ffb, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10103ffc, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10103ffd, 0x1)   pushd(edx);                           /* push edx */
    II(0x10103ffe, 0x1)   pushd(esi);                           /* push esi */
    II(0x10103fff, 0x1)   pushd(edi);                           /* push edi */
    II(0x10104000, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10104001, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10104003, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10104009, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010400c, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x10104010, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10104013, 0x5)   calld(0x100764fc, -0x8db1c);          /* call 0x100764fc */
    II(0x10104018, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010401b, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1010401f, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10104026, 0x2)   jmpd(0x1010402e, 0x6);                /* jmp 0x1010402e */
l_0x10104028:
    II(0x10104028, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010402b, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1010402e:
    II(0x1010402e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10104031, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10104034, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x10104037, 0x2)   jged(0x101040a3, 0x6a);               /* jge 0x101040a3 */
    II(0x10104039, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1010403d, 0x3)   imul(edx, edx, 0xa);                  /* imul edx, edx, 0xa */
    II(0x10104040, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10104043, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x10104046, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10104048, 0x5)   calld(0x10076338, -0x8dd15);          /* call 0x10076338 */
    II(0x1010404d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010404f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10104052, 0x5)   calld(0x1007643c, -0x8dc1b);          /* call 0x1007643c */
    II(0x10104057, 0x2)   jmpd(0x10104061, 0x8);                /* jmp 0x10104061 */
l_0x10104059:
    II(0x10104059, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1010405c, 0x5)   calld(0x10076bf8, -0x8d469);          /* call 0x10076bf8 */
l_0x10104061:
    II(0x10104061, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10104063, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10104066, 0x5)   calld(0x1013ad71, 0x36d06);           /* call 0x1013ad71 */
    II(0x1010406b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1010406d, 0x2)   jzd(0x1010408d, 0x1e);                /* jz 0x1010408d */
    II(0x1010406f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10104072, 0x5)   calld(0x100763a0, -0x8dcd7);          /* call 0x100763a0 */
    II(0x10104077, 0x5)   calld(0x1014b6bd, 0x47641);           /* call 0x1014b6bd */
    II(0x1010407c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010407e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10104081, 0x5)   calld(0x100763a0, -0x8dce6);          /* call 0x100763a0 */
    II(0x10104086, 0x5)   calld(0x1008a998, -0x796f3);          /* call 0x1008a998 */
    II(0x1010408b, 0x2)   jmpd(0x10104059, -0x34);              /* jmp 0x10104059 */
l_0x1010408d:
    II(0x1010408d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10104091, 0x3)   imul(edx, eax, 0xa);                  /* imul edx, eax, 0xa */
    II(0x10104094, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10104097, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x1010409a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1010409c, 0x5)   calld(0x1013a6f4, 0x36653);           /* call 0x1013a6f4 */
    II(0x101040a1, 0x2)   jmpd(0x10104028, -0x7b);              /* jmp 0x10104028 */
l_0x101040a3:
    II(0x101040a3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101040a5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101040a8, 0x5)   calld(0x10075f6c, -0x8e141);          /* call 0x10075f6c */
    II(0x101040ad, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101040af, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101040b0, 0x1)   popd(edi);                            /* pop edi */
    II(0x101040b1, 0x1)   popd(esi);                            /* pop esi */
    II(0x101040b2, 0x1)   popd(edx);                            /* pop edx */
    II(0x101040b3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101040b4, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101040b5, 0x1)   retd();                               /* ret */
FUNC_END

