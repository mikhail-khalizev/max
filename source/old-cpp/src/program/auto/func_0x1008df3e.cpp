FUNC_BEGIN(0x1008df3e, 0xa07baa23092ec06, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xa, 0x7e, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf4, 0xe8, 0xfc, 0xd0, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x25, 0xb, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1d, 0xe8, 0xf9, 0xcd, 0xa, 0, 0x84, 0xc0, 0x74, 0x1d, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1d, 0xe8, 0xa1, 0xcf, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xff, 0x53, 0x38, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xcb, 0xcd, 0xa, 0, 0x84, 0xc0, 0x74, 0x15, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x1d, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x9, 0xec, 0, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x1d, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x5c, 0xcf, 0xff, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xec, 0xff, 0x53, 0x38, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xf9, 0xcf, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1d, 0xe8, 0xec, 0xcf, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0x2b, 0x86, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2b, 0xe8, 0xe4, 0xce, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf8, 0xe8, 0x56, 0xce, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0xd4, 0x8b, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x43, 0xcd, 0xa, 0, 0x84, 0xc0, 0x74, 0x19, 0x8d, 0x45, 0xf8, 0xe8, 0x8a, 0xcd, 0xff, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x48, 0xeb, 0xd1, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2b, 0xe8, 0x9e, 0xc6, 0xa, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x1d, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x54, 0xab, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xa, 0xab, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008df3e, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x1008df43, 0x5)   calld(sys_check_available_stack_size, 0xd7e0a); /* call 0x10165d52 */
    II(0x1008df48, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008df49, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008df4a, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008df4b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008df4c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008df4d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008df4e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008df50, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x1008df56, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1008df59, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008df5c, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008df5f, 0x5)   calld(0x1008b060, -0x2f04);           /* call 0x1008b060 */
    II(0x1008df64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008df67, 0x4)   mov(memb_a32(ds, eax + 0x25), 0xb);   /* mov byte [eax+0x25], 0xb */
    II(0x1008df6b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008df6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008df70, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x1008df73, 0x5)   calld(0x1013ad71, 0xacdf9);           /* call 0x1013ad71 */
    II(0x1008df78, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008df7a, 0x2)   jzd(0x1008df99, 0x1d);                /* jz 0x1008df99 */
    II(0x1008df7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008df7f, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x1008df82, 0x5)   calld(0x1008af28, -0x305f);           /* call 0x1008af28 */
    II(0x1008df87, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1008df8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008df8d, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1008df90, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x1008df93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008df96, 0x3)   calld_abs(memd_a32(ds, ebx + 0x38));  /* call dword near [ebx+0x38] */
l_0x1008df99:
    II(0x1008df99, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008df9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008df9e, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1008dfa1, 0x5)   calld(0x1013ad71, 0xacdcb);           /* call 0x1013ad71 */
    II(0x1008dfa6, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008dfa8, 0x2)   jzd(0x1008dfbf, 0x15);                /* jz 0x1008dfbf */
    II(0x1008dfaa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008dfad, 0x3)   add(edx, 0x1d);                       /* add edx, 0x1d */
    II(0x1008dfb0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008dfb3, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1008dfb6, 0x5)   calld(0x1009cbc4, 0xec09);            /* call 0x1009cbc4 */
    II(0x1008dfbb, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008dfbd, 0x2)   jnzd(0x1008dfc1, 0x2);                /* jnz 0x1008dfc1 */
l_0x1008dfbf:
    II(0x1008dfbf, 0x2)   jmpd(0x1008dfde, 0x1d);               /* jmp 0x1008dfde */
l_0x1008dfc1:
    II(0x1008dfc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008dfc4, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1008dfc7, 0x5)   calld(0x1008af28, -0x30a4);           /* call 0x1008af28 */
    II(0x1008dfcc, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x1008dfcf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1008dfd2, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1008dfd5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x1008dfd8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1008dfdb, 0x3)   calld_abs(memd_a32(ds, ebx + 0x38));  /* call dword near [ebx+0x38] */
l_0x1008dfde:
    II(0x1008dfde, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008dfe0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008dfe3, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1008dfe6, 0x5)   calld(0x1008afe4, -0x3007);           /* call 0x1008afe4 */
    II(0x1008dfeb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008dfed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008dff0, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x1008dff3, 0x5)   calld(0x1008afe4, -0x3014);           /* call 0x1008afe4 */
    II(0x1008dff8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008dffa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008dffd, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x1008e000, 0x5)   calld(0x10076630, -0x179d5);          /* call 0x10076630 */
    II(0x1008e005, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e008, 0x3)   add(eax, 0x2b);                       /* add eax, 0x2b */
    II(0x1008e00b, 0x5)   calld(0x1008aef4, -0x311c);           /* call 0x1008aef4 */
    II(0x1008e010, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008e012, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1008e015, 0x5)   calld(0x1008ae70, -0x31aa);           /* call 0x1008ae70 */
    II(0x1008e01a, 0x2)   jmpd(0x1008e024, 0x8);                /* jmp 0x1008e024 */
l_0x1008e01c:
    II(0x1008e01c, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1008e01f, 0x5)   calld(0x10076bf8, -0x1742c);          /* call 0x10076bf8 */
l_0x1008e024:
    II(0x1008e024, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e026, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1008e029, 0x5)   calld(0x1013ad71, 0xacd43);           /* call 0x1013ad71 */
    II(0x1008e02e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008e030, 0x2)   jzd(0x1008e04b, 0x19);                /* jz 0x1008e04b */
    II(0x1008e032, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1008e035, 0x5)   calld(0x1008adc4, -0x3276);           /* call 0x1008adc4 */
    II(0x1008e03a, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1008e03d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1008e040, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x1008e043, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1008e046, 0x3)   calld_abs(memd_a32(ds, edx + 0x48));  /* call dword near [edx+0x48] */
    II(0x1008e049, 0x2)   jmpd(0x1008e01c, -0x2f);              /* jmp 0x1008e01c */
l_0x1008e04b:
    II(0x1008e04b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e04e, 0x3)   add(eax, 0x2b);                       /* add eax, 0x2b */
    II(0x1008e051, 0x5)   calld(0x1013a6f4, 0xac69e);           /* call 0x1013a6f4 */
    II(0x1008e056, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e059, 0x5)   calld(0x1008e07b, 0x1d);              /* call 0x1008e07b */
    II(0x1008e05e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e060, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1008e063, 0x5)   calld(0x10088bbc, -0x54ac);           /* call 0x10088bbc */
    II(0x1008e068, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e06a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008e06d, 0x5)   calld(0x10088b7c, -0x54f6);           /* call 0x10088b7c */
    II(0x1008e072, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008e074, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008e075, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008e076, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008e077, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008e078, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008e079, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008e07a, 0x1)   retd();                               /* ret */
FUNC_END

