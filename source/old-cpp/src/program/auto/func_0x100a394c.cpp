FUNC_BEGIN(0x100a394c, 0x8c70fffe22fb8a3b, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xfc, 0x23, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf7, 0x45, 0xfc, 0x4, 0, 0, 0, 0x74, 0x14, 0xba, 0x44, 0x4d, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x39, 0x26, 0xc, 0, 0xe8, 0x54, 0x26, 0xc, 0, 0xeb, 0x3e, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0x24, 0x4f, 0x1b, 0x10, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6, 0xe8, 0xdf, 0x51, 0xfe, 0xff, 0x83, 0xe8, 0x6, 0x89, 0x45, 0xf8, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x19, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xf8, 0xf7, 0x45, 0xfc, 0x2, 0, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xa0, 0x25, 0xc, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a394c, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100a3951, 0x5)   calld(sys_check_available_stack_size, 0xc23fc); /* call 0x10165d52 */
    II(0x100a3956, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a3957, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a3958, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a3959, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a395a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a395b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a395d, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100a3963, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a3966, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100a3969, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x4);   /* test dword [ebp-0x4], 0x4 */
    II(0x100a3970, 0x2)   jzd(0x100a3986, 0x14);                /* jz 0x100a3986 */
    II(0x100a3972, 0x5)   mov(edx, 0x101b4d44);                 /* mov edx, 0x101b4d44 */
    II(0x100a3977, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a397a, 0x5)   calld(sys_call_dtor_arr, 0xc2639);    /* call 0x10165fb8 */
    II(0x100a397f, 0x5)   calld(sys_delete_arr, 0xc2654);       /* call 0x10165fd8 */
    II(0x100a3984, 0x2)   jmpd(0x100a39c4, 0x3e);               /* jmp 0x100a39c4 */
l_0x100a3986:
    II(0x100a3986, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3989, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b4f24); /* mov dword [eax+0x2], 0x101b4f24 */
    II(0x100a3990, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a3992, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3995, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a3998, 0x5)   calld(0x10088b7c, -0x1ae21);          /* call 0x10088b7c */
    II(0x100a399d, 0x3)   sub(eax, 0x6);                        /* sub eax, 0x6 */
    II(0x100a39a0, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a39a3, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
//    II(0x100a39a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a39ab, 0x5)   calld(0x100a36c9, -0x2e7);            /* call 0x100a36c9 */
    II(0x100a39b0, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a39b3, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x2);   /* test dword [ebp-0x4], 0x2 */
    II(0x100a39ba, 0x2)   jzd(0x100a39c4, 0x8);                 /* jz 0x100a39c4 */
    II(0x100a39bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a39bf, 0x5)   calld(sys_delete, 0xc25a0);           /* call 0x10165f64 */
l_0x100a39c4:
    II(0x100a39c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a39c7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a39ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a39cd, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a39cf, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a39d0, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a39d1, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a39d2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a39d3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a39d4, 0x1)   retd();                               /* ret */
FUNC_END

