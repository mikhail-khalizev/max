FUNC_BEGIN(0x100798de, 0xfedf47fc8e4a6728, 0x20, ({0x68, 0x64, 0x1, 0, 0, 0xe8, 0x6a, 0xc4, 0xe, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0x1, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x39, 0xc9, 0xff, 0xff, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0xf, 0x85, 0xbd, 0x4, 0, 0, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x5, 0xe9, 0x95, 0x4, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x19, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x18, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x1b, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x17, 0x75, 0x2, 0xeb, 0xe, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x20, 0xf, 0x85, 0xb6, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x8c, 0xc8, 0xff, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0xa, 0x7e, 0x13, 0x8b, 0x45, 0xfc, 0xe8, 0x79, 0xc8, 0xff, 0xff, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0xa, 0x7f, 0x5, 0xe9, 0x8b, 0x1, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0x61, 0xf0, 0, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0xe8, 0x99, 0x97, 0x2, 0, 0x89, 0x45, 0xe8, 0xb9, 0x3, 0, 0, 0, 0xbb, 0xff, 0xff, 0xff, 0xff, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xf0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x12, 0x8e, 0x4, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x65, 0xeb, 0x3, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xda, 0xf3, 0, 0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0x8d, 0x45, 0xf0, 0xe8, 0x97, 0xa, 0x1, 0, 0x66, 0x3b, 0x45, 0xe0, 0x7e, 0x67, 0xf, 0xbf, 0x55, 0xe0, 0x8d, 0x45, 0xf0, 0xe8, 0xc1, 0x9, 0x1, 0, 0xf, 0xbf, 0, 0xe8, 0xd7, 0x44, 0x5, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x8, 0x75, 0x34, 0xf, 0xbf, 0x55, 0xe0, 0x8d, 0x45, 0xf0, 0xe8, 0xa2, 0x9, 0x1, 0, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x7, 0xc1, 0xfb, 0x10, 0x69, 0xdb, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xd4, 0x62, 0x6, 0, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xe8, 0x7e, 0x12, 0xf, 0xbf, 0x55, 0xe0, 0x8d, 0x45, 0xf0, 0xe8, 0x6e, 0x9, 0x1, 0, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0xeb, 0x85, 0x8d, 0x45, 0xf0, 0xe8, 0x8c, 0xec, 0x3, 0, 0x89, 0x45, 0xdc, 0x66, 0x83, 0x7d, 0xdc, 0xff, 0xf, 0x84, 0x90, 0, 0, 0, 0xb8, 0x1d, 0, 0, 0, 0xe8, 0x6a, 0xc3, 0xe, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x1c, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x1d, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xd8, 0xe8, 0xb6, 0xc5, 0x2, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xcc, 0x8b, 0x55, 0xcc, 0x8d, 0x45, 0xc8, 0xe8, 0x42, 0xe, 0x1, 0, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xc8, 0xe8, 0xfe, 0xc, 0x1, 0, 0xe8, 0xd9, 0xc8, 0x2, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xdc, 0xe8, 0xef, 0x88, 0x2, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x1, 0x50, 0x21, 0x8d, 0x45, 0xc8, 0xe8, 0x62, 0xd, 0x1, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x3e, 0xb2, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xa0, 0xf1, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xa6, 0xf2, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x31, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x3d, 0x75, 0x12, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x21, 0xc1, 0x2, 0, 0x84, 0xc0, 0x74, 0x5, 0xe9, 0x78, 0x2, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xc4, 0xe8, 0xab, 0xee, 0, 0, 0x89, 0x45, 0xc0, 0x80, 0x65, 0xf4, 0xfe, 0xc6, 0x45, 0xbc, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xc6, 0xc7, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xb8, 0xe8, 0x3c, 0xc9, 0xff, 0xff, 0xbb, 0xba, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0xe8, 0x52, 0xc2, 0xe, 0, 0xeb, 0x8, 0x8d, 0x45, 0xb8, 0xe8, 0x60, 0xd0, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xcf, 0x11, 0xc, 0, 0x84, 0xc0, 0x74, 0x34, 0x8d, 0x45, 0xb8, 0xe8, 0xf2, 0xc7, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x18, 0x8d, 0x45, 0xb8, 0xe8, 0xd8, 0xc7, 0xff, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x66, 0xff, 0x84, 0x28, 0xfc, 0xfe, 0xff, 0xff, 0xeb, 0xb6, 0xf, 0xbf, 0x85, 0x2e, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x74, 0xb, 0xf, 0xbf, 0x85, 0x2c, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x85, 0x32, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x4, 0xc6, 0x45, 0xbc, 0x1, 0xb9, 0x2, 0, 0, 0, 0xbb, 0xff, 0xff, 0xff, 0xff, 0x8d, 0x95, 0xf8, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbe, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0xc4, 0x8b, 0x4, 0, 0x8d, 0x5d, 0xc4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x4b, 0xe9, 0x3, 0, 0x31, 0xd2, 0x8d, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0xe8, 0x87, 0xf1, 0, 0, 0xc7, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0xff, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0x8d, 0x45, 0xc4, 0xe8, 0x3b, 0x8, 0x1, 0, 0x66, 0x3b, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0xf, 0x8e, 0xc6, 0, 0, 0, 0xf, 0xbf, 0x95, 0xf4, 0xfe, 0xff, 0xff, 0x8d, 0x45, 0xc4, 0xe8, 0x5b, 0x7, 0x1, 0, 0xf, 0xbf, 0, 0xe8, 0x71, 0x42, 0x5, 0, 0x89, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x8, 0x74, 0x17, 0xf, 0xbf, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0xe8, 0x50, 0x42, 0x5, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x8, 0x75, 0x2, 0xeb, 0x15, 0xf, 0xbf, 0x95, 0xf4, 0xfe, 0xff, 0xff, 0x8d, 0x45, 0xc4, 0xe8, 0x16, 0x7, 0x1, 0, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0x80, 0x7d, 0xbc, 0, 0x74, 0x20, 0xf, 0xbf, 0x95, 0xf4, 0xfe, 0xff, 0xff, 0x8d, 0x45, 0xc4, 0xe8, 0xfb, 0x6, 0x1, 0, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0x66, 0xf7, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0xc0, 0x1, 0x75, 0x2, 0xeb, 0x28, 0xf, 0xbf, 0x95, 0xf4, 0xfe, 0xff, 0xff, 0x8d, 0x45, 0xc4, 0xe8, 0xd9, 0x6, 0x1, 0, 0xf, 0xbf, 0, 0xe8, 0xef, 0x41, 0x5, 0, 0x98, 0x1, 0xc0, 0x8b, 0x84, 0x28, 0xfa, 0xfe, 0xff, 0xff, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x15, 0xf, 0xbf, 0x95, 0xf4, 0xfe, 0xff, 0xff, 0x8d, 0x45, 0xc4, 0xe8, 0xaf, 0x6, 0x1, 0, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0xe9, 0x19, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc4, 0xe8, 0xca, 0xe9, 0x3, 0, 0x89, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0x66, 0x83, 0xbd, 0xf0, 0xfe, 0xff, 0xff, 0xff, 0x74, 0x65, 0xf, 0xbf, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0xe8, 0x9e, 0x41, 0x5, 0, 0x89, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x8, 0x74, 0xc, 0x8b, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0x8b, 0x4d, 0xf8, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x1d, 0x8d, 0x85, 0xe8, 0xfe, 0xff, 0xff, 0xe8, 0xd3, 0xc0, 0xff, 0xff, 0x89, 0xc3, 0xf, 0xbf, 0x95, 0xf0, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x70, 0x7, 0xc1, 0xfe, 0x10, 0x69, 0xf6, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0xd, 0x48, 0x4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xad, 0xc1, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x3, 0xf0, 0, 0, 0xe9, 0x1b, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x1b, 0xe8, 0xba, 0x9, 0x1, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xb9, 0xb5, 0x2, 0, 0xe9, 0xf1, 0x1, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x16, 0xd, 0x1, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xdc, 0x89, 0xd, 0, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x4d, 0x9, 0x1, 0, 0x8d, 0x9d, 0xe4, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x46, 0x10, 0x1, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0xe8, 0x6b, 0x12, 0x1, 0, 0x89, 0x85, 0xdc, 0xfe, 0xff, 0xff, 0x80, 0x65, 0xf4, 0xfe, 0xeb, 0xb, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0xa8, 0xcd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0x14, 0xf, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0x2b, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0x4c, 0xf, 0x1, 0, 0xe8, 0x13, 0xf, 0x1, 0, 0x98, 0x39, 0xd0, 0x75, 0x27, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0x37, 0xf, 0x1, 0, 0x89, 0x85, 0xd8, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xd8, 0xfe, 0xff, 0xff, 0x8b, 0x50, 0x2, 0x8b, 0x85, 0xd8, 0xfe, 0xff, 0xff, 0xff, 0x52, 0x20, 0x3c, 0x3, 0x75, 0x2, 0xeb, 0x2a, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0xe, 0xf, 0x1, 0, 0x89, 0x85, 0xd4, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xd4, 0xfe, 0xff, 0xff, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x85, 0xd4, 0xfe, 0xff, 0xff, 0xff, 0x53, 0x8, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0xb1, 0, 0, 0, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0xdf, 0xe, 0x1, 0, 0x89, 0x85, 0xd0, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xd0, 0xfe, 0xff, 0xff, 0x8b, 0x58, 0x2, 0x8d, 0x95, 0xc0, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xd0, 0xfe, 0xff, 0xff, 0xff, 0x53, 0x1c, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1c, 0x2b, 0x95, 0xc4, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x2b, 0x85, 0xc4, 0xfe, 0xff, 0xff, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x58, 0x1a, 0x2b, 0x9d, 0xc0, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x2b, 0x85, 0xc0, 0xfe, 0xff, 0xff, 0xf, 0xaf, 0xc3, 0x1, 0xd0, 0x89, 0x85, 0xbc, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0xe8, 0xbf, 0xd, 0xc, 0, 0x84, 0xc0, 0x75, 0xf, 0x8b, 0x85, 0xbc, 0xfe, 0xff, 0xff, 0x66, 0x3b, 0x85, 0xb8, 0xfe, 0xff, 0xff, 0x7d, 0x26, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0x88, 0xe, 0x1, 0, 0x8d, 0x9d, 0xe0, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x65, 0x10, 0x1, 0, 0x8b, 0x85, 0xbc, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xb8, 0xfe, 0xff, 0xff, 0xe9, 0xb5, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0xe8, 0xd4, 0xd, 0xc, 0, 0x84, 0xc0, 0x74, 0x2e, 0x8b, 0x45, 0xfc, 0xe8, 0xd4, 0x88, 0xd, 0, 0x8d, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0xe8, 0x74, 0xf, 0x1, 0, 0x89, 0x85, 0xb4, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xb4, 0xfe, 0xff, 0xff, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x85, 0xb4, 0xfe, 0xff, 0xff, 0xff, 0x53, 0x2c, 0x31, 0xd2, 0x8d, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0xe8, 0xa0, 0xeb, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0xd3, 0xeb, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100798de, 0x5)   pushd(0x164);                         /* push dword 0x164 */
    II(0x100798e3, 0x5)   calld(sys_check_available_stack_size, 0xec46a); /* call 0x10165d52 */
    II(0x100798e8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100798e9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100798ea, 0x1)   pushd(esi);                           /* push esi */
    II(0x100798eb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100798ec, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100798ed, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100798ef, 0x6)   sub(esp, 0x14c);                      /* sub esp, 0x14c */
    II(0x100798f5, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100798f8, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100798fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100798fe, 0x5)   calld(0x1007623c, -0x36c7);           /* call 0x1007623c */
    II(0x10079903, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10079906, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10079909, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007990b, 0x6)   jnzd(0x10079dce, 0x4bd);              /* jnz dword 0x10079dce */
    II(0x10079911, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079914, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079916, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10079919, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007991c, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007991f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10079922, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10079924, 0x2)   jnzd(0x1007992f, 0x9);                /* jnz 0x1007992f */
    II(0x10079926, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079929, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x1007992d, 0x2)   jnzd(0x10079934, 0x5);                /* jnz 0x10079934 */
l_0x1007992f:
    II(0x1007992f, 0x5)   jmpd(0x10079dc9, 0x495);              /* jmp 0x10079dc9 */
l_0x10079934:
    II(0x10079934, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079937, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x19);   /* cmp word [eax+0x8], 0x19 */
    II(0x1007993c, 0x2)   jzd(0x10079948, 0xa);                 /* jz 0x10079948 */
    II(0x1007993e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079941, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x18);   /* cmp word [eax+0x8], 0x18 */
    II(0x10079946, 0x2)   jnzd(0x1007994a, 0x2);                /* jnz 0x1007994a */
l_0x10079948:
    II(0x10079948, 0x2)   jmpd(0x10079954, 0xa);                /* jmp 0x10079954 */
l_0x1007994a:
    II(0x1007994a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007994d, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1b);   /* cmp word [eax+0x8], 0x1b */
    II(0x10079952, 0x2)   jnzd(0x10079956, 0x2);                /* jnz 0x10079956 */
l_0x10079954:
    II(0x10079954, 0x2)   jmpd(0x10079960, 0xa);                /* jmp 0x10079960 */
l_0x10079956:
    II(0x10079956, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079959, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x17);   /* cmp word [eax+0x8], 0x17 */
    II(0x1007995e, 0x2)   jnzd(0x10079962, 0x2);                /* jnz 0x10079962 */
l_0x10079960:
    II(0x10079960, 0x2)   jmpd(0x10079970, 0xe);                /* jmp 0x10079970 */
l_0x10079962:
    II(0x10079962, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079965, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x20);   /* cmp word [eax+0x8], 0x20 */
    II(0x1007996a, 0x6)   jnzd(0x10079b26, 0x1b6);              /* jnz dword 0x10079b26 */
l_0x10079970:
    II(0x10079970, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079973, 0x5)   calld(0x10076204, -0x3774);           /* call 0x10076204 */
    II(0x10079978, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1007997b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007997e, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x10079981, 0x2)   jled(0x10079996, 0x13);               /* jle 0x10079996 */
    II(0x10079983, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079986, 0x5)   calld(0x10076204, -0x3787);           /* call 0x10076204 */
    II(0x1007998b, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x1007998e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10079991, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x10079994, 0x2)   jgd(0x1007999b, 0x5);                 /* jg 0x1007999b */
l_0x10079996:
    II(0x10079996, 0x5)   jmpd(0x10079b26, 0x18b);              /* jmp 0x10079b26 */
l_0x1007999b:
    II(0x1007999b, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1007999f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100799a2, 0x5)   calld(0x10088a08, 0xf061);            /* call 0x10088a08 */
    II(0x100799a7, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100799aa, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100799ae, 0x5)   calld(0x100a314c, 0x29799);           /* call 0x100a314c */
    II(0x100799b3, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100799b6, 0x5)   mov(ecx, 0x3);                        /* mov ecx, 0x3 */
    II(0x100799bb, 0x5)   mov(ebx, 0xffffffff);                 /* mov ebx, 0xffffffff */
    II(0x100799c0, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100799c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100799c6, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100799c9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100799cc, 0x6)   imul(esi, eax, 0xc5);                 /* imul esi, eax, 0xc5 */
    II(0x100799d2, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100799d7, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100799d9, 0x5)   calld(0x100c27f0, 0x48e12);           /* call 0x100c27f0 */
    II(0x100799de, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100799e0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100799e3, 0x5)   calld(0x100b854d, 0x3eb65);           /* call 0x100b854d */
    II(0x100799e8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100799ea, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100799ed, 0x5)   calld(0x10088dcc, 0xf3da);            /* call 0x10088dcc */
    II(0x100799f2, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100799f9, 0x2)   jmpd(0x10079a01, 0x6);                /* jmp 0x10079a01 */
l_0x100799fb:
    II(0x100799fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100799fe, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
l_0x10079a01:
    II(0x10079a01, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10079a04, 0x5)   calld(0x1008a4a0, 0x10a97);           /* call 0x1008a4a0 */
    II(0x10079a09, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x10079a0d, 0x2)   jled(0x10079a76, 0x67);               /* jle 0x10079a76 */
    II(0x10079a0f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10079a13, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10079a16, 0x5)   calld(0x1008a3dc, 0x109c1);           /* call 0x1008a3dc */
    II(0x10079a1b, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10079a1e, 0x5)   calld(0x100cdefa, 0x544d7);           /* call 0x100cdefa */
    II(0x10079a23, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10079a25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079a28, 0x4)   cmp(dx, memw_a32(ds, eax + 0x8));     /* cmp dx, [eax+0x8] */
    II(0x10079a2c, 0x2)   jnzd(0x10079a62, 0x34);               /* jnz 0x10079a62 */
    II(0x10079a2e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10079a32, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10079a35, 0x5)   calld(0x1008a3dc, 0x109a2);           /* call 0x1008a3dc */
    II(0x10079a3a, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x10079a3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10079a40, 0x3)   mov(ebx, memd_a32(ds, eax + 0x7));    /* mov ebx, [eax+0x7] */
    II(0x10079a43, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10079a46, 0x6)   imul(ebx, ebx, 0x247);                /* imul ebx, ebx, 0x247 */
    II(0x10079a4c, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x10079a51, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10079a53, 0x5)   calld(0x100dfd2c, 0x662d4);           /* call 0x100dfd2c */
    II(0x10079a58, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10079a5c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x10079a60, 0x2)   jled(0x10079a74, 0x12);               /* jle 0x10079a74 */
l_0x10079a62:
    II(0x10079a62, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10079a66, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10079a69, 0x5)   calld(0x1008a3dc, 0x1096e);           /* call 0x1008a3dc */
    II(0x10079a6e, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
l_0x10079a74:
    II(0x10079a74, 0x2)   jmpd(0x100799fb, -0x7b);              /* jmp 0x100799fb */
l_0x10079a76:
    II(0x10079a76, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10079a79, 0x5)   calld(0x100b870a, 0x3ec8c);           /* call 0x100b870a */
    II(0x10079a7e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10079a81, 0x5)   cmp(memw_a32(ss, ebp - 0x24), -0x1 /* 0xff */); /* cmp word [ebp-0x24], 0xff */
    II(0x10079a86, 0x6)   jzd(0x10079b1c, 0x90);                /* jz dword 0x10079b1c */
    II(0x10079a8c, 0x5)   mov(eax, 0x1d);                       /* mov eax, 0x1d */
    II(0x10079a91, 0x5)   calld(sys_new, 0xec36a);              /* call 0x10165e00 */
    II(0x10079a96, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x10079a99, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10079a9c, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10079a9f, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x10079aa3, 0x2)   jzd(0x10079ac1, 0x1c);                /* jz 0x10079ac1 */
    II(0x10079aa5, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10079aa8, 0x3)   add(ebx, 0x1d);                       /* add ebx, 0x1d */
    II(0x10079aab, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10079aae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10079ab1, 0x5)   calld(my_ctor_c12, 0x2c5b6);          /* call 0x100a606c */
    II(0x10079ab6, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x10079ab9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10079abc, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10079abf, 0x2)   jmpd(0x10079ac7, 0x6);                /* jmp 0x10079ac7 */
l_0x10079ac1:
    II(0x10079ac1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10079ac4, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x10079ac7:
    II(0x10079ac7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x10079aca, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10079acd, 0x5)   calld(0x1008a914, 0x10e42);           /* call 0x1008a914 */
    II(0x10079ad2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10079ad6, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10079ad9, 0x5)   calld(0x1008a7dc, 0x10cfe);           /* call 0x1008a7dc */
    II(0x10079ade, 0x5)   calld(0x100a63bc, 0x2c8d9);           /* call 0x100a63bc */
    II(0x10079ae3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10079ae6, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x10079ae9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10079aec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10079af0, 0x5)   calld(0x100a23e4, 0x288ef);           /* call 0x100a23e4 */
    II(0x10079af5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10079af7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10079afa, 0x4)   add(memw_a32(ds, eax + 0x21), dx);    /* add [eax+0x21], dx */
    II(0x10079afe, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10079b01, 0x5)   calld(0x1008a868, 0x10d62);           /* call 0x1008a868 */
    II(0x10079b06, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10079b08, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10079b0d, 0x5)   calld(0x100a4d50, 0x2b23e);           /* call 0x100a4d50 */
    II(0x10079b12, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079b14, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10079b17, 0x5)   calld(0x10088cbc, 0xf1a0);            /* call 0x10088cbc */
l_0x10079b1c:
    II(0x10079b1c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079b1e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10079b21, 0x5)   calld(0x10088dcc, 0xf2a6);            /* call 0x10088dcc */
l_0x10079b26:
    II(0x10079b26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079b29, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x10079b2e, 0x2)   jzd(0x10079b3a, 0xa);                 /* jz 0x10079b3a */
    II(0x10079b30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079b33, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3d);   /* cmp word [eax+0x8], 0x3d */
    II(0x10079b38, 0x2)   jnzd(0x10079b4c, 0x12);               /* jnz 0x10079b4c */
l_0x10079b3a:
    II(0x10079b3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10079b3d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10079b40, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10079b43, 0x5)   calld(0x100a5c69, 0x2c121);           /* call 0x100a5c69 */
    II(0x10079b48, 0x2)   test(al, al);                         /* test al, al */
    II(0x10079b4a, 0x2)   jzd(0x10079b51, 0x5);                 /* jz 0x10079b51 */
l_0x10079b4c:
    II(0x10079b4c, 0x5)   jmpd(0x10079dc9, 0x278);              /* jmp 0x10079dc9 */
l_0x10079b51:
    II(0x10079b51, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10079b55, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10079b58, 0x5)   calld(0x10088a08, 0xeeab);            /* call 0x10088a08 */
    II(0x10079b5d, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x10079b60, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10079b64, 0x4)   mov(memb_a32(ss, ebp - 0x44), 0);     /* mov byte [ebp-0x44], 0x0 */
    II(0x10079b68, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10079b6d, 0x5)   calld(0x10076338, -0x383a);           /* call 0x10076338 */
    II(0x10079b72, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10079b74, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10079b77, 0x5)   calld(0x100764b8, -0x36c4);           /* call 0x100764b8 */
    II(0x10079b7c, 0x5)   mov(ebx, 0xba);                       /* mov ebx, 0xba */
    II(0x10079b81, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079b83, 0x6)   lea(eax, ebp - 0x104);                /* lea eax, [ebp+0xfffffefc] */
    II(0x10079b89, 0x5)   calld(sys_memset, 0xec252);           /* call 0x10165de0 */
    II(0x10079b8e, 0x2)   jmpd(0x10079b98, 0x8);                /* jmp 0x10079b98 */
l_0x10079b90:
    II(0x10079b90, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10079b93, 0x5)   calld(0x10076bf8, -0x2fa0);           /* call 0x10076bf8 */
l_0x10079b98:
    II(0x10079b98, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079b9a, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10079b9d, 0x5)   calld(0x1013ad71, 0xc11cf);           /* call 0x1013ad71 */
    II(0x10079ba2, 0x2)   test(al, al);                         /* test al, al */
    II(0x10079ba4, 0x2)   jzd(0x10079bda, 0x34);                /* jz 0x10079bda */
    II(0x10079ba6, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10079ba9, 0x5)   calld(0x100763a0, -0x380e);           /* call 0x100763a0 */
    II(0x10079bae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079bb0, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10079bb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10079bb6, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10079bb9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10079bbc, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10079bbe, 0x2)   jnzd(0x10079bd8, 0x18);               /* jnz 0x10079bd8 */
    II(0x10079bc0, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10079bc3, 0x5)   calld(0x100763a0, -0x3828);           /* call 0x100763a0 */
    II(0x10079bc8, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10079bcb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10079bce, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10079bd0, 0x8)   inc(memw_a32(ds, eax + ebp - 0x104)); /* inc word [eax+ebp+0xfffffefc] */
l_0x10079bd8:
    II(0x10079bd8, 0x2)   jmpd(0x10079b90, -0x4a);              /* jmp 0x10079b90 */
l_0x10079bda:
    II(0x10079bda, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xd2)); /* movsx eax, word [ebp+0xffffff2e] */
    II(0x10079be1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10079be3, 0x2)   jzd(0x10079bf0, 0xb);                 /* jz 0x10079bf0 */
    II(0x10079be5, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xd4)); /* movsx eax, word [ebp+0xffffff2c] */
    II(0x10079bec, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10079bee, 0x2)   jnzd(0x10079bf2, 0x2);                /* jnz 0x10079bf2 */
l_0x10079bf0:
    II(0x10079bf0, 0x2)   jmpd(0x10079bfd, 0xb);                /* jmp 0x10079bfd */
l_0x10079bf2:
    II(0x10079bf2, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xce)); /* movsx eax, word [ebp+0xffffff32] */
    II(0x10079bf9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10079bfb, 0x2)   jnzd(0x10079c01, 0x4);                /* jnz 0x10079c01 */
l_0x10079bfd:
    II(0x10079bfd, 0x4)   mov(memb_a32(ss, ebp - 0x44), 0x1);   /* mov byte [ebp-0x44], 0x1 */
l_0x10079c01:
    II(0x10079c01, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x10079c06, 0x5)   mov(ebx, 0xffffffff);                 /* mov ebx, 0xffffffff */
    II(0x10079c0b, 0x6)   lea(edx, ebp - 0x108);                /* lea edx, [ebp+0xfffffef8] */
    II(0x10079c11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10079c14, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10079c17, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10079c1a, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x10079c20, 0x5)   mov(esi, 0x101c31c4);                 /* mov esi, 0x101c31c4 */
    II(0x10079c25, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x10079c27, 0x5)   calld(0x100c27f0, 0x48bc4);           /* call 0x100c27f0 */
    II(0x10079c2c, 0x3)   lea(ebx, ebp - 0x3c);                 /* lea ebx, [ebp-0x3c] */
    II(0x10079c2f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10079c31, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10079c33, 0x5)   calld(0x100b8583, 0x3e94b);           /* call 0x100b8583 */
    II(0x10079c38, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079c3a, 0x6)   lea(eax, ebp - 0x108);                /* lea eax, [ebp+0xfffffef8] */
    II(0x10079c40, 0x5)   calld(0x10088dcc, 0xf187);            /* call 0x10088dcc */
    II(0x10079c45, 0xa)   mov(memd_a32(ss, ebp - 0x10c), 0);    /* mov dword [ebp+0xfffffef4], 0x0 */
    II(0x10079c4f, 0x2)   jmpd(0x10079c5d, 0xc);                /* jmp 0x10079c5d */
l_0x10079c51:
    II(0x10079c51, 0x6)   mov(eax, memd_a32(ss, ebp - 0x10c));  /* mov eax, [ebp+0xfffffef4] */
    II(0x10079c57, 0x6)   inc(memd_a32(ss, ebp - 0x10c));       /* inc dword [ebp+0xfffffef4] */
l_0x10079c5d:
    II(0x10079c5d, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10079c60, 0x5)   calld(0x1008a4a0, 0x1083b);           /* call 0x1008a4a0 */
    II(0x10079c65, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x10c));   /* cmp ax, [ebp+0xfffffef4] */
    II(0x10079c6c, 0x6)   jled(0x10079d38, 0xc6);               /* jle dword 0x10079d38 */
    II(0x10079c72, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x10c)); /* movsx edx, word [ebp+0xfffffef4] */
    II(0x10079c79, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10079c7c, 0x5)   calld(0x1008a3dc, 0x1075b);           /* call 0x1008a3dc */
    II(0x10079c81, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10079c84, 0x5)   calld(0x100cdefa, 0x54271);           /* call 0x100cdefa */
    II(0x10079c89, 0x6)   mov(memd_a32(ss, ebp - 0x110), eax);  /* mov [ebp+0xfffffef0], eax */
//    II(0x10079c8f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x110));  /* mov eax, [ebp+0xfffffef0] */
    II(0x10079c95, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10079c98, 0x4)   cmp(ax, memw_a32(ds, edx + 0x8));     /* cmp ax, [edx+0x8] */
    II(0x10079c9c, 0x2)   jzd(0x10079cb5, 0x17);                /* jz 0x10079cb5 */
    II(0x10079c9e, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x110)); /* movsx eax, word [ebp+0xfffffef0] */
    II(0x10079ca5, 0x5)   calld(0x100cdefa, 0x54250);           /* call 0x100cdefa */
    II(0x10079caa, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10079cac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079caf, 0x4)   cmp(dx, memw_a32(ds, eax + 0x8));     /* cmp dx, [eax+0x8] */
    II(0x10079cb3, 0x2)   jnzd(0x10079cb7, 0x2);                /* jnz 0x10079cb7 */
l_0x10079cb5:
    II(0x10079cb5, 0x2)   jmpd(0x10079ccc, 0x15);               /* jmp 0x10079ccc */
l_0x10079cb7:
    II(0x10079cb7, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x10c)); /* movsx edx, word [ebp+0xfffffef4] */
    II(0x10079cbe, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10079cc1, 0x5)   calld(0x1008a3dc, 0x10716);           /* call 0x1008a3dc */
    II(0x10079cc6, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
l_0x10079ccc:
    II(0x10079ccc, 0x4)   cmp(memb_a32(ss, ebp - 0x44), 0);     /* cmp byte [ebp-0x44], 0x0 */
    II(0x10079cd0, 0x2)   jzd(0x10079cf2, 0x20);                /* jz 0x10079cf2 */
    II(0x10079cd2, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x10c)); /* movsx edx, word [ebp+0xfffffef4] */
    II(0x10079cd9, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10079cdc, 0x5)   calld(0x1008a3dc, 0x106fb);           /* call 0x1008a3dc */
    II(0x10079ce1, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10079ce4, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10079ce7, 0x9)   test(memw_a32(ds, eax + 0x101c81c0), 0x1c0); /* test word [eax+0x101c81c0], 0x1c0 */
    II(0x10079cf0, 0x2)   jnzd(0x10079cf4, 0x2);                /* jnz 0x10079cf4 */
l_0x10079cf2:
    II(0x10079cf2, 0x2)   jmpd(0x10079d1c, 0x28);               /* jmp 0x10079d1c */
l_0x10079cf4:
    II(0x10079cf4, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x10c)); /* movsx edx, word [ebp+0xfffffef4] */
    II(0x10079cfb, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10079cfe, 0x5)   calld(0x1008a3dc, 0x106d9);           /* call 0x1008a3dc */
    II(0x10079d03, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10079d06, 0x5)   calld(0x100cdefa, 0x541ef);           /* call 0x100cdefa */
    II(0x10079d0b, 0x1)   cwde();                               /* cwde */
    II(0x10079d0c, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10079d0e, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x106)); /* mov eax, [eax+ebp+0xfffffefa] */
    II(0x10079d15, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10079d18, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10079d1a, 0x2)   jgd(0x10079d1e, 0x2);                 /* jg 0x10079d1e */
l_0x10079d1c:
    II(0x10079d1c, 0x2)   jmpd(0x10079d33, 0x15);               /* jmp 0x10079d33 */
l_0x10079d1e:
    II(0x10079d1e, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x10c)); /* movsx edx, word [ebp+0xfffffef4] */
    II(0x10079d25, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10079d28, 0x5)   calld(0x1008a3dc, 0x106af);           /* call 0x1008a3dc */
    II(0x10079d2d, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
l_0x10079d33:
    II(0x10079d33, 0x5)   jmpd(0x10079c51, -0xe7);              /* jmp 0x10079c51 */
l_0x10079d38:
    II(0x10079d38, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10079d3b, 0x5)   calld(0x100b870a, 0x3e9ca);           /* call 0x100b870a */
    II(0x10079d40, 0x6)   mov(memd_a32(ss, ebp - 0x110), eax);  /* mov [ebp+0xfffffef0], eax */
    II(0x10079d46, 0x8)   cmp(memw_a32(ss, ebp - 0x110), -0x1 /* 0xff */); /* cmp word [ebp+0xfffffef0], 0xff */
    II(0x10079d4e, 0x2)   jzd(0x10079db5, 0x65);                /* jz 0x10079db5 */
    II(0x10079d50, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x110)); /* movsx eax, word [ebp+0xfffffef0] */
    II(0x10079d57, 0x5)   calld(0x100cdefa, 0x5419e);           /* call 0x100cdefa */
    II(0x10079d5c, 0x6)   mov(memd_a32(ss, ebp - 0x114), eax);  /* mov [ebp+0xfffffeec], eax */
//    II(0x10079d62, 0x6)   mov(eax, memd_a32(ss, ebp - 0x114));  /* mov eax, [ebp+0xfffffeec] */
    II(0x10079d68, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10079d6b, 0x4)   cmp(ax, memw_a32(ds, edx + 0x8));     /* cmp ax, [edx+0x8] */
    II(0x10079d6f, 0x2)   jzd(0x10079d7d, 0xc);                 /* jz 0x10079d7d */
    II(0x10079d71, 0x6)   mov(eax, memd_a32(ss, ebp - 0x114));  /* mov eax, [ebp+0xfffffeec] */
    II(0x10079d77, 0x6)   mov(memd_a32(ss, ebp - 0x110), eax);  /* mov [ebp+0xfffffef0], eax */
l_0x10079d7d:
    II(0x10079d7d, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x10079d80, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10079d83, 0x3)   add(edx, 0x1d);                       /* add edx, 0x1d */
    II(0x10079d86, 0x6)   lea(eax, ebp - 0x118);                /* lea eax, [ebp+0xfffffee8] */
    II(0x10079d8c, 0x5)   calld(0x10075e64, -0x3f2d);           /* call 0x10075e64 */
    II(0x10079d91, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10079d93, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x110)); /* movsx edx, word [ebp+0xfffffef0] */
    II(0x10079d9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10079d9d, 0x3)   mov(esi, memd_a32(ds, eax + 0x7));    /* mov esi, [eax+0x7] */
    II(0x10079da0, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x10079da3, 0x6)   imul(esi, esi, 0xc5);                 /* imul esi, esi, 0xc5 */
    II(0x10079da9, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x10079dae, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x10079db0, 0x5)   calld(0x100be5c2, 0x4480d);           /* call 0x100be5c2 */
l_0x10079db5:
    II(0x10079db5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079db7, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10079dba, 0x5)   calld(0x10075f6c, -0x3e53);           /* call 0x10075f6c */
    II(0x10079dbf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079dc1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10079dc4, 0x5)   calld(0x10088dcc, 0xf003);            /* call 0x10088dcc */
l_0x10079dc9:
    II(0x10079dc9, 0x5)   jmpd(0x10079fe9, 0x21b);              /* jmp 0x10079fe9 */
l_0x10079dce:
    II(0x10079dce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079dd1, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x10079dd4, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10079dd9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10079ddb, 0x2)   jnzd(0x10079df8, 0x1b);               /* jnz 0x10079df8 */
    II(0x10079ddd, 0x5)   calld(0x1008a79c, 0x109ba);           /* call 0x1008a79c */
    II(0x10079de2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10079de4, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10079de6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10079de9, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10079dee, 0x5)   calld(0x100a53ac, 0x2b5b9);           /* call 0x100a53ac */
    II(0x10079df3, 0x5)   jmpd(0x10079fe9, 0x1f1);              /* jmp 0x10079fe9 */
l_0x10079df8:
    II(0x10079df8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10079dfb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10079dfe, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x10079e01, 0x5)   calld(0x1008ab1c, 0x10d16);           /* call 0x1008ab1c */
    II(0x10079e06, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10079e09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079e0c, 0x5)   calld(0x101527ed, 0xd89dc);           /* call 0x101527ed */
    II(0x10079e11, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10079e16, 0x5)   calld(0x1008a768, 0x1094d);           /* call 0x1008a768 */
    II(0x10079e1b, 0x6)   lea(ebx, ebp - 0x11c);                /* lea ebx, [ebp+0xfffffee4] */
    II(0x10079e21, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10079e23, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10079e25, 0x5)   calld(0x1008ae70, 0x11046);           /* call 0x1008ae70 */
    II(0x10079e2a, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10079e2e, 0x6)   lea(eax, ebp - 0x120);                /* lea eax, [ebp+0xfffffee0] */
    II(0x10079e34, 0x5)   calld(my_ctor_0x101b3b58, 0x1126b);   /* call 0x1008b0a4 */
    II(0x10079e39, 0x6)   mov(memd_a32(ss, ebp - 0x124), eax);  /* mov [ebp+0xfffffedc], eax */
    II(0x10079e3f, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10079e43, 0x2)   jmpd(0x10079e50, 0xb);                /* jmp 0x10079e50 */
l_0x10079e45:
    II(0x10079e45, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10079e4b, 0x5)   calld(0x10076bf8, -0x3258);           /* call 0x10076bf8 */
l_0x10079e50:
    II(0x10079e50, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079e52, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10079e58, 0x5)   calld(0x1013ad71, 0xc0f14);           /* call 0x1013ad71 */
    II(0x10079e5d, 0x2)   test(al, al);                         /* test al, al */
    II(0x10079e5f, 0x6)   jzd(0x10079f90, 0x12b);               /* jz dword 0x10079f90 */
    II(0x10079e65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079e68, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079e6a, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10079e6d, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10079e73, 0x5)   calld(0x1008adc4, 0x10f4c);           /* call 0x1008adc4 */
    II(0x10079e78, 0x5)   calld(0x1008ad90, 0x10f13);           /* call 0x1008ad90 */
    II(0x10079e7d, 0x1)   cwde();                               /* cwde */
    II(0x10079e7e, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10079e80, 0x2)   jnzd(0x10079ea9, 0x27);               /* jnz 0x10079ea9 */
    II(0x10079e82, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10079e88, 0x5)   calld(0x1008adc4, 0x10f37);           /* call 0x1008adc4 */
    II(0x10079e8d, 0x6)   mov(memd_a32(ss, ebp - 0x128), eax);  /* mov [ebp+0xfffffed8], eax */
//    II(0x10079e93, 0x6)   mov(eax, memd_a32(ss, ebp - 0x128));  /* mov eax, [ebp+0xfffffed8] */
    II(0x10079e99, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10079e9c, 0x6)   mov(eax, memd_a32(ss, ebp - 0x128));  /* mov eax, [ebp+0xfffffed8] */
    II(0x10079ea2, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x10079ea5, 0x2)   cmp(al, 0x3);                         /* cmp al, 0x3 */
    II(0x10079ea7, 0x2)   jnzd(0x10079eab, 0x2);                /* jnz 0x10079eab */
l_0x10079ea9:
    II(0x10079ea9, 0x2)   jmpd(0x10079ed5, 0x2a);               /* jmp 0x10079ed5 */
l_0x10079eab:
    II(0x10079eab, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10079eb1, 0x5)   calld(0x1008adc4, 0x10f0e);           /* call 0x1008adc4 */
    II(0x10079eb6, 0x6)   mov(memd_a32(ss, ebp - 0x12c), eax);  /* mov [ebp+0xfffffed4], eax */
//    II(0x10079ebc, 0x6)   mov(eax, memd_a32(ss, ebp - 0x12c));  /* mov eax, [ebp+0xfffffed4] */
    II(0x10079ec2, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10079ec5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x10079ec8, 0x6)   mov(eax, memd_a32(ss, ebp - 0x12c));  /* mov eax, [ebp+0xfffffed4] */
    II(0x10079ece, 0x3)   calld_abs(memd_a32(ds, ebx + 0x8));   /* call dword near [ebx+0x8] */
    II(0x10079ed1, 0x2)   test(al, al);                         /* test al, al */
    II(0x10079ed3, 0x2)   jnzd(0x10079eda, 0x5);                /* jnz 0x10079eda */
l_0x10079ed5:
    II(0x10079ed5, 0x5)   jmpd(0x10079f8b, 0xb1);               /* jmp 0x10079f8b */
l_0x10079eda:
    II(0x10079eda, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10079ee0, 0x5)   calld(0x1008adc4, 0x10edf);           /* call 0x1008adc4 */
    II(0x10079ee5, 0x6)   mov(memd_a32(ss, ebp - 0x130), eax);  /* mov [ebp+0xfffffed0], eax */
//    II(0x10079eeb, 0x6)   mov(eax, memd_a32(ss, ebp - 0x130));  /* mov eax, [ebp+0xfffffed0] */
    II(0x10079ef1, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10079ef4, 0x6)   lea(edx, ebp - 0x140);                /* lea edx, [ebp+0xfffffec0] */
    II(0x10079efa, 0x6)   mov(eax, memd_a32(ss, ebp - 0x130));  /* mov eax, [ebp+0xfffffed0] */
    II(0x10079f00, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x10079f03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079f06, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x10079f0a, 0x6)   sub(edx, memd_a32(ss, ebp - 0x13c));  /* sub edx, [ebp+0xfffffec4] */
    II(0x10079f10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079f13, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x10079f17, 0x6)   sub(eax, memd_a32(ss, ebp - 0x13c));  /* sub eax, [ebp+0xfffffec4] */
    II(0x10079f1d, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10079f20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079f23, 0x4)   mov(bx, memw_a32(ds, eax + 0x1a));    /* mov bx, [eax+0x1a] */
    II(0x10079f27, 0x6)   sub(ebx, memd_a32(ss, ebp - 0x140));  /* sub ebx, [ebp+0xfffffec0] */
    II(0x10079f2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079f30, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x10079f34, 0x6)   sub(eax, memd_a32(ss, ebp - 0x140));  /* sub eax, [ebp+0xfffffec0] */
    II(0x10079f3a, 0x3)   imul(eax, ebx);                       /* imul eax, ebx */
    II(0x10079f3d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10079f3f, 0x6)   mov(memd_a32(ss, ebp - 0x144), eax);  /* mov [ebp+0xfffffebc], eax */
    II(0x10079f45, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079f47, 0x6)   lea(eax, ebp - 0x120);                /* lea eax, [ebp+0xfffffee0] */
    II(0x10079f4d, 0x5)   calld(0x1013ad11, 0xc0dbf);           /* call 0x1013ad11 */
    II(0x10079f52, 0x2)   test(al, al);                         /* test al, al */
    II(0x10079f54, 0x2)   jnzd(0x10079f65, 0xf);                /* jnz 0x10079f65 */
    II(0x10079f56, 0x6)   mov(eax, memd_a32(ss, ebp - 0x144));  /* mov eax, [ebp+0xfffffebc] */
    II(0x10079f5c, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x148));   /* cmp ax, [ebp+0xfffffeb8] */
    II(0x10079f63, 0x2)   jged(0x10079f8b, 0x26);               /* jge 0x10079f8b */
l_0x10079f65:
    II(0x10079f65, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10079f6b, 0x5)   calld(0x1008adf8, 0x10e88);           /* call 0x1008adf8 */
    II(0x10079f70, 0x6)   lea(ebx, ebp - 0x120);                /* lea ebx, [ebp+0xfffffee0] */
    II(0x10079f76, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10079f78, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10079f7a, 0x5)   calld(0x1008afe4, 0x11065);           /* call 0x1008afe4 */
    II(0x10079f7f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x144));  /* mov eax, [ebp+0xfffffebc] */
    II(0x10079f85, 0x6)   mov(memd_a32(ss, ebp - 0x148), eax);  /* mov [ebp+0xfffffeb8], eax */
l_0x10079f8b:
    II(0x10079f8b, 0x5)   jmpd(0x10079e45, -0x14b);             /* jmp 0x10079e45 */
l_0x10079f90:
    II(0x10079f90, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079f92, 0x6)   lea(eax, ebp - 0x120);                /* lea eax, [ebp+0xfffffee0] */
    II(0x10079f98, 0x5)   calld(0x1013ad71, 0xc0dd4);           /* call 0x1013ad71 */
    II(0x10079f9d, 0x2)   test(al, al);                         /* test al, al */
    II(0x10079f9f, 0x2)   jzd(0x10079fcf, 0x2e);                /* jz 0x10079fcf */
    II(0x10079fa1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10079fa4, 0x5)   calld(0x1015287d, 0xd88d4);           /* call 0x1015287d */
    II(0x10079fa9, 0x6)   lea(eax, ebp - 0x120);                /* lea eax, [ebp+0xfffffee0] */
    II(0x10079faf, 0x5)   calld(0x1008af28, 0x10f74);           /* call 0x1008af28 */
    II(0x10079fb4, 0x6)   mov(memd_a32(ss, ebp - 0x14c), eax);  /* mov [ebp+0xfffffeb4], eax */
//    II(0x10079fba, 0x6)   mov(eax, memd_a32(ss, ebp - 0x14c));  /* mov eax, [ebp+0xfffffeb4] */
    II(0x10079fc0, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10079fc3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x10079fc6, 0x6)   mov(eax, memd_a32(ss, ebp - 0x14c));  /* mov eax, [ebp+0xfffffeb4] */
    II(0x10079fcc, 0x3)   calld_abs(memd_a32(ds, ebx + 0x2c));  /* call dword near [ebx+0x2c] */
l_0x10079fcf:
    II(0x10079fcf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079fd1, 0x6)   lea(eax, ebp - 0x120);                /* lea eax, [ebp+0xfffffee0] */
    II(0x10079fd7, 0x5)   calld(0x10088b7c, 0xeba0);            /* call 0x10088b7c */
    II(0x10079fdc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10079fde, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x10079fe4, 0x5)   calld(0x10088bbc, 0xebd3);            /* call 0x10088bbc */
l_0x10079fe9:
    II(0x10079fe9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10079feb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10079fec, 0x1)   popd(edi);                            /* pop edi */
    II(0x10079fed, 0x1)   popd(esi);                            /* pop esi */
    II(0x10079fee, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10079fef, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10079ff0, 0x1)   retd();                               /* ret */
FUNC_END

