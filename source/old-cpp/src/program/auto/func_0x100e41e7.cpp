FUNC_BEGIN(0x100e41e7, 0x7e99189746cf5cda, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x61, 0x1b, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1c, 0xe8, 0x29, 0x21, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0x9f, 0x22, 0xf9, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0xa3, 0xfd, 0xff, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x26, 0x7d, 0xa, 0x8d, 0x45, 0xf4, 0xe8, 0xb4, 0x29, 0xf9, 0xff, 0xeb, 0xe4, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x28, 0x7d, 0x54, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xa6, 0x6a, 0x5, 0, 0x84, 0xc0, 0x74, 0x1b, 0x31, 0xdb, 0x8a, 0x5d, 0xfc, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x2c, 0xe8, 0x2e, 0xd3, 0xff, 0xff, 0xeb, 0x29, 0x31, 0xdb, 0x8a, 0x5d, 0xfc, 0x8d, 0x45, 0xf4, 0xe8, 0x3d, 0x21, 0xf9, 0xff, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x2c, 0xe8, 0xb, 0xd3, 0xff, 0xff, 0x8d, 0x45, 0xf4, 0xe8, 0x45, 0x29, 0xf9, 0xff, 0xeb, 0x9a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x28, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0xd, 0x31, 0xd2, 0x8a, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x36, 0xfb, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x93, 0x1c, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100e41e7, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100e41ec, 0x5)   calld(sys_check_available_stack_size, 0x81b61); /* call 0x10165d52 */
    II(0x100e41f1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e41f2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e41f3, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e41f4, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e41f5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e41f6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e41f8, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100e41fe, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e4201, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100e4204, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e4207, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x100e420a, 0x5)   calld(0x10076338, -0x6ded7);          /* call 0x10076338 */
    II(0x100e420f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e4211, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e4214, 0x5)   calld(0x100764b8, -0x6dd61);          /* call 0x100764b8 */
    II(0x100e4219, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e421c, 0x5)   calld(0x100e3fc4, -0x25d);            /* call 0x100e3fc4 */
    II(0x100e4221, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100e4228, 0x2)   jmpd(0x100e4230, 0x6);                /* jmp 0x100e4230 */
l_0x100e422a:
    II(0x100e422a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e422d, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100e4230:
    II(0x100e4230, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4233, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e4236, 0x4)   cmp(ax, memw_a32(ds, edx + 0x26));    /* cmp ax, [edx+0x26] */
    II(0x100e423a, 0x2)   jged(0x100e4246, 0xa);                /* jge 0x100e4246 */
    II(0x100e423c, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e423f, 0x5)   calld(0x10076bf8, -0x6d64c);          /* call 0x10076bf8 */
    II(0x100e4244, 0x2)   jmpd(0x100e422a, -0x1c);              /* jmp 0x100e422a */
l_0x100e4246:
    II(0x100e4246, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100e424d, 0x2)   jmpd(0x100e4255, 0x6);                /* jmp 0x100e4255 */
l_0x100e424f:
    II(0x100e424f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4252, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100e4255:
    II(0x100e4255, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4258, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e425b, 0x4)   cmp(ax, memw_a32(ds, edx + 0x28));    /* cmp ax, [edx+0x28] */
    II(0x100e425f, 0x2)   jged(0x100e42b5, 0x54);               /* jge 0x100e42b5 */
    II(0x100e4261, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e4263, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e4266, 0x5)   calld(0x1013ad11, 0x56aa6);           /* call 0x1013ad11 */
    II(0x100e426b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e426d, 0x2)   jzd(0x100e428a, 0x1b);                /* jz 0x100e428a */
    II(0x100e426f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e4271, 0x3)   mov(bl, memb_a32(ss, ebp - 0x4));     /* mov bl, [ebp-0x4] */
    II(0x100e4274, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e4276, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100e427a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e427d, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100e4280, 0x3)   mov(eax, memd_a32(ds, eax + 0x2c));   /* mov eax, [eax+0x2c] */
    II(0x100e4283, 0x5)   calld(0x100e15b6, -0x2cd2);           /* call 0x100e15b6 */
    II(0x100e4288, 0x2)   jmpd(0x100e42b3, 0x29);               /* jmp 0x100e42b3 */
l_0x100e428a:
    II(0x100e428a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e428c, 0x3)   mov(bl, memb_a32(ss, ebp - 0x4));     /* mov bl, [ebp-0x4] */
    II(0x100e428f, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e4292, 0x5)   calld(0x100763d4, -0x6dec3);          /* call 0x100763d4 */
    II(0x100e4297, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e4299, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100e429d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e42a0, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100e42a3, 0x3)   mov(eax, memd_a32(ds, eax + 0x2c));   /* mov eax, [eax+0x2c] */
    II(0x100e42a6, 0x5)   calld(0x100e15b6, -0x2cf5);           /* call 0x100e15b6 */
    II(0x100e42ab, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e42ae, 0x5)   calld(0x10076bf8, -0x6d6bb);          /* call 0x10076bf8 */
l_0x100e42b3:
    II(0x100e42b3, 0x2)   jmpd(0x100e424f, -0x66);              /* jmp 0x100e424f */
l_0x100e42b5:
    II(0x100e42b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e42b8, 0x3)   mov(eax, memd_a32(ds, eax + 0x28));   /* mov eax, [eax+0x28] */
    II(0x100e42bb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e42be, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e42c0, 0x2)   jled(0x100e42cf, 0xd);                /* jle 0x100e42cf */
    II(0x100e42c2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e42c4, 0x3)   mov(dl, memb_a32(ss, ebp - 0x4));     /* mov dl, [ebp-0x4] */
    II(0x100e42c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e42ca, 0x5)   calld(0x100e3e05, -0x4ca);            /* call 0x100e3e05 */
l_0x100e42cf:
    II(0x100e42cf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e42d1, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100e42d4, 0x5)   calld(0x10075f6c, -0x6e36d);          /* call 0x10075f6c */
    II(0x100e42d9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e42db, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e42dc, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e42dd, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e42de, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e42df, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e42e0, 0x1)   retd();                               /* ret */
FUNC_END

