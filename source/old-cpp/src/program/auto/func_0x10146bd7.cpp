FUNC_BEGIN(0x10146bd7, 0xed2afe9d9e81e938, 0x20, ({0x68, 0x70, 0, 0, 0, 0xe8, 0x71, 0xf1, 0x1, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0xe6, 0xae, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf0, 0xfe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x12, 0x8d, 0x45, 0xd0, 0xe8, 0xd9, 0xb, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0xc3, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x23, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0x17, 0x13, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xd5, 0x30, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xe9, 0xae, 0xff, 0xff, 0xe9, 0x5d, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0x22, 0xf, 0x85, 0xc5, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0xc7, 0xfa, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0x22, 0x74, 0x9, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0xff, 0x75, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0xa, 0x75, 0x2, 0xeb, 0x1a, 0x8b, 0x45, 0xf4, 0x31, 0xd2, 0x8a, 0x50, 0x1c, 0x8d, 0x45, 0xdc, 0xe8, 0x60, 0xb1, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xe8, 0x90, 0xfa, 0xff, 0xff, 0xeb, 0xc7, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0x22, 0x75, 0xa, 0x8b, 0x45, 0xf4, 0xe8, 0x7d, 0xfa, 0xff, 0xff, 0xeb, 0x12, 0xb8, 0x65, 0xd0, 0x1a, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0xb7, 0xfd, 0xff, 0xff, 0x83, 0xc4, 0x8, 0xb8, 0x18, 0, 0, 0, 0xe8, 0x3d, 0xf1, 0x1, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x1c, 0x8d, 0x4d, 0xdc, 0x8d, 0x5d, 0xd0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xcc, 0xe8, 0x4c, 0xe7, 0xff, 0xff, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc0, 0x8b, 0x55, 0xc0, 0x8b, 0x45, 0xf8, 0xe8, 0x45, 0x12, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x3, 0x30, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x17, 0xae, 0xff, 0xff, 0xe9, 0x8b, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x1c, 0xfe, 0xc0, 0x25, 0xff, 0, 0, 0, 0xf6, 0x80, 0xc0, 0x75, 0x1b, 0x10, 0xc0, 0xf, 0x84, 0x80, 0, 0, 0, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xf4, 0xe8, 0xfb, 0xfd, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x12, 0xb8, 0x82, 0xd0, 0x1a, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0x1d, 0xfd, 0xff, 0xff, 0x83, 0xc4, 0x8, 0xb8, 0x18, 0, 0, 0, 0xe8, 0xa3, 0xf0, 0x1, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0x83, 0x7d, 0xb8, 0, 0x74, 0x1c, 0x8d, 0x4d, 0xdc, 0x8d, 0x5d, 0xd0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xbc, 0xe8, 0x5e, 0xe7, 0xff, 0xff, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0xeb, 0x6, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xb0, 0x8b, 0x55, 0xb0, 0x8b, 0x45, 0xf8, 0xe8, 0xab, 0x11, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x69, 0x2f, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x7d, 0xad, 0xff, 0xff, 0xe9, 0xf1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0x2d, 0x75, 0x18, 0x8b, 0x45, 0xf4, 0x31, 0xd2, 0x8a, 0x50, 0x1c, 0x8d, 0x45, 0xdc, 0xe8, 0x1f, 0xb0, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xe8, 0x4f, 0xf9, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0x30, 0x7c, 0x9, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0x39, 0x7e, 0x12, 0xb8, 0x93, 0xd0, 0x1a, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0xc1, 0xfb, 0xff, 0xff, 0x83, 0xc4, 0x8, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0x30, 0x7c, 0x9, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0x1c, 0x39, 0x7e, 0x2, 0xeb, 0x1a, 0x8b, 0x45, 0xf4, 0x31, 0xd2, 0x8a, 0x50, 0x1c, 0x8d, 0x45, 0xdc, 0xe8, 0xcf, 0xaf, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xe8, 0xff, 0xf8, 0xff, 0xff, 0xeb, 0xd2, 0xb8, 0x18, 0, 0, 0, 0xe8, 0xd1, 0xef, 0x1, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x2a, 0x8d, 0x45, 0xdc, 0xe8, 0x82, 0x29, 0xf4, 0xff, 0xe8, 0x83, 0x22, 0x3, 0, 0x8d, 0x5d, 0xd0, 0x8b, 0x55, 0xfc, 0x8b, 0x75, 0xec, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0x48, 0xe5, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xac, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xac, 0x8b, 0x55, 0xac, 0x8b, 0x45, 0xf8, 0xe8, 0xcb, 0x10, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x89, 0x2e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x9d, 0xac, 0xff, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x73, 0x2e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x87, 0xac, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10146bd7, 0x5)   pushd(0x70);                          /* push dword 0x70 */
    II(0x10146bdc, 0x5)   calld(sys_check_available_stack_size, 0x1f171); /* call 0x10165d52 */
    II(0x10146be1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10146be2, 0x1)   pushd(esi);                           /* push esi */
    II(0x10146be3, 0x1)   pushd(edi);                           /* push edi */
    II(0x10146be4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10146be5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10146be7, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x10146bed, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10146bf0, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10146bf3, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10146bf6, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x10146bfa, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10146bfd, 0x5)   calld(my_string_ctor, -0x511a);       /* call 0x10141ae8 */
    II(0x10146c02, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10146c05, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x10146c09, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10146c0c, 0x3)   add(edx, 0x12);                       /* add edx, 0x12 */
    II(0x10146c0f, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10146c12, 0x5)   calld(0x101477f0, 0xbd9);             /* call 0x101477f0 */
    II(0x10146c17, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146c1a, 0x5)   calld(0x101468e2, -0x33d);            /* call 0x101468e2 */
    II(0x10146c1f, 0x2)   test(al, al);                         /* test al, al */
    II(0x10146c21, 0x2)   jnzd(0x10146c46, 0x23);               /* jnz 0x10146c46 */
    II(0x10146c23, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146c25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10146c28, 0x5)   calld(0x10147f44, 0x1317);            /* call 0x10147f44 */
    II(0x10146c2d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146c2f, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10146c32, 0x5)   calld(0x10139d0c, -0xcf2b);           /* call 0x10139d0c */
    II(0x10146c37, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146c39, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10146c3c, 0x5)   calld(my_string_dtor, -0x5117);       /* call 0x10141b2a */
    II(0x10146c41, 0x5)   jmpd(0x10146ea3, 0x25d);              /* jmp 0x10146ea3 */
l_0x10146c46:
    II(0x10146c46, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146c49, 0x4)   cmp(memd_a32(ds, eax + 0x1c), 0x22);  /* cmp dword [eax+0x1c], 0x22 */
    II(0x10146c4d, 0x6)   jnzd(0x10146d18, 0xc5);               /* jnz dword 0x10146d18 */
    II(0x10146c53, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146c56, 0x5)   calld(0x10146722, -0x539);            /* call 0x10146722 */
l_0x10146c5b:
    II(0x10146c5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146c5e, 0x4)   cmp(memd_a32(ds, eax + 0x1c), 0x22);  /* cmp dword [eax+0x1c], 0x22 */
    II(0x10146c62, 0x2)   jzd(0x10146c6d, 0x9);                 /* jz 0x10146c6d */
    II(0x10146c64, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146c67, 0x4)   cmp(memd_a32(ds, eax + 0x1c), -0x1 /* 0xff */); /* cmp dword [eax+0x1c], 0xff */
    II(0x10146c6b, 0x2)   jnzd(0x10146c6f, 0x2);                /* jnz 0x10146c6f */
l_0x10146c6d:
    II(0x10146c6d, 0x2)   jmpd(0x10146c78, 0x9);                /* jmp 0x10146c78 */
l_0x10146c6f:
    II(0x10146c6f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146c72, 0x4)   cmp(memd_a32(ds, eax + 0x1c), 0xa);   /* cmp dword [eax+0x1c], 0xa */
    II(0x10146c76, 0x2)   jnzd(0x10146c7a, 0x2);                /* jnz 0x10146c7a */
l_0x10146c78:
    II(0x10146c78, 0x2)   jmpd(0x10146c94, 0x1a);               /* jmp 0x10146c94 */
l_0x10146c7a:
    II(0x10146c7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146c7d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146c7f, 0x3)   mov(dl, memb_a32(ds, eax + 0x1c));    /* mov dl, [eax+0x1c] */
    II(0x10146c82, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10146c85, 0x5)   calld(my_string_append_char, -0x4ea0); /* call 0x10141dea */
    II(0x10146c8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146c8d, 0x5)   calld(0x10146722, -0x570);            /* call 0x10146722 */
    II(0x10146c92, 0x2)   jmpd(0x10146c5b, -0x39);              /* jmp 0x10146c5b */
l_0x10146c94:
    II(0x10146c94, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146c97, 0x4)   cmp(memd_a32(ds, eax + 0x1c), 0x22);  /* cmp dword [eax+0x1c], 0x22 */
    II(0x10146c9b, 0x2)   jnzd(0x10146ca7, 0xa);                /* jnz 0x10146ca7 */
    II(0x10146c9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146ca0, 0x5)   calld(0x10146722, -0x583);            /* call 0x10146722 */
    II(0x10146ca5, 0x2)   jmpd(0x10146cb9, 0x12);               /* jmp 0x10146cb9 */
l_0x10146ca7:
    II(0x10146ca7, 0x5)   mov(eax, 0x101ad065);                 /* mov eax, 0x101ad065 */ /* "Expecting an end quote ('"')" */
    II(0x10146cac, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146cad, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146cb0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146cb1, 0x5)   calld(0x10146a6d, -0x249);            /* call 0x10146a6d */
    II(0x10146cb6, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
l_0x10146cb9:
    II(0x10146cb9, 0x5)   mov(eax, 0x18);                       /* mov eax, 0x18 */
    II(0x10146cbe, 0x5)   calld(sys_new, 0x1f13d);              /* call 0x10165e00 */
    II(0x10146cc3, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x10146cc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10146cc9, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10146ccc, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x10146cd0, 0x2)   jzd(0x10146cee, 0x1c);                /* jz 0x10146cee */
    II(0x10146cd2, 0x3)   lea(ecx, ebp - 0x24);                 /* lea ecx, [ebp-0x24] */
    II(0x10146cd5, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x10146cd8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10146cdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10146cde, 0x5)   calld(0x1014542f, -0x18b4);           /* call 0x1014542f */
    II(0x10146ce3, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x10146ce6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10146ce9, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x10146cec, 0x2)   jmpd(0x10146cf4, 0x6);                /* jmp 0x10146cf4 */
l_0x10146cee:
    II(0x10146cee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10146cf1, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x10146cf4:
    II(0x10146cf4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x10146cf7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10146cfa, 0x5)   calld(0x10147f44, 0x1245);            /* call 0x10147f44 */
    II(0x10146cff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146d01, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10146d04, 0x5)   calld(0x10139d0c, -0xcffd);           /* call 0x10139d0c */
    II(0x10146d09, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146d0b, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10146d0e, 0x5)   calld(my_string_dtor, -0x51e9);       /* call 0x10141b2a */
    II(0x10146d13, 0x5)   jmpd(0x10146ea3, 0x18b);              /* jmp 0x10146ea3 */
l_0x10146d18:
    II(0x10146d18, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146d1b, 0x3)   mov(al, memb_a32(ds, eax + 0x1c));    /* mov al, [eax+0x1c] */
    II(0x10146d1e, 0x2)   inc(al);                              /* inc al */
    II(0x10146d20, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10146d25, 0x7)   test(memb_a32(ds, eax + 0x101b75c0), 0xc0); /* test byte [eax+0x101b75c0], 0xc0 */
    II(0x10146d2c, 0x6)   jzd(0x10146db2, 0x80);                /* jz dword 0x10146db2 */
    II(0x10146d32, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x10146d35, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146d38, 0x5)   calld(0x10146b38, -0x205);            /* call 0x10146b38 */
    II(0x10146d3d, 0x2)   test(al, al);                         /* test al, al */
    II(0x10146d3f, 0x2)   jnzd(0x10146d53, 0x12);               /* jnz 0x10146d53 */
    II(0x10146d41, 0x5)   mov(eax, 0x101ad082);                 /* mov eax, 0x101ad082 */ /* "Expecting a word" */
    II(0x10146d46, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146d47, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146d4a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146d4b, 0x5)   calld(0x10146a6d, -0x2e3);            /* call 0x10146a6d */
    II(0x10146d50, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
l_0x10146d53:
    II(0x10146d53, 0x5)   mov(eax, 0x18);                       /* mov eax, 0x18 */
    II(0x10146d58, 0x5)   calld(sys_new, 0x1f0a3);              /* call 0x10165e00 */
    II(0x10146d5d, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x10146d60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10146d63, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x10146d66, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0);     /* cmp dword [ebp-0x48], 0x0 */
    II(0x10146d6a, 0x2)   jzd(0x10146d88, 0x1c);                /* jz 0x10146d88 */
    II(0x10146d6c, 0x3)   lea(ecx, ebp - 0x24);                 /* lea ecx, [ebp-0x24] */
    II(0x10146d6f, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x10146d72, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10146d75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10146d78, 0x5)   calld(0x101454db, -0x18a2);           /* call 0x101454db */
    II(0x10146d7d, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x10146d80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10146d83, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x10146d86, 0x2)   jmpd(0x10146d8e, 0x6);                /* jmp 0x10146d8e */
l_0x10146d88:
    II(0x10146d88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10146d8b, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
l_0x10146d8e:
    II(0x10146d8e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x50));   /* mov edx, [ebp-0x50] */
    II(0x10146d91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10146d94, 0x5)   calld(0x10147f44, 0x11ab);            /* call 0x10147f44 */
    II(0x10146d99, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146d9b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10146d9e, 0x5)   calld(0x10139d0c, -0xd097);           /* call 0x10139d0c */
    II(0x10146da3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146da5, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10146da8, 0x5)   calld(my_string_dtor, -0x5283);       /* call 0x10141b2a */
    II(0x10146dad, 0x5)   jmpd(0x10146ea3, 0xf1);               /* jmp 0x10146ea3 */
l_0x10146db2:
    II(0x10146db2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146db5, 0x4)   cmp(memd_a32(ds, eax + 0x1c), 0x2d);  /* cmp dword [eax+0x1c], 0x2d */
    II(0x10146db9, 0x2)   jnzd(0x10146dd3, 0x18);               /* jnz 0x10146dd3 */
    II(0x10146dbb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146dbe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146dc0, 0x3)   mov(dl, memb_a32(ds, eax + 0x1c));    /* mov dl, [eax+0x1c] */
    II(0x10146dc3, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10146dc6, 0x5)   calld(my_string_append_char, -0x4fe1); /* call 0x10141dea */
    II(0x10146dcb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146dce, 0x5)   calld(0x10146722, -0x6b1);            /* call 0x10146722 */
l_0x10146dd3:
    II(0x10146dd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146dd6, 0x4)   cmp(memd_a32(ds, eax + 0x1c), 0x30);  /* cmp dword [eax+0x1c], 0x30 */
    II(0x10146dda, 0x2)   jld(0x10146de5, 0x9);                 /* jl 0x10146de5 */
    II(0x10146ddc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146ddf, 0x4)   cmp(memd_a32(ds, eax + 0x1c), 0x39);  /* cmp dword [eax+0x1c], 0x39 */
    II(0x10146de3, 0x2)   jled(0x10146df7, 0x12);               /* jle 0x10146df7 */
l_0x10146de5:
    II(0x10146de5, 0x5)   mov(eax, 0x101ad093);                 /* mov eax, 0x101ad093 */ /* "Expecting a number or string" */
    II(0x10146dea, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146deb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146dee, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146def, 0x5)   calld(0x101469b5, -0x43f);            /* call 0x101469b5 */
    II(0x10146df4, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
l_0x10146df7:
    II(0x10146df7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146dfa, 0x4)   cmp(memd_a32(ds, eax + 0x1c), 0x30);  /* cmp dword [eax+0x1c], 0x30 */
    II(0x10146dfe, 0x2)   jld(0x10146e09, 0x9);                 /* jl 0x10146e09 */
    II(0x10146e00, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146e03, 0x4)   cmp(memd_a32(ds, eax + 0x1c), 0x39);  /* cmp dword [eax+0x1c], 0x39 */
    II(0x10146e07, 0x2)   jled(0x10146e0b, 0x2);                /* jle 0x10146e0b */
l_0x10146e09:
    II(0x10146e09, 0x2)   jmpd(0x10146e25, 0x1a);               /* jmp 0x10146e25 */
l_0x10146e0b:
    II(0x10146e0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146e0e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146e10, 0x3)   mov(dl, memb_a32(ds, eax + 0x1c));    /* mov dl, [eax+0x1c] */
    II(0x10146e13, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10146e16, 0x5)   calld(my_string_append_char, -0x5031); /* call 0x10141dea */
    II(0x10146e1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146e1e, 0x5)   calld(0x10146722, -0x701);            /* call 0x10146722 */
    II(0x10146e23, 0x2)   jmpd(0x10146df7, -0x2e);              /* jmp 0x10146df7 */
l_0x10146e25:
    II(0x10146e25, 0x5)   mov(eax, 0x18);                       /* mov eax, 0x18 */
    II(0x10146e2a, 0x5)   calld(sys_new, 0x1efd1);              /* call 0x10165e00 */
    II(0x10146e2f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x10146e32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10146e35, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10146e38, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x10146e3c, 0x2)   jzd(0x10146e68, 0x2a);                /* jz 0x10146e68 */
    II(0x10146e3e, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10146e41, 0x5)   calld(my_strobj_c_str_v2, -0xbd67e);  /* call 0x100897c8 */
    II(0x10146e46, 0x5)   calld(/* sys */ 0x101790ce, 0x32283); /* call 0x101790ce */
    II(0x10146e4b, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x10146e4e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10146e51, 0x3)   mov(esi, memd_a32(ss, ebp - 0x14));   /* mov esi, [ebp-0x14] */
    II(0x10146e54, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10146e56, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x10146e58, 0x5)   calld(0x101453a5, -0x1ab8);           /* call 0x101453a5 */
    II(0x10146e5d, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x10146e60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10146e63, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x10146e66, 0x2)   jmpd(0x10146e6e, 0x6);                /* jmp 0x10146e6e */
l_0x10146e68:
    II(0x10146e68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10146e6b, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
l_0x10146e6e:
    II(0x10146e6e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x54));   /* mov edx, [ebp-0x54] */
    II(0x10146e71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10146e74, 0x5)   calld(0x10147f44, 0x10cb);            /* call 0x10147f44 */
    II(0x10146e79, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146e7b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10146e7e, 0x5)   calld(0x10139d0c, -0xd177);           /* call 0x10139d0c */
    II(0x10146e83, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146e85, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10146e88, 0x5)   calld(my_string_dtor, -0x5363);       /* call 0x10141b2a */
    II(0x10146e8d, 0x2)   jmpd(0x10146ea3, 0x14);               /* jmp 0x10146ea3 */
//  II(0x10146e8f, 0x14)  /* Недостижимый код. */
l_0x10146ea3:
    II(0x10146ea3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10146ea6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10146ea8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10146ea9, 0x1)   popd(edi);                            /* pop edi */
    II(0x10146eaa, 0x1)   popd(esi);                            /* pop esi */
    II(0x10146eab, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10146eac, 0x1)   retd();                               /* ret */
FUNC_END

