FUNC_BEGIN(0x100780c3, 0xd0ce47460a69d225, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x85, 0xdc, 0xe, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0xf, 0xbe, 0x5d, 0xfc, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xb9, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xc8, 0xe8, 0xd4, 0x87, 0x4, 0, 0x89, 0x45, 0xec, 0x31, 0xc0, 0x8a, 0x45, 0x10, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0xf, 0xbe, 0x4d, 0xfc, 0xf, 0xbf, 0x5d, 0xf8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0xcd, 0xfe, 0xff, 0xff, 0x88, 0x45, 0xe8, 0x8a, 0x45, 0xe8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100780c3, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100780c8, 0x5)   calld(sys_check_available_stack_size, 0xedc85); /* call 0x10165d52 */
    II(0x100780cd, 0x1)   pushd(esi);                           /* push esi */
    II(0x100780ce, 0x1)   pushd(edi);                           /* push edi */
    II(0x100780cf, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100780d0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100780d2, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100780d8, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100780db, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100780de, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100780e1, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x100780e4, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x100780e8, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100780eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100780ee, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100780f1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100780f6, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100780fc, 0x5)   mov(ecx, 0x101c31c4);                 /* mov ecx, 0x101c31c4 */
    II(0x10078101, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x10078103, 0x5)   calld(0x100c08dc, 0x487d4);           /* call 0x100c08dc */
    II(0x10078108, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1007810b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1007810d, 0x3)   mov(al, memb_a32(ss, ebp + 0x10));    /* mov al, [ebp+0x10] */
    II(0x10078110, 0x1)   pushd(eax);                           /* push eax */
    II(0x10078111, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10078115, 0x1)   pushd(eax);                           /* push eax */
    II(0x10078116, 0x4)   movsx(ecx, memb_a32(ss, ebp - 0x4));  /* movsx ecx, byte [ebp-0x4] */
    II(0x1007811a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x1007811e, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10078121, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10078124, 0x5)   calld(0x10077ff6, -0x133);            /* call 0x10077ff6 */
    II(0x10078129, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
//    II(0x1007812c, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x1007812f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10078131, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10078132, 0x1)   popd(edi);                            /* pop edi */
    II(0x10078133, 0x1)   popd(esi);                            /* pop esi */
    II(0x10078134, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

