FUNC_BEGIN(0x100d9f38, 0x2d1b8e0025f9a6f1, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x10, 0xbe, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x49, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0x3d, 0x17, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x83, 0xc8, 0xf9, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xab, 0xc7, 0xf9, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x53, 0xbf, 0xf9, 0xff, 0xe9, 0xa5, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x5b, 0x1, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x7, 0xc8, 0xf9, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x81, 0xc2, 0xcf, 0x1, 0, 0, 0x1, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xed, 0xc7, 0xf9, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x51, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x5d, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x49, 0xc1, 0xf8, 0x10, 0xe8, 0x56, 0x97, 0x5, 0, 0x98, 0x50, 0x8d, 0x45, 0xe8, 0xe8, 0x39, 0xc7, 0xf9, 0xff, 0x83, 0xc0, 0xe, 0x50, 0x8d, 0x45, 0xec, 0xe8, 0x2d, 0xc7, 0xf9, 0xff, 0x8b, 0x48, 0xc, 0xc1, 0xf9, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x1f, 0xc7, 0xf9, 0xff, 0x8b, 0x58, 0xc, 0xc1, 0xfb, 0x10, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x1b, 0xfe, 0xff, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0x4, 0xc7, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x14, 0, 0x74, 0x4e, 0xf, 0xbf, 0x5d, 0xfc, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x49, 0xc1, 0xf8, 0x10, 0xe8, 0xf9, 0x96, 0x5, 0, 0x98, 0x50, 0x8d, 0x45, 0xe8, 0xe8, 0xdc, 0xc6, 0xf9, 0xff, 0x83, 0xc0, 0x14, 0x50, 0x8d, 0x45, 0xec, 0xe8, 0xd0, 0xc6, 0xf9, 0xff, 0x8b, 0x48, 0x12, 0xc1, 0xf9, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0xc2, 0xc6, 0xf9, 0xff, 0x8b, 0x58, 0x12, 0xc1, 0xfb, 0x10, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xbe, 0xfd, 0xff, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xa7, 0xc6, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x12, 0, 0x74, 0x4e, 0xf, 0xbf, 0x5d, 0xfc, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x49, 0xc1, 0xf8, 0x10, 0xe8, 0x9c, 0x96, 0x5, 0, 0x98, 0x50, 0x8d, 0x45, 0xe8, 0xe8, 0x7f, 0xc6, 0xf9, 0xff, 0x83, 0xc0, 0x12, 0x50, 0x8d, 0x45, 0xec, 0xe8, 0x73, 0xc6, 0xf9, 0xff, 0x8b, 0x48, 0x10, 0xc1, 0xf9, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x65, 0xc6, 0xf9, 0xff, 0x8b, 0x58, 0x10, 0xc1, 0xfb, 0x10, 0xba, 0x3, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x61, 0xfd, 0xff, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0x4a, 0xc6, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x1b, 0, 0x74, 0x38, 0x31, 0xc0, 0x50, 0x8d, 0x45, 0xe8, 0xe8, 0x38, 0xc6, 0xf9, 0xff, 0x83, 0xc0, 0x1b, 0x50, 0x8d, 0x45, 0xec, 0xe8, 0x2c, 0xc6, 0xf9, 0xff, 0x8b, 0x48, 0x19, 0xc1, 0xf9, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x1e, 0xc6, 0xf9, 0xff, 0x8b, 0x58, 0x19, 0xc1, 0xfb, 0x10, 0xba, 0x4, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x1a, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xbd, 0xbd, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb3, 0xbd, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xa9, 0xbd, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d9f38, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100d9f3d, 0x5)   calld(sys_check_available_stack_size, 0x8be10); /* call 0x10165d52 */
    II(0x100d9f42, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d9f43, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d9f44, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d9f45, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d9f46, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d9f47, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d9f49, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100d9f4f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d9f52, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100d9f55, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100d9f59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d9f5c, 0x3)   mov(eax, memd_a32(ds, eax + 0x49));   /* mov eax, [eax+0x49] */
    II(0x100d9f5f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d9f62, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100d9f68, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x100d9f6e, 0x5)   calld(0x100cb6b0, -0xe8c3);           /* call 0x100cb6b0 */
    II(0x100d9f73, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d9f75, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100d9f78, 0x5)   calld(0x10076800, -0x6377d);          /* call 0x10076800 */
    II(0x100d9f7d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100d9f80, 0x5)   calld(0x10076730, -0x63855);          /* call 0x10076730 */
    II(0x100d9f85, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100d9f88, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d9f8b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d9f8d, 0x2)   jnzd(0x100d9f9e, 0xf);                /* jnz 0x100d9f9e */
    II(0x100d9f8f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d9f91, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100d9f94, 0x5)   calld(0x10075eec, -0x640ad);          /* call 0x10075eec */
    II(0x100d9f99, 0x5)   jmpd(0x100da143, 0x1a5);              /* jmp 0x100da143 */
l_0x100d9f9e:
    II(0x100d9f9e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100d9fa2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d9fa5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d9fa8, 0x3)   add(edx, 0x5b);                       /* add edx, 0x5b */
    II(0x100d9fab, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d9fad, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100d9fb0, 0x5)   calld(0x100767bc, -0x637f9);          /* call 0x100767bc */
    II(0x100d9fb5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100d9fb9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d9fbc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d9fbf, 0x6)   add(edx, 0x1cf);                      /* add edx, 0x1cf */
    II(0x100d9fc5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d9fc7, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d9fca, 0x5)   calld(0x100767bc, -0x63813);          /* call 0x100767bc */
    II(0x100d9fcf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d9fd2, 0x4)   mov(ax, memw_a32(ds, eax + 0x51));    /* mov ax, [eax+0x51] */
    II(0x100d9fd6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d9fd9, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100d9fdd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d9fdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d9fe2, 0x3)   mov(eax, memd_a32(ds, eax + 0x49));   /* mov eax, [eax+0x49] */
    II(0x100d9fe5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d9fe8, 0x5)   calld(0x10133743, 0x59756);           /* call 0x10133743 */
    II(0x100d9fed, 0x1)   cwde();                               /* cwde */
    II(0x100d9fee, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d9fef, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d9ff2, 0x5)   calld(0x10076730, -0x638c7);          /* call 0x10076730 */
    II(0x100d9ff7, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x100d9ffa, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d9ffb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100d9ffe, 0x5)   calld(0x10076730, -0x638d3);          /* call 0x10076730 */
    II(0x100da003, 0x3)   mov(ecx, memd_a32(ds, eax + 0xc));    /* mov ecx, [eax+0xc] */
    II(0x100da006, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100da009, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100da00c, 0x5)   calld(0x10076730, -0x638e1);          /* call 0x10076730 */
    II(0x100da011, 0x3)   mov(ebx, memd_a32(ds, eax + 0xc));    /* mov ebx, [eax+0xc] */
    II(0x100da014, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100da017, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100da01c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da01f, 0x5)   calld(0x100d9e3f, -0x1e5);            /* call 0x100d9e3f */
    II(0x100da024, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100da027, 0x5)   calld(0x10076730, -0x638fc);          /* call 0x10076730 */
    II(0x100da02c, 0x5)   cmp(memw_a32(ds, eax + 0x14), 0);     /* cmp word [eax+0x14], 0x0 */
    II(0x100da031, 0x2)   jzd(0x100da081, 0x4e);                /* jz 0x100da081 */
    II(0x100da033, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100da037, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100da03c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da03f, 0x3)   mov(eax, memd_a32(ds, eax + 0x49));   /* mov eax, [eax+0x49] */
    II(0x100da042, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100da045, 0x5)   calld(0x10133743, 0x596f9);           /* call 0x10133743 */
    II(0x100da04a, 0x1)   cwde();                               /* cwde */
    II(0x100da04b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da04c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100da04f, 0x5)   calld(0x10076730, -0x63924);          /* call 0x10076730 */
    II(0x100da054, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100da057, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da058, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100da05b, 0x5)   calld(0x10076730, -0x63930);          /* call 0x10076730 */
    II(0x100da060, 0x3)   mov(ecx, memd_a32(ds, eax + 0x12));   /* mov ecx, [eax+0x12] */
    II(0x100da063, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100da066, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100da069, 0x5)   calld(0x10076730, -0x6393e);          /* call 0x10076730 */
    II(0x100da06e, 0x3)   mov(ebx, memd_a32(ds, eax + 0x12));   /* mov ebx, [eax+0x12] */
    II(0x100da071, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100da074, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100da079, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da07c, 0x5)   calld(0x100d9e3f, -0x242);            /* call 0x100d9e3f */
l_0x100da081:
    II(0x100da081, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100da084, 0x5)   calld(0x10076730, -0x63959);          /* call 0x10076730 */
    II(0x100da089, 0x5)   cmp(memw_a32(ds, eax + 0x12), 0);     /* cmp word [eax+0x12], 0x0 */
    II(0x100da08e, 0x2)   jzd(0x100da0de, 0x4e);                /* jz 0x100da0de */
    II(0x100da090, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100da094, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100da099, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da09c, 0x3)   mov(eax, memd_a32(ds, eax + 0x49));   /* mov eax, [eax+0x49] */
    II(0x100da09f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100da0a2, 0x5)   calld(0x10133743, 0x5969c);           /* call 0x10133743 */
    II(0x100da0a7, 0x1)   cwde();                               /* cwde */
    II(0x100da0a8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da0a9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100da0ac, 0x5)   calld(0x10076730, -0x63981);          /* call 0x10076730 */
    II(0x100da0b1, 0x3)   add(eax, 0x12);                       /* add eax, 0x12 */
    II(0x100da0b4, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da0b5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100da0b8, 0x5)   calld(0x10076730, -0x6398d);          /* call 0x10076730 */
    II(0x100da0bd, 0x3)   mov(ecx, memd_a32(ds, eax + 0x10));   /* mov ecx, [eax+0x10] */
    II(0x100da0c0, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100da0c3, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100da0c6, 0x5)   calld(0x10076730, -0x6399b);          /* call 0x10076730 */
    II(0x100da0cb, 0x3)   mov(ebx, memd_a32(ds, eax + 0x10));   /* mov ebx, [eax+0x10] */
    II(0x100da0ce, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100da0d1, 0x5)   mov(edx, 0x3);                        /* mov edx, 0x3 */
    II(0x100da0d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da0d9, 0x5)   calld(0x100d9e3f, -0x29f);            /* call 0x100d9e3f */
l_0x100da0de:
    II(0x100da0de, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100da0e1, 0x5)   calld(0x10076730, -0x639b6);          /* call 0x10076730 */
    II(0x100da0e6, 0x5)   cmp(memw_a32(ds, eax + 0x1b), 0);     /* cmp word [eax+0x1b], 0x0 */
    II(0x100da0eb, 0x2)   jzd(0x100da125, 0x38);                /* jz 0x100da125 */
    II(0x100da0ed, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100da0ef, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da0f0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100da0f3, 0x5)   calld(0x10076730, -0x639c8);          /* call 0x10076730 */
    II(0x100da0f8, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x100da0fb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da0fc, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100da0ff, 0x5)   calld(0x10076730, -0x639d4);          /* call 0x10076730 */
    II(0x100da104, 0x3)   mov(ecx, memd_a32(ds, eax + 0x19));   /* mov ecx, [eax+0x19] */
    II(0x100da107, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100da10a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100da10d, 0x5)   calld(0x10076730, -0x639e2);          /* call 0x10076730 */
    II(0x100da112, 0x3)   mov(ebx, memd_a32(ds, eax + 0x19));   /* mov ebx, [eax+0x19] */
    II(0x100da115, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100da118, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x100da11d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da120, 0x5)   calld(0x100d9e3f, -0x2e6);            /* call 0x100d9e3f */
l_0x100da125:
    II(0x100da125, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100da127, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100da12a, 0x5)   calld(0x10075eec, -0x64243);          /* call 0x10075eec */
    II(0x100da12f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100da131, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100da134, 0x5)   calld(0x10075eec, -0x6424d);          /* call 0x10075eec */
    II(0x100da139, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100da13b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100da13e, 0x5)   calld(0x10075eec, -0x64257);          /* call 0x10075eec */
l_0x100da143:
    II(0x100da143, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100da145, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100da146, 0x1)   popd(edi);                            /* pop edi */
    II(0x100da147, 0x1)   popd(esi);                            /* pop esi */
    II(0x100da148, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100da149, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100da14a, 0x1)   retd();                               /* ret */
FUNC_END

