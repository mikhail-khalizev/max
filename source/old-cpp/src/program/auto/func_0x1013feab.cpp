FUNC_BEGIN(0x1013feab, 0x7d4da6f19aa8f7e9, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x9d, 0x5e, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xf4, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0xc, 0, 0x74, 0x66, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0x10, 0xbb, 0xf3, 0xcd, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xb5, 0xf5, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x69, 0x2, 0, 0, 0x50, 0xb9, 0x69, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0x83, 0xe8, 0x4c, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4c, 0xe8, 0xf7, 0xf6, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x13, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0xa, 0, 0x74, 0x66, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0x10, 0xbb, 0xf9, 0xcd, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0x45, 0xf5, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x6c, 0x2, 0, 0, 0x50, 0xb9, 0x6c, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0x83, 0xe8, 0x4c, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4c, 0xe8, 0x87, 0xf6, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x13, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x17, 0, 0x74, 0x66, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0x10, 0xbb, 0xfe, 0xcd, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xd5, 0xf4, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x15, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x6d, 0x2, 0, 0, 0x50, 0xb9, 0x6d, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0x83, 0xe8, 0x4c, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4c, 0xe8, 0x17, 0xf6, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x13, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x1013feab, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1013feb0, 0x5)   calld(sys_check_available_stack_size, 0x25e9d); /* call 0x10165d52 */
    II(0x1013feb5, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013feb6, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013feb7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013feb8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013feba, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1013fec0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013fec3, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1013fec6, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1013fec9, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x1013fecc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013fecf, 0x5)   cmp(memw_a32(ds, eax + 0xc), 0);      /* cmp word [eax+0xc], 0x0 */
    II(0x1013fed4, 0x2)   jzd(0x1013ff3c, 0x66);                /* jz 0x1013ff3c */
    II(0x1013fed6, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1013fedb, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fedc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013fedf, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x1013fee2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013fee5, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fee6, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x10)); /* movsx ecx, word [ebp+0x10] */
    II(0x1013feea, 0x5)   mov(ebx, 0x101acdf3);                 /* mov ebx, 0x101acdf3 */ /* "Armor" */
    II(0x1013feef, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013fef3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013fef6, 0x5)   calld(0x1013f4b0, -0xa4b);            /* call 0x1013f4b0 */
    II(0x1013fefb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013fefe, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x1013ff01, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013ff04, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ff05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013ff08, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x1013ff0b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013ff0e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ff0f, 0x5)   mov(eax, 0x269);                      /* mov eax, 0x269 */
    II(0x1013ff14, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ff15, 0x5)   mov(ecx, 0x269);                      /* mov ecx, 0x269 */
    II(0x1013ff1a, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1013ff1d, 0x3)   sub(eax, 0x4c);                       /* sub eax, 0x4c */
    II(0x1013ff20, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1013ff23, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013ff27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013ff2a, 0x3)   add(eax, 0x4c);                       /* add eax, 0x4c */
    II(0x1013ff2d, 0x5)   calld(0x1013f629, -0x909);            /* call 0x1013f629 */
    II(0x1013ff32, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013ff36, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x1013ff39, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1013ff3c:
    II(0x1013ff3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013ff3f, 0x5)   cmp(memw_a32(ds, eax + 0xa), 0);      /* cmp word [eax+0xa], 0x0 */
    II(0x1013ff44, 0x2)   jzd(0x1013ffac, 0x66);                /* jz 0x1013ffac */
    II(0x1013ff46, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1013ff4b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ff4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013ff4f, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x1013ff52, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013ff55, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ff56, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x10)); /* movsx ecx, word [ebp+0x10] */
    II(0x1013ff5a, 0x5)   mov(ebx, 0x101acdf9);                 /* mov ebx, 0x101acdf9 */ /* "Hits" */
    II(0x1013ff5f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013ff63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013ff66, 0x5)   calld(0x1013f4b0, -0xabb);            /* call 0x1013f4b0 */
    II(0x1013ff6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013ff6e, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x1013ff71, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013ff74, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ff75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013ff78, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x1013ff7b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013ff7e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ff7f, 0x5)   mov(eax, 0x26c);                      /* mov eax, 0x26c */
    II(0x1013ff84, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ff85, 0x5)   mov(ecx, 0x26c);                      /* mov ecx, 0x26c */
    II(0x1013ff8a, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1013ff8d, 0x3)   sub(eax, 0x4c);                       /* sub eax, 0x4c */
    II(0x1013ff90, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1013ff93, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013ff97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013ff9a, 0x3)   add(eax, 0x4c);                       /* add eax, 0x4c */
    II(0x1013ff9d, 0x5)   calld(0x1013f629, -0x979);            /* call 0x1013f629 */
    II(0x1013ffa2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013ffa6, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x1013ffa9, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1013ffac:
    II(0x1013ffac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013ffaf, 0x5)   cmp(memw_a32(ds, eax + 0x17), 0);     /* cmp word [eax+0x17], 0x0 */
    II(0x1013ffb4, 0x2)   jzd(0x1014001c, 0x66);                /* jz 0x1014001c */
    II(0x1013ffb6, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1013ffbb, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ffbc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013ffbf, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x1013ffc2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013ffc5, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ffc6, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x10)); /* movsx ecx, word [ebp+0x10] */
    II(0x1013ffca, 0x5)   mov(ebx, 0x101acdfe);                 /* mov ebx, 0x101acdfe */ /* "Scan" */
    II(0x1013ffcf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013ffd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013ffd6, 0x5)   calld(0x1013f4b0, -0xb2b);            /* call 0x1013f4b0 */
    II(0x1013ffdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013ffde, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x1013ffe1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013ffe4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ffe5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013ffe8, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x1013ffeb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013ffee, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013ffef, 0x5)   mov(eax, 0x26d);                      /* mov eax, 0x26d */
    II(0x1013fff4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fff5, 0x5)   mov(ecx, 0x26d);                      /* mov ecx, 0x26d */
    II(0x1013fffa, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1013fffd, 0x3)   sub(eax, 0x4c);                       /* sub eax, 0x4c */
    II(0x10140000, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10140003, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10140007, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014000a, 0x3)   add(eax, 0x4c);                       /* add eax, 0x4c */
    II(0x1014000d, 0x5)   calld(0x1013f629, -0x9e9);            /* call 0x1013f629 */
    II(0x10140012, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10140016, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10140019, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1014001c:
    II(0x1014001c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014001f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x10140022, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10140025, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10140027, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10140028, 0x1)   popd(edi);                            /* pop edi */
    II(0x10140029, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014002a, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

