FUNC_BEGIN(0x10083558, 0x7f412b4c18ee22b, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xf0, 0x27, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0xa9, 0x66, 0, 0, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x6a, 0x2f, 0xff, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0xec, 0x35, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x1d, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xb5, 0x29, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x83, 0x5a, 0, 0, 0xe9, 0xdb, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x95, 0x66, 0, 0, 0xe8, 0x98, 0x69, 0, 0, 0x89, 0xc2, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x1b, 0x67, 0, 0, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x6f, 0x65, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe0, 0xe8, 0xf5, 0x35, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x64, 0x77, 0xb, 0, 0x84, 0xc0, 0x74, 0x62, 0x8d, 0x45, 0xe0, 0xe8, 0xb3, 0x64, 0, 0, 0xe8, 0xa6, 0x69, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x14, 0x2e, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xc6, 0x35, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x35, 0x77, 0xb, 0, 0x84, 0xc0, 0x74, 0x31, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x45, 0xe8, 0xe8, 0x54, 0x2d, 0xff, 0xff, 0xe8, 0x23, 0x2a, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x1a, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x9, 0x29, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xd7, 0x59, 0, 0, 0xeb, 0x32, 0xeb, 0xb9, 0xeb, 0x88, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xeb, 0x28, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xb9, 0x59, 0, 0, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd5, 0x28, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xa3, 0x59, 0, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10083558, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1008355d, 0x5)   calld(sys_check_available_stack_size, 0xe27f0); /* call 0x10165d52 */
    II(0x10083562, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10083563, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10083564, 0x1)   pushd(edx);                           /* push edx */
    II(0x10083565, 0x1)   pushd(esi);                           /* push esi */
    II(0x10083566, 0x1)   pushd(edi);                           /* push edi */
    II(0x10083567, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10083568, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008356a, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10083570, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10083573, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10083577, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1008357a, 0x5)   calld(0x10089c28, 0x66a9);            /* call 0x10089c28 */
    II(0x1008357f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10083582, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10083586, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1008358a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008358d, 0x5)   calld(0x100764fc, -0xd096);           /* call 0x100764fc */
    II(0x10083592, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10083595, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10083599, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008359c, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x1008359f, 0x5)   calld(0x10076b90, -0xca14);           /* call 0x10076b90 */
    II(0x100835a4, 0x1)   cwde();                               /* cwde */
    II(0x100835a5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100835a7, 0x2)   jnzd(0x100835c6, 0x1d);               /* jnz 0x100835c6 */
    II(0x100835a9, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100835ad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100835af, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100835b2, 0x5)   calld(0x10075f6c, -0xd64b);           /* call 0x10075f6c */
    II(0x100835b7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100835b9, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100835bc, 0x5)   calld(0x10089044, 0x5a83);            /* call 0x10089044 */
    II(0x100835c1, 0x5)   jmpd(0x100836a1, 0xdb);               /* jmp 0x100836a1 */
l_0x100835c6:
    II(0x100835c6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100835c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100835cb, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100835ce, 0x5)   calld(0x10089c68, 0x6695);            /* call 0x10089c68 */
    II(0x100835d3, 0x5)   calld(0x10089f70, 0x6998);            /* call 0x10089f70 */
    II(0x100835d8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100835da, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100835dc, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x100835df, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100835e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100835e5, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100835e8, 0x5)   calld(0x10089d08, 0x671b);            /* call 0x10089d08 */
    II(0x100835ed, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x100835f0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100835f2, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100835f4, 0x5)   calld(0x10089b68, 0x656f);            /* call 0x10089b68 */
    II(0x100835f9, 0x2)   jmpd(0x10083603, 0x8);                /* jmp 0x10083603 */
l_0x100835fb:
    II(0x100835fb, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100835fe, 0x5)   calld(0x10076bf8, -0xca0b);           /* call 0x10076bf8 */
l_0x10083603:
    II(0x10083603, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083605, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10083608, 0x5)   calld(0x1013ad71, 0xb7764);           /* call 0x1013ad71 */
    II(0x1008360d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008360f, 0x2)   jzd(0x10083673, 0x62);                /* jz 0x10083673 */
    II(0x10083611, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10083614, 0x5)   calld(0x10089acc, 0x64b3);            /* call 0x10089acc */
    II(0x10083619, 0x5)   calld(0x10089fc4, 0x69a6);            /* call 0x10089fc4 */
    II(0x1008361e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10083620, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10083623, 0x5)   calld(0x1007643c, -0xd1ec);           /* call 0x1007643c */
    II(0x10083628, 0x2)   jmpd(0x10083632, 0x8);                /* jmp 0x10083632 */
l_0x1008362a:
    II(0x1008362a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008362d, 0x5)   calld(0x10076bf8, -0xca3a);           /* call 0x10076bf8 */
l_0x10083632:
    II(0x10083632, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083634, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10083637, 0x5)   calld(0x1013ad71, 0xb7735);           /* call 0x1013ad71 */
    II(0x1008363c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008363e, 0x2)   jzd(0x10083671, 0x31);                /* jz 0x10083671 */
    II(0x10083640, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10083644, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10083647, 0x5)   calld(0x100763a0, -0xd2ac);           /* call 0x100763a0 */
    II(0x1008364c, 0x5)   calld(0x10076074, -0xd5dd);           /* call 0x10076074 */
    II(0x10083651, 0x2)   test(al, al);                         /* test al, al */
    II(0x10083653, 0x2)   jzd(0x1008366f, 0x1a);                /* jz 0x1008366f */
    II(0x10083655, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10083659, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008365b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008365e, 0x5)   calld(0x10075f6c, -0xd6f7);           /* call 0x10075f6c */
    II(0x10083663, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083665, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10083668, 0x5)   calld(0x10089044, 0x59d7);            /* call 0x10089044 */
    II(0x1008366d, 0x2)   jmpd(0x100836a1, 0x32);               /* jmp 0x100836a1 */
l_0x1008366f:
    II(0x1008366f, 0x2)   jmpd(0x1008362a, -0x47);              /* jmp 0x1008362a */
l_0x10083671:
    II(0x10083671, 0x2)   jmpd(0x100835fb, -0x78);              /* jmp 0x100835fb */
l_0x10083673:
    II(0x10083673, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10083677, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083679, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008367c, 0x5)   calld(0x10075f6c, -0xd715);           /* call 0x10075f6c */
    II(0x10083681, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083683, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10083686, 0x5)   calld(0x10089044, 0x59b9);            /* call 0x10089044 */
    II(0x1008368b, 0x2)   jmpd(0x100836a1, 0x14);               /* jmp 0x100836a1 */
//  II(0x1008368d, 0x14)  /* Недостижимый код. */
l_0x100836a1:
    II(0x100836a1, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100836a4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100836a6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100836a7, 0x1)   popd(edi);                            /* pop edi */
    II(0x100836a8, 0x1)   popd(esi);                            /* pop esi */
    II(0x100836a9, 0x1)   popd(edx);                            /* pop edx */
    II(0x100836aa, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100836ab, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100836ac, 0x1)   retd();                               /* ret */
FUNC_END

