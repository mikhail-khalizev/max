FUNC_BEGIN(0x10110496, 0xe4f360a9a010be43, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xb2, 0x58, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x43, 0xe9, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0xe1, 0xe8, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8a, 0x80, 0x41, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0xb4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x90, 0x42, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x80, 0x40, 0x1, 0, 0, 0x30, 0xe4, 0x29, 0xc2, 0x89, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x8a, 0x90, 0x42, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x3a, 0x90, 0x40, 0x1, 0, 0, 0x72, 0x20, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x90, 0x40, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x80, 0x42, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xc2, 0xc, 0x39, 0xd0, 0x7c, 0x2, 0xeb, 0x28, 0xbb, 0x4, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x59, 0xfd, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x90, 0xf4, 0x4d, 0x1c, 0x10, 0xb8, 0x24, 0x4e, 0x1c, 0x10, 0xe8, 0x7b, 0x59, 0x5, 0, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xee, 0x9c, 0x5, 0, 0xc7, 0x5, 0x7c, 0xad, 0x1b, 0x10, 0x24, 0x4e, 0x1c, 0x10, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0xba, 0x6c, 0xad, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x7e, 0x84, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xc8, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x12, 0xe8, 0xe8, 0x6e, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10110496, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1011049b, 0x5)   calld(sys_check_available_stack_size, 0x558b2); /* call 0x10165d52 */
    II(0x101104a0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101104a1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101104a2, 0x1)   pushd(edx);                           /* push edx */
    II(0x101104a3, 0x1)   pushd(esi);                           /* push esi */
    II(0x101104a4, 0x1)   pushd(edi);                           /* push edi */
    II(0x101104a5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101104a6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101104a8, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x101104ae, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x101104b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101104b4, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101104b6, 0x5)   calld(0x1010edfe, -0x16bd);           /* call 0x1010edfe */
    II(0x101104bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101104be, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101104c0, 0x5)   calld(0x1010eda6, -0x171f);           /* call 0x1010eda6 */
    II(0x101104c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101104c8, 0x6)   mov(al, memb_a32(ds, eax + 0x141));   /* mov al, [eax+0x141] */
    II(0x101104ce, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101104d3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101104d5, 0x6)   jzd(0x1011058f, 0xb4);                /* jz dword 0x1011058f */
    II(0x101104db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101104de, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101104e0, 0x6)   mov(dl, memb_a32(ds, eax + 0x142));   /* mov dl, [eax+0x142] */
    II(0x101104e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101104e9, 0x6)   mov(al, memb_a32(ds, eax + 0x140));   /* mov al, [eax+0x140] */
    II(0x101104ef, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101104f1, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x101104f3, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x101104f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101104f9, 0x6)   mov(dl, memb_a32(ds, eax + 0x142));   /* mov dl, [eax+0x142] */
//    II(0x101104ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110502, 0x6)   cmp(dl, memb_a32(ds, eax + 0x140));   /* cmp dl, [eax+0x140] */
    II(0x10110508, 0x2)   jbd(0x1011052a, 0x20);                /* jb 0x1011052a */
    II(0x1011050a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011050d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011050f, 0x6)   mov(dl, memb_a32(ds, eax + 0x140));   /* mov dl, [eax+0x140] */
    II(0x10110515, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110518, 0x6)   mov(al, memb_a32(ds, eax + 0x142));   /* mov al, [eax+0x142] */
    II(0x1011051e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10110523, 0x3)   add(edx, 0xc);                        /* add edx, 0xc */
    II(0x10110526, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10110528, 0x2)   jld(0x1011052c, 0x2);                 /* jl 0x1011052c */
l_0x1011052a:
    II(0x1011052a, 0x2)   jmpd(0x10110554, 0x28);               /* jmp 0x10110554 */
l_0x1011052c:
    II(0x1011052c, 0x5)   mov(ebx, 0x4);                        /* mov ebx, 0x4 */
    II(0x10110531, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10110535, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110538, 0x5)   calld(0x10110296, -0x2a7);            /* call 0x10110296 */
    II(0x1011053d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10110541, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110544, 0x6)   mov(edx, memd_a32(ds, eax + 0x101c4df4)); /* mov edx, [eax+0x101c4df4] */
    II(0x1011054a, 0x5)   mov(eax, 0x101c4e24);                 /* mov eax, 0x101c4e24 */
    II(0x1011054f, 0x5)   calld(sys_strcpy, 0x5597b);           /* call 0x10165ecf */
l_0x10110554:
    II(0x10110554, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10110559, 0x5)   calld(/* sys */ 0x1016a24c, 0x59cee); /* call 0x1016a24c */
    II(0x1011055e, 0xa)   mov(memd_a32(ds, 0x101bad7c), 0x101c4e24); /* mov dword [0x101bad7c], 0x101c4e24 */
    II(0x10110568, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1011056d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011056e, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10110573, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x10110578, 0x5)   mov(edx, 0x101bad6c);                 /* mov edx, 0x101bad6c */
    II(0x1011057d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110580, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10110582, 0x5)   calld(0x10108a05, -0x7b82);           /* call 0x10108a05 */
    II(0x10110587, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011058a, 0x5)   calld(0x10110357, -0x238);            /* call 0x10110357 */
l_0x1011058f:
    II(0x1011058f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110592, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10110594, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10110597, 0x5)   calld(sys_display_draw_0, 0x56ee8);   /* call 0x10167484 */
    II(0x1011059c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011059e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011059f, 0x1)   popd(edi);                            /* pop edi */
    II(0x101105a0, 0x1)   popd(esi);                            /* pop esi */
    II(0x101105a1, 0x1)   popd(edx);                            /* pop edx */
    II(0x101105a2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101105a3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101105a4, 0x1)   retd();                               /* ret */
FUNC_END

