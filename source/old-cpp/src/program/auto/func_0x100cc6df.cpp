FUNC_BEGIN(0x100cc6df, 0xaba0a8deebba1386, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x69, 0x96, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0xea, 0x9f, 0xfa, 0xff, 0x89, 0x45, 0xf0, 0x80, 0x65, 0xf8, 0xfe, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xf7, 0xe5, 0x6, 0, 0x84, 0xc0, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x4, 0x98, 0xfa, 0xff, 0xe9, 0xfe, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xf6, 0x9e, 0xfa, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x7e, 0x3, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xe4, 0x9e, 0xfa, 0xff, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0xff, 0x52, 0x70, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x9, 0xe6, 0x6, 0, 0x84, 0xc0, 0xf, 0x84, 0x81, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x94, 0xe5, 0x6, 0, 0x84, 0xc0, 0x74, 0x10, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x89, 0xe4, 0xfb, 0xff, 0xeb, 0x60, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x20, 0xe4, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x16, 0xe4, 0xfb, 0xff, 0xe8, 0x6f, 0x98, 0xfd, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x3, 0xe4, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xf6, 0xe3, 0xfb, 0xff, 0xe8, 0x4f, 0x98, 0xfd, 0xff, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xe8, 0x39, 0xd0, 0x7e, 0xe, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x27, 0xe4, 0xfb, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x13, 0xe5, 0x6, 0, 0x84, 0xc0, 0x74, 0xc, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x20, 0x97, 0xfa, 0xff, 0xeb, 0x1d, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x58, 0x9d, 0xfa, 0xff, 0xe8, 0xcc, 0x5f, 0x8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x1, 0x97, 0xfa, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100cc6df, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100cc6e4, 0x5)   calld(sys_check_available_stack_size, 0x99669); /* call 0x10165d52 */
    II(0x100cc6e9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100cc6ea, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100cc6eb, 0x1)   pushd(edx);                           /* push edx */
    II(0x100cc6ec, 0x1)   pushd(esi);                           /* push esi */
    II(0x100cc6ed, 0x1)   pushd(edi);                           /* push edi */
    II(0x100cc6ee, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100cc6ef, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100cc6f1, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100cc6f7, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100cc6fa, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100cc6fe, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100cc701, 0x5)   calld(my_ctor_0x101b38f8, -0x56016);  /* call 0x100766f0 */
    II(0x100cc706, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100cc709, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100cc70d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cc70f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc712, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cc715, 0x5)   calld(0x1013ad11, 0x6e5f7);           /* call 0x1013ad11 */
    II(0x100cc71a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cc71c, 0x2)   jzd(0x100cc72d, 0xf);                 /* jz 0x100cc72d */
    II(0x100cc71e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cc720, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100cc723, 0x5)   calld(0x10075f2c, -0x567fc);          /* call 0x10075f2c */
    II(0x100cc728, 0x5)   jmpd(0x100cc82b, 0xfe);               /* jmp 0x100cc82b */
l_0x100cc72d:
    II(0x100cc72d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cc72f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc732, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc735, 0x5)   calld(0x10076630, -0x5610a);          /* call 0x10076630 */
    II(0x100cc73a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc73d, 0x5)   calld(0x100ccac0, 0x37e);             /* call 0x100ccac0 */
    II(0x100cc742, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cc744, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100cc747, 0x5)   calld(0x10076630, -0x5611c);          /* call 0x10076630 */
    II(0x100cc74c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc74f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100cc752, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100cc755, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100cc758, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100cc75b, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x100cc75e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cc760, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100cc763, 0x5)   calld(0x1013ad71, 0x6e609);           /* call 0x1013ad71 */
    II(0x100cc768, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cc76a, 0x6)   jzd(0x100cc7f1, 0x81);                /* jz dword 0x100cc7f1 */
    II(0x100cc770, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cc772, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc775, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc778, 0x5)   calld(0x1013ad11, 0x6e594);           /* call 0x1013ad11 */
    II(0x100cc77d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cc77f, 0x2)   jzd(0x100cc791, 0x10);                /* jz 0x100cc791 */
    II(0x100cc781, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100cc784, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc787, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc78a, 0x5)   calld(0x1008ac18, -0x41b77);          /* call 0x1008ac18 */
    II(0x100cc78f, 0x2)   jmpd(0x100cc7f1, 0x60);               /* jmp 0x100cc7f1 */
l_0x100cc791:
    II(0x100cc791, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc794, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cc797, 0x5)   calld(0x1008abbc, -0x41be0);          /* call 0x1008abbc */
    II(0x100cc79c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cc79e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100cc7a1, 0x5)   calld(0x1008abbc, -0x41bea);          /* call 0x1008abbc */
    II(0x100cc7a6, 0x5)   calld(0x100a601a, -0x26791);          /* call 0x100a601a */
    II(0x100cc7ab, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100cc7ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc7b1, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cc7b4, 0x5)   calld(0x1008abbc, -0x41bfd);          /* call 0x1008abbc */
    II(0x100cc7b9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cc7bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc7be, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc7c1, 0x5)   calld(0x1008abbc, -0x41c0a);          /* call 0x1008abbc */
    II(0x100cc7c6, 0x5)   calld(0x100a601a, -0x267b1);          /* call 0x100a601a */
    II(0x100cc7cb, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100cc7ce, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100cc7d2, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100cc7d4, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100cc7d7, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100cc7d9, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100cc7db, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100cc7df, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100cc7e1, 0x2)   jled(0x100cc7f1, 0xe);                /* jle 0x100cc7f1 */
    II(0x100cc7e3, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100cc7e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc7e9, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc7ec, 0x5)   calld(0x1008ac18, -0x41bd9);          /* call 0x1008ac18 */
l_0x100cc7f1:
    II(0x100cc7f1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cc7f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc7f6, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc7f9, 0x5)   calld(0x1013ad11, 0x6e513);           /* call 0x1013ad11 */
    II(0x100cc7fe, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cc800, 0x2)   jzd(0x100cc80e, 0xc);                 /* jz 0x100cc80e */
    II(0x100cc802, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cc804, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100cc807, 0x5)   calld(0x10075f2c, -0x568e0);          /* call 0x10075f2c */
    II(0x100cc80c, 0x2)   jmpd(0x100cc82b, 0x1d);               /* jmp 0x100cc82b */
l_0x100cc80e:
    II(0x100cc80e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100cc811, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc814, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc817, 0x5)   calld(0x10076574, -0x562a8);          /* call 0x10076574 */
    II(0x100cc81c, 0x5)   calld(0x101527ed, 0x85fcc);           /* call 0x101527ed */
    II(0x100cc821, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cc823, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100cc826, 0x5)   calld(0x10075f2c, -0x568ff);          /* call 0x10075f2c */
l_0x100cc82b:
    II(0x100cc82b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100cc82d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100cc82e, 0x1)   popd(edi);                            /* pop edi */
    II(0x100cc82f, 0x1)   popd(esi);                            /* pop esi */
    II(0x100cc830, 0x1)   popd(edx);                            /* pop edx */
    II(0x100cc831, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100cc832, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100cc833, 0x1)   retd();                               /* ret */
FUNC_END

