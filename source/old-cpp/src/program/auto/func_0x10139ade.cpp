FUNC_BEGIN(0x10139ade, 0x584e5b01554e068e, 0x20, ({0x68, 0xc0, 0, 0, 0, 0xe8, 0x6a, 0xc2, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xa0, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf0, 0x88, 0x4d, 0xfc, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0xd6, 0x1d, 0, 0, 0x89, 0x45, 0xd8, 0x80, 0x65, 0xec, 0xfe, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x2c, 0xd4, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0xb8, 0xaa, 0xc8, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0xc8, 0x50, 0xe8, 0xce, 0xc3, 0x2, 0, 0x83, 0xc4, 0x10, 0xc6, 0x85, 0x64, 0xff, 0xff, 0xff, 0, 0xf, 0xbf, 0x45, 0xf4, 0x85, 0xc0, 0x74, 0x9, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x3, 0x75, 0x2, 0xeb, 0x9, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x4, 0x75, 0x10, 0xba, 0x70, 0x3d, 0x1c, 0x10, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0x66, 0xc3, 0x2, 0, 0x8d, 0x55, 0xc8, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0xba, 0xc3, 0x2, 0, 0x8d, 0x95, 0x64, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xdc, 0xe8, 0x5b, 0x1e, 0, 0, 0x84, 0xc0, 0x75, 0x16, 0xc7, 0x85, 0x60, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xfa, 0x1d, 0, 0, 0xeb, 0x65, 0xbb, 0xb0, 0, 0, 0, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xdc, 0xe8, 0xd7, 0x1e, 0, 0, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0xe8, 0xb5, 0xf1, 0xff, 0xff, 0x80, 0x7d, 0xfc, 0, 0x74, 0x17, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x44, 0, 0, 0, 0x8d, 0x55, 0xdc, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x17, 0xc8, 0xfc, 0xff, 0x8d, 0x45, 0xdc, 0xe8, 0x58, 0x1e, 0, 0, 0xc7, 0x85, 0x60, 0xff, 0xff, 0xff, 0x1, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x9f, 0x1d, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x93, 0x1d, 0, 0, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10139ade, 0x5)   pushd(0xc0);                          /* push dword 0xc0 */
    II(0x10139ae3, 0x5)   calld(sys_check_available_stack_size, 0x2c26a); /* call 0x10165d52 */
    II(0x10139ae8, 0x1)   pushd(esi);                           /* push esi */
    II(0x10139ae9, 0x1)   pushd(edi);                           /* push edi */
    II(0x10139aea, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10139aeb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10139aed, 0x6)   sub(esp, 0xa0);                       /* sub esp, 0xa0 */
    II(0x10139af3, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10139af6, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10139af9, 0x3)   mov(memd_a32(ss, ebp - 0x10), ebx);   /* mov [ebp-0x10], ebx */
    II(0x10139afc, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x10139aff, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x10139b03, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10139b06, 0x5)   calld(0x1013b8e1, 0x1dd6);            /* call 0x1013b8e1 */
    II(0x10139b0b, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10139b0e, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x10139b12, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10139b16, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10139b19, 0x6)   pushd(memd_a32(ds, eax + 0x101bd42c)); /* push dword [eax+0x101bd42c] */
    II(0x10139b1f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10139b23, 0x1)   pushd(eax);                           /* push eax */
    II(0x10139b24, 0x5)   mov(eax, 0x101ac8aa);                 /* mov eax, 0x101ac8aa */ /* "save%i.%s" */
    II(0x10139b29, 0x1)   pushd(eax);                           /* push eax */
    II(0x10139b2a, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10139b2d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10139b2e, 0x5)   calld(sys_sprintf, 0x2c3ce);          /* call 0x10165f01 */
    II(0x10139b33, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x10139b36, 0x7)   mov(memb_a32(ss, ebp - 0x9c), 0);     /* mov byte [ebp+0xffffff64], 0x0 */
    II(0x10139b3d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10139b41, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10139b43, 0x2)   jzd(0x10139b4e, 0x9);                 /* jz 0x10139b4e */
    II(0x10139b45, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10139b49, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10139b4c, 0x2)   jnzd(0x10139b50, 0x2);                /* jnz 0x10139b50 */
l_0x10139b4e:
    II(0x10139b4e, 0x2)   jmpd(0x10139b59, 0x9);                /* jmp 0x10139b59 */
l_0x10139b50:
    II(0x10139b50, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10139b54, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10139b57, 0x2)   jnzd(0x10139b69, 0x10);               /* jnz 0x10139b69 */
l_0x10139b59:
    II(0x10139b59, 0x5)   mov(edx, 0x101c3d70);                 /* mov edx, 0x101c3d70 */
    II(0x10139b5e, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x10139b64, 0x5)   calld(sys_strcpy, 0x2c366);           /* call 0x10165ecf */
l_0x10139b69:
    II(0x10139b69, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x10139b6c, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x10139b72, 0x5)   calld(sys_strcat, 0x2c3ba);           /* call 0x10165f31 */
    II(0x10139b77, 0x6)   lea(edx, ebp - 0x9c);                 /* lea edx, [ebp+0xffffff64] */
    II(0x10139b7d, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10139b80, 0x5)   calld(0x1013b9e0, 0x1e5b);            /* call 0x1013b9e0 */
    II(0x10139b85, 0x2)   test(al, al);                         /* test al, al */
    II(0x10139b87, 0x2)   jnzd(0x10139b9f, 0x16);               /* jnz 0x10139b9f */
    II(0x10139b89, 0xa)   mov(memd_a32(ss, ebp - 0xa0), 0);     /* mov dword [ebp+0xffffff60], 0x0 */
    II(0x10139b93, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10139b95, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10139b98, 0x5)   calld(0x1013b997, 0x1dfa);            /* call 0x1013b997 */
    II(0x10139b9d, 0x2)   jmpd(0x10139c04, 0x65);               /* jmp 0x10139c04 */
l_0x10139b9f:
    II(0x10139b9f, 0x5)   mov(ebx, 0xb0);                       /* mov ebx, 0xb0 */
    II(0x10139ba4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10139ba7, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10139baa, 0x5)   calld(0x1013ba86, 0x1ed7);            /* call 0x1013ba86 */
    II(0x10139baf, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x10139bb3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10139bb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10139bba, 0x5)   calld(0x10138d74, -0xe4b);            /* call 0x10138d74 */
    II(0x10139bbf, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10139bc3, 0x2)   jzd(0x10139bdc, 0x17);                /* jz 0x10139bdc */
    II(0x10139bc5, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10139bca, 0x5)   mov(ebx, 0x44);                       /* mov ebx, 0x44 */
    II(0x10139bcf, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x10139bd2, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x10139bd7, 0x5)   calld(0x101063f3, -0x337e9);          /* call 0x101063f3 */
l_0x10139bdc:
    II(0x10139bdc, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10139bdf, 0x5)   calld(0x1013ba3c, 0x1e58);            /* call 0x1013ba3c */
    II(0x10139be4, 0xa)   mov(memd_a32(ss, ebp - 0xa0), 0x1);   /* mov dword [ebp+0xffffff60], 0x1 */
    II(0x10139bee, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10139bf0, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10139bf3, 0x5)   calld(0x1013b997, 0x1d9f);            /* call 0x1013b997 */
    II(0x10139bf8, 0x2)   jmpd(0x10139c04, 0xa);                /* jmp 0x10139c04 */
//  II(0x10139bfa, 0xa)   /* Недостижимый код. */
l_0x10139c04:
    II(0x10139c04, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x10139c0a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10139c0c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10139c0d, 0x1)   popd(edi);                            /* pop edi */
    II(0x10139c0e, 0x1)   popd(esi);                            /* pop esi */
    II(0x10139c0f, 0x1)   retd();                               /* ret */
FUNC_END

