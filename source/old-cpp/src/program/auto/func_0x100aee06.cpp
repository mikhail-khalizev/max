FUNC_BEGIN(0x100aee06, 0x55ad79cf3f36df8c, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0x42, 0x6f, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x48, 0x77, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x37, 0x77, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xd4, 0xe8, 0x61, 0x7c, 0xfc, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0x9d, 0x7c, 0xfc, 0xff, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x1b, 0xc6, 0xfd, 0xff, 0x98, 0x85, 0xc0, 0xf, 0x84, 0xa1, 0x1, 0, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xa6, 0xbb, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xd8, 0x6f, 0xfc, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xe0, 0xe8, 0xcb, 0x6f, 0xfc, 0xff, 0x89, 0xda, 0xe8, 0x2a, 0x71, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x80, 0x7a, 0x19, 0, 0x7e, 0x39, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x16, 0xc1, 0xfb, 0x18, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xff, 0x76, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xf0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0xe6, 0x30, 0x1, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x78, 0x76, 0xfc, 0xff, 0x89, 0xc2, 0x31, 0xc0, 0x8a, 0x42, 0x4d, 0x89, 0x45, 0xe8, 0x8b, 0x55, 0xfc, 0x80, 0x7a, 0x19, 0x3, 0x75, 0x7, 0xc7, 0x45, 0xe8, 0x1, 0, 0, 0, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x50, 0xc5, 0xfd, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0xf, 0x8e, 0x9f, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xdf, 0xba, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0xf1, 0x9b, 0xfd, 0xff, 0x83, 0x7d, 0xdc, 0, 0x74, 0x1d, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xda, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xe8, 0x7d, 0x2, 0xeb, 0x19, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x11, 0xdc, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x26, 0xff, 0xff, 0xe9, 0x7e, 0, 0, 0, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xd0, 0xe8, 0xc8, 0x6e, 0xfc, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xcc, 0xe8, 0xbb, 0x6e, 0xfc, 0xff, 0x89, 0xda, 0xe8, 0x1a, 0x70, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x45, 0xf4, 0x7f, 0xc, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0xe9, 0x46, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0x85, 0xc0, 0x75, 0xf, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x24, 0xeb, 0x1, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xf0, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0x74, 0xf, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x7, 0xeb, 0x1, 0, 0xeb, 0xe7, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100aee06, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x100aee0b, 0x5)   calld(sys_check_available_stack_size, 0xb6f42); /* call 0x10165d52 */
    II(0x100aee10, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100aee11, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100aee12, 0x1)   pushd(edx);                           /* push edx */
    II(0x100aee13, 0x1)   pushd(esi);                           /* push esi */
    II(0x100aee14, 0x1)   pushd(edi);                           /* push edi */
    II(0x100aee15, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100aee16, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100aee18, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x100aee1e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100aee21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aee24, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aee27, 0x5)   calld(0x10076574, -0x388b8);          /* call 0x10076574 */
    II(0x100aee2c, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100aee2f, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100aee32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aee35, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aee38, 0x5)   calld(0x10076574, -0x388c9);          /* call 0x10076574 */
    II(0x100aee3d, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100aee40, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100aee43, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100aee46, 0x5)   calld(0x10076aac, -0x3839f);          /* call 0x10076aac */
    II(0x100aee4b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100aee4e, 0x5)   calld(my_ctor_0x101b4184, -0x38363);  /* call 0x10076af0 */
    II(0x100aee53, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100aee5a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aee5d, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aee60, 0x5)   calld(my_3_get_count, -0x239e5);      /* call 0x1008b480 */
    II(0x100aee65, 0x1)   cwde();                               /* cwde */
    II(0x100aee66, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100aee68, 0x6)   jzd(0x100af00f, 0x1a1);               /* jz dword 0x100af00f */
    II(0x100aee6e, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100aee75, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aee77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aee7a, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aee7d, 0x5)   calld(0x100aaa28, -0x445a);           /* call 0x100aaa28 */
    II(0x100aee82, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aee84, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100aee87, 0x5)   calld(0x10075e64, -0x39028);          /* call 0x10075e64 */
    II(0x100aee8c, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100aee8e, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100aee91, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100aee94, 0x5)   calld(0x10075e64, -0x39035);          /* call 0x10075e64 */
    II(0x100aee99, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100aee9b, 0x5)   calld(0x100a5fca, -0x8ed6);           /* call 0x100a5fca */
    II(0x100aeea0, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100aeea3, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100aeea5, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100aeea8, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100aeeaa, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100aeeac, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100aeeaf, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100aeeb2, 0x4)   cmp(memb_a32(ds, edx + 0x19), 0);     /* cmp byte [edx+0x19], 0x0 */
    II(0x100aeeb6, 0x2)   jled(0x100aeef1, 0x39);               /* jle 0x100aeef1 */
    II(0x100aeeb8, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100aeebd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeec0, 0x3)   mov(ebx, memd_a32(ds, eax + 0x16));   /* mov ebx, [eax+0x16] */
    II(0x100aeec3, 0x3)   sar(ebx, 0x18);                       /* sar ebx, 0x18 */
    II(0x100aeec6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeec9, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aeecc, 0x5)   calld(0x100765d0, -0x38901);          /* call 0x100765d0 */
    II(0x100aeed1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aeed3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeed6, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100aeed9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100aeedc, 0x6)   imul(esi, eax, 0xc5);                 /* imul esi, eax, 0xc5 */
    II(0x100aeee2, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100aeee7, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100aeee9, 0x5)   calld(0x100c1fd4, 0x130e6);           /* call 0x100c1fd4 */
    II(0x100aeeee, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100aeef1:
    II(0x100aeef1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeef4, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aeef7, 0x5)   calld(0x10076574, -0x38988);          /* call 0x10076574 */
    II(0x100aeefc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aeefe, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100aef00, 0x3)   mov(al, memb_a32(ds, edx + 0x4d));    /* mov al, [edx+0x4d] */
    II(0x100aef03, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100aef06, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100aef09, 0x4)   cmp(memb_a32(ds, edx + 0x19), 0x3);   /* cmp byte [edx+0x19], 0x3 */
    II(0x100aef0d, 0x2)   jnzd(0x100aef16, 0x7);                /* jnz 0x100aef16 */
    II(0x100aef0f, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x1);   /* mov dword [ebp-0x18], 0x1 */
l_0x100aef16:
    II(0x100aef16, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
    II(0x100aef1d, 0x2)   jmpd(0x100aef25, 0x6);                /* jmp 0x100aef25 */
l_0x100aef1f:
    II(0x100aef1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100aef22, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100aef25:
    II(0x100aef25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aef28, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aef2b, 0x5)   calld(my_3_get_count, -0x23ab0);      /* call 0x1008b480 */
    II(0x100aef30, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100aef34, 0x6)   jled(0x100aefd9, 0x9f);               /* jle dword 0x100aefd9 */
    II(0x100aef3a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100aef3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aef41, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aef44, 0x5)   calld(0x100aaa28, -0x4521);           /* call 0x100aaa28 */
    II(0x100aef49, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aef4b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100aef4e, 0x5)   calld(0x10088b44, -0x2640f);          /* call 0x10088b44 */
    II(0x100aef53, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100aef57, 0x2)   jzd(0x100aef76, 0x1d);                /* jz 0x100aef76 */
    II(0x100aef59, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100aef5d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100aef60, 0x3)   add(eax, memd_a32(ss, ebp - 0x24));   /* add eax, [ebp-0x24] */
    II(0x100aef63, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100aef67, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100aef69, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100aef6b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100aef6d, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100aef70, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100aef74, 0x2)   jged(0x100aef78, 0x2);                /* jge 0x100aef78 */
l_0x100aef76:
    II(0x100aef76, 0x2)   jmpd(0x100aef91, 0x19);               /* jmp 0x100aef91 */
l_0x100aef78:
    II(0x100aef78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aef7b, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aef7e, 0x5)   calld(0x1009cb94, -0x123ef);          /* call 0x1009cb94 */
    II(0x100aef83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aef86, 0x6)   mov(memw_a32(ds, eax + 0x26), 0xffff); /* mov word [eax+0x26], 0xffff */
    II(0x100aef8c, 0x5)   jmpd(0x100af00f, 0x7e);               /* jmp 0x100af00f */
l_0x100aef91:
    II(0x100aef91, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100aef94, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100aef97, 0x5)   calld(0x10075e64, -0x39138);          /* call 0x10075e64 */
    II(0x100aef9c, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100aef9e, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100aefa1, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100aefa4, 0x5)   calld(0x10075e64, -0x39145);          /* call 0x10075e64 */
    II(0x100aefa9, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100aefab, 0x5)   calld(0x100a5fca, -0x8fe6);           /* call 0x100a5fca */
    II(0x100aefb0, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100aefb3, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100aefb5, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100aefb8, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100aefba, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100aefbc, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x100aefbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100aefc2, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100aefc6, 0x2)   jgd(0x100aefd4, 0xc);                 /* jg 0x100aefd4 */
    II(0x100aefc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100aefcb, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100aefce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100aefd1, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x100aefd4:
    II(0x100aefd4, 0x5)   jmpd(0x100aef1f, -0xba);              /* jmp 0x100aef1f */
l_0x100aefd9:
    II(0x100aefd9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100aefdd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100aefdf, 0x2)   jnzd(0x100aeff0, 0xf);                /* jnz 0x100aeff0 */
    II(0x100aefe1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100aefe5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aefe8, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aefeb, 0x5)   calld(0x100cdb14, 0x1eb24);           /* call 0x100cdb14 */
l_0x100aeff0:
    II(0x100aeff0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100aeff3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x100aeff6:
    II(0x100aeff6, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x100aeff9, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x100aeffe, 0x2)   jzd(0x100af00f, 0xf);                 /* jz 0x100af00f */
    II(0x100af000, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af002, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af005, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100af008, 0x5)   calld(0x100cdb14, 0x1eb07);           /* call 0x100cdb14 */
    II(0x100af00d, 0x2)   jmpd(0x100aeff6, -0x19);              /* jmp 0x100aeff6 */
l_0x100af00f:
    II(0x100af00f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100af011, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100af012, 0x1)   popd(edi);                            /* pop edi */
    II(0x100af013, 0x1)   popd(esi);                            /* pop esi */
    II(0x100af014, 0x1)   popd(edx);                            /* pop edx */
    II(0x100af015, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100af016, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100af017, 0x1)   retd();                               /* ret */
FUNC_END

