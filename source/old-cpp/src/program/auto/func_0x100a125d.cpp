FUNC_BEGIN(0x100a125d, 0x9c932c32d0473c8, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xeb, 0x4a, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x82, 0x4f, 0xfd, 0xff, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x2, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x6f, 0x5b, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x13, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x52, 0xd, 0xfd, 0xff, 0x98, 0x85, 0xc0, 0x7c, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x7, 0x75, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0, 0x75, 0x2, 0xeb, 0x1d, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x55, 0xc, 0xfd, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0xe0, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x4f, 0x8b, 0x55, 0xfc, 0x8b, 0x42, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xfd, 0xc, 0xfd, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf8, 0x66, 0x29, 0x42, 0x32, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf8, 0x66, 0x29, 0x42, 0x26, 0xb8, 0x46, 0x9, 0x1a, 0x10, 0x50, 0xb9, 0x4e, 0x9, 0x1a, 0x10, 0xbb, 0x6d, 0x9, 0x1a, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x4d, 0xfc, 0xff, 0xff, 0x31, 0xdb, 0xba, 0x7, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x1a, 0x1d, 0xc, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a125d, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100a1262, 0x5)   calld(sys_check_available_stack_size, 0xc4aeb); /* call 0x10165d52 */
    II(0x100a1267, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a1268, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a1269, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a126a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a126b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a126c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a126e, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100a1274, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a1277, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100a127a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a127d, 0x5)   calld(0x10076204, -0x2b07e);          /* call 0x10076204 */
    II(0x100a1282, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100a1285, 0x3)   add(ebx, 0x2);                        /* add ebx, 0x2 */
    II(0x100a1288, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a128a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a128c, 0x5)   calld(0x10076e00, -0x2a491);          /* call 0x10076e00 */
    II(0x100a1291, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a1293, 0x2)   jzd(0x100a12a8, 0x13);                /* jz 0x100a12a8 */
    II(0x100a1295, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1298, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a129b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a129e, 0x5)   calld(0x10071ff5, -0x2f2ae);          /* call 0x10071ff5 */
    II(0x100a12a3, 0x1)   cwde();                               /* cwde */
    II(0x100a12a4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a12a6, 0x2)   jld(0x100a12aa, 0x2);                 /* jl 0x100a12aa */
l_0x100a12a8:
    II(0x100a12a8, 0x2)   jmpd(0x100a12b3, 0x9);                /* jmp 0x100a12b3 */
l_0x100a12aa:
    II(0x100a12aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a12ad, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100a12b1, 0x2)   jnzd(0x100a12b5, 0x2);                /* jnz 0x100a12b5 */
l_0x100a12b3:
    II(0x100a12b3, 0x2)   jmpd(0x100a12be, 0x9);                /* jmp 0x100a12be */
l_0x100a12b5:
    II(0x100a12b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a12b8, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x100a12bc, 0x2)   jnzd(0x100a12c0, 0x2);                /* jnz 0x100a12c0 */
l_0x100a12be:
    II(0x100a12be, 0x2)   jmpd(0x100a12c9, 0x9);                /* jmp 0x100a12c9 */
l_0x100a12c0:
    II(0x100a12c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a12c3, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0);     /* cmp byte [eax+0x3e], 0x0 */
    II(0x100a12c7, 0x2)   jnzd(0x100a12cb, 0x2);                /* jnz 0x100a12cb */
l_0x100a12c9:
    II(0x100a12c9, 0x2)   jmpd(0x100a12e8, 0x1d);               /* jmp 0x100a12e8 */
l_0x100a12cb:
    II(0x100a12cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a12ce, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a12d1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a12d4, 0x5)   calld(0x10071f2e, -0x2f3ab);          /* call 0x10071f2e */
    II(0x100a12d9, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a12dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a12df, 0x5)   calld(0x100a11c4, -0x120);            /* call 0x100a11c4 */
    II(0x100a12e4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a12e6, 0x2)   jnzd(0x100a12ea, 0x2);                /* jnz 0x100a12ea */
l_0x100a12e8:
    II(0x100a12e8, 0x2)   jmpd(0x100a1339, 0x4f);               /* jmp 0x100a1339 */
l_0x100a12ea:
    II(0x100a12ea, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a12ed, 0x3)   mov(eax, memd_a32(ds, edx + 0x6));    /* mov eax, [edx+0x6] */
    II(0x100a12f0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a12f3, 0x5)   calld(0x10071ff5, -0x2f303);          /* call 0x10071ff5 */
    II(0x100a12f8, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a12fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a12fe, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a1301, 0x4)   sub(memw_a32(ds, edx + 0x32), ax);    /* sub [edx+0x32], ax */
    II(0x100a1305, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a1308, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a130b, 0x4)   sub(memw_a32(ds, edx + 0x26), ax);    /* sub [edx+0x26], ax */
    II(0x100a130f, 0x5)   mov(eax, 0x101a0946);                 /* mov eax, 0x101a0946 */ /* "workers" */
    II(0x100a1314, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a1315, 0x5)   mov(ecx, 0x101a094e);                 /* mov ecx, 0x101a094e */ /* "More %s needed, %s turned on.\n" */
    II(0x100a131a, 0x5)   mov(ebx, 0x101a096d);                 /* mov ebx, 0x101a096d */ /* "Cannot turn %s off, other buildings need %s.\n" */
    II(0x100a131f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a1322, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a1325, 0x5)   calld(0x100a0f77, -0x3b3);            /* call 0x100a0f77 */
    II(0x100a132a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a132c, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x100a1331, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1334, 0x5)   calld(0x10163053, 0xc1d1a);           /* call 0x10163053 */
l_0x100a1339:
    II(0x100a1339, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a133b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a133c, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a133d, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a133e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a133f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a1340, 0x1)   retd();                               /* ret */
FUNC_END

