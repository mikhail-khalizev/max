FUNC_BEGIN(0x10089104, 0x338173a5a4bf0958, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x44, 0xcc, 0xd, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xe, 0xe8, 0xd6, 0xf9, 0xff, 0xff, 0x83, 0xe8, 0xe, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xa, 0xe8, 0x8b, 0xfc, 0xff, 0xff, 0x83, 0xe8, 0xa, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0xeb, 0xfa, 0xff, 0xff, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10089104, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x10089109, 0x5)   calld(sys_check_available_stack_size, 0xdcc44); /* call 0x10165d52 */
    II(0x1008910e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008910f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10089110, 0x1)   pushd(esi);                           /* push esi */
    II(0x10089111, 0x1)   pushd(edi);                           /* push edi */
    II(0x10089112, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10089113, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10089115, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x1008911b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1008911e, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10089121, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10089123, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10089126, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x10089129, 0x5)   calld(0x10088b04, -0x62a);            /* call 0x10088b04 */
    II(0x1008912e, 0x3)   sub(eax, 0xe);                        /* sub eax, 0xe */
    II(0x10089131, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10089134, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10089136, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10089139, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x1008913c, 0x5)   calld(0x10088dcc, -0x375);            /* call 0x10088dcc */
    II(0x10089141, 0x3)   sub(eax, 0xa);                        /* sub eax, 0xa */
    II(0x10089144, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10089147, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10089149, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008914c, 0x5)   calld(my_dtor_0x101b56fc, -0x515);    /* call 0x10088c3c */
    II(0x10089151, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x10089154, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10089157, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x1008915a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1008915d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008915f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10089160, 0x1)   popd(edi);                            /* pop edi */
    II(0x10089161, 0x1)   popd(esi);                            /* pop esi */
    II(0x10089162, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10089163, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10089164, 0x1)   retd();                               /* ret */
FUNC_END

