FUNC_BEGIN(0x1014a582, 0xce85da8e51ca7d59, 0x20, ({0x68, 0x68, 0, 0, 0, 0xe8, 0xc6, 0xb7, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x15, 0x10, 0xf, 0x84, 0xb6, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf8, 0x66, 0x1, 0x42, 0x52, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x50, 0xc1, 0xfa, 0x10, 0x83, 0xfa, 0xf, 0xf, 0x8c, 0x9a, 0x2, 0, 0, 0x8d, 0x7d, 0xe4, 0xbe, 0xf4, 0xd8, 0x1b, 0x10, 0xa5, 0xa4, 0xc6, 0x45, 0xf0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0x9, 0xb, 0xf4, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf9, 0xc1, 0xf2, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0x3a, 0x11, 0xf8, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0x3, 0x10, 0xf8, 0xff, 0xe8, 0x5d, 0xb8, 0x1, 0, 0x8d, 0x4, 0x80, 0xc1, 0xe8, 0xf, 0x8a, 0x44, 0x28, 0xe4, 0x88, 0x45, 0xf4, 0xf, 0xbe, 0x5d, 0xf4, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0x93, 0x57, 0xf9, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x52, 0xf, 0x8f, 0xca, 0, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xf8, 0x66, 0x29, 0x42, 0x52, 0x80, 0x7d, 0xf0, 0, 0x75, 0x4d, 0xb8, 0x24, 0, 0, 0, 0xe8, 0x6d, 0xb7, 0x1, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x20, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0x43, 0x10, 0xf8, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xdc, 0xe8, 0x41, 0xfc, 0xf7, 0xff, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd0, 0x8b, 0x55, 0xd0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0xa6, 0x10, 0xf8, 0xff, 0xf, 0xbe, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0x4b, 0xc0, 0xf2, 0xff, 0xe8, 0x57, 0x94, 0x1, 0, 0x89, 0xc1, 0xf, 0xbe, 0x5d, 0xf4, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0x62, 0x56, 0xf9, 0xff, 0x66, 0x1, 0x1, 0xe8, 0x8c, 0xb7, 0x1, 0, 0x8d, 0x4, 0x80, 0xc1, 0xe8, 0xf, 0x8a, 0x44, 0x28, 0xe4, 0x88, 0x45, 0xf4, 0xf, 0xbe, 0x5d, 0xf4, 0x8b, 0x4d, 0xf8, 0x8b, 0x51, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0xc2, 0x56, 0xf9, 0xff, 0x89, 0x45, 0xec, 0xc6, 0x45, 0xf0, 0x1, 0xe9, 0x26, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xf0, 0, 0xf, 0x84, 0xdc, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x7a, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x32, 0xc3, 0xf2, 0xff, 0x8b, 0x8, 0x8b, 0x5d, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0xb8, 0x96, 0xd2, 0x1a, 0x10, 0x50, 0xb8, 0x50, 0, 0, 0, 0x50, 0x8d, 0x45, 0xc8, 0xe8, 0x2b, 0x73, 0xff, 0xff, 0x50, 0xe8, 0x74, 0x78, 0xff, 0xff, 0x83, 0xc4, 0x18, 0xe8, 0xfd, 0xef, 0xf3, 0xff, 0xe8, 0x90, 0xb3, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x50, 0x73, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0x4b, 0xbf, 0xf2, 0xff, 0xe8, 0xfa, 0xf, 0xf8, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0x36, 0xbf, 0xf2, 0xff, 0xe8, 0xb5, 0xf, 0xf8, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xa2, 0xe3, 0xfd, 0xff, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x7b, 0xc5, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xe, 0x4e, 0xfb, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x1b, 0xf, 0xf8, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xe4, 0xd, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x8a, 0xb6, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1014a582, 0x5)   pushd(0x68);                          /* push dword 0x68 */
    II(0x1014a587, 0x5)   calld(sys_check_available_stack_size, 0x1b7c6); /* call 0x10165d52 */
    II(0x1014a58c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1014a58d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1014a58e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014a58f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014a590, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014a591, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014a593, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x1014a599, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1014a59c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1014a59f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a5a2, 0x4)   test(memb_a32(ds, eax + 0x15), 0x10); /* test byte [eax+0x15], 0x10 */
    II(0x1014a5a6, 0x6)   jzd(0x1014a862, 0x2b6);               /* jz dword 0x1014a862 */
    II(0x1014a5ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014a5af, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014a5b2, 0x4)   add(memw_a32(ds, edx + 0x52), ax);    /* add [edx+0x52], ax */
    II(0x1014a5b6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014a5b9, 0x3)   mov(edx, memd_a32(ds, edx + 0x50));   /* mov edx, [edx+0x50] */
    II(0x1014a5bc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014a5bf, 0x3)   cmp(edx, 0xf);                        /* cmp edx, 0xf */
    II(0x1014a5c2, 0x6)   jld(0x1014a862, 0x29a);               /* jl dword 0x1014a862 */
    II(0x1014a5c8, 0x3)   lea(edi, ebp - 0x1c);                 /* lea edi, [ebp-0x1c] */
    II(0x1014a5cb, 0x5)   mov(esi, 0x101bd8f4);                 /* mov esi, 0x101bd8f4 */
    II(0x1014a5d0, 0x1)   movsd_a32();                          /* movsd */
    II(0x1014a5d1, 0x1)   movsb_a32();                          /* movsb */
    II(0x1014a5d2, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x1014a5d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a5d9, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1014a5dc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014a5df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a5e2, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014a5e5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014a5ea, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1014a5f0, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x1014a5f6, 0x5)   calld(0x1008b104, -0xbf4f7);          /* call 0x1008b104 */
    II(0x1014a5fb, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1014a5fe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a600, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1014a602, 0x5)   calld(0x10076800, -0xd3e07);          /* call 0x10076800 */
    II(0x1014a607, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a60a, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014a60d, 0x5)   calld(0x100cb74c, -0x7eec6);          /* call 0x100cb74c */
    II(0x1014a612, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1014a614, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a617, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1014a61a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014a61d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a620, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014a623, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014a628, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1014a62e, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x1014a634, 0x5)   calld(0x100cb63c, -0x7effd);          /* call 0x100cb63c */
    II(0x1014a639, 0x5)   calld(/* sys */ 0x10165e9b, 0x1b85d); /* call 0x10165e9b */
    II(0x1014a63e, 0x3)   lea(eax, eax + eax * 0x4);            /* lea eax, [eax+eax*4] */
    II(0x1014a641, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x1014a644, 0x4)   mov(al, memb_a32(ds, eax + ebp - 0x1c)); /* mov al, [eax+ebp-0x1c] */
    II(0x1014a648, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x1014a64b, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0xc));  /* movsx ebx, byte [ebp-0xc] */
    II(0x1014a64f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a652, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1014a655, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014a658, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a65b, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014a65e, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014a660, 0x1)   cwde();                               /* cwde */
    II(0x1014a661, 0x5)   calld(0x100dfdf9, -0x6a86d);          /* call 0x100dfdf9 */
    II(0x1014a666, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x1014a669:
    II(0x1014a669, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1014a66c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014a66f, 0x4)   cmp(ax, memw_a32(ds, edx + 0x52));    /* cmp ax, [edx+0x52] */
    II(0x1014a673, 0x6)   jgd(0x1014a743, 0xca);                /* jg dword 0x1014a743 */
    II(0x1014a679, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1014a67c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014a67f, 0x4)   sub(memw_a32(ds, edx + 0x52), ax);    /* sub [edx+0x52], ax */
    II(0x1014a683, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x1014a687, 0x2)   jnzd(0x1014a6d6, 0x4d);               /* jnz 0x1014a6d6 */
    II(0x1014a689, 0x5)   mov(eax, 0x24);                       /* mov eax, 0x24 */
    II(0x1014a68e, 0x5)   calld(sys_new, 0x1b76d);              /* call 0x10165e00 */
    II(0x1014a693, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x1014a696, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1014a699, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1014a69c, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x1014a6a0, 0x2)   jzd(0x1014a6c2, 0x20);                /* jz 0x1014a6c2 */
    II(0x1014a6a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a6a5, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014a6a8, 0x5)   calld(0x100cb6f0, -0x7efbd);          /* call 0x100cb6f0 */
    II(0x1014a6ad, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a6af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1014a6b2, 0x5)   calld(0x100ca2f8, -0x803bf);          /* call 0x100ca2f8 */
    II(0x1014a6b7, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x1014a6ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1014a6bd, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1014a6c0, 0x2)   jmpd(0x1014a6c8, 0x6);                /* jmp 0x1014a6c8 */
l_0x1014a6c2:
    II(0x1014a6c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1014a6c5, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
l_0x1014a6c8:
    II(0x1014a6c8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x1014a6cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a6ce, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014a6d1, 0x5)   calld(0x100cb77c, -0x7ef5a);          /* call 0x100cb77c */
l_0x1014a6d6:
    II(0x1014a6d6, 0x4)   movsx(edx, memb_a32(ss, ebp - 0xc));  /* movsx edx, byte [ebp-0xc] */
    II(0x1014a6da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a6dd, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014a6e0, 0x5)   calld(0x10076730, -0xd3fb5);          /* call 0x10076730 */
    II(0x1014a6e5, 0x5)   calld(0x10163b41, 0x19457);           /* call 0x10163b41 */
    II(0x1014a6ea, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1014a6ec, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0xc));  /* movsx ebx, byte [ebp-0xc] */
    II(0x1014a6f0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014a6f3, 0x3)   mov(edx, memd_a32(ds, edx + 0x6));    /* mov edx, [edx+0x6] */
    II(0x1014a6f6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014a6f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a6fc, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014a6ff, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014a701, 0x1)   cwde();                               /* cwde */
    II(0x1014a702, 0x5)   calld(0x100dfd69, -0x6a99e);          /* call 0x100dfd69 */
    II(0x1014a707, 0x3)   add(memw_a32(ds, ecx), ax);           /* add [ecx], ax */
    II(0x1014a70a, 0x5)   calld(/* sys */ 0x10165e9b, 0x1b78c); /* call 0x10165e9b */
    II(0x1014a70f, 0x3)   lea(eax, eax + eax * 0x4);            /* lea eax, [eax+eax*4] */
    II(0x1014a712, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x1014a715, 0x4)   mov(al, memb_a32(ds, eax + ebp - 0x1c)); /* mov al, [eax+ebp-0x1c] */
    II(0x1014a719, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x1014a71c, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0xc));  /* movsx ebx, byte [ebp-0xc] */
    II(0x1014a720, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x1014a723, 0x3)   mov(edx, memd_a32(ds, ecx + 0x6));    /* mov edx, [ecx+0x6] */
    II(0x1014a726, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014a729, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a72c, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014a72f, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014a731, 0x1)   cwde();                               /* cwde */
    II(0x1014a732, 0x5)   calld(0x100dfdf9, -0x6a93e);          /* call 0x100dfdf9 */
    II(0x1014a737, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1014a73a, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1014a73e, 0x5)   jmpd(0x1014a669, -0xda);              /* jmp 0x1014a669 */
l_0x1014a743:
    II(0x1014a743, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x1014a747, 0x6)   jzd(0x1014a829, 0xdc);                /* jz dword 0x1014a829 */
    II(0x1014a74d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a750, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a752, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1014a755, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014a757, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1014a75c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1014a75e, 0x2)   jnzd(0x1014a7da, 0x7a);               /* jnz 0x1014a7da */
    II(0x1014a760, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a763, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1014a766, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1014a769, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a76c, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1014a76f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014a772, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014a775, 0x5)   calld(0x10076aac, -0xd3cce);          /* call 0x10076aac */
    II(0x1014a77a, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x1014a77c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014a77f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a781, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a784, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x1014a787, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014a78a, 0x1)   inc(eax);                             /* inc eax */
    II(0x1014a78b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014a78c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a78f, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1014a792, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014a795, 0x1)   inc(eax);                             /* inc eax */
    II(0x1014a796, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014a797, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a79a, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1014a79d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014a7a0, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1014a7a3, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x1014a7a9, 0x5)   mov(eax, 0x101ad296);                 /* mov eax, 0x101ad296 */ /* "%s at [%i,%i] has increased in experience." */
    II(0x1014a7ae, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014a7af, 0x5)   mov(eax, 0x50);                       /* mov eax, 0x50 */
    II(0x1014a7b4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014a7b5, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1014a7b8, 0x5)   calld(my_string_ctor, -0x8cd5);       /* call 0x10141ae8 */
    II(0x1014a7bd, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014a7be, 0x5)   calld(0x10142037, -0x878c);           /* call 0x10142037 */
    II(0x1014a7c3, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x1014a7c6, 0x5)   calld(my_strobj_c_str_v2, -0xc1003);  /* call 0x100897c8 */
    II(0x1014a7cb, 0x5)   calld(0x10115b60, -0x34c70);          /* call 0x10115b60 */
    II(0x1014a7d0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a7d2, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1014a7d5, 0x5)   calld(my_string_dtor, -0x8cb0);       /* call 0x10141b2a */
l_0x1014a7da:
    II(0x1014a7da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a7dd, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014a7e0, 0x5)   calld(0x10076730, -0xd40b5);          /* call 0x10076730 */
    II(0x1014a7e5, 0x5)   calld(0x100cb7e4, -0x7f006);          /* call 0x100cb7e4 */
    II(0x1014a7ea, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1014a7ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a7f2, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014a7f5, 0x5)   calld(0x10076730, -0xd40ca);          /* call 0x10076730 */
    II(0x1014a7fa, 0x5)   calld(0x100cb7b4, -0x7f04b);          /* call 0x100cb7b4 */
    II(0x1014a7ff, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x1014a806, 0x2)   jzd(0x1014a810, 0x8);                 /* jz 0x1014a810 */
    II(0x1014a808, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a80b, 0x5)   calld(0x10128bb2, -0x21c5e);          /* call 0x10128bb2 */
l_0x1014a810:
    II(0x1014a810, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1014a815, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a818, 0x5)   calld(0x10076d98, -0xd3a85);          /* call 0x10076d98 */
    II(0x1014a81d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014a81f, 0x2)   jzd(0x1014a829, 0x8);                 /* jz 0x1014a829 */
    II(0x1014a821, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a824, 0x5)   calld(0x100ff637, -0x4b1f2);          /* call 0x100ff637 */
l_0x1014a829:
    II(0x1014a829, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1014a82c, 0x5)   calld(0x100cb74c, -0x7f0e5);          /* call 0x100cb74c */
    II(0x1014a831, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1014a833, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a836, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1014a839, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014a83c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a83f, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014a842, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014a847, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1014a84d, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x1014a853, 0x5)   calld(0x100cb63c, -0x7f21c);          /* call 0x100cb63c */
    II(0x1014a858, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a85a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1014a85d, 0x5)   calld(0x10075eec, -0xd4976);          /* call 0x10075eec */
l_0x1014a862:
    II(0x1014a862, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014a864, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014a865, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014a866, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014a867, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014a868, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1014a869, 0x1)   retd();                               /* ret */
FUNC_END

