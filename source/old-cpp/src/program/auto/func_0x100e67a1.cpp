FUNC_BEGIN(0x100e67a1, 0xdfd0830937f13910, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xa7, 0xf5, 0x7, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xf0, 0x89, 0x4d, 0xfc, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xaf, 0x6, 0xf9, 0xff, 0x89, 0x45, 0xe4, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0xa1, 0x6, 0xf9, 0xff, 0x89, 0x45, 0xe8, 0xa1, 0x46, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x8d, 0x50, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0xe8, 0x92, 0x2f, 0xfa, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x15, 0x48, 0x87, 0x1b, 0x10, 0xc1, 0xfa, 0x10, 0x4a, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x7c, 0x2f, 0xfa, 0xff, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x5, 0x4a, 0x87, 0x1b, 0x10, 0x7c, 0x2, 0xeb, 0x24, 0xf, 0xbf, 0x45, 0x14, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0xf, 0xbf, 0x4d, 0xf8, 0xf, 0xbf, 0x5d, 0xe4, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0xe8, 0x5b, 0x3d, 0x8, 0, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x5, 0x48, 0x87, 0x1b, 0x10, 0x7c, 0x2, 0xeb, 0x24, 0xf, 0xbf, 0x45, 0x14, 0x50, 0xf, 0xbf, 0x45, 0xe0, 0x50, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0xf, 0xbf, 0x4d, 0xe8, 0xf, 0xbf, 0x5d, 0xf0, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0xe8, 0x21, 0x3d, 0x8, 0, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x5, 0x4a, 0x87, 0x1b, 0x10, 0x7c, 0x2, 0xeb, 0x24, 0xf, 0xbf, 0x45, 0x14, 0x50, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x5d, 0xe4, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0xe8, 0xe7, 0x3c, 0x8, 0, 0xf, 0xbf, 0x45, 0xf4, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x5, 0x48, 0x87, 0x1b, 0x10, 0x7c, 0x2, 0xeb, 0x24, 0xf, 0xbf, 0x45, 0x14, 0x50, 0xf, 0xbf, 0x45, 0xe0, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0xf, 0xbf, 0x4d, 0xe8, 0xf, 0xbf, 0x5d, 0xf4, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0xe8, 0xad, 0x3c, 0x8, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x8, 0}))
    II(0x100e67a1, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100e67a6, 0x5)   calld(sys_check_available_stack_size, 0x7f5a7); /* call 0x10165d52 */
    II(0x100e67ab, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e67ac, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e67ad, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e67ae, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e67b0, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100e67b6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100e67b9, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100e67bc, 0x3)   mov(memd_a32(ss, ebp - 0x10), ebx);   /* mov [ebp-0x10], ebx */
    II(0x100e67bf, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100e67c2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e67c4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100e67c8, 0x5)   calld(0x10076e7c, -0x6f951);          /* call 0x10076e7c */
    II(0x100e67cd, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100e67d0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e67d2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e67d6, 0x5)   calld(0x10076e7c, -0x6f95f);          /* call 0x10076e7c */
    II(0x100e67db, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100e67de, 0x5)   mov(eax, memd_a32(ds, 0x101b8746));   /* mov eax, [0x101b8746] */
    II(0x100e67e3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e67e6, 0x3)   lea(edx, eax - 0x1);                  /* lea edx, [eax-0x1] */
    II(0x100e67e9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100e67ed, 0x5)   calld(my_min, -0x5d06e);              /* call 0x10089784 */
    II(0x100e67f2, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100e67f5, 0x6)   mov(edx, memd_a32(ds, 0x101b8748));   /* mov edx, [0x101b8748] */
    II(0x100e67fb, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e67fe, 0x1)   dec(edx);                             /* dec edx */
    II(0x100e67ff, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e6803, 0x5)   calld(my_min, -0x5d084);              /* call 0x10089784 */
    II(0x100e6808, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100e680b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e680f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e6811, 0x2)   jld(0x100e681f, 0xc);                 /* jl 0x100e681f */
    II(0x100e6813, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e6816, 0x7)   cmp(ax, memw_a32(ds, 0x101b874a));    /* cmp ax, [0x101b874a] */
    II(0x100e681d, 0x2)   jld(0x100e6821, 0x2);                 /* jl 0x100e6821 */
l_0x100e681f:
    II(0x100e681f, 0x2)   jmpd(0x100e6845, 0x24);               /* jmp 0x100e6845 */
l_0x100e6821:
    II(0x100e6821, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100e6825, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e6826, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e682a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e682b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100e682f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e6830, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x8));  /* movsx ecx, word [ebp-0x8] */
    II(0x100e6834, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x100e6838, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100e683d, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100e6840, 0x5)   calld(/* sys */ 0x1016a5a0, 0x83d5b); /* call 0x1016a5a0 */
l_0x100e6845:
    II(0x100e6845, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100e6849, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e684b, 0x2)   jld(0x100e6859, 0xc);                 /* jl 0x100e6859 */
    II(0x100e684d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e6850, 0x7)   cmp(ax, memw_a32(ds, 0x101b8748));    /* cmp ax, [0x101b8748] */
    II(0x100e6857, 0x2)   jld(0x100e685b, 0x2);                 /* jl 0x100e685b */
l_0x100e6859:
    II(0x100e6859, 0x2)   jmpd(0x100e687f, 0x24);               /* jmp 0x100e687f */
l_0x100e685b:
    II(0x100e685b, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100e685f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e6860, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100e6864, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e6865, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100e6869, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e686a, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x18)); /* movsx ecx, word [ebp-0x18] */
    II(0x100e686e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x100e6872, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100e6877, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100e687a, 0x5)   calld(/* sys */ 0x1016a5a0, 0x83d21); /* call 0x1016a5a0 */
l_0x100e687f:
    II(0x100e687f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e6883, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e6885, 0x2)   jld(0x100e6893, 0xc);                 /* jl 0x100e6893 */
    II(0x100e6887, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e688a, 0x7)   cmp(ax, memw_a32(ds, 0x101b874a));    /* cmp ax, [0x101b874a] */
    II(0x100e6891, 0x2)   jld(0x100e6895, 0x2);                 /* jl 0x100e6895 */
l_0x100e6893:
    II(0x100e6893, 0x2)   jmpd(0x100e68b9, 0x24);               /* jmp 0x100e68b9 */
l_0x100e6895:
    II(0x100e6895, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100e6899, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e689a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e689e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e689f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100e68a3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e68a4, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100e68a8, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x100e68ac, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100e68b1, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100e68b4, 0x5)   calld(/* sys */ 0x1016a5a0, 0x83ce7); /* call 0x1016a5a0 */
l_0x100e68b9:
    II(0x100e68b9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100e68bd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e68bf, 0x2)   jld(0x100e68cd, 0xc);                 /* jl 0x100e68cd */
    II(0x100e68c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e68c4, 0x7)   cmp(ax, memw_a32(ds, 0x101b8748));    /* cmp ax, [0x101b8748] */
    II(0x100e68cb, 0x2)   jld(0x100e68cf, 0x2);                 /* jl 0x100e68cf */
l_0x100e68cd:
    II(0x100e68cd, 0x2)   jmpd(0x100e68f3, 0x24);               /* jmp 0x100e68f3 */
l_0x100e68cf:
    II(0x100e68cf, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100e68d3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e68d4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100e68d8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e68d9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100e68dd, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e68de, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x18)); /* movsx ecx, word [ebp-0x18] */
    II(0x100e68e2, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x100e68e6, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100e68eb, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100e68ee, 0x5)   calld(/* sys */ 0x1016a5a0, 0x83cad); /* call 0x1016a5a0 */
l_0x100e68f3:
    II(0x100e68f3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e68f5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e68f6, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e68f7, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e68f8, 0x3)   retd(0x8);                            /* ret 0x8 */
FUNC_END

