FUNC_BEGIN(0x100dac00, 0x64f406ce575fa1e4, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x48, 0xb1, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x5d, 0xf, 0x8d, 0xcd, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x5, 0xcf, 0x1, 0, 0, 0x1, 0xd0, 0xe8, 0xa3, 0xa, 0xff, 0xff, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x5b, 0x1, 0xd8, 0xe8, 0x8b, 0xa, 0xff, 0xff, 0xe8, 0x28, 0x91, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x8d, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x5, 0xcf, 0x1, 0, 0, 0x1, 0xd0, 0xe8, 0xa6, 0xba, 0xf9, 0xff, 0xe8, 0x55, 0xb, 0xff, 0xff, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xfc, 0x81, 0xc3, 0xcf, 0x1, 0, 0, 0x1, 0xd8, 0xe8, 0x88, 0xba, 0xf9, 0xff, 0xe8, 0x7, 0xb, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xfc, 0x81, 0xc2, 0xcf, 0x1, 0, 0, 0x1, 0xd0, 0xe8, 0xc8, 0xba, 0xf9, 0xff, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x49, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0x58, 0x9, 0xff, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x12, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x49, 0xc1, 0xf8, 0x10, 0xe8, 0x35, 0xdd, 0x4, 0, 0xe9, 0x20, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x49, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x4d, 0x8b, 0x5d, 0xfc, 0x66, 0x2b, 0x53, 0x4f, 0x66, 0x1, 0x90, 0x83, 0xa5, 0x1c, 0x10, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100dac00, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100dac05, 0x5)   calld(sys_check_available_stack_size, 0x8b148); /* call 0x10165d52 */
    II(0x100dac0a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100dac0b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100dac0c, 0x1)   pushd(edx);                           /* push edx */
    II(0x100dac0d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100dac0e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100dac0f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100dac10, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100dac12, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100dac18, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100dac1b, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100dac22, 0x2)   jmpd(0x100dac2a, 0x6);                /* jmp 0x100dac2a */
l_0x100dac24:
    II(0x100dac24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dac27, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100dac2a:
    II(0x100dac2a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100dac2e, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x100dac31, 0x6)   jged(0x100dad04, 0xcd);               /* jge dword 0x100dad04 */
    II(0x100dac37, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100dac3b, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100dac3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dac41, 0x5)   add(eax, 0x1cf);                      /* add eax, 0x1cf */
    II(0x100dac46, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100dac48, 0x5)   calld(0x100cb6f0, -0xf55d);           /* call 0x100cb6f0 */
    II(0x100dac4d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dac4f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100dac53, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dac56, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100dac58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dac5b, 0x3)   add(eax, 0x5b);                       /* add eax, 0x5b */
    II(0x100dac5e, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100dac60, 0x5)   calld(0x100cb6f0, -0xf575);           /* call 0x100cb6f0 */
    II(0x100dac65, 0x5)   calld(0x10163d92, 0x89128);           /* call 0x10163d92 */
    II(0x100dac6a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100dac6c, 0x6)   jzd(0x100dacff, 0x8d);                /* jz dword 0x100dacff */
    II(0x100dac72, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100dac76, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dac79, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dac7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dac7e, 0x5)   add(eax, 0x1cf);                      /* add eax, 0x1cf */
    II(0x100dac83, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100dac85, 0x5)   calld(0x10076730, -0x6455a);          /* call 0x10076730 */
    II(0x100dac8a, 0x5)   calld(0x100cb7e4, -0xf4ab);           /* call 0x100cb7e4 */
    II(0x100dac8f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dac91, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100dac95, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dac98, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100dac9b, 0x6)   add(ebx, 0x1cf);                      /* add ebx, 0x1cf */
    II(0x100daca1, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100daca3, 0x5)   calld(0x10076730, -0x64578);          /* call 0x10076730 */
    II(0x100daca8, 0x5)   calld(0x100cb7b4, -0xf4f9);           /* call 0x100cb7b4 */
    II(0x100dacad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100dacb1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dacb4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dacb7, 0x6)   add(edx, 0x1cf);                      /* add edx, 0x1cf */
    II(0x100dacbd, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100dacbf, 0x5)   calld(0x1007678c, -0x64538);          /* call 0x1007678c */
    II(0x100dacc4, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100dacc6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100dacca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100daccd, 0x3)   mov(eax, memd_a32(ds, eax + 0x49));   /* mov eax, [eax+0x49] */
    II(0x100dacd0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dacd3, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100dacd9, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x100dacdf, 0x5)   calld(0x100cb63c, -0xf6a8);           /* call 0x100cb63c */
    II(0x100dace4, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100daceb, 0x2)   jzd(0x100dacff, 0x12);                /* jz 0x100dacff */
    II(0x100daced, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100dacf1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dacf4, 0x3)   mov(eax, memd_a32(ds, eax + 0x49));   /* mov eax, [eax+0x49] */
    II(0x100dacf7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dacfa, 0x5)   calld(0x10128a34, 0x4dd35);           /* call 0x10128a34 */
l_0x100dacff:
    II(0x100dacff, 0x5)   jmpd(0x100dac24, -0xe0);              /* jmp 0x100dac24 */
l_0x100dad04:
    II(0x100dad04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dad07, 0x3)   mov(eax, memd_a32(ds, eax + 0x49));   /* mov eax, [eax+0x49] */
    II(0x100dad0a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dad0d, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100dad13, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dad16, 0x4)   mov(dx, memw_a32(ds, edx + 0x4d));    /* mov dx, [edx+0x4d] */
    II(0x100dad1a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100dad1d, 0x4)   sub(dx, memw_a32(ds, ebx + 0x4f));    /* sub dx, [ebx+0x4f] */
    II(0x100dad21, 0x7)   add(memw_a32(ds, eax + 0x101ca583), dx); /* add [eax+0x101ca583], dx */
    II(0x100dad28, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100dad2a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100dad2b, 0x1)   popd(edi);                            /* pop edi */
    II(0x100dad2c, 0x1)   popd(esi);                            /* pop esi */
    II(0x100dad2d, 0x1)   popd(edx);                            /* pop edx */
    II(0x100dad2e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100dad2f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100dad30, 0x1)   retd();                               /* ret */
FUNC_END

