FUNC_BEGIN(0x100a40b3, 0xa56026c89b15d53c, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x95, 0x1c, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x83, 0xf8, 0x2, 0xf, 0x84, 0x45, 0x2, 0, 0, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x21, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0xf, 0x85, 0x19, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xe2, 0x6d, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf8, 0xe8, 0x54, 0x6d, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0xd2, 0x2a, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x41, 0x6c, 0x9, 0, 0x84, 0xc0, 0x74, 0x52, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x1b, 0x8d, 0x45, 0xf8, 0xe8, 0x7d, 0x6c, 0xfe, 0xff, 0xe8, 0x44, 0x6c, 0xfe, 0xff, 0xf, 0xbf, 0xd0, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2a, 0x8d, 0x45, 0xf8, 0xe8, 0x62, 0x6c, 0xfe, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0xff, 0x52, 0x4c, 0x84, 0xc0, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x3d, 0x4a, 0xfe, 0xff, 0xe9, 0x9f, 0x1, 0, 0, 0xeb, 0x98, 0xa1, 0xbe, 0x31, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0xf, 0x85, 0x83, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x28, 0xe8, 0x97, 0x21, 0xfd, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb, 0x23, 0xfd, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x3a, 0x2a, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xa9, 0x6b, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0x3f, 0x1, 0, 0, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x18, 0x8d, 0x45, 0xf0, 0xe8, 0xbd, 0x21, 0xfd, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x14, 0x8d, 0x45, 0xf0, 0xe8, 0xa5, 0x21, 0xfd, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xf0, 0xe8, 0x8f, 0x21, 0xfd, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x11, 0x8d, 0x45, 0xf0, 0xe8, 0xad, 0x21, 0xfd, 0xff, 0xe8, 0xaf, 0xec, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x26, 0x8d, 0x45, 0xf0, 0xe8, 0x66, 0x21, 0xfd, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x5, 0xe9, 0xad, 0, 0, 0, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x8d, 0x45, 0xf0, 0xe8, 0x35, 0x21, 0xfd, 0xff, 0xe8, 0x3c, 0xe4, 0xa, 0, 0x85, 0xc0, 0x74, 0x2e, 0x8d, 0x45, 0xf0, 0xe8, 0x58, 0x21, 0xfd, 0xff, 0xe8, 0x99, 0x5a, 0, 0, 0xf, 0xbe, 0xd8, 0x8d, 0x45, 0xf0, 0xe8, 0x48, 0x21, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0xa, 0x21, 0xfd, 0xff, 0xe8, 0x11, 0xe4, 0xa, 0, 0xe8, 0xd1, 0xf3, 0xff, 0xff, 0xeb, 0x21, 0x8d, 0x45, 0xf0, 0xe8, 0x2a, 0x21, 0xfd, 0xff, 0xe8, 0x6b, 0x5a, 0, 0, 0xf, 0xbe, 0xd8, 0x8d, 0x45, 0xf0, 0xe8, 0x1a, 0x21, 0xfd, 0xff, 0x89, 0xc2, 0x31, 0xc0, 0xe8, 0xa7, 0xf1, 0xff, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xc1, 0x68, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x28, 0xe8, 0x14, 0x68, 0xfe, 0xff, 0xe8, 0x17, 0x40, 0xa, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x76, 0x1f, 0x66, 0xc7, 0x5, 0xc0, 0x31, 0x1c, 0x10, 0x1, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x6e, 0x1c, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xb4, 0x48, 0xfe, 0xff, 0xeb, 0x19, 0xe9, 0xa7, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x53, 0x1c, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x99, 0x48, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a40b3, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100a40b8, 0x5)   calld(sys_check_available_stack_size, 0xc1c95); /* call 0x10165d52 */
    II(0x100a40bd, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a40be, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a40bf, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a40c0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a40c1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a40c2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a40c3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a40c5, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100a40cb, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a40ce, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a40d0, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100a40d5, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100a40d8, 0x6)   jzd(0x100a4323, 0x245);               /* jz dword 0x100a4323 */
    II(0x100a40de, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a40e0, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100a40e5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a40e7, 0x2)   jnzd(0x100a410a, 0x21);               /* jnz 0x100a410a */
    II(0x100a40e9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a40eb, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100a40f0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100a40f6, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100a40fc, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a4101, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100a4104, 0x6)   jnzd(0x100a4323, 0x219);              /* jnz dword 0x100a4323 */
l_0x100a410a:
    II(0x100a410a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a410d, 0x5)   calld(0x1008aef4, -0x1921e);          /* call 0x1008aef4 */
    II(0x100a4112, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4114, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a4117, 0x5)   calld(0x1008ae70, -0x192ac);          /* call 0x1008ae70 */
    II(0x100a411c, 0x2)   jmpd(0x100a4126, 0x8);                /* jmp 0x100a4126 */
l_0x100a411e:
    II(0x100a411e, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a4121, 0x5)   calld(0x10076bf8, -0x2d52e);          /* call 0x10076bf8 */
l_0x100a4126:
    II(0x100a4126, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4128, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a412b, 0x5)   calld(0x1013ad71, 0x96c41);           /* call 0x1013ad71 */
    II(0x100a4130, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a4132, 0x2)   jzd(0x100a4186, 0x52);                /* jz 0x100a4186 */
    II(0x100a4134, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a4136, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100a413b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a413d, 0x2)   jnzd(0x100a415a, 0x1b);               /* jnz 0x100a415a */
    II(0x100a413f, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a4142, 0x5)   calld(0x1008adc4, -0x19383);          /* call 0x1008adc4 */
    II(0x100a4147, 0x5)   calld(0x1008ad90, -0x193bc);          /* call 0x1008ad90 */
    II(0x100a414c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a414f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a4151, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100a4156, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a4158, 0x2)   jnzd(0x100a4184, 0x2a);               /* jnz 0x100a4184 */
l_0x100a415a:
    II(0x100a415a, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a415d, 0x5)   calld(0x1008adc4, -0x1939e);          /* call 0x1008adc4 */
    II(0x100a4162, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a4165, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a4168, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a416b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a416e, 0x3)   calld_abs(memd_a32(ds, edx + 0x4c));  /* call dword near [edx+0x4c] */
    II(0x100a4171, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a4173, 0x2)   jzd(0x100a4184, 0xf);                 /* jz 0x100a4184 */
    II(0x100a4175, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4177, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a417a, 0x5)   calld(0x10088bbc, -0x1b5c3);          /* call 0x10088bbc */
    II(0x100a417f, 0x5)   jmpd(0x100a4323, 0x19f);              /* jmp 0x100a4323 */
l_0x100a4184:
    II(0x100a4184, 0x2)   jmpd(0x100a411e, -0x68);              /* jmp 0x100a411e */
l_0x100a4186:
    II(0x100a4186, 0x5)   mov(eax, memd_a32(ds, 0x101c31be));   /* mov eax, [0x101c31be] */
    II(0x100a418b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a418e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4190, 0x6)   jnzd(0x100a4319, 0x183);              /* jnz dword 0x100a4319 */
    II(0x100a4196, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4199, 0x3)   add(eax, 0x28);                       /* add eax, 0x28 */
    II(0x100a419c, 0x5)   calld(0x10076338, -0x2de69);          /* call 0x10076338 */
    II(0x100a41a1, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100a41a4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a41a6, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a41a8, 0x5)   calld(0x100764b8, -0x2dcf5);          /* call 0x100764b8 */
    II(0x100a41ad, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100a41b4, 0x2)   jmpd(0x100a41be, 0x8);                /* jmp 0x100a41be */
l_0x100a41b6:
    II(0x100a41b6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a41b9, 0x5)   calld(0x10076bf8, -0x2d5c6);          /* call 0x10076bf8 */
l_0x100a41be:
    II(0x100a41be, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a41c0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a41c3, 0x5)   calld(0x1013ad71, 0x96ba9);           /* call 0x1013ad71 */
    II(0x100a41c8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a41ca, 0x6)   jzd(0x100a430f, 0x13f);               /* jz dword 0x100a430f */
    II(0x100a41d0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a41d2, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100a41d7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a41d9, 0x2)   jnzd(0x100a41f3, 0x18);               /* jnz 0x100a41f3 */
    II(0x100a41db, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a41de, 0x5)   calld(0x100763a0, -0x2de43);          /* call 0x100763a0 */
    II(0x100a41e3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a41e5, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100a41e8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a41ea, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100a41ef, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a41f1, 0x2)   jnzd(0x100a4207, 0x14);               /* jnz 0x100a4207 */
l_0x100a41f3:
    II(0x100a41f3, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a41f6, 0x5)   calld(0x100763a0, -0x2de5b);          /* call 0x100763a0 */
    II(0x100a41fb, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100a41fe, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a4203, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4205, 0x2)   jgd(0x100a4209, 0x2);                 /* jg 0x100a4209 */
l_0x100a4207:
    II(0x100a4207, 0x2)   jmpd(0x100a421d, 0x14);               /* jmp 0x100a421d */
l_0x100a4209:
    II(0x100a4209, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a420c, 0x5)   calld(0x100763a0, -0x2de71);          /* call 0x100763a0 */
    II(0x100a4211, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100a4214, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a4219, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a421b, 0x2)   jgd(0x100a421f, 0x2);                 /* jg 0x100a421f */
l_0x100a421d:
    II(0x100a421d, 0x2)   jmpd(0x100a4230, 0x11);               /* jmp 0x100a4230 */
l_0x100a421f:
    II(0x100a421f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a4222, 0x5)   calld(0x100763d4, -0x2de53);          /* call 0x100763d4 */
    II(0x100a4227, 0x5)   calld(0x100a2edb, -0x1351);           /* call 0x100a2edb */
    II(0x100a422c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a422e, 0x2)   jnzd(0x100a4232, 0x2);                /* jnz 0x100a4232 */
l_0x100a4230:
    II(0x100a4230, 0x2)   jmpd(0x100a4258, 0x26);               /* jmp 0x100a4258 */
l_0x100a4232:
    II(0x100a4232, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a4235, 0x5)   calld(0x100763a0, -0x2de9a);          /* call 0x100763a0 */
    II(0x100a423a, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100a423d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a4242, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100a4248, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100a424e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a4253, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100a4256, 0x2)   jzd(0x100a425d, 0x5);                 /* jz 0x100a425d */
l_0x100a4258:
    II(0x100a4258, 0x5)   jmpd(0x100a430a, 0xad);               /* jmp 0x100a430a */
l_0x100a425d:
    II(0x100a425d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a4260, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
    II(0x100a4263, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a4266, 0x5)   calld(0x100763a0, -0x2decb);          /* call 0x100763a0 */
    II(0x100a426b, 0x5)   calld(0x101526ac, 0xae43c);           /* call 0x101526ac */
    II(0x100a4270, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4272, 0x2)   jzd(0x100a42a2, 0x2e);                /* jz 0x100a42a2 */
    II(0x100a4274, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a4277, 0x5)   calld(0x100763d4, -0x2dea8);          /* call 0x100763d4 */
    II(0x100a427c, 0x5)   calld(0x100a9d1a, 0x5a99);            /* call 0x100a9d1a */
    II(0x100a4281, 0x3)   movsx(ebx, al);                       /* movsx ebx, al */
    II(0x100a4284, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a4287, 0x5)   calld(0x100763d4, -0x2deb8);          /* call 0x100763d4 */
    II(0x100a428c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a428e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a4291, 0x5)   calld(0x100763a0, -0x2def6);          /* call 0x100763a0 */
    II(0x100a4296, 0x5)   calld(0x101526ac, 0xae411);           /* call 0x101526ac */
    II(0x100a429b, 0x5)   calld(0x100a3671, -0xc2f);            /* call 0x100a3671 */
    II(0x100a42a0, 0x2)   jmpd(0x100a42c3, 0x21);               /* jmp 0x100a42c3 */
l_0x100a42a2:
    II(0x100a42a2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a42a5, 0x5)   calld(0x100763d4, -0x2ded6);          /* call 0x100763d4 */
    II(0x100a42aa, 0x5)   calld(0x100a9d1a, 0x5a6b);            /* call 0x100a9d1a */
    II(0x100a42af, 0x3)   movsx(ebx, al);                       /* movsx ebx, al */
    II(0x100a42b2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a42b5, 0x5)   calld(0x100763d4, -0x2dee6);          /* call 0x100763d4 */
    II(0x100a42ba, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a42bc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a42be, 0x5)   calld(0x100a346a, -0xe59);            /* call 0x100a346a */
l_0x100a42c3:
    II(0x100a42c3, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a42c6, 0x5)   calld(0x1008ab8c, -0x1973f);          /* call 0x1008ab8c */
    II(0x100a42cb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a42cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a42d0, 0x3)   add(eax, 0x28);                       /* add eax, 0x28 */
    II(0x100a42d3, 0x5)   calld(0x1008aaec, -0x197ec);          /* call 0x1008aaec */
    II(0x100a42d8, 0x5)   calld(0x101482f4, 0xa4017);           /* call 0x101482f4 */
    II(0x100a42dd, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x100a42e3, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x100a42e9, 0x2)   jbed(0x100a430a, 0x1f);               /* jbe 0x100a430a */
    II(0x100a42eb, 0x9)   mov(memw_a32(ds, 0x101c31c0), 0x1);   /* mov word [0x101c31c0], 0x1 */
    II(0x100a42f4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a42f6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a42f9, 0x5)   calld(0x10075f6c, -0x2e392);          /* call 0x10075f6c */
    II(0x100a42fe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4300, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a4303, 0x5)   calld(0x10088bbc, -0x1b74c);          /* call 0x10088bbc */
    II(0x100a4308, 0x2)   jmpd(0x100a4323, 0x19);               /* jmp 0x100a4323 */
l_0x100a430a:
    II(0x100a430a, 0x5)   jmpd(0x100a41b6, -0x159);             /* jmp 0x100a41b6 */
l_0x100a430f:
    II(0x100a430f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4311, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a4314, 0x5)   calld(0x10075f6c, -0x2e3ad);          /* call 0x10075f6c */
l_0x100a4319:
    II(0x100a4319, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a431b, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a431e, 0x5)   calld(0x10088bbc, -0x1b767);          /* call 0x10088bbc */
l_0x100a4323:
    II(0x100a4323, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a4325, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a4326, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a4327, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a4328, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a4329, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a432a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a432b, 0x1)   retd();                               /* ret */
FUNC_END

