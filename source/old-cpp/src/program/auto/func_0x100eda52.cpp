FUNC_BEGIN(0x100eda52, 0x562ff24be1e41c48, 0x20, ({0x68, 0xcc, 0, 0, 0, 0xe8, 0xf6, 0x82, 0x7, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xa8, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x75, 0x6, 0x80, 0x7d, 0xfc, 0, 0x74, 0x31, 0xba, 0x7c, 0x36, 0x1c, 0x10, 0x8d, 0x45, 0xe0, 0xe8, 0xdb, 0x72, 0xfe, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xb8, 0x1, 0, 0, 0x50, 0xb9, 0xa, 0, 0, 0, 0xbb, 0x64, 0, 0, 0, 0xba, 0x4, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xd9, 0xce, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x59, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0x37, 0x1, 0, 0, 0x83, 0x45, 0xe8, 0x6e, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x5, 0x5a, 0, 0, 0, 0x89, 0x45, 0xd8, 0x8d, 0x7d, 0xcc, 0xbe, 0x80, 0x36, 0x1c, 0x10, 0xa5, 0xa5, 0xa5, 0xb9, 0xc7, 0, 0, 0, 0xbb, 0xe6, 0, 0, 0, 0xba, 0xa5, 0, 0, 0, 0x8d, 0x45, 0xcc, 0xe8, 0x65, 0x78, 0xfe, 0xff, 0xb9, 0xc7, 0, 0, 0, 0xbb, 0xee, 0, 0, 0, 0xba, 0xa5, 0, 0, 0, 0x8d, 0x45, 0xcf, 0xe8, 0x4e, 0x78, 0xfe, 0xff, 0xb9, 0xc7, 0, 0, 0, 0xbb, 0xf5, 0, 0, 0, 0xba, 0xa5, 0, 0, 0, 0x8d, 0x45, 0xd2, 0xe8, 0x37, 0x78, 0xfe, 0xff, 0xb9, 0xc7, 0, 0, 0, 0xbb, 0xd6, 0, 0, 0, 0xba, 0xa5, 0, 0, 0, 0x8d, 0x45, 0xd5, 0xe8, 0x20, 0x78, 0xfe, 0xff, 0xf, 0xbf, 0x45, 0xdc, 0x8d, 0x4, 0x40, 0x8d, 0x55, 0xcc, 0x1, 0xc2, 0x8d, 0x45, 0xc8, 0xe8, 0xe0, 0x71, 0xfe, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x5a, 0, 0, 0, 0x50, 0xb9, 0x2c, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0xb8, 0xe, 0x1f, 0x1a, 0x10, 0x50, 0xb8, 0x3, 0, 0, 0, 0x50, 0x8d, 0x45, 0xc4, 0xe8, 0x21, 0x3f, 0x5, 0, 0x50, 0xe8, 0x6a, 0x44, 0x5, 0, 0x83, 0xc4, 0x10, 0xe8, 0xf3, 0xbb, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0xe8, 0xbb, 0xcd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x41, 0x3f, 0x5, 0, 0xb9, 0x28, 0, 0, 0, 0x8d, 0x5d, 0x9c, 0x8a, 0x45, 0xdc, 0x4, 0x63, 0xf, 0xbe, 0xd0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x7e, 0x86, 0x1, 0, 0xba, 0x7c, 0x36, 0x1c, 0x10, 0x8d, 0x45, 0x98, 0xe8, 0x68, 0x71, 0xfe, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x37, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0x3d, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0x5e, 0xcf, 0xff, 0xff, 0xe9, 0x94, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x12, 0xe8, 0x35, 0x98, 0x7, 0, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xac, 0, 0, 0, 0x50, 0xb9, 0x74, 0, 0, 0, 0x31, 0xdb, 0xba, 0x11, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xfc, 0xfa, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x31, 0xc0, 0xe8, 0xc5, 0xf0, 0xff, 0xff, 0x88, 0x45, 0xec, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x31, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0xf, 0x1, 0, 0, 0x83, 0x45, 0xe8, 0x6e, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x5, 0x5a, 0, 0, 0, 0x89, 0x45, 0xd8, 0x80, 0x7d, 0xec, 0, 0xf, 0x85, 0x92, 0, 0, 0, 0xf, 0xbf, 0x55, 0xdc, 0x69, 0xd2, 0x47, 0x2, 0, 0, 0xff, 0xb2, 0x50, 0xa5, 0x1c, 0x10, 0xb8, 0x18, 0x1f, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0xe8, 0xff, 0x81, 0x7, 0, 0x83, 0xc4, 0xc, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0x74, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0x44, 0xfa, 0xff, 0xff, 0x80, 0x7d, 0xfc, 0, 0x75, 0x10, 0xf, 0xbf, 0x45, 0xdc, 0x1, 0xc0, 0x3, 0x45, 0xf4, 0xf, 0xbf, 0, 0x85, 0xc0, 0x75, 0x36, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0x84, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0xf, 0xbf, 0x45, 0xdc, 0x1, 0xc0, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0xf, 0xbf, 0x12, 0xc1, 0xe2, 0x2, 0x8b, 0x92, 0x60, 0x86, 0x1b, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xf8, 0xf9, 0xff, 0xff, 0xeb, 0x5e, 0xf, 0xbf, 0x45, 0xdc, 0x85, 0xc0, 0x75, 0x56, 0xc7, 0x45, 0x94, 0x2, 0, 0, 0, 0xff, 0x75, 0x94, 0xc7, 0x45, 0x90, 0x22, 0, 0, 0, 0xff, 0x75, 0x90, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x89, 0x45, 0x8c, 0xff, 0x75, 0x8c, 0xc7, 0x45, 0x88, 0x74, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe8, 0x89, 0x45, 0x84, 0x80, 0x7d, 0xec, 0x2, 0x75, 0x9, 0xc7, 0x45, 0x80, 0x1b, 0x1f, 0x1a, 0x10, 0xeb, 0x7, 0xc7, 0x45, 0x80, 0x2b, 0x1f, 0x1a, 0x10, 0x8b, 0x55, 0x80, 0x8b, 0x45, 0xf0, 0x8b, 0x4d, 0x88, 0x8b, 0x5d, 0x84, 0xe8, 0x7d, 0xfb, 0xff, 0xff, 0xe9, 0xbb, 0xfe, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xac, 0, 0, 0, 0x50, 0xb9, 0xa6, 0, 0, 0, 0x31, 0xdb, 0xba, 0x3a, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0x73, 0xf9, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x8e, 0, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x70, 0x83, 0x45, 0xe8, 0x6e, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x5, 0x5a, 0, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x95, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x80, 0x11, 0x1, 0, 0, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x4a, 0x1f, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0xe8, 0x7b, 0x80, 0x7, 0, 0x83, 0xc4, 0xc, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0xa6, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0xc0, 0xf8, 0xff, 0xff, 0xe9, 0x5e, 0xff, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xac, 0, 0, 0, 0x50, 0xb9, 0xc6, 0, 0, 0, 0x31, 0xdb, 0xba, 0x4d, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0x9b, 0xf8, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x8e, 0, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x70, 0x83, 0x45, 0xe8, 0x6e, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x5, 0x5a, 0, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x95, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x80, 0x13, 0x1, 0, 0, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x59, 0x1f, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0xe8, 0xa3, 0x7f, 0x7, 0, 0x83, 0xc4, 0xc, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0xc6, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0xe8, 0xf7, 0xff, 0xff, 0xe9, 0x5e, 0xff, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xac, 0, 0, 0, 0x50, 0xb9, 0xe6, 0, 0, 0, 0x31, 0xdb, 0xba, 0x5c, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xc3, 0xf7, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x8e, 0, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x70, 0x83, 0x45, 0xe8, 0x6e, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x5, 0x5a, 0, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x95, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x80, 0x15, 0x1, 0, 0, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x6c, 0x1f, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0xe8, 0xcb, 0x7e, 0x7, 0, 0x83, 0xc4, 0xc, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0xe6, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0x10, 0xf7, 0xff, 0xff, 0xe9, 0x5e, 0xff, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xac, 0, 0, 0, 0x50, 0xb9, 0xf6, 0, 0, 0, 0x31, 0xdb, 0xba, 0x6f, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xeb, 0xf6, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xe9, 0, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0xc7, 0, 0, 0, 0x83, 0x45, 0xe8, 0x6e, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x5, 0x5a, 0, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x95, 0x70, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x6c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xc7, 0x85, 0x68, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xff, 0x85, 0x68, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x83, 0xf8, 0x5d, 0x7d, 0x31, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x10, 0x74, 0x1c, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x3, 0x85, 0x70, 0xff, 0xff, 0xff, 0x66, 0x8b, 0x80, 0x81, 0x1, 0, 0, 0x1, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xeb, 0xb7, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x74, 0x1f, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0xe8, 0x98, 0x7d, 0x7, 0, 0x83, 0xc4, 0xc, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0xf6, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0xdd, 0xf5, 0xff, 0xff, 0xe9, 0x3, 0xff, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xac, 0, 0, 0, 0x50, 0xb9, 0x16, 0x1, 0, 0, 0x31, 0xdb, 0xba, 0x77, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xb8, 0xf5, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x8e, 0, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x70, 0x83, 0x45, 0xe8, 0x6e, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x5, 0x5a, 0, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x95, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x80, 0x17, 0x1, 0, 0, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x83, 0x1f, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0xe8, 0xc0, 0x7c, 0x7, 0, 0x83, 0xc4, 0xc, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0x16, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0x5, 0xf5, 0xff, 0xff, 0xe9, 0x5e, 0xff, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xac, 0, 0, 0, 0x50, 0xb9, 0x26, 0x1, 0, 0, 0x31, 0xdb, 0xba, 0x86, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xe0, 0xf4, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xe9, 0, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0xc7, 0, 0, 0, 0x83, 0x45, 0xe8, 0x6e, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x5, 0x5a, 0, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x95, 0x60, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x6c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xc7, 0x85, 0x68, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xff, 0x85, 0x68, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x83, 0xf8, 0x5d, 0x7d, 0x31, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc2, 0x81, 0x1c, 0x10, 0x40, 0x74, 0x1c, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x3, 0x85, 0x60, 0xff, 0xff, 0xff, 0x66, 0x8b, 0x80, 0x81, 0x1, 0, 0, 0x1, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xeb, 0xb7, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x8b, 0x1f, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0xe8, 0x8d, 0x7b, 0x7, 0, 0x83, 0xc4, 0xc, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0x26, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0xd2, 0xf3, 0xff, 0xff, 0xe9, 0x3, 0xff, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xac, 0, 0, 0, 0x50, 0xb9, 0x46, 0x1, 0, 0, 0x31, 0xdb, 0xba, 0x8e, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xad, 0xf3, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0x50, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x94, 0, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x76, 0x83, 0x45, 0xe8, 0x6e, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x5, 0x5a, 0, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xd0, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd0, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xb8, 0x97, 0x1f, 0x1a, 0x10, 0x50, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x80, 0x19, 0x1, 0, 0, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x9c, 0x1f, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0xe8, 0xaf, 0x7a, 0x7, 0, 0x83, 0xc4, 0x10, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xd8, 0x2b, 0x45, 0xe8, 0x98, 0x50, 0xb9, 0x46, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xe8, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0xf4, 0xf2, 0xff, 0xff, 0xe9, 0x58, 0xff, 0xff, 0xff, 0xb8, 0xe4, 0x6, 0, 0, 0xe8, 0x65, 0x5d, 0x4, 0, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x50, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0xba, 0xe0, 0x1, 0, 0, 0x66, 0x2b, 0x50, 0x2, 0x89, 0xd0, 0xf, 0xbf, 0xd8, 0xba, 0x11, 0x1, 0, 0, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0xe8, 0x65, 0xa8, 0xff, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0xe8, 0xa0, 0x7a, 0x7, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100eda52, 0x5)   pushd(0xcc);                          /* push dword 0xcc */
    II(0x100eda57, 0x5)   calld(sys_check_available_stack_size, 0x782f6); /* call 0x10165d52 */
    II(0x100eda5c, 0x1)   pushd(esi);                           /* push esi */
    II(0x100eda5d, 0x1)   pushd(edi);                           /* push edi */
    II(0x100eda5e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100eda5f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100eda61, 0x6)   sub(esp, 0xa8);                       /* sub esp, 0xa8 */
    II(0x100eda67, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100eda6a, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100eda6d, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100eda70, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x100eda73, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100eda7a, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100eda81, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100eda88, 0x2)   jnzd(0x100eda90, 0x6);                /* jnz 0x100eda90 */
    II(0x100eda8a, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100eda8e, 0x2)   jzd(0x100edac1, 0x31);                /* jz 0x100edac1 */
l_0x100eda90:
    II(0x100eda90, 0x5)   mov(edx, 0x101c367c);                 /* mov edx, 0x101c367c */
    II(0x100eda95, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100eda98, 0x5)   calld(0x100d4d78, -0x18d25);          /* call 0x100d4d78 */
    II(0x100eda9d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eda9e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100edaa3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edaa4, 0x5)   mov(eax, 0x1b8);                      /* mov eax, 0x1b8 */
    II(0x100edaa9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edaaa, 0x5)   mov(ecx, 0xa);                        /* mov ecx, 0xa */
    II(0x100edaaf, 0x5)   mov(ebx, 0x64);                       /* mov ebx, 0x64 */
    II(0x100edab4, 0x5)   mov(edx, 0x101a1f04);                 /* mov edx, 0x101a1f04 */ /* "Game Over" */
    II(0x100edab9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edabc, 0x5)   calld(0x100ea99a, -0x3127);           /* call 0x100ea99a */
l_0x100edac1:
    II(0x100edac1, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100edac8, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100edacf, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100edad6, 0x2)   jmpd(0x100edade, 0x6);                /* jmp 0x100edade */
l_0x100edad8:
    II(0x100edad8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100edadb, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x100edade:
    II(0x100edade, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edae2, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100edae5, 0x6)   jged(0x100edc44, 0x159);              /* jge dword 0x100edc44 */
    II(0x100edaeb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edaef, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100edaf5, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100edafb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100edb00, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100edb02, 0x6)   jzd(0x100edc3f, 0x137);               /* jz dword 0x100edc3f */
    II(0x100edb08, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x6e);  /* add dword [ebp-0x18], 0x6e */
    II(0x100edb0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100edb0f, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100edb12, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100edb15, 0x5)   add(eax, 0x5a);                       /* add eax, 0x5a */
    II(0x100edb1a, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100edb1d, 0x3)   lea(edi, ebp - 0x34);                 /* lea edi, [ebp-0x34] */
    II(0x100edb20, 0x5)   mov(esi, 0x101c3680);                 /* mov esi, 0x101c3680 */
    II(0x100edb25, 0x1)   movsd_a32();                          /* movsd */
    II(0x100edb26, 0x1)   movsd_a32();                          /* movsd */
    II(0x100edb27, 0x1)   movsd_a32();                          /* movsd */
    II(0x100edb28, 0x5)   mov(ecx, 0xc7);                       /* mov ecx, 0xc7 */
    II(0x100edb2d, 0x5)   mov(ebx, 0xe6);                       /* mov ebx, 0xe6 */
    II(0x100edb32, 0x5)   mov(edx, 0xa5);                       /* mov edx, 0xa5 */
    II(0x100edb37, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100edb3a, 0x5)   calld(0x100d53a4, -0x1879b);          /* call 0x100d53a4 */
    II(0x100edb3f, 0x5)   mov(ecx, 0xc7);                       /* mov ecx, 0xc7 */
    II(0x100edb44, 0x5)   mov(ebx, 0xee);                       /* mov ebx, 0xee */
    II(0x100edb49, 0x5)   mov(edx, 0xa5);                       /* mov edx, 0xa5 */
    II(0x100edb4e, 0x3)   lea(eax, ebp - 0x31);                 /* lea eax, [ebp-0x31] */
    II(0x100edb51, 0x5)   calld(0x100d53a4, -0x187b2);          /* call 0x100d53a4 */
    II(0x100edb56, 0x5)   mov(ecx, 0xc7);                       /* mov ecx, 0xc7 */
    II(0x100edb5b, 0x5)   mov(ebx, 0xf5);                       /* mov ebx, 0xf5 */
    II(0x100edb60, 0x5)   mov(edx, 0xa5);                       /* mov edx, 0xa5 */
    II(0x100edb65, 0x3)   lea(eax, ebp - 0x2e);                 /* lea eax, [ebp-0x2e] */
    II(0x100edb68, 0x5)   calld(0x100d53a4, -0x187c9);          /* call 0x100d53a4 */
    II(0x100edb6d, 0x5)   mov(ecx, 0xc7);                       /* mov ecx, 0xc7 */
    II(0x100edb72, 0x5)   mov(ebx, 0xd6);                       /* mov ebx, 0xd6 */
    II(0x100edb77, 0x5)   mov(edx, 0xa5);                       /* mov edx, 0xa5 */
    II(0x100edb7c, 0x3)   lea(eax, ebp - 0x2b);                 /* lea eax, [ebp-0x2b] */
    II(0x100edb7f, 0x5)   calld(0x100d53a4, -0x187e0);          /* call 0x100d53a4 */
    II(0x100edb84, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edb88, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x100edb8b, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x100edb8e, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100edb90, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100edb93, 0x5)   calld(0x100d4d78, -0x18e20);          /* call 0x100d4d78 */
    II(0x100edb98, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edb99, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100edb9e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edb9f, 0x5)   mov(eax, 0x5a);                       /* mov eax, 0x5a */
    II(0x100edba4, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edba5, 0x5)   mov(ecx, 0x2c);                       /* mov ecx, 0x2c */
    II(0x100edbaa, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100edbae, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100edbb2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edbb3, 0x5)   mov(eax, 0x101a1f0e);                 /* mov eax, 0x101a1f0e */ /* "%i" */
    II(0x100edbb8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edbb9, 0x5)   mov(eax, 0x3);                        /* mov eax, 0x3 */
    II(0x100edbbe, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edbbf, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100edbc2, 0x5)   calld(my_string_ctor, 0x53f21);       /* call 0x10141ae8 */
    II(0x100edbc7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edbc8, 0x5)   calld(0x10142037, 0x5446a);           /* call 0x10142037 */
    II(0x100edbcd, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100edbd0, 0x5)   calld(my_strobj_c_str_v2, -0x6440d);  /* call 0x100897c8 */
    II(0x100edbd5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100edbd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edbda, 0x5)   calld(0x100ea99a, -0x3245);           /* call 0x100ea99a */
    II(0x100edbdf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100edbe1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100edbe4, 0x5)   calld(my_string_dtor, 0x53f41);       /* call 0x10141b2a */
    II(0x100edbe9, 0x5)   mov(ecx, 0x28);                       /* mov ecx, 0x28 */
    II(0x100edbee, 0x3)   lea(ebx, ebp - 0x64);                 /* lea ebx, [ebp-0x64] */
    II(0x100edbf1, 0x3)   mov(al, memb_a32(ss, ebp - 0x24));    /* mov al, [ebp-0x24] */
    II(0x100edbf4, 0x2)   add(al, 0x63);                        /* add al, 0x63 */
    II(0x100edbf6, 0x3)   movsx(edx, al);                       /* movsx edx, al */
    II(0x100edbf9, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x100edbfe, 0x5)   calld(0x10106281, 0x1867e);           /* call 0x10106281 */
    II(0x100edc03, 0x5)   mov(edx, 0x101c367c);                 /* mov edx, 0x101c367c */
    II(0x100edc08, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100edc0b, 0x5)   calld(0x100d4d78, -0x18e98);          /* call 0x100d4d78 */
    II(0x100edc10, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edc11, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100edc16, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edc17, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100edc1c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edc1d, 0x5)   mov(eax, 0x37);                       /* mov eax, 0x37 */
    II(0x100edc22, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edc23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100edc26, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100edc29, 0x1)   cwde();                               /* cwde */
    II(0x100edc2a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edc2b, 0x5)   mov(ecx, 0x3d);                       /* mov ecx, 0x3d */
    II(0x100edc30, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100edc34, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100edc37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edc3a, 0x5)   calld(0x100eab9d, -0x30a2);           /* call 0x100eab9d */
l_0x100edc3f:
    II(0x100edc3f, 0x5)   jmpd(0x100edad8, -0x16c);             /* jmp 0x100edad8 */
l_0x100edc44:
    II(0x100edc44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edc47, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100edc4a, 0x5)   calld(sys_display_draw_0, 0x79835);   /* call 0x10167484 */
    II(0x100edc4f, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100edc54, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edc55, 0x5)   mov(eax, 0xac);                       /* mov eax, 0xac */
    II(0x100edc5a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edc5b, 0x5)   mov(ecx, 0x74);                       /* mov ecx, 0x74 */
    II(0x100edc60, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100edc62, 0x5)   mov(edx, 0x101a1f11);                 /* mov edx, 0x101a1f11 */ /* "Points" */
    II(0x100edc67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edc6a, 0x5)   calld(0x100ed76b, -0x504);            /* call 0x100ed76b */
    II(0x100edc6f, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100edc76, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100edc7d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100edc81, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100edc83, 0x5)   calld(0x100ecd4d, -0xf3b);            /* call 0x100ecd4d */
    II(0x100edc88, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100edc8b, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
    II(0x100edc91, 0x2)   jmpd(0x100edc9a, 0x7);                /* jmp 0x100edc9a */
l_0x100edc93:
    II(0x100edc93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100edc96, 0x4)   inc(memw_a32(ss, ebp - 0x24));        /* inc word [ebp-0x24] */
l_0x100edc9a:
    II(0x100edc9a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edc9e, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100edca1, 0x6)   jged(0x100eddd8, 0x131);              /* jge dword 0x100eddd8 */
    II(0x100edca7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edcab, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100edcb1, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100edcb7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100edcbc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100edcbe, 0x6)   jzd(0x100eddd3, 0x10f);               /* jz dword 0x100eddd3 */
    II(0x100edcc4, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x6e);  /* add dword [ebp-0x18], 0x6e */
    II(0x100edcc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100edccb, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100edcce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100edcd1, 0x5)   add(eax, 0x5a);                       /* add eax, 0x5a */
    II(0x100edcd6, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100edcd9, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x100edcdd, 0x6)   jnzd(0x100edd75, 0x92);               /* jnz dword 0x100edd75 */
    II(0x100edce3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100edce7, 0x6)   imul(edx, edx, 0x247);                /* imul edx, edx, 0x247 */
    II(0x100edced, 0x6)   pushd(memd_a32(ds, edx + 0x101ca550)); /* push dword [edx+0x101ca550] */
    II(0x100edcf3, 0x5)   mov(eax, 0x101a1f18);                 /* mov eax, 0x101a1f18 */ /* "%i" */
    II(0x100edcf8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edcf9, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100edcfc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edcfd, 0x5)   calld(sys_sprintf, 0x781ff);          /* call 0x10165f01 */
    II(0x100edd02, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100edd05, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100edd0a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edd0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100edd0e, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100edd11, 0x1)   cwde();                               /* cwde */
    II(0x100edd12, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edd13, 0x5)   mov(ecx, 0x74);                       /* mov ecx, 0x74 */
    II(0x100edd18, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100edd1c, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100edd1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edd22, 0x5)   calld(0x100ed76b, -0x5bc);            /* call 0x100ed76b */
    II(0x100edd27, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100edd2b, 0x2)   jnzd(0x100edd3d, 0x10);               /* jnz 0x100edd3d */
    II(0x100edd2d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edd31, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100edd33, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x100edd36, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100edd39, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100edd3b, 0x2)   jnzd(0x100edd73, 0x36);               /* jnz 0x100edd73 */
l_0x100edd3d:
    II(0x100edd3d, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100edd42, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edd43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100edd46, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100edd49, 0x1)   cwde();                               /* cwde */
    II(0x100edd4a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edd4b, 0x5)   mov(ecx, 0x84);                       /* mov ecx, 0x84 */
    II(0x100edd50, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100edd54, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edd58, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100edd5a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100edd5d, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100edd5f, 0x3)   movsx(edx, memw_a32(ds, edx));        /* movsx edx, word [edx] */
    II(0x100edd62, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100edd65, 0x6)   mov(edx, memd_a32(ds, edx + 0x101b8660)); /* mov edx, [edx+0x101b8660] */
    II(0x100edd6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edd6e, 0x5)   calld(0x100ed76b, -0x608);            /* call 0x100ed76b */
l_0x100edd73:
    II(0x100edd73, 0x2)   jmpd(0x100eddd3, 0x5e);               /* jmp 0x100eddd3 */
l_0x100edd75:
    II(0x100edd75, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edd79, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100edd7b, 0x2)   jnzd(0x100eddd3, 0x56);               /* jnz 0x100eddd3 */
    II(0x100edd7d, 0x7)   mov(memd_a32(ss, ebp - 0x6c), 0x2);   /* mov dword [ebp-0x6c], 0x2 */
    II(0x100edd84, 0x3)   pushd(memd_a32(ss, ebp - 0x6c));      /* push dword [ebp-0x6c] */
    II(0x100edd87, 0x7)   mov(memd_a32(ss, ebp - 0x70), 0x22);  /* mov dword [ebp-0x70], 0x22 */
    II(0x100edd8e, 0x3)   pushd(memd_a32(ss, ebp - 0x70));      /* push dword [ebp-0x70] */
    II(0x100edd91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100edd94, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100edd97, 0x1)   cwde();                               /* cwde */
    II(0x100edd98, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x100edd9b, 0x3)   pushd(memd_a32(ss, ebp - 0x74));      /* push dword [ebp-0x74] */
    II(0x100edd9e, 0x7)   mov(memd_a32(ss, ebp - 0x78), 0x74);  /* mov dword [ebp-0x78], 0x74 */
    II(0x100edda5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100edda9, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
    II(0x100eddac, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0x2);   /* cmp byte [ebp-0x14], 0x2 */
    II(0x100eddb0, 0x2)   jnzd(0x100eddbb, 0x9);                /* jnz 0x100eddbb */
    II(0x100eddb2, 0x7)   mov(memd_a32(ss, ebp - 0x80), 0x101a1f1b); /* mov dword [ebp-0x80], 0x101a1f1b */ /* "Mission Success" */
    II(0x100eddb9, 0x2)   jmpd(0x100eddc2, 0x7);                /* jmp 0x100eddc2 */
l_0x100eddbb:
    II(0x100eddbb, 0x7)   mov(memd_a32(ss, ebp - 0x80), 0x101a1f2b); /* mov dword [ebp-0x80], 0x101a1f2b */ /* "Mission Failed" */
l_0x100eddc2:
    II(0x100eddc2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x80));   /* mov edx, [ebp-0x80] */
    II(0x100eddc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100eddc8, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x78));   /* mov ecx, [ebp-0x78] */
    II(0x100eddcb, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x7c));   /* mov ebx, [ebp-0x7c] */
    II(0x100eddce, 0x5)   calld(0x100ed950, -0x483);            /* call 0x100ed950 */
l_0x100eddd3:
    II(0x100eddd3, 0x5)   jmpd(0x100edc93, -0x145);             /* jmp 0x100edc93 */
l_0x100eddd8:
    II(0x100eddd8, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100edddd, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eddde, 0x5)   mov(eax, 0xac);                       /* mov eax, 0xac */
    II(0x100edde3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edde4, 0x5)   mov(ecx, 0xa6);                       /* mov ecx, 0xa6 */
    II(0x100edde9, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100eddeb, 0x5)   mov(edx, 0x101a1f3a);                 /* mov edx, 0x101a1f3a */ /* "Factories Built" */
    II(0x100eddf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100eddf3, 0x5)   calld(0x100ed76b, -0x68d);            /* call 0x100ed76b */
    II(0x100eddf8, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100eddff, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100ede06, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
    II(0x100ede0c, 0x2)   jmpd(0x100ede15, 0x7);                /* jmp 0x100ede15 */
l_0x100ede0e:
    II(0x100ede0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ede11, 0x4)   inc(memw_a32(ss, ebp - 0x24));        /* inc word [ebp-0x24] */
l_0x100ede15:
    II(0x100ede15, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ede19, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ede1c, 0x6)   jged(0x100edeb0, 0x8e);               /* jge dword 0x100edeb0 */
    II(0x100ede22, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ede26, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ede2c, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ede32, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ede37, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ede39, 0x2)   jzd(0x100edeab, 0x70);                /* jz 0x100edeab */
    II(0x100ede3b, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x6e);  /* add dword [ebp-0x18], 0x6e */
    II(0x100ede3f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ede42, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100ede45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ede48, 0x5)   add(eax, 0x5a);                       /* add eax, 0x5a */
    II(0x100ede4d, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100ede50, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ede54, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ede5a, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x100ede5f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ede61, 0x6)   mov(memd_a32(ss, ebp - 0x84), edx);   /* mov [ebp+0xffffff7c], edx */
    II(0x100ede67, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x100ede6d, 0x6)   mov(eax, memd_a32(ds, eax + 0x111));  /* mov eax, [eax+0x111] */
    II(0x100ede73, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ede76, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ede77, 0x5)   mov(eax, 0x101a1f4a);                 /* mov eax, 0x101a1f4a */ /* "%i" */
    II(0x100ede7c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ede7d, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100ede80, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ede81, 0x5)   calld(sys_sprintf, 0x7807b);          /* call 0x10165f01 */
    II(0x100ede86, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100ede89, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100ede8e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ede8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ede92, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100ede95, 0x1)   cwde();                               /* cwde */
    II(0x100ede96, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ede97, 0x5)   mov(ecx, 0xa6);                       /* mov ecx, 0xa6 */
    II(0x100ede9c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100edea0, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100edea3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edea6, 0x5)   calld(0x100ed76b, -0x740);            /* call 0x100ed76b */
l_0x100edeab:
    II(0x100edeab, 0x5)   jmpd(0x100ede0e, -0xa2);              /* jmp 0x100ede0e */
l_0x100edeb0:
    II(0x100edeb0, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100edeb5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edeb6, 0x5)   mov(eax, 0xac);                       /* mov eax, 0xac */
    II(0x100edebb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edebc, 0x5)   mov(ecx, 0xc6);                       /* mov ecx, 0xc6 */
    II(0x100edec1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100edec3, 0x5)   mov(edx, 0x101a1f4d);                 /* mov edx, 0x101a1f4d */ /* "Mines Built" */
    II(0x100edec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edecb, 0x5)   calld(0x100ed76b, -0x765);            /* call 0x100ed76b */
    II(0x100eded0, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100eded7, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100edede, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
    II(0x100edee4, 0x2)   jmpd(0x100edeed, 0x7);                /* jmp 0x100edeed */
l_0x100edee6:
    II(0x100edee6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100edee9, 0x4)   inc(memw_a32(ss, ebp - 0x24));        /* inc word [ebp-0x24] */
l_0x100edeed:
    II(0x100edeed, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edef1, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100edef4, 0x6)   jged(0x100edf88, 0x8e);               /* jge dword 0x100edf88 */
    II(0x100edefa, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edefe, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100edf04, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100edf0a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100edf0f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100edf11, 0x2)   jzd(0x100edf83, 0x70);                /* jz 0x100edf83 */
    II(0x100edf13, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x6e);  /* add dword [ebp-0x18], 0x6e */
    II(0x100edf17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100edf1a, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100edf1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100edf20, 0x5)   add(eax, 0x5a);                       /* add eax, 0x5a */
    II(0x100edf25, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100edf28, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edf2c, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100edf32, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x100edf37, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100edf39, 0x6)   mov(memd_a32(ss, ebp - 0x88), edx);   /* mov [ebp+0xffffff78], edx */
    II(0x100edf3f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x88));   /* mov eax, [ebp+0xffffff78] */
    II(0x100edf45, 0x6)   mov(eax, memd_a32(ds, eax + 0x113));  /* mov eax, [eax+0x113] */
    II(0x100edf4b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100edf4e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edf4f, 0x5)   mov(eax, 0x101a1f59);                 /* mov eax, 0x101a1f59 */ /* "%i" */
    II(0x100edf54, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edf55, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100edf58, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edf59, 0x5)   calld(sys_sprintf, 0x77fa3);          /* call 0x10165f01 */
    II(0x100edf5e, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100edf61, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100edf66, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edf67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100edf6a, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100edf6d, 0x1)   cwde();                               /* cwde */
    II(0x100edf6e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edf6f, 0x5)   mov(ecx, 0xc6);                       /* mov ecx, 0xc6 */
    II(0x100edf74, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100edf78, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100edf7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edf7e, 0x5)   calld(0x100ed76b, -0x818);            /* call 0x100ed76b */
l_0x100edf83:
    II(0x100edf83, 0x5)   jmpd(0x100edee6, -0xa2);              /* jmp 0x100edee6 */
l_0x100edf88:
    II(0x100edf88, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100edf8d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edf8e, 0x5)   mov(eax, 0xac);                       /* mov eax, 0xac */
    II(0x100edf93, 0x1)   pushd(eax);                           /* push eax */
    II(0x100edf94, 0x5)   mov(ecx, 0xe6);                       /* mov ecx, 0xe6 */
    II(0x100edf99, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100edf9b, 0x5)   mov(edx, 0x101a1f5c);                 /* mov edx, 0x101a1f5c */ /* "Buildings Built" */
    II(0x100edfa0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100edfa3, 0x5)   calld(0x100ed76b, -0x83d);            /* call 0x100ed76b */
    II(0x100edfa8, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100edfaf, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100edfb6, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
    II(0x100edfbc, 0x2)   jmpd(0x100edfc5, 0x7);                /* jmp 0x100edfc5 */
l_0x100edfbe:
    II(0x100edfbe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100edfc1, 0x4)   inc(memw_a32(ss, ebp - 0x24));        /* inc word [ebp-0x24] */
l_0x100edfc5:
    II(0x100edfc5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edfc9, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100edfcc, 0x6)   jged(0x100ee060, 0x8e);               /* jge dword 0x100ee060 */
    II(0x100edfd2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100edfd6, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100edfdc, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100edfe2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100edfe7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100edfe9, 0x2)   jzd(0x100ee05b, 0x70);                /* jz 0x100ee05b */
    II(0x100edfeb, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x6e);  /* add dword [ebp-0x18], 0x6e */
    II(0x100edfef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100edff2, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100edff5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100edff8, 0x5)   add(eax, 0x5a);                       /* add eax, 0x5a */
    II(0x100edffd, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100ee000, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee004, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ee00a, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x100ee00f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ee011, 0x6)   mov(memd_a32(ss, ebp - 0x8c), edx);   /* mov [ebp+0xffffff74], edx */
    II(0x100ee017, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x100ee01d, 0x6)   mov(eax, memd_a32(ds, eax + 0x115));  /* mov eax, [eax+0x115] */
    II(0x100ee023, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ee026, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee027, 0x5)   mov(eax, 0x101a1f6c);                 /* mov eax, 0x101a1f6c */ /* "%i" */
    II(0x100ee02c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee02d, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100ee030, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee031, 0x5)   calld(sys_sprintf, 0x77ecb);          /* call 0x10165f01 */
    II(0x100ee036, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100ee039, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100ee03e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee03f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ee042, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100ee045, 0x1)   cwde();                               /* cwde */
    II(0x100ee046, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee047, 0x5)   mov(ecx, 0xe6);                       /* mov ecx, 0xe6 */
    II(0x100ee04c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100ee050, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100ee053, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee056, 0x5)   calld(0x100ed76b, -0x8f0);            /* call 0x100ed76b */
l_0x100ee05b:
    II(0x100ee05b, 0x5)   jmpd(0x100edfbe, -0xa2);              /* jmp 0x100edfbe */
l_0x100ee060:
    II(0x100ee060, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ee065, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee066, 0x5)   mov(eax, 0xac);                       /* mov eax, 0xac */
    II(0x100ee06b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee06c, 0x5)   mov(ecx, 0xf6);                       /* mov ecx, 0xf6 */
    II(0x100ee071, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ee073, 0x5)   mov(edx, 0x101a1f6f);                 /* mov edx, 0x101a1f6f */ /* "Lost" */
    II(0x100ee078, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee07b, 0x5)   calld(0x100ed76b, -0x915);            /* call 0x100ed76b */
    II(0x100ee080, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100ee087, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100ee08e, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
    II(0x100ee094, 0x2)   jmpd(0x100ee09d, 0x7);                /* jmp 0x100ee09d */
l_0x100ee096:
    II(0x100ee096, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ee099, 0x4)   inc(memw_a32(ss, ebp - 0x24));        /* inc word [ebp-0x24] */
l_0x100ee09d:
    II(0x100ee09d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee0a1, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ee0a4, 0x6)   jged(0x100ee193, 0xe9);               /* jge dword 0x100ee193 */
    II(0x100ee0aa, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee0ae, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ee0b4, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ee0ba, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ee0bf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ee0c1, 0x6)   jzd(0x100ee18e, 0xc7);                /* jz dword 0x100ee18e */
    II(0x100ee0c7, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x6e);  /* add dword [ebp-0x18], 0x6e */
    II(0x100ee0cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ee0ce, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100ee0d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ee0d4, 0x5)   add(eax, 0x5a);                       /* add eax, 0x5a */
    II(0x100ee0d9, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100ee0dc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee0e0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ee0e6, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x100ee0eb, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ee0ed, 0x6)   mov(memd_a32(ss, ebp - 0x90), edx);   /* mov [ebp+0xffffff70], edx */
    II(0x100ee0f3, 0xa)   mov(memd_a32(ss, ebp - 0x94), 0);     /* mov dword [ebp+0xffffff6c], 0x0 */
    II(0x100ee0fd, 0xa)   mov(memd_a32(ss, ebp - 0x98), 0);     /* mov dword [ebp+0xffffff68], 0x0 */
    II(0x100ee107, 0x2)   jmpd(0x100ee115, 0xc);                /* jmp 0x100ee115 */
l_0x100ee109:
    II(0x100ee109, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100ee10f, 0x6)   inc(memd_a32(ss, ebp - 0x98));        /* inc dword [ebp+0xffffff68] */
l_0x100ee115:
    II(0x100ee115, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ee11c, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x100ee11f, 0x2)   jged(0x100ee152, 0x31);               /* jge 0x100ee152 */
    II(0x100ee121, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ee128, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100ee12b, 0x7)   test(memb_a32(ds, eax + 0x101c81c0), 0x10); /* test byte [eax+0x101c81c0], 0x10 */
    II(0x100ee132, 0x2)   jzd(0x100ee150, 0x1c);                /* jz 0x100ee150 */
    II(0x100ee134, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ee13b, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100ee13d, 0x6)   add(eax, memd_a32(ss, ebp - 0x90));   /* add eax, [ebp+0xffffff70] */
    II(0x100ee143, 0x7)   mov(ax, memw_a32(ds, eax + 0x181));   /* mov ax, [eax+0x181] */
    II(0x100ee14a, 0x6)   add(memd_a32(ss, ebp - 0x94), eax);   /* add [ebp+0xffffff6c], eax */
l_0x100ee150:
    II(0x100ee150, 0x2)   jmpd(0x100ee109, -0x49);              /* jmp 0x100ee109 */
l_0x100ee152:
    II(0x100ee152, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x100ee159, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee15a, 0x5)   mov(eax, 0x101a1f74);                 /* mov eax, 0x101a1f74 */ /* "%i" */
    II(0x100ee15f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee160, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100ee163, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee164, 0x5)   calld(sys_sprintf, 0x77d98);          /* call 0x10165f01 */
    II(0x100ee169, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100ee16c, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100ee171, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee172, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ee175, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100ee178, 0x1)   cwde();                               /* cwde */
    II(0x100ee179, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee17a, 0x5)   mov(ecx, 0xf6);                       /* mov ecx, 0xf6 */
    II(0x100ee17f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100ee183, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100ee186, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee189, 0x5)   calld(0x100ed76b, -0xa23);            /* call 0x100ed76b */
l_0x100ee18e:
    II(0x100ee18e, 0x5)   jmpd(0x100ee096, -0xfd);              /* jmp 0x100ee096 */
l_0x100ee193:
    II(0x100ee193, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ee198, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee199, 0x5)   mov(eax, 0xac);                       /* mov eax, 0xac */
    II(0x100ee19e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee19f, 0x5)   mov(ecx, 0x116);                      /* mov ecx, 0x116 */
    II(0x100ee1a4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ee1a6, 0x5)   mov(edx, 0x101a1f77);                 /* mov edx, 0x101a1f77 */ /* "Units Built" */
    II(0x100ee1ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee1ae, 0x5)   calld(0x100ed76b, -0xa48);            /* call 0x100ed76b */
    II(0x100ee1b3, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100ee1ba, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100ee1c1, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
    II(0x100ee1c7, 0x2)   jmpd(0x100ee1d0, 0x7);                /* jmp 0x100ee1d0 */
l_0x100ee1c9:
    II(0x100ee1c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ee1cc, 0x4)   inc(memw_a32(ss, ebp - 0x24));        /* inc word [ebp-0x24] */
l_0x100ee1d0:
    II(0x100ee1d0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee1d4, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ee1d7, 0x6)   jged(0x100ee26b, 0x8e);               /* jge dword 0x100ee26b */
    II(0x100ee1dd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee1e1, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ee1e7, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ee1ed, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ee1f2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ee1f4, 0x2)   jzd(0x100ee266, 0x70);                /* jz 0x100ee266 */
    II(0x100ee1f6, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x6e);  /* add dword [ebp-0x18], 0x6e */
    II(0x100ee1fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ee1fd, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100ee200, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ee203, 0x5)   add(eax, 0x5a);                       /* add eax, 0x5a */
    II(0x100ee208, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100ee20b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee20f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ee215, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x100ee21a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ee21c, 0x6)   mov(memd_a32(ss, ebp - 0x9c), edx);   /* mov [ebp+0xffffff64], edx */
    II(0x100ee222, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x100ee228, 0x6)   mov(eax, memd_a32(ds, eax + 0x117));  /* mov eax, [eax+0x117] */
    II(0x100ee22e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ee231, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee232, 0x5)   mov(eax, 0x101a1f83);                 /* mov eax, 0x101a1f83 */ /* "%i" */
    II(0x100ee237, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee238, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100ee23b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee23c, 0x5)   calld(sys_sprintf, 0x77cc0);          /* call 0x10165f01 */
    II(0x100ee241, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100ee244, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100ee249, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee24a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ee24d, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100ee250, 0x1)   cwde();                               /* cwde */
    II(0x100ee251, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee252, 0x5)   mov(ecx, 0x116);                      /* mov ecx, 0x116 */
    II(0x100ee257, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100ee25b, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100ee25e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee261, 0x5)   calld(0x100ed76b, -0xafb);            /* call 0x100ed76b */
l_0x100ee266:
    II(0x100ee266, 0x5)   jmpd(0x100ee1c9, -0xa2);              /* jmp 0x100ee1c9 */
l_0x100ee26b:
    II(0x100ee26b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ee270, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee271, 0x5)   mov(eax, 0xac);                       /* mov eax, 0xac */
    II(0x100ee276, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee277, 0x5)   mov(ecx, 0x126);                      /* mov ecx, 0x126 */
    II(0x100ee27c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ee27e, 0x5)   mov(edx, 0x101a1f86);                 /* mov edx, 0x101a1f86 */ /* "Lost" */
    II(0x100ee283, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee286, 0x5)   calld(0x100ed76b, -0xb20);            /* call 0x100ed76b */
    II(0x100ee28b, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100ee292, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100ee299, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
    II(0x100ee29f, 0x2)   jmpd(0x100ee2a8, 0x7);                /* jmp 0x100ee2a8 */
l_0x100ee2a1:
    II(0x100ee2a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ee2a4, 0x4)   inc(memw_a32(ss, ebp - 0x24));        /* inc word [ebp-0x24] */
l_0x100ee2a8:
    II(0x100ee2a8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee2ac, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ee2af, 0x6)   jged(0x100ee39e, 0xe9);               /* jge dword 0x100ee39e */
    II(0x100ee2b5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee2b9, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ee2bf, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ee2c5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ee2ca, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ee2cc, 0x6)   jzd(0x100ee399, 0xc7);                /* jz dword 0x100ee399 */
    II(0x100ee2d2, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x6e);  /* add dword [ebp-0x18], 0x6e */
    II(0x100ee2d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ee2d9, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100ee2dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ee2df, 0x5)   add(eax, 0x5a);                       /* add eax, 0x5a */
    II(0x100ee2e4, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100ee2e7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee2eb, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ee2f1, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x100ee2f6, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ee2f8, 0x6)   mov(memd_a32(ss, ebp - 0xa0), edx);   /* mov [ebp+0xffffff60], edx */
    II(0x100ee2fe, 0xa)   mov(memd_a32(ss, ebp - 0x94), 0);     /* mov dword [ebp+0xffffff6c], 0x0 */
    II(0x100ee308, 0xa)   mov(memd_a32(ss, ebp - 0x98), 0);     /* mov dword [ebp+0xffffff68], 0x0 */
    II(0x100ee312, 0x2)   jmpd(0x100ee320, 0xc);                /* jmp 0x100ee320 */
l_0x100ee314:
    II(0x100ee314, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100ee31a, 0x6)   inc(memd_a32(ss, ebp - 0x98));        /* inc dword [ebp+0xffffff68] */
l_0x100ee320:
    II(0x100ee320, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ee327, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x100ee32a, 0x2)   jged(0x100ee35d, 0x31);               /* jge 0x100ee35d */
    II(0x100ee32c, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ee333, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100ee336, 0x7)   test(memb_a32(ds, eax + 0x101c81c2), 0x40); /* test byte [eax+0x101c81c2], 0x40 */
    II(0x100ee33d, 0x2)   jzd(0x100ee35b, 0x1c);                /* jz 0x100ee35b */
    II(0x100ee33f, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ee346, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100ee348, 0x6)   add(eax, memd_a32(ss, ebp - 0xa0));   /* add eax, [ebp+0xffffff60] */
    II(0x100ee34e, 0x7)   mov(ax, memw_a32(ds, eax + 0x181));   /* mov ax, [eax+0x181] */
    II(0x100ee355, 0x6)   add(memd_a32(ss, ebp - 0x94), eax);   /* add [ebp+0xffffff6c], eax */
l_0x100ee35b:
    II(0x100ee35b, 0x2)   jmpd(0x100ee314, -0x49);              /* jmp 0x100ee314 */
l_0x100ee35d:
    II(0x100ee35d, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x100ee364, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee365, 0x5)   mov(eax, 0x101a1f8b);                 /* mov eax, 0x101a1f8b */ /* "%i" */
    II(0x100ee36a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee36b, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100ee36e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee36f, 0x5)   calld(sys_sprintf, 0x77b8d);          /* call 0x10165f01 */
    II(0x100ee374, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100ee377, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100ee37c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee37d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ee380, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100ee383, 0x1)   cwde();                               /* cwde */
    II(0x100ee384, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee385, 0x5)   mov(ecx, 0x126);                      /* mov ecx, 0x126 */
    II(0x100ee38a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100ee38e, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100ee391, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee394, 0x5)   calld(0x100ed76b, -0xc2e);            /* call 0x100ed76b */
l_0x100ee399:
    II(0x100ee399, 0x5)   jmpd(0x100ee2a1, -0xfd);              /* jmp 0x100ee2a1 */
l_0x100ee39e:
    II(0x100ee39e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ee3a3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee3a4, 0x5)   mov(eax, 0xac);                       /* mov eax, 0xac */
    II(0x100ee3a9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee3aa, 0x5)   mov(ecx, 0x146);                      /* mov ecx, 0x146 */
    II(0x100ee3af, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ee3b1, 0x5)   mov(edx, 0x101a1f8e);                 /* mov edx, 0x101a1f8e */ /* "Upgrades" */
    II(0x100ee3b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee3b9, 0x5)   calld(0x100ed76b, -0xc53);            /* call 0x100ed76b */
    II(0x100ee3be, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x50);  /* mov dword [ebp-0x18], 0x50 */
    II(0x100ee3c5, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100ee3cc, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
    II(0x100ee3d2, 0x2)   jmpd(0x100ee3db, 0x7);                /* jmp 0x100ee3db */
l_0x100ee3d4:
    II(0x100ee3d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ee3d7, 0x4)   inc(memw_a32(ss, ebp - 0x24));        /* inc word [ebp-0x24] */
l_0x100ee3db:
    II(0x100ee3db, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee3df, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ee3e2, 0x6)   jged(0x100ee47c, 0x94);               /* jge dword 0x100ee47c */
    II(0x100ee3e8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee3ec, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ee3f2, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ee3f8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ee3fd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ee3ff, 0x2)   jzd(0x100ee477, 0x76);                /* jz 0x100ee477 */
    II(0x100ee401, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x6e);  /* add dword [ebp-0x18], 0x6e */
    II(0x100ee405, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ee408, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x100ee40b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ee40e, 0x5)   add(eax, 0x5a);                       /* add eax, 0x5a */
    II(0x100ee413, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100ee416, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ee41a, 0x6)   imul(edx, eax, 0x247);                /* imul edx, eax, 0x247 */
    II(0x100ee420, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x100ee425, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100ee427, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
    II(0x100ee42d, 0x5)   mov(eax, 0x101a1f97);                 /* mov eax, 0x101a1f97 */ /* "Gold" */
    II(0x100ee432, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee433, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x100ee439, 0x6)   mov(eax, memd_a32(ds, eax + 0x119));  /* mov eax, [eax+0x119] */
    II(0x100ee43f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ee442, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee443, 0x5)   mov(eax, 0x101a1f9c);                 /* mov eax, 0x101a1f9c */ /* "%i %s" */
    II(0x100ee448, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee449, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100ee44c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee44d, 0x5)   calld(sys_sprintf, 0x77aaf);          /* call 0x10165f01 */
    II(0x100ee452, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100ee455, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100ee45a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee45b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ee45e, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100ee461, 0x1)   cwde();                               /* cwde */
    II(0x100ee462, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee463, 0x5)   mov(ecx, 0x146);                      /* mov ecx, 0x146 */
    II(0x100ee468, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100ee46c, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100ee46f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee472, 0x5)   calld(0x100ed76b, -0xd0c);            /* call 0x100ed76b */
l_0x100ee477:
    II(0x100ee477, 0x5)   jmpd(0x100ee3d4, -0xa8);              /* jmp 0x100ee3d4 */
l_0x100ee47c:
    II(0x100ee47c, 0x5)   mov(eax, 0x6e4);                      /* mov eax, 0x6e4 */
    II(0x100ee481, 0x5)   calld(my_get_res_data_by_id_malloc, 0x45d65); /* call 0x101341eb */
    II(0x100ee486, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x100ee48c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee48f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee490, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ee495, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x100ee49b, 0x5)   mov(edx, 0x1e0);                      /* mov edx, 0x1e0 */
    II(0x100ee4a0, 0x4)   sub(dx, memw_a32(ds, eax + 0x2));     /* sub dx, [eax+0x2] */
    II(0x100ee4a4, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100ee4a6, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100ee4a9, 0x5)   mov(edx, 0x111);                      /* mov edx, 0x111 */
    II(0x100ee4ae, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x100ee4b4, 0x5)   calld(0x100e8d1e, -0x579b);           /* call 0x100e8d1e */
    II(0x100ee4b9, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x100ee4bf, 0x5)   calld(sys_delete, 0x77aa0);           /* call 0x10165f64 */
    II(0x100ee4c4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ee4c6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ee4c7, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ee4c8, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ee4c9, 0x1)   retd();                               /* ret */
FUNC_END

