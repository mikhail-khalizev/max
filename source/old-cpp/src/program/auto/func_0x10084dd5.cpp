FUNC_BEGIN(0x10084dd5, 0x757ffbf5befe6d67, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0x73, 0xf, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x74, 0x5f, 0xb, 0, 0x84, 0xc0, 0x74, 0x19, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0xc4, 0x17, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x68, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x13, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0xa9, 0x17, 0xff, 0xff, 0x89, 0x45, 0xd4, 0xe9, 0x5e, 0x3, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0xce, 0x4e, 0, 0, 0x8d, 0x5d, 0xd8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x9e, 0x4d, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xa2, 0x1c, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x32, 0x8d, 0x45, 0xe0, 0xe8, 0x8, 0x18, 0xff, 0xff, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0x90, 0x16, 0xff, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x46, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x8a, 0x5e, 0xb, 0, 0x84, 0xc0, 0x75, 0x14, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xe6, 0x4e, 0, 0, 0xe8, 0xd5, 0x50, 0, 0, 0x85, 0xc0, 0x75, 0xe, 0x66, 0xc7, 0x45, 0xdc, 0, 0, 0x66, 0xc7, 0x45, 0xde, 0, 0, 0xeb, 0x3e, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xc1, 0x4e, 0, 0, 0xe8, 0x7d, 0xde, 0x1, 0, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x7a, 0x3c, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x9e, 0x4e, 0, 0, 0xe8, 0x8d, 0x50, 0, 0, 0xe8, 0x8c, 0x11, 0xff, 0xff, 0x88, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x3e, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x1c, 0x5d, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x36, 0xe8, 0xda, 0x60, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x5a, 0x5e, 0xb, 0, 0x84, 0xc0, 0x74, 0x22, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xcc, 0xe8, 0x3e, 0xf, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x9d, 0x16, 0xff, 0xff, 0xe8, 0x69, 0xbd, 0xfe, 0xff, 0x1, 0xc0, 0x89, 0x45, 0xf0, 0xeb, 0x8, 0x8d, 0x45, 0xd8, 0xe8, 0xb1, 0x1c, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x20, 0x5e, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0xbc, 0, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x6b, 0x4b, 0, 0, 0xe8, 0x5e, 0x50, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xcc, 0x14, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x7e, 0x1c, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xed, 0x5d, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x84, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x40, 0x14, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xe0, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x69, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xc8, 0xe8, 0xb7, 0xe, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x1d, 0x14, 0xff, 0xff, 0xe8, 0xe5, 0xbc, 0xfe, 0xff, 0x89, 0x45, 0xec, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x45, 0x5d, 0xb, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xec, 0x7e, 0x32, 0x8d, 0x45, 0xe4, 0xe8, 0xf3, 0x13, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x42, 0x16, 0xff, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0x3e, 0x4b, 0, 0, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x36, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xdf, 0x5f, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xf0, 0xe9, 0x62, 0xff, 0xff, 0xff, 0xe9, 0x2a, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0xef, 0x5c, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0xd5, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0xd3, 0x4c, 0, 0, 0x8d, 0x5d, 0xd8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x27, 0x4b, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xd8, 0xe8, 0xad, 0x1b, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x1c, 0x5d, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0xa2, 0, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x67, 0x4a, 0, 0, 0xe8, 0x5a, 0x4f, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xc8, 0x13, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x7a, 0x1b, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xe9, 0x5c, 0xb, 0, 0x84, 0xc0, 0x74, 0x6e, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xc4, 0xe8, 0xcd, 0xd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x33, 0x13, 0xff, 0xff, 0xe8, 0xfb, 0xbb, 0xfe, 0xff, 0x89, 0x45, 0xec, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x5b, 0x5c, 0xb, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xec, 0x7e, 0x32, 0x8d, 0x45, 0xe4, 0xe8, 0x9, 0x13, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x58, 0x15, 0xff, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0x54, 0x4a, 0, 0, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x36, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf5, 0x5e, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xf0, 0xe9, 0x7c, 0xff, 0xff, 0xff, 0xe9, 0x44, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x68, 0x5c, 0xb, 0, 0x84, 0xc0, 0x74, 0x10, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe0, 0xe8, 0x5c, 0x14, 0xff, 0xff, 0xe8, 0x9b, 0xd6, 0xc, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x47, 0x5c, 0xb, 0, 0x84, 0xc0, 0x74, 0x13, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x38, 0x14, 0xff, 0xff, 0xe8, 0x42, 0xd6, 0xc, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x84, 0x14, 0xff, 0xff, 0x89, 0x45, 0xd4, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x13, 0xe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xc9, 0xd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xd7, 0x3e, 0, 0, 0xeb, 0x1e, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xf3, 0xd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xa9, 0xd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xb7, 0x3e, 0, 0, 0x8b, 0x45, 0xd4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10084dd5, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x10084dda, 0x5)   calld(sys_check_available_stack_size, 0xe0f73); /* call 0x10165d52 */
    II(0x10084ddf, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10084de0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10084de1, 0x1)   pushd(edx);                           /* push edx */
    II(0x10084de2, 0x1)   pushd(esi);                           /* push esi */
    II(0x10084de3, 0x1)   pushd(edi);                           /* push edi */
    II(0x10084de4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10084de5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10084de7, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x10084ded, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10084df0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084df2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084df5, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084df8, 0x5)   calld(0x1013ad71, 0xb5f74);           /* call 0x1013ad71 */
    II(0x10084dfd, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084dff, 0x2)   jzd(0x10084e1a, 0x19);                /* jz 0x10084e1a */
    II(0x10084e01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084e04, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084e07, 0x5)   calld(0x100765d0, -0xe83c);           /* call 0x100765d0 */
    II(0x10084e0c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084e0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084e11, 0x5)   calld(0x10084c7e, -0x198);            /* call 0x10084c7e */
    II(0x10084e16, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084e18, 0x2)   jnzd(0x10084e1c, 0x2);                /* jnz 0x10084e1c */
l_0x10084e1a:
    II(0x10084e1a, 0x2)   jmpd(0x10084e2f, 0x13);               /* jmp 0x10084e2f */
l_0x10084e1c:
    II(0x10084e1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084e1f, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084e22, 0x5)   calld(0x100765d0, -0xe857);           /* call 0x100765d0 */
    II(0x10084e27, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10084e2a, 0x5)   jmpd(0x1008518d, 0x35e);              /* jmp 0x1008518d */
l_0x10084e2f:
    II(0x10084e2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084e32, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10084e35, 0x5)   calld(0x10089d08, 0x4ece);            /* call 0x10089d08 */
    II(0x10084e3a, 0x3)   lea(ebx, ebp - 0x28);                 /* lea ebx, [ebp-0x28] */
    II(0x10084e3d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084e3f, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10084e41, 0x5)   calld(0x10089be4, 0x4d9e);            /* call 0x10089be4 */
    II(0x10084e46, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10084e49, 0x5)   calld(my_ctor_0x101b4184, -0xe35e);   /* call 0x10076af0 */
    II(0x10084e4e, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10084e52, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10084e55, 0x3)   add(edx, 0x32);                       /* add edx, 0x32 */
    II(0x10084e58, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10084e5b, 0x5)   calld(0x10076668, -0xe7f8);           /* call 0x10076668 */
    II(0x10084e60, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10084e64, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10084e67, 0x5)   calld(0x100764fc, -0xe970);           /* call 0x100764fc */
    II(0x10084e6c, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10084e6f, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10084e73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084e76, 0x4)   mov(memb_a32(ds, eax + 0x46), 0);     /* mov byte [eax+0x46], 0x0 */
    II(0x10084e7a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084e7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084e7f, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084e82, 0x5)   calld(0x1013ad11, 0xb5e8a);           /* call 0x1013ad11 */
    II(0x10084e87, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084e89, 0x2)   jnzd(0x10084e9f, 0x14);               /* jnz 0x10084e9f */
    II(0x10084e8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084e8e, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084e91, 0x5)   calld(0x10089d7c, 0x4ee6);            /* call 0x10089d7c */
    II(0x10084e96, 0x5)   calld(0x10089f70, 0x50d5);            /* call 0x10089f70 */
    II(0x10084e9b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10084e9d, 0x2)   jnzd(0x10084ead, 0xe);                /* jnz 0x10084ead */
l_0x10084e9f:
    II(0x10084e9f, 0x6)   mov(memw_a32(ss, ebp - 0x24), 0);     /* mov word [ebp-0x24], 0x0 */
    II(0x10084ea5, 0x6)   mov(memw_a32(ss, ebp - 0x22), 0);     /* mov word [ebp-0x22], 0x0 */
    II(0x10084eab, 0x2)   jmpd(0x10084eeb, 0x3e);               /* jmp 0x10084eeb */
l_0x10084ead:
    II(0x10084ead, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x10084eb0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084eb3, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084eb6, 0x5)   calld(0x10089d7c, 0x4ec1);            /* call 0x10089d7c */
    II(0x10084ebb, 0x5)   calld(0x100a2d3d, 0x1de7d);           /* call 0x100a2d3d */
    II(0x10084ec0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084ec2, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10084ec5, 0x5)   calld(0x10088b44, 0x3c7a);            /* call 0x10088b44 */
    II(0x10084eca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084ecd, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x10084ed0, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10084ed3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084ed6, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084ed9, 0x5)   calld(0x10089d7c, 0x4e9e);            /* call 0x10089d7c */
    II(0x10084ede, 0x5)   calld(0x10089f70, 0x508d);            /* call 0x10089f70 */
    II(0x10084ee3, 0x5)   calld(0x10076074, -0xee74);           /* call 0x10076074 */
    II(0x10084ee8, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
l_0x10084eeb:
    II(0x10084eeb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10084eee, 0x3)   add(edx, 0x3e);                       /* add edx, 0x3e */
    II(0x10084ef1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084ef4, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084ef7, 0x5)   calld(0x1008ac18, 0x5d1c);            /* call 0x1008ac18 */
    II(0x10084efc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10084eff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084f02, 0x3)   add(eax, 0x36);                       /* add eax, 0x36 */
    II(0x10084f05, 0x5)   calld(0x1008afe4, 0x60da);            /* call 0x1008afe4 */
    II(0x10084f0a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084f0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084f0f, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x10084f12, 0x5)   calld(0x1013ad71, 0xb5e5a);           /* call 0x1013ad71 */
    II(0x10084f17, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084f19, 0x2)   jzd(0x10084f3d, 0x22);                /* jz 0x10084f3d */
    II(0x10084f1b, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x10084f1e, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10084f21, 0x5)   calld(0x10075e64, -0xf0c2);           /* call 0x10075e64 */
    II(0x10084f26, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084f28, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084f2b, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x10084f2e, 0x5)   calld(0x100765d0, -0xe963);           /* call 0x100765d0 */
    II(0x10084f33, 0x5)   calld(0x10070ca1, -0x14297);          /* call 0x10070ca1 */
    II(0x10084f38, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10084f3a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x10084f3d:
    II(0x10084f3d, 0x2)   jmpd(0x10084f47, 0x8);                /* jmp 0x10084f47 */
l_0x10084f3f:
    II(0x10084f3f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10084f42, 0x5)   calld(0x10076bf8, -0xe34f);           /* call 0x10076bf8 */
l_0x10084f47:
    II(0x10084f47, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084f49, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10084f4c, 0x5)   calld(0x1013ad71, 0xb5e20);           /* call 0x1013ad71 */
    II(0x10084f51, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084f53, 0x6)   jzd(0x10085015, 0xbc);                /* jz dword 0x10085015 */
    II(0x10084f59, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10084f5c, 0x5)   calld(0x10089acc, 0x4b6b);            /* call 0x10089acc */
    II(0x10084f61, 0x5)   calld(0x10089fc4, 0x505e);            /* call 0x10089fc4 */
    II(0x10084f66, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084f68, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10084f6b, 0x5)   calld(0x1007643c, -0xeb34);           /* call 0x1007643c */
    II(0x10084f70, 0x2)   jmpd(0x10084f7a, 0x8);                /* jmp 0x10084f7a */
l_0x10084f72:
    II(0x10084f72, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10084f75, 0x5)   calld(0x10076bf8, -0xe382);           /* call 0x10076bf8 */
l_0x10084f7a:
    II(0x10084f7a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084f7c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10084f7f, 0x5)   calld(0x1013ad71, 0xb5ded);           /* call 0x1013ad71 */
    II(0x10084f84, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084f86, 0x6)   jzd(0x10085010, 0x84);                /* jz dword 0x10085010 */
    II(0x10084f8c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10084f8f, 0x5)   calld(0x100763d4, -0xebc0);           /* call 0x100763d4 */
    II(0x10084f94, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084f96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084f99, 0x5)   calld(0x10084c7e, -0x320);            /* call 0x10084c7e */
    II(0x10084f9e, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084fa0, 0x2)   jzd(0x1008500b, 0x69);                /* jz 0x1008500b */
    II(0x10084fa2, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x10084fa5, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10084fa8, 0x5)   calld(0x10075e64, -0xf149);           /* call 0x10075e64 */
    II(0x10084fad, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084faf, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10084fb2, 0x5)   calld(0x100763d4, -0xebe3);           /* call 0x100763d4 */
    II(0x10084fb7, 0x5)   calld(0x10070ca1, -0x1431b);          /* call 0x10070ca1 */
    II(0x10084fbc, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10084fbf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084fc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084fc4, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x10084fc7, 0x5)   calld(0x1013ad11, 0xb5d45);           /* call 0x1013ad11 */
    II(0x10084fcc, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084fce, 0x2)   jnzd(0x10084fd9, 0x9);                /* jnz 0x10084fd9 */
    II(0x10084fd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10084fd3, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10084fd7, 0x2)   jled(0x1008500b, 0x32);               /* jle 0x1008500b */
l_0x10084fd9:
    II(0x10084fd9, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10084fdc, 0x5)   calld(0x100763d4, -0xec0d);           /* call 0x100763d4 */
    II(0x10084fe1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084fe3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084fe6, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084fe9, 0x5)   calld(0x10076630, -0xe9be);           /* call 0x10076630 */
    II(0x10084fee, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10084ff1, 0x5)   calld(0x10089b34, 0x4b3e);            /* call 0x10089b34 */
    II(0x10084ff6, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x10084ff9, 0x3)   add(ebx, 0x36);                       /* add ebx, 0x36 */
    II(0x10084ffc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084ffe, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10085000, 0x5)   calld(0x1008afe4, 0x5fdf);            /* call 0x1008afe4 */
    II(0x10085005, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10085008, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x1008500b:
    II(0x1008500b, 0x5)   jmpd(0x10084f72, -0x9e);              /* jmp 0x10084f72 */
l_0x10085010:
    II(0x10085010, 0x5)   jmpd(0x10084f3f, -0xd6);              /* jmp 0x10084f3f */
l_0x10085015:
    II(0x10085015, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085017, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008501a, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x1008501d, 0x5)   calld(0x1013ad11, 0xb5cef);           /* call 0x1013ad11 */
    II(0x10085022, 0x2)   test(al, al);                         /* test al, al */
    II(0x10085024, 0x6)   jzd(0x100850ff, 0xd5);                /* jz dword 0x100850ff */
    II(0x1008502a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008502d, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10085030, 0x5)   calld(0x10089d08, 0x4cd3);            /* call 0x10089d08 */
    II(0x10085035, 0x3)   lea(ebx, ebp - 0x28);                 /* lea ebx, [ebp-0x28] */
    II(0x10085038, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008503a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008503c, 0x5)   calld(0x10089b68, 0x4b27);            /* call 0x10089b68 */
    II(0x10085041, 0x2)   jmpd(0x1008504b, 0x8);                /* jmp 0x1008504b */
l_0x10085043:
    II(0x10085043, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10085046, 0x5)   calld(0x10076bf8, -0xe453);           /* call 0x10076bf8 */
l_0x1008504b:
    II(0x1008504b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008504d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10085050, 0x5)   calld(0x1013ad71, 0xb5d1c);           /* call 0x1013ad71 */
    II(0x10085055, 0x2)   test(al, al);                         /* test al, al */
    II(0x10085057, 0x6)   jzd(0x100850ff, 0xa2);                /* jz dword 0x100850ff */
    II(0x1008505d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10085060, 0x5)   calld(0x10089acc, 0x4a67);            /* call 0x10089acc */
    II(0x10085065, 0x5)   calld(0x10089fc4, 0x4f5a);            /* call 0x10089fc4 */
    II(0x1008506a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008506c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008506f, 0x5)   calld(0x1007643c, -0xec38);           /* call 0x1007643c */
    II(0x10085074, 0x2)   jmpd(0x1008507e, 0x8);                /* jmp 0x1008507e */
l_0x10085076:
    II(0x10085076, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10085079, 0x5)   calld(0x10076bf8, -0xe486);           /* call 0x10076bf8 */
l_0x1008507e:
    II(0x1008507e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085080, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10085083, 0x5)   calld(0x1013ad71, 0xb5ce9);           /* call 0x1013ad71 */
    II(0x10085088, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008508a, 0x2)   jzd(0x100850fa, 0x6e);                /* jz 0x100850fa */
    II(0x1008508c, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x1008508f, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10085092, 0x5)   calld(0x10075e64, -0xf233);           /* call 0x10075e64 */
    II(0x10085097, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10085099, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008509c, 0x5)   calld(0x100763d4, -0xeccd);           /* call 0x100763d4 */
    II(0x100850a1, 0x5)   calld(0x10070ca1, -0x14405);          /* call 0x10070ca1 */
    II(0x100850a6, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100850a9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100850ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100850ae, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x100850b1, 0x5)   calld(0x1013ad11, 0xb5c5b);           /* call 0x1013ad11 */
    II(0x100850b6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100850b8, 0x2)   jnzd(0x100850c3, 0x9);                /* jnz 0x100850c3 */
    II(0x100850ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100850bd, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100850c1, 0x2)   jled(0x100850f5, 0x32);               /* jle 0x100850f5 */
l_0x100850c3:
    II(0x100850c3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100850c6, 0x5)   calld(0x100763d4, -0xecf7);           /* call 0x100763d4 */
    II(0x100850cb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100850cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100850d0, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x100850d3, 0x5)   calld(0x10076630, -0xeaa8);           /* call 0x10076630 */
    II(0x100850d8, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100850db, 0x5)   calld(0x10089b34, 0x4a54);            /* call 0x10089b34 */
    II(0x100850e0, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100850e3, 0x3)   add(ebx, 0x36);                       /* add ebx, 0x36 */
    II(0x100850e6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100850e8, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100850ea, 0x5)   calld(0x1008afe4, 0x5ef5);            /* call 0x1008afe4 */
    II(0x100850ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100850f2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x100850f5:
    II(0x100850f5, 0x5)   jmpd(0x10085076, -0x84);              /* jmp 0x10085076 */
l_0x100850fa:
    II(0x100850fa, 0x5)   jmpd(0x10085043, -0xbc);              /* jmp 0x10085043 */
l_0x100850ff:
    II(0x100850ff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085101, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10085104, 0x5)   calld(0x1013ad71, 0xb5c68);           /* call 0x1013ad71 */
    II(0x10085109, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008510b, 0x2)   jzd(0x1008511d, 0x10);                /* jz 0x1008511d */
    II(0x1008510d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10085110, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10085113, 0x5)   calld(0x10076574, -0xeba4);           /* call 0x10076574 */
    II(0x10085118, 0x5)   calld(0x101527b8, 0xcd69b);           /* call 0x101527b8 */
l_0x1008511d:
    II(0x1008511d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008511f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10085122, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10085125, 0x5)   calld(0x1013ad71, 0xb5c47);           /* call 0x1013ad71 */
    II(0x1008512a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008512c, 0x2)   jzd(0x10085141, 0x13);                /* jz 0x10085141 */
    II(0x1008512e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10085131, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10085134, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10085137, 0x5)   calld(0x10076574, -0xebc8);           /* call 0x10076574 */
    II(0x1008513c, 0x5)   calld(0x10152783, 0xcd642);           /* call 0x10152783 */
l_0x10085141:
    II(0x10085141, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10085144, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10085147, 0x5)   calld(0x100765d0, -0xeb7c);           /* call 0x100765d0 */
    II(0x1008514c, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1008514f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085151, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10085154, 0x5)   calld(0x10075f6c, -0xf1ed);           /* call 0x10075f6c */
    II(0x10085159, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008515b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1008515e, 0x5)   calld(0x10075f2c, -0xf237);           /* call 0x10075f2c */
    II(0x10085163, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085165, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10085168, 0x5)   calld(0x10089044, 0x3ed7);            /* call 0x10089044 */
    II(0x1008516d, 0x2)   jmpd(0x1008518d, 0x1e);               /* jmp 0x1008518d */
//  II(0x1008516f, 0x1e)  /* Недостижимый код. */
l_0x1008518d:
    II(0x1008518d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10085190, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10085192, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10085193, 0x1)   popd(edi);                            /* pop edi */
    II(0x10085194, 0x1)   popd(esi);                            /* pop esi */
    II(0x10085195, 0x1)   popd(edx);                            /* pop edx */
    II(0x10085196, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10085197, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10085198, 0x1)   retd();                               /* ret */
FUNC_END

