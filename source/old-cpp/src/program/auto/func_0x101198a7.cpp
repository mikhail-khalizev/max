FUNC_BEGIN(0x101198a7, 0x1ce93191fc148a89, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0xa1, 0xc4, 0x4, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x14, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x2a, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x85, 0xc0, 0xf, 0x84, 0x9a, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe0, 0xc1, 0xe0, 0x6, 0x5, 0x20, 0, 0, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe4, 0xc1, 0xe0, 0x6, 0x5, 0x20, 0, 0, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x1d, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x21, 0x89, 0x45, 0xd4, 0x31, 0xc0, 0x8b, 0x55, 0xf8, 0x8a, 0x42, 0x4e, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x4f, 0, 0x74, 0xc, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x4f, 0x30, 0xe4, 0x48, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0xe8, 0xe5, 0xc8, 0xf5, 0xff, 0x66, 0x8b, 0x40, 0x10, 0x89, 0x45, 0xec, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xdc, 0xf, 0x8f, 0xd, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xe0, 0x3b, 0x5, 0xf4, 0x38, 0x1c, 0x10, 0x7d, 0xc, 0xf, 0xbf, 0x45, 0xe0, 0x3b, 0x5, 0xec, 0x38, 0x1c, 0x10, 0x7f, 0x2, 0xeb, 0xc, 0xf, 0xbf, 0x45, 0xe4, 0x3b, 0x5, 0xf8, 0x38, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0xc, 0xf, 0xbf, 0x45, 0xe4, 0x3b, 0x5, 0xf0, 0x38, 0x1c, 0x10, 0x7f, 0x2, 0xeb, 0x73, 0xf, 0xbf, 0x55, 0xe0, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfa, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0xcc, 0xf, 0xbf, 0x55, 0xe4, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0xc8, 0x66, 0x83, 0x7d, 0xe8, 0, 0x74, 0x6, 0xc6, 0x45, 0xd0, 0x3, 0xeb, 0x4, 0xc6, 0x45, 0xd0, 0x2, 0x31, 0xc0, 0x8a, 0x45, 0xd0, 0x98, 0x50, 0xf, 0xbf, 0x4d, 0xc8, 0xf, 0xbf, 0x5d, 0xcc, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x18, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0xc7, 0xfa, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe8, 0, 0x75, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0xff, 0x4d, 0xe8, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x2a, 0x8b, 0x45, 0xf4, 0xf, 0xaf, 0x50, 0x25, 0x1, 0x55, 0xd8, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x2a, 0x8b, 0x45, 0xf4, 0xf, 0xaf, 0x50, 0x29, 0x1, 0x55, 0xd4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x17, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xd8, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x19, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xd4, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xe4, 0xe9, 0xe0, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x101198a7, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x101198ac, 0x5)   calld(sys_check_available_stack_size, 0x4c4a1); /* call 0x10165d52 */
    II(0x101198b1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101198b2, 0x1)   pushd(esi);                           /* push esi */
    II(0x101198b3, 0x1)   pushd(edi);                           /* push edi */
    II(0x101198b4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101198b5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101198b7, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x101198bd, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101198c0, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x101198c3, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x101198c6, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101198c9, 0x3)   mov(edx, memd_a32(ds, edx + 0x14));   /* mov edx, [edx+0x14] */
    II(0x101198cc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101198cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101198d2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101198d4, 0x3)   mov(bl, memb_a32(ds, eax + 0x2a));    /* mov bl, [eax+0x2a] */
    II(0x101198d7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101198d9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101198dc, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x101198de, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101198e1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x101198e5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101198e7, 0x6)   jzd(0x10119a87, 0x19a);               /* jz dword 0x10119a87 */
    II(0x101198ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101198f0, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x101198f4, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x101198f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101198fa, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x101198fe, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10119901, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10119904, 0x3)   shl(eax, 0x6);                        /* shl eax, 0x6 */
    II(0x10119907, 0x5)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x1011990c, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1011990f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10119912, 0x3)   shl(eax, 0x6);                        /* shl eax, 0x6 */
    II(0x10119915, 0x5)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x1011991a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1011991d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10119920, 0x3)   mov(eax, memd_a32(ds, eax + 0x1d));   /* mov eax, [eax+0x1d] */
    II(0x10119923, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10119926, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10119929, 0x3)   mov(eax, memd_a32(ds, eax + 0x21));   /* mov eax, [eax+0x21] */
    II(0x1011992c, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1011992f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10119931, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10119934, 0x3)   mov(al, memb_a32(ds, edx + 0x4e));    /* mov al, [edx+0x4e] */
    II(0x10119937, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011993a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011993d, 0x4)   cmp(memb_a32(ds, eax + 0x4f), 0);     /* cmp byte [eax+0x4f], 0x0 */
    II(0x10119941, 0x2)   jzd(0x1011994f, 0xc);                 /* jz 0x1011994f */
    II(0x10119943, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10119946, 0x3)   mov(al, memb_a32(ds, eax + 0x4f));    /* mov al, [eax+0x4f] */
    II(0x10119949, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1011994b, 0x1)   dec(eax);                             /* dec eax */
    II(0x1011994c, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x1011994f:
    II(0x1011994f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10119952, 0x5)   calld(0x1007623c, -0xa371b);          /* call 0x1007623c */
    II(0x10119957, 0x4)   mov(ax, memw_a32(ds, eax + 0x10));    /* mov ax, [eax+0x10] */
    II(0x1011995b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011995e, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10119965, 0x2)   jmpd(0x1011996d, 0x6);                /* jmp 0x1011996d */
l_0x10119967:
    II(0x10119967, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011996a, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1011996d:
    II(0x1011996d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10119970, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x10119974, 0x6)   jgd(0x10119a87, 0x10d);               /* jg dword 0x10119a87 */
    II(0x1011997a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1011997e, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f4));   /* cmp eax, [0x101c38f4] */
    II(0x10119984, 0x2)   jged(0x10119992, 0xc);                /* jge 0x10119992 */
    II(0x10119986, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1011998a, 0x6)   cmp(eax, memd_a32(ds, 0x101c38ec));   /* cmp eax, [0x101c38ec] */
    II(0x10119990, 0x2)   jgd(0x10119994, 0x2);                 /* jg 0x10119994 */
l_0x10119992:
    II(0x10119992, 0x2)   jmpd(0x101199a0, 0xc);                /* jmp 0x101199a0 */
l_0x10119994:
    II(0x10119994, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10119998, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f8));   /* cmp eax, [0x101c38f8] */
    II(0x1011999e, 0x2)   jld(0x101199a2, 0x2);                 /* jl 0x101199a2 */
l_0x101199a0:
    II(0x101199a0, 0x2)   jmpd(0x101199ae, 0xc);                /* jmp 0x101199ae */
l_0x101199a2:
    II(0x101199a2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x101199a6, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f0));   /* cmp eax, [0x101c38f0] */
    II(0x101199ac, 0x2)   jgd(0x101199b0, 0x2);                 /* jg 0x101199b0 */
l_0x101199ae:
    II(0x101199ae, 0x2)   jmpd(0x10119a23, 0x73);               /* jmp 0x10119a23 */
l_0x101199b0:
    II(0x101199b0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x101199b4, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x101199b7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101199b9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101199bc, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x101199c2, 0x6)   mov(edx, memd_a32(ds, 0x101c38fa));   /* mov edx, [0x101c38fa] */
    II(0x101199c8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101199cb, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x101199cd, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x101199d0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x101199d4, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x101199d7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101199d9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101199dc, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x101199e2, 0x6)   mov(edx, memd_a32(ds, 0x101c38fc));   /* mov edx, [0x101c38fc] */
    II(0x101199e8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101199eb, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x101199ed, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x101199f0, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0);     /* cmp word [ebp-0x18], 0x0 */
    II(0x101199f5, 0x2)   jzd(0x101199fd, 0x6);                 /* jz 0x101199fd */
    II(0x101199f7, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0x3);   /* mov byte [ebp-0x30], 0x3 */
    II(0x101199fb, 0x2)   jmpd(0x10119a01, 0x4);                /* jmp 0x10119a01 */
l_0x101199fd:
    II(0x101199fd, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0x2);   /* mov byte [ebp-0x30], 0x2 */
l_0x10119a01:
    II(0x10119a01, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10119a03, 0x3)   mov(al, memb_a32(ss, ebp - 0x30));    /* mov al, [ebp-0x30] */
    II(0x10119a06, 0x1)   cwde();                               /* cwde */
    II(0x10119a07, 0x1)   pushd(eax);                           /* push eax */
    II(0x10119a08, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x38)); /* movsx ecx, word [ebp-0x38] */
    II(0x10119a0c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x34)); /* movsx ebx, word [ebp-0x34] */
    II(0x10119a10, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10119a13, 0x3)   mov(al, memb_a32(ds, eax + 0x18));    /* mov al, [eax+0x18] */
    II(0x10119a16, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10119a18, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10119a1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10119a1e, 0x5)   calld(0x101194ea, -0x539);            /* call 0x101194ea */
l_0x10119a23:
    II(0x10119a23, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0);     /* cmp word [ebp-0x18], 0x0 */
    II(0x10119a28, 0x2)   jnzd(0x10119a30, 0x6);                /* jnz 0x10119a30 */
    II(0x10119a2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10119a2d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x10119a30:
    II(0x10119a30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10119a33, 0x3)   dec(memd_a32(ss, ebp - 0x18));        /* dec dword [ebp-0x18] */
    II(0x10119a36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10119a39, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10119a3b, 0x3)   mov(dl, memb_a32(ds, eax + 0x2a));    /* mov dl, [eax+0x2a] */
    II(0x10119a3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10119a41, 0x4)   imul(edx, memd_a32(ds, eax + 0x25));  /* imul edx, [eax+0x25] */
    II(0x10119a45, 0x3)   add(memd_a32(ss, ebp - 0x28), edx);   /* add [ebp-0x28], edx */
    II(0x10119a48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10119a4b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10119a4d, 0x3)   mov(dl, memb_a32(ds, eax + 0x2a));    /* mov dl, [eax+0x2a] */
    II(0x10119a50, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10119a53, 0x4)   imul(edx, memd_a32(ds, eax + 0x29));  /* imul edx, [eax+0x29] */
    II(0x10119a57, 0x3)   add(memd_a32(ss, ebp - 0x2c), edx);   /* add [ebp-0x2c], edx */
    II(0x10119a5a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10119a5d, 0x3)   mov(edx, memd_a32(ds, eax + 0x17));   /* mov edx, [eax+0x17] */
    II(0x10119a60, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10119a63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10119a66, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10119a69, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10119a6b, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10119a6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10119a71, 0x3)   mov(edx, memd_a32(ds, eax + 0x19));   /* mov edx, [eax+0x19] */
    II(0x10119a74, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10119a77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10119a7a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10119a7d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10119a7f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10119a82, 0x5)   jmpd(0x10119967, -0x120);             /* jmp 0x10119967 */
l_0x10119a87:
    II(0x10119a87, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10119a89, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10119a8a, 0x1)   popd(edi);                            /* pop edi */
    II(0x10119a8b, 0x1)   popd(esi);                            /* pop esi */
    II(0x10119a8c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10119a8d, 0x1)   retd();                               /* ret */
FUNC_END

