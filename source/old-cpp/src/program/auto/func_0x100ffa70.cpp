FUNC_BEGIN(0x100ffa70, 0x5aef975ab6150e14, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xd8, 0x62, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x3d, 0x16, 0x39, 0x1c, 0x10, 0, 0x75, 0xb, 0x31, 0xc0, 0xa0, 0x19, 0x39, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0x66, 0x1, 0, 0, 0xe8, 0x3b, 0x57, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x52, 0x57, 0xfd, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xa1, 0x3c, 0x39, 0x1c, 0x10, 0xe8, 0xbc, 0xff, 0xfc, 0xff, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x18, 0x73, 0x47, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0xe, 0x31, 0xd2, 0x8a, 0x90, 0x57, 0x87, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0x7a, 0, 0xfd, 0xff, 0xe8, 0xe6, 0x56, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xfd, 0x56, 0xfd, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0x5f, 0xff, 0xfc, 0xff, 0xeb, 0xaa, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x74, 0x1f, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0x75, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xf0, 0xe8, 0x5b, 0x54, 0xff, 0xff, 0xeb, 0x31, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0xe8, 0x28, 0x54, 0xff, 0xff, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0xc, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0x74, 0, 0, 0, 0xc6, 0x45, 0xf8, 0x1, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x4, 0x7d, 0x20, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x4, 0xc6, 0x45, 0xf8, 0, 0xeb, 0xd1, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x6, 0x80, 0x7d, 0xf8, 0, 0x74, 0x15, 0x83, 0x7d, 0xfc, 0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x34, 0xfa, 0xff, 0xff, 0xc6, 0x5, 0x16, 0x39, 0x1c, 0x10, 0x1, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ffa70, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100ffa75, 0x5)   calld(sys_check_available_stack_size, 0x662d8); /* call 0x10165d52 */
    II(0x100ffa7a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ffa7b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ffa7c, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ffa7d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ffa7e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ffa7f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ffa80, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ffa82, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100ffa88, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ffa8b, 0x7)   cmp(memb_a32(ds, 0x101c3916), 0);     /* cmp byte [0x101c3916], 0x0 */
    II(0x100ffa92, 0x2)   jnzd(0x100ffa9f, 0xb);                /* jnz 0x100ffa9f */
    II(0x100ffa94, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ffa96, 0x5)   mov(al, memb_a32(ds, 0x101c3919));    /* mov al, [0x101c3919] */
    II(0x100ffa9b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ffa9d, 0x2)   jnzd(0x100ffaa4, 0x5);                /* jnz 0x100ffaa4 */
l_0x100ffa9f:
    II(0x100ffa9f, 0x5)   jmpd(0x100ffc0a, 0x166);              /* jmp 0x100ffc0a */
l_0x100ffaa4:
    II(0x100ffaa4, 0x5)   calld(0x100d51e4, -0x2a8c5);          /* call 0x100d51e4 */
    II(0x100ffaa9, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ffaab, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ffaad, 0x5)   calld(0x100d5204, -0x2a8ae);          /* call 0x100d5204 */
    II(0x100ffab2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ffab4, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100ffab6, 0x5)   mov(eax, memd_a32(ds, 0x101c393c));   /* mov eax, [0x101c393c] */
    II(0x100ffabb, 0x5)   calld(0x100cfa7c, -0x30044);          /* call 0x100cfa7c */
    II(0x100ffac0, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100ffac7, 0x2)   jmpd(0x100ffacf, 0x6);                /* jmp 0x100ffacf */
l_0x100ffac9:
    II(0x100ffac9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ffacc, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100ffacf:
    II(0x100ffacf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100ffad3, 0x3)   cmp(eax, 0x18);                       /* cmp eax, 0x18 */
    II(0x100ffad6, 0x2)   jaed(0x100ffb1f, 0x47);               /* jae 0x100ffb1f */
    II(0x100ffad8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100ffadc, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100ffadf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ffae1, 0x6)   mov(dl, memb_a32(ds, eax + 0x101b8757)); /* mov dl, [eax+0x101b8757] */
    II(0x100ffae7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100ffaeb, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100ffaee, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100ffaf4, 0x5)   calld(0x100cfb73, -0x2ff86);          /* call 0x100cfb73 */
    II(0x100ffaf9, 0x5)   calld(0x100d51e4, -0x2a91a);          /* call 0x100d51e4 */
    II(0x100ffafe, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ffb00, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100ffb02, 0x5)   calld(0x100d5204, -0x2a903);          /* call 0x100d5204 */
    II(0x100ffb07, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ffb09, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100ffb0b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100ffb0f, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100ffb12, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100ffb18, 0x5)   calld(0x100cfa7c, -0x300a1);          /* call 0x100cfa7c */
    II(0x100ffb1d, 0x2)   jmpd(0x100ffac9, -0x56);              /* jmp 0x100ffac9 */
l_0x100ffb1f:
    II(0x100ffb1f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ffb21, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100ffb26, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ffb28, 0x2)   jzd(0x100ffb49, 0x1f);                /* jz 0x100ffb49 */
    II(0x100ffb2a, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x8);   /* cmp byte [0x101c391e], 0x8 */
    II(0x100ffb31, 0x2)   jnzd(0x100ffb39, 0x6);                /* jnz 0x100ffb39 */
    II(0x100ffb33, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100ffb37, 0x2)   jmpd(0x100ffb3d, 0x4);                /* jmp 0x100ffb3d */
l_0x100ffb39:
    II(0x100ffb39, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x100ffb3d:
    II(0x100ffb3d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ffb3f, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x100ffb42, 0x5)   calld(0x100f4fa2, -0xaba5);           /* call 0x100f4fa2 */
    II(0x100ffb47, 0x2)   jmpd(0x100ffb7a, 0x31);               /* jmp 0x100ffb7a */
l_0x100ffb49:
    II(0x100ffb49, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ffb4b, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100ffb50, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ffb56, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ffb5c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ffb61, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ffb64, 0x2)   jnzd(0x100ffb6c, 0x6);                /* jnz 0x100ffb6c */
    II(0x100ffb66, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x100ffb6a, 0x2)   jmpd(0x100ffb70, 0x4);                /* jmp 0x100ffb70 */
l_0x100ffb6c:
    II(0x100ffb6c, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x100ffb70:
    II(0x100ffb70, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ffb72, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100ffb75, 0x5)   calld(0x100f4fa2, -0xabd8);           /* call 0x100f4fa2 */
l_0x100ffb7a:
    II(0x100ffb7a, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x100ffb81, 0x2)   jnzd(0x100ffb8f, 0xc);                /* jnz 0x100ffb8f */
    II(0x100ffb83, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ffb85, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100ffb8a, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ffb8d, 0x2)   jzd(0x100ffb91, 0x2);                 /* jz 0x100ffb91 */
l_0x100ffb8f:
    II(0x100ffb8f, 0x2)   jmpd(0x100ffb96, 0x5);                /* jmp 0x100ffb96 */
l_0x100ffb91:
    II(0x100ffb91, 0x5)   jmpd(0x100ffc0a, 0x74);               /* jmp 0x100ffc0a */
l_0x100ffb96:
    II(0x100ffb96, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100ffb9a, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100ffba1, 0x2)   jmpd(0x100ffba9, 0x6);                /* jmp 0x100ffba9 */
l_0x100ffba3:
    II(0x100ffba3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ffba6, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100ffba9:
    II(0x100ffba9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100ffbad, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ffbb0, 0x2)   jged(0x100ffbd2, 0x20);               /* jge 0x100ffbd2 */
    II(0x100ffbb2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100ffbb6, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ffbbc, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ffbc2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ffbc7, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ffbca, 0x2)   jnzd(0x100ffbd0, 0x4);                /* jnz 0x100ffbd0 */
    II(0x100ffbcc, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x100ffbd0:
    II(0x100ffbd0, 0x2)   jmpd(0x100ffba3, -0x2f);              /* jmp 0x100ffba3 */
l_0x100ffbd2:
    II(0x100ffbd2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ffbd4, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100ffbd9, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ffbdf, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ffbe5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ffbea, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ffbed, 0x2)   jzd(0x100ffbf5, 0x6);                 /* jz 0x100ffbf5 */
    II(0x100ffbef, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x100ffbf3, 0x2)   jzd(0x100ffc0a, 0x15);                /* jz 0x100ffc0a */
l_0x100ffbf5:
    II(0x100ffbf5, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100ffbf9, 0x2)   jzd(0x100ffc03, 0x8);                 /* jz 0x100ffc03 */
    II(0x100ffbfb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ffbfe, 0x5)   calld(0x100ff637, -0x5cc);            /* call 0x100ff637 */
l_0x100ffc03:
    II(0x100ffc03, 0x7)   mov(memb_a32(ds, 0x101c3916), 0x1);   /* mov byte [0x101c3916], 0x1 */
l_0x100ffc0a:
    II(0x100ffc0a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ffc0c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ffc0d, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ffc0e, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ffc0f, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ffc10, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ffc11, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ffc12, 0x1)   retd();                               /* ret */
FUNC_END

