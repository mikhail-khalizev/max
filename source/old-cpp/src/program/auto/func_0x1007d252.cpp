FUNC_BEGIN(0x1007d252, 0xef1ff10cedb404c3, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xf6, 0x8a, 0xe, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xa, 0xe8, 0x57, 0xb5, 0x3, 0, 0x98, 0x85, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xf4, 0, 0xeb, 0x2f, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x12, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x50, 0x14, 0x7c, 0xf, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x8a, 0x45, 0xf0, 0x88, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1007d252, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1007d257, 0x5)   calld(sys_check_available_stack_size, 0xe8af6); /* call 0x10165d52 */
    II(0x1007d25c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007d25d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007d25e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007d25f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007d260, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007d261, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007d263, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1007d269, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1007d26c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1007d26f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007d272, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1007d275, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007d278, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d27b, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x1007d27e, 0x5)   calld(0x100b87da, 0x3b557);           /* call 0x100b87da */
    II(0x1007d283, 0x1)   cwde();                               /* cwde */
    II(0x1007d284, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007d286, 0x2)   jnzd(0x1007d28e, 0x6);                /* jnz 0x1007d28e */
    II(0x1007d288, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1007d28c, 0x2)   jmpd(0x1007d2bd, 0x2f);               /* jmp 0x1007d2bd */
l_0x1007d28e:
    II(0x1007d28e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d291, 0x4)   mov(dx, memw_a32(ds, eax + 0x12));    /* mov dx, [eax+0x12] */
//    II(0x1007d295, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d298, 0x4)   cmp(dx, memw_a32(ds, eax + 0x14));    /* cmp dx, [eax+0x14] */
    II(0x1007d29c, 0x2)   jld(0x1007d2ad, 0xf);                 /* jl 0x1007d2ad */
    II(0x1007d29e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007d2a1, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x1007d2a4, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007d2a9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007d2ab, 0x2)   jnzd(0x1007d2b3, 0x6);                /* jnz 0x1007d2b3 */
l_0x1007d2ad:
    II(0x1007d2ad, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1007d2b1, 0x2)   jmpd(0x1007d2b7, 0x4);                /* jmp 0x1007d2b7 */
l_0x1007d2b3:
    II(0x1007d2b3, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x1007d2b7:
    II(0x1007d2b7, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x1007d2ba, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
l_0x1007d2bd:
    II(0x1007d2bd, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x1007d2c0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007d2c2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007d2c3, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007d2c4, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007d2c5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007d2c6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1007d2c7, 0x1)   retd();                               /* ret */
FUNC_END

