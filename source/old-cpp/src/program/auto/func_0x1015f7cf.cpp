FUNC_BEGIN(0x1015f7cf, 0xfbcbaf04835d4280, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x79, 0x65, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0x6a, 0x12, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x29, 0xba, 0xf2, 0xff, 0x66, 0x8b, 0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x4b, 0x53, 0xf7, 0xff, 0x89, 0x45, 0xf4, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xd1, 0x25, 0xf1, 0xff, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xf4, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x39, 0xd0, 0x7c, 0x38, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0x87, 0x71, 0xf1, 0xff, 0xe8, 0xda, 0x13, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1a, 0x75, 0x1b, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0x6c, 0x71, 0xf1, 0xff, 0xe8, 0x8b, 0x13, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1c, 0x74, 0x2, 0xeb, 0x17, 0x8b, 0x45, 0xfc, 0xe8, 0x44, 0xb5, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x74, 0x92, 0xf2, 0xff, 0xe9, 0x95, 0, 0, 0, 0x66, 0x83, 0x7d, 0xf8, 0xc, 0x74, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x15, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x27, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x21, 0x75, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0x89, 0x45, 0xe4, 0xff, 0x75, 0xe4, 0x66, 0x83, 0x7d, 0xf8, 0xc, 0x74, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x15, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x27, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x21, 0x75, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xe8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0, 0x31, 0xc0, 0x8a, 0x45, 0xe8, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0x7c, 0x4a, 0xf1, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x5, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xda, 0x91, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015f7cf, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x1015f7d4, 0x5)   calld(sys_check_available_stack_size, 0x6579); /* call 0x10165d52 */
    II(0x1015f7d9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015f7da, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015f7db, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015f7dc, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015f7dd, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015f7de, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015f7df, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015f7e1, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x1015f7e7, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1015f7ea, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1015f7ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f7f0, 0x5)   calld(0x10150a5f, -0xed96);           /* call 0x10150a5f */
    II(0x1015f7f5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015f7f7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015f7fa, 0x5)   calld(0x1008b228, -0xd45d7);          /* call 0x1008b228 */
    II(0x1015f7ff, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1015f802, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1015f805, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f808, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015f80b, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015f80d, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f810, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1015f814, 0x5)   calld(0x100d4b64, -0x8acb5);          /* call 0x100d4b64 */
    II(0x1015f819, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015f81c, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1015f821, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f824, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1015f827, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015f82a, 0x5)   calld(0x10071e00, -0xeda2f);          /* call 0x10071e00 */
    II(0x1015f82f, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f832, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1015f836, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1015f839, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f83c, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x1015f83f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015f842, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1015f844, 0x2)   jld(0x1015f87e, 0x38);                /* jl 0x1015f87e */
    II(0x1015f846, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f849, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1015f84c, 0x5)   calld(0x100769d8, -0xe8e79);          /* call 0x100769d8 */
    II(0x1015f851, 0x5)   calld(0x10120c30, -0x3ec26);          /* call 0x10120c30 */
    II(0x1015f856, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f858, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f85b, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1a));    /* cmp dx, [eax+0x1a] */
    II(0x1015f85f, 0x2)   jnzd(0x1015f87c, 0x1b);               /* jnz 0x1015f87c */
    II(0x1015f861, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f864, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1015f867, 0x5)   calld(0x100769d8, -0xe8e94);          /* call 0x100769d8 */
    II(0x1015f86c, 0x5)   calld(0x10120bfc, -0x3ec75);          /* call 0x10120bfc */
    II(0x1015f871, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f873, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f876, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1c));    /* cmp dx, [eax+0x1c] */
    II(0x1015f87a, 0x2)   jzd(0x1015f87e, 0x2);                 /* jz 0x1015f87e */
l_0x1015f87c:
    II(0x1015f87c, 0x2)   jmpd(0x1015f895, 0x17);               /* jmp 0x1015f895 */
l_0x1015f87e:
    II(0x1015f87e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f881, 0x5)   calld(0x1014adca, -0x14abc);          /* call 0x1014adca */
    II(0x1015f886, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015f888, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015f88b, 0x5)   calld(0x10088b04, -0xd6d8c);          /* call 0x10088b04 */
    II(0x1015f890, 0x5)   jmpd(0x1015f92a, 0x95);               /* jmp 0x1015f92a */
l_0x1015f895:
    II(0x1015f895, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0xc);    /* cmp word [ebp-0x8], 0xc */
    II(0x1015f89a, 0x2)   jzd(0x1015f8a3, 0x7);                 /* jz 0x1015f8a3 */
    II(0x1015f89c, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x15);   /* cmp word [ebp-0x8], 0x15 */
    II(0x1015f8a1, 0x2)   jnzd(0x1015f8a5, 0x2);                /* jnz 0x1015f8a5 */
l_0x1015f8a3:
    II(0x1015f8a3, 0x2)   jmpd(0x1015f8ac, 0x7);                /* jmp 0x1015f8ac */
l_0x1015f8a5:
    II(0x1015f8a5, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x27);   /* cmp word [ebp-0x8], 0x27 */
    II(0x1015f8aa, 0x2)   jnzd(0x1015f8ae, 0x2);                /* jnz 0x1015f8ae */
l_0x1015f8ac:
    II(0x1015f8ac, 0x2)   jmpd(0x1015f8b5, 0x7);                /* jmp 0x1015f8b5 */
l_0x1015f8ae:
    II(0x1015f8ae, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x21);   /* cmp word [ebp-0x8], 0x21 */
    II(0x1015f8b3, 0x2)   jnzd(0x1015f8b7, 0x2);                /* jnz 0x1015f8b7 */
l_0x1015f8b5:
    II(0x1015f8b5, 0x2)   jmpd(0x1015f8bd, 0x6);                /* jmp 0x1015f8bd */
l_0x1015f8b7:
    II(0x1015f8b7, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1015f8bb, 0x2)   jmpd(0x1015f8c1, 0x4);                /* jmp 0x1015f8c1 */
l_0x1015f8bd:
    II(0x1015f8bd, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x1015f8c1:
    II(0x1015f8c1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015f8c3, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1015f8c6, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1015f8c9, 0x3)   pushd(memd_a32(ss, ebp - 0x1c));      /* push dword [ebp-0x1c] */
    II(0x1015f8cc, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0xc);    /* cmp word [ebp-0x8], 0xc */
    II(0x1015f8d1, 0x2)   jzd(0x1015f8da, 0x7);                 /* jz 0x1015f8da */
    II(0x1015f8d3, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x15);   /* cmp word [ebp-0x8], 0x15 */
    II(0x1015f8d8, 0x2)   jnzd(0x1015f8dc, 0x2);                /* jnz 0x1015f8dc */
l_0x1015f8da:
    II(0x1015f8da, 0x2)   jmpd(0x1015f8e3, 0x7);                /* jmp 0x1015f8e3 */
l_0x1015f8dc:
    II(0x1015f8dc, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x27);   /* cmp word [ebp-0x8], 0x27 */
    II(0x1015f8e1, 0x2)   jnzd(0x1015f8e5, 0x2);                /* jnz 0x1015f8e5 */
l_0x1015f8e3:
    II(0x1015f8e3, 0x2)   jmpd(0x1015f8ec, 0x7);                /* jmp 0x1015f8ec */
l_0x1015f8e5:
    II(0x1015f8e5, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x21);   /* cmp word [ebp-0x8], 0x21 */
    II(0x1015f8ea, 0x2)   jnzd(0x1015f8ee, 0x2);                /* jnz 0x1015f8ee */
l_0x1015f8ec:
    II(0x1015f8ec, 0x2)   jmpd(0x1015f8f4, 0x6);                /* jmp 0x1015f8f4 */
l_0x1015f8ee:
    II(0x1015f8ee, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x1015f8f2, 0x2)   jmpd(0x1015f8f8, 0x4);                /* jmp 0x1015f8f8 */
l_0x1015f8f4:
    II(0x1015f8f4, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x1015f8f8:
    II(0x1015f8f8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015f8fa, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x1015f8fd, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015f8fe, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015f900, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015f902, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f905, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x1015f908, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015f90b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f90e, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1015f911, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015f914, 0x5)   calld(0x10074395, -0xeb584);          /* call 0x10074395 */
    II(0x1015f919, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f91c, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x5);   /* mov byte [eax+0x3e], 0x5 */
    II(0x1015f920, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015f922, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015f925, 0x5)   calld(0x10088b04, -0xd6e26);          /* call 0x10088b04 */
l_0x1015f92a:
    II(0x1015f92a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015f92c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015f92d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015f92e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015f92f, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015f930, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015f931, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015f932, 0x1)   retd();                               /* ret */
FUNC_END

