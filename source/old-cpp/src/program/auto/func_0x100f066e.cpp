FUNC_BEGIN(0x100f066e, 0x245c4fa85ab7a65e, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xda, 0x56, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x67, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x67, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x61, 0x7e, 0x4b, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x60, 0x2, 0x74, 0x11, 0x8b, 0x45, 0xfc, 0xe8, 0x97, 0, 0, 0, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x82, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x67, 0x1, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x1, 0x74, 0x1a, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x44, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x72, 0xed, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xd0, 0xfa, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x2, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x65, 0xc1, 0xf8, 0x10, 0x83, 0xc2, 0x5, 0x39, 0xd0, 0x72, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0xaf, 0xfa, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x65, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0xc, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x8, 0x1, 0xc3, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0xc, 0x29, 0xc3, 0x89, 0xd8, 0xe8, 0x98, 0xf7, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f066e, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100f0673, 0x5)   calld(sys_check_available_stack_size, 0x756da); /* call 0x10165d52 */
    II(0x100f0678, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f0679, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f067a, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f067b, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f067c, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f067d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f067e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f0680, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100f0686, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100f0689, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f068c, 0x4)   inc(memw_a32(ds, eax + 0x67));        /* inc word [eax+0x67] */
    II(0x100f0690, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0693, 0x4)   mov(dx, memw_a32(ds, eax + 0x67));    /* mov dx, [eax+0x67] */
//    II(0x100f0697, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f069a, 0x4)   cmp(dx, memw_a32(ds, eax + 0x61));    /* cmp dx, [eax+0x61] */
    II(0x100f069e, 0x2)   jled(0x100f06eb, 0x4b);               /* jle 0x100f06eb */
    II(0x100f06a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f06a3, 0x4)   cmp(memb_a32(ds, eax + 0x60), 0x2);   /* cmp byte [eax+0x60], 0x2 */
    II(0x100f06a7, 0x2)   jzd(0x100f06ba, 0x11);                /* jz 0x100f06ba */
    II(0x100f06a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f06ac, 0x5)   calld(0x100f0748, 0x97);              /* call 0x100f0748 */
    II(0x100f06b1, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100f06b5, 0x5)   jmpd(0x100f073c, 0x82);               /* jmp 0x100f073c */
l_0x100f06ba:
    II(0x100f06ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f06bd, 0x6)   mov(memw_a32(ds, eax + 0x67), 0x1);   /* mov word [eax+0x67], 0x1 */
    II(0x100f06c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f06c6, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100f06c9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f06cc, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f06cf, 0x2)   jzd(0x100f06eb, 0x1a);                /* jz 0x100f06eb */
    II(0x100f06d1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f06d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f06d6, 0x3)   mov(edx, memd_a32(ds, eax + 0x44));   /* mov edx, [eax+0x44] */
//    II(0x100f06d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f06dc, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100f06de, 0x5)   calld(my_fseek, -0x128e);             /* call 0x100ef455 */
    II(0x100f06e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f06e6, 0x5)   calld(0x100f01bb, -0x530);            /* call 0x100f01bb */
l_0x100f06eb:
    II(0x100f06eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f06ee, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
    II(0x100f06f1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f06f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f06f7, 0x3)   mov(eax, memd_a32(ds, eax + 0x65));   /* mov eax, [eax+0x65] */
    II(0x100f06fa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f06fd, 0x3)   add(edx, 0x5);                        /* add edx, 0x5 */
    II(0x100f0700, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100f0702, 0x2)   jbd(0x100f070c, 0x8);                 /* jb 0x100f070c */
    II(0x100f0704, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0707, 0x5)   calld(0x100f01bb, -0x551);            /* call 0x100f01bb */
l_0x100f070c:
    II(0x100f070c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f070f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0712, 0x3)   mov(eax, memd_a32(ds, eax + 0x65));   /* mov eax, [eax+0x65] */
    II(0x100f0715, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f0718, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x100f071b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100f071e, 0x3)   add(ebx, 0x8);                        /* add ebx, 0x8 */
    II(0x100f0721, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x100f0723, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0726, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100f0729, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f072c, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x100f072f, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x100f0731, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100f0733, 0x5)   calld(0x100efed0, -0x868);            /* call 0x100efed0 */
    II(0x100f0738, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x100f073c:
    II(0x100f073c, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100f073f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f0741, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f0742, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f0743, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f0744, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f0745, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f0746, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f0747, 0x1)   retd();                               /* ret */
FUNC_END

