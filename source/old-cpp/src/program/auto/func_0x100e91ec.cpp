FUNC_BEGIN(0x100e91ec, 0x6a042aae25d4aec9, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x5c, 0xcb, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x4d, 0xfc, 0x8a, 0x9, 0xb8, 0x1, 0, 0, 0, 0xd3, 0xe0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x7, 0x8b, 0xd, 0xec, 0x70, 0x1c, 0x10, 0x1, 0xc8, 0x8b, 0x40, 0x2, 0xa3, 0x3c, 0x36, 0x1c, 0x10, 0x83, 0x3d, 0x3c, 0x36, 0x1c, 0x10, 0, 0x75, 0x4f, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x8f, 0xad, 0x4, 0, 0xa3, 0x3c, 0x36, 0x1c, 0x10, 0x83, 0x3d, 0x3c, 0x36, 0x1c, 0x10, 0, 0xf, 0x84, 0x35, 0x1, 0, 0, 0xf, 0xbf, 0x4d, 0xf4, 0x31, 0xdb, 0x8d, 0x55, 0xd4, 0xa1, 0x3c, 0x36, 0x1c, 0x10, 0xe8, 0x8d, 0x1c, 0x7, 0, 0xa3, 0x3c, 0x36, 0x1c, 0x10, 0x8b, 0x5d, 0xd4, 0x8b, 0x15, 0x3c, 0x36, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xcd, 0xae, 0x4, 0, 0xa1, 0x3c, 0x36, 0x1c, 0x10, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x22, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xdc, 0x8b, 0x40, 0x2, 0x89, 0x45, 0xe0, 0xa1, 0x3c, 0x36, 0x1c, 0x10, 0x8b, 0x55, 0xe0, 0x1, 0xc2, 0x89, 0x55, 0xe4, 0xa1, 0xc4, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xe8, 0x66, 0xa1, 0xfc, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xf8, 0x66, 0xa1, 0xfe, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xf0, 0xc7, 0x5, 0xc4, 0x38, 0x1c, 0x10, 0, 0, 0x1, 0, 0x66, 0xc7, 0x5, 0xfc, 0x38, 0x1c, 0x10, 0, 0, 0x66, 0xc7, 0x5, 0xfe, 0x38, 0x1c, 0x10, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x20, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1e, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xd8, 0xe8, 0xa8, 0xd7, 0xf8, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xe, 0x66, 0xa3, 0x5c, 0x7f, 0x1b, 0x10, 0x8b, 0x4d, 0xfc, 0x83, 0xc1, 0x10, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x75, 0xe4, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xec, 0xe8, 0x3a, 0xcb, 0xf8, 0xff, 0x89, 0xf2, 0xe8, 0x89, 0x99, 0x6, 0, 0x85, 0xc0, 0x74, 0x38, 0x8b, 0x45, 0xe4, 0x83, 0xc0, 0x8, 0xa3, 0x34, 0x36, 0x1c, 0x10, 0xc6, 0x5, 0x45, 0x36, 0x1c, 0x10, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2, 0xa3, 0x40, 0x36, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x6, 0xa2, 0x44, 0x36, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xa, 0xa3, 0x74, 0x94, 0x1c, 0x10, 0xe8, 0x8b, 0x64, 0, 0, 0x8b, 0x45, 0xe8, 0xa3, 0xc4, 0x38, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0x5c, 0x7f, 0x1b, 0x10, 0x80, 0x2, 0x8b, 0x45, 0xf8, 0x66, 0xa3, 0xfc, 0x38, 0x1c, 0x10, 0x8b, 0x45, 0xf0, 0x66, 0xa3, 0xfe, 0x38, 0x1c, 0x10, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100e91ec, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x100e91f1, 0x5)   calld(sys_check_available_stack_size, 0x7cb5c); /* call 0x10165d52 */
    II(0x100e91f6, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e91f7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e91f8, 0x1)   pushd(edx);                           /* push edx */
    II(0x100e91f9, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e91fa, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e91fb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e91fc, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e91fe, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x100e9204, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100e9207, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x100e920a, 0x2)   mov(cl, memb_a32(ds, ecx));           /* mov cl, [ecx] */
    II(0x100e920c, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100e9211, 0x2)   shl(eax, cl);                         /* shl eax, cl */
    II(0x100e9213, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100e9216, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e9219, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100e921c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e921f, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x100e9222, 0x6)   mov(ecx, memd_a32(ds, ptr_arr_meta_by_id)); /* mov ecx, [0x101c70ec] */
    II(0x100e9228, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x100e922a, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100e922d, 0x5)   mov(memd_a32(ds, 0x101c363c), eax);   /* mov [0x101c363c], eax */
    II(0x100e9232, 0x7)   cmp(memd_a32(ds, 0x101c363c), 0);     /* cmp dword [0x101c363c], 0x0 */
    II(0x100e9239, 0x2)   jnzd(0x100e928a, 0x4f);               /* jnz 0x100e928a */
    II(0x100e923b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e923e, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100e9241, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e9244, 0x5)   calld(my_get_res_data_by_id, 0x4ad8f); /* call 0x10133fd8 */
    II(0x100e9249, 0x5)   mov(memd_a32(ds, 0x101c363c), eax);   /* mov [0x101c363c], eax */
    II(0x100e924e, 0x7)   cmp(memd_a32(ds, 0x101c363c), 0);     /* cmp dword [0x101c363c], 0x0 */
    II(0x100e9255, 0x6)   jzd(0x100e9390, 0x135);               /* jz dword 0x100e9390 */
    II(0x100e925b, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x100e925f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e9261, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100e9264, 0x5)   mov(eax, memd_a32(ds, 0x101c363c));   /* mov eax, [0x101c363c] */
    II(0x100e9269, 0x5)   calld(0x1015aefb, 0x71c8d);           /* call 0x1015aefb */
    II(0x100e926e, 0x5)   mov(memd_a32(ds, 0x101c363c), eax);   /* mov [0x101c363c], eax */
    II(0x100e9273, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x2c));   /* mov ebx, [ebp-0x2c] */
    II(0x100e9276, 0x6)   mov(edx, memd_a32(ds, 0x101c363c));   /* mov edx, [0x101c363c] */
    II(0x100e927c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e927f, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100e9282, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e9285, 0x5)   calld(0x10134157, 0x4aecd);           /* call 0x10134157 */
l_0x100e928a:
    II(0x100e928a, 0x5)   mov(eax, memd_a32(ds, 0x101c363c));   /* mov eax, [0x101c363c] */
    II(0x100e928f, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100e9292, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e9295, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x100e9298, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e929b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e929e, 0x3)   add(eax, memd_a32(ss, ebp - 0x24));   /* add eax, [ebp-0x24] */
    II(0x100e92a1, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100e92a4, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100e92a7, 0x5)   mov(eax, memd_a32(ds, 0x101c363c));   /* mov eax, [0x101c363c] */
    II(0x100e92ac, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x100e92af, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e92b1, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x100e92b4, 0x5)   mov(eax, memd_a32(ds, 0x101c38c4));   /* mov eax, [0x101c38c4] */
    II(0x100e92b9, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100e92bc, 0x6)   mov(ax, memw_a32(ds, 0x101c38fc));    /* mov ax, [0x101c38fc] */
    II(0x100e92c2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e92c5, 0x6)   mov(ax, memw_a32(ds, 0x101c38fe));    /* mov ax, [0x101c38fe] */
    II(0x100e92cb, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e92ce, 0xa)   mov(memd_a32(ds, 0x101c38c4), 0x10000); /* mov dword [0x101c38c4], 0x10000 */
    II(0x100e92d8, 0x9)   mov(memw_a32(ds, 0x101c38fc), 0);     /* mov word [0x101c38fc], 0x0 */
    II(0x100e92e1, 0x9)   mov(memw_a32(ds, 0x101c38fe), 0);     /* mov word [0x101c38fe], 0x0 */
    II(0x100e92ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e92ed, 0x3)   mov(ebx, memd_a32(ds, eax + 0x20));   /* mov ebx, [eax+0x20] */
    II(0x100e92f0, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100e92f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e92f6, 0x3)   mov(edx, memd_a32(ds, eax + 0x1e));   /* mov edx, [eax+0x1e] */
    II(0x100e92f9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e92fc, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100e92ff, 0x5)   calld(0x10076aac, -0x72858);          /* call 0x10076aac */
    II(0x100e9304, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e9307, 0x4)   mov(ax, memw_a32(ds, eax + 0xe));     /* mov ax, [eax+0xe] */
    II(0x100e930b, 0x6)   mov(memw_a32(ds, 0x101b7f5c), ax);    /* mov [0x101b7f5c], ax */
    II(0x100e9311, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x100e9314, 0x3)   add(ecx, 0x10);                       /* add ecx, 0x10 */
    II(0x100e9317, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100e931c, 0x3)   mov(esi, memd_a32(ss, ebp - 0x1c));   /* mov esi, [ebp-0x1c] */
    II(0x100e931f, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100e9322, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e9325, 0x5)   calld(0x10075e64, -0x734c6);          /* call 0x10075e64 */
    II(0x100e932a, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x100e932c, 0x5)   calld(0x10152cba, 0x69989);           /* call 0x10152cba */
    II(0x100e9331, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e9333, 0x2)   jzd(0x100e936d, 0x38);                /* jz 0x100e936d */
    II(0x100e9335, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100e9338, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100e933b, 0x5)   mov(memd_a32(ds, 0x101c3634), eax);   /* mov [0x101c3634], eax */
    II(0x100e9340, 0x7)   mov(memb_a32(ds, 0x101c3645), 0);     /* mov byte [0x101c3645], 0x0 */
    II(0x100e9347, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e934a, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100e934d, 0x5)   mov(memd_a32(ds, 0x101c3640), eax);   /* mov [0x101c3640], eax */
    II(0x100e9352, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e9355, 0x3)   mov(al, memb_a32(ds, eax + 0x6));     /* mov al, [eax+0x6] */
    II(0x100e9358, 0x5)   mov(memb_a32(ds, 0x101c3644), al);    /* mov [0x101c3644], al */
    II(0x100e935d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e9360, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x100e9363, 0x5)   mov(memd_a32(ds, 0x101c9474), eax);   /* mov [0x101c9474], eax */
    II(0x100e9368, 0x5)   calld(0x100ef7f8, 0x648b);            /* call 0x100ef7f8 */
l_0x100e936d:
    II(0x100e936d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e9370, 0x5)   mov(memd_a32(ds, 0x101c38c4), eax);   /* mov [0x101c38c4], eax */
    II(0x100e9375, 0x9)   mov(memw_a32(ds, 0x101b7f5c), 0x280); /* mov word [0x101b7f5c], 0x280 */
    II(0x100e937e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9381, 0x6)   mov(memw_a32(ds, 0x101c38fc), ax);    /* mov [0x101c38fc], ax */
    II(0x100e9387, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e938a, 0x6)   mov(memw_a32(ds, 0x101c38fe), ax);    /* mov [0x101c38fe], ax */
l_0x100e9390:
    II(0x100e9390, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e9392, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e9393, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e9394, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e9395, 0x1)   popd(edx);                            /* pop edx */
    II(0x100e9396, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e9397, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e9398, 0x1)   retd();                               /* ret */
FUNC_END

