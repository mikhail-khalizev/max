FUNC_BEGIN(0x1008f29d, 0xa7946d94098d665b, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0xab, 0x6a, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x40, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xc4, 0xe8, 0x29, 0xc9, 0xff, 0xff, 0x89, 0x45, 0xcc, 0x80, 0x65, 0xf4, 0xfe, 0x8d, 0x45, 0xc4, 0xe8, 0x25, 0xb4, 0xff, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x1, 0xf5, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x5, 0x78, 0xfe, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x43, 0x70, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0xb9, 0x71, 0xfe, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x2f, 0x70, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0x29, 0x71, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd4, 0xe8, 0xdb, 0x78, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x4a, 0xba, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x15, 0x1, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x69, 0x70, 0xfe, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xd4, 0xe8, 0x4f, 0x70, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x5, 0xe9, 0xe2, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x3b, 0x70, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x48, 0x66, 0x89, 0x45, 0xd0, 0x8d, 0x45, 0xd4, 0xe8, 0x2a, 0x70, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x5, 0x2, 0, 0, 0, 0x66, 0x89, 0x45, 0xd2, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xec, 0x2, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x8, 0x7d, 0x6, 0x80, 0x7d, 0xf8, 0, 0x74, 0x5, 0xe9, 0x95, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x3, 0x7d, 0x6, 0x80, 0x7d, 0xf8, 0, 0x74, 0x5, 0xe9, 0x6d, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0xc7, 0xbd, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xd0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xd2, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xd2, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x1e, 0xf, 0xbf, 0x5d, 0xd2, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xc4, 0xe8, 0xd, 0xb3, 0xff, 0xff, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0x79, 0xff, 0xff, 0xff, 0xe9, 0x53, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0, 0x75, 0x5, 0xe9, 0xd1, 0xfe, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0, 0x75, 0x19, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x18, 0x6b, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x41, 0xc8, 0xff, 0xff, 0xe9, 0xc0, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x8d, 0xb2, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xa2, 0xf6, 0xff, 0xff, 0xb8, 0x24, 0, 0, 0, 0xe8, 0x81, 0x69, 0xd, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x34, 0x31, 0xc0, 0x50, 0x8d, 0x55, 0xd0, 0x8d, 0x45, 0xdc, 0xe8, 0xc8, 0x69, 0xfe, 0xff, 0x89, 0xc1, 0xbb, 0x3, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x4d, 0xb2, 0xff, 0xff, 0x8b, 0x75, 0xe8, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x19, 0x89, 0x3, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xc0, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xc0, 0x8b, 0x55, 0xc0, 0x8d, 0x45, 0xd8, 0xe8, 0xd, 0xa2, 0xff, 0xff, 0xbb, 0x3, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x18, 0xb2, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xb2, 0xfa, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x17, 0xbb, 0x4, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0xfd, 0xb1, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x97, 0xfa, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xf1, 0xa0, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x53, 0x6a, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x7c, 0xc7, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008f29d, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x1008f2a2, 0x5)   calld(sys_check_available_stack_size, 0xd6aab); /* call 0x10165d52 */
    II(0x1008f2a7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008f2a8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008f2a9, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008f2aa, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008f2ab, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008f2ac, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008f2ad, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008f2af, 0x6)   sub(esp, 0x40);                       /* sub esp, 0x40 */
    II(0x1008f2b5, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1008f2b8, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1008f2bc, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008f2bf, 0x5)   calld(0x1008bbed, -0x36d7);           /* call 0x1008bbed */
    II(0x1008f2c4, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1008f2c7, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1008f2cb, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008f2ce, 0x5)   calld(0x1008a6f8, -0x4bdb);           /* call 0x1008a6f8 */
    II(0x1008f2d3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1008f2d6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f2d8, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008f2da, 0x5)   calld(0x1008e7e0, -0xaff);            /* call 0x1008e7e0 */
    II(0x1008f2df, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1008f2e3, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008f2e6, 0x5)   calld(my_ctor_0x101b4184, -0x187fb);  /* call 0x10076af0 */
    II(0x1008f2eb, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1008f2f0, 0x5)   calld(0x10076338, -0x18fbd);          /* call 0x10076338 */
    II(0x1008f2f5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f2f7, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f2fa, 0x5)   calld(0x100764b8, -0x18e47);          /* call 0x100764b8 */
    II(0x1008f2ff, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1008f304, 0x5)   calld(0x10076338, -0x18fd1);          /* call 0x10076338 */
    II(0x1008f309, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f30b, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f30e, 0x5)   calld(0x1007643c, -0x18ed7);          /* call 0x1007643c */
    II(0x1008f313, 0x2)   jmpd(0x1008f31d, 0x8);                /* jmp 0x1008f31d */
l_0x1008f315:
    II(0x1008f315, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f318, 0x5)   calld(0x10076bf8, -0x18725);          /* call 0x10076bf8 */
l_0x1008f31d:
    II(0x1008f31d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f31f, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f322, 0x5)   calld(0x1013ad71, 0xaba4a);           /* call 0x1013ad71 */
    II(0x1008f327, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f329, 0x6)   jzd(0x1008f444, 0x115);               /* jz dword 0x1008f444 */
    II(0x1008f32f, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f332, 0x5)   calld(0x100763a0, -0x18f97);          /* call 0x100763a0 */
    II(0x1008f337, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f339, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1008f33c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f33f, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1008f342, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008f345, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008f347, 0x2)   jnzd(0x1008f358, 0xf);                /* jnz 0x1008f358 */
    II(0x1008f349, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f34c, 0x5)   calld(0x100763a0, -0x18fb1);          /* call 0x100763a0 */
    II(0x1008f351, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x1008f356, 0x2)   jzd(0x1008f35d, 0x5);                 /* jz 0x1008f35d */
l_0x1008f358:
    II(0x1008f358, 0x5)   jmpd(0x1008f43f, 0xe2);               /* jmp 0x1008f43f */
l_0x1008f35d:
    II(0x1008f35d, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f360, 0x5)   calld(0x100763a0, -0x18fc5);          /* call 0x100763a0 */
    II(0x1008f365, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1008f369, 0x1)   dec(eax);                             /* dec eax */
    II(0x1008f36a, 0x4)   mov(memw_a32(ss, ebp - 0x30), ax);    /* mov [ebp-0x30], ax */
    II(0x1008f36e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f371, 0x5)   calld(0x100763a0, -0x18fd6);          /* call 0x100763a0 */
    II(0x1008f376, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1008f37a, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x1008f37f, 0x4)   mov(memw_a32(ss, ebp - 0x2e), ax);    /* mov [ebp-0x2e], ax */
    II(0x1008f383, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1008f38a, 0x2)   jmpd(0x1008f390, 0x4);                /* jmp 0x1008f390 */
l_0x1008f38c:
    II(0x1008f38c, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x2);   /* add dword [ebp-0x14], 0x2 */
l_0x1008f390:
    II(0x1008f390, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1008f394, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1008f397, 0x2)   jged(0x1008f39f, 0x6);                /* jge 0x1008f39f */
    II(0x1008f399, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1008f39d, 0x2)   jzd(0x1008f3a4, 0x5);                 /* jz 0x1008f3a4 */
l_0x1008f39f:
    II(0x1008f39f, 0x5)   jmpd(0x1008f439, 0x95);               /* jmp 0x1008f439 */
l_0x1008f3a4:
    II(0x1008f3a4, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1008f3ab, 0x2)   jmpd(0x1008f3b3, 0x6);                /* jmp 0x1008f3b3 */
l_0x1008f3ad:
    II(0x1008f3ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008f3b0, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1008f3b3:
    II(0x1008f3b3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1008f3b7, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x1008f3ba, 0x2)   jged(0x1008f3c2, 0x6);                /* jge 0x1008f3c2 */
    II(0x1008f3bc, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1008f3c0, 0x2)   jzd(0x1008f3c7, 0x5);                 /* jz 0x1008f3c7 */
l_0x1008f3c2:
    II(0x1008f3c2, 0x5)   jmpd(0x1008f434, 0x6d);               /* jmp 0x1008f434 */
l_0x1008f3c7:
    II(0x1008f3c7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1008f3cb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008f3ce, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1008f3d3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1008f3d5, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008f3d8, 0x5)   calld(0x1008b1a4, -0x4239);           /* call 0x1008b1a4 */
    II(0x1008f3dd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1008f3e1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008f3e3, 0x2)   jld(0x1008f3f1, 0xc);                 /* jl 0x1008f3f1 */
    II(0x1008f3e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1008f3e8, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1008f3ef, 0x2)   jld(0x1008f3f3, 0x2);                 /* jl 0x1008f3f3 */
l_0x1008f3f1:
    II(0x1008f3f1, 0x2)   jmpd(0x1008f3fb, 0x8);                /* jmp 0x1008f3fb */
l_0x1008f3f3:
    II(0x1008f3f3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2e)); /* movsx eax, word [ebp-0x2e] */
    II(0x1008f3f7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008f3f9, 0x2)   jged(0x1008f3fd, 0x2);                /* jge 0x1008f3fd */
l_0x1008f3fb:
    II(0x1008f3fb, 0x2)   jmpd(0x1008f409, 0xc);                /* jmp 0x1008f409 */
l_0x1008f3fd:
    II(0x1008f3fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2e));   /* mov eax, [ebp-0x2e] */
    II(0x1008f400, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1008f407, 0x2)   jld(0x1008f40b, 0x2);                 /* jl 0x1008f40b */
l_0x1008f409:
    II(0x1008f409, 0x2)   jmpd(0x1008f429, 0x1e);               /* jmp 0x1008f429 */
l_0x1008f40b:
    II(0x1008f40b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x2e)); /* movsx ebx, word [ebp-0x2e] */
    II(0x1008f40f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x1008f413, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008f416, 0x5)   calld(0x1008a728, -0x4cf3);           /* call 0x1008a728 */
    II(0x1008f41b, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1008f41d, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1008f41f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1008f424, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1008f427, 0x2)   jzd(0x1008f42b, 0x2);                 /* jz 0x1008f42b */
l_0x1008f429:
    II(0x1008f429, 0x2)   jmpd(0x1008f42f, 0x4);                /* jmp 0x1008f42f */
l_0x1008f42b:
    II(0x1008f42b, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x1008f42f:
    II(0x1008f42f, 0x5)   jmpd(0x1008f3ad, -0x87);              /* jmp 0x1008f3ad */
l_0x1008f434:
    II(0x1008f434, 0x5)   jmpd(0x1008f38c, -0xad);              /* jmp 0x1008f38c */
l_0x1008f439:
    II(0x1008f439, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1008f43d, 0x2)   jnzd(0x1008f444, 0x5);                /* jnz 0x1008f444 */
l_0x1008f43f:
    II(0x1008f43f, 0x5)   jmpd(0x1008f315, -0x12f);             /* jmp 0x1008f315 */
l_0x1008f444:
    II(0x1008f444, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1008f448, 0x2)   jnzd(0x1008f463, 0x19);               /* jnz 0x1008f463 */
    II(0x1008f44a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f44c, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f44f, 0x5)   calld(0x10075f6c, -0x194e8);          /* call 0x10075f6c */
    II(0x1008f454, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f456, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008f459, 0x5)   calld(0x1008bc9f, -0x37bf);           /* call 0x1008bc9f */
    II(0x1008f45e, 0x5)   jmpd(0x1008f523, 0xc0);               /* jmp 0x1008f523 */
l_0x1008f463:
    II(0x1008f463, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008f466, 0x5)   calld(0x1008a6f8, -0x4d73);           /* call 0x1008a6f8 */
    II(0x1008f46b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f46d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f470, 0x5)   calld(0x1008eb17, -0x95e);            /* call 0x1008eb17 */
    II(0x1008f475, 0x5)   mov(eax, 0x24);                       /* mov eax, 0x24 */
    II(0x1008f47a, 0x5)   calld(sys_new, 0xd6981);              /* call 0x10165e00 */
    II(0x1008f47f, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1008f482, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1008f485, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1008f488, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1008f48c, 0x2)   jzd(0x1008f4c2, 0x34);                /* jz 0x1008f4c2 */
    II(0x1008f48e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008f490, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008f491, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x1008f494, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1008f497, 0x5)   calld(0x10075e64, -0x19638);          /* call 0x10075e64 */
    II(0x1008f49c, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1008f49e, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x1008f4a3, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008f4a6, 0x5)   calld(0x1008a6f8, -0x4db3);           /* call 0x1008a6f8 */
    II(0x1008f4ab, 0x3)   mov(esi, memd_a32(ss, ebp - 0x18));   /* mov esi, [ebp-0x18] */
    II(0x1008f4ae, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f4b0, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1008f4b2, 0x5)   calld(0x100c7dd0, 0x38919);           /* call 0x100c7dd0 */
    II(0x1008f4b7, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1008f4ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008f4bd, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1008f4c0, 0x2)   jmpd(0x1008f4c8, 0x6);                /* jmp 0x1008f4c8 */
l_0x1008f4c2:
    II(0x1008f4c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1008f4c5, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x1008f4c8:
    II(0x1008f4c8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x1008f4cb, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1008f4ce, 0x5)   calld(0x100896e0, -0x5df3);           /* call 0x100896e0 */
    II(0x1008f4d3, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x1008f4d8, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008f4db, 0x5)   calld(0x1008a6f8, -0x4de8);           /* call 0x1008a6f8 */
    II(0x1008f4e0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f4e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f4e5, 0x5)   calld(0x1008ef9c, -0x54e);            /* call 0x1008ef9c */
    II(0x1008f4ea, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f4ec, 0x2)   jnzd(0x1008f505, 0x17);               /* jnz 0x1008f505 */
    II(0x1008f4ee, 0x5)   mov(ebx, 0x4);                        /* mov ebx, 0x4 */
    II(0x1008f4f3, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008f4f6, 0x5)   calld(0x1008a6f8, -0x4e03);           /* call 0x1008a6f8 */
    II(0x1008f4fb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f4fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f500, 0x5)   calld(0x1008ef9c, -0x569);            /* call 0x1008ef9c */
l_0x1008f505:
    II(0x1008f505, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f507, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1008f50a, 0x5)   calld(0x10089600, -0x5f0f);           /* call 0x10089600 */
    II(0x1008f50f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f511, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008f514, 0x5)   calld(0x10075f6c, -0x195ad);          /* call 0x10075f6c */
    II(0x1008f519, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f51b, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008f51e, 0x5)   calld(0x1008bc9f, -0x3884);           /* call 0x1008bc9f */
l_0x1008f523:
    II(0x1008f523, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008f525, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008f526, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008f527, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008f528, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008f529, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008f52a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008f52b, 0x1)   retd();                               /* ret */
FUNC_END

