FUNC_BEGIN(0x100ac6ba, 0xa60d5ff708eefafd, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0x8e, 0x96, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc6, 0x45, 0xf8, 0x1, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x28, 0x8d, 0x45, 0xe4, 0xe8, 0x7d, 0x97, 0xfc, 0xff, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x43, 0xea, 0xfd, 0xff, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xe6, 0xf, 0xbf, 0x5d, 0xe4, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x4d, 0x9e, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x87, 0x3b, 0xfc, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x2b, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xe8, 0xe8, 0x18, 0x97, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x63, 0xe4, 0xfd, 0xff, 0xe8, 0x9b, 0xc9, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x16, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x28, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0xcf, 0xc3, 0xfd, 0xff, 0xe9, 0x1b, 0x1, 0, 0, 0xc7, 0x45, 0xec, 0x2, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xec, 0x2, 0x80, 0x7d, 0xf8, 0, 0xf, 0x84, 0x4, 0x1, 0, 0, 0x8b, 0x45, 0xe4, 0x66, 0xff, 0x4d, 0xe4, 0x8b, 0x45, 0xe6, 0x66, 0xff, 0x45, 0xe6, 0xc6, 0x45, 0xf8, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xf4, 0x2, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0xd3, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xec, 0xf, 0x8d, 0xb2, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xb5, 0xe9, 0xfd, 0xff, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xd4, 0xe8, 0xd4, 0xba, 0x5, 0, 0x84, 0xc0, 0xf, 0x84, 0x84, 0, 0, 0, 0xc6, 0x45, 0xf8, 0x1, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xe6, 0xf, 0xbf, 0x5d, 0xe4, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x4c, 0x9d, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x86, 0x3a, 0xfc, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x2b, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xd0, 0xe8, 0x17, 0x96, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x62, 0xe3, 0xfd, 0xff, 0xe8, 0x9a, 0xc8, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x21, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x28, 0xe8, 0xd1, 0xc2, 0xfd, 0xff, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x28, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0xc0, 0xc2, 0xfd, 0xff, 0xeb, 0xf, 0xe9, 0x3b, 0xff, 0xff, 0xff, 0xe9, 0x1c, 0xff, 0xff, 0xff, 0xe9, 0xee, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ac6ba, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x100ac6bf, 0x5)   calld(sys_check_available_stack_size, 0xb968e); /* call 0x10165d52 */
    II(0x100ac6c4, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ac6c5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ac6c6, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ac6c7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ac6c8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ac6c9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ac6ca, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ac6cc, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x100ac6d2, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ac6d5, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100ac6d9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ac6dc, 0x3)   add(edx, 0x28);                       /* add edx, 0x28 */
    II(0x100ac6df, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100ac6e2, 0x5)   calld(0x10075e64, -0x36883);          /* call 0x10075e64 */
    II(0x100ac6e7, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100ac6ec, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ac6ef, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ac6f0, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100ac6f6, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100ac6f9, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ac6fb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ac6fd, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100ac700, 0x5)   calld(0x1008b148, -0x215bd);          /* call 0x1008b148 */
    II(0x100ac705, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100ac70a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ac70b, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x1a)); /* movsx ecx, word [ebp-0x1a] */
    II(0x100ac70f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x100ac713, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac716, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100ac719, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ac71c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac71f, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac722, 0x5)   calld(0x10076574, -0x361b3);          /* call 0x10076574 */
    II(0x100ac727, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ac72a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ac72d, 0x5)   calld(0x100702b9, -0x3c479);          /* call 0x100702b9 */
    II(0x100ac732, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100ac735, 0x2)   jzd(0x100ac762, 0x2b);                /* jz 0x100ac762 */
    II(0x100ac737, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ac73c, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100ac741, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100ac744, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ac747, 0x5)   calld(0x10075e64, -0x368e8);          /* call 0x10075e64 */
    II(0x100ac74c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ac74e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac751, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac754, 0x5)   calld(0x1008abbc, -0x21b9d);          /* call 0x1008abbc */
    II(0x100ac759, 0x5)   calld(0x100a90f9, -0x3665);           /* call 0x100a90f9 */
    II(0x100ac75e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ac760, 0x2)   jzd(0x100ac764, 0x2);                 /* jz 0x100ac764 */
l_0x100ac762:
    II(0x100ac762, 0x2)   jmpd(0x100ac77a, 0x16);               /* jmp 0x100ac77a */
l_0x100ac764:
    II(0x100ac764, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ac767, 0x3)   add(edx, 0x28);                       /* add edx, 0x28 */
    II(0x100ac76a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac76d, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x100ac770, 0x5)   calld(0x10088b44, -0x23c31);          /* call 0x10088b44 */
    II(0x100ac775, 0x5)   jmpd(0x100ac895, 0x11b);              /* jmp 0x100ac895 */
l_0x100ac77a:
    II(0x100ac77a, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x2);   /* mov dword [ebp-0x14], 0x2 */
    II(0x100ac781, 0x2)   jmpd(0x100ac787, 0x4);                /* jmp 0x100ac787 */
l_0x100ac783:
    II(0x100ac783, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x2);   /* add dword [ebp-0x14], 0x2 */
l_0x100ac787:
    II(0x100ac787, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x100ac78b, 0x6)   jzd(0x100ac895, 0x104);               /* jz dword 0x100ac895 */
    II(0x100ac791, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ac794, 0x4)   dec(memw_a32(ss, ebp - 0x1c));        /* dec word [ebp-0x1c] */
    II(0x100ac798, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x100ac79b, 0x4)   inc(memw_a32(ss, ebp - 0x1a));        /* inc word [ebp-0x1a] */
    II(0x100ac79f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100ac7a3, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100ac7aa, 0x2)   jmpd(0x100ac7b0, 0x4);                /* jmp 0x100ac7b0 */
l_0x100ac7ac:
    II(0x100ac7ac, 0x4)   add(memd_a32(ss, ebp - 0xc), 0x2);    /* add dword [ebp-0xc], 0x2 */
l_0x100ac7b0:
    II(0x100ac7b0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100ac7b4, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100ac7b7, 0x6)   jged(0x100ac890, 0xd3);               /* jge dword 0x100ac890 */
    II(0x100ac7bd, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100ac7c4, 0x2)   jmpd(0x100ac7cc, 0x6);                /* jmp 0x100ac7cc */
l_0x100ac7c6:
    II(0x100ac7c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac7c9, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100ac7cc:
    II(0x100ac7cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac7cf, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100ac7d3, 0x6)   jged(0x100ac88b, 0xb2);               /* jge dword 0x100ac88b */
    II(0x100ac7d9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100ac7dd, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100ac7e0, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x100ac7e5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ac7e7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100ac7ea, 0x5)   calld(0x1008b1a4, -0x2164b);          /* call 0x1008b1a4 */
    II(0x100ac7ef, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100ac7f2, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100ac7f5, 0x5)   calld(0x101082ce, 0x5bad4);           /* call 0x101082ce */
    II(0x100ac7fa, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ac7fc, 0x6)   jzd(0x100ac886, 0x84);                /* jz dword 0x100ac886 */
    II(0x100ac802, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100ac806, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ac80b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ac80c, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x1a)); /* movsx ecx, word [ebp-0x1a] */
    II(0x100ac810, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x100ac814, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac817, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100ac81a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ac81d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac820, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac823, 0x5)   calld(0x10076574, -0x362b4);          /* call 0x10076574 */
    II(0x100ac828, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ac82b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ac82e, 0x5)   calld(0x100702b9, -0x3c57a);          /* call 0x100702b9 */
    II(0x100ac833, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100ac836, 0x2)   jzd(0x100ac863, 0x2b);                /* jz 0x100ac863 */
    II(0x100ac838, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ac83d, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100ac842, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100ac845, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100ac848, 0x5)   calld(0x10075e64, -0x369e9);          /* call 0x10075e64 */
    II(0x100ac84d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ac84f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac852, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac855, 0x5)   calld(0x1008abbc, -0x21c9e);          /* call 0x1008abbc */
    II(0x100ac85a, 0x5)   calld(0x100a90f9, -0x3766);           /* call 0x100a90f9 */
    II(0x100ac85f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ac861, 0x2)   jzd(0x100ac865, 0x2);                 /* jz 0x100ac865 */
l_0x100ac863:
    II(0x100ac863, 0x2)   jmpd(0x100ac886, 0x21);               /* jmp 0x100ac886 */
l_0x100ac865:
    II(0x100ac865, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100ac868, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac86b, 0x3)   add(eax, 0x28);                       /* add eax, 0x28 */
    II(0x100ac86e, 0x5)   calld(0x10088b44, -0x23d2f);          /* call 0x10088b44 */
    II(0x100ac873, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ac876, 0x3)   add(edx, 0x28);                       /* add edx, 0x28 */
    II(0x100ac879, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac87c, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x100ac87f, 0x5)   calld(0x10088b44, -0x23d40);          /* call 0x10088b44 */
    II(0x100ac884, 0x2)   jmpd(0x100ac895, 0xf);                /* jmp 0x100ac895 */
l_0x100ac886:
    II(0x100ac886, 0x5)   jmpd(0x100ac7c6, -0xc5);              /* jmp 0x100ac7c6 */
l_0x100ac88b:
    II(0x100ac88b, 0x5)   jmpd(0x100ac7ac, -0xe4);              /* jmp 0x100ac7ac */
l_0x100ac890:
    II(0x100ac890, 0x5)   jmpd(0x100ac783, -0x112);             /* jmp 0x100ac783 */
l_0x100ac895:
    II(0x100ac895, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ac897, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ac898, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ac899, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ac89a, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ac89b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ac89c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ac89d, 0x1)   retd();                               /* ret */
FUNC_END

