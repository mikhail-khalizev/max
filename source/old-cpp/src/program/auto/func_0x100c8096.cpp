FUNC_BEGIN(0x100c8096, 0xff70322e461fcedf, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xb2, 0xdc, 0x9, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x8d, 0x45, 0xf0, 0xe8, 0x33, 0xea, 0xfa, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x13, 0x83, 0xea, 0x4, 0x8b, 0x45, 0xf4, 0x2b, 0x50, 0xb, 0xe8, 0xca, 0xdd, 0x9, 0, 0x42, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x3, 0x50, 0xb, 0x66, 0x89, 0x55, 0xf0, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x17, 0x83, 0xea, 0x4, 0x8b, 0x45, 0xf4, 0x2b, 0x50, 0xf, 0xe8, 0xa3, 0xdd, 0x9, 0, 0x42, 0xf, 0xaf, 0xd0, 0xc1, 0xea, 0xf, 0x8b, 0x45, 0xf4, 0x3, 0x50, 0xf, 0x66, 0x89, 0x55, 0xf2, 0x8d, 0x55, 0xf0, 0x8d, 0x45, 0xec, 0xe8, 0x50, 0xdd, 0xfa, 0xff, 0x89, 0xc1, 0xf, 0xbf, 0x5d, 0xf8, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0x51, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x92, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x13, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x82, 0xbc, 0x35, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x13, 0x8b, 0x45, 0xf2, 0x66, 0x89, 0x82, 0xbe, 0x35, 0x1c, 0x10, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100c8096, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100c809b, 0x5)   calld(sys_check_available_stack_size, 0x9dcb2); /* call 0x10165d52 */
    II(0x100c80a0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c80a1, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c80a2, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c80a3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c80a4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c80a6, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100c80ac, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100c80af, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100c80b2, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100c80b5, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c80b8, 0x5)   calld(my_ctor_0x101b4184, -0x515cd);  /* call 0x10076af0 */
l_0x100c80bd:
    II(0x100c80bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c80c0, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
    II(0x100c80c3, 0x3)   sub(edx, 0x4);                        /* sub edx, 0x4 */
    II(0x100c80c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c80c9, 0x3)   sub(edx, memd_a32(ds, eax + 0xb));    /* sub edx, [eax+0xb] */
    II(0x100c80cc, 0x5)   calld(/* sys */ 0x10165e9b, 0x9ddca); /* call 0x10165e9b */
    II(0x100c80d1, 0x1)   inc(edx);                             /* inc edx */
    II(0x100c80d2, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100c80d5, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c80d8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c80da, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c80dd, 0x3)   add(edx, memd_a32(ds, eax + 0xb));    /* add edx, [eax+0xb] */
    II(0x100c80e0, 0x4)   mov(memw_a32(ss, ebp - 0x10), dx);    /* mov [ebp-0x10], dx */
    II(0x100c80e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c80e7, 0x3)   mov(edx, memd_a32(ds, eax + 0x17));   /* mov edx, [eax+0x17] */
    II(0x100c80ea, 0x3)   sub(edx, 0x4);                        /* sub edx, 0x4 */
    II(0x100c80ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c80f0, 0x3)   sub(edx, memd_a32(ds, eax + 0xf));    /* sub edx, [eax+0xf] */
    II(0x100c80f3, 0x5)   calld(/* sys */ 0x10165e9b, 0x9dda3); /* call 0x10165e9b */
    II(0x100c80f8, 0x1)   inc(edx);                             /* inc edx */
    II(0x100c80f9, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c80fc, 0x3)   shr(edx, 0xf);                        /* shr edx, 0xf */
    II(0x100c80ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c8102, 0x3)   add(edx, memd_a32(ds, eax + 0xf));    /* add edx, [eax+0xf] */
    II(0x100c8105, 0x4)   mov(memw_a32(ss, ebp - 0xe), dx);     /* mov [ebp-0xe], dx */
    II(0x100c8109, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x100c810c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c810f, 0x5)   calld(0x10075e64, -0x522b0);          /* call 0x10075e64 */
    II(0x100c8114, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100c8116, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100c811a, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100c811f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c8122, 0x5)   calld(0x100c7f78, -0x1af);            /* call 0x100c7f78 */
    II(0x100c8127, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c8129, 0x2)   jzd(0x100c80bd, -0x6e);               /* jz 0x100c80bd */
    II(0x100c812b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100c812f, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100c8132, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c8135, 0x7)   mov(memw_a32(ds, edx + 0x101c35bc), ax); /* mov [edx+0x101c35bc], ax */
    II(0x100c813c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100c8140, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100c8143, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100c8146, 0x7)   mov(memw_a32(ds, edx + 0x101c35be), ax); /* mov [edx+0x101c35be], ax */
    II(0x100c814d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c814f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c8150, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c8151, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c8152, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c8153, 0x1)   retd();                               /* ret */
FUNC_END

