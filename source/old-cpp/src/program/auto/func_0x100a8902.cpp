FUNC_BEGIN(0x100a8902, 0x1269b23cdc5143e, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0x46, 0xd4, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0xf0, 0, 0, 0, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x83, 0xf8, 0x2, 0xf, 0x84, 0xe0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x13, 0x1, 0xf, 0x84, 0xd3, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x13, 0x3, 0xf, 0x84, 0xc6, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x13, 0x4, 0x75, 0x75, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x13, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4e, 0xe8, 0xe6, 0x23, 0x9, 0, 0x84, 0xc0, 0x74, 0x5d, 0xe8, 0xbc, 0x22, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4e, 0xe8, 0xce, 0xdb, 0xfc, 0xff, 0xe8, 0xb7, 0x9f, 0xa, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4e, 0xe8, 0xbe, 0xdb, 0xfc, 0xff, 0xe8, 0xf1, 0x9c, 0xa, 0, 0x85, 0xc0, 0x75, 0x20, 0xe8, 0xd8, 0x1d, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4e, 0xe8, 0xfd, 0xdb, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xcd, 0xc9, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4e, 0xe8, 0x44, 0xdc, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x13, 0, 0x75, 0x37, 0x8b, 0x45, 0xfc, 0xe8, 0x34, 0xf0, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2b, 0xe8, 0xee, 0xf8, 0x9, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x76, 0x16, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x13, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xd7, 0x9e, 0xff, 0xff, 0xeb, 0xa, 0xeb, 0xc9, 0x8b, 0x45, 0xfc, 0xe8, 0x9, 0xfd, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a8902, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100a8907, 0x5)   calld(sys_check_available_stack_size, 0xbd446); /* call 0x10165d52 */
    II(0x100a890c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a890d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a890e, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a890f, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a8910, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a8911, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a8912, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a8914, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x100a891a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a891d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a891f, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100a8924, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a8926, 0x2)   jnzd(0x100a893d, 0x15);               /* jnz 0x100a893d */
    II(0x100a8928, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a892b, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100a892e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a8931, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a8933, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100a8939, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a893b, 0x2)   jnzd(0x100a893f, 0x2);                /* jnz 0x100a893f */
l_0x100a893d:
    II(0x100a893d, 0x2)   jmpd(0x100a8944, 0x5);                /* jmp 0x100a8944 */
l_0x100a893f:
    II(0x100a893f, 0x5)   jmpd(0x100a8a34, 0xf0);               /* jmp 0x100a8a34 */
l_0x100a8944:
    II(0x100a8944, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a8946, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100a894b, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100a894e, 0x6)   jzd(0x100a8a34, 0xe0);                /* jz dword 0x100a8a34 */
    II(0x100a8954, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8957, 0x4)   cmp(memb_a32(ds, eax + 0x13), 0x1);   /* cmp byte [eax+0x13], 0x1 */
    II(0x100a895b, 0x6)   jzd(0x100a8a34, 0xd3);                /* jz dword 0x100a8a34 */
    II(0x100a8961, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8964, 0x4)   cmp(memb_a32(ds, eax + 0x13), 0x3);   /* cmp byte [eax+0x13], 0x3 */
    II(0x100a8968, 0x6)   jzd(0x100a8a34, 0xc6);                /* jz dword 0x100a8a34 */
    II(0x100a896e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8971, 0x4)   cmp(memb_a32(ds, eax + 0x13), 0x4);   /* cmp byte [eax+0x13], 0x4 */
    II(0x100a8975, 0x2)   jnzd(0x100a89ec, 0x75);               /* jnz 0x100a89ec */
    II(0x100a8977, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a897a, 0x4)   mov(memb_a32(ds, eax + 0x13), 0);     /* mov byte [eax+0x13], 0x0 */
    II(0x100a897e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a8980, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8983, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a8986, 0x5)   calld(0x1013ad71, 0x923e6);           /* call 0x1013ad71 */
    II(0x100a898b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a898d, 0x2)   jzd(0x100a89ec, 0x5d);                /* jz 0x100a89ec */
    II(0x100a898f, 0x5)   calld(0x1008ac50, -0x1dd44);          /* call 0x1008ac50 */
    II(0x100a8994, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a8996, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100a8998, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a899b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a899e, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a89a1, 0x5)   calld(0x10076574, -0x32432);          /* call 0x10076574 */
    II(0x100a89a6, 0x5)   calld(0x10152962, 0xa9fb7);           /* call 0x10152962 */
    II(0x100a89ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a89ae, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a89b1, 0x5)   calld(0x10076574, -0x32442);          /* call 0x10076574 */
    II(0x100a89b6, 0x5)   calld(0x101526ac, 0xa9cf1);           /* call 0x101526ac */
    II(0x100a89bb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a89bd, 0x2)   jnzd(0x100a89df, 0x20);               /* jnz 0x100a89df */
    II(0x100a89bf, 0x5)   calld(0x1008a79c, -0x1e228);          /* call 0x1008a79c */
    II(0x100a89c4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a89c6, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100a89c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a89cb, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a89ce, 0x5)   calld(0x100765d0, -0x32403);          /* call 0x100765d0 */
    II(0x100a89d3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a89d5, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a89da, 0x5)   calld(0x100a53ac, -0x3633);           /* call 0x100a53ac */
l_0x100a89df:
    II(0x100a89df, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a89e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a89e4, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a89e7, 0x5)   calld(0x10076630, -0x323bc);          /* call 0x10076630 */
l_0x100a89ec:
    II(0x100a89ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a89ef, 0x4)   cmp(memb_a32(ds, eax + 0x13), 0);     /* cmp byte [eax+0x13], 0x0 */
    II(0x100a89f3, 0x2)   jnzd(0x100a8a2c, 0x37);               /* jnz 0x100a8a2c */
l_0x100a89f5:
    II(0x100a89f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a89f8, 0x5)   calld(0x100a7a31, -0xfcc);            /* call 0x100a7a31 */
    II(0x100a89fd, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a89ff, 0x2)   jnzd(0x100a8a2c, 0x2b);               /* jnz 0x100a8a2c */
    II(0x100a8a01, 0x5)   calld(0x101482f4, 0x9f8ee);           /* call 0x101482f4 */
    II(0x100a8a06, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x100a8a0c, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x100a8a12, 0x2)   jbed(0x100a8a2a, 0x16);               /* jbe 0x100a8a2a */
    II(0x100a8a14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8a17, 0x4)   mov(memb_a32(ds, eax + 0x13), 0);     /* mov byte [eax+0x13], 0x0 */
    II(0x100a8a1b, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100a8a20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8a23, 0x5)   calld(0x100a28ff, -0x6129);           /* call 0x100a28ff */
    II(0x100a8a28, 0x2)   jmpd(0x100a8a34, 0xa);                /* jmp 0x100a8a34 */
l_0x100a8a2a:
    II(0x100a8a2a, 0x2)   jmpd(0x100a89f5, -0x37);              /* jmp 0x100a89f5 */
l_0x100a8a2c:
    II(0x100a8a2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8a2f, 0x5)   calld(0x100a873d, -0x2f7);            /* call 0x100a873d */
l_0x100a8a34:
    II(0x100a8a34, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a8a36, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a8a37, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a8a38, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a8a39, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a8a3a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a8a3b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a8a3c, 0x1)   retd();                               /* ret */
FUNC_END

