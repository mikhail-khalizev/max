FUNC_BEGIN(0x1010094d, 0xeac093c3251d0134, 0x20, ({0x68, 0x6c, 0, 0, 0, 0xe8, 0xfb, 0x53, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0xfa, 0x56, 0xf7, 0xff, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x9, 0x80, 0x3d, 0x80, 0x39, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0x8, 0x4, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa1, 0x58, 0xf7, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x59, 0x5e, 0xf7, 0xff, 0xb8, 0x6, 0, 0, 0, 0xe8, 0x8c, 0x7e, 0xfe, 0xff, 0x89, 0x45, 0xe8, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x8e, 0x98, 0x6, 0, 0x68, 0xa2, 0, 0, 0x5, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x8b, 0x55, 0xe8, 0x3, 0x42, 0x4, 0x50, 0x8b, 0x4d, 0xe8, 0x8b, 0x9, 0xbb, 0x80, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xe6, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xec, 0x8d, 0x45, 0xec, 0xe8, 0xdb, 0x8d, 0xf8, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe8, 0x8b, 0x40, 0x12, 0xe8, 0x7a, 0x63, 0x6, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x26, 0x11, 0x4, 0, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x9, 0, 0, 0, 0xe8, 0x91, 0xf2, 0xff, 0xff, 0xb8, 0x4, 0, 0, 0, 0x50, 0x8d, 0x45, 0xe4, 0xe8, 0x10, 0x5d, 0xf7, 0xff, 0x66, 0x8b, 0x40, 0xa, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x8b, 0x55, 0xfc, 0x30, 0xe4, 0x8a, 0x42, 0x4d, 0x31, 0xc9, 0x66, 0x89, 0xc1, 0xbb, 0x76, 0x2, 0, 0, 0xba, 0xa, 0, 0, 0, 0xb8, 0xd1, 0x2b, 0x1a, 0x10, 0xe8, 0x4a, 0xf5, 0xff, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0xdd, 0x5c, 0xf7, 0xff, 0x66, 0x83, 0x78, 0xe, 0, 0x74, 0x66, 0xc7, 0x45, 0xe0, 0x1, 0, 0, 0, 0xff, 0x75, 0xe0, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x13, 0x8d, 0x45, 0xe4, 0xe8, 0xb1, 0x5c, 0xf7, 0xff, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xdc, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x54, 0x30, 0xe4, 0x31, 0xc9, 0x66, 0x89, 0xc1, 0xbb, 0x7c, 0x2, 0, 0, 0xba, 0xb, 0, 0, 0, 0xb8, 0xd6, 0x2b, 0x1a, 0x10, 0xe8, 0xda, 0xf4, 0xff, 0xff, 0xe9, 0xc3, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd5, 0x81, 0x1c, 0x10, 0x88, 0x45, 0xd8, 0xc7, 0x45, 0xf8, 0x3, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x4c, 0x5c, 0xf7, 0xff, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x4, 0x7f, 0x9, 0xc7, 0x45, 0xf8, 0x1, 0, 0, 0, 0xeb, 0x1a, 0x8d, 0x45, 0xe4, 0xe8, 0x30, 0x5c, 0xf7, 0xff, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x8, 0x7f, 0x7, 0xc7, 0x45, 0xf8, 0x2, 0, 0, 0, 0x80, 0x7d, 0xd8, 0x4, 0x7d, 0x7, 0xc7, 0x45, 0xf8, 0xa, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x9, 0x80, 0x3d, 0x80, 0x39, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0x7, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0x8d, 0x45, 0xe4, 0xe8, 0xdf, 0x5b, 0xf7, 0xff, 0x66, 0x8b, 0x40, 0x19, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x8b, 0x45, 0xfc, 0x31, 0xc9, 0x66, 0x8b, 0x48, 0x52, 0xf, 0xbe, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x8b, 0x98, 0x3a, 0xd3, 0x1b, 0x10, 0xc1, 0xfb, 0x10, 0xba, 0xb, 0, 0, 0, 0xb8, 0xdb, 0x2b, 0x1a, 0x10, 0xe8, 0x12, 0xf4, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x45, 0xe4, 0xe8, 0x9f, 0x5b, 0xf7, 0xff, 0x66, 0x8b, 0x40, 0x10, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x30, 0xe4, 0x31, 0xc9, 0x66, 0x89, 0xc1, 0xbb, 0x8c, 0x2, 0, 0, 0xba, 0xc, 0, 0, 0, 0xb8, 0xe1, 0x2b, 0x1a, 0x10, 0xe8, 0xd9, 0xf3, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x45, 0xe4, 0xe8, 0x66, 0x5b, 0xf7, 0xff, 0x66, 0x8b, 0x40, 0x14, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x50, 0x30, 0xe4, 0x31, 0xc9, 0x66, 0x89, 0xc1, 0xbb, 0x8e, 0x2, 0, 0, 0xba, 0xd, 0, 0, 0, 0xb8, 0xe7, 0x2b, 0x1a, 0x10, 0xe8, 0xa0, 0xf3, 0xff, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x33, 0x5b, 0xf7, 0xff, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0xe9, 0xf5, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x75, 0x13, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0xe8, 0x4d, 0xfa, 0xff, 0xff, 0xeb, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x8, 0xf8, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x9, 0x80, 0x3d, 0x80, 0x39, 0x1c, 0x10, 0, 0x74, 0x12, 0x8d, 0x45, 0xe4, 0xe8, 0xcc, 0x5a, 0xf7, 0xff, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x13, 0x2, 0x75, 0x2, 0xeb, 0x15, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x80, 0xb8, 0xd5, 0x81, 0x1c, 0x10, 0x1, 0x7d, 0x2, 0xeb, 0x15, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x80, 0xb8, 0xd5, 0x81, 0x1c, 0x10, 0x3, 0x7e, 0x5, 0xe9, 0xca, 0, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0xfd, 0x13, 0xf7, 0xff, 0x8d, 0x45, 0xbc, 0xe8, 0xf5, 0x13, 0xf7, 0xff, 0x8d, 0x5d, 0xbc, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xfc, 0xe8, 0x3a, 0x55, 0xf7, 0xff, 0xe8, 0x47, 0x29, 0x4, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd5, 0x81, 0x1c, 0x10, 0x88, 0x45, 0xd4, 0xeb, 0x2c, 0x8b, 0x45, 0xca, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xbe, 0x89, 0x45, 0xf0, 0xeb, 0x40, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xf0, 0xeb, 0x32, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xf0, 0xeb, 0x24, 0xeb, 0x22, 0x8a, 0x45, 0xd4, 0x88, 0x45, 0xb8, 0x80, 0x7d, 0xb8, 0x2, 0x72, 0xe, 0x80, 0x7d, 0xb8, 0x2, 0x76, 0xd0, 0x80, 0x7d, 0xb8, 0x3, 0x74, 0xd8, 0xeb, 0xe4, 0x80, 0x7d, 0xb8, 0x1, 0x74, 0xb4, 0xeb, 0xdc, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf0, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8b, 0x98, 0xd2, 0x81, 0x1c, 0x10, 0xc1, 0xfb, 0x18, 0xc1, 0xe3, 0x2, 0x8b, 0x9b, 0x3a, 0xd3, 0x1b, 0x10, 0xc1, 0xfb, 0x10, 0xba, 0xc, 0, 0, 0, 0xb8, 0xed, 0x2b, 0x1a, 0x10, 0xe8, 0x1f, 0xf2, 0xff, 0xff, 0xb8, 0x9, 0, 0, 0, 0xe8, 0xbd, 0x7a, 0xfe, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x55, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x40, 0x12, 0xe8, 0x17, 0x67, 0x6, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x51, 0x51, 0xf7, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010094d, 0x5)   pushd(0x6c);                          /* push dword 0x6c */
    II(0x10100952, 0x5)   calld(sys_check_available_stack_size, 0x653fb); /* call 0x10165d52 */
    II(0x10100957, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10100958, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10100959, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010095a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010095b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010095c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010095d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010095f, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x10100965, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10100968, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010096a, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1010096f, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10100972, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100975, 0x5)   calld(0x10076074, -0x8a906);          /* call 0x10076074 */
    II(0x1010097a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010097f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10100981, 0x2)   jnzd(0x1010098c, 0x9);                /* jnz 0x1010098c */
    II(0x10100983, 0x7)   cmp(memb_a32(ds, 0x101c3980), 0);     /* cmp byte [0x101c3980], 0x0 */
    II(0x1010098a, 0x2)   jzd(0x1010098e, 0x2);                 /* jz 0x1010098e */
l_0x1010098c:
    II(0x1010098c, 0x2)   jmpd(0x10100993, 0x5);                /* jmp 0x10100993 */
l_0x1010098e:
    II(0x1010098e, 0x5)   jmpd(0x10100d9b, 0x408);              /* jmp 0x10100d9b */
l_0x10100993:
    II(0x10100993, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100996, 0x5)   calld(0x1007623c, -0x8a75f);          /* call 0x1007623c */
    II(0x1010099b, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x1010099e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101009a0, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x101009a2, 0x5)   calld(0x10076800, -0x8a1a7);          /* call 0x10076800 */
    II(0x101009a7, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x101009ac, 0x5)   calld(0x100e883d, -0x18174);          /* call 0x100e883d */
    II(0x101009b1, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x101009b4, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x101009b9, 0x5)   calld(/* sys */ 0x1016a24c, 0x6988e); /* call 0x1016a24c */
    II(0x101009be, 0x5)   pushd(0x50000a2);                     /* push dword 0x50000a2 */
    II(0x101009c3, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x101009c9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x101009cc, 0x3)   add(eax, memd_a32(ds, edx + 0x4));    /* add eax, [edx+0x4] */
    II(0x101009cf, 0x1)   pushd(eax);                           /* push eax */
    II(0x101009d0, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x18));   /* mov ecx, [ebp-0x18] */
    II(0x101009d3, 0x2)   mov(ecx, memd_a32(ds, ecx));          /* mov ecx, [ecx] */
    II(0x101009d5, 0x5)   mov(ebx, 0x80);                       /* mov ebx, 0x80 */
    II(0x101009da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101009dd, 0x5)   calld(0x101007c8, -0x21a);            /* call 0x101007c8 */
    II(0x101009e2, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101009e5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101009e8, 0x5)   calld(my_strobj_c_str_v2, -0x77225);  /* call 0x100897c8 */
    II(0x101009ed, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101009ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101009f2, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x101009f5, 0x5)   calld(/* sys */ 0x10166d74, 0x6637a); /* call 0x10166d74 */
    II(0x101009fa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101009fc, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101009ff, 0x5)   calld(my_string_dtor, 0x41126);       /* call 0x10141b2a */
    II(0x10100a04, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10100a06, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100a08, 0x5)   mov(eax, 0x9);                        /* mov eax, 0x9 */
    II(0x10100a0d, 0x5)   calld(0x100ffca3, -0xd6f);            /* call 0x100ffca3 */
    II(0x10100a12, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x10100a17, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100a18, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100a1b, 0x5)   calld(0x10076730, -0x8a2f0);          /* call 0x10076730 */
    II(0x10100a20, 0x4)   mov(ax, memw_a32(ds, eax + 0xa));     /* mov ax, [eax+0xa] */
    II(0x10100a24, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10100a29, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100a2a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10100a2d, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10100a2f, 0x3)   mov(al, memb_a32(ds, edx + 0x4d));    /* mov al, [edx+0x4d] */
    II(0x10100a32, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100a34, 0x3)   mov(cx, ax);                          /* mov cx, ax */
    II(0x10100a37, 0x5)   mov(ebx, 0x276);                      /* mov ebx, 0x276 */
    II(0x10100a3c, 0x5)   mov(edx, 0xa);                        /* mov edx, 0xa */
    II(0x10100a41, 0x5)   mov(eax, 0x101a2bd1);                 /* mov eax, 0x101a2bd1 */ /* "Hits" */
    II(0x10100a46, 0x5)   calld(0x100fff95, -0xab6);            /* call 0x100fff95 */
    II(0x10100a4b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100a4e, 0x5)   calld(0x10076730, -0x8a323);          /* call 0x10076730 */
    II(0x10100a53, 0x5)   cmp(memw_a32(ds, eax + 0xe), 0);      /* cmp word [eax+0xe], 0x0 */
    II(0x10100a58, 0x2)   jzd(0x10100ac0, 0x66);                /* jz 0x10100ac0 */
    II(0x10100a5a, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x1);   /* mov dword [ebp-0x20], 0x1 */
    II(0x10100a61, 0x3)   pushd(memd_a32(ss, ebp - 0x20));      /* push dword [ebp-0x20] */
    II(0x10100a64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100a67, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100a69, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10100a6c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100a6e, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10100a73, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10100a75, 0x2)   jnzd(0x10100a8a, 0x13);               /* jnz 0x10100a8a */
    II(0x10100a77, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100a7a, 0x5)   calld(0x10076730, -0x8a34f);          /* call 0x10076730 */
    II(0x10100a7f, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x10100a82, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100a85, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10100a88, 0x2)   jmpd(0x10100a91, 0x7);                /* jmp 0x10100a91 */
l_0x10100a8a:
    II(0x10100a8a, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
l_0x10100a91:
    II(0x10100a91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10100a94, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10100a99, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100a9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100a9d, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x10100aa0, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10100aa2, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100aa4, 0x3)   mov(cx, ax);                          /* mov cx, ax */
    II(0x10100aa7, 0x5)   mov(ebx, 0x27c);                      /* mov ebx, 0x27c */
    II(0x10100aac, 0x5)   mov(edx, 0xb);                        /* mov edx, 0xb */
    II(0x10100ab1, 0x5)   mov(eax, 0x101a2bd6);                 /* mov eax, 0x101a2bd6 */ /* "Ammo" */
    II(0x10100ab6, 0x5)   calld(0x100fff95, -0xb26);            /* call 0x100fff95 */
    II(0x10100abb, 0x5)   jmpd(0x10100b83, 0xc3);               /* jmp 0x10100b83 */
l_0x10100ac0:
    II(0x10100ac0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100ac3, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100ac6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100ac9, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10100acc, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d5)); /* mov al, [eax+0x101c81d5] */
    II(0x10100ad2, 0x3)   mov(memb_a32(ss, ebp - 0x28), al);    /* mov [ebp-0x28], al */
    II(0x10100ad5, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x3);    /* mov dword [ebp-0x8], 0x3 */
    II(0x10100adc, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100adf, 0x5)   calld(0x10076730, -0x8a3b4);          /* call 0x10076730 */
    II(0x10100ae4, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x10100ae7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100aea, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10100aed, 0x2)   jgd(0x10100af8, 0x9);                 /* jg 0x10100af8 */
    II(0x10100aef, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x1);    /* mov dword [ebp-0x8], 0x1 */
    II(0x10100af6, 0x2)   jmpd(0x10100b12, 0x1a);               /* jmp 0x10100b12 */
l_0x10100af8:
    II(0x10100af8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100afb, 0x5)   calld(0x10076730, -0x8a3d0);          /* call 0x10076730 */
    II(0x10100b00, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x10100b03, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100b06, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x10100b09, 0x2)   jgd(0x10100b12, 0x7);                 /* jg 0x10100b12 */
    II(0x10100b0b, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x2);    /* mov dword [ebp-0x8], 0x2 */
l_0x10100b12:
    II(0x10100b12, 0x4)   cmp(memb_a32(ss, ebp - 0x28), 0x4);   /* cmp byte [ebp-0x28], 0x4 */
    II(0x10100b16, 0x2)   jged(0x10100b1f, 0x7);                /* jge 0x10100b1f */
    II(0x10100b18, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0xa);    /* mov dword [ebp-0x8], 0xa */
l_0x10100b1f:
    II(0x10100b1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100b22, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100b24, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10100b27, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100b29, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10100b2e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10100b30, 0x2)   jzd(0x10100b3b, 0x9);                 /* jz 0x10100b3b */
    II(0x10100b32, 0x7)   cmp(memb_a32(ds, 0x101c3980), 0);     /* cmp byte [0x101c3980], 0x0 */
    II(0x10100b39, 0x2)   jzd(0x10100b3d, 0x2);                 /* jz 0x10100b3d */
l_0x10100b3b:
    II(0x10100b3b, 0x2)   jmpd(0x10100b44, 0x7);                /* jmp 0x10100b44 */
l_0x10100b3d:
    II(0x10100b3d, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
l_0x10100b44:
    II(0x10100b44, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10100b48, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100b49, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100b4c, 0x5)   calld(0x10076730, -0x8a421);          /* call 0x10076730 */
    II(0x10100b51, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x10100b55, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10100b5a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100b5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100b5e, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100b60, 0x4)   mov(cx, memw_a32(ds, eax + 0x52));    /* mov cx, [eax+0x52] */
    II(0x10100b64, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x28)); /* movsx eax, byte [ebp-0x28] */
    II(0x10100b68, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10100b6b, 0x6)   mov(ebx, memd_a32(ds, eax + 0x101bd33a)); /* mov ebx, [eax+0x101bd33a] */
    II(0x10100b71, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10100b74, 0x5)   mov(edx, 0xb);                        /* mov edx, 0xb */
    II(0x10100b79, 0x5)   mov(eax, 0x101a2bdb);                 /* mov eax, 0x101a2bdb */ /* "Cargo" */
    II(0x10100b7e, 0x5)   calld(0x100fff95, -0xbee);            /* call 0x100fff95 */
l_0x10100b83:
    II(0x10100b83, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10100b88, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100b89, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100b8c, 0x5)   calld(0x10076730, -0x8a461);          /* call 0x10076730 */
    II(0x10100b91, 0x4)   mov(ax, memw_a32(ds, eax + 0x10));    /* mov ax, [eax+0x10] */
    II(0x10100b95, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10100b9a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100b9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100b9e, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x10100ba1, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10100ba3, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100ba5, 0x3)   mov(cx, ax);                          /* mov cx, ax */
    II(0x10100ba8, 0x5)   mov(ebx, 0x28c);                      /* mov ebx, 0x28c */
    II(0x10100bad, 0x5)   mov(edx, 0xc);                        /* mov edx, 0xc */
    II(0x10100bb2, 0x5)   mov(eax, 0x101a2be1);                 /* mov eax, 0x101a2be1 */ /* "Speed" */
    II(0x10100bb7, 0x5)   calld(0x100fff95, -0xc27);            /* call 0x100fff95 */
    II(0x10100bbc, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10100bc1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100bc2, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100bc5, 0x5)   calld(0x10076730, -0x8a49a);          /* call 0x10076730 */
    II(0x10100bca, 0x4)   mov(ax, memw_a32(ds, eax + 0x14));    /* mov ax, [eax+0x14] */
    II(0x10100bce, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10100bd3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100bd4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100bd7, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x10100bda, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10100bdc, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100bde, 0x3)   mov(cx, ax);                          /* mov cx, ax */
    II(0x10100be1, 0x5)   mov(ebx, 0x28e);                      /* mov ebx, 0x28e */
    II(0x10100be6, 0x5)   mov(edx, 0xd);                        /* mov edx, 0xd */
    II(0x10100beb, 0x5)   mov(eax, 0x101a2be7);                 /* mov eax, 0x101a2be7 */ /* "Shots" */
    II(0x10100bf0, 0x5)   calld(0x100fff95, -0xc60);            /* call 0x100fff95 */
    II(0x10100bf5, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100bf8, 0x5)   calld(0x10076730, -0x8a4cd);          /* call 0x10076730 */
    II(0x10100bfd, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x10100c00, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100c03, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10100c05, 0x2)   jnzd(0x10100c0f, 0x8);                /* jnz 0x10100c0f */
    II(0x10100c07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100c0a, 0x5)   calld(0x101001f8, -0xa17);            /* call 0x101001f8 */
l_0x10100c0f:
    II(0x10100c0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100c12, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x10100c17, 0x2)   jnzd(0x10100c2c, 0x13);               /* jnz 0x10100c2c */
    II(0x10100c19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100c1c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100c1e, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10100c21, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100c23, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10100c28, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10100c2a, 0x2)   jzd(0x10100c2e, 0x2);                 /* jz 0x10100c2e */
l_0x10100c2c:
    II(0x10100c2c, 0x2)   jmpd(0x10100c38, 0xa);                /* jmp 0x10100c38 */
l_0x10100c2e:
    II(0x10100c2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100c31, 0x5)   calld(0x10100683, -0x5b3);            /* call 0x10100683 */
    II(0x10100c36, 0x2)   jmpd(0x10100c40, 0x8);                /* jmp 0x10100c40 */
l_0x10100c38:
    II(0x10100c38, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100c3b, 0x5)   calld(0x10100448, -0x7f8);            /* call 0x10100448 */
l_0x10100c40:
    II(0x10100c40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100c43, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100c45, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10100c48, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100c4a, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10100c4f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10100c51, 0x2)   jzd(0x10100c5c, 0x9);                 /* jz 0x10100c5c */
    II(0x10100c53, 0x7)   cmp(memb_a32(ds, 0x101c3980), 0);     /* cmp byte [0x101c3980], 0x0 */
    II(0x10100c5a, 0x2)   jzd(0x10100c6e, 0x12);                /* jz 0x10100c6e */
l_0x10100c5c:
    II(0x10100c5c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100c5f, 0x5)   calld(0x10076730, -0x8a534);          /* call 0x10076730 */
    II(0x10100c64, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x10100c67, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100c6a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10100c6c, 0x2)   jgd(0x10100c70, 0x2);                 /* jg 0x10100c70 */
l_0x10100c6e:
    II(0x10100c6e, 0x2)   jmpd(0x10100c79, 0x9);                /* jmp 0x10100c79 */
l_0x10100c70:
    II(0x10100c70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100c73, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x10100c77, 0x2)   jnzd(0x10100c7b, 0x2);                /* jnz 0x10100c7b */
l_0x10100c79:
    II(0x10100c79, 0x2)   jmpd(0x10100c90, 0x15);               /* jmp 0x10100c90 */
l_0x10100c7b:
    II(0x10100c7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100c7e, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100c81, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100c84, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10100c87, 0x7)   cmp(memb_a32(ds, eax + 0x101c81d5), 0x1); /* cmp byte [eax+0x101c81d5], 0x1 */
    II(0x10100c8e, 0x2)   jged(0x10100c92, 0x2);                /* jge 0x10100c92 */
l_0x10100c90:
    II(0x10100c90, 0x2)   jmpd(0x10100ca7, 0x15);               /* jmp 0x10100ca7 */
l_0x10100c92:
    II(0x10100c92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100c95, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100c98, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100c9b, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10100c9e, 0x7)   cmp(memb_a32(ds, eax + 0x101c81d5), 0x3); /* cmp byte [eax+0x101c81d5], 0x3 */
    II(0x10100ca5, 0x2)   jled(0x10100cac, 0x5);                /* jle 0x10100cac */
l_0x10100ca7:
    II(0x10100ca7, 0x5)   jmpd(0x10100d76, 0xca);               /* jmp 0x10100d76 */
l_0x10100cac:
    II(0x10100cac, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10100caf, 0x5)   calld(0x100720b1, -0x8ec03);          /* call 0x100720b1 */
    II(0x10100cb4, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x10100cb7, 0x5)   calld(0x100720b1, -0x8ec0b);          /* call 0x100720b1 */
    II(0x10100cbc, 0x3)   lea(ebx, ebp - 0x44);                 /* lea ebx, [ebp-0x44] */
    II(0x10100cbf, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x10100cc2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100cc5, 0x5)   calld(0x10076204, -0x8aac6);          /* call 0x10076204 */
    II(0x10100cca, 0x5)   calld(0x10143616, 0x42947);           /* call 0x10143616 */
    II(0x10100ccf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100cd2, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100cd5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100cd8, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10100cdb, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d5)); /* mov al, [eax+0x101c81d5] */
    II(0x10100ce1, 0x3)   mov(memb_a32(ss, ebp - 0x2c), al);    /* mov [ebp-0x2c], al */
    II(0x10100ce4, 0x2)   jmpd(0x10100d12, 0x2c);               /* jmp 0x10100d12 */
l_0x10100ce6:
    II(0x10100ce6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x36));   /* mov eax, [ebp-0x36] */
    II(0x10100ce9, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10100cec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x42));   /* mov eax, [ebp-0x42] */
    II(0x10100cef, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10100cf2, 0x2)   jmpd(0x10100d34, 0x40);               /* jmp 0x10100d34 */
l_0x10100cf4:
    II(0x10100cf4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10100cf7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10100cfa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10100cfd, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10100d00, 0x2)   jmpd(0x10100d34, 0x32);               /* jmp 0x10100d34 */
l_0x10100d02:
    II(0x10100d02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10100d05, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10100d08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10100d0b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10100d0e, 0x2)   jmpd(0x10100d34, 0x24);               /* jmp 0x10100d34 */
l_0x10100d10:
    II(0x10100d10, 0x2)   jmpd(0x10100d34, 0x22);               /* jmp 0x10100d34 */
l_0x10100d12:
    II(0x10100d12, 0x3)   mov(al, memb_a32(ss, ebp - 0x2c));    /* mov al, [ebp-0x2c] */
    II(0x10100d15, 0x3)   mov(memb_a32(ss, ebp - 0x48), al);    /* mov [ebp-0x48], al */
    II(0x10100d18, 0x4)   cmp(memb_a32(ss, ebp - 0x48), 0x2);   /* cmp byte [ebp-0x48], 0x2 */
    II(0x10100d1c, 0x2)   jbd(0x10100d2c, 0xe);                 /* jb 0x10100d2c */
    II(0x10100d1e, 0x4)   cmp(memb_a32(ss, ebp - 0x48), 0x2);   /* cmp byte [ebp-0x48], 0x2 */
    II(0x10100d22, 0x2)   jbed(0x10100cf4, -0x30);              /* jbe 0x10100cf4 */
    II(0x10100d24, 0x4)   cmp(memb_a32(ss, ebp - 0x48), 0x3);   /* cmp byte [ebp-0x48], 0x3 */
    II(0x10100d28, 0x2)   jzd(0x10100d02, -0x28);               /* jz 0x10100d02 */
    II(0x10100d2a, 0x2)   jmpd(0x10100d10, -0x1c);              /* jmp 0x10100d10 */
l_0x10100d2c:
    II(0x10100d2c, 0x4)   cmp(memb_a32(ss, ebp - 0x48), 0x1);   /* cmp byte [ebp-0x48], 0x1 */
    II(0x10100d30, 0x2)   jzd(0x10100ce6, -0x4c);               /* jz 0x10100ce6 */
    II(0x10100d32, 0x2)   jmpd(0x10100d10, -0x24);              /* jmp 0x10100d10 */
l_0x10100d34:
    II(0x10100d34, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10100d38, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100d39, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100d3b, 0x4)   mov(ax, memw_a32(ss, ebp - 0x10));    /* mov ax, [ebp-0x10] */
    II(0x10100d3f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100d40, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100d42, 0x4)   mov(cx, memw_a32(ss, ebp - 0xc));     /* mov cx, [ebp-0xc] */
    II(0x10100d46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100d49, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100d4c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100d4f, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10100d52, 0x6)   mov(ebx, memd_a32(ds, eax + 0x101c81d2)); /* mov ebx, [eax+0x101c81d2] */
    II(0x10100d58, 0x3)   sar(ebx, 0x18);                       /* sar ebx, 0x18 */
    II(0x10100d5b, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x10100d5e, 0x6)   mov(ebx, memd_a32(ds, ebx + 0x101bd33a)); /* mov ebx, [ebx+0x101bd33a] */
    II(0x10100d64, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10100d67, 0x5)   mov(edx, 0xc);                        /* mov edx, 0xc */
    II(0x10100d6c, 0x5)   mov(eax, 0x101a2bed);                 /* mov eax, 0x101a2bed */ /* "Total" */
    II(0x10100d71, 0x5)   calld(0x100fff95, -0xde1);            /* call 0x100fff95 */
l_0x10100d76:
    II(0x10100d76, 0x5)   mov(eax, 0x9);                        /* mov eax, 0x9 */
    II(0x10100d7b, 0x5)   calld(0x100e883d, -0x18543);          /* call 0x100e883d */
    II(0x10100d80, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10100d83, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
//    II(0x10100d86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10100d89, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10100d8c, 0x5)   calld(sys_display_draw_1, 0x66717);   /* call 0x101674a8 */
    II(0x10100d91, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100d93, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10100d96, 0x5)   calld(0x10075eec, -0x8aeaf);          /* call 0x10075eec */
l_0x10100d9b:
    II(0x10100d9b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10100d9d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10100d9e, 0x1)   popd(edi);                            /* pop edi */
    II(0x10100d9f, 0x1)   popd(esi);                            /* pop esi */
    II(0x10100da0, 0x1)   popd(edx);                            /* pop edx */
    II(0x10100da1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10100da2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10100da3, 0x1)   retd();                               /* ret */
FUNC_END

