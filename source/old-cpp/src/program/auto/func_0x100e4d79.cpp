FUNC_BEGIN(0x100e4d79, 0x57a49eda95944f87, 0x20, ({0x68, 0x68, 0, 0, 0, 0xe8, 0xcf, 0xf, 0x8, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0xf, 0x85, 0x9b, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xec, 0xeb, 0x64, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0xc, 0xe9, 0x7d, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xc, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x4, 0xe9, 0x6c, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf0, 0x8b, 0x48, 0x6, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x2, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x10, 0x8d, 0x45, 0xdc, 0xe8, 0x4e, 0x63, 0xfa, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xc, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x4, 0x8d, 0x45, 0xdc, 0xe8, 0x88, 0x1, 0, 0, 0xeb, 0x2c, 0xeb, 0x2a, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xd8, 0x66, 0x83, 0x7d, 0xd8, 0x2, 0x72, 0x10, 0x66, 0x83, 0x7d, 0xd8, 0x2, 0x76, 0x99, 0x66, 0x83, 0x7d, 0xd8, 0x3, 0x74, 0xa3, 0xeb, 0xe1, 0x66, 0x83, 0x7d, 0xd8, 0x1, 0xf, 0x84, 0x74, 0xff, 0xff, 0xff, 0xeb, 0xd4, 0xe9, 0x4f, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x1, 0xf, 0x85, 0x8e, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x75, 0xd, 0x8b, 0x45, 0xf4, 0x8b, 0x10, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x8, 0xeb, 0x74, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x1, 0x75, 0x9, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x57, 0, 0, 0, 0xbb, 0x34, 0x1d, 0x1a, 0x10, 0xba, 0x40, 0x1d, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x7, 0xf, 0x8, 0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf0, 0x8b, 0x48, 0x6, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x2, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0x90, 0x62, 0xfa, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x4, 0x8b, 0x45, 0xf4, 0x8b, 0x10, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0xbf, 0, 0, 0, 0xe9, 0xb4, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x2, 0x75, 0x9, 0xc7, 0x45, 0xc0, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x5f, 0, 0, 0, 0xbb, 0x5f, 0x1d, 0x1a, 0x10, 0xba, 0x6b, 0x1d, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x8e, 0xe, 0x8, 0, 0x89, 0x45, 0xc0, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x75, 0xd, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xf0, 0x89, 0x10, 0xeb, 0x74, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x1, 0x75, 0x9, 0xc7, 0x45, 0xbc, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x64, 0, 0, 0, 0xbb, 0x8d, 0x1d, 0x1a, 0x10, 0xba, 0x99, 0x1d, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x4e, 0xe, 0x8, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf0, 0x8b, 0x48, 0x6, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x2, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x10, 0x8d, 0x45, 0xac, 0xe8, 0xd7, 0x61, 0xfa, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xf0, 0x89, 0x10, 0x8d, 0x45, 0xac, 0xe8, 0x6, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100e4d79, 0x5)   pushd(0x68);                          /* push dword 0x68 */
    II(0x100e4d7e, 0x5)   calld(sys_check_available_stack_size, 0x80fcf); /* call 0x10165d52 */
    II(0x100e4d83, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e4d84, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e4d85, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e4d86, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e4d88, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x100e4d8e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e4d91, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100e4d94, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100e4d97, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100e4d9a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e4d9e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e4da0, 0x6)   jnzd(0x100e4e41, 0x9b);               /* jnz dword 0x100e4e41 */
    II(0x100e4da6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e4da9, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100e4dac, 0x2)   jmpd(0x100e4e12, 0x64);               /* jmp 0x100e4e12 */
l_0x100e4dae:
    II(0x100e4dae, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4db1, 0x3)   mov(edx, memd_a32(ds, eax + 0x4));    /* mov edx, [eax+0x4] */
    II(0x100e4db4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4db7, 0x3)   mov(memd_a32(ds, eax + 0xc), edx);    /* mov [eax+0xc], edx */
    II(0x100e4dba, 0x5)   jmpd(0x100e4e3c, 0x7d);               /* jmp 0x100e4e3c */
l_0x100e4dbf:
    II(0x100e4dbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4dc2, 0x3)   mov(edx, memd_a32(ds, eax + 0xc));    /* mov edx, [eax+0xc] */
    II(0x100e4dc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4dc8, 0x3)   mov(memd_a32(ds, eax + 0x4), edx);    /* mov [eax+0x4], edx */
    II(0x100e4dcb, 0x5)   jmpd(0x100e4e3c, 0x6c);               /* jmp 0x100e4e3c */
l_0x100e4dd0:
    II(0x100e4dd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4dd3, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100e4dd6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e4dd9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e4dda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4ddd, 0x3)   mov(ecx, memd_a32(ds, eax + 0x6));    /* mov ecx, [eax+0x6] */
    II(0x100e4de0, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100e4de3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4de6, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100e4de9, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100e4dec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4def, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100e4df2, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e4df5, 0x5)   calld(0x1008b148, -0x59cb2);          /* call 0x1008b148 */
    II(0x100e4dfa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4dfd, 0x3)   mov(edx, memd_a32(ds, eax + 0xc));    /* mov edx, [eax+0xc] */
    II(0x100e4e00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4e03, 0x3)   mov(memd_a32(ds, eax + 0x4), edx);    /* mov [eax+0x4], edx */
    II(0x100e4e06, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100e4e09, 0x5)   calld(0x100e4f96, 0x188);             /* call 0x100e4f96 */
    II(0x100e4e0e, 0x2)   jmpd(0x100e4e3c, 0x2c);               /* jmp 0x100e4e3c */
l_0x100e4e10:
    II(0x100e4e10, 0x2)   jmpd(0x100e4e3c, 0x2a);               /* jmp 0x100e4e3c */
l_0x100e4e12:
    II(0x100e4e12, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100e4e15, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100e4e18, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x2);   /* cmp word [ebp-0x28], 0x2 */
    II(0x100e4e1d, 0x2)   jbd(0x100e4e2f, 0x10);                /* jb 0x100e4e2f */
    II(0x100e4e1f, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x2);   /* cmp word [ebp-0x28], 0x2 */
    II(0x100e4e24, 0x2)   jbed(0x100e4dbf, -0x67);              /* jbe 0x100e4dbf */
    II(0x100e4e26, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x3);   /* cmp word [ebp-0x28], 0x3 */
    II(0x100e4e2b, 0x2)   jzd(0x100e4dd0, -0x5d);               /* jz 0x100e4dd0 */
    II(0x100e4e2d, 0x2)   jmpd(0x100e4e10, -0x1f);              /* jmp 0x100e4e10 */
l_0x100e4e2f:
    II(0x100e4e2f, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x1);   /* cmp word [ebp-0x28], 0x1 */
    II(0x100e4e34, 0x6)   jzd(0x100e4dae, -0x8c);               /* jz dword 0x100e4dae */
    II(0x100e4e3a, 0x2)   jmpd(0x100e4e10, -0x2c);              /* jmp 0x100e4e10 */
l_0x100e4e3c:
    II(0x100e4e3c, 0x5)   jmpd(0x100e4f90, 0x14f);              /* jmp 0x100e4f90 */
l_0x100e4e41:
    II(0x100e4e41, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e4e45, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100e4e48, 0x6)   jnzd(0x100e4edc, 0x8e);               /* jnz dword 0x100e4edc */
    II(0x100e4e4e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e4e52, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e4e54, 0x2)   jnzd(0x100e4e63, 0xd);                /* jnz 0x100e4e63 */
    II(0x100e4e56, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4e59, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100e4e5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4e5e, 0x3)   mov(memd_a32(ds, eax + 0x8), edx);    /* mov [eax+0x8], edx */
    II(0x100e4e61, 0x2)   jmpd(0x100e4ed7, 0x74);               /* jmp 0x100e4ed7 */
l_0x100e4e63:
    II(0x100e4e63, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e4e67, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100e4e6a, 0x2)   jnzd(0x100e4e75, 0x9);                /* jnz 0x100e4e75 */
    II(0x100e4e6c, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x100e4e73, 0x2)   jmpd(0x100e4e8e, 0x19);               /* jmp 0x100e4e8e */
l_0x100e4e75:
    II(0x100e4e75, 0x5)   mov(ecx, 0x57);                       /* mov ecx, 0x57 */
    II(0x100e4e7a, 0x5)   mov(ebx, 0x101a1d34);                 /* mov ebx, 0x101a1d34 */ /* "drawmap.cpp" */
    II(0x100e4e7f, 0x5)   mov(edx, 0x101a1d40);                 /* mov edx, 0x101a1d40 */ /* "vertical_side == SIDE_IS_LOWER" */
    II(0x100e4e84, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e4e86, 0x5)   calld(sys_assert, 0x80f07);           /* call 0x10165d92 */
    II(0x100e4e8b, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100e4e8e:
    II(0x100e4e8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4e91, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100e4e94, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e4e97, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e4e98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4e9b, 0x3)   mov(ecx, memd_a32(ds, eax + 0x6));    /* mov ecx, [eax+0x6] */
    II(0x100e4e9e, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100e4ea1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4ea4, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100e4ea7, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100e4eaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4ead, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100e4eb0, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100e4eb3, 0x5)   calld(0x1008b148, -0x59d70);          /* call 0x1008b148 */
    II(0x100e4eb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4ebb, 0x3)   mov(edx, memd_a32(ds, eax + 0x4));    /* mov edx, [eax+0x4] */
    II(0x100e4ebe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4ec1, 0x3)   mov(memd_a32(ds, eax + 0x4), edx);    /* mov [eax+0x4], edx */
    II(0x100e4ec4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4ec7, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100e4ec9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4ecc, 0x3)   mov(memd_a32(ds, eax + 0x8), edx);    /* mov [eax+0x8], edx */
    II(0x100e4ecf, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100e4ed2, 0x5)   calld(0x100e4f96, 0xbf);              /* call 0x100e4f96 */
l_0x100e4ed7:
    II(0x100e4ed7, 0x5)   jmpd(0x100e4f90, 0xb4);               /* jmp 0x100e4f90 */
l_0x100e4edc:
    II(0x100e4edc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e4ee0, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100e4ee3, 0x2)   jnzd(0x100e4eee, 0x9);                /* jnz 0x100e4eee */
    II(0x100e4ee5, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0);     /* mov dword [ebp-0x40], 0x0 */
    II(0x100e4eec, 0x2)   jmpd(0x100e4f07, 0x19);               /* jmp 0x100e4f07 */
l_0x100e4eee:
    II(0x100e4eee, 0x5)   mov(ecx, 0x5f);                       /* mov ecx, 0x5f */
    II(0x100e4ef3, 0x5)   mov(ebx, 0x101a1d5f);                 /* mov ebx, 0x101a1d5f */ /* "drawmap.cpp" */
    II(0x100e4ef8, 0x5)   mov(edx, 0x101a1d6b);                 /* mov edx, 0x101a1d6b */ /* "horizontal_side == SIDE_IS_HIGHER" */
    II(0x100e4efd, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e4eff, 0x5)   calld(sys_assert, 0x80e8e);           /* call 0x10165d92 */
    II(0x100e4f04, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x100e4f07:
    II(0x100e4f07, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e4f0b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e4f0d, 0x2)   jnzd(0x100e4f1c, 0xd);                /* jnz 0x100e4f1c */
    II(0x100e4f0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4f12, 0x3)   mov(edx, memd_a32(ds, eax + 0x8));    /* mov edx, [eax+0x8] */
    II(0x100e4f15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4f18, 0x2)   mov(memd_a32(ds, eax), edx);          /* mov [eax], edx */
    II(0x100e4f1a, 0x2)   jmpd(0x100e4f90, 0x74);               /* jmp 0x100e4f90 */
l_0x100e4f1c:
    II(0x100e4f1c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e4f20, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100e4f23, 0x2)   jnzd(0x100e4f2e, 0x9);                /* jnz 0x100e4f2e */
    II(0x100e4f25, 0x7)   mov(memd_a32(ss, ebp - 0x44), 0);     /* mov dword [ebp-0x44], 0x0 */
    II(0x100e4f2c, 0x2)   jmpd(0x100e4f47, 0x19);               /* jmp 0x100e4f47 */
l_0x100e4f2e:
    II(0x100e4f2e, 0x5)   mov(ecx, 0x64);                       /* mov ecx, 0x64 */
    II(0x100e4f33, 0x5)   mov(ebx, 0x101a1d8d);                 /* mov ebx, 0x101a1d8d */ /* "drawmap.cpp" */
    II(0x100e4f38, 0x5)   mov(edx, 0x101a1d99);                 /* mov edx, 0x101a1d99 */ /* "vertical_side == SIDE_IS_LOWER" */
    II(0x100e4f3d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e4f3f, 0x5)   calld(sys_assert, 0x80e4e);           /* call 0x10165d92 */
    II(0x100e4f44, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x100e4f47:
    II(0x100e4f47, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4f4a, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100e4f4d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e4f50, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e4f51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4f54, 0x3)   mov(ecx, memd_a32(ds, eax + 0x6));    /* mov ecx, [eax+0x6] */
    II(0x100e4f57, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100e4f5a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4f5d, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100e4f60, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100e4f63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4f66, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100e4f69, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100e4f6c, 0x5)   calld(0x1008b148, -0x59e29);          /* call 0x1008b148 */
    II(0x100e4f71, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4f74, 0x3)   mov(edx, memd_a32(ds, eax + 0x4));    /* mov edx, [eax+0x4] */
    II(0x100e4f77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4f7a, 0x3)   mov(memd_a32(ds, eax + 0x4), edx);    /* mov [eax+0x4], edx */
    II(0x100e4f7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e4f80, 0x3)   mov(edx, memd_a32(ds, eax + 0x8));    /* mov edx, [eax+0x8] */
    II(0x100e4f83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e4f86, 0x2)   mov(memd_a32(ds, eax), edx);          /* mov [eax], edx */
    II(0x100e4f88, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100e4f8b, 0x5)   calld(0x100e4f96, 0x6);               /* call 0x100e4f96 */
l_0x100e4f90:
    II(0x100e4f90, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e4f92, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e4f93, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e4f94, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e4f95, 0x1)   retd();                               /* ret */
FUNC_END

