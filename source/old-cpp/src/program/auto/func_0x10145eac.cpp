FUNC_BEGIN(0x10145eac, 0x9ba35a1a600d9a72, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x9c, 0xfe, 0x1, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x5d, 0xf4, 0x8d, 0x55, 0xe0, 0x8b, 0x45, 0xf0, 0xe8, 0x2f, 0x4, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x2c, 0x4e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x10, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xc5, 0xa4, 0xf9, 0xff, 0xeb, 0x51, 0x8b, 0x4d, 0xfc, 0x8d, 0x45, 0xe0, 0xe8, 0x5c, 0xa8, 0xf9, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x58, 0x2, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xe8, 0xff, 0x53, 0xc, 0xe8, 0xad, 0x38, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0xcb, 0xe8, 0x6f, 0xfa, 0xff, 0xff, 0x88, 0x45, 0xec, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xf6, 0xbb, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x7e, 0xa4, 0xf9, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x72, 0xa4, 0xf9, 0xff, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10145eac, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10145eb1, 0x5)   calld(sys_check_available_stack_size, 0x1fe9c); /* call 0x10165d52 */
    II(0x10145eb6, 0x1)   pushd(esi);                           /* push esi */
    II(0x10145eb7, 0x1)   pushd(edi);                           /* push edi */
    II(0x10145eb8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10145eb9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10145ebb, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10145ec1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10145ec4, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10145ec7, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10145eca, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x10145ecd, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x10145ed0, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x10145ed3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10145ed6, 0x5)   calld(0x1014630a, 0x42f);             /* call 0x1014630a */
    II(0x10145edb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10145edd, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10145ee0, 0x5)   calld(0x1013ad11, -0xb1d4);           /* call 0x1013ad11 */
    II(0x10145ee5, 0x2)   test(al, al);                         /* test al, al */
    II(0x10145ee7, 0x2)   jzd(0x10145ef9, 0x10);                /* jz 0x10145ef9 */
    II(0x10145ee9, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x10145eed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10145eef, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10145ef2, 0x5)   calld(0x100e03bc, -0x65b3b);          /* call 0x100e03bc */
    II(0x10145ef7, 0x2)   jmpd(0x10145f4a, 0x51);               /* jmp 0x10145f4a */
l_0x10145ef9:
    II(0x10145ef9, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x10145efc, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10145eff, 0x5)   calld(0x100e0760, -0x657a4);          /* call 0x100e0760 */
    II(0x10145f04, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x10145f07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10145f0a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10145f0d, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x10145f10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10145f13, 0x3)   calld_abs(memd_a32(ds, ebx + 0xc));   /* call dword near [ebx+0xc] */
    II(0x10145f16, 0x5)   calld(my_strobj_c_str_v2, -0xbc753);  /* call 0x100897c8 */
    II(0x10145f1b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10145f1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10145f20, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x10145f22, 0x5)   calld(0x10145996, -0x591);            /* call 0x10145996 */
    II(0x10145f27, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10145f2a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10145f2c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10145f2f, 0x5)   calld(my_string_dtor, -0x440a);       /* call 0x10141b2a */
    II(0x10145f34, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10145f36, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10145f39, 0x5)   calld(0x100e03bc, -0x65b82);          /* call 0x100e03bc */
    II(0x10145f3e, 0x2)   jmpd(0x10145f4a, 0xa);                /* jmp 0x10145f4a */
//  II(0x10145f40, 0xa)   /* Недостижимый код. */
l_0x10145f4a:
    II(0x10145f4a, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10145f4d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10145f4f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10145f50, 0x1)   popd(edi);                            /* pop edi */
    II(0x10145f51, 0x1)   popd(esi);                            /* pop esi */
    II(0x10145f52, 0x1)   retd();                               /* ret */
FUNC_END

