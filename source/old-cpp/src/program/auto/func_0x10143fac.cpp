FUNC_BEGIN(0x10143fac, 0x1e5b8609278847a7, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0x9c, 0x1d, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xd0, 0x18, 0xb8, 0xc, 0xd7, 0x1b, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xf4, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x68, 0x62, 0x2, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0xff, 0xf, 0x85, 0x77, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x4, 0x1e, 0x2, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x41, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x6, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x42, 0x2, 0x98, 0x50, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x4, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x2, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf4, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0x5c, 0xa3, 0xf8, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xe4, 0x89, 0x42, 0x22, 0xe9, 0xba, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x8d, 0x1d, 0x2, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x36, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe0, 0xe8, 0x62, 0xa3, 0xf8, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd4, 0xf, 0xbe, 0x55, 0xfc, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf8, 0x8b, 0x45, 0xd4, 0x89, 0x42, 0x22, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0xa, 0, 0x74, 0x4c, 0x8d, 0x45, 0xd0, 0xe8, 0x45, 0x11, 0xf9, 0xff, 0x50, 0x8d, 0x45, 0xcc, 0xe8, 0x68, 0x11, 0xf9, 0xff, 0x50, 0x8d, 0x45, 0xc8, 0xe8, 0x8b, 0x11, 0xf9, 0xff, 0x50, 0x8d, 0x45, 0xc4, 0xe8, 0xae, 0x11, 0xf9, 0xff, 0x50, 0xe8, 0xd4, 0x11, 0xf9, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0xf0, 0x11, 0xf9, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xa, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x22, 0xe8, 0x41, 0xae, 0xf8, 0xff, 0x80, 0x7d, 0xfc, 0x8, 0x7f, 0x1a, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xe, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x22, 0xe8, 0x23, 0x10, 0xf9, 0xff, 0xeb, 0x34, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xe, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x22, 0xe8, 0xd9, 0xf, 0xf9, 0xff, 0xf, 0xbe, 0x55, 0xfc, 0x81, 0xc2, 0, 0x70, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x22, 0xe8, 0xed, 0xf, 0xf9, 0xff, 0x31, 0xd2, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x22, 0xe8, 0x9, 0x10, 0xf9, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x22, 0xe8, 0x2e, 0xf, 0xf9, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x12, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x22, 0xe8, 0x9e, 0xb6, 0xf8, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10143fac, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x10143fb1, 0x5)   calld(sys_check_available_stack_size, 0x21d9c); /* call 0x10165d52 */
    II(0x10143fb6, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10143fb7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10143fb8, 0x1)   pushd(esi);                           /* push esi */
    II(0x10143fb9, 0x1)   pushd(edi);                           /* push edi */
    II(0x10143fba, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10143fbb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10143fbd, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x10143fc3, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10143fc6, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10143fc9, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10143fcd, 0x3)   imul(edx, eax, 0x18);                 /* imul edx, eax, 0x18 */
    II(0x10143fd0, 0x5)   mov(eax, 0x101bd70c);                 /* mov eax, 0x101bd70c */
    II(0x10143fd5, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10143fd7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10143fda, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10143fdf, 0x5)   calld(/* sys */ 0x1016a24c, 0x26268); /* call 0x1016a24c */
    II(0x10143fe4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10143fe7, 0x5)   cmp(memw_a32(ds, eax + 0x8), -0x1 /* 0xff */); /* cmp word [eax+0x8], 0xff */
    II(0x10143fec, 0x6)   jnzd(0x10144069, 0x77);               /* jnz dword 0x10144069 */
    II(0x10143ff2, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10143ff7, 0x5)   calld(sys_new, 0x21e04);              /* call 0x10165e00 */
    II(0x10143ffc, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x10143fff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10144002, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10144005, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x10144009, 0x2)   jzd(0x1014404c, 0x41);                /* jz 0x1014404c */
    II(0x1014400b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014400e, 0x4)   mov(ax, memw_a32(ds, eax + 0x6));     /* mov ax, [eax+0x6] */
    II(0x10144012, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10144015, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x10144019, 0x1)   cwde();                               /* cwde */
    II(0x1014401a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014401b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014401e, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x10144022, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10144025, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x10144028, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1014402b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014402e, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x10144030, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10144033, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10144036, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x10144039, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014403c, 0x5)   calld(0x100ce39d, -0x75ca4);          /* call 0x100ce39d */
    II(0x10144041, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x10144044, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10144047, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1014404a, 0x2)   jmpd(0x10144052, 0x6);                /* jmp 0x10144052 */
l_0x1014404c:
    II(0x1014404c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1014404f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x10144052:
    II(0x10144052, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10144056, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10144059, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014405c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1014405e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10144061, 0x3)   mov(memd_a32(ds, edx + 0x22), eax);   /* mov [edx+0x22], eax */
    II(0x10144064, 0x5)   jmpd(0x10144123, 0xba);               /* jmp 0x10144123 */
l_0x10144069:
    II(0x10144069, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x1014406e, 0x5)   calld(sys_new, 0x21d8d);              /* call 0x10165e00 */
    II(0x10144073, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x10144076, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10144079, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1014407c, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x10144080, 0x2)   jzd(0x101440b8, 0x36);                /* jz 0x101440b8 */
    II(0x10144082, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10144085, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10144087, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014408a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014408b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014408e, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x10144091, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10144094, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10144098, 0x1)   inc(eax);                             /* inc eax */
    II(0x10144099, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1014409c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014409f, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x101440a2, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101440a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101440a8, 0x5)   calld(my_ctor_c17, -0x75c9e);         /* call 0x100ce40f */
    II(0x101440ad, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x101440b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x101440b3, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x101440b6, 0x2)   jmpd(0x101440be, 0x6);                /* jmp 0x101440be */
l_0x101440b8:
    II(0x101440b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101440bb, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x101440be:
    II(0x101440be, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x101440c2, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x101440c5, 0x3)   add(edx, memd_a32(ss, ebp - 0x8));    /* add edx, [ebp-0x8] */
    II(0x101440c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x101440cb, 0x3)   mov(memd_a32(ds, edx + 0x22), eax);   /* mov [edx+0x22], eax */
    II(0x101440ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101440d1, 0x4)   cmp(memd_a32(ds, eax + 0xa), 0);      /* cmp dword [eax+0xa], 0x0 */
    II(0x101440d5, 0x2)   jzd(0x10144123, 0x4c);                /* jz 0x10144123 */
    II(0x101440d7, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x101440da, 0x5)   calld(0x100d5224, -0x6eebb);          /* call 0x100d5224 */
    II(0x101440df, 0x1)   pushd(eax);                           /* push eax */
    II(0x101440e0, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x101440e3, 0x5)   calld(0x100d5250, -0x6ee98);          /* call 0x100d5250 */
    II(0x101440e8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101440e9, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x101440ec, 0x5)   calld(0x100d527c, -0x6ee75);          /* call 0x100d527c */
    II(0x101440f1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101440f2, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x101440f5, 0x5)   calld(0x100d52a8, -0x6ee52);          /* call 0x100d52a8 */
    II(0x101440fa, 0x1)   pushd(eax);                           /* push eax */
    II(0x101440fb, 0x5)   calld(0x100d52d4, -0x6ee2c);          /* call 0x100d52d4 */
    II(0x10144100, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10144103, 0x5)   calld(0x100d52f8, -0x6ee10);          /* call 0x100d52f8 */
    II(0x10144108, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1014410b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014410e, 0x3)   mov(edx, memd_a32(ds, eax + 0xa));    /* mov edx, [eax+0xa] */
    II(0x10144111, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10144115, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10144118, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1014411b, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x1014411e, 0x5)   calld(0x100cef64, -0x751bf);          /* call 0x100cef64 */
l_0x10144123:
    II(0x10144123, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x8);    /* cmp byte [ebp-0x4], 0x8 */
    II(0x10144127, 0x2)   jgd(0x10144143, 0x1a);                /* jg 0x10144143 */
    II(0x10144129, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014412c, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x1014412f, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10144133, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10144136, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10144139, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x1014413c, 0x5)   calld(0x100d5164, -0x6efdd);          /* call 0x100d5164 */
    II(0x10144141, 0x2)   jmpd(0x10144177, 0x34);               /* jmp 0x10144177 */
l_0x10144143:
    II(0x10144143, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10144146, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x10144149, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1014414d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10144150, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10144153, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x10144156, 0x5)   calld(0x100d5134, -0x6f027);          /* call 0x100d5134 */
    II(0x1014415b, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x1014415f, 0x6)   add(edx, 0x7000);                     /* add edx, 0x7000 */
    II(0x10144165, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10144169, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1014416c, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1014416f, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x10144172, 0x5)   calld(0x100d5164, -0x6f013);          /* call 0x100d5164 */
l_0x10144177:
    II(0x10144177, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10144179, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1014417d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10144180, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10144183, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x10144186, 0x5)   calld(0x100d5194, -0x6eff7);          /* call 0x100d5194 */
    II(0x1014418b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014418e, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
    II(0x10144191, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10144194, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10144198, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1014419b, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1014419e, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x101441a1, 0x5)   calld(0x100d50d4, -0x6f0d2);          /* call 0x100d50d4 */
    II(0x101441a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101441a9, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x101441ac, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101441b0, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101441b3, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101441b6, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x101441b9, 0x5)   calld(0x100cf85c, -0x74962);          /* call 0x100cf85c */
    II(0x101441be, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101441c0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101441c1, 0x1)   popd(edi);                            /* pop edi */
    II(0x101441c2, 0x1)   popd(esi);                            /* pop esi */
    II(0x101441c3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101441c4, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101441c5, 0x1)   retd();                               /* ret */
FUNC_END

