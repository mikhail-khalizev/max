FUNC_BEGIN(0x100c0532, 0xecbde5dceaf26c67, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x16, 0x58, 0xa, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0xe8, 0xe3, 0x5c, 0xfb, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0xfb, 0x5a, 0xfb, 0xff, 0x84, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x15, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xf5, 0x91, 0xfc, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x64, 0x7, 0xfb, 0xff, 0x89, 0x45, 0xe8, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xaf, 0xc2, 0x89, 0xc6, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd4, 0x81, 0x1c, 0x10, 0x30, 0xe4, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe0, 0xe8, 0xc7, 0x64, 0xfb, 0xff, 0x89, 0xc2, 0xb8, 0xd8, 0x34, 0x1c, 0x10, 0x89, 0xcb, 0xe8, 0xe3, 0x8a, 0, 0, 0x98, 0x39, 0xf0, 0x7e, 0xc, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xe9, 0x72, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x80, 0x78, 0x16, 0, 0x74, 0xf, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xc5, 0x59, 0xfb, 0xff, 0x83, 0xf8, 0x2, 0x7d, 0x2, 0xeb, 0x63, 0x8b, 0x55, 0xf4, 0x8a, 0x52, 0x4e, 0x81, 0xe2, 0xff, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x1c, 0x2, 0x8b, 0x55, 0xf4, 0x8a, 0x52, 0x4e, 0x81, 0xe2, 0xff, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xec, 0x1, 0xd0, 0xf, 0xaf, 0xc3, 0xf, 0xbf, 0x55, 0xe8, 0x39, 0xc2, 0x7f, 0xb, 0x31, 0xc0, 0x8b, 0x55, 0xf4, 0x8a, 0x42, 0x50, 0x89, 0x45, 0xe4, 0x80, 0x7d, 0xfc, 0x1, 0x7e, 0xb, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x4e, 0x30, 0xe4, 0x1, 0x45, 0xec, 0xe9, 0x8f, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x14, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x10, 0x89, 0x45, 0xd4, 0x31, 0xc0, 0x8b, 0x55, 0xf4, 0x8a, 0x42, 0x50, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7e, 0x57, 0xf, 0xbf, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xd4, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x5d, 0xd8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x8b, 0x55, 0xf4, 0x8a, 0x52, 0x4e, 0x81, 0xe2, 0xff, 0, 0, 0, 0x29, 0xc2, 0x89, 0x55, 0xd0, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xd0, 0x8d, 0x1c, 0x2, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xd0, 0x1, 0xd0, 0xf, 0xaf, 0xc3, 0xf, 0xbf, 0x55, 0xe8, 0x39, 0xc2, 0x7e, 0xc, 0x83, 0x45, 0xe4, 0xff, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x2, 0xeb, 0xa9, 0x80, 0x7d, 0xfc, 0x1, 0x7e, 0xb, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x4e, 0x30, 0xe4, 0x1, 0x45, 0xec, 0x80, 0x7d, 0xfc, 0x1, 0x7e, 0x13, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0xe8, 0x39, 0xc2, 0x7e, 0x2, 0xeb, 0x24, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe4, 0x29, 0xd0, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0xe8, 0x38, 0x90, 0xfc, 0xff, 0x1, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7e, 0x18, 0x31, 0xdb, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xad, 0xca, 0x9, 0, 0x8b, 0x55, 0xe4, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xdc, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100c0532, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x100c0537, 0x5)   calld(sys_check_available_stack_size, 0xa5816); /* call 0x10165d52 */
    II(0x100c053c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c053d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c053e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c053f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c0540, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c0542, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x100c0548, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100c054b, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100c054e, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100c0551, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c0554, 0x5)   calld(0x1007623c, -0x4a31d);          /* call 0x1007623c */
    II(0x100c0559, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100c055c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c055f, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x100c0563, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c0566, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c0569, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100c056c, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100c056e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c0571, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c0574, 0x5)   calld(0x10076074, -0x4a505);          /* call 0x10076074 */
    II(0x100c0579, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c057b, 0x2)   jnzd(0x100c0592, 0x15);               /* jnz 0x100c0592 */
    II(0x100c057d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0580, 0x3)   mov(edx, memd_a32(ds, eax + 0x15));   /* mov edx, [eax+0x15] */
    II(0x100c0583, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c0586, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c058a, 0x5)   calld(my_min, -0x36e0b);              /* call 0x10089784 */
    II(0x100c058f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x100c0592:
    II(0x100c0592, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c0595, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c0598, 0x5)   calld(0x10070d01, -0x4f89c);          /* call 0x10070d01 */
    II(0x100c059d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100c05a0, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100c05a7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c05ab, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100c05af, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100c05b2, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x100c05b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c05b7, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100c05ba, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c05bd, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100c05c0, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d4)); /* mov al, [eax+0x101c81d4] */
    II(0x100c05c6, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100c05c8, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100c05cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c05ce, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100c05d1, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c05d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c05d7, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100c05da, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c05dd, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c05e0, 0x5)   calld(0x10076aac, -0x49b39);          /* call 0x10076aac */
    II(0x100c05e5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c05e7, 0x5)   mov(eax, 0x101c34d8);                 /* mov eax, 0x101c34d8 */
    II(0x100c05ec, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x100c05ee, 0x5)   calld(0x100c90d6, 0x8ae3);            /* call 0x100c90d6 */
    II(0x100c05f3, 0x1)   cwde();                               /* cwde */
    II(0x100c05f4, 0x2)   cmp(eax, esi);                        /* cmp eax, esi */
    II(0x100c05f6, 0x2)   jled(0x100c0604, 0xc);                /* jle 0x100c0604 */
    II(0x100c05f8, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100c05ff, 0x5)   jmpd(0x100c0776, 0x172);              /* jmp 0x100c0776 */
l_0x100c0604:
    II(0x100c0604, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0607, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x100c060b, 0x2)   jzd(0x100c061c, 0xf);                 /* jz 0x100c061c */
    II(0x100c060d, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x100c0612, 0x5)   calld(0x10075fdc, -0x4a63b);          /* call 0x10075fdc */
    II(0x100c0617, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c061a, 0x2)   jged(0x100c061e, 0x2);                /* jge 0x100c061e */
l_0x100c061c:
    II(0x100c061c, 0x2)   jmpd(0x100c0681, 0x63);               /* jmp 0x100c0681 */
l_0x100c061e:
    II(0x100c061e, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c0621, 0x3)   mov(dl, memb_a32(ds, edx + 0x4e));    /* mov dl, [edx+0x4e] */
    II(0x100c0624, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x100c062a, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c062c, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c062f, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c0631, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c0633, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100c0637, 0x3)   lea(ebx, edx + eax);                  /* lea ebx, [edx+eax] */
    II(0x100c063a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c063d, 0x3)   mov(dl, memb_a32(ds, edx + 0x4e));    /* mov dl, [edx+0x4e] */
    II(0x100c0640, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x100c0646, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c0648, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c064b, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c064d, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c064f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100c0653, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c0655, 0x3)   imul(eax, ebx);                       /* imul eax, ebx */
    II(0x100c0658, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c065c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c065e, 0x2)   jgd(0x100c066b, 0xb);                 /* jg 0x100c066b */
    II(0x100c0660, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0662, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c0665, 0x3)   mov(al, memb_a32(ds, edx + 0x50));    /* mov al, [edx+0x50] */
    II(0x100c0668, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x100c066b:
    II(0x100c066b, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x1);    /* cmp byte [ebp-0x4], 0x1 */
    II(0x100c066f, 0x2)   jled(0x100c067c, 0xb);                /* jle 0x100c067c */
    II(0x100c0671, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c0674, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100c0677, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100c0679, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
l_0x100c067c:
    II(0x100c067c, 0x5)   jmpd(0x100c0710, 0x8f);               /* jmp 0x100c0710 */
l_0x100c0681:
    II(0x100c0681, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0684, 0x4)   mov(ax, memw_a32(ds, eax + 0x14));    /* mov ax, [eax+0x14] */
    II(0x100c0688, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100c068b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c068e, 0x4)   mov(ax, memw_a32(ds, eax + 0x10));    /* mov ax, [eax+0x10] */
    II(0x100c0692, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100c0695, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0697, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c069a, 0x3)   mov(al, memb_a32(ds, edx + 0x50));    /* mov al, [edx+0x50] */
    II(0x100c069d, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100c06a0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100c06a4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c06a6, 0x2)   jled(0x100c06ff, 0x57);               /* jle 0x100c06ff */
l_0x100c06a8:
    II(0x100c06a8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100c06ac, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100c06b0, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c06b3, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x28)); /* movsx ebx, word [ebp-0x28] */
    II(0x100c06b7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c06b9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c06bc, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100c06be, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c06c1, 0x3)   mov(dl, memb_a32(ds, edx + 0x4e));    /* mov dl, [edx+0x4e] */
    II(0x100c06c4, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x100c06ca, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100c06cc, 0x3)   mov(memd_a32(ss, ebp - 0x30), edx);   /* mov [ebp-0x30], edx */
    II(0x100c06cf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100c06d3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c06d7, 0x3)   lea(ebx, edx + eax);                  /* lea ebx, [edx+eax] */
    II(0x100c06da, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100c06de, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c06e2, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c06e4, 0x3)   imul(eax, ebx);                       /* imul eax, ebx */
    II(0x100c06e7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c06eb, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c06ed, 0x2)   jled(0x100c06fb, 0xc);                /* jle 0x100c06fb */
    II(0x100c06ef, 0x4)   add(memd_a32(ss, ebp - 0x1c), -0x1 /* 0xff */); /* add dword [ebp-0x1c], 0xff */
    II(0x100c06f3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100c06f7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c06f9, 0x2)   jgd(0x100c06fd, 0x2);                 /* jg 0x100c06fd */
l_0x100c06fb:
    II(0x100c06fb, 0x2)   jmpd(0x100c06ff, 0x2);                /* jmp 0x100c06ff */
l_0x100c06fd:
    II(0x100c06fd, 0x2)   jmpd(0x100c06a8, -0x57);              /* jmp 0x100c06a8 */
l_0x100c06ff:
    II(0x100c06ff, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x1);    /* cmp byte [ebp-0x4], 0x1 */
    II(0x100c0703, 0x2)   jled(0x100c0710, 0xb);                /* jle 0x100c0710 */
    II(0x100c0705, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c0708, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100c070b, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100c070d, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
l_0x100c0710:
    II(0x100c0710, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x1);    /* cmp byte [ebp-0x4], 0x1 */
    II(0x100c0714, 0x2)   jled(0x100c0729, 0x13);               /* jle 0x100c0729 */
    II(0x100c0716, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100c071a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c071e, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100c0721, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c0725, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c0727, 0x2)   jled(0x100c072b, 0x2);                /* jle 0x100c072b */
l_0x100c0729:
    II(0x100c0729, 0x2)   jmpd(0x100c074f, 0x24);               /* jmp 0x100c074f */
l_0x100c072b:
    II(0x100c072b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c072e, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x100c0731, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c0736, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100c073a, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c073c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c073e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0741, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100c0744, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c0747, 0x5)   calld(my_min, -0x36fc8);              /* call 0x10089784 */
    II(0x100c074c, 0x3)   add(memd_a32(ss, ebp - 0x1c), eax);   /* add [ebp-0x1c], eax */
l_0x100c074f:
    II(0x100c074f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100c0753, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c0755, 0x2)   jled(0x100c076f, 0x18);               /* jle 0x100c076f */
    II(0x100c0757, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c0759, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c075c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c075f, 0x5)   calld(0x1015d211, 0x9caad);           /* call 0x1015d211 */
    II(0x100c0764, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1c));   /* mov edx, [ebp-0x1c] */
    II(0x100c0767, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c076a, 0x3)   mov(memd_a32(ss, ebp - 0x24), edx);   /* mov [ebp-0x24], edx */
    II(0x100c076d, 0x2)   jmpd(0x100c0776, 0x7);                /* jmp 0x100c0776 */
l_0x100c076f:
    II(0x100c076f, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
l_0x100c0776:
    II(0x100c0776, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100c0779, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c077b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c077c, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c077d, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c077e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c077f, 0x1)   retd();                               /* ret */
FUNC_END

