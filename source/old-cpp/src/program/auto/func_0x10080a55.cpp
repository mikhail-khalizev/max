FUNC_BEGIN(0x10080a55, 0xf7a474664acebf4a, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xf3, 0x52, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc6, 0x45, 0xf4, 0, 0xc6, 0x45, 0xf0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xb5, 0x58, 0xff, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x29, 0x5a, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x5f, 0x61, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xce, 0xa2, 0xb, 0, 0x84, 0xc0, 0x74, 0x1b, 0x8d, 0x45, 0xec, 0xe8, 0xf1, 0x58, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x38, 0x75, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0xcf, 0x80, 0x7d, 0xf4, 0, 0x74, 0x6, 0x80, 0x7d, 0xf0, 0, 0x75, 0x6, 0xc6, 0x45, 0xe8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x84, 0x54, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x78, 0x54, 0xff, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10080a55, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10080a5a, 0x5)   calld(sys_check_available_stack_size, 0xe52f3); /* call 0x10165d52 */
    II(0x10080a5f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10080a60, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10080a61, 0x1)   pushd(edx);                           /* push edx */
    II(0x10080a62, 0x1)   pushd(esi);                           /* push esi */
    II(0x10080a63, 0x1)   pushd(edi);                           /* push edi */
    II(0x10080a64, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10080a65, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10080a67, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x10080a6d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10080a70, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x10080a74, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x10080a78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080a7b, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x10080a7e, 0x5)   calld(0x10076338, -0xa74b);           /* call 0x10076338 */
    II(0x10080a83, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x10080a86, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10080a88, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10080a8a, 0x5)   calld(0x100764b8, -0xa5d7);           /* call 0x100764b8 */
    II(0x10080a8f, 0x2)   jmpd(0x10080a99, 0x8);                /* jmp 0x10080a99 */
l_0x10080a91:
    II(0x10080a91, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10080a94, 0x5)   calld(0x10076bf8, -0x9ea1);           /* call 0x10076bf8 */
l_0x10080a99:
    II(0x10080a99, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10080a9b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10080a9e, 0x5)   calld(0x1013ad71, 0xba2ce);           /* call 0x1013ad71 */
    II(0x10080aa3, 0x2)   test(al, al);                         /* test al, al */
    II(0x10080aa5, 0x2)   jzd(0x10080ac2, 0x1b);                /* jz 0x10080ac2 */
    II(0x10080aa7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10080aaa, 0x5)   calld(0x100763a0, -0xa70f);           /* call 0x100763a0 */
    II(0x10080aaf, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x38);   /* cmp word [eax+0x8], 0x38 */
    II(0x10080ab4, 0x2)   jnzd(0x10080abc, 0x6);                /* jnz 0x10080abc */
    II(0x10080ab6, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x10080aba, 0x2)   jmpd(0x10080ac0, 0x4);                /* jmp 0x10080ac0 */
l_0x10080abc:
    II(0x10080abc, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x10080ac0:
    II(0x10080ac0, 0x2)   jmpd(0x10080a91, -0x31);              /* jmp 0x10080a91 */
l_0x10080ac2:
    II(0x10080ac2, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x10080ac6, 0x2)   jzd(0x10080ace, 0x6);                 /* jz 0x10080ace */
    II(0x10080ac8, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x10080acc, 0x2)   jnzd(0x10080ad4, 0x6);                /* jnz 0x10080ad4 */
l_0x10080ace:
    II(0x10080ace, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x10080ad2, 0x2)   jmpd(0x10080ad8, 0x4);                /* jmp 0x10080ad8 */
l_0x10080ad4:
    II(0x10080ad4, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x10080ad8:
    II(0x10080ad8, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x10080adb, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10080ade, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10080ae0, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10080ae3, 0x5)   calld(0x10075f6c, -0xab7c);           /* call 0x10075f6c */
    II(0x10080ae8, 0x2)   jmpd(0x10080af4, 0xa);                /* jmp 0x10080af4 */
//  II(0x10080aea, 0xa)   /* Недостижимый код. */
l_0x10080af4:
    II(0x10080af4, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10080af7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10080af9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10080afa, 0x1)   popd(edi);                            /* pop edi */
    II(0x10080afb, 0x1)   popd(esi);                            /* pop esi */
    II(0x10080afc, 0x1)   popd(edx);                            /* pop edx */
    II(0x10080afd, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10080afe, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10080aff, 0x1)   retd();                               /* ret */
FUNC_END

