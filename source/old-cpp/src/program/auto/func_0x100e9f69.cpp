FUNC_BEGIN(0x100e9f69, 0x4620fd2390f17a0e, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0xdf, 0xbd, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x89, 0x55, 0xf8, 0xf, 0xbf, 0x45, 0xfc, 0x8d, 0x4, 0x40, 0x8b, 0x15, 0x60, 0x36, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbe, 0, 0xd1, 0xf8, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x88, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0x8d, 0x4, 0x40, 0x8b, 0x15, 0x60, 0x36, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbe, 0x40, 0x1, 0xd1, 0xf8, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x1, 0xf, 0xbf, 0x45, 0xfc, 0x8d, 0x4, 0x40, 0x8b, 0x15, 0x60, 0x36, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbe, 0x40, 0x2, 0xd1, 0xf8, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x2, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100e9f69, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100e9f6e, 0x5)   calld(sys_check_available_stack_size, 0x7bddf); /* call 0x10165d52 */
    II(0x100e9f73, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e9f74, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e9f75, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e9f76, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e9f77, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e9f78, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e9f7a, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100e9f80, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100e9f83, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100e9f86, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e9f8a, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x100e9f8d, 0x6)   mov(edx, memd_a32(ds, 0x101c3660));   /* mov edx, [0x101c3660] */
    II(0x100e9f93, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e9f95, 0x3)   movsx(eax, memb_a32(ds, eax));        /* movsx eax, byte [eax] */
    II(0x100e9f98, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100e9f9a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e9f9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9f9f, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x100e9fa1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e9fa5, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x100e9fa8, 0x6)   mov(edx, memd_a32(ds, 0x101c3660));   /* mov edx, [0x101c3660] */
    II(0x100e9fae, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e9fb0, 0x4)   movsx(eax, memb_a32(ds, eax + 0x1));  /* movsx eax, byte [eax+0x1] */
    II(0x100e9fb4, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100e9fb6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e9fb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9fbb, 0x3)   mov(memb_a32(ds, eax + 0x1), dl);     /* mov [eax+0x1], dl */
    II(0x100e9fbe, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e9fc2, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x100e9fc5, 0x6)   mov(edx, memd_a32(ds, 0x101c3660));   /* mov edx, [0x101c3660] */
    II(0x100e9fcb, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e9fcd, 0x4)   movsx(eax, memb_a32(ds, eax + 0x2));  /* movsx eax, byte [eax+0x2] */
    II(0x100e9fd1, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100e9fd3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e9fd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9fd8, 0x3)   mov(memb_a32(ds, eax + 0x2), dl);     /* mov [eax+0x2], dl */
    II(0x100e9fdb, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e9fdd, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e9fde, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e9fdf, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e9fe0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e9fe1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e9fe2, 0x1)   retd();                               /* ret */
FUNC_END

