FUNC_BEGIN(0x101105a5, 0x8179cc350e578ec4, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0xa3, 0x57, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0x18, 0xba, 0x94, 0xad, 0x1b, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0x80, 0x7d, 0xfc, 0x10, 0x7c, 0xc, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x69, 0x9c, 0x5, 0, 0xeb, 0xa, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x5d, 0x9c, 0x5, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0xff, 0xf, 0x85, 0x95, 0, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0x83, 0xf8, 0xc, 0xf, 0x8d, 0, 0x2, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0xc7, 0x80, 0xf4, 0x4d, 0x1c, 0x10, 0, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xdb, 0x57, 0x5, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x41, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x6, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x42, 0x2, 0x98, 0x50, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x4, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x2, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf4, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0x33, 0xdd, 0xfb, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xe4, 0x89, 0x42, 0x10, 0xe9, 0xba, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x64, 0x57, 0x5, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x36, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe0, 0xe8, 0x39, 0xdd, 0xfb, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd4, 0xf, 0xbe, 0x55, 0xfc, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf8, 0x8b, 0x45, 0xd4, 0x89, 0x42, 0x10, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0xa, 0, 0x74, 0x4c, 0x8d, 0x45, 0xd0, 0xe8, 0x1c, 0x4b, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xcc, 0xe8, 0x3f, 0x4b, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xc8, 0xe8, 0x62, 0x4b, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xc4, 0xe8, 0x85, 0x4b, 0xfc, 0xff, 0x50, 0xe8, 0xab, 0x4b, 0xfc, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0xc7, 0x4b, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xa, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x10, 0xe8, 0x18, 0xe8, 0xfb, 0xff, 0x31, 0xd2, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x10, 0xe8, 0x34, 0x4a, 0xfc, 0xff, 0xf, 0xbe, 0x55, 0xfc, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x10, 0xe8, 0xb8, 0x49, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xfc, 0x8d, 0x90, 0, 0x70, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x10, 0xe8, 0xcc, 0x49, 0xfc, 0xff, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x10, 0xe8, 0x21, 0x49, 0xfc, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0, 0x8b, 0x50, 0x12, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x10, 0xe8, 0x8f, 0xf0, 0xfb, 0xff, 0xf, 0xbe, 0x55, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0x89, 0x50, 0x5c, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0xe, 0x89, 0x50, 0x60, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x12, 0x89, 0x50, 0x64, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101105a5, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x101105aa, 0x5)   calld(sys_check_available_stack_size, 0x557a3); /* call 0x10165d52 */
    II(0x101105af, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101105b0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101105b1, 0x1)   pushd(esi);                           /* push esi */
    II(0x101105b2, 0x1)   pushd(edi);                           /* push edi */
    II(0x101105b3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101105b4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101105b6, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x101105bc, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101105bf, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x101105c2, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101105c6, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x101105c9, 0x5)   mov(edx, 0x101bad94);                 /* mov edx, 0x101bad94 */
    II(0x101105ce, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101105d0, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x101105d3, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x10);   /* cmp byte [ebp-0x4], 0x10 */
    II(0x101105d7, 0x2)   jld(0x101105e5, 0xc);                 /* jl 0x101105e5 */
    II(0x101105d9, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101105de, 0x5)   calld(/* sys */ 0x1016a24c, 0x59c69); /* call 0x1016a24c */
    II(0x101105e3, 0x2)   jmpd(0x101105ef, 0xa);                /* jmp 0x101105ef */
l_0x101105e5:
    II(0x101105e5, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x101105ea, 0x5)   calld(/* sys */ 0x1016a24c, 0x59c5d); /* call 0x1016a24c */
l_0x101105ef:
    II(0x101105ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101105f2, 0x5)   cmp(memw_a32(ds, eax + 0x8), -0x1 /* 0xff */); /* cmp word [eax+0x8], 0xff */
    II(0x101105f7, 0x6)   jnzd(0x10110692, 0x95);               /* jnz dword 0x10110692 */
    II(0x101105fd, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10110601, 0x3)   cmp(eax, 0xc);                        /* cmp eax, 0xc */
    II(0x10110604, 0x6)   jged(0x1011080a, 0x200);              /* jge dword 0x1011080a */
    II(0x1011060a, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011060e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110611, 0xa)   mov(memd_a32(ds, eax + 0x101c4df4), 0); /* mov dword [eax+0x101c4df4], 0x0 */
    II(0x1011061b, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10110620, 0x5)   calld(sys_new, 0x557db);              /* call 0x10165e00 */
    II(0x10110625, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x10110628, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011062b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011062e, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x10110632, 0x2)   jzd(0x10110675, 0x41);                /* jz 0x10110675 */
    II(0x10110634, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10110637, 0x4)   mov(ax, memw_a32(ds, eax + 0x6));     /* mov ax, [eax+0x6] */
    II(0x1011063b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1011063e, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x10110642, 0x1)   cwde();                               /* cwde */
    II(0x10110643, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110644, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10110647, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x1011064b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1011064e, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x10110651, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10110654, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10110657, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x10110659, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011065c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011065f, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x10110662, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10110665, 0x5)   calld(0x100ce39d, -0x422cd);          /* call 0x100ce39d */
    II(0x1011066a, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1011066d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10110670, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10110673, 0x2)   jmpd(0x1011067b, 0x6);                /* jmp 0x1011067b */
l_0x10110675:
    II(0x10110675, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10110678, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1011067b:
    II(0x1011067b, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011067f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110682, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10110685, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10110687, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1011068a, 0x3)   mov(memd_a32(ds, edx + 0x10), eax);   /* mov [edx+0x10], eax */
    II(0x1011068d, 0x5)   jmpd(0x1011074c, 0xba);               /* jmp 0x1011074c */
l_0x10110692:
    II(0x10110692, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10110697, 0x5)   calld(sys_new, 0x55764);              /* call 0x10165e00 */
    II(0x1011069c, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1011069f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101106a2, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101106a5, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x101106a9, 0x2)   jzd(0x101106e1, 0x36);                /* jz 0x101106e1 */
    II(0x101106ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101106ae, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101106b0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101106b3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101106b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101106b7, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x101106ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101106bd, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x101106c1, 0x1)   inc(eax);                             /* inc eax */
    II(0x101106c2, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101106c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101106c8, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x101106cb, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101106ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101106d1, 0x5)   calld(my_ctor_c17, -0x422c7);         /* call 0x100ce40f */
    II(0x101106d6, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x101106d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x101106dc, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x101106df, 0x2)   jmpd(0x101106e7, 0x6);                /* jmp 0x101106e7 */
l_0x101106e1:
    II(0x101106e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101106e4, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x101106e7:
    II(0x101106e7, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x101106eb, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x101106ee, 0x3)   add(edx, memd_a32(ss, ebp - 0x8));    /* add edx, [ebp-0x8] */
    II(0x101106f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x101106f4, 0x3)   mov(memd_a32(ds, edx + 0x10), eax);   /* mov [edx+0x10], eax */
    II(0x101106f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101106fa, 0x4)   cmp(memd_a32(ds, eax + 0xa), 0);      /* cmp dword [eax+0xa], 0x0 */
    II(0x101106fe, 0x2)   jzd(0x1011074c, 0x4c);                /* jz 0x1011074c */
    II(0x10110700, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10110703, 0x5)   calld(0x100d5224, -0x3b4e4);          /* call 0x100d5224 */
    II(0x10110708, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110709, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1011070c, 0x5)   calld(0x100d5250, -0x3b4c1);          /* call 0x100d5250 */
    II(0x10110711, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110712, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10110715, 0x5)   calld(0x100d527c, -0x3b49e);          /* call 0x100d527c */
    II(0x1011071a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011071b, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1011071e, 0x5)   calld(0x100d52a8, -0x3b47b);          /* call 0x100d52a8 */
    II(0x10110723, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110724, 0x5)   calld(0x100d52d4, -0x3b455);          /* call 0x100d52d4 */
    II(0x10110729, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1011072c, 0x5)   calld(0x100d52f8, -0x3b439);          /* call 0x100d52f8 */
    II(0x10110731, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10110734, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10110737, 0x3)   mov(edx, memd_a32(ds, eax + 0xa));    /* mov edx, [eax+0xa] */
    II(0x1011073a, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011073e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110741, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10110744, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x10110747, 0x5)   calld(0x100cef64, -0x417e8);          /* call 0x100cef64 */
l_0x1011074c:
    II(0x1011074c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011074e, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10110752, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110755, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10110758, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x1011075b, 0x5)   calld(0x100d5194, -0x3b5cc);          /* call 0x100d5194 */
    II(0x10110760, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x10110764, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x1011076a, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011076e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110771, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10110774, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x10110777, 0x5)   calld(0x100d5134, -0x3b648);          /* call 0x100d5134 */
    II(0x1011077c, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10110780, 0x6)   lea(edx, eax + 0x7000);               /* lea edx, [eax+0x7000] */
    II(0x10110786, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011078a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011078d, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10110790, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x10110793, 0x5)   calld(0x100d5164, -0x3b634);          /* call 0x100d5164 */
    II(0x10110798, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1011079b, 0x3)   mov(edx, memd_a32(ds, edx + 0x14));   /* mov edx, [edx+0x14] */
    II(0x1011079e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101107a1, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101107a5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101107a8, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101107ab, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x101107ae, 0x5)   calld(0x100d50d4, -0x3b6df);          /* call 0x100d50d4 */
    II(0x101107b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101107b6, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101107b8, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x101107bb, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101107bf, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101107c2, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101107c5, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x101107c8, 0x5)   calld(0x100cf85c, -0x40f71);          /* call 0x100cf85c */
    II(0x101107cd, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x101107d1, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101107d5, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x101107d8, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101107db, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x101107e1, 0x3)   mov(memd_a32(ds, eax + 0x5c), edx);   /* mov [eax+0x5c], edx */
    II(0x101107e4, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101107e8, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x101107eb, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101107ee, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101107f1, 0x3)   mov(edx, memd_a32(ds, edx + 0xe));    /* mov edx, [edx+0xe] */
    II(0x101107f4, 0x3)   mov(memd_a32(ds, eax + 0x60), edx);   /* mov [eax+0x60], edx */
    II(0x101107f7, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101107fb, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x101107fe, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10110801, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10110804, 0x3)   mov(edx, memd_a32(ds, edx + 0x12));   /* mov edx, [edx+0x12] */
    II(0x10110807, 0x3)   mov(memd_a32(ds, eax + 0x64), edx);   /* mov [eax+0x64], edx */
l_0x1011080a:
    II(0x1011080a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011080c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011080d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011080e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011080f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10110810, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10110811, 0x1)   retd();                               /* ret */
FUNC_END

