FUNC_BEGIN(0x100fb889, 0xa266bc30ff2dae73, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xbf, 0xa4, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0xb8, 0x26, 0, 0, 0, 0xe8, 0x92, 0xcf, 0xfe, 0xff, 0x89, 0x45, 0xf8, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xbc, 0xac, 0xf7, 0xff, 0xe8, 0x7f, 0xa9, 0xf7, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0x39, 0xaf, 0xf7, 0xff, 0xe8, 0xf5, 0x3c, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x5c, 0xae, 0xf7, 0xff, 0x66, 0xc7, 0x40, 0x12, 0, 0, 0xc7, 0x45, 0xfc, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xe9, 0xa6, 0xf7, 0xff, 0xf, 0xbf, 0x55, 0xfc, 0x39, 0xc2, 0xf, 0x8f, 0xc1, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x29, 0xae, 0xf7, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x42, 0x17, 0x8d, 0x45, 0xf4, 0xe8, 0x18, 0xae, 0xf7, 0xff, 0x8b, 0x50, 0x10, 0xc1, 0xfa, 0x10, 0xb8, 0x6, 0, 0, 0, 0xe8, 0xb4, 0xa6, 0xf7, 0xff, 0x39, 0xc2, 0x7d, 0xc, 0x8d, 0x45, 0xf4, 0xe8, 0xfc, 0xad, 0xf7, 0xff, 0x66, 0xff, 0x40, 0x12, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x32, 0xac, 0xf7, 0xff, 0x8b, 0x50, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0xc1, 0xe0, 0x6, 0x29, 0xc2, 0x89, 0x55, 0xe4, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x16, 0xac, 0xf7, 0xff, 0x8b, 0x50, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0xc1, 0xe0, 0x6, 0x1, 0xc2, 0x89, 0x55, 0xec, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xfa, 0xab, 0xf7, 0xff, 0x8b, 0x50, 0x16, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0xc1, 0xe0, 0x6, 0x29, 0xc2, 0x89, 0x55, 0xe8, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xde, 0xab, 0xf7, 0xff, 0x8b, 0x50, 0x16, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0xc1, 0xe0, 0x6, 0x1, 0xc2, 0x89, 0x55, 0xf0, 0x8d, 0x45, 0xe4, 0xe8, 0xb2, 0x3b, 0, 0, 0x31, 0xc0, 0xe8, 0x47, 0x55, 0, 0, 0x85, 0xc0, 0x74, 0xf5, 0xe9, 0x23, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x22, 0xa5, 0xf7, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100fb889, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100fb88e, 0x5)   calld(sys_check_available_stack_size, 0x6a4bf); /* call 0x10165d52 */
    II(0x100fb893, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100fb894, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100fb895, 0x1)   pushd(edx);                           /* push edx */
    II(0x100fb896, 0x1)   pushd(esi);                           /* push esi */
    II(0x100fb897, 0x1)   pushd(edi);                           /* push edi */
    II(0x100fb898, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100fb899, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100fb89b, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100fb8a1, 0x5)   mov(eax, 0x26);                       /* mov eax, 0x26 */
    II(0x100fb8a6, 0x5)   calld(0x100e883d, -0x1306e);          /* call 0x100e883d */
    II(0x100fb8ab, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100fb8ae, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fb8b3, 0x5)   calld(0x10076574, -0x85344);          /* call 0x10076574 */
    II(0x100fb8b8, 0x5)   calld(0x1007623c, -0x85681);          /* call 0x1007623c */
    II(0x100fb8bd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fb8bf, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100fb8c2, 0x5)   calld(0x10076800, -0x850c7);          /* call 0x10076800 */
    II(0x100fb8c7, 0x5)   calld(0x100ff5c1, 0x3cf5);            /* call 0x100ff5c1 */
    II(0x100fb8cc, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100fb8cf, 0x5)   calld(0x10076730, -0x851a4);          /* call 0x10076730 */
    II(0x100fb8d4, 0x6)   mov(memw_a32(ds, eax + 0x12), 0);     /* mov word [eax+0x12], 0x0 */
    II(0x100fb8da, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x1);    /* mov dword [ebp-0x4], 0x1 */
    II(0x100fb8e1, 0x2)   jmpd(0x100fb8e9, 0x6);                /* jmp 0x100fb8e9 */
l_0x100fb8e3:
    II(0x100fb8e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fb8e6, 0x3)   inc(memd_a32(ss, ebp - 0x4));         /* inc dword [ebp-0x4] */
l_0x100fb8e9:
    II(0x100fb8e9, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x100fb8ee, 0x5)   calld(0x10075fdc, -0x85917);          /* call 0x10075fdc */
    II(0x100fb8f3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100fb8f7, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100fb8f9, 0x6)   jgd(0x100fb9c0, 0xc1);                /* jg dword 0x100fb9c0 */
    II(0x100fb8ff, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100fb902, 0x5)   calld(0x10076730, -0x851d7);          /* call 0x10076730 */
    II(0x100fb907, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fb909, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fb90c, 0x4)   mov(memw_a32(ds, edx + 0x17), ax);    /* mov [edx+0x17], ax */
    II(0x100fb910, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100fb913, 0x5)   calld(0x10076730, -0x851e8);          /* call 0x10076730 */
    II(0x100fb918, 0x3)   mov(edx, memd_a32(ds, eax + 0x10));   /* mov edx, [eax+0x10] */
    II(0x100fb91b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb91e, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x100fb923, 0x5)   calld(0x10075fdc, -0x8594c);          /* call 0x10075fdc */
    II(0x100fb928, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100fb92a, 0x2)   jged(0x100fb938, 0xc);                /* jge 0x100fb938 */
    II(0x100fb92c, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100fb92f, 0x5)   calld(0x10076730, -0x85204);          /* call 0x10076730 */
    II(0x100fb934, 0x4)   inc(memw_a32(ds, eax + 0x12));        /* inc word [eax+0x12] */
l_0x100fb938:
    II(0x100fb938, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fb93d, 0x5)   calld(0x10076574, -0x853ce);          /* call 0x10076574 */
    II(0x100fb942, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
    II(0x100fb945, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb948, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb94c, 0x3)   shl(eax, 0x6);                        /* shl eax, 0x6 */
    II(0x100fb94f, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100fb951, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x100fb954, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fb959, 0x5)   calld(0x10076574, -0x853ea);          /* call 0x10076574 */
    II(0x100fb95e, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
    II(0x100fb961, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb964, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb968, 0x3)   shl(eax, 0x6);                        /* shl eax, 0x6 */
    II(0x100fb96b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fb96d, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x100fb970, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fb975, 0x5)   calld(0x10076574, -0x85406);          /* call 0x10076574 */
    II(0x100fb97a, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x100fb97d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb980, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb984, 0x3)   shl(eax, 0x6);                        /* shl eax, 0x6 */
    II(0x100fb987, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100fb989, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x100fb98c, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fb991, 0x5)   calld(0x10076574, -0x85422);          /* call 0x10076574 */
    II(0x100fb996, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x100fb999, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb99c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fb9a0, 0x3)   shl(eax, 0x6);                        /* shl eax, 0x6 */
    II(0x100fb9a3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fb9a5, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x100fb9a8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100fb9ab, 0x5)   calld(0x100ff562, 0x3bb2);            /* call 0x100ff562 */
l_0x100fb9b0:
    II(0x100fb9b0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fb9b2, 0x5)   calld(0x10100efe, 0x5547);            /* call 0x10100efe */
    II(0x100fb9b7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100fb9b9, 0x2)   jzd(0x100fb9b0, -0xb);                /* jz 0x100fb9b0 */
    II(0x100fb9bb, 0x5)   jmpd(0x100fb8e3, -0xdd);              /* jmp 0x100fb8e3 */
l_0x100fb9c0:
    II(0x100fb9c0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fb9c2, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100fb9c5, 0x5)   calld(0x10075eec, -0x85ade);          /* call 0x10075eec */
    II(0x100fb9ca, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100fb9cc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100fb9cd, 0x1)   popd(edi);                            /* pop edi */
    II(0x100fb9ce, 0x1)   popd(esi);                            /* pop esi */
    II(0x100fb9cf, 0x1)   popd(edx);                            /* pop edx */
    II(0x100fb9d0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100fb9d1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100fb9d2, 0x1)   retd();                               /* ret */
FUNC_END

