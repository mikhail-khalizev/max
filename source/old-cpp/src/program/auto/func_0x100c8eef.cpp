FUNC_BEGIN(0x100c8eef, 0x4c136eedf61ad950, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x59, 0xce, 0x9, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xd0, 0x66, 0x8b, 0, 0x80, 0xe4, 0x7f, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x3d, 0xff, 0x7f, 0, 0, 0x7d, 0xb, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xe8, 0xe9, 0x83, 0x1, 0, 0, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xd4, 0xe8, 0x10, 0xcf, 0xfa, 0xff, 0xc7, 0x45, 0xec, 0xff, 0x7f, 0, 0, 0xe8, 0x94, 0xf3, 0x7, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x76, 0xc, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xe9, 0x52, 0x1, 0, 0, 0xc7, 0x45, 0xdc, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0x39, 0xc2, 0xf, 0x8d, 0xde, 0, 0, 0, 0x8b, 0x45, 0xd4, 0x66, 0xff, 0x4d, 0xd4, 0x8b, 0x45, 0xd6, 0x66, 0xff, 0x45, 0xd6, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xe0, 0x2, 0xf, 0xbf, 0x45, 0xe0, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0xb1, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x1, 0xc0, 0x89, 0x45, 0xe4, 0xff, 0x4d, 0xe4, 0x66, 0x83, 0x7d, 0xe4, 0xff, 0xf, 0x84, 0x96, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0xb0, 0x21, 0xfc, 0xff, 0xf, 0xbf, 0x45, 0xd4, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xd4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xd6, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xd6, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x4d, 0xf, 0xbf, 0x45, 0xd4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0xf, 0xbf, 0x55, 0xd6, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0xf, 0xbf, 0, 0xf6, 0xc4, 0x80, 0x74, 0x31, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xd0, 0xe8, 0x1b, 0xce, 0xfa, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xcc, 0xe8, 0xe, 0xce, 0xfa, 0xff, 0x89, 0xda, 0xe8, 0xf4, 0x7b, 0xfa, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0x6, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0xe9, 0x5c, 0xff, 0xff, 0xff, 0xe9, 0x3e, 0xff, 0xff, 0xff, 0xe9, 0x5, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xd0, 0x66, 0x8b, 0, 0x25, 0, 0x80, 0, 0, 0x8b, 0x5d, 0xec, 0x9, 0xc3, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xd0, 0x66, 0x89, 0x18, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100c8eef, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x100c8ef4, 0x5)   calld(sys_check_available_stack_size, 0x9ce59); /* call 0x10165d52 */
    II(0x100c8ef9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c8efa, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c8efb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c8efc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c8efd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c8eff, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x100c8f05, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100c8f08, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100c8f0b, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100c8f0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c8f11, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c8f14, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c8f17, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c8f1a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c8f1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c8f1f, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c8f21, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c8f24, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c8f26, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100c8f28, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c8f2a, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100c8f2d, 0x3)   and_(ah, 0x7f);                       /* and ah, 0x7f */
    II(0x100c8f30, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100c8f33, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c8f37, 0x5)   cmp(eax, 0x7fff);                     /* cmp eax, 0x7fff */
    II(0x100c8f3c, 0x2)   jged(0x100c8f49, 0xb);                /* jge 0x100c8f49 */
    II(0x100c8f3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100c8f41, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100c8f44, 0x5)   jmpd(0x100c90cc, 0x183);              /* jmp 0x100c90cc */
l_0x100c8f49:
    II(0x100c8f49, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c8f4c, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c8f4f, 0x5)   calld(0x10075e64, -0x530f0);          /* call 0x10075e64 */
    II(0x100c8f54, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x7fff); /* mov dword [ebp-0x14], 0x7fff */
    II(0x100c8f5b, 0x5)   calld(0x101482f4, 0x7f394);           /* call 0x101482f4 */
    II(0x100c8f60, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x100c8f66, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x100c8f6c, 0x2)   jbed(0x100c8f7a, 0xc);                /* jbe 0x100c8f7a */
    II(0x100c8f6e, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100c8f75, 0x5)   jmpd(0x100c90cc, 0x152);              /* jmp 0x100c90cc */
l_0x100c8f7a:
    II(0x100c8f7a, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0x1);   /* mov dword [ebp-0x24], 0x1 */
    II(0x100c8f81, 0x2)   jmpd(0x100c8f89, 0x6);                /* jmp 0x100c8f89 */
l_0x100c8f83:
    II(0x100c8f83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100c8f86, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x100c8f89:
    II(0x100c8f89, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100c8f8d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c8f91, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c8f94, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c8f98, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c8f9a, 0x6)   jged(0x100c907e, 0xde);               /* jge dword 0x100c907e */
    II(0x100c8fa0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c8fa3, 0x4)   dec(memw_a32(ss, ebp - 0x2c));        /* dec word [ebp-0x2c] */
    II(0x100c8fa7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2a));   /* mov eax, [ebp-0x2a] */
    II(0x100c8faa, 0x4)   inc(memw_a32(ss, ebp - 0x2a));        /* inc word [ebp-0x2a] */
    II(0x100c8fae, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100c8fb5, 0x2)   jmpd(0x100c8fbb, 0x4);                /* jmp 0x100c8fbb */
l_0x100c8fb7:
    II(0x100c8fb7, 0x4)   add(memd_a32(ss, ebp - 0x20), 0x2);   /* add dword [ebp-0x20], 0x2 */
l_0x100c8fbb:
    II(0x100c8fbb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c8fbf, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100c8fc2, 0x6)   jged(0x100c9079, 0xb1);               /* jge dword 0x100c9079 */
    II(0x100c8fc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100c8fcb, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c8fcd, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x100c8fd0:
    II(0x100c8fd0, 0x3)   dec(memd_a32(ss, ebp - 0x1c));        /* dec dword [ebp-0x1c] */
    II(0x100c8fd3, 0x5)   cmp(memw_a32(ss, ebp - 0x1c), -0x1 /* 0xff */); /* cmp word [ebp-0x1c], 0xff */
    II(0x100c8fd8, 0x6)   jzd(0x100c9074, 0x96);                /* jz dword 0x100c9074 */
    II(0x100c8fde, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c8fe2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c8fe5, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x100c8fea, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c8fec, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c8fef, 0x5)   calld(0x1008b1a4, -0x3de50);          /* call 0x1008b1a4 */
    II(0x100c8ff4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100c8ff8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c8ffa, 0x2)   jld(0x100c9008, 0xc);                 /* jl 0x100c9008 */
    II(0x100c8ffc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c8fff, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c9006, 0x2)   jld(0x100c900a, 0x2);                 /* jl 0x100c900a */
l_0x100c9008:
    II(0x100c9008, 0x2)   jmpd(0x100c9012, 0x8);                /* jmp 0x100c9012 */
l_0x100c900a:
    II(0x100c900a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2a)); /* movsx eax, word [ebp-0x2a] */
    II(0x100c900e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c9010, 0x2)   jged(0x100c9014, 0x2);                /* jge 0x100c9014 */
l_0x100c9012:
    II(0x100c9012, 0x2)   jmpd(0x100c9020, 0xc);                /* jmp 0x100c9020 */
l_0x100c9014:
    II(0x100c9014, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2a));   /* mov eax, [ebp-0x2a] */
    II(0x100c9017, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100c901e, 0x2)   jld(0x100c9022, 0x2);                 /* jl 0x100c9022 */
l_0x100c9020:
    II(0x100c9020, 0x2)   jmpd(0x100c906f, 0x4d);               /* jmp 0x100c906f */
l_0x100c9022:
    II(0x100c9022, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100c9026, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c9029, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100c902c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2a)); /* movsx edx, word [ebp-0x2a] */
    II(0x100c9030, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100c9032, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c9034, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c9036, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c9039, 0x3)   test(ah, 0x80);                       /* test ah, 0x80 */
    II(0x100c903c, 0x2)   jzd(0x100c906f, 0x31);                /* jz 0x100c906f */
    II(0x100c903e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c9041, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c9044, 0x5)   calld(0x10075e64, -0x531e5);          /* call 0x10075e64 */
    II(0x100c9049, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c904b, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100c904e, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100c9051, 0x5)   calld(0x10075e64, -0x531f2);          /* call 0x10075e64 */
    II(0x100c9056, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c9058, 0x5)   calld(0x10070c51, -0x5840c);          /* call 0x10070c51 */
    II(0x100c905d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100c9060, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c9063, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100c9067, 0x2)   jged(0x100c906f, 0x6);                /* jge 0x100c906f */
    II(0x100c9069, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c906c, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x100c906f:
    II(0x100c906f, 0x5)   jmpd(0x100c8fd0, -0xa4);              /* jmp 0x100c8fd0 */
l_0x100c9074:
    II(0x100c9074, 0x5)   jmpd(0x100c8fb7, -0xc2);              /* jmp 0x100c8fb7 */
l_0x100c9079:
    II(0x100c9079, 0x5)   jmpd(0x100c8f83, -0xfb);              /* jmp 0x100c8f83 */
l_0x100c907e:
    II(0x100c907e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c9081, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c9084, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c9087, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c908a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c908c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c908f, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c9091, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c9094, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c9096, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100c9098, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c909a, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100c909d, 0x5)   and_(eax, 0x8000);                    /* and eax, 0x8000 */
    II(0x100c90a2, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x14));   /* mov ebx, [ebp-0x14] */
    II(0x100c90a5, 0x2)   or_(ebx, eax);                        /* or ebx, eax */
    II(0x100c90a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c90aa, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c90ad, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c90b0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c90b3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c90b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c90b8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c90ba, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c90bd, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c90bf, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100c90c1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c90c3, 0x3)   mov(memw_a32(ds, eax), bx);           /* mov [eax], bx */
    II(0x100c90c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c90c9, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x100c90cc:
    II(0x100c90cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c90cf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c90d1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c90d2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c90d3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c90d4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c90d5, 0x1)   retd();                               /* ret */
FUNC_END

