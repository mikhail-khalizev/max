FUNC_BEGIN(0x100cd282, 0x96aa4bc4f7cb7f6d, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xc6, 0x8a, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xcc, 0x92, 0xfa, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x54, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xbc, 0x92, 0xfa, 0xff, 0xe8, 0x7f, 0x8f, 0xfa, 0xff, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x88, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100cd282, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100cd287, 0x5)   calld(sys_check_available_stack_size, 0x98ac6); /* call 0x10165d52 */
    II(0x100cd28c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100cd28d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100cd28e, 0x1)   pushd(edx);                           /* push edx */
    II(0x100cd28f, 0x1)   pushd(esi);                           /* push esi */
    II(0x100cd290, 0x1)   pushd(edi);                           /* push edi */
    II(0x100cd291, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100cd292, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100cd294, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100cd29a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100cd29d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cd2a0, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cd2a3, 0x5)   calld(0x10076574, -0x56d34);          /* call 0x10076574 */
    II(0x100cd2a8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cd2aa, 0x3)   mov(dl, memb_a32(ds, eax + 0x54));    /* mov dl, [eax+0x54] */
    II(0x100cd2ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cd2b0, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cd2b3, 0x5)   calld(0x10076574, -0x56d44);          /* call 0x10076574 */
    II(0x100cd2b8, 0x5)   calld(0x1007623c, -0x57081);          /* call 0x1007623c */
    II(0x100cd2bd, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x100cd2c0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100cd2c3, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100cd2c5, 0x2)   jnzd(0x100cd2cd, 0x6);                /* jnz 0x100cd2cd */
    II(0x100cd2c7, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100cd2cb, 0x2)   jmpd(0x100cd2d1, 0x4);                /* jmp 0x100cd2d1 */
l_0x100cd2cd:
    II(0x100cd2cd, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x100cd2d1:
    II(0x100cd2d1, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100cd2d4, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
//    II(0x100cd2d7, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100cd2da, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100cd2dc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100cd2dd, 0x1)   popd(edi);                            /* pop edi */
    II(0x100cd2de, 0x1)   popd(esi);                            /* pop esi */
    II(0x100cd2df, 0x1)   popd(edx);                            /* pop edx */
    II(0x100cd2e0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100cd2e1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100cd2e2, 0x1)   retd();                               /* ret */
FUNC_END

