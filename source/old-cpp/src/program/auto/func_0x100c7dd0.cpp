FUNC_BEGIN(0x100c7dd0, 0x253876e4ad0b0ae1, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0x78, 0xdf, 0x9, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0x8b, 0x45, 0xf0, 0xe8, 0xaf, 0x2c, 0x7, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1b, 0xe8, 0xe3, 0xec, 0xfa, 0xff, 0x83, 0xe8, 0x1b, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x2, 0xe8, 0x58, 0x1b, 0x10, 0x31, 0xdb, 0x8a, 0x5d, 0xfc, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xc0, 0xe8, 0x3b, 0xfd, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1b, 0xe8, 0x9, 0xd, 0xfc, 0xff, 0x8a, 0x45, 0x10, 0x8b, 0x55, 0xf0, 0x88, 0x42, 0x23, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x7, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x9, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x1f, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x6, 0, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xbc, 0xe8, 0xf2, 0xdf, 0xfa, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xc0, 0xe8, 0xd3, 0x84, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x9, 0x8d, 0x45, 0xc0, 0xe8, 0x3, 0x45, 0xfd, 0xff, 0x8b, 0x7d, 0xf0, 0x8d, 0x7f, 0xb, 0x89, 0xc6, 0xa5, 0xa5, 0xa5, 0xa5, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100c7dd0, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x100c7dd5, 0x5)   calld(sys_check_available_stack_size, 0x9df78); /* call 0x10165d52 */
    II(0x100c7dda, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c7ddb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c7ddc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c7ddd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c7ddf, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x100c7de5, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c7de8, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100c7deb, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100c7dee, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
//    II(0x100c7df1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7df4, 0x5)   calld(0x1013aaa8, 0x72caf);           /* call 0x1013aaa8 */
    II(0x100c7df9, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c7dfc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c7dff, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c7e02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7e05, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x100c7e08, 0x5)   calld(my_ctor_0x101b4184, -0x5131d);  /* call 0x10076af0 */
    II(0x100c7e0d, 0x3)   sub(eax, 0x1b);                       /* sub eax, 0x1b */
    II(0x100c7e10, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100c7e13, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7e16, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b58e8); /* mov dword [eax+0x2], 0x101b58e8 */
    II(0x100c7e1d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c7e1f, 0x3)   mov(bl, memb_a32(ss, ebp - 0x4));     /* mov bl, [ebp-0x4] */
    II(0x100c7e22, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c7e25, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100c7e28, 0x5)   calld(0x100c7b68, -0x2c5);            /* call 0x100c7b68 */
    II(0x100c7e2d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c7e30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7e33, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x100c7e36, 0x5)   calld(0x10088b44, -0x3f2f7);          /* call 0x10088b44 */
    II(0x100c7e3b, 0x3)   mov(al, memb_a32(ss, ebp + 0x10));    /* mov al, [ebp+0x10] */
    II(0x100c7e3e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c7e41, 0x3)   mov(memb_a32(ds, edx + 0x23), al);    /* mov [edx+0x23], al */
    II(0x100c7e44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c7e47, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c7e4a, 0x4)   mov(memw_a32(ds, edx + 0x7), ax);     /* mov [edx+0x7], ax */
    II(0x100c7e4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7e51, 0x6)   mov(memw_a32(ds, eax + 0x9), 0);      /* mov word [eax+0x9], 0x0 */
    II(0x100c7e57, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c7e5a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c7e5d, 0x3)   mov(memd_a32(ds, edx + 0x1f), eax);   /* mov [edx+0x1f], eax */
    II(0x100c7e60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7e63, 0x4)   mov(memb_a32(ds, eax + 0x6), 0);      /* mov byte [eax+0x6], 0x0 */
    II(0x100c7e67, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c7e6a, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100c7e6d, 0x5)   calld(0x10075e64, -0x5200e);          /* call 0x10075e64 */
    II(0x100c7e72, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c7e74, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100c7e77, 0x5)   calld(0x1009034f, -0x37b2d);          /* call 0x1009034f */
    II(0x100c7e7c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c7e7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7e81, 0x4)   mov(memw_a32(ds, eax + 0x9), dx);     /* mov [eax+0x9], dx */
    II(0x100c7e85, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100c7e88, 0x5)   calld(0x1009c390, -0x2bafd);          /* call 0x1009c390 */
    II(0x100c7e8d, 0x3)   mov(edi, memd_a32(ss, ebp - 0x10));   /* mov edi, [ebp-0x10] */
    II(0x100c7e90, 0x3)   lea(edi, edi + 0xb);                  /* lea edi, [edi+0xb] */
    II(0x100c7e93, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x100c7e95, 0x1)   movsd_a32();                          /* movsd */
    II(0x100c7e96, 0x1)   movsd_a32();                          /* movsd */
    II(0x100c7e97, 0x1)   movsd_a32();                          /* movsd */
    II(0x100c7e98, 0x1)   movsd_a32();                          /* movsd */
    II(0x100c7e99, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7e9c, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x100c7e9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100c7ea2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c7ea4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c7ea5, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c7ea6, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c7ea7, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

