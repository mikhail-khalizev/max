FUNC_BEGIN(0x101331d0, 0x8c7ca58cf320cfff, 0x20, ({0x68, 0x4c, 0x1, 0, 0, 0xe8, 0x78, 0x2b, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0x1, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8d, 0x85, 0xd0, 0xfe, 0xff, 0xff, 0xe8, 0xcd, 0xf6, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x80, 0x65, 0xf8, 0xfe, 0x8d, 0x85, 0xd0, 0xfe, 0xff, 0xff, 0xe8, 0x3, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0xd0, 0xfe, 0xff, 0xff, 0xe8, 0x76, 0xfb, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101331d0, 0x5)   pushd(0x14c);                         /* push dword 0x14c */
    II(0x101331d5, 0x5)   calld(sys_check_available_stack_size, 0x32b78); /* call 0x10165d52 */
    II(0x101331da, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101331db, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101331dc, 0x1)   pushd(edx);                           /* push edx */
    II(0x101331dd, 0x1)   pushd(esi);                           /* push esi */
    II(0x101331de, 0x1)   pushd(edi);                           /* push edi */
    II(0x101331df, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101331e0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101331e2, 0x6)   sub(esp, 0x130);                      /* sub esp, 0x130 */
    II(0x101331e8, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x101331eb, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x101331ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101331f2, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x101331f5, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101331f7, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101331fa, 0x6)   lea(eax, ebp - 0x130);                /* lea eax, [ebp+0xfffffed0] */
    II(0x10133200, 0x5)   calld(0x101328d2, -0x933);            /* call 0x101328d2 */
    II(0x10133205, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10133208, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1013320c, 0x6)   lea(eax, ebp - 0x130);                /* lea eax, [ebp+0xfffffed0] */
    II(0x10133212, 0x5)   calld(0x10132f1a, -0x2fd);            /* call 0x10132f1a */
    II(0x10133217, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10133219, 0x6)   lea(eax, ebp - 0x130);                /* lea eax, [ebp+0xfffffed0] */
    II(0x1013321f, 0x5)   calld(0x10132d9a, -0x48a);            /* call 0x10132d9a */
    II(0x10133224, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10133226, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10133227, 0x1)   popd(edi);                            /* pop edi */
    II(0x10133228, 0x1)   popd(esi);                            /* pop esi */
    II(0x10133229, 0x1)   popd(edx);                            /* pop edx */
    II(0x1013322a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013322b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013322c, 0x1)   retd();                               /* ret */
FUNC_END

