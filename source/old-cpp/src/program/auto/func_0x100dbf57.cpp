FUNC_BEGIN(0x100dbf57, 0xf1ec1dca0e429bbf, 0x20, ({0x68, 0x6c, 0x1, 0, 0, 0xe8, 0xf1, 0x9d, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0x1, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xc, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x4, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0xff, 0x70, 0x1a, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2a, 0xf, 0xbf, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2a, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2a, 0xf, 0xbf, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2a, 0x83, 0xc0, 0x8, 0x50, 0xe8, 0xfa, 0xeb, 0x8, 0, 0x83, 0xc4, 0x18, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x28, 0x7d, 0x1f, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x22, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x6e, 0xf3, 0xfa, 0xff, 0x98, 0x39, 0xc2, 0x7c, 0x5, 0xe9, 0x53, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x24, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xc, 0xf2, 0xfa, 0xff, 0x66, 0x8b, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0xc1, 0xe0, 0x5, 0x5, 0x10, 0, 0, 0, 0x98, 0x50, 0xb8, 0x10, 0, 0, 0, 0x50, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xe4, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x12, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xe8, 0x58, 0xf6, 0x4, 0, 0xf, 0xbf, 0x55, 0xe4, 0x6b, 0xd2, 0x33, 0x8b, 0x92, 0xd7, 0x81, 0x1c, 0x10, 0x8d, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xe8, 0x60, 0x9e, 0x8, 0, 0xc7, 0x45, 0xf8, 0x1, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x22, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xf4, 0x39, 0xc2, 0x7d, 0x20, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x7d, 0xf1, 0xfa, 0xff, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xe4, 0x75, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xeb, 0xc3, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0xb8, 0x11, 0x1a, 0x1a, 0x10, 0x50, 0xb8, 0xa, 0, 0, 0, 0x50, 0x8d, 0x85, 0x18, 0xff, 0xff, 0xff, 0xe8, 0x10, 0x5a, 0x6, 0, 0x50, 0xe8, 0x59, 0x5f, 0x6, 0, 0x83, 0xc4, 0x10, 0xe8, 0xe2, 0xd6, 0xfa, 0xff, 0x8d, 0x9d, 0x1c, 0xff, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x3c, 0x9e, 0x8, 0, 0x31, 0xd2, 0x8d, 0x85, 0x18, 0xff, 0xff, 0xff, 0xe8, 0x28, 0x5a, 0x6, 0, 0xf, 0xbf, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0xe8, 0x67, 0x47, 0, 0, 0x66, 0x8b, 0x40, 0x19, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x24, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x48, 0xe8, 0x8c, 0x47, 0, 0, 0x66, 0x8b, 0, 0x89, 0x85, 0x14, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0xf, 0x8e, 0xbb, 0, 0, 0, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x15, 0xba, 0x15, 0x1a, 0x1a, 0x10, 0x8d, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xe8, 0xd1, 0x9d, 0x8, 0, 0xe9, 0x9b, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x85, 0x14, 0xff, 0xff, 0xff, 0x7f, 0x15, 0xba, 0x1e, 0x1a, 0x1a, 0x10, 0x8d, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xe8, 0xb0, 0x9d, 0x8, 0, 0xe9, 0x7a, 0, 0, 0, 0x66, 0x83, 0x7d, 0xe4, 0x40, 0x75, 0x1f, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x26, 0x1a, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0x50, 0xe8, 0x5a, 0x9d, 0x8, 0, 0x83, 0xc4, 0xc, 0xeb, 0x43, 0x66, 0x83, 0x7d, 0xe4, 0x3c, 0x75, 0x1f, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x31, 0x1a, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0x50, 0xe8, 0x34, 0x9d, 0x8, 0, 0x83, 0xc4, 0xc, 0xeb, 0x1d, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x3c, 0x1a, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0x50, 0xe8, 0x15, 0x9d, 0x8, 0, 0x83, 0xc4, 0xc, 0x8d, 0x95, 0xe0, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xe8, 0x31, 0x9d, 0x8, 0, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x42, 0xe0, 0x8, 0, 0xe8, 0xd, 0x91, 0xff, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x68, 0xa2, 0, 0, 0, 0xb8, 0x20, 0, 0, 0, 0x50, 0x8b, 0x45, 0xec, 0x83, 0xe8, 0x20, 0x98, 0x50, 0x8b, 0x45, 0xf0, 0xc1, 0xe0, 0x5, 0x98, 0x50, 0xb9, 0x20, 0, 0, 0, 0x8d, 0x9d, 0x1c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x12, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xe8, 0x93, 0xd8, 0, 0, 0xe9, 0x77, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x24, 0x7c, 0x21, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x22, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x24, 0xc1, 0xf8, 0x10, 0x39, 0xd0, 0x7c, 0x5, 0xe9, 0xc7, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x24, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x87, 0xef, 0xfa, 0xff, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xba, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x95, 0xdc, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x26, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x24, 0xc1, 0xe0, 0x5, 0x89, 0x85, 0xd8, 0xfe, 0xff, 0xff, 0xc7, 0x85, 0xd4, 0xfe, 0xff, 0xff, 0x1, 0, 0, 0, 0xff, 0xb5, 0xd4, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xdc, 0xfe, 0xff, 0xff, 0x8b, 0, 0x83, 0xe0, 0x10, 0x89, 0x85, 0xd0, 0xfe, 0xff, 0xff, 0xff, 0xb5, 0xd0, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xdc, 0xfe, 0xff, 0xff, 0xf6, 0, 0x10, 0x74, 0xc, 0xc7, 0x85, 0xcc, 0xfe, 0xff, 0xff, 0, 0, 0x4, 0, 0xeb, 0xa, 0xc7, 0x85, 0xcc, 0xfe, 0xff, 0xff, 0, 0, 0x2, 0, 0xff, 0xb5, 0xcc, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xd8, 0xfe, 0xff, 0xff, 0x5, 0x20, 0, 0, 0, 0x98, 0x50, 0xb8, 0x20, 0, 0, 0, 0x50, 0xf, 0xbf, 0x85, 0xd8, 0xfe, 0xff, 0xff, 0x50, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x8d, 0xd8, 0xfe, 0xff, 0xff, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x12, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xe8, 0x1f, 0x5f, 0x2, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x22, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x1f, 0xe8, 0x7e, 0x8e, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x95, 0x8e, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x38, 0xe8, 0xfe, 0x36, 0xff, 0xff, 0xeb, 0x14, 0xe8, 0x3f, 0x8e, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x38, 0xe8, 0x72, 0x37, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x22, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xb5, 0xef, 0xfa, 0xff, 0x98, 0x39, 0xc2, 0x7d, 0x1f, 0xe8, 0x27, 0x8e, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x3e, 0x8e, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3c, 0xe8, 0xa7, 0x36, 0xff, 0xff, 0xeb, 0x14, 0xe8, 0xe8, 0x8d, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3c, 0xe8, 0x1b, 0x37, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0xac, 0xb0, 0x8, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100dbf57, 0x5)   pushd(0x16c);                         /* push dword 0x16c */
    II(0x100dbf5c, 0x5)   calld(sys_check_available_stack_size, 0x89df1); /* call 0x10165d52 */
    II(0x100dbf61, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100dbf62, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100dbf63, 0x1)   pushd(edx);                           /* push edx */
    II(0x100dbf64, 0x1)   pushd(esi);                           /* push esi */
    II(0x100dbf65, 0x1)   pushd(edi);                           /* push edi */
    II(0x100dbf66, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100dbf67, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100dbf69, 0x6)   sub(esp, 0x134);                      /* sub esp, 0x134 */
    II(0x100dbf6f, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100dbf72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dbf75, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x100dbf79, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dbf7c, 0x4)   sub(ax, memw_a32(ds, edx + 0x4));     /* sub ax, [edx+0x4] */
    II(0x100dbf80, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100dbf83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dbf86, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100dbf89, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dbf8c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dbf8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dbf90, 0x3)   pushd(memd_a32(ds, eax + 0x1a));      /* push dword [eax+0x1a] */
    II(0x100dbf93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dbf96, 0x3)   mov(eax, memd_a32(ds, eax + 0x2a));   /* mov eax, [eax+0x2a] */
    II(0x100dbf99, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100dbf9c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dbf9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dbfa0, 0x3)   mov(eax, memd_a32(ds, eax + 0x2a));   /* mov eax, [eax+0x2a] */
    II(0x100dbfa3, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100dbfa5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dbfa8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dbfa9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dbfac, 0x3)   mov(eax, memd_a32(ds, eax + 0x2a));   /* mov eax, [eax+0x2a] */
    II(0x100dbfaf, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100dbfb2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dbfb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dbfb6, 0x3)   mov(eax, memd_a32(ds, eax + 0x2a));   /* mov eax, [eax+0x2a] */
    II(0x100dbfb9, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100dbfbc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dbfbd, 0x5)   calld(/* sys */ 0x1016abbc, 0x8ebfa); /* call 0x1016abbc */
    II(0x100dbfc2, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100dbfc5, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100dbfcc, 0x2)   jmpd(0x100dbfd4, 0x6);                /* jmp 0x100dbfd4 */
l_0x100dbfce:
    II(0x100dbfce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100dbfd1, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100dbfd4:
    II(0x100dbfd4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100dbfd7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dbfda, 0x4)   cmp(ax, memw_a32(ds, edx + 0x28));    /* cmp ax, [edx+0x28] */
    II(0x100dbfde, 0x2)   jged(0x100dbfff, 0x1f);               /* jge 0x100dbfff */
    II(0x100dbfe0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dbfe3, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x100dbfe6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dbfe9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100dbfed, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100dbfef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dbff2, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100dbff5, 0x5)   calld(my_2_get_count, -0x50c92);      /* call 0x1008b368 */
    II(0x100dbffa, 0x1)   cwde();                               /* cwde */
    II(0x100dbffb, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100dbffd, 0x2)   jld(0x100dc004, 0x5);                 /* jl 0x100dc004 */
l_0x100dbfff:
    II(0x100dbfff, 0x5)   jmpd(0x100dc257, 0x253);              /* jmp 0x100dc257 */
l_0x100dc004:
    II(0x100dc004, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc007, 0x4)   mov(ax, memw_a32(ds, eax + 0x24));    /* mov ax, [eax+0x24] */
    II(0x100dc00b, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100dc00e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100dc011, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc014, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100dc017, 0x5)   calld(0x1008b228, -0x50df4);          /* call 0x1008b228 */
    II(0x100dc01c, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100dc01f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100dc022, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100dc025, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x100dc028, 0x5)   add(eax, 0x10);                       /* add eax, 0x10 */
    II(0x100dc02d, 0x1)   cwde();                               /* cwde */
    II(0x100dc02e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc02f, 0x5)   mov(eax, 0x10);                       /* mov eax, 0x10 */
    II(0x100dc034, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc035, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100dc037, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100dc03c, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100dc03f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x100dc043, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc046, 0x3)   mov(edx, memd_a32(ds, edx + 0x12));   /* mov edx, [edx+0x12] */
    II(0x100dc049, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100dc04c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc04f, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100dc052, 0x5)   calld(0x1012b6af, 0x4f658);           /* call 0x1012b6af */
    II(0x100dc057, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100dc05b, 0x3)   imul(edx, edx, 0x33);                 /* imul edx, edx, 0x33 */
    II(0x100dc05e, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c81d7)); /* mov edx, [edx+0x101c81d7] */
    II(0x100dc064, 0x6)   lea(eax, ebp - 0xe4);                 /* lea eax, [ebp+0xffffff1c] */
    II(0x100dc06a, 0x5)   calld(sys_strcpy, 0x89e60);           /* call 0x10165ecf */
    II(0x100dc06f, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x1);    /* mov dword [ebp-0x8], 0x1 */
    II(0x100dc076, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100dc07d, 0x2)   jmpd(0x100dc085, 0x6);                /* jmp 0x100dc085 */
l_0x100dc07f:
    II(0x100dc07f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100dc082, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100dc085:
    II(0x100dc085, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc088, 0x3)   mov(edx, memd_a32(ds, eax + 0x22));   /* mov edx, [eax+0x22] */
    II(0x100dc08b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100dc08e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100dc092, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100dc094, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100dc098, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100dc09a, 0x2)   jged(0x100dc0bc, 0x20);               /* jge 0x100dc0bc */
    II(0x100dc09c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100dc0a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc0a3, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100dc0a6, 0x5)   calld(0x1008b228, -0x50e83);          /* call 0x1008b228 */
    II(0x100dc0ab, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100dc0ae, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1c));    /* cmp ax, [ebp-0x1c] */
    II(0x100dc0b2, 0x2)   jnzd(0x100dc0ba, 0x6);                /* jnz 0x100dc0ba */
    II(0x100dc0b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dc0b7, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100dc0ba:
    II(0x100dc0ba, 0x2)   jmpd(0x100dc07f, -0x3d);              /* jmp 0x100dc07f */
l_0x100dc0bc:
    II(0x100dc0bc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100dc0c0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc0c1, 0x5)   mov(eax, 0x101a1a11);                 /* mov eax, 0x101a1a11 */ /* " %i" */
    II(0x100dc0c6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc0c7, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x100dc0cc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc0cd, 0x6)   lea(eax, ebp - 0xe8);                 /* lea eax, [ebp+0xffffff18] */
    II(0x100dc0d3, 0x5)   calld(my_string_ctor, 0x65a10);       /* call 0x10141ae8 */
    II(0x100dc0d8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc0d9, 0x5)   calld(0x10142037, 0x65f59);           /* call 0x10142037 */
    II(0x100dc0de, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100dc0e1, 0x5)   calld(my_strobj_c_str_v2, -0x5291e);  /* call 0x100897c8 */
    II(0x100dc0e6, 0x6)   lea(ebx, ebp - 0xe4);                 /* lea ebx, [ebp+0xffffff1c] */
    II(0x100dc0ec, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dc0ee, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100dc0f0, 0x5)   calld(sys_strcat, 0x89e3c);           /* call 0x10165f31 */
    II(0x100dc0f5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dc0f7, 0x6)   lea(eax, ebp - 0xe8);                 /* lea eax, [ebp+0xffffff18] */
    II(0x100dc0fd, 0x5)   calld(my_string_dtor, 0x65a28);       /* call 0x10141b2a */
    II(0x100dc102, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100dc106, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc109, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100dc10c, 0x5)   calld(0x100e0878, 0x4767);            /* call 0x100e0878 */
    II(0x100dc111, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x100dc115, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100dc118, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc11b, 0x4)   mov(ax, memw_a32(ds, eax + 0x24));    /* mov ax, [eax+0x24] */
    II(0x100dc11f, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100dc122, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100dc125, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc128, 0x3)   add(eax, 0x48);                       /* add eax, 0x48 */
    II(0x100dc12b, 0x5)   calld(0x100e08bc, 0x478c);            /* call 0x100e08bc */
    II(0x100dc130, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100dc133, 0x6)   mov(memd_a32(ss, ebp - 0xec), eax);   /* mov [ebp+0xffffff14], eax */
    II(0x100dc139, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100dc13d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100dc13f, 0x6)   jled(0x100dc200, 0xbb);               /* jle dword 0x100dc200 */
    II(0x100dc145, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x100dc14c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100dc14e, 0x2)   jnzd(0x100dc165, 0x15);               /* jnz 0x100dc165 */
    II(0x100dc150, 0x5)   mov(edx, 0x101a1a15);                 /* mov edx, 0x101a1a15 */ /* "\n(Empty)" */
    II(0x100dc155, 0x6)   lea(eax, ebp - 0xe4);                 /* lea eax, [ebp+0xffffff1c] */
    II(0x100dc15b, 0x5)   calld(sys_strcat, 0x89dd1);           /* call 0x10165f31 */
    II(0x100dc160, 0x5)   jmpd(0x100dc200, 0x9b);               /* jmp 0x100dc200 */
l_0x100dc165:
    II(0x100dc165, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100dc168, 0x7)   cmp(ax, memw_a32(ss, ebp - 0xec));    /* cmp ax, [ebp+0xffffff14] */
    II(0x100dc16f, 0x2)   jgd(0x100dc186, 0x15);                /* jg 0x100dc186 */
    II(0x100dc171, 0x5)   mov(edx, 0x101a1a1e);                 /* mov edx, 0x101a1a1e */ /* "\n(Full)" */
    II(0x100dc176, 0x6)   lea(eax, ebp - 0xe4);                 /* lea eax, [ebp+0xffffff1c] */
    II(0x100dc17c, 0x5)   calld(sys_strcat, 0x89db0);           /* call 0x10165f31 */
    II(0x100dc181, 0x5)   jmpd(0x100dc200, 0x7a);               /* jmp 0x100dc200 */
l_0x100dc186:
    II(0x100dc186, 0x5)   cmp(memw_a32(ss, ebp - 0x1c), 0x40);  /* cmp word [ebp-0x1c], 0x40 */
    II(0x100dc18b, 0x2)   jnzd(0x100dc1ac, 0x1f);               /* jnz 0x100dc1ac */
    II(0x100dc18d, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x100dc194, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc195, 0x5)   mov(eax, 0x101a1a26);                 /* mov eax, 0x101a1a26 */ /* "\n(%i Fuel)" */
    II(0x100dc19a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc19b, 0x6)   lea(eax, ebp - 0x120);                /* lea eax, [ebp+0xfffffee0] */
    II(0x100dc1a1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc1a2, 0x5)   calld(sys_sprintf, 0x89d5a);          /* call 0x10165f01 */
    II(0x100dc1a7, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100dc1aa, 0x2)   jmpd(0x100dc1ef, 0x43);               /* jmp 0x100dc1ef */
l_0x100dc1ac:
    II(0x100dc1ac, 0x5)   cmp(memw_a32(ss, ebp - 0x1c), 0x3c);  /* cmp word [ebp-0x1c], 0x3c */
    II(0x100dc1b1, 0x2)   jnzd(0x100dc1d2, 0x1f);               /* jnz 0x100dc1d2 */
    II(0x100dc1b3, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x100dc1ba, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc1bb, 0x5)   mov(eax, 0x101a1a31);                 /* mov eax, 0x101a1a31 */ /* "\n(%i Gold)" */
    II(0x100dc1c0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc1c1, 0x6)   lea(eax, ebp - 0x120);                /* lea eax, [ebp+0xfffffee0] */
    II(0x100dc1c7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc1c8, 0x5)   calld(sys_sprintf, 0x89d34);          /* call 0x10165f01 */
    II(0x100dc1cd, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100dc1d0, 0x2)   jmpd(0x100dc1ef, 0x1d);               /* jmp 0x100dc1ef */
l_0x100dc1d2:
    II(0x100dc1d2, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x100dc1d9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc1da, 0x5)   mov(eax, 0x101a1a3c);                 /* mov eax, 0x101a1a3c */ /* "\n(%i Mat.)" */
    II(0x100dc1df, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc1e0, 0x6)   lea(eax, ebp - 0x120);                /* lea eax, [ebp+0xfffffee0] */
    II(0x100dc1e6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc1e7, 0x5)   calld(sys_sprintf, 0x89d15);          /* call 0x10165f01 */
    II(0x100dc1ec, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
l_0x100dc1ef:
    II(0x100dc1ef, 0x6)   lea(edx, ebp - 0x120);                /* lea edx, [ebp+0xfffffee0] */
    II(0x100dc1f5, 0x6)   lea(eax, ebp - 0xe4);                 /* lea eax, [ebp+0xffffff1c] */
    II(0x100dc1fb, 0x5)   calld(sys_strcat, 0x89d31);           /* call 0x10165f31 */
l_0x100dc200:
    II(0x100dc200, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100dc205, 0x5)   calld(/* sys */ 0x1016a24c, 0x8e042); /* call 0x1016a24c */
    II(0x100dc20a, 0x5)   calld(0x100d531c, -0x6ef3);           /* call 0x100d531c */
    II(0x100dc20f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100dc214, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc215, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100dc217, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc218, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x100dc21d, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100dc222, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc223, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100dc226, 0x3)   sub(eax, 0x20);                       /* sub eax, 0x20 */
    II(0x100dc229, 0x1)   cwde();                               /* cwde */
    II(0x100dc22a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc22b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100dc22e, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x100dc231, 0x1)   cwde();                               /* cwde */
    II(0x100dc232, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc233, 0x5)   mov(ecx, 0x20);                       /* mov ecx, 0x20 */
    II(0x100dc238, 0x6)   lea(ebx, ebp - 0xe4);                 /* lea ebx, [ebp+0xffffff1c] */
    II(0x100dc23e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc241, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x100dc244, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100dc247, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc24a, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100dc24d, 0x5)   calld(0x100e9ae5, 0xd893);            /* call 0x100e9ae5 */
    II(0x100dc252, 0x5)   jmpd(0x100dbfce, -0x289);             /* jmp 0x100dbfce */
l_0x100dc257:
    II(0x100dc257, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc25a, 0x4)   mov(dx, memw_a32(ds, eax + 0x26));    /* mov dx, [eax+0x26] */
//    II(0x100dc25e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc261, 0x4)   cmp(dx, memw_a32(ds, eax + 0x24));    /* cmp dx, [eax+0x24] */
    II(0x100dc265, 0x2)   jld(0x100dc288, 0x21);                /* jl 0x100dc288 */
    II(0x100dc267, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc26a, 0x3)   mov(edx, memd_a32(ds, eax + 0x22));   /* mov edx, [eax+0x22] */
    II(0x100dc26d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100dc270, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc273, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x100dc276, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dc279, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100dc27b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc27e, 0x3)   mov(eax, memd_a32(ds, eax + 0x24));   /* mov eax, [eax+0x24] */
    II(0x100dc281, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dc284, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100dc286, 0x2)   jld(0x100dc28d, 0x5);                 /* jl 0x100dc28d */
l_0x100dc288:
    II(0x100dc288, 0x5)   jmpd(0x100dc354, 0xc7);               /* jmp 0x100dc354 */
l_0x100dc28d:
    II(0x100dc28d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc290, 0x3)   mov(edx, memd_a32(ds, eax + 0x24));   /* mov edx, [eax+0x24] */
    II(0x100dc293, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100dc296, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc299, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100dc29c, 0x5)   calld(0x1008b228, -0x51079);          /* call 0x1008b228 */
    II(0x100dc2a1, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100dc2a4, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100dc2a7, 0x5)   mov(edx, 0x101c81c0);                 /* mov edx, 0x101c81c0 */
    II(0x100dc2ac, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100dc2ae, 0x6)   mov(memd_a32(ss, ebp - 0x124), edx);  /* mov [ebp+0xfffffedc], edx */
    II(0x100dc2b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc2b7, 0x4)   mov(ax, memw_a32(ds, eax + 0x26));    /* mov ax, [eax+0x26] */
    II(0x100dc2bb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc2be, 0x4)   sub(ax, memw_a32(ds, edx + 0x24));    /* sub ax, [edx+0x24] */
    II(0x100dc2c2, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x100dc2c5, 0x6)   mov(memd_a32(ss, ebp - 0x128), eax);  /* mov [ebp+0xfffffed8], eax */
    II(0x100dc2cb, 0xa)   mov(memd_a32(ss, ebp - 0x12c), 0x1);  /* mov dword [ebp+0xfffffed4], 0x1 */
    II(0x100dc2d5, 0x6)   pushd(memd_a32(ss, ebp - 0x12c));     /* push dword [ebp+0xfffffed4] */
    II(0x100dc2db, 0x6)   mov(eax, memd_a32(ss, ebp - 0x124));  /* mov eax, [ebp+0xfffffedc] */
    II(0x100dc2e1, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100dc2e3, 0x3)   and_(eax, 0x10);                      /* and eax, 0x10 */
    II(0x100dc2e6, 0x6)   mov(memd_a32(ss, ebp - 0x130), eax);  /* mov [ebp+0xfffffed0], eax */
    II(0x100dc2ec, 0x6)   pushd(memd_a32(ss, ebp - 0x130));     /* push dword [ebp+0xfffffed0] */
    II(0x100dc2f2, 0x6)   mov(eax, memd_a32(ss, ebp - 0x124));  /* mov eax, [ebp+0xfffffedc] */
    II(0x100dc2f8, 0x3)   test(memb_a32(ds, eax), 0x10);        /* test byte [eax], 0x10 */
    II(0x100dc2fb, 0x2)   jzd(0x100dc309, 0xc);                 /* jz 0x100dc309 */
    II(0x100dc2fd, 0xa)   mov(memd_a32(ss, ebp - 0x134), 0x40000); /* mov dword [ebp+0xfffffecc], 0x40000 */
    II(0x100dc307, 0x2)   jmpd(0x100dc313, 0xa);                /* jmp 0x100dc313 */
l_0x100dc309:
    II(0x100dc309, 0xa)   mov(memd_a32(ss, ebp - 0x134), 0x20000); /* mov dword [ebp+0xfffffecc], 0x20000 */
l_0x100dc313:
    II(0x100dc313, 0x6)   pushd(memd_a32(ss, ebp - 0x134));     /* push dword [ebp+0xfffffecc] */
    II(0x100dc319, 0x6)   mov(eax, memd_a32(ss, ebp - 0x128));  /* mov eax, [ebp+0xfffffed8] */
    II(0x100dc31f, 0x5)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100dc324, 0x1)   cwde();                               /* cwde */
    II(0x100dc325, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc326, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100dc32b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc32c, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x128)); /* movsx eax, word [ebp+0xfffffed8] */
    II(0x100dc333, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc334, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100dc336, 0x1)   pushd(eax);                           /* push eax */
    II(0x100dc337, 0x7)   movsx(ecx, memw_a32(ss, ebp - 0x128)); /* movsx ecx, word [ebp+0xfffffed8] */
    II(0x100dc33e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100dc340, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc343, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x100dc346, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100dc349, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc34c, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100dc34f, 0x5)   calld(0x10102273, 0x25f1f);           /* call 0x10102273 */
l_0x100dc354:
    II(0x100dc354, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc357, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x100dc35a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dc35d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100dc35f, 0x2)   jled(0x100dc380, 0x1f);               /* jle 0x100dc380 */
    II(0x100dc361, 0x5)   calld(0x100d51e4, -0x7182);           /* call 0x100d51e4 */
    II(0x100dc366, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100dc368, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100dc36a, 0x5)   calld(0x100d5204, -0x716b);           /* call 0x100d5204 */
    II(0x100dc36f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dc371, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dc373, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc376, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x100dc379, 0x5)   calld(0x100cfa7c, -0xc902);           /* call 0x100cfa7c */
    II(0x100dc37e, 0x2)   jmpd(0x100dc394, 0x14);               /* jmp 0x100dc394 */
l_0x100dc380:
    II(0x100dc380, 0x5)   calld(0x100d51c4, -0x71c1);           /* call 0x100d51c4 */
    II(0x100dc385, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dc387, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dc389, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc38c, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x100dc38f, 0x5)   calld(0x100cfb06, -0xc88e);           /* call 0x100cfb06 */
l_0x100dc394:
    II(0x100dc394, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc397, 0x3)   mov(edx, memd_a32(ds, eax + 0x22));   /* mov edx, [eax+0x22] */
    II(0x100dc39a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100dc39d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc3a0, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x100dc3a3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dc3a6, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100dc3a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc3ab, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100dc3ae, 0x5)   calld(my_2_get_count, -0x5104b);      /* call 0x1008b368 */
    II(0x100dc3b3, 0x1)   cwde();                               /* cwde */
    II(0x100dc3b4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100dc3b6, 0x2)   jged(0x100dc3d7, 0x1f);               /* jge 0x100dc3d7 */
    II(0x100dc3b8, 0x5)   calld(0x100d51e4, -0x71d9);           /* call 0x100d51e4 */
    II(0x100dc3bd, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100dc3bf, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100dc3c1, 0x5)   calld(0x100d5204, -0x71c2);           /* call 0x100d5204 */
    II(0x100dc3c6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dc3c8, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dc3ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc3cd, 0x3)   mov(eax, memd_a32(ds, eax + 0x3c));   /* mov eax, [eax+0x3c] */
    II(0x100dc3d0, 0x5)   calld(0x100cfa7c, -0xc959);           /* call 0x100cfa7c */
    II(0x100dc3d5, 0x2)   jmpd(0x100dc3eb, 0x14);               /* jmp 0x100dc3eb */
l_0x100dc3d7:
    II(0x100dc3d7, 0x5)   calld(0x100d51c4, -0x7218);           /* call 0x100d51c4 */
    II(0x100dc3dc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dc3de, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dc3e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc3e3, 0x3)   mov(eax, memd_a32(ds, eax + 0x3c));   /* mov eax, [eax+0x3c] */
    II(0x100dc3e6, 0x5)   calld(0x100cfb06, -0xc8e5);           /* call 0x100cfb06 */
l_0x100dc3eb:
    II(0x100dc3eb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc3ee, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x100dc3f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc3f4, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100dc3f7, 0x5)   calld(sys_display_draw_1, 0x8b0ac);   /* call 0x101674a8 */
    II(0x100dc3fc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100dc3fe, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100dc3ff, 0x1)   popd(edi);                            /* pop edi */
    II(0x100dc400, 0x1)   popd(esi);                            /* pop esi */
    II(0x100dc401, 0x1)   popd(edx);                            /* pop edx */
    II(0x100dc402, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100dc403, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100dc404, 0x1)   retd();                               /* ret */
FUNC_END

