FUNC_BEGIN(0x100d8727, 0x5500495d5bc963d9, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0x21, 0xd6, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x89, 0x45, 0xfc, 0xe8, 0x7d, 0xca, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xe8, 0xb0, 0x73, 0xff, 0xff, 0xe8, 0x69, 0xca, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xa, 0xe8, 0x9c, 0x73, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0xe, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100d8727, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100d872c, 0x5)   calld(sys_check_available_stack_size, 0x8d621); /* call 0x10165d52 */
    II(0x100d8731, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d8732, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d8733, 0x1)   pushd(edx);                           /* push edx */
    II(0x100d8734, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d8735, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d8736, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d8737, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d8739, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x100d873f, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100d8742, 0x5)   calld(0x100d51c4, -0x3583);           /* call 0x100d51c4 */
    II(0x100d8747, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d8749, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100d874b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d874e, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d8751, 0x5)   calld(0x100cfb06, -0x8c50);           /* call 0x100cfb06 */
    II(0x100d8756, 0x5)   calld(0x100d51c4, -0x3597);           /* call 0x100d51c4 */
    II(0x100d875b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d875d, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100d875f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d8762, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x100d8765, 0x5)   calld(0x100cfb06, -0x8c64);           /* call 0x100cfb06 */
    II(0x100d876a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d876d, 0x4)   mov(memb_a32(ds, eax + 0xe), 0);      /* mov byte [eax+0xe], 0x0 */
    II(0x100d8771, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d8773, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d8774, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d8775, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d8776, 0x1)   popd(edx);                            /* pop edx */
    II(0x100d8777, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d8778, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d8779, 0x1)   retd();                               /* ret */
FUNC_END

