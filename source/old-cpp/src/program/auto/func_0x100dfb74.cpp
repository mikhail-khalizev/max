FUNC_BEGIN(0x100dfb74, 0xc19d4a6abb1fe870, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xd4, 0x61, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x4, 0xc1, 0xfb, 0x10, 0xba, 0x8, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4e, 0x79, 0x6, 0, 0xba, 0xd, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x2a, 0x78, 0x6, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x5d, 0x7d, 0x52, 0xba, 0x19, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5, 0x78, 0x6, 0, 0xf, 0xbf, 0x4d, 0xf0, 0xbb, 0x40, 0x71, 0x1c, 0x10, 0xba, 0x1e, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf4, 0x7a, 0x6, 0, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x8, 0x1, 0xd0, 0xe8, 0x89, 0x6b, 0xf9, 0xff, 0xba, 0x23, 0x1b, 0x1a, 0x10, 0x8b, 0x4d, 0xfc, 0x89, 0xc3, 0x89, 0xc8, 0xe8, 0x56, 0x79, 0x6, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x2a, 0x78, 0x6, 0, 0xeb, 0x9f, 0x8b, 0x45, 0xfc, 0xe8, 0x20, 0x78, 0x6, 0, 0xba, 0x2a, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xab, 0x77, 0x6, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x5d, 0x7d, 0x55, 0xba, 0x39, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x86, 0x77, 0x6, 0, 0xf, 0xbf, 0x4d, 0xf0, 0xbb, 0x40, 0x71, 0x1c, 0x10, 0xba, 0x3e, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x75, 0x7a, 0x6, 0, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x81, 0xc2, 0x7c, 0x1, 0, 0, 0x1, 0xd0, 0xe8, 0x7, 0x6b, 0xf9, 0xff, 0xba, 0x43, 0x1b, 0x1a, 0x10, 0x8b, 0x4d, 0xfc, 0x89, 0xc3, 0x89, 0xc8, 0xe8, 0xd4, 0x78, 0x6, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa8, 0x77, 0x6, 0, 0xeb, 0x9c, 0x8b, 0x45, 0xfc, 0xe8, 0x9e, 0x77, 0x6, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x54, 0x9, 0, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0xba, 0x4a, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x16, 0x77, 0x6, 0, 0x8b, 0x45, 0xf8, 0x5, 0xf0, 0x2, 0, 0, 0xe8, 0x1b, 0x10, 0, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x67, 0x8, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xd, 0x6f, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x7c, 0xb0, 0x5, 0, 0x84, 0xc0, 0x74, 0x19, 0x8d, 0x45, 0xe8, 0xe8, 0xe3, 0x7, 0, 0, 0x89, 0xc3, 0xba, 0x54, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5a, 0x78, 0x6, 0, 0xeb, 0xd1, 0x8b, 0x45, 0xfc, 0xe8, 0x2c, 0x77, 0x6, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x18, 0x7, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100dfb74, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100dfb79, 0x5)   calld(sys_check_available_stack_size, 0x861d4); /* call 0x10165d52 */
    II(0x100dfb7e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100dfb7f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100dfb80, 0x1)   pushd(esi);                           /* push esi */
    II(0x100dfb81, 0x1)   pushd(edi);                           /* push edi */
    II(0x100dfb82, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100dfb83, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100dfb85, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100dfb8b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100dfb8e, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100dfb91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dfb94, 0x3)   mov(ebx, memd_a32(ds, eax + 0x4));    /* mov ebx, [eax+0x4] */
    II(0x100dfb97, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100dfb9a, 0x5)   mov(edx, 0x101a1b08);                 /* mov edx, 0x101a1b08 */ /* "gold" */
    II(0x100dfb9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfba2, 0x5)   calld(0x101474f5, 0x6794e);           /* call 0x101474f5 */
    II(0x100dfba7, 0x5)   mov(edx, 0x101a1b0d);                 /* mov edx, 0x101a1b0d */ /* "base_values" */
    II(0x100dfbac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfbaf, 0x5)   calld(0x101473de, 0x6782a);           /* call 0x101473de */
    II(0x100dfbb4, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100dfbbb, 0x2)   jmpd(0x100dfbc3, 0x6);                /* jmp 0x100dfbc3 */
l_0x100dfbbd:
    II(0x100dfbbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100dfbc0, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100dfbc3:
    II(0x100dfbc3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100dfbc7, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x100dfbca, 0x2)   jged(0x100dfc1e, 0x52);               /* jge 0x100dfc1e */
    II(0x100dfbcc, 0x5)   mov(edx, 0x101a1b19);                 /* mov edx, 0x101a1b19 */ /* "unit" */
    II(0x100dfbd1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfbd4, 0x5)   calld(0x101473de, 0x67805);           /* call 0x101473de */
    II(0x100dfbd9, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x100dfbdd, 0x5)   mov(ebx, 0x101c7140);                 /* mov ebx, 0x101c7140 */
    II(0x100dfbe2, 0x5)   mov(edx, 0x101a1b1e);                 /* mov edx, 0x101a1b1e */ /* "type" */
    II(0x100dfbe7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfbea, 0x5)   calld(0x101476e3, 0x67af4);           /* call 0x101476e3 */
    II(0x100dfbef, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100dfbf3, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dfbf6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100dfbf9, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x100dfbfc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100dfbfe, 0x5)   calld(0x1007678c, -0x69477);          /* call 0x1007678c */
    II(0x100dfc03, 0x5)   mov(edx, 0x101a1b23);                 /* mov edx, 0x101a1b23 */ /* "values" */
    II(0x100dfc08, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x100dfc0b, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100dfc0d, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100dfc0f, 0x5)   calld(0x1014756a, 0x67956);           /* call 0x1014756a */
    II(0x100dfc14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfc17, 0x5)   calld(0x10147446, 0x6782a);           /* call 0x10147446 */
    II(0x100dfc1c, 0x2)   jmpd(0x100dfbbd, -0x61);              /* jmp 0x100dfbbd */
l_0x100dfc1e:
    II(0x100dfc1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfc21, 0x5)   calld(0x10147446, 0x67820);           /* call 0x10147446 */
    II(0x100dfc26, 0x5)   mov(edx, 0x101a1b2a);                 /* mov edx, 0x101a1b2a */ /* "current_values" */
    II(0x100dfc2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfc2e, 0x5)   calld(0x101473de, 0x677ab);           /* call 0x101473de */
    II(0x100dfc33, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100dfc3a, 0x2)   jmpd(0x100dfc42, 0x6);                /* jmp 0x100dfc42 */
l_0x100dfc3c:
    II(0x100dfc3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100dfc3f, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100dfc42:
    II(0x100dfc42, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100dfc46, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x100dfc49, 0x2)   jged(0x100dfca0, 0x55);               /* jge 0x100dfca0 */
    II(0x100dfc4b, 0x5)   mov(edx, 0x101a1b39);                 /* mov edx, 0x101a1b39 */ /* "unit" */
    II(0x100dfc50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfc53, 0x5)   calld(0x101473de, 0x67786);           /* call 0x101473de */
    II(0x100dfc58, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x100dfc5c, 0x5)   mov(ebx, 0x101c7140);                 /* mov ebx, 0x101c7140 */
    II(0x100dfc61, 0x5)   mov(edx, 0x101a1b3e);                 /* mov edx, 0x101a1b3e */ /* "type" */
    II(0x100dfc66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfc69, 0x5)   calld(0x101476e3, 0x67a75);           /* call 0x101476e3 */
    II(0x100dfc6e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100dfc72, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dfc75, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100dfc78, 0x6)   add(edx, 0x17c);                      /* add edx, 0x17c */
    II(0x100dfc7e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100dfc80, 0x5)   calld(0x1007678c, -0x694f9);          /* call 0x1007678c */
    II(0x100dfc85, 0x5)   mov(edx, 0x101a1b43);                 /* mov edx, 0x101a1b43 */ /* "values" */
    II(0x100dfc8a, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x100dfc8d, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100dfc8f, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100dfc91, 0x5)   calld(0x1014756a, 0x678d4);           /* call 0x1014756a */
    II(0x100dfc96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfc99, 0x5)   calld(0x10147446, 0x677a8);           /* call 0x10147446 */
    II(0x100dfc9e, 0x2)   jmpd(0x100dfc3c, -0x64);              /* jmp 0x100dfc3c */
l_0x100dfca0:
    II(0x100dfca0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfca3, 0x5)   calld(0x10147446, 0x6779e);           /* call 0x10147446 */
    II(0x100dfca8, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100dfcac, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100dfcaf, 0x5)   calld(0x100e0608, 0x954);             /* call 0x100e0608 */
    II(0x100dfcb4, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100dfcb7, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100dfcbb, 0x5)   mov(edx, 0x101a1b4a);                 /* mov edx, 0x101a1b4a */ /* "complexes" */
    II(0x100dfcc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfcc3, 0x5)   calld(0x101473de, 0x67716);           /* call 0x101473de */
    II(0x100dfcc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dfccb, 0x5)   add(eax, 0x2f0);                      /* add eax, 0x2f0 */
    II(0x100dfcd0, 0x5)   calld(0x100e0cf0, 0x101b);            /* call 0x100e0cf0 */
    II(0x100dfcd5, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100dfcd8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dfcda, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100dfcdc, 0x5)   calld(0x100e0548, 0x867);             /* call 0x100e0548 */
    II(0x100dfce1, 0x2)   jmpd(0x100dfceb, 0x8);                /* jmp 0x100dfceb */
l_0x100dfce3:
    II(0x100dfce3, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100dfce6, 0x5)   calld(0x10076bf8, -0x690f3);          /* call 0x10076bf8 */
l_0x100dfceb:
    II(0x100dfceb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfced, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100dfcf0, 0x5)   calld(0x1013ad71, 0x5b07c);           /* call 0x1013ad71 */
    II(0x100dfcf5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100dfcf7, 0x2)   jzd(0x100dfd12, 0x19);                /* jz 0x100dfd12 */
    II(0x100dfcf9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100dfcfc, 0x5)   calld(0x100e04e4, 0x7e3);             /* call 0x100e04e4 */
    II(0x100dfd01, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100dfd03, 0x5)   mov(edx, 0x101a1b54);                 /* mov edx, 0x101a1b54 */ /* "complex" */
    II(0x100dfd08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfd0b, 0x5)   calld(0x1014756a, 0x6785a);           /* call 0x1014756a */
    II(0x100dfd10, 0x2)   jmpd(0x100dfce3, -0x2f);              /* jmp 0x100dfce3 */
l_0x100dfd12:
    II(0x100dfd12, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dfd15, 0x5)   calld(0x10147446, 0x6772c);           /* call 0x10147446 */
    II(0x100dfd1a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfd1c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100dfd1f, 0x5)   calld(0x100e043c, 0x718);             /* call 0x100e043c */
    II(0x100dfd24, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100dfd26, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100dfd27, 0x1)   popd(edi);                            /* pop edi */
    II(0x100dfd28, 0x1)   popd(esi);                            /* pop esi */
    II(0x100dfd29, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100dfd2a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100dfd2b, 0x1)   retd();                               /* ret */
FUNC_END

