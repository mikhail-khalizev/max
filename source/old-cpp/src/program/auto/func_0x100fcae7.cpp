FUNC_BEGIN(0x100fcae7, 0xdbdbc5088e0853d9, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x61, 0x92, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xe4, 0xe8, 0xe6, 0x9f, 0xf7, 0xff, 0xb8, 0x1d, 0, 0, 0, 0xe8, 0xc8, 0x94, 0xf7, 0xff, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xe8, 0xe8, 0xd1, 0x9f, 0xf7, 0xff, 0xc6, 0x45, 0xf8, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0xc, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x2, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0xc2, 0xe8, 0x59, 0x93, 0x6, 0, 0x42, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x66, 0x89, 0x45, 0xe4, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0xc, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0xc2, 0xe8, 0x35, 0x93, 0x6, 0, 0x42, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x66, 0x89, 0x45, 0xe6, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xf4, 0xeb, 0x21, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0xc, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x2, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xf4, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xfe, 0, 0, 0, 0x8b, 0x45, 0xe6, 0x89, 0x45, 0xec, 0x80, 0x7d, 0xf8, 0, 0x74, 0x1b, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0xc, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xec, 0x1, 0xc2, 0x89, 0x55, 0xec, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xe, 0x1, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xa0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0xe, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0xe8, 0x95, 0x92, 0x6, 0, 0x42, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0xf7, 0xd8, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xf4, 0x1, 0xd0, 0x66, 0x89, 0x45, 0xe8, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0xe, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0xe8, 0x5c, 0x92, 0x6, 0, 0x42, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0xf7, 0xd8, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xd0, 0x66, 0x89, 0x45, 0xea, 0xf, 0xbf, 0x4d, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xa, 0xe8, 0xbe, 0xf6, 0xff, 0xff, 0xf, 0xbf, 0xd8, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0xe0, 0xe8, 0xe8, 0x91, 0xf7, 0xff, 0x8b, 0x75, 0xfc, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x6e, 0xfa, 0xff, 0xff, 0xe9, 0x46, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0, 0x75, 0x6, 0xc6, 0x45, 0xdc, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xdc, 0, 0x8a, 0x45, 0xdc, 0x88, 0x45, 0xf8, 0xe9, 0xd1, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100fcae7, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x100fcaec, 0x5)   calld(sys_check_available_stack_size, 0x69261); /* call 0x10165d52 */
    II(0x100fcaf1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100fcaf2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100fcaf3, 0x1)   pushd(edx);                           /* push edx */
    II(0x100fcaf4, 0x1)   pushd(esi);                           /* push esi */
    II(0x100fcaf5, 0x1)   pushd(edi);                           /* push edi */
    II(0x100fcaf6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100fcaf7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100fcaf9, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100fcaff, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100fcb02, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100fcb05, 0x5)   calld(my_ctor_0x101b4184, -0x8601a);  /* call 0x10076af0 */
    II(0x100fcb0a, 0x5)   mov(eax, 0x1d);                       /* mov eax, 0x1d */
    II(0x100fcb0f, 0x5)   calld(0x10075fdc, -0x86b38);          /* call 0x10075fdc */
    II(0x100fcb14, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100fcb17, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100fcb1a, 0x5)   calld(my_ctor_0x101b4184, -0x8602f);  /* call 0x10076af0 */
    II(0x100fcb1f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100fcb23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fcb26, 0x3)   mov(edx, memd_a32(ds, eax + 0xc));    /* mov edx, [eax+0xc] */
    II(0x100fcb29, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fcb2c, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100fcb2f, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x100fcb34, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fcb36, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fcb39, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100fcb3b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fcb3d, 0x5)   calld(/* sys */ 0x10165e9b, 0x69359); /* call 0x10165e9b */
    II(0x100fcb42, 0x1)   inc(edx);                             /* inc edx */
    II(0x100fcb43, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100fcb46, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100fcb49, 0x4)   mov(memw_a32(ss, ebp - 0x1c), ax);    /* mov [ebp-0x1c], ax */
    II(0x100fcb4d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100fcb50, 0x3)   mov(edx, memd_a32(ds, edx + 0xc));    /* mov edx, [edx+0xc] */
    II(0x100fcb53, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fcb56, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fcb58, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fcb5b, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100fcb5d, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100fcb5f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fcb61, 0x5)   calld(/* sys */ 0x10165e9b, 0x69335); /* call 0x10165e9b */
    II(0x100fcb66, 0x1)   inc(edx);                             /* inc edx */
    II(0x100fcb67, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100fcb6a, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100fcb6d, 0x4)   mov(memw_a32(ss, ebp - 0x1a), ax);    /* mov [ebp-0x1a], ax */
    II(0x100fcb71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100fcb74, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100fcb77, 0x2)   jmpd(0x100fcb9a, 0x21);               /* jmp 0x100fcb9a */
l_0x100fcb79:
    II(0x100fcb79, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100fcb7c, 0x3)   mov(edx, memd_a32(ds, edx + 0xc));    /* mov edx, [edx+0xc] */
    II(0x100fcb7f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fcb82, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100fcb85, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x100fcb8a, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fcb8c, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fcb8f, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100fcb91, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100fcb95, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fcb97, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
l_0x100fcb9a:
    II(0x100fcb9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fcb9d, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100fcba4, 0x6)   jged(0x100fcca8, 0xfe);               /* jge dword 0x100fcca8 */
    II(0x100fcbaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x100fcbad, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100fcbb0, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x100fcbb4, 0x2)   jzd(0x100fcbd1, 0x1b);                /* jz 0x100fcbd1 */
    II(0x100fcbb6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100fcbb9, 0x3)   mov(edx, memd_a32(ds, edx + 0xc));    /* mov edx, [edx+0xc] */
    II(0x100fcbbc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fcbbf, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fcbc1, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fcbc4, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100fcbc6, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100fcbc8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100fcbcc, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fcbce, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
l_0x100fcbd1:
    II(0x100fcbd1, 0x2)   jmpd(0x100fcbdd, 0xa);                /* jmp 0x100fcbdd */
l_0x100fcbd3:
    II(0x100fcbd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fcbd6, 0x4)   mov(ax, memw_a32(ds, eax + 0xe));     /* mov ax, [eax+0xe] */
    II(0x100fcbda, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
l_0x100fcbdd:
    II(0x100fcbdd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100fcbe0, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100fcbe7, 0x6)   jged(0x100fcc8d, 0xa0);               /* jge dword 0x100fcc8d */
    II(0x100fcbed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fcbf0, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x100fcbf3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fcbf6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fcbf9, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100fcbfc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fcbff, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fcc01, 0x5)   calld(/* sys */ 0x10165e9b, 0x69295); /* call 0x10165e9b */
    II(0x100fcc06, 0x1)   inc(edx);                             /* inc edx */
    II(0x100fcc07, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100fcc0a, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100fcc0d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fcc0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fcc12, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100fcc15, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fcc18, 0x2)   neg(eax);                             /* neg eax */
    II(0x100fcc1a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100fcc1c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100fcc20, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100fcc22, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x100fcc26, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100fcc29, 0x3)   mov(edx, memd_a32(ds, edx + 0xe));    /* mov edx, [edx+0xe] */
    II(0x100fcc2c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fcc2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fcc32, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100fcc35, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fcc38, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fcc3a, 0x5)   calld(/* sys */ 0x10165e9b, 0x6925c); /* call 0x10165e9b */
    II(0x100fcc3f, 0x1)   inc(edx);                             /* inc edx */
    II(0x100fcc40, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100fcc43, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100fcc46, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fcc48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fcc4b, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100fcc4e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fcc51, 0x2)   neg(eax);                             /* neg eax */
    II(0x100fcc53, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fcc55, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100fcc59, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100fcc5b, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x100fcc5f, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x100fcc63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100fcc66, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x100fcc69, 0x5)   calld(0x100fc32c, -0x942);            /* call 0x100fc32c */
    II(0x100fcc6e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100fcc71, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100fcc74, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100fcc77, 0x5)   calld(0x10075e64, -0x86e18);          /* call 0x10075e64 */
    II(0x100fcc7c, 0x3)   mov(esi, memd_a32(ss, ebp - 0x4));    /* mov esi, [ebp-0x4] */
    II(0x100fcc7f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fcc81, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100fcc83, 0x5)   calld(0x100fc6f6, -0x592);            /* call 0x100fc6f6 */
    II(0x100fcc88, 0x5)   jmpd(0x100fcbd3, -0xba);              /* jmp 0x100fcbd3 */
l_0x100fcc8d:
    II(0x100fcc8d, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x100fcc91, 0x2)   jnzd(0x100fcc99, 0x6);                /* jnz 0x100fcc99 */
    II(0x100fcc93, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x100fcc97, 0x2)   jmpd(0x100fcc9d, 0x4);                /* jmp 0x100fcc9d */
l_0x100fcc99:
    II(0x100fcc99, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0);     /* mov byte [ebp-0x24], 0x0 */
l_0x100fcc9d:
    II(0x100fcc9d, 0x3)   mov(al, memb_a32(ss, ebp - 0x24));    /* mov al, [ebp-0x24] */
    II(0x100fcca0, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x100fcca3, 0x5)   jmpd(0x100fcb79, -0x12f);             /* jmp 0x100fcb79 */
l_0x100fcca8:
    II(0x100fcca8, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100fccaa, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100fccab, 0x1)   popd(edi);                            /* pop edi */
    II(0x100fccac, 0x1)   popd(esi);                            /* pop esi */
    II(0x100fccad, 0x1)   popd(edx);                            /* pop edx */
    II(0x100fccae, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100fccaf, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100fccb0, 0x1)   retd();                               /* ret */
FUNC_END

