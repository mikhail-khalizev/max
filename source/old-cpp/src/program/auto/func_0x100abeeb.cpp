FUNC_BEGIN(0x100abeeb, 0x581da69c64e724fc, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x5d, 0x9e, 0xb, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x88, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xec, 0xe8, 0x4d, 0x9f, 0xfc, 0xff, 0x89, 0xc1, 0xf, 0xbe, 0x5d, 0xfc, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0xc2, 0x11, 0x7, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1a, 0xe8, 0x9c, 0xbf, 0, 0, 0x83, 0xe8, 0x1a, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x2, 0x14, 0x55, 0x1b, 0x10, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x1e, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100abeeb, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100abef0, 0x5)   calld(sys_check_available_stack_size, 0xb9e5d); /* call 0x10165d52 */
    II(0x100abef5, 0x1)   pushd(esi);                           /* push esi */
    II(0x100abef6, 0x1)   pushd(edi);                           /* push edi */
    II(0x100abef7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100abef8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100abefa, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100abf00, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100abf03, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100abf06, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100abf09, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x100abf0c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100abf0f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100abf12, 0x5)   calld(0x10075e64, -0x360b3);          /* call 0x10075e64 */
    II(0x100abf17, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100abf19, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x100abf1d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100abf20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100abf23, 0x5)   calld(0x1011d0ea, 0x711c2);           /* call 0x1011d0ea */
    II(0x100abf28, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100abf2b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100abf2e, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100abf31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100abf34, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100abf37, 0x5)   calld(0x100b7ed8, 0xbf9c);            /* call 0x100b7ed8 */
    II(0x100abf3c, 0x3)   sub(eax, 0x1a);                       /* sub eax, 0x1a */
    II(0x100abf3f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100abf42, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100abf45, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100abf48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100abf4b, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b5514); /* mov dword [eax+0x2], 0x101b5514 */
    II(0x100abf52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100abf55, 0x4)   mov(memb_a32(ds, eax + 0x1e), 0);     /* mov byte [eax+0x1e], 0x0 */
    II(0x100abf59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100abf5c, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100abf5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100abf62, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100abf64, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100abf65, 0x1)   popd(edi);                            /* pop edi */
    II(0x100abf66, 0x1)   popd(esi);                            /* pop esi */
    II(0x100abf67, 0x1)   retd();                               /* ret */
FUNC_END

