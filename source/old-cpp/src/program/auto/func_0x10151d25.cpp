FUNC_BEGIN(0x10151d25, 0xe68662006d72ab11, 0x20, ({0x68, 0x8, 0x1, 0, 0, 0xe8, 0x23, 0x40, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xe0, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xe8, 0xf, 0xbf, 0, 0x39, 0xc2, 0x74, 0x4f, 0x8b, 0x45, 0xe8, 0xf, 0xbf, 0, 0x50, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0x93, 0xde, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x20, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x82, 0x41, 0x1, 0, 0x83, 0xc4, 0x10, 0xe8, 0x79, 0x8c, 0xf7, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x8e, 0x8c, 0xf7, 0xff, 0x89, 0xc1, 0xbb, 0x1, 0, 0, 0, 0xba, 0x2, 0, 0, 0, 0x8d, 0x85, 0x20, 0xff, 0xff, 0xff, 0xe8, 0x7a, 0x3f, 0xfc, 0xff, 0x8b, 0x45, 0xe8, 0x8a, 0x50, 0x2, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x3e, 0x8b, 0x45, 0xe8, 0x8a, 0x50, 0x4, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x45, 0x8b, 0x45, 0xe8, 0x66, 0x8b, 0x50, 0x6, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x78, 0x8b, 0x45, 0xe8, 0x66, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xe8, 0x66, 0x8b, 0x50, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x43, 0x8b, 0x45, 0xe8, 0x8a, 0x50, 0x3, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x7a, 0x8b, 0x45, 0xe8, 0x66, 0x8b, 0x40, 0xc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xe8, 0x83, 0xc0, 0xe, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x74, 0xe8, 0xe3, 0xac, 0xf4, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xf4, 0x7d, 0x18, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xc0, 0x8b, 0x55, 0xec, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x74, 0xe8, 0x65, 0x94, 0xf3, 0xff, 0xeb, 0xd9, 0x8b, 0x45, 0xf8, 0xe8, 0x18, 0xf7, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10151d25, 0x5)   pushd(0x108);                         /* push dword 0x108 */
    II(0x10151d2a, 0x5)   calld(sys_check_available_stack_size, 0x14023); /* call 0x10165d52 */
    II(0x10151d2f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10151d30, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10151d31, 0x1)   pushd(esi);                           /* push esi */
    II(0x10151d32, 0x1)   pushd(edi);                           /* push edi */
    II(0x10151d33, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10151d34, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10151d36, 0x6)   sub(esp, 0xe0);                       /* sub esp, 0xe0 */
    II(0x10151d3c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10151d3f, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10151d42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151d45, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10151d48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151d4b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151d4d, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10151d50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151d53, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10151d56, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10151d58, 0x2)   jzd(0x10151da9, 0x4f);                /* jz 0x10151da9 */
    II(0x10151d5a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151d5d, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10151d60, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151d61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151d64, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10151d67, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10151d6c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151d6d, 0x5)   mov(eax, 0x101ade93);                 /* mov eax, 0x101ade93 */ /* "Build packet: expected team %i, received team %i" */
    II(0x10151d72, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151d73, 0x6)   lea(eax, ebp - 0xe0);                 /* lea eax, [ebp+0xffffff20] */
    II(0x10151d79, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151d7a, 0x5)   calld(sys_sprintf, 0x14182);          /* call 0x10165f01 */
    II(0x10151d7f, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x10151d82, 0x5)   calld(0x100caa00, -0x87387);          /* call 0x100caa00 */
    II(0x10151d87, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10151d8c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151d8d, 0x5)   calld(0x100caa20, -0x87372);          /* call 0x100caa20 */
    II(0x10151d92, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10151d94, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10151d99, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x10151d9e, 0x6)   lea(eax, ebp - 0xe0);                 /* lea eax, [ebp+0xffffff20] */
    II(0x10151da4, 0x5)   calld(0x10115d23, -0x3c086);          /* call 0x10115d23 */
l_0x10151da9:
    II(0x10151da9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151dac, 0x3)   mov(dl, memb_a32(ds, eax + 0x2));     /* mov dl, [eax+0x2] */
    II(0x10151daf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151db2, 0x3)   mov(memb_a32(ds, eax + 0x3e), dl);    /* mov [eax+0x3e], dl */
    II(0x10151db5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151db8, 0x3)   mov(dl, memb_a32(ds, eax + 0x4));     /* mov dl, [eax+0x4] */
    II(0x10151dbb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151dbe, 0x3)   mov(memb_a32(ds, eax + 0x45), dl);    /* mov [eax+0x45], dl */
    II(0x10151dc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151dc4, 0x4)   mov(dx, memw_a32(ds, eax + 0x6));     /* mov dx, [eax+0x6] */
    II(0x10151dc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151dcb, 0x4)   mov(memw_a32(ds, eax + 0x78), dx);    /* mov [eax+0x78], dx */
    II(0x10151dcf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151dd2, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x10151dd6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151dd9, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x10151ddd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151de0, 0x4)   mov(dx, memw_a32(ds, eax + 0xa));     /* mov dx, [eax+0xa] */
    II(0x10151de4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151de7, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x10151deb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151dee, 0x3)   mov(dl, memb_a32(ds, eax + 0x3));     /* mov dl, [eax+0x3] */
    II(0x10151df1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151df4, 0x3)   mov(memb_a32(ds, eax + 0x7a), dl);    /* mov [eax+0x7a], dl */
    II(0x10151df7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151dfa, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x10151dfe, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10151e01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10151e04, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x10151e07, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10151e0a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151e0d, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10151e10, 0x5)   calld(0x1009caf8, -0xb531d);          /* call 0x1009caf8 */
    II(0x10151e15, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10151e1c, 0x2)   jmpd(0x10151e24, 0x6);                /* jmp 0x10151e24 */
l_0x10151e1e:
    II(0x10151e1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10151e21, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x10151e24:
    II(0x10151e24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10151e27, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x10151e2b, 0x2)   jged(0x10151e45, 0x18);               /* jge 0x10151e45 */
    II(0x10151e2d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10151e31, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10151e33, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x10151e36, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10151e38, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151e3b, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10151e3e, 0x5)   calld(0x1008b2a8, -0xc6b9b);          /* call 0x1008b2a8 */
    II(0x10151e43, 0x2)   jmpd(0x10151e1e, -0x27);              /* jmp 0x10151e1e */
l_0x10151e45:
    II(0x10151e45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151e48, 0x5)   calld(0x10151565, -0x8e8);            /* call 0x10151565 */
    II(0x10151e4d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10151e4f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10151e50, 0x1)   popd(edi);                            /* pop edi */
    II(0x10151e51, 0x1)   popd(esi);                            /* pop esi */
    II(0x10151e52, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10151e53, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10151e54, 0x1)   retd();                               /* ret */
FUNC_END

