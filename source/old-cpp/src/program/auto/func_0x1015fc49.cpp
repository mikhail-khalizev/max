FUNC_BEGIN(0x1015fc49, 0x9c7d35461a419691, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xff, 0x60, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xb0, 0x64, 0xf1, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x34, 0x6a, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xef, 0xb0, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xfd, 0x17, 0, 0, 0xbb, 0xba, 0x28, 0x1b, 0x10, 0xba, 0xc7, 0x28, 0x1b, 0x10, 0x31, 0xc0, 0xe8, 0xed, 0x60, 0, 0, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf0, 0xe8, 0xc4, 0x68, 0xf1, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x75, 0x28, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xc8, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x41, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3f, 0xc1, 0xf8, 0x10, 0xe8, 0x1d, 0xa7, 0xfb, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x17, 0x8b, 0x45, 0xfc, 0xe8, 0xa3, 0xf3, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x3a, 0x62, 0xf1, 0xff, 0xe9, 0x38, 0x3, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x48, 0x52, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0x90, 0xac, 0xf2, 0xff, 0x8d, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0x4c, 0xd, 0xff, 0xff, 0xe8, 0x50, 0xb6, 0xf2, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x9, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xc7, 0x8d, 0xf2, 0xff, 0x83, 0x7d, 0xe8, 0, 0x74, 0x39, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0x4, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x3a, 0xd, 0xff, 0xff, 0x98, 0xe8, 0xfa, 0x4d, 0xf7, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x88, 0x50, 0x45, 0x8b, 0x45, 0xfc, 0xe8, 0xeb, 0x17, 0xff, 0xff, 0xeb, 0xe, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x99, 0xb7, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x5, 0xe8, 0x96, 0x64, 0xf8, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xcc, 0x67, 0xf1, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x76, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xbc, 0x67, 0xf1, 0xff, 0xe8, 0xdb, 0xab, 0xf2, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xaf, 0x67, 0xf1, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x41, 0x66, 0x89, 0x50, 0x41, 0x8d, 0x45, 0xf0, 0xe8, 0x9c, 0x67, 0xf1, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x43, 0x66, 0x89, 0x50, 0x43, 0x8d, 0x45, 0xf0, 0xe8, 0x89, 0x67, 0xf1, 0xff, 0xc6, 0x40, 0x3d, 0x2, 0x8d, 0x45, 0xf0, 0xe8, 0x7d, 0x67, 0xf1, 0xff, 0xc6, 0x40, 0x3e, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xf8, 0x67, 0xf1, 0xff, 0xe8, 0x2b, 0x1a, 0xf1, 0xff, 0xba, 0x20, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xb6, 0x67, 0xf1, 0xff, 0xe8, 0xeb, 0x30, 0, 0, 0xe9, 0x6d, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x41, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x3f, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0xc2, 0x67, 0xf1, 0xff, 0xe8, 0x12, 0xbf, 0xff, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0x29, 0x67, 0xf1, 0xff, 0xc6, 0x40, 0x3d, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x1d, 0x67, 0xf1, 0xff, 0xc6, 0x40, 0x3e, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0x11, 0x67, 0xf1, 0xff, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0x2, 0x67, 0xf1, 0xff, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0x2, 0xeb, 0x13, 0x8d, 0x45, 0xf0, 0xe8, 0xf1, 0x66, 0xf1, 0xff, 0x66, 0x83, 0x78, 0x8, 0x41, 0xf, 0x85, 0x89, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xde, 0x66, 0xf1, 0xff, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0xcf, 0x66, 0xf1, 0xff, 0x66, 0xc7, 0x40, 0x33, 0, 0, 0xeb, 0x3f, 0x8d, 0x45, 0xf0, 0xe8, 0xbf, 0x66, 0xf1, 0xff, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0xb0, 0x66, 0xf1, 0xff, 0x66, 0xc7, 0x40, 0x33, 0, 0, 0xeb, 0x20, 0x8d, 0x45, 0xf0, 0xe8, 0xa0, 0x66, 0xf1, 0xff, 0x89, 0xc2, 0x66, 0xc7, 0x42, 0x33, 0x8, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x90, 0x66, 0xf1, 0xff, 0x66, 0x8b, 0x52, 0x33, 0x66, 0x89, 0x50, 0x33, 0x8d, 0x45, 0xf0, 0xe8, 0x80, 0x66, 0xf1, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x29, 0x8d, 0x45, 0xf0, 0xe8, 0x73, 0x66, 0xf1, 0xff, 0x66, 0x8b, 0x40, 0x33, 0x1, 0xd0, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xf0, 0xe8, 0x62, 0x66, 0xf1, 0xff, 0xe8, 0xf0, 0x9b, 0xfe, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0x55, 0x66, 0xf1, 0xff, 0x8b, 0x40, 0x12, 0x25, 0x80, 0x1, 0, 0, 0x3d, 0x80, 0, 0, 0, 0x75, 0x32, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x41, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3f, 0xc1, 0xf8, 0x10, 0xe8, 0xef, 0x50, 0xf1, 0xff, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x12, 0xbb, 0x26, 0, 0, 0, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xe4, 0xe8, 0x36, 0x30, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xc, 0x66, 0xf1, 0xff, 0xe8, 0x85, 0xf2, 0xfe, 0xff, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x86, 0x66, 0xf1, 0xff, 0xe8, 0xb9, 0x18, 0xf1, 0xff, 0xba, 0x20, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x74, 0x66, 0xf1, 0xff, 0xe8, 0x79, 0x2f, 0, 0, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x92, 0xb5, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x27, 0x8d, 0x45, 0xf0, 0xe8, 0x26, 0x66, 0xf1, 0xff, 0xe8, 0x88, 0xf6, 0xf9, 0xff, 0x31, 0xd2, 0x8a, 0x15, 0x89, 0x38, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0x8a, 0x38, 0x1c, 0x10, 0x9, 0xd0, 0x85, 0xc0, 0x74, 0x5, 0xe8, 0xf8, 0xf5, 0xf9, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xdb, 0x26, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x22, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x48, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x24, 0x8b, 0x45, 0xfc, 0xe8, 0xab, 0x26, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x48, 0x2, 0x8d, 0x45, 0xf0, 0xe8, 0xbe, 0x65, 0xf1, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xe0, 0xff, 0x51, 0x68, 0x8b, 0x45, 0xfc, 0xe8, 0x83, 0x9f, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xfd, 0x5e, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015fc49, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1015fc4e, 0x5)   calld(sys_check_available_stack_size, 0x60ff); /* call 0x10165d52 */
    II(0x1015fc53, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015fc54, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015fc55, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015fc56, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015fc57, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015fc58, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015fc59, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015fc5b, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1015fc61, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015fc64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fc67, 0x5)   calld(0x1007611c, -0xe9b50);          /* call 0x1007611c */
    II(0x1015fc6c, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x1015fc6f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015fc71, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015fc73, 0x5)   calld(0x100766ac, -0xe95cc);          /* call 0x100766ac */
    II(0x1015fc78, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015fc7a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fc7d, 0x5)   calld(0x1013ad71, -0x24f11);          /* call 0x1013ad71 */
    II(0x1015fc82, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015fc84, 0x2)   jzd(0x1015fc8f, 0x9);                 /* jz 0x1015fc8f */
    II(0x1015fc86, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1015fc8d, 0x2)   jmpd(0x1015fca8, 0x19);               /* jmp 0x1015fca8 */
l_0x1015fc8f:
    II(0x1015fc8f, 0x5)   mov(ecx, 0x17fd);                     /* mov ecx, 0x17fd */
    II(0x1015fc94, 0x5)   mov(ebx, 0x101b28ba);                 /* mov ebx, 0x101b28ba */ /* "unitsmgr.cpp" */
    II(0x1015fc99, 0x5)   mov(edx, 0x101b28c7);                 /* mov edx, 0x101b28c7 */ /* "child != 0" */
    II(0x1015fc9e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015fca0, 0x5)   calld(sys_assert, 0x60ed);            /* call 0x10165d92 */
    II(0x1015fca5, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
l_0x1015fca8:
    II(0x1015fca8, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fcab, 0x5)   calld(0x10076574, -0xe973c);          /* call 0x10076574 */
    II(0x1015fcb0, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x1015fcb4, 0x2)   jnzd(0x1015fcde, 0x28);               /* jnz 0x1015fcde */
    II(0x1015fcb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fcb9, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015fcbc, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015fcbe, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1015fcc1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015fcc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fcc6, 0x3)   mov(edx, memd_a32(ds, eax + 0x41));   /* mov edx, [eax+0x41] */
    II(0x1015fcc9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015fccc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fccf, 0x3)   mov(eax, memd_a32(ds, eax + 0x3f));   /* mov eax, [eax+0x3f] */
    II(0x1015fcd2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015fcd5, 0x5)   calld(0x1011a3f7, -0x458e3);          /* call 0x1011a3f7 */
    II(0x1015fcda, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015fcdc, 0x2)   jnzd(0x1015fce0, 0x2);                /* jnz 0x1015fce0 */
l_0x1015fcde:
    II(0x1015fcde, 0x2)   jmpd(0x1015fcf7, 0x17);               /* jmp 0x1015fcf7 */
l_0x1015fce0:
    II(0x1015fce0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fce3, 0x5)   calld(0x1014f08b, -0x10c5d);          /* call 0x1014f08b */
    II(0x1015fce8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015fcea, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fced, 0x5)   calld(0x10075f2c, -0xe9dc6);          /* call 0x10075f2c */
    II(0x1015fcf2, 0x5)   jmpd(0x1016002f, 0x338);              /* jmp 0x1016002f */
l_0x1015fcf7:
    II(0x1015fcf7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fcfa, 0x4)   dec(memw_a32(ds, eax + 0x52));        /* dec word [eax+0x52] */
    II(0x1015fcfe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015fd00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd03, 0x5)   calld(0x1008a998, -0xd5370);          /* call 0x1008a998 */
    II(0x1015fd08, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x1015fd0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd0e, 0x5)   calld(0x10150a5f, -0xf2b4);           /* call 0x10150a5f */
    II(0x1015fd13, 0x5)   calld(my_2_get_count, -0xd49b0);      /* call 0x1008b368 */
    II(0x1015fd18, 0x1)   cwde();                               /* cwde */
    II(0x1015fd19, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015fd1b, 0x2)   jled(0x1015fd26, 0x9);                /* jle 0x1015fd26 */
    II(0x1015fd1d, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
    II(0x1015fd24, 0x2)   jmpd(0x1015fd2d, 0x7);                /* jmp 0x1015fd2d */
l_0x1015fd26:
    II(0x1015fd26, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x1015fd2d:
    II(0x1015fd2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015fd30, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1015fd33, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015fd35, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fd38, 0x5)   calld(0x10088b04, -0xd7239);          /* call 0x10088b04 */
    II(0x1015fd3d, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x1015fd41, 0x2)   jzd(0x1015fd7c, 0x39);                /* jz 0x1015fd7c */
    II(0x1015fd43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd46, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x4);   /* mov byte [eax+0x3d], 0x4 */
    II(0x1015fd4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd4d, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1015fd51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd54, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015fd57, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015fd59, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015fd5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd5f, 0x5)   calld(0x10150a9e, -0xf2c6);           /* call 0x10150a9e */
    II(0x1015fd64, 0x1)   cwde();                               /* cwde */
    II(0x1015fd65, 0x5)   calld(0x100d4b64, -0x8b206);          /* call 0x100d4b64 */
    II(0x1015fd6a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015fd6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd6f, 0x3)   mov(memb_a32(ds, eax + 0x45), dl);    /* mov [eax+0x45], dl */
    II(0x1015fd72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd75, 0x5)   calld(0x10151565, -0xe815);           /* call 0x10151565 */
    II(0x1015fd7a, 0x2)   jmpd(0x1015fd8a, 0xe);                /* jmp 0x1015fd8a */
l_0x1015fd7c:
    II(0x1015fd7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd7f, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1015fd83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fd86, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
l_0x1015fd8a:
    II(0x1015fd8a, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1015fd8f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fd92, 0x5)   calld(0x1008b530, -0xd4867);          /* call 0x1008b530 */
    II(0x1015fd97, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015fd99, 0x2)   jzd(0x1015fda0, 0x5);                 /* jz 0x1015fda0 */
    II(0x1015fd9b, 0x5)   calld(0x100e6236, -0x79b6a);          /* call 0x100e6236 */
l_0x1015fda0:
    II(0x1015fda0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fda3, 0x5)   calld(0x10076574, -0xe9834);          /* call 0x10076574 */
    II(0x1015fda8, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x1015fdac, 0x2)   jzd(0x1015fe24, 0x76);                /* jz 0x1015fe24 */
    II(0x1015fdae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015fdb0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fdb3, 0x5)   calld(0x10076574, -0xe9844);          /* call 0x10076574 */
    II(0x1015fdb8, 0x5)   calld(0x1008a998, -0xd5425);          /* call 0x1008a998 */
    II(0x1015fdbd, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fdc0, 0x5)   calld(0x10076574, -0xe9851);          /* call 0x10076574 */
    II(0x1015fdc5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015fdc8, 0x4)   mov(dx, memw_a32(ds, edx + 0x41));    /* mov dx, [edx+0x41] */
    II(0x1015fdcc, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x1015fdd0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fdd3, 0x5)   calld(0x10076574, -0xe9864);          /* call 0x10076574 */
    II(0x1015fdd8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015fddb, 0x4)   mov(dx, memw_a32(ds, edx + 0x43));    /* mov dx, [edx+0x43] */
    II(0x1015fddf, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x1015fde3, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fde6, 0x5)   calld(0x10076574, -0xe9877);          /* call 0x10076574 */
    II(0x1015fdeb, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x2);   /* mov byte [eax+0x3d], 0x2 */
    II(0x1015fdef, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fdf2, 0x5)   calld(0x10076574, -0xe9883);          /* call 0x10076574 */
    II(0x1015fdf7, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0);     /* mov byte [eax+0x3e], 0x0 */
    II(0x1015fdfb, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1015fe00, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fe03, 0x5)   calld(0x10076600, -0xe9808);          /* call 0x10076600 */
    II(0x1015fe08, 0x5)   calld(0x10071838, -0xee5d5);          /* call 0x10071838 */
    II(0x1015fe0d, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x1015fe12, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fe15, 0x5)   calld(0x100765d0, -0xe984a);          /* call 0x100765d0 */
    II(0x1015fe1a, 0x5)   calld(0x10162f0a, 0x30eb);            /* call 0x10162f0a */
    II(0x1015fe1f, 0x5)   jmpd(0x1015ff91, 0x16d);              /* jmp 0x1015ff91 */
l_0x1015fe24:
    II(0x1015fe24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fe27, 0x3)   mov(ebx, memd_a32(ds, eax + 0x41));   /* mov ebx, [eax+0x41] */
    II(0x1015fe2a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015fe2d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015fe30, 0x3)   mov(edx, memd_a32(ds, edx + 0x3f));   /* mov edx, [edx+0x3f] */
    II(0x1015fe33, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015fe36, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fe39, 0x5)   calld(0x10076600, -0xe983e);          /* call 0x10076600 */
    II(0x1015fe3e, 0x5)   calld(0x1015bd55, -0x40ee);           /* call 0x1015bd55 */
    II(0x1015fe43, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fe46, 0x5)   calld(0x10076574, -0xe98d7);          /* call 0x10076574 */
    II(0x1015fe4b, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1015fe4f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fe52, 0x5)   calld(0x10076574, -0xe98e3);          /* call 0x10076574 */
    II(0x1015fe57, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1015fe5b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fe5e, 0x5)   calld(0x10076574, -0xe98ef);          /* call 0x10076574 */
    II(0x1015fe63, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1015fe68, 0x2)   jzd(0x1015fe79, 0xf);                 /* jz 0x1015fe79 */
    II(0x1015fe6a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fe6d, 0x5)   calld(0x10076574, -0xe98fe);          /* call 0x10076574 */
    II(0x1015fe72, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x1015fe77, 0x2)   jnzd(0x1015fe7b, 0x2);                /* jnz 0x1015fe7b */
l_0x1015fe79:
    II(0x1015fe79, 0x2)   jmpd(0x1015fe8e, 0x13);               /* jmp 0x1015fe8e */
l_0x1015fe7b:
    II(0x1015fe7b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fe7e, 0x5)   calld(0x10076574, -0xe990f);          /* call 0x10076574 */
    II(0x1015fe83, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x1015fe88, 0x6)   jnzd(0x1015ff17, 0x89);               /* jnz dword 0x1015ff17 */
l_0x1015fe8e:
    II(0x1015fe8e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fe91, 0x5)   calld(0x10076574, -0xe9922);          /* call 0x10076574 */
    II(0x1015fe96, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1015fe9b, 0x2)   jnzd(0x1015fead, 0x10);               /* jnz 0x1015fead */
    II(0x1015fe9d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fea0, 0x5)   calld(0x10076574, -0xe9931);          /* call 0x10076574 */
    II(0x1015fea5, 0x6)   mov(memw_a32(ds, eax + 0x33), 0);     /* mov word [eax+0x33], 0x0 */
    II(0x1015feab, 0x2)   jmpd(0x1015feec, 0x3f);               /* jmp 0x1015feec */
l_0x1015fead:
    II(0x1015fead, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015feb0, 0x5)   calld(0x10076574, -0xe9941);          /* call 0x10076574 */
    II(0x1015feb5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x1015feba, 0x2)   jnzd(0x1015fecc, 0x10);               /* jnz 0x1015fecc */
    II(0x1015febc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015febf, 0x5)   calld(0x10076574, -0xe9950);          /* call 0x10076574 */
    II(0x1015fec4, 0x6)   mov(memw_a32(ds, eax + 0x33), 0);     /* mov word [eax+0x33], 0x0 */
    II(0x1015feca, 0x2)   jmpd(0x1015feec, 0x20);               /* jmp 0x1015feec */
l_0x1015fecc:
    II(0x1015fecc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fecf, 0x5)   calld(0x10076574, -0xe9960);          /* call 0x10076574 */
    II(0x1015fed4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015fed6, 0x6)   mov(memw_a32(ds, edx + 0x33), 0x8);   /* mov word [edx+0x33], 0x8 */
    II(0x1015fedc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fedf, 0x5)   calld(0x10076574, -0xe9970);          /* call 0x10076574 */
    II(0x1015fee4, 0x4)   mov(dx, memw_a32(ds, edx + 0x33));    /* mov dx, [edx+0x33] */
    II(0x1015fee8, 0x4)   mov(memw_a32(ds, eax + 0x33), dx);    /* mov [eax+0x33], dx */
l_0x1015feec:
    II(0x1015feec, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015feef, 0x5)   calld(0x10076574, -0xe9980);          /* call 0x10076574 */
    II(0x1015fef4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015fef6, 0x3)   mov(dl, memb_a32(ds, eax + 0x29));    /* mov dl, [eax+0x29] */
    II(0x1015fef9, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015fefc, 0x5)   calld(0x10076574, -0xe998d);          /* call 0x10076574 */
    II(0x1015ff01, 0x4)   mov(ax, memw_a32(ds, eax + 0x33));    /* mov ax, [eax+0x33] */
    II(0x1015ff05, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1015ff07, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015ff0a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ff0d, 0x5)   calld(0x10076574, -0xe999e);          /* call 0x10076574 */
    II(0x1015ff12, 0x5)   calld(0x10149b07, -0x16410);          /* call 0x10149b07 */
l_0x1015ff17:
    II(0x1015ff17, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ff1a, 0x5)   calld(0x10076574, -0xe99ab);          /* call 0x10076574 */
    II(0x1015ff1f, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1015ff22, 0x5)   and_(eax, 0x180);                     /* and eax, 0x180 */
    II(0x1015ff27, 0x5)   cmp(eax, 0x80);                       /* cmp eax, 0x80 */
    II(0x1015ff2c, 0x2)   jnzd(0x1015ff60, 0x32);               /* jnz 0x1015ff60 */
    II(0x1015ff2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ff31, 0x3)   mov(edx, memd_a32(ds, eax + 0x41));   /* mov edx, [eax+0x41] */
    II(0x1015ff34, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015ff37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ff3a, 0x3)   mov(eax, memd_a32(ds, eax + 0x3f));   /* mov eax, [eax+0x3f] */
    II(0x1015ff3d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015ff40, 0x5)   calld(0x10075034, -0xeaf11);          /* call 0x10075034 */
    II(0x1015ff45, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1015ff48, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1015ff4c, 0x2)   jzd(0x1015ff60, 0x12);                /* jz 0x1015ff60 */
    II(0x1015ff4e, 0x5)   mov(ebx, 0x26);                       /* mov ebx, 0x26 */
    II(0x1015ff53, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1015ff58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015ff5b, 0x5)   calld(0x10162f96, 0x3036);            /* call 0x10162f96 */
l_0x1015ff60:
    II(0x1015ff60, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ff63, 0x5)   calld(0x10076574, -0xe99f4);          /* call 0x10076574 */
    II(0x1015ff68, 0x5)   calld(0x1014f1f2, -0x10d7b);          /* call 0x1014f1f2 */
    II(0x1015ff6d, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1015ff72, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ff75, 0x5)   calld(0x10076600, -0xe997a);          /* call 0x10076600 */
    II(0x1015ff7a, 0x5)   calld(0x10071838, -0xee747);          /* call 0x10071838 */
    II(0x1015ff7f, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x1015ff84, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ff87, 0x5)   calld(0x10076600, -0xe998c);          /* call 0x10076600 */
    II(0x1015ff8c, 0x5)   calld(0x10162f0a, 0x2f79);            /* call 0x10162f0a */
l_0x1015ff91:
    II(0x1015ff91, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1015ff96, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ff99, 0x5)   calld(0x1008b530, -0xd4a6e);          /* call 0x1008b530 */
    II(0x1015ff9e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015ffa0, 0x2)   jzd(0x1015ffc9, 0x27);                /* jz 0x1015ffc9 */
    II(0x1015ffa2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ffa5, 0x5)   calld(0x100765d0, -0xe99da);          /* call 0x100765d0 */
    II(0x1015ffaa, 0x5)   calld(0x100ff637, -0x60978);          /* call 0x100ff637 */
    II(0x1015ffaf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015ffb1, 0x6)   mov(dl, memb_a32(ds, 0x101c3889));    /* mov dl, [0x101c3889] */
    II(0x1015ffb7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015ffb9, 0x5)   mov(al, memb_a32(ds, 0x101c388a));    /* mov al, [0x101c388a] */
    II(0x1015ffbe, 0x2)   or_(eax, edx);                        /* or eax, edx */
    II(0x1015ffc0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015ffc2, 0x2)   jzd(0x1015ffc9, 0x5);                 /* jz 0x1015ffc9 */
    II(0x1015ffc4, 0x5)   calld(0x100ff5c1, -0x60a08);          /* call 0x100ff5c1 */
l_0x1015ffc9:
    II(0x1015ffc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ffcc, 0x5)   calld(0x101526ac, -0xd925);           /* call 0x101526ac */
    II(0x1015ffd1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015ffd3, 0x2)   jzd(0x1015fff7, 0x22);                /* jz 0x1015fff7 */
    II(0x1015ffd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ffd8, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x1015ffdd, 0x2)   jzd(0x1015ffe9, 0xa);                 /* jz 0x1015ffe9 */
    II(0x1015ffdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ffe2, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x48);   /* cmp word [eax+0x8], 0x48 */
    II(0x1015ffe7, 0x2)   jnzd(0x1015ffeb, 0x2);                /* jnz 0x1015ffeb */
l_0x1015ffe9:
    II(0x1015ffe9, 0x2)   jmpd(0x1015fff5, 0xa);                /* jmp 0x1015fff5 */
l_0x1015ffeb:
    II(0x1015ffeb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ffee, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x1015fff3, 0x2)   jnzd(0x1015fff7, 0x2);                /* jnz 0x1015fff7 */
l_0x1015fff5:
    II(0x1015fff5, 0x2)   jmpd(0x1015fff9, 0x2);                /* jmp 0x1015fff9 */
l_0x1015fff7:
    II(0x1015fff7, 0x2)   jmpd(0x1016001d, 0x24);               /* jmp 0x1016001d */
l_0x1015fff9:
    II(0x1015fff9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fffc, 0x5)   calld(0x101526ac, -0xd955);           /* call 0x101526ac */
    II(0x10160001, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x10160004, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10160007, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x1016000a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1016000d, 0x5)   calld(0x100765d0, -0xe9a42);          /* call 0x100765d0 */
    II(0x10160012, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10160014, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10160017, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1016001a, 0x3)   calld_abs(memd_a32(ds, ecx + 0x68));  /* call dword near [ecx+0x68] */
l_0x1016001d:
    II(0x1016001d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160020, 0x5)   calld(0x10149fa8, -0x1607d);          /* call 0x10149fa8 */
    II(0x10160025, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10160027, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1016002a, 0x5)   calld(0x10075f2c, -0xea103);          /* call 0x10075f2c */
l_0x1016002f:
    II(0x1016002f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10160031, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10160032, 0x1)   popd(edi);                            /* pop edi */
    II(0x10160033, 0x1)   popd(esi);                            /* pop esi */
    II(0x10160034, 0x1)   popd(edx);                            /* pop edx */
    II(0x10160035, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10160036, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10160037, 0x1)   retd();                               /* ret */
FUNC_END

