FUNC_BEGIN(0x10135e8c, 0xf2461dc262f13721, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xbc, 0xfe, 0x2, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0xe9, 0xf2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0x8, 0xe9, 0, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0xa, 0xe9, 0xf1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0xc, 0xe9, 0xe2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0xe, 0xe9, 0xd3, 0, 0, 0, 0x8a, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0, 0x42, 0x16, 0xe9, 0xc5, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0x10, 0xe9, 0xb6, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0x12, 0xe9, 0xa7, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0x14, 0xe9, 0x98, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0x17, 0xe9, 0x89, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0x19, 0xe9, 0x7a, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0x1b, 0xeb, 0x6e, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0x1d, 0xeb, 0x62, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x42, 0x1f, 0xeb, 0x56, 0xeb, 0x54, 0x8d, 0x40, 0, 0xb6, 0x5e, 0x13, 0x10, 0xc5, 0x5e, 0x13, 0x10, 0xd4, 0x5e, 0x13, 0x10, 0xe3, 0x5e, 0x13, 0x10, 0xf2, 0x5e, 0x13, 0x10, 0, 0x5f, 0x13, 0x10, 0xf, 0x5f, 0x13, 0x10, 0x1e, 0x5f, 0x13, 0x10, 0x2d, 0x5f, 0x13, 0x10, 0x3c, 0x5f, 0x13, 0x10, 0x4b, 0x5f, 0x13, 0x10, 0x57, 0x5f, 0x13, 0x10, 0x63, 0x5f, 0x13, 0x10, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x66, 0x83, 0x7d, 0xec, 0xc, 0x77, 0xba, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x74, 0x5f, 0x13, 0x10, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10135e8c, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10135e91, 0x5)   calld(sys_check_available_stack_size, 0x2febc); /* call 0x10165d52 */
    II(0x10135e96, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10135e97, 0x1)   pushd(esi);                           /* push esi */
    II(0x10135e98, 0x1)   pushd(edi);                           /* push edi */
    II(0x10135e99, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10135e9a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10135e9c, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10135ea2, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10135ea5, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10135ea8, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10135eab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10135eae, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10135eb1, 0x5)   jmpd(0x10135fa8, 0xf2);               /* jmp 0x10135fa8 */
l_0x10135eb6:
    II(0x10135eb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135eb9, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135ebc, 0x4)   mov(memw_a32(ds, edx + 0x8), ax);     /* mov [edx+0x8], ax */
    II(0x10135ec0, 0x5)   jmpd(0x10135fc5, 0x100);              /* jmp 0x10135fc5 */
l_0x10135ec5:
    II(0x10135ec5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135ec8, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135ecb, 0x4)   add(memw_a32(ds, edx + 0xa), ax);     /* add [edx+0xa], ax */
    II(0x10135ecf, 0x5)   jmpd(0x10135fc5, 0xf1);               /* jmp 0x10135fc5 */
l_0x10135ed4:
    II(0x10135ed4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135ed7, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135eda, 0x4)   add(memw_a32(ds, edx + 0xc), ax);     /* add [edx+0xc], ax */
    II(0x10135ede, 0x5)   jmpd(0x10135fc5, 0xe2);               /* jmp 0x10135fc5 */
l_0x10135ee3:
    II(0x10135ee3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135ee6, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135ee9, 0x4)   add(memw_a32(ds, edx + 0xe), ax);     /* add [edx+0xe], ax */
    II(0x10135eed, 0x5)   jmpd(0x10135fc5, 0xd3);               /* jmp 0x10135fc5 */
l_0x10135ef2:
    II(0x10135ef2, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10135ef5, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135ef8, 0x3)   add(memb_a32(ds, edx + 0x16), al);    /* add [edx+0x16], al */
    II(0x10135efb, 0x5)   jmpd(0x10135fc5, 0xc5);               /* jmp 0x10135fc5 */
l_0x10135f00:
    II(0x10135f00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135f03, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135f06, 0x4)   add(memw_a32(ds, edx + 0x10), ax);    /* add [edx+0x10], ax */
    II(0x10135f0a, 0x5)   jmpd(0x10135fc5, 0xb6);               /* jmp 0x10135fc5 */
l_0x10135f0f:
    II(0x10135f0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135f12, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135f15, 0x4)   add(memw_a32(ds, edx + 0x12), ax);    /* add [edx+0x12], ax */
    II(0x10135f19, 0x5)   jmpd(0x10135fc5, 0xa7);               /* jmp 0x10135fc5 */
l_0x10135f1e:
    II(0x10135f1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135f21, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135f24, 0x4)   add(memw_a32(ds, edx + 0x14), ax);    /* add [edx+0x14], ax */
    II(0x10135f28, 0x5)   jmpd(0x10135fc5, 0x98);               /* jmp 0x10135fc5 */
l_0x10135f2d:
    II(0x10135f2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135f30, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135f33, 0x4)   add(memw_a32(ds, edx + 0x17), ax);    /* add [edx+0x17], ax */
    II(0x10135f37, 0x5)   jmpd(0x10135fc5, 0x89);               /* jmp 0x10135fc5 */
l_0x10135f3c:
    II(0x10135f3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135f3f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135f42, 0x4)   add(memw_a32(ds, edx + 0x19), ax);    /* add [edx+0x19], ax */
    II(0x10135f46, 0x5)   jmpd(0x10135fc5, 0x7a);               /* jmp 0x10135fc5 */
l_0x10135f4b:
    II(0x10135f4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135f4e, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135f51, 0x4)   add(memw_a32(ds, edx + 0x1b), ax);    /* add [edx+0x1b], ax */
    II(0x10135f55, 0x2)   jmpd(0x10135fc5, 0x6e);               /* jmp 0x10135fc5 */
l_0x10135f57:
    II(0x10135f57, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135f5a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135f5d, 0x4)   add(memw_a32(ds, edx + 0x1d), ax);    /* add [edx+0x1d], ax */
    II(0x10135f61, 0x2)   jmpd(0x10135fc5, 0x62);               /* jmp 0x10135fc5 */
l_0x10135f63:
    II(0x10135f63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10135f66, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10135f69, 0x4)   add(memw_a32(ds, edx + 0x1f), ax);    /* add [edx+0x1f], ax */
    II(0x10135f6d, 0x2)   jmpd(0x10135fc5, 0x56);               /* jmp 0x10135fc5 */
l_0x10135f6f:
    II(0x10135f6f, 0x2)   jmpd(0x10135fc5, 0x54);               /* jmp 0x10135fc5 */
//    II(0x10135f71, 0x3)   /* Выравнивание. */
//    II(0x10135f74, 0x34)  /* Служебная область с абсолютными адресами переходов. {0x10135eb6, 0x10135ec5, 0x10135ed4, 0x10135ee3, 0x10135ef2, 0x10135f00, 0x10135f0f, 0x10135f1e, 0x10135f2d, 0x10135f3c, 0x10135f4b, 0x10135f57, 0x10135f63}. */
l_0x10135fa8:
    II(0x10135fa8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10135fab, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10135fae, 0x5)   cmp(memw_a32(ss, ebp - 0x14), 0xc);   /* cmp word [ebp-0x14], 0xc */
    II(0x10135fb3, 0x2)   jad(0x10135f6f, -0x46);               /* ja 0x10135f6f */
    II(0x10135fb5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135fb7, 0x4)   mov(ax, memw_a32(ss, ebp - 0x14));    /* mov ax, [ebp-0x14] */
    II(0x10135fbb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10135fbe, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x10135f74), (0x10135eb6)(0x10135ec5)(0x10135ed4)(0x10135ee3)(0x10135ef2)(0x10135f00)(0x10135f0f)(0x10135f1e)(0x10135f2d)(0x10135f3c)(0x10135f4b)(0x10135f57)(0x10135f63)); /* jmp dword near [cs:eax+0x10135f74] */
l_0x10135fc5:
    II(0x10135fc5, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10135fc7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10135fc8, 0x1)   popd(edi);                            /* pop edi */
    II(0x10135fc9, 0x1)   popd(esi);                            /* pop esi */
    II(0x10135fca, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10135fcb, 0x1)   retd();                               /* ret */
FUNC_END

