FUNC_BEGIN(0x100ccbd2, 0x77f4e4527234df1c, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x76, 0x91, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x41, 0x97, 0xfa, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0xb7, 0x98, 0xfa, 0xff, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x7b, 0xef, 0xff, 0xff, 0x66, 0x3d, 0x9, 0, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x4c, 0x93, 0xfa, 0xff, 0xe9, 0x3a, 0x1, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xc9, 0x9f, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x38, 0xe1, 0x6, 0, 0x84, 0xc0, 0xf, 0x84, 0x6, 0x1, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x57, 0x97, 0xfa, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0x3d, 0x97, 0xfa, 0xff, 0x66, 0x83, 0x78, 0x8, 0x3f, 0x74, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xf0, 0xe8, 0x2c, 0x97, 0xfa, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x34, 0x8d, 0x45, 0xf0, 0xe8, 0x16, 0x97, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0, 0x74, 0x24, 0x8d, 0x45, 0xf0, 0xe8, 0x8, 0x97, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0x14, 0x8d, 0x45, 0xf0, 0xe8, 0xfa, 0x96, 0xfa, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0x17, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x13, 0x8d, 0x45, 0xf0, 0xe8, 0x42, 0x97, 0xfa, 0xff, 0xe8, 0xe9, 0xe7, 0xfb, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0x6e, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xc4, 0x96, 0xfa, 0xff, 0xe8, 0xcb, 0x59, 0x8, 0, 0x85, 0xc0, 0x74, 0x20, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0xb, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0xaa, 0x96, 0xfa, 0xff, 0xe8, 0xb1, 0x59, 0x8, 0, 0xe8, 0xc4, 0x5e, 0xfd, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x3d, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xac, 0xde, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x52, 0x96, 0xfa, 0xff, 0xe8, 0xfb, 0x92, 0xfd, 0xff, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xf4, 0, 0x74, 0x9, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x45, 0xf8, 0x7d, 0x11, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf0, 0xe8, 0xc9, 0x96, 0xfa, 0xff, 0x89, 0x45, 0xf4, 0xe9, 0xe0, 0xfe, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xdb, 0x98, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xd, 0x92, 0xfa, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ccbd2, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100ccbd7, 0x5)   calld(sys_check_available_stack_size, 0x99176); /* call 0x10165d52 */
    II(0x100ccbdc, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ccbdd, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ccbde, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ccbdf, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ccbe0, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ccbe1, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ccbe2, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ccbe4, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100ccbea, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ccbed, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100ccbf2, 0x5)   calld(0x10076338, -0x568bf);          /* call 0x10076338 */
    II(0x100ccbf7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ccbf9, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccbfc, 0x5)   calld(0x100764b8, -0x56749);          /* call 0x100764b8 */
    II(0x100ccc01, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100ccc08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ccc0b, 0x5)   calld(0x100cbb8b, -0x1085);           /* call 0x100cbb8b */
    II(0x100ccc10, 0x4)   cmp(ax, 0x9);                         /* cmp ax, 0x9 */
    II(0x100ccc14, 0x2)   jzd(0x100ccc25, 0xf);                 /* jz 0x100ccc25 */
    II(0x100ccc16, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ccc18, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccc1b, 0x5)   calld(0x10075f6c, -0x56cb4);          /* call 0x10075f6c */
    II(0x100ccc20, 0x5)   jmpd(0x100ccd5f, 0x13a);              /* jmp 0x100ccd5f */
l_0x100ccc25:
    II(0x100ccc25, 0x2)   jmpd(0x100ccc2f, 0x8);                /* jmp 0x100ccc2f */
l_0x100ccc27:
    II(0x100ccc27, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccc2a, 0x5)   calld(0x10076bf8, -0x56037);          /* call 0x10076bf8 */
l_0x100ccc2f:
    II(0x100ccc2f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ccc31, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccc34, 0x5)   calld(0x1013ad71, 0x6e138);           /* call 0x1013ad71 */
    II(0x100ccc39, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ccc3b, 0x6)   jzd(0x100ccd47, 0x106);               /* jz dword 0x100ccd47 */
    II(0x100ccc41, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccc44, 0x5)   calld(0x100763a0, -0x568a9);          /* call 0x100763a0 */
    II(0x100ccc49, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ccc4b, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ccc4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ccc51, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100ccc54, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ccc57, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ccc59, 0x2)   jnzd(0x100ccc6a, 0xf);                /* jnz 0x100ccc6a */
    II(0x100ccc5b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccc5e, 0x5)   calld(0x100763a0, -0x568c3);          /* call 0x100763a0 */
    II(0x100ccc63, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3f);   /* cmp word [eax+0x8], 0x3f */
    II(0x100ccc68, 0x2)   jzd(0x100ccc6c, 0x2);                 /* jz 0x100ccc6c */
l_0x100ccc6a:
    II(0x100ccc6a, 0x2)   jmpd(0x100ccc80, 0x14);               /* jmp 0x100ccc80 */
l_0x100ccc6c:
    II(0x100ccc6c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccc6f, 0x5)   calld(0x100763a0, -0x568d4);          /* call 0x100763a0 */
    II(0x100ccc74, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100ccc77, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ccc7c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ccc7e, 0x2)   jgd(0x100ccc82, 0x2);                 /* jg 0x100ccc82 */
l_0x100ccc80:
    II(0x100ccc80, 0x2)   jmpd(0x100cccb6, 0x34);               /* jmp 0x100cccb6 */
l_0x100ccc82:
    II(0x100ccc82, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccc85, 0x5)   calld(0x100763a0, -0x568ea);          /* call 0x100763a0 */
    II(0x100ccc8a, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0);     /* cmp byte [eax+0x3d], 0x0 */
    II(0x100ccc8e, 0x2)   jzd(0x100cccb4, 0x24);                /* jz 0x100cccb4 */
    II(0x100ccc90, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccc93, 0x5)   calld(0x100763a0, -0x568f8);          /* call 0x100763a0 */
    II(0x100ccc98, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x100ccc9c, 0x2)   jnzd(0x100cccb2, 0x14);               /* jnz 0x100cccb2 */
    II(0x100ccc9e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccca1, 0x5)   calld(0x100763a0, -0x56906);          /* call 0x100763a0 */
    II(0x100ccca6, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100ccca9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100cccae, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100cccb0, 0x2)   jzd(0x100cccb4, 0x2);                 /* jz 0x100cccb4 */
l_0x100cccb2:
    II(0x100cccb2, 0x2)   jmpd(0x100cccb6, 0x2);                /* jmp 0x100cccb6 */
l_0x100cccb4:
    II(0x100cccb4, 0x2)   jmpd(0x100cccb8, 0x2);                /* jmp 0x100cccb8 */
l_0x100cccb6:
    II(0x100cccb6, 0x2)   jmpd(0x100ccccf, 0x17);               /* jmp 0x100ccccf */
l_0x100cccb8:
    II(0x100cccb8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100cccbb, 0x3)   add(edx, 0x13);                       /* add edx, 0x13 */
    II(0x100cccbe, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cccc1, 0x5)   calld(0x10076408, -0x568be);          /* call 0x10076408 */
    II(0x100cccc6, 0x5)   calld(0x1008b4b4, -0x41817);          /* call 0x1008b4b4 */
    II(0x100ccccb, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ccccd, 0x2)   jnzd(0x100cccd4, 0x5);                /* jnz 0x100cccd4 */
l_0x100ccccf:
    II(0x100ccccf, 0x5)   jmpd(0x100ccd42, 0x6e);               /* jmp 0x100ccd42 */
l_0x100cccd4:
    II(0x100cccd4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cccd7, 0x5)   calld(0x100763a0, -0x5693c);          /* call 0x100763a0 */
    II(0x100cccdc, 0x5)   calld(0x101526ac, 0x859cb);           /* call 0x101526ac */
    II(0x100ccce1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ccce3, 0x2)   jzd(0x100ccd05, 0x20);                /* jz 0x100ccd05 */
    II(0x100ccce5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ccce8, 0x3)   mov(edx, memd_a32(ds, eax + 0xb));    /* mov edx, [eax+0xb] */
    II(0x100ccceb, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100cccee, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cccf1, 0x5)   calld(0x100763a0, -0x56956);          /* call 0x100763a0 */
    II(0x100cccf6, 0x5)   calld(0x101526ac, 0x859b1);           /* call 0x101526ac */
    II(0x100cccfb, 0x5)   calld(0x100a2bc4, -0x2a13c);          /* call 0x100a2bc4 */
    II(0x100ccd00, 0x1)   cwde();                               /* cwde */
    II(0x100ccd01, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ccd03, 0x2)   jled(0x100ccd42, 0x3d);               /* jle 0x100ccd42 */
l_0x100ccd05:
    II(0x100ccd05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ccd08, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ccd0b, 0x5)   calld(0x1008abbc, -0x42154);          /* call 0x1008abbc */
    II(0x100ccd10, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ccd12, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccd15, 0x5)   calld(0x1007636c, -0x569ae);          /* call 0x1007636c */
    II(0x100ccd1a, 0x5)   calld(0x100a601a, -0x26d05);          /* call 0x100a601a */
    II(0x100ccd1f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100ccd22, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x100ccd26, 0x2)   jzd(0x100ccd31, 0x9);                 /* jz 0x100ccd31 */
    II(0x100ccd28, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ccd2b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100ccd2f, 0x2)   jged(0x100ccd42, 0x11);               /* jge 0x100ccd42 */
l_0x100ccd31:
    II(0x100ccd31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ccd34, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ccd37, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccd3a, 0x5)   calld(0x10076408, -0x56937);          /* call 0x10076408 */
    II(0x100ccd3f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x100ccd42:
    II(0x100ccd42, 0x5)   jmpd(0x100ccc27, -0x120);             /* jmp 0x100ccc27 */
l_0x100ccd47:
    II(0x100ccd47, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ccd4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ccd4d, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100ccd50, 0x5)   calld(0x10076630, -0x56725);          /* call 0x10076630 */
    II(0x100ccd55, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ccd57, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ccd5a, 0x5)   calld(0x10075f6c, -0x56df3);          /* call 0x10075f6c */
l_0x100ccd5f:
    II(0x100ccd5f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ccd61, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ccd62, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ccd63, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ccd64, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ccd65, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ccd66, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ccd67, 0x1)   retd();                               /* ret */
FUNC_END

