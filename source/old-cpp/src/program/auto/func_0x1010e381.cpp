FUNC_BEGIN(0x1010e381, 0x43110bd14d68bf8a, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xc7, 0x79, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xf0, 0x4, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0x74, 0x32, 0x8a, 0x45, 0xf0, 0x4, 0x67, 0xf, 0xbe, 0xc0, 0xe8, 0x14, 0x7c, 0xf6, 0xff, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x1, 0x75, 0x8, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xeb, 0xf, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x2, 0x75, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xeb, 0xc4, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0xc, 0, 0x74, 0x40, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0x1, 0xd0, 0x83, 0xf8, 0x2, 0x7c, 0xc, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x4, 0x1, 0, 0, 0, 0xeb, 0x23, 0xe8, 0xea, 0xc5, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xff, 0xc5, 0xfb, 0xff, 0x89, 0xc1, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0xb8, 0xa3, 0x45, 0x1a, 0x10, 0xe8, 0xef, 0x78, 0, 0, 0xeb, 0x38, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x2, 0x7c, 0xc, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x4, 0x1, 0, 0, 0, 0xeb, 0x23, 0xe8, 0xb0, 0xc5, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xc5, 0xc5, 0xfb, 0xff, 0x89, 0xc1, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0xb8, 0xdb, 0x45, 0x1a, 0x10, 0xe8, 0xb5, 0x78, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010e381, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x1010e386, 0x5)   calld(sys_check_available_stack_size, 0x579c7); /* call 0x10165d52 */
    II(0x1010e38b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010e38c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010e38d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010e38e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010e38f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010e390, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010e391, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010e393, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1010e399, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010e39c, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x4);   /* mov dword [ebp-0x10], 0x4 */
    II(0x1010e3a3, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1010e3aa, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
l_0x1010e3b1:
    II(0x1010e3b1, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x1010e3b4, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x1010e3b9, 0x2)   jzd(0x1010e3ed, 0x32);                /* jz 0x1010e3ed */
    II(0x1010e3bb, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x1010e3be, 0x2)   add(al, 0x67);                        /* add al, 0x67 */
    II(0x1010e3c0, 0x3)   movsx(eax, al);                       /* movsx eax, al */
    II(0x1010e3c3, 0x5)   calld(0x10075fdc, -0x983ec);          /* call 0x10075fdc */
    II(0x1010e3c8, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1010e3cb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1010e3cf, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1010e3d2, 0x2)   jnzd(0x1010e3dc, 0x8);                /* jnz 0x1010e3dc */
    II(0x1010e3d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010e3d7, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
    II(0x1010e3da, 0x2)   jmpd(0x1010e3eb, 0xf);                /* jmp 0x1010e3eb */
l_0x1010e3dc:
    II(0x1010e3dc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1010e3e0, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1010e3e3, 0x2)   jnzd(0x1010e3eb, 0x6);                /* jnz 0x1010e3eb */
    II(0x1010e3e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010e3e8, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x1010e3eb:
    II(0x1010e3eb, 0x2)   jmpd(0x1010e3b1, -0x3c);              /* jmp 0x1010e3b1 */
l_0x1010e3ed:
    II(0x1010e3ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e3f0, 0x4)   cmp(memd_a32(ds, eax + 0xc), 0);      /* cmp dword [eax+0xc], 0x0 */
    II(0x1010e3f4, 0x2)   jzd(0x1010e436, 0x40);                /* jz 0x1010e436 */
    II(0x1010e3f6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1010e3fa, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010e3fe, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1010e400, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1010e403, 0x2)   jld(0x1010e411, 0xc);                 /* jl 0x1010e411 */
    II(0x1010e405, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e408, 0x7)   mov(memd_a32(ds, eax + 0x4), 0x1);    /* mov dword [eax+0x4], 0x1 */
    II(0x1010e40f, 0x2)   jmpd(0x1010e434, 0x23);               /* jmp 0x1010e434 */
l_0x1010e411:
    II(0x1010e411, 0x5)   calld(0x100caa00, -0x43a16);          /* call 0x100caa00 */
    II(0x1010e416, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010e41b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010e41c, 0x5)   calld(0x100caa20, -0x43a01);          /* call 0x100caa20 */
    II(0x1010e421, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1010e423, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1010e428, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010e42a, 0x5)   mov(eax, 0x101a45a3);                 /* mov eax, 0x101a45a3 */ /* "There must be at least two players to begin a new game." */
    II(0x1010e42f, 0x5)   calld(0x10115d23, 0x78ef);            /* call 0x10115d23 */
l_0x1010e434:
    II(0x1010e434, 0x2)   jmpd(0x1010e46e, 0x38);               /* jmp 0x1010e46e */
l_0x1010e436:
    II(0x1010e436, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010e43a, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1010e43d, 0x2)   jld(0x1010e44b, 0xc);                 /* jl 0x1010e44b */
    II(0x1010e43f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e442, 0x7)   mov(memd_a32(ds, eax + 0x4), 0x1);    /* mov dword [eax+0x4], 0x1 */
    II(0x1010e449, 0x2)   jmpd(0x1010e46e, 0x23);               /* jmp 0x1010e46e */
l_0x1010e44b:
    II(0x1010e44b, 0x5)   calld(0x100caa00, -0x43a50);          /* call 0x100caa00 */
    II(0x1010e450, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010e455, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010e456, 0x5)   calld(0x100caa20, -0x43a3b);          /* call 0x100caa20 */
    II(0x1010e45b, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1010e45d, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1010e462, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010e464, 0x5)   mov(eax, 0x101a45db);                 /* mov eax, 0x101a45db */ /* "There must be at least two human players to begin a hot seat game." */
    II(0x1010e469, 0x5)   calld(0x10115d23, 0x78b5);            /* call 0x10115d23 */
l_0x1010e46e:
    II(0x1010e46e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010e470, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010e471, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010e472, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010e473, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010e474, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010e475, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010e476, 0x1)   retd();                               /* ret */
FUNC_END

