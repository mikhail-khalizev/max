FUNC_BEGIN(0x100b074e, 0x350ef24807cff0, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xfa, 0x55, 0xb, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x2, 0x8b, 0x45, 0xf0, 0xff, 0x52, 0x14, 0xf, 0xbf, 0xc8, 0x31, 0xdb, 0x8b, 0x45, 0xf8, 0xe8, 0x4, 0xa6, 0xfd, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0xe8, 0x3a, 0x1f, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x15, 0xe8, 0x45, 0x5f, 0xfc, 0xff, 0x83, 0xe8, 0x15, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x19, 0xe8, 0xfa, 0x74, 0, 0, 0x83, 0xe8, 0x19, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x23, 0xe8, 0x5b, 0x9e, 0xfd, 0xff, 0x83, 0xe8, 0x23, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x27, 0xe8, 0x68, 0xa1, 0xfd, 0xff, 0x83, 0xe8, 0x27, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x2, 0xb4, 0x53, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0x13, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x23, 0xe8, 0xde, 0x74, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x19, 0xe8, 0xe8, 0x73, 0, 0, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0xe8, 0x31, 0x75, 0, 0, 0xe8, 0x47, 0x1f, 0xa, 0, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100b074e, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100b0753, 0x5)   calld(sys_check_available_stack_size, 0xb55fa); /* call 0x10165d52 */
    II(0x100b0758, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b0759, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b075a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b075b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b075c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b075e, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100b0764, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b0767, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100b076a, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100b076d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b0770, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b0773, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100b0776, 0x3)   mov(edx, memd_a32(ds, edx + 0x2));    /* mov edx, [edx+0x2] */
//    II(0x100b0779, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b077c, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100b077f, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100b0782, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b0784, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b0787, 0x5)   calld(0x1008ad90, -0x259fc);          /* call 0x1008ad90 */
    II(0x100b078c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100b078f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b0792, 0x5)   calld(0x100a26d1, -0xe0c6);           /* call 0x100a26d1 */
    II(0x100b0797, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b079a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b079d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b07a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b07a3, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b07a6, 0x5)   calld(my_ctor_0x101b38f8, -0x3a0bb);  /* call 0x100766f0 */
    II(0x100b07ab, 0x3)   sub(eax, 0x15);                       /* sub eax, 0x15 */
    II(0x100b07ae, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b07b1, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b07b4, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b07b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b07ba, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b07bd, 0x5)   calld(0x100b7cbc, 0x74fa);            /* call 0x100b7cbc */
    II(0x100b07c2, 0x3)   sub(eax, 0x19);                       /* sub eax, 0x19 */
    II(0x100b07c5, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b07c8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b07cb, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100b07ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b07d1, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b07d4, 0x5)   calld(0x1008a634, -0x261a5);          /* call 0x1008a634 */
    II(0x100b07d9, 0x3)   sub(eax, 0x23);                       /* sub eax, 0x23 */
    II(0x100b07dc, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b07df, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b07e2, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100b07e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b07e8, 0x3)   add(eax, 0x27);                       /* add eax, 0x27 */
    II(0x100b07eb, 0x5)   calld(0x1008a958, -0x25e98);          /* call 0x1008a958 */
    II(0x100b07f0, 0x3)   sub(eax, 0x27);                       /* sub eax, 0x27 */
    II(0x100b07f3, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b07f6, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b07f9, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100b07fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b07ff, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b53b4); /* mov dword [eax+0x2], 0x101b53b4 */
    II(0x100b0806, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0809, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100b080c, 0x4)   mov(memw_a32(ds, edx + 0x13), ax);    /* mov [edx+0x13], ax */
    II(0x100b0810, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b0813, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b0816, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b0819, 0x5)   calld(0x100b7cfc, 0x74de);            /* call 0x100b7cfc */
    II(0x100b081e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b0821, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b0824, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b0827, 0x5)   calld(0x100b7c14, 0x73e8);            /* call 0x100b7c14 */
    II(0x100b082c, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100b082f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b0832, 0x5)   calld(0x100b7d68, 0x7531);            /* call 0x100b7d68 */
    II(0x100b0837, 0x5)   calld(0x10152783, 0xa1f47);           /* call 0x10152783 */
    II(0x100b083c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b083f, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100b0842, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100b0845, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b0847, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b0848, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b0849, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b084a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b084b, 0x1)   retd();                               /* ret */
FUNC_END

