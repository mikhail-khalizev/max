FUNC_BEGIN(0x100b5abe, 0xa4f30353c34b88f, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x8a, 0x2, 0xb, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x51, 0x8, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0xc7, 0x9, 0xfc, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0xf7, 0xf, 0xfc, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xf5, 0x10, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x64, 0x52, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x70, 0x1, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x83, 0x8, 0xfc, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x12, 0x8d, 0x45, 0xf0, 0xe8, 0x69, 0x8, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0x55, 0x8, 0xfc, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x24, 0x8d, 0x45, 0xf0, 0xe8, 0x45, 0x8, 0xfc, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x54, 0x8d, 0x45, 0xf0, 0xe8, 0x38, 0x8, 0xfc, 0xff, 0xe8, 0xcf, 0x6, 0xfc, 0xff, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x7f, 0x2, 0xeb, 0x24, 0x8d, 0x45, 0xf0, 0xe8, 0x1f, 0x8, 0xfc, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x4d, 0x8d, 0x45, 0xf0, 0xe8, 0x12, 0x8, 0xfc, 0xff, 0xe8, 0xa9, 0x6, 0xfc, 0xff, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x5, 0xe9, 0xde, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xf6, 0x7, 0xfc, 0xff, 0xe8, 0x8d, 0x6, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0xf, 0x8e, 0xbe, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xe8, 0x8d, 0x45, 0xf0, 0xe8, 0xd2, 0x7, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0xc4, 0x7, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0xc2, 0xe, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0x89, 0xcb, 0xe8, 0xcb, 0x39, 0xff, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xa2, 0x7, 0xfc, 0xff, 0xe8, 0x39, 0x6, 0xfc, 0xff, 0x89, 0xc3, 0x8d, 0x45, 0xf0, 0xe8, 0x93, 0x7, 0xfc, 0xff, 0xe8, 0x2a, 0x6, 0xfc, 0xff, 0x89, 0xc2, 0x66, 0x8b, 0x43, 0xe, 0x66, 0xf, 0xaf, 0x42, 0x14, 0x89, 0x45, 0xd0, 0x8d, 0x45, 0xd4, 0xe8, 0x38, 0x3c, 0xfd, 0xff, 0x98, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0xf3, 0x3b, 0xfd, 0xff, 0x98, 0x8b, 0x12, 0x1, 0xc2, 0x89, 0x55, 0xcc, 0x8b, 0x45, 0xcc, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x25, 0x8b, 0x45, 0xcc, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd0, 0x1, 0xd0, 0x83, 0xf8, 0x7f, 0x7e, 0x8, 0x8b, 0x45, 0xcc, 0xc6, 0, 0x7f, 0xeb, 0x8, 0x8a, 0x45, 0xd0, 0x8b, 0x55, 0xcc, 0, 0x2, 0x8d, 0x45, 0xd4, 0xe8, 0x5f, 0x3a, 0xff, 0xff, 0x84, 0xc0, 0x75, 0xa0, 0xe9, 0x76, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xdd, 0x2, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100b5abe, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x100b5ac3, 0x5)   calld(sys_check_available_stack_size, 0xb028a); /* call 0x10165d52 */
    II(0x100b5ac8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b5ac9, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b5aca, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b5acb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b5acc, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b5ace, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x100b5ad4, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b5ad7, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100b5ada, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100b5add, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100b5ae2, 0x5)   calld(0x10076338, -0x3f7af);          /* call 0x10076338 */
    II(0x100b5ae7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b5ae9, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5aec, 0x5)   calld(0x100764b8, -0x3f639);          /* call 0x100764b8 */
    II(0x100b5af1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b5af4, 0x5)   calld(my_ctor_0x101b4184, -0x3f009);  /* call 0x10076af0 */
    II(0x100b5af9, 0x2)   jmpd(0x100b5b03, 0x8);                /* jmp 0x100b5b03 */
l_0x100b5afb:
    II(0x100b5afb, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5afe, 0x5)   calld(0x10076bf8, -0x3ef0b);          /* call 0x10076bf8 */
l_0x100b5b03:
    II(0x100b5b03, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b5b05, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5b08, 0x5)   calld(0x1013ad71, 0x85264);           /* call 0x1013ad71 */
    II(0x100b5b0d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b5b0f, 0x6)   jzd(0x100b5c85, 0x170);               /* jz dword 0x100b5c85 */
    II(0x100b5b15, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5b18, 0x5)   calld(0x100763a0, -0x3f77d);          /* call 0x100763a0 */
    II(0x100b5b1d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b5b1f, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100b5b22, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b5b25, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b5b28, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b5b2b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b5b2d, 0x2)   jnzd(0x100b5b41, 0x12);               /* jnz 0x100b5b41 */
    II(0x100b5b2f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5b32, 0x5)   calld(0x100763a0, -0x3f797);          /* call 0x100763a0 */
    II(0x100b5b37, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100b5b3b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100b5b3f, 0x2)   jzd(0x100b5b43, 0x2);                 /* jz 0x100b5b43 */
l_0x100b5b41:
    II(0x100b5b41, 0x2)   jmpd(0x100b5b51, 0xe);                /* jmp 0x100b5b51 */
l_0x100b5b43:
    II(0x100b5b43, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5b46, 0x5)   calld(0x100763a0, -0x3f7ab);          /* call 0x100763a0 */
    II(0x100b5b4b, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100b5b4f, 0x2)   jnzd(0x100b5b53, 0x2);                /* jnz 0x100b5b53 */
l_0x100b5b51:
    II(0x100b5b51, 0x2)   jmpd(0x100b5b77, 0x24);               /* jmp 0x100b5b77 */
l_0x100b5b53:
    II(0x100b5b53, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5b56, 0x5)   calld(0x100763a0, -0x3f7bb);          /* call 0x100763a0 */
    II(0x100b5b5b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b5b5d, 0x3)   mov(dl, memb_a32(ds, eax + 0x54));    /* mov dl, [eax+0x54] */
    II(0x100b5b60, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5b63, 0x5)   calld(0x100763a0, -0x3f7c8);          /* call 0x100763a0 */
    II(0x100b5b68, 0x5)   calld(0x1007623c, -0x3f931);          /* call 0x1007623c */
    II(0x100b5b6d, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100b5b70, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b5b73, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b5b75, 0x2)   jgd(0x100b5b79, 0x2);                 /* jg 0x100b5b79 */
l_0x100b5b77:
    II(0x100b5b77, 0x2)   jmpd(0x100b5b9d, 0x24);               /* jmp 0x100b5b9d */
l_0x100b5b79:
    II(0x100b5b79, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5b7c, 0x5)   calld(0x100763a0, -0x3f7e1);          /* call 0x100763a0 */
    II(0x100b5b81, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b5b83, 0x3)   mov(dl, memb_a32(ds, eax + 0x4d));    /* mov dl, [eax+0x4d] */
    II(0x100b5b86, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5b89, 0x5)   calld(0x100763a0, -0x3f7ee);          /* call 0x100763a0 */
    II(0x100b5b8e, 0x5)   calld(0x1007623c, -0x3f957);          /* call 0x1007623c */
    II(0x100b5b93, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100b5b96, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b5b99, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b5b9b, 0x2)   jzd(0x100b5ba2, 0x5);                 /* jz 0x100b5ba2 */
l_0x100b5b9d:
    II(0x100b5b9d, 0x5)   jmpd(0x100b5c80, 0xde);               /* jmp 0x100b5c80 */
l_0x100b5ba2:
    II(0x100b5ba2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5ba5, 0x5)   calld(0x100763a0, -0x3f80a);          /* call 0x100763a0 */
    II(0x100b5baa, 0x5)   calld(0x1007623c, -0x3f973);          /* call 0x1007623c */
    II(0x100b5baf, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x100b5bb3, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b5bb6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100b5bba, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b5bbc, 0x6)   jled(0x100b5c80, 0xbe);               /* jle dword 0x100b5c80 */
    II(0x100b5bc2, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x18)); /* movsx ecx, word [ebp-0x18] */
    II(0x100b5bc6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5bc9, 0x5)   calld(0x100763a0, -0x3f82e);          /* call 0x100763a0 */
    II(0x100b5bce, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100b5bd1, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b5bd4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5bd7, 0x5)   calld(0x100763a0, -0x3f83c);          /* call 0x100763a0 */
    II(0x100b5bdc, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100b5bdf, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b5be2, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b5be5, 0x5)   calld(0x10076aac, -0x3f13e);          /* call 0x10076aac */
    II(0x100b5bea, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b5bec, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b5bef, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x100b5bf1, 0x5)   calld(0x100a95c1, -0xc635);           /* call 0x100a95c1 */
    II(0x100b5bf6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5bf9, 0x5)   calld(0x100763a0, -0x3f85e);          /* call 0x100763a0 */
    II(0x100b5bfe, 0x5)   calld(0x1007623c, -0x3f9c7);          /* call 0x1007623c */
    II(0x100b5c03, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b5c05, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5c08, 0x5)   calld(0x100763a0, -0x3f86d);          /* call 0x100763a0 */
    II(0x100b5c0d, 0x5)   calld(0x1007623c, -0x3f9d6);          /* call 0x1007623c */
    II(0x100b5c12, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b5c14, 0x4)   mov(ax, memw_a32(ds, ebx + 0xe));     /* mov ax, [ebx+0xe] */
    II(0x100b5c18, 0x5)   imul(ax, memw_a32(ds, edx + 0x14));   /* imul ax, [edx+0x14] */
    II(0x100b5c1d, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
l_0x100b5c20:
    II(0x100b5c20, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b5c23, 0x5)   calld(0x10089860, -0x2c3c8);          /* call 0x10089860 */
    II(0x100b5c28, 0x1)   cwde();                               /* cwde */
    II(0x100b5c29, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100b5c2c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b5c2f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100b5c31, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b5c34, 0x5)   calld(0x1008982c, -0x2c40d);          /* call 0x1008982c */
    II(0x100b5c39, 0x1)   cwde();                               /* cwde */
    II(0x100b5c3a, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100b5c3c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100b5c3e, 0x3)   mov(memd_a32(ss, ebp - 0x34), edx);   /* mov [ebp-0x34], edx */
    II(0x100b5c41, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100b5c44, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100b5c46, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b5c4b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b5c4d, 0x2)   jzd(0x100b5c74, 0x25);                /* jz 0x100b5c74 */
    II(0x100b5c4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100b5c52, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100b5c54, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b5c59, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100b5c5d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100b5c5f, 0x3)   cmp(eax, 0x7f);                       /* cmp eax, 0x7f */
    II(0x100b5c62, 0x2)   jled(0x100b5c6c, 0x8);                /* jle 0x100b5c6c */
    II(0x100b5c64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100b5c67, 0x3)   mov(memb_a32(ds, eax), 0x7f);         /* mov byte [eax], 0x7f */
    II(0x100b5c6a, 0x2)   jmpd(0x100b5c74, 0x8);                /* jmp 0x100b5c74 */
l_0x100b5c6c:
    II(0x100b5c6c, 0x3)   mov(al, memb_a32(ss, ebp - 0x30));    /* mov al, [ebp-0x30] */
    II(0x100b5c6f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x100b5c72, 0x2)   add(memb_a32(ds, edx), al);           /* add [edx], al */
l_0x100b5c74:
    II(0x100b5c74, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b5c77, 0x5)   calld(0x100a96db, -0xc5a1);           /* call 0x100a96db */
    II(0x100b5c7c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b5c7e, 0x2)   jnzd(0x100b5c20, -0x60);              /* jnz 0x100b5c20 */
l_0x100b5c80:
    II(0x100b5c80, 0x5)   jmpd(0x100b5afb, -0x18a);             /* jmp 0x100b5afb */
l_0x100b5c85:
    II(0x100b5c85, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b5c87, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b5c8a, 0x5)   calld(0x10075f6c, -0x3fd23);          /* call 0x10075f6c */
    II(0x100b5c8f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b5c91, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b5c92, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b5c93, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b5c94, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b5c95, 0x1)   retd();                               /* ret */
FUNC_END

