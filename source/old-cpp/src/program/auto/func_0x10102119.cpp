FUNC_BEGIN(0x10102119, 0x5d3bf0fe1201f9db, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0x2f, 0x3c, 0x6, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xec, 0xe8, 0x31, 0xa, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x46, 0xa, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xf4, 0x8d, 0x45, 0xe8, 0xe8, 0x57, 0x81, 0x5, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xe9, 0x43, 0xf7, 0xff, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xe4, 0xf7, 0x45, 0xe4, 0, 0, 0, 0x1, 0x74, 0x14, 0x8b, 0x5d, 0xe4, 0xf, 0xbf, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x9e, 0x1e, 0xf7, 0xff, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0x7e, 0, 0, 0, 0xf7, 0x45, 0xe4, 0x10, 0, 0, 0, 0x74, 0x9, 0xc7, 0x45, 0xe0, 0x11, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0x12, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0xe8, 0xad, 0x9, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xc2, 0x9, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xf, 0xbf, 0x55, 0xdc, 0x6b, 0xd2, 0x33, 0x8b, 0x92, 0xc6, 0x81, 0x1c, 0x10, 0x8a, 0x52, 0x1, 0x81, 0xe2, 0xff, 0, 0, 0, 0xe8, 0x98, 0x3c, 0x6, 0, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xd8, 0xe8, 0xb3, 0x80, 0x5, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xfb, 0x3c, 0xf7, 0xff, 0x66, 0x83, 0x7d, 0xf4, 0x28, 0x75, 0x15, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8d, 0x45, 0xe8, 0xe8, 0xb8, 0x43, 0xf7, 0xff, 0xe8, 0x16, 0x10, 0x6, 0, 0xf7, 0x45, 0xe4, 0x18, 0, 0x80, 0, 0x74, 0xd, 0x8d, 0x45, 0xe8, 0xe8, 0xa2, 0x43, 0xf7, 0xff, 0xe8, 0x10, 0xca, 0x5, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xbf, 0x3c, 0xf7, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10102119, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x1010211e, 0x5)   calld(sys_check_available_stack_size, 0x63c2f); /* call 0x10165d52 */
    II(0x10102123, 0x1)   pushd(esi);                           /* push esi */
    II(0x10102124, 0x1)   pushd(edi);                           /* push edi */
    II(0x10102125, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10102126, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10102128, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x1010212e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10102131, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10102134, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10102137, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1010213a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1010213e, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10102144, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x10102149, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010214b, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x1010214e, 0x5)   calld(0x10102b84, 0xa31);             /* call 0x10102b84 */
    II(0x10102153, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10102158, 0x1)   pushd(eax);                           /* push eax */
    II(0x10102159, 0x5)   calld(0x10102ba4, 0xa46);             /* call 0x10102ba4 */
    II(0x1010215e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10102163, 0x1)   pushd(eax);                           /* push eax */
    II(0x10102164, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10102166, 0x1)   pushd(eax);                           /* push eax */
    II(0x10102167, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1010216b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010216c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10102170, 0x1)   pushd(eax);                           /* push eax */
    II(0x10102171, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10102173, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x10102177, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1010217b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1010217e, 0x5)   calld(0x1015a2da, 0x58157);           /* call 0x1015a2da */
    II(0x10102183, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10102186, 0x5)   calld(0x10076574, -0x8bc17);          /* call 0x10076574 */
    II(0x1010218b, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1010218e, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10102191, 0x7)   test(memd_a32(ss, ebp - 0x1c), 0x1000000); /* test dword [ebp-0x1c], 0x1000000 */
    II(0x10102198, 0x2)   jzd(0x101021ae, 0x14);                /* jz 0x101021ae */
    II(0x1010219a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x1c));   /* mov ebx, [ebp-0x1c] */
    II(0x1010219d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x101021a1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101021a5, 0x5)   calld(0x10074048, -0x8e162);          /* call 0x10074048 */
    II(0x101021aa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101021ac, 0x2)   jnzd(0x101021b3, 0x5);                /* jnz 0x101021b3 */
l_0x101021ae:
    II(0x101021ae, 0x5)   jmpd(0x10102231, 0x7e);               /* jmp 0x10102231 */
l_0x101021b3:
    II(0x101021b3, 0x7)   test(memd_a32(ss, ebp - 0x1c), 0x10); /* test dword [ebp-0x1c], 0x10 */
    II(0x101021ba, 0x2)   jzd(0x101021c5, 0x9);                 /* jz 0x101021c5 */
    II(0x101021bc, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x11);  /* mov dword [ebp-0x20], 0x11 */
    II(0x101021c3, 0x2)   jmpd(0x101021cc, 0x7);                /* jmp 0x101021cc */
l_0x101021c5:
    II(0x101021c5, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x12);  /* mov dword [ebp-0x20], 0x12 */
l_0x101021cc:
    II(0x101021cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101021cf, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101021d2, 0x5)   calld(0x10102b84, 0x9ad);             /* call 0x10102b84 */
    II(0x101021d7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101021dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101021dd, 0x5)   calld(0x10102ba4, 0x9c2);             /* call 0x10102ba4 */
    II(0x101021e2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101021e7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101021e8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x101021ec, 0x3)   imul(edx, edx, 0x33);                 /* imul edx, edx, 0x33 */
    II(0x101021ef, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c81c6)); /* mov edx, [edx+0x101c81c6] */
    II(0x101021f5, 0x3)   mov(dl, memb_a32(ds, edx + 0x1));     /* mov dl, [edx+0x1] */
    II(0x101021f8, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x101021fe, 0x5)   calld(/* sys */ 0x10165e9b, 0x63c98); /* call 0x10165e9b */
    II(0x10102203, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10102206, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x10102209, 0x1)   cwde();                               /* cwde */
    II(0x1010220a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010220b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1010220f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10102210, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10102214, 0x1)   pushd(eax);                           /* push eax */
    II(0x10102215, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10102217, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x1010221b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1010221f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10102222, 0x5)   calld(0x1015a2da, 0x580b3);           /* call 0x1015a2da */
    II(0x10102227, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10102229, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1010222c, 0x5)   calld(0x10075f2c, -0x8c305);          /* call 0x10075f2c */
l_0x10102231:
    II(0x10102231, 0x5)   cmp(memw_a32(ss, ebp - 0xc), 0x28);   /* cmp word [ebp-0xc], 0x28 */
    II(0x10102236, 0x2)   jnzd(0x1010224d, 0x15);               /* jnz 0x1010224d */
    II(0x10102238, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1010223c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10102240, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10102243, 0x5)   calld(0x10076600, -0x8bc48);          /* call 0x10076600 */
    II(0x10102248, 0x5)   calld(0x10163263, 0x61016);           /* call 0x10163263 */
l_0x1010224d:
    II(0x1010224d, 0x7)   test(memd_a32(ss, ebp - 0x1c), 0x800018); /* test dword [ebp-0x1c], 0x800018 */
    II(0x10102254, 0x2)   jzd(0x10102263, 0xd);                 /* jz 0x10102263 */
    II(0x10102256, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10102259, 0x5)   calld(0x10076600, -0x8bc5e);          /* call 0x10076600 */
    II(0x1010225e, 0x5)   calld(0x1015ec73, 0x5ca10);           /* call 0x1015ec73 */
l_0x10102263:
    II(0x10102263, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10102265, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10102268, 0x5)   calld(0x10075f2c, -0x8c341);          /* call 0x10075f2c */
    II(0x1010226d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010226f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10102270, 0x1)   popd(edi);                            /* pop edi */
    II(0x10102271, 0x1)   popd(esi);                            /* pop esi */
    II(0x10102272, 0x1)   retd();                               /* ret */
FUNC_END

