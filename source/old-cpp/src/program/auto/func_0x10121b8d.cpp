FUNC_BEGIN(0x10121b8d, 0x14a76f64328a3b28, 0x20, ({0x68, 0x4, 0x1, 0, 0, 0xe8, 0xbb, 0x41, 0x4, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xe0, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xba, 0x54, 0x4e, 0x1c, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0xbd, 0x31, 0xfb, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x1c, 0x8a, 0x80, 0x61, 0xb0, 0x1b, 0x10, 0x88, 0x45, 0xe8, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xec, 0xe9, 0xca, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x1c, 0x8b, 0x90, 0x5d, 0xb0, 0x1b, 0x10, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0xe1, 0x42, 0x4, 0, 0xba, 0x78, 0x36, 0x1c, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x39, 0x17, 0, 0, 0xe9, 0xf1, 0, 0, 0, 0xf, 0xbe, 0x45, 0xe8, 0xe8, 0xd3, 0x43, 0xf5, 0xff, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0xf8, 0xb3, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x1c, 0xff, 0xb0, 0x5d, 0xb0, 0x1b, 0x10, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0x50, 0xe8, 0xd6, 0x42, 0x4, 0, 0x83, 0xc4, 0xc, 0xe9, 0xbe, 0, 0, 0, 0xf, 0xbe, 0x45, 0xe8, 0xe8, 0xa0, 0x43, 0xf5, 0xff, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0, 0xb4, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x1c, 0xff, 0xb0, 0x5d, 0xb0, 0x1b, 0x10, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0x50, 0xe8, 0xa3, 0x42, 0x4, 0, 0x83, 0xc4, 0xc, 0xe9, 0x8b, 0, 0, 0, 0xa1, 0x64, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x18, 0xb4, 0x1b, 0x10, 0xa1, 0x66, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x1c, 0xff, 0xb0, 0x5d, 0xb0, 0x1b, 0x10, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x68, 0x42, 0x4, 0, 0x83, 0xc4, 0x10, 0xeb, 0x53, 0xeb, 0x51, 0x8a, 0x45, 0xec, 0x88, 0x85, 0x24, 0xff, 0xff, 0xff, 0x80, 0xbd, 0x24, 0xff, 0xff, 0xff, 0x49, 0x72, 0x30, 0x80, 0xbd, 0x24, 0xff, 0xff, 0xff, 0x49, 0xf, 0x86, 0x41, 0xff, 0xff, 0xff, 0x80, 0xbd, 0x24, 0xff, 0xff, 0xff, 0x4b, 0x72, 0x18, 0x80, 0xbd, 0x24, 0xff, 0xff, 0xff, 0x4b, 0x76, 0x95, 0x80, 0xbd, 0x24, 0xff, 0xff, 0xff, 0x4c, 0xf, 0x84, 0x55, 0xff, 0xff, 0xff, 0xeb, 0xbe, 0xeb, 0xbc, 0x80, 0xbd, 0x24, 0xff, 0xff, 0xff, 0x36, 0xf, 0x84, 0xe7, 0xfe, 0xff, 0xff, 0xeb, 0xad, 0x8d, 0x55, 0xe4, 0x8d, 0x85, 0x20, 0xff, 0xff, 0xff, 0xe8, 0x79, 0x30, 0xfb, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x14, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x5d, 0xf8, 0x8d, 0x95, 0x28, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0x6b, 0x8e, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10121b8d, 0x5)   pushd(0x104);                         /* push dword 0x104 */
    II(0x10121b92, 0x5)   calld(sys_check_available_stack_size, 0x441bb); /* call 0x10165d52 */
    II(0x10121b97, 0x1)   pushd(esi);                           /* push esi */
    II(0x10121b98, 0x1)   pushd(edi);                           /* push edi */
    II(0x10121b99, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10121b9a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10121b9c, 0x6)   sub(esp, 0xe0);                       /* sub esp, 0xe0 */
    II(0x10121ba2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10121ba5, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10121ba8, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10121bab, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x10121bae, 0x5)   mov(edx, 0x101c4e54);                 /* mov edx, 0x101c4e54 */
    II(0x10121bb3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10121bb6, 0x5)   calld(0x100d4d78, -0x4ce43);          /* call 0x100d4d78 */
    II(0x10121bbb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10121bbf, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x10121bc2, 0x6)   mov(al, memb_a32(ds, eax + 0x101bb061)); /* mov al, [eax+0x101bb061] */
    II(0x10121bc8, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
//    II(0x10121bcb, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x10121bce, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10121bd1, 0x5)   jmpd(0x10121ca0, 0xca);               /* jmp 0x10121ca0 */
l_0x10121bd6:
    II(0x10121bd6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10121bda, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x10121bdd, 0x6)   mov(edx, memd_a32(ds, eax + 0x101bb05d)); /* mov edx, [eax+0x101bb05d] */
    II(0x10121be3, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x10121be9, 0x5)   calld(sys_strcpy, 0x442e1);           /* call 0x10165ecf */
    II(0x10121bee, 0x5)   mov(edx, 0x101c3678);                 /* mov edx, 0x101c3678 */
    II(0x10121bf3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10121bf6, 0x5)   calld(0x10123334, 0x1739);            /* call 0x10123334 */
    II(0x10121bfb, 0x5)   jmpd(0x10121cf1, 0xf1);               /* jmp 0x10121cf1 */
l_0x10121c00:
    II(0x10121c00, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x18)); /* movsx eax, byte [ebp-0x18] */
    II(0x10121c04, 0x5)   calld(0x10075fdc, -0xabc2d);          /* call 0x10075fdc */
    II(0x10121c09, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10121c0c, 0x6)   pushd(memd_a32(ds, eax + 0x101bb3f8)); /* push dword [eax+0x101bb3f8] */
    II(0x10121c12, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10121c16, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x10121c19, 0x6)   pushd(memd_a32(ds, eax + 0x101bb05d)); /* push dword [eax+0x101bb05d] */
    II(0x10121c1f, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x10121c25, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121c26, 0x5)   calld(sys_sprintf, 0x442d6);          /* call 0x10165f01 */
    II(0x10121c2b, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x10121c2e, 0x5)   jmpd(0x10121cf1, 0xbe);               /* jmp 0x10121cf1 */
l_0x10121c33:
    II(0x10121c33, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x18)); /* movsx eax, byte [ebp-0x18] */
    II(0x10121c37, 0x5)   calld(0x10075fdc, -0xabc60);          /* call 0x10075fdc */
    II(0x10121c3c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10121c3f, 0x6)   pushd(memd_a32(ds, eax + 0x101bb400)); /* push dword [eax+0x101bb400] */
    II(0x10121c45, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10121c49, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x10121c4c, 0x6)   pushd(memd_a32(ds, eax + 0x101bb05d)); /* push dword [eax+0x101bb05d] */
    II(0x10121c52, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x10121c58, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121c59, 0x5)   calld(sys_sprintf, 0x442a3);          /* call 0x10165f01 */
    II(0x10121c5e, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x10121c61, 0x5)   jmpd(0x10121cf1, 0x8b);               /* jmp 0x10121cf1 */
l_0x10121c66:
    II(0x10121c66, 0x5)   mov(eax, memd_a32(ds, 0x101c3964));   /* mov eax, [0x101c3964] */
    II(0x10121c6b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10121c6e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10121c71, 0x6)   pushd(memd_a32(ds, eax + 0x101bb418)); /* push dword [eax+0x101bb418] */
    II(0x10121c77, 0x5)   mov(eax, memd_a32(ds, 0x101c3966));   /* mov eax, [0x101c3966] */
    II(0x10121c7c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10121c7f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121c80, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10121c84, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x10121c87, 0x6)   pushd(memd_a32(ds, eax + 0x101bb05d)); /* push dword [eax+0x101bb05d] */
    II(0x10121c8d, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x10121c93, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121c94, 0x5)   calld(sys_sprintf, 0x44268);          /* call 0x10165f01 */
    II(0x10121c99, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x10121c9c, 0x2)   jmpd(0x10121cf1, 0x53);               /* jmp 0x10121cf1 */
l_0x10121c9e:
    II(0x10121c9e, 0x2)   jmpd(0x10121cf1, 0x51);               /* jmp 0x10121cf1 */
l_0x10121ca0:
    II(0x10121ca0, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10121ca3, 0x6)   mov(memb_a32(ss, ebp - 0xdc), al);    /* mov [ebp+0xffffff24], al */
    II(0x10121ca9, 0x7)   cmp(memb_a32(ss, ebp - 0xdc), 0x49);  /* cmp byte [ebp+0xffffff24], 0x49 */
    II(0x10121cb0, 0x2)   jbd(0x10121ce2, 0x30);                /* jb 0x10121ce2 */
    II(0x10121cb2, 0x7)   cmp(memb_a32(ss, ebp - 0xdc), 0x49);  /* cmp byte [ebp+0xffffff24], 0x49 */
    II(0x10121cb9, 0x6)   jbed(0x10121c00, -0xbf);              /* jbe dword 0x10121c00 */
    II(0x10121cbf, 0x7)   cmp(memb_a32(ss, ebp - 0xdc), 0x4b);  /* cmp byte [ebp+0xffffff24], 0x4b */
    II(0x10121cc6, 0x2)   jbd(0x10121ce0, 0x18);                /* jb 0x10121ce0 */
    II(0x10121cc8, 0x7)   cmp(memb_a32(ss, ebp - 0xdc), 0x4b);  /* cmp byte [ebp+0xffffff24], 0x4b */
    II(0x10121ccf, 0x2)   jbed(0x10121c66, -0x6b);              /* jbe 0x10121c66 */
    II(0x10121cd1, 0x7)   cmp(memb_a32(ss, ebp - 0xdc), 0x4c);  /* cmp byte [ebp+0xffffff24], 0x4c */
    II(0x10121cd8, 0x6)   jzd(0x10121c33, -0xab);               /* jz dword 0x10121c33 */
    II(0x10121cde, 0x2)   jmpd(0x10121c9e, -0x42);              /* jmp 0x10121c9e */
l_0x10121ce0:
    II(0x10121ce0, 0x2)   jmpd(0x10121c9e, -0x44);              /* jmp 0x10121c9e */
l_0x10121ce2:
    II(0x10121ce2, 0x7)   cmp(memb_a32(ss, ebp - 0xdc), 0x36);  /* cmp byte [ebp+0xffffff24], 0x36 */
    II(0x10121ce9, 0x6)   jzd(0x10121bd6, -0x119);              /* jz dword 0x10121bd6 */
    II(0x10121cef, 0x2)   jmpd(0x10121c9e, -0x53);              /* jmp 0x10121c9e */
l_0x10121cf1:
    II(0x10121cf1, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x10121cf4, 0x6)   lea(eax, ebp - 0xe0);                 /* lea eax, [ebp+0xffffff20] */
    II(0x10121cfa, 0x5)   calld(0x100d4d78, -0x4cf87);          /* call 0x100d4d78 */
    II(0x10121cff, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121d00, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10121d05, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121d06, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10121d08, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121d09, 0x5)   mov(eax, 0x14);                       /* mov eax, 0x14 */
    II(0x10121d0e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121d0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10121d12, 0x3)   mov(eax, memd_a32(ds, eax + 0x25));   /* mov eax, [eax+0x25] */
    II(0x10121d15, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10121d18, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121d19, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x10121d1d, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x10121d21, 0x6)   lea(edx, ebp - 0xd8);                 /* lea edx, [ebp+0xffffff28] */
    II(0x10121d27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10121d2a, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x10121d2d, 0x5)   calld(0x100eab9d, -0x37195);          /* call 0x100eab9d */
    II(0x10121d32, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10121d34, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10121d35, 0x1)   popd(edi);                            /* pop edi */
    II(0x10121d36, 0x1)   popd(esi);                            /* pop esi */
    II(0x10121d37, 0x1)   retd();                               /* ret */
FUNC_END

