FUNC_BEGIN(0x1007d6bb, 0xab152c64b9b4c818, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x8d, 0x86, 0xe, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xf4, 0x8b, 0x45, 0xf8, 0xe8, 0xac, 0xd6, 0, 0, 0x98, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x89, 0x45, 0xdc, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xe8, 0x4c, 0x5a, 0x2, 0, 0x89, 0x45, 0xd8, 0x80, 0x4d, 0xec, 0x1, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xf0, 0x83, 0xc2, 0xa, 0x8d, 0x45, 0xd4, 0xe8, 0xeb, 0xad, 0x3, 0, 0x89, 0x45, 0xd0, 0x80, 0x65, 0xec, 0xfe, 0x8d, 0x45, 0xd4, 0xe8, 0x77, 0xcd, 0, 0, 0x98, 0x85, 0xc0, 0x75, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x94, 0xb6, 0, 0, 0xe9, 0x9, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x14, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0xe, 0xe8, 0x7, 0xdc, 0, 0, 0x66, 0x3b, 0x45, 0xe8, 0x7e, 0x29, 0x8b, 0x45, 0xf8, 0xe8, 0x21, 0xd6, 0, 0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0xe, 0xe8, 0xa7, 0xda, 0, 0, 0xf, 0xbf, 0, 0x89, 0xda, 0xe8, 0x59, 0x4c, 0x2, 0, 0x1, 0x45, 0xe0, 0xeb, 0xc0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0xa, 0xe8, 0xf6, 0xcc, 0, 0, 0x66, 0x3b, 0x45, 0xe8, 0xf, 0x8e, 0x93, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0xa, 0xe8, 0x19, 0xcc, 0, 0, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xdc, 0xe8, 0x36, 0xd9, 0, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xd8, 0x7f, 0xd, 0x8b, 0x45, 0xcc, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x1e, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0xa, 0xe8, 0xe0, 0xcb, 0, 0, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc3, 0x81, 0x1c, 0x10, 0x10, 0x74, 0x2, 0xeb, 0x23, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0xa, 0xe8, 0xc0, 0xcb, 0, 0, 0xf, 0xbf, 0, 0xe8, 0xd6, 0x6, 0x5, 0, 0x98, 0x1, 0xc0, 0x3, 0x45, 0xf4, 0x66, 0x83, 0x38, 0, 0x75, 0x12, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd4, 0xe8, 0xa0, 0xcb, 0, 0, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0xe9, 0x52, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xe0, 0x1, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0xf, 0x8d, 0xd5, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x9b, 0xae, 0x3, 0, 0x89, 0x45, 0xc8, 0x66, 0x83, 0x7d, 0xc8, 0xff, 0x75, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x49, 0xb5, 0, 0, 0xe9, 0xbe, 0, 0, 0, 0xf, 0xbf, 0x45, 0xc8, 0xe8, 0x69, 0x6, 0x5, 0, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x1, 0xc0, 0x3, 0x45, 0xf4, 0x66, 0xff, 0x8, 0x66, 0x83, 0x38, 0, 0x75, 0x60, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8d, 0x45, 0xd4, 0xe8, 0xe3, 0xcb, 0, 0, 0x66, 0x3b, 0x45, 0xe8, 0x7e, 0x43, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd4, 0xe8, 0xd, 0xcb, 0, 0, 0x66, 0x83, 0x78, 0x2, 0, 0x74, 0x1a, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd4, 0xe8, 0xfa, 0xca, 0, 0, 0xf, 0xbf, 0, 0xe8, 0x10, 0x6, 0x5, 0, 0x66, 0x3b, 0x45, 0xe4, 0x74, 0x2, 0xeb, 0x12, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd4, 0xe8, 0xde, 0xca, 0, 0, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0xeb, 0xa9, 0x8b, 0x45, 0xf8, 0xe8, 0x82, 0xd4, 0, 0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xc8, 0xe8, 0xca, 0x4a, 0x2, 0, 0x1, 0x45, 0xe0, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0xe, 0xe8, 0x7d, 0xd9, 0, 0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0x45, 0xf8, 0xe8, 0x85, 0x8a, 0x2, 0, 0xe9, 0xb, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x86, 0xb4, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x1007d6bb, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x1007d6c0, 0x5)   calld(sys_check_available_stack_size, 0xe868d); /* call 0x10165d52 */
    II(0x1007d6c5, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007d6c6, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007d6c7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007d6c8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007d6ca, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x1007d6d0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007d6d3, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1007d6d6, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1007d6d9, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x1007d6dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d6df, 0x5)   calld(0x1008ad90, 0xd6ac);            /* call 0x1008ad90 */
    II(0x1007d6e4, 0x1)   cwde();                               /* cwde */
    II(0x1007d6e5, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1007d6eb, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x1007d6f1, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1007d6f4, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x1007d6fb, 0x5)   calld(0x100a314c, 0x25a4c);           /* call 0x100a314c */
    II(0x1007d700, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1007d703, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x1007d707, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1007d70c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1007d70f, 0x3)   add(edx, 0xa);                        /* add edx, 0xa */
    II(0x1007d712, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d715, 0x5)   calld(0x100b8505, 0x3adeb);           /* call 0x100b8505 */
    II(0x1007d71a, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1007d71d, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x1007d721, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d724, 0x5)   calld(0x1008a4a0, 0xcd77);            /* call 0x1008a4a0 */
    II(0x1007d729, 0x1)   cwde();                               /* cwde */
    II(0x1007d72a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007d72c, 0x2)   jnzd(0x1007d73d, 0xf);                /* jnz 0x1007d73d */
    II(0x1007d72e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007d730, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d733, 0x5)   calld(0x10088dcc, 0xb694);            /* call 0x10088dcc */
    II(0x1007d738, 0x5)   jmpd(0x1007d946, 0x209);              /* jmp 0x1007d946 */
l_0x1007d73d:
    II(0x1007d73d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007d740, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1007d743, 0x4)   mov(memw_a32(ds, edx + 0x14), ax);    /* mov [edx+0x14], ax */
    II(0x1007d747, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1007d74e, 0x2)   jmpd(0x1007d756, 0x6);                /* jmp 0x1007d756 */
l_0x1007d750:
    II(0x1007d750, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1007d753, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x1007d756:
    II(0x1007d756, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d759, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1007d75c, 0x5)   calld(my_2_get_count, 0xdc07);        /* call 0x1008b368 */
    II(0x1007d761, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x1007d765, 0x2)   jled(0x1007d790, 0x29);               /* jle 0x1007d790 */
    II(0x1007d767, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d76a, 0x5)   calld(0x1008ad90, 0xd621);            /* call 0x1008ad90 */
    II(0x1007d76f, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1007d772, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007d776, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d779, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1007d77c, 0x5)   calld(0x1008b228, 0xdaa7);            /* call 0x1008b228 */
    II(0x1007d781, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1007d784, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1007d786, 0x5)   calld(0x100a23e4, 0x24c59);           /* call 0x100a23e4 */
    II(0x1007d78b, 0x3)   add(memd_a32(ss, ebp - 0x20), eax);   /* add [ebp-0x20], eax */
    II(0x1007d78e, 0x2)   jmpd(0x1007d750, -0x40);              /* jmp 0x1007d750 */
l_0x1007d790:
    II(0x1007d790, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1007d797, 0x2)   jmpd(0x1007d79f, 0x6);                /* jmp 0x1007d79f */
l_0x1007d799:
    II(0x1007d799, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1007d79c, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x1007d79f:
    II(0x1007d79f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d7a2, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x1007d7a5, 0x5)   calld(0x1008a4a0, 0xccf6);            /* call 0x1008a4a0 */
    II(0x1007d7aa, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x1007d7ae, 0x6)   jled(0x1007d847, 0x93);               /* jle dword 0x1007d847 */
    II(0x1007d7b4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007d7b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d7bb, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x1007d7be, 0x5)   calld(0x1008a3dc, 0xcc19);            /* call 0x1008a3dc */
    II(0x1007d7c3, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1007d7c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1007d7c9, 0x5)   calld(0x1008b104, 0xd936);            /* call 0x1008b104 */
    II(0x1007d7ce, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x1007d7d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1007d7d4, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1007d7d8, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x28));    /* cmp ax, [ebp-0x28] */
    II(0x1007d7dc, 0x2)   jgd(0x1007d7eb, 0xd);                 /* jg 0x1007d7eb */
    II(0x1007d7de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1007d7e1, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1007d7e4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007d7e7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007d7e9, 0x2)   jnzd(0x1007d7ed, 0x2);                /* jnz 0x1007d7ed */
l_0x1007d7eb:
    II(0x1007d7eb, 0x2)   jmpd(0x1007d80b, 0x1e);               /* jmp 0x1007d80b */
l_0x1007d7ed:
    II(0x1007d7ed, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007d7f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d7f4, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x1007d7f7, 0x5)   calld(0x1008a3dc, 0xcbe0);            /* call 0x1008a3dc */
    II(0x1007d7fc, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1007d7ff, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1007d802, 0x7)   test(memb_a32(ds, eax + 0x101c81c3), 0x10); /* test byte [eax+0x101c81c3], 0x10 */
    II(0x1007d809, 0x2)   jzd(0x1007d80d, 0x2);                 /* jz 0x1007d80d */
l_0x1007d80b:
    II(0x1007d80b, 0x2)   jmpd(0x1007d830, 0x23);               /* jmp 0x1007d830 */
l_0x1007d80d:
    II(0x1007d80d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007d811, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d814, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x1007d817, 0x5)   calld(0x1008a3dc, 0xcbc0);            /* call 0x1008a3dc */
    II(0x1007d81c, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1007d81f, 0x5)   calld(0x100cdefa, 0x506d6);           /* call 0x100cdefa */
    II(0x1007d824, 0x1)   cwde();                               /* cwde */
    II(0x1007d825, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1007d827, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1007d82a, 0x4)   cmp(memw_a32(ds, eax), 0);            /* cmp word [eax], 0x0 */
    II(0x1007d82e, 0x2)   jnzd(0x1007d842, 0x12);               /* jnz 0x1007d842 */
l_0x1007d830:
    II(0x1007d830, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007d834, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d837, 0x5)   calld(0x1008a3dc, 0xcba0);            /* call 0x1008a3dc */
    II(0x1007d83c, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
l_0x1007d842:
    II(0x1007d842, 0x5)   jmpd(0x1007d799, -0xae);              /* jmp 0x1007d799 */
l_0x1007d847:
    II(0x1007d847, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d84a, 0x3)   mov(edx, memd_a32(ds, eax + 0x10));   /* mov edx, [eax+0x10] */
    II(0x1007d84d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007d850, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1007d854, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1007d856, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d859, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1007d85c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007d85f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007d861, 0x6)   jged(0x1007d93c, 0xd5);               /* jge dword 0x1007d93c */
    II(0x1007d867, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d86a, 0x5)   calld(0x100b870a, 0x3ae9b);           /* call 0x100b870a */
    II(0x1007d86f, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1007d872, 0x5)   cmp(memw_a32(ss, ebp - 0x38), -0x1 /* 0xff */); /* cmp word [ebp-0x38], 0xff */
    II(0x1007d877, 0x2)   jnzd(0x1007d888, 0xf);                /* jnz 0x1007d888 */
    II(0x1007d879, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007d87b, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d87e, 0x5)   calld(0x10088dcc, 0xb549);            /* call 0x10088dcc */
    II(0x1007d883, 0x5)   jmpd(0x1007d946, 0xbe);               /* jmp 0x1007d946 */
l_0x1007d888:
    II(0x1007d888, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x1007d88c, 0x5)   calld(0x100cdefa, 0x50669);           /* call 0x100cdefa */
    II(0x1007d891, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1007d894, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1007d898, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1007d89a, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1007d89d, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
    II(0x1007d8a0, 0x4)   cmp(memw_a32(ds, eax), 0);            /* cmp word [eax], 0x0 */
    II(0x1007d8a4, 0x2)   jnzd(0x1007d906, 0x60);               /* jnz 0x1007d906 */
    II(0x1007d8a6, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1007d8ad, 0x2)   jmpd(0x1007d8b5, 0x6);                /* jmp 0x1007d8b5 */
l_0x1007d8af:
    II(0x1007d8af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1007d8b2, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x1007d8b5:
    II(0x1007d8b5, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d8b8, 0x5)   calld(0x1008a4a0, 0xcbe3);            /* call 0x1008a4a0 */
    II(0x1007d8bd, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x1007d8c1, 0x2)   jled(0x1007d906, 0x43);               /* jle 0x1007d906 */
    II(0x1007d8c3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007d8c7, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d8ca, 0x5)   calld(0x1008a3dc, 0xcb0d);            /* call 0x1008a3dc */
    II(0x1007d8cf, 0x5)   cmp(memw_a32(ds, eax + 0x2), 0);      /* cmp word [eax+0x2], 0x0 */
    II(0x1007d8d4, 0x2)   jzd(0x1007d8f0, 0x1a);                /* jz 0x1007d8f0 */
    II(0x1007d8d6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007d8da, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d8dd, 0x5)   calld(0x1008a3dc, 0xcafa);            /* call 0x1008a3dc */
    II(0x1007d8e2, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1007d8e5, 0x5)   calld(0x100cdefa, 0x50610);           /* call 0x100cdefa */
    II(0x1007d8ea, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1c));    /* cmp ax, [ebp-0x1c] */
    II(0x1007d8ee, 0x2)   jzd(0x1007d8f2, 0x2);                 /* jz 0x1007d8f2 */
l_0x1007d8f0:
    II(0x1007d8f0, 0x2)   jmpd(0x1007d904, 0x12);               /* jmp 0x1007d904 */
l_0x1007d8f2:
    II(0x1007d8f2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007d8f6, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d8f9, 0x5)   calld(0x1008a3dc, 0xcade);            /* call 0x1008a3dc */
    II(0x1007d8fe, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
l_0x1007d904:
    II(0x1007d904, 0x2)   jmpd(0x1007d8af, -0x57);              /* jmp 0x1007d8af */
l_0x1007d906:
    II(0x1007d906, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d909, 0x5)   calld(0x1008ad90, 0xd482);            /* call 0x1008ad90 */
    II(0x1007d90e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007d911, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x1007d915, 0x5)   calld(0x100a23e4, 0x24aca);           /* call 0x100a23e4 */
    II(0x1007d91a, 0x3)   add(memd_a32(ss, ebp - 0x20), eax);   /* add [ebp-0x20], eax */
    II(0x1007d91d, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x1007d920, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d923, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1007d926, 0x5)   calld(0x1008b2a8, 0xd97d);            /* call 0x1008b2a8 */
    II(0x1007d92b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1007d92f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d932, 0x5)   calld(0x100a63bc, 0x28a85);           /* call 0x100a63bc */
    II(0x1007d937, 0x5)   jmpd(0x1007d847, -0xf5);              /* jmp 0x1007d847 */
l_0x1007d93c:
    II(0x1007d93c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007d93e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007d941, 0x5)   calld(0x10088dcc, 0xb486);            /* call 0x10088dcc */
l_0x1007d946:
    II(0x1007d946, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007d948, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007d949, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007d94a, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007d94b, 0x1)   retd();                               /* ret */
FUNC_END

