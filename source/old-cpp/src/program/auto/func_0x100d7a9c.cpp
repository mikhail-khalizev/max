FUNC_BEGIN(0x100d7a9c, 0x2e1f715819db70d2, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xac, 0xe2, 0x8, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x33, 0xea, 0xf9, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xec, 0xfe, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf0, 0x66, 0x1, 0x42, 0xc, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf0, 0x66, 0x1, 0x42, 0x8, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xf0, 0x66, 0x1, 0x42, 0xa, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x40, 0xe8, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x3a, 0xe9, 0xf9, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xec, 0xf0, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x5b, 0x32, 0x6, 0, 0x84, 0xc0, 0x74, 0x1c, 0xf, 0xbf, 0x45, 0xf4, 0x85, 0xc0, 0x75, 0x8, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0x91, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x5d, 0xe8, 0xf9, 0xff, 0xe8, 0xbc, 0xe6, 0xf9, 0xff, 0x3b, 0x45, 0xf0, 0xf, 0x85, 0x76, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x47, 0xe8, 0xf9, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd5, 0x81, 0x1c, 0x10, 0x88, 0x45, 0xe0, 0xeb, 0x38, 0x8d, 0x55, 0xf4, 0x8d, 0x45, 0xe8, 0xe8, 0x90, 0xe8, 0xf9, 0xff, 0xe8, 0x47, 0xfe, 0xff, 0xff, 0xeb, 0x48, 0x8d, 0x55, 0xf8, 0x8d, 0x45, 0xe8, 0xe8, 0x7e, 0xe8, 0xf9, 0xff, 0xe8, 0x35, 0xfe, 0xff, 0xff, 0xeb, 0x36, 0x8d, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x6c, 0xe8, 0xf9, 0xff, 0xe8, 0x23, 0xfe, 0xff, 0xff, 0xeb, 0x24, 0xeb, 0x22, 0x8a, 0x45, 0xe0, 0x88, 0x45, 0xdc, 0x80, 0x7d, 0xdc, 0x2, 0x72, 0xe, 0x80, 0x7d, 0xdc, 0x2, 0x76, 0xc8, 0x80, 0x7d, 0xdc, 0x3, 0x74, 0xd4, 0xeb, 0xe4, 0x80, 0x7d, 0xdc, 0x1, 0x74, 0xa8, 0xeb, 0xdc, 0xe9, 0x38, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x96, 0xe3, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100d7a9c, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100d7aa1, 0x5)   calld(sys_check_available_stack_size, 0x8e2ac); /* call 0x10165d52 */
    II(0x100d7aa6, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d7aa7, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d7aa8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d7aa9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d7aab, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100d7ab1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d7ab4, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100d7ab7, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100d7aba, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100d7abd, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x100d7ac1, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7ac4, 0x5)   calld(0x100764fc, -0x615cd);          /* call 0x100764fc */
    II(0x100d7ac9, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d7acc, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x100d7ad0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d7ad3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d7ad6, 0x4)   add(memw_a32(ds, edx + 0xc), ax);     /* add [edx+0xc], ax */
    II(0x100d7ada, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d7add, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d7ae0, 0x4)   add(memw_a32(ds, edx + 0x8), ax);     /* add [edx+0x8], ax */
    II(0x100d7ae4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7ae7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d7aea, 0x4)   add(memw_a32(ds, edx + 0xa), ax);     /* add [edx+0xa], ax */
    II(0x100d7aee, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100d7af3, 0x5)   calld(0x10076338, -0x617c0);          /* call 0x10076338 */
    II(0x100d7af8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d7afa, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7afd, 0x5)   calld(0x1007643c, -0x616c6);          /* call 0x1007643c */
    II(0x100d7b02, 0x2)   jmpd(0x100d7b0c, 0x8);                /* jmp 0x100d7b0c */
l_0x100d7b04:
    II(0x100d7b04, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7b07, 0x5)   calld(0x10076bf8, -0x60f14);          /* call 0x10076bf8 */
l_0x100d7b0c:
    II(0x100d7b0c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d7b0e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7b11, 0x5)   calld(0x1013ad71, 0x6325b);           /* call 0x1013ad71 */
    II(0x100d7b16, 0x2)   test(al, al);                         /* test al, al */
    II(0x100d7b18, 0x2)   jzd(0x100d7b36, 0x1c);                /* jz 0x100d7b36 */
    II(0x100d7b1a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100d7b1e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d7b20, 0x2)   jnzd(0x100d7b2a, 0x8);                /* jnz 0x100d7b2a */
    II(0x100d7b22, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d7b26, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d7b28, 0x2)   jzd(0x100d7b2c, 0x2);                 /* jz 0x100d7b2c */
l_0x100d7b2a:
    II(0x100d7b2a, 0x2)   jmpd(0x100d7b34, 0x8);                /* jmp 0x100d7b34 */
l_0x100d7b2c:
    II(0x100d7b2c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100d7b30, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d7b32, 0x2)   jzd(0x100d7b36, 0x2);                 /* jz 0x100d7b36 */
l_0x100d7b34:
    II(0x100d7b34, 0x2)   jmpd(0x100d7b3b, 0x5);                /* jmp 0x100d7b3b */
l_0x100d7b36:
    II(0x100d7b36, 0x5)   jmpd(0x100d7bcc, 0x91);               /* jmp 0x100d7bcc */
l_0x100d7b3b:
    II(0x100d7b3b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7b3e, 0x5)   calld(0x100763a0, -0x617a3);          /* call 0x100763a0 */
    II(0x100d7b43, 0x5)   calld(0x10076204, -0x61944);          /* call 0x10076204 */
    II(0x100d7b48, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x10));   /* cmp eax, [ebp-0x10] */
    II(0x100d7b4b, 0x6)   jnzd(0x100d7bc7, 0x76);               /* jnz dword 0x100d7bc7 */
    II(0x100d7b51, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7b54, 0x5)   calld(0x100763a0, -0x617b9);          /* call 0x100763a0 */
    II(0x100d7b59, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d7b5c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d7b5f, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100d7b62, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d5)); /* mov al, [eax+0x101c81d5] */
    II(0x100d7b68, 0x3)   mov(memb_a32(ss, ebp - 0x20), al);    /* mov [ebp-0x20], al */
    II(0x100d7b6b, 0x2)   jmpd(0x100d7ba5, 0x38);               /* jmp 0x100d7ba5 */
l_0x100d7b6d:
    II(0x100d7b6d, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x100d7b70, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7b73, 0x5)   calld(0x10076408, -0x61770);          /* call 0x10076408 */
    II(0x100d7b78, 0x5)   calld(0x100d79c4, -0x1b9);            /* call 0x100d79c4 */
    II(0x100d7b7d, 0x2)   jmpd(0x100d7bc7, 0x48);               /* jmp 0x100d7bc7 */
l_0x100d7b7f:
    II(0x100d7b7f, 0x3)   lea(edx, ebp - 0x8);                  /* lea edx, [ebp-0x8] */
    II(0x100d7b82, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7b85, 0x5)   calld(0x10076408, -0x61782);          /* call 0x10076408 */
    II(0x100d7b8a, 0x5)   calld(0x100d79c4, -0x1cb);            /* call 0x100d79c4 */
    II(0x100d7b8f, 0x2)   jmpd(0x100d7bc7, 0x36);               /* jmp 0x100d7bc7 */
l_0x100d7b91:
    II(0x100d7b91, 0x3)   lea(edx, ebp - 0x4);                  /* lea edx, [ebp-0x4] */
    II(0x100d7b94, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7b97, 0x5)   calld(0x10076408, -0x61794);          /* call 0x10076408 */
    II(0x100d7b9c, 0x5)   calld(0x100d79c4, -0x1dd);            /* call 0x100d79c4 */
    II(0x100d7ba1, 0x2)   jmpd(0x100d7bc7, 0x24);               /* jmp 0x100d7bc7 */
l_0x100d7ba3:
    II(0x100d7ba3, 0x2)   jmpd(0x100d7bc7, 0x22);               /* jmp 0x100d7bc7 */
l_0x100d7ba5:
    II(0x100d7ba5, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x100d7ba8, 0x3)   mov(memb_a32(ss, ebp - 0x24), al);    /* mov [ebp-0x24], al */
    II(0x100d7bab, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x2);   /* cmp byte [ebp-0x24], 0x2 */
    II(0x100d7baf, 0x2)   jbd(0x100d7bbf, 0xe);                 /* jb 0x100d7bbf */
    II(0x100d7bb1, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x2);   /* cmp byte [ebp-0x24], 0x2 */
    II(0x100d7bb5, 0x2)   jbed(0x100d7b7f, -0x38);              /* jbe 0x100d7b7f */
    II(0x100d7bb7, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x3);   /* cmp byte [ebp-0x24], 0x3 */
    II(0x100d7bbb, 0x2)   jzd(0x100d7b91, -0x2c);               /* jz 0x100d7b91 */
    II(0x100d7bbd, 0x2)   jmpd(0x100d7ba3, -0x1c);              /* jmp 0x100d7ba3 */
l_0x100d7bbf:
    II(0x100d7bbf, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x1);   /* cmp byte [ebp-0x24], 0x1 */
    II(0x100d7bc3, 0x2)   jzd(0x100d7b6d, -0x58);               /* jz 0x100d7b6d */
    II(0x100d7bc5, 0x2)   jmpd(0x100d7ba3, -0x24);              /* jmp 0x100d7ba3 */
l_0x100d7bc7:
    II(0x100d7bc7, 0x5)   jmpd(0x100d7b04, -0xc8);              /* jmp 0x100d7b04 */
l_0x100d7bcc:
    II(0x100d7bcc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d7bce, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100d7bd1, 0x5)   calld(0x10075f6c, -0x61c6a);          /* call 0x10075f6c */
    II(0x100d7bd6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d7bd8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d7bd9, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d7bda, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d7bdb, 0x1)   retd();                               /* ret */
FUNC_END

