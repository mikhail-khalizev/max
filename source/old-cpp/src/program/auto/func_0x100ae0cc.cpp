FUNC_BEGIN(0x100ae0cc, 0xd9e986262367b139, 0x20, ({0x68, 0x78, 0, 0, 0, 0xe8, 0x7c, 0x7c, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x5c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xec, 0xe8, 0x6c, 0xcf, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x13, 0x8b, 0x45, 0xfc, 0xe8, 0x96, 0x8c, 0xfc, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xce, 0x3, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x3d, 0x49, 0xa, 0, 0x84, 0xc0, 0x75, 0x13, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x55, 0xaa, 0xfd, 0xff, 0xe9, 0xc6, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x3d, 0x84, 0xfc, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x35, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x14, 0x84, 0xfc, 0xff, 0xe8, 0x18, 0x47, 0xa, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x48, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf7, 0xa9, 0xfd, 0xff, 0xe9, 0x68, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x19, 0, 0x7e, 0x6, 0xc6, 0x45, 0xe4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe4, 0, 0x31, 0xd2, 0x8a, 0x55, 0xe4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x23, 0x84, 0xfc, 0xff, 0xe8, 0x8e, 0xa6, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb8, 0xa9, 0xfd, 0xff, 0xe9, 0x29, 0x3, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x3b, 0xcb, 0x8, 0, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x94, 0xa9, 0xfd, 0xff, 0xe9, 0x5, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x11, 0xc, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x2c, 0xe8, 0x80, 0xd2, 0xfd, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x25, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x26, 0xff, 0x75, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x35, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x57, 0xa9, 0xfd, 0xff, 0xe9, 0xc8, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x3f, 0x83, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x32, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x44, 0, 0x74, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x26, 0xff, 0x74, 0x2, 0xeb, 0xa, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0xcd, 0xed, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe, 0xa9, 0xfd, 0xff, 0xe9, 0x7f, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x19, 0, 0x7e, 0x40, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xed, 0x82, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xdc, 0x82, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe0, 0xe8, 0x6, 0x88, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x1d, 0x83, 0xfc, 0xff, 0xe8, 0x3b, 0xd3, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x70, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xab, 0x82, 0xfc, 0xff, 0xe8, 0x6e, 0x7f, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x14, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x94, 0x82, 0xfc, 0xff, 0xe8, 0x57, 0x7f, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x10, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x55, 0xd8, 0xf, 0xbf, 0x45, 0xdc, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0xdc, 0x4a, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x65, 0x82, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x39, 0xd0, 0x7f, 0x13, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x53, 0xa8, 0xfd, 0xff, 0xe9, 0xc4, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xe2, 0xc, 0, 0, 0x84, 0xc0, 0x75, 0x1b, 0x8b, 0x45, 0xf8, 0xe8, 0xa, 0xfd, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x2c, 0xa8, 0xfd, 0xff, 0xe9, 0x9d, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x14, 0x82, 0xfc, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x1b, 0x8b, 0x45, 0xf8, 0xe8, 0x74, 0x3, 0, 0, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0, 0xa8, 0xfd, 0xff, 0xe9, 0x71, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x8f, 0x7, 0, 0, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe1, 0xa7, 0xfd, 0xff, 0xe9, 0x52, 0x1, 0, 0, 0xb8, 0x20, 0, 0, 0, 0xe8, 0x56, 0x7a, 0xb, 0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x74, 0x35, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x1a, 0x8d, 0x45, 0xcc, 0xe8, 0x9d, 0x7a, 0xfc, 0xff, 0x89, 0xc1, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xf7, 0x81, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xd4, 0xe8, 0x8, 0xdb, 0xff, 0xff, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xbc, 0xe8, 0x9e, 0xcc, 0xfd, 0xff, 0x89, 0x45, 0xb8, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x5c, 0x81, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x30, 0xe4, 0xc1, 0xe0, 0x2, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xc0, 0xe8, 0x8f, 0xf4, 0x6, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x16, 0xc1, 0xfa, 0x18, 0x8b, 0x45, 0xc0, 0xe8, 0xc5, 0xf3, 0x6, 0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x19, 0, 0x7e, 0x6, 0xc6, 0x45, 0xb4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xb4, 0, 0x31, 0xd2, 0x8a, 0x55, 0xb4, 0x8b, 0x45, 0xc0, 0xe8, 0x30, 0xf4, 0x6, 0, 0xb8, 0x1f, 0, 0, 0, 0xe8, 0x9a, 0x79, 0xb, 0, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xac, 0x83, 0x7d, 0xac, 0, 0x74, 0x24, 0xb8, 0x95, 0xd9, 0xa, 0x10, 0x50, 0xb9, 0xa7, 0xf2, 0xa, 0x10, 0x8b, 0x5d, 0xc0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xb0, 0xe8, 0xe4, 0xd5, 0xff, 0xff, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xa4, 0xeb, 0x6, 0x8b, 0x45, 0xac, 0x89, 0x45, 0xa4, 0x8b, 0x55, 0xa4, 0x8d, 0x45, 0xbc, 0xe8, 0x3a, 0xcb, 0xfd, 0xff, 0x8d, 0x45, 0xbc, 0xe8, 0xd2, 0xca, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x92, 0x68, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0xb0, 0xa6, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xa6, 0xa6, 0xfd, 0xff, 0xeb, 0x1a, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x96, 0xa6, 0xfd, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x8a, 0xa6, 0xfd, 0xff, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ae0cc, 0x5)   pushd(0x78);                          /* push dword 0x78 */
    II(0x100ae0d1, 0x5)   calld(sys_check_available_stack_size, 0xb7c7c); /* call 0x10165d52 */
    II(0x100ae0d6, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ae0d7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ae0d8, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ae0d9, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ae0da, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ae0db, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ae0dd, 0x6)   sub(esp, 0x5c);                       /* sub esp, 0x5c */
    II(0x100ae0e3, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ae0e6, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100ae0e9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ae0ec, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae0ef, 0x5)   calld(0x1008b060, -0x23094);          /* call 0x1008b060 */
    II(0x100ae0f4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ae0f7, 0x3)   add(edx, 0x13);                       /* add edx, 0x13 */
    II(0x100ae0fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae0fd, 0x5)   calld(0x10076d98, -0x3736a);          /* call 0x10076d98 */
    II(0x100ae102, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae104, 0x6)   jzd(0x100ae4d8, 0x3ce);               /* jz dword 0x100ae4d8 */
    II(0x100ae10a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ae10d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae110, 0x5)   calld(0x10152a52, 0xa493d);           /* call 0x10152a52 */
    II(0x100ae115, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae117, 0x2)   jnzd(0x100ae12c, 0x13);               /* jnz 0x100ae12c */
    II(0x100ae119, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100ae11d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae11f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae122, 0x5)   calld(0x10088b7c, -0x255ab);          /* call 0x10088b7c */
    II(0x100ae127, 0x5)   jmpd(0x100ae4f2, 0x3c6);              /* jmp 0x100ae4f2 */
l_0x100ae12c:
    II(0x100ae12c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae12f, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae132, 0x5)   calld(0x10076574, -0x37bc3);          /* call 0x10076574 */
    II(0x100ae137, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100ae13a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ae13f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ae145, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ae14b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ae150, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ae153, 0x2)   jzd(0x100ae18a, 0x35);                /* jz 0x100ae18a */
    II(0x100ae155, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae158, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae15b, 0x5)   calld(0x10076574, -0x37bec);          /* call 0x10076574 */
    II(0x100ae160, 0x5)   calld(0x1015287d, 0xa4718);           /* call 0x1015287d */
    II(0x100ae165, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae168, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100ae16b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ae16e, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100ae171, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ae174, 0x3)   calld_abs(memd_a32(ds, edx + 0x48));  /* call dword near [edx+0x48] */
    II(0x100ae177, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100ae17b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae17d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae180, 0x5)   calld(0x10088b7c, -0x25609);          /* call 0x10088b7c */
    II(0x100ae185, 0x5)   jmpd(0x100ae4f2, 0x368);              /* jmp 0x100ae4f2 */
l_0x100ae18a:
    II(0x100ae18a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae18d, 0x4)   cmp(memb_a32(ds, eax + 0x19), 0);     /* cmp byte [eax+0x19], 0x0 */
    II(0x100ae191, 0x2)   jled(0x100ae199, 0x6);                /* jle 0x100ae199 */
    II(0x100ae193, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0x1);   /* mov byte [ebp-0x1c], 0x1 */
    II(0x100ae197, 0x2)   jmpd(0x100ae19d, 0x4);                /* jmp 0x100ae19d */
l_0x100ae199:
    II(0x100ae199, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0);     /* mov byte [ebp-0x1c], 0x0 */
l_0x100ae19d:
    II(0x100ae19d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae19f, 0x3)   mov(dl, memb_a32(ss, ebp - 0x1c));    /* mov dl, [ebp-0x1c] */
    II(0x100ae1a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae1a5, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae1a8, 0x5)   calld(0x100765d0, -0x37bdd);          /* call 0x100765d0 */
    II(0x100ae1ad, 0x5)   calld(0x10078840, -0x35972);          /* call 0x10078840 */
    II(0x100ae1b2, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae1b4, 0x2)   jzd(0x100ae1c9, 0x13);                /* jz 0x100ae1c9 */
    II(0x100ae1b6, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100ae1ba, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae1bc, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae1bf, 0x5)   calld(0x10088b7c, -0x25648);          /* call 0x10088b7c */
    II(0x100ae1c4, 0x5)   jmpd(0x100ae4f2, 0x329);              /* jmp 0x100ae4f2 */
l_0x100ae1c9:
    II(0x100ae1c9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae1cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae1ce, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae1d1, 0x5)   calld(0x1013ad11, 0x8cb3b);           /* call 0x1013ad11 */
    II(0x100ae1d6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae1d8, 0x2)   jzd(0x100ae1ed, 0x13);                /* jz 0x100ae1ed */
    II(0x100ae1da, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100ae1de, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae1e0, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae1e3, 0x5)   calld(0x10088b7c, -0x2566c);          /* call 0x10088b7c */
    II(0x100ae1e8, 0x5)   jmpd(0x100ae4f2, 0x305);              /* jmp 0x100ae4f2 */
l_0x100ae1ed:
    II(0x100ae1ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae1f0, 0x5)   calld(0x100aee06, 0xc11);             /* call 0x100aee06 */
    II(0x100ae1f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae1f8, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100ae1fb, 0x5)   calld(my_3_get_count, -0x22d80);      /* call 0x1008b480 */
    II(0x100ae200, 0x1)   cwde();                               /* cwde */
    II(0x100ae201, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ae203, 0x2)   jnzd(0x100ae22a, 0x25);               /* jnz 0x100ae22a */
    II(0x100ae205, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae208, 0x5)   cmp(memw_a32(ds, eax + 0x26), -0x1 /* 0xff */); /* cmp word [eax+0x26], 0xff */
    II(0x100ae20d, 0x2)   jnzd(0x100ae217, 0x8);                /* jnz 0x100ae217 */
    II(0x100ae20f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae212, 0x5)   calld(0x100ae04c, -0x1cb);            /* call 0x100ae04c */
l_0x100ae217:
    II(0x100ae217, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100ae21b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae21d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae220, 0x5)   calld(0x10088b7c, -0x256a9);          /* call 0x10088b7c */
    II(0x100ae225, 0x5)   jmpd(0x100ae4f2, 0x2c8);              /* jmp 0x100ae4f2 */
l_0x100ae22a:
    II(0x100ae22a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae22d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae230, 0x5)   calld(0x10076574, -0x37cc1);          /* call 0x10076574 */
    II(0x100ae235, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100ae238, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ae23d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ae23f, 0x2)   jnzd(0x100ae273, 0x32);               /* jnz 0x100ae273 */
    II(0x100ae241, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae244, 0x4)   cmp(memb_a32(ds, eax + 0x44), 0);     /* cmp byte [eax+0x44], 0x0 */
    II(0x100ae248, 0x2)   jzd(0x100ae254, 0xa);                 /* jz 0x100ae254 */
    II(0x100ae24a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae24d, 0x5)   cmp(memw_a32(ds, eax + 0x26), -0x1 /* 0xff */); /* cmp word [eax+0x26], 0xff */
    II(0x100ae252, 0x2)   jzd(0x100ae256, 0x2);                 /* jz 0x100ae256 */
l_0x100ae254:
    II(0x100ae254, 0x2)   jmpd(0x100ae260, 0xa);                /* jmp 0x100ae260 */
l_0x100ae256:
    II(0x100ae256, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae258, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae25b, 0x5)   calld(0x100ad02d, -0x1233);           /* call 0x100ad02d */
l_0x100ae260:
    II(0x100ae260, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100ae264, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae266, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae269, 0x5)   calld(0x10088b7c, -0x256f2);          /* call 0x10088b7c */
    II(0x100ae26e, 0x5)   jmpd(0x100ae4f2, 0x27f);              /* jmp 0x100ae4f2 */
l_0x100ae273:
    II(0x100ae273, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae276, 0x4)   cmp(memb_a32(ds, eax + 0x19), 0);     /* cmp byte [eax+0x19], 0x0 */
    II(0x100ae27a, 0x2)   jled(0x100ae2bc, 0x40);               /* jle 0x100ae2bc */
    II(0x100ae27c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae27f, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae282, 0x5)   calld(0x10076574, -0x37d13);          /* call 0x10076574 */
    II(0x100ae287, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100ae28a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100ae28d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae290, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae293, 0x5)   calld(0x10076574, -0x37d24);          /* call 0x10076574 */
    II(0x100ae298, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100ae29b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ae29e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100ae2a1, 0x5)   calld(0x10076aac, -0x377fa);          /* call 0x10076aac */
    II(0x100ae2a6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ae2a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae2ab, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae2ae, 0x5)   calld(0x100765d0, -0x37ce3);          /* call 0x100765d0 */
    II(0x100ae2b3, 0x5)   calld(0x100ab5f3, -0x2cc5);           /* call 0x100ab5f3 */
    II(0x100ae2b8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae2ba, 0x2)   jnzd(0x100ae2be, 0x2);                /* jnz 0x100ae2be */
l_0x100ae2bc:
    II(0x100ae2bc, 0x2)   jmpd(0x100ae32e, 0x70);               /* jmp 0x100ae32e */
l_0x100ae2be:
    II(0x100ae2be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae2c1, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae2c4, 0x5)   calld(0x10076574, -0x37d55);          /* call 0x10076574 */
    II(0x100ae2c9, 0x5)   calld(0x1007623c, -0x38092);          /* call 0x1007623c */
    II(0x100ae2ce, 0x4)   mov(ax, memw_a32(ds, eax + 0x14));    /* mov ax, [eax+0x14] */
    II(0x100ae2d2, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100ae2d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae2d8, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae2db, 0x5)   calld(0x10076574, -0x37d6c);          /* call 0x10076574 */
    II(0x100ae2e0, 0x5)   calld(0x1007623c, -0x380a9);          /* call 0x1007623c */
    II(0x100ae2e5, 0x4)   mov(ax, memw_a32(ds, eax + 0x10));    /* mov ax, [eax+0x10] */
    II(0x100ae2e9, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100ae2ec, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100ae2f0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ae2f4, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ae2f6, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x24)); /* movsx ebx, word [ebp-0x24] */
    II(0x100ae2fa, 0x1)   dec(edx);                             /* dec edx */
    II(0x100ae2fb, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100ae2fd, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100ae300, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100ae302, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ae304, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae307, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae30a, 0x5)   calld(0x10076574, -0x37d9b);          /* call 0x10076574 */
    II(0x100ae30f, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100ae312, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ae317, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100ae319, 0x2)   jgd(0x100ae32e, 0x13);                /* jg 0x100ae32e */
    II(0x100ae31b, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100ae31f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae321, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae324, 0x5)   calld(0x10088b7c, -0x257ad);          /* call 0x10088b7c */
    II(0x100ae329, 0x5)   jmpd(0x100ae4f2, 0x1c4);              /* jmp 0x100ae4f2 */
l_0x100ae32e:
    II(0x100ae32e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae331, 0x5)   calld(0x100af018, 0xce2);             /* call 0x100af018 */
    II(0x100ae336, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae338, 0x2)   jnzd(0x100ae355, 0x1b);               /* jnz 0x100ae355 */
    II(0x100ae33a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae33d, 0x5)   calld(0x100ae04c, -0x2f6);            /* call 0x100ae04c */
    II(0x100ae342, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100ae346, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae348, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae34b, 0x5)   calld(0x10088b7c, -0x257d4);          /* call 0x10088b7c */
    II(0x100ae350, 0x5)   jmpd(0x100ae4f2, 0x19d);              /* jmp 0x100ae4f2 */
l_0x100ae355:
    II(0x100ae355, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae358, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae35b, 0x5)   calld(0x10076574, -0x37dec);          /* call 0x10076574 */
    II(0x100ae360, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x100ae364, 0x2)   jzd(0x100ae381, 0x1b);                /* jz 0x100ae381 */
    II(0x100ae366, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae369, 0x5)   calld(0x100ae6e2, 0x374);             /* call 0x100ae6e2 */
    II(0x100ae36e, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100ae372, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae374, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae377, 0x5)   calld(0x10088b7c, -0x25800);          /* call 0x10088b7c */
    II(0x100ae37c, 0x5)   jmpd(0x100ae4f2, 0x171);              /* jmp 0x100ae4f2 */
l_0x100ae381:
    II(0x100ae381, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae384, 0x5)   calld(0x100aeb18, 0x78f);             /* call 0x100aeb18 */
    II(0x100ae389, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae38b, 0x2)   jzd(0x100ae3a0, 0x13);                /* jz 0x100ae3a0 */
    II(0x100ae38d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100ae391, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae393, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae396, 0x5)   calld(0x10088b7c, -0x2581f);          /* call 0x10088b7c */
    II(0x100ae39b, 0x5)   jmpd(0x100ae4f2, 0x152);              /* jmp 0x100ae4f2 */
l_0x100ae3a0:
    II(0x100ae3a0, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100ae3a5, 0x5)   calld(sys_new, 0xb7a56);              /* call 0x10165e00 */
    II(0x100ae3aa, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x100ae3ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100ae3b0, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100ae3b3, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x100ae3b7, 0x2)   jzd(0x100ae3ee, 0x35);                /* jz 0x100ae3ee */
    II(0x100ae3b9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ae3bc, 0x3)   add(edx, 0x1a);                       /* add edx, 0x1a */
    II(0x100ae3bf, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100ae3c2, 0x5)   calld(0x10075e64, -0x38563);          /* call 0x10075e64 */
    II(0x100ae3c7, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100ae3c9, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100ae3ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae3d1, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae3d4, 0x5)   calld(0x100765d0, -0x37e09);          /* call 0x100765d0 */
    II(0x100ae3d9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ae3db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100ae3de, 0x5)   calld(0x100abeeb, -0x24f8);           /* call 0x100abeeb */
    II(0x100ae3e3, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100ae3e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100ae3e9, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100ae3ec, 0x2)   jmpd(0x100ae3f4, 0x6);                /* jmp 0x100ae3f4 */
l_0x100ae3ee:
    II(0x100ae3ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ae3f1, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
l_0x100ae3f4:
    II(0x100ae3f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100ae3f7, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100ae3fa, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100ae3fe, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ae401, 0x5)   calld(my_ctor_0x101b3b58, -0x23362);  /* call 0x1008b0a4 */
    II(0x100ae406, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100ae409, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100ae40d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae410, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae413, 0x5)   calld(0x10076574, -0x37ea4);          /* call 0x10076574 */
    II(0x100ae418, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100ae41b, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100ae41d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100ae420, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100ae423, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100ae426, 0x5)   calld(0x1011d8ba, 0x6f48f);           /* call 0x1011d8ba */
    II(0x100ae42b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae42e, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x100ae431, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x100ae434, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100ae437, 0x5)   calld(0x1011d801, 0x6f3c5);           /* call 0x1011d801 */
    II(0x100ae43c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ae43f, 0x4)   cmp(memb_a32(ds, eax + 0x19), 0);     /* cmp byte [eax+0x19], 0x0 */
    II(0x100ae443, 0x2)   jled(0x100ae44b, 0x6);                /* jle 0x100ae44b */
    II(0x100ae445, 0x4)   mov(memb_a32(ss, ebp - 0x4c), 0x1);   /* mov byte [ebp-0x4c], 0x1 */
    II(0x100ae449, 0x2)   jmpd(0x100ae44f, 0x4);                /* jmp 0x100ae44f */
l_0x100ae44b:
    II(0x100ae44b, 0x4)   mov(memb_a32(ss, ebp - 0x4c), 0);     /* mov byte [ebp-0x4c], 0x0 */
l_0x100ae44f:
    II(0x100ae44f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae451, 0x3)   mov(dl, memb_a32(ss, ebp - 0x4c));    /* mov dl, [ebp-0x4c] */
    II(0x100ae454, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100ae457, 0x5)   calld(0x1011d88c, 0x6f430);           /* call 0x1011d88c */
    II(0x100ae45c, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x100ae461, 0x5)   calld(sys_new, 0xb799a);              /* call 0x10165e00 */
    II(0x100ae466, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
//    II(0x100ae469, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100ae46c, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100ae46f, 0x4)   cmp(memd_a32(ss, ebp - 0x54), 0);     /* cmp dword [ebp-0x54], 0x0 */
    II(0x100ae473, 0x2)   jzd(0x100ae499, 0x24);                /* jz 0x100ae499 */
    II(0x100ae475, 0x5)   mov(eax, 0x100ad995);                 /* mov eax, 0x100ad995 */
    II(0x100ae47a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ae47b, 0x5)   mov(ecx, 0x100af2a7);                 /* mov ecx, 0x100af2a7 */
    II(0x100ae480, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x40));   /* mov ebx, [ebp-0x40] */
    II(0x100ae483, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ae486, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100ae489, 0x5)   calld(0x100aba72, -0x2a1c);           /* call 0x100aba72 */
    II(0x100ae48e, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
//    II(0x100ae491, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100ae494, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100ae497, 0x2)   jmpd(0x100ae49f, 0x6);                /* jmp 0x100ae49f */
l_0x100ae499:
    II(0x100ae499, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100ae49c, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
l_0x100ae49f:
    II(0x100ae49f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x5c));   /* mov edx, [ebp-0x5c] */
    II(0x100ae4a2, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ae4a5, 0x5)   calld(0x1008afe4, -0x234c6);          /* call 0x1008afe4 */
    II(0x100ae4aa, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ae4ad, 0x5)   calld(0x1008af84, -0x2352e);          /* call 0x1008af84 */
    II(0x100ae4b2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ae4b4, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100ae4b9, 0x5)   calld(0x100a4d50, -0x976e);           /* call 0x100a4d50 */
    II(0x100ae4be, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100ae4c2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae4c4, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ae4c7, 0x5)   calld(0x10088b7c, -0x25950);          /* call 0x10088b7c */
    II(0x100ae4cc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae4ce, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae4d1, 0x5)   calld(0x10088b7c, -0x2595a);          /* call 0x10088b7c */
    II(0x100ae4d6, 0x2)   jmpd(0x100ae4f2, 0x1a);               /* jmp 0x100ae4f2 */
l_0x100ae4d8:
    II(0x100ae4d8, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100ae4dc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae4de, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ae4e1, 0x5)   calld(0x10088b7c, -0x2596a);          /* call 0x10088b7c */
    II(0x100ae4e6, 0x2)   jmpd(0x100ae4f2, 0xa);                /* jmp 0x100ae4f2 */
//  II(0x100ae4e8, 0xa)   /* Недостижимый код. */
l_0x100ae4f2:
    II(0x100ae4f2, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x100ae4f5, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ae4f7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ae4f8, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ae4f9, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ae4fa, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ae4fb, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ae4fc, 0x1)   retd();                               /* ret */
FUNC_END

