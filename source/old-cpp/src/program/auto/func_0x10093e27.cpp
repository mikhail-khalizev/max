FUNC_BEGIN(0x10093e27, 0x110ad8bb0ccac46f, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x21, 0x1f, 0xd, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x17, 0xe8, 0xe7, 0x24, 0xfe, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x5b, 0x26, 0xfe, 0xff, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x8a, 0x2d, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf9, 0x6e, 0xa, 0, 0x84, 0xc0, 0x74, 0x1a, 0x8d, 0x45, 0xec, 0xe8, 0x1c, 0x25, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xf8, 0x75, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xeb, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x21, 0xe8, 0x27, 0x88, 0, 0, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2f, 0x87, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x41, 0x2d, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xb0, 0x6e, 0xa, 0, 0x84, 0xc0, 0x74, 0x54, 0x8d, 0x45, 0xe4, 0xe8, 0x2b, 0x86, 0, 0, 0xe8, 0xf2, 0x85, 0, 0, 0x66, 0x3b, 0x45, 0xf8, 0x75, 0x3f, 0x8d, 0x45, 0xe4, 0xe8, 0x18, 0x86, 0, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe0, 0xff, 0x52, 0x70, 0x84, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xeb, 0x1c, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xe4, 0xe8, 0xf1, 0x85, 0, 0, 0xe8, 0xb8, 0xec, 0, 0, 0x98, 0x85, 0xc0, 0x7f, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xeb, 0x96, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xf0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x43, 0x7b, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x39, 0x20, 0xfe, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x2d, 0x7b, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x23, 0x20, 0xfe, 0xff, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10093e27, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10093e2c, 0x5)   calld(sys_check_available_stack_size, 0xd1f21); /* call 0x10165d52 */
    II(0x10093e31, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10093e32, 0x1)   pushd(esi);                           /* push esi */
    II(0x10093e33, 0x1)   pushd(edi);                           /* push edi */
    II(0x10093e34, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10093e35, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10093e37, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10093e3d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10093e40, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10093e43, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x10093e46, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10093e49, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x10093e4c, 0x5)   calld(0x10076338, -0x1db19);          /* call 0x10076338 */
    II(0x10093e51, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x10093e54, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10093e56, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10093e58, 0x5)   calld(0x100764b8, -0x1d9a5);          /* call 0x100764b8 */
    II(0x10093e5d, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x10093e64, 0x2)   jmpd(0x10093e6e, 0x8);                /* jmp 0x10093e6e */
l_0x10093e66:
    II(0x10093e66, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10093e69, 0x5)   calld(0x10076bf8, -0x1d276);          /* call 0x10076bf8 */
l_0x10093e6e:
    II(0x10093e6e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093e70, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10093e73, 0x5)   calld(0x1013ad71, 0xa6ef9);           /* call 0x1013ad71 */
    II(0x10093e78, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093e7a, 0x2)   jzd(0x10093e96, 0x1a);                /* jz 0x10093e96 */
    II(0x10093e7c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10093e7f, 0x5)   calld(0x100763a0, -0x1dae4);          /* call 0x100763a0 */
    II(0x10093e84, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10093e88, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10093e8c, 0x2)   jnzd(0x10093e94, 0x6);                /* jnz 0x10093e94 */
    II(0x10093e8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10093e91, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x10093e94:
    II(0x10093e94, 0x2)   jmpd(0x10093e66, -0x30);              /* jmp 0x10093e66 */
l_0x10093e96:
    II(0x10093e96, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10093e99, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x10093e9c, 0x5)   calld(0x1009c6c8, 0x8827);            /* call 0x1009c6c8 */
    II(0x10093ea1, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x10093ea4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10093ea6, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10093ea8, 0x5)   calld(0x1009c5dc, 0x872f);            /* call 0x1009c5dc */
    II(0x10093ead, 0x2)   jmpd(0x10093eb7, 0x8);                /* jmp 0x10093eb7 */
l_0x10093eaf:
    II(0x10093eaf, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10093eb2, 0x5)   calld(0x10076bf8, -0x1d2bf);          /* call 0x10076bf8 */
l_0x10093eb7:
    II(0x10093eb7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093eb9, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10093ebc, 0x5)   calld(0x1013ad71, 0xa6eb0);           /* call 0x1013ad71 */
    II(0x10093ec1, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093ec3, 0x2)   jzd(0x10093f19, 0x54);                /* jz 0x10093f19 */
    II(0x10093ec5, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10093ec8, 0x5)   calld(0x1009c4f8, 0x862b);            /* call 0x1009c4f8 */
    II(0x10093ecd, 0x5)   calld(0x1009c4c4, 0x85f2);            /* call 0x1009c4c4 */
    II(0x10093ed2, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10093ed6, 0x2)   jnzd(0x10093f17, 0x3f);               /* jnz 0x10093f17 */
    II(0x10093ed8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10093edb, 0x5)   calld(0x1009c4f8, 0x8618);            /* call 0x1009c4f8 */
    II(0x10093ee0, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x10093ee3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10093ee6, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10093ee9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10093eec, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x10093eef, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093ef1, 0x2)   jzd(0x10093efb, 0x8);                 /* jz 0x10093efb */
    II(0x10093ef3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10093ef6, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x10093ef9, 0x2)   jmpd(0x10093f17, 0x1c);               /* jmp 0x10093f17 */
l_0x10093efb:
    II(0x10093efb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10093eff, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10093f02, 0x5)   calld(0x1009c4f8, 0x85f1);            /* call 0x1009c4f8 */
    II(0x10093f07, 0x5)   calld(0x100a2bc4, 0xecb8);            /* call 0x100a2bc4 */
    II(0x10093f0c, 0x1)   cwde();                               /* cwde */
    II(0x10093f0d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10093f0f, 0x2)   jgd(0x10093f17, 0x6);                 /* jg 0x10093f17 */
    II(0x10093f11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10093f14, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x10093f17:
    II(0x10093f17, 0x2)   jmpd(0x10093eaf, -0x6a);              /* jmp 0x10093eaf */
l_0x10093f19:
    II(0x10093f19, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x10093f1c, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x10093f1f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093f21, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10093f24, 0x5)   calld(0x1009ba6c, 0x7b43);            /* call 0x1009ba6c */
    II(0x10093f29, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093f2b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10093f2e, 0x5)   calld(0x10075f6c, -0x1dfc7);          /* call 0x10075f6c */
    II(0x10093f33, 0x2)   jmpd(0x10093f49, 0x14);               /* jmp 0x10093f49 */
//  II(0x10093f35, 0x14)  /* Недостижимый код. */
l_0x10093f49:
    II(0x10093f49, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10093f4c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10093f4e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10093f4f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10093f50, 0x1)   popd(esi);                            /* pop esi */
    II(0x10093f51, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10093f52, 0x1)   retd();                               /* ret */
FUNC_END

