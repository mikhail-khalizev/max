FUNC_BEGIN(0x1015a2da, 0x958df19ae563829a, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0x6e, 0xba, 0, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf4, 0xc7, 0x45, 0xec, 0xff, 0xff, 0, 0, 0x80, 0x7d, 0x1c, 0, 0x75, 0x5a, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0xff, 0x80, 0x54, 0xa5, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x52, 0xa5, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x3d, 0xff, 0x1f, 0, 0, 0x7c, 0x13, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0xc7, 0x80, 0x54, 0xa5, 0x1c, 0x10, 0x1, 0, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x55, 0xfc, 0xc1, 0xe2, 0xd, 0x66, 0x8b, 0x80, 0x54, 0xa5, 0x1c, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xec, 0xb8, 0xe1, 0, 0, 0, 0xe8, 0x94, 0xba, 0, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x26, 0xf, 0xbf, 0x45, 0x18, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xec, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xe8, 0xe8, 0xa1, 0xee, 0xfe, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0x80, 0x7d, 0x1c, 0, 0x75, 0x56, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xd8, 0xe8, 0x7c, 0xbe, 0xf1, 0xff, 0xe8, 0xef, 0x13, 0xf7, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xd4, 0xf, 0xbf, 0x45, 0xf8, 0x3, 0x45, 0xd4, 0x8a, 0x50, 0x2a, 0x8b, 0x45, 0xd8, 0x88, 0x50, 0x27, 0xf, 0xbf, 0x45, 0xf8, 0x3, 0x45, 0xd4, 0xfe, 0x40, 0x2a, 0x8a, 0x40, 0x2a, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0xa, 0xf, 0xbf, 0x45, 0xf8, 0x3, 0x45, 0xd4, 0xfe, 0x40, 0x2a, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xc, 0x74, 0x9, 0x80, 0x3d, 0xd4, 0x37, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0x6, 0x80, 0x7d, 0x1c, 0, 0x74, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xd8, 0x66, 0xc7, 0x40, 0x52, 0, 0, 0x8b, 0x45, 0xd8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x13, 0x8b, 0x45, 0xd8, 0xe8, 0xfc, 0xbd, 0xf1, 0xff, 0x66, 0x8b, 0x50, 0x1f, 0x8b, 0x45, 0xd8, 0x66, 0x89, 0x50, 0x52, 0x8b, 0x45, 0xd8, 0xf6, 0x40, 0x12, 0x4, 0x74, 0xe, 0x8b, 0x45, 0xd8, 0xc6, 0x40, 0x3d, 0x9, 0x8b, 0x45, 0xd8, 0xc6, 0x40, 0x3e, 0xe, 0x80, 0x7d, 0x1c, 0, 0xf, 0x85, 0x32, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xd0, 0xeb, 0x5a, 0x8b, 0x45, 0xd8, 0xc6, 0x40, 0x3d, 0xc, 0x8b, 0x45, 0xd8, 0xc6, 0x40, 0x3e, 0x1, 0xe9, 0x17, 0x1, 0, 0, 0x8b, 0x45, 0xd8, 0xc6, 0x40, 0x3d, 0x7, 0x8b, 0x45, 0xd8, 0xc6, 0x40, 0x3e, 0, 0xe9, 0x4, 0x1, 0, 0, 0x8b, 0x45, 0xd8, 0xc6, 0x40, 0x3d, 0x8, 0x8b, 0x45, 0xd8, 0xc6, 0x40, 0x3e, 0x1, 0xe9, 0xf1, 0, 0, 0, 0x8b, 0x45, 0xd8, 0x66, 0xc7, 0x40, 0x52, 0, 0, 0xe9, 0xe3, 0, 0, 0, 0x8b, 0x45, 0xd8, 0x66, 0xc7, 0x40, 0x52, 0, 0, 0xe9, 0xd5, 0, 0, 0, 0xe9, 0xd0, 0, 0, 0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0x66, 0x83, 0x7d, 0xcc, 0x1c, 0xf, 0x82, 0x61, 0, 0, 0, 0x66, 0x83, 0x7d, 0xcc, 0x1c, 0x76, 0xa1, 0x66, 0x83, 0x7d, 0xcc, 0x29, 0x72, 0x27, 0x66, 0x83, 0x7d, 0xcc, 0x2a, 0x76, 0x80, 0x66, 0x83, 0x7d, 0xcc, 0x48, 0x72, 0x10, 0x66, 0x83, 0x7d, 0xcc, 0x48, 0x76, 0xab, 0x66, 0x83, 0x7d, 0xcc, 0x4e, 0x74, 0xa4, 0xeb, 0xbe, 0x66, 0x83, 0x7d, 0xcc, 0x41, 0x74, 0x9b, 0xeb, 0xb5, 0x66, 0x83, 0x7d, 0xcc, 0x22, 0x72, 0x18, 0x66, 0x83, 0x7d, 0xcc, 0x25, 0xf, 0x86, 0x4e, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xcc, 0x28, 0xf, 0x84, 0x56, 0xff, 0xff, 0xff, 0xeb, 0x96, 0x66, 0x83, 0x7d, 0xcc, 0x1d, 0xf, 0x84, 0x5c, 0xff, 0xff, 0xff, 0xeb, 0x89, 0x66, 0x83, 0x7d, 0xcc, 0x3, 0x72, 0x42, 0x66, 0x83, 0x7d, 0xcc, 0x3, 0xf, 0x86, 0x69, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xcc, 0x9, 0x72, 0x20, 0x66, 0x83, 0x7d, 0xcc, 0x9, 0xf, 0x86, 0x57, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xcc, 0xb, 0xf, 0x86, 0x4c, 0xff, 0xff, 0xff, 0xe9, 0x55, 0xff, 0xff, 0xff, 0xe9, 0x50, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xcc, 0x5, 0xf, 0x84, 0xf0, 0xfe, 0xff, 0xff, 0xe9, 0x40, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xcc, 0, 0xf, 0x86, 0xf3, 0xfe, 0xff, 0xff, 0xe9, 0x1, 0xff, 0xff, 0xff, 0xe9, 0x2b, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x4, 0x75, 0x9, 0x8b, 0x45, 0xd8, 0xf6, 0x40, 0x15, 0x10, 0x75, 0x2, 0xeb, 0x7, 0x8b, 0x45, 0xd8, 0xc6, 0x40, 0x3d, 0x1a, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x33, 0xba, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xc8, 0x8b, 0x45, 0xd8, 0xf6, 0x40, 0x15, 0xa, 0x74, 0x3f, 0xe8, 0x6c, 0xab, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x45, 0xd8, 0x8a, 0x40, 0x29, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xd8, 0xe8, 0x99, 0x41, 0xff, 0xff, 0x8b, 0x45, 0xd8, 0xf6, 0x40, 0x15, 0x8, 0x74, 0x1a, 0x8b, 0x45, 0xc8, 0x8b, 0x40, 0x6, 0x31, 0xd2, 0x8a, 0x50, 0x3, 0x8b, 0x45, 0xd8, 0x66, 0x3, 0x50, 0x35, 0x8b, 0x45, 0xd8, 0x4a, 0x66, 0x89, 0x50, 0x3b, 0x66, 0x83, 0x7d, 0xf8, 0x28, 0x75, 0x6, 0x80, 0x7d, 0x1c, 0, 0x74, 0x2, 0xeb, 0x10, 0xf, 0xbf, 0x5d, 0x14, 0xf, 0xbf, 0x55, 0x10, 0x8b, 0x45, 0xd8, 0xe8, 0x32, 0x8c, 0, 0, 0x31, 0xc9, 0x8a, 0x4d, 0x20, 0xf, 0xbf, 0x5d, 0x14, 0xf, 0xbf, 0x55, 0x10, 0x8b, 0x45, 0xd8, 0xe8, 0x48, 0xfe, 0xfe, 0xff, 0x80, 0x7d, 0x1c, 0, 0x75, 0x48, 0x8b, 0x55, 0xd8, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0xe5, 0x97, 0xfa, 0xff, 0x66, 0x83, 0x7d, 0xf8, 0x9, 0x74, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0xb, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0xa, 0x75, 0x2, 0xeb, 0x7, 0x66, 0x83, 0x7d, 0xf8, 0x3, 0x75, 0x13, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0x40, 0x33, 0x40, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xd8, 0xe8, 0x7b, 0xf4, 0xfe, 0xff, 0x8b, 0x45, 0xd8, 0xe8, 0xcb, 0xe6, 0xf4, 0xff, 0x8b, 0x55, 0xd8, 0x8b, 0x45, 0xf0, 0xe8, 0xd, 0xc0, 0xf1, 0xff, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x14, 0}))
    II(0x1015a2da, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x1015a2df, 0x5)   calld(sys_check_available_stack_size, 0xba6e); /* call 0x10165d52 */
    II(0x1015a2e4, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015a2e5, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015a2e6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015a2e7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015a2e9, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x1015a2ef, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1015a2f2, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1015a2f5, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x1015a2f8, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x1015a2fb, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffff); /* mov dword [ebp-0x14], 0xffff */
    II(0x1015a302, 0x4)   cmp(memb_a32(ss, ebp + 0x1c), 0);     /* cmp byte [ebp+0x1c], 0x0 */
    II(0x1015a306, 0x2)   jnzd(0x1015a362, 0x5a);               /* jnz 0x1015a362 */
    II(0x1015a308, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1015a30c, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015a312, 0x7)   inc(memw_a32(ds, eax + 0x101ca554));  /* inc word [eax+0x101ca554] */
    II(0x1015a319, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1015a31d, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015a323, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca552)); /* mov eax, [eax+0x101ca552] */
    II(0x1015a329, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015a32c, 0x5)   cmp(eax, 0x1fff);                     /* cmp eax, 0x1fff */
    II(0x1015a331, 0x2)   jld(0x1015a346, 0x13);                /* jl 0x1015a346 */
    II(0x1015a333, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1015a337, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015a33d, 0x9)   mov(memw_a32(ds, eax + 0x101ca554), 0x1); /* mov word [eax+0x101ca554], 0x1 */
l_0x1015a346:
    II(0x1015a346, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1015a34a, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015a350, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015a353, 0x3)   shl(edx, 0xd);                        /* shl edx, 0xd */
    II(0x1015a356, 0x7)   mov(ax, memw_a32(ds, eax + 0x101ca554)); /* mov ax, [eax+0x101ca554] */
    II(0x1015a35d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1015a35f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x1015a362:
    II(0x1015a362, 0x5)   mov(eax, 0xe1);                       /* mov eax, 0xe1 */
    II(0x1015a367, 0x5)   calld(sys_new, 0xba94);               /* call 0x10165e00 */
    II(0x1015a36c, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1015a36f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015a372, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1015a375, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1015a379, 0x2)   jzd(0x1015a3a1, 0x26);                /* jz 0x1015a3a1 */
    II(0x1015a37b, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x1015a37f, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a380, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015a382, 0x4)   mov(cx, memw_a32(ss, ebp - 0x14));    /* mov cx, [ebp-0x14] */
    II(0x1015a386, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1015a38a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1015a38e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015a391, 0x5)   calld(0x10149237, -0x1115f);          /* call 0x10149237 */
    II(0x1015a396, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1015a399, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1015a39c, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1015a39f, 0x2)   jmpd(0x1015a3a7, 0x6);                /* jmp 0x1015a3a7 */
l_0x1015a3a1:
    II(0x1015a3a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015a3a4, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x1015a3a7:
    II(0x1015a3a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1015a3aa, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1015a3ad, 0x4)   cmp(memb_a32(ss, ebp + 0x1c), 0);     /* cmp byte [ebp+0x1c], 0x0 */
    II(0x1015a3b1, 0x2)   jnzd(0x1015a409, 0x56);               /* jnz 0x1015a409 */
    II(0x1015a3b3, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1015a3b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a3bb, 0x5)   calld(0x1007623c, -0xe4184);          /* call 0x1007623c */
    II(0x1015a3c0, 0x5)   calld(0x100cb7b4, -0x8ec11);          /* call 0x100cb7b4 */
    II(0x1015a3c5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1015a3c9, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015a3cf, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x1015a3d4, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1015a3d6, 0x3)   mov(memd_a32(ss, ebp - 0x2c), edx);   /* mov [ebp-0x2c], edx */
    II(0x1015a3d9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1015a3dd, 0x3)   add(eax, memd_a32(ss, ebp - 0x2c));   /* add eax, [ebp-0x2c] */
    II(0x1015a3e0, 0x3)   mov(dl, memb_a32(ds, eax + 0x2a));    /* mov dl, [eax+0x2a] */
    II(0x1015a3e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a3e6, 0x3)   mov(memb_a32(ds, eax + 0x27), dl);    /* mov [eax+0x27], dl */
    II(0x1015a3e9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1015a3ed, 0x3)   add(eax, memd_a32(ss, ebp - 0x2c));   /* add eax, [ebp-0x2c] */
    II(0x1015a3f0, 0x3)   inc(memb_a32(ds, eax + 0x2a));        /* inc byte [eax+0x2a] */
    II(0x1015a3f3, 0x3)   mov(al, memb_a32(ds, eax + 0x2a));    /* mov al, [eax+0x2a] */
    II(0x1015a3f6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015a3fb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015a3fd, 0x2)   jnzd(0x1015a409, 0xa);                /* jnz 0x1015a409 */
    II(0x1015a3ff, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1015a403, 0x3)   add(eax, memd_a32(ss, ebp - 0x2c));   /* add eax, [ebp-0x2c] */
    II(0x1015a406, 0x3)   inc(memb_a32(ds, eax + 0x2a));        /* inc byte [eax+0x2a] */
l_0x1015a409:
    II(0x1015a409, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xc);   /* cmp byte [0x101c391e], 0xc */
    II(0x1015a410, 0x2)   jzd(0x1015a41b, 0x9);                 /* jz 0x1015a41b */
    II(0x1015a412, 0x7)   cmp(memb_a32(ds, 0x101c37d4), 0);     /* cmp byte [0x101c37d4], 0x0 */
    II(0x1015a419, 0x2)   jzd(0x1015a41d, 0x2);                 /* jz 0x1015a41d */
l_0x1015a41b:
    II(0x1015a41b, 0x2)   jmpd(0x1015a423, 0x6);                /* jmp 0x1015a423 */
l_0x1015a41d:
    II(0x1015a41d, 0x4)   cmp(memb_a32(ss, ebp + 0x1c), 0);     /* cmp byte [ebp+0x1c], 0x0 */
    II(0x1015a421, 0x2)   jzd(0x1015a425, 0x2);                 /* jz 0x1015a425 */
l_0x1015a423:
    II(0x1015a423, 0x2)   jmpd(0x1015a42e, 0x9);                /* jmp 0x1015a42e */
l_0x1015a425:
    II(0x1015a425, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a428, 0x6)   mov(memw_a32(ds, eax + 0x52), 0);     /* mov word [eax+0x52], 0x0 */
l_0x1015a42e:
    II(0x1015a42e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a431, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1015a436, 0x2)   jnzd(0x1015a44b, 0x13);               /* jnz 0x1015a44b */
    II(0x1015a438, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a43b, 0x5)   calld(0x1007623c, -0xe4204);          /* call 0x1007623c */
    II(0x1015a440, 0x4)   mov(dx, memw_a32(ds, eax + 0x1f));    /* mov dx, [eax+0x1f] */
    II(0x1015a444, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a447, 0x4)   mov(memw_a32(ds, eax + 0x52), dx);    /* mov [eax+0x52], dx */
l_0x1015a44b:
    II(0x1015a44b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a44e, 0x4)   test(memb_a32(ds, eax + 0x12), 0x4);  /* test byte [eax+0x12], 0x4 */
    II(0x1015a452, 0x2)   jzd(0x1015a462, 0xe);                 /* jz 0x1015a462 */
    II(0x1015a454, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a457, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x9);   /* mov byte [eax+0x3d], 0x9 */
    II(0x1015a45b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a45e, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0xe);   /* mov byte [eax+0x3e], 0xe */
l_0x1015a462:
    II(0x1015a462, 0x4)   cmp(memb_a32(ss, ebp + 0x1c), 0);     /* cmp byte [ebp+0x1c], 0x0 */
    II(0x1015a466, 0x6)   jnzd(0x1015a59e, 0x132);              /* jnz dword 0x1015a59e */
    II(0x1015a46c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015a46f, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1015a472, 0x2)   jmpd(0x1015a4ce, 0x5a);               /* jmp 0x1015a4ce */
l_0x1015a474:
    II(0x1015a474, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a477, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0xc);   /* mov byte [eax+0x3d], 0xc */
    II(0x1015a47b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a47e, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1015a482, 0x5)   jmpd(0x1015a59e, 0x117);              /* jmp 0x1015a59e */
l_0x1015a487:
    II(0x1015a487, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a48a, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x7);   /* mov byte [eax+0x3d], 0x7 */
    II(0x1015a48e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a491, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0);     /* mov byte [eax+0x3e], 0x0 */
    II(0x1015a495, 0x5)   jmpd(0x1015a59e, 0x104);              /* jmp 0x1015a59e */
l_0x1015a49a:
    II(0x1015a49a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a49d, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x8);   /* mov byte [eax+0x3d], 0x8 */
    II(0x1015a4a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a4a4, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1015a4a8, 0x5)   jmpd(0x1015a59e, 0xf1);               /* jmp 0x1015a59e */
l_0x1015a4ad:
    II(0x1015a4ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a4b0, 0x6)   mov(memw_a32(ds, eax + 0x52), 0);     /* mov word [eax+0x52], 0x0 */
    II(0x1015a4b6, 0x5)   jmpd(0x1015a59e, 0xe3);               /* jmp 0x1015a59e */
l_0x1015a4bb:
    II(0x1015a4bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a4be, 0x6)   mov(memw_a32(ds, eax + 0x52), 0);     /* mov word [eax+0x52], 0x0 */
    II(0x1015a4c4, 0x5)   jmpd(0x1015a59e, 0xd5);               /* jmp 0x1015a59e */
l_0x1015a4c9:
    II(0x1015a4c9, 0x5)   jmpd(0x1015a59e, 0xd0);               /* jmp 0x1015a59e */
l_0x1015a4ce:
    II(0x1015a4ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1015a4d1, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1015a4d4, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x1c);  /* cmp word [ebp-0x34], 0x1c */
    II(0x1015a4d9, 0x6)   jbd(0x1015a540, 0x61);                /* jb dword 0x1015a540 */
    II(0x1015a4df, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x1c);  /* cmp word [ebp-0x34], 0x1c */
    II(0x1015a4e4, 0x2)   jbed(0x1015a487, -0x5f);              /* jbe 0x1015a487 */
    II(0x1015a4e6, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x29);  /* cmp word [ebp-0x34], 0x29 */
    II(0x1015a4eb, 0x2)   jbd(0x1015a514, 0x27);                /* jb 0x1015a514 */
    II(0x1015a4ed, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x2a);  /* cmp word [ebp-0x34], 0x2a */
    II(0x1015a4f2, 0x2)   jbed(0x1015a474, -0x80);              /* jbe 0x1015a474 */
    II(0x1015a4f4, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x48);  /* cmp word [ebp-0x34], 0x48 */
    II(0x1015a4f9, 0x2)   jbd(0x1015a50b, 0x10);                /* jb 0x1015a50b */
    II(0x1015a4fb, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x48);  /* cmp word [ebp-0x34], 0x48 */
    II(0x1015a500, 0x2)   jbed(0x1015a4ad, -0x55);              /* jbe 0x1015a4ad */
    II(0x1015a502, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x4e);  /* cmp word [ebp-0x34], 0x4e */
    II(0x1015a507, 0x2)   jzd(0x1015a4ad, -0x5c);               /* jz 0x1015a4ad */
    II(0x1015a509, 0x2)   jmpd(0x1015a4c9, -0x42);              /* jmp 0x1015a4c9 */
l_0x1015a50b:
    II(0x1015a50b, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x41);  /* cmp word [ebp-0x34], 0x41 */
    II(0x1015a510, 0x2)   jzd(0x1015a4ad, -0x65);               /* jz 0x1015a4ad */
    II(0x1015a512, 0x2)   jmpd(0x1015a4c9, -0x4b);              /* jmp 0x1015a4c9 */
l_0x1015a514:
    II(0x1015a514, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x22);  /* cmp word [ebp-0x34], 0x22 */
    II(0x1015a519, 0x2)   jbd(0x1015a533, 0x18);                /* jb 0x1015a533 */
    II(0x1015a51b, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x25);  /* cmp word [ebp-0x34], 0x25 */
    II(0x1015a520, 0x6)   jbed(0x1015a474, -0xb2);              /* jbe dword 0x1015a474 */
    II(0x1015a526, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x28);  /* cmp word [ebp-0x34], 0x28 */
    II(0x1015a52b, 0x6)   jzd(0x1015a487, -0xaa);               /* jz dword 0x1015a487 */
    II(0x1015a531, 0x2)   jmpd(0x1015a4c9, -0x6a);              /* jmp 0x1015a4c9 */
l_0x1015a533:
    II(0x1015a533, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x1d);  /* cmp word [ebp-0x34], 0x1d */
    II(0x1015a538, 0x6)   jzd(0x1015a49a, -0xa4);               /* jz dword 0x1015a49a */
    II(0x1015a53e, 0x2)   jmpd(0x1015a4c9, -0x77);              /* jmp 0x1015a4c9 */
l_0x1015a540:
    II(0x1015a540, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x3);   /* cmp word [ebp-0x34], 0x3 */
    II(0x1015a545, 0x2)   jbd(0x1015a589, 0x42);                /* jb 0x1015a589 */
    II(0x1015a547, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x3);   /* cmp word [ebp-0x34], 0x3 */
    II(0x1015a54c, 0x6)   jbed(0x1015a4bb, -0x97);              /* jbe dword 0x1015a4bb */
    II(0x1015a552, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x9);   /* cmp word [ebp-0x34], 0x9 */
    II(0x1015a557, 0x2)   jbd(0x1015a579, 0x20);                /* jb 0x1015a579 */
    II(0x1015a559, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x9);   /* cmp word [ebp-0x34], 0x9 */
    II(0x1015a55e, 0x6)   jbed(0x1015a4bb, -0xa9);              /* jbe dword 0x1015a4bb */
    II(0x1015a564, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0xb);   /* cmp word [ebp-0x34], 0xb */
    II(0x1015a569, 0x6)   jbed(0x1015a4bb, -0xb4);              /* jbe dword 0x1015a4bb */
    II(0x1015a56f, 0x5)   jmpd(0x1015a4c9, -0xab);              /* jmp 0x1015a4c9 */
//  II(0x1015a574, 0x5)   /* Недостижимый код. */
l_0x1015a579:
    II(0x1015a579, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0x5);   /* cmp word [ebp-0x34], 0x5 */
    II(0x1015a57e, 0x6)   jzd(0x1015a474, -0x110);              /* jz dword 0x1015a474 */
    II(0x1015a584, 0x5)   jmpd(0x1015a4c9, -0xc0);              /* jmp 0x1015a4c9 */
l_0x1015a589:
    II(0x1015a589, 0x5)   cmp(memw_a32(ss, ebp - 0x34), 0);     /* cmp word [ebp-0x34], 0x0 */
    II(0x1015a58e, 0x6)   jbed(0x1015a487, -0x10d);             /* jbe dword 0x1015a487 */
    II(0x1015a594, 0x5)   jmpd(0x1015a49a, -0xff);              /* jmp 0x1015a49a */
//  II(0x1015a599, 0x5)   /* Недостижимый код. */
l_0x1015a59e:
    II(0x1015a59e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1015a5a2, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1015a5a5, 0x2)   jnzd(0x1015a5b0, 0x9);                /* jnz 0x1015a5b0 */
    II(0x1015a5a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a5aa, 0x4)   test(memb_a32(ds, eax + 0x15), 0x10); /* test byte [eax+0x15], 0x10 */
    II(0x1015a5ae, 0x2)   jnzd(0x1015a5b2, 0x2);                /* jnz 0x1015a5b2 */
l_0x1015a5b0:
    II(0x1015a5b0, 0x2)   jmpd(0x1015a5b9, 0x7);                /* jmp 0x1015a5b9 */
l_0x1015a5b2:
    II(0x1015a5b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a5b5, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x1a);  /* mov byte [eax+0x3d], 0x1a */
l_0x1015a5b9:
    II(0x1015a5b9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1015a5bd, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1015a5c0, 0x5)   mov(edx, 0x101c81c0);                 /* mov edx, 0x101c81c0 */
    II(0x1015a5c5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1015a5c7, 0x3)   mov(memd_a32(ss, ebp - 0x38), edx);   /* mov [ebp-0x38], edx */
    II(0x1015a5ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a5cd, 0x4)   test(memb_a32(ds, eax + 0x15), 0xa);  /* test byte [eax+0x15], 0xa */
    II(0x1015a5d1, 0x2)   jzd(0x1015a612, 0x3f);                /* jz 0x1015a612 */
    II(0x1015a5d3, 0x5)   calld(0x10155144, -0x5494);           /* call 0x10155144 */
    II(0x1015a5d8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015a5da, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1015a5dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a5df, 0x3)   mov(al, memb_a32(ds, eax + 0x29));    /* mov al, [eax+0x29] */
    II(0x1015a5e2, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015a5e4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015a5e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a5ea, 0x5)   calld(0x1014e788, -0xbe67);           /* call 0x1014e788 */
    II(0x1015a5ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a5f2, 0x4)   test(memb_a32(ds, eax + 0x15), 0x8);  /* test byte [eax+0x15], 0x8 */
    II(0x1015a5f6, 0x2)   jzd(0x1015a612, 0x1a);                /* jz 0x1015a612 */
    II(0x1015a5f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1015a5fb, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1015a5fe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015a600, 0x3)   mov(dl, memb_a32(ds, eax + 0x3));     /* mov dl, [eax+0x3] */
    II(0x1015a603, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a606, 0x4)   add(dx, memw_a32(ds, eax + 0x35));    /* add dx, [eax+0x35] */
    II(0x1015a60a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a60d, 0x1)   dec(edx);                             /* dec edx */
    II(0x1015a60e, 0x4)   mov(memw_a32(ds, eax + 0x3b), dx);    /* mov [eax+0x3b], dx */
l_0x1015a612:
    II(0x1015a612, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x28);   /* cmp word [ebp-0x8], 0x28 */
    II(0x1015a617, 0x2)   jnzd(0x1015a61f, 0x6);                /* jnz 0x1015a61f */
    II(0x1015a619, 0x4)   cmp(memb_a32(ss, ebp + 0x1c), 0);     /* cmp byte [ebp+0x1c], 0x0 */
    II(0x1015a61d, 0x2)   jzd(0x1015a621, 0x2);                 /* jz 0x1015a621 */
l_0x1015a61f:
    II(0x1015a61f, 0x2)   jmpd(0x1015a631, 0x10);               /* jmp 0x1015a631 */
l_0x1015a621:
    II(0x1015a621, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x14)); /* movsx ebx, word [ebp+0x14] */
    II(0x1015a625, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x10)); /* movsx edx, word [ebp+0x10] */
    II(0x1015a629, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a62c, 0x5)   calld(0x10163263, 0x8c32);            /* call 0x10163263 */
l_0x1015a631:
    II(0x1015a631, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015a633, 0x3)   mov(cl, memb_a32(ss, ebp + 0x20));    /* mov cl, [ebp+0x20] */
    II(0x1015a636, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x14)); /* movsx ebx, word [ebp+0x14] */
    II(0x1015a63a, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x10)); /* movsx edx, word [ebp+0x10] */
    II(0x1015a63e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a641, 0x5)   calld(0x1014a48e, -0x101b8);          /* call 0x1014a48e */
    II(0x1015a646, 0x4)   cmp(memb_a32(ss, ebp + 0x1c), 0);     /* cmp byte [ebp+0x1c], 0x0 */
    II(0x1015a64a, 0x2)   jnzd(0x1015a694, 0x48);               /* jnz 0x1015a694 */
    II(0x1015a64c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x1015a64f, 0x5)   mov(eax, 0x101c39c0);                 /* mov eax, 0x101c39c0 */
    II(0x1015a654, 0x5)   calld(0x10103e3e, -0x5681b);          /* call 0x10103e3e */
    II(0x1015a659, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x9);    /* cmp word [ebp-0x8], 0x9 */
    II(0x1015a65e, 0x2)   jzd(0x1015a667, 0x7);                 /* jz 0x1015a667 */
    II(0x1015a660, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0xb);    /* cmp word [ebp-0x8], 0xb */
    II(0x1015a665, 0x2)   jnzd(0x1015a669, 0x2);                /* jnz 0x1015a669 */
l_0x1015a667:
    II(0x1015a667, 0x2)   jmpd(0x1015a670, 0x7);                /* jmp 0x1015a670 */
l_0x1015a669:
    II(0x1015a669, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0xa);    /* cmp word [ebp-0x8], 0xa */
    II(0x1015a66e, 0x2)   jnzd(0x1015a672, 0x2);                /* jnz 0x1015a672 */
l_0x1015a670:
    II(0x1015a670, 0x2)   jmpd(0x1015a679, 0x7);                /* jmp 0x1015a679 */
l_0x1015a672:
    II(0x1015a672, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x3);    /* cmp word [ebp-0x8], 0x3 */
    II(0x1015a677, 0x2)   jnzd(0x1015a68c, 0x13);               /* jnz 0x1015a68c */
l_0x1015a679:
    II(0x1015a679, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a67c, 0x4)   mov(ax, memw_a32(ds, eax + 0x33));    /* mov ax, [eax+0x33] */
    II(0x1015a680, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015a681, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015a684, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a687, 0x5)   calld(0x10149b07, -0x10b85);          /* call 0x10149b07 */
l_0x1015a68c:
    II(0x1015a68c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015a68f, 0x5)   calld(0x100a8d5f, -0xb1935);          /* call 0x100a8d5f */
l_0x1015a694:
    II(0x1015a694, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x1015a697, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015a69a, 0x5)   calld(0x100766ac, -0xe3ff3);          /* call 0x100766ac */
    II(0x1015a69f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015a6a2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015a6a4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015a6a5, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015a6a6, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015a6a7, 0x3)   retd(0x14);                           /* ret 0x14 */
FUNC_END

