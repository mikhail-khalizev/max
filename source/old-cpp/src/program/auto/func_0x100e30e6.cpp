FUNC_BEGIN(0x100e30e6, 0x3ec35f8071343058, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x62, 0x2c, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x1c, 0xa, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x5e, 0x34, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x8, 0x4e, 0xf, 0x85, 0xbd, 0, 0, 0, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x42, 0x34, 0xf9, 0xff, 0x8b, 0x48, 0x1a, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x31, 0x34, 0xf9, 0xff, 0x8b, 0x58, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x57, 0xd1, 0xf8, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x38, 0xe8, 0x94, 0x78, 0xfe, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xa9, 0x78, 0xfe, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0xe7, 0x1b, 0x1a, 0x10, 0xe8, 0x99, 0x2b, 0x3, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x3b, 0x34, 0xf9, 0xff, 0xe8, 0xd6, 0xc8, 0x1, 0, 0xe9, 0x1b, 0x1, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0xc7, 0x33, 0xf9, 0xff, 0xe8, 0xe6, 0x77, 0xfa, 0xff, 0x31, 0xdb, 0xba, 0xa, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0xc, 0x34, 0xf9, 0xff, 0xe8, 0x8a, 0xfe, 0x7, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0xfc, 0x33, 0xf9, 0xff, 0xe8, 0x97, 0xc8, 0x1, 0, 0xe9, 0xdc, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x8b, 0x33, 0xf9, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xe8, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x64, 0x33, 0xf9, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x52, 0x33, 0xf9, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xec, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x4d, 0xec, 0x8d, 0x5d, 0xf4, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xac, 0xdc, 0xf8, 0xff, 0x66, 0x85, 0xc0, 0x75, 0x35, 0xe8, 0xa8, 0x77, 0xfe, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xbd, 0x77, 0xfe, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0xd, 0x1c, 0x1a, 0x10, 0xe8, 0xad, 0x2a, 0x3, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x4f, 0x33, 0xf9, 0xff, 0xe8, 0xea, 0xc7, 0x1, 0, 0xeb, 0x32, 0x8b, 0x45, 0xfc, 0xe8, 0x9b, 0xbe, 0x6, 0, 0xe8, 0x6b, 0x77, 0xfe, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x80, 0x77, 0xfe, 0xff, 0x31, 0xdb, 0x31, 0xd2, 0xbe, 0x33, 0x1c, 0x1a, 0x10, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0x71, 0x2a, 0x3, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xb6, 0xc7, 0x1, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100e30e6, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100e30eb, 0x5)   calld(sys_check_available_stack_size, 0x82c62); /* call 0x10165d52 */
    II(0x100e30f0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e30f1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e30f2, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e30f3, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e30f4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e30f5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e30f7, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100e30fd, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e3100, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100e3103, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3106, 0x5)   calld(0x100e3b27, 0xa1c);             /* call 0x100e3b27 */
    II(0x100e310b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e310e, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e3111, 0x5)   calld(0x10076574, -0x6cba2);          /* call 0x10076574 */
    II(0x100e3116, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100e311b, 0x6)   jnzd(0x100e31de, 0xbd);               /* jnz dword 0x100e31de */
    II(0x100e3121, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100e3126, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3127, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e312a, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e312d, 0x5)   calld(0x10076574, -0x6cbbe);          /* call 0x10076574 */
    II(0x100e3132, 0x3)   mov(ecx, memd_a32(ds, eax + 0x1a));   /* mov ecx, [eax+0x1a] */
    II(0x100e3135, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100e3138, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e313b, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e313e, 0x5)   calld(0x10076574, -0x6cbcf);          /* call 0x10076574 */
    II(0x100e3143, 0x3)   mov(ebx, memd_a32(ds, eax + 0x18));   /* mov ebx, [eax+0x18] */
    II(0x100e3146, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100e3149, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e314c, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100e314f, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100e3151, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e3154, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3157, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100e315a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e315d, 0x5)   calld(0x100702b9, -0x72ea9);          /* call 0x100702b9 */
    II(0x100e3162, 0x1)   cwde();                               /* cwde */
    II(0x100e3163, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e3165, 0x2)   jnzd(0x100e319f, 0x38);               /* jnz 0x100e319f */
    II(0x100e3167, 0x5)   calld(0x100caa00, -0x1876c);          /* call 0x100caa00 */
    II(0x100e316c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e3171, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3172, 0x5)   calld(0x100caa20, -0x18757);          /* call 0x100caa20 */
    II(0x100e3177, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100e3179, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e317b, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100e3180, 0x5)   mov(eax, 0x101a1be7);                 /* mov eax, 0x101a1be7 */ /* "Unable to activate unit at this site." */
    II(0x100e3185, 0x5)   calld(0x10115d23, 0x32b99);           /* call 0x10115d23 */
    II(0x100e318a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e318d, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e3190, 0x5)   calld(0x100765d0, -0x6cbc5);          /* call 0x100765d0 */
    II(0x100e3195, 0x5)   calld(0x100ffa70, 0x1c8d6);           /* call 0x100ffa70 */
    II(0x100e319a, 0x5)   jmpd(0x100e32ba, 0x11b);              /* jmp 0x100e32ba */
l_0x100e319f:
    II(0x100e319f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100e31a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e31a5, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e31a8, 0x5)   calld(0x10076574, -0x6cc39);          /* call 0x10076574 */
    II(0x100e31ad, 0x5)   calld(0x1008a998, -0x5881a);          /* call 0x1008a998 */
    II(0x100e31b2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e31b4, 0x5)   mov(edx, 0xa);                        /* mov edx, 0xa */
    II(0x100e31b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e31bc, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e31bf, 0x5)   calld(0x100765d0, -0x6cbf4);          /* call 0x100765d0 */
    II(0x100e31c4, 0x5)   calld(0x10163053, 0x7fe8a);           /* call 0x10163053 */
    II(0x100e31c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e31cc, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e31cf, 0x5)   calld(0x100765d0, -0x6cc04);          /* call 0x100765d0 */
    II(0x100e31d4, 0x5)   calld(0x100ffa70, 0x1c897);           /* call 0x100ffa70 */
    II(0x100e31d9, 0x5)   jmpd(0x100e32ba, 0xdc);               /* jmp 0x100e32ba */
l_0x100e31de:
    II(0x100e31de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e31e1, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e31e4, 0x5)   calld(0x10076574, -0x6cc75);          /* call 0x10076574 */
    II(0x100e31e9, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x100e31ed, 0x2)   jzd(0x100e31f8, 0x9);                 /* jz 0x100e31f8 */
    II(0x100e31ef, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x1);   /* mov dword [ebp-0x18], 0x1 */
    II(0x100e31f6, 0x2)   jmpd(0x100e31ff, 0x7);                /* jmp 0x100e31ff */
l_0x100e31f8:
    II(0x100e31f8, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x100e31ff:
    II(0x100e31ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e3202, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e3205, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3208, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e320b, 0x5)   calld(0x10076574, -0x6cc9c);          /* call 0x10076574 */
    II(0x100e3210, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100e3214, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100e3217, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e321a, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e321d, 0x5)   calld(0x10076574, -0x6ccae);          /* call 0x10076574 */
    II(0x100e3222, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100e3226, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100e3229, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e322b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e322c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100e3230, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3231, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100e3236, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3237, 0x3)   lea(ecx, ebp - 0x14);                 /* lea ecx, [ebp-0x14] */
    II(0x100e323a, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100e323d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100e3240, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3243, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100e3246, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e3249, 0x5)   calld(0x10070efa, -0x72354);          /* call 0x10070efa */
    II(0x100e324e, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100e3251, 0x2)   jnzd(0x100e3288, 0x35);               /* jnz 0x100e3288 */
    II(0x100e3253, 0x5)   calld(0x100caa00, -0x18858);          /* call 0x100caa00 */
    II(0x100e3258, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e325d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e325e, 0x5)   calld(0x100caa20, -0x18843);          /* call 0x100caa20 */
    II(0x100e3263, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100e3265, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e3267, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100e326c, 0x5)   mov(eax, 0x101a1c0d);                 /* mov eax, 0x101a1c0d */ /* "Unable to activate unit at this site." */
    II(0x100e3271, 0x5)   calld(0x10115d23, 0x32aad);           /* call 0x10115d23 */
    II(0x100e3276, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3279, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e327c, 0x5)   calld(0x100765d0, -0x6ccb1);          /* call 0x100765d0 */
    II(0x100e3281, 0x5)   calld(0x100ffa70, 0x1c7ea);           /* call 0x100ffa70 */
    II(0x100e3286, 0x2)   jmpd(0x100e32ba, 0x32);               /* jmp 0x100e32ba */
l_0x100e3288:
    II(0x100e3288, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e328b, 0x5)   calld(0x1014f12b, 0x6be9b);           /* call 0x1014f12b */
    II(0x100e3290, 0x5)   calld(0x100caa00, -0x18895);          /* call 0x100caa00 */
    II(0x100e3295, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e329a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e329b, 0x5)   calld(0x100caa20, -0x18880);          /* call 0x100caa20 */
    II(0x100e32a0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e32a2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e32a4, 0x5)   mov(esi, 0x101a1c33);                 /* mov esi, 0x101a1c33 */ /* "Select an open square to place unit." */
    II(0x100e32a9, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100e32ab, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100e32ad, 0x5)   calld(0x10115d23, 0x32a71);           /* call 0x10115d23 */
    II(0x100e32b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e32b5, 0x5)   calld(0x100ffa70, 0x1c7b6);           /* call 0x100ffa70 */
l_0x100e32ba:
    II(0x100e32ba, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e32bc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e32bd, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e32be, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e32bf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e32c0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e32c1, 0x1)   retd();                               /* ret */
FUNC_END

