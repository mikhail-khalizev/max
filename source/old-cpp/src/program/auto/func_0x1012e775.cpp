FUNC_BEGIN(0x1012e775, 0x1cbaf31c4fde07f7, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0xd3, 0x75, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xfc, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8d, 0x45, 0xf8, 0xe8, 0xcb, 0x7e, 0xf4, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x12, 0xe8, 0xe9, 0x68, 0xfa, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x31, 0xc0, 0xe8, 0x7c, 0x26, 0xfd, 0xff, 0xeb, 0x12, 0xba, 0x1, 0, 0, 0, 0xa1, 0x60, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x81, 0x4b, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0x9d, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0xb8, 0x9d, 0, 0, 0, 0, 0xf, 0x85, 0x62, 0x2, 0, 0, 0xe8, 0x1f, 0xca, 0x3, 0, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xec, 0xe8, 0x30, 0xc5, 0xfb, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0x37, 0xc1, 0xfb, 0xff, 0x84, 0xc0, 0x74, 0xa, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x14, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xd6, 0x66, 0xfa, 0xff, 0x66, 0x3b, 0x45, 0xed, 0x7e, 0x2, 0xeb, 0x2a, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xc0, 0x66, 0xfa, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x17, 0x67, 0xfa, 0xff, 0x98, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xed, 0x39, 0xc2, 0x7c, 0x2, 0xeb, 0x14, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x60, 0x66, 0xfa, 0xff, 0x66, 0x3b, 0x45, 0xef, 0x7e, 0x2, 0xeb, 0x2a, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x4a, 0x66, 0xfa, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xd5, 0x66, 0xfa, 0xff, 0x98, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xef, 0x39, 0xc2, 0x7c, 0x2, 0xeb, 0x51, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x17, 0x88, 0x45, 0xe8, 0xeb, 0x30, 0x8d, 0x55, 0xed, 0x8d, 0x45, 0xe4, 0xe8, 0xbe, 0x75, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xf8, 0xfd, 0xff, 0xff, 0xeb, 0x2f, 0x8d, 0x55, 0xed, 0x8d, 0x45, 0xe0, 0xe8, 0xa7, 0x75, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x2f, 0xfd, 0xff, 0xff, 0xeb, 0x18, 0xeb, 0x16, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xdc, 0x80, 0x7d, 0xdc, 0, 0x76, 0xc4, 0x80, 0x7d, 0xdc, 0x3, 0x74, 0xd5, 0xeb, 0xea, 0xeb, 0xe8, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xd8, 0xe9, 0xce, 0, 0, 0, 0xe8, 0xb5, 0x82, 0xfe, 0xff, 0xe9, 0x26, 0x1, 0, 0, 0xe8, 0x71, 0x65, 0xfa, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0xb8, 0x1d, 0, 0, 0, 0xe8, 0xf5, 0x71, 0xfd, 0xff, 0xe9, 0xc, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0x9d, 0, 0, 0, 0x1, 0xe9, 0xfd, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x17, 0, 0x75, 0x22, 0x8b, 0x45, 0xfc, 0xe8, 0x30, 0xf8, 0xff, 0xff, 0x89, 0x45, 0xd4, 0xf, 0xbf, 0x45, 0xd4, 0x85, 0xc0, 0x7e, 0xf, 0x8b, 0x45, 0xd4, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x85, 0xf8, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x17, 0x3, 0x75, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x5f, 0xfb, 0xff, 0xff, 0xe9, 0xbc, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x17, 0, 0x75, 0x39, 0x8b, 0x45, 0xfc, 0xe8, 0xef, 0xf7, 0xff, 0xff, 0x89, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x15, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x51, 0xcb, 0xf7, 0xff, 0x98, 0xf, 0xbf, 0x55, 0xd0, 0x48, 0x39, 0xc2, 0x7c, 0x2, 0xeb, 0xf, 0x8b, 0x45, 0xd0, 0x40, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x2d, 0xf8, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x17, 0x3, 0x75, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0xa1, 0xfb, 0xff, 0xff, 0xe9, 0x64, 0, 0, 0, 0xeb, 0x62, 0x83, 0x7d, 0xd8, 0x3f, 0x72, 0x3e, 0x83, 0x7d, 0xd8, 0x3f, 0xf, 0x86, 0x2c, 0xff, 0xff, 0xff, 0x81, 0x7d, 0xd8, 0x48, 0x1, 0, 0, 0x72, 0x1c, 0x81, 0x7d, 0xd8, 0x48, 0x1, 0, 0, 0xf, 0x86, 0x3f, 0xff, 0xff, 0xff, 0x81, 0x7d, 0xd8, 0x50, 0x1, 0, 0, 0xf, 0x84, 0x73, 0xff, 0xff, 0xff, 0xeb, 0xc9, 0x81, 0x7d, 0xd8, 0x19, 0x1, 0, 0, 0xf, 0x84, 0xf0, 0xfe, 0xff, 0xff, 0xeb, 0xba, 0x83, 0x7d, 0xd8, 0xd, 0x72, 0x16, 0x83, 0x7d, 0xd8, 0xd, 0xf, 0x86, 0x2, 0xff, 0xff, 0xff, 0x83, 0x7d, 0xd8, 0x1b, 0xf, 0x84, 0xf8, 0xfe, 0xff, 0xff, 0xeb, 0x9e, 0xeb, 0x9c, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x9, 0x31, 0xd2, 0x31, 0xc0, 0xe8, 0x4, 0x24, 0xfd, 0xff, 0x80, 0x3d, 0xd2, 0x37, 0x1c, 0x10, 0, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0x9d, 0, 0, 0, 0x1, 0xe9, 0x8e, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x17, 0x3, 0x75, 0x11, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x36, 0xe8, 0x15, 0xc3, 0, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x36, 0xe8, 0x43, 0x31, 0, 0, 0xe8, 0x99, 0x8d, 0xfe, 0xff, 0x8d, 0x55, 0xf8, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x45, 0xe1, 0xf6, 0xff, 0x84, 0xc0, 0x74, 0x52, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x43, 0x7b, 0xf4, 0xff, 0xe8, 0xa5, 0xb, 0xfd, 0xff, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xd3, 0xc2, 0, 0, 0x84, 0xc0, 0x74, 0x33, 0xe8, 0x25, 0x40, 0xfd, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xbf, 0x7a, 0xf4, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xaf, 0x7a, 0xf4, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x4b, 0x2b, 0xfd, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x12, 0xe8, 0xb1, 0x65, 0xfa, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x31, 0xc0, 0xe8, 0x44, 0x23, 0xfd, 0xff, 0xeb, 0xa, 0xe8, 0xff, 0x97, 0x1, 0, 0xa3, 0x6c, 0x39, 0x1c, 0x10, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x28, 0x74, 0xf4, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1012e775, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x1012e77a, 0x5)   calld(sys_check_available_stack_size, 0x375d3); /* call 0x10165d52 */
    II(0x1012e77f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012e780, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012e781, 0x1)   pushd(edx);                           /* push edx */
    II(0x1012e782, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012e783, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012e784, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012e785, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012e787, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x1012e78d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1012e790, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1012e795, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1012e798, 0x5)   calld(0x10076668, -0xb8135);          /* call 0x10076668 */
    II(0x1012e79d, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x1012e7a4, 0x2)   jzd(0x1012e7b8, 0x12);                /* jz 0x1012e7b8 */
    II(0x1012e7a6, 0x5)   calld(0x100d5094, -0x59717);          /* call 0x100d5094 */
    II(0x1012e7ab, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012e7ad, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1012e7af, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012e7b1, 0x5)   calld(0x10100e32, -0x2d984);          /* call 0x10100e32 */
    II(0x1012e7b6, 0x2)   jmpd(0x1012e7ca, 0x12);               /* jmp 0x1012e7ca */
l_0x1012e7b8:
    II(0x1012e7b8, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1012e7bd, 0x5)   mov(eax, memd_a32(ds, 0x101c3960));   /* mov eax, [0x101c3960] */
    II(0x1012e7c2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012e7c5, 0x5)   calld(0x100f334b, -0x3b47f);          /* call 0x100f334b */
l_0x1012e7ca:
    II(0x1012e7ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e7cd, 0x7)   mov(memb_a32(ds, eax + 0x9d), 0);     /* mov byte [eax+0x9d], 0x0 */
l_0x1012e7d4:
    II(0x1012e7d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e7d7, 0x7)   cmp(memb_a32(ds, eax + 0x9d), 0);     /* cmp byte [eax+0x9d], 0x0 */
    II(0x1012e7de, 0x6)   jnzd(0x1012ea46, 0x262);              /* jnz dword 0x1012ea46 */
    II(0x1012e7e4, 0x5)   calld(/* sys */ 0x1016b208, 0x3ca1f); /* call 0x1016b208 */
    II(0x1012e7e9, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1012e7ec, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1012e7ef, 0x5)   calld(0x100ead24, -0x43ad0);          /* call 0x100ead24 */
    II(0x1012e7f4, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1012e7f7, 0x5)   calld(0x100ea933, -0x43ec9);          /* call 0x100ea933 */
    II(0x1012e7fc, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012e7fe, 0x2)   jzd(0x1012e80a, 0xa);                 /* jz 0x1012e80a */
    II(0x1012e800, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012e802, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1012e805, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1012e808, 0x2)   jzd(0x1012e80c, 0x2);                 /* jz 0x1012e80c */
l_0x1012e80a:
    II(0x1012e80a, 0x2)   jmpd(0x1012e820, 0x14);               /* jmp 0x1012e820 */
l_0x1012e80c:
    II(0x1012e80c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e80f, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012e815, 0x5)   calld(0x100d4ef0, -0x5992a);          /* call 0x100d4ef0 */
    II(0x1012e81a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x13));    /* cmp ax, [ebp-0x13] */
    II(0x1012e81e, 0x2)   jled(0x1012e822, 0x2);                /* jle 0x1012e822 */
l_0x1012e820:
    II(0x1012e820, 0x2)   jmpd(0x1012e84c, 0x2a);               /* jmp 0x1012e84c */
l_0x1012e822:
    II(0x1012e822, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e825, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012e82b, 0x5)   calld(0x100d4ef0, -0x59940);          /* call 0x100d4ef0 */
    II(0x1012e830, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012e833, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e836, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012e83c, 0x5)   calld(0x100d4f58, -0x598e9);          /* call 0x100d4f58 */
    II(0x1012e841, 0x1)   cwde();                               /* cwde */
    II(0x1012e842, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012e844, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x13)); /* movsx edx, word [ebp-0x13] */
    II(0x1012e848, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012e84a, 0x2)   jld(0x1012e84e, 0x2);                 /* jl 0x1012e84e */
l_0x1012e84c:
    II(0x1012e84c, 0x2)   jmpd(0x1012e862, 0x14);               /* jmp 0x1012e862 */
l_0x1012e84e:
    II(0x1012e84e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e851, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012e857, 0x5)   calld(0x100d4ebc, -0x599a0);          /* call 0x100d4ebc */
    II(0x1012e85c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x11));    /* cmp ax, [ebp-0x11] */
    II(0x1012e860, 0x2)   jled(0x1012e864, 0x2);                /* jle 0x1012e864 */
l_0x1012e862:
    II(0x1012e862, 0x2)   jmpd(0x1012e88e, 0x2a);               /* jmp 0x1012e88e */
l_0x1012e864:
    II(0x1012e864, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e867, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012e86d, 0x5)   calld(0x100d4ebc, -0x599b6);          /* call 0x100d4ebc */
    II(0x1012e872, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012e875, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e878, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012e87e, 0x5)   calld(0x100d4f58, -0x5992b);          /* call 0x100d4f58 */
    II(0x1012e883, 0x1)   cwde();                               /* cwde */
    II(0x1012e884, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012e886, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x11)); /* movsx edx, word [ebp-0x11] */
    II(0x1012e88a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012e88c, 0x2)   jld(0x1012e890, 0x2);                 /* jl 0x1012e890 */
l_0x1012e88e:
    II(0x1012e88e, 0x2)   jmpd(0x1012e8e1, 0x51);               /* jmp 0x1012e8e1 */
l_0x1012e890:
    II(0x1012e890, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e893, 0x3)   mov(al, memb_a32(ds, eax + 0x17));    /* mov al, [eax+0x17] */
    II(0x1012e896, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x1012e899, 0x2)   jmpd(0x1012e8cb, 0x30);               /* jmp 0x1012e8cb */
l_0x1012e89b:
    II(0x1012e89b, 0x3)   lea(edx, ebp - 0x13);                 /* lea edx, [ebp-0x13] */
    II(0x1012e89e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1012e8a1, 0x5)   calld(0x10075e64, -0xb8a42);          /* call 0x10075e64 */
    II(0x1012e8a6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012e8a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e8ab, 0x5)   calld(0x1012e6a8, -0x208);            /* call 0x1012e6a8 */
    II(0x1012e8b0, 0x2)   jmpd(0x1012e8e1, 0x2f);               /* jmp 0x1012e8e1 */
l_0x1012e8b2:
    II(0x1012e8b2, 0x3)   lea(edx, ebp - 0x13);                 /* lea edx, [ebp-0x13] */
    II(0x1012e8b5, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1012e8b8, 0x5)   calld(0x10075e64, -0xb8a59);          /* call 0x10075e64 */
    II(0x1012e8bd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012e8bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e8c2, 0x5)   calld(0x1012e5f6, -0x2d1);            /* call 0x1012e5f6 */
    II(0x1012e8c7, 0x2)   jmpd(0x1012e8e1, 0x18);               /* jmp 0x1012e8e1 */
l_0x1012e8c9:
    II(0x1012e8c9, 0x2)   jmpd(0x1012e8e1, 0x16);               /* jmp 0x1012e8e1 */
l_0x1012e8cb:
    II(0x1012e8cb, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x1012e8ce, 0x3)   mov(memb_a32(ss, ebp - 0x24), al);    /* mov [ebp-0x24], al */
    II(0x1012e8d1, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0);     /* cmp byte [ebp-0x24], 0x0 */
    II(0x1012e8d5, 0x2)   jbed(0x1012e89b, -0x3c);              /* jbe 0x1012e89b */
    II(0x1012e8d7, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x3);   /* cmp byte [ebp-0x24], 0x3 */
    II(0x1012e8db, 0x2)   jzd(0x1012e8b2, -0x2b);               /* jz 0x1012e8b2 */
    II(0x1012e8dd, 0x2)   jmpd(0x1012e8c9, -0x16);              /* jmp 0x1012e8c9 */
//  II(0x1012e8df, 0x2)   /* Недостижимый код. */
l_0x1012e8e1:
    II(0x1012e8e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012e8e4, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1012e8e7, 0x5)   jmpd(0x1012e9ba, 0xce);               /* jmp 0x1012e9ba */
l_0x1012e8ec:
    II(0x1012e8ec, 0x5)   calld(0x10116ba6, -0x17d4b);          /* call 0x10116ba6 */
    II(0x1012e8f1, 0x5)   jmpd(0x1012ea1c, 0x126);              /* jmp 0x1012ea1c */
l_0x1012e8f6:
    II(0x1012e8f6, 0x5)   calld(0x100d4e6c, -0x59a8f);          /* call 0x100d4e6c */
    II(0x1012e8fb, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1012e8fd, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1012e8ff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012e901, 0x5)   mov(eax, 0x1d);                       /* mov eax, 0x1d */
    II(0x1012e906, 0x5)   calld(0x10105b00, -0x28e0b);          /* call 0x10105b00 */
    II(0x1012e90b, 0x5)   jmpd(0x1012ea1c, 0x10c);              /* jmp 0x1012ea1c */
l_0x1012e910:
    II(0x1012e910, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e913, 0x7)   mov(memb_a32(ds, eax + 0x9d), 0x1);   /* mov byte [eax+0x9d], 0x1 */
    II(0x1012e91a, 0x5)   jmpd(0x1012ea1c, 0xfd);               /* jmp 0x1012ea1c */
l_0x1012e91f:
    II(0x1012e91f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e922, 0x4)   cmp(memb_a32(ds, eax + 0x17), 0);     /* cmp byte [eax+0x17], 0x0 */
    II(0x1012e926, 0x2)   jnzd(0x1012e94a, 0x22);               /* jnz 0x1012e94a */
    II(0x1012e928, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e92b, 0x5)   calld(0x1012e160, -0x7d0);            /* call 0x1012e160 */
    II(0x1012e930, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1012e933, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1012e937, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012e939, 0x2)   jled(0x1012e94a, 0xf);                /* jle 0x1012e94a */
    II(0x1012e93b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1012e93e, 0x1)   dec(eax);                             /* dec eax */
    II(0x1012e93f, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012e942, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e945, 0x5)   calld(0x1012e1cf, -0x77b);            /* call 0x1012e1cf */
l_0x1012e94a:
    II(0x1012e94a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e94d, 0x4)   cmp(memb_a32(ds, eax + 0x17), 0x3);   /* cmp byte [eax+0x17], 0x3 */
    II(0x1012e951, 0x2)   jnzd(0x1012e95b, 0x8);                /* jnz 0x1012e95b */
    II(0x1012e953, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e956, 0x5)   calld(0x1012e4ba, -0x4a1);            /* call 0x1012e4ba */
l_0x1012e95b:
    II(0x1012e95b, 0x5)   jmpd(0x1012ea1c, 0xbc);               /* jmp 0x1012ea1c */
l_0x1012e960:
    II(0x1012e960, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e963, 0x4)   cmp(memb_a32(ds, eax + 0x17), 0);     /* cmp byte [eax+0x17], 0x0 */
    II(0x1012e967, 0x2)   jnzd(0x1012e9a2, 0x39);               /* jnz 0x1012e9a2 */
    II(0x1012e969, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e96c, 0x5)   calld(0x1012e160, -0x811);            /* call 0x1012e160 */
    II(0x1012e971, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1012e974, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1012e978, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012e97a, 0x2)   jld(0x1012e991, 0x15);                /* jl 0x1012e991 */
    II(0x1012e97c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e97f, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012e982, 0x5)   calld(my_1_get_count, -0x834af);      /* call 0x100ab4d8 */
    II(0x1012e987, 0x1)   cwde();                               /* cwde */
    II(0x1012e988, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x1012e98c, 0x1)   dec(eax);                             /* dec eax */
    II(0x1012e98d, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012e98f, 0x2)   jld(0x1012e993, 0x2);                 /* jl 0x1012e993 */
l_0x1012e991:
    II(0x1012e991, 0x2)   jmpd(0x1012e9a2, 0xf);                /* jmp 0x1012e9a2 */
l_0x1012e993:
    II(0x1012e993, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1012e996, 0x1)   inc(eax);                             /* inc eax */
    II(0x1012e997, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012e99a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e99d, 0x5)   calld(0x1012e1cf, -0x7d3);            /* call 0x1012e1cf */
l_0x1012e9a2:
    II(0x1012e9a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e9a5, 0x4)   cmp(memb_a32(ds, eax + 0x17), 0x3);   /* cmp byte [eax+0x17], 0x3 */
    II(0x1012e9a9, 0x2)   jnzd(0x1012e9b3, 0x8);                /* jnz 0x1012e9b3 */
    II(0x1012e9ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e9ae, 0x5)   calld(0x1012e554, -0x45f);            /* call 0x1012e554 */
l_0x1012e9b3:
    II(0x1012e9b3, 0x5)   jmpd(0x1012ea1c, 0x64);               /* jmp 0x1012ea1c */
l_0x1012e9b8:
    II(0x1012e9b8, 0x2)   jmpd(0x1012ea1c, 0x62);               /* jmp 0x1012ea1c */
l_0x1012e9ba:
    II(0x1012e9ba, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0x3f);  /* cmp dword [ebp-0x28], 0x3f */
    II(0x1012e9be, 0x2)   jbd(0x1012e9fe, 0x3e);                /* jb 0x1012e9fe */
    II(0x1012e9c0, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0x3f);  /* cmp dword [ebp-0x28], 0x3f */
    II(0x1012e9c4, 0x6)   jbed(0x1012e8f6, -0xd4);              /* jbe dword 0x1012e8f6 */
    II(0x1012e9ca, 0x7)   cmp(memd_a32(ss, ebp - 0x28), 0x148); /* cmp dword [ebp-0x28], 0x148 */
    II(0x1012e9d1, 0x2)   jbd(0x1012e9ef, 0x1c);                /* jb 0x1012e9ef */
    II(0x1012e9d3, 0x7)   cmp(memd_a32(ss, ebp - 0x28), 0x148); /* cmp dword [ebp-0x28], 0x148 */
    II(0x1012e9da, 0x6)   jbed(0x1012e91f, -0xc1);              /* jbe dword 0x1012e91f */
    II(0x1012e9e0, 0x7)   cmp(memd_a32(ss, ebp - 0x28), 0x150); /* cmp dword [ebp-0x28], 0x150 */
    II(0x1012e9e7, 0x6)   jzd(0x1012e960, -0x8d);               /* jz dword 0x1012e960 */
    II(0x1012e9ed, 0x2)   jmpd(0x1012e9b8, -0x37);              /* jmp 0x1012e9b8 */
l_0x1012e9ef:
    II(0x1012e9ef, 0x7)   cmp(memd_a32(ss, ebp - 0x28), 0x119); /* cmp dword [ebp-0x28], 0x119 */
    II(0x1012e9f6, 0x6)   jzd(0x1012e8ec, -0x110);              /* jz dword 0x1012e8ec */
    II(0x1012e9fc, 0x2)   jmpd(0x1012e9b8, -0x46);              /* jmp 0x1012e9b8 */
l_0x1012e9fe:
    II(0x1012e9fe, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0xd);   /* cmp dword [ebp-0x28], 0xd */
    II(0x1012ea02, 0x2)   jbd(0x1012ea1a, 0x16);                /* jb 0x1012ea1a */
    II(0x1012ea04, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0xd);   /* cmp dword [ebp-0x28], 0xd */
    II(0x1012ea08, 0x6)   jbed(0x1012e910, -0xfe);              /* jbe dword 0x1012e910 */
    II(0x1012ea0e, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0x1b);  /* cmp dword [ebp-0x28], 0x1b */
    II(0x1012ea12, 0x6)   jzd(0x1012e910, -0x108);              /* jz dword 0x1012e910 */
    II(0x1012ea18, 0x2)   jmpd(0x1012e9b8, -0x62);              /* jmp 0x1012e9b8 */
l_0x1012ea1a:
    II(0x1012ea1a, 0x2)   jmpd(0x1012e9b8, -0x64);              /* jmp 0x1012e9b8 */
l_0x1012ea1c:
    II(0x1012ea1c, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x1012ea23, 0x2)   jzd(0x1012ea2e, 0x9);                 /* jz 0x1012ea2e */
    II(0x1012ea25, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012ea27, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012ea29, 0x5)   calld(0x10100e32, -0x2dbfc);          /* call 0x10100e32 */
l_0x1012ea2e:
    II(0x1012ea2e, 0x7)   cmp(memb_a32(ds, 0x101c37d2), 0);     /* cmp byte [0x101c37d2], 0x0 */
    II(0x1012ea35, 0x2)   jzd(0x1012ea41, 0xa);                 /* jz 0x1012ea41 */
    II(0x1012ea37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ea3a, 0x7)   mov(memb_a32(ds, eax + 0x9d), 0x1);   /* mov byte [eax+0x9d], 0x1 */
l_0x1012ea41:
    II(0x1012ea41, 0x5)   jmpd(0x1012e7d4, -0x272);             /* jmp 0x1012e7d4 */
l_0x1012ea46:
    II(0x1012ea46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ea49, 0x4)   cmp(memb_a32(ds, eax + 0x17), 0x3);   /* cmp byte [eax+0x17], 0x3 */
    II(0x1012ea4d, 0x2)   jnzd(0x1012ea60, 0x11);               /* jnz 0x1012ea60 */
    II(0x1012ea4f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012ea51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ea54, 0x3)   add(eax, 0x36);                       /* add eax, 0x36 */
    II(0x1012ea57, 0x5)   calld(0x1013ad71, 0xc315);            /* call 0x1013ad71 */
    II(0x1012ea5c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012ea5e, 0x2)   jnzd(0x1012ea62, 0x2);                /* jnz 0x1012ea62 */
l_0x1012ea60:
    II(0x1012ea60, 0x2)   jmpd(0x1012ea72, 0x10);               /* jmp 0x1012ea72 */
l_0x1012ea62:
    II(0x1012ea62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ea65, 0x3)   add(eax, 0x36);                       /* add eax, 0x36 */
    II(0x1012ea68, 0x5)   calld(0x10131bb0, 0x3143);            /* call 0x10131bb0 */
    II(0x1012ea6d, 0x5)   calld(0x1011780b, -0x17267);          /* call 0x1011780b */
l_0x1012ea72:
    II(0x1012ea72, 0x3)   lea(edx, ebp - 0x8);                  /* lea edx, [ebp-0x8] */
    II(0x1012ea75, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x1012ea7a, 0x5)   calld(0x1009cbc4, -0x91ebb);          /* call 0x1009cbc4 */
    II(0x1012ea7f, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012ea81, 0x2)   jzd(0x1012ead5, 0x52);                /* jz 0x1012ead5 */
    II(0x1012ea83, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x1012ea88, 0x5)   calld(0x100765d0, -0xb84bd);          /* call 0x100765d0 */
    II(0x1012ea8d, 0x5)   calld(0x100ff637, -0x2f45b);          /* call 0x100ff637 */
    II(0x1012ea92, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012ea94, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x1012ea99, 0x5)   calld(0x1013ad71, 0xc2d3);            /* call 0x1013ad71 */
    II(0x1012ea9e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012eaa0, 0x2)   jzd(0x1012ead5, 0x33);                /* jz 0x1012ead5 */
    II(0x1012eaa2, 0x5)   calld(0x10102acc, -0x2bfdb);          /* call 0x10102acc */
    II(0x1012eaa7, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1012eaa9, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x1012eaab, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x1012eab0, 0x5)   calld(0x10076574, -0xb8541);          /* call 0x10076574 */
    II(0x1012eab5, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1012eab8, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012eabb, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x1012eac0, 0x5)   calld(0x10076574, -0xb8551);          /* call 0x10076574 */
    II(0x1012eac5, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1012eac8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012eacb, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012ead0, 0x5)   calld(0x10101620, -0x2d4b5);          /* call 0x10101620 */
l_0x1012ead5:
    II(0x1012ead5, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x1012eadc, 0x2)   jzd(0x1012eaf0, 0x12);                /* jz 0x1012eaf0 */
    II(0x1012eade, 0x5)   calld(0x100d5094, -0x59a4f);          /* call 0x100d5094 */
    II(0x1012eae3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012eae5, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1012eae7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012eae9, 0x5)   calld(0x10100e32, -0x2dcbc);          /* call 0x10100e32 */
    II(0x1012eaee, 0x2)   jmpd(0x1012eafa, 0xa);                /* jmp 0x1012eafa */
l_0x1012eaf0:
    II(0x1012eaf0, 0x5)   calld(0x101482f4, 0x197ff);           /* call 0x101482f4 */
    II(0x1012eaf5, 0x5)   mov(memd_a32(ds, 0x101c396c), eax);   /* mov [0x101c396c], eax */
l_0x1012eafa:
    II(0x1012eafa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012eafc, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1012eaff, 0x5)   calld(0x10075f2c, -0xb8bd8);          /* call 0x10075f2c */
    II(0x1012eb04, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012eb06, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012eb07, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012eb08, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012eb09, 0x1)   popd(edx);                            /* pop edx */
    II(0x1012eb0a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012eb0b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012eb0c, 0x1)   retd();                               /* ret */
FUNC_END

