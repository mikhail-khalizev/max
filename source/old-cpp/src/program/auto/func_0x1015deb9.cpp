FUNC_BEGIN(0x1015deb9, 0x7c85ce36c4685cc0, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x8f, 0x7e, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x5d, 0x84, 0xf1, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd1, 0x85, 0xf1, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0x7, 0x8d, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x76, 0xce, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x23, 0x8d, 0x45, 0xf8, 0xe8, 0x99, 0x84, 0xf1, 0xff, 0x80, 0x78, 0x3d, 0x3, 0x75, 0x13, 0xc6, 0x45, 0xfc, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x51, 0x80, 0xf1, 0xff, 0xe9, 0xbb, 0, 0, 0, 0xeb, 0xc7, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xc, 0x84, 0xf1, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x4, 0x85, 0xf1, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0xb6, 0x8c, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x25, 0xce, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x23, 0x8d, 0x45, 0xf8, 0xe8, 0x48, 0x84, 0xf1, 0xff, 0x80, 0x78, 0x3d, 0x3, 0x75, 0x13, 0xc6, 0x45, 0xfc, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0, 0x80, 0xf1, 0xff, 0xe9, 0x6a, 0, 0, 0, 0xeb, 0xc7, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xbb, 0x83, 0xf1, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb3, 0x84, 0xf1, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0x65, 0x8c, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xd4, 0xcd, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x20, 0x8d, 0x45, 0xf8, 0xe8, 0xf7, 0x83, 0xf1, 0xff, 0x80, 0x78, 0x3d, 0x3, 0x75, 0x10, 0xc6, 0x45, 0xfc, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xaf, 0x7f, 0xf1, 0xff, 0xeb, 0x1c, 0xeb, 0xca, 0xc6, 0x45, 0xfc, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x9d, 0x7f, 0xf1, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x91, 0x7f, 0xf1, 0xff, 0x8a, 0x45, 0xfc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015deb9, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x1015debe, 0x5)   calld(sys_check_available_stack_size, 0x7e8f); /* call 0x10165d52 */
    II(0x1015dec3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015dec4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015dec5, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015dec6, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015dec7, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015dec8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015dec9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015decb, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x1015ded1, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x1015ded6, 0x5)   calld(0x10076338, -0xe7ba3);          /* call 0x10076338 */
    II(0x1015dedb, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x1015dede, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015dee0, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015dee2, 0x5)   calld(0x100764b8, -0xe7a2f);          /* call 0x100764b8 */
    II(0x1015dee7, 0x2)   jmpd(0x1015def1, 0x8);                /* jmp 0x1015def1 */
l_0x1015dee9:
    II(0x1015dee9, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015deec, 0x5)   calld(0x10076bf8, -0xe72f9);          /* call 0x10076bf8 */
l_0x1015def1:
    II(0x1015def1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015def3, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015def6, 0x5)   calld(0x1013ad71, -0x2318a);          /* call 0x1013ad71 */
    II(0x1015defb, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015defd, 0x2)   jzd(0x1015df22, 0x23);                /* jz 0x1015df22 */
    II(0x1015deff, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015df02, 0x5)   calld(0x100763a0, -0xe7b67);          /* call 0x100763a0 */
    II(0x1015df07, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x3);   /* cmp byte [eax+0x3d], 0x3 */
    II(0x1015df0b, 0x2)   jnzd(0x1015df20, 0x13);               /* jnz 0x1015df20 */
    II(0x1015df0d, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x1015df11, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015df13, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015df16, 0x5)   calld(0x10075f6c, -0xe7faf);          /* call 0x10075f6c */
    II(0x1015df1b, 0x5)   jmpd(0x1015dfdb, 0xbb);               /* jmp 0x1015dfdb */
l_0x1015df20:
    II(0x1015df20, 0x2)   jmpd(0x1015dee9, -0x39);              /* jmp 0x1015dee9 */
l_0x1015df22:
    II(0x1015df22, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x1015df27, 0x5)   calld(0x10076338, -0xe7bf4);          /* call 0x10076338 */
    II(0x1015df2c, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x1015df2f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015df31, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015df33, 0x5)   calld(0x1007643c, -0xe7afc);          /* call 0x1007643c */
    II(0x1015df38, 0x2)   jmpd(0x1015df42, 0x8);                /* jmp 0x1015df42 */
l_0x1015df3a:
    II(0x1015df3a, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015df3d, 0x5)   calld(0x10076bf8, -0xe734a);          /* call 0x10076bf8 */
l_0x1015df42:
    II(0x1015df42, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015df44, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015df47, 0x5)   calld(0x1013ad71, -0x231db);          /* call 0x1013ad71 */
    II(0x1015df4c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015df4e, 0x2)   jzd(0x1015df73, 0x23);                /* jz 0x1015df73 */
    II(0x1015df50, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015df53, 0x5)   calld(0x100763a0, -0xe7bb8);          /* call 0x100763a0 */
    II(0x1015df58, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x3);   /* cmp byte [eax+0x3d], 0x3 */
    II(0x1015df5c, 0x2)   jnzd(0x1015df71, 0x13);               /* jnz 0x1015df71 */
    II(0x1015df5e, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x1015df62, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015df64, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015df67, 0x5)   calld(0x10075f6c, -0xe8000);          /* call 0x10075f6c */
    II(0x1015df6c, 0x5)   jmpd(0x1015dfdb, 0x6a);               /* jmp 0x1015dfdb */
l_0x1015df71:
    II(0x1015df71, 0x2)   jmpd(0x1015df3a, -0x39);              /* jmp 0x1015df3a */
l_0x1015df73:
    II(0x1015df73, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1015df78, 0x5)   calld(0x10076338, -0xe7c45);          /* call 0x10076338 */
    II(0x1015df7d, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x1015df80, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015df82, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015df84, 0x5)   calld(0x1007643c, -0xe7b4d);          /* call 0x1007643c */
    II(0x1015df89, 0x2)   jmpd(0x1015df93, 0x8);                /* jmp 0x1015df93 */
l_0x1015df8b:
    II(0x1015df8b, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015df8e, 0x5)   calld(0x10076bf8, -0xe739b);          /* call 0x10076bf8 */
l_0x1015df93:
    II(0x1015df93, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015df95, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015df98, 0x5)   calld(0x1013ad71, -0x2322c);          /* call 0x1013ad71 */
    II(0x1015df9d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015df9f, 0x2)   jzd(0x1015dfc1, 0x20);                /* jz 0x1015dfc1 */
    II(0x1015dfa1, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015dfa4, 0x5)   calld(0x100763a0, -0xe7c09);          /* call 0x100763a0 */
    II(0x1015dfa9, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x3);   /* cmp byte [eax+0x3d], 0x3 */
    II(0x1015dfad, 0x2)   jnzd(0x1015dfbf, 0x10);               /* jnz 0x1015dfbf */
    II(0x1015dfaf, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x1015dfb3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015dfb5, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015dfb8, 0x5)   calld(0x10075f6c, -0xe8051);          /* call 0x10075f6c */
    II(0x1015dfbd, 0x2)   jmpd(0x1015dfdb, 0x1c);               /* jmp 0x1015dfdb */
l_0x1015dfbf:
    II(0x1015dfbf, 0x2)   jmpd(0x1015df8b, -0x36);              /* jmp 0x1015df8b */
l_0x1015dfc1:
    II(0x1015dfc1, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
    II(0x1015dfc5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015dfc7, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015dfca, 0x5)   calld(0x10075f6c, -0xe8063);          /* call 0x10075f6c */
    II(0x1015dfcf, 0x2)   jmpd(0x1015dfdb, 0xa);                /* jmp 0x1015dfdb */
//  II(0x1015dfd1, 0xa)   /* Недостижимый код. */
l_0x1015dfdb:
    II(0x1015dfdb, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1015dfde, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015dfe0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015dfe1, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015dfe2, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015dfe3, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015dfe4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015dfe5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015dfe6, 0x1)   retd();                               /* ret */
FUNC_END

