FUNC_BEGIN(0x1010ef7f, 0xe78b43d74a4398d0, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0xc9, 0x6d, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0xe8, 0x9c, 0x98, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x89, 0x10, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x8, 0, 0, 0, 0, 0xc7, 0x5, 0xf0, 0x4d, 0x1c, 0x10, 0, 0, 0, 0, 0xe8, 0x69, 0xce, 0x5, 0, 0xe8, 0x6c, 0x63, 0xfc, 0xff, 0x98, 0x50, 0xe8, 0x89, 0x63, 0xfc, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x58, 0xe, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xb8, 0xc0, 0x6, 0, 0, 0xe8, 0x59, 0x9c, 0xfd, 0xff, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x14, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x9, 0xc7, 0x45, 0xf0, 0x1e, 0x46, 0x1a, 0x10, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0x32, 0x46, 0x1a, 0x10, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x3, 0xd6, 0xff, 0xff, 0xc7, 0x45, 0xf4, 0xd, 0, 0, 0, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x37, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0xc7, 0x40, 0x19, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x6, 0x7f, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x31, 0xdb, 0x8a, 0x5d, 0xec, 0xf, 0xbe, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0x5a, 0xfa, 0xff, 0xff, 0xeb, 0xbf, 0xc7, 0x45, 0xf8, 0x3, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x14, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0x7, 0xc7, 0x45, 0xf8, 0x7, 0, 0, 0, 0x66, 0xc7, 0x45, 0xf4, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xf4, 0x66, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xf8, 0x7d, 0x21, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x19, 0xe8, 0x4f, 0x60, 0xfc, 0xff, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x89, 0x54, 0x28, 0xd0, 0xeb, 0xcf, 0x8d, 0x55, 0xd0, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0xa8, 0xa9, 0x5, 0, 0x66, 0xc7, 0x45, 0xf4, 0xa, 0, 0x66, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x16, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0xc7, 0x80, 0xd9, 0x1, 0, 0, 0, 0, 0, 0, 0xeb, 0xdf, 0xbb, 0xa, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x81, 0xc2, 0x7, 0x1, 0, 0, 0xb8, 0x5b, 0, 0, 0, 0xe8, 0xcd, 0x6e, 0xf6, 0xff, 0xe8, 0xe4, 0xa2, 0x6, 0, 0xbb, 0xa, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x81, 0xc2, 0x43, 0x1, 0, 0, 0xb8, 0x5c, 0, 0, 0, 0xe8, 0xb0, 0x6e, 0xf6, 0xff, 0xe8, 0xc7, 0xa2, 0x6, 0, 0xb9, 0x1e, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x81, 0xc3, 0x25, 0x1, 0, 0, 0xba, 0x5a, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x33, 0x71, 0xff, 0xff, 0xb9, 0x1e, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x81, 0xc3, 0x61, 0x1, 0, 0, 0xba, 0x5d, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x16, 0x71, 0xff, 0xff, 0xb9, 0x1e, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x81, 0xc3, 0x7f, 0x1, 0, 0, 0xba, 0x5e, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0xf9, 0x70, 0xff, 0xff, 0xb9, 0x1e, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x81, 0xc3, 0x9d, 0x1, 0, 0, 0xba, 0x5f, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0xdc, 0x70, 0xff, 0xff, 0xb9, 0x1e, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x81, 0xc3, 0xbb, 0x1, 0, 0, 0xba, 0x61, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0xbf, 0x70, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x5, 0x7, 0x1, 0, 0, 0xa3, 0x5c, 0xab, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x5, 0x25, 0x1, 0, 0, 0xa3, 0x48, 0xab, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x5, 0x43, 0x1, 0, 0, 0xa3, 0x70, 0xab, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x5, 0x61, 0x1, 0, 0, 0xa3, 0x84, 0xab, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x5, 0x7f, 0x1, 0, 0, 0xa3, 0x98, 0xab, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x5, 0x9d, 0x1, 0, 0, 0xa3, 0xac, 0xab, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x5, 0xbb, 0x1, 0, 0, 0xa3, 0xc0, 0xab, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x15, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xd, 0xfc, 0xff, 0xff, 0xe8, 0x90, 0xca, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010ef7f, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x1010ef84, 0x5)   calld(sys_check_available_stack_size, 0x56dc9); /* call 0x10165d52 */
    II(0x1010ef89, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010ef8a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010ef8b, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010ef8c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010ef8d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010ef8e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010ef8f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010ef91, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x1010ef97, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010ef9a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010ef9c, 0x5)   calld(0x100e883d, -0x26764);          /* call 0x100e883d */
    II(0x1010efa1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010efa3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010efa6, 0x2)   mov(memd_a32(ds, eax), edx);          /* mov [eax], edx */
    II(0x1010efa8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010efab, 0x7)   mov(memd_a32(ds, eax + 0x4), 0);      /* mov dword [eax+0x4], 0x0 */
    II(0x1010efb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010efb5, 0x7)   mov(memd_a32(ds, eax + 0x8), 0);      /* mov dword [eax+0x8], 0x0 */
    II(0x1010efbc, 0xa)   mov(memd_a32(ds, 0x101c4df0), 0);     /* mov dword [0x101c4df0], 0x0 */
    II(0x1010efc6, 0x5)   calld(/* sys */ 0x1016be34, 0x5ce69); /* call 0x1016be34 */
    II(0x1010efcb, 0x5)   calld(0x100d533c, -0x39c94);          /* call 0x100d533c */
    II(0x1010efd0, 0x1)   cwde();                               /* cwde */
    II(0x1010efd1, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010efd2, 0x5)   calld(0x100d5360, -0x39c77);          /* call 0x100d5360 */
    II(0x1010efd7, 0x1)   cwde();                               /* cwde */
    II(0x1010efd8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010efd9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010efdb, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010efdc, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010efde, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010efe1, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010efe3, 0x3)   mov(ebx, memd_a32(ds, eax + 0xe));    /* mov ebx, [eax+0xe] */
    II(0x1010efe6, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1010efe9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010efec, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x1010efee, 0x5)   mov(eax, 0x6c0);                      /* mov eax, 0x6c0 */
    II(0x1010eff3, 0x5)   calld(0x100e8c51, -0x263a7);          /* call 0x100e8c51 */
    II(0x1010eff8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010effb, 0x3)   mov(al, memb_a32(ds, eax + 0x14));    /* mov al, [eax+0x14] */
    II(0x1010effe, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010f003, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1010f006, 0x2)   jnzd(0x1010f011, 0x9);                /* jnz 0x1010f011 */
    II(0x1010f008, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x101a461e); /* mov dword [ebp-0x10], 0x101a461e */ /* "Serial Connect Menu" */
    II(0x1010f00f, 0x2)   jmpd(0x1010f018, 0x7);                /* jmp 0x1010f018 */
l_0x1010f011:
    II(0x1010f011, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x101a4632); /* mov dword [ebp-0x10], 0x101a4632 */ /* "Modem Play Menu" */
l_0x1010f018:
    II(0x1010f018, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1010f01b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f01e, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010f020, 0x5)   calld(0x1010c628, -0x29fd);           /* call 0x1010c628 */
    II(0x1010f025, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xd);    /* mov dword [ebp-0xc], 0xd */
l_0x1010f02c:
    II(0x1010f02c, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
    II(0x1010f02f, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x1010f034, 0x2)   jzd(0x1010f06d, 0x37);                /* jz 0x1010f06d */
    II(0x1010f036, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010f03a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010f03d, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010f040, 0x7)   mov(memd_a32(ds, eax + 0x19), 0);     /* mov dword [eax+0x19], 0x0 */
    II(0x1010f047, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010f04b, 0x3)   cmp(eax, 0x6);                        /* cmp eax, 0x6 */
    II(0x1010f04e, 0x2)   jgd(0x1010f056, 0x6);                 /* jg 0x1010f056 */
    II(0x1010f050, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1010f054, 0x2)   jmpd(0x1010f05a, 0x4);                /* jmp 0x1010f05a */
l_0x1010f056:
    II(0x1010f056, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x1010f05a:
    II(0x1010f05a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010f05c, 0x3)   mov(bl, memb_a32(ss, ebp - 0x14));    /* mov bl, [ebp-0x14] */
    II(0x1010f05f, 0x4)   movsx(edx, memb_a32(ss, ebp - 0xc));  /* movsx edx, byte [ebp-0xc] */
    II(0x1010f063, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f066, 0x5)   calld(0x1010eac5, -0x5a6);            /* call 0x1010eac5 */
    II(0x1010f06b, 0x2)   jmpd(0x1010f02c, -0x41);              /* jmp 0x1010f02c */
l_0x1010f06d:
    II(0x1010f06d, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x3);    /* mov dword [ebp-0x8], 0x3 */
    II(0x1010f074, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f077, 0x3)   mov(al, memb_a32(ds, eax + 0x14));    /* mov al, [eax+0x14] */
    II(0x1010f07a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010f07f, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1010f082, 0x2)   jnzd(0x1010f08b, 0x7);                /* jnz 0x1010f08b */
    II(0x1010f084, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x7);    /* mov dword [ebp-0x8], 0x7 */
l_0x1010f08b:
    II(0x1010f08b, 0x6)   mov(memw_a32(ss, ebp - 0xc), 0);      /* mov word [ebp-0xc], 0x0 */
    II(0x1010f091, 0x2)   jmpd(0x1010f09a, 0x7);                /* jmp 0x1010f09a */
l_0x1010f093:
    II(0x1010f093, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010f096, 0x4)   inc(memw_a32(ss, ebp - 0xc));         /* inc word [ebp-0xc] */
l_0x1010f09a:
    II(0x1010f09a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010f09d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x1010f0a1, 0x2)   jged(0x1010f0c4, 0x21);               /* jge 0x1010f0c4 */
    II(0x1010f0a3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010f0a7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010f0aa, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010f0ad, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x1010f0b0, 0x5)   calld(0x100d5104, -0x39fb1);          /* call 0x100d5104 */
    II(0x1010f0b5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010f0b7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010f0bb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010f0be, 0x4)   mov(memd_a32(ds, eax + ebp - 0x30), edx); /* mov [eax+ebp-0x30], edx */
    II(0x1010f0c2, 0x2)   jmpd(0x1010f093, -0x31);              /* jmp 0x1010f093 */
l_0x1010f0c4:
    II(0x1010f0c4, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x1010f0c7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010f0cb, 0x5)   calld(/* sys */ 0x10169a78, 0x5a9a8); /* call 0x10169a78 */
    II(0x1010f0d0, 0x6)   mov(memw_a32(ss, ebp - 0xc), 0xa);    /* mov word [ebp-0xc], 0xa */
l_0x1010f0d6:
    II(0x1010f0d6, 0x4)   dec(memw_a32(ss, ebp - 0xc));         /* dec word [ebp-0xc] */
    II(0x1010f0da, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x1010f0df, 0x2)   jzd(0x1010f0f7, 0x16);                /* jz 0x1010f0f7 */
    II(0x1010f0e1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010f0e5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010f0e8, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010f0eb, 0xa)   mov(memd_a32(ds, eax + 0x1d9), 0);    /* mov dword [eax+0x1d9], 0x0 */
    II(0x1010f0f5, 0x2)   jmpd(0x1010f0d6, -0x21);              /* jmp 0x1010f0d6 */
l_0x1010f0f7:
    II(0x1010f0f7, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x1010f0fc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1010f0ff, 0x6)   add(edx, 0x107);                      /* add edx, 0x107 */
    II(0x1010f105, 0x5)   mov(eax, 0x5b);                       /* mov eax, 0x5b */
    II(0x1010f10a, 0x5)   calld(0x10075fdc, -0x99133);          /* call 0x10075fdc */
    II(0x1010f10f, 0x5)   calld(/* sys */ 0x101793f8, 0x6a2e4); /* call 0x101793f8 */
    II(0x1010f114, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x1010f119, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1010f11c, 0x6)   add(edx, 0x143);                      /* add edx, 0x143 */
    II(0x1010f122, 0x5)   mov(eax, 0x5c);                       /* mov eax, 0x5c */
    II(0x1010f127, 0x5)   calld(0x10075fdc, -0x99150);          /* call 0x10075fdc */
    II(0x1010f12c, 0x5)   calld(/* sys */ 0x101793f8, 0x6a2c7); /* call 0x101793f8 */
    II(0x1010f131, 0x5)   mov(ecx, 0x1e);                       /* mov ecx, 0x1e */
    II(0x1010f136, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1010f139, 0x6)   add(ebx, 0x125);                      /* add ebx, 0x125 */
    II(0x1010f13f, 0x5)   mov(edx, 0x5a);                       /* mov edx, 0x5a */
    II(0x1010f144, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x1010f149, 0x5)   calld(0x10106281, -0x8ecd);           /* call 0x10106281 */
    II(0x1010f14e, 0x5)   mov(ecx, 0x1e);                       /* mov ecx, 0x1e */
    II(0x1010f153, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1010f156, 0x6)   add(ebx, 0x161);                      /* add ebx, 0x161 */
    II(0x1010f15c, 0x5)   mov(edx, 0x5d);                       /* mov edx, 0x5d */
    II(0x1010f161, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x1010f166, 0x5)   calld(0x10106281, -0x8eea);           /* call 0x10106281 */
    II(0x1010f16b, 0x5)   mov(ecx, 0x1e);                       /* mov ecx, 0x1e */
    II(0x1010f170, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1010f173, 0x6)   add(ebx, 0x17f);                      /* add ebx, 0x17f */
    II(0x1010f179, 0x5)   mov(edx, 0x5e);                       /* mov edx, 0x5e */
    II(0x1010f17e, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x1010f183, 0x5)   calld(0x10106281, -0x8f07);           /* call 0x10106281 */
    II(0x1010f188, 0x5)   mov(ecx, 0x1e);                       /* mov ecx, 0x1e */
    II(0x1010f18d, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1010f190, 0x6)   add(ebx, 0x19d);                      /* add ebx, 0x19d */
    II(0x1010f196, 0x5)   mov(edx, 0x5f);                       /* mov edx, 0x5f */
    II(0x1010f19b, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x1010f1a0, 0x5)   calld(0x10106281, -0x8f24);           /* call 0x10106281 */
    II(0x1010f1a5, 0x5)   mov(ecx, 0x1e);                       /* mov ecx, 0x1e */
    II(0x1010f1aa, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1010f1ad, 0x6)   add(ebx, 0x1bb);                      /* add ebx, 0x1bb */
    II(0x1010f1b3, 0x5)   mov(edx, 0x61);                       /* mov edx, 0x61 */
    II(0x1010f1b8, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x1010f1bd, 0x5)   calld(0x10106281, -0x8f41);           /* call 0x10106281 */
    II(0x1010f1c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f1c5, 0x5)   add(eax, 0x107);                      /* add eax, 0x107 */
    II(0x1010f1ca, 0x5)   mov(memd_a32(ds, 0x101bab5c), eax);   /* mov [0x101bab5c], eax */
    II(0x1010f1cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f1d2, 0x5)   add(eax, 0x125);                      /* add eax, 0x125 */
    II(0x1010f1d7, 0x5)   mov(memd_a32(ds, 0x101bab48), eax);   /* mov [0x101bab48], eax */
    II(0x1010f1dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f1df, 0x5)   add(eax, 0x143);                      /* add eax, 0x143 */
    II(0x1010f1e4, 0x5)   mov(memd_a32(ds, 0x101bab70), eax);   /* mov [0x101bab70], eax */
    II(0x1010f1e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f1ec, 0x5)   add(eax, 0x161);                      /* add eax, 0x161 */
    II(0x1010f1f1, 0x5)   mov(memd_a32(ds, 0x101bab84), eax);   /* mov [0x101bab84], eax */
    II(0x1010f1f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f1f9, 0x5)   add(eax, 0x17f);                      /* add eax, 0x17f */
    II(0x1010f1fe, 0x5)   mov(memd_a32(ds, 0x101bab98), eax);   /* mov [0x101bab98], eax */
    II(0x1010f203, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f206, 0x5)   add(eax, 0x19d);                      /* add eax, 0x19d */
    II(0x1010f20b, 0x5)   mov(memd_a32(ds, 0x101babac), eax);   /* mov [0x101babac], eax */
    II(0x1010f210, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f213, 0x5)   add(eax, 0x1bb);                      /* add eax, 0x1bb */
    II(0x1010f218, 0x5)   mov(memd_a32(ds, 0x101babc0), eax);   /* mov [0x101babc0], eax */
    II(0x1010f21d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f220, 0x7)   mov(memd_a32(ds, eax + 0x15), 0);     /* mov dword [eax+0x15], 0x0 */
    II(0x1010f227, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010f22a, 0x5)   calld(0x1010ee3c, -0x3f3);            /* call 0x1010ee3c */
    II(0x1010f22f, 0x5)   calld(/* sys */ 0x1016bcc4, 0x5ca90); /* call 0x1016bcc4 */
    II(0x1010f234, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010f236, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010f237, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010f238, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010f239, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010f23a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010f23b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010f23c, 0x1)   retd();                               /* ret */
FUNC_END

