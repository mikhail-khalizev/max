FUNC_BEGIN(0x100b2444, 0x8abc8635c5c9277b, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x4, 0x39, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xa3, 0x88, 0x8, 0, 0x84, 0xc0, 0x75, 0x17, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xf4, 0x40, 0xfc, 0xff, 0xe8, 0xcd, 0x5, 0xa, 0, 0x84, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xe2, 0x2, 0, 0, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xb7, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x16, 0xa, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x22, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xbd, 0x86, 0xfd, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf, 0x3b, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x5b, 0x40, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x75, 0x8, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x41, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x36, 0x40, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x48, 0x74, 0x12, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x24, 0x40, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x9, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x3, 0x7f, 0x2, 0xeb, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x9, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xfe, 0x3f, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x4e, 0xf, 0x85, 0x75, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xe5, 0x3f, 0xfc, 0xff, 0xe8, 0x4, 0x84, 0xfd, 0xff, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x9, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xc5, 0xa, 0, 0, 0xbb, 0x22, 0x10, 0x1a, 0x10, 0xba, 0x2e, 0x10, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xbf, 0x37, 0xb, 0, 0x89, 0x45, 0xdc, 0x31, 0xdb, 0xba, 0xf, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xe8, 0x3f, 0xfc, 0xff, 0xe8, 0x66, 0xa, 0xb, 0, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x7e, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x66, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x5b, 0x3f, 0xfc, 0xff, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x45, 0x3f, 0xfc, 0xff, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x43, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x9, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xd9, 0xa, 0, 0, 0xbb, 0x5b, 0x10, 0x1a, 0x10, 0xba, 0x67, 0x10, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x19, 0x37, 0xb, 0, 0x89, 0x45, 0xd8, 0xb8, 0x1c, 0, 0, 0, 0xe8, 0x7a, 0x37, 0xb, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x35, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xd4, 0x3e, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xc3, 0x3e, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xec, 0xe8, 0x97, 0x78, 0x6, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xd4, 0x8b, 0x55, 0xd4, 0x8d, 0x45, 0xe0, 0xe8, 0xd5, 0x8c, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x8e, 0x3e, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1c, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x75, 0x3e, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1a, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe0, 0xe8, 0xcb, 0x8b, 0xff, 0xff, 0xe8, 0x89, 0x85, 0x6, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x1a, 0x8c, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0x5, 0x43, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x83, 0x21, 0xa, 0, 0xbb, 0x5, 0, 0, 0, 0xba, 0x1b, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa, 0x9, 0xb, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x33, 0x87, 0x7, 0, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xd0, 0x77, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xc4, 0x77, 0xff, 0xff, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b2444, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x100b2449, 0x5)   calld(sys_check_available_stack_size, 0xb3904); /* call 0x10165d52 */
    II(0x100b244e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b244f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b2450, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b2451, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b2452, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b2453, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b2455, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x100b245b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b245e, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b2461, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2463, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2466, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2469, 0x5)   calld(0x1013ad11, 0x888a3);           /* call 0x1013ad11 */
    II(0x100b246e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2470, 0x2)   jnzd(0x100b2489, 0x17);               /* jnz 0x100b2489 */
    II(0x100b2472, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b2475, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2478, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b247b, 0x5)   calld(0x10076574, -0x3bf0c);          /* call 0x10076574 */
    II(0x100b2480, 0x5)   calld(0x10152a52, 0xa05cd);           /* call 0x10152a52 */
    II(0x100b2485, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2487, 0x2)   jnzd(0x100b2492, 0x9);                /* jnz 0x100b2492 */
l_0x100b2489:
    II(0x100b2489, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b248d, 0x5)   jmpd(0x100b2774, 0x2e2);              /* jmp 0x100b2774 */
l_0x100b2492:
    II(0x100b2492, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b2494, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100b2499, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b249b, 0x2)   jnzd(0x100b24b2, 0x15);               /* jnz 0x100b24b2 */
    II(0x100b249d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b24a0, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b24a3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b24a6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b24a8, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100b24ae, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b24b0, 0x2)   jnzd(0x100b24b4, 0x2);                /* jnz 0x100b24b4 */
l_0x100b24b2:
    II(0x100b24b2, 0x2)   jmpd(0x100b24bd, 0x9);                /* jmp 0x100b24bd */
l_0x100b24b4:
    II(0x100b24b4, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b24b8, 0x5)   jmpd(0x100b2774, 0x2b7);              /* jmp 0x100b2774 */
l_0x100b24bd:
    II(0x100b24bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b24c0, 0x5)   calld(0x100a2edb, -0xf5ea);           /* call 0x100a2edb */
    II(0x100b24c5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b24c7, 0x2)   jzd(0x100b24eb, 0x22);                /* jz 0x100b24eb */
    II(0x100b24c9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b24cb, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100b24d0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b24d2, 0x2)   jnzd(0x100b24e9, 0x15);               /* jnz 0x100b24e9 */
    II(0x100b24d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b24d7, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b24da, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b24dd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b24df, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100b24e5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b24e7, 0x2)   jnzd(0x100b24eb, 0x2);                /* jnz 0x100b24eb */
l_0x100b24e9:
    II(0x100b24e9, 0x2)   jmpd(0x100b24f4, 0x9);                /* jmp 0x100b24f4 */
l_0x100b24eb:
    II(0x100b24eb, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b24ef, 0x5)   jmpd(0x100b2774, 0x280);              /* jmp 0x100b2774 */
l_0x100b24f4:
    II(0x100b24f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b24f7, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b24fa, 0x5)   calld(0x1008abbc, -0x27943);          /* call 0x1008abbc */
    II(0x100b24ff, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100b2502, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2504, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b2506, 0x5)   calld(0x100a601a, -0xc4f1);           /* call 0x100a601a */
    II(0x100b250b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b250e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2511, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2514, 0x5)   calld(0x10076574, -0x3bfa5);          /* call 0x10076574 */
    II(0x100b2519, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100b251e, 0x2)   jnzd(0x100b2528, 0x8);                /* jnz 0x100b2528 */
    II(0x100b2520, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100b2524, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b2526, 0x2)   jgd(0x100b252a, 0x2);                 /* jg 0x100b252a */
l_0x100b2528:
    II(0x100b2528, 0x2)   jmpd(0x100b2533, 0x9);                /* jmp 0x100b2533 */
l_0x100b252a:
    II(0x100b252a, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b252e, 0x5)   jmpd(0x100b2774, 0x241);              /* jmp 0x100b2774 */
l_0x100b2533:
    II(0x100b2533, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2536, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2539, 0x5)   calld(0x10076574, -0x3bfca);          /* call 0x10076574 */
    II(0x100b253e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x48);   /* cmp word [eax+0x8], 0x48 */
    II(0x100b2543, 0x2)   jzd(0x100b2557, 0x12);                /* jz 0x100b2557 */
    II(0x100b2545, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2548, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b254b, 0x5)   calld(0x10076574, -0x3bfdc);          /* call 0x10076574 */
    II(0x100b2550, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x100b2555, 0x2)   jnzd(0x100b2560, 0x9);                /* jnz 0x100b2560 */
l_0x100b2557:
    II(0x100b2557, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100b255b, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100b255e, 0x2)   jgd(0x100b2562, 0x2);                 /* jg 0x100b2562 */
l_0x100b2560:
    II(0x100b2560, 0x2)   jmpd(0x100b256b, 0x9);                /* jmp 0x100b256b */
l_0x100b2562:
    II(0x100b2562, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b2566, 0x5)   jmpd(0x100b2774, 0x209);              /* jmp 0x100b2774 */
l_0x100b256b:
    II(0x100b256b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b256e, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2571, 0x5)   calld(0x10076574, -0x3c002);          /* call 0x10076574 */
    II(0x100b2576, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100b257b, 0x6)   jnzd(0x100b25f6, 0x75);               /* jnz dword 0x100b25f6 */
    II(0x100b2581, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b2584, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2587, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b258a, 0x5)   calld(0x10076574, -0x3c01b);          /* call 0x10076574 */
    II(0x100b258f, 0x5)   calld(0x1008a998, -0x27bfc);          /* call 0x1008a998 */
    II(0x100b2594, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b2596, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100b259b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b259d, 0x2)   jnzd(0x100b25b4, 0x15);               /* jnz 0x100b25b4 */
    II(0x100b259f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b25a2, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b25a5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b25a8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b25aa, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100b25b0, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b25b2, 0x2)   jnzd(0x100b25bd, 0x9);                /* jnz 0x100b25bd */
l_0x100b25b4:
    II(0x100b25b4, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100b25bb, 0x2)   jmpd(0x100b25d6, 0x19);               /* jmp 0x100b25d6 */
l_0x100b25bd:
    II(0x100b25bd, 0x5)   mov(ecx, 0xac5);                      /* mov ecx, 0xac5 */
    II(0x100b25c2, 0x5)   mov(ebx, 0x101a1022);                 /* mov ebx, 0x101a1022 */ /* "ai_move.cpp" */
    II(0x100b25c7, 0x5)   mov(edx, 0x101a102e);                 /* mov edx, 0x101a102e */ /* "PlayMode != TURN_BASED || TeamTurnID == team" */
    II(0x100b25cc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b25ce, 0x5)   calld(sys_assert, 0xb37bf);           /* call 0x10165d92 */
    II(0x100b25d3, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100b25d6:
    II(0x100b25d6, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b25d8, 0x5)   mov(edx, 0xf);                        /* mov edx, 0xf */
    II(0x100b25dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b25e0, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b25e3, 0x5)   calld(0x100765d0, -0x3c018);          /* call 0x100765d0 */
    II(0x100b25e8, 0x5)   calld(0x10163053, 0xb0a66);           /* call 0x10163053 */
    II(0x100b25ed, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100b25f1, 0x5)   jmpd(0x100b2774, 0x17e);              /* jmp 0x100b2774 */
l_0x100b25f6:
    II(0x100b25f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b25f9, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100b25fc, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b2601, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b2603, 0x2)   jnzd(0x100b260e, 0x9);                /* jnz 0x100b260e */
    II(0x100b2605, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b2609, 0x5)   jmpd(0x100b2774, 0x166);              /* jmp 0x100b2774 */
l_0x100b260e:
    II(0x100b260e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2611, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2614, 0x5)   calld(0x10076574, -0x3c0a5);          /* call 0x10076574 */
    II(0x100b2619, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
    II(0x100b261d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2620, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x100b2624, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2627, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b262a, 0x5)   calld(0x10076574, -0x3c0bb);          /* call 0x10076574 */
    II(0x100b262f, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x100b2633, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2636, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x100b263a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b263c, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100b2641, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b2643, 0x2)   jnzd(0x100b265a, 0x15);               /* jnz 0x100b265a */
    II(0x100b2645, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2648, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b264b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b264e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2650, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100b2656, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b2658, 0x2)   jnzd(0x100b2663, 0x9);                /* jnz 0x100b2663 */
l_0x100b265a:
    II(0x100b265a, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100b2661, 0x2)   jmpd(0x100b267c, 0x19);               /* jmp 0x100b267c */
l_0x100b2663:
    II(0x100b2663, 0x5)   mov(ecx, 0xad9);                      /* mov ecx, 0xad9 */
    II(0x100b2668, 0x5)   mov(ebx, 0x101a105b);                 /* mov ebx, 0x101a105b */ /* "ai_move.cpp" */
    II(0x100b266d, 0x5)   mov(edx, 0x101a1067);                 /* mov edx, 0x101a1067 */ /* "PlayMode != TURN_BASED || TeamTurnID == team" */
    II(0x100b2672, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b2674, 0x5)   calld(sys_assert, 0xb3719);           /* call 0x10165d92 */
    II(0x100b2679, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100b267c:
    II(0x100b267c, 0x5)   mov(eax, 0x1c);                       /* mov eax, 0x1c */
    II(0x100b2681, 0x5)   calld(sys_new, 0xb377a);              /* call 0x10165e00 */
    II(0x100b2686, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100b2689, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100b268c, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b268f, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100b2693, 0x2)   jzd(0x100b26ca, 0x35);                /* jz 0x100b26ca */
    II(0x100b2695, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2698, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b269b, 0x5)   calld(0x10076574, -0x3c12c);          /* call 0x10076574 */
    II(0x100b26a0, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100b26a3, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b26a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b26a9, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b26ac, 0x5)   calld(0x10076574, -0x3c13d);          /* call 0x10076574 */
    II(0x100b26b1, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100b26b4, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b26b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100b26ba, 0x5)   calld(my_ctor_c20, 0x67897);          /* call 0x10119f56 */
    II(0x100b26bf, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100b26c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b26c5, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100b26c8, 0x2)   jmpd(0x100b26d0, 0x6);                /* jmp 0x100b26d0 */
l_0x100b26ca:
    II(0x100b26ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b26cd, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100b26d0:
    II(0x100b26d0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2c));   /* mov edx, [ebp-0x2c] */
    II(0x100b26d3, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b26d6, 0x5)   calld(0x100ab3b0, -0x732b);           /* call 0x100ab3b0 */
    II(0x100b26db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b26de, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b26e1, 0x5)   calld(0x10076574, -0x3c172);          /* call 0x10076574 */
    II(0x100b26e6, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100b26ea, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b26ed, 0x4)   sub(ax, memw_a32(ds, edx + 0x1c));    /* sub ax, [edx+0x1c] */
    II(0x100b26f1, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100b26f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b26f7, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b26fa, 0x5)   calld(0x10076574, -0x3c18b);          /* call 0x10076574 */
    II(0x100b26ff, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100b2703, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b2706, 0x4)   sub(ax, memw_a32(ds, edx + 0x1a));    /* sub ax, [edx+0x1a] */
    II(0x100b270a, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100b270d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b2710, 0x5)   calld(0x100ab2e0, -0x7435);           /* call 0x100ab2e0 */
    II(0x100b2715, 0x5)   calld(0x1011aca3, 0x68589);           /* call 0x1011aca3 */
    II(0x100b271a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b271d, 0x5)   calld(0x100ab33c, -0x73e6);           /* call 0x100ab33c */
    II(0x100b2722, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2724, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2727, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100b272a, 0x5)   calld(0x10076a34, -0x3bcfb);          /* call 0x10076a34 */
    II(0x100b272f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2732, 0x5)   calld(0x101548ba, 0xa2183);           /* call 0x101548ba */
    II(0x100b2737, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x100b273c, 0x5)   mov(edx, 0x1b);                       /* mov edx, 0x1b */
    II(0x100b2741, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2744, 0x5)   calld(0x10163053, 0xb090a);           /* call 0x10163053 */
    II(0x100b2749, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100b2750, 0x2)   jzd(0x100b275a, 0x8);                 /* jz 0x100b275a */
    II(0x100b2752, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2755, 0x5)   calld(0x1012ae8d, 0x78733);           /* call 0x1012ae8d */
l_0x100b275a:
    II(0x100b275a, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100b275e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2760, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b2763, 0x5)   calld(0x100a9f38, -0x8830);           /* call 0x100a9f38 */
    II(0x100b2768, 0x2)   jmpd(0x100b2774, 0xa);                /* jmp 0x100b2774 */
//  II(0x100b276a, 0xa)   /* Недостижимый код. */
l_0x100b2774:
    II(0x100b2774, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100b2777, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b2779, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b277a, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b277b, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b277c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b277d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b277e, 0x1)   retd();                               /* ret */
FUNC_END

