FUNC_BEGIN(0x10152125, 0x5c66432d45f06ce, 0x20, ({0x68, 0x6c, 0, 0, 0, 0xe8, 0x23, 0x3c, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xf2, 0x40, 0xf2, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc8, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc8, 0xe8, 0xba, 0xdb, 0xf8, 0xff, 0x39, 0xc3, 0x74, 0x11, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x70, 0xe8, 0xee, 0x8b, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0x86, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x1d, 0xff, 0xf1, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x15, 0xff, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x70, 0xe8, 0x67, 0x31, 0, 0, 0xe8, 0x64, 0x14, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xec, 0xe7, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xee, 0x66, 0x3b, 0x45, 0xdc, 0x7d, 0x72, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x2, 0xeb, 0x4f, 0xe8, 0x7, 0x88, 0xf7, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x1c, 0x88, 0xf7, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x2, 0, 0, 0, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0xb8, 0xe4, 0xde, 0x1a, 0x10, 0x50, 0xb8, 0x50, 0, 0, 0, 0x50, 0x8d, 0x45, 0xd8, 0xe8, 0xc2, 0xf8, 0xfe, 0xff, 0x50, 0xe8, 0xb, 0xfe, 0xfe, 0xff, 0x83, 0xc4, 0x10, 0xe8, 0x94, 0x75, 0xf3, 0xff, 0xe8, 0xea, 0x3a, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xe7, 0xf8, 0xfe, 0xff, 0xe9, 0xca, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x3c, 0xd5, 0xff, 0xff, 0x31, 0xc9, 0x31, 0xdb, 0x8b, 0x45, 0xdc, 0xf7, 0xd8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x70, 0xe8, 0xad, 0x30, 0, 0, 0xe8, 0x30, 0x58, 0xf8, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x5, 0xe9, 0x85, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa7, 0x3f, 0xf2, 0xff, 0xe8, 0xd2, 0xd0, 0xf9, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xcc, 0xe8, 0x60, 0xd6, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc8, 0xe8, 0xed, 0x47, 0xf2, 0xff, 0x8b, 0x8, 0x8b, 0x5d, 0xfc, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0x8d, 0x45, 0xcc, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0xb8, 0x7, 0xdf, 0x1a, 0x10, 0x50, 0xb8, 0x50, 0, 0, 0, 0x50, 0x8d, 0x45, 0xc4, 0xe8, 0xf3, 0xf7, 0xfe, 0xff, 0x50, 0xe8, 0x3c, 0xfd, 0xfe, 0xff, 0x83, 0xc4, 0x18, 0xe8, 0xc5, 0x74, 0xf3, 0xff, 0xe8, 0x58, 0x38, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x18, 0xf8, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x71, 0xcd, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x5, 0x82, 0, 0, 0, 0xe8, 0x7, 0x43, 0xf2, 0xff, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x62, 0x4a, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xb, 0xe6, 0xfa, 0xff, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x49, 0x4a, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x1f, 0x80, 0x3d, 0x89, 0x38, 0x1c, 0x10, 0, 0x75, 0x9, 0x80, 0x3d, 0x8a, 0x38, 0x1c, 0x10, 0, 0x74, 0x5, 0xe8, 0x57, 0xd2, 0xfa, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xc5, 0xd2, 0xfa, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x86, 0x2, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10152125, 0x5)   pushd(0x6c);                          /* push dword 0x6c */
    II(0x1015212a, 0x5)   calld(sys_check_available_stack_size, 0x13c23); /* call 0x10165d52 */
    II(0x1015212f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10152130, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10152131, 0x1)   pushd(esi);                           /* push esi */
    II(0x10152132, 0x1)   pushd(edi);                           /* push edi */
    II(0x10152133, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10152134, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10152136, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x1015213c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1015213f, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10152142, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10152145, 0x5)   calld(0x1007623c, -0xdbf0e);          /* call 0x1007623c */
    II(0x1015214a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1015214c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015214f, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x10152152, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10152155, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10152158, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015215b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10152160, 0x6)   imul(ecx, eax, 0x247);                /* imul ecx, eax, 0x247 */
    II(0x10152166, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x1015216b, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x1015216d, 0x5)   calld(0x100dfd2c, -0x72446);          /* call 0x100dfd2c */
    II(0x10152172, 0x2)   cmp(ebx, eax);                        /* cmp ebx, eax */
    II(0x10152174, 0x2)   jzd(0x10152187, 0x11);                /* jz 0x10152187 */
    II(0x10152176, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10152178, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015217b, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1015217e, 0x5)   calld(0x1013ad71, -0x17412);          /* call 0x1013ad71 */
    II(0x10152183, 0x2)   test(al, al);                         /* test al, al */
    II(0x10152185, 0x2)   jnzd(0x1015218c, 0x5);                /* jnz 0x1015218c */
l_0x10152187:
    II(0x10152187, 0x5)   jmpd(0x10152312, 0x186);              /* jmp 0x10152312 */
l_0x1015218c:
    II(0x1015218c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1015218f, 0x5)   calld(0x100720b1, -0xe00e3);          /* call 0x100720b1 */
    II(0x10152194, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10152197, 0x5)   calld(0x100720b1, -0xe00eb);          /* call 0x100720b1 */
    II(0x1015219c, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015219f, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x101521a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101521a5, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x101521a8, 0x5)   calld(0x10155314, 0x3167);            /* call 0x10155314 */
    II(0x101521ad, 0x5)   calld(0x10143616, -0xeb9c);           /* call 0x10143616 */
    II(0x101521b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101521b5, 0x5)   calld(0x101509a6, -0x1814);           /* call 0x101509a6 */
    II(0x101521ba, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101521bd, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101521bf, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101521c2, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x101521c5, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x101521c7, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x101521ca, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101521cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x101521d0, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x101521d4, 0x2)   jged(0x10152248, 0x72);               /* jge 0x10152248 */
    II(0x101521d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101521d9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101521db, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x101521de, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101521e0, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x101521e5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x101521e7, 0x2)   jnzd(0x101521f2, 0x9);                /* jnz 0x101521f2 */
    II(0x101521e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101521ec, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x101521f0, 0x2)   jnzd(0x101521f4, 0x2);                /* jnz 0x101521f4 */
l_0x101521f2:
    II(0x101521f2, 0x2)   jmpd(0x10152243, 0x4f);               /* jmp 0x10152243 */
l_0x101521f4:
    II(0x101521f4, 0x5)   calld(0x100caa00, -0x877f9);          /* call 0x100caa00 */
    II(0x101521f9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101521fe, 0x1)   pushd(eax);                           /* push eax */
    II(0x101521ff, 0x5)   calld(0x100caa20, -0x877e4);          /* call 0x100caa20 */
    II(0x10152204, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10152206, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10152208, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1015220d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10152211, 0x1)   pushd(eax);                           /* push eax */
    II(0x10152212, 0x5)   mov(eax, 0x101adee4);                 /* mov eax, 0x101adee4 */ /* "%i raw material needed to upgrade." */
    II(0x10152217, 0x1)   pushd(eax);                           /* push eax */
    II(0x10152218, 0x5)   mov(eax, 0x50);                       /* mov eax, 0x50 */
    II(0x1015221d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015221e, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10152221, 0x5)   calld(my_string_ctor, -0x1073e);      /* call 0x10141ae8 */
    II(0x10152226, 0x1)   pushd(eax);                           /* push eax */
    II(0x10152227, 0x5)   calld(0x10142037, -0x101f5);          /* call 0x10142037 */
    II(0x1015222c, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x1015222f, 0x5)   calld(my_strobj_c_str_v2, -0xc8a6c);  /* call 0x100897c8 */
    II(0x10152234, 0x5)   calld(0x10115d23, -0x3c516);          /* call 0x10115d23 */
    II(0x10152239, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015223b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1015223e, 0x5)   calld(my_string_dtor, -0x10719);      /* call 0x10141b2a */
l_0x10152243:
    II(0x10152243, 0x5)   jmpd(0x10152312, 0xca);               /* jmp 0x10152312 */
l_0x10152248:
    II(0x10152248, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015224b, 0x5)   calld(0x1014f78c, -0x2ac4);           /* call 0x1014f78c */
    II(0x10152250, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10152252, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10152254, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10152257, 0x2)   neg(eax);                             /* neg eax */
    II(0x10152259, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015225c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015225f, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x10152262, 0x5)   calld(0x10155314, 0x30ad);            /* call 0x10155314 */
    II(0x10152267, 0x5)   calld(0x100d7a9c, -0x7a7d0);          /* call 0x100d7a9c */
    II(0x1015226c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015226f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10152271, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10152274, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10152276, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1015227b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1015227d, 0x2)   jnzd(0x10152288, 0x9);                /* jnz 0x10152288 */
    II(0x1015227f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10152282, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x10152286, 0x2)   jnzd(0x1015228d, 0x5);                /* jnz 0x1015228d */
l_0x10152288:
    II(0x10152288, 0x5)   jmpd(0x10152312, 0x85);               /* jmp 0x10152312 */
l_0x1015228d:
    II(0x1015228d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10152290, 0x5)   calld(0x1007623c, -0xdc059);          /* call 0x1007623c */
    II(0x10152295, 0x5)   calld(0x100ef36c, -0x62f2e);          /* call 0x100ef36c */
    II(0x1015229a, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015229d, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x101522a0, 0x5)   calld(0x1014f905, -0x29a0);           /* call 0x1014f905 */
    II(0x101522a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101522a8, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x101522ab, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101522ae, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101522b1, 0x3)   mov(edx, memd_a32(ds, edx + 0x18));   /* mov edx, [edx+0x18] */
    II(0x101522b4, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101522b7, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x101522ba, 0x5)   calld(0x10076aac, -0xdb813);          /* call 0x10076aac */
    II(0x101522bf, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x101522c1, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x101522c4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101522c6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x101522ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x101522cb, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x101522ce, 0x1)   pushd(eax);                           /* push eax */
    II(0x101522cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101522d2, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101522d5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101522d8, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x101522db, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x101522e1, 0x5)   mov(eax, 0x101adf07);                 /* mov eax, 0x101adf07 */ /* "%s upgraded to mark %s for %i raw material." */
    II(0x101522e6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101522e7, 0x5)   mov(eax, 0x50);                       /* mov eax, 0x50 */
    II(0x101522ec, 0x1)   pushd(eax);                           /* push eax */
    II(0x101522ed, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x101522f0, 0x5)   calld(my_string_ctor, -0x1080d);      /* call 0x10141ae8 */
    II(0x101522f5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101522f6, 0x5)   calld(0x10142037, -0x102c4);          /* call 0x10142037 */
    II(0x101522fb, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x101522fe, 0x5)   calld(my_strobj_c_str_v2, -0xc8b3b);  /* call 0x100897c8 */
    II(0x10152303, 0x5)   calld(0x10115b60, -0x3c7a8);          /* call 0x10115b60 */
    II(0x10152308, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015230a, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1015230d, 0x5)   calld(my_string_dtor, -0x107e8);      /* call 0x10141b2a */
l_0x10152312:
    II(0x10152312, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10152315, 0x5)   calld(0x1014f08b, -0x328f);           /* call 0x1014f08b */
    II(0x1015231a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015231c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015231f, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x10152324, 0x5)   calld(0x10076630, -0xdbcf9);          /* call 0x10076630 */
    II(0x10152329, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1015232e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10152331, 0x5)   calld(0x10076d98, -0xdb59e);          /* call 0x10076d98 */
    II(0x10152336, 0x2)   test(al, al);                         /* test al, al */
    II(0x10152338, 0x2)   jzd(0x10152342, 0x8);                 /* jz 0x10152342 */
    II(0x1015233a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015233d, 0x5)   calld(0x1010094d, -0x519f5);          /* call 0x1010094d */
l_0x10152342:
    II(0x10152342, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x10152347, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015234a, 0x5)   calld(0x10076d98, -0xdb5b7);          /* call 0x10076d98 */
    II(0x1015234f, 0x2)   test(al, al);                         /* test al, al */
    II(0x10152351, 0x2)   jzd(0x10152372, 0x1f);                /* jz 0x10152372 */
    II(0x10152353, 0x7)   cmp(memb_a32(ds, 0x101c3889), 0);     /* cmp byte [0x101c3889], 0x0 */
    II(0x1015235a, 0x2)   jnzd(0x10152365, 0x9);                /* jnz 0x10152365 */
    II(0x1015235c, 0x7)   cmp(memb_a32(ds, 0x101c388a), 0);     /* cmp byte [0x101c388a], 0x0 */
    II(0x10152363, 0x2)   jzd(0x1015236a, 0x5);                 /* jz 0x1015236a */
l_0x10152365:
    II(0x10152365, 0x5)   calld(0x100ff5c1, -0x52da9);          /* call 0x100ff5c1 */
l_0x1015236a:
    II(0x1015236a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015236d, 0x5)   calld(0x100ff637, -0x52d3b);          /* call 0x100ff637 */
l_0x10152372:
    II(0x10152372, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10152377, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015237a, 0x5)   calld(0x10152605, 0x286);             /* call 0x10152605 */
    II(0x1015237f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10152381, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10152382, 0x1)   popd(edi);                            /* pop edi */
    II(0x10152383, 0x1)   popd(esi);                            /* pop esi */
    II(0x10152384, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10152385, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10152386, 0x1)   retd();                               /* ret */
FUNC_END

