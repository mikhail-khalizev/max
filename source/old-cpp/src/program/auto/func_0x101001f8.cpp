FUNC_BEGIN(0x101001f8, 0x3e8aa3bbd58aeccf, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x50, 0x5b, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xd, 0x1d, 0xf7, 0xff, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x74, 0x13, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x13, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xa6, 0x1d, 0xf7, 0xff, 0x98, 0x85, 0xc0, 0x74, 0x5, 0xe9, 0xe6, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x3c, 0x1e, 0xf7, 0xff, 0xe8, 0x9a, 0x5d, 0xf7, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xe0, 0x8b, 0x45, 0xfc, 0xe8, 0xff, 0x20, 0xf7, 0xff, 0x8b, 0x45, 0xe6, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x7d, 0x31, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf7, 0xd8, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x8b, 0x45, 0xf0, 0xf7, 0xd8, 0x31, 0xc9, 0x66, 0x89, 0xc1, 0xbb, 0x90, 0x2, 0, 0, 0xba, 0xb, 0, 0, 0, 0xb8, 0x2b, 0x2b, 0x1a, 0x10, 0xe8, 0xcf, 0xfc, 0xff, 0xff, 0xeb, 0x27, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf8, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xf0, 0xbb, 0x90, 0x2, 0, 0, 0xba, 0xb, 0, 0, 0, 0xb8, 0x31, 0x2b, 0x1a, 0x10, 0xe8, 0xa6, 0xfc, 0xff, 0xff, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x31, 0x60, 0xf7, 0xff, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xa5, 0x61, 0xf7, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0xdb, 0x68, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x4a, 0xaa, 0x3, 0, 0x84, 0xc0, 0xf, 0x84, 0x7c, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x69, 0x60, 0xf7, 0xff, 0xe8, 0xc8, 0x5e, 0xf7, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xbe, 0x5e, 0xf7, 0xff, 0x39, 0xc2, 0x75, 0x5c, 0x8d, 0x45, 0xdc, 0xe8, 0x4e, 0x60, 0xf7, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xd1, 0x1b, 0xf7, 0xff, 0x66, 0x89, 0x45, 0xe6, 0xf, 0xbf, 0x45, 0xe6, 0x85, 0xc0, 0x7d, 0x8, 0x8b, 0x45, 0xe6, 0x29, 0x45, 0xf8, 0xeb, 0x6, 0x8b, 0x45, 0xe6, 0x1, 0x45, 0xf4, 0xe8, 0x98, 0x5c, 0xf7, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xdc, 0xe8, 0x49, 0x60, 0xf7, 0xff, 0xe8, 0xf8, 0x1f, 0xf7, 0xff, 0xf, 0xbf, 0x45, 0xe6, 0x85, 0xc0, 0x7d, 0x8, 0x8b, 0x45, 0xe6, 0x29, 0x45, 0xec, 0xeb, 0x6, 0x8b, 0x45, 0xe6, 0x1, 0x45, 0xf0, 0xe9, 0x6a, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x75, 0x1b, 0xf7, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x29, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf4, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xec, 0xbb, 0x90, 0x2, 0, 0, 0xba, 0xc, 0, 0, 0, 0xb8, 0x37, 0x2b, 0x1a, 0x10, 0xe8, 0xb0, 0xfb, 0xff, 0xff, 0xeb, 0x4e, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf8, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xf0, 0xbb, 0x90, 0x2, 0, 0, 0xba, 0xc, 0, 0, 0, 0xb8, 0x3d, 0x2b, 0x1a, 0x10, 0xe8, 0x87, 0xfb, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf4, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xec, 0xbb, 0x90, 0x2, 0, 0, 0xba, 0xd, 0, 0, 0, 0xb8, 0x43, 0x2b, 0x1a, 0x10, 0xe8, 0x60, 0xfb, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x2d, 0x5b, 0xf7, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101001f8, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x101001fd, 0x5)   calld(sys_check_available_stack_size, 0x65b50); /* call 0x10165d52 */
    II(0x10100202, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10100203, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10100204, 0x1)   pushd(edx);                           /* push edx */
    II(0x10100205, 0x1)   pushd(esi);                           /* push esi */
    II(0x10100206, 0x1)   pushd(edi);                           /* push edi */
    II(0x10100207, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10100208, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010020a, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x10100210, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10100213, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100216, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100219, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010021c, 0x5)   calld(0x10071f2e, -0x8e2f3);          /* call 0x10071f2e */
    II(0x10100221, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10100224, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10100228, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1010022a, 0x2)   jzd(0x1010023f, 0x13);                /* jz 0x1010023f */
    II(0x1010022c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010022f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100231, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10100234, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100236, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1010023b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1010023d, 0x2)   jzd(0x10100241, 0x2);                 /* jz 0x10100241 */
l_0x1010023f:
    II(0x1010023f, 0x2)   jmpd(0x10100254, 0x13);               /* jmp 0x10100254 */
l_0x10100241:
    II(0x10100241, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100244, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100247, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010024a, 0x5)   calld(0x10071ff5, -0x8e25a);          /* call 0x10071ff5 */
    II(0x1010024f, 0x1)   cwde();                               /* cwde */
    II(0x10100250, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10100252, 0x2)   jzd(0x10100259, 0x5);                 /* jz 0x10100259 */
l_0x10100254:
    II(0x10100254, 0x5)   jmpd(0x1010043f, 0x1e6);              /* jmp 0x1010043f */
l_0x10100259:
    II(0x10100259, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010025c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010025f, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10100266, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1010026d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10100270, 0x5)   calld(0x100720b1, -0x8e1c4);          /* call 0x100720b1 */
    II(0x10100275, 0x5)   calld(0x10076014, -0x8a266);          /* call 0x10076014 */
    II(0x1010027a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010027c, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1010027e, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x10100281, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100284, 0x5)   calld(0x10072388, -0x8df01);          /* call 0x10072388 */
    II(0x10100289, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x1010028c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010028f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10100293, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10100295, 0x2)   jged(0x101002c8, 0x31);               /* jge 0x101002c8 */
    II(0x10100297, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1010029c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010029d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101002a0, 0x2)   neg(eax);                             /* neg eax */
    II(0x101002a2, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x101002a7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101002a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101002ab, 0x2)   neg(eax);                             /* neg eax */
    II(0x101002ad, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101002af, 0x3)   mov(cx, ax);                          /* mov cx, ax */
    II(0x101002b2, 0x5)   mov(ebx, 0x290);                      /* mov ebx, 0x290 */
    II(0x101002b7, 0x5)   mov(edx, 0xb);                        /* mov edx, 0xb */
    II(0x101002bc, 0x5)   mov(eax, 0x101a2b2b);                 /* mov eax, 0x101a2b2b */ /* "Power" */
    II(0x101002c1, 0x5)   calld(0x100fff95, -0x331);            /* call 0x100fff95 */
    II(0x101002c6, 0x2)   jmpd(0x101002ef, 0x27);               /* jmp 0x101002ef */
l_0x101002c8:
    II(0x101002c8, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101002cd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101002ce, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101002d0, 0x4)   mov(ax, memw_a32(ss, ebp - 0x8));     /* mov ax, [ebp-0x8] */
    II(0x101002d4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101002d5, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101002d7, 0x4)   mov(cx, memw_a32(ss, ebp - 0x10));    /* mov cx, [ebp-0x10] */
    II(0x101002db, 0x5)   mov(ebx, 0x290);                      /* mov ebx, 0x290 */
    II(0x101002e0, 0x5)   mov(edx, 0xb);                        /* mov edx, 0xb */
    II(0x101002e5, 0x5)   mov(eax, 0x101a2b31);                 /* mov eax, 0x101a2b31 */ /* "Usage" */
    II(0x101002ea, 0x5)   calld(0x100fff95, -0x35a);            /* call 0x100fff95 */
l_0x101002ef:
    II(0x101002ef, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x101002f6, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x101002fd, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10100302, 0x5)   calld(0x10076338, -0x89fcf);          /* call 0x10076338 */
    II(0x10100307, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x1010030a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010030c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1010030e, 0x5)   calld(0x100764b8, -0x89e5b);          /* call 0x100764b8 */
    II(0x10100313, 0x2)   jmpd(0x1010031d, 0x8);                /* jmp 0x1010031d */
l_0x10100315:
    II(0x10100315, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10100318, 0x5)   calld(0x10076bf8, -0x89725);          /* call 0x10076bf8 */
l_0x1010031d:
    II(0x1010031d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010031f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10100322, 0x5)   calld(0x1013ad71, 0x3aa4a);           /* call 0x1013ad71 */
    II(0x10100327, 0x2)   test(al, al);                         /* test al, al */
    II(0x10100329, 0x6)   jzd(0x101003ab, 0x7c);                /* jz dword 0x101003ab */
    II(0x1010032f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10100332, 0x5)   calld(0x100763a0, -0x89f97);          /* call 0x100763a0 */
    II(0x10100337, 0x5)   calld(0x10076204, -0x8a138);          /* call 0x10076204 */
    II(0x1010033c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010033e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100341, 0x5)   calld(0x10076204, -0x8a142);          /* call 0x10076204 */
    II(0x10100346, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10100348, 0x2)   jnzd(0x101003a6, 0x5c);               /* jnz 0x101003a6 */
    II(0x1010034a, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1010034d, 0x5)   calld(0x100763a0, -0x89fb2);          /* call 0x100763a0 */
    II(0x10100352, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100355, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100358, 0x5)   calld(0x10071f2e, -0x8e42f);          /* call 0x10071f2e */
    II(0x1010035d, 0x4)   mov(memw_a32(ss, ebp - 0x1a), ax);    /* mov [ebp-0x1a], ax */
    II(0x10100361, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1a)); /* movsx eax, word [ebp-0x1a] */
    II(0x10100365, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10100367, 0x2)   jged(0x10100371, 0x8);                /* jge 0x10100371 */
    II(0x10100369, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x1010036c, 0x3)   sub(memd_a32(ss, ebp - 0x8), eax);    /* sub [ebp-0x8], eax */
    II(0x1010036f, 0x2)   jmpd(0x10100377, 0x6);                /* jmp 0x10100377 */
l_0x10100371:
    II(0x10100371, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x10100374, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
l_0x10100377:
    II(0x10100377, 0x5)   calld(0x10076014, -0x8a368);          /* call 0x10076014 */
    II(0x1010037c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010037e, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10100380, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x10100383, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10100386, 0x5)   calld(0x100763d4, -0x89fb7);          /* call 0x100763d4 */
    II(0x1010038b, 0x5)   calld(0x10072388, -0x8e008);          /* call 0x10072388 */
    II(0x10100390, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1a)); /* movsx eax, word [ebp-0x1a] */
    II(0x10100394, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10100396, 0x2)   jged(0x101003a0, 0x8);                /* jge 0x101003a0 */
    II(0x10100398, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x1010039b, 0x3)   sub(memd_a32(ss, ebp - 0x14), eax);   /* sub [ebp-0x14], eax */
    II(0x1010039e, 0x2)   jmpd(0x101003a6, 0x6);                /* jmp 0x101003a6 */
l_0x101003a0:
    II(0x101003a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x101003a3, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x101003a6:
    II(0x101003a6, 0x5)   jmpd(0x10100315, -0x96);              /* jmp 0x10100315 */
l_0x101003ab:
    II(0x101003ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101003ae, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101003b1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101003b4, 0x5)   calld(0x10071f2e, -0x8e48b);          /* call 0x10071f2e */
    II(0x101003b9, 0x1)   cwde();                               /* cwde */
    II(0x101003ba, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101003bc, 0x2)   jled(0x101003e7, 0x29);               /* jle 0x101003e7 */
    II(0x101003be, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101003c3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101003c4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101003c6, 0x4)   mov(ax, memw_a32(ss, ebp - 0xc));     /* mov ax, [ebp-0xc] */
    II(0x101003ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x101003cb, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101003cd, 0x4)   mov(cx, memw_a32(ss, ebp - 0x14));    /* mov cx, [ebp-0x14] */
    II(0x101003d1, 0x5)   mov(ebx, 0x290);                      /* mov ebx, 0x290 */
    II(0x101003d6, 0x5)   mov(edx, 0xc);                        /* mov edx, 0xc */
    II(0x101003db, 0x5)   mov(eax, 0x101a2b37);                 /* mov eax, 0x101a2b37 */ /* "Total" */
    II(0x101003e0, 0x5)   calld(0x100fff95, -0x450);            /* call 0x100fff95 */
    II(0x101003e5, 0x2)   jmpd(0x10100435, 0x4e);               /* jmp 0x10100435 */
l_0x101003e7:
    II(0x101003e7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101003ec, 0x1)   pushd(eax);                           /* push eax */
    II(0x101003ed, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101003ef, 0x4)   mov(ax, memw_a32(ss, ebp - 0x8));     /* mov ax, [ebp-0x8] */
    II(0x101003f3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101003f4, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101003f6, 0x4)   mov(cx, memw_a32(ss, ebp - 0x10));    /* mov cx, [ebp-0x10] */
    II(0x101003fa, 0x5)   mov(ebx, 0x290);                      /* mov ebx, 0x290 */
    II(0x101003ff, 0x5)   mov(edx, 0xc);                        /* mov edx, 0xc */
    II(0x10100404, 0x5)   mov(eax, 0x101a2b3d);                 /* mov eax, 0x101a2b3d */ /* "Total" */
    II(0x10100409, 0x5)   calld(0x100fff95, -0x479);            /* call 0x100fff95 */
    II(0x1010040e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10100413, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100414, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100416, 0x4)   mov(ax, memw_a32(ss, ebp - 0xc));     /* mov ax, [ebp-0xc] */
    II(0x1010041a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010041b, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010041d, 0x4)   mov(cx, memw_a32(ss, ebp - 0x14));    /* mov cx, [ebp-0x14] */
    II(0x10100421, 0x5)   mov(ebx, 0x290);                      /* mov ebx, 0x290 */
    II(0x10100426, 0x5)   mov(edx, 0xd);                        /* mov edx, 0xd */
    II(0x1010042b, 0x5)   mov(eax, 0x101a2b43);                 /* mov eax, 0x101a2b43 */ /* "Usage" */
    II(0x10100430, 0x5)   calld(0x100fff95, -0x4a0);            /* call 0x100fff95 */
l_0x10100435:
    II(0x10100435, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100437, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1010043a, 0x5)   calld(0x10075f6c, -0x8a4d3);          /* call 0x10075f6c */
l_0x1010043f:
    II(0x1010043f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10100441, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10100442, 0x1)   popd(edi);                            /* pop edi */
    II(0x10100443, 0x1)   popd(esi);                            /* pop esi */
    II(0x10100444, 0x1)   popd(edx);                            /* pop edx */
    II(0x10100445, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10100446, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10100447, 0x1)   retd();                               /* ret */
FUNC_END

