FUNC_BEGIN(0x1010a69d, 0xd1b77d6a63578bd1, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0xab, 0xb6, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0xba, 0x6, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa6, 0xfb, 0xff, 0xff, 0xb9, 0x1, 0, 0, 0, 0xba, 0x54, 0x4e, 0x1c, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0xa1, 0xa6, 0xfc, 0xff, 0xbe, 0x48, 0xaa, 0x1b, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x3a, 0x89, 0xc3, 0x89, 0xf2, 0x89, 0xf8, 0xe8, 0xeb, 0xfb, 0xff, 0xff, 0xb9, 0x1, 0, 0, 0, 0xba, 0x54, 0x4e, 0x1c, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x7a, 0xa6, 0xfc, 0xff, 0x89, 0xc3, 0xba, 0x5c, 0xaa, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0xc8, 0xfb, 0xff, 0xff, 0xb8, 0x4a, 0, 0, 0, 0xe8, 0xc3, 0xb8, 0xf6, 0xff, 0x89, 0x45, 0xf8, 0xb8, 0x4b, 0, 0, 0, 0xe8, 0xb6, 0xb8, 0xf6, 0xff, 0x89, 0x45, 0xf4, 0xbb, 0xa, 0, 0, 0, 0x8d, 0x55, 0xdc, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xbe, 0xec, 0x6, 0, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x75, 0x59, 0x8b, 0x45, 0xfc, 0x83, 0xb8, 0x63, 0x3, 0, 0, 0, 0x74, 0xc, 0xc7, 0x5, 0xf8, 0xaa, 0x1b, 0x10, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xa3, 0xf8, 0xaa, 0x1b, 0x10, 0xc7, 0x5, 0xc, 0xab, 0x1b, 0x10, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x64, 0x7f, 0x9, 0xc7, 0x45, 0xf8, 0x28, 0, 0, 0, 0xeb, 0x1b, 0xf, 0xbf, 0x45, 0xf4, 0x3d, 0xc8, 0, 0, 0, 0x7f, 0x9, 0xc7, 0x45, 0xf8, 0x29, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf8, 0x2a, 0, 0, 0, 0xeb, 0x59, 0xc7, 0x5, 0xf8, 0xaa, 0x1b, 0x10, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xb8, 0x63, 0x3, 0, 0, 0, 0x74, 0xc, 0xc7, 0x5, 0xc, 0xab, 0x1b, 0x10, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xa3, 0xc, 0xab, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xf4, 0x3d, 0xc8, 0, 0, 0, 0x7f, 0x9, 0xc7, 0x45, 0xf8, 0x2b, 0, 0, 0, 0xeb, 0x1b, 0xf, 0xbf, 0x45, 0xf4, 0x3d, 0x90, 0x1, 0, 0, 0x7f, 0x9, 0xc7, 0x45, 0xf8, 0x2c, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf8, 0x2d, 0, 0, 0, 0x83, 0x45, 0xf8, 0xd8, 0xf, 0xbf, 0x4d, 0xf8, 0xbb, 0x3d, 0, 0, 0, 0xba, 0x8, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x60, 0xfb, 0xff, 0xff, 0xe8, 0x5, 0xab, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0xff, 0, 0x1, 0, 0xba, 0xe8, 0xaa, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0xd3, 0xe1, 0xff, 0xff, 0xe8, 0xe1, 0xaa, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0xff, 0, 0x1, 0, 0xba, 0xfc, 0xaa, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0xaf, 0xe1, 0xff, 0xff, 0xb9, 0x1, 0, 0, 0, 0xba, 0x54, 0x4e, 0x1c, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x10, 0xa5, 0xfc, 0xff, 0xba, 0x10, 0xab, 0x1b, 0x10, 0x8b, 0x75, 0xfc, 0x8b, 0x36, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x5c, 0xfa, 0xff, 0xff, 0xb9, 0x1, 0, 0, 0, 0xba, 0x54, 0x4e, 0x1c, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0xeb, 0xa4, 0xfc, 0xff, 0x89, 0xc3, 0xba, 0x24, 0xab, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x39, 0xfa, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010a69d, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x1010a6a2, 0x5)   calld(sys_check_available_stack_size, 0x5b6ab); /* call 0x10165d52 */
    II(0x1010a6a7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010a6a8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010a6a9, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010a6aa, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010a6ab, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010a6ac, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010a6ad, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010a6af, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1010a6b5, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010a6b8, 0x5)   mov(edx, 0x6);                        /* mov edx, 0x6 */
//    II(0x1010a6bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a6c0, 0x5)   calld(0x1010a26b, -0x45a);            /* call 0x1010a26b */
    II(0x1010a6c5, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010a6ca, 0x5)   mov(edx, 0x101c4e54);                 /* mov edx, 0x101c4e54 */
    II(0x1010a6cf, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1010a6d2, 0x5)   calld(0x100d4d78, -0x3595f);          /* call 0x100d4d78 */
    II(0x1010a6d7, 0x5)   mov(esi, 0x101baa48);                 /* mov esi, 0x101baa48 */
    II(0x1010a6dc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1010a6df, 0x2)   mov(edi, memd_a32(ds, edx));          /* mov edi, [edx] */
    II(0x1010a6e1, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1010a6e3, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x1010a6e5, 0x2)   mov(eax, edi);                        /* mov eax, edi */
    II(0x1010a6e7, 0x5)   calld(0x1010a2d7, -0x415);            /* call 0x1010a2d7 */
    II(0x1010a6ec, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010a6f1, 0x5)   mov(edx, 0x101c4e54);                 /* mov edx, 0x101c4e54 */
    II(0x1010a6f6, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1010a6f9, 0x5)   calld(0x100d4d78, -0x35986);          /* call 0x100d4d78 */
    II(0x1010a6fe, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1010a700, 0x5)   mov(edx, 0x101baa5c);                 /* mov edx, 0x101baa5c */
    II(0x1010a705, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a708, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010a70a, 0x5)   calld(0x1010a2d7, -0x438);            /* call 0x1010a2d7 */
    II(0x1010a70f, 0x5)   mov(eax, 0x4a);                       /* mov eax, 0x4a */
    II(0x1010a714, 0x5)   calld(0x10075fdc, -0x9473d);          /* call 0x10075fdc */
    II(0x1010a719, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010a71c, 0x5)   mov(eax, 0x4b);                       /* mov eax, 0x4b */
    II(0x1010a721, 0x5)   calld(0x10075fdc, -0x9474a);          /* call 0x10075fdc */
    II(0x1010a726, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1010a729, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x1010a72e, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x1010a731, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010a735, 0x5)   calld(/* sys */ 0x101793f8, 0x6ecbe); /* call 0x101793f8 */
    II(0x1010a73a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010a73e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1010a740, 0x2)   jnzd(0x1010a79b, 0x59);               /* jnz 0x1010a79b */
    II(0x1010a742, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a745, 0x7)   cmp(memd_a32(ds, eax + 0x363), 0);    /* cmp dword [eax+0x363], 0x0 */
    II(0x1010a74c, 0x2)   jzd(0x1010a75a, 0xc);                 /* jz 0x1010a75a */
    II(0x1010a74e, 0xa)   mov(memd_a32(ds, 0x101baaf8), 0);     /* mov dword [0x101baaf8], 0x0 */
    II(0x1010a758, 0x2)   jmpd(0x1010a762, 0x8);                /* jmp 0x1010a762 */
l_0x1010a75a:
    II(0x1010a75a, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1010a75d, 0x5)   mov(memd_a32(ds, 0x101baaf8), eax);   /* mov [0x101baaf8], eax */
l_0x1010a762:
    II(0x1010a762, 0xa)   mov(memd_a32(ds, 0x101bab0c), 0);     /* mov dword [0x101bab0c], 0x0 */
    II(0x1010a76c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010a770, 0x3)   cmp(eax, 0x64);                       /* cmp eax, 0x64 */
    II(0x1010a773, 0x2)   jgd(0x1010a77e, 0x9);                 /* jg 0x1010a77e */
    II(0x1010a775, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x28);   /* mov dword [ebp-0x8], 0x28 */
    II(0x1010a77c, 0x2)   jmpd(0x1010a799, 0x1b);               /* jmp 0x1010a799 */
l_0x1010a77e:
    II(0x1010a77e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010a782, 0x5)   cmp(eax, 0xc8);                       /* cmp eax, 0xc8 */
    II(0x1010a787, 0x2)   jgd(0x1010a792, 0x9);                 /* jg 0x1010a792 */
    II(0x1010a789, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x29);   /* mov dword [ebp-0x8], 0x29 */
    II(0x1010a790, 0x2)   jmpd(0x1010a799, 0x7);                /* jmp 0x1010a799 */
l_0x1010a792:
    II(0x1010a792, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x2a);   /* mov dword [ebp-0x8], 0x2a */
l_0x1010a799:
    II(0x1010a799, 0x2)   jmpd(0x1010a7f4, 0x59);               /* jmp 0x1010a7f4 */
l_0x1010a79b:
    II(0x1010a79b, 0xa)   mov(memd_a32(ds, 0x101baaf8), 0);     /* mov dword [0x101baaf8], 0x0 */
    II(0x1010a7a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a7a8, 0x7)   cmp(memd_a32(ds, eax + 0x363), 0);    /* cmp dword [eax+0x363], 0x0 */
    II(0x1010a7af, 0x2)   jzd(0x1010a7bd, 0xc);                 /* jz 0x1010a7bd */
    II(0x1010a7b1, 0xa)   mov(memd_a32(ds, 0x101bab0c), 0);     /* mov dword [0x101bab0c], 0x0 */
    II(0x1010a7bb, 0x2)   jmpd(0x1010a7c5, 0x8);                /* jmp 0x1010a7c5 */
l_0x1010a7bd:
    II(0x1010a7bd, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1010a7c0, 0x5)   mov(memd_a32(ds, 0x101bab0c), eax);   /* mov [0x101bab0c], eax */
l_0x1010a7c5:
    II(0x1010a7c5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010a7c9, 0x5)   cmp(eax, 0xc8);                       /* cmp eax, 0xc8 */
    II(0x1010a7ce, 0x2)   jgd(0x1010a7d9, 0x9);                 /* jg 0x1010a7d9 */
    II(0x1010a7d0, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x2b);   /* mov dword [ebp-0x8], 0x2b */
    II(0x1010a7d7, 0x2)   jmpd(0x1010a7f4, 0x1b);               /* jmp 0x1010a7f4 */
l_0x1010a7d9:
    II(0x1010a7d9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010a7dd, 0x5)   cmp(eax, 0x190);                      /* cmp eax, 0x190 */
    II(0x1010a7e2, 0x2)   jgd(0x1010a7ed, 0x9);                 /* jg 0x1010a7ed */
    II(0x1010a7e4, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x2c);   /* mov dword [ebp-0x8], 0x2c */
    II(0x1010a7eb, 0x2)   jmpd(0x1010a7f4, 0x7);                /* jmp 0x1010a7f4 */
l_0x1010a7ed:
    II(0x1010a7ed, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x2d);   /* mov dword [ebp-0x8], 0x2d */
l_0x1010a7f4:
    II(0x1010a7f4, 0x4)   add(memd_a32(ss, ebp - 0x8), -0x28 /* 0xd8 */); /* add dword [ebp-0x8], 0xd8 */
    II(0x1010a7f8, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x8));  /* movsx ecx, word [ebp-0x8] */
    II(0x1010a7fc, 0x5)   mov(ebx, 0x3d);                       /* mov ebx, 0x3d */
    II(0x1010a801, 0x5)   mov(edx, 0x8);                        /* mov edx, 0x8 */
    II(0x1010a806, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a809, 0x5)   calld(0x1010a36e, -0x4a0);            /* call 0x1010a36e */
    II(0x1010a80e, 0x5)   calld(0x10115318, 0xab05);            /* call 0x10115318 */
    II(0x1010a813, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010a818, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010a819, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010a81e, 0x5)   mov(ebx, 0x100ff);                    /* mov ebx, 0x100ff */
    II(0x1010a823, 0x5)   mov(edx, 0x101baae8);                 /* mov edx, 0x101baae8 */
    II(0x1010a828, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a82b, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010a82d, 0x5)   calld(0x10108a05, -0x1e2d);           /* call 0x10108a05 */
    II(0x1010a832, 0x5)   calld(0x10115318, 0xaae1);            /* call 0x10115318 */
    II(0x1010a837, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010a83c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010a83d, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010a842, 0x5)   mov(ebx, 0x100ff);                    /* mov ebx, 0x100ff */
    II(0x1010a847, 0x5)   mov(edx, 0x101baafc);                 /* mov edx, 0x101baafc */
    II(0x1010a84c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a84f, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010a851, 0x5)   calld(0x10108a05, -0x1e51);           /* call 0x10108a05 */
    II(0x1010a856, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010a85b, 0x5)   mov(edx, 0x101c4e54);                 /* mov edx, 0x101c4e54 */
    II(0x1010a860, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1010a863, 0x5)   calld(0x100d4d78, -0x35af0);          /* call 0x100d4d78 */
    II(0x1010a868, 0x5)   mov(edx, 0x101bab10);                 /* mov edx, 0x101bab10 */
    II(0x1010a86d, 0x3)   mov(esi, memd_a32(ss, ebp - 0x4));    /* mov esi, [ebp-0x4] */
    II(0x1010a870, 0x2)   mov(esi, memd_a32(ds, esi));          /* mov esi, [esi] */
    II(0x1010a872, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1010a874, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1010a876, 0x5)   calld(0x1010a2d7, -0x5a4);            /* call 0x1010a2d7 */
    II(0x1010a87b, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010a880, 0x5)   mov(edx, 0x101c4e54);                 /* mov edx, 0x101c4e54 */
    II(0x1010a885, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1010a888, 0x5)   calld(0x100d4d78, -0x35b15);          /* call 0x100d4d78 */
    II(0x1010a88d, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1010a88f, 0x5)   mov(edx, 0x101bab24);                 /* mov edx, 0x101bab24 */
    II(0x1010a894, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a897, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010a899, 0x5)   calld(0x1010a2d7, -0x5c7);            /* call 0x1010a2d7 */
    II(0x1010a89e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010a8a0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010a8a1, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010a8a2, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010a8a3, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010a8a4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010a8a5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010a8a6, 0x1)   retd();                               /* ret */
FUNC_END

