FUNC_BEGIN(0x101136c0, 0xc70606af6c246665, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x88, 0x26, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x11, 0x25, 0xff, 0, 0, 0, 0x3d, 0xff, 0, 0, 0, 0x74, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0xf, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x7d, 0x9, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x4f, 0xc6, 0x45, 0xf8, 0x4, 0xfe, 0x4d, 0xf8, 0x80, 0x7d, 0xf8, 0xff, 0x74, 0x3b, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x74, 0x17, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x3, 0x45, 0xfc, 0x8a, 0x80, 0xec, 0x4, 0, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x9, 0xeb, 0xbc, 0xc7, 0x45, 0xf4, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101136c0, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x101136c5, 0x5)   calld(sys_check_available_stack_size, 0x52688); /* call 0x10165d52 */
    II(0x101136ca, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101136cb, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101136cc, 0x1)   pushd(edx);                           /* push edx */
    II(0x101136cd, 0x1)   pushd(esi);                           /* push esi */
    II(0x101136ce, 0x1)   pushd(edi);                           /* push edi */
    II(0x101136cf, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101136d0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101136d2, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x101136d8, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x101136db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101136de, 0x3)   mov(al, memb_a32(ds, eax + 0x11));    /* mov al, [eax+0x11] */
    II(0x101136e1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101136e6, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x101136eb, 0x2)   jzd(0x101136fd, 0x10);                /* jz 0x101136fd */
    II(0x101136ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101136f0, 0x3)   mov(al, memb_a32(ds, eax + 0xf));     /* mov al, [eax+0xf] */
    II(0x101136f3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101136f8, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x101136fb, 0x2)   jged(0x10113706, 0x9);                /* jge 0x10113706 */
l_0x101136fd:
    II(0x101136fd, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10113704, 0x2)   jmpd(0x10113755, 0x4f);               /* jmp 0x10113755 */
l_0x10113706:
    II(0x10113706, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x4);    /* mov byte [ebp-0x8], 0x4 */
l_0x1011370a:
    II(0x1011370a, 0x3)   dec(memb_a32(ss, ebp - 0x8));         /* dec byte [ebp-0x8] */
    II(0x1011370d, 0x4)   cmp(memb_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp byte [ebp-0x8], 0xff */
    II(0x10113711, 0x2)   jzd(0x1011374e, 0x3b);                /* jz 0x1011374e */
    II(0x10113713, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113715, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10113718, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1011371a, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1011371d, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x10113723, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10113726, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113728, 0x2)   jzd(0x10113741, 0x17);                /* jz 0x10113741 */
    II(0x1011372a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1011372c, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1011372f, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113732, 0x6)   mov(al, memb_a32(ds, eax + 0x4ec));   /* mov al, [eax+0x4ec] */
    II(0x10113738, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011373d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011373f, 0x2)   jzd(0x10113743, 0x2);                 /* jz 0x10113743 */
l_0x10113741:
    II(0x10113741, 0x2)   jmpd(0x1011374c, 0x9);                /* jmp 0x1011374c */
l_0x10113743:
    II(0x10113743, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1011374a, 0x2)   jmpd(0x10113755, 0x9);                /* jmp 0x10113755 */
l_0x1011374c:
    II(0x1011374c, 0x2)   jmpd(0x1011370a, -0x44);              /* jmp 0x1011370a */
l_0x1011374e:
    II(0x1011374e, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x1);    /* mov dword [ebp-0xc], 0x1 */
l_0x10113755:
    II(0x10113755, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10113758, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011375a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011375b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011375c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011375d, 0x1)   popd(edx);                            /* pop edx */
    II(0x1011375e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011375f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10113760, 0x1)   retd();                               /* ret */
FUNC_END

