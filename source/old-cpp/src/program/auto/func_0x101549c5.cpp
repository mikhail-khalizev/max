FUNC_BEGIN(0x101549c5, 0xae02f98821e18f0d, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x83, 0x13, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xc0, 0x8b, 0x55, 0xf8, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xfc, 0xf, 0x84, 0x89, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x25, 0xb4, 0xfc, 0xff, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x26, 0x6b, 0xdb, 0xa, 0xb8, 0x80, 0x94, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x98, 0x60, 0xf3, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x99, 0x6c, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0x6a, 0x5f, 0xf3, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0x74, 0x16, 0xf2, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0xef, 0x1f, 0xf2, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x30, 0xde, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x3d, 0x44, 0xf5, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0xd9, 0xcd, 0xf1, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x3, 0x55, 0xf8, 0x8a, 0x45, 0xf0, 0x88, 0x82, 0xab, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x66, 0x8b, 0, 0x25, 0xff, 0xff, 0, 0, 0x89, 0xc2, 0xf7, 0xd2, 0x8b, 0x45, 0xf8, 0x21, 0x50, 0x12, 0x8a, 0x45, 0xfc, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x26, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x5c, 0, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xf8, 0x9, 0x50, 0x12, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0x22, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0xf, 0x8b, 0x45, 0xf8, 0xe8, 0x4d, 0xa5, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x58, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xe6, 0xcc, 0xf1, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x3, 0x45, 0xf8, 0xc6, 0x80, 0xab, 0, 0, 0, 0x1, 0x8b, 0x45, 0xf8, 0xe8, 0xf7, 0x41, 0xf5, 0xff, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0xe8, 0xec, 0x44, 0xf5, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x2c, 0x54, 0xff, 0xff, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0x1, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101549c5, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x101549ca, 0x5)   calld(sys_check_available_stack_size, 0x11383); /* call 0x10165d52 */
    II(0x101549cf, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101549d0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101549d1, 0x1)   pushd(esi);                           /* push esi */
    II(0x101549d2, 0x1)   pushd(edi);                           /* push edi */
    II(0x101549d3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101549d4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101549d6, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x101549dc, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101549df, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101549e2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101549e4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101549e7, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x101549ea, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x101549ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101549f0, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x101549f4, 0x6)   jzd(0x10154b83, 0x189);               /* jz dword 0x10154b83 */
    II(0x101549fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101549fd, 0x5)   calld(0x1011fe27, -0x34bdb);          /* call 0x1011fe27 */
    II(0x10154a02, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10154a05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a08, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10154a0a, 0x3)   mov(bl, memb_a32(ds, eax + 0x26));    /* mov bl, [eax+0x26] */
    II(0x10154a0d, 0x3)   imul(ebx, ebx, 0xa);                  /* imul ebx, ebx, 0xa */
    II(0x10154a10, 0x5)   mov(eax, 0x101c9480);                 /* mov eax, 0x101c9480 */
    II(0x10154a15, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10154a17, 0x5)   calld(0x1008aab4, -0xc9f68);          /* call 0x1008aab4 */
    II(0x10154a1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a1f, 0x5)   calld(0x1014b6bd, -0x9367);           /* call 0x1014b6bd */
    II(0x10154a24, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10154a26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a29, 0x5)   calld(0x1008a998, -0xca096);          /* call 0x1008a998 */
    II(0x10154a2e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10154a30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a33, 0x5)   calld(0x100760ac, -0xde98c);          /* call 0x100760ac */
    II(0x10154a38, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10154a3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a3d, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10154a40, 0x5)   calld(0x10076a34, -0xde011);          /* call 0x10076a34 */
    II(0x10154a45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a48, 0x5)   calld(0x1015287d, -0x21d0);           /* call 0x1015287d */
    II(0x10154a4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a50, 0x5)   calld(0x100a8e92, -0xabbc3);          /* call 0x100a8e92 */
    II(0x10154a55, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10154a57, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a5a, 0x5)   calld(0x10071838, -0xe3227);          /* call 0x10071838 */
    II(0x10154a5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a62, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x10154a65, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10154a68, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x10154a6d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10154a70, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10154a73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a76, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10154a79, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10154a7c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10154a7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154a81, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10154a84, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10154a89, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10154a8f, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x10154a95, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10154a97, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10154a99, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10154a9e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10154aa0, 0x2)   jzd(0x10154aa8, 0x6);                 /* jz 0x10154aa8 */
    II(0x10154aa2, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x10154aa6, 0x2)   jmpd(0x10154aac, 0x4);                /* jmp 0x10154aac */
l_0x10154aa8:
    II(0x10154aa8, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x10154aac:
    II(0x10154aac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154aaf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10154ab1, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10154ab4, 0x3)   add(edx, memd_a32(ss, ebp - 0x8));    /* add edx, [ebp-0x8] */
    II(0x10154ab7, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10154aba, 0x6)   mov(memb_a32(ds, edx + 0xab), al);    /* mov [edx+0xab], al */
    II(0x10154ac0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154ac3, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10154ac6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10154acb, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10154ad1, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10154ad7, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10154ada, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10154adf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10154ae1, 0x2)   not_(edx);                            /* not edx */
    II(0x10154ae3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154ae6, 0x3)   and_(memd_a32(ds, eax + 0x12), edx);  /* and [eax+0x12], edx */
    II(0x10154ae9, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10154aec, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10154aef, 0x3)   mov(memb_a32(ds, edx + 0x26), al);    /* mov [edx+0x26], al */
    II(0x10154af2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154af5, 0x4)   mov(memb_a32(ds, eax + 0x5c), 0);     /* mov byte [eax+0x5c], 0x0 */
    II(0x10154af9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10154afd, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10154b03, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10154b09, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10154b0b, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x10154b0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154b11, 0x3)   or_(memd_a32(ds, eax + 0x12), edx);   /* or [eax+0x12], edx */
    II(0x10154b14, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10154b18, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10154b1e, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10154b24, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
    II(0x10154b27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154b2a, 0x3)   mov(memd_a32(ds, eax + 0x22), edx);   /* mov [eax+0x22], edx */
    II(0x10154b2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154b30, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x10154b34, 0x2)   jnzd(0x10154b45, 0xf);                /* jnz 0x10154b45 */
    II(0x10154b36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154b39, 0x5)   calld(0x1014f08b, -0x5ab3);           /* call 0x1014f08b */
    II(0x10154b3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154b41, 0x4)   mov(memb_a32(ds, eax + 0x58), 0);     /* mov byte [eax+0x58], 0x0 */
l_0x10154b45:
    II(0x10154b45, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10154b4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154b4d, 0x5)   calld(0x10071838, -0xe331a);          /* call 0x10071838 */
    II(0x10154b52, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10154b56, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10154b59, 0x7)   mov(memb_a32(ds, eax + 0xab), 0x1);   /* mov byte [eax+0xab], 0x1 */
    II(0x10154b60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154b63, 0x5)   calld(0x100a8d5f, -0xabe09);          /* call 0x100a8d5f */
    II(0x10154b68, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10154b6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154b6f, 0x5)   calld(0x100a9060, -0xabb14);          /* call 0x100a9060 */
    II(0x10154b74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10154b77, 0x5)   calld(0x10149fa8, -0xabd4);           /* call 0x10149fa8 */
    II(0x10154b7c, 0x7)   mov(memb_a32(ds, 0x101c391b), 0x1);   /* mov byte [0x101c391b], 0x1 */
l_0x10154b83:
    II(0x10154b83, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10154b85, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10154b86, 0x1)   popd(edi);                            /* pop edi */
    II(0x10154b87, 0x1)   popd(esi);                            /* pop esi */
    II(0x10154b88, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10154b89, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10154b8a, 0x1)   retd();                               /* ret */
FUNC_END

