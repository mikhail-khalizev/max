FUNC_BEGIN(0x100ad6e4, 0xc71f54d5719b2023, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x64, 0x86, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x6a, 0x8e, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xd4, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x12, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x4, 0xf9, 0xff, 0xff, 0xe9, 0x35, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x3b, 0x8e, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0x12, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x29, 0x8e, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0x3a, 0xbb, 0x41, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xc8, 0xfe, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x1c, 0xbb, 0x18, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xac, 0xfe, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0x8a, 0, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x4, 0x7d, 0x5a, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x9, 0x74, 0x4c, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xb4, 0x8d, 0xfc, 0xff, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x98, 0x8d, 0xfc, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x97, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x4, 0x75, 0xf, 0xba, 0x41, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x53, 0, 0, 0, 0xeb, 0x48, 0xb8, 0x4e, 0, 0, 0, 0xe8, 0x9d, 0x6, 0x2, 0, 0x85, 0xc0, 0x74, 0x1c, 0xbb, 0x4e, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xf1, 0xfd, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0xf, 0xba, 0x4e, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x18, 0, 0, 0, 0xeb, 0xd, 0xba, 0x48, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x9, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ad6e4, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100ad6e9, 0x5)   calld(sys_check_available_stack_size, 0xb8664); /* call 0x10165d52 */
    II(0x100ad6ee, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ad6ef, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ad6f0, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ad6f1, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ad6f2, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ad6f3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ad6f4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ad6f6, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100ad6fc, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100ad6ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad702, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad705, 0x5)   calld(0x10076574, -0x37196);          /* call 0x10076574 */
    II(0x100ad70a, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ad70d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ad710, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100ad713, 0x7)   test(memb_a32(ds, eax + 0x101c81d4), 0x2); /* test byte [eax+0x101c81d4], 0x2 */
    II(0x100ad71a, 0x2)   jzd(0x100ad72e, 0x12);                /* jz 0x100ad72e */
    II(0x100ad71c, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100ad721, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad724, 0x5)   calld(0x100ad02d, -0x6fc);            /* call 0x100ad02d */
    II(0x100ad729, 0x5)   jmpd(0x100ad863, 0x135);              /* jmp 0x100ad863 */
l_0x100ad72e:
    II(0x100ad72e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad731, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad734, 0x5)   calld(0x10076574, -0x371c5);          /* call 0x10076574 */
    II(0x100ad739, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100ad73e, 0x2)   jzd(0x100ad752, 0x12);                /* jz 0x100ad752 */
    II(0x100ad740, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad743, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad746, 0x5)   calld(0x10076574, -0x371d7);          /* call 0x10076574 */
    II(0x100ad74b, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x100ad750, 0x2)   jnzd(0x100ad78c, 0x3a);               /* jnz 0x100ad78c */
l_0x100ad752:
    II(0x100ad752, 0x5)   mov(ebx, 0x41);                       /* mov ebx, 0x41 */
    II(0x100ad757, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad75a, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100ad75d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ad760, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100ad765, 0x5)   calld(0x100ad632, -0x138);            /* call 0x100ad632 */
    II(0x100ad76a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ad76c, 0x2)   jnzd(0x100ad78a, 0x1c);               /* jnz 0x100ad78a */
    II(0x100ad76e, 0x5)   mov(ebx, 0x18);                       /* mov ebx, 0x18 */
    II(0x100ad773, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad776, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100ad779, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ad77c, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100ad781, 0x5)   calld(0x100ad632, -0x154);            /* call 0x100ad632 */
    II(0x100ad786, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ad788, 0x2)   jzd(0x100ad78c, 0x2);                 /* jz 0x100ad78c */
l_0x100ad78a:
    II(0x100ad78a, 0x2)   jmpd(0x100ad791, 0x5);                /* jmp 0x100ad791 */
l_0x100ad78c:
    II(0x100ad78c, 0x5)   jmpd(0x100ad81b, 0x8a);               /* jmp 0x100ad81b */
l_0x100ad791:
    II(0x100ad791, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100ad798, 0x2)   jmpd(0x100ad7a0, 0x6);                /* jmp 0x100ad7a0 */
l_0x100ad79a:
    II(0x100ad79a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad79d, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100ad7a0:
    II(0x100ad7a0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ad7a4, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ad7a7, 0x2)   jged(0x100ad803, 0x5a);               /* jge 0x100ad803 */
    II(0x100ad7a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad7ac, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ad7af, 0x4)   cmp(ax, memw_a32(ds, edx + 0x9));     /* cmp ax, [edx+0x9] */
    II(0x100ad7b3, 0x2)   jzd(0x100ad801, 0x4c);                /* jz 0x100ad801 */
    II(0x100ad7b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad7b8, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad7bb, 0x5)   calld(0x10076574, -0x3724c);          /* call 0x10076574 */
    II(0x100ad7c0, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x100ad7c3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ad7c6, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100ad7cb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ad7ce, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100ad7d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad7d4, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad7d7, 0x5)   calld(0x10076574, -0x37268);          /* call 0x10076574 */
    II(0x100ad7dc, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100ad7df, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ad7e2, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ad7e4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ad7e8, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ad7ee, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x100ad7f4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100ad7f6, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100ad7f8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ad7fd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ad7ff, 0x2)   jgd(0x100ad803, 0x2);                 /* jg 0x100ad803 */
l_0x100ad801:
    II(0x100ad801, 0x2)   jmpd(0x100ad79a, -0x69);              /* jmp 0x100ad79a */
l_0x100ad803:
    II(0x100ad803, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ad807, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ad80a, 0x2)   jnzd(0x100ad81b, 0xf);                /* jnz 0x100ad81b */
    II(0x100ad80c, 0x5)   mov(edx, 0x41);                       /* mov edx, 0x41 */
    II(0x100ad811, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad814, 0x5)   calld(0x100ad86c, 0x53);              /* call 0x100ad86c */
    II(0x100ad819, 0x2)   jmpd(0x100ad863, 0x48);               /* jmp 0x100ad863 */
l_0x100ad81b:
    II(0x100ad81b, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x100ad820, 0x5)   calld(0x100cdec2, 0x2069d);           /* call 0x100cdec2 */
    II(0x100ad825, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ad827, 0x2)   jzd(0x100ad845, 0x1c);                /* jz 0x100ad845 */
    II(0x100ad829, 0x5)   mov(ebx, 0x4e);                       /* mov ebx, 0x4e */
    II(0x100ad82e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad831, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100ad834, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ad837, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100ad83c, 0x5)   calld(0x100ad632, -0x20f);            /* call 0x100ad632 */
    II(0x100ad841, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ad843, 0x2)   jnzd(0x100ad847, 0x2);                /* jnz 0x100ad847 */
l_0x100ad845:
    II(0x100ad845, 0x2)   jmpd(0x100ad856, 0xf);                /* jmp 0x100ad856 */
l_0x100ad847:
    II(0x100ad847, 0x5)   mov(edx, 0x4e);                       /* mov edx, 0x4e */
    II(0x100ad84c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad84f, 0x5)   calld(0x100ad86c, 0x18);              /* call 0x100ad86c */
    II(0x100ad854, 0x2)   jmpd(0x100ad863, 0xd);                /* jmp 0x100ad863 */
l_0x100ad856:
    II(0x100ad856, 0x5)   mov(edx, 0x48);                       /* mov edx, 0x48 */
    II(0x100ad85b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad85e, 0x5)   calld(0x100ad86c, 0x9);               /* call 0x100ad86c */
l_0x100ad863:
    II(0x100ad863, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ad865, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ad866, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ad867, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ad868, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ad869, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ad86a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ad86b, 0x1)   retd();                               /* ret */
FUNC_END

