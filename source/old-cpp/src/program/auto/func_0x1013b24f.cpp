FUNC_BEGIN(0x1013b24f, 0x9805475ae559c76e, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xf9, 0xaa, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x4, 0x7d, 0x9, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x4c, 0, 0, 0, 0xbb, 0x44, 0xcc, 0x1a, 0x10, 0xba, 0x51, 0xcc, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xfb, 0xaa, 0x2, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x48, 0x39, 0xc2, 0x7d, 0x2a, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0x83, 0xc2, 0x4, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0x1, 0xd8, 0xe8, 0xe3, 0xf9, 0xff, 0xff, 0xeb, 0xbe, 0x8d, 0x45, 0xec, 0xe8, 0x58, 0xbb, 0xf3, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x89, 0xc1, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x6, 0x8d, 0x41, 0xfc, 0x1, 0xd8, 0xe8, 0xb9, 0xf9, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x2f, 0xf9, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x48, 0x4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1013b24f, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x1013b254, 0x5)   calld(sys_check_available_stack_size, 0x2aaf9); /* call 0x10165d52 */
    II(0x1013b259, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013b25a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013b25b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013b25c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013b25d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013b25e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013b260, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1013b266, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1013b269, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1013b26c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013b26f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013b272, 0x4)   cmp(ax, memw_a32(ds, edx + 0x4));     /* cmp ax, [edx+0x4] */
    II(0x1013b276, 0x2)   jged(0x1013b281, 0x9);                /* jge 0x1013b281 */
    II(0x1013b278, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1013b27f, 0x2)   jmpd(0x1013b29a, 0x19);               /* jmp 0x1013b29a */
l_0x1013b281:
    II(0x1013b281, 0x5)   mov(ecx, 0x4c);                       /* mov ecx, 0x4c */
    II(0x1013b286, 0x5)   mov(ebx, 0x101acc44);                 /* mov ebx, 0x101acc44 */ /* "smrtarry.cpp" */
    II(0x1013b28b, 0x5)   mov(edx, 0x101acc51);                 /* mov edx, 0x101acc51 */ /* "index < count" */
    II(0x1013b290, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013b292, 0x5)   calld(sys_assert, 0x2aafb);           /* call 0x10165d92 */
    II(0x1013b297, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x1013b29a:
    II(0x1013b29a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013b29d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013b2a0, 0x2)   jmpd(0x1013b2a8, 0x6);                /* jmp 0x1013b2a8 */
l_0x1013b2a2:
    II(0x1013b2a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013b2a5, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1013b2a8:
    II(0x1013b2a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013b2ab, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x1013b2ae, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013b2b1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1013b2b5, 0x1)   dec(eax);                             /* dec eax */
    II(0x1013b2b6, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1013b2b8, 0x2)   jged(0x1013b2e4, 0x2a);               /* jge 0x1013b2e4 */
    II(0x1013b2ba, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1013b2be, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1013b2c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013b2c4, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1013b2c7, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x1013b2ca, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013b2cc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1013b2d0, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1013b2d3, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1013b2d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013b2d8, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1013b2db, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1013b2dd, 0x5)   calld(0x1013acc5, -0x61d);            /* call 0x1013acc5 */
    II(0x1013b2e2, 0x2)   jmpd(0x1013b2a2, -0x42);              /* jmp 0x1013b2a2 */
l_0x1013b2e4:
    II(0x1013b2e4, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1013b2e7, 0x5)   calld(my_ctor_0x101b6edc, -0xc44a8);  /* call 0x10076e44 */
    II(0x1013b2ec, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1013b2ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013b2f1, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x1013b2f4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013b2f7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1013b2fa, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1013b2fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013b2ff, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x1013b302, 0x3)   lea(eax, ecx - 0x4);                  /* lea eax, [ecx-0x4] */
    II(0x1013b305, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1013b307, 0x5)   calld(0x1013acc5, -0x647);            /* call 0x1013acc5 */
    II(0x1013b30c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013b30e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1013b311, 0x5)   calld(my_dtor_0x101b6edc, -0x6d1);    /* call 0x1013ac45 */
    II(0x1013b316, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013b319, 0x4)   dec(memw_a32(ds, eax + 0x4));         /* dec word [eax+0x4] */
    II(0x1013b31d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013b31f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013b320, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013b321, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013b322, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013b323, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013b324, 0x1)   retd();                               /* ret */
FUNC_END

