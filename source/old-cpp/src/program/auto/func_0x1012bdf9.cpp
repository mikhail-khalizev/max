FUNC_BEGIN(0x1012bdf9, 0xc7b9f1e5a559d85f, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0x4f, 0x9f, 0x3, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x8, 0x61, 0xf4, 0xff, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x74, 0x13, 0x8b, 0x45, 0xf4, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x13, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xa1, 0x61, 0xf4, 0xff, 0x98, 0x85, 0xc0, 0x74, 0x5, 0xe9, 0x23, 0x2, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x37, 0x62, 0xf4, 0xff, 0xe8, 0x95, 0xa1, 0xf4, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xf4, 0xe8, 0xfa, 0x64, 0xf4, 0xff, 0x8b, 0x45, 0xde, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x7d, 0x38, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf0, 0xf7, 0xd8, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xb8, 0x91, 0x2, 0, 0, 0x50, 0xb8, 0x90, 0x2, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0xb8, 0xdd, 0x86, 0x1a, 0x10, 0xe8, 0x67, 0xfe, 0xff, 0xff, 0xeb, 0x36, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0x8b, 0x45, 0xe8, 0xf7, 0xd8, 0x98, 0x50, 0xb8, 0x91, 0x2, 0, 0, 0x50, 0xb8, 0x90, 0x2, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0xb8, 0xe3, 0x86, 0x1a, 0x10, 0xe8, 0x2f, 0xfe, 0xff, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x16, 0xa4, 0xf4, 0xff, 0x8d, 0x5d, 0xd4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x8a, 0xa5, 0xf4, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd4, 0xe8, 0xc0, 0xac, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x2f, 0xee, 0, 0, 0x84, 0xc0, 0xf, 0x84, 0x7c, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x4e, 0xa4, 0xf4, 0xff, 0xe8, 0xad, 0xa2, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0xe8, 0xa3, 0xa2, 0xf4, 0xff, 0x39, 0xc2, 0x75, 0x5c, 0x8d, 0x45, 0xd4, 0xe8, 0x33, 0xa4, 0xf4, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xb6, 0x5f, 0xf4, 0xff, 0x66, 0x89, 0x45, 0xde, 0xf, 0xbf, 0x45, 0xde, 0x85, 0xc0, 0x7d, 0x8, 0x8b, 0x45, 0xde, 0x29, 0x45, 0xf0, 0xeb, 0x6, 0x8b, 0x45, 0xde, 0x1, 0x45, 0xec, 0xe8, 0x7d, 0xa0, 0xf4, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xd4, 0xe8, 0x2e, 0xa4, 0xf4, 0xff, 0xe8, 0xdd, 0x63, 0xf4, 0xff, 0xf, 0xbf, 0x45, 0xde, 0x85, 0xc0, 0x7d, 0x8, 0x8b, 0x45, 0xde, 0x29, 0x45, 0xe4, 0xeb, 0x6, 0x8b, 0x45, 0xde, 0x1, 0x45, 0xe8, 0xe9, 0x6a, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x5a, 0x5f, 0xf4, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x36, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0xb8, 0x91, 0x2, 0, 0, 0x50, 0xb8, 0x90, 0x2, 0, 0, 0x50, 0xb9, 0x2, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0xb8, 0xe9, 0x86, 0x1a, 0x10, 0xe8, 0x2c, 0xfd, 0xff, 0xff, 0xeb, 0x68, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xb8, 0x91, 0x2, 0, 0, 0x50, 0xb8, 0x90, 0x2, 0, 0, 0x50, 0xb9, 0x2, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0xb8, 0xef, 0x86, 0x1a, 0x10, 0xe8, 0xf6, 0xfc, 0xff, 0xff, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0xb8, 0x91, 0x2, 0, 0, 0x50, 0xb8, 0x90, 0x2, 0, 0, 0x50, 0xb9, 0x3, 0, 0, 0, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0xb8, 0xf5, 0x86, 0x1a, 0x10, 0xe8, 0xc2, 0xfc, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xeb, 0x9e, 0xf4, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1012bdf9, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x1012bdfe, 0x5)   calld(sys_check_available_stack_size, 0x39f4f); /* call 0x10165d52 */
    II(0x1012be03, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012be04, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012be05, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012be06, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012be07, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012be09, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x1012be0f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1012be12, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1012be15, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x1012be18, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012be1b, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1012be1e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012be21, 0x5)   calld(0x10071f2e, -0xb9ef8);          /* call 0x10071f2e */
    II(0x1012be26, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012be29, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012be2d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012be2f, 0x2)   jzd(0x1012be44, 0x13);                /* jz 0x1012be44 */
    II(0x1012be31, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012be34, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012be36, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1012be39, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012be3b, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1012be40, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012be42, 0x2)   jzd(0x1012be46, 0x2);                 /* jz 0x1012be46 */
l_0x1012be44:
    II(0x1012be44, 0x2)   jmpd(0x1012be59, 0x13);               /* jmp 0x1012be59 */
l_0x1012be46:
    II(0x1012be46, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012be49, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1012be4c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012be4f, 0x5)   calld(0x10071ff5, -0xb9e5f);          /* call 0x10071ff5 */
    II(0x1012be54, 0x1)   cwde();                               /* cwde */
    II(0x1012be55, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012be57, 0x2)   jzd(0x1012be5e, 0x5);                 /* jz 0x1012be5e */
l_0x1012be59:
    II(0x1012be59, 0x5)   jmpd(0x1012c081, 0x223);              /* jmp 0x1012c081 */
l_0x1012be5e:
    II(0x1012be5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012be61, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1012be64, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1012be6b, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1012be72, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1012be75, 0x5)   calld(0x100720b1, -0xb9dc9);          /* call 0x100720b1 */
    II(0x1012be7a, 0x5)   calld(0x10076014, -0xb5e6b);          /* call 0x10076014 */
    II(0x1012be7f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1012be81, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1012be83, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x1012be86, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012be89, 0x5)   calld(0x10072388, -0xb9b06);          /* call 0x10072388 */
    II(0x1012be8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1012be91, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1012be94, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012be98, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012be9a, 0x2)   jged(0x1012bed4, 0x38);               /* jge 0x1012bed4 */
    II(0x1012be9c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012be9e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012be9f, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012bea4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bea5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012bea8, 0x2)   neg(eax);                             /* neg eax */
    II(0x1012beaa, 0x1)   cwde();                               /* cwde */
    II(0x1012beab, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012beac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1012beb0, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012beb1, 0x5)   mov(eax, 0x291);                      /* mov eax, 0x291 */
    II(0x1012beb6, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012beb7, 0x5)   mov(eax, 0x290);                      /* mov eax, 0x290 */
    II(0x1012bebc, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bebd, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1012bec2, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1012bec5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1012bec8, 0x5)   mov(eax, 0x101a86dd);                 /* mov eax, 0x101a86dd */ /* "Power" */
    II(0x1012becd, 0x5)   calld(0x1012bd39, -0x199);            /* call 0x1012bd39 */
    II(0x1012bed2, 0x2)   jmpd(0x1012bf0a, 0x36);               /* jmp 0x1012bf0a */
l_0x1012bed4:
    II(0x1012bed4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012bed6, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bed7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012bedc, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bedd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012bee1, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bee2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1012bee5, 0x2)   neg(eax);                             /* neg eax */
    II(0x1012bee7, 0x1)   cwde();                               /* cwde */
    II(0x1012bee8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bee9, 0x5)   mov(eax, 0x291);                      /* mov eax, 0x291 */
    II(0x1012beee, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012beef, 0x5)   mov(eax, 0x290);                      /* mov eax, 0x290 */
    II(0x1012bef4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bef5, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1012befa, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1012befd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1012bf00, 0x5)   mov(eax, 0x101a86e3);                 /* mov eax, 0x101a86e3 */ /* "Usage" */
    II(0x1012bf05, 0x5)   calld(0x1012bd39, -0x1d1);            /* call 0x1012bd39 */
l_0x1012bf0a:
    II(0x1012bf0a, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1012bf11, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1012bf18, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1012bf1d, 0x5)   calld(0x10076338, -0xb5bea);          /* call 0x10076338 */
    II(0x1012bf22, 0x3)   lea(ebx, ebp - 0x2c);                 /* lea ebx, [ebp-0x2c] */
    II(0x1012bf25, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012bf27, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1012bf29, 0x5)   calld(0x100764b8, -0xb5a76);          /* call 0x100764b8 */
    II(0x1012bf2e, 0x2)   jmpd(0x1012bf38, 0x8);                /* jmp 0x1012bf38 */
l_0x1012bf30:
    II(0x1012bf30, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1012bf33, 0x5)   calld(0x10076bf8, -0xb5340);          /* call 0x10076bf8 */
l_0x1012bf38:
    II(0x1012bf38, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012bf3a, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1012bf3d, 0x5)   calld(0x1013ad71, 0xee2f);            /* call 0x1013ad71 */
    II(0x1012bf42, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012bf44, 0x6)   jzd(0x1012bfc6, 0x7c);                /* jz dword 0x1012bfc6 */
    II(0x1012bf4a, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1012bf4d, 0x5)   calld(0x100763a0, -0xb5bb2);          /* call 0x100763a0 */
    II(0x1012bf52, 0x5)   calld(0x10076204, -0xb5d53);          /* call 0x10076204 */
    II(0x1012bf57, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012bf59, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012bf5c, 0x5)   calld(0x10076204, -0xb5d5d);          /* call 0x10076204 */
    II(0x1012bf61, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012bf63, 0x2)   jnzd(0x1012bfc1, 0x5c);               /* jnz 0x1012bfc1 */
    II(0x1012bf65, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1012bf68, 0x5)   calld(0x100763a0, -0xb5bcd);          /* call 0x100763a0 */
    II(0x1012bf6d, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1012bf70, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012bf73, 0x5)   calld(0x10071f2e, -0xba04a);          /* call 0x10071f2e */
    II(0x1012bf78, 0x4)   mov(memw_a32(ss, ebp - 0x22), ax);    /* mov [ebp-0x22], ax */
    II(0x1012bf7c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x22)); /* movsx eax, word [ebp-0x22] */
    II(0x1012bf80, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012bf82, 0x2)   jged(0x1012bf8c, 0x8);                /* jge 0x1012bf8c */
    II(0x1012bf84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1012bf87, 0x3)   sub(memd_a32(ss, ebp - 0x10), eax);   /* sub [ebp-0x10], eax */
    II(0x1012bf8a, 0x2)   jmpd(0x1012bf92, 0x6);                /* jmp 0x1012bf92 */
l_0x1012bf8c:
    II(0x1012bf8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1012bf8f, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
l_0x1012bf92:
    II(0x1012bf92, 0x5)   calld(0x10076014, -0xb5f83);          /* call 0x10076014 */
    II(0x1012bf97, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1012bf99, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1012bf9b, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x1012bf9e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1012bfa1, 0x5)   calld(0x100763d4, -0xb5bd2);          /* call 0x100763d4 */
    II(0x1012bfa6, 0x5)   calld(0x10072388, -0xb9c23);          /* call 0x10072388 */
    II(0x1012bfab, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x22)); /* movsx eax, word [ebp-0x22] */
    II(0x1012bfaf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012bfb1, 0x2)   jged(0x1012bfbb, 0x8);                /* jge 0x1012bfbb */
    II(0x1012bfb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1012bfb6, 0x3)   sub(memd_a32(ss, ebp - 0x1c), eax);   /* sub [ebp-0x1c], eax */
    II(0x1012bfb9, 0x2)   jmpd(0x1012bfc1, 0x6);                /* jmp 0x1012bfc1 */
l_0x1012bfbb:
    II(0x1012bfbb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1012bfbe, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
l_0x1012bfc1:
    II(0x1012bfc1, 0x5)   jmpd(0x1012bf30, -0x96);              /* jmp 0x1012bf30 */
l_0x1012bfc6:
    II(0x1012bfc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012bfc9, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1012bfcc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012bfcf, 0x5)   calld(0x10071f2e, -0xba0a6);          /* call 0x10071f2e */
    II(0x1012bfd4, 0x1)   cwde();                               /* cwde */
    II(0x1012bfd5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012bfd7, 0x2)   jled(0x1012c00f, 0x36);               /* jle 0x1012c00f */
    II(0x1012bfd9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012bfdb, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bfdc, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012bfe1, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bfe2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012bfe6, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bfe7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1012bfeb, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bfec, 0x5)   mov(eax, 0x291);                      /* mov eax, 0x291 */
    II(0x1012bff1, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bff2, 0x5)   mov(eax, 0x290);                      /* mov eax, 0x290 */
    II(0x1012bff7, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bff8, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x1012bffd, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1012c000, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1012c003, 0x5)   mov(eax, 0x101a86e9);                 /* mov eax, 0x101a86e9 */ /* "Total" */
    II(0x1012c008, 0x5)   calld(0x1012bd39, -0x2d4);            /* call 0x1012bd39 */
    II(0x1012c00d, 0x2)   jmpd(0x1012c077, 0x68);               /* jmp 0x1012c077 */
l_0x1012c00f:
    II(0x1012c00f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012c011, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c012, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012c017, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c018, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012c01c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c01d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1012c021, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c022, 0x5)   mov(eax, 0x291);                      /* mov eax, 0x291 */
    II(0x1012c027, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c028, 0x5)   mov(eax, 0x290);                      /* mov eax, 0x290 */
    II(0x1012c02d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c02e, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x1012c033, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1012c036, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1012c039, 0x5)   mov(eax, 0x101a86ef);                 /* mov eax, 0x101a86ef */ /* "Total" */
    II(0x1012c03e, 0x5)   calld(0x1012bd39, -0x30a);            /* call 0x1012bd39 */
    II(0x1012c043, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012c045, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c046, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012c04b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c04c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012c050, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c051, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1012c055, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c056, 0x5)   mov(eax, 0x291);                      /* mov eax, 0x291 */
    II(0x1012c05b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c05c, 0x5)   mov(eax, 0x290);                      /* mov eax, 0x290 */
    II(0x1012c061, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012c062, 0x5)   mov(ecx, 0x3);                        /* mov ecx, 0x3 */
    II(0x1012c067, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1012c06a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1012c06d, 0x5)   mov(eax, 0x101a86f5);                 /* mov eax, 0x101a86f5 */ /* "Usage" */
    II(0x1012c072, 0x5)   calld(0x1012bd39, -0x33e);            /* call 0x1012bd39 */
l_0x1012c077:
    II(0x1012c077, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012c079, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1012c07c, 0x5)   calld(0x10075f6c, -0xb6115);          /* call 0x10075f6c */
l_0x1012c081:
    II(0x1012c081, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012c083, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012c084, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012c085, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012c086, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012c087, 0x1)   retd();                               /* ret */
FUNC_END

