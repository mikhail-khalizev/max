FUNC_BEGIN(0x100ebd26, 0x1d4b1bf6160b6630, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x22, 0xa0, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xed, 0xa5, 0xf8, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x61, 0xa7, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x97, 0xae, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x6, 0xf0, 0x4, 0, 0x84, 0xc0, 0xf, 0x84, 0x71, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x25, 0xa6, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0x53, 0x8d, 0x45, 0xe8, 0xe8, 0x10, 0xa6, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x17, 0x74, 0xf, 0x8d, 0x45, 0xe8, 0xe8, 0x1, 0xa6, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x18, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xe8, 0xe8, 0xf0, 0xa5, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x19, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xe8, 0xe8, 0xdf, 0xa5, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x1b, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xe8, 0xe8, 0xce, 0xa5, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x20, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0x5, 0xe9, 0x75, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x23, 0xef, 0x4, 0, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x6c, 0xa1, 0xf8, 0xff, 0xe9, 0x6a, 0x1, 0, 0, 0xba, 0x2, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0xe4, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xec, 0xba, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0xd3, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xe4, 0x1, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x8, 0x7c, 0xd, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x18, 0xf, 0x8d, 0x80, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xe3, 0xa4, 0xf8, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xdb, 0xa5, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x8d, 0xad, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xfc, 0xee, 0x4, 0, 0x84, 0xc0, 0x74, 0x2a, 0x8d, 0x45, 0xe8, 0xe8, 0x1f, 0xa5, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xe8, 0xe8, 0xa, 0xa5, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0xc0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x64, 0xee, 0x4, 0, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xad, 0xa0, 0xf8, 0xff, 0xe9, 0xab, 0, 0, 0, 0xc7, 0x45, 0xe4, 0x2, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x63, 0xa4, 0xf8, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x5b, 0xa5, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xd, 0xad, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x7c, 0xee, 0x4, 0, 0x84, 0xc0, 0x74, 0x47, 0x8d, 0x45, 0xe8, 0xe8, 0x9f, 0xa4, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0x18, 0x8d, 0x45, 0xe8, 0xe8, 0x8a, 0xa4, 0xf8, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xd, 0x60, 0xf8, 0xff, 0x98, 0x85, 0xc0, 0x7c, 0x2, 0xeb, 0x16, 0x8d, 0x45, 0xe8, 0xe8, 0x70, 0xa4, 0xf8, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xf3, 0x5f, 0xf8, 0xff, 0x29, 0x45, 0xf4, 0xeb, 0xa3, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xe4, 0x7c, 0x6, 0xc6, 0x45, 0xe0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe0, 0, 0x8a, 0x45, 0xe0, 0x88, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x9, 0xa0, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xfd, 0x9f, 0xf8, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ebd26, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100ebd2b, 0x5)   calld(sys_check_available_stack_size, 0x7a022); /* call 0x10165d52 */
    II(0x100ebd30, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ebd31, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ebd32, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ebd33, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ebd34, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ebd35, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ebd36, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ebd38, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100ebd3e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ebd41, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100ebd46, 0x5)   calld(0x10076338, -0x75a13);          /* call 0x10076338 */
    II(0x100ebd4b, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100ebd4e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ebd50, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ebd52, 0x5)   calld(0x100764b8, -0x7589f);          /* call 0x100764b8 */
    II(0x100ebd57, 0x2)   jmpd(0x100ebd61, 0x8);                /* jmp 0x100ebd61 */
l_0x100ebd59:
    II(0x100ebd59, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebd5c, 0x5)   calld(0x10076bf8, -0x75169);          /* call 0x10076bf8 */
l_0x100ebd61:
    II(0x100ebd61, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebd63, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebd66, 0x5)   calld(0x1013ad71, 0x4f006);           /* call 0x1013ad71 */
    II(0x100ebd6b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebd6d, 0x6)   jzd(0x100ebde4, 0x71);                /* jz dword 0x100ebde4 */
    II(0x100ebd73, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebd76, 0x5)   calld(0x100763a0, -0x759db);          /* call 0x100763a0 */
    II(0x100ebd7b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebd7d, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ebd80, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ebd84, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ebd86, 0x2)   jnzd(0x100ebddb, 0x53);               /* jnz 0x100ebddb */
    II(0x100ebd88, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebd8b, 0x5)   calld(0x100763a0, -0x759f0);          /* call 0x100763a0 */
    II(0x100ebd90, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x17);   /* cmp word [eax+0x8], 0x17 */
    II(0x100ebd95, 0x2)   jzd(0x100ebda6, 0xf);                 /* jz 0x100ebda6 */
    II(0x100ebd97, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebd9a, 0x5)   calld(0x100763a0, -0x759ff);          /* call 0x100763a0 */
    II(0x100ebd9f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x18);   /* cmp word [eax+0x8], 0x18 */
    II(0x100ebda4, 0x2)   jnzd(0x100ebda8, 0x2);                /* jnz 0x100ebda8 */
l_0x100ebda6:
    II(0x100ebda6, 0x2)   jmpd(0x100ebdb7, 0xf);                /* jmp 0x100ebdb7 */
l_0x100ebda8:
    II(0x100ebda8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebdab, 0x5)   calld(0x100763a0, -0x75a10);          /* call 0x100763a0 */
    II(0x100ebdb0, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x19);   /* cmp word [eax+0x8], 0x19 */
    II(0x100ebdb5, 0x2)   jnzd(0x100ebdb9, 0x2);                /* jnz 0x100ebdb9 */
l_0x100ebdb7:
    II(0x100ebdb7, 0x2)   jmpd(0x100ebdc8, 0xf);                /* jmp 0x100ebdc8 */
l_0x100ebdb9:
    II(0x100ebdb9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebdbc, 0x5)   calld(0x100763a0, -0x75a21);          /* call 0x100763a0 */
    II(0x100ebdc1, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1b);   /* cmp word [eax+0x8], 0x1b */
    II(0x100ebdc6, 0x2)   jnzd(0x100ebdca, 0x2);                /* jnz 0x100ebdca */
l_0x100ebdc8:
    II(0x100ebdc8, 0x2)   jmpd(0x100ebdd9, 0xf);                /* jmp 0x100ebdd9 */
l_0x100ebdca:
    II(0x100ebdca, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebdcd, 0x5)   calld(0x100763a0, -0x75a32);          /* call 0x100763a0 */
    II(0x100ebdd2, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x20);   /* cmp word [eax+0x8], 0x20 */
    II(0x100ebdd7, 0x2)   jnzd(0x100ebddb, 0x2);                /* jnz 0x100ebddb */
l_0x100ebdd9:
    II(0x100ebdd9, 0x2)   jmpd(0x100ebddd, 0x2);                /* jmp 0x100ebddd */
l_0x100ebddb:
    II(0x100ebddb, 0x2)   jmpd(0x100ebddf, 0x2);                /* jmp 0x100ebddf */
l_0x100ebddd:
    II(0x100ebddd, 0x2)   jmpd(0x100ebde4, 0x5);                /* jmp 0x100ebde4 */
l_0x100ebddf:
    II(0x100ebddf, 0x5)   jmpd(0x100ebd59, -0x8b);              /* jmp 0x100ebd59 */
l_0x100ebde4:
    II(0x100ebde4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebde6, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebde9, 0x5)   calld(0x1013ad11, 0x4ef23);           /* call 0x1013ad11 */
    II(0x100ebdee, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebdf0, 0x2)   jzd(0x100ebe05, 0x13);                /* jz 0x100ebe05 */
    II(0x100ebdf2, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100ebdf6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebdf8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebdfb, 0x5)   calld(0x10075f6c, -0x75e94);          /* call 0x10075f6c */
    II(0x100ebe00, 0x5)   jmpd(0x100ebf6f, 0x16a);              /* jmp 0x100ebf6f */
l_0x100ebe05:
    II(0x100ebe05, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100ebe0a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ebe0e, 0x5)   calld(0x100ebbf7, -0x21c);            /* call 0x100ebbf7 */
    II(0x100ebe13, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100ebe16, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100ebe1b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ebe1f, 0x5)   calld(0x100ebbf7, -0x22d);            /* call 0x100ebbf7 */
    II(0x100ebe24, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ebe27, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x1);   /* mov dword [ebp-0x1c], 0x1 */
    II(0x100ebe2e, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100ebe35, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ebe39, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100ebe3c, 0x2)   jld(0x100ebe4b, 0xd);                 /* jl 0x100ebe4b */
    II(0x100ebe3e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ebe42, 0x3)   cmp(eax, 0x18);                       /* cmp eax, 0x18 */
    II(0x100ebe45, 0x6)   jged(0x100ebecb, 0x80);               /* jge dword 0x100ebecb */
l_0x100ebe4b:
    II(0x100ebe4b, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100ebe50, 0x5)   calld(0x10076338, -0x75b1d);          /* call 0x10076338 */
    II(0x100ebe55, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100ebe58, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ebe5a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ebe5c, 0x5)   calld(0x1007643c, -0x75a25);          /* call 0x1007643c */
    II(0x100ebe61, 0x2)   jmpd(0x100ebe6b, 0x8);                /* jmp 0x100ebe6b */
l_0x100ebe63:
    II(0x100ebe63, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebe66, 0x5)   calld(0x10076bf8, -0x75273);          /* call 0x10076bf8 */
l_0x100ebe6b:
    II(0x100ebe6b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebe6d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebe70, 0x5)   calld(0x1013ad71, 0x4eefc);           /* call 0x1013ad71 */
    II(0x100ebe75, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebe77, 0x2)   jzd(0x100ebea3, 0x2a);                /* jz 0x100ebea3 */
    II(0x100ebe79, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebe7c, 0x5)   calld(0x100763a0, -0x75ae1);          /* call 0x100763a0 */
    II(0x100ebe81, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebe83, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ebe86, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ebe8a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ebe8c, 0x2)   jnzd(0x100ebe9d, 0xf);                /* jnz 0x100ebe9d */
    II(0x100ebe8e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebe91, 0x5)   calld(0x100763a0, -0x75af6);          /* call 0x100763a0 */
    II(0x100ebe96, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x100ebe9b, 0x2)   jzd(0x100ebe9f, 0x2);                 /* jz 0x100ebe9f */
l_0x100ebe9d:
    II(0x100ebe9d, 0x2)   jmpd(0x100ebea1, 0x2);                /* jmp 0x100ebea1 */
l_0x100ebe9f:
    II(0x100ebe9f, 0x2)   jmpd(0x100ebea3, 0x2);                /* jmp 0x100ebea3 */
l_0x100ebea1:
    II(0x100ebea1, 0x2)   jmpd(0x100ebe63, -0x40);              /* jmp 0x100ebe63 */
l_0x100ebea3:
    II(0x100ebea3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebea5, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebea8, 0x5)   calld(0x1013ad11, 0x4ee64);           /* call 0x1013ad11 */
    II(0x100ebead, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebeaf, 0x2)   jzd(0x100ebec4, 0x13);                /* jz 0x100ebec4 */
    II(0x100ebeb1, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100ebeb5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebeb7, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebeba, 0x5)   calld(0x10075f6c, -0x75f53);          /* call 0x10075f6c */
    II(0x100ebebf, 0x5)   jmpd(0x100ebf6f, 0xab);               /* jmp 0x100ebf6f */
l_0x100ebec4:
    II(0x100ebec4, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x2);   /* mov dword [ebp-0x1c], 0x2 */
l_0x100ebecb:
    II(0x100ebecb, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100ebed0, 0x5)   calld(0x10076338, -0x75b9d);          /* call 0x10076338 */
    II(0x100ebed5, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100ebed8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ebeda, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ebedc, 0x5)   calld(0x1007643c, -0x75aa5);          /* call 0x1007643c */
    II(0x100ebee1, 0x2)   jmpd(0x100ebeeb, 0x8);                /* jmp 0x100ebeeb */
l_0x100ebee3:
    II(0x100ebee3, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebee6, 0x5)   calld(0x10076bf8, -0x752f3);          /* call 0x10076bf8 */
l_0x100ebeeb:
    II(0x100ebeeb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebeed, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebef0, 0x5)   calld(0x1013ad71, 0x4ee7c);           /* call 0x1013ad71 */
    II(0x100ebef5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebef7, 0x2)   jzd(0x100ebf40, 0x47);                /* jz 0x100ebf40 */
    II(0x100ebef9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebefc, 0x5)   calld(0x100763a0, -0x75b61);          /* call 0x100763a0 */
    II(0x100ebf01, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebf03, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ebf06, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ebf0a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ebf0c, 0x2)   jnzd(0x100ebf26, 0x18);               /* jnz 0x100ebf26 */
    II(0x100ebf0e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebf11, 0x5)   calld(0x100763a0, -0x75b76);          /* call 0x100763a0 */
    II(0x100ebf16, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ebf19, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ebf1c, 0x5)   calld(0x10071f2e, -0x79ff3);          /* call 0x10071f2e */
    II(0x100ebf21, 0x1)   cwde();                               /* cwde */
    II(0x100ebf22, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ebf24, 0x2)   jld(0x100ebf28, 0x2);                 /* jl 0x100ebf28 */
l_0x100ebf26:
    II(0x100ebf26, 0x2)   jmpd(0x100ebf3e, 0x16);               /* jmp 0x100ebf3e */
l_0x100ebf28:
    II(0x100ebf28, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebf2b, 0x5)   calld(0x100763a0, -0x75b90);          /* call 0x100763a0 */
    II(0x100ebf30, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ebf33, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ebf36, 0x5)   calld(0x10071f2e, -0x7a00d);          /* call 0x10071f2e */
    II(0x100ebf3b, 0x3)   sub(memd_a32(ss, ebp - 0xc), eax);    /* sub [ebp-0xc], eax */
l_0x100ebf3e:
    II(0x100ebf3e, 0x2)   jmpd(0x100ebee3, -0x5d);              /* jmp 0x100ebee3 */
l_0x100ebf40:
    II(0x100ebf40, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ebf43, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1c));    /* cmp ax, [ebp-0x1c] */
    II(0x100ebf47, 0x2)   jld(0x100ebf4f, 0x6);                 /* jl 0x100ebf4f */
    II(0x100ebf49, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
    II(0x100ebf4d, 0x2)   jmpd(0x100ebf53, 0x4);                /* jmp 0x100ebf53 */
l_0x100ebf4f:
    II(0x100ebf4f, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0);     /* mov byte [ebp-0x20], 0x0 */
l_0x100ebf53:
    II(0x100ebf53, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x100ebf56, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x100ebf59, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebf5b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ebf5e, 0x5)   calld(0x10075f6c, -0x75ff7);          /* call 0x10075f6c */
    II(0x100ebf63, 0x2)   jmpd(0x100ebf6f, 0xa);                /* jmp 0x100ebf6f */
//  II(0x100ebf65, 0xa)   /* Недостижимый код. */
l_0x100ebf6f:
    II(0x100ebf6f, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100ebf72, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ebf74, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ebf75, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ebf76, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ebf77, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ebf78, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ebf79, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ebf7a, 0x1)   retd();                               /* ret */
FUNC_END

