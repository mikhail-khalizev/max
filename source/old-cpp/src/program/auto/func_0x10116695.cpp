FUNC_BEGIN(0x10116695, 0x4b7362f01145e3e, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xb3, 0xf6, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x41, 0xe8, 0xab, 0x18, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x25, 0xc1, 0xfa, 0x10, 0x6b, 0xd2, 0xe, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2d, 0x83, 0xc0, 0x14, 0x1, 0xd0, 0x89, 0x45, 0xe8, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x49, 0xf, 0xaf, 0xc2, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x3d, 0xaf, 0, 0, 0, 0x7d, 0x25, 0xf, 0xbf, 0x55, 0xec, 0xb8, 0xaf, 0, 0, 0, 0x29, 0xd0, 0x89, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x25, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xc2, 0x1, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x4d, 0x8b, 0x55, 0xfc, 0x66, 0x3, 0x42, 0x4b, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x49, 0x7e, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x49, 0x89, 0x45, 0xf8, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x4d, 0x89, 0x45, 0xf0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xf8, 0xf, 0x8d, 0xb6, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x40, 0, 0x74, 0x4a, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x45, 0x1, 0xd0, 0xe8, 0x3c, 0x30, 0xf7, 0xff, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x3d, 0x9, 0x1, 0, 0, 0x7e, 0x7, 0xc7, 0x45, 0xf4, 0x9, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0xb8, 0x9, 0x1, 0, 0, 0x29, 0xd0, 0x89, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xf4, 0x68, 0xff, 0, 0x1, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x48, 0x25, 0xc1, 0xf9, 0x10, 0xbb, 0x9, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x45, 0x1, 0xd0, 0xe8, 0xe1, 0x2f, 0xf7, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x70, 0x4b, 0xc1, 0xfe, 0x10, 0xf, 0xbf, 0x45, 0xf0, 0x29, 0xf0, 0x89, 0xc6, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0xf, 0xaf, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xf0, 0xf, 0xbf, 0x45, 0xf4, 0x3, 0x45, 0xe8, 0x1, 0xf0, 0xff, 0x15, 0xec, 0xdd, 0x1b, 0x10, 0xe9, 0x37, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x29, 0xe8, 0x74, 0xc, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10116695, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x1011669a, 0x5)   calld(sys_check_available_stack_size, 0x4f6b3); /* call 0x10165d52 */
    II(0x1011669f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101166a0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101166a1, 0x1)   pushd(edx);                           /* push edx */
    II(0x101166a2, 0x1)   pushd(esi);                           /* push esi */
    II(0x101166a3, 0x1)   pushd(edi);                           /* push edi */
    II(0x101166a4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101166a5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101166a7, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x101166ad, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x101166b0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101166b3, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x101166b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101166b9, 0x3)   mov(eax, memd_a32(ds, eax + 0x41));   /* mov eax, [eax+0x41] */
    II(0x101166bc, 0x5)   calld(0x100d7f6c, -0x3e755);          /* call 0x100d7f6c */
    II(0x101166c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101166c4, 0x3)   mov(edx, memd_a32(ds, eax + 0x25));   /* mov edx, [eax+0x25] */
    II(0x101166c7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101166ca, 0x3)   imul(edx, edx, 0xe);                  /* imul edx, edx, 0xe */
    II(0x101166cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101166d0, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x101166d3, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x101166d6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101166d8, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x101166db, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x101166e1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101166e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101166e6, 0x4)   mov(ax, memw_a32(ds, eax + 0x49));    /* mov ax, [eax+0x49] */
    II(0x101166ea, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x101166ed, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101166f0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101166f4, 0x5)   cmp(eax, 0xaf);                       /* cmp eax, 0xaf */
    II(0x101166f9, 0x2)   jged(0x10116720, 0x25);               /* jge 0x10116720 */
    II(0x101166fb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x101166ff, 0x5)   mov(eax, 0xaf);                       /* mov eax, 0xaf */
    II(0x10116704, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10116706, 0x2)   mov(edx, eax);                        /* mov edx, eax */
//    II(0x10116708, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1011670a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1011670d, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1011670f, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10116711, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10116714, 0x3)   mov(edx, memd_a32(ds, edx + 0x25));   /* mov edx, [edx+0x25] */
    II(0x10116717, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011671a, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1011671d, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
l_0x10116720:
    II(0x10116720, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10116723, 0x4)   mov(ax, memw_a32(ds, eax + 0x4d));    /* mov ax, [eax+0x4d] */
    II(0x10116727, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1011672a, 0x4)   add(ax, memw_a32(ds, edx + 0x4b));    /* add ax, [edx+0x4b] */
    II(0x1011672e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x10116731, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10116734, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10116737, 0x4)   cmp(ax, memw_a32(ds, edx + 0x49));    /* cmp ax, [edx+0x49] */
    II(0x1011673b, 0x2)   jled(0x10116747, 0xa);                /* jle 0x10116747 */
    II(0x1011673d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10116740, 0x4)   mov(ax, memw_a32(ds, eax + 0x49));    /* mov ax, [eax+0x49] */
    II(0x10116744, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
l_0x10116747:
    II(0x10116747, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1011674e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10116751, 0x4)   mov(ax, memw_a32(ds, eax + 0x4d));    /* mov ax, [eax+0x4d] */
    II(0x10116755, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10116758, 0x2)   jmpd(0x10116760, 0x6);                /* jmp 0x10116760 */
l_0x1011675a:
    II(0x1011675a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011675d, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x10116760:
    II(0x10116760, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10116763, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10116767, 0x6)   jged(0x10116823, 0xb6);               /* jge dword 0x10116823 */
    II(0x1011676d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10116770, 0x4)   cmp(memb_a32(ds, eax + 0x40), 0);     /* cmp byte [eax+0x40], 0x0 */
    II(0x10116774, 0x2)   jzd(0x101167c0, 0x4a);                /* jz 0x101167c0 */
    II(0x10116776, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1011677a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011677d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011677f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10116782, 0x3)   mov(eax, memd_a32(ds, eax + 0x45));   /* mov eax, [eax+0x45] */
    II(0x10116785, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10116787, 0x5)   calld(my_strobj_c_str_v2, -0x8cfc4);  /* call 0x100897c8 */
    II(0x1011678c, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x10116792, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10116795, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10116799, 0x5)   cmp(eax, 0x109);                      /* cmp eax, 0x109 */
    II(0x1011679e, 0x2)   jled(0x101167a7, 0x7);                /* jle 0x101167a7 */
    II(0x101167a0, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x109);  /* mov dword [ebp-0xc], 0x109 */
l_0x101167a7:
    II(0x101167a7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x101167ab, 0x5)   mov(eax, 0x109);                      /* mov eax, 0x109 */
    II(0x101167b0, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x101167b2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
//    II(0x101167b4, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101167b6, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101167b9, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x101167bb, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x101167bd, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x101167c0:
    II(0x101167c0, 0x5)   pushd(0x100ff);                       /* push dword 0x100ff */
    II(0x101167c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101167c8, 0x3)   mov(ecx, memd_a32(ds, eax + 0x25));   /* mov ecx, [eax+0x25] */
    II(0x101167cb, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x101167ce, 0x5)   mov(ebx, 0x109);                      /* mov ebx, 0x109 */
    II(0x101167d3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x101167d7, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x101167da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101167dd, 0x3)   mov(eax, memd_a32(ds, eax + 0x45));   /* mov eax, [eax+0x45] */
    II(0x101167e0, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101167e2, 0x5)   calld(my_strobj_c_str_v2, -0x8d01f);  /* call 0x100897c8 */
    II(0x101167e7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101167e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101167ec, 0x3)   mov(esi, memd_a32(ds, eax + 0x4b));   /* mov esi, [eax+0x4b] */
    II(0x101167ef, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x101167f2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x101167f6, 0x2)   sub(eax, esi);                        /* sub eax, esi */
    II(0x101167f8, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x101167fa, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x10116800, 0x3)   imul(esi, eax);                       /* imul esi, eax */
    II(0x10116803, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10116806, 0x3)   mov(eax, memd_a32(ds, eax + 0x25));   /* mov eax, [eax+0x25] */
    II(0x10116809, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011680c, 0x3)   imul(esi, eax);                       /* imul esi, eax */
    II(0x1011680f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10116813, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x10116816, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x10116818, 0x6)   calld_abs(memd_a32(ds, 0x101bddec));  /* call dword near [0x101bddec] */
    II(0x1011681e, 0x5)   jmpd(0x1011675a, -0xc9);              /* jmp 0x1011675a */
l_0x10116823:
    II(0x10116823, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10116826, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x10116829, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011682c, 0x3)   mov(eax, memd_a32(ds, eax + 0x29));   /* mov eax, [eax+0x29] */
    II(0x1011682f, 0x5)   calld(sys_display_draw_1, 0x50c74);   /* call 0x101674a8 */
    II(0x10116834, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10116836, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10116837, 0x1)   popd(edi);                            /* pop edi */
    II(0x10116838, 0x1)   popd(esi);                            /* pop esi */
    II(0x10116839, 0x1)   popd(edx);                            /* pop edx */
    II(0x1011683a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011683b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011683c, 0x1)   retd();                               /* ret */
FUNC_END

