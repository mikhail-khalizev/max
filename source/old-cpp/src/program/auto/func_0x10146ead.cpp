FUNC_BEGIN(0x10146ead, 0x6ff5fa465a22bd87, 0x20, ({0x68, 0x80, 0, 0, 0, 0xe8, 0x9b, 0xee, 0x1, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x64, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xb8, 0x28, 0, 0, 0, 0xe8, 0x2a, 0xef, 0x1, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x25, 0x8b, 0x45, 0xf4, 0x50, 0xb9, 0x3e, 0, 0, 0, 0x8b, 0x5d, 0xf4, 0x83, 0xc3, 0x12, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xcc, 0xe8, 0x6c, 0xeb, 0xff, 0xff, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xe8, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xe8, 0x8b, 0x55, 0xe8, 0x8d, 0x45, 0xc4, 0xe8, 0xb1, 0xc, 0, 0, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xb8, 0xe8, 0x1e, 0x9, 0, 0, 0x89, 0x45, 0xd8, 0x80, 0x65, 0xf0, 0xfe, 0xba, 0xb0, 0xd0, 0x1a, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0x6, 0x97, 0xf9, 0xff, 0xe8, 0x63, 0xf1, 0xff, 0xff, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x75, 0xc, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xe9, 0x33, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4, 0xe8, 0x6f, 0x45, 0xf6, 0xff, 0x66, 0x3b, 0x45, 0xec, 0x7c, 0x1a, 0x8b, 0x45, 0xec, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4, 0xe8, 0x77, 0x56, 0xff, 0xff, 0x89, 0x45, 0xd0, 0xe9, 0x8, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4, 0xe8, 0x44, 0x45, 0xf6, 0xff, 0x98, 0xf, 0xbf, 0x55, 0xec, 0x40, 0x39, 0xc2, 0x74, 0x17, 0xb8, 0xb6, 0xd0, 0x1a, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0x8, 0xfa, 0xff, 0xff, 0x83, 0xc4, 0x8, 0xe9, 0xdc, 0, 0, 0, 0xbb, 0xd5, 0xd0, 0x1a, 0x10, 0x8d, 0x55, 0xb4, 0x8d, 0x45, 0xc4, 0xe8, 0x83, 0x96, 0xf9, 0xff, 0xe8, 0x29, 0xf1, 0xff, 0xff, 0x8d, 0x45, 0xb4, 0xe8, 0xf6, 0x27, 0xf4, 0xff, 0x8d, 0x5d, 0xac, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x9e, 0x45, 0xff, 0xff, 0x8d, 0x55, 0xac, 0xa1, 0x74, 0x72, 0x1c, 0x10, 0xe8, 0xc1, 0x10, 0, 0, 0x89, 0x45, 0xa8, 0x83, 0x7d, 0xa8, 0, 0x75, 0x17, 0xb8, 0xda, 0xd0, 0x1a, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0xb2, 0xf9, 0xff, 0xff, 0x83, 0xc4, 0x8, 0xe9, 0x7c, 0, 0, 0, 0xbb, 0xe7, 0xd0, 0x1a, 0x10, 0x8d, 0x55, 0xa4, 0x8d, 0x45, 0xc4, 0xe8, 0x2d, 0x96, 0xf9, 0xff, 0xe8, 0x3c, 0xf2, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0xe7, 0x3c, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x12, 0xb8, 0xee, 0xd0, 0x1a, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0x78, 0xf9, 0xff, 0xff, 0x83, 0xc4, 0x8, 0x8b, 0x45, 0xa8, 0xe8, 0xc0, 0x57, 0xff, 0xff, 0x89, 0x45, 0xd0, 0xe8, 0x5c, 0x56, 0xff, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4, 0xe8, 0x5f, 0x55, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x8b, 0x58, 0x2, 0x8d, 0x45, 0xa4, 0xe8, 0x4b, 0xd8, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xa0, 0xff, 0x53, 0x10, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0x75, 0x93, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x99, 0xaa, 0xff, 0xff, 0xb8, 0x18, 0, 0, 0, 0xe8, 0x65, 0xed, 0x1, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x1c, 0x8b, 0x4d, 0xd0, 0x8d, 0x5d, 0xb8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xe4, 0xe8, 0xcc, 0xe4, 0xff, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0x9c, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0x9c, 0x8b, 0x55, 0x9c, 0x8b, 0x45, 0xf8, 0xe8, 0x6d, 0xe, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x2b, 0x2c, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x11, 0x93, 0xf9, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x15, 0x2c, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xfb, 0x92, 0xf9, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10146ead, 0x5)   pushd(0x80);                          /* push dword 0x80 */
    II(0x10146eb2, 0x5)   calld(sys_check_available_stack_size, 0x1ee9b); /* call 0x10165d52 */
    II(0x10146eb7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10146eb8, 0x1)   pushd(esi);                           /* push esi */
    II(0x10146eb9, 0x1)   pushd(edi);                           /* push edi */
    II(0x10146eba, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10146ebb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10146ebd, 0x6)   sub(esp, 0x64);                       /* sub esp, 0x64 */
    II(0x10146ec3, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10146ec6, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10146ec9, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10146ecc, 0x5)   mov(eax, 0x28);                       /* mov eax, 0x28 */
    II(0x10146ed1, 0x5)   calld(sys_new, 0x1ef2a);              /* call 0x10165e00 */
    II(0x10146ed6, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x10146ed9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10146edc, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10146edf, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x10146ee3, 0x2)   jzd(0x10146f0a, 0x25);                /* jz 0x10146f0a */
    II(0x10146ee5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146ee8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146ee9, 0x5)   mov(ecx, 0x3e);                       /* mov ecx, 0x3e */
    II(0x10146eee, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x10146ef1, 0x3)   add(ebx, 0x12);                       /* add ebx, 0x12 */
    II(0x10146ef4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10146ef7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10146efa, 0x5)   calld(0x10145a6b, -0x1494);           /* call 0x10145a6b */
    II(0x10146eff, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x10146f02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10146f05, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10146f08, 0x2)   jmpd(0x10146f10, 0x6);                /* jmp 0x10146f10 */
l_0x10146f0a:
    II(0x10146f0a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10146f0d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x10146f10:
    II(0x10146f10, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x10146f13, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10146f16, 0x5)   calld(0x10147bcc, 0xcb1);             /* call 0x10147bcc */
    II(0x10146f1b, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x10146f22, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x10146f26, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10146f29, 0x5)   calld(0x1014784c, 0x91e);             /* call 0x1014784c */
    II(0x10146f2e, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10146f31, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x10146f35, 0x5)   mov(edx, 0x101ad0b0);                 /* mov edx, 0x101ad0b0 */ /* "Index" */
    II(0x10146f3a, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10146f3d, 0x5)   calld(0x100e0648, -0x668fa);          /* call 0x100e0648 */
    II(0x10146f42, 0x5)   calld(0x101460aa, -0xe9d);            /* call 0x101460aa */
    II(0x10146f47, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10146f4a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10146f4e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10146f50, 0x2)   jnzd(0x10146f5e, 0xc);                /* jnz 0x10146f5e */
    II(0x10146f52, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x10146f59, 0x5)   jmpd(0x10147091, 0x133);              /* jmp 0x10147091 */
l_0x10146f5e:
    II(0x10146f5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146f61, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x10146f64, 0x5)   calld(my_1_get_count, -0x9ba91);      /* call 0x100ab4d8 */
    II(0x10146f69, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10146f6d, 0x2)   jld(0x10146f89, 0x1a);                /* jl 0x10146f89 */
    II(0x10146f6f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10146f72, 0x1)   dec(eax);                             /* dec eax */
    II(0x10146f73, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10146f76, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146f79, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x10146f7c, 0x5)   calld(0x1013c5f8, -0xa989);           /* call 0x1013c5f8 */
    II(0x10146f81, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10146f84, 0x5)   jmpd(0x10147091, 0x108);              /* jmp 0x10147091 */
l_0x10146f89:
    II(0x10146f89, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146f8c, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x10146f8f, 0x5)   calld(my_1_get_count, -0x9babc);      /* call 0x100ab4d8 */
    II(0x10146f94, 0x1)   cwde();                               /* cwde */
    II(0x10146f95, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10146f99, 0x1)   inc(eax);                             /* inc eax */
    II(0x10146f9a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10146f9c, 0x2)   jzd(0x10146fb5, 0x17);                /* jz 0x10146fb5 */
    II(0x10146f9e, 0x5)   mov(eax, 0x101ad0b6);                 /* mov eax, 0x101ad0b6 */ /* "Index refers to unknown object" */
    II(0x10146fa3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146fa4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146fa7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146fa8, 0x5)   calld(0x101469b5, -0x5f8);            /* call 0x101469b5 */
    II(0x10146fad, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x10146fb0, 0x5)   jmpd(0x10147091, 0xdc);               /* jmp 0x10147091 */
l_0x10146fb5:
    II(0x10146fb5, 0x5)   mov(ebx, 0x101ad0d5);                 /* mov ebx, 0x101ad0d5 */ /* "Type" */
    II(0x10146fba, 0x3)   lea(edx, ebp - 0x4c);                 /* lea edx, [ebp-0x4c] */
    II(0x10146fbd, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10146fc0, 0x5)   calld(0x100e0648, -0x6697d);          /* call 0x100e0648 */
    II(0x10146fc5, 0x5)   calld(0x101460f3, -0xed7);            /* call 0x101460f3 */
    II(0x10146fca, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x10146fcd, 0x5)   calld(my_strobj_c_str_v2, -0xbd80a);  /* call 0x100897c8 */
    II(0x10146fd2, 0x3)   lea(ebx, ebp - 0x54);                 /* lea ebx, [ebp-0x54] */
    II(0x10146fd5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10146fd7, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10146fd9, 0x5)   calld(0x1013b57c, -0xba62);           /* call 0x1013b57c */
    II(0x10146fde, 0x3)   lea(edx, ebp - 0x54);                 /* lea edx, [ebp-0x54] */
    II(0x10146fe1, 0x5)   mov(eax, memd_a32(ds, 0x101c7274));   /* mov eax, [0x101c7274] */
    II(0x10146fe6, 0x5)   calld(0x101480ac, 0x10c1);            /* call 0x101480ac */
    II(0x10146feb, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x10146fee, 0x4)   cmp(memd_a32(ss, ebp - 0x58), 0);     /* cmp dword [ebp-0x58], 0x0 */
    II(0x10146ff2, 0x2)   jnzd(0x1014700b, 0x17);               /* jnz 0x1014700b */
    II(0x10146ff4, 0x5)   mov(eax, 0x101ad0da);                 /* mov eax, 0x101ad0da */ /* "Unknown type" */
    II(0x10146ff9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146ffa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10146ffd, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146ffe, 0x5)   calld(0x101469b5, -0x64e);            /* call 0x101469b5 */
    II(0x10147003, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x10147006, 0x5)   jmpd(0x10147087, 0x7c);               /* jmp 0x10147087 */
l_0x1014700b:
    II(0x1014700b, 0x5)   mov(ebx, 0x101ad0e7);                 /* mov ebx, 0x101ad0e7 */ /* "Object" */
    II(0x10147010, 0x3)   lea(edx, ebp - 0x5c);                 /* lea edx, [ebp-0x5c] */
    II(0x10147013, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10147016, 0x5)   calld(0x100e0648, -0x669d3);          /* call 0x100e0648 */
    II(0x1014701b, 0x5)   calld(0x1014625c, -0xdc4);            /* call 0x1014625c */
    II(0x10147020, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10147022, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10147025, 0x5)   calld(0x1013ad11, -0xc319);           /* call 0x1013ad11 */
    II(0x1014702a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014702c, 0x2)   jzd(0x10147040, 0x12);                /* jz 0x10147040 */
    II(0x1014702e, 0x5)   mov(eax, 0x101ad0ee);                 /* mov eax, 0x101ad0ee */ /* "No Object structure." */
    II(0x10147033, 0x1)   pushd(eax);                           /* push eax */
    II(0x10147034, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10147037, 0x1)   pushd(eax);                           /* push eax */
    II(0x10147038, 0x5)   calld(0x101469b5, -0x688);            /* call 0x101469b5 */
    II(0x1014703d, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
l_0x10147040:
    II(0x10147040, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x10147043, 0x5)   calld(0x1013c808, -0xa840);           /* call 0x1013c808 */
    II(0x10147048, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1014704b, 0x5)   calld(0x1013c6ac, -0xa9a4);           /* call 0x1013c6ac */
    II(0x10147050, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10147053, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x10147056, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10147059, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x1014705c, 0x5)   calld(0x1013c5c0, -0xaaa1);           /* call 0x1013c5c0 */
    II(0x10147061, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10147064, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
//    II(0x10147067, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1014706a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1014706d, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10147070, 0x5)   calld(0x101048c0, -0x427b5);          /* call 0x101048c0 */
    II(0x10147075, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10147077, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1014707a, 0x3)   calld_abs(memd_a32(ds, ebx + 0x10));  /* call dword near [ebx+0x10] */
    II(0x1014707d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014707f, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10147082, 0x5)   calld(0x100e03fc, -0x66c8b);          /* call 0x100e03fc */
l_0x10147087:
    II(0x10147087, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10147089, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1014708c, 0x5)   calld(my_string_dtor, -0x5567);       /* call 0x10141b2a */
l_0x10147091:
    II(0x10147091, 0x5)   mov(eax, 0x18);                       /* mov eax, 0x18 */
    II(0x10147096, 0x5)   calld(sys_new, 0x1ed65);              /* call 0x10165e00 */
    II(0x1014709b, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x1014709e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101470a1, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x101470a4, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x101470a8, 0x2)   jzd(0x101470c6, 0x1c);                /* jz 0x101470c6 */
    II(0x101470aa, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x30));   /* mov ecx, [ebp-0x30] */
    II(0x101470ad, 0x3)   lea(ebx, ebp - 0x48);                 /* lea ebx, [ebp-0x48] */
    II(0x101470b0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101470b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101470b6, 0x5)   calld(0x10145587, -0x1b34);           /* call 0x10145587 */
    II(0x101470bb, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x101470be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101470c1, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x101470c4, 0x2)   jmpd(0x101470cc, 0x6);                /* jmp 0x101470cc */
l_0x101470c6:
    II(0x101470c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101470c9, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
l_0x101470cc:
    II(0x101470cc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x64));   /* mov edx, [ebp-0x64] */
    II(0x101470cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101470d2, 0x5)   calld(0x10147f44, 0xe6d);             /* call 0x10147f44 */
    II(0x101470d7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101470d9, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x101470dc, 0x5)   calld(0x10139d0c, -0xd3d5);           /* call 0x10139d0c */
    II(0x101470e1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101470e3, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x101470e6, 0x5)   calld(0x100e03fc, -0x66cef);          /* call 0x100e03fc */
    II(0x101470eb, 0x2)   jmpd(0x10147101, 0x14);               /* jmp 0x10147101 */
//  II(0x101470ed, 0x14)  /* Недостижимый код. */
l_0x10147101:
    II(0x10147101, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10147104, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10147106, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10147107, 0x1)   popd(edi);                            /* pop edi */
    II(0x10147108, 0x1)   popd(esi);                            /* pop esi */
    II(0x10147109, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014710a, 0x1)   retd();                               /* ret */
FUNC_END

