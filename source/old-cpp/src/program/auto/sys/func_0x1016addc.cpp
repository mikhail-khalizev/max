FUNC_BEGIN(/* sys */ 0x1016addc, 0xf3cedb66835dfe2d, 0x20, ({0x56, 0x57, 0x55, 0x83, 0xec, 0x28, 0x8b, 0x6c, 0x24, 0x3c, 0x89, 0x44, 0x24, 0x10, 0x89, 0x54, 0x24, 0x18, 0x89, 0x5c, 0x24, 0x8, 0x89, 0xc, 0x24, 0x8b, 0x54, 0x24, 0x38, 0x66, 0x8b, 0x12, 0x66, 0x89, 0x54, 0x24, 0x20, 0x8b, 0x54, 0x24, 0x38, 0x83, 0xc2, 0x2, 0x89, 0xe8, 0x89, 0x54, 0x24, 0x38, 0x66, 0x8b, 0x12, 0x8b, 0x74, 0x24, 0x1e, 0x66, 0x89, 0x54, 0x24, 0x24, 0x89, 0xea, 0xc1, 0xfe, 0x10, 0xc1, 0xfa, 0x1f, 0xf7, 0xfe, 0x8b, 0x7c, 0x24, 0x22, 0x8b, 0x44, 0x24, 0x40, 0x89, 0xd5, 0x89, 0x54, 0x24, 0x4, 0x89, 0xc2, 0xc1, 0xff, 0x10, 0xc1, 0xfa, 0x1f, 0xf7, 0xff, 0xf, 0xaf, 0xf2, 0x8b, 0x4c, 0x24, 0x38, 0x83, 0xc1, 0x2, 0x89, 0x4c, 0x24, 0x38, 0x89, 0x54, 0x24, 0x40, 0x8d, 0x14, 0x31, 0x31, 0xf6, 0x89, 0x54, 0x24, 0x14, 0x89, 0x74, 0x24, 0xc, 0x85, 0xdb, 0xf, 0x8e, 0xd5, 0, 0, 0, 0x31, 0xc9, 0x8b, 0x74, 0x24, 0x18, 0x89, 0x4c, 0x24, 0x1c, 0x85, 0xf6, 0x7e, 0x6c, 0x8b, 0x54, 0x24, 0x1e, 0x8b, 0x74, 0x24, 0x18, 0x8b, 0x5c, 0x24, 0x1c, 0xc1, 0xfa, 0x10, 0x29, 0xde, 0x29, 0xea, 0x39, 0xd6, 0x7d, 0x2, 0x89, 0xf2, 0x8b, 0x74, 0x24, 0x14, 0x8b, 0x7c, 0x24, 0x10, 0x8b, 0x4c, 0x24, 0x1c, 0x1, 0xee, 0x1, 0xcf, 0x89, 0xd1, 0x57, 0x89, 0xcb, 0x83, 0xe3, 0x3, 0xf7, 0xc1, 0xfc, 0xff, 0xff, 0xff, 0x74, 0x5, 0xc1, 0xe9, 0x2, 0xf3, 0xa5, 0xf7, 0xc3, 0x7, 0, 0, 0, 0x74, 0x4, 0x89, 0xd9, 0xf3, 0xa4, 0x5f, 0x8b, 0x74, 0x24, 0x1e, 0x1, 0xd5, 0xc1, 0xfe, 0x10, 0x39, 0xf5, 0x75, 0x2, 0x31, 0xf5, 0x8b, 0x7c, 0x24, 0x1c, 0x1, 0xd7, 0x8b, 0x44, 0x24, 0x18, 0x89, 0x7c, 0x24, 0x1c, 0x39, 0xc7, 0x7c, 0x94, 0x8b, 0x14, 0x24, 0x8b, 0x5c, 0x24, 0x10, 0x8b, 0x4c, 0x24, 0x40, 0x8b, 0x6c, 0x24, 0x4, 0x41, 0x1, 0xd3, 0x8b, 0x54, 0x24, 0x22, 0x89, 0x5c, 0x24, 0x10, 0xc1, 0xfa, 0x10, 0x89, 0x4c, 0x24, 0x40, 0x39, 0xca, 0x75, 0x10, 0x31, 0xc0, 0x8b, 0x54, 0x24, 0x38, 0x89, 0x44, 0x24, 0x40, 0x89, 0x54, 0x24, 0x14, 0xeb, 0x11, 0x8b, 0x54, 0x24, 0x1e, 0x8b, 0x7c, 0x24, 0x14, 0xc1, 0xfa, 0x10, 0x1, 0xd7, 0x89, 0x7c, 0x24, 0x14, 0x8b, 0x44, 0x24, 0xc, 0x40, 0x8b, 0x5c, 0x24, 0x8, 0x89, 0x44, 0x24, 0xc, 0x39, 0xd8, 0xf, 0x8c, 0x2b, 0xff, 0xff, 0xff, 0x83, 0xc4, 0x28, 0x5d, 0x5f, 0x5e, 0xc2, 0xc, 0}))
    II(0x1016addc, 0x1)   pushd(esi);                           /* push esi */
    II(0x1016addd, 0x1)   pushd(edi);                           /* push edi */
    II(0x1016adde, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1016addf, 0x3)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x1016ade2, 0x4)   mov(ebp, memd_a32(ss, esp + 0x3c));   /* mov ebp, [esp+0x3c] */
    II(0x1016ade6, 0x4)   mov(memd_a32(ss, esp + 0x10), eax);   /* mov [esp+0x10], eax */
    II(0x1016adea, 0x4)   mov(memd_a32(ss, esp + 0x18), edx);   /* mov [esp+0x18], edx */
    II(0x1016adee, 0x4)   mov(memd_a32(ss, esp + 0x8), ebx);    /* mov [esp+0x8], ebx */
    II(0x1016adf2, 0x3)   mov(memd_a32(ss, esp), ecx);          /* mov [esp], ecx */
    II(0x1016adf5, 0x4)   mov(edx, memd_a32(ss, esp + 0x38));   /* mov edx, [esp+0x38] */
    II(0x1016adf9, 0x3)   mov(dx, memw_a32(ds, edx));           /* mov dx, [edx] */
    II(0x1016adfc, 0x5)   mov(memw_a32(ss, esp + 0x20), dx);    /* mov [esp+0x20], dx */
    II(0x1016ae01, 0x4)   mov(edx, memd_a32(ss, esp + 0x38));   /* mov edx, [esp+0x38] */
    II(0x1016ae05, 0x3)   add(edx, 0x2);                        /* add edx, 0x2 */
    II(0x1016ae08, 0x2)   mov(eax, ebp);                        /* mov eax, ebp */
    II(0x1016ae0a, 0x4)   mov(memd_a32(ss, esp + 0x38), edx);   /* mov [esp+0x38], edx */
    II(0x1016ae0e, 0x3)   mov(dx, memw_a32(ds, edx));           /* mov dx, [edx] */
    II(0x1016ae11, 0x4)   mov(esi, memd_a32(ss, esp + 0x1e));   /* mov esi, [esp+0x1e] */
    II(0x1016ae15, 0x5)   mov(memw_a32(ss, esp + 0x24), dx);    /* mov [esp+0x24], dx */
    II(0x1016ae1a, 0x2)   mov(edx, ebp);                        /* mov edx, ebp */
    II(0x1016ae1c, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x1016ae1f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1016ae22, 0x2)   idiv(esi);                            /* idiv esi */
    II(0x1016ae24, 0x4)   mov(edi, memd_a32(ss, esp + 0x22));   /* mov edi, [esp+0x22] */
    II(0x1016ae28, 0x4)   mov(eax, memd_a32(ss, esp + 0x40));   /* mov eax, [esp+0x40] */
    II(0x1016ae2c, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x1016ae2e, 0x4)   mov(memd_a32(ss, esp + 0x4), edx);    /* mov [esp+0x4], edx */
    II(0x1016ae32, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1016ae34, 0x3)   sar(edi, 0x10);                       /* sar edi, 0x10 */
    II(0x1016ae37, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1016ae3a, 0x2)   idiv(edi);                            /* idiv edi */
    II(0x1016ae3c, 0x3)   imul(esi, edx);                       /* imul esi, edx */
    II(0x1016ae3f, 0x4)   mov(ecx, memd_a32(ss, esp + 0x38));   /* mov ecx, [esp+0x38] */
    II(0x1016ae43, 0x3)   add(ecx, 0x2);                        /* add ecx, 0x2 */
    II(0x1016ae46, 0x4)   mov(memd_a32(ss, esp + 0x38), ecx);   /* mov [esp+0x38], ecx */
    II(0x1016ae4a, 0x4)   mov(memd_a32(ss, esp + 0x40), edx);   /* mov [esp+0x40], edx */
    II(0x1016ae4e, 0x3)   lea(edx, ecx + esi);                  /* lea edx, [ecx+esi] */
    II(0x1016ae51, 0x2)   xor_(esi, esi);                       /* xor esi, esi */
    II(0x1016ae53, 0x4)   mov(memd_a32(ss, esp + 0x14), edx);   /* mov [esp+0x14], edx */
    II(0x1016ae57, 0x4)   mov(memd_a32(ss, esp + 0xc), esi);    /* mov [esp+0xc], esi */
    II(0x1016ae5b, 0x2)   test(ebx, ebx);                       /* test ebx, ebx */
    II(0x1016ae5d, 0x6)   jled(0x1016af38, 0xd5);               /* jle dword 0x1016af38 */
l_0x1016ae63:
    II(0x1016ae63, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1016ae65, 0x4)   mov(esi, memd_a32(ss, esp + 0x18));   /* mov esi, [esp+0x18] */
    II(0x1016ae69, 0x4)   mov(memd_a32(ss, esp + 0x1c), ecx);   /* mov [esp+0x1c], ecx */
    II(0x1016ae6d, 0x2)   test(esi, esi);                       /* test esi, esi */
    II(0x1016ae6f, 0x2)   jled(0x1016aedd, 0x6c);               /* jle 0x1016aedd */
l_0x1016ae71:
    II(0x1016ae71, 0x4)   mov(edx, memd_a32(ss, esp + 0x1e));   /* mov edx, [esp+0x1e] */
    II(0x1016ae75, 0x4)   mov(esi, memd_a32(ss, esp + 0x18));   /* mov esi, [esp+0x18] */
    II(0x1016ae79, 0x4)   mov(ebx, memd_a32(ss, esp + 0x1c));   /* mov ebx, [esp+0x1c] */
    II(0x1016ae7d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1016ae80, 0x2)   sub(esi, ebx);                        /* sub esi, ebx */
    II(0x1016ae82, 0x2)   sub(edx, ebp);                        /* sub edx, ebp */
    II(0x1016ae84, 0x2)   cmp(esi, edx);                        /* cmp esi, edx */
    II(0x1016ae86, 0x2)   jged(0x1016ae8a, 0x2);                /* jge 0x1016ae8a */
    II(0x1016ae88, 0x2)   mov(edx, esi);                        /* mov edx, esi */
l_0x1016ae8a:
    II(0x1016ae8a, 0x4)   mov(esi, memd_a32(ss, esp + 0x14));   /* mov esi, [esp+0x14] */
    II(0x1016ae8e, 0x4)   mov(edi, memd_a32(ss, esp + 0x10));   /* mov edi, [esp+0x10] */
    II(0x1016ae92, 0x4)   mov(ecx, memd_a32(ss, esp + 0x1c));   /* mov ecx, [esp+0x1c] */
    II(0x1016ae96, 0x2)   add(esi, ebp);                        /* add esi, ebp */
    II(0x1016ae98, 0x2)   add(edi, ecx);                        /* add edi, ecx */
    II(0x1016ae9a, 0x2)   mov(ecx, edx);                        /* mov ecx, edx */
    II(0x1016ae9c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1016ae9d, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x1016ae9f, 0x3)   and_(ebx, 0x3);                       /* and ebx, 0x3 */
    II(0x1016aea2, 0x6)   test(ecx, 0xfffffffc);                /* test ecx, 0xfffffffc */
    II(0x1016aea8, 0x2)   jzd(0x1016aeaf, 0x5);                 /* jz 0x1016aeaf */
    II(0x1016aeaa, 0x3)   shr(ecx, 0x2);                        /* shr ecx, 0x2 */
    II(0x1016aead, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */
l_0x1016aeaf:
    II(0x1016aeaf, 0x6)   test(ebx, 0x7);                       /* test ebx, 0x7 */
    II(0x1016aeb5, 0x2)   jzd(0x1016aebb, 0x4);                 /* jz 0x1016aebb */
    II(0x1016aeb7, 0x2)   mov(ecx, ebx);                        /* mov ecx, ebx */
    II(0x1016aeb9, 0x2)   rep_a32 movsb_a32();                  /* rep movsb */
l_0x1016aebb:
    II(0x1016aebb, 0x1)   popd(edi);                            /* pop edi */
    II(0x1016aebc, 0x4)   mov(esi, memd_a32(ss, esp + 0x1e));   /* mov esi, [esp+0x1e] */
    II(0x1016aec0, 0x2)   add(ebp, edx);                        /* add ebp, edx */
    II(0x1016aec2, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x1016aec5, 0x2)   cmp(ebp, esi);                        /* cmp ebp, esi */
    II(0x1016aec7, 0x2)   jnzd(0x1016aecb, 0x2);                /* jnz 0x1016aecb */
    II(0x1016aec9, 0x2)   xor_(ebp, esi);                       /* xor ebp, esi */
l_0x1016aecb:
    II(0x1016aecb, 0x4)   mov(edi, memd_a32(ss, esp + 0x1c));   /* mov edi, [esp+0x1c] */
    II(0x1016aecf, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1016aed1, 0x4)   mov(eax, memd_a32(ss, esp + 0x18));   /* mov eax, [esp+0x18] */
    II(0x1016aed5, 0x4)   mov(memd_a32(ss, esp + 0x1c), edi);   /* mov [esp+0x1c], edi */
    II(0x1016aed9, 0x2)   cmp(edi, eax);                        /* cmp edi, eax */
    II(0x1016aedb, 0x2)   jld(0x1016ae71, -0x6c);               /* jl 0x1016ae71 */
l_0x1016aedd:
    II(0x1016aedd, 0x3)   mov(edx, memd_a32(ss, esp));          /* mov edx, [esp] */
    II(0x1016aee0, 0x4)   mov(ebx, memd_a32(ss, esp + 0x10));   /* mov ebx, [esp+0x10] */
    II(0x1016aee4, 0x4)   mov(ecx, memd_a32(ss, esp + 0x40));   /* mov ecx, [esp+0x40] */
    II(0x1016aee8, 0x4)   mov(ebp, memd_a32(ss, esp + 0x4));    /* mov ebp, [esp+0x4] */
    II(0x1016aeec, 0x1)   inc(ecx);                             /* inc ecx */
    II(0x1016aeed, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x1016aeef, 0x4)   mov(edx, memd_a32(ss, esp + 0x22));   /* mov edx, [esp+0x22] */
    II(0x1016aef3, 0x4)   mov(memd_a32(ss, esp + 0x10), ebx);   /* mov [esp+0x10], ebx */
    II(0x1016aef7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1016aefa, 0x4)   mov(memd_a32(ss, esp + 0x40), ecx);   /* mov [esp+0x40], ecx */
    II(0x1016aefe, 0x2)   cmp(edx, ecx);                        /* cmp edx, ecx */
    II(0x1016af00, 0x2)   jnzd(0x1016af12, 0x10);               /* jnz 0x1016af12 */
    II(0x1016af02, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1016af04, 0x4)   mov(edx, memd_a32(ss, esp + 0x38));   /* mov edx, [esp+0x38] */
    II(0x1016af08, 0x4)   mov(memd_a32(ss, esp + 0x40), eax);   /* mov [esp+0x40], eax */
    II(0x1016af0c, 0x4)   mov(memd_a32(ss, esp + 0x14), edx);   /* mov [esp+0x14], edx */
    II(0x1016af10, 0x2)   jmpd(0x1016af23, 0x11);               /* jmp 0x1016af23 */
l_0x1016af12:
    II(0x1016af12, 0x4)   mov(edx, memd_a32(ss, esp + 0x1e));   /* mov edx, [esp+0x1e] */
    II(0x1016af16, 0x4)   mov(edi, memd_a32(ss, esp + 0x14));   /* mov edi, [esp+0x14] */
    II(0x1016af1a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1016af1d, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1016af1f, 0x4)   mov(memd_a32(ss, esp + 0x14), edi);   /* mov [esp+0x14], edi */
l_0x1016af23:
    II(0x1016af23, 0x4)   mov(eax, memd_a32(ss, esp + 0xc));    /* mov eax, [esp+0xc] */
    II(0x1016af27, 0x1)   inc(eax);                             /* inc eax */
    II(0x1016af28, 0x4)   mov(ebx, memd_a32(ss, esp + 0x8));    /* mov ebx, [esp+0x8] */
    II(0x1016af2c, 0x4)   mov(memd_a32(ss, esp + 0xc), eax);    /* mov [esp+0xc], eax */
    II(0x1016af30, 0x2)   cmp(eax, ebx);                        /* cmp eax, ebx */
    II(0x1016af32, 0x6)   jld(0x1016ae63, -0xd5);               /* jl dword 0x1016ae63 */
l_0x1016af38:
    II(0x1016af38, 0x3)   add(esp, 0x28);                       /* add esp, 0x28 */
    II(0x1016af3b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1016af3c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1016af3d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1016af3e, 0x3)   retd(0xc);                            /* ret 0xc */
FUNC_END

