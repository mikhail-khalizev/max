FUNC_BEGIN(/* sys */ 0x10181cf1, 0x3fb5fc287de7b349, 0x20, ({0x51, 0x89, 0xc1, 0x89, 0xd0, 0xc7, 0x42, 0x10, 0x2, 0, 0, 0, 0x89, 0x5a, 0x14, 0x8b, 0x53, 0x9, 0xc7, 0x40, 0x1c, 0, 0, 0, 0, 0x89, 0x50, 0x18, 0x89, 0xc2, 0x89, 0x48, 0xc, 0x83, 0xc2, 0x10, 0x31, 0xdb, 0x89, 0x50, 0x4, 0xe8, 0x29, 0xb6, 0, 0, 0x59, 0xc3}))
    II(0x10181cf1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10181cf2, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10181cf4, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10181cf6, 0x7)   mov(memd_a32(ds, edx + 0x10), 0x2);   /* mov dword [edx+0x10], 0x2 */
    II(0x10181cfd, 0x3)   mov(memd_a32(ds, edx + 0x14), ebx);   /* mov [edx+0x14], ebx */
    II(0x10181d00, 0x3)   mov(edx, memd_a32(ds, ebx + 0x9));    /* mov edx, [ebx+0x9] */
    II(0x10181d03, 0x7)   mov(memd_a32(ds, eax + 0x1c), 0);     /* mov dword [eax+0x1c], 0x0 */
    II(0x10181d0a, 0x3)   mov(memd_a32(ds, eax + 0x18), edx);   /* mov [eax+0x18], edx */
    II(0x10181d0d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10181d0f, 0x3)   mov(memd_a32(ds, eax + 0xc), ecx);    /* mov [eax+0xc], ecx */
    II(0x10181d12, 0x3)   add(edx, 0x10);                       /* add edx, 0x10 */
    II(0x10181d15, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10181d17, 0x3)   mov(memd_a32(ds, eax + 0x4), edx);    /* mov [eax+0x4], edx */
    II(0x10181d1a, 0x5)   calld(/* sys */ 0x1018d348, 0xb629);  /* call 0x1018d348 */
    II(0x10181d1f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10181d20, 0x1)   retd();                               /* ret */
FUNC_END

