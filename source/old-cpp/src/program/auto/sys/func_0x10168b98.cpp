FUNC_BEGIN(/* sys */ 0x10168b98, 0x1f3d3177985af07d, 0x20, ({0x56, 0x89, 0xd6, 0x83, 0x3d, 0xbc, 0xdd, 0x1b, 0x10, 0, 0x75, 0x9, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x5e, 0xc2, 0x4, 0, 0x31, 0xd2, 0xe8, 0x4c, 0xf3, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x9, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x5e, 0xc2, 0x4, 0, 0x89, 0x70, 0x50, 0x89, 0x58, 0x54, 0x89, 0x48, 0x58, 0x8b, 0x5c, 0x24, 0x8, 0x89, 0x58, 0x5c, 0x31, 0xc0, 0x5e, 0xc2, 0x4, 0}))
    II(0x10168b98, 0x1)   pushd(esi);                           /* push esi */
    II(0x10168b99, 0x2)   mov(esi, edx);                        /* mov esi, edx */
    II(0x10168b9b, 0x7)   cmp(memd_a32(ds, 0x101bddbc), 0);     /* cmp dword [0x101bddbc], 0x0 */
    II(0x10168ba2, 0x2)   jnzd(0x10168bad, 0x9);                /* jnz 0x10168bad */
    II(0x10168ba4, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10168ba9, 0x1)   popd(esi);                            /* pop esi */
    II(0x10168baa, 0x3)   retd(0x4);                            /* ret 0x4 */
l_0x10168bad:
    II(0x10168bad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10168baf, 0x5)   calld(/* sys */ 0x10167f00, -0xcb4);  /* call 0x10167f00 */
    II(0x10168bb4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10168bb6, 0x2)   jnzd(0x10168bc1, 0x9);                /* jnz 0x10168bc1 */
    II(0x10168bb8, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10168bbd, 0x1)   popd(esi);                            /* pop esi */
    II(0x10168bbe, 0x3)   retd(0x4);                            /* ret 0x4 */
l_0x10168bc1:
    II(0x10168bc1, 0x3)   mov(memd_a32(ds, eax + 0x50), esi);   /* mov [eax+0x50], esi */
    II(0x10168bc4, 0x3)   mov(memd_a32(ds, eax + 0x54), ebx);   /* mov [eax+0x54], ebx */
    II(0x10168bc7, 0x3)   mov(memd_a32(ds, eax + 0x58), ecx);   /* mov [eax+0x58], ecx */
    II(0x10168bca, 0x4)   mov(ebx, memd_a32(ss, esp + 0x8));    /* mov ebx, [esp+0x8] */
    II(0x10168bce, 0x3)   mov(memd_a32(ds, eax + 0x5c), ebx);   /* mov [eax+0x5c], ebx */
    II(0x10168bd1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10168bd3, 0x1)   popd(esi);                            /* pop esi */
    II(0x10168bd4, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

