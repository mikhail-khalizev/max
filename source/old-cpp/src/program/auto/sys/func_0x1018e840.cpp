FUNC_BEGIN(/* sys */ 0x1018e840, 0x8c85494796106c56, 0x20, ({0x55, 0x8b, 0xec, 0x83, 0xc4, 0xec, 0x56, 0x57, 0x53, 0x66, 0x8c, 0xd8, 0x66, 0x8e, 0xc0, 0xa1, 0xd8, 0x9c, 0x20, 0x10, 0x2b, 0x5, 0xc8, 0x9c, 0x20, 0x10, 0x89, 0x45, 0xf4, 0x33, 0xdb, 0x8a, 0x1d, 0xd2, 0x9d, 0x20, 0x10, 0x8b, 0x45, 0x10, 0xc1, 0xe0, 0x3, 0xa3, 0xe0, 0x9c, 0x20, 0x10, 0x8b, 0x45, 0x18, 0xc1, 0xe0, 0x3, 0xa3, 0xdc, 0x9c, 0x20, 0x10, 0x8b, 0x45, 0x14, 0xc1, 0xe0, 0x3, 0xf7, 0xe3, 0xa3, 0xe4, 0x9c, 0x20, 0x10, 0x8b, 0x45, 0x1c, 0xc1, 0xe0, 0x3, 0xf7, 0xe3, 0xa3, 0xd4, 0x9c, 0x20, 0x10, 0xa1, 0xc4, 0x9c, 0x20, 0x10, 0x2b, 0x5, 0xdc, 0x9c, 0x20, 0x10, 0x89, 0x45, 0xf8, 0xa1, 0xc8, 0x9c, 0x20, 0x10, 0x89, 0x45, 0xfc, 0x83, 0x7d, 0x10, 0, 0x75, 0x6, 0x83, 0x7d, 0x14, 0, 0x74, 0x14, 0xa1, 0xe4, 0x9c, 0x20, 0x10, 0xf7, 0x25, 0xd0, 0x9c, 0x20, 0x10, 0x3, 0x5, 0xe0, 0x9c, 0x20, 0x10, 0x1, 0x45, 0xfc, 0xa1, 0xec, 0x9c, 0x20, 0x10, 0x83, 0xe8, 0x8, 0x89, 0x45, 0xf0, 0x8b, 0x75, 0xc, 0x8b, 0x7d, 0xfc}))
    II(0x1018e840, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1018e841, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1018e843, 0x3)   add(esp, -0x14 /* 0xec */);           /* add esp, 0xec */
    II(0x1018e846, 0x1)   pushd(esi);                           /* push esi */
    II(0x1018e847, 0x1)   pushd(edi);                           /* push edi */
    II(0x1018e848, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1018e849, 0x3)   mov(ax, ds);                          /* mov ax, ds */
    II(0x1018e84c, 0x3)   mov(es, ax);                          /* mov es, ax */
    II(0x1018e84f, 0x5)   mov(eax, memd_a32(ds, 0x10209cd8));   /* mov eax, [0x10209cd8] */
    II(0x1018e854, 0x6)   sub(eax, memd_a32(ds, 0x10209cc8));   /* sub eax, [0x10209cc8] */
    II(0x1018e85a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1018e85d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1018e85f, 0x6)   mov(bl, memb_a32(ds, 0x10209dd2));    /* mov bl, [0x10209dd2] */
    II(0x1018e865, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1018e868, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x1018e86b, 0x5)   mov(memd_a32(ds, 0x10209ce0), eax);   /* mov [0x10209ce0], eax */
    II(0x1018e870, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x1018e873, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x1018e876, 0x5)   mov(memd_a32(ds, 0x10209cdc), eax);   /* mov [0x10209cdc], eax */
    II(0x1018e87b, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1018e87e, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x1018e881, 0x2)   mul(ebx);                             /* mul ebx */
    II(0x1018e883, 0x5)   mov(memd_a32(ds, 0x10209ce4), eax);   /* mov [0x10209ce4], eax */
    II(0x1018e888, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x1018e88b, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x1018e88e, 0x2)   mul(ebx);                             /* mul ebx */
    II(0x1018e890, 0x5)   mov(memd_a32(ds, 0x10209cd4), eax);   /* mov [0x10209cd4], eax */
    II(0x1018e895, 0x5)   mov(eax, memd_a32(ds, 0x10209cc4));   /* mov eax, [0x10209cc4] */
    II(0x1018e89a, 0x6)   sub(eax, memd_a32(ds, 0x10209cdc));   /* sub eax, [0x10209cdc] */
    II(0x1018e8a0, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1018e8a3, 0x5)   mov(eax, memd_a32(ds, 0x10209cc8));   /* mov eax, [0x10209cc8] */
    II(0x1018e8a8, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1018e8ab, 0x4)   cmp(memd_a32(ss, ebp + 0x10), 0);     /* cmp dword [ebp+0x10], 0x0 */
    II(0x1018e8af, 0x2)   jnzd(0x1018e8b7, 0x6);                /* jnz 0x1018e8b7 */
    II(0x1018e8b1, 0x4)   cmp(memd_a32(ss, ebp + 0x14), 0);     /* cmp dword [ebp+0x14], 0x0 */
    II(0x1018e8b5, 0x2)   jzd(0x1018e8cb, 0x14);                /* jz 0x1018e8cb */
l_0x1018e8b7:
    II(0x1018e8b7, 0x5)   mov(eax, memd_a32(ds, 0x10209ce4));   /* mov eax, [0x10209ce4] */
    II(0x1018e8bc, 0x6)   mul(memd_a32(ds, 0x10209cd0));        /* mul dword [0x10209cd0] */
    II(0x1018e8c2, 0x6)   add(eax, memd_a32(ds, 0x10209ce0));   /* add eax, [0x10209ce0] */
    II(0x1018e8c8, 0x3)   add(memd_a32(ss, ebp - 0x4), eax);    /* add [ebp-0x4], eax */
l_0x1018e8cb:
    II(0x1018e8cb, 0x5)   mov(eax, memd_a32(ds, 0x10209cec));   /* mov eax, [0x10209cec] */
    II(0x1018e8d0, 0x3)   sub(eax, 0x8);                        /* sub eax, 0x8 */
    II(0x1018e8d3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1018e8d6, 0x3)   mov(esi, memd_a32(ss, ebp + 0xc));    /* mov esi, [ebp+0xc] */
    II(0x1018e8d9, 0x3)   mov(edi, memd_a32(ss, ebp - 0x4));    /* mov edi, [ebp-0x4] */
    II(0x1018e8dc, 0)     jmpd_func(/* sys */ 0x1018e8dc, 0);   /* Принудительное завершение функции. */
FUNC_END

