FUNC_BEGIN(/* sys */ 0x1016d354, 0x249772daf6951ba9, 0x20, ({0x53, 0x51, 0x56, 0x57, 0x55, 0x83, 0xec, 0x44, 0x89, 0x4, 0x24, 0x88, 0x54, 0x24, 0x40, 0x81, 0xe2, 0xff, 0, 0, 0, 0x89, 0xd0, 0x31, 0xc9, 0xe8, 0x76, 0xf7, 0xff, 0xff, 0x89, 0x4c, 0x24, 0x3c, 0x89, 0xc6, 0x89, 0xd0, 0x81, 0xe6, 0, 0x7c, 0, 0, 0xe8, 0x63, 0xf7, 0xff, 0xff, 0xc1, 0xfe, 0xa, 0x89, 0xc3, 0x89, 0xd0, 0x81, 0xe3, 0xe0, 0x3, 0, 0, 0xe8, 0x51, 0xf7, 0xff, 0xff, 0xc1, 0xfb, 0x5, 0x89, 0xc2, 0x8b, 0x4, 0x24, 0x83, 0xe2, 0x1f, 0x8b, 0x7c, 0x24, 0x3c, 0x40, 0x8a, 0x4c, 0x24, 0x3c, 0x47, 0x88, 0x48, 0xff, 0x89, 0x7c, 0x24, 0x3c, 0x81, 0xff, 0, 0x1, 0, 0, 0x7c, 0xe7, 0x8b, 0x4, 0x24, 0x89, 0x54, 0x24, 0x8, 0x89, 0x54, 0x24, 0x24, 0x5, 0, 0x1, 0, 0, 0x89, 0x5c, 0x24, 0x10, 0x89, 0x44, 0x24, 0x2c, 0xb8, 0x6, 0, 0, 0, 0x89, 0x5c, 0x24, 0x18, 0x89, 0x44, 0x24, 0x28, 0x8b, 0x4, 0x24, 0x89, 0x74, 0x24, 0x4, 0x5, 0, 0x8, 0, 0, 0x89, 0x74, 0x24, 0x1c, 0x89, 0x44, 0x24, 0xc, 0x8b, 0x6c, 0x24, 0x28, 0x8b, 0x44, 0x24, 0x1c, 0x8b, 0x7c, 0x24, 0x2c, 0x89, 0x44, 0x24, 0x38, 0x8b, 0x44, 0x24, 0x18, 0x31, 0xd2, 0x89, 0x44, 0x24, 0x30, 0x8b, 0x44, 0x24, 0x24, 0x89, 0x54, 0x24, 0x3c, 0x89, 0x44, 0x24, 0x34, 0x31, 0xd2, 0x8a, 0x54, 0x24, 0x3c, 0x89, 0xd0, 0xe8, 0xc1, 0xf6, 0xff, 0xff, 0x89, 0xc6, 0x89, 0xd0, 0x81, 0xe6, 0, 0x7c, 0, 0, 0xe8, 0xb2, 0xf6, 0xff, 0xff, 0xc1, 0xfe, 0xa, 0x89, 0xc3, 0x89, 0xd0, 0x89, 0xea, 0xf, 0xaf, 0xd6, 0xe8, 0xa1, 0xf6, 0xff, 0xff, 0x8b, 0x74, 0x24, 0x38, 0x89, 0xc1, 0x1, 0xf2, 0xbe, 0x7, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfe, 0x81, 0xe3, 0xe0, 0x3, 0, 0, 0xc1, 0xfb, 0x5, 0x89, 0xea, 0xf, 0xaf, 0xd3, 0x89, 0xc6, 0x3, 0x54, 0x24, 0x30, 0xbb, 0x7, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x83, 0xe1, 0x1f, 0x89, 0xea, 0xf, 0xaf, 0xd1, 0x8b, 0x4c, 0x24, 0x34, 0x89, 0xc3, 0x1, 0xca, 0xb9, 0x7, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xf9, 0x89, 0xc1, 0x89, 0xd8, 0xc1, 0xe6, 0xa, 0xc1, 0xe0, 0x5, 0x9, 0xf0, 0x9, 0xc8, 0x8a, 0x80, 0x20, 0x5, 0x20, 0x10, 0x25, 0xff, 0, 0, 0, 0x8b, 0x74, 0x24, 0x3c, 0x25, 0xff, 0, 0, 0, 0x47, 0x46, 0x88, 0x47, 0xff, 0x89, 0x74, 0x24, 0x3c, 0x81, 0xfe, 0, 0x1, 0, 0, 0xf, 0x8c, 0x4c, 0xff, 0xff, 0xff, 0x8b, 0x54, 0x24, 0x2c, 0x8b, 0x44, 0x24, 0x8, 0x8b, 0x5c, 0x24, 0x24, 0x8b, 0x4c, 0x24, 0x18, 0x8b, 0x74, 0x24, 0x1c, 0x8b, 0x7c, 0x24, 0x28, 0x8b, 0x6c, 0x24, 0xc, 0x81, 0xc2, 0, 0x1, 0, 0, 0x4f, 0x1, 0xc3, 0x8b, 0x44, 0x24, 0x10, 0x89, 0x54, 0x24, 0x2c, 0x89, 0x5c, 0x24, 0x24, 0x1, 0xc1, 0x8b, 0x44, 0x24, 0x4, 0x89, 0x7c, 0x24, 0x28, 0x1, 0xc6, 0x89, 0x4c, 0x24, 0x18, 0x89, 0x74, 0x24, 0x1c, 0x39, 0xea, 0x74, 0x5, 0xe9, 0xd8, 0xfe, 0xff, 0xff, 0x8b, 0x4, 0x24, 0x5, 0, 0x9, 0, 0, 0x8b, 0x2c, 0x24, 0x89, 0x44, 0x24, 0x20, 0x8b, 0x4, 0x24, 0x31, 0xff, 0x5, 0, 0x10, 0, 0, 0x81, 0xc5, 0, 0x8, 0, 0, 0x89, 0x44, 0x24, 0x14, 0xbb, 0x7, 0, 0, 0, 0x89, 0xfa, 0x89, 0xf8, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x8b, 0x74, 0x24, 0x20, 0x8d, 0x88, 0xff, 0xff, 0, 0, 0x89, 0xeb, 0x31, 0xd2, 0x89, 0xc8, 0x8a, 0x54, 0x24, 0x40, 0xe8, 0x4e, 0xf5, 0xff, 0xff, 0x25, 0xff, 0, 0, 0, 0x43, 0x88, 0x43, 0xff, 0x39, 0xf3, 0x75, 0xe6, 0x8b, 0x44, 0x24, 0x20, 0x8b, 0x54, 0x24, 0x14, 0x81, 0xc7, 0, 0, 0x1, 0, 0x5, 0, 0x1, 0, 0, 0x81, 0xc5, 0, 0x1, 0, 0, 0x89, 0x44, 0x24, 0x20, 0x39, 0xd5, 0x75, 0xab, 0x83, 0xc4, 0x44, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1016d354, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1016d355, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1016d356, 0x1)   pushd(esi);                           /* push esi */
    II(0x1016d357, 0x1)   pushd(edi);                           /* push edi */
    II(0x1016d358, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1016d359, 0x3)   sub(esp, 0x44);                       /* sub esp, 0x44 */
    II(0x1016d35c, 0x3)   mov(memd_a32(ss, esp), eax);          /* mov [esp], eax */
    II(0x1016d35f, 0x4)   mov(memb_a32(ss, esp + 0x40), dl);    /* mov [esp+0x40], dl */
    II(0x1016d363, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x1016d369, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d36b, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1016d36d, 0x5)   calld(/* sys */ 0x1016cae8, -0x88a);  /* call 0x1016cae8 */
    II(0x1016d372, 0x4)   mov(memd_a32(ss, esp + 0x3c), ecx);   /* mov [esp+0x3c], ecx */
    II(0x1016d376, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x1016d378, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d37a, 0x6)   and_(esi, 0x7c00);                    /* and esi, 0x7c00 */
    II(0x1016d380, 0x5)   calld(/* sys */ 0x1016cae8, -0x89d);  /* call 0x1016cae8 */
    II(0x1016d385, 0x3)   sar(esi, 0xa);                        /* sar esi, 0xa */
    II(0x1016d388, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1016d38a, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d38c, 0x6)   and_(ebx, 0x3e0);                     /* and ebx, 0x3e0 */
    II(0x1016d392, 0x5)   calld(/* sys */ 0x1016cae8, -0x8af);  /* call 0x1016cae8 */
    II(0x1016d397, 0x3)   sar(ebx, 0x5);                        /* sar ebx, 0x5 */
    II(0x1016d39a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1016d39c, 0x3)   mov(eax, memd_a32(ss, esp));          /* mov eax, [esp] */
    II(0x1016d39f, 0x3)   and_(edx, 0x1f);                      /* and edx, 0x1f */
l_0x1016d3a2:
    II(0x1016d3a2, 0x4)   mov(edi, memd_a32(ss, esp + 0x3c));   /* mov edi, [esp+0x3c] */
    II(0x1016d3a6, 0x1)   inc(eax);                             /* inc eax */
    II(0x1016d3a7, 0x4)   mov(cl, memb_a32(ss, esp + 0x3c));    /* mov cl, [esp+0x3c] */
    II(0x1016d3ab, 0x1)   inc(edi);                             /* inc edi */
    II(0x1016d3ac, 0x3)   mov(memb_a32(ds, eax - 0x1), cl);     /* mov [eax-0x1], cl */
    II(0x1016d3af, 0x4)   mov(memd_a32(ss, esp + 0x3c), edi);   /* mov [esp+0x3c], edi */
    II(0x1016d3b3, 0x6)   cmp(edi, 0x100);                      /* cmp edi, 0x100 */
    II(0x1016d3b9, 0x2)   jld(0x1016d3a2, -0x19);               /* jl 0x1016d3a2 */
    II(0x1016d3bb, 0x3)   mov(eax, memd_a32(ss, esp));          /* mov eax, [esp] */
    II(0x1016d3be, 0x4)   mov(memd_a32(ss, esp + 0x8), edx);    /* mov [esp+0x8], edx */
    II(0x1016d3c2, 0x4)   mov(memd_a32(ss, esp + 0x24), edx);   /* mov [esp+0x24], edx */
    II(0x1016d3c6, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x1016d3cb, 0x4)   mov(memd_a32(ss, esp + 0x10), ebx);   /* mov [esp+0x10], ebx */
    II(0x1016d3cf, 0x4)   mov(memd_a32(ss, esp + 0x2c), eax);   /* mov [esp+0x2c], eax */
    II(0x1016d3d3, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x1016d3d8, 0x4)   mov(memd_a32(ss, esp + 0x18), ebx);   /* mov [esp+0x18], ebx */
    II(0x1016d3dc, 0x4)   mov(memd_a32(ss, esp + 0x28), eax);   /* mov [esp+0x28], eax */
    II(0x1016d3e0, 0x3)   mov(eax, memd_a32(ss, esp));          /* mov eax, [esp] */
    II(0x1016d3e3, 0x4)   mov(memd_a32(ss, esp + 0x4), esi);    /* mov [esp+0x4], esi */
    II(0x1016d3e7, 0x5)   add(eax, 0x800);                      /* add eax, 0x800 */
    II(0x1016d3ec, 0x4)   mov(memd_a32(ss, esp + 0x1c), esi);   /* mov [esp+0x1c], esi */
    II(0x1016d3f0, 0x4)   mov(memd_a32(ss, esp + 0xc), eax);    /* mov [esp+0xc], eax */
l_0x1016d3f4:
    II(0x1016d3f4, 0x4)   mov(ebp, memd_a32(ss, esp + 0x28));   /* mov ebp, [esp+0x28] */
    II(0x1016d3f8, 0x4)   mov(eax, memd_a32(ss, esp + 0x1c));   /* mov eax, [esp+0x1c] */
    II(0x1016d3fc, 0x4)   mov(edi, memd_a32(ss, esp + 0x2c));   /* mov edi, [esp+0x2c] */
    II(0x1016d400, 0x4)   mov(memd_a32(ss, esp + 0x38), eax);   /* mov [esp+0x38], eax */
    II(0x1016d404, 0x4)   mov(eax, memd_a32(ss, esp + 0x18));   /* mov eax, [esp+0x18] */
    II(0x1016d408, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1016d40a, 0x4)   mov(memd_a32(ss, esp + 0x30), eax);   /* mov [esp+0x30], eax */
    II(0x1016d40e, 0x4)   mov(eax, memd_a32(ss, esp + 0x24));   /* mov eax, [esp+0x24] */
    II(0x1016d412, 0x4)   mov(memd_a32(ss, esp + 0x3c), edx);   /* mov [esp+0x3c], edx */
    II(0x1016d416, 0x4)   mov(memd_a32(ss, esp + 0x34), eax);   /* mov [esp+0x34], eax */
l_0x1016d41a:
    II(0x1016d41a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1016d41c, 0x4)   mov(dl, memb_a32(ss, esp + 0x3c));    /* mov dl, [esp+0x3c] */
    II(0x1016d420, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d422, 0x5)   calld(/* sys */ 0x1016cae8, -0x93f);  /* call 0x1016cae8 */
    II(0x1016d427, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x1016d429, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d42b, 0x6)   and_(esi, 0x7c00);                    /* and esi, 0x7c00 */
    II(0x1016d431, 0x5)   calld(/* sys */ 0x1016cae8, -0x94e);  /* call 0x1016cae8 */
    II(0x1016d436, 0x3)   sar(esi, 0xa);                        /* sar esi, 0xa */
    II(0x1016d439, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1016d43b, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d43d, 0x2)   mov(edx, ebp);                        /* mov edx, ebp */
    II(0x1016d43f, 0x3)   imul(edx, esi);                       /* imul edx, esi */
    II(0x1016d442, 0x5)   calld(/* sys */ 0x1016cae8, -0x95f);  /* call 0x1016cae8 */
    II(0x1016d447, 0x4)   mov(esi, memd_a32(ss, esp + 0x38));   /* mov esi, [esp+0x38] */
    II(0x1016d44b, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1016d44d, 0x2)   add(edx, esi);                        /* add edx, esi */
    II(0x1016d44f, 0x5)   mov(esi, 0x7);                        /* mov esi, 0x7 */
    II(0x1016d454, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d456, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1016d459, 0x2)   idiv(esi);                            /* idiv esi */
    II(0x1016d45b, 0x6)   and_(ebx, 0x3e0);                     /* and ebx, 0x3e0 */
    II(0x1016d461, 0x3)   sar(ebx, 0x5);                        /* sar ebx, 0x5 */
    II(0x1016d464, 0x2)   mov(edx, ebp);                        /* mov edx, ebp */
    II(0x1016d466, 0x3)   imul(edx, ebx);                       /* imul edx, ebx */
    II(0x1016d469, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x1016d46b, 0x4)   add(edx, memd_a32(ss, esp + 0x30));   /* add edx, [esp+0x30] */
    II(0x1016d46f, 0x5)   mov(ebx, 0x7);                        /* mov ebx, 0x7 */
    II(0x1016d474, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d476, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1016d479, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1016d47b, 0x3)   and_(ecx, 0x1f);                      /* and ecx, 0x1f */
    II(0x1016d47e, 0x2)   mov(edx, ebp);                        /* mov edx, ebp */
    II(0x1016d480, 0x3)   imul(edx, ecx);                       /* imul edx, ecx */
    II(0x1016d483, 0x4)   mov(ecx, memd_a32(ss, esp + 0x34));   /* mov ecx, [esp+0x34] */
    II(0x1016d487, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1016d489, 0x2)   add(edx, ecx);                        /* add edx, ecx */
    II(0x1016d48b, 0x5)   mov(ecx, 0x7);                        /* mov ecx, 0x7 */
    II(0x1016d490, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d492, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1016d495, 0x2)   idiv(ecx);                            /* idiv ecx */
    II(0x1016d497, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1016d499, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1016d49b, 0x3)   shl(esi, 0xa);                        /* shl esi, 0xa */
    II(0x1016d49e, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x1016d4a1, 0x2)   or_(eax, esi);                        /* or eax, esi */
    II(0x1016d4a3, 0x2)   or_(eax, ecx);                        /* or eax, ecx */
    II(0x1016d4a5, 0x6)   mov(al, memb_a32(ds, eax + 0x10200520)); /* mov al, [eax+0x10200520] */
    II(0x1016d4ab, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1016d4b0, 0x4)   mov(esi, memd_a32(ss, esp + 0x3c));   /* mov esi, [esp+0x3c] */
    II(0x1016d4b4, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1016d4b9, 0x1)   inc(edi);                             /* inc edi */
    II(0x1016d4ba, 0x1)   inc(esi);                             /* inc esi */
    II(0x1016d4bb, 0x3)   mov(memb_a32(ds, edi - 0x1), al);     /* mov [edi-0x1], al */
    II(0x1016d4be, 0x4)   mov(memd_a32(ss, esp + 0x3c), esi);   /* mov [esp+0x3c], esi */
    II(0x1016d4c2, 0x6)   cmp(esi, 0x100);                      /* cmp esi, 0x100 */
    II(0x1016d4c8, 0x6)   jld(0x1016d41a, -0xb4);               /* jl dword 0x1016d41a */
    II(0x1016d4ce, 0x4)   mov(edx, memd_a32(ss, esp + 0x2c));   /* mov edx, [esp+0x2c] */
    II(0x1016d4d2, 0x4)   mov(eax, memd_a32(ss, esp + 0x8));    /* mov eax, [esp+0x8] */
    II(0x1016d4d6, 0x4)   mov(ebx, memd_a32(ss, esp + 0x24));   /* mov ebx, [esp+0x24] */
    II(0x1016d4da, 0x4)   mov(ecx, memd_a32(ss, esp + 0x18));   /* mov ecx, [esp+0x18] */
    II(0x1016d4de, 0x4)   mov(esi, memd_a32(ss, esp + 0x1c));   /* mov esi, [esp+0x1c] */
    II(0x1016d4e2, 0x4)   mov(edi, memd_a32(ss, esp + 0x28));   /* mov edi, [esp+0x28] */
    II(0x1016d4e6, 0x4)   mov(ebp, memd_a32(ss, esp + 0xc));    /* mov ebp, [esp+0xc] */
    II(0x1016d4ea, 0x6)   add(edx, 0x100);                      /* add edx, 0x100 */
    II(0x1016d4f0, 0x1)   dec(edi);                             /* dec edi */
    II(0x1016d4f1, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x1016d4f3, 0x4)   mov(eax, memd_a32(ss, esp + 0x10));   /* mov eax, [esp+0x10] */
    II(0x1016d4f7, 0x4)   mov(memd_a32(ss, esp + 0x2c), edx);   /* mov [esp+0x2c], edx */
    II(0x1016d4fb, 0x4)   mov(memd_a32(ss, esp + 0x24), ebx);   /* mov [esp+0x24], ebx */
    II(0x1016d4ff, 0x2)   add(ecx, eax);                        /* add ecx, eax */
    II(0x1016d501, 0x4)   mov(eax, memd_a32(ss, esp + 0x4));    /* mov eax, [esp+0x4] */
    II(0x1016d505, 0x4)   mov(memd_a32(ss, esp + 0x28), edi);   /* mov [esp+0x28], edi */
    II(0x1016d509, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x1016d50b, 0x4)   mov(memd_a32(ss, esp + 0x18), ecx);   /* mov [esp+0x18], ecx */
    II(0x1016d50f, 0x4)   mov(memd_a32(ss, esp + 0x1c), esi);   /* mov [esp+0x1c], esi */
    II(0x1016d513, 0x2)   cmp(edx, ebp);                        /* cmp edx, ebp */
    II(0x1016d515, 0x2)   jzd(0x1016d51c, 0x5);                 /* jz 0x1016d51c */
    II(0x1016d517, 0x5)   jmpd(0x1016d3f4, -0x128);             /* jmp 0x1016d3f4 */
l_0x1016d51c:
    II(0x1016d51c, 0x3)   mov(eax, memd_a32(ss, esp));          /* mov eax, [esp] */
    II(0x1016d51f, 0x5)   add(eax, 0x900);                      /* add eax, 0x900 */
    II(0x1016d524, 0x3)   mov(ebp, memd_a32(ss, esp));          /* mov ebp, [esp] */
    II(0x1016d527, 0x4)   mov(memd_a32(ss, esp + 0x20), eax);   /* mov [esp+0x20], eax */
    II(0x1016d52b, 0x3)   mov(eax, memd_a32(ss, esp));          /* mov eax, [esp] */
    II(0x1016d52e, 0x2)   xor_(edi, edi);                       /* xor edi, edi */
    II(0x1016d530, 0x5)   add(eax, 0x1000);                     /* add eax, 0x1000 */
    II(0x1016d535, 0x6)   add(ebp, 0x800);                      /* add ebp, 0x800 */
    II(0x1016d53b, 0x4)   mov(memd_a32(ss, esp + 0x14), eax);   /* mov [esp+0x14], eax */
l_0x1016d53f:
    II(0x1016d53f, 0x5)   mov(ebx, 0x7);                        /* mov ebx, 0x7 */
    II(0x1016d544, 0x2)   mov(edx, edi);                        /* mov edx, edi */
    II(0x1016d546, 0x2)   mov(eax, edi);                        /* mov eax, edi */
    II(0x1016d548, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1016d54b, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1016d54d, 0x4)   mov(esi, memd_a32(ss, esp + 0x20));   /* mov esi, [esp+0x20] */
    II(0x1016d551, 0x6)   lea(ecx, eax + 0xffff);               /* lea ecx, [eax+0xffff] */
    II(0x1016d557, 0x2)   mov(ebx, ebp);                        /* mov ebx, ebp */
l_0x1016d559:
    II(0x1016d559, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1016d55b, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1016d55d, 0x4)   mov(dl, memb_a32(ss, esp + 0x40));    /* mov dl, [esp+0x40] */
    II(0x1016d561, 0x5)   calld(/* sys */ 0x1016cab4, -0xab2);  /* call 0x1016cab4 */
    II(0x1016d566, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1016d56b, 0x1)   inc(ebx);                             /* inc ebx */
    II(0x1016d56c, 0x3)   mov(memb_a32(ds, ebx - 0x1), al);     /* mov [ebx-0x1], al */
    II(0x1016d56f, 0x2)   cmp(ebx, esi);                        /* cmp ebx, esi */
    II(0x1016d571, 0x2)   jnzd(0x1016d559, -0x1a);              /* jnz 0x1016d559 */
    II(0x1016d573, 0x4)   mov(eax, memd_a32(ss, esp + 0x20));   /* mov eax, [esp+0x20] */
    II(0x1016d577, 0x4)   mov(edx, memd_a32(ss, esp + 0x14));   /* mov edx, [esp+0x14] */
    II(0x1016d57b, 0x6)   add(edi, 0x10000);                    /* add edi, 0x10000 */
    II(0x1016d581, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x1016d586, 0x6)   add(ebp, 0x100);                      /* add ebp, 0x100 */
    II(0x1016d58c, 0x4)   mov(memd_a32(ss, esp + 0x20), eax);   /* mov [esp+0x20], eax */
    II(0x1016d590, 0x2)   cmp(ebp, edx);                        /* cmp ebp, edx */
    II(0x1016d592, 0x2)   jnzd(0x1016d53f, -0x55);              /* jnz 0x1016d53f */
    II(0x1016d594, 0x3)   add(esp, 0x44);                       /* add esp, 0x44 */
    II(0x1016d597, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1016d598, 0x1)   popd(edi);                            /* pop edi */
    II(0x1016d599, 0x1)   popd(esi);                            /* pop esi */
    II(0x1016d59a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1016d59b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1016d59c, 0x1)   retd();                               /* ret */
FUNC_END

