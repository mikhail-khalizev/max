FUNC_BEGIN(/* sys */ 0x1017ba30, 0x3360ed91f06a1533, 0x20, ({0x55, 0x89, 0xe5, 0x56, 0x57, 0x83, 0xec, 0x14, 0xa1, 0x74, 0x9c, 0x20, 0x10, 0x89, 0x45, 0xe8, 0xa1, 0x70, 0x9c, 0x20, 0x10, 0x8b, 0x15, 0x58, 0xe4, 0x1b, 0x10, 0x89, 0x45, 0xf4, 0x85, 0xd2, 0x75, 0xa, 0xb8, 0xf6, 0xff, 0xff, 0xff, 0xe9, 0xfb, 0x3, 0, 0, 0x83, 0x3d, 0x54, 0xe4, 0x1b, 0x10, 0, 0x74, 0x19, 0x83, 0x3d, 0x18, 0xe4, 0x1b, 0x10, 0xff, 0x74, 0x8, 0x31, 0xf6, 0x89, 0x35, 0x38, 0xe4, 0x1b, 0x10, 0x31, 0xff, 0x89, 0x3d, 0x54, 0xe4, 0x1b, 0x10, 0x31, 0xc0, 0x8b, 0x5d, 0xf4, 0x89, 0x45, 0xe4, 0x89, 0x45, 0xec, 0x85, 0xdb, 0x75, 0xa, 0xba, 0xfe, 0xff, 0xff, 0xff, 0xe9, 0x58, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x8b, 0x4d, 0xf4, 0x1, 0xc1, 0x8b, 0x1, 0x89, 0x45, 0xf0, 0x31, 0xc0, 0x89, 0x4d, 0xf4, 0x66, 0x8b, 0x45, 0xf0, 0x8d, 0x71, 0x4, 0x89, 0x45, 0xe8, 0x8a, 0x65, 0xf2, 0x89, 0x75, 0xf4, 0x80, 0xfc, 0x11, 0x77, 0xd9, 0x31, 0xc0, 0x8a, 0x45, 0xf2, 0x2e, 0xff, 0x24, 0x85, 0xe8, 0xb9, 0x17, 0x10, 0xba, 0xff, 0xff, 0xff, 0xff, 0x89, 0xd0, 0x8d, 0x65, 0xf8, 0x5f, 0x5e, 0x5d, 0xc3, 0x31, 0xd2, 0x8b, 0x6, 0x66, 0x8b, 0x56, 0x4, 0xe8, 0xca, 0xdb, 0xff, 0xff, 0x85, 0xc0, 0x75, 0xad, 0xba, 0xfd, 0xff, 0xff, 0xff, 0x83, 0x3d, 0x58, 0xe4, 0x1b, 0x10, 0, 0x74, 0x17, 0xe8, 0xf3, 0xdc, 0xff, 0xff, 0xe8, 0x4e, 0xdb, 0xff, 0xff, 0x31, 0xf6, 0xe8, 0xa7, 0xe1, 0xff, 0xff, 0x89, 0x35, 0x58, 0xe4, 0x1b, 0x10, 0x89, 0xd0, 0x8d, 0x65, 0xf8, 0x5f, 0x5e, 0x5d, 0xc3, 0x8a, 0x75, 0xf3, 0x89, 0xf0, 0x80, 0xfe, 0x1, 0x72, 0x13, 0x66, 0x8b, 0x56, 0x2, 0xc1, 0xe2, 0xd, 0x66, 0xc1, 0xea, 0xf, 0x81, 0xe2, 0xff, 0xff, 0, 0, 0xeb, 0x2, 0x31, 0xd2, 0x8a, 0x4d, 0xf3, 0x89, 0xd3, 0x8b, 0x50, 0x6, 0x84, 0xc9, 0x75, 0x6, 0x81, 0xe2, 0xff, 0xff, 0, 0, 0x53, 0x66, 0x8b, 0x58, 0x2, 0xc1, 0xe3, 0xe, 0x66, 0xc1, 0xeb, 0xf, 0x81, 0xe3, 0xff, 0xff, 0, 0, 0x31, 0xc9, 0x53, 0x66, 0x8b, 0x58, 0x2, 0x66, 0x8b, 0x48, 0x4, 0x80, 0xe3, 0x1, 0x30, 0xff, 0x81, 0xe3, 0xff, 0xff, 0, 0, 0x66, 0x8b, 0, 0x25, 0xff, 0xff, 0, 0, 0xe8, 0x72, 0xe1, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x85, 0x11, 0xff, 0xff, 0xff, 0xba, 0xfc, 0xff, 0xff, 0xff, 0xe9, 0x5f, 0xff, 0xff, 0xff, 0xe8, 0xcb, 0xe3, 0xff, 0xff, 0xe9, 0xfd, 0xfe, 0xff, 0xff, 0x8a, 0x7d, 0xf3, 0x89, 0xf0, 0x80, 0xff, 0x2, 0x72, 0x8, 0x31, 0xd2, 0x66, 0x8b, 0x56, 0x6, 0xeb, 0x2, 0x31, 0xd2, 0x89, 0xd1, 0x80, 0x7d, 0xf3, 0x1, 0x72, 0x8, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x4, 0xeb, 0x5, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x50, 0x2, 0x66, 0x8b, 0, 0x25, 0xff, 0xff, 0, 0, 0xe8, 0x7a, 0xe8, 0xff, 0xff, 0x85, 0xc0, 0x75, 0xa, 0xba, 0xfb, 0xff, 0xff, 0xff, 0xe9, 0xb, 0xff, 0xff, 0xff, 0xa1, 0xd0, 0x9c, 0x20, 0x10, 0x8b, 0x35, 0x4, 0xe2, 0x1b, 0x10, 0x31, 0xd2, 0x8d, 0x4, 0x85, 0, 0, 0, 0, 0xf7, 0xf6, 0x8b, 0x3d, 0xcc, 0x9c, 0x20, 0x10, 0x24, 0xf0, 0x85, 0xff, 0x74, 0x2, 0xd1, 0xe8, 0x8b, 0x15, 0x84, 0x9c, 0x20, 0x10, 0x85, 0xd2, 0x7d, 0x2, 0x31, 0xd2, 0x8b, 0x1d, 0xb4, 0x9c, 0x20, 0x10, 0x1, 0xd0, 0x39, 0xd8, 0x77, 0x22, 0x8b, 0xd, 0x88, 0x9c, 0x20, 0x10, 0x85, 0xc9, 0x7d, 0x4, 0x31, 0xc0, 0xeb, 0x2, 0x89, 0xc8, 0x8b, 0x35, 0xf0, 0x9c, 0x20, 0x10, 0x8b, 0x3d, 0xbc, 0x9c, 0x20, 0x10, 0x1, 0xf0, 0x39, 0xf8, 0x76, 0xa, 0xba, 0xfa, 0xff, 0xff, 0xff, 0xe9, 0xa3, 0xfe, 0xff, 0xff, 0x83, 0x3d, 0xcc, 0x9c, 0x20, 0x10, 0, 0xf, 0x84, 0x3e, 0xfe, 0xff, 0xff, 0x83, 0x3d, 0x94, 0x9c, 0x20, 0x10, 0, 0xf, 0x85, 0x31, 0xfe, 0xff, 0xff, 0xba, 0xfa, 0xff, 0xff, 0xff, 0xe9, 0x7f, 0xfe, 0xff, 0xff, 0x8a, 0x5e, 0xc, 0x89, 0xf0, 0xf6, 0xc3, 0x1, 0x74, 0x18, 0x8b, 0x1d, 0xc8, 0x9c, 0x20, 0x10, 0x8b, 0x15, 0xd8, 0x9c, 0x20, 0x10, 0x89, 0x1d, 0xd8, 0x9c, 0x20, 0x10, 0x89, 0x15, 0xc8, 0x9c, 0x20, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x50, 0xa, 0x52, 0x31, 0xd2, 0x66, 0x8b, 0x50, 0x8, 0x52, 0x31, 0xd2, 0x66, 0x8b, 0x50, 0x6, 0x52, 0x31, 0xd2, 0x66, 0x8b, 0x50, 0x4, 0x52, 0x83, 0xc0, 0xe, 0x50, 0xe8, 0xc3, 0x26, 0x1, 0, 0x83, 0xc4, 0x14, 0xe9, 0xd8, 0xfd, 0xff, 0xff, 0xff, 0x5, 0x7c, 0x9c, 0x20, 0x10, 0x8a, 0x45, 0xf3, 0x31, 0xff, 0x3c, 0x1, 0x72, 0x4, 0x66, 0x8b, 0x7e, 0x4, 0x83, 0x3d, 0x10, 0xe2, 0x1b, 0x10, 0, 0x75, 0x1f, 0x66, 0x83, 0x7e, 0x2, 0, 0x74, 0x18, 0x83, 0x7d, 0xe4, 0, 0x75, 0x12, 0x31, 0xd2, 0x31, 0xc0, 0x66, 0x8b, 0x56, 0x2, 0x66, 0x8b, 0x6, 0xe8, 0x88, 0xed, 0xff, 0xff, 0xeb, 0x2e, 0x83, 0x3d, 0x10, 0xe2, 0x1b, 0x10, 0, 0x75, 0x25, 0x8b, 0x1d, 0x94, 0x9c, 0x20, 0x10, 0x31, 0xc0, 0x31, 0xd2, 0x66, 0x8b, 0x6, 0x66, 0x8b, 0x56, 0x2, 0x85, 0xdb, 0x75, 0x10, 0x52, 0x50, 0x68, 0x50, 0x97, 0x20, 0x10, 0xff, 0x15, 0x50, 0xe4, 0x1b, 0x10, 0x83, 0xc4, 0xc, 0x8b, 0x4d, 0xe4, 0x85, 0xc9, 0x74, 0x14, 0x8b, 0x15, 0x88, 0x9c, 0x20, 0x10, 0xa1, 0x84, 0x9c, 0x20, 0x10, 0x89, 0xcb, 0xe8, 0x7f, 0xeb, 0xff, 0xff, 0xeb, 0x3d, 0x83, 0x3d, 0x24, 0xe4, 0x1b, 0x10, 0, 0x74, 0x22, 0x66, 0x83, 0x7e, 0x2, 0, 0x75, 0x1b, 0xba, 0x1, 0, 0, 0, 0x8b, 0x1d, 0x78, 0x9c, 0x20, 0x10, 0x1, 0xd3, 0x89, 0x15, 0x28, 0xe4, 0x1b, 0x10, 0x89, 0x1d, 0x78, 0x9c, 0x20, 0x10, 0xeb, 0x12, 0x8b, 0x15, 0x88, 0x9c, 0x20, 0x10, 0xa1, 0x84, 0x9c, 0x20, 0x10, 0x89, 0xfb, 0xe8, 0x40, 0xe9, 0xff, 0xff, 0x83, 0x3d, 0x10, 0xe2, 0x1b, 0x10, 0, 0x75, 0x3c, 0x66, 0x8b, 0x4e, 0x2, 0x66, 0x85, 0xc9, 0x74, 0x33, 0x83, 0x7d, 0xe4, 0, 0x75, 0x2d, 0x31, 0xc0, 0x31, 0xd2, 0x66, 0x89, 0xc8, 0x8b, 0xd, 0x94, 0x9c, 0x20, 0x10, 0x66, 0x8b, 0x16, 0x85, 0xc9, 0xf, 0x85, 0x95, 0, 0, 0, 0x50, 0x52, 0x68, 0x50, 0x97, 0x20, 0x10, 0xff, 0x15, 0x50, 0xe4, 0x1b, 0x10, 0x83, 0xc4, 0xc, 0xe9, 0x80, 0, 0, 0, 0x83, 0x3d, 0x10, 0xe2, 0x1b, 0x10, 0, 0xf, 0x84, 0x73, 0, 0, 0, 0x66, 0x83, 0x7e, 0x2, 0, 0x74, 0x15, 0xfa, 0x6a, 0x1, 0xe8, 0x76, 0x85, 0x1, 0, 0x83, 0xc4, 0x4, 0x6a, 0, 0xe8, 0x6c, 0x85, 0x1, 0, 0x83, 0xc4, 0x4, 0x8b, 0x15, 0x8, 0xe2, 0x1b, 0x10, 0x31, 0xc0, 0x8b, 0x14, 0x95, 0xc, 0xe2, 0x1b, 0x10, 0xe8, 0xae, 0xd, 0x1, 0, 0x66, 0x83, 0x7e, 0x2, 0, 0x74, 0xa, 0x6a, 0x1, 0xe8, 0x47, 0x85, 0x1, 0, 0x83, 0xc4, 0x4, 0x8b, 0x1d, 0x94, 0x9c, 0x20, 0x10, 0x31, 0xd2, 0x31, 0xc0, 0x66, 0x8b, 0x16, 0x66, 0x8b, 0x46, 0x2, 0x85, 0xdb, 0x75, 0x10, 0x50, 0x52, 0x68, 0x50, 0x97, 0x20, 0x10, 0xff, 0x15, 0x50, 0xe4, 0x1b, 0x10, 0x83, 0xc4, 0xc, 0x66, 0x83, 0x7e, 0x2, 0, 0xf, 0x84, 0x2, 0, 0, 0, 0xfb, 0xfc, 0x8b, 0x45, 0xf4, 0xa3, 0x70, 0x9c, 0x20, 0x10, 0x8b, 0x45, 0xe8, 0xa3, 0x74, 0x9c, 0x20, 0x10, 0x31, 0xc0, 0x8d, 0x65, 0xf8, 0x5f, 0x5e, 0x5d, 0xc3, 0x8b, 0x55, 0xf4, 0x31, 0xc0, 0x8b, 0x35, 0x80, 0x9c, 0x20, 0x10, 0x66, 0x8b, 0x42, 0x2, 0x85, 0xf0, 0xf, 0x84, 0x22, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x31, 0xd2, 0x8a, 0x6d, 0xf2, 0x66, 0x8b, 0x50, 0x4, 0x80, 0xfd, 0x8, 0x75, 0x5, 0x83, 0xc0, 0x6, 0xeb, 0x2, 0x31, 0xc0, 0xe8, 0x3e, 0xe3, 0xff, 0xff, 0xe9, 0, 0xfc, 0xff, 0xff, 0x83, 0x3d, 0x48, 0xe4, 0x1b, 0x10, 0, 0xf, 0x84, 0xf3, 0xfb, 0xff, 0xff, 0x8b, 0xd, 0, 0xe2, 0x1b, 0x10, 0x66, 0x8b, 0x76, 0x4, 0x85, 0xc9, 0x74, 0xf, 0xf6, 0x5, 0, 0xe2, 0x1b, 0x10, 0x4, 0x75, 0x6, 0x81, 0xce, 0, 0x80, 0, 0, 0x8b, 0x3d, 0x4c, 0xe4, 0x1b, 0x10, 0xf, 0xbf, 0xc6, 0x39, 0xf8, 0x74, 0x3b, 0xf, 0xbf, 0xc6, 0x50, 0xe8, 0x99, 0xf6, 0xff, 0xff, 0x83, 0xc4, 0x4, 0x85, 0xc0, 0x75, 0xa, 0xba, 0xf9, 0xff, 0xff, 0xff, 0xe9, 0x7, 0xfc, 0xff, 0xff, 0x83, 0x3d, 0x14, 0xe2, 0x1b, 0x10, 0, 0x74, 0x18, 0x31, 0xd2, 0xa1, 0xc0, 0x9c, 0x20, 0x10, 0x89, 0x15, 0x8, 0xe2, 0x1b, 0x10, 0x89, 0x15, 0xc, 0xe2, 0x1b, 0x10, 0xa3, 0x10, 0xe2, 0x1b, 0x10, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0xc6, 0x89, 0xd, 0x48, 0xe4, 0x1b, 0x10, 0xa3, 0x4c, 0xe4, 0x1b, 0x10, 0xe9, 0x76, 0xfb, 0xff, 0xff, 0x89, 0xf2, 0x31, 0xc0, 0x31, 0xc9, 0x8a, 0x46, 0x5, 0x31, 0xdb, 0x50, 0x31, 0xc0, 0x8a, 0x4e, 0x3, 0x8a, 0x46, 0x4, 0x8a, 0x5e, 0x2, 0x50, 0x89, 0xf0, 0x31, 0xf2, 0x31, 0xf0, 0x8a, 0x56, 0x1, 0x8a, 0x6, 0xe8, 0x67, 0xeb, 0xff, 0xff, 0xe8, 0x92, 0xea, 0xff, 0xff, 0xe9, 0x44, 0xfb, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0xbf, 0x50, 0x97, 0x20, 0x10, 0x83, 0xc6, 0x4, 0x31, 0xc0, 0x31, 0xc9, 0x66, 0x8b, 0x2, 0x66, 0x8b, 0x4a, 0x2, 0x8d, 0x4, 0x40, 0x8d, 0xc, 0x49, 0x1, 0xc7, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0xe8, 0x5a, 0xea, 0xff, 0xff, 0xe9, 0xc, 0xfb, 0xff, 0xff, 0x56, 0xe8, 0xb1, 0x81, 0x1, 0, 0x83, 0xc4, 0x4, 0xe8, 0x47, 0xea, 0xff, 0xff, 0xe9, 0xf9, 0xfa, 0xff, 0xff, 0x89, 0x75, 0xe4, 0xe9, 0xf1, 0xfa, 0xff, 0xff, 0x89, 0x75, 0xec, 0xe9, 0xe9, 0xfa, 0xff, 0xff, 0x8a, 0x7e, 0xc, 0x89, 0xf0, 0xf6, 0xc7, 0x1, 0x74, 0x18, 0x8b, 0x15, 0xc8, 0x9c, 0x20, 0x10, 0x8b, 0x1d, 0xd8, 0x9c, 0x20, 0x10, 0x89, 0x15, 0xd8, 0x9c, 0x20, 0x10, 0x89, 0x1d, 0xc8, 0x9c, 0x20, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x50, 0xa, 0x52, 0x31, 0xd2, 0x66, 0x8b, 0x50, 0x8, 0x52, 0x31, 0xd2, 0x66, 0x8b, 0x50, 0x6, 0x52, 0x31, 0xd2, 0x66, 0x8b, 0x50, 0x4, 0x52, 0x83, 0xc0, 0xe, 0x50, 0x8b, 0x7d, 0xec, 0x57, 0x8b, 0x45, 0xe4, 0x50, 0xe8, 0x97, 0x25, 0x1, 0, 0x83, 0xc4, 0x1c, 0xe9, 0x92, 0xfa, 0xff, 0xff, 0x8a, 0x55, 0xf3, 0x89, 0xf0, 0x80, 0xfa, 0x3, 0x73, 0xa, 0xba, 0xf8, 0xff, 0xff, 0xff, 0xe9, 0xd6, 0xfa, 0xff, 0xff, 0xf6, 0x46, 0xc, 0x1, 0x74, 0x18, 0x8b, 0x15, 0xc8, 0x9c, 0x20, 0x10, 0x8b, 0x1d, 0xd8, 0x9c, 0x20, 0x10, 0x89, 0x15, 0xd8, 0x9c, 0x20, 0x10, 0x89, 0x1d, 0xc8, 0x9c, 0x20, 0x10, 0x8b, 0x3d, 0xcc, 0x9c, 0x20, 0x10, 0x8d, 0x50, 0xe, 0x85, 0xff, 0x74, 0x44, 0x83, 0x3d, 0, 0xe2, 0x1b, 0x10, 0, 0x74, 0xa, 0xba, 0xf8, 0xff, 0xff, 0xff, 0xe9, 0x98, 0xfa, 0xff, 0xff, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0xa, 0x53, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x8, 0x53, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x6, 0x53, 0x66, 0x8b, 0x40, 0x4, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x52, 0x8b, 0x75, 0xec, 0x56, 0xe8, 0xc4, 0x53, 0x1, 0, 0x83, 0xc4, 0x18, 0xe9, 0xf, 0xfa, 0xff, 0xff, 0x8b, 0x1d, 0, 0xe2, 0x1b, 0x10, 0x83, 0xe3, 0x3, 0x83, 0xfb, 0x1, 0x75, 0x31, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0xa, 0x53, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x8, 0x53, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x6, 0x53, 0x66, 0x8b, 0x40, 0x4, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x52, 0x8b, 0x5d, 0xec, 0x53, 0xe8, 0x15, 0x42, 0x1, 0, 0x83, 0xc4, 0x18, 0xe9, 0xd0, 0xf9, 0xff, 0xff, 0x83, 0xfb, 0x2, 0x75, 0x31, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0xa, 0x53, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x8, 0x53, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x6, 0x53, 0x66, 0x8b, 0x40, 0x4, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x52, 0x8b, 0x55, 0xec, 0x52, 0xe8, 0xdf, 0x41, 0x1, 0, 0x83, 0xc4, 0x18, 0xe9, 0x9a, 0xf9, 0xff, 0xff, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0xa, 0x53, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x8, 0x53, 0x31, 0xdb, 0x66, 0x8b, 0x58, 0x6, 0x53, 0x66, 0x8b, 0x40, 0x4, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x52, 0x8b, 0x45, 0xec, 0x50, 0xe8, 0x1a, 0x27, 0x1, 0, 0x83, 0xc4, 0x18, 0xe9, 0x69, 0xf9, 0xff, 0xff, 0xe8, 0x7d, 0xd8, 0xff, 0xff, 0x31, 0xdb, 0x89, 0x45, 0xf4, 0x89, 0x5d, 0xe8, 0xe9, 0x3e, 0xf9, 0xff, 0xff}))
    II(0x1017ba30, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1017ba31, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1017ba33, 0x1)   pushd(esi);                           /* push esi */
    II(0x1017ba34, 0x1)   pushd(edi);                           /* push edi */
    II(0x1017ba35, 0x3)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1017ba38, 0x5)   mov(eax, memd_a32(ds, 0x10209c74));   /* mov eax, [0x10209c74] */
    II(0x1017ba3d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1017ba40, 0x5)   mov(eax, memd_a32(ds, 0x10209c70));   /* mov eax, [0x10209c70] */
    II(0x1017ba45, 0x6)   mov(edx, memd_a32(ds, 0x101be458));   /* mov edx, [0x101be458] */
    II(0x1017ba4b, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1017ba4e, 0x2)   test(edx, edx);                       /* test edx, edx */
    II(0x1017ba50, 0x2)   jnzd(0x1017ba5c, 0xa);                /* jnz 0x1017ba5c */
    II(0x1017ba52, 0x5)   mov(eax, 0xfffffff6);                 /* mov eax, 0xfffffff6 */
    II(0x1017ba57, 0x5)   jmpd(0x1017be57, 0x3fb);              /* jmp 0x1017be57 */
l_0x1017ba5c:
    II(0x1017ba5c, 0x7)   cmp(memd_a32(ds, 0x101be454), 0);     /* cmp dword [0x101be454], 0x0 */
    II(0x1017ba63, 0x2)   jzd(0x1017ba7e, 0x19);                /* jz 0x1017ba7e */
    II(0x1017ba65, 0x7)   cmp(memd_a32(ds, 0x101be418), -0x1 /* 0xff */); /* cmp dword [0x101be418], 0xff */
    II(0x1017ba6c, 0x2)   jzd(0x1017ba76, 0x8);                 /* jz 0x1017ba76 */
    II(0x1017ba6e, 0x2)   xor_(esi, esi);                       /* xor esi, esi */
    II(0x1017ba70, 0x6)   mov(memd_a32(ds, 0x101be438), esi);   /* mov [0x101be438], esi */
l_0x1017ba76:
    II(0x1017ba76, 0x2)   xor_(edi, edi);                       /* xor edi, edi */
    II(0x1017ba78, 0x6)   mov(memd_a32(ds, 0x101be454), edi);   /* mov [0x101be454], edi */
l_0x1017ba7e:
    II(0x1017ba7e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017ba80, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x1017ba83, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1017ba86, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1017ba89, 0x2)   test(ebx, ebx);                       /* test ebx, ebx */
    II(0x1017ba8b, 0x2)   jnzd(0x1017ba97, 0xa);                /* jnz 0x1017ba97 */
    II(0x1017ba8d, 0x5)   mov(edx, 0xfffffffe);                 /* mov edx, 0xfffffffe */
    II(0x1017ba92, 0x5)   jmpd(0x1017baef, 0x58);               /* jmp 0x1017baef */
l_0x1017ba97:
    II(0x1017ba97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1017ba9a, 0x3)   mov(ecx, memd_a32(ss, ebp - 0xc));    /* mov ecx, [ebp-0xc] */
    II(0x1017ba9d, 0x2)   add(ecx, eax);                        /* add ecx, eax */
    II(0x1017ba9f, 0x2)   mov(eax, memd_a32(ds, ecx));          /* mov eax, [ecx] */
    II(0x1017baa1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1017baa4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017baa6, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x1017baa9, 0x4)   mov(ax, memw_a32(ss, ebp - 0x10));    /* mov ax, [ebp-0x10] */
    II(0x1017baad, 0x3)   lea(esi, ecx + 0x4);                  /* lea esi, [ecx+0x4] */
    II(0x1017bab0, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1017bab3, 0x3)   mov(ah, memb_a32(ss, ebp - 0xe));     /* mov ah, [ebp-0xe] */
    II(0x1017bab6, 0x3)   mov(memd_a32(ss, ebp - 0xc), esi);    /* mov [ebp-0xc], esi */
    II(0x1017bab9, 0x3)   cmp(ah, 0x11);                        /* cmp ah, 0x11 */
    II(0x1017babc, 0x2)   jad(0x1017ba97, -0x27);               /* ja 0x1017ba97 */
    II(0x1017babe, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017bac0, 0x3)   mov(al, memb_a32(ss, ebp - 0xe));     /* mov al, [ebp-0xe] */
    II(0x1017bac3, 0x8)   jmpd_abs_switch(memd_a32(cs, eax * 0x4 + /* sys */ 0x1017b9e8), (0x1017bacb)(0x1017bad9)(0x1017bb18)(0x1017bb90)(0x1017bb9a)(0x1017bc70)(0x1017bcbf)(0x1017be5e)(0x1017be97)(0x1017bf21)(0x1017bf53)(0x1017bf8b)(0x1017bf9e)(0x1017bfa6)(0x1017bfae)(0x1017c005)(0x1017c12e)); /* jmp dword near [cs:eax*4+0x1017b9e8] */
l_0x1017bacb:
    II(0x1017bacb, 0x5)   mov(edx, 0xffffffff);                 /* mov edx, 0xffffffff */
    II(0x1017bad0, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1017bad2, 0x3)   lea(esp, ebp - 0x8);                  /* lea esp, [ebp-0x8] */
    II(0x1017bad5, 0x1)   popd(edi);                            /* pop edi */
    II(0x1017bad6, 0x1)   popd(esi);                            /* pop esi */
    II(0x1017bad7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1017bad8, 0x1)   retd();                               /* ret */
l_0x1017bad9:
    II(0x1017bad9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017badb, 0x2)   mov(eax, memd_a32(ds, esi));          /* mov eax, [esi] */
    II(0x1017badd, 0x4)   mov(dx, memw_a32(ds, esi + 0x4));     /* mov dx, [esi+0x4] */
    II(0x1017bae1, 0x5)   calld(/* sys */ 0x101796b0, -0x2436); /* call 0x101796b0 */
    II(0x1017bae6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1017bae8, 0x2)   jnzd(0x1017ba97, -0x53);              /* jnz 0x1017ba97 */
    II(0x1017baea, 0x5)   mov(edx, 0xfffffffd);                 /* mov edx, 0xfffffffd */
l_0x1017baef:
    II(0x1017baef, 0x7)   cmp(memd_a32(ds, 0x101be458), 0);     /* cmp dword [0x101be458], 0x0 */
    II(0x1017baf6, 0x2)   jzd(0x1017bb0f, 0x17);                /* jz 0x1017bb0f */
    II(0x1017baf8, 0x5)   calld(/* sys */ 0x101797f0, -0x230d); /* call 0x101797f0 */
    II(0x1017bafd, 0x5)   calld(/* sys */ 0x10179650, -0x24b2); /* call 0x10179650 */
    II(0x1017bb02, 0x2)   xor_(esi, esi);                       /* xor esi, esi */
    II(0x1017bb04, 0x5)   calld(/* sys */ 0x10179cb0, -0x1e59); /* call 0x10179cb0 */
    II(0x1017bb09, 0x6)   mov(memd_a32(ds, 0x101be458), esi);   /* mov [0x101be458], esi */
l_0x1017bb0f:
    II(0x1017bb0f, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1017bb11, 0x3)   lea(esp, ebp - 0x8);                  /* lea esp, [ebp-0x8] */
    II(0x1017bb14, 0x1)   popd(edi);                            /* pop edi */
    II(0x1017bb15, 0x1)   popd(esi);                            /* pop esi */
    II(0x1017bb16, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1017bb17, 0x1)   retd();                               /* ret */
l_0x1017bb18:
    II(0x1017bb18, 0x3)   mov(dh, memb_a32(ss, ebp - 0xd));     /* mov dh, [ebp-0xd] */
    II(0x1017bb1b, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1017bb1d, 0x3)   cmp(dh, 0x1);                         /* cmp dh, 0x1 */
    II(0x1017bb20, 0x2)   jbd(0x1017bb35, 0x13);                /* jb 0x1017bb35 */
    II(0x1017bb22, 0x4)   mov(dx, memw_a32(ds, esi + 0x2));     /* mov dx, [esi+0x2] */
    II(0x1017bb26, 0x3)   shl(edx, 0xd);                        /* shl edx, 0xd */
    II(0x1017bb29, 0x4)   shr(dx, 0xf);                         /* shr dx, 0xf */
    II(0x1017bb2d, 0x6)   and_(edx, 0xffff);                    /* and edx, 0xffff */
    II(0x1017bb33, 0x2)   jmpd(0x1017bb37, 0x2);                /* jmp 0x1017bb37 */
l_0x1017bb35:
    II(0x1017bb35, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
l_0x1017bb37:
    II(0x1017bb37, 0x3)   mov(cl, memb_a32(ss, ebp - 0xd));     /* mov cl, [ebp-0xd] */
    II(0x1017bb3a, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x1017bb3c, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1017bb3f, 0x2)   test(cl, cl);                         /* test cl, cl */
    II(0x1017bb41, 0x2)   jnzd(0x1017bb49, 0x6);                /* jnz 0x1017bb49 */
    II(0x1017bb43, 0x6)   and_(edx, 0xffff);                    /* and edx, 0xffff */
l_0x1017bb49:
    II(0x1017bb49, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017bb4a, 0x4)   mov(bx, memw_a32(ds, eax + 0x2));     /* mov bx, [eax+0x2] */
    II(0x1017bb4e, 0x3)   shl(ebx, 0xe);                        /* shl ebx, 0xe */
    II(0x1017bb51, 0x4)   shr(bx, 0xf);                         /* shr bx, 0xf */
    II(0x1017bb55, 0x6)   and_(ebx, 0xffff);                    /* and ebx, 0xffff */
    II(0x1017bb5b, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1017bb5d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017bb5e, 0x4)   mov(bx, memw_a32(ds, eax + 0x2));     /* mov bx, [eax+0x2] */
    II(0x1017bb62, 0x4)   mov(cx, memw_a32(ds, eax + 0x4));     /* mov cx, [eax+0x4] */
    II(0x1017bb66, 0x3)   and_(bl, 0x1);                        /* and bl, 0x1 */
    II(0x1017bb69, 0x2)   xor_(bh, bh);                         /* xor bh, bh */
    II(0x1017bb6b, 0x6)   and_(ebx, 0xffff);                    /* and ebx, 0xffff */
    II(0x1017bb71, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1017bb74, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1017bb79, 0x5)   calld(/* sys */ 0x10179cf0, -0x1e8e); /* call 0x10179cf0 */
    II(0x1017bb7e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1017bb80, 0x6)   jnzd(0x1017ba97, -0xef);              /* jnz dword 0x1017ba97 */
    II(0x1017bb86, 0x5)   mov(edx, 0xfffffffc);                 /* mov edx, 0xfffffffc */
    II(0x1017bb8b, 0x5)   jmpd(0x1017baef, -0xa1);              /* jmp 0x1017baef */
l_0x1017bb90:
    II(0x1017bb90, 0x5)   calld(/* sys */ 0x10179f60, -0x1c35); /* call 0x10179f60 */
    II(0x1017bb95, 0x5)   jmpd(0x1017ba97, -0x103);             /* jmp 0x1017ba97 */
l_0x1017bb9a:
    II(0x1017bb9a, 0x3)   mov(bh, memb_a32(ss, ebp - 0xd));     /* mov bh, [ebp-0xd] */
    II(0x1017bb9d, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1017bb9f, 0x3)   cmp(bh, 0x2);                         /* cmp bh, 0x2 */
    II(0x1017bba2, 0x2)   jbd(0x1017bbac, 0x8);                 /* jb 0x1017bbac */
    II(0x1017bba4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bba6, 0x4)   mov(dx, memw_a32(ds, esi + 0x6));     /* mov dx, [esi+0x6] */
    II(0x1017bbaa, 0x2)   jmpd(0x1017bbae, 0x2);                /* jmp 0x1017bbae */
l_0x1017bbac:
    II(0x1017bbac, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
l_0x1017bbae:
    II(0x1017bbae, 0x2)   mov(ecx, edx);                        /* mov ecx, edx */
    II(0x1017bbb0, 0x4)   cmp(memb_a32(ss, ebp - 0xd), 0x1);    /* cmp byte [ebp-0xd], 0x1 */
    II(0x1017bbb4, 0x2)   jbd(0x1017bbbe, 0x8);                 /* jb 0x1017bbbe */
    II(0x1017bbb6, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017bbb8, 0x4)   mov(bx, memw_a32(ds, eax + 0x4));     /* mov bx, [eax+0x4] */
    II(0x1017bbbc, 0x2)   jmpd(0x1017bbc3, 0x5);                /* jmp 0x1017bbc3 */
l_0x1017bbbe:
    II(0x1017bbbe, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
l_0x1017bbc3:
    II(0x1017bbc3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bbc5, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x1017bbc9, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1017bbcc, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1017bbd1, 0x5)   calld(/* sys */ 0x1017a450, -0x1786); /* call 0x1017a450 */
    II(0x1017bbd6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1017bbd8, 0x2)   jnzd(0x1017bbe4, 0xa);                /* jnz 0x1017bbe4 */
    II(0x1017bbda, 0x5)   mov(edx, 0xfffffffb);                 /* mov edx, 0xfffffffb */
    II(0x1017bbdf, 0x5)   jmpd(0x1017baef, -0xf5);              /* jmp 0x1017baef */
l_0x1017bbe4:
    II(0x1017bbe4, 0x5)   mov(eax, memd_a32(ds, 0x10209cd0));   /* mov eax, [0x10209cd0] */
    II(0x1017bbe9, 0x6)   mov(esi, memd_a32(ds, 0x101be204));   /* mov esi, [0x101be204] */
    II(0x1017bbef, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bbf1, 0x7)   lea(eax, eax * 0x4 + 0);              /* lea eax, [eax*4+0x0] */
    II(0x1017bbf8, 0x2)   div(esi);                             /* div esi */
    II(0x1017bbfa, 0x6)   mov(edi, memd_a32(ds, 0x10209ccc));   /* mov edi, [0x10209ccc] */
    II(0x1017bc00, 0x2)   and_(al, 0xf0);                       /* and al, 0xf0 */
    II(0x1017bc02, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x1017bc04, 0x2)   jzd(0x1017bc08, 0x2);                 /* jz 0x1017bc08 */
    II(0x1017bc06, 0x2)   shr(eax, 0x1);                        /* shr eax, 1 */
l_0x1017bc08:
    II(0x1017bc08, 0x6)   mov(edx, memd_a32(ds, 0x10209c84));   /* mov edx, [0x10209c84] */
    II(0x1017bc0e, 0x2)   test(edx, edx);                       /* test edx, edx */
    II(0x1017bc10, 0x2)   jged(0x1017bc14, 0x2);                /* jge 0x1017bc14 */
    II(0x1017bc12, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
l_0x1017bc14:
    II(0x1017bc14, 0x6)   mov(ebx, memd_a32(ds, 0x10209cb4));   /* mov ebx, [0x10209cb4] */
    II(0x1017bc1a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1017bc1c, 0x2)   cmp(eax, ebx);                        /* cmp eax, ebx */
    II(0x1017bc1e, 0x2)   jad(0x1017bc42, 0x22);                /* ja 0x1017bc42 */
    II(0x1017bc20, 0x6)   mov(ecx, memd_a32(ds, 0x10209c88));   /* mov ecx, [0x10209c88] */
    II(0x1017bc26, 0x2)   test(ecx, ecx);                       /* test ecx, ecx */
    II(0x1017bc28, 0x2)   jged(0x1017bc2e, 0x4);                /* jge 0x1017bc2e */
    II(0x1017bc2a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017bc2c, 0x2)   jmpd(0x1017bc30, 0x2);                /* jmp 0x1017bc30 */
l_0x1017bc2e:
    II(0x1017bc2e, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
l_0x1017bc30:
    II(0x1017bc30, 0x6)   mov(esi, memd_a32(ds, 0x10209cf0));   /* mov esi, [0x10209cf0] */
    II(0x1017bc36, 0x6)   mov(edi, memd_a32(ds, 0x10209cbc));   /* mov edi, [0x10209cbc] */
    II(0x1017bc3c, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x1017bc3e, 0x2)   cmp(eax, edi);                        /* cmp eax, edi */
    II(0x1017bc40, 0x2)   jbed(0x1017bc4c, 0xa);                /* jbe 0x1017bc4c */
l_0x1017bc42:
    II(0x1017bc42, 0x5)   mov(edx, 0xfffffffa);                 /* mov edx, 0xfffffffa */
    II(0x1017bc47, 0x5)   jmpd(0x1017baef, -0x15d);             /* jmp 0x1017baef */
l_0x1017bc4c:
    II(0x1017bc4c, 0x7)   cmp(memd_a32(ds, 0x10209ccc), 0);     /* cmp dword [0x10209ccc], 0x0 */
    II(0x1017bc53, 0x6)   jzd(0x1017ba97, -0x1c2);              /* jz dword 0x1017ba97 */
    II(0x1017bc59, 0x7)   cmp(memd_a32(ds, 0x10209c94), 0);     /* cmp dword [0x10209c94], 0x0 */
    II(0x1017bc60, 0x6)   jnzd(0x1017ba97, -0x1cf);             /* jnz dword 0x1017ba97 */
    II(0x1017bc66, 0x5)   mov(edx, 0xfffffffa);                 /* mov edx, 0xfffffffa */
    II(0x1017bc6b, 0x5)   jmpd(0x1017baef, -0x181);             /* jmp 0x1017baef */
l_0x1017bc70:
    II(0x1017bc70, 0x3)   mov(bl, memb_a32(ds, esi + 0xc));     /* mov bl, [esi+0xc] */
    II(0x1017bc73, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1017bc75, 0x3)   test(bl, 0x1);                        /* test bl, 0x1 */
    II(0x1017bc78, 0x2)   jzd(0x1017bc92, 0x18);                /* jz 0x1017bc92 */
    II(0x1017bc7a, 0x6)   mov(ebx, memd_a32(ds, 0x10209cc8));   /* mov ebx, [0x10209cc8] */
    II(0x1017bc80, 0x6)   mov(edx, memd_a32(ds, 0x10209cd8));   /* mov edx, [0x10209cd8] */
    II(0x1017bc86, 0x6)   mov(memd_a32(ds, 0x10209cd8), ebx);   /* mov [0x10209cd8], ebx */
    II(0x1017bc8c, 0x6)   mov(memd_a32(ds, 0x10209cc8), edx);   /* mov [0x10209cc8], edx */
l_0x1017bc92:
    II(0x1017bc92, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bc94, 0x4)   mov(dx, memw_a32(ds, eax + 0xa));     /* mov dx, [eax+0xa] */
    II(0x1017bc98, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bc99, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bc9b, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x1017bc9f, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bca0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bca2, 0x4)   mov(dx, memw_a32(ds, eax + 0x6));     /* mov dx, [eax+0x6] */
    II(0x1017bca6, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bca7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bca9, 0x4)   mov(dx, memw_a32(ds, eax + 0x4));     /* mov dx, [eax+0x4] */
    II(0x1017bcad, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bcae, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1017bcb1, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017bcb2, 0x5)   calld(/* sys */ 0x1018e37a, 0x126c3); /* call 0x1018e37a */
    II(0x1017bcb7, 0x3)   add(esp, 0x14);                       /* add esp, 0x14 */
    II(0x1017bcba, 0x5)   jmpd(0x1017ba97, -0x228);             /* jmp 0x1017ba97 */
l_0x1017bcbf:
    II(0x1017bcbf, 0x6)   inc(memd_a32(ds, 0x10209c7c));        /* inc dword [0x10209c7c] */
    II(0x1017bcc5, 0x3)   mov(al, memb_a32(ss, ebp - 0xd));     /* mov al, [ebp-0xd] */
    II(0x1017bcc8, 0x2)   xor_(edi, edi);                       /* xor edi, edi */
    II(0x1017bcca, 0x2)   cmp(al, 0x1);                         /* cmp al, 0x1 */
    II(0x1017bccc, 0x2)   jbd(0x1017bcd2, 0x4);                 /* jb 0x1017bcd2 */
    II(0x1017bcce, 0x4)   mov(di, memw_a32(ds, esi + 0x4));     /* mov di, [esi+0x4] */
l_0x1017bcd2:
    II(0x1017bcd2, 0x7)   cmp(memd_a32(ds, 0x101be210), 0);     /* cmp dword [0x101be210], 0x0 */
    II(0x1017bcd9, 0x2)   jnzd(0x1017bcfa, 0x1f);               /* jnz 0x1017bcfa */
    II(0x1017bcdb, 0x5)   cmp(memw_a32(ds, esi + 0x2), 0);      /* cmp word [esi+0x2], 0x0 */
    II(0x1017bce0, 0x2)   jzd(0x1017bcfa, 0x18);                /* jz 0x1017bcfa */
    II(0x1017bce2, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1017bce6, 0x2)   jnzd(0x1017bcfa, 0x12);               /* jnz 0x1017bcfa */
    II(0x1017bce8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bcea, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017bcec, 0x4)   mov(dx, memw_a32(ds, esi + 0x2));     /* mov dx, [esi+0x2] */
    II(0x1017bcf0, 0x3)   mov(ax, memw_a32(ds, esi));           /* mov ax, [esi] */
    II(0x1017bcf3, 0x5)   calld(/* sys */ 0x1017aa80, -0x1278); /* call 0x1017aa80 */
    II(0x1017bcf8, 0x2)   jmpd(0x1017bd28, 0x2e);               /* jmp 0x1017bd28 */
l_0x1017bcfa:
    II(0x1017bcfa, 0x7)   cmp(memd_a32(ds, 0x101be210), 0);     /* cmp dword [0x101be210], 0x0 */
    II(0x1017bd01, 0x2)   jnzd(0x1017bd28, 0x25);               /* jnz 0x1017bd28 */
    II(0x1017bd03, 0x6)   mov(ebx, memd_a32(ds, 0x10209c94));   /* mov ebx, [0x10209c94] */
    II(0x1017bd09, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017bd0b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bd0d, 0x3)   mov(ax, memw_a32(ds, esi));           /* mov ax, [esi] */
    II(0x1017bd10, 0x4)   mov(dx, memw_a32(ds, esi + 0x2));     /* mov dx, [esi+0x2] */
    II(0x1017bd14, 0x2)   test(ebx, ebx);                       /* test ebx, ebx */
    II(0x1017bd16, 0x2)   jnzd(0x1017bd28, 0x10);               /* jnz 0x1017bd28 */
    II(0x1017bd18, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bd19, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017bd1a, 0x5)   pushd(0x10209750);                    /* push dword 0x10209750 */
    II(0x1017bd1f, 0x6)   calld_abs(memd_a32(ds, 0x101be450));  /* call dword near [0x101be450] */ /* Вызов '0x10194101'. */
    II(0x1017bd25, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
l_0x1017bd28:
    II(0x1017bd28, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x1c));   /* mov ecx, [ebp-0x1c] */
    II(0x1017bd2b, 0x2)   test(ecx, ecx);                       /* test ecx, ecx */
    II(0x1017bd2d, 0x2)   jzd(0x1017bd43, 0x14);                /* jz 0x1017bd43 */
    II(0x1017bd2f, 0x6)   mov(edx, memd_a32(ds, 0x10209c88));   /* mov edx, [0x10209c88] */
    II(0x1017bd35, 0x5)   mov(eax, memd_a32(ds, 0x10209c84));   /* mov eax, [0x10209c84] */
    II(0x1017bd3a, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x1017bd3c, 0x5)   calld(/* sys */ 0x1017a8c0, -0x1481); /* call 0x1017a8c0 */
    II(0x1017bd41, 0x2)   jmpd(0x1017bd80, 0x3d);               /* jmp 0x1017bd80 */
l_0x1017bd43:
    II(0x1017bd43, 0x7)   cmp(memd_a32(ds, 0x101be424), 0);     /* cmp dword [0x101be424], 0x0 */
    II(0x1017bd4a, 0x2)   jzd(0x1017bd6e, 0x22);                /* jz 0x1017bd6e */
    II(0x1017bd4c, 0x5)   cmp(memw_a32(ds, esi + 0x2), 0);      /* cmp word [esi+0x2], 0x0 */
    II(0x1017bd51, 0x2)   jnzd(0x1017bd6e, 0x1b);               /* jnz 0x1017bd6e */
    II(0x1017bd53, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1017bd58, 0x6)   mov(ebx, memd_a32(ds, 0x10209c78));   /* mov ebx, [0x10209c78] */
    II(0x1017bd5e, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x1017bd60, 0x6)   mov(memd_a32(ds, 0x101be428), edx);   /* mov [0x101be428], edx */
    II(0x1017bd66, 0x6)   mov(memd_a32(ds, 0x10209c78), ebx);   /* mov [0x10209c78], ebx */
    II(0x1017bd6c, 0x2)   jmpd(0x1017bd80, 0x12);               /* jmp 0x1017bd80 */
l_0x1017bd6e:
    II(0x1017bd6e, 0x6)   mov(edx, memd_a32(ds, 0x10209c88));   /* mov edx, [0x10209c88] */
    II(0x1017bd74, 0x5)   mov(eax, memd_a32(ds, 0x10209c84));   /* mov eax, [0x10209c84] */
    II(0x1017bd79, 0x2)   mov(ebx, edi);                        /* mov ebx, edi */
    II(0x1017bd7b, 0x5)   calld(/* sys */ 0x1017a6c0, -0x16c0); /* call 0x1017a6c0 */
l_0x1017bd80:
    II(0x1017bd80, 0x7)   cmp(memd_a32(ds, 0x101be210), 0);     /* cmp dword [0x101be210], 0x0 */
    II(0x1017bd87, 0x2)   jnzd(0x1017bdc5, 0x3c);               /* jnz 0x1017bdc5 */
    II(0x1017bd89, 0x4)   mov(cx, memw_a32(ds, esi + 0x2));     /* mov cx, [esi+0x2] */
    II(0x1017bd8d, 0x3)   test(cx, cx);                         /* test cx, cx */
    II(0x1017bd90, 0x2)   jzd(0x1017bdc5, 0x33);                /* jz 0x1017bdc5 */
    II(0x1017bd92, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1017bd96, 0x2)   jnzd(0x1017bdc5, 0x2d);               /* jnz 0x1017bdc5 */
    II(0x1017bd98, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017bd9a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bd9c, 0x3)   mov(ax, cx);                          /* mov ax, cx */
    II(0x1017bd9f, 0x6)   mov(ecx, memd_a32(ds, 0x10209c94));   /* mov ecx, [0x10209c94] */
    II(0x1017bda5, 0x3)   mov(dx, memw_a32(ds, esi));           /* mov dx, [esi] */
    II(0x1017bda8, 0x2)   test(ecx, ecx);                       /* test ecx, ecx */
    II(0x1017bdaa, 0x6)   jnzd(0x1017be45, 0x95);               /* jnz dword 0x1017be45 */
    II(0x1017bdb0, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017bdb1, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bdb2, 0x5)   pushd(0x10209750);                    /* push dword 0x10209750 */
    II(0x1017bdb7, 0x6)   calld_abs(memd_a32(ds, 0x101be450));  /* call dword near [0x101be450] */ /* Вызов '0x10194101'. */
    II(0x1017bdbd, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x1017bdc0, 0x5)   jmpd(0x1017be45, 0x80);               /* jmp 0x1017be45 */
l_0x1017bdc5:
    II(0x1017bdc5, 0x7)   cmp(memd_a32(ds, 0x101be210), 0);     /* cmp dword [0x101be210], 0x0 */
    II(0x1017bdcc, 0x6)   jzd(0x1017be45, 0x73);                /* jz dword 0x1017be45 */
    II(0x1017bdd2, 0x5)   cmp(memw_a32(ds, esi + 0x2), 0);      /* cmp word [esi+0x2], 0x0 */
    II(0x1017bdd7, 0x2)   jzd(0x1017bdee, 0x15);                /* jz 0x1017bdee */
    II(0x1017bdd9, 0x1)   cli();                                /* cli */
    II(0x1017bdda, 0x2)   pushd(0x1);                           /* push 0x1 */
    II(0x1017bddc, 0x5)   calld(/* sys */ 0x10194357, 0x18576); /* call 0x10194357 */
    II(0x1017bde1, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
    II(0x1017bde4, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x1017bde6, 0x5)   calld(/* sys */ 0x10194357, 0x1856c); /* call 0x10194357 */
    II(0x1017bdeb, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
l_0x1017bdee:
    II(0x1017bdee, 0x6)   mov(edx, memd_a32(ds, 0x101be208));   /* mov edx, [0x101be208] */
    II(0x1017bdf4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017bdf6, 0x7)   mov(edx, memd_a32(ds, edx * 0x4 + 0x101be20c)); /* mov edx, [edx*4+0x101be20c] */
    II(0x1017bdfd, 0x5)   calld(/* sys */ 0x1018cbb0, 0x10dae); /* call 0x1018cbb0 */
    II(0x1017be02, 0x5)   cmp(memw_a32(ds, esi + 0x2), 0);      /* cmp word [esi+0x2], 0x0 */
    II(0x1017be07, 0x2)   jzd(0x1017be13, 0xa);                 /* jz 0x1017be13 */
    II(0x1017be09, 0x2)   pushd(0x1);                           /* push 0x1 */
    II(0x1017be0b, 0x5)   calld(/* sys */ 0x10194357, 0x18547); /* call 0x10194357 */
    II(0x1017be10, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
l_0x1017be13:
    II(0x1017be13, 0x6)   mov(ebx, memd_a32(ds, 0x10209c94));   /* mov ebx, [0x10209c94] */
    II(0x1017be19, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017be1b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017be1d, 0x3)   mov(dx, memw_a32(ds, esi));           /* mov dx, [esi] */
    II(0x1017be20, 0x4)   mov(ax, memw_a32(ds, esi + 0x2));     /* mov ax, [esi+0x2] */
    II(0x1017be24, 0x2)   test(ebx, ebx);                       /* test ebx, ebx */
    II(0x1017be26, 0x2)   jnzd(0x1017be38, 0x10);               /* jnz 0x1017be38 */
    II(0x1017be28, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017be29, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017be2a, 0x5)   pushd(0x10209750);                    /* push dword 0x10209750 */
    II(0x1017be2f, 0x6)   calld_abs(memd_a32(ds, 0x101be450));  /* call dword near [0x101be450] */ /* Вызов '0x10194101'. */
    II(0x1017be35, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
l_0x1017be38:
    II(0x1017be38, 0x5)   cmp(memw_a32(ds, esi + 0x2), 0);      /* cmp word [esi+0x2], 0x0 */
    II(0x1017be3d, 0x6)   jzd(0x1017be45, 0x2);                 /* jz dword 0x1017be45 */
    II(0x1017be43, 0x1)   sti();                                /* sti */
    II(0x1017be44, 0x1)   cld();                                /* cld */
l_0x1017be45:
    II(0x1017be45, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1017be48, 0x5)   mov(memd_a32(ds, 0x10209c70), eax);   /* mov [0x10209c70], eax */
    II(0x1017be4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1017be50, 0x5)   mov(memd_a32(ds, 0x10209c74), eax);   /* mov [0x10209c74], eax */
    II(0x1017be55, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
l_0x1017be57:
    II(0x1017be57, 0x3)   lea(esp, ebp - 0x8);                  /* lea esp, [ebp-0x8] */
    II(0x1017be5a, 0x1)   popd(edi);                            /* pop edi */
    II(0x1017be5b, 0x1)   popd(esi);                            /* pop esi */
    II(0x1017be5c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1017be5d, 0x1)   retd();                               /* ret */
l_0x1017be5e:
    II(0x1017be5e, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1017be61, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017be63, 0x6)   mov(esi, memd_a32(ds, 0x10209c80));   /* mov esi, [0x10209c80] */
    II(0x1017be69, 0x4)   mov(ax, memw_a32(ds, edx + 0x2));     /* mov ax, [edx+0x2] */
    II(0x1017be6d, 0x2)   test(eax, esi);                       /* test eax, esi */
    II(0x1017be6f, 0x6)   jzd(0x1017ba97, -0x3de);              /* jz dword 0x1017ba97 */
    II(0x1017be75, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1017be78, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017be7a, 0x3)   mov(ch, memb_a32(ss, ebp - 0xe));     /* mov ch, [ebp-0xe] */
    II(0x1017be7d, 0x4)   mov(dx, memw_a32(ds, eax + 0x4));     /* mov dx, [eax+0x4] */
    II(0x1017be81, 0x3)   cmp(ch, 0x8);                         /* cmp ch, 0x8 */
    II(0x1017be84, 0x2)   jnzd(0x1017be8b, 0x5);                /* jnz 0x1017be8b */
    II(0x1017be86, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1017be89, 0x2)   jmpd(0x1017be8d, 0x2);                /* jmp 0x1017be8d */
l_0x1017be8b:
    II(0x1017be8b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
l_0x1017be8d:
    II(0x1017be8d, 0x5)   calld(/* sys */ 0x1017a1d0, -0x1cc2); /* call 0x1017a1d0 */
    II(0x1017be92, 0x5)   jmpd(0x1017ba97, -0x400);             /* jmp 0x1017ba97 */
l_0x1017be97:
    II(0x1017be97, 0x7)   cmp(memd_a32(ds, 0x101be448), 0);     /* cmp dword [0x101be448], 0x0 */
    II(0x1017be9e, 0x6)   jzd(0x1017ba97, -0x40d);              /* jz dword 0x1017ba97 */
    II(0x1017bea4, 0x6)   mov(ecx, memd_a32(ds, 0x101be200));   /* mov ecx, [0x101be200] */
    II(0x1017beaa, 0x4)   mov(si, memw_a32(ds, esi + 0x4));     /* mov si, [esi+0x4] */
    II(0x1017beae, 0x2)   test(ecx, ecx);                       /* test ecx, ecx */
    II(0x1017beb0, 0x2)   jzd(0x1017bec1, 0xf);                 /* jz 0x1017bec1 */
    II(0x1017beb2, 0x7)   test(memb_a32(ds, 0x101be200), 0x4);  /* test byte [0x101be200], 0x4 */
    II(0x1017beb9, 0x2)   jnzd(0x1017bec1, 0x6);                /* jnz 0x1017bec1 */
    II(0x1017bebb, 0x6)   or_(esi, 0x8000);                     /* or esi, 0x8000 */
l_0x1017bec1:
    II(0x1017bec1, 0x6)   mov(edi, memd_a32(ds, 0x101be44c));   /* mov edi, [0x101be44c] */
    II(0x1017bec7, 0x3)   movsx(eax, si);                       /* movsx eax, si */
    II(0x1017beca, 0x2)   cmp(eax, edi);                        /* cmp eax, edi */
    II(0x1017becc, 0x2)   jzd(0x1017bf09, 0x3b);                /* jz 0x1017bf09 */
    II(0x1017bece, 0x3)   movsx(eax, si);                       /* movsx eax, si */
    II(0x1017bed1, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017bed2, 0x5)   calld(/* sys */ 0x1017b570, -0x967);  /* call 0x1017b570 */
    II(0x1017bed7, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
    II(0x1017beda, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1017bedc, 0x2)   jnzd(0x1017bee8, 0xa);                /* jnz 0x1017bee8 */
    II(0x1017bede, 0x5)   mov(edx, 0xfffffff9);                 /* mov edx, 0xfffffff9 */
    II(0x1017bee3, 0x5)   jmpd(0x1017baef, -0x3f9);             /* jmp 0x1017baef */
l_0x1017bee8:
    II(0x1017bee8, 0x7)   cmp(memd_a32(ds, 0x101be214), 0);     /* cmp dword [0x101be214], 0x0 */
    II(0x1017beef, 0x2)   jzd(0x1017bf09, 0x18);                /* jz 0x1017bf09 */
    II(0x1017bef1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bef3, 0x5)   mov(eax, memd_a32(ds, 0x10209cc0));   /* mov eax, [0x10209cc0] */
    II(0x1017bef8, 0x6)   mov(memd_a32(ds, 0x101be208), edx);   /* mov [0x101be208], edx */
    II(0x1017befe, 0x6)   mov(memd_a32(ds, 0x101be20c), edx);   /* mov [0x101be20c], edx */
    II(0x1017bf04, 0x5)   mov(memd_a32(ds, 0x101be210), eax);   /* mov [0x101be210], eax */
l_0x1017bf09:
    II(0x1017bf09, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1017bf0e, 0x3)   movsx(eax, si);                       /* movsx eax, si */
    II(0x1017bf11, 0x6)   mov(memd_a32(ds, 0x101be448), ecx);   /* mov [0x101be448], ecx */
    II(0x1017bf17, 0x5)   mov(memd_a32(ds, 0x101be44c), eax);   /* mov [0x101be44c], eax */
    II(0x1017bf1c, 0x5)   jmpd(0x1017ba97, -0x48a);             /* jmp 0x1017ba97 */
l_0x1017bf21:
    II(0x1017bf21, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x1017bf23, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017bf25, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1017bf27, 0x3)   mov(al, memb_a32(ds, esi + 0x5));     /* mov al, [esi+0x5] */
    II(0x1017bf2a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017bf2c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017bf2d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017bf2f, 0x3)   mov(cl, memb_a32(ds, esi + 0x3));     /* mov cl, [esi+0x3] */
    II(0x1017bf32, 0x3)   mov(al, memb_a32(ds, esi + 0x4));     /* mov al, [esi+0x4] */
    II(0x1017bf35, 0x3)   mov(bl, memb_a32(ds, esi + 0x2));     /* mov bl, [esi+0x2] */
    II(0x1017bf38, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017bf39, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1017bf3b, 0x2)   xor_(edx, esi);                       /* xor edx, esi */
    II(0x1017bf3d, 0x2)   xor_(eax, esi);                       /* xor eax, esi */
    II(0x1017bf3f, 0x3)   mov(dl, memb_a32(ds, esi + 0x1));     /* mov dl, [esi+0x1] */
    II(0x1017bf42, 0x2)   mov(al, memb_a32(ds, esi));           /* mov al, [esi] */
    II(0x1017bf44, 0x5)   calld(/* sys */ 0x1017aab0, -0x1499); /* call 0x1017aab0 */
    II(0x1017bf49, 0x5)   calld(/* sys */ 0x1017a9e0, -0x156e); /* call 0x1017a9e0 */
    II(0x1017bf4e, 0x5)   jmpd(0x1017ba97, -0x4bc);             /* jmp 0x1017ba97 */
l_0x1017bf53:
    II(0x1017bf53, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1017bf56, 0x5)   mov(edi, 0x10209750);                 /* mov edi, 0x10209750 */
    II(0x1017bf5b, 0x3)   add(esi, 0x4);                        /* add esi, 0x4 */
    II(0x1017bf5e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017bf60, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1017bf62, 0x3)   mov(ax, memw_a32(ds, edx));           /* mov ax, [edx] */
    II(0x1017bf65, 0x4)   mov(cx, memw_a32(ds, edx + 0x2));     /* mov cx, [edx+0x2] */
    II(0x1017bf69, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x1017bf6c, 0x3)   lea(ecx, ecx + ecx * 0x2);            /* lea ecx, [ecx+ecx*2] */
    II(0x1017bf6f, 0x2)   add(edi, eax);                        /* add edi, eax */
    II(0x1017bf71, 0x1)   pushd(edi);                           /* push edi */
    II(0x1017bf72, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1017bf74, 0x3)   shr(ecx, 0x2);                        /* shr ecx, 0x2 */
    II(0x1017bf77, 0x2)   repne_a32 movsd_a32();                /* repne movsd */
    II(0x1017bf79, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x1017bf7b, 0x3)   and_(cl, 0x3);                        /* and cl, 0x3 */
    II(0x1017bf7e, 0x2)   repne_a32 movsb_a32();                /* repne movsb */
    II(0x1017bf80, 0x1)   popd(edi);                            /* pop edi */
    II(0x1017bf81, 0x5)   calld(/* sys */ 0x1017a9e0, -0x15a6); /* call 0x1017a9e0 */
    II(0x1017bf86, 0x5)   jmpd(0x1017ba97, -0x4f4);             /* jmp 0x1017ba97 */
l_0x1017bf8b:
    II(0x1017bf8b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1017bf8c, 0x5)   calld(/* sys */ 0x10194142, 0x181b1); /* call 0x10194142 */
    II(0x1017bf91, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
    II(0x1017bf94, 0x5)   calld(/* sys */ 0x1017a9e0, -0x15b9); /* call 0x1017a9e0 */
    II(0x1017bf99, 0x5)   jmpd(0x1017ba97, -0x507);             /* jmp 0x1017ba97 */
l_0x1017bf9e:
    II(0x1017bf9e, 0x3)   mov(memd_a32(ss, ebp - 0x1c), esi);   /* mov [ebp-0x1c], esi */
    II(0x1017bfa1, 0x5)   jmpd(0x1017ba97, -0x50f);             /* jmp 0x1017ba97 */
l_0x1017bfa6:
    II(0x1017bfa6, 0x3)   mov(memd_a32(ss, ebp - 0x14), esi);   /* mov [ebp-0x14], esi */
    II(0x1017bfa9, 0x5)   jmpd(0x1017ba97, -0x517);             /* jmp 0x1017ba97 */
l_0x1017bfae:
    II(0x1017bfae, 0x3)   mov(bh, memb_a32(ds, esi + 0xc));     /* mov bh, [esi+0xc] */
    II(0x1017bfb1, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1017bfb3, 0x3)   test(bh, 0x1);                        /* test bh, 0x1 */
    II(0x1017bfb6, 0x2)   jzd(0x1017bfd0, 0x18);                /* jz 0x1017bfd0 */
    II(0x1017bfb8, 0x6)   mov(edx, memd_a32(ds, 0x10209cc8));   /* mov edx, [0x10209cc8] */
    II(0x1017bfbe, 0x6)   mov(ebx, memd_a32(ds, 0x10209cd8));   /* mov ebx, [0x10209cd8] */
    II(0x1017bfc4, 0x6)   mov(memd_a32(ds, 0x10209cd8), edx);   /* mov [0x10209cd8], edx */
    II(0x1017bfca, 0x6)   mov(memd_a32(ds, 0x10209cc8), ebx);   /* mov [0x10209cc8], ebx */
l_0x1017bfd0:
    II(0x1017bfd0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bfd2, 0x4)   mov(dx, memw_a32(ds, eax + 0xa));     /* mov dx, [eax+0xa] */
    II(0x1017bfd6, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bfd7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bfd9, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x1017bfdd, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bfde, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bfe0, 0x4)   mov(dx, memw_a32(ds, eax + 0x6));     /* mov dx, [eax+0x6] */
    II(0x1017bfe4, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bfe5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1017bfe7, 0x4)   mov(dx, memw_a32(ds, eax + 0x4));     /* mov dx, [eax+0x4] */
    II(0x1017bfeb, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017bfec, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1017bfef, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017bff0, 0x3)   mov(edi, memd_a32(ss, ebp - 0x14));   /* mov edi, [ebp-0x14] */
    II(0x1017bff3, 0x1)   pushd(edi);                           /* push edi */
    II(0x1017bff4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1017bff7, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017bff8, 0x5)   calld(/* sys */ 0x1018e594, 0x12597); /* call 0x1018e594 */
    II(0x1017bffd, 0x3)   add(esp, 0x1c);                       /* add esp, 0x1c */
    II(0x1017c000, 0x5)   jmpd(0x1017ba97, -0x56e);             /* jmp 0x1017ba97 */
l_0x1017c005:
    II(0x1017c005, 0x3)   mov(dl, memb_a32(ss, ebp - 0xd));     /* mov dl, [ebp-0xd] */
    II(0x1017c008, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1017c00a, 0x3)   cmp(dl, 0x3);                         /* cmp dl, 0x3 */
    II(0x1017c00d, 0x2)   jaed(0x1017c019, 0xa);                /* jae 0x1017c019 */
    II(0x1017c00f, 0x5)   mov(edx, 0xfffffff8);                 /* mov edx, 0xfffffff8 */
    II(0x1017c014, 0x5)   jmpd(0x1017baef, -0x52a);             /* jmp 0x1017baef */
l_0x1017c019:
    II(0x1017c019, 0x4)   test(memb_a32(ds, esi + 0xc), 0x1);   /* test byte [esi+0xc], 0x1 */
    II(0x1017c01d, 0x2)   jzd(0x1017c037, 0x18);                /* jz 0x1017c037 */
    II(0x1017c01f, 0x6)   mov(edx, memd_a32(ds, 0x10209cc8));   /* mov edx, [0x10209cc8] */
    II(0x1017c025, 0x6)   mov(ebx, memd_a32(ds, 0x10209cd8));   /* mov ebx, [0x10209cd8] */
    II(0x1017c02b, 0x6)   mov(memd_a32(ds, 0x10209cd8), edx);   /* mov [0x10209cd8], edx */
    II(0x1017c031, 0x6)   mov(memd_a32(ds, 0x10209cc8), ebx);   /* mov [0x10209cc8], ebx */
l_0x1017c037:
    II(0x1017c037, 0x6)   mov(edi, memd_a32(ds, 0x10209ccc));   /* mov edi, [0x10209ccc] */
    II(0x1017c03d, 0x3)   lea(edx, eax + 0xe);                  /* lea edx, [eax+0xe] */
    II(0x1017c040, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x1017c042, 0x2)   jzd(0x1017c088, 0x44);                /* jz 0x1017c088 */
    II(0x1017c044, 0x7)   cmp(memd_a32(ds, 0x101be200), 0);     /* cmp dword [0x101be200], 0x0 */
    II(0x1017c04b, 0x2)   jzd(0x1017c057, 0xa);                 /* jz 0x1017c057 */
    II(0x1017c04d, 0x5)   mov(edx, 0xfffffff8);                 /* mov edx, 0xfffffff8 */
    II(0x1017c052, 0x5)   jmpd(0x1017baef, -0x568);             /* jmp 0x1017baef */
l_0x1017c057:
    II(0x1017c057, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c059, 0x4)   mov(bx, memw_a32(ds, eax + 0xa));     /* mov bx, [eax+0xa] */
    II(0x1017c05d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c05e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c060, 0x4)   mov(bx, memw_a32(ds, eax + 0x8));     /* mov bx, [eax+0x8] */
    II(0x1017c064, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c065, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c067, 0x4)   mov(bx, memw_a32(ds, eax + 0x6));     /* mov bx, [eax+0x6] */
    II(0x1017c06b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c06c, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x1017c070, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1017c075, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017c076, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017c077, 0x3)   mov(esi, memd_a32(ss, ebp - 0x14));   /* mov esi, [ebp-0x14] */
    II(0x1017c07a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1017c07b, 0x5)   calld(/* sys */ 0x10191444, 0x153c4); /* call 0x10191444 */
    II(0x1017c080, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x1017c083, 0x5)   jmpd(0x1017ba97, -0x5f1);             /* jmp 0x1017ba97 */
l_0x1017c088:
    II(0x1017c088, 0x6)   mov(ebx, memd_a32(ds, 0x101be200));   /* mov ebx, [0x101be200] */
    II(0x1017c08e, 0x3)   and_(ebx, 0x3);                       /* and ebx, 0x3 */
    II(0x1017c091, 0x3)   cmp(ebx, 0x1);                        /* cmp ebx, 0x1 */
    II(0x1017c094, 0x2)   jnzd(0x1017c0c7, 0x31);               /* jnz 0x1017c0c7 */
    II(0x1017c096, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c098, 0x4)   mov(bx, memw_a32(ds, eax + 0xa));     /* mov bx, [eax+0xa] */
    II(0x1017c09c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c09d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c09f, 0x4)   mov(bx, memw_a32(ds, eax + 0x8));     /* mov bx, [eax+0x8] */
    II(0x1017c0a3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c0a4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c0a6, 0x4)   mov(bx, memw_a32(ds, eax + 0x6));     /* mov bx, [eax+0x6] */
    II(0x1017c0aa, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c0ab, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x1017c0af, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1017c0b4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017c0b5, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017c0b6, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x14));   /* mov ebx, [ebp-0x14] */
    II(0x1017c0b9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c0ba, 0x5)   calld(/* sys */ 0x101902d4, 0x14215); /* call 0x101902d4 */
    II(0x1017c0bf, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x1017c0c2, 0x5)   jmpd(0x1017ba97, -0x630);             /* jmp 0x1017ba97 */
l_0x1017c0c7:
    II(0x1017c0c7, 0x3)   cmp(ebx, 0x2);                        /* cmp ebx, 0x2 */
    II(0x1017c0ca, 0x2)   jnzd(0x1017c0fd, 0x31);               /* jnz 0x1017c0fd */
    II(0x1017c0cc, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c0ce, 0x4)   mov(bx, memw_a32(ds, eax + 0xa));     /* mov bx, [eax+0xa] */
    II(0x1017c0d2, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c0d3, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c0d5, 0x4)   mov(bx, memw_a32(ds, eax + 0x8));     /* mov bx, [eax+0x8] */
    II(0x1017c0d9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c0da, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c0dc, 0x4)   mov(bx, memw_a32(ds, eax + 0x6));     /* mov bx, [eax+0x6] */
    II(0x1017c0e0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c0e1, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x1017c0e5, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1017c0ea, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017c0eb, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017c0ec, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x1017c0ef, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017c0f0, 0x5)   calld(/* sys */ 0x101902d4, 0x141df); /* call 0x101902d4 */
    II(0x1017c0f5, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x1017c0f8, 0x5)   jmpd(0x1017ba97, -0x666);             /* jmp 0x1017ba97 */
l_0x1017c0fd:
    II(0x1017c0fd, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c0ff, 0x4)   mov(bx, memw_a32(ds, eax + 0xa));     /* mov bx, [eax+0xa] */
    II(0x1017c103, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c104, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c106, 0x4)   mov(bx, memw_a32(ds, eax + 0x8));     /* mov bx, [eax+0x8] */
    II(0x1017c10a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c10b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c10d, 0x4)   mov(bx, memw_a32(ds, eax + 0x6));     /* mov bx, [eax+0x6] */
    II(0x1017c111, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1017c112, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x1017c116, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1017c11b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017c11c, 0x1)   pushd(edx);                           /* push edx */
    II(0x1017c11d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1017c120, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017c121, 0x5)   calld(/* sys */ 0x1018e840, 0x1271a); /* call 0x1018e840 */
    II(0x1017c126, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x1017c129, 0x5)   jmpd(0x1017ba97, -0x697);             /* jmp 0x1017ba97 */
l_0x1017c12e:
    II(0x1017c12e, 0x5)   calld(/* sys */ 0x101799b0, -0x2783); /* call 0x101799b0 */
    II(0x1017c133, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017c135, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1017c138, 0x3)   mov(memd_a32(ss, ebp - 0x18), ebx);   /* mov [ebp-0x18], ebx */
    II(0x1017c13b, 0x5)   jmpd(0x1017ba7e, -0x6c2);             /* jmp 0x1017ba7e */
FUNC_END

