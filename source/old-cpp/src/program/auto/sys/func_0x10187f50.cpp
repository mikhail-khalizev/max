FUNC_BEGIN(/* sys */ 0x10187f50, 0x73a3eb61e29c4118, 0x20, ({0x51, 0x56, 0x57, 0x55, 0x83, 0xec, 0x10, 0x89, 0x4, 0x24, 0x89, 0xd6, 0x89, 0xdf, 0xbb, 0xee, 0xf, 0, 0, 0xba, 0x20, 0, 0, 0, 0xb8, 0xe8, 0xa6, 0x20, 0x10, 0xe8, 0x6e, 0xde, 0xfd, 0xff, 0xba, 0xee, 0xf, 0, 0, 0xbb, 0xd8, 0xa2, 0x20, 0x10, 0x89, 0x3d, 0xdc, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xd8, 0xa6, 0x20, 0x10, 0x8b, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0x8b, 0x2d, 0xd8, 0xa6, 0x20, 0x10, 0x29, 0xeb, 0x83, 0xff, 0x10, 0xf, 0x86, 0x50, 0x6, 0, 0, 0x83, 0x3d, 0xdc, 0xa6, 0x20, 0x10, 0, 0xf, 0x86, 0xa3, 0, 0, 0, 0x83, 0xfb, 0x11, 0xf, 0x8d, 0x9a, 0, 0, 0, 0x3b, 0x2d, 0xe4, 0xa6, 0x20, 0x10, 0x74, 0x32, 0xb8, 0xd8, 0xa2, 0x20, 0x10, 0x89, 0xea, 0xe8, 0xa2, 0xe1, 0xfd, 0xff, 0xa1, 0xe4, 0xa6, 0x20, 0x10, 0x8b, 0x2d, 0xd8, 0xa6, 0x20, 0x10, 0xba, 0xd8, 0xa2, 0x20, 0x10, 0x29, 0xe8, 0x1, 0xc2, 0xb8, 0xd8, 0xa2, 0x20, 0x10, 0x89, 0x15, 0xe4, 0xa6, 0x20, 0x10, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0xeb, 0x11, 0xbb, 0xd8, 0xa2, 0x20, 0x10, 0x89, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xd8, 0xa6, 0x20, 0x10, 0x8b, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0xb8, 0, 0x4, 0, 0, 0x81, 0xeb, 0xd8, 0xa2, 0x20, 0x10, 0x8b, 0xc, 0x24, 0x29, 0xd8, 0x8b, 0x15, 0xdc, 0xa6, 0x20, 0x10, 0x89, 0xc3, 0x39, 0xd0, 0x76, 0x2, 0x89, 0xd3, 0xba, 0x1, 0, 0, 0, 0xa1, 0xe4, 0xa6, 0x20, 0x10, 0xe8, 0x2d, 0xa5, 0xfe, 0xff, 0x8b, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0x8b, 0xd, 0xdc, 0xa6, 0x20, 0x10, 0x1, 0xc3, 0x29, 0xc1, 0x89, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0x89, 0xd, 0xdc, 0xa6, 0x20, 0x10, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x4f, 0x8a, 0x10, 0x40, 0x88, 0x54, 0x24, 0xc, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0xf6, 0xc2, 0x1, 0x74, 0x34, 0x89, 0xc2, 0x4f, 0x46, 0x8a, 0, 0x42, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x8a, 0x5e, 0xff, 0x89, 0xc5, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x6c, 0x40, 0x83, 0xef, 0x2, 0x8a, 0x38, 0x30, 0xed, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x88, 0xfa, 0x8a, 0x48, 0xff, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0xf6, 0x44, 0x24, 0xc, 0x2, 0x74, 0x38, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x42, 0x8a, 0x5e, 0xff, 0x40, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xd3, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0xf6, 0x44, 0x24, 0xc, 0x4, 0x74, 0x34, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x71, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0xf6, 0x44, 0x24, 0xc, 0x8, 0x74, 0x38, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x42, 0x8a, 0x5e, 0xff, 0x40, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xd3, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0xf6, 0x44, 0x24, 0xc, 0x10, 0x74, 0x34, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x71, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0xf6, 0x44, 0x24, 0xc, 0x20, 0x74, 0x38, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x42, 0x8a, 0x5e, 0xff, 0x40, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xd3, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0xf6, 0x44, 0x24, 0xc, 0x40, 0x74, 0x36, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x4f, 0x46, 0x8a, 0x10, 0x40, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd0, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x71, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0xf6, 0x44, 0x24, 0xc, 0x80, 0x74, 0x3b, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xc3, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xe9, 0x1e, 0xfa, 0xff, 0xff, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0xf, 0x8d, 0xe3, 0xf9, 0xff, 0xff, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0xf, 0x8d, 0x9b, 0xf9, 0xff, 0xff, 0xeb, 0xb6, 0x85, 0xff, 0xf, 0x84, 0x42, 0xc, 0, 0, 0x83, 0x3d, 0xdc, 0xa6, 0x20, 0x10, 0, 0xf, 0x86, 0xa3, 0, 0, 0, 0x83, 0xfb, 0x11, 0xf, 0x8d, 0x9a, 0, 0, 0, 0x3b, 0x2d, 0xe4, 0xa6, 0x20, 0x10, 0x74, 0x32, 0xb8, 0xd8, 0xa2, 0x20, 0x10, 0x89, 0xea, 0xe8, 0x4a, 0xdb, 0xfd, 0xff, 0xa1, 0xe4, 0xa6, 0x20, 0x10, 0x8b, 0x2d, 0xd8, 0xa6, 0x20, 0x10, 0xba, 0xd8, 0xa2, 0x20, 0x10, 0x29, 0xe8, 0x1, 0xc2, 0xb8, 0xd8, 0xa2, 0x20, 0x10, 0x89, 0x15, 0xe4, 0xa6, 0x20, 0x10, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0xeb, 0x11, 0xbb, 0xd8, 0xa2, 0x20, 0x10, 0x89, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xd8, 0xa6, 0x20, 0x10, 0x8b, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0xb8, 0, 0x4, 0, 0, 0x81, 0xeb, 0xd8, 0xa2, 0x20, 0x10, 0x8b, 0xc, 0x24, 0x29, 0xd8, 0x8b, 0x15, 0xdc, 0xa6, 0x20, 0x10, 0x89, 0xc3, 0x39, 0xd0, 0x76, 0x2, 0x89, 0xd3, 0xba, 0x1, 0, 0, 0, 0xa1, 0xe4, 0xa6, 0x20, 0x10, 0xe8, 0xd5, 0x9e, 0xfe, 0xff, 0x8b, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0x8b, 0xd, 0xdc, 0xa6, 0x20, 0x10, 0x1, 0xc3, 0x29, 0xc1, 0x89, 0x1d, 0xe4, 0xa6, 0x20, 0x10, 0x89, 0xd, 0xdc, 0xa6, 0x20, 0x10, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x8a, 0x10, 0x40, 0x88, 0x54, 0x24, 0x4, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x4f, 0xf, 0x84, 0x7a, 0xb, 0, 0, 0xf6, 0xc2, 0x1, 0x74, 0x34, 0x89, 0xc2, 0x4f, 0x46, 0x8a, 0, 0x42, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x8a, 0x5e, 0xff, 0x89, 0xc5, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x6c, 0x40, 0x83, 0xef, 0x2, 0x8a, 0x38, 0x30, 0xed, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x88, 0xfa, 0x8a, 0x48, 0xff, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0x85, 0xff, 0xf, 0x84, 0xcd, 0xa, 0, 0, 0xf6, 0x44, 0x24, 0x4, 0x2, 0x74, 0x38, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x42, 0x8a, 0x5e, 0xff, 0x40, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xd3, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0x85, 0xff, 0xf, 0x84, 0x11, 0xa, 0, 0, 0xf6, 0x44, 0x24, 0x4, 0x4, 0x74, 0x36, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x4f, 0x46, 0x8a, 0x10, 0x40, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd0, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x71, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0x85, 0xff, 0xf, 0x84, 0x5b, 0x9, 0, 0, 0xf6, 0x44, 0x24, 0x4, 0x8, 0x74, 0x38, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x42, 0x8a, 0x5e, 0xff, 0x40, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xd3, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0x85, 0xff, 0xf, 0x84, 0x9f, 0x8, 0, 0, 0xf6, 0x44, 0x24, 0x4, 0x10, 0x74, 0x36, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x4f, 0x46, 0x8a, 0x10, 0x40, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd0, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x71, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0x85, 0xff, 0xf, 0x84, 0xe9, 0x7, 0, 0, 0xf6, 0x44, 0x24, 0x4, 0x20, 0x74, 0x38, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xc3, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0x85, 0xff, 0xf, 0x84, 0x2d, 0x7, 0, 0, 0xf6, 0x44, 0x24, 0x4, 0x40, 0x74, 0x34, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x71, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0x85, 0xff, 0xf, 0x84, 0x79, 0x6, 0, 0, 0xf6, 0x44, 0x24, 0x4, 0x80, 0x74, 0x38, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xc3, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0x85, 0xff, 0xf, 0x84, 0xbd, 0x5, 0, 0, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x8a, 0x10, 0x40, 0x88, 0x54, 0x24, 0x8, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x4f, 0xf, 0x84, 0xa5, 0x5, 0, 0, 0xf6, 0xc2, 0x1, 0x74, 0x30, 0x46, 0x89, 0xc2, 0x8a, 0, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x6c, 0x40, 0x83, 0xef, 0x2, 0x8a, 0x38, 0x30, 0xed, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x88, 0xfa, 0x8a, 0x48, 0xff, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0x85, 0xff, 0xf, 0x84, 0xfc, 0x4, 0, 0, 0xf6, 0x44, 0x24, 0x8, 0x2, 0x74, 0x38, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xc3, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0x85, 0xff, 0xf, 0x84, 0x40, 0x4, 0, 0, 0xf6, 0x44, 0x24, 0x8, 0x4, 0x74, 0x36, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x4f, 0x46, 0x8a, 0x10, 0x40, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd0, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x71, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0x85, 0xff, 0xf, 0x84, 0x8a, 0x3, 0, 0, 0xf6, 0x44, 0x24, 0x8, 0x8, 0x74, 0x38, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x42, 0x8a, 0x5e, 0xff, 0x40, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xd3, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0x85, 0xff, 0xf, 0x84, 0xce, 0x2, 0, 0, 0xf6, 0x44, 0x24, 0x8, 0x10, 0x74, 0x34, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x71, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0x85, 0xff, 0xf, 0x84, 0x1a, 0x2, 0, 0, 0xf6, 0x44, 0x24, 0x8, 0x20, 0x74, 0x38, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xc3, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x75, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x3c, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe5, 0xff, 0xf, 0, 0, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xbc, 0x85, 0xff, 0xf, 0x84, 0x5e, 0x1, 0, 0, 0xf6, 0x44, 0x24, 0x8, 0x40, 0x74, 0x34, 0x8b, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0x46, 0x8a, 0x2, 0x88, 0x46, 0xff, 0xa1, 0xe0, 0xa6, 0x20, 0x10, 0x4f, 0x40, 0x8a, 0x5e, 0xff, 0x42, 0x88, 0x98, 0xe7, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0x25, 0xff, 0xf, 0, 0, 0x89, 0x15, 0xd8, 0xa6, 0x20, 0x10, 0xa3, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x71, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0x83, 0xef, 0x2, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x38, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x46, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe2, 0xff, 0xf, 0, 0, 0x40, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc0, 0x85, 0xff, 0xf, 0x84, 0xaa, 0, 0, 0, 0xf6, 0x44, 0x24, 0x8, 0x80, 0x74, 0x34, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x8a, 0x10, 0x88, 0x16, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x42, 0x8a, 0x1e, 0x40, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0xd3, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x81, 0xe3, 0xff, 0xf, 0, 0, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x89, 0x1d, 0xe0, 0xa6, 0x20, 0x10, 0xeb, 0x6f, 0xa1, 0xd8, 0xa6, 0x20, 0x10, 0x40, 0xbf, 0xff, 0xf, 0, 0, 0x30, 0xed, 0x8a, 0x38, 0x8a, 0x48, 0xff, 0x88, 0xfa, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x80, 0xe2, 0xf0, 0x40, 0x80, 0xe7, 0xf, 0xa3, 0xd8, 0xa6, 0x20, 0x10, 0x30, 0xf6, 0x80, 0xc7, 0x3, 0xc1, 0xe2, 0x4, 0x31, 0xc0, 0x9, 0xd1, 0xeb, 0x34, 0x31, 0xd2, 0x66, 0x89, 0xca, 0x1, 0xc2, 0x21, 0xfa, 0x46, 0x8a, 0x92, 0xe8, 0xa6, 0x20, 0x10, 0x88, 0x56, 0xff, 0x8b, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x40, 0x42, 0x8a, 0x5e, 0xff, 0x89, 0xd5, 0x89, 0x15, 0xe0, 0xa6, 0x20, 0x10, 0x21, 0xfd, 0x88, 0x9a, 0xe7, 0xa6, 0x20, 0x10, 0x89, 0x2d, 0xe0, 0xa6, 0x20, 0x10, 0x31, 0xd2, 0x88, 0xfa, 0x39, 0xd0, 0x7c, 0xc4, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10187f50, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10187f51, 0x1)   pushd(esi);                           /* push esi */
    II(0x10187f52, 0x1)   pushd(edi);                           /* push edi */
    II(0x10187f53, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10187f54, 0x3)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10187f57, 0x3)   mov(memd_a32(ss, esp), eax);          /* mov [esp], eax */
    II(0x10187f5a, 0x2)   mov(esi, edx);                        /* mov esi, edx */
    II(0x10187f5c, 0x2)   mov(edi, ebx);                        /* mov edi, ebx */
    II(0x10187f5e, 0x5)   mov(ebx, 0xfee);                      /* mov ebx, 0xfee */
    II(0x10187f63, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x10187f68, 0x5)   mov(eax, 0x1020a6e8);                 /* mov eax, 0x1020a6e8 */
    II(0x10187f6d, 0x5)   calld(sys_memset, -0x22192);          /* call 0x10165de0 */
    II(0x10187f72, 0x5)   mov(edx, 0xfee);                      /* mov edx, 0xfee */
    II(0x10187f77, 0x5)   mov(ebx, 0x1020a2d8);                 /* mov ebx, 0x1020a2d8 */
    II(0x10187f7c, 0x6)   mov(memd_a32(ds, 0x1020a6dc), edi);   /* mov [0x1020a6dc], edi */
    II(0x10187f82, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10187f88, 0x6)   mov(memd_a32(ds, 0x1020a6e4), ebx);   /* mov [0x1020a6e4], ebx */
    II(0x10187f8e, 0x6)   mov(memd_a32(ds, 0x1020a6d8), ebx);   /* mov [0x1020a6d8], ebx */
l_0x10187f94:
    II(0x10187f94, 0x6)   mov(ebx, memd_a32(ds, 0x1020a6e4));   /* mov ebx, [0x1020a6e4] */
    II(0x10187f9a, 0x6)   mov(ebp, memd_a32(ds, 0x1020a6d8));   /* mov ebp, [0x1020a6d8] */
    II(0x10187fa0, 0x2)   sub(ebx, ebp);                        /* sub ebx, ebp */
    II(0x10187fa2, 0x3)   cmp(edi, 0x10);                       /* cmp edi, 0x10 */
    II(0x10187fa5, 0x6)   jbed(0x101885fb, 0x650);              /* jbe dword 0x101885fb */
    II(0x10187fab, 0x7)   cmp(memd_a32(ds, 0x1020a6dc), 0);     /* cmp dword [0x1020a6dc], 0x0 */
    II(0x10187fb2, 0x6)   jbed(0x1018805b, 0xa3);               /* jbe dword 0x1018805b */
    II(0x10187fb8, 0x3)   cmp(ebx, 0x11);                       /* cmp ebx, 0x11 */
    II(0x10187fbb, 0x6)   jged(0x1018805b, 0x9a);               /* jge dword 0x1018805b */
    II(0x10187fc1, 0x6)   cmp(ebp, memd_a32(ds, 0x1020a6e4));   /* cmp ebp, [0x1020a6e4] */
    II(0x10187fc7, 0x2)   jzd(0x10187ffb, 0x32);                /* jz 0x10187ffb */
    II(0x10187fc9, 0x5)   mov(eax, 0x1020a2d8);                 /* mov eax, 0x1020a2d8 */
    II(0x10187fce, 0x2)   mov(edx, ebp);                        /* mov edx, ebp */
    II(0x10187fd0, 0x5)   calld(/* sys */ 0x10166177, -0x21e5e); /* call 0x10166177 */
    II(0x10187fd5, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e4));   /* mov eax, [0x1020a6e4] */
    II(0x10187fda, 0x6)   mov(ebp, memd_a32(ds, 0x1020a6d8));   /* mov ebp, [0x1020a6d8] */
    II(0x10187fe0, 0x5)   mov(edx, 0x1020a2d8);                 /* mov edx, 0x1020a2d8 */
    II(0x10187fe5, 0x2)   sub(eax, ebp);                        /* sub eax, ebp */
    II(0x10187fe7, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10187fe9, 0x5)   mov(eax, 0x1020a2d8);                 /* mov eax, 0x1020a2d8 */
    II(0x10187fee, 0x6)   mov(memd_a32(ds, 0x1020a6e4), edx);   /* mov [0x1020a6e4], edx */
    II(0x10187ff4, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10187ff9, 0x2)   jmpd(0x1018800c, 0x11);               /* jmp 0x1018800c */
l_0x10187ffb:
    II(0x10187ffb, 0x5)   mov(ebx, 0x1020a2d8);                 /* mov ebx, 0x1020a2d8 */
    II(0x10188000, 0x6)   mov(memd_a32(ds, 0x1020a6e4), ebx);   /* mov [0x1020a6e4], ebx */
    II(0x10188006, 0x6)   mov(memd_a32(ds, 0x1020a6d8), ebx);   /* mov [0x1020a6d8], ebx */
l_0x1018800c:
    II(0x1018800c, 0x6)   mov(ebx, memd_a32(ds, 0x1020a6e4));   /* mov ebx, [0x1020a6e4] */
    II(0x10188012, 0x5)   mov(eax, 0x400);                      /* mov eax, 0x400 */
    II(0x10188017, 0x6)   sub(ebx, 0x1020a2d8);                 /* sub ebx, 0x1020a2d8 */
    II(0x1018801d, 0x3)   mov(ecx, memd_a32(ss, esp));          /* mov ecx, [esp] */
    II(0x10188020, 0x2)   sub(eax, ebx);                        /* sub eax, ebx */
    II(0x10188022, 0x6)   mov(edx, memd_a32(ds, 0x1020a6dc));   /* mov edx, [0x1020a6dc] */
    II(0x10188028, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1018802a, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1018802c, 0x2)   jbed(0x10188030, 0x2);                /* jbe 0x10188030 */
    II(0x1018802e, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
l_0x10188030:
    II(0x10188030, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10188035, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e4));   /* mov eax, [0x1020a6e4] */
    II(0x1018803a, 0x5)   calld(sys_fread, -0x15ad3);           /* call 0x1017256c */
    II(0x1018803f, 0x6)   mov(ebx, memd_a32(ds, 0x1020a6e4));   /* mov ebx, [0x1020a6e4] */
    II(0x10188045, 0x6)   mov(ecx, memd_a32(ds, 0x1020a6dc));   /* mov ecx, [0x1020a6dc] */
    II(0x1018804b, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x1018804d, 0x2)   sub(ecx, eax);                        /* sub ecx, eax */
    II(0x1018804f, 0x6)   mov(memd_a32(ds, 0x1020a6e4), ebx);   /* mov [0x1020a6e4], ebx */
    II(0x10188055, 0x6)   mov(memd_a32(ds, 0x1020a6dc), ecx);   /* mov [0x1020a6dc], ecx */
l_0x1018805b:
    II(0x1018805b, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188060, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188061, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10188063, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188064, 0x4)   mov(memb_a32(ss, esp + 0xc), dl);     /* mov [esp+0xc], dl */
    II(0x10188068, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x1018806d, 0x3)   test(dl, 0x1);                        /* test dl, 0x1 */
    II(0x10188070, 0x2)   jzd(0x101880a6, 0x34);                /* jz 0x101880a6 */
    II(0x10188072, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10188074, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188075, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188076, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10188078, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188079, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x1018807c, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x10188081, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x10188087, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188088, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x1018808b, 0x2)   mov(ebp, eax);                        /* mov ebp, eax */
    II(0x1018808d, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188092, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x10188098, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x1018809e, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
    II(0x101880a4, 0x2)   jmpd(0x10188112, 0x6c);               /* jmp 0x10188112 */
l_0x101880a6:
    II(0x101880a6, 0x1)   inc(eax);                             /* inc eax */
    II(0x101880a7, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x101880aa, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x101880ac, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x101880ae, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101880b3, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101880b5, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x101880b8, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x101880bb, 0x1)   inc(eax);                             /* inc eax */
    II(0x101880bc, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x101880bf, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101880c4, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x101880c6, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x101880c9, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x101880cc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101880ce, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x101880d0, 0x2)   jmpd(0x1018810a, 0x38);               /* jmp 0x1018810a */
l_0x101880d2:
    II(0x101880d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101880d4, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x101880d7, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101880d9, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x101880df, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x101880e5, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x101880e7, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101880ed, 0x1)   inc(edx);                             /* inc edx */
    II(0x101880ee, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x101880f0, 0x1)   inc(esi);                             /* inc esi */
    II(0x101880f1, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101880f7, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101880fd, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188103, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188104, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x1018810a:
    II(0x1018810a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018810c, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x1018810e, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188110, 0x2)   jld(0x101880d2, -0x40);               /* jl 0x101880d2 */
l_0x10188112:
    II(0x10188112, 0x5)   test(memb_a32(ss, esp + 0xc), 0x2);   /* test byte [esp+0xc], 0x2 */
    II(0x10188117, 0x2)   jzd(0x10188151, 0x38);                /* jz 0x10188151 */
    II(0x10188119, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x1018811e, 0x1)   inc(esi);                             /* inc esi */
    II(0x1018811f, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10188121, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188124, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x1018812a, 0x1)   dec(edi);                             /* dec edi */
    II(0x1018812b, 0x1)   inc(edx);                             /* inc edx */
    II(0x1018812c, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x1018812f, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188130, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188136, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x10188138, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018813e, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x10188144, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188149, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x1018814f, 0x2)   jmpd(0x101881c6, 0x75);               /* jmp 0x101881c6 */
l_0x10188151:
    II(0x10188151, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188156, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188157, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x1018815a, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x1018815c, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x1018815e, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188161, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188163, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188168, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x1018816b, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018816c, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x1018816f, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188174, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188176, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188179, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x1018817c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018817e, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188180, 0x2)   jmpd(0x101881be, 0x3c);               /* jmp 0x101881be */
l_0x10188182:
    II(0x10188182, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188184, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188187, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188189, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x1018818f, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188190, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188196, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188199, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x1018819f, 0x1)   inc(eax);                             /* inc eax */
    II(0x101881a0, 0x1)   inc(edx);                             /* inc edx */
    II(0x101881a1, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x101881a4, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x101881a6, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101881ac, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x101881b2, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101881b8, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x101881be:
    II(0x101881be, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101881c0, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101881c2, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x101881c4, 0x2)   jld(0x10188182, -0x44);               /* jl 0x10188182 */
l_0x101881c6:
    II(0x101881c6, 0x5)   test(memb_a32(ss, esp + 0xc), 0x4);   /* test byte [esp+0xc], 0x4 */
    II(0x101881cb, 0x2)   jzd(0x10188201, 0x34);                /* jz 0x10188201 */
    II(0x101881cd, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x101881d3, 0x1)   inc(esi);                             /* inc esi */
    II(0x101881d4, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x101881d6, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x101881d9, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x101881de, 0x1)   dec(edi);                             /* dec edi */
    II(0x101881df, 0x1)   inc(eax);                             /* inc eax */
    II(0x101881e0, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x101881e3, 0x1)   inc(edx);                             /* inc edx */
    II(0x101881e4, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x101881ea, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x101881ef, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x101881f4, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x101881fa, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x101881ff, 0x2)   jmpd(0x10188272, 0x71);               /* jmp 0x10188272 */
l_0x10188201:
    II(0x10188201, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188206, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188207, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x1018820a, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x1018820c, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x1018820e, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188211, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188213, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188218, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x1018821b, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018821c, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x1018821f, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188224, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188226, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188229, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x1018822c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018822e, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188230, 0x2)   jmpd(0x1018826a, 0x38);               /* jmp 0x1018826a */
l_0x10188232:
    II(0x10188232, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188234, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188237, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188239, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x1018823f, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188245, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x10188247, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x1018824d, 0x1)   inc(edx);                             /* inc edx */
    II(0x1018824e, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x10188250, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188251, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188257, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018825d, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188263, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188264, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x1018826a:
    II(0x1018826a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018826c, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x1018826e, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188270, 0x2)   jld(0x10188232, -0x40);               /* jl 0x10188232 */
l_0x10188272:
    II(0x10188272, 0x5)   test(memb_a32(ss, esp + 0xc), 0x8);   /* test byte [esp+0xc], 0x8 */
    II(0x10188277, 0x2)   jzd(0x101882b1, 0x38);                /* jz 0x101882b1 */
    II(0x10188279, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x1018827e, 0x1)   inc(esi);                             /* inc esi */
    II(0x1018827f, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10188281, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188284, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x1018828a, 0x1)   dec(edi);                             /* dec edi */
    II(0x1018828b, 0x1)   inc(edx);                             /* inc edx */
    II(0x1018828c, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x1018828f, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188290, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188296, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x10188298, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018829e, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x101882a4, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101882a9, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x101882af, 0x2)   jmpd(0x10188326, 0x75);               /* jmp 0x10188326 */
l_0x101882b1:
    II(0x101882b1, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101882b6, 0x1)   inc(eax);                             /* inc eax */
    II(0x101882b7, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x101882ba, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x101882bc, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x101882be, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x101882c1, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101882c3, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101882c8, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x101882cb, 0x1)   inc(eax);                             /* inc eax */
    II(0x101882cc, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x101882cf, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101882d4, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x101882d6, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x101882d9, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x101882dc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101882de, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x101882e0, 0x2)   jmpd(0x1018831e, 0x3c);               /* jmp 0x1018831e */
l_0x101882e2:
    II(0x101882e2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101882e4, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x101882e7, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101882e9, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x101882ef, 0x1)   inc(esi);                             /* inc esi */
    II(0x101882f0, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x101882f6, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x101882f9, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101882ff, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188300, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188301, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188304, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x10188306, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018830c, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x10188312, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188318, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x1018831e:
    II(0x1018831e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188320, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188322, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188324, 0x2)   jld(0x101882e2, -0x44);               /* jl 0x101882e2 */
l_0x10188326:
    II(0x10188326, 0x5)   test(memb_a32(ss, esp + 0xc), 0x10);  /* test byte [esp+0xc], 0x10 */
    II(0x1018832b, 0x2)   jzd(0x10188361, 0x34);                /* jz 0x10188361 */
    II(0x1018832d, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x10188333, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188334, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10188336, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x10188339, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x1018833e, 0x1)   dec(edi);                             /* dec edi */
    II(0x1018833f, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188340, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188343, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188344, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x1018834a, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x1018834f, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x10188354, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x1018835a, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x1018835f, 0x2)   jmpd(0x101883d2, 0x71);               /* jmp 0x101883d2 */
l_0x10188361:
    II(0x10188361, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188366, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188367, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x1018836a, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x1018836c, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x1018836e, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188371, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188373, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188378, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x1018837b, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018837c, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x1018837f, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188384, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188386, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188389, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x1018838c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018838e, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188390, 0x2)   jmpd(0x101883ca, 0x38);               /* jmp 0x101883ca */
l_0x10188392:
    II(0x10188392, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188394, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188397, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188399, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x1018839f, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x101883a5, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x101883a7, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101883ad, 0x1)   inc(edx);                             /* inc edx */
    II(0x101883ae, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x101883b0, 0x1)   inc(esi);                             /* inc esi */
    II(0x101883b1, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101883b7, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101883bd, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x101883c3, 0x1)   inc(eax);                             /* inc eax */
    II(0x101883c4, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x101883ca:
    II(0x101883ca, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101883cc, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101883ce, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x101883d0, 0x2)   jld(0x10188392, -0x40);               /* jl 0x10188392 */
l_0x101883d2:
    II(0x101883d2, 0x5)   test(memb_a32(ss, esp + 0xc), 0x20);  /* test byte [esp+0xc], 0x20 */
    II(0x101883d7, 0x2)   jzd(0x10188411, 0x38);                /* jz 0x10188411 */
    II(0x101883d9, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101883de, 0x1)   inc(esi);                             /* inc esi */
    II(0x101883df, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x101883e1, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x101883e4, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101883ea, 0x1)   dec(edi);                             /* dec edi */
    II(0x101883eb, 0x1)   inc(edx);                             /* inc edx */
    II(0x101883ec, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x101883ef, 0x1)   inc(eax);                             /* inc eax */
    II(0x101883f0, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101883f6, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x101883f8, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101883fe, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x10188404, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188409, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x1018840f, 0x2)   jmpd(0x10188486, 0x75);               /* jmp 0x10188486 */
l_0x10188411:
    II(0x10188411, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188416, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188417, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x1018841a, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x1018841c, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x1018841e, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188421, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188423, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188428, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x1018842b, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018842c, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x1018842f, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188434, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188436, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188439, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x1018843c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018843e, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188440, 0x2)   jmpd(0x1018847e, 0x3c);               /* jmp 0x1018847e */
l_0x10188442:
    II(0x10188442, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188444, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188447, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188449, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x1018844f, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188450, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188456, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188459, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x1018845f, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188460, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188461, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188464, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x10188466, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018846c, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x10188472, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188478, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x1018847e:
    II(0x1018847e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188480, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188482, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188484, 0x2)   jld(0x10188442, -0x44);               /* jl 0x10188442 */
l_0x10188486:
    II(0x10188486, 0x5)   test(memb_a32(ss, esp + 0xc), 0x40);  /* test byte [esp+0xc], 0x40 */
    II(0x1018848b, 0x2)   jzd(0x101884c3, 0x36);                /* jz 0x101884c3 */
    II(0x1018848d, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188492, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188493, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188494, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10188496, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188497, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x1018849a, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101884a0, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101884a5, 0x1)   inc(edx);                             /* inc edx */
    II(0x101884a6, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x101884a9, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101884ab, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101884b1, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x101884b6, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101884bc, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x101884c1, 0x2)   jmpd(0x10188534, 0x71);               /* jmp 0x10188534 */
l_0x101884c3:
    II(0x101884c3, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101884c8, 0x1)   inc(eax);                             /* inc eax */
    II(0x101884c9, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x101884cc, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x101884ce, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x101884d0, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x101884d3, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101884d5, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101884da, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x101884dd, 0x1)   inc(eax);                             /* inc eax */
    II(0x101884de, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x101884e1, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101884e6, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x101884e8, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x101884eb, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x101884ee, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101884f0, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x101884f2, 0x2)   jmpd(0x1018852c, 0x38);               /* jmp 0x1018852c */
l_0x101884f4:
    II(0x101884f4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101884f6, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x101884f9, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101884fb, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188501, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188507, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x10188509, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x1018850f, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188510, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x10188512, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188513, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188519, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018851f, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188525, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188526, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x1018852c:
    II(0x1018852c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018852e, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188530, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188532, 0x2)   jld(0x101884f4, -0x40);               /* jl 0x101884f4 */
l_0x10188534:
    II(0x10188534, 0x5)   test(memb_a32(ss, esp + 0xc), 0x80);  /* test byte [esp+0xc], 0x80 */
    II(0x10188539, 0x2)   jzd(0x10188576, 0x3b);                /* jz 0x10188576 */
    II(0x1018853b, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x10188541, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188542, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10188544, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x10188547, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x1018854c, 0x1)   dec(edi);                             /* dec edi */
    II(0x1018854d, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018854e, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188551, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188552, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x10188558, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1018855a, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x1018855f, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x10188565, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x1018856b, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x10188571, 0x5)   jmpd(0x10187f94, -0x5e2);             /* jmp 0x10187f94 */
l_0x10188576:
    II(0x10188576, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x1018857b, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018857c, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x1018857f, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188581, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188583, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188586, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188588, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x1018858d, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188590, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188591, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188594, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188599, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x1018859b, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x1018859e, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x101885a1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101885a3, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x101885a5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101885a7, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101885a9, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x101885ab, 0x6)   jged(0x10187f94, -0x61d);             /* jge dword 0x10187f94 */
l_0x101885b1:
    II(0x101885b1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101885b3, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x101885b6, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101885b8, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x101885be, 0x1)   inc(esi);                             /* inc esi */
    II(0x101885bf, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x101885c5, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x101885c8, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101885ce, 0x1)   inc(eax);                             /* inc eax */
    II(0x101885cf, 0x1)   inc(edx);                             /* inc edx */
    II(0x101885d0, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x101885d3, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x101885d5, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101885db, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x101885e1, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101885e7, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
    II(0x101885ed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101885ef, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101885f1, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x101885f3, 0x6)   jged(0x10187f94, -0x665);             /* jge dword 0x10187f94 */
    II(0x101885f9, 0x2)   jmpd(0x101885b1, -0x4a);              /* jmp 0x101885b1 */
l_0x101885fb:
    II(0x101885fb, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x101885fd, 0x6)   jzd(0x10189245, 0xc42);               /* jz dword 0x10189245 */
    II(0x10188603, 0x7)   cmp(memd_a32(ds, 0x1020a6dc), 0);     /* cmp dword [0x1020a6dc], 0x0 */
    II(0x1018860a, 0x6)   jbed(0x101886b3, 0xa3);               /* jbe dword 0x101886b3 */
    II(0x10188610, 0x3)   cmp(ebx, 0x11);                       /* cmp ebx, 0x11 */
    II(0x10188613, 0x6)   jged(0x101886b3, 0x9a);               /* jge dword 0x101886b3 */
    II(0x10188619, 0x6)   cmp(ebp, memd_a32(ds, 0x1020a6e4));   /* cmp ebp, [0x1020a6e4] */
    II(0x1018861f, 0x2)   jzd(0x10188653, 0x32);                /* jz 0x10188653 */
    II(0x10188621, 0x5)   mov(eax, 0x1020a2d8);                 /* mov eax, 0x1020a2d8 */
    II(0x10188626, 0x2)   mov(edx, ebp);                        /* mov edx, ebp */
    II(0x10188628, 0x5)   calld(/* sys */ 0x10166177, -0x224b6); /* call 0x10166177 */
    II(0x1018862d, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e4));   /* mov eax, [0x1020a6e4] */
    II(0x10188632, 0x6)   mov(ebp, memd_a32(ds, 0x1020a6d8));   /* mov ebp, [0x1020a6d8] */
    II(0x10188638, 0x5)   mov(edx, 0x1020a2d8);                 /* mov edx, 0x1020a2d8 */
    II(0x1018863d, 0x2)   sub(eax, ebp);                        /* sub eax, ebp */
    II(0x1018863f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188641, 0x5)   mov(eax, 0x1020a2d8);                 /* mov eax, 0x1020a2d8 */
    II(0x10188646, 0x6)   mov(memd_a32(ds, 0x1020a6e4), edx);   /* mov [0x1020a6e4], edx */
    II(0x1018864c, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188651, 0x2)   jmpd(0x10188664, 0x11);               /* jmp 0x10188664 */
l_0x10188653:
    II(0x10188653, 0x5)   mov(ebx, 0x1020a2d8);                 /* mov ebx, 0x1020a2d8 */
    II(0x10188658, 0x6)   mov(memd_a32(ds, 0x1020a6e4), ebx);   /* mov [0x1020a6e4], ebx */
    II(0x1018865e, 0x6)   mov(memd_a32(ds, 0x1020a6d8), ebx);   /* mov [0x1020a6d8], ebx */
l_0x10188664:
    II(0x10188664, 0x6)   mov(ebx, memd_a32(ds, 0x1020a6e4));   /* mov ebx, [0x1020a6e4] */
    II(0x1018866a, 0x5)   mov(eax, 0x400);                      /* mov eax, 0x400 */
    II(0x1018866f, 0x6)   sub(ebx, 0x1020a2d8);                 /* sub ebx, 0x1020a2d8 */
    II(0x10188675, 0x3)   mov(ecx, memd_a32(ss, esp));          /* mov ecx, [esp] */
    II(0x10188678, 0x2)   sub(eax, ebx);                        /* sub eax, ebx */
    II(0x1018867a, 0x6)   mov(edx, memd_a32(ds, 0x1020a6dc));   /* mov edx, [0x1020a6dc] */
    II(0x10188680, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10188682, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188684, 0x2)   jbed(0x10188688, 0x2);                /* jbe 0x10188688 */
    II(0x10188686, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
l_0x10188688:
    II(0x10188688, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1018868d, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e4));   /* mov eax, [0x1020a6e4] */
    II(0x10188692, 0x5)   calld(sys_fread, -0x1612b);           /* call 0x1017256c */
    II(0x10188697, 0x6)   mov(ebx, memd_a32(ds, 0x1020a6e4));   /* mov ebx, [0x1020a6e4] */
    II(0x1018869d, 0x6)   mov(ecx, memd_a32(ds, 0x1020a6dc));   /* mov ecx, [0x1020a6dc] */
    II(0x101886a3, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x101886a5, 0x2)   sub(ecx, eax);                        /* sub ecx, eax */
    II(0x101886a7, 0x6)   mov(memd_a32(ds, 0x1020a6e4), ebx);   /* mov [0x1020a6e4], ebx */
    II(0x101886ad, 0x6)   mov(memd_a32(ds, 0x1020a6dc), ecx);   /* mov [0x1020a6dc], ecx */
l_0x101886b3:
    II(0x101886b3, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101886b8, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x101886ba, 0x1)   inc(eax);                             /* inc eax */
    II(0x101886bb, 0x4)   mov(memb_a32(ss, esp + 0x4), dl);     /* mov [esp+0x4], dl */
    II(0x101886bf, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101886c4, 0x1)   dec(edi);                             /* dec edi */
    II(0x101886c5, 0x6)   jzd(0x10189245, 0xb7a);               /* jz dword 0x10189245 */
    II(0x101886cb, 0x3)   test(dl, 0x1);                        /* test dl, 0x1 */
    II(0x101886ce, 0x2)   jzd(0x10188704, 0x34);                /* jz 0x10188704 */
    II(0x101886d0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101886d2, 0x1)   dec(edi);                             /* dec edi */
    II(0x101886d3, 0x1)   inc(esi);                             /* inc esi */
    II(0x101886d4, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x101886d6, 0x1)   inc(edx);                             /* inc edx */
    II(0x101886d7, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x101886da, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x101886df, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x101886e5, 0x1)   inc(eax);                             /* inc eax */
    II(0x101886e6, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x101886e9, 0x2)   mov(ebp, eax);                        /* mov ebp, eax */
    II(0x101886eb, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x101886f0, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x101886f6, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x101886fc, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
    II(0x10188702, 0x2)   jmpd(0x10188770, 0x6c);               /* jmp 0x10188770 */
l_0x10188704:
    II(0x10188704, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188705, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188708, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x1018870a, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x1018870c, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188711, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188713, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188716, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188719, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018871a, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x1018871d, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188722, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188724, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188727, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x1018872a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018872c, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x1018872e, 0x2)   jmpd(0x10188768, 0x38);               /* jmp 0x10188768 */
l_0x10188730:
    II(0x10188730, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188732, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188735, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188737, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x1018873d, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188743, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x10188745, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x1018874b, 0x1)   inc(edx);                             /* inc edx */
    II(0x1018874c, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x1018874e, 0x1)   inc(esi);                             /* inc esi */
    II(0x1018874f, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188755, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018875b, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188761, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188762, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x10188768:
    II(0x10188768, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018876a, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x1018876c, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1018876e, 0x2)   jld(0x10188730, -0x40);               /* jl 0x10188730 */
l_0x10188770:
    II(0x10188770, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10188772, 0x6)   jzd(0x10189245, 0xacd);               /* jz dword 0x10189245 */
    II(0x10188778, 0x5)   test(memb_a32(ss, esp + 0x4), 0x2);   /* test byte [esp+0x4], 0x2 */
    II(0x1018877d, 0x2)   jzd(0x101887b7, 0x38);                /* jz 0x101887b7 */
    II(0x1018877f, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188784, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188785, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10188787, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x1018878a, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188790, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188791, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188792, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188795, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188796, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x1018879c, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x1018879e, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101887a4, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x101887aa, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101887af, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x101887b5, 0x2)   jmpd(0x1018882c, 0x75);               /* jmp 0x1018882c */
l_0x101887b7:
    II(0x101887b7, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101887bc, 0x1)   inc(eax);                             /* inc eax */
    II(0x101887bd, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x101887c0, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x101887c2, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x101887c4, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x101887c7, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101887c9, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101887ce, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x101887d1, 0x1)   inc(eax);                             /* inc eax */
    II(0x101887d2, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x101887d5, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101887da, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x101887dc, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x101887df, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x101887e2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101887e4, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x101887e6, 0x2)   jmpd(0x10188824, 0x3c);               /* jmp 0x10188824 */
l_0x101887e8:
    II(0x101887e8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101887ea, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x101887ed, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101887ef, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x101887f5, 0x1)   inc(esi);                             /* inc esi */
    II(0x101887f6, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x101887fc, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x101887ff, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188805, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188806, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188807, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x1018880a, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x1018880c, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188812, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x10188818, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x1018881e, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x10188824:
    II(0x10188824, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188826, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188828, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1018882a, 0x2)   jld(0x101887e8, -0x44);               /* jl 0x101887e8 */
l_0x1018882c:
    II(0x1018882c, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x1018882e, 0x6)   jzd(0x10189245, 0xa11);               /* jz dword 0x10189245 */
    II(0x10188834, 0x5)   test(memb_a32(ss, esp + 0x4), 0x4);   /* test byte [esp+0x4], 0x4 */
    II(0x10188839, 0x2)   jzd(0x10188871, 0x36);                /* jz 0x10188871 */
    II(0x1018883b, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188840, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188841, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188842, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10188844, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188845, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188848, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x1018884e, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188853, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188854, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188857, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10188859, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018885f, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x10188864, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x1018886a, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x1018886f, 0x2)   jmpd(0x101888e2, 0x71);               /* jmp 0x101888e2 */
l_0x10188871:
    II(0x10188871, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188876, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188877, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x1018887a, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x1018887c, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x1018887e, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188881, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188883, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188888, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x1018888b, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018888c, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x1018888f, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188894, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188896, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188899, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x1018889c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018889e, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x101888a0, 0x2)   jmpd(0x101888da, 0x38);               /* jmp 0x101888da */
l_0x101888a2:
    II(0x101888a2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101888a4, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x101888a7, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101888a9, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x101888af, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x101888b5, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x101888b7, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101888bd, 0x1)   inc(edx);                             /* inc edx */
    II(0x101888be, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x101888c0, 0x1)   inc(esi);                             /* inc esi */
    II(0x101888c1, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101888c7, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101888cd, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x101888d3, 0x1)   inc(eax);                             /* inc eax */
    II(0x101888d4, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x101888da:
    II(0x101888da, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101888dc, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101888de, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x101888e0, 0x2)   jld(0x101888a2, -0x40);               /* jl 0x101888a2 */
l_0x101888e2:
    II(0x101888e2, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x101888e4, 0x6)   jzd(0x10189245, 0x95b);               /* jz dword 0x10189245 */
    II(0x101888ea, 0x5)   test(memb_a32(ss, esp + 0x4), 0x8);   /* test byte [esp+0x4], 0x8 */
    II(0x101888ef, 0x2)   jzd(0x10188929, 0x38);                /* jz 0x10188929 */
    II(0x101888f1, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101888f6, 0x1)   inc(esi);                             /* inc esi */
    II(0x101888f7, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x101888f9, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x101888fc, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188902, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188903, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188904, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188907, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188908, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x1018890e, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x10188910, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188916, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x1018891c, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188921, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x10188927, 0x2)   jmpd(0x1018899e, 0x75);               /* jmp 0x1018899e */
l_0x10188929:
    II(0x10188929, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x1018892e, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018892f, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188932, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188934, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188936, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188939, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x1018893b, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188940, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188943, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188944, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188947, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x1018894c, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x1018894e, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188951, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188954, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188956, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188958, 0x2)   jmpd(0x10188996, 0x3c);               /* jmp 0x10188996 */
l_0x1018895a:
    II(0x1018895a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018895c, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x1018895f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188961, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188967, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188968, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x1018896e, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188971, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188977, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188978, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188979, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x1018897c, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x1018897e, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188984, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x1018898a, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188990, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x10188996:
    II(0x10188996, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188998, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x1018899a, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1018899c, 0x2)   jld(0x1018895a, -0x44);               /* jl 0x1018895a */
l_0x1018899e:
    II(0x1018899e, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x101889a0, 0x6)   jzd(0x10189245, 0x89f);               /* jz dword 0x10189245 */
    II(0x101889a6, 0x5)   test(memb_a32(ss, esp + 0x4), 0x10);  /* test byte [esp+0x4], 0x10 */
    II(0x101889ab, 0x2)   jzd(0x101889e3, 0x36);                /* jz 0x101889e3 */
    II(0x101889ad, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101889b2, 0x1)   dec(edi);                             /* dec edi */
    II(0x101889b3, 0x1)   inc(esi);                             /* inc esi */
    II(0x101889b4, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x101889b6, 0x1)   inc(eax);                             /* inc eax */
    II(0x101889b7, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x101889ba, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101889c0, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101889c5, 0x1)   inc(edx);                             /* inc edx */
    II(0x101889c6, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x101889c9, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101889cb, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101889d1, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x101889d6, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101889dc, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x101889e1, 0x2)   jmpd(0x10188a54, 0x71);               /* jmp 0x10188a54 */
l_0x101889e3:
    II(0x101889e3, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101889e8, 0x1)   inc(eax);                             /* inc eax */
    II(0x101889e9, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x101889ec, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x101889ee, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x101889f0, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x101889f3, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101889f5, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101889fa, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x101889fd, 0x1)   inc(eax);                             /* inc eax */
    II(0x101889fe, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188a01, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188a06, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188a08, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188a0b, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188a0e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188a10, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188a12, 0x2)   jmpd(0x10188a4c, 0x38);               /* jmp 0x10188a4c */
l_0x10188a14:
    II(0x10188a14, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188a16, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188a19, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188a1b, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188a21, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188a27, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x10188a29, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188a2f, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188a30, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x10188a32, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188a33, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188a39, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188a3f, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188a45, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188a46, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x10188a4c:
    II(0x10188a4c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188a4e, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188a50, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188a52, 0x2)   jld(0x10188a14, -0x40);               /* jl 0x10188a14 */
l_0x10188a54:
    II(0x10188a54, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10188a56, 0x6)   jzd(0x10189245, 0x7e9);               /* jz dword 0x10189245 */
    II(0x10188a5c, 0x5)   test(memb_a32(ss, esp + 0x4), 0x20);  /* test byte [esp+0x4], 0x20 */
    II(0x10188a61, 0x2)   jzd(0x10188a9b, 0x38);                /* jz 0x10188a9b */
    II(0x10188a63, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x10188a69, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188a6a, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10188a6c, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x10188a6f, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x10188a74, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188a75, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188a76, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188a79, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188a7a, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x10188a80, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10188a82, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188a87, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x10188a8d, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x10188a93, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x10188a99, 0x2)   jmpd(0x10188b10, 0x75);               /* jmp 0x10188b10 */
l_0x10188a9b:
    II(0x10188a9b, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188aa0, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188aa1, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188aa4, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188aa6, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188aa8, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188aab, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188aad, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188ab2, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188ab5, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188ab6, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188ab9, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188abe, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188ac0, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188ac3, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188ac6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188ac8, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188aca, 0x2)   jmpd(0x10188b08, 0x3c);               /* jmp 0x10188b08 */
l_0x10188acc:
    II(0x10188acc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188ace, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188ad1, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188ad3, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188ad9, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188ada, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188ae0, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188ae3, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188ae9, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188aea, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188aeb, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188aee, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x10188af0, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188af6, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x10188afc, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188b02, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x10188b08:
    II(0x10188b08, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188b0a, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188b0c, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188b0e, 0x2)   jld(0x10188acc, -0x44);               /* jl 0x10188acc */
l_0x10188b10:
    II(0x10188b10, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10188b12, 0x6)   jzd(0x10189245, 0x72d);               /* jz dword 0x10189245 */
    II(0x10188b18, 0x5)   test(memb_a32(ss, esp + 0x4), 0x40);  /* test byte [esp+0x4], 0x40 */
    II(0x10188b1d, 0x2)   jzd(0x10188b53, 0x34);                /* jz 0x10188b53 */
    II(0x10188b1f, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x10188b25, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188b26, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10188b28, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x10188b2b, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x10188b30, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188b31, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188b32, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188b35, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188b36, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x10188b3c, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188b41, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x10188b46, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x10188b4c, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188b51, 0x2)   jmpd(0x10188bc4, 0x71);               /* jmp 0x10188bc4 */
l_0x10188b53:
    II(0x10188b53, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188b58, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188b59, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188b5c, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188b5e, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188b60, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188b63, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188b65, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188b6a, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188b6d, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188b6e, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188b71, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188b76, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188b78, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188b7b, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188b7e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188b80, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188b82, 0x2)   jmpd(0x10188bbc, 0x38);               /* jmp 0x10188bbc */
l_0x10188b84:
    II(0x10188b84, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188b86, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188b89, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188b8b, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188b91, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188b97, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x10188b99, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188b9f, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188ba0, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x10188ba2, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188ba3, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188ba9, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188baf, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188bb5, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188bb6, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x10188bbc:
    II(0x10188bbc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188bbe, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188bc0, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188bc2, 0x2)   jld(0x10188b84, -0x40);               /* jl 0x10188b84 */
l_0x10188bc4:
    II(0x10188bc4, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10188bc6, 0x6)   jzd(0x10189245, 0x679);               /* jz dword 0x10189245 */
    II(0x10188bcc, 0x5)   test(memb_a32(ss, esp + 0x4), 0x80);  /* test byte [esp+0x4], 0x80 */
    II(0x10188bd1, 0x2)   jzd(0x10188c0b, 0x38);                /* jz 0x10188c0b */
    II(0x10188bd3, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x10188bd9, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188bda, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10188bdc, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x10188bdf, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x10188be4, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188be5, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188be6, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188be9, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188bea, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x10188bf0, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10188bf2, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188bf7, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x10188bfd, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x10188c03, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x10188c09, 0x2)   jmpd(0x10188c80, 0x75);               /* jmp 0x10188c80 */
l_0x10188c0b:
    II(0x10188c0b, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188c10, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188c11, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188c14, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188c16, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188c18, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188c1b, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188c1d, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188c22, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188c25, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188c26, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188c29, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188c2e, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188c30, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188c33, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188c36, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188c38, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188c3a, 0x2)   jmpd(0x10188c78, 0x3c);               /* jmp 0x10188c78 */
l_0x10188c3c:
    II(0x10188c3c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188c3e, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188c41, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188c43, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188c49, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188c4a, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188c50, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188c53, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188c59, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188c5a, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188c5b, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188c5e, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x10188c60, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188c66, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x10188c6c, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188c72, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x10188c78:
    II(0x10188c78, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188c7a, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188c7c, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188c7e, 0x2)   jld(0x10188c3c, -0x44);               /* jl 0x10188c3c */
l_0x10188c80:
    II(0x10188c80, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10188c82, 0x6)   jzd(0x10189245, 0x5bd);               /* jz dword 0x10189245 */
    II(0x10188c88, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188c8d, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10188c8f, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188c90, 0x4)   mov(memb_a32(ss, esp + 0x8), dl);     /* mov [esp+0x8], dl */
    II(0x10188c94, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188c99, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188c9a, 0x6)   jzd(0x10189245, 0x5a5);               /* jz dword 0x10189245 */
    II(0x10188ca0, 0x3)   test(dl, 0x1);                        /* test dl, 0x1 */
    II(0x10188ca3, 0x2)   jzd(0x10188cd5, 0x30);                /* jz 0x10188cd5 */
    II(0x10188ca5, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188ca6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10188ca8, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10188caa, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x10188cad, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x10188cb2, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188cb3, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188cb4, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188cb7, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188cb8, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x10188cbe, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188cc3, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x10188cc8, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x10188cce, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188cd3, 0x2)   jmpd(0x10188d41, 0x6c);               /* jmp 0x10188d41 */
l_0x10188cd5:
    II(0x10188cd5, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188cd6, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188cd9, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188cdb, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188cdd, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188ce2, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188ce4, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188ce7, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188cea, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188ceb, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188cee, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188cf3, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188cf5, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188cf8, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188cfb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188cfd, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188cff, 0x2)   jmpd(0x10188d39, 0x38);               /* jmp 0x10188d39 */
l_0x10188d01:
    II(0x10188d01, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188d03, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188d06, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188d08, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188d0e, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188d14, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x10188d16, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188d1c, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188d1d, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x10188d1f, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188d20, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188d26, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188d2c, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188d32, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188d33, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x10188d39:
    II(0x10188d39, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188d3b, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188d3d, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188d3f, 0x2)   jld(0x10188d01, -0x40);               /* jl 0x10188d01 */
l_0x10188d41:
    II(0x10188d41, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10188d43, 0x6)   jzd(0x10189245, 0x4fc);               /* jz dword 0x10189245 */
    II(0x10188d49, 0x5)   test(memb_a32(ss, esp + 0x8), 0x2);   /* test byte [esp+0x8], 0x2 */
    II(0x10188d4e, 0x2)   jzd(0x10188d88, 0x38);                /* jz 0x10188d88 */
    II(0x10188d50, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x10188d56, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188d57, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10188d59, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x10188d5c, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x10188d61, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188d62, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188d63, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188d66, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188d67, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x10188d6d, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10188d6f, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188d74, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x10188d7a, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x10188d80, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x10188d86, 0x2)   jmpd(0x10188dfd, 0x75);               /* jmp 0x10188dfd */
l_0x10188d88:
    II(0x10188d88, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188d8d, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188d8e, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188d91, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188d93, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188d95, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188d98, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188d9a, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188d9f, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188da2, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188da3, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188da6, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188dab, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188dad, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188db0, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188db3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188db5, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188db7, 0x2)   jmpd(0x10188df5, 0x3c);               /* jmp 0x10188df5 */
l_0x10188db9:
    II(0x10188db9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188dbb, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188dbe, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188dc0, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188dc6, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188dc7, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188dcd, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188dd0, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188dd6, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188dd7, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188dd8, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188ddb, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x10188ddd, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188de3, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x10188de9, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188def, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x10188df5:
    II(0x10188df5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188df7, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188df9, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188dfb, 0x2)   jld(0x10188db9, -0x44);               /* jl 0x10188db9 */
l_0x10188dfd:
    II(0x10188dfd, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10188dff, 0x6)   jzd(0x10189245, 0x440);               /* jz dword 0x10189245 */
    II(0x10188e05, 0x5)   test(memb_a32(ss, esp + 0x8), 0x4);   /* test byte [esp+0x8], 0x4 */
    II(0x10188e0a, 0x2)   jzd(0x10188e42, 0x36);                /* jz 0x10188e42 */
    II(0x10188e0c, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188e11, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188e12, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188e13, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10188e15, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188e16, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188e19, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188e1f, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188e24, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188e25, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188e28, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10188e2a, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188e30, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x10188e35, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188e3b, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188e40, 0x2)   jmpd(0x10188eb3, 0x71);               /* jmp 0x10188eb3 */
l_0x10188e42:
    II(0x10188e42, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188e47, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188e48, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188e4b, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188e4d, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188e4f, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188e52, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188e54, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188e59, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188e5c, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188e5d, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188e60, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188e65, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188e67, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188e6a, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188e6d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188e6f, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188e71, 0x2)   jmpd(0x10188eab, 0x38);               /* jmp 0x10188eab */
l_0x10188e73:
    II(0x10188e73, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188e75, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188e78, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188e7a, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188e80, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188e86, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x10188e88, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188e8e, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188e8f, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x10188e91, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188e92, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188e98, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188e9e, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188ea4, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188ea5, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x10188eab:
    II(0x10188eab, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188ead, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188eaf, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188eb1, 0x2)   jld(0x10188e73, -0x40);               /* jl 0x10188e73 */
l_0x10188eb3:
    II(0x10188eb3, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10188eb5, 0x6)   jzd(0x10189245, 0x38a);               /* jz dword 0x10189245 */
    II(0x10188ebb, 0x5)   test(memb_a32(ss, esp + 0x8), 0x8);   /* test byte [esp+0x8], 0x8 */
    II(0x10188ec0, 0x2)   jzd(0x10188efa, 0x38);                /* jz 0x10188efa */
    II(0x10188ec2, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188ec7, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188ec8, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10188eca, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188ecd, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188ed3, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188ed4, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188ed5, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188ed8, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188ed9, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188edf, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x10188ee1, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188ee7, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x10188eed, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188ef2, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x10188ef8, 0x2)   jmpd(0x10188f6f, 0x75);               /* jmp 0x10188f6f */
l_0x10188efa:
    II(0x10188efa, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188eff, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188f00, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188f03, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188f05, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188f07, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188f0a, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188f0c, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188f11, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188f14, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188f15, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188f18, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188f1d, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188f1f, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188f22, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188f25, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188f27, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188f29, 0x2)   jmpd(0x10188f67, 0x3c);               /* jmp 0x10188f67 */
l_0x10188f2b:
    II(0x10188f2b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188f2d, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188f30, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188f32, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188f38, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188f39, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188f3f, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x10188f42, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188f48, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188f49, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188f4a, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188f4d, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x10188f4f, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x10188f55, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x10188f5b, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10188f61, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x10188f67:
    II(0x10188f67, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188f69, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188f6b, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10188f6d, 0x2)   jld(0x10188f2b, -0x44);               /* jl 0x10188f2b */
l_0x10188f6f:
    II(0x10188f6f, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10188f71, 0x6)   jzd(0x10189245, 0x2ce);               /* jz dword 0x10189245 */
    II(0x10188f77, 0x5)   test(memb_a32(ss, esp + 0x8), 0x10);  /* test byte [esp+0x8], 0x10 */
    II(0x10188f7c, 0x2)   jzd(0x10188fb2, 0x34);                /* jz 0x10188fb2 */
    II(0x10188f7e, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x10188f84, 0x1)   inc(esi);                             /* inc esi */
    II(0x10188f85, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10188f87, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x10188f8a, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x10188f8f, 0x1)   dec(edi);                             /* dec edi */
    II(0x10188f90, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188f91, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10188f94, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188f95, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x10188f9b, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188fa0, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x10188fa5, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x10188fab, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10188fb0, 0x2)   jmpd(0x10189023, 0x71);               /* jmp 0x10189023 */
l_0x10188fb2:
    II(0x10188fb2, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10188fb7, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188fb8, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10188fbb, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10188fbd, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10188fbf, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10188fc2, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10188fc4, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188fc9, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10188fcc, 0x1)   inc(eax);                             /* inc eax */
    II(0x10188fcd, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10188fd0, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10188fd5, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10188fd7, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10188fda, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10188fdd, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10188fdf, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10188fe1, 0x2)   jmpd(0x1018901b, 0x38);               /* jmp 0x1018901b */
l_0x10188fe3:
    II(0x10188fe3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10188fe5, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10188fe8, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10188fea, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10188ff0, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10188ff6, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x10188ff8, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10188ffe, 0x1)   inc(edx);                             /* inc edx */
    II(0x10188fff, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x10189001, 0x1)   inc(esi);                             /* inc esi */
    II(0x10189002, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10189008, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018900e, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10189014, 0x1)   inc(eax);                             /* inc eax */
    II(0x10189015, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x1018901b:
    II(0x1018901b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018901d, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x1018901f, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10189021, 0x2)   jld(0x10188fe3, -0x40);               /* jl 0x10188fe3 */
l_0x10189023:
    II(0x10189023, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10189025, 0x6)   jzd(0x10189245, 0x21a);               /* jz dword 0x10189245 */
    II(0x1018902b, 0x5)   test(memb_a32(ss, esp + 0x8), 0x20);  /* test byte [esp+0x8], 0x20 */
    II(0x10189030, 0x2)   jzd(0x1018906a, 0x38);                /* jz 0x1018906a */
    II(0x10189032, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x10189038, 0x1)   inc(esi);                             /* inc esi */
    II(0x10189039, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x1018903b, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x1018903e, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x10189043, 0x1)   dec(edi);                             /* dec edi */
    II(0x10189044, 0x1)   inc(eax);                             /* inc eax */
    II(0x10189045, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10189048, 0x1)   inc(edx);                             /* inc edx */
    II(0x10189049, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x1018904f, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10189051, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10189056, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x1018905c, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x10189062, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x10189068, 0x2)   jmpd(0x101890df, 0x75);               /* jmp 0x101890df */
l_0x1018906a:
    II(0x1018906a, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x1018906f, 0x1)   inc(eax);                             /* inc eax */
    II(0x10189070, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x10189073, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x10189075, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x10189077, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x1018907a, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x1018907c, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10189081, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x10189084, 0x1)   inc(eax);                             /* inc eax */
    II(0x10189085, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10189088, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x1018908d, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x1018908f, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10189092, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10189095, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10189097, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10189099, 0x2)   jmpd(0x101890d7, 0x3c);               /* jmp 0x101890d7 */
l_0x1018909b:
    II(0x1018909b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018909d, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x101890a0, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101890a2, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x101890a8, 0x1)   inc(esi);                             /* inc esi */
    II(0x101890a9, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x101890af, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x101890b2, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101890b8, 0x1)   inc(eax);                             /* inc eax */
    II(0x101890b9, 0x1)   inc(edx);                             /* inc edx */
    II(0x101890ba, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x101890bd, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x101890bf, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101890c5, 0x6)   and_(ebp, 0xfff);                     /* and ebp, 0xfff */
    II(0x101890cb, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101890d1, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x101890d7:
    II(0x101890d7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101890d9, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101890db, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x101890dd, 0x2)   jld(0x1018909b, -0x44);               /* jl 0x1018909b */
l_0x101890df:
    II(0x101890df, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x101890e1, 0x6)   jzd(0x10189245, 0x15e);               /* jz dword 0x10189245 */
    II(0x101890e7, 0x5)   test(memb_a32(ss, esp + 0x8), 0x40);  /* test byte [esp+0x8], 0x40 */
    II(0x101890ec, 0x2)   jzd(0x10189122, 0x34);                /* jz 0x10189122 */
    II(0x101890ee, 0x6)   mov(edx, memd_a32(ds, 0x1020a6d8));   /* mov edx, [0x1020a6d8] */
    II(0x101890f4, 0x1)   inc(esi);                             /* inc esi */
    II(0x101890f5, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x101890f7, 0x3)   mov(memb_a32(ds, esi - 0x1), al);     /* mov [esi-0x1], al */
    II(0x101890fa, 0x5)   mov(eax, memd_a32(ds, 0x1020a6e0));   /* mov eax, [0x1020a6e0] */
    II(0x101890ff, 0x1)   dec(edi);                             /* dec edi */
    II(0x10189100, 0x1)   inc(eax);                             /* inc eax */
    II(0x10189101, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10189104, 0x1)   inc(edx);                             /* inc edx */
    II(0x10189105, 0x6)   mov(memb_a32(ds, eax + 0x1020a6e7), bl); /* mov [eax+0x1020a6e7], bl */
    II(0x1018910b, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10189110, 0x5)   and_(eax, 0xfff);                     /* and eax, 0xfff */
    II(0x10189115, 0x6)   mov(memd_a32(ds, 0x1020a6d8), edx);   /* mov [0x1020a6d8], edx */
    II(0x1018911b, 0x5)   mov(memd_a32(ds, 0x1020a6e0), eax);   /* mov [0x1020a6e0], eax */
    II(0x10189120, 0x2)   jmpd(0x10189193, 0x71);               /* jmp 0x10189193 */
l_0x10189122:
    II(0x10189122, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x10189127, 0x1)   inc(eax);                             /* inc eax */
    II(0x10189128, 0x3)   sub(edi, 0x2);                        /* sub edi, 0x2 */
    II(0x1018912b, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x1018912d, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x1018912f, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x10189132, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10189134, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10189139, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x1018913c, 0x1)   inc(eax);                             /* inc eax */
    II(0x1018913d, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x10189140, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x10189145, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x10189147, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x1018914a, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x1018914d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018914f, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10189151, 0x2)   jmpd(0x1018918b, 0x38);               /* jmp 0x1018918b */
l_0x10189153:
    II(0x10189153, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10189155, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x10189158, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1018915a, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10189160, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10189166, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x10189168, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x1018916e, 0x1)   inc(edx);                             /* inc edx */
    II(0x1018916f, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x10189171, 0x1)   inc(esi);                             /* inc esi */
    II(0x10189172, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10189178, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018917e, 0x6)   and_(edx, 0xfff);                     /* and edx, 0xfff */
    II(0x10189184, 0x1)   inc(eax);                             /* inc eax */
    II(0x10189185, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
l_0x1018918b:
    II(0x1018918b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018918d, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x1018918f, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10189191, 0x2)   jld(0x10189153, -0x40);               /* jl 0x10189153 */
l_0x10189193:
    II(0x10189193, 0x2)   test(edi, edi);                       /* test edi, edi */
    II(0x10189195, 0x6)   jzd(0x10189245, 0xaa);                /* jz dword 0x10189245 */
    II(0x1018919b, 0x5)   test(memb_a32(ss, esp + 0x8), 0x80);  /* test byte [esp+0x8], 0x80 */
    II(0x101891a0, 0x2)   jzd(0x101891d6, 0x34);                /* jz 0x101891d6 */
    II(0x101891a2, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101891a7, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x101891a9, 0x2)   mov(memb_a32(ds, esi), dl);           /* mov [esi], dl */
    II(0x101891ab, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x101891b1, 0x1)   inc(edx);                             /* inc edx */
    II(0x101891b2, 0x2)   mov(bl, memb_a32(ds, esi));           /* mov bl, [esi] */
    II(0x101891b4, 0x1)   inc(eax);                             /* inc eax */
    II(0x101891b5, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x101891bb, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x101891bd, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x101891c3, 0x6)   and_(ebx, 0xfff);                     /* and ebx, 0xfff */
    II(0x101891c9, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101891ce, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebx);   /* mov [0x1020a6e0], ebx */
    II(0x101891d4, 0x2)   jmpd(0x10189245, 0x6f);               /* jmp 0x10189245 */
l_0x101891d6:
    II(0x101891d6, 0x5)   mov(eax, memd_a32(ds, 0x1020a6d8));   /* mov eax, [0x1020a6d8] */
    II(0x101891db, 0x1)   inc(eax);                             /* inc eax */
    II(0x101891dc, 0x5)   mov(edi, 0xfff);                      /* mov edi, 0xfff */
    II(0x101891e1, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x101891e3, 0x2)   mov(bh, memb_a32(ds, eax));           /* mov bh, [eax] */
    II(0x101891e5, 0x3)   mov(cl, memb_a32(ds, eax - 0x1));     /* mov cl, [eax-0x1] */
    II(0x101891e8, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x101891ea, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101891ef, 0x3)   and_(dl, 0xf0);                       /* and dl, 0xf0 */
    II(0x101891f2, 0x1)   inc(eax);                             /* inc eax */
    II(0x101891f3, 0x3)   and_(bh, 0xf);                        /* and bh, 0xf */
    II(0x101891f6, 0x5)   mov(memd_a32(ds, 0x1020a6d8), eax);   /* mov [0x1020a6d8], eax */
    II(0x101891fb, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x101891fd, 0x3)   add(bh, 0x3);                         /* add bh, 0x3 */
    II(0x10189200, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x10189203, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10189205, 0x2)   or_(ecx, edx);                        /* or ecx, edx */
    II(0x10189207, 0x2)   jmpd(0x1018923d, 0x34);               /* jmp 0x1018923d */
l_0x10189209:
    II(0x10189209, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018920b, 0x3)   mov(dx, cx);                          /* mov dx, cx */
    II(0x1018920e, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10189210, 0x2)   and_(edx, edi);                       /* and edx, edi */
    II(0x10189212, 0x1)   inc(esi);                             /* inc esi */
    II(0x10189213, 0x6)   mov(dl, memb_a32(ds, edx + 0x1020a6e8)); /* mov dl, [edx+0x1020a6e8] */
    II(0x10189219, 0x3)   mov(memb_a32(ds, esi - 0x1), dl);     /* mov [esi-0x1], dl */
    II(0x1018921c, 0x6)   mov(edx, memd_a32(ds, 0x1020a6e0));   /* mov edx, [0x1020a6e0] */
    II(0x10189222, 0x1)   inc(eax);                             /* inc eax */
    II(0x10189223, 0x1)   inc(edx);                             /* inc edx */
    II(0x10189224, 0x3)   mov(bl, memb_a32(ds, esi - 0x1));     /* mov bl, [esi-0x1] */
    II(0x10189227, 0x2)   mov(ebp, edx);                        /* mov ebp, edx */
    II(0x10189229, 0x6)   mov(memd_a32(ds, 0x1020a6e0), edx);   /* mov [0x1020a6e0], edx */
    II(0x1018922f, 0x2)   and_(ebp, edi);                       /* and ebp, edi */
    II(0x10189231, 0x6)   mov(memb_a32(ds, edx + 0x1020a6e7), bl); /* mov [edx+0x1020a6e7], bl */
    II(0x10189237, 0x6)   mov(memd_a32(ds, 0x1020a6e0), ebp);   /* mov [0x1020a6e0], ebp */
l_0x1018923d:
    II(0x1018923d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1018923f, 0x2)   mov(dl, bh);                          /* mov dl, bh */
    II(0x10189241, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10189243, 0x2)   jld(0x10189209, -0x3c);               /* jl 0x10189209 */
l_0x10189245:
    II(0x10189245, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x10189248, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10189249, 0x1)   popd(edi);                            /* pop edi */
    II(0x1018924a, 0x1)   popd(esi);                            /* pop esi */
    II(0x1018924b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1018924c, 0x1)   retd();                               /* ret */
FUNC_END

