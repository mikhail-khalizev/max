FUNC_BEGIN(/* sys */ 0x101695b4, 0x8b8ae9bed794946, 0x20, ({0x53, 0x51, 0x56, 0x57, 0x83, 0xec, 0x8, 0x89, 0xc7, 0x89, 0xd6, 0x8b, 0x4a, 0xc, 0x8b, 0x5a, 0x8, 0x8b, 0x6, 0x8b, 0x52, 0x4, 0xe8, 0x21, 0x2c, 0, 0, 0x85, 0xc0, 0x74, 0x3f, 0x83, 0x7f, 0x4c, 0, 0x74, 0x39, 0x89, 0xe2, 0x8d, 0x44, 0x24, 0x4, 0xe8, 0xb4, 0x2c, 0, 0, 0x8b, 0x5c, 0x24, 0x4, 0x8b, 0x6, 0x29, 0xc3, 0x89, 0x5c, 0x24, 0x4, 0x8b, 0xc, 0x24, 0x8b, 0x46, 0x4, 0x29, 0xc1, 0x89, 0xc, 0x24, 0x8b, 0x47, 0x10, 0x2b, 0x47, 0x8, 0x40, 0xf, 0xaf, 0xc1, 0x8b, 0x57, 0x4c, 0x1, 0xd8, 0x8a, 0x4, 0x2, 0x25, 0xff, 0, 0, 0, 0x83, 0xc4, 0x8, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101695b4, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101695b5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101695b6, 0x1)   pushd(esi);                           /* push esi */
    II(0x101695b7, 0x1)   pushd(edi);                           /* push edi */
    II(0x101695b8, 0x3)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x101695bb, 0x2)   mov(edi, eax);                        /* mov edi, eax */
    II(0x101695bd, 0x2)   mov(esi, edx);                        /* mov esi, edx */
    II(0x101695bf, 0x3)   mov(ecx, memd_a32(ds, edx + 0xc));    /* mov ecx, [edx+0xc] */
    II(0x101695c2, 0x3)   mov(ebx, memd_a32(ds, edx + 0x8));    /* mov ebx, [edx+0x8] */
    II(0x101695c5, 0x2)   mov(eax, memd_a32(ds, esi));          /* mov eax, [esi] */
    II(0x101695c7, 0x3)   mov(edx, memd_a32(ds, edx + 0x4));    /* mov edx, [edx+0x4] */
    II(0x101695ca, 0x5)   calld(/* sys */ 0x1016c1f0, 0x2c21);  /* call 0x1016c1f0 */
    II(0x101695cf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101695d1, 0x2)   jzd(0x10169612, 0x3f);                /* jz 0x10169612 */
    II(0x101695d3, 0x4)   cmp(memd_a32(ds, edi + 0x4c), 0);     /* cmp dword [edi+0x4c], 0x0 */
    II(0x101695d7, 0x2)   jzd(0x10169612, 0x39);                /* jz 0x10169612 */
    II(0x101695d9, 0x2)   mov(edx, esp);                        /* mov edx, esp */
    II(0x101695db, 0x4)   lea(eax, esp + 0x4);                  /* lea eax, [esp+0x4] */
    II(0x101695df, 0x5)   calld(/* sys */ 0x1016c298, 0x2cb4);  /* call 0x1016c298 */
    II(0x101695e4, 0x4)   mov(ebx, memd_a32(ss, esp + 0x4));    /* mov ebx, [esp+0x4] */
    II(0x101695e8, 0x2)   mov(eax, memd_a32(ds, esi));          /* mov eax, [esi] */
    II(0x101695ea, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x101695ec, 0x4)   mov(memd_a32(ss, esp + 0x4), ebx);    /* mov [esp+0x4], ebx */
    II(0x101695f0, 0x3)   mov(ecx, memd_a32(ss, esp));          /* mov ecx, [esp] */
    II(0x101695f3, 0x3)   mov(eax, memd_a32(ds, esi + 0x4));    /* mov eax, [esi+0x4] */
    II(0x101695f6, 0x2)   sub(ecx, eax);                        /* sub ecx, eax */
    II(0x101695f8, 0x3)   mov(memd_a32(ss, esp), ecx);          /* mov [esp], ecx */
    II(0x101695fb, 0x3)   mov(eax, memd_a32(ds, edi + 0x10));   /* mov eax, [edi+0x10] */
    II(0x101695fe, 0x3)   sub(eax, memd_a32(ds, edi + 0x8));    /* sub eax, [edi+0x8] */
    II(0x10169601, 0x1)   inc(eax);                             /* inc eax */
    II(0x10169602, 0x3)   imul(eax, ecx);                       /* imul eax, ecx */
    II(0x10169605, 0x3)   mov(edx, memd_a32(ds, edi + 0x4c));   /* mov edx, [edi+0x4c] */
    II(0x10169608, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1016960a, 0x3)   mov(al, memb_a32(ds, edx + eax));     /* mov al, [edx+eax] */
    II(0x1016960d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
l_0x10169612:
    II(0x10169612, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x10169615, 0x1)   popd(edi);                            /* pop edi */
    II(0x10169616, 0x1)   popd(esi);                            /* pop esi */
    II(0x10169617, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10169618, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10169619, 0x1)   retd();                               /* ret */
FUNC_END

