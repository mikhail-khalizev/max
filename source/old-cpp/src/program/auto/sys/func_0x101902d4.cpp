FUNC_BEGIN(/* sys */ 0x101902d4, 0x59c6c84c57ceec8d, 0x20, ({0x55, 0x8b, 0xec, 0x83, 0xc4, 0xec, 0x56, 0x57, 0x53, 0x66, 0x8c, 0xd8, 0x66, 0x8e, 0xc0, 0xa1, 0xd8, 0x9c, 0x20, 0x10, 0x2b, 0x5, 0xc8, 0x9c, 0x20, 0x10, 0x89, 0x45, 0xf4, 0x33, 0xdb, 0x8a, 0x1d, 0xd2, 0x9d, 0x20, 0x10, 0x8b, 0x45, 0x10, 0xc1, 0xe0, 0x3, 0xa3, 0xe0, 0x9c, 0x20, 0x10, 0x8b, 0x45, 0x18, 0xc1, 0xe0, 0x3, 0xa3, 0xdc, 0x9c, 0x20, 0x10, 0x8b, 0x45, 0x14, 0xc1, 0xe0, 0x3, 0xf7, 0xe3, 0xa3, 0xe4, 0x9c, 0x20, 0x10, 0x8b, 0x45, 0x1c, 0xc1, 0xe0, 0x3, 0xf7, 0xe3, 0xa3, 0xd4, 0x9c, 0x20, 0x10, 0xa1, 0xc4, 0x9c, 0x20, 0x10, 0x2b, 0x5, 0xdc, 0x9c, 0x20, 0x10, 0x89, 0x45, 0xf8, 0xa1, 0xc8, 0x9c, 0x20, 0x10, 0x89, 0x45, 0xfc, 0x83, 0x7d, 0x10, 0, 0x75, 0x6, 0x83, 0x7d, 0x14, 0, 0x74, 0x14, 0xa1, 0xe4, 0x9c, 0x20, 0x10, 0xf7, 0x25, 0xd0, 0x9c, 0x20, 0x10, 0x3, 0x5, 0xe0, 0x9c, 0x20, 0x10, 0x1, 0x45, 0xfc, 0xa1, 0xd0, 0x9c, 0x20, 0x10, 0xc1, 0xe0, 0x2, 0x2b, 0x5, 0xdc, 0x9c, 0x20, 0x10, 0x89, 0x45, 0xf8, 0xd1, 0x2d, 0xd4, 0x9c, 0x20, 0x10, 0xa1, 0xd0, 0x9c, 0x20, 0x10, 0x8d, 0x44, 0x40, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x75, 0xc, 0x8b, 0x7d, 0xfc, 0x8b, 0x45, 0x18, 0xd1, 0xe8, 0x89, 0x45, 0xec, 0xff, 0x4d, 0xec, 0x78, 0x26, 0x8b, 0x5d, 0x8, 0x8a, 0x3, 0x43, 0x89, 0x5d, 0x8, 0x33, 0xdb, 0x8a, 0xd8, 0xc0, 0xeb, 0x4, 0x83, 0xe0, 0xf, 0x68, 0x90, 0x3, 0x19, 0x10, 0xff, 0x34, 0x9d, 0x50, 0xf9, 0x1b, 0x10, 0xff, 0x24, 0x85, 0x50, 0xf9, 0x1b, 0x10, 0x3, 0x7d, 0xf8, 0xff, 0x4d, 0x1c, 0x75, 0xc5, 0x5b, 0x5f, 0x5e, 0xc9, 0xc3}))
    II(0x101902d4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101902d5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101902d7, 0x3)   add(esp, -0x14 /* 0xec */);           /* add esp, 0xec */
    II(0x101902da, 0x1)   pushd(esi);                           /* push esi */
    II(0x101902db, 0x1)   pushd(edi);                           /* push edi */
    II(0x101902dc, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101902dd, 0x3)   mov(ax, ds);                          /* mov ax, ds */
    II(0x101902e0, 0x3)   mov(es, ax);                          /* mov es, ax */
    II(0x101902e3, 0x5)   mov(eax, memd_a32(ds, 0x10209cd8));   /* mov eax, [0x10209cd8] */
    II(0x101902e8, 0x6)   sub(eax, memd_a32(ds, 0x10209cc8));   /* sub eax, [0x10209cc8] */
    II(0x101902ee, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101902f1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101902f3, 0x6)   mov(bl, memb_a32(ds, 0x10209dd2));    /* mov bl, [0x10209dd2] */
    II(0x101902f9, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x101902fc, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x101902ff, 0x5)   mov(memd_a32(ds, 0x10209ce0), eax);   /* mov [0x10209ce0], eax */
    II(0x10190304, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x10190307, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x1019030a, 0x5)   mov(memd_a32(ds, 0x10209cdc), eax);   /* mov [0x10209cdc], eax */
    II(0x1019030f, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10190312, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x10190315, 0x2)   mul(ebx);                             /* mul ebx */
    II(0x10190317, 0x5)   mov(memd_a32(ds, 0x10209ce4), eax);   /* mov [0x10209ce4], eax */
    II(0x1019031c, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x1019031f, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x10190322, 0x2)   mul(ebx);                             /* mul ebx */
    II(0x10190324, 0x5)   mov(memd_a32(ds, 0x10209cd4), eax);   /* mov [0x10209cd4], eax */
    II(0x10190329, 0x5)   mov(eax, memd_a32(ds, 0x10209cc4));   /* mov eax, [0x10209cc4] */
    II(0x1019032e, 0x6)   sub(eax, memd_a32(ds, 0x10209cdc));   /* sub eax, [0x10209cdc] */
    II(0x10190334, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10190337, 0x5)   mov(eax, memd_a32(ds, 0x10209cc8));   /* mov eax, [0x10209cc8] */
    II(0x1019033c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1019033f, 0x4)   cmp(memd_a32(ss, ebp + 0x10), 0);     /* cmp dword [ebp+0x10], 0x0 */
    II(0x10190343, 0x2)   jnzd(0x1019034b, 0x6);                /* jnz 0x1019034b */
    II(0x10190345, 0x4)   cmp(memd_a32(ss, ebp + 0x14), 0);     /* cmp dword [ebp+0x14], 0x0 */
    II(0x10190349, 0x2)   jzd(0x1019035f, 0x14);                /* jz 0x1019035f */
l_0x1019034b:
    II(0x1019034b, 0x5)   mov(eax, memd_a32(ds, 0x10209ce4));   /* mov eax, [0x10209ce4] */
    II(0x10190350, 0x6)   mul(memd_a32(ds, 0x10209cd0));        /* mul dword [0x10209cd0] */
    II(0x10190356, 0x6)   add(eax, memd_a32(ds, 0x10209ce0));   /* add eax, [0x10209ce0] */
    II(0x1019035c, 0x3)   add(memd_a32(ss, ebp - 0x4), eax);    /* add [ebp-0x4], eax */
l_0x1019035f:
    II(0x1019035f, 0x5)   mov(eax, memd_a32(ds, 0x10209cd0));   /* mov eax, [0x10209cd0] */
    II(0x10190364, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10190367, 0x6)   sub(eax, memd_a32(ds, 0x10209cdc));   /* sub eax, [0x10209cdc] */
    II(0x1019036d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10190370, 0x6)   shr(memd_a32(ds, 0x10209cd4), 0x1);   /* shr dword [0x10209cd4], 1 */
    II(0x10190376, 0x5)   mov(eax, memd_a32(ds, 0x10209cd0));   /* mov eax, [0x10209cd0] */
    II(0x1019037b, 0x4)   lea(eax, eax + eax * 0x2 - 0x8);      /* lea eax, [eax+eax*2-0x8] */
    II(0x1019037f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10190382, 0x3)   mov(esi, memd_a32(ss, ebp + 0xc));    /* mov esi, [ebp+0xc] */
    II(0x10190385, 0x3)   mov(edi, memd_a32(ss, ebp - 0x4));    /* mov edi, [ebp-0x4] */
l_0x10190388:
    II(0x10190388, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x1019038b, 0x2)   shr(eax, 0x1);                        /* shr eax, 1 */
    II(0x1019038d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10190390, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
    II(0x10190393, 0x2)   jsd(0x101903bb, 0x26);                /* js 0x101903bb */
    II(0x10190395, 0x3)   mov(ebx, memd_a32(ss, ebp + 0x8));    /* mov ebx, [ebp+0x8] */
    II(0x10190398, 0x2)   mov(al, memb_a32(ds, ebx));           /* mov al, [ebx] */
    II(0x1019039a, 0x1)   inc(ebx);                             /* inc ebx */
    II(0x1019039b, 0x3)   mov(memd_a32(ss, ebp + 0x8), ebx);    /* mov [ebp+0x8], ebx */
    II(0x1019039e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101903a0, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x101903a2, 0x3)   shr(bl, 0x4);                         /* shr bl, 0x4 */
    II(0x101903a5, 0x3)   and_(eax, 0xf);                       /* and eax, 0xf */
    II(0x101903a8, 0x5)   pushd(/* sys */ 0x10190390);          /* push dword 0x10190390 */
    II(0x101903ad, 0x7)   pushd(memd_a32(ds, ebx * 0x4 + 0x101bf950)); /* push dword [ebx*4+0x101bf950] */
    II(0x101903b4, 0x7)   jmpd_abs(memd_a32(ds, eax * 0x4 + 0x101bf950)); /* jmp dword near [eax*4+0x101bf950] */
l_0x101903bb:
    II(0x101903bb, 0x3)   add(edi, memd_a32(ss, ebp - 0x8));    /* add edi, [ebp-0x8] */
    II(0x101903be, 0x3)   dec(memd_a32(ss, ebp + 0x1c));        /* dec dword [ebp+0x1c] */
    II(0x101903c1, 0x2)   jnzd(0x10190388, -0x3b);              /* jnz 0x10190388 */
    II(0x101903c3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101903c4, 0x1)   popd(edi);                            /* pop edi */
    II(0x101903c5, 0x1)   popd(esi);                            /* pop esi */
    II(0x101903c6, 0x1)   leaved();                             /* leave */
    II(0x101903c7, 0x1)   retd();                               /* ret */
FUNC_END

