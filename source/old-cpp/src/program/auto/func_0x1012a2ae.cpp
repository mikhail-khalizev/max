FUNC_BEGIN(0x1012a2ae, 0x6e6056116aad6c60, 0x20, ({0x68, 0x84, 0, 0, 0, 0xe8, 0x9a, 0xba, 0x3, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x64, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xf4, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x45, 0xf8, 0x74, 0x2b, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0xe8, 0x12, 0xbc, 0x3, 0, 0x83, 0xc4, 0x10, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xf0, 0xe8, 0x34, 0xbc, 0x3, 0, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x1012a2ae, 0x5)   pushd(0x84);                          /* push dword 0x84 */
    II(0x1012a2b3, 0x5)   calld(sys_check_available_stack_size, 0x3ba9a); /* call 0x10165d52 */
    II(0x1012a2b8, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012a2b9, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012a2ba, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012a2bb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012a2bd, 0x6)   sub(esp, 0x64);                       /* sub esp, 0x64 */
    II(0x1012a2c3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012a2c6, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1012a2c9, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1012a2cc, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x1012a2cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012a2d2, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x1012a2d6, 0x2)   jzd(0x1012a303, 0x2b);                /* jz 0x1012a303 */
    II(0x1012a2d8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1012a2dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012a2dd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1012a2e1, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012a2e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012a2e5, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012a2e6, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x1012a2e9, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012a2ea, 0x5)   calld(sys_sprintf, 0x3bc12);          /* call 0x10165f01 */
    II(0x1012a2ef, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x1012a2f2, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x1012a2f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012a2f8, 0x5)   calld(sys_strcat, 0x3bc34);           /* call 0x10165f31 */
    II(0x1012a2fd, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1012a301, 0x2)   jmpd(0x1012a307, 0x4);                /* jmp 0x1012a307 */
l_0x1012a303:
    II(0x1012a303, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x1012a307:
    II(0x1012a307, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1012a30a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012a30c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012a30d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012a30e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012a30f, 0x1)   retd();                               /* ret */
FUNC_END

