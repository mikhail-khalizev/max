FUNC_BEGIN(0x100939b6, 0x6b89dd7f26c70ec6, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0x92, 0x23, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x5c, 0x29, 0xfe, 0xff, 0x8d, 0x5d, 0xc0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd0, 0x2a, 0xfe, 0xff, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xc0, 0xe8, 0xea, 0x31, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x59, 0x73, 0xa, 0, 0x84, 0xc0, 0x74, 0x5c, 0x8d, 0x45, 0xc0, 0xe8, 0x7c, 0x29, 0xfe, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xff, 0xe4, 0xfd, 0xff, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7d, 0x8, 0x8b, 0x45, 0xe4, 0x29, 0x45, 0xc8, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x1, 0x45, 0xcc, 0x8d, 0x45, 0xc0, 0xe8, 0x50, 0x29, 0xfe, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xd2, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x18, 0x83, 0xf8, 0x6, 0x75, 0xf, 0x8d, 0x45, 0xc0, 0xe8, 0x31, 0x29, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x1, 0x45, 0xd0, 0xeb, 0x8e, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0xe8, 0x45, 0x8c, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0x4f, 0x8b, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xc4, 0x10, 0x4, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xe0, 0xeb, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0x45, 0x31, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xb4, 0x72, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x72, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x2b, 0x8a, 0, 0, 0xe8, 0xf2, 0x89, 0, 0, 0x89, 0x45, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0x2, 0x75, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0x8d, 0x45, 0xc4, 0xe8, 0xe, 0x8a, 0, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xbc, 0xff, 0x52, 0x70, 0x84, 0xc0, 0x74, 0x13, 0x8d, 0x45, 0xc4, 0xe8, 0xf3, 0x89, 0, 0, 0xe8, 0xba, 0x89, 0, 0, 0x66, 0x3d, 0x1, 0, 0x74, 0x2, 0xeb, 0x20, 0x8d, 0x45, 0xc4, 0xe8, 0xde, 0x89, 0, 0, 0xe8, 0xe, 0x8e, 0xff, 0xff, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x55, 0x5c, 0xff, 0xff, 0x89, 0x45, 0xe8, 0xe9, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0xe8, 0x86, 0x8b, 0, 0, 0x8d, 0x5d, 0xc4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x12, 0x8a, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0xa0, 0x30, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xf, 0x72, 0xa, 0, 0x84, 0xc0, 0x74, 0x56, 0x8d, 0x45, 0xc4, 0xe8, 0x8a, 0x89, 0, 0, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xb8, 0xff, 0x52, 0x70, 0x84, 0xc0, 0x74, 0x13, 0x8d, 0x45, 0xc4, 0xe8, 0x6f, 0x89, 0, 0, 0xe8, 0x9f, 0x8d, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xe8, 0x7c, 0x2, 0xeb, 0x24, 0x8d, 0x45, 0xc4, 0xe8, 0x5a, 0x89, 0, 0, 0xe8, 0x21, 0x89, 0, 0, 0x98, 0xe8, 0x85, 0xe3, 0xfd, 0xff, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7e, 0x6, 0x8b, 0x45, 0xe4, 0x1, 0x45, 0xcc, 0xeb, 0x94, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x68, 0xe3, 0xfd, 0xff, 0x89, 0x45, 0xf4, 0xf7, 0x5d, 0xf4, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x58, 0xe3, 0xfd, 0xff, 0x89, 0x45, 0xd4, 0xf7, 0x5d, 0xd4, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xdf, 0xe2, 0xfd, 0xff, 0x89, 0x45, 0xec, 0xb8, 0x2, 0, 0, 0, 0xe8, 0xd2, 0xe2, 0xfd, 0xff, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0x32, 0x7d, 0x6b, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xd4, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x5d, 0xd8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xf4, 0x29, 0xc2, 0x89, 0x55, 0xdc, 0xf, 0xbf, 0x45, 0xcc, 0xf, 0xbf, 0x55, 0xdc, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0xf4, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xdc, 0xb9, 0, 0xb, 0, 0, 0xbb, 0x1, 0, 0, 0, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0xe8, 0x19, 0x5, 0, 0, 0x84, 0xc0, 0x74, 0x1a, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xe, 0x7e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x4, 0x23, 0xfe, 0xff, 0xeb, 0x6c, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x45, 0xe0, 0x7e, 0x19, 0xb9, 0, 0xb, 0, 0, 0x8b, 0x5d, 0xfc, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x7a, 0x31, 0, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x1a, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xd0, 0x7d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xc6, 0x22, 0xfe, 0xff, 0xeb, 0x2e, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xb6, 0x7d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xac, 0x22, 0xfe, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xa0, 0x7d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x96, 0x22, 0xfe, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100939b6, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x100939bb, 0x5)   calld(sys_check_available_stack_size, 0xd2392); /* call 0x10165d52 */
    II(0x100939c0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100939c1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100939c2, 0x1)   pushd(edx);                           /* push edx */
    II(0x100939c3, 0x1)   pushd(esi);                           /* push esi */
    II(0x100939c4, 0x1)   pushd(edi);                           /* push edi */
    II(0x100939c5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100939c6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100939c8, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x100939ce, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100939d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100939d4, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100939d7, 0x5)   calld(0x10076338, -0x1d6a4);          /* call 0x10076338 */
    II(0x100939dc, 0x3)   lea(ebx, ebp - 0x40);                 /* lea ebx, [ebp-0x40] */
    II(0x100939df, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100939e1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100939e3, 0x5)   calld(0x100764b8, -0x1d530);          /* call 0x100764b8 */
    II(0x100939e8, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x100939ef, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
    II(0x100939f6, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100939fd, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x10093a04, 0x2)   jmpd(0x10093a0e, 0x8);                /* jmp 0x10093a0e */
l_0x10093a06:
    II(0x10093a06, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10093a09, 0x5)   calld(0x10076bf8, -0x1ce16);          /* call 0x10076bf8 */
l_0x10093a0e:
    II(0x10093a0e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093a10, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10093a13, 0x5)   calld(0x1013ad71, 0xa7359);           /* call 0x1013ad71 */
    II(0x10093a18, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093a1a, 0x2)   jzd(0x10093a78, 0x5c);                /* jz 0x10093a78 */
    II(0x10093a1c, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10093a1f, 0x5)   calld(0x100763a0, -0x1d684);          /* call 0x100763a0 */
    II(0x10093a24, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10093a27, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10093a2a, 0x5)   calld(0x10071f2e, -0x21b01);          /* call 0x10071f2e */
    II(0x10093a2f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10093a32, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10093a36, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10093a38, 0x2)   jged(0x10093a42, 0x8);                /* jge 0x10093a42 */
    II(0x10093a3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10093a3d, 0x3)   sub(memd_a32(ss, ebp - 0x38), eax);   /* sub [ebp-0x38], eax */
    II(0x10093a40, 0x2)   jmpd(0x10093a48, 0x6);                /* jmp 0x10093a48 */
l_0x10093a42:
    II(0x10093a42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10093a45, 0x3)   add(memd_a32(ss, ebp - 0x34), eax);   /* add [ebp-0x34], eax */
l_0x10093a48:
    II(0x10093a48, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10093a4b, 0x5)   calld(0x100763a0, -0x1d6b0);          /* call 0x100763a0 */
    II(0x10093a50, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10093a53, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10093a56, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10093a59, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81d2)); /* mov eax, [eax+0x101c81d2] */
    II(0x10093a5f, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x10093a62, 0x3)   cmp(eax, 0x6);                        /* cmp eax, 0x6 */
    II(0x10093a65, 0x2)   jnzd(0x10093a76, 0xf);                /* jnz 0x10093a76 */
    II(0x10093a67, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10093a6a, 0x5)   calld(0x100763a0, -0x1d6cf);          /* call 0x100763a0 */
    II(0x10093a6f, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x10093a73, 0x3)   add(memd_a32(ss, ebp - 0x30), eax);   /* add [ebp-0x30], eax */
l_0x10093a76:
    II(0x10093a76, 0x2)   jmpd(0x10093a06, -0x72);              /* jmp 0x10093a06 */
l_0x10093a78:
    II(0x10093a78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10093a7b, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x10093a7e, 0x5)   calld(0x1009c6c8, 0x8c45);            /* call 0x1009c6c8 */
    II(0x10093a83, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10093a85, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093a88, 0x5)   calld(0x1009c5dc, 0x8b4f);            /* call 0x1009c5dc */
    II(0x10093a8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10093a90, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x10093a93, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10093a96, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10093a9b, 0x5)   calld(0x100d4b64, 0x410c4);           /* call 0x100d4b64 */
    II(0x10093aa0, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10093aa3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10093aa6, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10093aa9, 0x2)   jmpd(0x10093ab3, 0x8);                /* jmp 0x10093ab3 */
l_0x10093aab:
    II(0x10093aab, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093aae, 0x5)   calld(0x10076bf8, -0x1cebb);          /* call 0x10076bf8 */
l_0x10093ab3:
    II(0x10093ab3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093ab5, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093ab8, 0x5)   calld(0x1013ad71, 0xa72b4);           /* call 0x1013ad71 */
    II(0x10093abd, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093abf, 0x6)   jzd(0x10093b37, 0x72);                /* jz dword 0x10093b37 */
    II(0x10093ac5, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093ac8, 0x5)   calld(0x1009c4f8, 0x8a2b);            /* call 0x1009c4f8 */
    II(0x10093acd, 0x5)   calld(0x1009c4c4, 0x89f2);            /* call 0x1009c4c4 */
    II(0x10093ad2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10093ad5, 0x5)   cmp(memw_a32(ss, ebp - 0x10), 0x2);   /* cmp word [ebp-0x10], 0x2 */
    II(0x10093ada, 0x2)   jnzd(0x10093ae2, 0x6);                /* jnz 0x10093ae2 */
    II(0x10093adc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10093adf, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
l_0x10093ae2:
    II(0x10093ae2, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093ae5, 0x5)   calld(0x1009c4f8, 0x8a0e);            /* call 0x1009c4f8 */
    II(0x10093aea, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x10093aed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10093af0, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10093af3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10093af6, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x10093af9, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093afb, 0x2)   jzd(0x10093b10, 0x13);                /* jz 0x10093b10 */
    II(0x10093afd, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093b00, 0x5)   calld(0x1009c4f8, 0x89f3);            /* call 0x1009c4f8 */
    II(0x10093b05, 0x5)   calld(0x1009c4c4, 0x89ba);            /* call 0x1009c4c4 */
    II(0x10093b0a, 0x4)   cmp(ax, 0x1);                         /* cmp ax, 0x1 */
    II(0x10093b0e, 0x2)   jzd(0x10093b12, 0x2);                 /* jz 0x10093b12 */
l_0x10093b10:
    II(0x10093b10, 0x2)   jmpd(0x10093b32, 0x20);               /* jmp 0x10093b32 */
l_0x10093b12:
    II(0x10093b12, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093b15, 0x5)   calld(0x1009c4f8, 0x89de);            /* call 0x1009c4f8 */
    II(0x10093b1a, 0x5)   calld(0x1008c92d, -0x71f2);           /* call 0x1008c92d */
    II(0x10093b1f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10093b22, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10093b26, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10093b2a, 0x5)   calld(my_min, -0xa3ab);               /* call 0x10089784 */
    II(0x10093b2f, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x10093b32:
    II(0x10093b32, 0x5)   jmpd(0x10093aab, -0x8c);              /* jmp 0x10093aab */
l_0x10093b37:
    II(0x10093b37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10093b3a, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x10093b3d, 0x5)   calld(0x1009c6c8, 0x8b86);            /* call 0x1009c6c8 */
    II(0x10093b42, 0x3)   lea(ebx, ebp - 0x3c);                 /* lea ebx, [ebp-0x3c] */
    II(0x10093b45, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10093b47, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10093b49, 0x5)   calld(0x1009c560, 0x8a12);            /* call 0x1009c560 */
    II(0x10093b4e, 0x2)   jmpd(0x10093b58, 0x8);                /* jmp 0x10093b58 */
l_0x10093b50:
    II(0x10093b50, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093b53, 0x5)   calld(0x10076bf8, -0x1cf60);          /* call 0x10076bf8 */
l_0x10093b58:
    II(0x10093b58, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093b5a, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093b5d, 0x5)   calld(0x1013ad71, 0xa720f);           /* call 0x1013ad71 */
    II(0x10093b62, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093b64, 0x2)   jzd(0x10093bbc, 0x56);                /* jz 0x10093bbc */
    II(0x10093b66, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093b69, 0x5)   calld(0x1009c4f8, 0x898a);            /* call 0x1009c4f8 */
    II(0x10093b6e, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x10093b71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10093b74, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10093b77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10093b7a, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x10093b7d, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093b7f, 0x2)   jzd(0x10093b94, 0x13);                /* jz 0x10093b94 */
    II(0x10093b81, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093b84, 0x5)   calld(0x1009c4f8, 0x896f);            /* call 0x1009c4f8 */
    II(0x10093b89, 0x5)   calld(0x1008c92d, -0x7261);           /* call 0x1008c92d */
    II(0x10093b8e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x10093b92, 0x2)   jld(0x10093b96, 0x2);                 /* jl 0x10093b96 */
l_0x10093b94:
    II(0x10093b94, 0x2)   jmpd(0x10093bba, 0x24);               /* jmp 0x10093bba */
l_0x10093b96:
    II(0x10093b96, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093b99, 0x5)   calld(0x1009c4f8, 0x895a);            /* call 0x1009c4f8 */
    II(0x10093b9e, 0x5)   calld(0x1009c4c4, 0x8921);            /* call 0x1009c4c4 */
    II(0x10093ba3, 0x1)   cwde();                               /* cwde */
    II(0x10093ba4, 0x5)   calld(0x10071f2e, -0x21c7b);          /* call 0x10071f2e */
    II(0x10093ba9, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10093bac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10093bb0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10093bb2, 0x2)   jled(0x10093bba, 0x6);                /* jle 0x10093bba */
    II(0x10093bb4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10093bb7, 0x3)   add(memd_a32(ss, ebp - 0x34), eax);   /* add [ebp-0x34], eax */
l_0x10093bba:
    II(0x10093bba, 0x2)   jmpd(0x10093b50, -0x6c);              /* jmp 0x10093b50 */
l_0x10093bbc:
    II(0x10093bbc, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10093bc1, 0x5)   calld(0x10071f2e, -0x21c98);          /* call 0x10071f2e */
    II(0x10093bc6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10093bc9, 0x3)   neg(memd_a32(ss, ebp - 0xc));         /* neg dword [ebp-0xc] */
    II(0x10093bcc, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10093bd1, 0x5)   calld(0x10071f2e, -0x21ca8);          /* call 0x10071f2e */
    II(0x10093bd6, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10093bd9, 0x3)   neg(memd_a32(ss, ebp - 0x2c));        /* neg dword [ebp-0x2c] */
    II(0x10093bdc, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10093be1, 0x5)   calld(0x10071ec5, -0x21d21);          /* call 0x10071ec5 */
    II(0x10093be6, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10093be9, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10093bee, 0x5)   calld(0x10071ec5, -0x21d2e);          /* call 0x10071ec5 */
    II(0x10093bf3, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10093bf6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x10093bfa, 0x3)   cmp(eax, 0x32);                       /* cmp eax, 0x32 */
    II(0x10093bfd, 0x2)   jged(0x10093c6a, 0x6b);               /* jge 0x10093c6a */
    II(0x10093bff, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10093c03, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x10093c07, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10093c0a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x28)); /* movsx ebx, word [ebp-0x28] */
    II(0x10093c0e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10093c10, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10093c13, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10093c15, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10093c19, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10093c1b, 0x3)   mov(memd_a32(ss, ebp - 0x24), edx);   /* mov [ebp-0x24], edx */
    II(0x10093c1e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x10093c22, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10093c26, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10093c28, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x10093c2c, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10093c2e, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10093c31, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10093c33, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10093c36, 0x5)   mov(ecx, 0xb00);                      /* mov ecx, 0xb00 */
    II(0x10093c3b, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10093c40, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10093c44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10093c47, 0x5)   calld(0x10094165, 0x519);             /* call 0x10094165 */
    II(0x10093c4c, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093c4e, 0x2)   jzd(0x10093c6a, 0x1a);                /* jz 0x10093c6a */
    II(0x10093c50, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10093c54, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093c56, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093c59, 0x5)   calld(0x1009ba6c, 0x7e0e);            /* call 0x1009ba6c */
    II(0x10093c5e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093c60, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10093c63, 0x5)   calld(0x10075f6c, -0x1dcfc);          /* call 0x10075f6c */
    II(0x10093c68, 0x2)   jmpd(0x10093cd6, 0x6c);               /* jmp 0x10093cd6 */
l_0x10093c6a:
    II(0x10093c6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10093c6d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x10093c71, 0x2)   jled(0x10093c8c, 0x19);               /* jle 0x10093c8c */
    II(0x10093c73, 0x5)   mov(ecx, 0xb00);                      /* mov ecx, 0xb00 */
    II(0x10093c78, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x10093c7b, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x10093c80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10093c83, 0x5)   calld(0x10096e02, 0x317a);            /* call 0x10096e02 */
    II(0x10093c88, 0x2)   test(al, al);                         /* test al, al */
    II(0x10093c8a, 0x2)   jnzd(0x10093c8e, 0x2);                /* jnz 0x10093c8e */
l_0x10093c8c:
    II(0x10093c8c, 0x2)   jmpd(0x10093ca8, 0x1a);               /* jmp 0x10093ca8 */
l_0x10093c8e:
    II(0x10093c8e, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10093c92, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093c94, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093c97, 0x5)   calld(0x1009ba6c, 0x7dd0);            /* call 0x1009ba6c */
    II(0x10093c9c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093c9e, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10093ca1, 0x5)   calld(0x10075f6c, -0x1dd3a);          /* call 0x10075f6c */
    II(0x10093ca6, 0x2)   jmpd(0x10093cd6, 0x2e);               /* jmp 0x10093cd6 */
l_0x10093ca8:
    II(0x10093ca8, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10093cac, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093cae, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10093cb1, 0x5)   calld(0x1009ba6c, 0x7db6);            /* call 0x1009ba6c */
    II(0x10093cb6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093cb8, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10093cbb, 0x5)   calld(0x10075f6c, -0x1dd54);          /* call 0x10075f6c */
    II(0x10093cc0, 0x2)   jmpd(0x10093cd6, 0x14);               /* jmp 0x10093cd6 */
//  II(0x10093cc2, 0x14)  /* Недостижимый код. */
l_0x10093cd6:
    II(0x10093cd6, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10093cd9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10093cdb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10093cdc, 0x1)   popd(edi);                            /* pop edi */
    II(0x10093cdd, 0x1)   popd(esi);                            /* pop esi */
    II(0x10093cde, 0x1)   popd(edx);                            /* pop edx */
    II(0x10093cdf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10093ce0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10093ce1, 0x1)   retd();                               /* ret */
FUNC_END

