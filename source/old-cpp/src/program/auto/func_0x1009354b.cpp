FUNC_BEGIN(0x1009354b, 0xfc613ecf478df611, 0x20, ({0x68, 0xa0, 0, 0, 0, 0xe8, 0xfd, 0x27, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x74, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xcc, 0xe8, 0x43, 0xeb, 0xfd, 0xff, 0x8d, 0x45, 0xc0, 0xe8, 0x3b, 0xeb, 0xfd, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xd8, 0xe8, 0x65, 0x2f, 0xfe, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf8, 0xfe, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0x76, 0x90, 0, 0, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x7c, 0x2d, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0x76, 0x2e, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd8, 0xe8, 0x28, 0x36, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x97, 0x77, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x3, 0x1, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0xb6, 0x2d, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x75, 0x30, 0x8d, 0x45, 0xd8, 0xe8, 0xa7, 0x2d, 0xfe, 0xff, 0x8a, 0x40, 0x4a, 0x30, 0xe4, 0x1, 0x45, 0xf4, 0x8d, 0x45, 0xd8, 0xe8, 0x97, 0x2d, 0xfe, 0xff, 0x8a, 0x40, 0x4c, 0x30, 0xe4, 0x1, 0x45, 0xf0, 0x8d, 0x45, 0xd8, 0xe8, 0x87, 0x2d, 0xfe, 0xff, 0x8a, 0x40, 0x4b, 0x30, 0xe4, 0x1, 0x45, 0xec, 0x8d, 0x45, 0xd8, 0xe8, 0x77, 0x2d, 0xfe, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd5, 0x81, 0x1c, 0x10, 0x88, 0x45, 0xbc, 0xe9, 0x7a, 0, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x58, 0x2d, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x66, 0x1, 0x45, 0xce, 0x8d, 0x45, 0xd8, 0xe8, 0x48, 0x2d, 0xfe, 0xff, 0xe8, 0xdf, 0x2b, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x19, 0x66, 0x1, 0x45, 0xc2, 0xe9, 0x76, 0, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x2e, 0x2d, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x66, 0x1, 0x45, 0xd0, 0x8d, 0x45, 0xd8, 0xe8, 0x1e, 0x2d, 0xfe, 0xff, 0xe8, 0xb5, 0x2b, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x19, 0x66, 0x1, 0x45, 0xc4, 0xeb, 0x4f, 0x8d, 0x45, 0xd8, 0xe8, 0x7, 0x2d, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x66, 0x1, 0x45, 0xcc, 0x8d, 0x45, 0xd8, 0xe8, 0xf7, 0x2c, 0xfe, 0xff, 0xe8, 0x8e, 0x2b, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x19, 0x66, 0x1, 0x45, 0xc0, 0xeb, 0x28, 0xeb, 0x26, 0x8a, 0x45, 0xbc, 0x88, 0x45, 0xb8, 0x80, 0x7d, 0xb8, 0x2, 0x72, 0xe, 0x80, 0x7d, 0xb8, 0x2, 0x76, 0x9e, 0x80, 0x7d, 0xb8, 0x3, 0x74, 0xbf, 0xeb, 0xe4, 0x80, 0x7d, 0xb8, 0x1, 0xf, 0x84, 0x62, 0xff, 0xff, 0xff, 0xeb, 0xd8, 0xe9, 0xe3, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0xe8, 0xc0, 0x8f, 0, 0, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x4c, 0x8e, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0xda, 0x34, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x49, 0x76, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x38, 0x1, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xc0, 0x8d, 0, 0, 0xe8, 0x87, 0x8d, 0, 0, 0x66, 0x3d, 0x28, 0, 0x75, 0x1b, 0x8d, 0x45, 0xdc, 0xe8, 0xad, 0x8d, 0, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xb4, 0xff, 0x52, 0x70, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x56, 0x8d, 0x45, 0xdc, 0xe8, 0x90, 0x8d, 0, 0, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb0, 0x8b, 0x48, 0x2, 0x8d, 0x55, 0xa0, 0x8b, 0x45, 0xb0, 0xff, 0x51, 0x1c, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x50, 0x31, 0xc0, 0x50, 0x8d, 0x45, 0x9c, 0x50, 0x8d, 0x45, 0x98, 0x50, 0x8d, 0x4d, 0x94, 0xbb, 0x1, 0, 0, 0, 0xf, 0xbf, 0x55, 0xa4, 0xf, 0xbf, 0x45, 0xa0, 0xe8, 0x67, 0xf5, 0xa, 0, 0x8b, 0x45, 0x94, 0x1, 0x45, 0xf4, 0x8b, 0x45, 0x98, 0x1, 0x45, 0xec, 0x8b, 0x45, 0x9c, 0x1, 0x45, 0xf0, 0x8d, 0x45, 0xdc, 0xe8, 0x3a, 0x8d, 0, 0, 0xe8, 0x1, 0x8d, 0, 0, 0x98, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd5, 0x81, 0x1c, 0x10, 0x88, 0x45, 0x90, 0xeb, 0x6b, 0x8d, 0x45, 0xdc, 0xe8, 0x1e, 0x8d, 0, 0, 0xe8, 0xe5, 0x8c, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xe4, 0xe8, 0x1a, 0x79, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x19, 0x66, 0x1, 0x45, 0xc2, 0xe9, 0x6c, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xf9, 0x8c, 0, 0, 0xe8, 0xc0, 0x8c, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xe4, 0xe8, 0xf5, 0x78, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x19, 0x66, 0x1, 0x45, 0xc4, 0xeb, 0x4a, 0x8d, 0x45, 0xdc, 0xe8, 0xd7, 0x8c, 0, 0, 0xe8, 0x9e, 0x8c, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xe4, 0xe8, 0xd3, 0x78, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x19, 0x66, 0x1, 0x45, 0xc0, 0xeb, 0x28, 0xeb, 0x26, 0x8a, 0x45, 0x90, 0x88, 0x45, 0x8c, 0x80, 0x7d, 0x8c, 0x2, 0x72, 0xe, 0x80, 0x7d, 0x8c, 0x2, 0x76, 0xa8, 0x80, 0x7d, 0x8c, 0x3, 0x74, 0xc4, 0xeb, 0xe4, 0x80, 0x7d, 0x8c, 0x1, 0xf, 0x84, 0x71, 0xff, 0xff, 0xff, 0xeb, 0xd8, 0xe9, 0xae, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0x85, 0xc0, 0x7e, 0x1c, 0xf, 0xbf, 0x55, 0xc2, 0x8d, 0x14, 0x52, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0xf, 0xbf, 0x55, 0xce, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x45, 0xc2, 0x3d, 0xf4, 0x1, 0, 0, 0x7c, 0x2, 0xeb, 0x15, 0xb9, 0, 0xa, 0, 0, 0x8b, 0x5d, 0xfc, 0xba, 0x6, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x52, 0x35, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x7e, 0x1c, 0xf, 0xbf, 0x55, 0xc4, 0x8d, 0x14, 0x52, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0xf, 0xbf, 0x55, 0xd0, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x45, 0xc4, 0x3d, 0xf4, 0x1, 0, 0, 0x7c, 0x2, 0xeb, 0x15, 0xb9, 0, 0xa, 0, 0, 0x8b, 0x5d, 0xfc, 0xba, 0x7, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa, 0x35, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x7e, 0x1c, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x14, 0x52, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0xf, 0xbf, 0x55, 0xcc, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x45, 0xc0, 0x3d, 0xf4, 0x1, 0, 0, 0x7c, 0x2, 0xeb, 0xe, 0xb8, 0x8, 0, 0, 0, 0xe8, 0x8d, 0xa5, 0x3, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x15, 0xb9, 0, 0xa, 0, 0, 0x8b, 0x5d, 0xfc, 0xba, 0x8, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xb2, 0x34, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x12, 0x81, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x8, 0x26, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1009354b, 0x5)   pushd(0xa0);                          /* push dword 0xa0 */
    II(0x10093550, 0x5)   calld(sys_check_available_stack_size, 0xd27fd); /* call 0x10165d52 */
    II(0x10093555, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10093556, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10093557, 0x1)   pushd(edx);                           /* push edx */
    II(0x10093558, 0x1)   pushd(esi);                           /* push esi */
    II(0x10093559, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009355a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009355b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009355d, 0x6)   sub(esp, 0x74);                       /* sub esp, 0x74 */
    II(0x10093563, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10093566, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10093569, 0x5)   calld(0x100720b1, -0x214bd);          /* call 0x100720b1 */
    II(0x1009356e, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10093571, 0x5)   calld(0x100720b1, -0x214c5);          /* call 0x100720b1 */
    II(0x10093576, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1009357d, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10093584, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1009358b, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1009358f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10093592, 0x5)   calld(0x100764fc, -0x1d09b);          /* call 0x100764fc */
    II(0x10093597, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1009359a, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1009359e, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100935a2, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100935a5, 0x5)   calld(0x1009c620, 0x9076);            /* call 0x1009c620 */
    II(0x100935aa, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100935ad, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100935b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100935b4, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100935b7, 0x5)   calld(0x10076338, -0x1d284);          /* call 0x10076338 */
    II(0x100935bc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100935be, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100935c1, 0x5)   calld(0x1007643c, -0x1d18a);          /* call 0x1007643c */
    II(0x100935c6, 0x2)   jmpd(0x100935d0, 0x8);                /* jmp 0x100935d0 */
l_0x100935c8:
    II(0x100935c8, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100935cb, 0x5)   calld(0x10076bf8, -0x1c9d8);          /* call 0x10076bf8 */
l_0x100935d0:
    II(0x100935d0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100935d2, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100935d5, 0x5)   calld(0x1013ad71, 0xa7797);           /* call 0x1013ad71 */
    II(0x100935da, 0x2)   test(al, al);                         /* test al, al */
    II(0x100935dc, 0x6)   jzd(0x100936e5, 0x103);               /* jz dword 0x100936e5 */
    II(0x100935e2, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100935e5, 0x5)   calld(0x100763a0, -0x1d24a);          /* call 0x100763a0 */
    II(0x100935ea, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x100935ef, 0x2)   jnzd(0x10093621, 0x30);               /* jnz 0x10093621 */
    II(0x100935f1, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100935f4, 0x5)   calld(0x100763a0, -0x1d259);          /* call 0x100763a0 */
    II(0x100935f9, 0x3)   mov(al, memb_a32(ds, eax + 0x4a));    /* mov al, [eax+0x4a] */
    II(0x100935fc, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100935fe, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
    II(0x10093601, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10093604, 0x5)   calld(0x100763a0, -0x1d269);          /* call 0x100763a0 */
    II(0x10093609, 0x3)   mov(al, memb_a32(ds, eax + 0x4c));    /* mov al, [eax+0x4c] */
    II(0x1009360c, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1009360e, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x10093611, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10093614, 0x5)   calld(0x100763a0, -0x1d279);          /* call 0x100763a0 */
    II(0x10093619, 0x3)   mov(al, memb_a32(ds, eax + 0x4b));    /* mov al, [eax+0x4b] */
    II(0x1009361c, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1009361e, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
l_0x10093621:
    II(0x10093621, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10093624, 0x5)   calld(0x100763a0, -0x1d289);          /* call 0x100763a0 */
    II(0x10093629, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1009362c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009362f, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10093632, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d5)); /* mov al, [eax+0x101c81d5] */
    II(0x10093638, 0x3)   mov(memb_a32(ss, ebp - 0x44), al);    /* mov [ebp-0x44], al */
    II(0x1009363b, 0x5)   jmpd(0x100936ba, 0x7a);               /* jmp 0x100936ba */
l_0x10093640:
    II(0x10093640, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10093643, 0x5)   calld(0x100763a0, -0x1d2a8);          /* call 0x100763a0 */
    II(0x10093648, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x1009364c, 0x4)   add(memw_a32(ss, ebp - 0x32), ax);    /* add [ebp-0x32], ax */
    II(0x10093650, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10093653, 0x5)   calld(0x100763a0, -0x1d2b8);          /* call 0x100763a0 */
    II(0x10093658, 0x5)   calld(0x1007623c, -0x1d421);          /* call 0x1007623c */
    II(0x1009365d, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x10093661, 0x4)   add(memw_a32(ss, ebp - 0x3e), ax);    /* add [ebp-0x3e], ax */
    II(0x10093665, 0x5)   jmpd(0x100936e0, 0x76);               /* jmp 0x100936e0 */
l_0x1009366a:
    II(0x1009366a, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1009366d, 0x5)   calld(0x100763a0, -0x1d2d2);          /* call 0x100763a0 */
    II(0x10093672, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x10093676, 0x4)   add(memw_a32(ss, ebp - 0x30), ax);    /* add [ebp-0x30], ax */
    II(0x1009367a, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1009367d, 0x5)   calld(0x100763a0, -0x1d2e2);          /* call 0x100763a0 */
    II(0x10093682, 0x5)   calld(0x1007623c, -0x1d44b);          /* call 0x1007623c */
    II(0x10093687, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x1009368b, 0x4)   add(memw_a32(ss, ebp - 0x3c), ax);    /* add [ebp-0x3c], ax */
    II(0x1009368f, 0x2)   jmpd(0x100936e0, 0x4f);               /* jmp 0x100936e0 */
l_0x10093691:
    II(0x10093691, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10093694, 0x5)   calld(0x100763a0, -0x1d2f9);          /* call 0x100763a0 */
    II(0x10093699, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x1009369d, 0x4)   add(memw_a32(ss, ebp - 0x34), ax);    /* add [ebp-0x34], ax */
    II(0x100936a1, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100936a4, 0x5)   calld(0x100763a0, -0x1d309);          /* call 0x100763a0 */
    II(0x100936a9, 0x5)   calld(0x1007623c, -0x1d472);          /* call 0x1007623c */
    II(0x100936ae, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x100936b2, 0x4)   add(memw_a32(ss, ebp - 0x40), ax);    /* add [ebp-0x40], ax */
    II(0x100936b6, 0x2)   jmpd(0x100936e0, 0x28);               /* jmp 0x100936e0 */
l_0x100936b8:
    II(0x100936b8, 0x2)   jmpd(0x100936e0, 0x26);               /* jmp 0x100936e0 */
l_0x100936ba:
    II(0x100936ba, 0x3)   mov(al, memb_a32(ss, ebp - 0x44));    /* mov al, [ebp-0x44] */
    II(0x100936bd, 0x3)   mov(memb_a32(ss, ebp - 0x48), al);    /* mov [ebp-0x48], al */
    II(0x100936c0, 0x4)   cmp(memb_a32(ss, ebp - 0x48), 0x2);   /* cmp byte [ebp-0x48], 0x2 */
    II(0x100936c4, 0x2)   jbd(0x100936d4, 0xe);                 /* jb 0x100936d4 */
    II(0x100936c6, 0x4)   cmp(memb_a32(ss, ebp - 0x48), 0x2);   /* cmp byte [ebp-0x48], 0x2 */
    II(0x100936ca, 0x2)   jbed(0x1009366a, -0x62);              /* jbe 0x1009366a */
    II(0x100936cc, 0x4)   cmp(memb_a32(ss, ebp - 0x48), 0x3);   /* cmp byte [ebp-0x48], 0x3 */
    II(0x100936d0, 0x2)   jzd(0x10093691, -0x41);               /* jz 0x10093691 */
    II(0x100936d2, 0x2)   jmpd(0x100936b8, -0x1c);              /* jmp 0x100936b8 */
l_0x100936d4:
    II(0x100936d4, 0x4)   cmp(memb_a32(ss, ebp - 0x48), 0x1);   /* cmp byte [ebp-0x48], 0x1 */
    II(0x100936d8, 0x6)   jzd(0x10093640, -0x9e);               /* jz dword 0x10093640 */
    II(0x100936de, 0x2)   jmpd(0x100936b8, -0x28);              /* jmp 0x100936b8 */
l_0x100936e0:
    II(0x100936e0, 0x5)   jmpd(0x100935c8, -0x11d);             /* jmp 0x100935c8 */
l_0x100936e5:
    II(0x100936e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100936e8, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100936eb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100936ee, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100936f4, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x100936fa, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100936fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10093700, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x10093703, 0x5)   calld(0x1009c6c8, 0x8fc0);            /* call 0x1009c6c8 */
    II(0x10093708, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x1009370b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009370d, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009370f, 0x5)   calld(0x1009c560, 0x8e4c);            /* call 0x1009c560 */
    II(0x10093714, 0x2)   jmpd(0x1009371e, 0x8);                /* jmp 0x1009371e */
l_0x10093716:
    II(0x10093716, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10093719, 0x5)   calld(0x10076bf8, -0x1cb26);          /* call 0x10076bf8 */
l_0x1009371e:
    II(0x1009371e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093720, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10093723, 0x5)   calld(0x1013ad71, 0xa7649);           /* call 0x1013ad71 */
    II(0x10093728, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009372a, 0x6)   jzd(0x10093868, 0x138);               /* jz dword 0x10093868 */
    II(0x10093730, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10093733, 0x5)   calld(0x1009c4f8, 0x8dc0);            /* call 0x1009c4f8 */
    II(0x10093738, 0x5)   calld(0x1009c4c4, 0x8d87);            /* call 0x1009c4c4 */
    II(0x1009373d, 0x4)   cmp(ax, 0x28);                        /* cmp ax, 0x28 */
    II(0x10093741, 0x2)   jnzd(0x1009375e, 0x1b);               /* jnz 0x1009375e */
    II(0x10093743, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10093746, 0x5)   calld(0x1009c4f8, 0x8dad);            /* call 0x1009c4f8 */
    II(0x1009374b, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x1009374e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10093751, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10093754, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10093757, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x1009375a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009375c, 0x2)   jnzd(0x10093760, 0x2);                /* jnz 0x10093760 */
l_0x1009375e:
    II(0x1009375e, 0x2)   jmpd(0x100937b6, 0x56);               /* jmp 0x100937b6 */
l_0x10093760:
    II(0x10093760, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10093763, 0x5)   calld(0x1009c4f8, 0x8d90);            /* call 0x1009c4f8 */
    II(0x10093768, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
//    II(0x1009376b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1009376e, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x10093771, 0x3)   lea(edx, ebp - 0x60);                 /* lea edx, [ebp-0x60] */
    II(0x10093774, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x10093777, 0x3)   calld_abs(memd_a32(ds, ecx + 0x1c));  /* call dword near [ecx+0x1c] */
    II(0x1009377a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009377d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10093780, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10093783, 0x1)   pushd(eax);                           /* push eax */
    II(0x10093784, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10093786, 0x1)   pushd(eax);                           /* push eax */
    II(0x10093787, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x1009378a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009378b, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x1009378e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009378f, 0x3)   lea(ecx, ebp - 0x6c);                 /* lea ecx, [ebp-0x6c] */
    II(0x10093792, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10093797, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1009379b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x60)); /* movsx eax, word [ebp-0x60] */
    II(0x1009379f, 0x5)   calld(0x10142d0b, 0xaf567);           /* call 0x10142d0b */
    II(0x100937a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100937a7, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
    II(0x100937aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100937ad, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
    II(0x100937b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x100937b3, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x100937b6:
    II(0x100937b6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100937b9, 0x5)   calld(0x1009c4f8, 0x8d3a);            /* call 0x1009c4f8 */
    II(0x100937be, 0x5)   calld(0x1009c4c4, 0x8d01);            /* call 0x1009c4c4 */
    II(0x100937c3, 0x1)   cwde();                               /* cwde */
    II(0x100937c4, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100937c7, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d5)); /* mov al, [eax+0x101c81d5] */
    II(0x100937cd, 0x3)   mov(memb_a32(ss, ebp - 0x70), al);    /* mov [ebp-0x70], al */
    II(0x100937d0, 0x2)   jmpd(0x1009383d, 0x6b);               /* jmp 0x1009383d */
l_0x100937d2:
    II(0x100937d2, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100937d5, 0x5)   calld(0x1009c4f8, 0x8d1e);            /* call 0x1009c4f8 */
    II(0x100937da, 0x5)   calld(0x1009c4c4, 0x8ce5);            /* call 0x1009c4c4 */
    II(0x100937df, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100937e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100937e5, 0x5)   calld(0x1008b104, -0x86e6);           /* call 0x1008b104 */
    II(0x100937ea, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x100937ee, 0x4)   add(memw_a32(ss, ebp - 0x3e), ax);    /* add [ebp-0x3e], ax */
    II(0x100937f2, 0x5)   jmpd(0x10093863, 0x6c);               /* jmp 0x10093863 */
l_0x100937f7:
    II(0x100937f7, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100937fa, 0x5)   calld(0x1009c4f8, 0x8cf9);            /* call 0x1009c4f8 */
    II(0x100937ff, 0x5)   calld(0x1009c4c4, 0x8cc0);            /* call 0x1009c4c4 */
    II(0x10093804, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10093807, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1009380a, 0x5)   calld(0x1008b104, -0x870b);           /* call 0x1008b104 */
    II(0x1009380f, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x10093813, 0x4)   add(memw_a32(ss, ebp - 0x3c), ax);    /* add [ebp-0x3c], ax */
    II(0x10093817, 0x2)   jmpd(0x10093863, 0x4a);               /* jmp 0x10093863 */
l_0x10093819:
    II(0x10093819, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1009381c, 0x5)   calld(0x1009c4f8, 0x8cd7);            /* call 0x1009c4f8 */
    II(0x10093821, 0x5)   calld(0x1009c4c4, 0x8c9e);            /* call 0x1009c4c4 */
    II(0x10093826, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10093829, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1009382c, 0x5)   calld(0x1008b104, -0x872d);           /* call 0x1008b104 */
    II(0x10093831, 0x4)   mov(ax, memw_a32(ds, eax + 0x19));    /* mov ax, [eax+0x19] */
    II(0x10093835, 0x4)   add(memw_a32(ss, ebp - 0x40), ax);    /* add [ebp-0x40], ax */
    II(0x10093839, 0x2)   jmpd(0x10093863, 0x28);               /* jmp 0x10093863 */
l_0x1009383b:
    II(0x1009383b, 0x2)   jmpd(0x10093863, 0x26);               /* jmp 0x10093863 */
l_0x1009383d:
    II(0x1009383d, 0x3)   mov(al, memb_a32(ss, ebp - 0x70));    /* mov al, [ebp-0x70] */
    II(0x10093840, 0x3)   mov(memb_a32(ss, ebp - 0x74), al);    /* mov [ebp-0x74], al */
    II(0x10093843, 0x4)   cmp(memb_a32(ss, ebp - 0x74), 0x2);   /* cmp byte [ebp-0x74], 0x2 */
    II(0x10093847, 0x2)   jbd(0x10093857, 0xe);                 /* jb 0x10093857 */
    II(0x10093849, 0x4)   cmp(memb_a32(ss, ebp - 0x74), 0x2);   /* cmp byte [ebp-0x74], 0x2 */
    II(0x1009384d, 0x2)   jbed(0x100937f7, -0x58);              /* jbe 0x100937f7 */
    II(0x1009384f, 0x4)   cmp(memb_a32(ss, ebp - 0x74), 0x3);   /* cmp byte [ebp-0x74], 0x3 */
    II(0x10093853, 0x2)   jzd(0x10093819, -0x3c);               /* jz 0x10093819 */
    II(0x10093855, 0x2)   jmpd(0x1009383b, -0x1c);              /* jmp 0x1009383b */
l_0x10093857:
    II(0x10093857, 0x4)   cmp(memb_a32(ss, ebp - 0x74), 0x1);   /* cmp byte [ebp-0x74], 0x1 */
    II(0x1009385b, 0x6)   jzd(0x100937d2, -0x8f);               /* jz dword 0x100937d2 */
    II(0x10093861, 0x2)   jmpd(0x1009383b, -0x28);              /* jmp 0x1009383b */
l_0x10093863:
    II(0x10093863, 0x5)   jmpd(0x10093716, -0x152);             /* jmp 0x10093716 */
l_0x10093868:
    II(0x10093868, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1009386c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009386e, 0x2)   jled(0x1009388c, 0x1c);               /* jle 0x1009388c */
    II(0x10093870, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3e)); /* movsx edx, word [ebp-0x3e] */
    II(0x10093874, 0x3)   lea(edx, edx + edx * 0x2);            /* lea edx, [edx+edx*2] */
    II(0x10093877, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10093879, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1009387c, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1009387f, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x10093881, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x10093884, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x32)); /* movsx edx, word [ebp-0x32] */
    II(0x10093888, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1009388a, 0x2)   jged(0x1009388e, 0x2);                /* jge 0x1009388e */
l_0x1009388c:
    II(0x1009388c, 0x2)   jmpd(0x10093899, 0xb);                /* jmp 0x10093899 */
l_0x1009388e:
    II(0x1009388e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3e)); /* movsx eax, word [ebp-0x3e] */
    II(0x10093892, 0x5)   cmp(eax, 0x1f4);                      /* cmp eax, 0x1f4 */
    II(0x10093897, 0x2)   jld(0x1009389b, 0x2);                 /* jl 0x1009389b */
l_0x10093899:
    II(0x10093899, 0x2)   jmpd(0x100938b0, 0x15);               /* jmp 0x100938b0 */
l_0x1009389b:
    II(0x1009389b, 0x5)   mov(ecx, 0xa00);                      /* mov ecx, 0xa00 */
    II(0x100938a0, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100938a3, 0x5)   mov(edx, 0x6);                        /* mov edx, 0x6 */
    II(0x100938a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100938ab, 0x5)   calld(0x10096e02, 0x3552);            /* call 0x10096e02 */
l_0x100938b0:
    II(0x100938b0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100938b4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100938b6, 0x2)   jled(0x100938d4, 0x1c);               /* jle 0x100938d4 */
    II(0x100938b8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100938bc, 0x3)   lea(edx, edx + edx * 0x2);            /* lea edx, [edx+edx*2] */
    II(0x100938bf, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100938c1, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100938c4, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100938c7, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x100938c9, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x100938cc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100938d0, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100938d2, 0x2)   jged(0x100938d6, 0x2);                /* jge 0x100938d6 */
l_0x100938d4:
    II(0x100938d4, 0x2)   jmpd(0x100938e1, 0xb);                /* jmp 0x100938e1 */
l_0x100938d6:
    II(0x100938d6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x100938da, 0x5)   cmp(eax, 0x1f4);                      /* cmp eax, 0x1f4 */
    II(0x100938df, 0x2)   jld(0x100938e3, 0x2);                 /* jl 0x100938e3 */
l_0x100938e1:
    II(0x100938e1, 0x2)   jmpd(0x100938f8, 0x15);               /* jmp 0x100938f8 */
l_0x100938e3:
    II(0x100938e3, 0x5)   mov(ecx, 0xa00);                      /* mov ecx, 0xa00 */
    II(0x100938e8, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100938eb, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x100938f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100938f3, 0x5)   calld(0x10096e02, 0x350a);            /* call 0x10096e02 */
l_0x100938f8:
    II(0x100938f8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100938fc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100938fe, 0x2)   jled(0x1009391c, 0x1c);               /* jle 0x1009391c */
    II(0x10093900, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x10093904, 0x3)   lea(edx, edx + edx * 0x2);            /* lea edx, [edx+edx*2] */
    II(0x10093907, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10093909, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1009390c, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1009390f, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x10093911, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x10093914, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x10093918, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1009391a, 0x2)   jged(0x1009391e, 0x2);                /* jge 0x1009391e */
l_0x1009391c:
    II(0x1009391c, 0x2)   jmpd(0x10093929, 0xb);                /* jmp 0x10093929 */
l_0x1009391e:
    II(0x1009391e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x40)); /* movsx eax, word [ebp-0x40] */
    II(0x10093922, 0x5)   cmp(eax, 0x1f4);                      /* cmp eax, 0x1f4 */
    II(0x10093927, 0x2)   jld(0x1009392b, 0x2);                 /* jl 0x1009392b */
l_0x10093929:
    II(0x10093929, 0x2)   jmpd(0x10093939, 0xe);                /* jmp 0x10093939 */
l_0x1009392b:
    II(0x1009392b, 0x5)   mov(eax, 0x8);                        /* mov eax, 0x8 */
    II(0x10093930, 0x5)   calld(0x100cdec2, 0x3a58d);           /* call 0x100cdec2 */
    II(0x10093935, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10093937, 0x2)   jnzd(0x1009393b, 0x2);                /* jnz 0x1009393b */
l_0x10093939:
    II(0x10093939, 0x2)   jmpd(0x10093950, 0x15);               /* jmp 0x10093950 */
l_0x1009393b:
    II(0x1009393b, 0x5)   mov(ecx, 0xa00);                      /* mov ecx, 0xa00 */
    II(0x10093940, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x10093943, 0x5)   mov(edx, 0x8);                        /* mov edx, 0x8 */
    II(0x10093948, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009394b, 0x5)   calld(0x10096e02, 0x34b2);            /* call 0x10096e02 */
l_0x10093950:
    II(0x10093950, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10093952, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10093955, 0x5)   calld(0x1009ba6c, 0x8112);            /* call 0x1009ba6c */
    II(0x1009395a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009395c, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1009395f, 0x5)   calld(0x10075f6c, -0x1d9f8);          /* call 0x10075f6c */
    II(0x10093964, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10093966, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10093967, 0x1)   popd(edi);                            /* pop edi */
    II(0x10093968, 0x1)   popd(esi);                            /* pop esi */
    II(0x10093969, 0x1)   popd(edx);                            /* pop edx */
    II(0x1009396a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009396b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009396c, 0x1)   retd();                               /* ret */
FUNC_END

