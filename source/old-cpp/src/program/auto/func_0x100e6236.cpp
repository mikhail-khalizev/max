FUNC_BEGIN(0x100e6236, 0x49e0a814552f50c2, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x12, 0xfb, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x83, 0x3d, 0x30, 0x36, 0x1c, 0x10, 0, 0x74, 0x14, 0xa1, 0x30, 0x36, 0x1c, 0x10, 0xe8, 0x60, 0x4e, 0x8, 0, 0xc7, 0x5, 0x30, 0x36, 0x1c, 0x10, 0, 0, 0, 0, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x9a, 0x4a, 0x5, 0, 0x84, 0xc0, 0xf, 0x85, 0xc3, 0, 0, 0, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x77, 0x3, 0xf9, 0xff, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0xf, 0x85, 0x9f, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x10, 0x74, 0x1f, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x4, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x1f, 0x74, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x13, 0x2, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0x73, 0x66, 0xa1, 0x42, 0x7f, 0x1b, 0x10, 0x66, 0xff, 0xd, 0x42, 0x7f, 0x1b, 0x10, 0x98, 0x85, 0xc0, 0x75, 0x26, 0x66, 0xff, 0x5, 0x10, 0x36, 0x1c, 0x10, 0xa1, 0xe, 0x36, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x5, 0x72, 0x9, 0x66, 0xc7, 0x5, 0x10, 0x36, 0x1c, 0x10, 0, 0, 0x66, 0xc7, 0x5, 0x42, 0x7f, 0x1b, 0x10, 0x2, 0, 0xa1, 0xe, 0x36, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x8b, 0x80, 0x36, 0x7f, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xb9, 0xdc, 0x4, 0, 0x89, 0x45, 0xf8, 0x8b, 0x15, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x8, 0x2c, 0, 0, 0xa3, 0x30, 0x36, 0x1c, 0x10, 0xba, 0xe7, 0x5f, 0xe, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf8, 0xfc, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100e6236, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100e623b, 0x5)   calld(sys_check_available_stack_size, 0x7fb12); /* call 0x10165d52 */
    II(0x100e6240, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e6241, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e6242, 0x1)   pushd(edx);                           /* push edx */
    II(0x100e6243, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e6244, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e6245, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e6246, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e6248, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100e624e, 0x7)   cmp(memd_a32(ds, 0x101c3630), 0);     /* cmp dword [0x101c3630], 0x0 */
    II(0x100e6255, 0x2)   jzd(0x100e626b, 0x14);                /* jz 0x100e626b */
    II(0x100e6257, 0x5)   mov(eax, memd_a32(ds, 0x101c3630));   /* mov eax, [0x101c3630] */
    II(0x100e625c, 0x5)   calld(sys_free, 0x84e60);             /* call 0x1016b0c1 */
    II(0x100e6261, 0xa)   mov(memd_a32(ds, 0x101c3630), 0);     /* mov dword [0x101c3630], 0x0 */
l_0x100e626b:
    II(0x100e626b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e626d, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e6272, 0x5)   calld(0x1013ad11, 0x54a9a);           /* call 0x1013ad11 */
    II(0x100e6277, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e6279, 0x6)   jnzd(0x100e6342, 0xc3);               /* jnz dword 0x100e6342 */
    II(0x100e627f, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e6284, 0x5)   calld(0x10076600, -0x6fc89);          /* call 0x10076600 */
    II(0x100e6289, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100e628c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e628f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e6291, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100e6294, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e6296, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100e629b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100e629d, 0x6)   jnzd(0x100e6342, 0x9f);               /* jnz dword 0x100e6342 */
    II(0x100e62a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e62a6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100e62aa, 0x2)   jzd(0x100e62cb, 0x1f);                /* jz 0x100e62cb */
    II(0x100e62ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e62af, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x100e62b3, 0x2)   jnzd(0x100e62be, 0x9);                /* jnz 0x100e62be */
    II(0x100e62b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e62b8, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1f);  /* cmp byte [eax+0x3e], 0x1f */
    II(0x100e62bc, 0x2)   jzd(0x100e62c0, 0x2);                 /* jz 0x100e62c0 */
l_0x100e62be:
    II(0x100e62be, 0x2)   jmpd(0x100e62c9, 0x9);                /* jmp 0x100e62c9 */
l_0x100e62c0:
    II(0x100e62c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e62c3, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x100e62c7, 0x2)   jzd(0x100e62cb, 0x2);                 /* jz 0x100e62cb */
l_0x100e62c9:
    II(0x100e62c9, 0x2)   jmpd(0x100e62cd, 0x2);                /* jmp 0x100e62cd */
l_0x100e62cb:
    II(0x100e62cb, 0x2)   jmpd(0x100e62cf, 0x2);                /* jmp 0x100e62cf */
l_0x100e62cd:
    II(0x100e62cd, 0x2)   jmpd(0x100e6342, 0x73);               /* jmp 0x100e6342 */
l_0x100e62cf:
    II(0x100e62cf, 0x6)   mov(ax, memw_a32(ds, 0x101b7f42));    /* mov ax, [0x101b7f42] */
    II(0x100e62d5, 0x7)   dec(memw_a32(ds, 0x101b7f42));        /* dec word [0x101b7f42] */
    II(0x100e62dc, 0x1)   cwde();                               /* cwde */
    II(0x100e62dd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e62df, 0x2)   jnzd(0x100e6307, 0x26);               /* jnz 0x100e6307 */
    II(0x100e62e1, 0x7)   inc(memw_a32(ds, 0x101c3610));        /* inc word [0x101c3610] */
    II(0x100e62e8, 0x5)   mov(eax, memd_a32(ds, 0x101c360e));   /* mov eax, [0x101c360e] */
    II(0x100e62ed, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e62f0, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x100e62f3, 0x2)   jbd(0x100e62fe, 0x9);                 /* jb 0x100e62fe */
    II(0x100e62f5, 0x9)   mov(memw_a32(ds, 0x101c3610), 0);     /* mov word [0x101c3610], 0x0 */
l_0x100e62fe:
    II(0x100e62fe, 0x9)   mov(memw_a32(ds, 0x101b7f42), 0x2);   /* mov word [0x101b7f42], 0x2 */
l_0x100e6307:
    II(0x100e6307, 0x5)   mov(eax, memd_a32(ds, 0x101c360e));   /* mov eax, [0x101c360e] */
    II(0x100e630c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e630f, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100e6311, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b7f36)); /* mov eax, [eax+0x101b7f36] */
    II(0x100e6317, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e631a, 0x5)   calld(my_get_res_data_by_id, 0x4dcb9); /* call 0x10133fd8 */
    II(0x100e631f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e6322, 0x6)   mov(edx, memd_a32(ds, 0x101c38c4));   /* mov edx, [0x101c38c4] */
//    II(0x100e6328, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e632b, 0x5)   calld(0x100e8f38, 0x2c08);            /* call 0x100e8f38 */
    II(0x100e6330, 0x5)   mov(memd_a32(ds, 0x101c3630), eax);   /* mov [0x101c3630], eax */
    II(0x100e6335, 0x5)   mov(edx, 0x100e5fe7);                 /* mov edx, 0x100e5fe7 */
    II(0x100e633a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e633d, 0x5)   calld(0x100e603a, -0x308);            /* call 0x100e603a */
l_0x100e6342:
    II(0x100e6342, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e6344, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e6345, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e6346, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e6347, 0x1)   popd(edx);                            /* pop edx */
    II(0x100e6348, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e6349, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e634a, 0x1)   retd();                               /* ret */
FUNC_END

