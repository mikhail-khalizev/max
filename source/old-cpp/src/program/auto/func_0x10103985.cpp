FUNC_BEGIN(0x10103985, 0xea0e7b79d063c21d, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xc3, 0x23, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x26, 0xc, 0, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x37, 0x87, 0x3, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x27, 0x87, 0x3, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x2, 0x7d, 0x69, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xd0, 0xa, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0xe8, 0x8f, 0x31, 0xf7, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0xee, 0x86, 0x3, 0, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xd0, 0xa, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0xe8, 0x84, 0xc, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xea, 0xa, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xc4, 0x31, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x33, 0x73, 0x3, 0, 0x84, 0xc0, 0x74, 0x12, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x63, 0xa, 0, 0, 0xe8, 0xdb, 0xf6, 0xff, 0xff, 0xeb, 0xd8, 0xeb, 0x86, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x10, 0xa, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10103985, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1010398a, 0x5)   calld(sys_check_available_stack_size, 0x623c3); /* call 0x10165d52 */
    II(0x1010398f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10103990, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10103991, 0x1)   pushd(esi);                           /* push esi */
    II(0x10103992, 0x1)   pushd(edi);                           /* push edi */
    II(0x10103993, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10103994, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10103996, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x1010399c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010399f, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101039a2, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x101039a6, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101039a9, 0x5)   calld(0x101045d4, 0xc26);             /* call 0x101045d4 */
    II(0x101039ae, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101039b1, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x101039b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101039b8, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x101039bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101039be, 0x5)   calld(0x1013c0fa, 0x38737);           /* call 0x1013c0fa */
    II(0x101039c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101039c6, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x101039c8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101039cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101039ce, 0x5)   calld(0x1013c0fa, 0x38727);           /* call 0x1013c0fa */
    II(0x101039d3, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x101039da, 0x2)   jmpd(0x101039e2, 0x6);                /* jmp 0x101039e2 */
l_0x101039dc:
    II(0x101039dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101039df, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x101039e2:
    II(0x101039e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101039e5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101039e8, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x101039eb, 0x2)   jged(0x10103a56, 0x69);               /* jge 0x10103a56 */
    II(0x101039ed, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x101039f1, 0x3)   imul(edx, eax, 0xa);                  /* imul edx, eax, 0xa */
    II(0x101039f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101039f7, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x101039fa, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101039fc, 0x5)   calld(0x10076b90, -0x8ce71);          /* call 0x10076b90 */
    II(0x10103a01, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10103a04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103a07, 0x5)   calld(0x1013c0fa, 0x386ee);           /* call 0x1013c0fa */
    II(0x10103a0c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10103a10, 0x3)   imul(edx, eax, 0xa);                  /* imul edx, eax, 0xa */
    II(0x10103a13, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103a16, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10103a19, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10103a1b, 0x5)   calld(0x101046a4, 0xc84);             /* call 0x101046a4 */
    II(0x10103a20, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10103a22, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103a25, 0x5)   calld(0x10104514, 0xaea);             /* call 0x10104514 */
    II(0x10103a2a, 0x2)   jmpd(0x10103a34, 0x8);                /* jmp 0x10103a34 */
l_0x10103a2c:
    II(0x10103a2c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103a2f, 0x5)   calld(0x10076bf8, -0x8ce3c);          /* call 0x10076bf8 */
l_0x10103a34:
    II(0x10103a34, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103a36, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103a39, 0x5)   calld(0x1013ad71, 0x37333);           /* call 0x1013ad71 */
    II(0x10103a3e, 0x2)   test(al, al);                         /* test al, al */
    II(0x10103a40, 0x2)   jzd(0x10103a54, 0x12);                /* jz 0x10103a54 */
    II(0x10103a42, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10103a45, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103a48, 0x5)   calld(0x101044b0, 0xa63);             /* call 0x101044b0 */
    II(0x10103a4d, 0x5)   calld(0x1010312d, -0x925);            /* call 0x1010312d */
    II(0x10103a52, 0x2)   jmpd(0x10103a2c, -0x28);              /* jmp 0x10103a2c */
l_0x10103a54:
    II(0x10103a54, 0x2)   jmpd(0x101039dc, -0x7a);              /* jmp 0x101039dc */
l_0x10103a56:
    II(0x10103a56, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103a58, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103a5b, 0x5)   calld(0x10104470, 0xa10);             /* call 0x10104470 */
    II(0x10103a60, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10103a62, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10103a63, 0x1)   popd(edi);                            /* pop edi */
    II(0x10103a64, 0x1)   popd(esi);                            /* pop esi */
    II(0x10103a65, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10103a66, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10103a67, 0x1)   retd();                               /* ret */
FUNC_END

