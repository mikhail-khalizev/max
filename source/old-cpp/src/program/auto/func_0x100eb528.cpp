FUNC_BEGIN(0x100eb528, 0x8ae325c60d396e01, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0x20, 0xa8, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x4, 0x8b, 0x55, 0xfc, 0x2b, 0x42, 0x4, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x89, 0xd3, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x16, 0x8b, 0x45, 0xf8, 0x3, 0x10, 0x8b, 0x45, 0xfc, 0x2b, 0x10, 0x8b, 0x45, 0xf8, 0x1, 0xda, 0x89, 0x50, 0x16, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x10, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x10, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100eb528, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100eb52d, 0x5)   calld(sys_check_available_stack_size, 0x7a820); /* call 0x10165d52 */
    II(0x100eb532, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100eb533, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100eb534, 0x1)   pushd(esi);                           /* push esi */
    II(0x100eb535, 0x1)   pushd(edi);                           /* push edi */
    II(0x100eb536, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100eb537, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100eb539, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100eb53f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100eb542, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100eb545, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb548, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
//    II(0x100eb54b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100eb54e, 0x3)   sub(eax, memd_a32(ds, edx + 0x4));    /* sub eax, [edx+0x4] */
    II(0x100eb551, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100eb553, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eb556, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100eb559, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100eb55c, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100eb55f, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x100eb561, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eb564, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x100eb567, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb56a, 0x2)   add(edx, memd_a32(ds, eax));          /* add edx, [eax] */
    II(0x100eb56c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eb56f, 0x2)   sub(edx, memd_a32(ds, eax));          /* sub edx, [eax] */
    II(0x100eb571, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb574, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x100eb576, 0x3)   mov(memd_a32(ds, eax + 0x16), edx);   /* mov [eax+0x16], edx */
    II(0x100eb579, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eb57c, 0x4)   mov(dx, memw_a32(ds, eax + 0x10));    /* mov dx, [eax+0x10] */
    II(0x100eb580, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb583, 0x4)   mov(memw_a32(ds, eax + 0x10), dx);    /* mov [eax+0x10], dx */
    II(0x100eb587, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100eb589, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100eb58a, 0x1)   popd(edi);                            /* pop edi */
    II(0x100eb58b, 0x1)   popd(esi);                            /* pop esi */
    II(0x100eb58c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100eb58d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100eb58e, 0x1)   retd();                               /* ret */
FUNC_END

