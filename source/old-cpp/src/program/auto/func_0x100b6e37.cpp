FUNC_BEGIN(0x100b6e37, 0x5d3b5ed2eda01ba7, 0x20, ({0x68, 0x5c, 0, 0, 0, 0xe8, 0x11, 0xef, 0xa, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x80, 0x7d, 0xfc, 0, 0xf, 0x85, 0x2, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0xf, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0xe8, 0xda, 0xbb, 0x9, 0, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0xd0, 0x1, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0x6f, 0xf6, 0xfb, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf0, 0xfe, 0x8d, 0x45, 0xe4, 0xe8, 0x54, 0xfc, 0xfb, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x75, 0x9, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0x3, 0, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x78, 0xf4, 0xfb, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x70, 0xf5, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x22, 0xfd, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x91, 0x3e, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x5f, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xb0, 0xf4, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x12, 0x8d, 0x45, 0xec, 0xe8, 0xa2, 0xf4, 0xfb, 0xff, 0xe8, 0x19, 0xf2, 0xfb, 0xff, 0x3b, 0x45, 0xf8, 0x74, 0x5, 0xe9, 0x35, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x8b, 0xf4, 0xfb, 0xff, 0xe8, 0x92, 0xb7, 0x9, 0, 0x85, 0xc0, 0x74, 0x20, 0x8d, 0x45, 0xec, 0xe8, 0x7a, 0xf4, 0xfb, 0xff, 0xe8, 0x81, 0xb7, 0x9, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xdc, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x74, 0x4e, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xb8, 0xee, 0xa, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x22, 0xbb, 0xbb, 0xe, 0xb, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x70, 0xf4, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xd8, 0xe8, 0xef, 0x54, 0xff, 0xff, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xcc, 0x8b, 0x55, 0xcc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xc4, 0xdd, 0xfe, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0xc, 0xf4, 0xfb, 0xff, 0xe8, 0x13, 0xb7, 0x9, 0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xc8, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x75, 0x9, 0xc7, 0x45, 0xc4, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x62, 0x11, 0, 0, 0xbb, 0xc7, 0x11, 0x1a, 0x10, 0xba, 0xd3, 0x11, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xc7, 0xed, 0xa, 0, 0x89, 0x45, 0xc4, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0xec, 0xe8, 0xc7, 0xf3, 0xfb, 0xff, 0xe8, 0xce, 0xb6, 0x9, 0, 0xe8, 0xbd, 0xd, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x57, 0x1b, 0xfd, 0xff, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7c, 0x1d, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xbc, 0xe8, 0x64, 0xee, 0xfb, 0xff, 0x8b, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x95, 0x9c, 0xfb, 0xff, 0x66, 0x3b, 0x45, 0xe0, 0x7e, 0x2, 0xeb, 0x2e, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xb8, 0xe8, 0x45, 0xee, 0xfb, 0xff, 0x89, 0xc1, 0x8d, 0x45, 0xec, 0xe8, 0xab, 0xf3, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xd4, 0xf6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x2c, 0xef, 0xfb, 0xff, 0xeb, 0x20, 0xe9, 0x87, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x1b, 0xef, 0xfb, 0xff, 0xe8, 0x8e, 0x40, 0xfd, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x1b, 0xb9, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100b6e37, 0x5)   pushd(0x5c);                          /* push dword 0x5c */
    II(0x100b6e3c, 0x5)   calld(sys_check_available_stack_size, 0xaef11); /* call 0x10165d52 */
    II(0x100b6e41, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b6e42, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b6e43, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b6e44, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b6e45, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b6e47, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x100b6e4d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b6e50, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100b6e53, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100b6e56, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100b6e5a, 0x6)   jnzd(0x100b7062, 0x202);              /* jnz dword 0x100b7062 */
    II(0x100b6e60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b6e63, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100b6e66, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b6e69, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6e6b, 0x2)   jled(0x100b6e7c, 0xf);                /* jle 0x100b6e7c */
    II(0x100b6e6d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100b6e70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b6e73, 0x5)   calld(0x10152a52, 0x9bbda);           /* call 0x10152a52 */
    II(0x100b6e78, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b6e7a, 0x2)   jnzd(0x100b6e81, 0x5);                /* jnz 0x100b6e81 */
l_0x100b6e7c:
    II(0x100b6e7c, 0x5)   jmpd(0x100b7051, 0x1d0);              /* jmp 0x100b7051 */
l_0x100b6e81:
    II(0x100b6e81, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x100b6e85, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6e88, 0x5)   calld(0x100764fc, -0x40991);          /* call 0x100764fc */
    II(0x100b6e8d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b6e90, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x100b6e94, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b6e97, 0x5)   calld(my_ctor_0x101b4184, -0x403ac);  /* call 0x10076af0 */
    II(0x100b6e9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b6e9f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100b6ea4, 0x2)   jnzd(0x100b6eaf, 0x9);                /* jnz 0x100b6eaf */
    II(0x100b6ea6, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100b6ead, 0x2)   jmpd(0x100b6eb6, 0x7);                /* jmp 0x100b6eb6 */
l_0x100b6eaf:
    II(0x100b6eaf, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x3);   /* mov dword [ebp-0x20], 0x3 */
l_0x100b6eb6:
    II(0x100b6eb6, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100b6ebb, 0x5)   calld(0x10076338, -0x40b88);          /* call 0x10076338 */
    II(0x100b6ec0, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100b6ec3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6ec5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b6ec7, 0x5)   calld(0x1007643c, -0x40a90);          /* call 0x1007643c */
    II(0x100b6ecc, 0x2)   jmpd(0x100b6ed6, 0x8);                /* jmp 0x100b6ed6 */
l_0x100b6ece:
    II(0x100b6ece, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6ed1, 0x5)   calld(0x10076bf8, -0x402de);          /* call 0x10076bf8 */
l_0x100b6ed6:
    II(0x100b6ed6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6ed8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6edb, 0x5)   calld(0x1013ad71, 0x83e91);           /* call 0x1013ad71 */
    II(0x100b6ee0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b6ee2, 0x6)   jzd(0x100b7047, 0x15f);               /* jz dword 0x100b7047 */
    II(0x100b6ee8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6eeb, 0x5)   calld(0x100763a0, -0x40b50);          /* call 0x100763a0 */
    II(0x100b6ef0, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100b6ef4, 0x2)   jnzd(0x100b6f08, 0x12);               /* jnz 0x100b6f08 */
    II(0x100b6ef6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6ef9, 0x5)   calld(0x100763a0, -0x40b5e);          /* call 0x100763a0 */
    II(0x100b6efe, 0x5)   calld(0x1007611c, -0x40de7);          /* call 0x1007611c */
    II(0x100b6f03, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x8));    /* cmp eax, [ebp-0x8] */
    II(0x100b6f06, 0x2)   jzd(0x100b6f0d, 0x5);                 /* jz 0x100b6f0d */
l_0x100b6f08:
    II(0x100b6f08, 0x5)   jmpd(0x100b7042, 0x135);              /* jmp 0x100b7042 */
l_0x100b6f0d:
    II(0x100b6f0d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6f10, 0x5)   calld(0x100763a0, -0x40b75);          /* call 0x100763a0 */
    II(0x100b6f15, 0x5)   calld(0x101526ac, 0x9b792);           /* call 0x101526ac */
    II(0x100b6f1a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6f1c, 0x2)   jzd(0x100b6f3e, 0x20);                /* jz 0x100b6f3e */
    II(0x100b6f1e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6f21, 0x5)   calld(0x100763a0, -0x40b86);          /* call 0x100763a0 */
    II(0x100b6f26, 0x5)   calld(0x101526ac, 0x9b781);           /* call 0x101526ac */
    II(0x100b6f2b, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100b6f2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100b6f31, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b6f34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100b6f37, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100b6f3a, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x100b6f3c, 0x2)   jzd(0x100b6f8c, 0x4e);                /* jz 0x100b6f8c */
l_0x100b6f3e:
    II(0x100b6f3e, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100b6f43, 0x5)   calld(sys_new, 0xaeeb8);              /* call 0x10165e00 */
    II(0x100b6f48, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100b6f4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100b6f4e, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100b6f51, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x100b6f55, 0x2)   jzd(0x100b6f79, 0x22);                /* jz 0x100b6f79 */
    II(0x100b6f57, 0x5)   mov(ebx, 0x100b0ebb);                 /* mov ebx, 0x100b0ebb */
    II(0x100b6f5c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6f5f, 0x5)   calld(0x100763d4, -0x40b90);          /* call 0x100763d4 */
    II(0x100b6f64, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6f66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100b6f69, 0x5)   calld(0x100ac45d, -0xab11);           /* call 0x100ac45d */
    II(0x100b6f6e, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100b6f71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100b6f74, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100b6f77, 0x2)   jmpd(0x100b6f7f, 0x6);                /* jmp 0x100b6f7f */
l_0x100b6f79:
    II(0x100b6f79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100b6f7c, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x100b6f7f:
    II(0x100b6f7f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x100b6f82, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b6f87, 0x5)   calld(0x100a4d50, -0x1223c);          /* call 0x100a4d50 */
l_0x100b6f8c:
    II(0x100b6f8c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6f8f, 0x5)   calld(0x100763a0, -0x40bf4);          /* call 0x100763a0 */
    II(0x100b6f94, 0x5)   calld(0x101526ac, 0x9b713);           /* call 0x101526ac */
    II(0x100b6f99, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100b6f9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100b6f9f, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b6fa2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100b6fa5, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100b6fa8, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x100b6faa, 0x2)   jnzd(0x100b6fb5, 0x9);                /* jnz 0x100b6fb5 */
    II(0x100b6fac, 0x7)   mov(memd_a32(ss, ebp - 0x3c), 0);     /* mov dword [ebp-0x3c], 0x0 */
    II(0x100b6fb3, 0x2)   jmpd(0x100b6fce, 0x19);               /* jmp 0x100b6fce */
l_0x100b6fb5:
    II(0x100b6fb5, 0x5)   mov(ecx, 0x1162);                     /* mov ecx, 0x1162 */
    II(0x100b6fba, 0x5)   mov(ebx, 0x101a11c7);                 /* mov ebx, 0x101a11c7 */ /* "ai_move.cpp" */
    II(0x100b6fbf, 0x5)   mov(edx, 0x101a11d3);                 /* mov edx, 0x101a11d3 */ /* "client->GetTask()->GetType() == task_move" */
    II(0x100b6fc4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b6fc6, 0x5)   calld(sys_assert, 0xaedc7);           /* call 0x10165d92 */
    II(0x100b6fcb, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
l_0x100b6fce:
    II(0x100b6fce, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x100b6fd1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b6fd4, 0x5)   calld(0x100763a0, -0x40c39);          /* call 0x100763a0 */
    II(0x100b6fd9, 0x5)   calld(0x101526ac, 0x9b6ce);           /* call 0x101526ac */
    II(0x100b6fde, 0x5)   calld(0x100b7da0, 0xdbd);             /* call 0x100b7da0 */
    II(0x100b6fe3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6fe5, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b6fe8, 0x5)   calld(0x10088b44, -0x2e4a9);          /* call 0x10088b44 */
    II(0x100b6fed, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100b6ff1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6ff3, 0x2)   jld(0x100b7012, 0x1d);                /* jl 0x100b7012 */
    II(0x100b6ff5, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100b6ff8, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100b6ffb, 0x5)   calld(0x10075e64, -0x4119c);          /* call 0x10075e64 */
    II(0x100b7000, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100b7003, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b7005, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b7007, 0x5)   calld(0x10070ca1, -0x4636b);          /* call 0x10070ca1 */
    II(0x100b700c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x100b7010, 0x2)   jled(0x100b7014, 0x2);                /* jle 0x100b7014 */
l_0x100b7012:
    II(0x100b7012, 0x2)   jmpd(0x100b7042, 0x2e);               /* jmp 0x100b7042 */
l_0x100b7014:
    II(0x100b7014, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100b7017, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b701a, 0x5)   calld(0x10075e64, -0x411bb);          /* call 0x10075e64 */
    II(0x100b701f, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100b7021, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b7024, 0x5)   calld(0x100763d4, -0x40c55);          /* call 0x100763d4 */
    II(0x100b7029, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b702b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b702e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b7031, 0x5)   calld(0x100b670a, -0x92c);            /* call 0x100b670a */
    II(0x100b7036, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b7038, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b703b, 0x5)   calld(0x10075f6c, -0x410d4);          /* call 0x10075f6c */
    II(0x100b7040, 0x2)   jmpd(0x100b7062, 0x20);               /* jmp 0x100b7062 */
l_0x100b7042:
    II(0x100b7042, 0x5)   jmpd(0x100b6ece, -0x179);             /* jmp 0x100b6ece */
l_0x100b7047:
    II(0x100b7047, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b7049, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b704c, 0x5)   calld(0x10075f6c, -0x410e5);          /* call 0x10075f6c */
l_0x100b7051:
    II(0x100b7051, 0x5)   calld(0x1008b0e4, -0x2bf72);          /* call 0x1008b0e4 */
    II(0x100b7056, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b7058, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100b705a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b705d, 0x5)   calld(0x100a297d, -0x146e5);          /* call 0x100a297d */
l_0x100b7062:
    II(0x100b7062, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b7064, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b7065, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b7066, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b7067, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b7068, 0x1)   retd();                               /* ret */
FUNC_END

