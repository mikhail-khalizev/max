FUNC_BEGIN(0x1007e344, 0x9a9a2eee39d62a70, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x4, 0x7a, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x89, 0x87, 0xff, 0xff, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xc3, 0xcd, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xec, 0x2, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x48, 0x66, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x3, 0x45, 0xec, 0x66, 0x89, 0x45, 0xea, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xf0, 0x2, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0x64, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xf4, 0x40, 0x39, 0xc2, 0x7d, 0x46, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xa0, 0xcd, 0, 0, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0xd8, 0xe8, 0xbf, 0x9e, 0x8, 0, 0x84, 0xc0, 0x74, 0x17, 0xf, 0xbf, 0x55, 0xea, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x28, 0x59, 0xff, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x8, 0xeb, 0xa7, 0xeb, 0x8b, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1007e344, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x1007e349, 0x5)   calld(sys_check_available_stack_size, 0xe7a04); /* call 0x10165d52 */
    II(0x1007e34e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007e34f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007e350, 0x1)   pushd(edx);                           /* push edx */
    II(0x1007e351, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007e352, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007e353, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007e354, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007e356, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x1007e35c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1007e35f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007e362, 0x5)   calld(my_ctor_0x101b4184, -0x7877);   /* call 0x10076af0 */
    II(0x1007e367, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x1007e36c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007e36f, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007e370, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x1007e376, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1007e379, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1007e37b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007e37d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007e380, 0x5)   calld(0x1008b148, 0xcdc3);            /* call 0x1008b148 */
    II(0x1007e385, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007e388, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1007e38c, 0x2)   jzd(0x1007e397, 0x9);                 /* jz 0x1007e397 */
    II(0x1007e38e, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x2);   /* mov dword [ebp-0x14], 0x2 */
    II(0x1007e395, 0x2)   jmpd(0x1007e39e, 0x7);                /* jmp 0x1007e39e */
l_0x1007e397:
    II(0x1007e397, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
l_0x1007e39e:
    II(0x1007e39e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007e3a1, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1007e3a5, 0x1)   dec(eax);                             /* dec eax */
    II(0x1007e3a6, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x1007e3aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007e3ad, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1007e3b1, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x1007e3b4, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x1007e3b8, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1007e3bf, 0x2)   jmpd(0x1007e3c5, 0x4);                /* jmp 0x1007e3c5 */
l_0x1007e3c1:
    II(0x1007e3c1, 0x4)   add(memd_a32(ss, ebp - 0x10), 0x2);   /* add dword [ebp-0x10], 0x2 */
l_0x1007e3c5:
    II(0x1007e3c5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1007e3c9, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1007e3cc, 0x6)   jged(0x1007e436, 0x64);               /* jge dword 0x1007e436 */
    II(0x1007e3d2, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1007e3d9, 0x2)   jmpd(0x1007e3e1, 0x6);                /* jmp 0x1007e3e1 */
l_0x1007e3db:
    II(0x1007e3db, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007e3de, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1007e3e1:
    II(0x1007e3e1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1007e3e5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1007e3e9, 0x1)   inc(eax);                             /* inc eax */
    II(0x1007e3ea, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007e3ec, 0x2)   jged(0x1007e434, 0x46);               /* jge 0x1007e434 */
    II(0x1007e3ee, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1007e3f2, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1007e3f5, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x1007e3fa, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1007e3fc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007e3ff, 0x5)   calld(0x1008b1a4, 0xcda0);            /* call 0x1008b1a4 */
    II(0x1007e404, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x1007e407, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007e40a, 0x5)   calld(0x101082ce, 0x89ebf);           /* call 0x101082ce */
    II(0x1007e40f, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007e411, 0x2)   jzd(0x1007e42a, 0x17);                /* jz 0x1007e42a */
    II(0x1007e413, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x16)); /* movsx edx, word [ebp-0x16] */
    II(0x1007e417, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1007e41b, 0x5)   calld(0x10073d48, -0xa6d8);           /* call 0x10073d48 */
    II(0x1007e420, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1007e425, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1007e428, 0x2)   jzd(0x1007e42c, 0x2);                 /* jz 0x1007e42c */
l_0x1007e42a:
    II(0x1007e42a, 0x2)   jmpd(0x1007e432, 0x6);                /* jmp 0x1007e432 */
l_0x1007e42c:
    II(0x1007e42c, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1007e430, 0x2)   jmpd(0x1007e43a, 0x8);                /* jmp 0x1007e43a */
l_0x1007e432:
    II(0x1007e432, 0x2)   jmpd(0x1007e3db, -0x59);              /* jmp 0x1007e3db */
l_0x1007e434:
    II(0x1007e434, 0x2)   jmpd(0x1007e3c1, -0x75);              /* jmp 0x1007e3c1 */
l_0x1007e436:
    II(0x1007e436, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x1007e43a:
    II(0x1007e43a, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1007e43d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007e43f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007e440, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007e441, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007e442, 0x1)   popd(edx);                            /* pop edx */
    II(0x1007e443, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007e444, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1007e445, 0x1)   retd();                               /* ret */
FUNC_END

