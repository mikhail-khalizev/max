FUNC_BEGIN(0x1010a8f7, 0xaa21857d2d2952d1, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x51, 0xb4, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xfc, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x4c, 0xf9, 0xff, 0xff, 0xb9, 0x1, 0, 0, 0, 0xba, 0x54, 0x4e, 0x1c, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x47, 0xa4, 0xfc, 0xff, 0x89, 0xc3, 0xba, 0xb0, 0xa6, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x95, 0xf9, 0xff, 0xff, 0xb9, 0x1, 0, 0, 0, 0xba, 0x54, 0x4e, 0x1c, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0x24, 0xa4, 0xfc, 0xff, 0x89, 0xc3, 0xba, 0xc4, 0xa6, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x72, 0xf9, 0xff, 0xff, 0xb8, 0x46, 0, 0, 0, 0xe8, 0x6d, 0xb6, 0xf6, 0xff, 0x89, 0x45, 0xf8, 0xc7, 0x45, 0xf0, 0x7, 0, 0, 0, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0x74, 0x1d, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xc0, 0xf, 0x6b, 0xc0, 0x14, 0x8b, 0x80, 0xbc, 0xa5, 0x1b, 0x10, 0xe8, 0x36, 0xe7, 0x6, 0, 0xf, 0xbf, 0x55, 0xf8, 0x39, 0xc2, 0x7c, 0xd9, 0xb8, 0x47, 0, 0, 0, 0xe8, 0x32, 0xb6, 0xf6, 0xff, 0x89, 0x45, 0xf8, 0xc7, 0x45, 0xf4, 0x7, 0, 0, 0, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x1d, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xc0, 0x16, 0x6b, 0xc0, 0x14, 0x8b, 0x80, 0xbc, 0xa5, 0x1b, 0x10, 0xe8, 0xfb, 0xe6, 0x6, 0, 0xf, 0xbf, 0x55, 0xf8, 0x39, 0xc2, 0x7c, 0xd9, 0xf, 0xbf, 0x4d, 0xf0, 0xbb, 0xf, 0, 0, 0, 0xba, 0x7, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x7d, 0xf9, 0xff, 0xff, 0xf, 0xbf, 0x4d, 0xf4, 0xbb, 0x16, 0, 0, 0, 0xba, 0x7, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x67, 0xf9, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010a8f7, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x1010a8fc, 0x5)   calld(sys_check_available_stack_size, 0x5b451); /* call 0x10165d52 */
    II(0x1010a901, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010a902, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010a903, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010a904, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010a905, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010a906, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010a907, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010a909, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x1010a90f, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010a912, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
//    II(0x1010a917, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a91a, 0x5)   calld(0x1010a26b, -0x6b4);            /* call 0x1010a26b */
    II(0x1010a91f, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010a924, 0x5)   mov(edx, 0x101c4e54);                 /* mov edx, 0x101c4e54 */
    II(0x1010a929, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1010a92c, 0x5)   calld(0x100d4d78, -0x35bb9);          /* call 0x100d4d78 */
    II(0x1010a931, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1010a933, 0x5)   mov(edx, 0x101ba6b0);                 /* mov edx, 0x101ba6b0 */
    II(0x1010a938, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a93b, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010a93d, 0x5)   calld(0x1010a2d7, -0x66b);            /* call 0x1010a2d7 */
    II(0x1010a942, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010a947, 0x5)   mov(edx, 0x101c4e54);                 /* mov edx, 0x101c4e54 */
    II(0x1010a94c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1010a94f, 0x5)   calld(0x100d4d78, -0x35bdc);          /* call 0x100d4d78 */
    II(0x1010a954, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1010a956, 0x5)   mov(edx, 0x101ba6c4);                 /* mov edx, 0x101ba6c4 */
    II(0x1010a95b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a95e, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010a960, 0x5)   calld(0x1010a2d7, -0x68e);            /* call 0x1010a2d7 */
    II(0x1010a965, 0x5)   mov(eax, 0x46);                       /* mov eax, 0x46 */
    II(0x1010a96a, 0x5)   calld(0x10075fdc, -0x94993);          /* call 0x10075fdc */
    II(0x1010a96f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010a972, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x7);   /* mov dword [ebp-0x10], 0x7 */
l_0x1010a979:
    II(0x1010a979, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x1010a97c, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x1010a981, 0x2)   jzd(0x1010a9a0, 0x1d);                /* jz 0x1010a9a0 */
    II(0x1010a983, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1010a987, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1010a98a, 0x3)   imul(eax, eax, 0x14);                 /* imul eax, eax, 0x14 */
    II(0x1010a98d, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ba5bc)); /* mov eax, [eax+0x101ba5bc] */
    II(0x1010a993, 0x5)   calld(/* sys */ 0x101790ce, 0x6e736); /* call 0x101790ce */
    II(0x1010a998, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1010a99c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1010a99e, 0x2)   jld(0x1010a979, -0x27);               /* jl 0x1010a979 */
l_0x1010a9a0:
    II(0x1010a9a0, 0x5)   mov(eax, 0x47);                       /* mov eax, 0x47 */
    II(0x1010a9a5, 0x5)   calld(0x10075fdc, -0x949ce);          /* call 0x10075fdc */
    II(0x1010a9aa, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010a9ad, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x7);    /* mov dword [ebp-0xc], 0x7 */
l_0x1010a9b4:
    II(0x1010a9b4, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
    II(0x1010a9b7, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x1010a9bc, 0x2)   jzd(0x1010a9db, 0x1d);                /* jz 0x1010a9db */
    II(0x1010a9be, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010a9c2, 0x3)   add(eax, 0x16);                       /* add eax, 0x16 */
    II(0x1010a9c5, 0x3)   imul(eax, eax, 0x14);                 /* imul eax, eax, 0x14 */
    II(0x1010a9c8, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ba5bc)); /* mov eax, [eax+0x101ba5bc] */
    II(0x1010a9ce, 0x5)   calld(/* sys */ 0x101790ce, 0x6e6fb); /* call 0x101790ce */
    II(0x1010a9d3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1010a9d7, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1010a9d9, 0x2)   jld(0x1010a9b4, -0x27);               /* jl 0x1010a9b4 */
l_0x1010a9db:
    II(0x1010a9db, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x1010a9df, 0x5)   mov(ebx, 0xf);                        /* mov ebx, 0xf */
    II(0x1010a9e4, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x1010a9e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010a9ec, 0x5)   calld(0x1010a36e, -0x683);            /* call 0x1010a36e */
    II(0x1010a9f1, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x1010a9f5, 0x5)   mov(ebx, 0x16);                       /* mov ebx, 0x16 */
    II(0x1010a9fa, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x1010a9ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010aa02, 0x5)   calld(0x1010a36e, -0x699);            /* call 0x1010a36e */
    II(0x1010aa07, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010aa09, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010aa0a, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010aa0b, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010aa0c, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010aa0d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010aa0e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010aa0f, 0x1)   retd();                               /* ret */
FUNC_END

