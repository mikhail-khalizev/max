FUNC_BEGIN(0x100ccf62, 0xb043c1d95b0c65c5, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0xe6, 0x8d, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x40, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xb1, 0x93, 0xfa, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x25, 0x95, 0xfa, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xc8, 0x95, 0xfa, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xb0, 0x8f, 0xfa, 0xff, 0xe9, 0x8a, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xc2, 0xeb, 0xff, 0xff, 0x89, 0x45, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xb, 0x75, 0xc, 0xc7, 0x45, 0xf4, 0x4b, 0, 0, 0, 0xe9, 0x2f, 0x1, 0, 0, 0x66, 0x83, 0x7d, 0xf8, 0x9, 0x75, 0xc, 0xc7, 0x45, 0xf4, 0x3b, 0, 0, 0, 0xe9, 0x1c, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x77, 0x95, 0xfa, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x64, 0x95, 0xfa, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x48, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe4, 0xe8, 0x8c, 0x9a, 0xfa, 0xff, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xa, 0xe1, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x2b, 0x95, 0xfa, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xd0, 0x3, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xd0, 0x2, 0, 0, 0, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xcc, 0x2, 0xf, 0xbf, 0x45, 0xcc, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0x7f, 0, 0, 0, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0xff, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x66, 0x3b, 0x45, 0xd0, 0x7d, 0x62, 0xf, 0xbf, 0x55, 0xcc, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xfd, 0xe0, 0xfb, 0xff, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xd4, 0xe8, 0x1c, 0xb2, 0x3, 0, 0x84, 0xc0, 0x74, 0x3b, 0xf, 0xbf, 0x55, 0xe6, 0xf, 0xbf, 0x45, 0xe4, 0xe8, 0x85, 0x6c, 0xfa, 0xff, 0x89, 0x45, 0xc4, 0xf, 0xbf, 0x45, 0xc4, 0x83, 0xf8, 0x1, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0x3b, 0, 0, 0, 0xeb, 0x19, 0xf, 0xbf, 0x45, 0xc4, 0x83, 0xf8, 0x2, 0x75, 0x7, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x2, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0x4b, 0, 0, 0, 0xeb, 0x8f, 0xe9, 0x70, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x75, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x63, 0x8e, 0xfa, 0xff, 0xe9, 0x3d, 0x1, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xe0, 0x9a, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x4f, 0xdc, 0x6, 0, 0x84, 0xc0, 0xf, 0x84, 0x9, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x6e, 0x92, 0xfa, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x12, 0x8d, 0x45, 0xe8, 0xe8, 0x54, 0x92, 0xfa, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xf4, 0x74, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xe8, 0xe8, 0x40, 0x92, 0xfa, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x34, 0x8d, 0x45, 0xe8, 0xe8, 0x2a, 0x92, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0, 0x74, 0x24, 0x8d, 0x45, 0xe8, 0xe8, 0x1c, 0x92, 0xfa, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0x14, 0x8d, 0x45, 0xe8, 0xe8, 0xe, 0x92, 0xfa, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0x17, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x13, 0x8d, 0x45, 0xe8, 0xe8, 0x56, 0x92, 0xfa, 0xff, 0xe8, 0xfd, 0xe2, 0xfb, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0x6e, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xd8, 0x91, 0xfa, 0xff, 0xe8, 0xdf, 0x54, 0x8, 0, 0x85, 0xc0, 0x74, 0x20, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0xb, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0xbe, 0x91, 0xfa, 0xff, 0xe8, 0xc5, 0x54, 0x8, 0, 0xe8, 0xd8, 0x59, 0xfd, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x3d, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xc0, 0xd9, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x66, 0x91, 0xfa, 0xff, 0xe8, 0xf, 0x8e, 0xfd, 0xff, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xec, 0, 0x74, 0x9, 0x8b, 0x45, 0xc0, 0x66, 0x3b, 0x45, 0xf0, 0x7d, 0x11, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xe8, 0xe8, 0xdd, 0x91, 0xfa, 0xff, 0x89, 0x45, 0xec, 0xe9, 0xdd, 0xfe, 0xff, 0xff, 0x8b, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xef, 0x93, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x21, 0x8d, 0xfa, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ccf62, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x100ccf67, 0x5)   calld(sys_check_available_stack_size, 0x98de6); /* call 0x10165d52 */
    II(0x100ccf6c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ccf6d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ccf6e, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ccf6f, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ccf70, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ccf71, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ccf72, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ccf74, 0x6)   sub(esp, 0x40);                       /* sub esp, 0x40 */
    II(0x100ccf7a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ccf7d, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100ccf82, 0x5)   calld(0x10076338, -0x56c4f);          /* call 0x10076338 */
    II(0x100ccf87, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100ccf8a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ccf8c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ccf8e, 0x5)   calld(0x100764b8, -0x56adb);          /* call 0x100764b8 */
    II(0x100ccf93, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100ccf9a, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xffffffff); /* mov dword [ebp-0xc], 0xffffffff */
    II(0x100ccfa1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ccfa4, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ccfa7, 0x5)   calld(0x10076574, -0x56a38);          /* call 0x10076574 */
    II(0x100ccfac, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x100ccfb0, 0x2)   jzd(0x100ccfc1, 0xf);                 /* jz 0x100ccfc1 */
    II(0x100ccfb2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ccfb4, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ccfb7, 0x5)   calld(0x10075f6c, -0x57050);          /* call 0x10075f6c */
    II(0x100ccfbc, 0x5)   jmpd(0x100cd24b, 0x28a);              /* jmp 0x100cd24b */
l_0x100ccfc1:
    II(0x100ccfc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ccfc4, 0x5)   calld(0x100cbb8b, -0x143e);           /* call 0x100cbb8b */
    II(0x100ccfc9, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ccfcc, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0xb);    /* cmp word [ebp-0x8], 0xb */
    II(0x100ccfd1, 0x2)   jnzd(0x100ccfdf, 0xc);                /* jnz 0x100ccfdf */
    II(0x100ccfd3, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x4b);   /* mov dword [ebp-0xc], 0x4b */
    II(0x100ccfda, 0x5)   jmpd(0x100cd10e, 0x12f);              /* jmp 0x100cd10e */
l_0x100ccfdf:
    II(0x100ccfdf, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x9);    /* cmp word [ebp-0x8], 0x9 */
    II(0x100ccfe4, 0x2)   jnzd(0x100ccff2, 0xc);                /* jnz 0x100ccff2 */
    II(0x100ccfe6, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x3b);   /* mov dword [ebp-0xc], 0x3b */
    II(0x100ccfed, 0x5)   jmpd(0x100cd10e, 0x11c);              /* jmp 0x100cd10e */
l_0x100ccff2:
    II(0x100ccff2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ccff5, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ccff8, 0x5)   calld(0x10076574, -0x56a89);          /* call 0x10076574 */
    II(0x100ccffd, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100cd001, 0x1)   inc(eax);                             /* inc eax */
    II(0x100cd002, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100cd005, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cd008, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cd00b, 0x5)   calld(0x10076574, -0x56a9c);          /* call 0x10076574 */
    II(0x100cd010, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100cd014, 0x1)   dec(eax);                             /* dec eax */
    II(0x100cd015, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100cd018, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100cd01b, 0x5)   calld(0x10076aac, -0x56574);          /* call 0x10076aac */
    II(0x100cd020, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100cd025, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100cd028, 0x1)   pushd(eax);                           /* push eax */
    II(0x100cd029, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100cd02f, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100cd032, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100cd034, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cd036, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100cd039, 0x5)   calld(0x1008b148, -0x41ef6);          /* call 0x1008b148 */
    II(0x100cd03e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cd041, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cd044, 0x5)   calld(0x10076574, -0x56ad5);          /* call 0x10076574 */
    II(0x100cd049, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x100cd04d, 0x2)   jzd(0x100cd058, 0x9);                 /* jz 0x100cd058 */
    II(0x100cd04f, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0x3);   /* mov dword [ebp-0x30], 0x3 */
    II(0x100cd056, 0x2)   jmpd(0x100cd05f, 0x7);                /* jmp 0x100cd05f */
l_0x100cd058:
    II(0x100cd058, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0x2);   /* mov dword [ebp-0x30], 0x2 */
l_0x100cd05f:
    II(0x100cd05f, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x100cd066, 0x2)   jmpd(0x100cd06c, 0x4);                /* jmp 0x100cd06c */
l_0x100cd068:
    II(0x100cd068, 0x4)   add(memd_a32(ss, ebp - 0x34), 0x2);   /* add dword [ebp-0x34], 0x2 */
l_0x100cd06c:
    II(0x100cd06c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x100cd070, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100cd073, 0x6)   jged(0x100cd0f8, 0x7f);               /* jge dword 0x100cd0f8 */
    II(0x100cd079, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
    II(0x100cd080, 0x2)   jmpd(0x100cd088, 0x6);                /* jmp 0x100cd088 */
l_0x100cd082:
    II(0x100cd082, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100cd085, 0x3)   inc(memd_a32(ss, ebp - 0x38));        /* inc dword [ebp-0x38] */
l_0x100cd088:
    II(0x100cd088, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100cd08b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100cd08f, 0x2)   jged(0x100cd0f3, 0x62);               /* jge 0x100cd0f3 */
    II(0x100cd091, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x100cd095, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100cd098, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x100cd09d, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100cd09f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100cd0a2, 0x5)   calld(0x1008b1a4, -0x41f03);          /* call 0x1008b1a4 */
    II(0x100cd0a7, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100cd0aa, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100cd0ad, 0x5)   calld(0x101082ce, 0x3b21c);           /* call 0x101082ce */
    II(0x100cd0b2, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cd0b4, 0x2)   jzd(0x100cd0f1, 0x3b);                /* jz 0x100cd0f1 */
    II(0x100cd0b6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1a)); /* movsx edx, word [ebp-0x1a] */
    II(0x100cd0ba, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100cd0be, 0x5)   calld(0x10073d48, -0x5937b);          /* call 0x10073d48 */
    II(0x100cd0c3, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100cd0c6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x100cd0ca, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100cd0cd, 0x2)   jnzd(0x100cd0d8, 0x9);                /* jnz 0x100cd0d8 */
    II(0x100cd0cf, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x3b);   /* mov dword [ebp-0xc], 0x3b */
    II(0x100cd0d6, 0x2)   jmpd(0x100cd0f1, 0x19);               /* jmp 0x100cd0f1 */
l_0x100cd0d8:
    II(0x100cd0d8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x100cd0dc, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100cd0df, 0x2)   jnzd(0x100cd0e8, 0x7);                /* jnz 0x100cd0e8 */
    II(0x100cd0e1, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x100cd0e6, 0x2)   jzd(0x100cd0ea, 0x2);                 /* jz 0x100cd0ea */
l_0x100cd0e8:
    II(0x100cd0e8, 0x2)   jmpd(0x100cd0f1, 0x7);                /* jmp 0x100cd0f1 */
l_0x100cd0ea:
    II(0x100cd0ea, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x4b);   /* mov dword [ebp-0xc], 0x4b */
l_0x100cd0f1:
    II(0x100cd0f1, 0x2)   jmpd(0x100cd082, -0x71);              /* jmp 0x100cd082 */
l_0x100cd0f3:
    II(0x100cd0f3, 0x5)   jmpd(0x100cd068, -0x90);              /* jmp 0x100cd068 */
l_0x100cd0f8:
    II(0x100cd0f8, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x100cd0fd, 0x2)   jnzd(0x100cd10e, 0xf);                /* jnz 0x100cd10e */
    II(0x100cd0ff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cd101, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd104, 0x5)   calld(0x10075f6c, -0x5719d);          /* call 0x10075f6c */
    II(0x100cd109, 0x5)   jmpd(0x100cd24b, 0x13d);              /* jmp 0x100cd24b */
l_0x100cd10e:
    II(0x100cd10e, 0x2)   jmpd(0x100cd118, 0x8);                /* jmp 0x100cd118 */
l_0x100cd110:
    II(0x100cd110, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd113, 0x5)   calld(0x10076bf8, -0x56520);          /* call 0x10076bf8 */
l_0x100cd118:
    II(0x100cd118, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cd11a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd11d, 0x5)   calld(0x1013ad71, 0x6dc4f);           /* call 0x1013ad71 */
    II(0x100cd122, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cd124, 0x6)   jzd(0x100cd233, 0x109);               /* jz dword 0x100cd233 */
    II(0x100cd12a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd12d, 0x5)   calld(0x100763a0, -0x56d92);          /* call 0x100763a0 */
    II(0x100cd132, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cd134, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100cd137, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cd13a, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100cd13d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100cd140, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100cd142, 0x2)   jnzd(0x100cd156, 0x12);               /* jnz 0x100cd156 */
    II(0x100cd144, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd147, 0x5)   calld(0x100763a0, -0x56dac);          /* call 0x100763a0 */
    II(0x100cd14c, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100cd150, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100cd154, 0x2)   jzd(0x100cd158, 0x2);                 /* jz 0x100cd158 */
l_0x100cd156:
    II(0x100cd156, 0x2)   jmpd(0x100cd16c, 0x14);               /* jmp 0x100cd16c */
l_0x100cd158:
    II(0x100cd158, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd15b, 0x5)   calld(0x100763a0, -0x56dc0);          /* call 0x100763a0 */
    II(0x100cd160, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100cd163, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100cd168, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100cd16a, 0x2)   jgd(0x100cd16e, 0x2);                 /* jg 0x100cd16e */
l_0x100cd16c:
    II(0x100cd16c, 0x2)   jmpd(0x100cd1a2, 0x34);               /* jmp 0x100cd1a2 */
l_0x100cd16e:
    II(0x100cd16e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd171, 0x5)   calld(0x100763a0, -0x56dd6);          /* call 0x100763a0 */
    II(0x100cd176, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0);     /* cmp byte [eax+0x3d], 0x0 */
    II(0x100cd17a, 0x2)   jzd(0x100cd1a0, 0x24);                /* jz 0x100cd1a0 */
    II(0x100cd17c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd17f, 0x5)   calld(0x100763a0, -0x56de4);          /* call 0x100763a0 */
    II(0x100cd184, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x100cd188, 0x2)   jnzd(0x100cd19e, 0x14);               /* jnz 0x100cd19e */
    II(0x100cd18a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd18d, 0x5)   calld(0x100763a0, -0x56df2);          /* call 0x100763a0 */
    II(0x100cd192, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100cd195, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100cd19a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100cd19c, 0x2)   jzd(0x100cd1a0, 0x2);                 /* jz 0x100cd1a0 */
l_0x100cd19e:
    II(0x100cd19e, 0x2)   jmpd(0x100cd1a2, 0x2);                /* jmp 0x100cd1a2 */
l_0x100cd1a0:
    II(0x100cd1a0, 0x2)   jmpd(0x100cd1a4, 0x2);                /* jmp 0x100cd1a4 */
l_0x100cd1a2:
    II(0x100cd1a2, 0x2)   jmpd(0x100cd1bb, 0x17);               /* jmp 0x100cd1bb */
l_0x100cd1a4:
    II(0x100cd1a4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100cd1a7, 0x3)   add(edx, 0x13);                       /* add edx, 0x13 */
    II(0x100cd1aa, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd1ad, 0x5)   calld(0x10076408, -0x56daa);          /* call 0x10076408 */
    II(0x100cd1b2, 0x5)   calld(0x1008b4b4, -0x41d03);          /* call 0x1008b4b4 */
    II(0x100cd1b7, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cd1b9, 0x2)   jnzd(0x100cd1c0, 0x5);                /* jnz 0x100cd1c0 */
l_0x100cd1bb:
    II(0x100cd1bb, 0x5)   jmpd(0x100cd22e, 0x6e);               /* jmp 0x100cd22e */
l_0x100cd1c0:
    II(0x100cd1c0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd1c3, 0x5)   calld(0x100763a0, -0x56e28);          /* call 0x100763a0 */
    II(0x100cd1c8, 0x5)   calld(0x101526ac, 0x854df);           /* call 0x101526ac */
    II(0x100cd1cd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100cd1cf, 0x2)   jzd(0x100cd1f1, 0x20);                /* jz 0x100cd1f1 */
    II(0x100cd1d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cd1d4, 0x3)   mov(edx, memd_a32(ds, eax + 0xb));    /* mov edx, [eax+0xb] */
    II(0x100cd1d7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100cd1da, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd1dd, 0x5)   calld(0x100763a0, -0x56e42);          /* call 0x100763a0 */
    II(0x100cd1e2, 0x5)   calld(0x101526ac, 0x854c5);           /* call 0x101526ac */
    II(0x100cd1e7, 0x5)   calld(0x100a2bc4, -0x2a628);          /* call 0x100a2bc4 */
    II(0x100cd1ec, 0x1)   cwde();                               /* cwde */
    II(0x100cd1ed, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100cd1ef, 0x2)   jled(0x100cd22e, 0x3d);               /* jle 0x100cd22e */
l_0x100cd1f1:
    II(0x100cd1f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cd1f4, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cd1f7, 0x5)   calld(0x1008abbc, -0x42640);          /* call 0x1008abbc */
    II(0x100cd1fc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cd1fe, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd201, 0x5)   calld(0x1007636c, -0x56e9a);          /* call 0x1007636c */
    II(0x100cd206, 0x5)   calld(0x100a601a, -0x271f1);          /* call 0x100a601a */
    II(0x100cd20b, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100cd20e, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100cd212, 0x2)   jzd(0x100cd21d, 0x9);                 /* jz 0x100cd21d */
    II(0x100cd214, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100cd217, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100cd21b, 0x2)   jged(0x100cd22e, 0x11);               /* jge 0x100cd22e */
l_0x100cd21d:
    II(0x100cd21d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100cd220, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100cd223, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd226, 0x5)   calld(0x10076408, -0x56e23);          /* call 0x10076408 */
    II(0x100cd22b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x100cd22e:
    II(0x100cd22e, 0x5)   jmpd(0x100cd110, -0x123);             /* jmp 0x100cd110 */
l_0x100cd233:
    II(0x100cd233, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100cd236, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cd239, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cd23c, 0x5)   calld(0x10076630, -0x56c11);          /* call 0x10076630 */
    II(0x100cd241, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cd243, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cd246, 0x5)   calld(0x10075f6c, -0x572df);          /* call 0x10075f6c */
l_0x100cd24b:
    II(0x100cd24b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100cd24d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100cd24e, 0x1)   popd(edi);                            /* pop edi */
    II(0x100cd24f, 0x1)   popd(esi);                            /* pop esi */
    II(0x100cd250, 0x1)   popd(edx);                            /* pop edx */
    II(0x100cd251, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100cd252, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100cd253, 0x1)   retd();                               /* ret */
FUNC_END

