FUNC_BEGIN(0x100e7c7b, 0x93b5f6ce0e36b773, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0xcd, 0xe0, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0xb8, 0x20, 0x36, 0x1c, 0x10, 0xe8, 0xe3, 0x37, 0xfa, 0xff, 0x89, 0x45, 0xfc, 0xb8, 0x26, 0, 0, 0, 0xe8, 0x93, 0xb, 0, 0, 0xb9, 0x6, 0, 0, 0, 0x8d, 0x7d, 0xd0, 0x89, 0xc6, 0xf3, 0xa5, 0x66, 0xa5, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xad, 0x30, 0x5, 0, 0x84, 0xc0, 0x74, 0x14, 0xba, 0x8d, 0x61, 0xe, 0x10, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xf9, 0xe8, 0xf8, 0xff, 0xe8, 0x5e, 0xe3, 0xff, 0xff, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0xf, 0x84, 0x37, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x20, 0x36, 0x1c, 0x10, 0xe8, 0xc0, 0x7, 0, 0, 0x8d, 0x7d, 0xec, 0x89, 0xc6, 0xa5, 0xa5, 0xa5, 0xa5, 0x8b, 0x55, 0xec, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfa, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0xec, 0x8b, 0x55, 0xf0, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0xf0, 0x8b, 0x55, 0xf4, 0x4a, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfa, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0xf4, 0x8b, 0x55, 0xf8, 0x4a, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xd0, 0x1, 0x45, 0xec, 0x8b, 0x45, 0xd4, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xd0, 0x1, 0x45, 0xf4, 0x8b, 0x45, 0xd4, 0x1, 0x45, 0xf8, 0x83, 0x7d, 0xec, 0, 0x7c, 0x6, 0x83, 0x7d, 0xf0, 0, 0x7d, 0x2, 0xeb, 0x9, 0x81, 0x7d, 0xf4, 0x80, 0x2, 0, 0, 0x7c, 0x2, 0xeb, 0x9, 0x81, 0x7d, 0xf8, 0xe0, 0x1, 0, 0, 0x7c, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x46, 0x5, 0, 0, 0xbb, 0x3a, 0x1e, 0x1a, 0x10, 0xba, 0x46, 0x1e, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xb8, 0xdf, 0x7, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xec, 0x3b, 0x45, 0xf4, 0x7f, 0x8, 0x8b, 0x45, 0xf0, 0x3b, 0x45, 0xf8, 0x7e, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x47, 0x5, 0, 0, 0xbb, 0x89, 0x1e, 0x1a, 0x10, 0xba, 0x95, 0x1e, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x84, 0xdf, 0x7, 0, 0x89, 0x45, 0xc8, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xe2, 0xe8, 0x8c, 0xf6, 0x7, 0, 0xe9, 0xbb, 0xfe, 0xff, 0xff, 0xb8, 0x20, 0x36, 0x1c, 0x10, 0xe8, 0x69, 0x4d, 0xfb, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100e7c7b, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x100e7c80, 0x5)   calld(sys_check_available_stack_size, 0x7e0cd); /* call 0x10165d52 */
    II(0x100e7c85, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e7c86, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e7c87, 0x1)   pushd(edx);                           /* push edx */
    II(0x100e7c88, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e7c89, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e7c8a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e7c8b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e7c8d, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x100e7c93, 0x5)   mov(eax, 0x101c3620);                 /* mov eax, 0x101c3620 */
    II(0x100e7c98, 0x5)   calld(my_3_get_count, -0x5c81d);      /* call 0x1008b480 */
    II(0x100e7c9d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100e7ca0, 0x5)   mov(eax, 0x26);                       /* mov eax, 0x26 */
    II(0x100e7ca5, 0x5)   calld(0x100e883d, 0xb93);             /* call 0x100e883d */
    II(0x100e7caa, 0x5)   mov(ecx, 0x6);                        /* mov ecx, 0x6 */
    II(0x100e7caf, 0x3)   lea(edi, ebp - 0x30);                 /* lea edi, [ebp-0x30] */
    II(0x100e7cb2, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x100e7cb4, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */
    II(0x100e7cb6, 0x2)   movsw_a32();                          /* movsw */
    II(0x100e7cb8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e7cba, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e7cbf, 0x5)   calld(0x1013ad71, 0x530ad);           /* call 0x1013ad71 */
    II(0x100e7cc4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e7cc6, 0x2)   jzd(0x100e7cdc, 0x14);                /* jz 0x100e7cdc */
    II(0x100e7cc8, 0x5)   mov(edx, 0x100e618d);                 /* mov edx, 0x100e618d */
    II(0x100e7ccd, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e7cd2, 0x5)   calld(0x100765d0, -0x71707);          /* call 0x100765d0 */
    II(0x100e7cd7, 0x5)   calld(0x100e603a, -0x1ca2);           /* call 0x100e603a */
l_0x100e7cdc:
    II(0x100e7cdc, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x100e7cdf, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100e7ce4, 0x6)   jzd(0x100e7e21, 0x137);               /* jz dword 0x100e7e21 */
    II(0x100e7cea, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100e7cee, 0x5)   mov(eax, 0x101c3620);                 /* mov eax, 0x101c3620 */
    II(0x100e7cf3, 0x5)   calld(0x100e84b8, 0x7c0);             /* call 0x100e84b8 */
    II(0x100e7cf8, 0x3)   lea(edi, ebp - 0x14);                 /* lea edi, [ebp-0x14] */
    II(0x100e7cfb, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x100e7cfd, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e7cfe, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e7cff, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e7d00, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e7d01, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100e7d04, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100e7d07, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e7d09, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e7d0c, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100e7d12, 0x6)   mov(edx, memd_a32(ds, 0x101c38fa));   /* mov edx, [0x101c38fa] */
    II(0x100e7d18, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e7d1b, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100e7d1d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100e7d20, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100e7d23, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100e7d26, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e7d28, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e7d2b, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100e7d31, 0x6)   mov(edx, memd_a32(ds, 0x101c38fc));   /* mov edx, [0x101c38fc] */
    II(0x100e7d37, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e7d3a, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100e7d3c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e7d3f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100e7d42, 0x1)   dec(edx);                             /* dec edx */
    II(0x100e7d43, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100e7d46, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e7d48, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e7d4b, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100e7d51, 0x6)   mov(edx, memd_a32(ds, 0x101c38fa));   /* mov edx, [0x101c38fa] */
    II(0x100e7d57, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e7d5a, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100e7d5c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100e7d5f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e7d62, 0x1)   dec(edx);                             /* dec edx */
    II(0x100e7d63, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100e7d66, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e7d68, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e7d6b, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100e7d71, 0x6)   mov(edx, memd_a32(ds, 0x101c38fc));   /* mov edx, [0x101c38fc] */
    II(0x100e7d77, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e7d7a, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100e7d7c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e7d7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100e7d82, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
    II(0x100e7d85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e7d88, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100e7d8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100e7d8e, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
    II(0x100e7d91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e7d94, 0x3)   add(memd_a32(ss, ebp - 0x8), eax);    /* add [ebp-0x8], eax */
    II(0x100e7d97, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100e7d9b, 0x2)   jld(0x100e7da3, 0x6);                 /* jl 0x100e7da3 */
    II(0x100e7d9d, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x100e7da1, 0x2)   jged(0x100e7da5, 0x2);                /* jge 0x100e7da5 */
l_0x100e7da3:
    II(0x100e7da3, 0x2)   jmpd(0x100e7dae, 0x9);                /* jmp 0x100e7dae */
l_0x100e7da5:
    II(0x100e7da5, 0x7)   cmp(memd_a32(ss, ebp - 0xc), 0x280);  /* cmp dword [ebp-0xc], 0x280 */
    II(0x100e7dac, 0x2)   jld(0x100e7db0, 0x2);                 /* jl 0x100e7db0 */
l_0x100e7dae:
    II(0x100e7dae, 0x2)   jmpd(0x100e7db9, 0x9);                /* jmp 0x100e7db9 */
l_0x100e7db0:
    II(0x100e7db0, 0x7)   cmp(memd_a32(ss, ebp - 0x8), 0x1e0);  /* cmp dword [ebp-0x8], 0x1e0 */
    II(0x100e7db7, 0x2)   jld(0x100e7dbb, 0x2);                 /* jl 0x100e7dbb */
l_0x100e7db9:
    II(0x100e7db9, 0x2)   jmpd(0x100e7dc4, 0x9);                /* jmp 0x100e7dc4 */
l_0x100e7dbb:
    II(0x100e7dbb, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x100e7dc2, 0x2)   jmpd(0x100e7ddd, 0x19);               /* jmp 0x100e7ddd */
l_0x100e7dc4:
    II(0x100e7dc4, 0x5)   mov(ecx, 0x546);                      /* mov ecx, 0x546 */
    II(0x100e7dc9, 0x5)   mov(ebx, 0x101a1e3a);                 /* mov ebx, 0x101a1e3a */ /* "drawmap.cpp" */
    II(0x100e7dce, 0x5)   mov(edx, 0x101a1e46);                 /* mov edx, 0x101a1e46 */ /* "rect.ulx >= 0 && rect.uly >= 0 && rect.lrx < 640 && rect.lry < 480" */
    II(0x100e7dd3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e7dd5, 0x5)   calld(sys_assert, 0x7dfb8);           /* call 0x10165d92 */
    II(0x100e7dda, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x100e7ddd:
    II(0x100e7ddd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100e7de0, 0x3)   cmp(eax, memd_a32(ss, ebp - 0xc));    /* cmp eax, [ebp-0xc] */
    II(0x100e7de3, 0x2)   jgd(0x100e7ded, 0x8);                 /* jg 0x100e7ded */
    II(0x100e7de5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e7de8, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x8));    /* cmp eax, [ebp-0x8] */
    II(0x100e7deb, 0x2)   jled(0x100e7def, 0x2);                /* jle 0x100e7def */
l_0x100e7ded:
    II(0x100e7ded, 0x2)   jmpd(0x100e7df8, 0x9);                /* jmp 0x100e7df8 */
l_0x100e7def:
    II(0x100e7def, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
    II(0x100e7df6, 0x2)   jmpd(0x100e7e11, 0x19);               /* jmp 0x100e7e11 */
l_0x100e7df8:
    II(0x100e7df8, 0x5)   mov(ecx, 0x547);                      /* mov ecx, 0x547 */
    II(0x100e7dfd, 0x5)   mov(ebx, 0x101a1e89);                 /* mov ebx, 0x101a1e89 */ /* "drawmap.cpp" */
    II(0x100e7e02, 0x5)   mov(edx, 0x101a1e95);                 /* mov edx, 0x101a1e95 */ /* "rect.ulx <= rect.lrx && rect.uly <= rect.lry" */
    II(0x100e7e07, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e7e09, 0x5)   calld(sys_assert, 0x7df84);           /* call 0x10165d92 */
    II(0x100e7e0e, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
l_0x100e7e11:
    II(0x100e7e11, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100e7e14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x100e7e17, 0x5)   calld(sys_display_draw_1, 0x7f68c);   /* call 0x101674a8 */
    II(0x100e7e1c, 0x5)   jmpd(0x100e7cdc, -0x145);             /* jmp 0x100e7cdc */
l_0x100e7e21:
    II(0x100e7e21, 0x5)   mov(eax, 0x101c3620);                 /* mov eax, 0x101c3620 */
    II(0x100e7e26, 0x5)   calld(0x1009cb94, -0x4b297);          /* call 0x1009cb94 */
    II(0x100e7e2b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e7e2d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e7e2e, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e7e2f, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e7e30, 0x1)   popd(edx);                            /* pop edx */
    II(0x100e7e31, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e7e32, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e7e33, 0x1)   retd();                               /* ret */
FUNC_END

