FUNC_BEGIN(0x100bccb3, 0x6aec233894dc2b15, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x95, 0x90, 0xa, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xd8, 0xe8, 0x85, 0x91, 0xfb, 0xff, 0x8d, 0x45, 0xdc, 0xe8, 0x9, 0x9e, 0xfb, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0xe8, 0x3, 0x70, 0xfb, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0x29, 0xc2, 0x89, 0xd0, 0xe8, 0xe6, 0x90, 0xa, 0, 0x66, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xf8, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x29, 0xc2, 0x89, 0xd0, 0xe8, 0xc9, 0x90, 0xa, 0, 0x66, 0x89, 0x45, 0xde, 0x8b, 0x45, 0xdc, 0x66, 0x3b, 0x45, 0xde, 0xf, 0x8e, 0xe8, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x50, 0x2, 0x7d, 0x9, 0xc7, 0x45, 0xec, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x10, 0x7d, 0xe, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xd8, 0xe8, 0xcb, 0xbd, 0xfc, 0xff, 0xf7, 0x5d, 0xec, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xde, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xe4, 0xff, 0x4d, 0xe8, 0x66, 0x83, 0x7d, 0xe8, 0xff, 0xf, 0x84, 0x83, 0, 0, 0, 0x8b, 0x45, 0xd8, 0x66, 0xff, 0x45, 0xd8, 0x8b, 0x45, 0xde, 0x1, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x45, 0xdc, 0x7c, 0xd, 0x8b, 0x45, 0xec, 0x66, 0x1, 0x45, 0xda, 0x8b, 0x45, 0xdc, 0x29, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x80, 0x38, 0, 0x75, 0x10, 0xf, 0xbf, 0x55, 0xda, 0xf, 0xbf, 0x45, 0xd8, 0xe8, 0x16, 0x6f, 0xfb, 0xff, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x55, 0xda, 0xf, 0xbf, 0x45, 0xd8, 0xe8, 0x6, 0x6f, 0xfb, 0xff, 0x31, 0xd2, 0x66, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xe0, 0x39, 0xc2, 0x75, 0x1a, 0xf, 0xbf, 0x55, 0xd8, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x63, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x80, 0x8, 0x4, 0xe9, 0x6f, 0xff, 0xff, 0xff, 0xe9, 0xe3, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x10, 0x7d, 0x9, 0xc7, 0x45, 0xec, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x50, 0x2, 0x7d, 0xe, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xd8, 0xe8, 0xe3, 0xbc, 0xfc, 0xff, 0xf7, 0x5d, 0xec, 0x8b, 0x45, 0xde, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xdc, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xe4, 0xff, 0x4d, 0xe8, 0x66, 0x83, 0x7d, 0xe8, 0xff, 0xf, 0x84, 0x83, 0, 0, 0, 0x8b, 0x45, 0xda, 0x66, 0xff, 0x45, 0xda, 0x8b, 0x45, 0xdc, 0x1, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x45, 0xde, 0x7c, 0xd, 0x8b, 0x45, 0xec, 0x66, 0x1, 0x45, 0xd8, 0x8b, 0x45, 0xde, 0x29, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x80, 0x38, 0, 0x75, 0x10, 0xf, 0xbf, 0x55, 0xda, 0xf, 0xbf, 0x45, 0xd8, 0xe8, 0x2e, 0x6e, 0xfb, 0xff, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x55, 0xda, 0xf, 0xbf, 0x45, 0xd8, 0xe8, 0x1e, 0x6e, 0xfb, 0xff, 0x31, 0xd2, 0x66, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xe0, 0x39, 0xc2, 0x75, 0x1a, 0xf, 0xbf, 0x55, 0xd8, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x63, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x80, 0x8, 0x4, 0xe9, 0x6f, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100bccb3, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100bccb8, 0x5)   calld(sys_check_available_stack_size, 0xa9095); /* call 0x10165d52 */
    II(0x100bccbd, 0x1)   pushd(esi);                           /* push esi */
    II(0x100bccbe, 0x1)   pushd(edi);                           /* push edi */
    II(0x100bccbf, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100bccc0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100bccc2, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100bccc8, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100bcccb, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100bccce, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100bccd1, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
//    II(0x100bccd4, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100bccd7, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100bccda, 0x5)   calld(0x10075e64, -0x46e7b);          /* call 0x10075e64 */
    II(0x100bccdf, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bcce2, 0x5)   calld(my_ctor_0x101b4184, -0x461f7);  /* call 0x10076af0 */
    II(0x100bcce7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bccea, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100bccec, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bccef, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bccf2, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bccf5, 0x5)   calld(0x10073cfd, -0x48ffd);          /* call 0x10073cfd */
    II(0x100bccfa, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100bccfd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bcd00, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bcd03, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bcd06, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bcd09, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100bcd0b, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100bcd0d, 0x5)   calld(/* sys */ 0x10165df8, 0xa90e6); /* call 0x10165df8 */
    II(0x100bcd12, 0x4)   mov(memw_a32(ss, ebp - 0x24), ax);    /* mov [ebp-0x24], ax */
    II(0x100bcd16, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bcd19, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100bcd1b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bcd1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bcd21, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bcd23, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bcd26, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100bcd28, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100bcd2a, 0x5)   calld(/* sys */ 0x10165df8, 0xa90c9); /* call 0x10165df8 */
    II(0x100bcd2f, 0x4)   mov(memw_a32(ss, ebp - 0x22), ax);    /* mov [ebp-0x22], ax */
    II(0x100bcd33, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100bcd36, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x22));    /* cmp ax, [ebp-0x22] */
    II(0x100bcd3a, 0x6)   jled(0x100bce28, 0xe8);               /* jle dword 0x100bce28 */
    II(0x100bcd40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bcd43, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x100bcd47, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bcd4a, 0x4)   cmp(dx, memw_a32(ds, eax + 0x2));     /* cmp dx, [eax+0x2] */
    II(0x100bcd4e, 0x2)   jged(0x100bcd59, 0x9);                /* jge 0x100bcd59 */
    II(0x100bcd50, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffffffff); /* mov dword [ebp-0x14], 0xffffffff */
    II(0x100bcd57, 0x2)   jmpd(0x100bcd60, 0x7);                /* jmp 0x100bcd60 */
l_0x100bcd59:
    II(0x100bcd59, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
l_0x100bcd60:
    II(0x100bcd60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bcd63, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100bcd66, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bcd69, 0x3)   cmp(dx, memw_a32(ds, eax));           /* cmp dx, [eax] */
    II(0x100bcd6c, 0x2)   jged(0x100bcd7c, 0xe);                /* jge 0x100bcd7c */
    II(0x100bcd6e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100bcd71, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100bcd74, 0x5)   calld(0x10088b44, -0x34235);          /* call 0x10088b44 */
    II(0x100bcd79, 0x3)   neg(memd_a32(ss, ebp - 0x14));        /* neg dword [ebp-0x14] */
l_0x100bcd7c:
    II(0x100bcd7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100bcd7f, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100bcd82, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x22)); /* movsx edx, word [ebp-0x22] */
    II(0x100bcd86, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100bcd88, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100bcd8b, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100bcd8d, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100bcd8f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x100bcd92:
    II(0x100bcd92, 0x3)   dec(memd_a32(ss, ebp - 0x18));        /* dec dword [ebp-0x18] */
    II(0x100bcd95, 0x5)   cmp(memw_a32(ss, ebp - 0x18), -0x1 /* 0xff */); /* cmp word [ebp-0x18], 0xff */
    II(0x100bcd9a, 0x6)   jzd(0x100bce23, 0x83);                /* jz dword 0x100bce23 */
    II(0x100bcda0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100bcda3, 0x4)   inc(memw_a32(ss, ebp - 0x28));        /* inc word [ebp-0x28] */
    II(0x100bcda7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x100bcdaa, 0x3)   add(memd_a32(ss, ebp - 0x1c), eax);   /* add [ebp-0x1c], eax */
    II(0x100bcdad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bcdb0, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x100bcdb4, 0x2)   jld(0x100bcdc3, 0xd);                 /* jl 0x100bcdc3 */
    II(0x100bcdb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100bcdb9, 0x4)   add(memw_a32(ss, ebp - 0x26), ax);    /* add [ebp-0x26], ax */
    II(0x100bcdbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100bcdc0, 0x3)   sub(memd_a32(ss, ebp - 0x1c), eax);   /* sub [ebp-0x1c], eax */
l_0x100bcdc3:
    II(0x100bcdc3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100bcdc7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bcdca, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100bcdcd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100bcdd1, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bcdd3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bcdd5, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100bcdd8, 0x2)   jnzd(0x100bcdea, 0x10);               /* jnz 0x100bcdea */
    II(0x100bcdda, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100bcdde, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100bcde2, 0x5)   calld(0x10073cfd, -0x490ea);          /* call 0x10073cfd */
    II(0x100bcde7, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100bcdea:
    II(0x100bcdea, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100bcdee, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100bcdf2, 0x5)   calld(0x10073cfd, -0x490fa);          /* call 0x10073cfd */
    II(0x100bcdf7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bcdf9, 0x3)   mov(dx, ax);                          /* mov dx, ax */
    II(0x100bcdfc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100bce00, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bce02, 0x2)   jnzd(0x100bce1e, 0x1a);               /* jnz 0x100bce1e */
    II(0x100bce04, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bce08, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100bce0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bce0e, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bce11, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bce13, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100bce17, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bce19, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bce1b, 0x3)   or_(memb_a32(ds, eax), 0x4);          /* or byte [eax], 0x4 */
l_0x100bce1e:
    II(0x100bce1e, 0x5)   jmpd(0x100bcd92, -0x91);              /* jmp 0x100bcd92 */
l_0x100bce23:
    II(0x100bce23, 0x5)   jmpd(0x100bcf0b, 0xe3);               /* jmp 0x100bcf0b */
l_0x100bce28:
    II(0x100bce28, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bce2b, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100bce2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bce31, 0x3)   cmp(dx, memw_a32(ds, eax));           /* cmp dx, [eax] */
    II(0x100bce34, 0x2)   jged(0x100bce3f, 0x9);                /* jge 0x100bce3f */
    II(0x100bce36, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffffffff); /* mov dword [ebp-0x14], 0xffffffff */
    II(0x100bce3d, 0x2)   jmpd(0x100bce46, 0x7);                /* jmp 0x100bce46 */
l_0x100bce3f:
    II(0x100bce3f, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
l_0x100bce46:
    II(0x100bce46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bce49, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x100bce4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bce50, 0x4)   cmp(dx, memw_a32(ds, eax + 0x2));     /* cmp dx, [eax+0x2] */
    II(0x100bce54, 0x2)   jged(0x100bce64, 0xe);                /* jge 0x100bce64 */
    II(0x100bce56, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100bce59, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100bce5c, 0x5)   calld(0x10088b44, -0x3431d);          /* call 0x10088b44 */
    II(0x100bce61, 0x3)   neg(memd_a32(ss, ebp - 0x14));        /* neg dword [ebp-0x14] */
l_0x100bce64:
    II(0x100bce64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x100bce67, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100bce6a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100bce6e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100bce70, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100bce73, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100bce75, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100bce77, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x100bce7a:
    II(0x100bce7a, 0x3)   dec(memd_a32(ss, ebp - 0x18));        /* dec dword [ebp-0x18] */
    II(0x100bce7d, 0x5)   cmp(memw_a32(ss, ebp - 0x18), -0x1 /* 0xff */); /* cmp word [ebp-0x18], 0xff */
    II(0x100bce82, 0x6)   jzd(0x100bcf0b, 0x83);                /* jz dword 0x100bcf0b */
    II(0x100bce88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x26));   /* mov eax, [ebp-0x26] */
    II(0x100bce8b, 0x4)   inc(memw_a32(ss, ebp - 0x26));        /* inc word [ebp-0x26] */
    II(0x100bce8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100bce92, 0x3)   add(memd_a32(ss, ebp - 0x1c), eax);   /* add [ebp-0x1c], eax */
    II(0x100bce95, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bce98, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x22));    /* cmp ax, [ebp-0x22] */
    II(0x100bce9c, 0x2)   jld(0x100bceab, 0xd);                 /* jl 0x100bceab */
    II(0x100bce9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100bcea1, 0x4)   add(memw_a32(ss, ebp - 0x28), ax);    /* add [ebp-0x28], ax */
    II(0x100bcea5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x100bcea8, 0x3)   sub(memd_a32(ss, ebp - 0x1c), eax);   /* sub [ebp-0x1c], eax */
l_0x100bceab:
    II(0x100bceab, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100bceaf, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bceb2, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100bceb5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100bceb9, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bcebb, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bcebd, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100bcec0, 0x2)   jnzd(0x100bced2, 0x10);               /* jnz 0x100bced2 */
    II(0x100bcec2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100bcec6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100bceca, 0x5)   calld(0x10073cfd, -0x491d2);          /* call 0x10073cfd */
    II(0x100bcecf, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100bced2:
    II(0x100bced2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100bced6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100bceda, 0x5)   calld(0x10073cfd, -0x491e2);          /* call 0x10073cfd */
    II(0x100bcedf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bcee1, 0x3)   mov(dx, ax);                          /* mov dx, ax */
    II(0x100bcee4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100bcee8, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bceea, 0x2)   jnzd(0x100bcf06, 0x1a);               /* jnz 0x100bcf06 */
    II(0x100bceec, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bcef0, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100bcef3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bcef6, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bcef9, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bcefb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100bceff, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bcf01, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bcf03, 0x3)   or_(memb_a32(ds, eax), 0x4);          /* or byte [eax], 0x4 */
l_0x100bcf06:
    II(0x100bcf06, 0x5)   jmpd(0x100bce7a, -0x91);              /* jmp 0x100bce7a */
l_0x100bcf0b:
    II(0x100bcf0b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100bcf0d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100bcf0e, 0x1)   popd(edi);                            /* pop edi */
    II(0x100bcf0f, 0x1)   popd(esi);                            /* pop esi */
    II(0x100bcf10, 0x1)   retd();                               /* ret */
FUNC_END

