FUNC_BEGIN(my_ctor_c12, 0x20498d0aae4dd43f, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xdc, 0xfc, 0xb, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xec, 0xff, 0x52, 0x14, 0xf, 0xbf, 0xc8, 0x8b, 0x5d, 0xf8, 0x8b, 0x45, 0xf8, 0xe8, 0xe5, 0x4c, 0xfe, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0xe8, 0x1b, 0xc6, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe8, 0xe8, 0x28, 0x53, 0xfe, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x13, 0xe8, 0x12, 0x51, 0xfe, 0xff, 0x83, 0xe8, 0x13, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x17, 0xe8, 0x7, 0xa, 0xfd, 0xff, 0x83, 0xe8, 0x17, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x2, 0x84, 0x4e, 0x1b, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x17, 0xe8, 0x3d, 0x2a, 0xfe, 0xff, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x1b, 0x1, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x1c, 0x1, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100a606c, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100a6071, 0x5)   calld(sys_check_available_stack_size, 0xbfcdc); /* call 0x10165d52 */
    II(0x100a6076, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a6077, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a6078, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a6079, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a607a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a607c, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100a6082, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a6085, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100a6088, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100a608b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a608e, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100a6091, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a6094, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a6097, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a609a, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100a609d, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100a60a0, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100a60a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a60a6, 0x5)   calld(0x1008ad90, -0x1b31b);          /* call 0x1008ad90 */
    II(0x100a60ab, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a60ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a60b1, 0x5)   calld(0x100a26d1, -0x39e5);           /* call 0x100a26d1 */
    II(0x100a60b6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a60b9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a60bc, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100a60bf, 0x5)   calld(0x1008b3ec, -0x1acd8);          /* call 0x1008b3ec */
    II(0x100a60c4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a60c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a60ca, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a60cd, 0x5)   calld(0x1008b1e4, -0x1aeee);          /* call 0x1008b1e4 */
    II(0x100a60d2, 0x3)   sub(eax, 0x13);                       /* sub eax, 0x13 */
    II(0x100a60d5, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a60d8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a60db, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a60de, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a60e1, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a60e4, 0x5)   calld(my_ctor_0x101b4184, -0x2f5f9);  /* call 0x10076af0 */
    II(0x100a60e9, 0x3)   sub(eax, 0x17);                       /* sub eax, 0x17 */
    II(0x100a60ec, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a60ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a60f2, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b4e84); /* mov dword [eax+0x2], 0x101b4e84 */
    II(0x100a60f9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a60fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a60ff, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a6102, 0x5)   calld(0x10088b44, -0x1d5c3);          /* call 0x10088b44 */
    II(0x100a6107, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a610a, 0x4)   mov(memb_a32(ds, eax + 0x1b), 0x1);   /* mov byte [eax+0x1b], 0x1 */
    II(0x100a610e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a6111, 0x4)   mov(memb_a32(ds, eax + 0x1c), 0x1);   /* mov byte [eax+0x1c], 0x1 */
    II(0x100a6115, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a6118, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100a611b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100a611e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a6120, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a6121, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a6122, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a6123, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a6124, 0x1)   retd();                               /* ret */
FUNC_END

