FUNC_BEGIN(0x1011fb9d, 0x50570b4b2f5ea856, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xab, 0x61, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x8b, 0x15, 0xe2, 0x52, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x42, 0xbb, 0x3, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x66, 0x89, 0x15, 0xe4, 0x52, 0x1c, 0x10, 0x66, 0xa1, 0xe4, 0x52, 0x1c, 0x10, 0x89, 0x45, 0xfc, 0xeb, 0x6b, 0xe8, 0x1e, 0xae, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x33, 0xae, 0xfa, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x6, 0x7e, 0x1a, 0x10, 0xe8, 0x26, 0x61, 0xff, 0xff, 0xe9, 0x70, 0, 0, 0, 0xe8, 0xf9, 0xad, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xe, 0xae, 0xfa, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x19, 0x7e, 0x1a, 0x10, 0xe8, 0x1, 0x61, 0xff, 0xff, 0xeb, 0x4e, 0xe8, 0xd7, 0xad, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xec, 0xad, 0xfa, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x38, 0x7e, 0x1a, 0x10, 0xe8, 0xdf, 0x60, 0xff, 0xff, 0xeb, 0x2c, 0xeb, 0x2a, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0x1, 0x72, 0x10, 0x66, 0x83, 0x7d, 0xf8, 0x1, 0x76, 0xa6, 0x66, 0x83, 0x7d, 0xf8, 0x2, 0x74, 0xc1, 0xeb, 0xe1, 0x66, 0x83, 0x7d, 0xf8, 0, 0xf, 0x84, 0x6d, 0xff, 0xff, 0xff, 0xeb, 0xd4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1011fb9d, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1011fba2, 0x5)   calld(sys_check_available_stack_size, 0x461ab); /* call 0x10165d52 */
    II(0x1011fba7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011fba8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011fba9, 0x1)   pushd(edx);                           /* push edx */
    II(0x1011fbaa, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011fbab, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011fbac, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011fbad, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011fbaf, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x1011fbb5, 0x6)   mov(edx, memd_a32(ds, 0x101c52e2));   /* mov edx, [0x101c52e2] */
    II(0x1011fbbb, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011fbbe, 0x1)   inc(edx);                             /* inc edx */
    II(0x1011fbbf, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x1011fbc4, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1011fbc6, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1011fbc9, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1011fbcb, 0x7)   mov(memw_a32(ds, 0x101c52e4), dx);    /* mov [0x101c52e4], dx */
    II(0x1011fbd2, 0x6)   mov(ax, memw_a32(ds, 0x101c52e4));    /* mov ax, [0x101c52e4] */
    II(0x1011fbd8, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1011fbdb, 0x2)   jmpd(0x1011fc48, 0x6b);               /* jmp 0x1011fc48 */
l_0x1011fbdd:
    II(0x1011fbdd, 0x5)   calld(0x100caa00, -0x551e2);          /* call 0x100caa00 */
    II(0x1011fbe2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011fbe7, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011fbe8, 0x5)   calld(0x100caa20, -0x551cd);          /* call 0x100caa20 */
    II(0x1011fbed, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1011fbef, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011fbf1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011fbf3, 0x5)   mov(eax, 0x101a7e06);                 /* mov eax, 0x101a7e06 */ /* "No path debugging." */
    II(0x1011fbf8, 0x5)   calld(0x10115d23, -0x9eda);           /* call 0x10115d23 */
    II(0x1011fbfd, 0x5)   jmpd(0x1011fc72, 0x70);               /* jmp 0x1011fc72 */
l_0x1011fc02:
    II(0x1011fc02, 0x5)   calld(0x100caa00, -0x55207);          /* call 0x100caa00 */
    II(0x1011fc07, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011fc0c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011fc0d, 0x5)   calld(0x100caa20, -0x551f2);          /* call 0x100caa20 */
    II(0x1011fc12, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1011fc14, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011fc16, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011fc18, 0x5)   mov(eax, 0x101a7e19);                 /* mov eax, 0x101a7e19 */ /* "Show path generator statistics" */
    II(0x1011fc1d, 0x5)   calld(0x10115d23, -0x9eff);           /* call 0x10115d23 */
    II(0x1011fc22, 0x2)   jmpd(0x1011fc72, 0x4e);               /* jmp 0x1011fc72 */
l_0x1011fc24:
    II(0x1011fc24, 0x5)   calld(0x100caa00, -0x55229);          /* call 0x100caa00 */
    II(0x1011fc29, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011fc2e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011fc2f, 0x5)   calld(0x100caa20, -0x55214);          /* call 0x100caa20 */
    II(0x1011fc34, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1011fc36, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011fc38, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011fc3a, 0x5)   mov(eax, 0x101a7e38);                 /* mov eax, 0x101a7e38 */ /* "Draw path searches." */
    II(0x1011fc3f, 0x5)   calld(0x10115d23, -0x9f21);           /* call 0x10115d23 */
    II(0x1011fc44, 0x2)   jmpd(0x1011fc72, 0x2c);               /* jmp 0x1011fc72 */
l_0x1011fc46:
    II(0x1011fc46, 0x2)   jmpd(0x1011fc72, 0x2a);               /* jmp 0x1011fc72 */
l_0x1011fc48:
    II(0x1011fc48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011fc4b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011fc4e, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x1);    /* cmp word [ebp-0x8], 0x1 */
    II(0x1011fc53, 0x2)   jbd(0x1011fc65, 0x10);                /* jb 0x1011fc65 */
    II(0x1011fc55, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x1);    /* cmp word [ebp-0x8], 0x1 */
    II(0x1011fc5a, 0x2)   jbed(0x1011fc02, -0x5a);              /* jbe 0x1011fc02 */
    II(0x1011fc5c, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x2);    /* cmp word [ebp-0x8], 0x2 */
    II(0x1011fc61, 0x2)   jzd(0x1011fc24, -0x3f);               /* jz 0x1011fc24 */
    II(0x1011fc63, 0x2)   jmpd(0x1011fc46, -0x1f);              /* jmp 0x1011fc46 */
l_0x1011fc65:
    II(0x1011fc65, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0);      /* cmp word [ebp-0x8], 0x0 */
    II(0x1011fc6a, 0x6)   jzd(0x1011fbdd, -0x93);               /* jz dword 0x1011fbdd */
    II(0x1011fc70, 0x2)   jmpd(0x1011fc46, -0x2c);              /* jmp 0x1011fc46 */
l_0x1011fc72:
    II(0x1011fc72, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011fc74, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011fc75, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011fc76, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011fc77, 0x1)   popd(edx);                            /* pop edx */
    II(0x1011fc78, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011fc79, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011fc7a, 0x1)   retd();                               /* ret */
FUNC_END

