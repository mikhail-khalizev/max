FUNC_BEGIN(0x100d6751, 0x584391261769361b, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xf7, 0xf5, 0x8, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x13, 0x98, 0x5f, 0x1b, 0x10, 0x8b, 0x45, 0xf0, 0xc7, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x4, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x6, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x8, 0x8b, 0x45, 0x10, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0xa, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0xc, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x12, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x10, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100d6751, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100d6756, 0x5)   calld(sys_check_available_stack_size, 0x8f5f7); /* call 0x10165d52 */
    II(0x100d675b, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d675c, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d675d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d675e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d6760, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100d6766, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d6769, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100d676c, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100d676f, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
//    II(0x100d6772, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d6775, 0x7)   mov(memd_a32(ds, eax + 0x13), 0x101b5f98); /* mov dword [eax+0x13], 0x101b5f98 */
    II(0x100d677c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d677f, 0x6)   mov(memd_a32(ds, eax), 0);            /* mov dword [eax], 0x0 */
    II(0x100d6785, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d6788, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d678b, 0x4)   mov(memw_a32(ds, edx + 0x4), ax);     /* mov [edx+0x4], ax */
    II(0x100d678f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d6792, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d6795, 0x4)   mov(memw_a32(ds, edx + 0x6), ax);     /* mov [edx+0x6], ax */
    II(0x100d6799, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d679c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d679f, 0x4)   mov(memw_a32(ds, edx + 0x8), ax);     /* mov [edx+0x8], ax */
    II(0x100d67a3, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d67a6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d67a9, 0x4)   mov(memw_a32(ds, edx + 0xa), ax);     /* mov [edx+0xa], ax */
    II(0x100d67ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d67b0, 0x7)   mov(memd_a32(ds, eax + 0xc), 0);      /* mov dword [eax+0xc], 0x0 */
    II(0x100d67b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d67ba, 0x4)   mov(memb_a32(ds, eax + 0x12), 0);     /* mov byte [eax+0x12], 0x0 */
    II(0x100d67be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d67c1, 0x6)   mov(memw_a32(ds, eax + 0x10), 0xffff); /* mov word [eax+0x10], 0xffff */
    II(0x100d67c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d67ca, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100d67cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d67d0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d67d2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d67d3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d67d4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d67d5, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

