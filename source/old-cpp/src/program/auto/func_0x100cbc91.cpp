FUNC_BEGIN(0x100cbc91, 0x847242e0f4c09d39, 0x20, ({0x68, 0x5c, 0, 0, 0, 0xe8, 0xb7, 0xa0, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x44, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0x42, 0xa8, 0xfa, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x9d, 0xea, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x9b, 0xf1, 0xfb, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc1, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x18, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x49, 0xa6, 0xfa, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x41, 0xa7, 0xfa, 0xff, 0xeb, 0x16, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x31, 0xa6, 0xfa, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x29, 0xa7, 0xfa, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xdb, 0xae, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x4a, 0xf0, 0x6, 0, 0x84, 0xc0, 0x74, 0x49, 0x8d, 0x45, 0xf0, 0xe8, 0x6d, 0xa6, 0xfa, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x12, 0x8d, 0x45, 0xf0, 0xe8, 0x53, 0xa6, 0xfa, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0x19, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x59, 0xce, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xff, 0xa1, 0xfa, 0xff, 0xe9, 0xc6, 0x1, 0, 0, 0xeb, 0xa1, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x7a, 0xae, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xe9, 0xef, 0x6, 0, 0x84, 0xc0, 0xf, 0x84, 0x85, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x2c, 0xf0, 0xfb, 0xff, 0xe8, 0xf3, 0xef, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x50, 0x9, 0x75, 0x38, 0x8d, 0x45, 0xe8, 0xe8, 0x14, 0xf0, 0xfb, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe4, 0xff, 0x52, 0x20, 0x3c, 0x9, 0x74, 0x1b, 0x8d, 0x45, 0xe8, 0xe8, 0xf9, 0xef, 0xfb, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe0, 0xff, 0x52, 0x20, 0x3c, 0x8, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x13, 0x8d, 0x45, 0xe8, 0xe8, 0xe, 0xf0, 0xfb, 0xff, 0xe8, 0xd5, 0x6, 0xfd, 0xff, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0x19, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xbb, 0xcd, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x61, 0xa1, 0xfa, 0xff, 0xe9, 0x28, 0x1, 0, 0, 0xe9, 0x61, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x54, 0xa7, 0xfa, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x43, 0xa7, 0xfa, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xdc, 0xe8, 0x6d, 0xac, 0xfa, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc1, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x34, 0x8b, 0x4d, 0xf8, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xd8, 0xe8, 0x7, 0xa0, 0xfa, 0xff, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x70, 0x7, 0xc1, 0xfe, 0x10, 0x69, 0xf6, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x44, 0x27, 0xff, 0xff, 0xe9, 0xa1, 0, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xd4, 0xe8, 0x15, 0xf2, 0xfb, 0xff, 0x89, 0x45, 0xd0, 0x80, 0x65, 0xf4, 0xfe, 0xb8, 0x1e, 0, 0, 0, 0xe8, 0x60, 0x9f, 0x9, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x46, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xba, 0xa6, 0xfa, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xa9, 0xa6, 0xfa, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0xd3, 0xab, 0xfa, 0xff, 0x89, 0xc1, 0x8b, 0x5d, 0xf8, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xcc, 0xe8, 0xdb, 0xc8, 0xfc, 0xff, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xbc, 0x8b, 0x55, 0xbc, 0x8d, 0x45, 0xd4, 0xe8, 0xde, 0xf0, 0xfb, 0xff, 0x8d, 0x45, 0xd4, 0xe8, 0x76, 0xf0, 0xfb, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x36, 0x8e, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x58, 0xcc, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x8e, 0xcc, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x34, 0xa0, 0xfa, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100cbc91, 0x5)   pushd(0x5c);                          /* push dword 0x5c */
    II(0x100cbc96, 0x5)   calld(sys_check_available_stack_size, 0x9a0b7); /* call 0x10165d52 */
    II(0x100cbc9b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100cbc9c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100cbc9d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100cbc9e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100cbc9f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100cbca0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100cbca2, 0x6)   sub(esp, 0x44);                       /* sub esp, 0x44 */
    II(0x100cbca8, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100cbcab, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100cbcae, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100cbcb2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cbcb5, 0x5)   calld(0x100764fc, -0x557be);          /* call 0x100764fc */
    II(0x100cbcba, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100cbcbd, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100cbcc1, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100cbcc6, 0x5)   calld(0x1008a768, -0x41563);          /* call 0x1008a768 */
    II(0x100cbccb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cbccd, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbcd0, 0x5)   calld(0x1008ae70, -0x40e65);          /* call 0x1008ae70 */
    II(0x100cbcd5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100cbcd9, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100cbcdc, 0x7)   test(memb_a32(ds, eax + 0x101c81c1), 0x2); /* test byte [eax+0x101c81c1], 0x2 */
    II(0x100cbce3, 0x2)   jzd(0x100cbcfd, 0x18);                /* jz 0x100cbcfd */
    II(0x100cbce5, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100cbcea, 0x5)   calld(0x10076338, -0x559b7);          /* call 0x10076338 */
    II(0x100cbcef, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100cbcf2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cbcf4, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100cbcf6, 0x5)   calld(0x1007643c, -0x558bf);          /* call 0x1007643c */
    II(0x100cbcfb, 0x2)   jmpd(0x100cbd13, 0x16);               /* jmp 0x100cbd13 */
l_0x100cbcfd:
    II(0x100cbcfd, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100cbd02, 0x5)   calld(0x10076338, -0x559cf);          /* call 0x10076338 */
    II(0x100cbd07, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100cbd0a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cbd0c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100cbd0e, 0x5)   calld(0x1007643c, -0x558d7);          /* call 0x1007643c */
l_0x100cbd13:
    II(0x100cbd13, 0x2)   jmpd(0x100cbd1d, 0x8);                /* jmp 0x100cbd1d */
l_0x100cbd15:
    II(0x100cbd15, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cbd18, 0x5)   calld(0x10076bf8, -0x55125);          /* call 0x10076bf8 */
l_0x100cbd1d:
    II(0x100cbd1d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbd1f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cbd22, 0x5)   calld(0x1013ad71, 0x6f04a);           /* call 0x1013ad71 */
    II(0x100cbd27, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cbd29, 0x2)   jzd(0x100cbd74, 0x49);                /* jz 0x100cbd74 */
    II(0x100cbd2b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cbd2e, 0x5)   calld(0x100763a0, -0x55993);          /* call 0x100763a0 */
    II(0x100cbd33, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbd35, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100cbd38, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cbd3b, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100cbd3e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100cbd41, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100cbd43, 0x2)   jnzd(0x100cbd57, 0x12);               /* jnz 0x100cbd57 */
    II(0x100cbd45, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cbd48, 0x5)   calld(0x100763a0, -0x559ad);          /* call 0x100763a0 */
    II(0x100cbd4d, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100cbd51, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100cbd55, 0x2)   jzd(0x100cbd59, 0x2);                 /* jz 0x100cbd59 */
l_0x100cbd57:
    II(0x100cbd57, 0x2)   jmpd(0x100cbd72, 0x19);               /* jmp 0x100cbd72 */
l_0x100cbd59:
    II(0x100cbd59, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbd5b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbd5e, 0x5)   calld(0x10088bbc, -0x431a7);          /* call 0x10088bbc */
    II(0x100cbd63, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbd65, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cbd68, 0x5)   calld(0x10075f6c, -0x55e01);          /* call 0x10075f6c */
    II(0x100cbd6d, 0x5)   jmpd(0x100cbf38, 0x1c6);              /* jmp 0x100cbf38 */
l_0x100cbd72:
    II(0x100cbd72, 0x2)   jmpd(0x100cbd15, -0x5f);              /* jmp 0x100cbd15 */
l_0x100cbd74:
    II(0x100cbd74, 0x2)   jmpd(0x100cbd7e, 0x8);                /* jmp 0x100cbd7e */
l_0x100cbd76:
    II(0x100cbd76, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbd79, 0x5)   calld(0x10076bf8, -0x55186);          /* call 0x10076bf8 */
l_0x100cbd7e:
    II(0x100cbd7e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbd80, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbd83, 0x5)   calld(0x1013ad71, 0x6efe9);           /* call 0x1013ad71 */
    II(0x100cbd88, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cbd8a, 0x6)   jzd(0x100cbe15, 0x85);                /* jz dword 0x100cbe15 */
    II(0x100cbd90, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbd93, 0x5)   calld(0x1008adc4, -0x40fd4);          /* call 0x1008adc4 */
    II(0x100cbd98, 0x5)   calld(0x1008ad90, -0x4100d);          /* call 0x1008ad90 */
    II(0x100cbd9d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cbd9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cbda2, 0x4)   cmp(dx, memw_a32(ds, eax + 0x9));     /* cmp dx, [eax+0x9] */
    II(0x100cbda6, 0x2)   jnzd(0x100cbde0, 0x38);               /* jnz 0x100cbde0 */
    II(0x100cbda8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbdab, 0x5)   calld(0x1008adc4, -0x40fec);          /* call 0x1008adc4 */
    II(0x100cbdb0, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100cbdb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100cbdb6, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100cbdb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100cbdbc, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100cbdbf, 0x2)   cmp(al, 0x9);                         /* cmp al, 0x9 */
    II(0x100cbdc1, 0x2)   jzd(0x100cbdde, 0x1b);                /* jz 0x100cbdde */
    II(0x100cbdc3, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbdc6, 0x5)   calld(0x1008adc4, -0x41007);          /* call 0x1008adc4 */
    II(0x100cbdcb, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100cbdce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100cbdd1, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100cbdd4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100cbdd7, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100cbdda, 0x2)   cmp(al, 0x8);                         /* cmp al, 0x8 */
    II(0x100cbddc, 0x2)   jnzd(0x100cbde0, 0x2);                /* jnz 0x100cbde0 */
l_0x100cbdde:
    II(0x100cbdde, 0x2)   jmpd(0x100cbde2, 0x2);                /* jmp 0x100cbde2 */
l_0x100cbde0:
    II(0x100cbde0, 0x2)   jmpd(0x100cbdf5, 0x13);               /* jmp 0x100cbdf5 */
l_0x100cbde2:
    II(0x100cbde2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbde5, 0x5)   calld(0x1008adf8, -0x40ff2);          /* call 0x1008adf8 */
    II(0x100cbdea, 0x5)   calld(0x1009c4c4, -0x2f92b);          /* call 0x1009c4c4 */
    II(0x100cbdef, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100cbdf3, 0x2)   jzd(0x100cbdf7, 0x2);                 /* jz 0x100cbdf7 */
l_0x100cbdf5:
    II(0x100cbdf5, 0x2)   jmpd(0x100cbe10, 0x19);               /* jmp 0x100cbe10 */
l_0x100cbdf7:
    II(0x100cbdf7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbdf9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbdfc, 0x5)   calld(0x10088bbc, -0x43245);          /* call 0x10088bbc */
    II(0x100cbe01, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbe03, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cbe06, 0x5)   calld(0x10075f6c, -0x55e9f);          /* call 0x10075f6c */
    II(0x100cbe0b, 0x5)   jmpd(0x100cbf38, 0x128);              /* jmp 0x100cbf38 */
l_0x100cbe10:
    II(0x100cbe10, 0x5)   jmpd(0x100cbd76, -0x9f);              /* jmp 0x100cbd76 */
l_0x100cbe15:
    II(0x100cbe15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cbe18, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cbe1b, 0x5)   calld(0x10076574, -0x558ac);          /* call 0x10076574 */
    II(0x100cbe20, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100cbe23, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100cbe26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cbe29, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cbe2c, 0x5)   calld(0x10076574, -0x558bd);          /* call 0x10076574 */
    II(0x100cbe31, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100cbe34, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100cbe37, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100cbe3a, 0x5)   calld(0x10076aac, -0x55393);          /* call 0x10076aac */
    II(0x100cbe3f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100cbe43, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100cbe46, 0x7)   test(memb_a32(ds, eax + 0x101c81c1), 0x2); /* test byte [eax+0x101c81c1], 0x2 */
    II(0x100cbe4d, 0x2)   jzd(0x100cbe83, 0x34);                /* jz 0x100cbe83 */
    II(0x100cbe4f, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x100cbe52, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100cbe55, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100cbe58, 0x5)   calld(0x10075e64, -0x55ff9);          /* call 0x10075e64 */
    II(0x100cbe5d, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100cbe5f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100cbe63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cbe66, 0x3)   mov(esi, memd_a32(ds, eax + 0x7));    /* mov esi, [eax+0x7] */
    II(0x100cbe69, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x100cbe6c, 0x6)   imul(esi, esi, 0xc5);                 /* imul esi, esi, 0xc5 */
    II(0x100cbe72, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100cbe77, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100cbe79, 0x5)   calld(0x100be5c2, -0xd8bc);           /* call 0x100be5c2 */
    II(0x100cbe7e, 0x5)   jmpd(0x100cbf24, 0xa1);               /* jmp 0x100cbf24 */
l_0x100cbe83:
    II(0x100cbe83, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100cbe87, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100cbe8a, 0x5)   calld(my_ctor_0x101b3b58, -0x40deb);  /* call 0x1008b0a4 */
    II(0x100cbe8f, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100cbe92, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100cbe96, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x100cbe9b, 0x5)   calld(sys_new, 0x99f60);              /* call 0x10165e00 */
    II(0x100cbea0, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x100cbea3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100cbea6, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100cbea9, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x100cbead, 0x2)   jzd(0x100cbef5, 0x46);                /* jz 0x100cbef5 */
    II(0x100cbeaf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cbeb2, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cbeb5, 0x5)   calld(0x10076574, -0x55946);          /* call 0x10076574 */
    II(0x100cbeba, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100cbebd, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100cbec0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cbec3, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cbec6, 0x5)   calld(0x10076574, -0x55957);          /* call 0x10076574 */
    II(0x100cbecb, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100cbece, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100cbed1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100cbed4, 0x5)   calld(0x10076aac, -0x5542d);          /* call 0x10076aac */
    II(0x100cbed9, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100cbedb, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100cbede, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100cbee2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100cbee5, 0x5)   calld(0x100987c5, -0x33725);          /* call 0x100987c5 */
    II(0x100cbeea, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100cbeed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100cbef0, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100cbef3, 0x2)   jmpd(0x100cbefb, 0x6);                /* jmp 0x100cbefb */
l_0x100cbef5:
    II(0x100cbef5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100cbef8, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x100cbefb:
    II(0x100cbefb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x100cbefe, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100cbf01, 0x5)   calld(0x1008afe4, -0x40f22);          /* call 0x1008afe4 */
    II(0x100cbf06, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100cbf09, 0x5)   calld(0x1008af84, -0x40f8a);          /* call 0x1008af84 */
    II(0x100cbf0e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cbf10, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100cbf15, 0x5)   calld(0x100a4d50, -0x271ca);          /* call 0x100a4d50 */
    II(0x100cbf1a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbf1c, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100cbf1f, 0x5)   calld(0x10088b7c, -0x433a8);          /* call 0x10088b7c */
l_0x100cbf24:
    II(0x100cbf24, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbf26, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100cbf29, 0x5)   calld(0x10088bbc, -0x43372);          /* call 0x10088bbc */
    II(0x100cbf2e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cbf30, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cbf33, 0x5)   calld(0x10075f6c, -0x55fcc);          /* call 0x10075f6c */
l_0x100cbf38:
    II(0x100cbf38, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100cbf3a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100cbf3b, 0x1)   popd(edi);                            /* pop edi */
    II(0x100cbf3c, 0x1)   popd(esi);                            /* pop esi */
    II(0x100cbf3d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100cbf3e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100cbf3f, 0x1)   retd();                               /* ret */
FUNC_END

