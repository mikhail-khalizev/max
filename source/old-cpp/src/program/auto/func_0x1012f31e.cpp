FUNC_BEGIN(0x1012f31e, 0x1bc00854b729938f, 0x20, ({0x68, 0x84, 0, 0, 0, 0xe8, 0x2a, 0x6a, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x50, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x55, 0xfc, 0x8b, 0x82, 0xde, 0, 0, 0, 0xe8, 0xdd, 0x5b, 0xfa, 0xff, 0x98, 0x8b, 0x55, 0xfc, 0x8b, 0x5a, 0x3a, 0xc1, 0xfb, 0x10, 0x8d, 0x50, 0xec, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xe0, 0x8b, 0x55, 0xfc, 0x8b, 0x82, 0xde, 0, 0, 0, 0xe8, 0x84, 0x5b, 0xfa, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0xee, 0xbf, 0xf5, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xfc, 0x8b, 0x48, 0x3a, 0xc1, 0xf9, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x42, 0x30, 0xc1, 0xf8, 0x10, 0x1, 0xc8, 0x89, 0xda, 0xe8, 0xec, 0xa3, 0xf5, 0xff, 0x89, 0x45, 0xf8, 0x8d, 0x55, 0xc4, 0x8b, 0x45, 0xfc, 0xe8, 0x6b, 0x76, 0xfa, 0xff, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x9c, 0xae, 0x3, 0, 0x81, 0x45, 0xf0, 0x91, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x82, 0xde, 0, 0, 0, 0xe8, 0x93, 0x5b, 0xfa, 0xff, 0xf, 0xbf, 0xd0, 0x81, 0xea, 0x91, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x89, 0x45, 0xec, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x7d, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x5f, 0xe8, 0x4, 0x5f, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0xa0, 0xb4, 0x1b, 0x10, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x40, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x6f, 0x5a, 0xfa, 0xff, 0x98, 0x50, 0xf, 0xbf, 0x4d, 0xf0, 0xf, 0xbf, 0x5d, 0xe4, 0xc1, 0xe3, 0x2, 0x8b, 0x9b, 0x90, 0xb4, 0x1b, 0x10, 0xf, 0xbf, 0x55, 0xd4, 0x8b, 0x45, 0xda, 0xe8, 0x79, 0xa6, 0xfb, 0xff, 0x8b, 0x45, 0xec, 0x1, 0x45, 0xf0, 0xe9, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x8b, 0x82, 0xde, 0, 0, 0, 0xe8, 0x37, 0x5a, 0xfa, 0xff, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xe0, 0x83, 0xea, 0x28, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x83, 0xc3, 0x14, 0x1, 0xd8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x32, 0x89, 0x45, 0xe8, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xf8, 0xf, 0x8d, 0x1f, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x23, 0x5a, 0xfa, 0xff, 0x89, 0x45, 0xf0, 0xb8, 0xa2, 0, 0, 0, 0x50, 0xb8, 0x8c, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0xf, 0xbf, 0x4d, 0xf0, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0x34, 0xbd, 0xf5, 0xff, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xd4, 0x8b, 0x45, 0xda, 0xe8, 0xd9, 0xc2, 0xff, 0xff, 0x81, 0x45, 0xf0, 0x91, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xad, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0x8b, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0xa0, 0xb4, 0x1b, 0x10, 0xf, 0xbf, 0x4d, 0xd4, 0xf, 0xbf, 0x55, 0xec, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x83, 0xc0, 0xf, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x45, 0xe4, 0x69, 0xf0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0xa8, 0xbc, 0xf5, 0xff, 0xf, 0xbf, 0, 0x1, 0xc0, 0x1, 0xc6, 0x8b, 0xb6, 0xe7, 0xa5, 0x1c, 0x10, 0xc1, 0xfe, 0x10, 0xf, 0xbf, 0x45, 0xf0, 0x8b, 0x7d, 0xda, 0x1, 0xc7, 0xf, 0xbf, 0x55, 0xec, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x1, 0xc7, 0x89, 0x7d, 0xc0, 0xf, 0xbf, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xd4, 0x83, 0xc0, 0xb, 0xf, 0xaf, 0xc2, 0x8b, 0x55, 0xc0, 0x83, 0xc2, 0xf, 0x1, 0xd0, 0x89, 0xf2, 0xe8, 0x90, 0xc0, 0xff, 0xff, 0x8b, 0x45, 0xec, 0x1, 0x45, 0xf0, 0xe9, 0x40, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xe0, 0x1, 0x45, 0xf4, 0xe9, 0xce, 0xfe, 0xff, 0xff, 0xe8, 0x1, 0x5c, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x30, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x6, 0xc6, 0x45, 0xb8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xb8, 0, 0x31, 0xd2, 0x8a, 0x55, 0xb8, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xce, 0, 0, 0, 0x8b, 0x5d, 0xbc, 0xe8, 0x64, 0x4, 0xfa, 0xff, 0xe8, 0xc7, 0x5b, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x30, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3a, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0x24, 0xbd, 0xf5, 0xff, 0x98, 0x39, 0xc2, 0x7d, 0x6, 0xc6, 0x45, 0xb0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xb0, 0, 0x31, 0xd2, 0x8a, 0x55, 0xb0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xd2, 0, 0, 0, 0x8b, 0x5d, 0xb4, 0xe8, 0x13, 0x4, 0xfa, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1012f31e, 0x5)   pushd(0x84);                          /* push dword 0x84 */
    II(0x1012f323, 0x5)   calld(sys_check_available_stack_size, 0x36a2a); /* call 0x10165d52 */
    II(0x1012f328, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012f329, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012f32a, 0x1)   pushd(edx);                           /* push edx */
    II(0x1012f32b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012f32c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012f32d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012f32e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012f330, 0x6)   sub(esp, 0x50);                       /* sub esp, 0x50 */
    II(0x1012f336, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1012f339, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012f33c, 0x6)   mov(eax, memd_a32(ds, edx + 0xde));   /* mov eax, [edx+0xde] */
    II(0x1012f342, 0x5)   calld(0x100d4f24, -0x5a423);          /* call 0x100d4f24 */
    II(0x1012f347, 0x1)   cwde();                               /* cwde */
    II(0x1012f348, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012f34b, 0x3)   mov(ebx, memd_a32(ds, edx + 0x3a));   /* mov ebx, [edx+0x3a] */
    II(0x1012f34e, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012f351, 0x3)   lea(edx, eax - 0x14);                 /* lea edx, [eax-0x14] */
    II(0x1012f354, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012f356, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012f359, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012f35b, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1012f35e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012f361, 0x6)   mov(eax, memd_a32(ds, edx + 0xde));   /* mov eax, [edx+0xde] */
    II(0x1012f367, 0x5)   calld(0x100d4ef0, -0x5a47c);          /* call 0x100d4ef0 */
    II(0x1012f36c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012f36f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f372, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x1012f375, 0x5)   calld(my_2_get_count, -0xa4012);      /* call 0x1008b368 */
    II(0x1012f37a, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1012f37d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f380, 0x3)   mov(ecx, memd_a32(ds, eax + 0x3a));   /* mov ecx, [eax+0x3a] */
    II(0x1012f383, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1012f386, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012f389, 0x3)   mov(eax, memd_a32(ds, edx + 0x30));   /* mov eax, [edx+0x30] */
    II(0x1012f38c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012f38f, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x1012f391, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1012f393, 0x5)   calld(my_min, -0xa5c14);              /* call 0x10089784 */
    II(0x1012f398, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1012f39b, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x1012f39e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f3a1, 0x5)   calld(0x100d6a11, -0x58995);          /* call 0x100d6a11 */
    II(0x1012f3a6, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1012f3ab, 0x5)   calld(/* sys */ 0x1016a24c, 0x3ae9c); /* call 0x1016a24c */
    II(0x1012f3b0, 0x7)   add(memd_a32(ss, ebp - 0x10), 0x91);  /* add dword [ebp-0x10], 0x91 */
    II(0x1012f3b7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012f3ba, 0x6)   mov(eax, memd_a32(ds, edx + 0xde));   /* mov eax, [edx+0xde] */
    II(0x1012f3c0, 0x5)   calld(0x100d4f58, -0x5a46d);          /* call 0x100d4f58 */
    II(0x1012f3c5, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012f3c8, 0x6)   sub(edx, 0x91);                       /* sub edx, 0x91 */
    II(0x1012f3ce, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012f3d0, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012f3d3, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1012f3d6, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x1012f3d8, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x1012f3db, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1012f3de, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1012f3e5, 0x2)   jmpd(0x1012f3ed, 0x6);                /* jmp 0x1012f3ed */
l_0x1012f3e7:
    II(0x1012f3e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012f3ea, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x1012f3ed:
    II(0x1012f3ed, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1012f3f1, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1012f3f4, 0x6)   jged(0x1012f477, 0x7d);               /* jge dword 0x1012f477 */
    II(0x1012f3fa, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1012f3fe, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1012f404, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1012f40a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012f40f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012f411, 0x2)   jzd(0x1012f472, 0x5f);                /* jz 0x1012f472 */
    II(0x1012f413, 0x5)   calld(0x100d531c, -0x5a0fc);          /* call 0x100d531c */
    II(0x1012f418, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012f41d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f41e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012f423, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f424, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1012f428, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1012f42b, 0x6)   pushd(memd_a32(ds, eax + 0x101bb4a0)); /* push dword [eax+0x101bb4a0] */
    II(0x1012f431, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x1012f437, 0x1)   inc(eax);                             /* inc eax */
    II(0x1012f438, 0x1)   cwde();                               /* cwde */
    II(0x1012f439, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f43a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012f43e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f43f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f442, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f448, 0x5)   calld(0x100d4ebc, -0x5a591);          /* call 0x100d4ebc */
    II(0x1012f44d, 0x1)   cwde();                               /* cwde */
    II(0x1012f44e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f44f, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x1012f453, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x1012f457, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x1012f45a, 0x6)   mov(ebx, memd_a32(ds, ebx + 0x101bb490)); /* mov ebx, [ebx+0x101bb490] */
    II(0x1012f460, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1012f464, 0x3)   mov(eax, memd_a32(ss, ebp - 0x26));   /* mov eax, [ebp-0x26] */
    II(0x1012f467, 0x5)   calld(0x100e9ae5, -0x45987);          /* call 0x100e9ae5 */
    II(0x1012f46c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012f46f, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1012f472:
    II(0x1012f472, 0x5)   jmpd(0x1012f3e7, -0x90);              /* jmp 0x1012f3e7 */
l_0x1012f477:
    II(0x1012f477, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012f47a, 0x6)   mov(eax, memd_a32(ds, edx + 0xde));   /* mov eax, [edx+0xde] */
    II(0x1012f480, 0x5)   calld(0x100d4ebc, -0x5a5c9);          /* call 0x100d4ebc */
    II(0x1012f485, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1012f488, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x1012f48c, 0x3)   sub(edx, 0x28);                       /* sub edx, 0x28 */
    II(0x1012f48f, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012f491, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012f494, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012f496, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012f498, 0x3)   add(ebx, 0x14);                       /* add ebx, 0x14 */
    II(0x1012f49b, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1012f49d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1012f4a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f4a3, 0x4)   mov(ax, memw_a32(ds, eax + 0x32));    /* mov ax, [eax+0x32] */
    II(0x1012f4a7, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1012f4aa, 0x2)   jmpd(0x1012f4b2, 0x6);                /* jmp 0x1012f4b2 */
l_0x1012f4ac:
    II(0x1012f4ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1012f4af, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x1012f4b2:
    II(0x1012f4b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1012f4b5, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x1012f4b9, 0x6)   jged(0x1012f5de, 0x11f);              /* jge dword 0x1012f5de */
    II(0x1012f4bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f4c2, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f4c8, 0x5)   calld(0x100d4ef0, -0x5a5dd);          /* call 0x100d4ef0 */
    II(0x1012f4cd, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012f4d0, 0x5)   mov(eax, 0xa2);                       /* mov eax, 0xa2 */
    II(0x1012f4d5, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f4d6, 0x5)   mov(eax, 0x8c);                       /* mov eax, 0x8c */
    II(0x1012f4db, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f4dc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f4e0, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f4e1, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x1012f4e5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1012f4e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f4ec, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x1012f4ef, 0x5)   calld(0x1008b228, -0xa42cc);          /* call 0x1008b228 */
    II(0x1012f4f4, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x1012f4f7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1012f4fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x26));   /* mov eax, [ebp-0x26] */
    II(0x1012f4fe, 0x5)   calld(0x1012b7dc, -0x3d27);           /* call 0x1012b7dc */
    II(0x1012f503, 0x7)   add(memd_a32(ss, ebp - 0x10), 0x91);  /* add dword [ebp-0x10], 0x91 */
    II(0x1012f50a, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1012f511, 0x2)   jmpd(0x1012f519, 0x6);                /* jmp 0x1012f519 */
l_0x1012f513:
    II(0x1012f513, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012f516, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x1012f519:
    II(0x1012f519, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1012f51d, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1012f520, 0x6)   jged(0x1012f5d3, 0xad);               /* jge dword 0x1012f5d3 */
    II(0x1012f526, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1012f52a, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1012f530, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1012f536, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012f53b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012f53d, 0x6)   jzd(0x1012f5ce, 0x8b);                /* jz dword 0x1012f5ce */
    II(0x1012f543, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1012f547, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1012f54a, 0x6)   pushd(memd_a32(ds, eax + 0x101bb4a0)); /* push dword [eax+0x101bb4a0] */
    II(0x1012f550, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x2c)); /* movsx ecx, word [ebp-0x2c] */
    II(0x1012f554, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012f558, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012f55a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012f55d, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012f55f, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012f561, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1012f564, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1012f567, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1012f56b, 0x6)   imul(esi, eax, 0x247);                /* imul esi, eax, 0x247 */
    II(0x1012f571, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1012f575, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f578, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x1012f57b, 0x5)   calld(0x1008b228, -0xa4358);          /* call 0x1008b228 */
    II(0x1012f580, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1012f583, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1012f585, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x1012f587, 0x6)   mov(esi, memd_a32(ds, esi + 0x101ca5e7)); /* mov esi, [esi+0x101ca5e7] */
    II(0x1012f58d, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x1012f590, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012f594, 0x3)   mov(edi, memd_a32(ss, ebp - 0x26));   /* mov edi, [ebp-0x26] */
    II(0x1012f597, 0x2)   add(edi, eax);                        /* add edi, eax */
    II(0x1012f599, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012f59d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012f59f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012f5a2, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012f5a4, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012f5a6, 0x2)   add(edi, eax);                        /* add edi, eax */
    II(0x1012f5a8, 0x3)   mov(memd_a32(ss, ebp - 0x40), edi);   /* mov [ebp-0x40], edi */
    II(0x1012f5ab, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f5af, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1012f5b3, 0x3)   add(eax, 0xb);                        /* add eax, 0xb */
    II(0x1012f5b6, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1012f5b9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x1012f5bc, 0x3)   add(edx, 0xf);                        /* add edx, 0xf */
    II(0x1012f5bf, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012f5c1, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x1012f5c3, 0x5)   calld(0x1012b658, -0x3f70);           /* call 0x1012b658 */
    II(0x1012f5c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012f5cb, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1012f5ce:
    II(0x1012f5ce, 0x5)   jmpd(0x1012f513, -0xc0);              /* jmp 0x1012f513 */
l_0x1012f5d3:
    II(0x1012f5d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1012f5d6, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
    II(0x1012f5d9, 0x5)   jmpd(0x1012f4ac, -0x132);             /* jmp 0x1012f4ac */
l_0x1012f5de:
    II(0x1012f5de, 0x5)   calld(0x100d51e4, -0x5a3ff);          /* call 0x100d51e4 */
    II(0x1012f5e3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012f5e8, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x1012f5eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f5ee, 0x3)   mov(eax, memd_a32(ds, eax + 0x30));   /* mov eax, [eax+0x30] */
    II(0x1012f5f1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012f5f4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012f5f6, 0x2)   jled(0x1012f5fe, 0x6);                /* jle 0x1012f5fe */
    II(0x1012f5f8, 0x4)   mov(memb_a32(ss, ebp - 0x48), 0x1);   /* mov byte [ebp-0x48], 0x1 */
    II(0x1012f5fc, 0x2)   jmpd(0x1012f602, 0x4);                /* jmp 0x1012f602 */
l_0x1012f5fe:
    II(0x1012f5fe, 0x4)   mov(memb_a32(ss, ebp - 0x48), 0);     /* mov byte [ebp-0x48], 0x0 */
l_0x1012f602:
    II(0x1012f602, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012f604, 0x3)   mov(dl, memb_a32(ss, ebp - 0x48));    /* mov dl, [ebp-0x48] */
    II(0x1012f607, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f60a, 0x6)   mov(eax, memd_a32(ds, eax + 0xce));   /* mov eax, [eax+0xce] */
    II(0x1012f610, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x44));   /* mov ebx, [ebp-0x44] */
    II(0x1012f613, 0x5)   calld(0x100cfa7c, -0x5fb9c);          /* call 0x100cfa7c */
    II(0x1012f618, 0x5)   calld(0x100d51e4, -0x5a439);          /* call 0x100d51e4 */
    II(0x1012f61d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012f622, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x1012f625, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f628, 0x3)   mov(edx, memd_a32(ds, eax + 0x30));   /* mov edx, [eax+0x30] */
    II(0x1012f62b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012f62e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f631, 0x3)   mov(eax, memd_a32(ds, eax + 0x3a));   /* mov eax, [eax+0x3a] */
    II(0x1012f634, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012f637, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012f639, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f63c, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x1012f63f, 0x5)   calld(my_2_get_count, -0xa42dc);      /* call 0x1008b368 */
    II(0x1012f644, 0x1)   cwde();                               /* cwde */
    II(0x1012f645, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012f647, 0x2)   jged(0x1012f64f, 0x6);                /* jge 0x1012f64f */
    II(0x1012f649, 0x4)   mov(memb_a32(ss, ebp - 0x50), 0x1);   /* mov byte [ebp-0x50], 0x1 */
    II(0x1012f64d, 0x2)   jmpd(0x1012f653, 0x4);                /* jmp 0x1012f653 */
l_0x1012f64f:
    II(0x1012f64f, 0x4)   mov(memb_a32(ss, ebp - 0x50), 0);     /* mov byte [ebp-0x50], 0x0 */
l_0x1012f653:
    II(0x1012f653, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012f655, 0x3)   mov(dl, memb_a32(ss, ebp - 0x50));    /* mov dl, [ebp-0x50] */
    II(0x1012f658, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f65b, 0x6)   mov(eax, memd_a32(ds, eax + 0xd2));   /* mov eax, [eax+0xd2] */
    II(0x1012f661, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4c));   /* mov ebx, [ebp-0x4c] */
    II(0x1012f664, 0x5)   calld(0x100cfa7c, -0x5fbed);          /* call 0x100cfa7c */
    II(0x1012f669, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012f66b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012f66c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012f66d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012f66e, 0x1)   popd(edx);                            /* pop edx */
    II(0x1012f66f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012f670, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012f671, 0x1)   retd();                               /* ret */
FUNC_END

