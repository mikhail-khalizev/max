FUNC_BEGIN(0x1014eb48, 0x8f5176a7170eabbf, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0, 0x72, 0x1, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xb4, 0x60, 0xf2, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x24, 0x7b, 0xf2, 0xff, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x78, 0xc1, 0xfe, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x39, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x6d, 0x63, 0xf2, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x73, 0x7a, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xaa, 0xc1, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x23, 0x8d, 0x45, 0xec, 0xe8, 0xa1, 0x79, 0xf2, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x1, 0xc2, 0xc6, 0x82, 0xab, 0, 0, 0, 0x1, 0xe9, 0xec, 0, 0, 0, 0xb9, 0, 0, 0x40, 0, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x80, 0x4c, 0xf2, 0xff, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x75, 0xa, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x23, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x37, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x44, 0x75, 0x5, 0xe9, 0x9f, 0, 0, 0, 0xe8, 0x44, 0x3f, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0xba, 0x2f, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x67, 0xb6, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0xc8, 0x50, 0xf2, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x24, 0xe8, 0x69, 0x3f, 0xfb, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0xd, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x60, 0x79, 0xf2, 0xff, 0x89, 0xc2, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x14, 0xe9, 0xfe, 0xff, 0xeb, 0x22, 0xe8, 0x45, 0x3f, 0xfb, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0xe, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x3c, 0x79, 0xf2, 0xff, 0x89, 0xc2, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xf0, 0xe8, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x52, 0x72, 0xf2, 0xff, 0x8b, 0x45, 0xf4, 0xf6, 0x40, 0x12, 0x20, 0x74, 0x1a, 0x8b, 0x55, 0xf4, 0x8a, 0x52, 0x29, 0x81, 0xe2, 0xff, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xf0, 0xeb, 0x24, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x50, 0x1c, 0x89, 0xd0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x8b, 0x5d, 0xf8, 0x66, 0x2b, 0x58, 0x1a, 0x89, 0xd8, 0x98, 0xe8, 0x1b, 0xd6, 0, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0xe8, 0x6f, 0x29, 0xff, 0xff, 0x66, 0x83, 0x78, 0x1d, 0, 0x74, 0x41, 0xb9, 0x78, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x9b, 0xfc, 0xff, 0xff, 0xb9, 0x9c, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x86, 0xfc, 0xff, 0xff, 0xb9, 0x84, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x71, 0xfc, 0xff, 0xff, 0xeb, 0x62, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf6, 0xbf, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x18, 0xf, 0xbf, 0x4d, 0xf0, 0x31, 0xdb, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xec, 0xe8, 0xe4, 0x77, 0xf2, 0xff, 0xe8, 0x5d, 0xbb, 0xff, 0xff, 0xeb, 0x3c, 0x83, 0x7d, 0xe8, 0, 0x74, 0x23, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8d, 0x45, 0xe0, 0xe8, 0xff, 0x7c, 0xf2, 0xff, 0x8b, 0x55, 0xe8, 0x8b, 0x4d, 0xf4, 0x89, 0xc3, 0x89, 0xc8, 0xe8, 0x6f, 0x5d, 0xf2, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x11, 0xf, 0xbf, 0x4d, 0xf0, 0x31, 0xdb, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xe8, 0xe8, 0x1f, 0xbb, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x50, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x7, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x55, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x39, 0x71, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1014eb48, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x1014eb4d, 0x5)   calld(sys_check_available_stack_size, 0x17200); /* call 0x10165d52 */
    II(0x1014eb52, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1014eb53, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014eb54, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014eb55, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014eb56, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014eb58, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1014eb5e, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1014eb61, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1014eb64, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x1014eb67, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1014eb6c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1014eb70, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1014eb74, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014eb77, 0x5)   calld(0x10074c30, -0xd9f4c);          /* call 0x10074c30 */
    II(0x1014eb7c, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x1014eb7f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014eb81, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1014eb83, 0x5)   calld(0x100766ac, -0xd84dc);          /* call 0x100766ac */
    II(0x1014eb88, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1014eb8f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014eb91, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014eb94, 0x5)   calld(0x1013ad11, -0x13e88);          /* call 0x1013ad11 */
    II(0x1014eb99, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014eb9b, 0x6)   jzd(0x1014ecda, 0x139);               /* jz dword 0x1014ecda */
    II(0x1014eba1, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1014eba5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1014eba9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ebac, 0x5)   calld(0x10074f1e, -0xd9c93);          /* call 0x10074f1e */
    II(0x1014ebb1, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x1014ebb4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014ebb6, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1014ebb8, 0x5)   calld(0x10076630, -0xd858d);          /* call 0x10076630 */
    II(0x1014ebbd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014ebbf, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014ebc2, 0x5)   calld(0x1013ad71, -0x13e56);          /* call 0x1013ad71 */
    II(0x1014ebc7, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014ebc9, 0x2)   jzd(0x1014ebee, 0x23);                /* jz 0x1014ebee */
    II(0x1014ebcb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014ebce, 0x5)   calld(0x10076574, -0xd865f);          /* call 0x10076574 */
    II(0x1014ebd3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014ebd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ebd8, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014ebdb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014ebe0, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1014ebe2, 0x7)   mov(memb_a32(ds, edx + 0xab), 0x1);   /* mov byte [edx+0xab], 0x1 */
    II(0x1014ebe9, 0x5)   jmpd(0x1014ecda, 0xec);               /* jmp 0x1014ecda */
l_0x1014ebee:
    II(0x1014ebee, 0x5)   mov(ecx, 0x400000);                   /* mov ecx, 0x400000 */
    II(0x1014ebf3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ebf6, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014ebf9, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014ebfb, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1014ebfe, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1014ec02, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1014ec06, 0x5)   calld(0x1007388b, -0xdb380);          /* call 0x1007388b */
    II(0x1014ec0b, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1014ec0e, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x1014ec12, 0x2)   jnzd(0x1014ec1e, 0xa);                /* jnz 0x1014ec1e */
    II(0x1014ec14, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ec17, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x23);   /* cmp word [eax+0x8], 0x23 */
    II(0x1014ec1c, 0x2)   jnzd(0x1014ec20, 0x2);                /* jnz 0x1014ec20 */
l_0x1014ec1e:
    II(0x1014ec1e, 0x2)   jmpd(0x1014ec2a, 0xa);                /* jmp 0x1014ec2a */
l_0x1014ec20:
    II(0x1014ec20, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ec23, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x37);   /* cmp word [eax+0x8], 0x37 */
    II(0x1014ec28, 0x2)   jnzd(0x1014ec2c, 0x2);                /* jnz 0x1014ec2c */
l_0x1014ec2a:
    II(0x1014ec2a, 0x2)   jmpd(0x1014ec36, 0xa);                /* jmp 0x1014ec36 */
l_0x1014ec2c:
    II(0x1014ec2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ec2f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x44);   /* cmp word [eax+0x8], 0x44 */
    II(0x1014ec34, 0x2)   jnzd(0x1014ec3b, 0x5);                /* jnz 0x1014ec3b */
l_0x1014ec36:
    II(0x1014ec36, 0x5)   jmpd(0x1014ecda, 0x9f);               /* jmp 0x1014ecda */
l_0x1014ec3b:
    II(0x1014ec3b, 0x5)   calld(0x10102b84, -0x4c0bc);          /* call 0x10102b84 */
    II(0x1014ec40, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014ec45, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014ec46, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1014ec4b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014ec4c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014ec4e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014ec4f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1014ec53, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014ec54, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1014ec58, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014ec59, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1014ec5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ec5e, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014ec61, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014ec63, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1014ec66, 0x5)   mov(edx, 0x2f);                       /* mov edx, 0x2f */
    II(0x1014ec6b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014ec6e, 0x5)   calld(0x1015a2da, 0xb667);            /* call 0x1015a2da */
    II(0x1014ec73, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1014ec77, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1014ec7b, 0x5)   calld(0x10073d48, -0xdaf38);          /* call 0x10073d48 */
    II(0x1014ec80, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1014ec85, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1014ec88, 0x2)   jnzd(0x1014ecae, 0x24);               /* jnz 0x1014ecae */
    II(0x1014ec8a, 0x5)   calld(0x10102bf8, -0x4c097);          /* call 0x10102bf8 */
    II(0x1014ec8f, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1014ec91, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x1014ec93, 0x5)   mov(ebx, 0xd);                        /* mov ebx, 0xd */
    II(0x1014ec98, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014ec9b, 0x5)   calld(0x10076600, -0xd86a0);          /* call 0x10076600 */
    II(0x1014eca0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014eca2, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x1014eca7, 0x5)   calld(0x1013d5c0, -0x116ec);          /* call 0x1013d5c0 */
    II(0x1014ecac, 0x2)   jmpd(0x1014ecd0, 0x22);               /* jmp 0x1014ecd0 */
l_0x1014ecae:
    II(0x1014ecae, 0x5)   calld(0x10102bf8, -0x4c0bb);          /* call 0x10102bf8 */
    II(0x1014ecb3, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1014ecb5, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x1014ecb7, 0x5)   mov(ebx, 0xe);                        /* mov ebx, 0xe */
    II(0x1014ecbc, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014ecbf, 0x5)   calld(0x10076600, -0xd86c4);          /* call 0x10076600 */
    II(0x1014ecc4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014ecc6, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x1014eccb, 0x5)   calld(0x1013d5c0, -0x11710);          /* call 0x1013d5c0 */
l_0x1014ecd0:
    II(0x1014ecd0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014ecd2, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014ecd5, 0x5)   calld(0x10075f2c, -0xd8dae);          /* call 0x10075f2c */
l_0x1014ecda:
    II(0x1014ecda, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ecdd, 0x4)   test(memb_a32(ds, eax + 0x12), 0x20); /* test byte [eax+0x12], 0x20 */
    II(0x1014ece1, 0x2)   jzd(0x1014ecfd, 0x1a);                /* jz 0x1014ecfd */
    II(0x1014ece3, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014ece6, 0x3)   mov(dl, memb_a32(ds, edx + 0x29));    /* mov dl, [edx+0x29] */
    II(0x1014ece9, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x1014ecef, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1014ecf1, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1014ecf4, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1014ecf6, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1014ecf8, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1014ecfb, 0x2)   jmpd(0x1014ed21, 0x24);               /* jmp 0x1014ed21 */
l_0x1014ecfd:
    II(0x1014ecfd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ed00, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1014ed03, 0x4)   sub(dx, memw_a32(ds, eax + 0x1c));    /* sub dx, [eax+0x1c] */
    II(0x1014ed07, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1014ed09, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1014ed0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ed0f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014ed12, 0x4)   sub(bx, memw_a32(ds, eax + 0x1a));    /* sub bx, [eax+0x1a] */
    II(0x1014ed16, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1014ed18, 0x1)   cwde();                               /* cwde */
    II(0x1014ed19, 0x5)   calld(0x1015c339, 0xd61b);            /* call 0x1015c339 */
    II(0x1014ed1e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x1014ed21:
    II(0x1014ed21, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ed24, 0x5)   calld(0x10141698, -0xd691);           /* call 0x10141698 */
    II(0x1014ed29, 0x5)   cmp(memw_a32(ds, eax + 0x1d), 0);     /* cmp word [eax+0x1d], 0x0 */
    II(0x1014ed2e, 0x2)   jzd(0x1014ed71, 0x41);                /* jz 0x1014ed71 */
    II(0x1014ed30, 0x5)   mov(ecx, 0x101c8178);                 /* mov ecx, 0x101c8178 */
    II(0x1014ed35, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1014ed39, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1014ed3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ed40, 0x5)   calld(0x1014e9e0, -0x365);            /* call 0x1014e9e0 */
    II(0x1014ed45, 0x5)   mov(ecx, 0x101c819c);                 /* mov ecx, 0x101c819c */
    II(0x1014ed4a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1014ed4e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1014ed52, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ed55, 0x5)   calld(0x1014e9e0, -0x37a);            /* call 0x1014e9e0 */
    II(0x1014ed5a, 0x5)   mov(ecx, 0x101c8184);                 /* mov ecx, 0x101c8184 */
    II(0x1014ed5f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1014ed63, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1014ed67, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ed6a, 0x5)   calld(0x1014e9e0, -0x38f);            /* call 0x1014e9e0 */
    II(0x1014ed6f, 0x2)   jmpd(0x1014edd3, 0x62);               /* jmp 0x1014edd3 */
l_0x1014ed71:
    II(0x1014ed71, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014ed73, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014ed76, 0x5)   calld(0x1013ad71, -0x1400a);          /* call 0x1013ad71 */
    II(0x1014ed7b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014ed7d, 0x2)   jzd(0x1014ed97, 0x18);                /* jz 0x1014ed97 */
    II(0x1014ed7f, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x1014ed83, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014ed85, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014ed88, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014ed8b, 0x5)   calld(0x10076574, -0xd881c);          /* call 0x10076574 */
    II(0x1014ed90, 0x5)   calld(0x1014a8f2, -0x44a3);           /* call 0x1014a8f2 */
    II(0x1014ed95, 0x2)   jmpd(0x1014edd3, 0x3c);               /* jmp 0x1014edd3 */
l_0x1014ed97:
    II(0x1014ed97, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x1014ed9b, 0x2)   jzd(0x1014edc0, 0x23);                /* jz 0x1014edc0 */
    II(0x1014ed9d, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1014eda1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1014eda5, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1014eda8, 0x5)   calld(0x10076aac, -0xd8301);          /* call 0x10076aac */
    II(0x1014edad, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x1014edb0, 0x3)   mov(ecx, memd_a32(ss, ebp - 0xc));    /* mov ecx, [ebp-0xc] */
    II(0x1014edb3, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1014edb5, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1014edb7, 0x5)   calld(0x10074b2b, -0xda291);          /* call 0x10074b2b */
    II(0x1014edbc, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014edbe, 0x2)   jnzd(0x1014edc2, 0x2);                /* jnz 0x1014edc2 */
l_0x1014edc0:
    II(0x1014edc0, 0x2)   jmpd(0x1014edd3, 0x11);               /* jmp 0x1014edd3 */
l_0x1014edc2:
    II(0x1014edc2, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x1014edc6, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014edc8, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1014edcb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1014edce, 0x5)   calld(0x1014a8f2, -0x44e1);           /* call 0x1014a8f2 */
l_0x1014edd3:
    II(0x1014edd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014edd6, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x1014edd9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014edde, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014ede0, 0x2)   jnzd(0x1014ede9, 0x7);                /* jnz 0x1014ede9 */
    II(0x1014ede2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014ede5, 0x4)   mov(memb_a32(ds, eax + 0x55), 0);     /* mov byte [eax+0x55], 0x0 */
l_0x1014ede9:
    II(0x1014ede9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014edeb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014edee, 0x5)   calld(0x10075f2c, -0xd8ec7);          /* call 0x10075f2c */
    II(0x1014edf3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014edf5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014edf6, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014edf7, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014edf8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014edf9, 0x1)   retd();                               /* ret */
FUNC_END

