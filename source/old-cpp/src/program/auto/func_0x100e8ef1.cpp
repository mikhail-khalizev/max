FUNC_BEGIN(0x100e8ef1, 0xcf514c7b81148e9e, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x57, 0xce, 0x7, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf0, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0xad, 0xb0, 0x4, 0, 0xe8, 0xee, 0xfd, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100e8ef1, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100e8ef6, 0x5)   calld(sys_check_available_stack_size, 0x7ce57); /* call 0x10165d52 */
    II(0x100e8efb, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e8efc, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e8efd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e8efe, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e8f00, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100e8f06, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e8f09, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100e8f0c, 0x3)   mov(memd_a32(ss, ebp - 0x10), ebx);   /* mov [ebp-0x10], ebx */
    II(0x100e8f0f, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100e8f12, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100e8f15, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e8f16, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100e8f1a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x100e8f1e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100e8f22, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e8f26, 0x5)   calld(my_get_res_data_by_id, 0x4b0ad); /* call 0x10133fd8 */
    II(0x100e8f2b, 0x5)   calld(0x100e8d1e, -0x212);            /* call 0x100e8d1e */
    II(0x100e8f30, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e8f32, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e8f33, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e8f34, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e8f35, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

