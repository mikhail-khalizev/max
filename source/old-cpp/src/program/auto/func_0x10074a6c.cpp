FUNC_BEGIN(0x10074a6c, 0xf69026851a399270, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xdc, 0x12, 0xf, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0x9e, 0xea, 0x8, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0xb, 0x1a, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xba, 0x62, 0xc, 0, 0x84, 0xc0, 0x74, 0x4a, 0x8d, 0x45, 0xf4, 0xe8, 0xdd, 0x18, 0, 0, 0x66, 0xf7, 0x40, 0x12, 0x80, 0x3, 0x74, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xcd, 0x18, 0, 0, 0xf6, 0x40, 0x12, 0x1, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xbd, 0x18, 0, 0, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x10, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x73, 0x14, 0, 0, 0xeb, 0x24, 0x8d, 0x45, 0xf4, 0xe8, 0xf5, 0x20, 0, 0, 0xeb, 0xa8, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x59, 0x14, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x4d, 0x14, 0, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10074a6c, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10074a71, 0x5)   calld(sys_check_available_stack_size, 0xf12dc); /* call 0x10165d52 */
    II(0x10074a76, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10074a77, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10074a78, 0x1)   pushd(edx);                           /* push edx */
    II(0x10074a79, 0x1)   pushd(esi);                           /* push esi */
    II(0x10074a7a, 0x1)   pushd(edi);                           /* push edi */
    II(0x10074a7b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10074a7c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10074a7e, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x10074a84, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10074a87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10074a8a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10074a8d, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10074a90, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10074a93, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10074a96, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10074a99, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x10074a9e, 0x5)   calld(0x10103541, 0x8ea9e);           /* call 0x10103541 */
    II(0x10074aa3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10074aa5, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10074aa8, 0x5)   calld(0x100764b8, 0x1a0b);            /* call 0x100764b8 */
l_0x10074aad:
    II(0x10074aad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10074aaf, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10074ab2, 0x5)   calld(0x1013ad71, 0xc62ba);           /* call 0x1013ad71 */
    II(0x10074ab7, 0x2)   test(al, al);                         /* test al, al */
    II(0x10074ab9, 0x2)   jzd(0x10074b05, 0x4a);                /* jz 0x10074b05 */
    II(0x10074abb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10074abe, 0x5)   calld(0x100763a0, 0x18dd);            /* call 0x100763a0 */
    II(0x10074ac3, 0x6)   test(memw_a32(ds, eax + 0x12), 0x380); /* test word [eax+0x12], 0x380 */
    II(0x10074ac9, 0x2)   jzd(0x10074ad9, 0xe);                 /* jz 0x10074ad9 */
    II(0x10074acb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10074ace, 0x5)   calld(0x100763a0, 0x18cd);            /* call 0x100763a0 */
    II(0x10074ad3, 0x4)   test(memb_a32(ds, eax + 0x12), 0x1);  /* test byte [eax+0x12], 0x1 */
    II(0x10074ad7, 0x2)   jzd(0x10074adb, 0x2);                 /* jz 0x10074adb */
l_0x10074ad9:
    II(0x10074ad9, 0x2)   jmpd(0x10074ae9, 0xe);                /* jmp 0x10074ae9 */
l_0x10074adb:
    II(0x10074adb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10074ade, 0x5)   calld(0x100763a0, 0x18bd);            /* call 0x100763a0 */
    II(0x10074ae3, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x10074ae7, 0x2)   jnzd(0x10074aeb, 0x2);                /* jnz 0x10074aeb */
l_0x10074ae9:
    II(0x10074ae9, 0x2)   jmpd(0x10074afb, 0x10);               /* jmp 0x10074afb */
l_0x10074aeb:
    II(0x10074aeb, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10074aef, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10074af1, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10074af4, 0x5)   calld(0x10075f6c, 0x1473);            /* call 0x10075f6c */
    II(0x10074af9, 0x2)   jmpd(0x10074b1f, 0x24);               /* jmp 0x10074b1f */
l_0x10074afb:
    II(0x10074afb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10074afe, 0x5)   calld(0x10076bf8, 0x20f5);            /* call 0x10076bf8 */
    II(0x10074b03, 0x2)   jmpd(0x10074aad, -0x58);              /* jmp 0x10074aad */
l_0x10074b05:
    II(0x10074b05, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10074b09, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10074b0b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10074b0e, 0x5)   calld(0x10075f6c, 0x1459);            /* call 0x10075f6c */
    II(0x10074b13, 0x2)   jmpd(0x10074b1f, 0xa);                /* jmp 0x10074b1f */
//  II(0x10074b15, 0xa)   /* Недостижимый код. */
l_0x10074b1f:
    II(0x10074b1f, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10074b22, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10074b24, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10074b25, 0x1)   popd(edi);                            /* pop edi */
    II(0x10074b26, 0x1)   popd(esi);                            /* pop esi */
    II(0x10074b27, 0x1)   popd(edx);                            /* pop edx */
    II(0x10074b28, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10074b29, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10074b2a, 0x1)   retd();                               /* ret */
FUNC_END

