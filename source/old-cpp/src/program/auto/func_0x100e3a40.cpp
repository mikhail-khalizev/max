FUNC_BEGIN(0x100e3a40, 0x2188cf39300be34e, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x8, 0x23, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x18, 0xe8, 0x6, 0x2b, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x8, 0xa, 0x75, 0x1a, 0xe8, 0xf2, 0x13, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0xb8, 0xc, 0, 0, 0, 0xe8, 0x76, 0x20, 0x2, 0, 0xe9, 0x90, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x18, 0xe8, 0xda, 0x2a, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x8, 0xb, 0x75, 0x17, 0xe8, 0xc6, 0x13, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0xb8, 0xd, 0, 0, 0, 0xe8, 0x4a, 0x20, 0x2, 0, 0xeb, 0x67, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x18, 0xe8, 0xb1, 0x2a, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x8, 0x9, 0x75, 0x17, 0xe8, 0x9d, 0x13, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0xb8, 0xb, 0, 0, 0, 0xe8, 0x21, 0x20, 0x2, 0, 0xeb, 0x3e, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x18, 0xe8, 0x88, 0x2a, 0xf9, 0xff, 0x66, 0x83, 0x78, 0x8, 0x3, 0x75, 0x17, 0xe8, 0x74, 0x13, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0xb8, 0x20, 0, 0, 0, 0xe8, 0xf8, 0x1f, 0x2, 0, 0xeb, 0x15, 0xe8, 0x5d, 0x13, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0xb8, 0xe, 0, 0, 0, 0xe8, 0xe1, 0x1f, 0x2, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100e3a40, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100e3a45, 0x5)   calld(sys_check_available_stack_size, 0x82308); /* call 0x10165d52 */
    II(0x100e3a4a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e3a4b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e3a4c, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e3a4d, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e3a4e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e3a4f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e3a51, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100e3a57, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e3a5a, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100e3a5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3a60, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100e3a63, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e3a66, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e3a69, 0x5)   calld(0x10076574, -0x6d4fa);          /* call 0x10076574 */
    II(0x100e3a6e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xa);    /* cmp word [eax+0x8], 0xa */
    II(0x100e3a73, 0x2)   jnzd(0x100e3a8f, 0x1a);               /* jnz 0x100e3a8f */
    II(0x100e3a75, 0x5)   calld(0x100d4e6c, -0xec0e);           /* call 0x100d4e6c */
    II(0x100e3a7a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e3a7c, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e3a7e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3a80, 0x5)   mov(eax, 0xc);                        /* mov eax, 0xc */
    II(0x100e3a85, 0x5)   calld(0x10105b00, 0x22076);           /* call 0x10105b00 */
    II(0x100e3a8a, 0x5)   jmpd(0x100e3b1f, 0x90);               /* jmp 0x100e3b1f */
l_0x100e3a8f:
    II(0x100e3a8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e3a92, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e3a95, 0x5)   calld(0x10076574, -0x6d526);          /* call 0x10076574 */
    II(0x100e3a9a, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xb);    /* cmp word [eax+0x8], 0xb */
    II(0x100e3a9f, 0x2)   jnzd(0x100e3ab8, 0x17);               /* jnz 0x100e3ab8 */
    II(0x100e3aa1, 0x5)   calld(0x100d4e6c, -0xec3a);           /* call 0x100d4e6c */
    II(0x100e3aa6, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e3aa8, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e3aaa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3aac, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x100e3ab1, 0x5)   calld(0x10105b00, 0x2204a);           /* call 0x10105b00 */
    II(0x100e3ab6, 0x2)   jmpd(0x100e3b1f, 0x67);               /* jmp 0x100e3b1f */
l_0x100e3ab8:
    II(0x100e3ab8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e3abb, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e3abe, 0x5)   calld(0x10076574, -0x6d54f);          /* call 0x10076574 */
    II(0x100e3ac3, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x9);    /* cmp word [eax+0x8], 0x9 */
    II(0x100e3ac8, 0x2)   jnzd(0x100e3ae1, 0x17);               /* jnz 0x100e3ae1 */
    II(0x100e3aca, 0x5)   calld(0x100d4e6c, -0xec63);           /* call 0x100d4e6c */
    II(0x100e3acf, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e3ad1, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e3ad3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3ad5, 0x5)   mov(eax, 0xb);                        /* mov eax, 0xb */
    II(0x100e3ada, 0x5)   calld(0x10105b00, 0x22021);           /* call 0x10105b00 */
    II(0x100e3adf, 0x2)   jmpd(0x100e3b1f, 0x3e);               /* jmp 0x100e3b1f */
l_0x100e3ae1:
    II(0x100e3ae1, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e3ae4, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e3ae7, 0x5)   calld(0x10076574, -0x6d578);          /* call 0x10076574 */
    II(0x100e3aec, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3);    /* cmp word [eax+0x8], 0x3 */
    II(0x100e3af1, 0x2)   jnzd(0x100e3b0a, 0x17);               /* jnz 0x100e3b0a */
    II(0x100e3af3, 0x5)   calld(0x100d4e6c, -0xec8c);           /* call 0x100d4e6c */
    II(0x100e3af8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e3afa, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e3afc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3afe, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100e3b03, 0x5)   calld(0x10105b00, 0x21ff8);           /* call 0x10105b00 */
    II(0x100e3b08, 0x2)   jmpd(0x100e3b1f, 0x15);               /* jmp 0x100e3b1f */
l_0x100e3b0a:
    II(0x100e3b0a, 0x5)   calld(0x100d4e6c, -0xeca3);           /* call 0x100d4e6c */
    II(0x100e3b0f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e3b11, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e3b13, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3b15, 0x5)   mov(eax, 0xe);                        /* mov eax, 0xe */
    II(0x100e3b1a, 0x5)   calld(0x10105b00, 0x21fe1);           /* call 0x10105b00 */
l_0x100e3b1f:
    II(0x100e3b1f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e3b21, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e3b22, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e3b23, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e3b24, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e3b25, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e3b26, 0x1)   retd();                               /* ret */
FUNC_END

