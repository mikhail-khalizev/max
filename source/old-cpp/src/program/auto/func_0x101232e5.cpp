FUNC_BEGIN(0x101232e5, 0x41eb6e5f44d8e58, 0x20, ({0x68, 0x70, 0, 0, 0, 0xe8, 0x63, 0x2a, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x80, 0x4d, 0xfc, 0x1, 0xbb, 0xc1, 0x6, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xa0, 0xe0, 0xff, 0xff, 0x89, 0x45, 0xf8, 0x80, 0x65, 0xfc, 0xfe, 0x8d, 0x45, 0xac, 0xe8, 0xbe, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0x68, 0xe4, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101232e5, 0x5)   pushd(0x70);                          /* push dword 0x70 */
    II(0x101232ea, 0x5)   calld(sys_check_available_stack_size, 0x42a63); /* call 0x10165d52 */
    II(0x101232ef, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101232f0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101232f1, 0x1)   pushd(edx);                           /* push edx */
    II(0x101232f2, 0x1)   pushd(esi);                           /* push esi */
    II(0x101232f3, 0x1)   pushd(edi);                           /* push edi */
    II(0x101232f4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101232f5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101232f7, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x101232fd, 0x4)   or_(memb_a32(ss, ebp - 0x4), 0x1);    /* or byte [ebp-0x4], 0x1 */
    II(0x10123301, 0x5)   mov(ebx, 0x6c1);                      /* mov ebx, 0x6c1 */
    II(0x10123306, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10123308, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1012330b, 0x5)   calld(0x101213b0, -0x1f60);           /* call 0x101213b0 */
    II(0x10123310, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10123313, 0x4)   and_(memb_a32(ss, ebp - 0x4), -0x2 /* 0xfe */); /* and byte [ebp-0x4], 0xfe */
    II(0x10123317, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1012331a, 0x5)   calld(0x101231dd, -0x142);            /* call 0x101231dd */
    II(0x1012331f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10123321, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10123324, 0x5)   calld(0x10121791, -0x1b98);           /* call 0x10121791 */
    II(0x10123329, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012332b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012332c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012332d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012332e, 0x1)   popd(edx);                            /* pop edx */
    II(0x1012332f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10123330, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10123331, 0x1)   retd();                               /* ret */
FUNC_END

