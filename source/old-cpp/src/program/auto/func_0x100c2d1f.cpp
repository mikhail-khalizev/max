FUNC_BEGIN(0x100c2d1f, 0xe6b741db85caf172, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x29, 0x30, 0xa, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xf8, 0x8d, 0x45, 0xec, 0xe8, 0x5c, 0x3d, 0xfb, 0xff, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xda, 0x83, 0xfc, 0xff, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xd8, 0x2, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0xb1, 0, 0, 0, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x66, 0x3b, 0x45, 0xfc, 0xf, 0x8d, 0x90, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd8, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xea, 0x83, 0xfc, 0xff, 0x8d, 0x55, 0xec, 0x8d, 0x45, 0xdc, 0xe8, 0x9, 0x55, 0x4, 0, 0x84, 0xc0, 0x74, 0x66, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x67, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xee, 0x8b, 0, 0x1, 0xd0, 0x66, 0xf, 0xbe, 0, 0x89, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x40, 0xf, 0xbf, 0x45, 0x10, 0xf, 0xbf, 0x55, 0xd0, 0x29, 0xd0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0x14, 0xf, 0xaf, 0xd0, 0xbb, 0xa, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xd0, 0x1, 0xd0, 0x88, 0xc3, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x67, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xee, 0x8b, 0, 0x1, 0xd0, 0x88, 0x18, 0xe9, 0x5d, 0xff, 0xff, 0xff, 0xe9, 0x3e, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x8, 0}))
    II(0x100c2d1f, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x100c2d24, 0x5)   calld(sys_check_available_stack_size, 0xa3029); /* call 0x10165d52 */
    II(0x100c2d29, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c2d2a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c2d2b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c2d2c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c2d2e, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x100c2d34, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c2d37, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100c2d3a, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x100c2d3d, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100c2d40, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x100c2d44, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100c2d48, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c2d4b, 0x5)   calld(0x10076aac, -0x4c2a4);          /* call 0x10076aac */
    II(0x100c2d50, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100c2d55, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c2d58, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c2d59, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100c2d5f, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100c2d62, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2d64, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c2d66, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c2d69, 0x5)   calld(0x1008b148, -0x37c26);          /* call 0x1008b148 */
    II(0x100c2d6e, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100c2d75, 0x2)   jmpd(0x100c2d7b, 0x4);                /* jmp 0x100c2d7b */
l_0x100c2d77:
    II(0x100c2d77, 0x4)   add(memd_a32(ss, ebp - 0x28), 0x2);   /* add dword [ebp-0x28], 0x2 */
l_0x100c2d7b:
    II(0x100c2d7b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c2d7f, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100c2d82, 0x6)   jged(0x100c2e39, 0xb1);               /* jge dword 0x100c2e39 */
    II(0x100c2d88, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x100c2d8f, 0x2)   jmpd(0x100c2d97, 0x6);                /* jmp 0x100c2d97 */
l_0x100c2d91:
    II(0x100c2d91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c2d94, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
l_0x100c2d97:
    II(0x100c2d97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c2d9a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100c2d9e, 0x6)   jged(0x100c2e34, 0x90);               /* jge dword 0x100c2e34 */
    II(0x100c2da4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c2da8, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c2dab, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x100c2db0, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c2db2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c2db5, 0x5)   calld(0x1008b1a4, -0x37c16);          /* call 0x1008b1a4 */
    II(0x100c2dba, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100c2dbd, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c2dc0, 0x5)   calld(0x101082ce, 0x45509);           /* call 0x101082ce */
    II(0x100c2dc5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c2dc7, 0x2)   jzd(0x100c2e2f, 0x66);                /* jz 0x100c2e2f */
    II(0x100c2dc9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100c2dcd, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c2dd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c2dd3, 0x3)   mov(eax, memd_a32(ds, eax + 0x67));   /* mov eax, [eax+0x67] */
    II(0x100c2dd6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c2dd8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x12)); /* movsx edx, word [ebp-0x12] */
    II(0x100c2ddc, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c2dde, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c2de0, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x100c2de4, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100c2de7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c2deb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c2ded, 0x2)   jld(0x100c2e2f, 0x40);                /* jl 0x100c2e2f */
    II(0x100c2def, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x100c2df3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c2df7, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c2df9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c2dfb, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100c2dff, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c2e02, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x100c2e07, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c2e09, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c2e0c, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100c2e0e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c2e12, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c2e14, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c2e16, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c2e1a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c2e1d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c2e20, 0x3)   mov(edx, memd_a32(ds, edx + 0x67));   /* mov edx, [edx+0x67] */
    II(0x100c2e23, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c2e25, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x12)); /* movsx edx, word [ebp-0x12] */
    II(0x100c2e29, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c2e2b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c2e2d, 0x2)   mov(memb_a32(ds, eax), bl);           /* mov [eax], bl */
l_0x100c2e2f:
    II(0x100c2e2f, 0x5)   jmpd(0x100c2d91, -0xa3);              /* jmp 0x100c2d91 */
l_0x100c2e34:
    II(0x100c2e34, 0x5)   jmpd(0x100c2d77, -0xc2);              /* jmp 0x100c2d77 */
l_0x100c2e39:
    II(0x100c2e39, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c2e3b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c2e3c, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c2e3d, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c2e3e, 0x3)   retd(0x8);                            /* ret 0x8 */
FUNC_END

