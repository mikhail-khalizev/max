FUNC_BEGIN(0x10157ccf, 0xa40f22e23589164d, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x79, 0xe0, 0, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf0, 0x88, 0x55, 0xf8, 0x89, 0x5d, 0xf4, 0x88, 0x4d, 0xfc, 0x31, 0xc0, 0x8b, 0x55, 0xf0, 0x8a, 0x2, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xa, 0x7d, 0x9, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x7b, 0x6, 0, 0, 0xbb, 0, 0x24, 0x1b, 0x10, 0xba, 0xd, 0x24, 0x1b, 0x10, 0x31, 0xc0, 0xe8, 0x6a, 0xe0, 0, 0, 0x89, 0x45, 0xe8, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x89, 0x45, 0xe4, 0x80, 0x7d, 0xfc, 0x30, 0x75, 0x7, 0xc7, 0x45, 0xe4, 0x3a, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x7e, 0x14, 0xf, 0xbf, 0x45, 0xec, 0x3, 0x45, 0xf0, 0x31, 0xd2, 0x8a, 0x50, 0xa, 0xf, 0xbf, 0x45, 0xe4, 0x39, 0xc2, 0x7f, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xec, 0xff, 0x4d, 0xec, 0xeb, 0xda, 0x8b, 0x45, 0xf0, 0x8a, 0, 0x30, 0xe4, 0x48, 0x89, 0x45, 0xe0, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x4d, 0xe0, 0x8b, 0x45, 0xe0, 0x66, 0x3b, 0x45, 0xec, 0x7c, 0x75, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xe0, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf0, 0x8b, 0x40, 0x15, 0x89, 0x42, 0x19, 0xf, 0xbf, 0x55, 0xe0, 0x3, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xe0, 0x3, 0x45, 0xf0, 0x8a, 0x52, 0x3d, 0x88, 0x50, 0x3e, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xe0, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf0, 0x8b, 0x40, 0x47, 0x89, 0x42, 0x4b, 0xf, 0xbf, 0x55, 0xe0, 0x3, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xe0, 0x3, 0x45, 0xf0, 0x8a, 0x52, 0x1, 0x88, 0x50, 0x2, 0xf, 0xbf, 0x45, 0xe0, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xe0, 0x3, 0x55, 0xf0, 0x8a, 0x40, 0xb, 0x88, 0x42, 0xc, 0xe9, 0x7c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf0, 0x1, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0x42, 0x15, 0xf, 0xbf, 0x55, 0xec, 0x3, 0x55, 0xf0, 0x8a, 0x45, 0xf8, 0x88, 0x42, 0x3d, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf0, 0x8b, 0x45, 0x10, 0x89, 0x42, 0x47, 0xf, 0xbf, 0x55, 0xec, 0x3, 0x55, 0xf0, 0x8a, 0x45, 0xfc, 0x88, 0x42, 0x1, 0xf, 0xbf, 0x55, 0xec, 0x3, 0x55, 0xf0, 0x8a, 0x45, 0xe4, 0x88, 0x42, 0xb, 0x8b, 0x45, 0xf0, 0xfe, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x10157ccf, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10157cd4, 0x5)   calld(sys_check_available_stack_size, 0xe079); /* call 0x10165d52 */
    II(0x10157cd9, 0x1)   pushd(esi);                           /* push esi */
    II(0x10157cda, 0x1)   pushd(edi);                           /* push edi */
    II(0x10157cdb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10157cdc, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10157cde, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10157ce4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10157ce7, 0x3)   mov(memb_a32(ss, ebp - 0x8), dl);     /* mov [ebp-0x8], dl */
    II(0x10157cea, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x10157ced, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x10157cf0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10157cf2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10157cf5, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10157cf7, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10157cfa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10157cfd, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10157cff, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10157d04, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x10157d07, 0x2)   jged(0x10157d12, 0x9);                /* jge 0x10157d12 */
    II(0x10157d09, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x10157d10, 0x2)   jmpd(0x10157d2b, 0x19);               /* jmp 0x10157d2b */
l_0x10157d12:
    II(0x10157d12, 0x5)   mov(ecx, 0x67b);                      /* mov ecx, 0x67b */
    II(0x10157d17, 0x5)   mov(ebx, 0x101b2400);                 /* mov ebx, 0x101b2400 */ /* "unitsmgr.cpp" */
    II(0x10157d1c, 0x5)   mov(edx, 0x101b240d);                 /* mov edx, 0x101b240d */ /* "buttons->popup_count < MAXPOPUPBUTTONS" */
    II(0x10157d21, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10157d23, 0x5)   calld(sys_assert, 0xe06a);            /* call 0x10165d92 */
    II(0x10157d28, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x10157d2b:
    II(0x10157d2b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10157d2d, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10157d30, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10157d33, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x30);   /* cmp byte [ebp-0x4], 0x30 */
    II(0x10157d37, 0x2)   jnzd(0x10157d40, 0x7);                /* jnz 0x10157d40 */
    II(0x10157d39, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x3a);  /* mov dword [ebp-0x1c], 0x3a */
l_0x10157d40:
    II(0x10157d40, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10157d44, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10157d46, 0x2)   jled(0x10157d5c, 0x14);               /* jle 0x10157d5c */
    II(0x10157d48, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10157d4c, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10157d4f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10157d51, 0x3)   mov(dl, memb_a32(ds, eax + 0xa));     /* mov dl, [eax+0xa] */
    II(0x10157d54, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10157d58, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10157d5a, 0x2)   jgd(0x10157d5e, 0x2);                 /* jg 0x10157d5e */
l_0x10157d5c:
    II(0x10157d5c, 0x2)   jmpd(0x10157d66, 0x8);                /* jmp 0x10157d66 */
l_0x10157d5e:
    II(0x10157d5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10157d61, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
    II(0x10157d64, 0x2)   jmpd(0x10157d40, -0x26);              /* jmp 0x10157d40 */
l_0x10157d66:
    II(0x10157d66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10157d69, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10157d6b, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10157d6d, 0x1)   dec(eax);                             /* dec eax */
    II(0x10157d6e, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10157d71, 0x2)   jmpd(0x10157d79, 0x6);                /* jmp 0x10157d79 */
l_0x10157d73:
    II(0x10157d73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10157d76, 0x3)   dec(memd_a32(ss, ebp - 0x20));        /* dec dword [ebp-0x20] */
l_0x10157d79:
    II(0x10157d79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10157d7c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10157d80, 0x2)   jld(0x10157df7, 0x75);                /* jl 0x10157df7 */
    II(0x10157d82, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10157d86, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10157d89, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10157d8c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10157d90, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10157d93, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10157d96, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x10157d99, 0x3)   mov(memd_a32(ds, edx + 0x19), eax);   /* mov [edx+0x19], eax */
    II(0x10157d9c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10157da0, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10157da3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10157da7, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10157daa, 0x3)   mov(dl, memb_a32(ds, edx + 0x3d));    /* mov dl, [edx+0x3d] */
    II(0x10157dad, 0x3)   mov(memb_a32(ds, eax + 0x3e), dl);    /* mov [eax+0x3e], dl */
    II(0x10157db0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10157db4, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10157db7, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10157dba, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10157dbe, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10157dc1, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10157dc4, 0x3)   mov(eax, memd_a32(ds, eax + 0x47));   /* mov eax, [eax+0x47] */
    II(0x10157dc7, 0x3)   mov(memd_a32(ds, edx + 0x4b), eax);   /* mov [edx+0x4b], eax */
    II(0x10157dca, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10157dce, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10157dd1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10157dd5, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10157dd8, 0x3)   mov(dl, memb_a32(ds, edx + 0x1));     /* mov dl, [edx+0x1] */
    II(0x10157ddb, 0x3)   mov(memb_a32(ds, eax + 0x2), dl);     /* mov [eax+0x2], dl */
    II(0x10157dde, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10157de2, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10157de5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10157de9, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10157dec, 0x3)   mov(al, memb_a32(ds, eax + 0xb));     /* mov al, [eax+0xb] */
    II(0x10157def, 0x3)   mov(memb_a32(ds, edx + 0xc), al);     /* mov [edx+0xc], al */
    II(0x10157df2, 0x5)   jmpd(0x10157d73, -0x84);              /* jmp 0x10157d73 */
l_0x10157df7:
    II(0x10157df7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10157dfb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10157dfe, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10157e01, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10157e03, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10157e06, 0x3)   mov(memd_a32(ds, edx + 0x15), eax);   /* mov [edx+0x15], eax */
    II(0x10157e09, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10157e0d, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10157e10, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10157e13, 0x3)   mov(memb_a32(ds, edx + 0x3d), al);    /* mov [edx+0x3d], al */
    II(0x10157e16, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10157e1a, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10157e1d, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10157e20, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10157e23, 0x3)   mov(memd_a32(ds, edx + 0x47), eax);   /* mov [edx+0x47], eax */
    II(0x10157e26, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10157e2a, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10157e2d, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10157e30, 0x3)   mov(memb_a32(ds, edx + 0x1), al);     /* mov [edx+0x1], al */
    II(0x10157e33, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10157e37, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10157e3a, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x10157e3d, 0x3)   mov(memb_a32(ds, edx + 0xb), al);     /* mov [edx+0xb], al */
    II(0x10157e40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10157e43, 0x2)   inc(memb_a32(ds, eax));               /* inc byte [eax] */
    II(0x10157e45, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10157e47, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10157e48, 0x1)   popd(edi);                            /* pop edi */
    II(0x10157e49, 0x1)   popd(esi);                            /* pop esi */
    II(0x10157e4a, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

