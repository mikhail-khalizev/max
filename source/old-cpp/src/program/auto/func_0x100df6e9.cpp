FUNC_BEGIN(0x100df6e9, 0x4ff255adc067aa05, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x5f, 0x66, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x4, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe3, 0xc9, 0x5, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x5d, 0x7d, 0x22, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x8, 0x1, 0xd8, 0xe8, 0x49, 0x70, 0xf9, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd, 0xcb, 0x5, 0, 0xeb, 0xcf, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x5d, 0x7d, 0x25, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xf8, 0x81, 0xc3, 0x7c, 0x1, 0, 0, 0x1, 0xd8, 0xe8, 0xc, 0x70, 0xf9, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd0, 0xca, 0x5, 0, 0xeb, 0xcc, 0x8b, 0x45, 0xf8, 0x5, 0xf0, 0x2, 0, 0, 0xe8, 0xf5, 0x73, 0xf9, 0xff, 0x31, 0xd2, 0x66, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x20, 0x16, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x54, 0xe, 0, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0x5, 0xf0, 0x2, 0, 0, 0xe8, 0x28, 0x15, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x76, 0xd, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x1c, 0x74, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x8b, 0xb5, 0x5, 0, 0x84, 0xc0, 0x74, 0x14, 0x8d, 0x45, 0xe8, 0xe8, 0xf2, 0xc, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x60, 0xca, 0x5, 0, 0xeb, 0xd6, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x34, 0xc, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100df6e9, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100df6ee, 0x5)   calld(sys_check_available_stack_size, 0x8665f); /* call 0x10165d52 */
    II(0x100df6f3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100df6f4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100df6f5, 0x1)   pushd(esi);                           /* push esi */
    II(0x100df6f6, 0x1)   pushd(edi);                           /* push edi */
    II(0x100df6f7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100df6f8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100df6fa, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100df700, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100df703, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100df706, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df709, 0x3)   mov(edx, memd_a32(ds, eax + 0x4));    /* mov edx, [eax+0x4] */
    II(0x100df70c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100df70f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df712, 0x5)   calld(0x1013c0fa, 0x5c9e3);           /* call 0x1013c0fa */
    II(0x100df717, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100df71e, 0x2)   jmpd(0x100df726, 0x6);                /* jmp 0x100df726 */
l_0x100df720:
    II(0x100df720, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100df723, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100df726:
    II(0x100df726, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100df72a, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x100df72d, 0x2)   jged(0x100df751, 0x22);               /* jge 0x100df751 */
    II(0x100df72f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100df733, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100df736, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100df739, 0x3)   add(ebx, 0x8);                        /* add ebx, 0x8 */
    II(0x100df73c, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100df73e, 0x5)   calld(0x1007678c, -0x68fb7);          /* call 0x1007678c */
    II(0x100df743, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100df746, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df748, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100df74a, 0x5)   calld(0x1013c25c, 0x5cb0d);           /* call 0x1013c25c */
    II(0x100df74f, 0x2)   jmpd(0x100df720, -0x31);              /* jmp 0x100df720 */
l_0x100df751:
    II(0x100df751, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100df758, 0x2)   jmpd(0x100df760, 0x6);                /* jmp 0x100df760 */
l_0x100df75a:
    II(0x100df75a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100df75d, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100df760:
    II(0x100df760, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100df764, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x100df767, 0x2)   jged(0x100df78e, 0x25);               /* jge 0x100df78e */
    II(0x100df769, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100df76d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100df770, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100df773, 0x6)   add(ebx, 0x17c);                      /* add ebx, 0x17c */
    II(0x100df779, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100df77b, 0x5)   calld(0x1007678c, -0x68ff4);          /* call 0x1007678c */
    II(0x100df780, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100df783, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df785, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100df787, 0x5)   calld(0x1013c25c, 0x5cad0);           /* call 0x1013c25c */
    II(0x100df78c, 0x2)   jmpd(0x100df75a, -0x34);              /* jmp 0x100df75a */
l_0x100df78e:
    II(0x100df78e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df791, 0x5)   add(eax, 0x2f0);                      /* add eax, 0x2f0 */
    II(0x100df796, 0x5)   calld(0x10076b90, -0x68c0b);          /* call 0x10076b90 */
    II(0x100df79b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df79d, 0x3)   mov(dx, ax);                          /* mov dx, ax */
    II(0x100df7a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df7a3, 0x5)   calld(0x100e0dc8, 0x1620);            /* call 0x100e0dc8 */
    II(0x100df7a8, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100df7ac, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100df7af, 0x5)   calld(0x100e0608, 0xe54);             /* call 0x100e0608 */
    II(0x100df7b4, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100df7b7, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100df7bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df7be, 0x5)   add(eax, 0x2f0);                      /* add eax, 0x2f0 */
    II(0x100df7c3, 0x5)   calld(0x100e0cf0, 0x1528);            /* call 0x100e0cf0 */
    II(0x100df7c8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df7ca, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100df7cd, 0x5)   calld(0x100e0548, 0xd76);             /* call 0x100e0548 */
    II(0x100df7d2, 0x2)   jmpd(0x100df7dc, 0x8);                /* jmp 0x100df7dc */
l_0x100df7d4:
    II(0x100df7d4, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100df7d7, 0x5)   calld(0x10076bf8, -0x68be4);          /* call 0x10076bf8 */
l_0x100df7dc:
    II(0x100df7dc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df7de, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100df7e1, 0x5)   calld(0x1013ad71, 0x5b58b);           /* call 0x1013ad71 */
    II(0x100df7e6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df7e8, 0x2)   jzd(0x100df7fe, 0x14);                /* jz 0x100df7fe */
    II(0x100df7ea, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100df7ed, 0x5)   calld(0x100e04e4, 0xcf2);             /* call 0x100e04e4 */
    II(0x100df7f2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df7f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df7f7, 0x5)   calld(0x1013c25c, 0x5ca60);           /* call 0x1013c25c */
    II(0x100df7fc, 0x2)   jmpd(0x100df7d4, -0x2a);              /* jmp 0x100df7d4 */
l_0x100df7fe:
    II(0x100df7fe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df800, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100df803, 0x5)   calld(0x100e043c, 0xc34);             /* call 0x100e043c */
    II(0x100df808, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100df80a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100df80b, 0x1)   popd(edi);                            /* pop edi */
    II(0x100df80c, 0x1)   popd(esi);                            /* pop esi */
    II(0x100df80d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100df80e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100df80f, 0x1)   retd();                               /* ret */
FUNC_END

