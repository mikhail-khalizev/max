FUNC_BEGIN(0x100d0264, 0x82d758150659859b, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xe4, 0x5a, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xc0, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x8d, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0xd1, 0xaf, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x24, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x9, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x26, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1e, 0xe8, 0xd0, 0x51, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x24, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xce, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x40, 0x8b, 0x45, 0xf0, 0xff, 0x52, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1e, 0xe8, 0x76, 0xb0, 0xfb, 0xff, 0x98, 0x85, 0xc0, 0x74, 0xe, 0x8b, 0x45, 0xf8, 0xe8, 0x4a, 0xfe, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xf4, 0x74, 0xa, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0x8, 0x3, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d0264, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100d0269, 0x5)   calld(sys_check_available_stack_size, 0x95ae4); /* call 0x10165d52 */
    II(0x100d026e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d026f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d0270, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d0271, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d0272, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d0273, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d0275, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100d027b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d027e, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100d0281, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0284, 0x5)   calld(0x100d0149, -0x140);            /* call 0x100d0149 */
    II(0x100d0289, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d028c, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x100d028f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0292, 0x5)   calld(0x1008b268, -0x4502f);          /* call 0x1008b268 */
    II(0x100d0297, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d0299, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d029c, 0x4)   mov(memw_a32(ds, eax + 0x26), dx);    /* mov [eax+0x26], dx */
    II(0x100d02a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d02a3, 0x3)   mov(eax, memd_a32(ds, eax + 0x24));   /* mov eax, [eax+0x24] */
    II(0x100d02a6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d02a9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d02ab, 0x2)   jged(0x100d02b6, 0x9);                /* jge 0x100d02b6 */
    II(0x100d02ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d02b0, 0x6)   mov(memw_a32(ds, eax + 0x26), 0);     /* mov word [eax+0x26], 0x0 */
l_0x100d02b6:
    II(0x100d02b6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d02b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d02bc, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d02bf, 0x5)   calld(0x100d5494, 0x51d0);            /* call 0x100d5494 */
    II(0x100d02c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d02c7, 0x3)   mov(edx, memd_a32(ds, eax + 0x24));   /* mov edx, [eax+0x24] */
    II(0x100d02ca, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d02cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d02d0, 0x5)   calld(0x100d01a3, -0x132);            /* call 0x100d01a3 */
    II(0x100d02d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d02d8, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100d02db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d02de, 0x3)   mov(edx, memd_a32(ds, eax + 0x40));   /* mov edx, [eax+0x40] */
//    II(0x100d02e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d02e4, 0x3)   calld_abs(memd_a32(ds, edx + 0x10));  /* call dword near [edx+0x10] */
    II(0x100d02e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d02ea, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d02ed, 0x5)   calld(my_2_get_count, -0x44f8a);      /* call 0x1008b368 */
    II(0x100d02f2, 0x1)   cwde();                               /* cwde */
    II(0x100d02f3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d02f5, 0x2)   jzd(0x100d0305, 0xe);                 /* jz 0x100d0305 */
    II(0x100d02f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d02fa, 0x5)   calld(0x100d0149, -0x1b6);            /* call 0x100d0149 */
    II(0x100d02ff, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100d0303, 0x2)   jzd(0x100d030f, 0xa);                 /* jz 0x100d030f */
l_0x100d0305:
    II(0x100d0305, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d0307, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d030a, 0x5)   calld(0x100d0617, 0x308);             /* call 0x100d0617 */
l_0x100d030f:
    II(0x100d030f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d0311, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d0312, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d0313, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d0314, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d0315, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d0316, 0x1)   retd();                               /* ret */
FUNC_END

