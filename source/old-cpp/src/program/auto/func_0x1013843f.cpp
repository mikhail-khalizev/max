FUNC_BEGIN(0x1013843f, 0xa833f44c51ca6d25, 0x20, ({0x68, 0xe8, 0x3, 0, 0, 0xe8, 0x9, 0xd9, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xbc, 0x3, 0, 0, 0x88, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xec, 0xff, 0xff, 0xff, 0xff, 0x31, 0xc0, 0xa0, 0xf8, 0x70, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x7, 0xc6, 0x5, 0xfc, 0x70, 0x1c, 0x10, 0, 0xe8, 0x88, 0x17, 0, 0, 0x88, 0x45, 0xe8, 0xb8, 0x1, 0, 0, 0, 0x50, 0xa1, 0x66, 0xd3, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbe, 0x45, 0xe8, 0x50, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x50, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x50, 0x8d, 0x4d, 0xf0, 0x8d, 0x5d, 0xcc, 0xba, 0xa, 0, 0, 0, 0x8d, 0x85, 0x8c, 0xfc, 0xff, 0xff, 0xe8, 0x58, 0xf5, 0xff, 0xff, 0xe8, 0x2e, 0xfe, 0, 0, 0x89, 0x85, 0x88, 0xfc, 0xff, 0xff, 0xc7, 0x85, 0x84, 0xfc, 0xff, 0xff, 0, 0, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0x75, 0x5, 0xe8, 0xb0, 0x27, 0xff, 0xff, 0xe8, 0x1f, 0x2d, 0x3, 0, 0x89, 0x85, 0x80, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0xf, 0x8c, 0x76, 0, 0, 0, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0x49, 0x1, 0, 0, 0x74, 0xc, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0x51, 0x1, 0, 0, 0x75, 0x1a, 0xba, 0x1b, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x53, 0x8b, 0x84, 0x28, 0xdb, 0xfc, 0xff, 0xff, 0xe8, 0x58, 0x2d, 0xfb, 0xff, 0xeb, 0x44, 0x8b, 0x95, 0x80, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x53, 0x8b, 0x84, 0x28, 0xdb, 0xfc, 0xff, 0xff, 0xe8, 0x3d, 0x2d, 0xfb, 0xff, 0x84, 0xc0, 0x74, 0x27, 0x83, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0xd, 0x75, 0x6, 0x80, 0x7d, 0xf8, 0, 0x75, 0x2, 0xeb, 0xc, 0xc7, 0x85, 0x80, 0xfc, 0xff, 0xff, 0xfe, 0x3, 0, 0, 0xeb, 0xa, 0xc7, 0x85, 0x80, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0, 0xf, 0x8c, 0x80, 0x6, 0, 0, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0xe9, 0x3, 0, 0, 0x7c, 0xc, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0xf2, 0x3, 0, 0, 0x7e, 0x2, 0xeb, 0x24, 0x31, 0xc9, 0x8a, 0x4d, 0xf8, 0x8b, 0x85, 0x80, 0xfc, 0xff, 0xff, 0x81, 0xe8, 0xe9, 0x3, 0, 0, 0xf, 0xbf, 0xd8, 0x8d, 0x55, 0xec, 0x8d, 0x85, 0x8c, 0xfc, 0xff, 0xff, 0xe8, 0x52, 0xfd, 0xff, 0xff, 0xeb, 0x40, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0xf3, 0x3, 0, 0, 0x7c, 0xc, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0xfc, 0x3, 0, 0, 0x7e, 0x2, 0xeb, 0x26, 0x80, 0x7d, 0xf8, 0, 0x74, 0x16, 0x31, 0xdb, 0x8a, 0x5d, 0xf8, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x85, 0x8c, 0xfc, 0xff, 0xff, 0xe8, 0xe6, 0xfd, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x80, 0xfc, 0xff, 0xff, 0xff, 0x3, 0, 0, 0x8b, 0x85, 0x80, 0xfc, 0xff, 0xff, 0x89, 0x85, 0x7c, 0xfc, 0xff, 0xff, 0xe9, 0xfd, 0x4, 0, 0, 0xb8, 0x1b, 0x5, 0, 0, 0xe8, 0xc3, 0xfc, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0, 0x74, 0x9, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x75, 0x2, 0xeb, 0x43, 0xa0, 0x1e, 0x39, 0x1c, 0x10, 0x88, 0x85, 0x78, 0xfc, 0xff, 0xff, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0xa, 0xe8, 0xc1, 0x23, 0xf9, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0xba, 0x2, 0, 0, 0, 0xb8, 0x34, 0xc8, 0x1a, 0x10, 0xe8, 0xc5, 0xd6, 0xfd, 0xff, 0x8a, 0x85, 0x78, 0xfc, 0xff, 0xff, 0xa2, 0x1e, 0x39, 0x1c, 0x10, 0xeb, 0x37, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0xff, 0x74, 0x11, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x53, 0x80, 0xbc, 0x28, 0xd9, 0xfc, 0xff, 0xff, 0, 0x75, 0x2, 0xeb, 0x1b, 0xf, 0xbf, 0x55, 0xec, 0xa1, 0x66, 0xd3, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0xc7, 0x85, 0x84, 0xfc, 0xff, 0xff, 0x1, 0, 0, 0, 0xe9, 0x57, 0x5, 0, 0, 0xb8, 0x17, 0x5, 0, 0, 0xe8, 0x29, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0xff, 0xf, 0x84, 0x91, 0x1, 0, 0, 0xba, 0xd, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x53, 0x8b, 0x84, 0x28, 0xdb, 0xfc, 0xff, 0xff, 0xe8, 0xad, 0x2b, 0xfb, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x53, 0x8d, 0x95, 0x8c, 0xfc, 0xff, 0xff, 0x1, 0xd0, 0xe8, 0x68, 0xe7, 0xff, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x9, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x29, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xd0, 0x53, 0x8d, 0x85, 0x8c, 0xfc, 0xff, 0xff, 0x1, 0xd0, 0x8d, 0x50, 0x2f, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x53, 0x8d, 0x9d, 0x8c, 0xfc, 0xff, 0xff, 0x1, 0xd8, 0x83, 0xc0, 0x20, 0xe8, 0x2e, 0xa, 0xff, 0xff, 0x80, 0x7d, 0xe8, 0x1, 0x74, 0x6, 0x80, 0x7d, 0xe8, 0x8, 0x75, 0x2, 0xeb, 0x6, 0x80, 0x7d, 0xe8, 0x2, 0x75, 0x2, 0xeb, 0xa, 0x80, 0x7d, 0xe8, 0x9, 0xf, 0x85, 0x82, 0, 0, 0, 0xc7, 0x5, 0xdc, 0x37, 0x1c, 0x10, 0x1, 0, 0, 0, 0x66, 0xa1, 0x68, 0xd3, 0x1b, 0x10, 0x8b, 0x55, 0xec, 0x1, 0xc2, 0x66, 0x89, 0x15, 0x82, 0x39, 0x1c, 0x10, 0x80, 0x7d, 0xe8, 0x9, 0x75, 0x60, 0xc7, 0x85, 0x74, 0xfc, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0xff, 0x85, 0x74, 0xfc, 0xff, 0xff, 0x83, 0xbd, 0x74, 0xfc, 0xff, 0xff, 0x4, 0x7d, 0x3f, 0x69, 0x85, 0x74, 0xfc, 0xff, 0xff, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x24, 0x8b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x98, 0x44, 0xb4, 0x1b, 0x10, 0x8a, 0x85, 0x74, 0xfc, 0xff, 0xff, 0x4, 0x63, 0xf, 0xbe, 0xd0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x3e, 0xda, 0xfc, 0xff, 0xeb, 0xac, 0xbb, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xd0, 0x53, 0x8d, 0x85, 0x8c, 0xfc, 0xff, 0xff, 0x1, 0xc2, 0x83, 0xc2, 0x2f, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x53, 0x8d, 0x8d, 0x8c, 0xfc, 0xff, 0xff, 0x1, 0xc8, 0x83, 0xc0, 0x20, 0xe8, 0x8a, 0xe6, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x53, 0xc6, 0x84, 0x28, 0xd9, 0xfc, 0xff, 0xff, 0x1, 0xf, 0xbf, 0x55, 0xec, 0x6b, 0xd2, 0x53, 0x8a, 0x94, 0x2a, 0xda, 0xfc, 0xff, 0xff, 0x81, 0xe2, 0xff, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x53, 0x8d, 0x9d, 0x8c, 0xfc, 0xff, 0xff, 0x1, 0xd8, 0xe8, 0x1f, 0xf0, 0xff, 0xff, 0x31, 0xc0, 0xe8, 0x8, 0, 0xfb, 0xff, 0x8b, 0x40, 0x12, 0xe8, 0x47, 0xec, 0x2, 0, 0x66, 0xa1, 0x68, 0xd3, 0x1b, 0x10, 0x8b, 0x55, 0xec, 0x1, 0xc2, 0x66, 0x89, 0x15, 0x20, 0x71, 0x1c, 0x10, 0xe9, 0xaa, 0x3, 0, 0, 0xe8, 0x4d, 0xe3, 0xfd, 0xff, 0xe9, 0xa0, 0x3, 0, 0, 0xb8, 0x1a, 0x5, 0, 0, 0xe8, 0x72, 0xfa, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0, 0x74, 0x2f, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x75, 0x9, 0xc6, 0x85, 0x70, 0xfc, 0xff, 0xff, 0x1, 0xeb, 0x7, 0xc6, 0x85, 0x70, 0xfc, 0xff, 0xff, 0, 0x31, 0xdb, 0x8a, 0x9d, 0x70, 0xfc, 0xff, 0xff, 0x31, 0xd2, 0xb8, 0x8, 0, 0, 0, 0xe8, 0x65, 0xd2, 0xfc, 0xff, 0xeb, 0x15, 0xe8, 0xca, 0xc5, 0xf9, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0xb8, 0x7, 0, 0, 0, 0xe8, 0x4e, 0xd2, 0xfc, 0xff, 0xe9, 0x47, 0x3, 0, 0, 0xb8, 0x19, 0x5, 0, 0, 0xe8, 0x19, 0xfa, 0xff, 0xff, 0xc7, 0x85, 0x84, 0xfc, 0xff, 0xff, 0x1, 0, 0, 0, 0xe9, 0x2e, 0x3, 0, 0, 0xb8, 0x18, 0x5, 0, 0, 0xe8, 0, 0xfa, 0xff, 0xff, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0xc7, 0x85, 0x84, 0xfc, 0xff, 0xff, 0x1, 0, 0, 0, 0xe9, 0xe, 0x3, 0, 0, 0xb8, 0xff, 0x4, 0, 0, 0xe8, 0xe0, 0xf9, 0xff, 0xff, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0x49, 0x1, 0, 0, 0x75, 0xd, 0xa1, 0x66, 0xd3, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0xe4, 0x2, 0, 0, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0x51, 0x1, 0, 0, 0x75, 0xd, 0xa1, 0x66, 0xd3, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x5b, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0xc4, 0x2, 0, 0, 0x80, 0x7d, 0xf8, 0, 0x74, 0xc, 0xc7, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0x7, 0, 0, 0, 0xeb, 0xa, 0xc7, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0x5, 0, 0, 0, 0x8b, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0x89, 0x85, 0x68, 0xfc, 0xff, 0xff, 0xc7, 0x85, 0x74, 0xfc, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0xff, 0x85, 0x74, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x68, 0xfc, 0xff, 0xff, 0x3b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0x7e, 0x42, 0x8b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x44, 0x28, 0xcc, 0x89, 0x85, 0x64, 0xfc, 0xff, 0xff, 0x83, 0xbd, 0x64, 0xfc, 0xff, 0xff, 0, 0x74, 0x1a, 0x31, 0xd2, 0x8b, 0x85, 0x64, 0xfc, 0xff, 0xff, 0xe8, 0x86, 0x5b, 0xf9, 0xff, 0xe8, 0xad, 0xd5, 0x2, 0, 0x89, 0x85, 0x60, 0xfc, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x60, 0xfc, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xa3, 0xc7, 0x85, 0x74, 0xfc, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0xff, 0x85, 0x74, 0xfc, 0xff, 0xff, 0x83, 0xbd, 0x74, 0xfc, 0xff, 0xff, 0xa, 0x7d, 0x16, 0x6b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0x53, 0x8d, 0x95, 0x8c, 0xfc, 0xff, 0xff, 0x1, 0xd0, 0xe8, 0xd6, 0xe0, 0xff, 0xff, 0xeb, 0xd5, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0x3b, 0x1, 0, 0, 0x74, 0x10, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0x3c, 0x1, 0, 0, 0xf, 0x85, 0x7d, 0, 0, 0, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0x3b, 0x1, 0, 0, 0x75, 0xc, 0xc7, 0x85, 0x5c, 0xfc, 0xff, 0xff, 0x1, 0, 0, 0, 0xeb, 0xa, 0xc7, 0x85, 0x5c, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf, 0xbe, 0x45, 0xe8, 0x3, 0x85, 0x5c, 0xfc, 0xff, 0xff, 0x88, 0x45, 0xe8, 0x80, 0x7d, 0xe8, 0xa, 0x75, 0x6, 0xc6, 0x45, 0xe8, 0, 0xeb, 0xa, 0x80, 0x7d, 0xe8, 0, 0x7d, 0x4, 0xc6, 0x45, 0xe8, 0x9, 0xf, 0xbe, 0x55, 0xe8, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x8b, 0x20, 0xf9, 0xff, 0x80, 0x7d, 0xe8, 0x7, 0x75, 0x9, 0xc6, 0x85, 0x58, 0xfc, 0xff, 0xff, 0x1, 0xeb, 0x7, 0xc6, 0x85, 0x58, 0xfc, 0xff, 0xff, 0, 0x8a, 0x85, 0x58, 0xfc, 0xff, 0xff, 0x88, 0x45, 0xfc, 0x66, 0xc7, 0x5, 0x68, 0xd3, 0x1b, 0x10, 0x1, 0, 0xeb, 0x2b, 0x81, 0xbd, 0x80, 0xfc, 0xff, 0xff, 0x49, 0x1, 0, 0, 0x75, 0x17, 0xa1, 0x66, 0xd3, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0xa, 0x7e, 0x8, 0x66, 0x83, 0x2d, 0x68, 0xd3, 0x1b, 0x10, 0xa, 0xeb, 0x8, 0x66, 0x83, 0x5, 0x68, 0xd3, 0x1b, 0x10, 0xa, 0x31, 0xc0, 0x50, 0xa1, 0x66, 0xd3, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbe, 0x45, 0xe8, 0x50, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x50, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x50, 0x8d, 0x4d, 0xf0, 0x8d, 0x5d, 0xcc, 0xba, 0xa, 0, 0, 0, 0x8d, 0x85, 0x8c, 0xfc, 0xff, 0xff, 0xe8, 0x20, 0xef, 0xff, 0xff, 0xc7, 0x45, 0xec, 0xff, 0xff, 0xff, 0xff, 0xe9, 0xf9, 0, 0, 0, 0xe9, 0xf4, 0, 0, 0, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0x51, 0x1, 0, 0, 0xf, 0x82, 0x86, 0, 0, 0, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0x51, 0x1, 0, 0, 0xf, 0x86, 0xc6, 0xfd, 0xff, 0xff, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0xfe, 0x3, 0, 0, 0x72, 0x34, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0xfe, 0x3, 0, 0, 0xf, 0x86, 0x61, 0xfb, 0xff, 0xff, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0xff, 0x3, 0, 0, 0xf, 0x86, 0xb7, 0xfa, 0xff, 0xff, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0, 0x4, 0, 0, 0xf, 0x84, 0x6a, 0xfd, 0xff, 0xff, 0xeb, 0x9d, 0xeb, 0x9b, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0xe8, 0x3, 0, 0, 0x72, 0x25, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0xe8, 0x3, 0, 0, 0xf, 0x86, 0x31, 0xfd, 0xff, 0xff, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0xfd, 0x3, 0, 0, 0xf, 0x84, 0xc8, 0xfc, 0xff, 0xff, 0xe9, 0x6a, 0xff, 0xff, 0xff, 0xe9, 0x65, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0x3f, 0x72, 0x43, 0x83, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0x3f, 0xf, 0x86, 0xb2, 0xfc, 0xff, 0xff, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0x19, 0x1, 0, 0, 0x72, 0x25, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0x19, 0x1, 0, 0, 0xf, 0x86, 0x82, 0xfc, 0xff, 0xff, 0x81, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0x49, 0x1, 0, 0, 0xf, 0x84, 0xe, 0xfd, 0xff, 0xff, 0xe9, 0x1e, 0xff, 0xff, 0xff, 0xe9, 0x19, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x7c, 0xfc, 0xff, 0xff, 0x1b, 0xf, 0x84, 0xc8, 0xfc, 0xff, 0xff, 0xe9, 0x7, 0xff, 0xff, 0xff, 0x83, 0x7d, 0xf0, 0, 0x74, 0x10, 0x8b, 0x85, 0x88, 0xfc, 0xff, 0xff, 0xe8, 0x9e, 0xf9, 0, 0, 0x83, 0xf8, 0x50, 0x73, 0x2, 0xeb, 0x13, 0xe8, 0xd9, 0xf6, 0, 0, 0x89, 0x85, 0x88, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0xe8, 0x45, 0x7a, 0xfb, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x12, 0xe8, 0x5d, 0xc4, 0xf9, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x31, 0xc0, 0xe8, 0xf0, 0x81, 0xfc, 0xff, 0xeb, 0x31, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0x74, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x6, 0x75, 0x2, 0xeb, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xa, 0x75, 0x2, 0xeb, 0x12, 0xba, 0x1, 0, 0, 0, 0xa1, 0x60, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xd6, 0xa6, 0xfb, 0xff, 0x83, 0xbd, 0x84, 0xfc, 0xff, 0xff, 0, 0xf, 0x84, 0x54, 0xf8, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0, 0x74, 0xc, 0xc7, 0x85, 0x54, 0xfc, 0xff, 0xff, 0x7, 0, 0, 0, 0xeb, 0xa, 0xc7, 0x85, 0x54, 0xfc, 0xff, 0xff, 0x5, 0, 0, 0, 0x8b, 0x85, 0x54, 0xfc, 0xff, 0xff, 0x89, 0x85, 0x50, 0xfc, 0xff, 0xff, 0xc7, 0x85, 0x74, 0xfc, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0xff, 0x85, 0x74, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x50, 0xfc, 0xff, 0xff, 0x3b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0x7e, 0x42, 0x8b, 0x85, 0x74, 0xfc, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x44, 0x28, 0xcc, 0x89, 0x85, 0x4c, 0xfc, 0xff, 0xff, 0x83, 0xbd, 0x4c, 0xfc, 0xff, 0xff, 0, 0x74, 0x1a, 0x31, 0xd2, 0x8b, 0x85, 0x4c, 0xfc, 0xff, 0xff, 0xe8, 0x3e, 0x58, 0xf9, 0xff, 0xe8, 0x65, 0xd2, 0x2, 0, 0x89, 0x85, 0x48, 0xfc, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x48, 0xfc, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xa3, 0x83, 0x7d, 0xf0, 0, 0x74, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0x27, 0x7a, 0xfb, 0xff, 0x8b, 0x45, 0xf0, 0xe8, 0x98, 0x23, 0x3, 0, 0xe8, 0xd5, 0x1b, 0xfb, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x75, 0xa, 0xe8, 0xb8, 0xf5, 0, 0, 0xa3, 0x6c, 0x39, 0x1c, 0x10, 0x8b, 0x45, 0xf4, 0x89, 0x85, 0x44, 0xfc, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x8c, 0xfc, 0xff, 0xff, 0xe8, 0x35, 0xf, 0, 0, 0xeb, 0xd, 0x31, 0xd2, 0x8d, 0x85, 0x8c, 0xfc, 0xff, 0xff, 0xe8, 0x26, 0xf, 0, 0, 0x8b, 0x85, 0x44, 0xfc, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1013843f, 0x5)   pushd(0x3e8);                         /* push dword 0x3e8 */
    II(0x10138444, 0x5)   calld(sys_check_available_stack_size, 0x2d909); /* call 0x10165d52 */
    II(0x10138449, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013844a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013844b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013844c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013844d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013844e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10138450, 0x6)   sub(esp, 0x3bc);                      /* sub esp, 0x3bc */
    II(0x10138456, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10138459, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x1013845c, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10138463, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1013846a, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffffffff); /* mov dword [ebp-0x14], 0xffffffff */
    II(0x10138471, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10138473, 0x5)   mov(al, memb_a32(ds, 0x101c70f8));    /* mov al, [0x101c70f8] */
    II(0x10138478, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1013847a, 0x2)   jnzd(0x10138483, 0x7);                /* jnz 0x10138483 */
    II(0x1013847c, 0x7)   mov(memb_a32(ds, 0x101c70fc), 0);     /* mov byte [0x101c70fc], 0x0 */
l_0x10138483:
    II(0x10138483, 0x5)   calld(0x10139c10, 0x1788);            /* call 0x10139c10 */
    II(0x10138488, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x1013848b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10138490, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138491, 0x5)   mov(eax, memd_a32(ds, 0x101bd366));   /* mov eax, [0x101bd366] */
    II(0x10138496, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10138499, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013849a, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x18)); /* movsx eax, byte [ebp-0x18] */
    II(0x1013849e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013849f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101384a1, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101384a4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101384a5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101384a7, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x101384aa, 0x1)   pushd(eax);                           /* push eax */
    II(0x101384ab, 0x3)   lea(ecx, ebp - 0x10);                 /* lea ecx, [ebp-0x10] */
    II(0x101384ae, 0x3)   lea(ebx, ebp - 0x34);                 /* lea ebx, [ebp-0x34] */
    II(0x101384b1, 0x5)   mov(edx, 0xa);                        /* mov edx, 0xa */
    II(0x101384b6, 0x6)   lea(eax, ebp - 0x374);                /* lea eax, [ebp+0xfffffc8c] */
    II(0x101384bc, 0x5)   calld(0x10137a19, -0xaa8);            /* call 0x10137a19 */
    II(0x101384c1, 0x5)   calld(0x101482f4, 0xfe2e);            /* call 0x101482f4 */
    II(0x101384c6, 0x6)   mov(memd_a32(ss, ebp - 0x378), eax);  /* mov [ebp+0xfffffc88], eax */
    II(0x101384cc, 0xa)   mov(memd_a32(ss, ebp - 0x37c), 0);    /* mov dword [ebp+0xfffffc84], 0x0 */
l_0x101384d6:
    II(0x101384d6, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x101384dd, 0x2)   jnzd(0x101384e4, 0x5);                /* jnz 0x101384e4 */
    II(0x101384df, 0x5)   calld(0x1012ac94, -0xd850);           /* call 0x1012ac94 */
l_0x101384e4:
    II(0x101384e4, 0x5)   calld(/* sys */ 0x1016b208, 0x32d1f); /* call 0x1016b208 */
    II(0x101384e9, 0x6)   mov(memd_a32(ss, ebp - 0x380), eax);  /* mov [ebp+0xfffffc80], eax */
    II(0x101384ef, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101384f3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101384f5, 0x6)   jld(0x10138571, 0x76);                /* jl dword 0x10138571 */
    II(0x101384fb, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x149); /* cmp dword [ebp+0xfffffc80], 0x149 */
    II(0x10138505, 0x2)   jzd(0x10138513, 0xc);                 /* jz 0x10138513 */
    II(0x10138507, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x151); /* cmp dword [ebp+0xfffffc80], 0x151 */
    II(0x10138511, 0x2)   jnzd(0x1013852d, 0x1a);               /* jnz 0x1013852d */
l_0x10138513:
    II(0x10138513, 0x5)   mov(edx, 0x1b);                       /* mov edx, 0x1b */
    II(0x10138518, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1013851c, 0x3)   imul(eax, eax, 0x53);                 /* imul eax, eax, 0x53 */
    II(0x1013851f, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x325)); /* mov eax, [eax+ebp+0xfffffcdb] */
    II(0x10138526, 0x5)   calld(0x100eb283, -0x4d2a8);          /* call 0x100eb283 */
    II(0x1013852b, 0x2)   jmpd(0x10138571, 0x44);               /* jmp 0x10138571 */
l_0x1013852d:
    II(0x1013852d, 0x6)   mov(edx, memd_a32(ss, ebp - 0x380));  /* mov edx, [ebp+0xfffffc80] */
    II(0x10138533, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10138537, 0x3)   imul(eax, eax, 0x53);                 /* imul eax, eax, 0x53 */
    II(0x1013853a, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x325)); /* mov eax, [eax+ebp+0xfffffcdb] */
    II(0x10138541, 0x5)   calld(0x100eb283, -0x4d2c3);          /* call 0x100eb283 */
    II(0x10138546, 0x2)   test(al, al);                         /* test al, al */
    II(0x10138548, 0x2)   jzd(0x10138571, 0x27);                /* jz 0x10138571 */
    II(0x1013854a, 0x7)   cmp(memd_a32(ss, ebp - 0x380), 0xd);  /* cmp dword [ebp+0xfffffc80], 0xd */
    II(0x10138551, 0x2)   jnzd(0x10138559, 0x6);                /* jnz 0x10138559 */
    II(0x10138553, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10138557, 0x2)   jnzd(0x1013855b, 0x2);                /* jnz 0x1013855b */
l_0x10138559:
    II(0x10138559, 0x2)   jmpd(0x10138567, 0xc);                /* jmp 0x10138567 */
l_0x1013855b:
    II(0x1013855b, 0xa)   mov(memd_a32(ss, ebp - 0x380), 0x3fe); /* mov dword [ebp+0xfffffc80], 0x3fe */
    II(0x10138565, 0x2)   jmpd(0x10138571, 0xa);                /* jmp 0x10138571 */
l_0x10138567:
    II(0x10138567, 0xa)   mov(memd_a32(ss, ebp - 0x380), 0xffffffff); /* mov dword [ebp+0xfffffc80], 0xffffffff */
l_0x10138571:
    II(0x10138571, 0x7)   cmp(memd_a32(ss, ebp - 0x380), 0);    /* cmp dword [ebp+0xfffffc80], 0x0 */
    II(0x10138578, 0x6)   jld(0x10138bfe, 0x680);               /* jl dword 0x10138bfe */
    II(0x1013857e, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x3e9); /* cmp dword [ebp+0xfffffc80], 0x3e9 */
    II(0x10138588, 0x2)   jld(0x10138596, 0xc);                 /* jl 0x10138596 */
    II(0x1013858a, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x3f2); /* cmp dword [ebp+0xfffffc80], 0x3f2 */
    II(0x10138594, 0x2)   jled(0x10138598, 0x2);                /* jle 0x10138598 */
l_0x10138596:
    II(0x10138596, 0x2)   jmpd(0x101385bc, 0x24);               /* jmp 0x101385bc */
l_0x10138598:
    II(0x10138598, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1013859a, 0x3)   mov(cl, memb_a32(ss, ebp - 0x8));     /* mov cl, [ebp-0x8] */
    II(0x1013859d, 0x6)   mov(eax, memd_a32(ss, ebp - 0x380));  /* mov eax, [ebp+0xfffffc80] */
    II(0x101385a3, 0x6)   sub(eax, 0x3e9);                      /* sub eax, 0x3e9 */
    II(0x101385a9, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101385ac, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x101385af, 0x6)   lea(eax, ebp - 0x374);                /* lea eax, [ebp+0xfffffc8c] */
    II(0x101385b5, 0x5)   calld(0x1013830c, -0x2ae);            /* call 0x1013830c */
    II(0x101385ba, 0x2)   jmpd(0x101385fc, 0x40);               /* jmp 0x101385fc */
l_0x101385bc:
    II(0x101385bc, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x3f3); /* cmp dword [ebp+0xfffffc80], 0x3f3 */
    II(0x101385c6, 0x2)   jld(0x101385d4, 0xc);                 /* jl 0x101385d4 */
    II(0x101385c8, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x3fc); /* cmp dword [ebp+0xfffffc80], 0x3fc */
    II(0x101385d2, 0x2)   jled(0x101385d6, 0x2);                /* jle 0x101385d6 */
l_0x101385d4:
    II(0x101385d4, 0x2)   jmpd(0x101385fc, 0x26);               /* jmp 0x101385fc */
l_0x101385d6:
    II(0x101385d6, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x101385da, 0x2)   jzd(0x101385f2, 0x16);                /* jz 0x101385f2 */
    II(0x101385dc, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101385de, 0x3)   mov(bl, memb_a32(ss, ebp - 0x8));     /* mov bl, [ebp-0x8] */
    II(0x101385e1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x101385e5, 0x6)   lea(eax, ebp - 0x374);                /* lea eax, [ebp+0xfffffc8c] */
    II(0x101385eb, 0x5)   calld(0x101383d6, -0x21a);            /* call 0x101383d6 */
    II(0x101385f0, 0x2)   jmpd(0x101385fc, 0xa);                /* jmp 0x101385fc */
l_0x101385f2:
    II(0x101385f2, 0xa)   mov(memd_a32(ss, ebp - 0x380), 0x3ff); /* mov dword [ebp+0xfffffc80], 0x3ff */
l_0x101385fc:
    II(0x101385fc, 0x6)   mov(eax, memd_a32(ss, ebp - 0x380));  /* mov eax, [ebp+0xfffffc80] */
    II(0x10138602, 0x6)   mov(memd_a32(ss, ebp - 0x384), eax);  /* mov [ebp+0xfffffc7c], eax */
    II(0x10138608, 0x5)   jmpd(0x10138b0a, 0x4fd);              /* jmp 0x10138b0a */
l_0x1013860d:
    II(0x1013860d, 0x5)   mov(eax, 0x51b);                      /* mov eax, 0x51b */
    II(0x10138612, 0x5)   calld(0x101382da, -0x33d);            /* call 0x101382da */
    II(0x10138617, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1013861b, 0x2)   jzd(0x10138626, 0x9);                 /* jz 0x10138626 */
    II(0x1013861d, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x10138624, 0x2)   jnzd(0x10138628, 0x2);                /* jnz 0x10138628 */
l_0x10138626:
    II(0x10138626, 0x2)   jmpd(0x1013866b, 0x43);               /* jmp 0x1013866b */
l_0x10138628:
    II(0x10138628, 0x5)   mov(al, memb_a32(ds, 0x101c391e));    /* mov al, [0x101c391e] */
    II(0x1013862d, 0x6)   mov(memb_a32(ss, ebp - 0x388), al);   /* mov [ebp+0xfffffc78], al */
    II(0x10138633, 0x7)   mov(memb_a32(ds, 0x101c391e), 0xa);   /* mov byte [0x101c391e], 0xa */
    II(0x1013863a, 0x5)   calld(0x100caa00, -0x6dc3f);          /* call 0x100caa00 */
    II(0x1013863f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10138644, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138645, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1013864a, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1013864f, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x10138654, 0x5)   mov(eax, 0x101ac834);                 /* mov eax, 0x101ac834 */ /* "Unable to load a saved game while remote play in progress." */
    II(0x10138659, 0x5)   calld(0x10115d23, -0x2293b);          /* call 0x10115d23 */
    II(0x1013865e, 0x6)   mov(al, memb_a32(ss, ebp - 0x388));   /* mov al, [ebp+0xfffffc78] */
    II(0x10138664, 0x5)   mov(memb_a32(ds, 0x101c391e), al);    /* mov [0x101c391e], al */
    II(0x10138669, 0x2)   jmpd(0x101386a2, 0x37);               /* jmp 0x101386a2 */
l_0x1013866b:
    II(0x1013866b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1013866f, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x10138672, 0x2)   jzd(0x10138685, 0x11);                /* jz 0x10138685 */
    II(0x10138674, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10138678, 0x3)   imul(eax, eax, 0x53);                 /* imul eax, eax, 0x53 */
    II(0x1013867b, 0x8)   cmp(memb_a32(ds, eax + ebp - 0x327), 0); /* cmp byte [eax+ebp+0xfffffcd9], 0x0 */
    II(0x10138683, 0x2)   jnzd(0x10138687, 0x2);                /* jnz 0x10138687 */
l_0x10138685:
    II(0x10138685, 0x2)   jmpd(0x101386a2, 0x1b);               /* jmp 0x101386a2 */
l_0x10138687:
    II(0x10138687, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1013868b, 0x5)   mov(eax, memd_a32(ds, 0x101bd366));   /* mov eax, [0x101bd366] */
    II(0x10138690, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10138693, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10138695, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10138698, 0xa)   mov(memd_a32(ss, ebp - 0x37c), 0x1);  /* mov dword [ebp+0xfffffc84], 0x1 */
l_0x101386a2:
    II(0x101386a2, 0x5)   jmpd(0x10138bfe, 0x557);              /* jmp 0x10138bfe */
l_0x101386a7:
    II(0x101386a7, 0x5)   mov(eax, 0x517);                      /* mov eax, 0x517 */
    II(0x101386ac, 0x5)   calld(0x101382da, -0x3d7);            /* call 0x101382da */
    II(0x101386b1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101386b5, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x101386b8, 0x6)   jzd(0x1013884f, 0x191);               /* jz dword 0x1013884f */
    II(0x101386be, 0x5)   mov(edx, 0xd);                        /* mov edx, 0xd */
    II(0x101386c3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101386c7, 0x3)   imul(eax, eax, 0x53);                 /* imul eax, eax, 0x53 */
    II(0x101386ca, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x325)); /* mov eax, [eax+ebp+0xfffffcdb] */
    II(0x101386d1, 0x5)   calld(0x100eb283, -0x4d453);          /* call 0x100eb283 */
    II(0x101386d6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101386da, 0x3)   imul(eax, eax, 0x53);                 /* imul eax, eax, 0x53 */
    II(0x101386dd, 0x6)   lea(edx, ebp - 0x374);                /* lea edx, [ebp+0xfffffc8c] */
    II(0x101386e3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101386e5, 0x5)   calld(0x10136e52, -0x1898);           /* call 0x10136e52 */
    II(0x101386ea, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x101386f1, 0x2)   jzd(0x101386fc, 0x9);                 /* jz 0x101386fc */
    II(0x101386f3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101386f5, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101386f8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101386fa, 0x2)   jzd(0x101386fe, 0x2);                 /* jz 0x101386fe */
l_0x101386fc:
    II(0x101386fc, 0x2)   jmpd(0x10138727, 0x29);               /* jmp 0x10138727 */
l_0x101386fe:
    II(0x101386fe, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10138702, 0x3)   imul(edx, eax, 0x53);                 /* imul edx, eax, 0x53 */
    II(0x10138705, 0x6)   lea(eax, ebp - 0x374);                /* lea eax, [ebp+0xfffffc8c] */
    II(0x1013870b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013870d, 0x3)   lea(edx, eax + 0x2f);                 /* lea edx, [eax+0x2f] */
    II(0x10138710, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10138714, 0x3)   imul(eax, eax, 0x53);                 /* imul eax, eax, 0x53 */
    II(0x10138717, 0x6)   lea(ebx, ebp - 0x374);                /* lea ebx, [ebp+0xfffffc8c] */
    II(0x1013871d, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1013871f, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10138722, 0x5)   calld(0x10129155, -0xf5d2);           /* call 0x10129155 */
l_0x10138727:
    II(0x10138727, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0x1);   /* cmp byte [ebp-0x18], 0x1 */
    II(0x1013872b, 0x2)   jzd(0x10138733, 0x6);                 /* jz 0x10138733 */
    II(0x1013872d, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0x8);   /* cmp byte [ebp-0x18], 0x8 */
    II(0x10138731, 0x2)   jnzd(0x10138735, 0x2);                /* jnz 0x10138735 */
l_0x10138733:
    II(0x10138733, 0x2)   jmpd(0x1013873b, 0x6);                /* jmp 0x1013873b */
l_0x10138735:
    II(0x10138735, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0x2);   /* cmp byte [ebp-0x18], 0x2 */
    II(0x10138739, 0x2)   jnzd(0x1013873d, 0x2);                /* jnz 0x1013873d */
l_0x1013873b:
    II(0x1013873b, 0x2)   jmpd(0x10138747, 0xa);                /* jmp 0x10138747 */
l_0x1013873d:
    II(0x1013873d, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0x9);   /* cmp byte [ebp-0x18], 0x9 */
    II(0x10138741, 0x6)   jnzd(0x101387c9, 0x82);               /* jnz dword 0x101387c9 */
l_0x10138747:
    II(0x10138747, 0xa)   mov(memd_a32(ds, 0x101c37dc), 0x1);   /* mov dword [0x101c37dc], 0x1 */
    II(0x10138751, 0x6)   mov(ax, memw_a32(ds, 0x101bd368));    /* mov ax, [0x101bd368] */
    II(0x10138757, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x1013875a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013875c, 0x7)   mov(memw_a32(ds, 0x101c3982), dx);    /* mov [0x101c3982], dx */
    II(0x10138763, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0x9);   /* cmp byte [ebp-0x18], 0x9 */
    II(0x10138767, 0x2)   jnzd(0x101387c9, 0x60);               /* jnz 0x101387c9 */
    II(0x10138769, 0xa)   mov(memd_a32(ss, ebp - 0x38c), 0);    /* mov dword [ebp+0xfffffc74], 0x0 */
    II(0x10138773, 0x2)   jmpd(0x10138781, 0xc);                /* jmp 0x10138781 */
l_0x10138775:
    II(0x10138775, 0x6)   mov(eax, memd_a32(ss, ebp - 0x38c));  /* mov eax, [ebp+0xfffffc74] */
    II(0x1013877b, 0x6)   inc(memd_a32(ss, ebp - 0x38c));       /* inc dword [ebp+0xfffffc74] */
l_0x10138781:
    II(0x10138781, 0x7)   cmp(memd_a32(ss, ebp - 0x38c), 0x4);  /* cmp dword [ebp+0xfffffc74], 0x4 */
    II(0x10138788, 0x2)   jged(0x101387c9, 0x3f);               /* jge 0x101387c9 */
    II(0x1013878a, 0xa)   imul(eax, memd_a32(ss, ebp - 0x38c), 0x247); /* imul eax, [ebp+0xfffffc74], 0x247 */
    II(0x10138794, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1013879a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013879f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101387a1, 0x2)   jzd(0x101387c7, 0x24);                /* jz 0x101387c7 */
    II(0x101387a3, 0x6)   mov(eax, memd_a32(ss, ebp - 0x38c));  /* mov eax, [ebp+0xfffffc74] */
    II(0x101387a9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101387ac, 0x6)   mov(ebx, memd_a32(ds, eax + 0x101bb444)); /* mov ebx, [eax+0x101bb444] */
    II(0x101387b2, 0x6)   mov(al, memb_a32(ss, ebp - 0x38c));   /* mov al, [ebp+0xfffffc74] */
    II(0x101387b8, 0x2)   add(al, 0x63);                        /* add al, 0x63 */
    II(0x101387ba, 0x3)   movsx(edx, al);                       /* movsx edx, al */
    II(0x101387bd, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x101387c2, 0x5)   calld(0x10106205, -0x325c2);          /* call 0x10106205 */
l_0x101387c7:
    II(0x101387c7, 0x2)   jmpd(0x10138775, -0x54);              /* jmp 0x10138775 */
l_0x101387c9:
    II(0x101387c9, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101387ce, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101387d2, 0x3)   imul(edx, eax, 0x53);                 /* imul edx, eax, 0x53 */
    II(0x101387d5, 0x6)   lea(eax, ebp - 0x374);                /* lea eax, [ebp+0xfffffc8c] */
    II(0x101387db, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101387dd, 0x3)   add(edx, 0x2f);                       /* add edx, 0x2f */
    II(0x101387e0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101387e4, 0x3)   imul(eax, eax, 0x53);                 /* imul eax, eax, 0x53 */
    II(0x101387e7, 0x6)   lea(ecx, ebp - 0x374);                /* lea ecx, [ebp+0xfffffc8c] */
    II(0x101387ed, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x101387ef, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x101387f2, 0x5)   calld(0x10136e81, -0x1976);           /* call 0x10136e81 */
    II(0x101387f7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101387fb, 0x3)   imul(eax, eax, 0x53);                 /* imul eax, eax, 0x53 */
    II(0x101387fe, 0x8)   mov(memb_a32(ds, eax + ebp - 0x327), 0x1); /* mov byte [eax+ebp+0xfffffcd9], 0x1 */
    II(0x10138806, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1013880a, 0x3)   imul(edx, edx, 0x53);                 /* imul edx, edx, 0x53 */
    II(0x1013880d, 0x7)   mov(dl, memb_a32(ds, edx + ebp - 0x326)); /* mov dl, [edx+ebp+0xfffffcda] */
    II(0x10138814, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x1013881a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1013881e, 0x3)   imul(eax, eax, 0x53);                 /* imul eax, eax, 0x53 */
    II(0x10138821, 0x6)   lea(ebx, ebp - 0x374);                /* lea ebx, [ebp+0xfffffc8c] */
    II(0x10138827, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10138829, 0x5)   calld(0x1013784d, -0xfe1);            /* call 0x1013784d */
    II(0x1013882e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10138830, 0x5)   calld(0x100e883d, -0x4fff8);          /* call 0x100e883d */
    II(0x10138835, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10138838, 0x5)   calld(sys_display_draw_0, 0x2ec47);   /* call 0x10167484 */
    II(0x1013883d, 0x6)   mov(ax, memw_a32(ds, 0x101bd368));    /* mov ax, [0x101bd368] */
    II(0x10138843, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x10138846, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10138848, 0x7)   mov(memw_a32(ds, 0x101c7120), dx);    /* mov [0x101c7120], dx */
l_0x1013884f:
    II(0x1013884f, 0x5)   jmpd(0x10138bfe, 0x3aa);              /* jmp 0x10138bfe */
l_0x10138854:
    II(0x10138854, 0x5)   calld(0x10116ba6, -0x21cb3);          /* call 0x10116ba6 */
    II(0x10138859, 0x5)   jmpd(0x10138bfe, 0x3a0);              /* jmp 0x10138bfe */
l_0x1013885e:
    II(0x1013885e, 0x5)   mov(eax, 0x51a);                      /* mov eax, 0x51a */
    II(0x10138863, 0x5)   calld(0x101382da, -0x58e);            /* call 0x101382da */
l_0x10138868:
    II(0x10138868, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1013886c, 0x2)   jzd(0x1013889d, 0x2f);                /* jz 0x1013889d */
    II(0x1013886e, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x10138875, 0x2)   jnzd(0x10138880, 0x9);                /* jnz 0x10138880 */
    II(0x10138877, 0x7)   mov(memb_a32(ss, ebp - 0x390), 0x1);  /* mov byte [ebp+0xfffffc70], 0x1 */
    II(0x1013887e, 0x2)   jmpd(0x10138887, 0x7);                /* jmp 0x10138887 */
l_0x10138880:
    II(0x10138880, 0x7)   mov(memb_a32(ss, ebp - 0x390), 0);    /* mov byte [ebp+0xfffffc70], 0x0 */
l_0x10138887:
    II(0x10138887, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10138889, 0x6)   mov(bl, memb_a32(ss, ebp - 0x390));   /* mov bl, [ebp+0xfffffc70] */
    II(0x1013888f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10138891, 0x5)   mov(eax, 0x8);                        /* mov eax, 0x8 */
    II(0x10138896, 0x5)   calld(0x10105b00, -0x32d9b);          /* call 0x10105b00 */
    II(0x1013889b, 0x2)   jmpd(0x101388b2, 0x15);               /* jmp 0x101388b2 */
l_0x1013889d:
    II(0x1013889d, 0x5)   calld(0x100d4e6c, -0x63a36);          /* call 0x100d4e6c */
    II(0x101388a2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101388a4, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x101388a6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101388a8, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x101388ad, 0x5)   calld(0x10105b00, -0x32db2);          /* call 0x10105b00 */
l_0x101388b2:
    II(0x101388b2, 0x5)   jmpd(0x10138bfe, 0x347);              /* jmp 0x10138bfe */
l_0x101388b7:
    II(0x101388b7, 0x5)   mov(eax, 0x519);                      /* mov eax, 0x519 */
    II(0x101388bc, 0x5)   calld(0x101382da, -0x5e7);            /* call 0x101382da */
l_0x101388c1:
    II(0x101388c1, 0xa)   mov(memd_a32(ss, ebp - 0x37c), 0x1);  /* mov dword [ebp+0xfffffc84], 0x1 */
    II(0x101388cb, 0x5)   jmpd(0x10138bfe, 0x32e);              /* jmp 0x10138bfe */
l_0x101388d0:
    II(0x101388d0, 0x5)   mov(eax, 0x518);                      /* mov eax, 0x518 */
    II(0x101388d5, 0x5)   calld(0x101382da, -0x600);            /* call 0x101382da */
    II(0x101388da, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
    II(0x101388e1, 0xa)   mov(memd_a32(ss, ebp - 0x37c), 0x1);  /* mov dword [ebp+0xfffffc84], 0x1 */
    II(0x101388eb, 0x5)   jmpd(0x10138bfe, 0x30e);              /* jmp 0x10138bfe */
l_0x101388f0:
    II(0x101388f0, 0x5)   mov(eax, 0x4ff);                      /* mov eax, 0x4ff */
    II(0x101388f5, 0x5)   calld(0x101382da, -0x620);            /* call 0x101382da */
    II(0x101388fa, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x149); /* cmp dword [ebp+0xfffffc80], 0x149 */
    II(0x10138904, 0x2)   jnzd(0x10138913, 0xd);                /* jnz 0x10138913 */
    II(0x10138906, 0x5)   mov(eax, memd_a32(ds, 0x101bd366));   /* mov eax, [0x101bd366] */
    II(0x1013890b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013890e, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10138911, 0x2)   jzd(0x10138915, 0x2);                 /* jz 0x10138915 */
l_0x10138913:
    II(0x10138913, 0x2)   jmpd(0x1013891a, 0x5);                /* jmp 0x1013891a */
l_0x10138915:
    II(0x10138915, 0x5)   jmpd(0x10138bfe, 0x2e4);              /* jmp 0x10138bfe */
l_0x1013891a:
    II(0x1013891a, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x151); /* cmp dword [ebp+0xfffffc80], 0x151 */
    II(0x10138924, 0x2)   jnzd(0x10138933, 0xd);                /* jnz 0x10138933 */
    II(0x10138926, 0x5)   mov(eax, memd_a32(ds, 0x101bd366));   /* mov eax, [0x101bd366] */
    II(0x1013892b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013892e, 0x3)   cmp(eax, 0x5b);                       /* cmp eax, 0x5b */
    II(0x10138931, 0x2)   jzd(0x10138935, 0x2);                 /* jz 0x10138935 */
l_0x10138933:
    II(0x10138933, 0x2)   jmpd(0x1013893a, 0x5);                /* jmp 0x1013893a */
l_0x10138935:
    II(0x10138935, 0x5)   jmpd(0x10138bfe, 0x2c4);              /* jmp 0x10138bfe */
l_0x1013893a:
    II(0x1013893a, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1013893e, 0x2)   jzd(0x1013894c, 0xc);                 /* jz 0x1013894c */
    II(0x10138940, 0xa)   mov(memd_a32(ss, ebp - 0x394), 0x7);  /* mov dword [ebp+0xfffffc6c], 0x7 */
    II(0x1013894a, 0x2)   jmpd(0x10138956, 0xa);                /* jmp 0x10138956 */
l_0x1013894c:
    II(0x1013894c, 0xa)   mov(memd_a32(ss, ebp - 0x394), 0x5);  /* mov dword [ebp+0xfffffc6c], 0x5 */
l_0x10138956:
    II(0x10138956, 0x6)   mov(eax, memd_a32(ss, ebp - 0x394));  /* mov eax, [ebp+0xfffffc6c] */
    II(0x1013895c, 0x6)   mov(memd_a32(ss, ebp - 0x398), eax);  /* mov [ebp+0xfffffc68], eax */
    II(0x10138962, 0xa)   mov(memd_a32(ss, ebp - 0x38c), 0);    /* mov dword [ebp+0xfffffc74], 0x0 */
    II(0x1013896c, 0x2)   jmpd(0x1013897a, 0xc);                /* jmp 0x1013897a */
l_0x1013896e:
    II(0x1013896e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x38c));  /* mov eax, [ebp+0xfffffc74] */
    II(0x10138974, 0x6)   inc(memd_a32(ss, ebp - 0x38c));       /* inc dword [ebp+0xfffffc74] */
l_0x1013897a:
    II(0x1013897a, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x398)); /* movsx eax, word [ebp+0xfffffc68] */
    II(0x10138981, 0x6)   cmp(eax, memd_a32(ss, ebp - 0x38c));  /* cmp eax, [ebp+0xfffffc74] */
    II(0x10138987, 0x2)   jled(0x101389cb, 0x42);               /* jle 0x101389cb */
    II(0x10138989, 0x6)   mov(eax, memd_a32(ss, ebp - 0x38c));  /* mov eax, [ebp+0xfffffc74] */
    II(0x1013898f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10138992, 0x4)   mov(eax, memd_a32(ds, eax + ebp - 0x34)); /* mov eax, [eax+ebp-0x34] */
    II(0x10138996, 0x6)   mov(memd_a32(ss, ebp - 0x39c), eax);  /* mov [ebp+0xfffffc64], eax */
    II(0x1013899c, 0x7)   cmp(memd_a32(ss, ebp - 0x39c), 0);    /* cmp dword [ebp+0xfffffc64], 0x0 */
    II(0x101389a3, 0x2)   jzd(0x101389bf, 0x1a);                /* jz 0x101389bf */
    II(0x101389a5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101389a7, 0x6)   mov(eax, memd_a32(ss, ebp - 0x39c));  /* mov eax, [ebp+0xfffffc64] */
    II(0x101389ad, 0x5)   calld(my_dtor_d2, -0x6a47a);          /* call 0x100ce538 */
    II(0x101389b2, 0x5)   calld(sys_delete, 0x2d5ad);           /* call 0x10165f64 */
    II(0x101389b7, 0x6)   mov(memd_a32(ss, ebp - 0x3a0), eax);  /* mov [ebp+0xfffffc60], eax */
    II(0x101389bd, 0x2)   jmpd(0x101389c9, 0xa);                /* jmp 0x101389c9 */
l_0x101389bf:
    II(0x101389bf, 0xa)   mov(memd_a32(ss, ebp - 0x3a0), 0);    /* mov dword [ebp+0xfffffc60], 0x0 */
l_0x101389c9:
    II(0x101389c9, 0x2)   jmpd(0x1013896e, -0x5d);              /* jmp 0x1013896e */
l_0x101389cb:
    II(0x101389cb, 0xa)   mov(memd_a32(ss, ebp - 0x38c), 0);    /* mov dword [ebp+0xfffffc74], 0x0 */
    II(0x101389d5, 0x2)   jmpd(0x101389e3, 0xc);                /* jmp 0x101389e3 */
l_0x101389d7:
    II(0x101389d7, 0x6)   mov(eax, memd_a32(ss, ebp - 0x38c));  /* mov eax, [ebp+0xfffffc74] */
    II(0x101389dd, 0x6)   inc(memd_a32(ss, ebp - 0x38c));       /* inc dword [ebp+0xfffffc74] */
l_0x101389e3:
    II(0x101389e3, 0x7)   cmp(memd_a32(ss, ebp - 0x38c), 0xa);  /* cmp dword [ebp+0xfffffc74], 0xa */
    II(0x101389ea, 0x2)   jged(0x10138a02, 0x16);               /* jge 0x10138a02 */
    II(0x101389ec, 0x7)   imul(eax, memd_a32(ss, ebp - 0x38c), 0x53); /* imul eax, [ebp+0xfffffc74], 0x53 */
    II(0x101389f3, 0x6)   lea(edx, ebp - 0x374);                /* lea edx, [ebp+0xfffffc8c] */
    II(0x101389f9, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101389fb, 0x5)   calld(0x10136ad6, -0x1f2a);           /* call 0x10136ad6 */
    II(0x10138a00, 0x2)   jmpd(0x101389d7, -0x2b);              /* jmp 0x101389d7 */
l_0x10138a02:
    II(0x10138a02, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x13b); /* cmp dword [ebp+0xfffffc80], 0x13b */
    II(0x10138a0c, 0x2)   jzd(0x10138a1e, 0x10);                /* jz 0x10138a1e */
    II(0x10138a0e, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x13c); /* cmp dword [ebp+0xfffffc80], 0x13c */
    II(0x10138a18, 0x6)   jnzd(0x10138a9b, 0x7d);               /* jnz dword 0x10138a9b */
l_0x10138a1e:
    II(0x10138a1e, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x13b); /* cmp dword [ebp+0xfffffc80], 0x13b */
    II(0x10138a28, 0x2)   jnzd(0x10138a36, 0xc);                /* jnz 0x10138a36 */
    II(0x10138a2a, 0xa)   mov(memd_a32(ss, ebp - 0x3a4), 0x1);  /* mov dword [ebp+0xfffffc5c], 0x1 */
    II(0x10138a34, 0x2)   jmpd(0x10138a40, 0xa);                /* jmp 0x10138a40 */
l_0x10138a36:
    II(0x10138a36, 0xa)   mov(memd_a32(ss, ebp - 0x3a4), 0xffffffff); /* mov dword [ebp+0xfffffc5c], 0xffffffff */
l_0x10138a40:
    II(0x10138a40, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x18)); /* movsx eax, byte [ebp-0x18] */
    II(0x10138a44, 0x6)   add(eax, memd_a32(ss, ebp - 0x3a4));  /* add eax, [ebp+0xfffffc5c] */
    II(0x10138a4a, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x10138a4d, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0xa);   /* cmp byte [ebp-0x18], 0xa */
    II(0x10138a51, 0x2)   jnzd(0x10138a59, 0x6);                /* jnz 0x10138a59 */
    II(0x10138a53, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x10138a57, 0x2)   jmpd(0x10138a63, 0xa);                /* jmp 0x10138a63 */
l_0x10138a59:
    II(0x10138a59, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x10138a5d, 0x2)   jged(0x10138a63, 0x4);                /* jge 0x10138a63 */
    II(0x10138a5f, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x9);   /* mov byte [ebp-0x18], 0x9 */
l_0x10138a63:
    II(0x10138a63, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x18)); /* movsx edx, byte [ebp-0x18] */
    II(0x10138a67, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x10138a6c, 0x5)   calld(0x100caafc, -0x6df75);          /* call 0x100caafc */
    II(0x10138a71, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0x7);   /* cmp byte [ebp-0x18], 0x7 */
    II(0x10138a75, 0x2)   jnzd(0x10138a80, 0x9);                /* jnz 0x10138a80 */
    II(0x10138a77, 0x7)   mov(memb_a32(ss, ebp - 0x3a8), 0x1);  /* mov byte [ebp+0xfffffc58], 0x1 */
    II(0x10138a7e, 0x2)   jmpd(0x10138a87, 0x7);                /* jmp 0x10138a87 */
l_0x10138a80:
    II(0x10138a80, 0x7)   mov(memb_a32(ss, ebp - 0x3a8), 0);    /* mov byte [ebp+0xfffffc58], 0x0 */
l_0x10138a87:
    II(0x10138a87, 0x6)   mov(al, memb_a32(ss, ebp - 0x3a8));   /* mov al, [ebp+0xfffffc58] */
    II(0x10138a8d, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x10138a90, 0x9)   mov(memw_a32(ds, 0x101bd368), 0x1);   /* mov word [0x101bd368], 0x1 */
    II(0x10138a99, 0x2)   jmpd(0x10138ac6, 0x2b);               /* jmp 0x10138ac6 */
l_0x10138a9b:
    II(0x10138a9b, 0xa)   cmp(memd_a32(ss, ebp - 0x380), 0x149); /* cmp dword [ebp+0xfffffc80], 0x149 */
    II(0x10138aa5, 0x2)   jnzd(0x10138abe, 0x17);               /* jnz 0x10138abe */
    II(0x10138aa7, 0x5)   mov(eax, memd_a32(ds, 0x101bd366));   /* mov eax, [0x101bd366] */
    II(0x10138aac, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10138aaf, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x10138ab2, 0x2)   jled(0x10138abc, 0x8);                /* jle 0x10138abc */
    II(0x10138ab4, 0x8)   sub(memw_a32(ds, 0x101bd368), 0xa);   /* sub word [0x101bd368], 0xa */
l_0x10138abc:
    II(0x10138abc, 0x2)   jmpd(0x10138ac6, 0x8);                /* jmp 0x10138ac6 */
l_0x10138abe:
    II(0x10138abe, 0x8)   add(memw_a32(ds, 0x101bd368), 0xa);   /* add word [0x101bd368], 0xa */
l_0x10138ac6:
    II(0x10138ac6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10138ac8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138ac9, 0x5)   mov(eax, memd_a32(ds, 0x101bd366));   /* mov eax, [0x101bd366] */
    II(0x10138ace, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10138ad1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138ad2, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x18)); /* movsx eax, byte [ebp-0x18] */
    II(0x10138ad6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138ad7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10138ad9, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10138adc, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138add, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10138adf, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10138ae2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138ae3, 0x3)   lea(ecx, ebp - 0x10);                 /* lea ecx, [ebp-0x10] */
    II(0x10138ae6, 0x3)   lea(ebx, ebp - 0x34);                 /* lea ebx, [ebp-0x34] */
    II(0x10138ae9, 0x5)   mov(edx, 0xa);                        /* mov edx, 0xa */
    II(0x10138aee, 0x6)   lea(eax, ebp - 0x374);                /* lea eax, [ebp+0xfffffc8c] */
    II(0x10138af4, 0x5)   calld(0x10137a19, -0x10e0);           /* call 0x10137a19 */
    II(0x10138af9, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffffffff); /* mov dword [ebp-0x14], 0xffffffff */
    II(0x10138b00, 0x5)   jmpd(0x10138bfe, 0xf9);               /* jmp 0x10138bfe */
l_0x10138b05:
    II(0x10138b05, 0x5)   jmpd(0x10138bfe, 0xf4);               /* jmp 0x10138bfe */
l_0x10138b0a:
    II(0x10138b0a, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x151); /* cmp dword [ebp+0xfffffc7c], 0x151 */
    II(0x10138b14, 0x6)   jbd(0x10138ba0, 0x86);                /* jb dword 0x10138ba0 */
    II(0x10138b1a, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x151); /* cmp dword [ebp+0xfffffc7c], 0x151 */
    II(0x10138b24, 0x6)   jbed(0x101388f0, -0x23a);             /* jbe dword 0x101388f0 */
    II(0x10138b2a, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x3fe); /* cmp dword [ebp+0xfffffc7c], 0x3fe */
    II(0x10138b34, 0x2)   jbd(0x10138b6a, 0x34);                /* jb 0x10138b6a */
    II(0x10138b36, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x3fe); /* cmp dword [ebp+0xfffffc7c], 0x3fe */
    II(0x10138b40, 0x6)   jbed(0x101386a7, -0x49f);             /* jbe dword 0x101386a7 */
    II(0x10138b46, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x3ff); /* cmp dword [ebp+0xfffffc7c], 0x3ff */
    II(0x10138b50, 0x6)   jbed(0x1013860d, -0x549);             /* jbe dword 0x1013860d */
    II(0x10138b56, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x400); /* cmp dword [ebp+0xfffffc7c], 0x400 */
    II(0x10138b60, 0x6)   jzd(0x101388d0, -0x296);              /* jz dword 0x101388d0 */
    II(0x10138b66, 0x2)   jmpd(0x10138b05, -0x63);              /* jmp 0x10138b05 */
//  II(0x10138b68, 0x2)   /* Недостижимый код. */
l_0x10138b6a:
    II(0x10138b6a, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x3e8); /* cmp dword [ebp+0xfffffc7c], 0x3e8 */
    II(0x10138b74, 0x2)   jbd(0x10138b9b, 0x25);                /* jb 0x10138b9b */
    II(0x10138b76, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x3e8); /* cmp dword [ebp+0xfffffc7c], 0x3e8 */
    II(0x10138b80, 0x6)   jbed(0x101388b7, -0x2cf);             /* jbe dword 0x101388b7 */
    II(0x10138b86, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x3fd); /* cmp dword [ebp+0xfffffc7c], 0x3fd */
    II(0x10138b90, 0x6)   jzd(0x1013885e, -0x338);              /* jz dword 0x1013885e */
    II(0x10138b96, 0x5)   jmpd(0x10138b05, -0x96);              /* jmp 0x10138b05 */
l_0x10138b9b:
    II(0x10138b9b, 0x5)   jmpd(0x10138b05, -0x9b);              /* jmp 0x10138b05 */
l_0x10138ba0:
    II(0x10138ba0, 0x7)   cmp(memd_a32(ss, ebp - 0x384), 0x3f); /* cmp dword [ebp+0xfffffc7c], 0x3f */
    II(0x10138ba7, 0x2)   jbd(0x10138bec, 0x43);                /* jb 0x10138bec */
    II(0x10138ba9, 0x7)   cmp(memd_a32(ss, ebp - 0x384), 0x3f); /* cmp dword [ebp+0xfffffc7c], 0x3f */
    II(0x10138bb0, 0x6)   jbed(0x10138868, -0x34e);             /* jbe dword 0x10138868 */
    II(0x10138bb6, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x119); /* cmp dword [ebp+0xfffffc7c], 0x119 */
    II(0x10138bc0, 0x2)   jbd(0x10138be7, 0x25);                /* jb 0x10138be7 */
    II(0x10138bc2, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x119); /* cmp dword [ebp+0xfffffc7c], 0x119 */
    II(0x10138bcc, 0x6)   jbed(0x10138854, -0x37e);             /* jbe dword 0x10138854 */
    II(0x10138bd2, 0xa)   cmp(memd_a32(ss, ebp - 0x384), 0x149); /* cmp dword [ebp+0xfffffc7c], 0x149 */
    II(0x10138bdc, 0x6)   jzd(0x101388f0, -0x2f2);              /* jz dword 0x101388f0 */
    II(0x10138be2, 0x5)   jmpd(0x10138b05, -0xe2);              /* jmp 0x10138b05 */
l_0x10138be7:
    II(0x10138be7, 0x5)   jmpd(0x10138b05, -0xe7);              /* jmp 0x10138b05 */
l_0x10138bec:
    II(0x10138bec, 0x7)   cmp(memd_a32(ss, ebp - 0x384), 0x1b); /* cmp dword [ebp+0xfffffc7c], 0x1b */
    II(0x10138bf3, 0x6)   jzd(0x101388c1, -0x338);              /* jz dword 0x101388c1 */
    II(0x10138bf9, 0x5)   jmpd(0x10138b05, -0xf9);              /* jmp 0x10138b05 */
l_0x10138bfe:
    II(0x10138bfe, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x10138c02, 0x2)   jzd(0x10138c14, 0x10);                /* jz 0x10138c14 */
    II(0x10138c04, 0x6)   mov(eax, memd_a32(ss, ebp - 0x378));  /* mov eax, [ebp+0xfffffc88] */
    II(0x10138c0a, 0x5)   calld(0x101485ad, 0xf99e);            /* call 0x101485ad */
    II(0x10138c0f, 0x3)   cmp(eax, 0x50);                       /* cmp eax, 0x50 */
    II(0x10138c12, 0x2)   jaed(0x10138c16, 0x2);                /* jae 0x10138c16 */
l_0x10138c14:
    II(0x10138c14, 0x2)   jmpd(0x10138c29, 0x13);               /* jmp 0x10138c29 */
l_0x10138c16:
    II(0x10138c16, 0x5)   calld(0x101482f4, 0xf6d9);            /* call 0x101482f4 */
    II(0x10138c1b, 0x6)   mov(memd_a32(ss, ebp - 0x378), eax);  /* mov [ebp+0xfffffc88], eax */
    II(0x10138c21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10138c24, 0x5)   calld(0x100f066e, -0x485bb);          /* call 0x100f066e */
l_0x10138c29:
    II(0x10138c29, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x10138c30, 0x2)   jzd(0x10138c44, 0x12);                /* jz 0x10138c44 */
    II(0x10138c32, 0x5)   calld(0x100d5094, -0x63ba3);          /* call 0x100d5094 */
    II(0x10138c37, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10138c39, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10138c3b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10138c3d, 0x5)   calld(0x10100e32, -0x37e10);          /* call 0x10100e32 */
    II(0x10138c42, 0x2)   jmpd(0x10138c75, 0x31);               /* jmp 0x10138c75 */
l_0x10138c44:
    II(0x10138c44, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x3);   /* cmp byte [0x101c391e], 0x3 */
    II(0x10138c4b, 0x2)   jzd(0x10138c56, 0x9);                 /* jz 0x10138c56 */
    II(0x10138c4d, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x6);   /* cmp byte [0x101c391e], 0x6 */
    II(0x10138c54, 0x2)   jnzd(0x10138c58, 0x2);                /* jnz 0x10138c58 */
l_0x10138c56:
    II(0x10138c56, 0x2)   jmpd(0x10138c61, 0x9);                /* jmp 0x10138c61 */
l_0x10138c58:
    II(0x10138c58, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xa);   /* cmp byte [0x101c391e], 0xa */
    II(0x10138c5f, 0x2)   jnzd(0x10138c63, 0x2);                /* jnz 0x10138c63 */
l_0x10138c61:
    II(0x10138c61, 0x2)   jmpd(0x10138c75, 0x12);               /* jmp 0x10138c75 */
l_0x10138c63:
    II(0x10138c63, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10138c68, 0x5)   mov(eax, memd_a32(ds, 0x101c3960));   /* mov eax, [0x101c3960] */
    II(0x10138c6d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10138c70, 0x5)   calld(0x100f334b, -0x4592a);          /* call 0x100f334b */
l_0x10138c75:
    II(0x10138c75, 0x7)   cmp(memd_a32(ss, ebp - 0x37c), 0);    /* cmp dword [ebp+0xfffffc84], 0x0 */
    II(0x10138c7c, 0x6)   jzd(0x101384d6, -0x7ac);              /* jz dword 0x101384d6 */
    II(0x10138c82, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10138c86, 0x2)   jzd(0x10138c94, 0xc);                 /* jz 0x10138c94 */
    II(0x10138c88, 0xa)   mov(memd_a32(ss, ebp - 0x3ac), 0x7);  /* mov dword [ebp+0xfffffc54], 0x7 */
    II(0x10138c92, 0x2)   jmpd(0x10138c9e, 0xa);                /* jmp 0x10138c9e */
l_0x10138c94:
    II(0x10138c94, 0xa)   mov(memd_a32(ss, ebp - 0x3ac), 0x5);  /* mov dword [ebp+0xfffffc54], 0x5 */
l_0x10138c9e:
    II(0x10138c9e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x3ac));  /* mov eax, [ebp+0xfffffc54] */
    II(0x10138ca4, 0x6)   mov(memd_a32(ss, ebp - 0x3b0), eax);  /* mov [ebp+0xfffffc50], eax */
    II(0x10138caa, 0xa)   mov(memd_a32(ss, ebp - 0x38c), 0);    /* mov dword [ebp+0xfffffc74], 0x0 */
    II(0x10138cb4, 0x2)   jmpd(0x10138cc2, 0xc);                /* jmp 0x10138cc2 */
l_0x10138cb6:
    II(0x10138cb6, 0x6)   mov(eax, memd_a32(ss, ebp - 0x38c));  /* mov eax, [ebp+0xfffffc74] */
    II(0x10138cbc, 0x6)   inc(memd_a32(ss, ebp - 0x38c));       /* inc dword [ebp+0xfffffc74] */
l_0x10138cc2:
    II(0x10138cc2, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x3b0)); /* movsx eax, word [ebp+0xfffffc50] */
    II(0x10138cc9, 0x6)   cmp(eax, memd_a32(ss, ebp - 0x38c));  /* cmp eax, [ebp+0xfffffc74] */
    II(0x10138ccf, 0x2)   jled(0x10138d13, 0x42);               /* jle 0x10138d13 */
    II(0x10138cd1, 0x6)   mov(eax, memd_a32(ss, ebp - 0x38c));  /* mov eax, [ebp+0xfffffc74] */
    II(0x10138cd7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10138cda, 0x4)   mov(eax, memd_a32(ds, eax + ebp - 0x34)); /* mov eax, [eax+ebp-0x34] */
    II(0x10138cde, 0x6)   mov(memd_a32(ss, ebp - 0x3b4), eax);  /* mov [ebp+0xfffffc4c], eax */
    II(0x10138ce4, 0x7)   cmp(memd_a32(ss, ebp - 0x3b4), 0);    /* cmp dword [ebp+0xfffffc4c], 0x0 */
    II(0x10138ceb, 0x2)   jzd(0x10138d07, 0x1a);                /* jz 0x10138d07 */
    II(0x10138ced, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10138cef, 0x6)   mov(eax, memd_a32(ss, ebp - 0x3b4));  /* mov eax, [ebp+0xfffffc4c] */
    II(0x10138cf5, 0x5)   calld(my_dtor_d2, -0x6a7c2);          /* call 0x100ce538 */
    II(0x10138cfa, 0x5)   calld(sys_delete, 0x2d265);           /* call 0x10165f64 */
    II(0x10138cff, 0x6)   mov(memd_a32(ss, ebp - 0x3b8), eax);  /* mov [ebp+0xfffffc48], eax */
    II(0x10138d05, 0x2)   jmpd(0x10138d11, 0xa);                /* jmp 0x10138d11 */
l_0x10138d07:
    II(0x10138d07, 0xa)   mov(memd_a32(ss, ebp - 0x3b8), 0);    /* mov dword [ebp+0xfffffc48], 0x0 */
l_0x10138d11:
    II(0x10138d11, 0x2)   jmpd(0x10138cb6, -0x5d);              /* jmp 0x10138cb6 */
l_0x10138d13:
    II(0x10138d13, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x10138d17, 0x2)   jzd(0x10138d29, 0x10);                /* jz 0x10138d29 */
    II(0x10138d19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10138d1c, 0x5)   calld(0x100f0748, -0x485d9);          /* call 0x100f0748 */
    II(0x10138d21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10138d24, 0x5)   calld(sys_free, 0x32398);             /* call 0x1016b0c1 */
l_0x10138d29:
    II(0x10138d29, 0x5)   calld(0x100ea903, -0x4e42b);          /* call 0x100ea903 */
    II(0x10138d2e, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x10138d35, 0x2)   jnzd(0x10138d41, 0xa);                /* jnz 0x10138d41 */
    II(0x10138d37, 0x5)   calld(0x101482f4, 0xf5b8);            /* call 0x101482f4 */
    II(0x10138d3c, 0x5)   mov(memd_a32(ds, 0x101c396c), eax);   /* mov [0x101c396c], eax */
l_0x10138d41:
    II(0x10138d41, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10138d44, 0x6)   mov(memd_a32(ss, ebp - 0x3bc), eax);  /* mov [ebp+0xfffffc44], eax */
    II(0x10138d4a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10138d4c, 0x6)   lea(eax, ebp - 0x374);                /* lea eax, [ebp+0xfffffc8c] */
    II(0x10138d52, 0x5)   calld(0x10139c8c, 0xf35);             /* call 0x10139c8c */
    II(0x10138d57, 0x2)   jmpd(0x10138d66, 0xd);                /* jmp 0x10138d66 */
//  II(0x10138d59, 0xd)   /* Недостижимый код. */
l_0x10138d66:
    II(0x10138d66, 0x6)   mov(eax, memd_a32(ss, ebp - 0x3bc));  /* mov eax, [ebp+0xfffffc44] */
    II(0x10138d6c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10138d6e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10138d6f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10138d70, 0x1)   popd(esi);                            /* pop esi */
    II(0x10138d71, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10138d72, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10138d73, 0x1)   retd();                               /* ret */
FUNC_END

