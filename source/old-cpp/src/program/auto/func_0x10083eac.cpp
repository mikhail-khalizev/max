FUNC_BEGIN(0x10083eac, 0x22cf40d1413a0d37, 0x20, ({0x68, 0xa8, 0, 0, 0, 0xe8, 0x9c, 0x1e, 0xe, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x94, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x2a, 0xe8, 0xa1, 0x5e, 0, 0, 0xe8, 0x5d, 0xee, 0x1, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0xb2, 0x2b, 0xff, 0xff, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xe0, 0xe8, 0x5f, 0x1f, 0xff, 0xff, 0x80, 0x4d, 0xdc, 0x1, 0x8d, 0x45, 0xd4, 0xe8, 0xdc, 0x7c, 0, 0, 0x89, 0x45, 0xd0, 0x80, 0x65, 0xdc, 0xfe, 0x8d, 0x45, 0xcc, 0xe8, 0xd0, 0x2b, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0xe8, 0x85, 0xf7, 0xff, 0xff, 0x88, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x13, 0x1, 0x74, 0x9, 0xc7, 0x45, 0xc8, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xc8, 0x2, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x20, 0xe8, 0x17, 0x5d, 0, 0, 0xe8, 0x1a, 0x60, 0, 0, 0x89, 0xc2, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x15, 0xf, 0xbf, 0x45, 0xc4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xab, 0xa6, 0x1c, 0x10, 0x89, 0x45, 0xc0, 0xeb, 0x34, 0x8b, 0x45, 0xf8, 0xe8, 0xb4, 0x3, 0xe, 0, 0x84, 0xc0, 0x74, 0x15, 0xf, 0xbf, 0x45, 0xc4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa7, 0xa6, 0x1c, 0x10, 0x89, 0x45, 0xc0, 0xeb, 0x13, 0xf, 0xbf, 0x45, 0xc4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x89, 0x45, 0xc0, 0x66, 0xc7, 0x45, 0xcc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xcc, 0x66, 0xff, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x95, 0, 0, 0, 0x66, 0xc7, 0x45, 0xce, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xce, 0x66, 0xff, 0x45, 0xce, 0x8b, 0x45, 0xce, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x71, 0, 0, 0, 0xf, 0xbf, 0x55, 0xce, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xcc, 0x1, 0xd0, 0x8b, 0x15, 0x54, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x31, 0xd2, 0x8a, 0x10, 0xf, 0xbf, 0x45, 0xc8, 0x39, 0xc2, 0x75, 0x2c, 0x80, 0x7d, 0xec, 0, 0x74, 0x24, 0xf, 0xbf, 0x45, 0xce, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xcc, 0x1, 0xd0, 0x3, 0x45, 0xc0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x15, 0xf, 0xbf, 0x5d, 0xce, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xd4, 0xe8, 0xd0, 0x66, 0, 0, 0x1, 0xd8, 0xc6, 0, 0x2, 0xe9, 0x78, 0xff, 0xff, 0xff, 0xe9, 0x54, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x13, 0x1, 0x74, 0x9, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x80, 0x75, 0x5, 0xe9, 0xb4, 0, 0, 0, 0x66, 0xc7, 0x45, 0xcc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xcc, 0x66, 0xff, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x95, 0, 0, 0, 0x66, 0xc7, 0x45, 0xce, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xce, 0x66, 0xff, 0x45, 0xce, 0x8b, 0x45, 0xce, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x71, 0, 0, 0, 0xf, 0xbf, 0x55, 0xce, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xcc, 0x1, 0xd0, 0x8b, 0x15, 0x54, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0x2c, 0x80, 0x7d, 0xec, 0, 0x74, 0x24, 0xf, 0xbf, 0x45, 0xce, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xcc, 0x1, 0xd0, 0x3, 0x45, 0xc0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x15, 0xf, 0xbf, 0x5d, 0xce, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xd4, 0xe8, 0x5, 0x66, 0, 0, 0x1, 0xd8, 0xc6, 0, 0x2, 0xe9, 0x78, 0xff, 0xff, 0xff, 0xe9, 0x54, 0xff, 0xff, 0xff, 0xf, 0xbe, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xd4, 0xe8, 0xb7, 0x65, 0, 0, 0xe8, 0xe8, 0x5c, 0x4, 0, 0xb8, 0x24, 0, 0, 0, 0xe8, 0xb0, 0x1c, 0xe, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0x83, 0x7d, 0xb8, 0, 0x74, 0x34, 0x31, 0xc0, 0x50, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xb4, 0xe8, 0xf7, 0x1c, 0xff, 0xff, 0x89, 0xc1, 0xbb, 0x3, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x7c, 0x65, 0, 0, 0x8b, 0x75, 0xbc, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x48, 0x3c, 0x4, 0, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xac, 0xeb, 0x6, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xac, 0x8b, 0x55, 0xac, 0x8d, 0x45, 0xa8, 0xe8, 0x3c, 0x55, 0, 0, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0x98, 0xe8, 0x93, 0x6f, 0, 0, 0x8d, 0x55, 0x98, 0x8d, 0x45, 0xa8, 0xe8, 0x80, 0x54, 0, 0, 0xe8, 0xff, 0x56, 0, 0, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0x94, 0xe8, 0x94, 0x1c, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0x90, 0xe8, 0x87, 0x1c, 0xff, 0xff, 0x89, 0xda, 0xe8, 0xe6, 0x1d, 0x2, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0x8c, 0xc7, 0x45, 0x88, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0x88, 0xff, 0x45, 0x88, 0x8b, 0x45, 0x88, 0x66, 0x3b, 0x45, 0x8c, 0xf, 0x8d, 0x7f, 0x1, 0, 0, 0x8b, 0x45, 0xe8, 0x2b, 0x45, 0x88, 0x66, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xea, 0x3, 0x45, 0x88, 0x66, 0x89, 0x45, 0xce, 0xc7, 0x45, 0x84, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0x84, 0x2, 0xf, 0xbf, 0x45, 0x84, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0x4c, 0x1, 0, 0, 0xc7, 0x45, 0x80, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0x80, 0xff, 0x45, 0x80, 0xf, 0xbf, 0x45, 0x88, 0x1, 0xc0, 0xf, 0xbf, 0x55, 0x80, 0x39, 0xc2, 0xf, 0x8d, 0x26, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0x84, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xcc, 0xe8, 0x30, 0x6f, 0, 0, 0x8d, 0x55, 0xcc, 0x8d, 0x45, 0x98, 0xe8, 0x4f, 0x40, 0x8, 0, 0x84, 0xc0, 0x74, 0x1e, 0xf, 0xbf, 0x5d, 0xce, 0xf, 0xbf, 0x55, 0xcc, 0x8d, 0x45, 0xd4, 0xe8, 0x95, 0x64, 0, 0, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x74, 0x5, 0xe9, 0xd9, 0, 0, 0, 0x8d, 0x55, 0xe8, 0x8d, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0xb0, 0x1b, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xcc, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0xa0, 0x1b, 0xff, 0xff, 0x89, 0xda, 0xe8, 0xff, 0x1c, 0x2, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0xc1, 0x8d, 0x55, 0xe4, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0x7d, 0x1b, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xcc, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x6d, 0x1b, 0xff, 0xff, 0x89, 0xda, 0xe8, 0xcc, 0x1c, 0x2, 0, 0xf, 0xbf, 0xd0, 0xbb, 0x6, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x1, 0xc8, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x45, 0x8c, 0x7d, 0x5e, 0x8b, 0x45, 0xf0, 0x83, 0x78, 0x3a, 0, 0x74, 0x17, 0xf, 0xbf, 0x55, 0xce, 0xf, 0xbf, 0x45, 0xcc, 0xe8, 0x11, 0xfa, 0xfe, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x3e, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xce, 0xf, 0xbf, 0x5d, 0xcc, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x53, 0xbf, 0xfe, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x14, 0x8d, 0x55, 0xcc, 0x8d, 0x45, 0xe0, 0xe8, 0xce, 0x47, 0, 0, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x89, 0x45, 0x8c, 0xe9, 0xc2, 0xfe, 0xff, 0xff, 0xe9, 0xa3, 0xfe, 0xff, 0xff, 0xe9, 0x6e, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xe0, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x1e, 0x8b, 0x45, 0xe2, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x20, 0x8d, 0x55, 0xe0, 0x8b, 0x45, 0xf4, 0xe8, 0xb7, 0x1a, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa8, 0xe8, 0x49, 0x52, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xde, 0x78, 0, 0, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xa8, 0xe8, 0x33, 0x52, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xc8, 0x78, 0, 0, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10083eac, 0x5)   pushd(0xa8);                          /* push dword 0xa8 */
    II(0x10083eb1, 0x5)   calld(sys_check_available_stack_size, 0xe1e9c); /* call 0x10165d52 */
    II(0x10083eb6, 0x1)   pushd(esi);                           /* push esi */
    II(0x10083eb7, 0x1)   pushd(edi);                           /* push edi */
    II(0x10083eb8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10083eb9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10083ebb, 0x6)   sub(esp, 0x94);                       /* sub esp, 0x94 */
    II(0x10083ec1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10083ec4, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10083ec7, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10083eca, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x10083ecd, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10083ed0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083ed3, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10083ed6, 0x5)   calld(0x10089d7c, 0x5ea1);            /* call 0x10089d7c */
    II(0x10083edb, 0x5)   calld(0x100a2d3d, 0x1ee5d);           /* call 0x100a2d3d */
    II(0x10083ee0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083ee3, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10083ee6, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10083ee9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083eec, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10083eef, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10083ef2, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10083ef5, 0x5)   calld(0x10076aac, -0xd44e);           /* call 0x10076aac */
    II(0x10083efa, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x10083efd, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10083f00, 0x5)   calld(0x10075e64, -0xe0a1);           /* call 0x10075e64 */
    II(0x10083f05, 0x4)   or_(memb_a32(ss, ebp - 0x24), 0x1);   /* or byte [ebp-0x24], 0x1 */
    II(0x10083f09, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10083f0c, 0x5)   calld(0x1008bbed, 0x7cdc);            /* call 0x1008bbed */
    II(0x10083f11, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10083f14, 0x4)   and_(memb_a32(ss, ebp - 0x24), -0x2 /* 0xfe */); /* and byte [ebp-0x24], 0xfe */
    II(0x10083f18, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10083f1b, 0x5)   calld(my_ctor_0x101b4184, -0xd430);   /* call 0x10076af0 */
    II(0x10083f20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083f23, 0x5)   calld(0x100836ad, -0x87b);            /* call 0x100836ad */
    II(0x10083f28, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10083f2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083f2e, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x10083f32, 0x2)   jzd(0x10083f3d, 0x9);                 /* jz 0x10083f3d */
    II(0x10083f34, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0x1);   /* mov dword [ebp-0x38], 0x1 */
    II(0x10083f3b, 0x2)   jmpd(0x10083f44, 0x7);                /* jmp 0x10083f44 */
l_0x10083f3d:
    II(0x10083f3d, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0x2);   /* mov dword [ebp-0x38], 0x2 */
l_0x10083f44:
    II(0x10083f44, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083f46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083f49, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10083f4c, 0x5)   calld(0x10089c68, 0x5d17);            /* call 0x10089c68 */
    II(0x10083f51, 0x5)   calld(0x10089f70, 0x601a);            /* call 0x10089f70 */
    II(0x10083f56, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10083f58, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10083f5a, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x10083f5d, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x10083f60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083f63, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x10083f68, 0x2)   jnzd(0x10083f7f, 0x15);               /* jnz 0x10083f7f */
    II(0x10083f6a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x10083f6e, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10083f74, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6ab)); /* mov eax, [eax+0x101ca6ab] */
    II(0x10083f7a, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x10083f7d, 0x2)   jmpd(0x10083fb3, 0x34);               /* jmp 0x10083fb3 */
l_0x10083f7f:
    II(0x10083f7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083f82, 0x5)   calld(0x1016433b, 0xe03b4);           /* call 0x1016433b */
    II(0x10083f87, 0x2)   test(al, al);                         /* test al, al */
    II(0x10083f89, 0x2)   jzd(0x10083fa0, 0x15);                /* jz 0x10083fa0 */
    II(0x10083f8b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x10083f8f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10083f95, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a7)); /* mov eax, [eax+0x101ca6a7] */
    II(0x10083f9b, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x10083f9e, 0x2)   jmpd(0x10083fb3, 0x13);               /* jmp 0x10083fb3 */
l_0x10083fa0:
    II(0x10083fa0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x10083fa4, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10083faa, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x10083fb0, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x10083fb3:
    II(0x10083fb3, 0x6)   mov(memw_a32(ss, ebp - 0x34), 0);     /* mov word [ebp-0x34], 0x0 */
    II(0x10083fb9, 0x2)   jmpd(0x10083fc2, 0x7);                /* jmp 0x10083fc2 */
l_0x10083fbb:
    II(0x10083fbb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10083fbe, 0x4)   inc(memw_a32(ss, ebp - 0x34));        /* inc word [ebp-0x34] */
l_0x10083fc2:
    II(0x10083fc2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10083fc5, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x10083fcc, 0x6)   jged(0x10084067, 0x95);               /* jge dword 0x10084067 */
    II(0x10083fd2, 0x6)   mov(memw_a32(ss, ebp - 0x32), 0);     /* mov word [ebp-0x32], 0x0 */
    II(0x10083fd8, 0x2)   jmpd(0x10083fe1, 0x7);                /* jmp 0x10083fe1 */
l_0x10083fda:
    II(0x10083fda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x32));   /* mov eax, [ebp-0x32] */
    II(0x10083fdd, 0x4)   inc(memw_a32(ss, ebp - 0x32));        /* inc word [ebp-0x32] */
l_0x10083fe1:
    II(0x10083fe1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x32));   /* mov eax, [ebp-0x32] */
    II(0x10083fe4, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x10083feb, 0x6)   jged(0x10084062, 0x71);               /* jge dword 0x10084062 */
    II(0x10083ff1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x32)); /* movsx edx, word [ebp-0x32] */
    II(0x10083ff5, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x10083ffa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10083ffd, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10084000, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x10084004, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10084006, 0x6)   mov(edx, memd_a32(ds, 0x101c9454));   /* mov edx, [0x101c9454] */
    II(0x1008400c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1008400e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084010, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10084012, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x10084016, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10084018, 0x2)   jnzd(0x10084046, 0x2c);               /* jnz 0x10084046 */
    II(0x1008401a, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x1008401e, 0x2)   jzd(0x10084044, 0x24);                /* jz 0x10084044 */
    II(0x10084020, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x32)); /* movsx eax, word [ebp-0x32] */
    II(0x10084024, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x1008402a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1008402d, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10084030, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x10084034, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10084036, 0x3)   add(eax, memd_a32(ss, ebp - 0x40));   /* add eax, [ebp-0x40] */
    II(0x10084039, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1008403b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10084040, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10084042, 0x2)   jnzd(0x10084046, 0x2);                /* jnz 0x10084046 */
l_0x10084044:
    II(0x10084044, 0x2)   jmpd(0x10084048, 0x2);                /* jmp 0x10084048 */
l_0x10084046:
    II(0x10084046, 0x2)   jmpd(0x1008405d, 0x15);               /* jmp 0x1008405d */
l_0x10084048:
    II(0x10084048, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x32)); /* movsx ebx, word [ebp-0x32] */
    II(0x1008404c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x10084050, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10084053, 0x5)   calld(0x1008a728, 0x66d0);            /* call 0x1008a728 */
    II(0x10084058, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1008405a, 0x3)   mov(memb_a32(ds, eax), 0x2);          /* mov byte [eax], 0x2 */
l_0x1008405d:
    II(0x1008405d, 0x5)   jmpd(0x10083fda, -0x88);              /* jmp 0x10083fda */
l_0x10084062:
    II(0x10084062, 0x5)   jmpd(0x10083fbb, -0xac);              /* jmp 0x10083fbb */
l_0x10084067:
    II(0x10084067, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008406a, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x1008406e, 0x2)   jzd(0x10084079, 0x9);                 /* jz 0x10084079 */
    II(0x10084070, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084073, 0x4)   test(memb_a32(ds, eax + 0x12), 0x80); /* test byte [eax+0x12], 0x80 */
    II(0x10084077, 0x2)   jnzd(0x1008407e, 0x5);                /* jnz 0x1008407e */
l_0x10084079:
    II(0x10084079, 0x5)   jmpd(0x10084132, 0xb4);               /* jmp 0x10084132 */
l_0x1008407e:
    II(0x1008407e, 0x6)   mov(memw_a32(ss, ebp - 0x34), 0);     /* mov word [ebp-0x34], 0x0 */
    II(0x10084084, 0x2)   jmpd(0x1008408d, 0x7);                /* jmp 0x1008408d */
l_0x10084086:
    II(0x10084086, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10084089, 0x4)   inc(memw_a32(ss, ebp - 0x34));        /* inc word [ebp-0x34] */
l_0x1008408d:
    II(0x1008408d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10084090, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x10084097, 0x6)   jged(0x10084132, 0x95);               /* jge dword 0x10084132 */
    II(0x1008409d, 0x6)   mov(memw_a32(ss, ebp - 0x32), 0);     /* mov word [ebp-0x32], 0x0 */
    II(0x100840a3, 0x2)   jmpd(0x100840ac, 0x7);                /* jmp 0x100840ac */
l_0x100840a5:
    II(0x100840a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x32));   /* mov eax, [ebp-0x32] */
    II(0x100840a8, 0x4)   inc(memw_a32(ss, ebp - 0x32));        /* inc word [ebp-0x32] */
l_0x100840ac:
    II(0x100840ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x32));   /* mov eax, [ebp-0x32] */
    II(0x100840af, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100840b6, 0x6)   jged(0x1008412d, 0x71);               /* jge dword 0x1008412d */
    II(0x100840bc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x32)); /* movsx edx, word [ebp-0x32] */
    II(0x100840c0, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100840c5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100840c8, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100840cb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x100840cf, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100840d1, 0x6)   mov(edx, memd_a32(ds, 0x101c9454));   /* mov edx, [0x101c9454] */
    II(0x100840d7, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100840d9, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100840db, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100840e0, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100840e3, 0x2)   jnzd(0x10084111, 0x2c);               /* jnz 0x10084111 */
    II(0x100840e5, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x100840e9, 0x2)   jzd(0x1008410f, 0x24);                /* jz 0x1008410f */
    II(0x100840eb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x32)); /* movsx eax, word [ebp-0x32] */
    II(0x100840ef, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x100840f5, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100840f8, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100840fb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x100840ff, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10084101, 0x3)   add(eax, memd_a32(ss, ebp - 0x40));   /* add eax, [ebp-0x40] */
    II(0x10084104, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10084106, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1008410b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008410d, 0x2)   jnzd(0x10084111, 0x2);                /* jnz 0x10084111 */
l_0x1008410f:
    II(0x1008410f, 0x2)   jmpd(0x10084113, 0x2);                /* jmp 0x10084113 */
l_0x10084111:
    II(0x10084111, 0x2)   jmpd(0x10084128, 0x15);               /* jmp 0x10084128 */
l_0x10084113:
    II(0x10084113, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x32)); /* movsx ebx, word [ebp-0x32] */
    II(0x10084117, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x1008411b, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008411e, 0x5)   calld(0x1008a728, 0x6605);            /* call 0x1008a728 */
    II(0x10084123, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10084125, 0x3)   mov(memb_a32(ds, eax), 0x2);          /* mov byte [eax], 0x2 */
l_0x10084128:
    II(0x10084128, 0x5)   jmpd(0x100840a5, -0x88);              /* jmp 0x100840a5 */
l_0x1008412d:
    II(0x1008412d, 0x5)   jmpd(0x10084086, -0xac);              /* jmp 0x10084086 */
l_0x10084132:
    II(0x10084132, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x10084136, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10084139, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008413c, 0x5)   calld(0x1008a6f8, 0x65b7);            /* call 0x1008a6f8 */
    II(0x10084141, 0x5)   calld(0x100c9e2e, 0x45ce8);           /* call 0x100c9e2e */
    II(0x10084146, 0x5)   mov(eax, 0x24);                       /* mov eax, 0x24 */
    II(0x1008414b, 0x5)   calld(sys_new, 0xe1cb0);              /* call 0x10165e00 */
    II(0x10084150, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x10084153, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10084156, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x10084159, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0);     /* cmp dword [ebp-0x48], 0x0 */
    II(0x1008415d, 0x2)   jzd(0x10084193, 0x34);                /* jz 0x10084193 */
    II(0x1008415f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10084161, 0x1)   pushd(eax);                           /* push eax */
    II(0x10084162, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x10084165, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x10084168, 0x5)   calld(0x10075e64, -0xe309);           /* call 0x10075e64 */
    II(0x1008416d, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1008416f, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x10084174, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10084177, 0x5)   calld(0x1008a6f8, 0x657c);            /* call 0x1008a6f8 */
    II(0x1008417c, 0x3)   mov(esi, memd_a32(ss, ebp - 0x44));   /* mov esi, [ebp-0x44] */
    II(0x1008417f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084181, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x10084183, 0x5)   calld(0x100c7dd0, 0x43c48);           /* call 0x100c7dd0 */
    II(0x10084188, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
//    II(0x1008418b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1008418e, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x10084191, 0x2)   jmpd(0x10084199, 0x6);                /* jmp 0x10084199 */
l_0x10084193:
    II(0x10084193, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10084196, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
l_0x10084199:
    II(0x10084199, 0x3)   mov(edx, memd_a32(ss, ebp - 0x54));   /* mov edx, [ebp-0x54] */
    II(0x1008419c, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x1008419f, 0x5)   calld(0x100896e0, 0x553c);            /* call 0x100896e0 */
    II(0x100841a4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100841a6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100841a7, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100841a9, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100841ab, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100841ad, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100841b0, 0x5)   calld(0x1008b148, 0x6f93);            /* call 0x1008b148 */
    II(0x100841b5, 0x3)   lea(edx, ebp - 0x68);                 /* lea edx, [ebp-0x68] */
    II(0x100841b8, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100841bb, 0x5)   calld(0x10089640, 0x5480);            /* call 0x10089640 */
    II(0x100841c0, 0x5)   calld(0x100898c4, 0x56ff);            /* call 0x100898c4 */
    II(0x100841c5, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100841c8, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100841cb, 0x5)   calld(0x10075e64, -0xe36c);           /* call 0x10075e64 */
    II(0x100841d0, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100841d2, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100841d5, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x100841d8, 0x5)   calld(0x10075e64, -0xe379);           /* call 0x10075e64 */
    II(0x100841dd, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100841df, 0x5)   calld(0x100a5fca, 0x21de6);           /* call 0x100a5fca */
    II(0x100841e4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100841e7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100841e9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100841ec, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100841ee, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100841f0, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x100841f3, 0x7)   mov(memd_a32(ss, ebp - 0x78), 0x1);   /* mov dword [ebp-0x78], 0x1 */
    II(0x100841fa, 0x2)   jmpd(0x10084202, 0x6);                /* jmp 0x10084202 */
l_0x100841fc:
    II(0x100841fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x100841ff, 0x3)   inc(memd_a32(ss, ebp - 0x78));        /* inc dword [ebp-0x78] */
l_0x10084202:
    II(0x10084202, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x10084205, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x74));    /* cmp ax, [ebp-0x74] */
    II(0x10084209, 0x6)   jged(0x1008438e, 0x17f);              /* jge dword 0x1008438e */
    II(0x1008420f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10084212, 0x3)   sub(eax, memd_a32(ss, ebp - 0x78));   /* sub eax, [ebp-0x78] */
    II(0x10084215, 0x4)   mov(memw_a32(ss, ebp - 0x34), ax);    /* mov [ebp-0x34], ax */
    II(0x10084219, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x1008421c, 0x3)   add(eax, memd_a32(ss, ebp - 0x78));   /* add eax, [ebp-0x78] */
    II(0x1008421f, 0x4)   mov(memw_a32(ss, ebp - 0x32), ax);    /* mov [ebp-0x32], ax */
    II(0x10084223, 0x7)   mov(memd_a32(ss, ebp - 0x7c), 0);     /* mov dword [ebp-0x7c], 0x0 */
    II(0x1008422a, 0x2)   jmpd(0x10084230, 0x4);                /* jmp 0x10084230 */
l_0x1008422c:
    II(0x1008422c, 0x4)   add(memd_a32(ss, ebp - 0x7c), 0x2);   /* add dword [ebp-0x7c], 0x2 */
l_0x10084230:
    II(0x10084230, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x7c)); /* movsx eax, word [ebp-0x7c] */
    II(0x10084234, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x10084237, 0x6)   jged(0x10084389, 0x14c);              /* jge dword 0x10084389 */
    II(0x1008423d, 0x7)   mov(memd_a32(ss, ebp - 0x80), 0);     /* mov dword [ebp-0x80], 0x0 */
    II(0x10084244, 0x2)   jmpd(0x1008424c, 0x6);                /* jmp 0x1008424c */
l_0x10084246:
    II(0x10084246, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x10084249, 0x3)   inc(memd_a32(ss, ebp - 0x80));        /* inc dword [ebp-0x80] */
l_0x1008424c:
    II(0x1008424c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x78)); /* movsx eax, word [ebp-0x78] */
    II(0x10084250, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10084252, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x80)); /* movsx edx, word [ebp-0x80] */
    II(0x10084256, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10084258, 0x6)   jged(0x10084384, 0x126);              /* jge dword 0x10084384 */
    II(0x1008425e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x7c)); /* movsx edx, word [ebp-0x7c] */
    II(0x10084262, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10084265, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x1008426a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1008426c, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1008426f, 0x5)   calld(0x1008b1a4, 0x6f30);            /* call 0x1008b1a4 */
    II(0x10084274, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x10084277, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x1008427a, 0x5)   calld(0x101082ce, 0x8404f);           /* call 0x101082ce */
    II(0x1008427f, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084281, 0x2)   jzd(0x100842a1, 0x1e);                /* jz 0x100842a1 */
    II(0x10084283, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x32)); /* movsx ebx, word [ebp-0x32] */
    II(0x10084287, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x1008428b, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008428e, 0x5)   calld(0x1008a728, 0x6495);            /* call 0x1008a728 */
    II(0x10084293, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10084295, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10084297, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1008429c, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x1008429f, 0x2)   jzd(0x100842a6, 0x5);                 /* jz 0x100842a6 */
l_0x100842a1:
    II(0x100842a1, 0x5)   jmpd(0x1008437f, 0xd9);               /* jmp 0x1008437f */
l_0x100842a6:
    II(0x100842a6, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100842a9, 0x6)   lea(eax, ebp - 0x84);                 /* lea eax, [ebp+0xffffff7c] */
    II(0x100842af, 0x5)   calld(0x10075e64, -0xe450);           /* call 0x10075e64 */
    II(0x100842b4, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100842b6, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x100842b9, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x100842bf, 0x5)   calld(0x10075e64, -0xe460);           /* call 0x10075e64 */
    II(0x100842c4, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100842c6, 0x5)   calld(0x100a5fca, 0x21cff);           /* call 0x100a5fca */
    II(0x100842cb, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100842ce, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100842d0, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100842d3, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100842d5, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100842d7, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100842d9, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100842dc, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x100842e2, 0x5)   calld(0x10075e64, -0xe483);           /* call 0x10075e64 */
    II(0x100842e7, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100842e9, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x100842ec, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x100842f2, 0x5)   calld(0x10075e64, -0xe493);           /* call 0x10075e64 */
    II(0x100842f7, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100842f9, 0x5)   calld(0x100a5fca, 0x21ccc);           /* call 0x100a5fca */
    II(0x100842fe, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10084301, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x10084306, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10084308, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1008430b, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1008430d, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x1008430f, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
//    II(0x10084315, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x1008431b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x74));    /* cmp ax, [ebp-0x74] */
    II(0x1008431f, 0x2)   jged(0x1008437f, 0x5e);               /* jge 0x1008437f */
    II(0x10084321, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10084324, 0x4)   cmp(memd_a32(ds, eax + 0x3a), 0);     /* cmp dword [eax+0x3a], 0x0 */
    II(0x10084328, 0x2)   jzd(0x10084341, 0x17);                /* jz 0x10084341 */
    II(0x1008432a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x32)); /* movsx edx, word [ebp-0x32] */
    II(0x1008432e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x10084332, 0x5)   calld(0x10073d48, -0x105ef);          /* call 0x10073d48 */
    II(0x10084337, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1008433c, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1008433f, 0x2)   jzd(0x1008437f, 0x3e);                /* jz 0x1008437f */
l_0x10084341:
    II(0x10084341, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10084346, 0x1)   pushd(eax);                           /* push eax */
    II(0x10084347, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x32)); /* movsx ecx, word [ebp-0x32] */
    II(0x1008434b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x34)); /* movsx ebx, word [ebp-0x34] */
    II(0x1008434f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10084352, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x10084355, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10084358, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008435b, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1008435e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10084361, 0x5)   calld(0x100702b9, -0x140ad);          /* call 0x100702b9 */
    II(0x10084366, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x10084369, 0x2)   jzd(0x1008437f, 0x14);                /* jz 0x1008437f */
    II(0x1008436b, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x1008436e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10084371, 0x5)   calld(0x10088b44, 0x47ce);            /* call 0x10088b44 */
    II(0x10084376, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x1008437c, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
l_0x1008437f:
    II(0x1008437f, 0x5)   jmpd(0x10084246, -0x13e);             /* jmp 0x10084246 */
l_0x10084384:
    II(0x10084384, 0x5)   jmpd(0x1008422c, -0x15d);             /* jmp 0x1008422c */
l_0x10084389:
    II(0x10084389, 0x5)   jmpd(0x100841fc, -0x192);             /* jmp 0x100841fc */
l_0x1008438e:
    II(0x1008438e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10084391, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10084394, 0x4)   mov(memw_a32(ds, edx + 0x1e), ax);    /* mov [edx+0x1e], ax */
    II(0x10084398, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x1008439b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1008439e, 0x4)   mov(memw_a32(ds, edx + 0x20), ax);    /* mov [edx+0x20], ax */
    II(0x100843a2, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100843a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100843a8, 0x5)   calld(0x10075e64, -0xe549);           /* call 0x10075e64 */
    II(0x100843ad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100843af, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100843b2, 0x5)   calld(0x10089600, 0x5249);            /* call 0x10089600 */
    II(0x100843b7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100843b9, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100843bc, 0x5)   calld(0x1008bc9f, 0x78de);            /* call 0x1008bc9f */
    II(0x100843c1, 0x2)   jmpd(0x100843d7, 0x14);               /* jmp 0x100843d7 */
//  II(0x100843c3, 0x14)  /* Недостижимый код. */
l_0x100843d7:
    II(0x100843d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100843da, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100843dc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100843dd, 0x1)   popd(edi);                            /* pop edi */
    II(0x100843de, 0x1)   popd(esi);                            /* pop esi */
    II(0x100843df, 0x1)   retd();                               /* ret */
FUNC_END

