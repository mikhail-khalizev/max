FUNC_BEGIN(0x10150413, 0x22585529747b3d37, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x35, 0x59, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x7b, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x4, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x1f, 0x75, 0x5, 0xe9, 0xd7, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x13, 0x1, 0xf, 0x84, 0xca, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x50, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x45, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xee, 0x47, 0xf8, 0xff, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x76, 0xc1, 0xf8, 0x10, 0xe8, 0xf4, 0x92, 0xf3, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x78, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0xf, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0x18, 0x5b, 0xf2, 0xff, 0x83, 0xf8, 0x4, 0x7d, 0x2, 0xeb, 0x38, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0x50, 0xad, 0xf3, 0xff, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xd8, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x34, 0xf8, 0xf8, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x1, 0x7e, 0x20, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x76, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xe6, 0x18, 0xf2, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x29, 0x50, 0x52, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x7, 0x74, 0x5, 0xe9, 0x89, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0xe8, 0x1f, 0xb1, 0xf7, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x5, 0x1b, 0xf2, 0xff, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0xe8, 0x90, 0xb0, 0xf7, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x75, 0x13, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0xd, 0x8b, 0x45, 0xf4, 0xe8, 0xdb, 0xb0, 0xf7, 0xff, 0x98, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x1c, 0xe8, 0xc3, 0x4e, 0xf8, 0xff, 0xf, 0xbf, 0xc8, 0xbb, 0x5d, 0x4, 0, 0, 0xba, 0x5c, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x26, 0xd5, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x7, 0x74, 0x5, 0xe9, 0x8e, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x52, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xff, 0x80, 0x50, 0xa5, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x1a, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x83, 0xb8, 0x50, 0xa5, 0x1c, 0x10, 0x1, 0x74, 0x2, 0xeb, 0x41, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x8b, 0x55, 0xec, 0x42, 0xf, 0xaf, 0xc2, 0x5, 0x3b, 0x4, 0, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x3, 0x45, 0xec, 0x89, 0x45, 0xe4, 0xe8, 0x1b, 0x4e, 0xf8, 0xff, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xe4, 0xf, 0xbf, 0x55, 0xe8, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x80, 0xd4, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0xbb, 0x60, 0xf2, 0xff, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0xf, 0x84, 0xa4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0xa2, 0x60, 0xf2, 0xff, 0x8b, 0x50, 0x12, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x39, 0xc2, 0x7e, 0x50, 0x8b, 0x45, 0xfc, 0x8a, 0x50, 0x54, 0x8b, 0x45, 0xfc, 0x88, 0x50, 0x50, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xdc, 0x66, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x13, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x1c, 0xe8, 0x96, 0x4d, 0xf8, 0xff, 0xf, 0xbf, 0xc8, 0xbb, 0x12, 0x4, 0, 0, 0xba, 0xf, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xf9, 0xd3, 0xfe, 0xff, 0xeb, 0x34, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0x32, 0x60, 0xf2, 0xff, 0x8b, 0x50, 0x12, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x50, 0x25, 0xff, 0, 0, 0, 0x39, 0xd0, 0x74, 0x14, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0x12, 0x60, 0xf2, 0xff, 0x8a, 0x50, 0x14, 0x8b, 0x45, 0xfc, 0x88, 0x50, 0x50, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0xfe, 0x5f, 0xf2, 0xff, 0x8a, 0x50, 0x10, 0x8b, 0x45, 0xfc, 0x88, 0x50, 0x4e, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7e, 0x28, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xe0, 0x83, 0xf8, 0x5, 0x7d, 0x10, 0xf, 0xbf, 0x45, 0xe0, 0x3, 0x45, 0xfc, 0xc6, 0x80, 0xb0, 0, 0, 0, 0, 0xeb, 0xe1, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x1a, 0x74, 0x14, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3f, 0x1a, 0x74, 0x2, 0xeb, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x5, 0xe9, 0x9a, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xfe, 0x48, 0x58, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x58, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x8f, 0x81, 0, 0, 0, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0xe8, 0x32, 0xe6, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x58, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x10, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3f, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x40, 0x1, 0xeb, 0x4c, 0x8b, 0x45, 0xfc, 0xe8, 0x9b, 0xe8, 0xff, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x3b, 0x10, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xf9, 0x5d, 0xf2, 0xff, 0xe8, 0x2c, 0x10, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x7, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xee, 0x56, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x2, 0x75, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0x16, 0xa5, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x15, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x80, 0xb8, 0xd5, 0x81, 0x1c, 0x10, 0, 0x75, 0x5, 0xe9, 0x24, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd5, 0x81, 0x1c, 0x10, 0x88, 0x45, 0xd8, 0xe9, 0xe0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0x92, 0x5e, 0xf2, 0xff, 0x8b, 0x50, 0x17, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0xd5, 0x5f, 0xf2, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xca, 0x8e, 0xf3, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x52, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0xb6, 0x5f, 0xf2, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x52, 0x66, 0x29, 0x50, 0x8, 0xe9, 0xbf, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0x47, 0x5e, 0xf2, 0xff, 0x8b, 0x50, 0x17, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0x8a, 0x5f, 0xf2, 0xff, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0xe8, 0x7f, 0x8e, 0xf3, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x52, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0x6b, 0x5f, 0xf2, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x52, 0x66, 0x29, 0x50, 0xa, 0xe9, 0x74, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0xfc, 0x5d, 0xf2, 0xff, 0x8b, 0x50, 0x17, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0x3f, 0x5f, 0xf2, 0xff, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0xe8, 0x34, 0x8e, 0xf3, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x52, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x70, 0xe8, 0x20, 0x5f, 0xf2, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x52, 0x66, 0x29, 0x50, 0xc, 0xeb, 0x2c, 0xeb, 0x2a, 0x8a, 0x45, 0xd8, 0x88, 0x45, 0xd4, 0x80, 0x7d, 0xd4, 0x2, 0x72, 0x12, 0x80, 0x7d, 0xd4, 0x2, 0xf, 0x86, 0x55, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xd4, 0x3, 0x74, 0x9a, 0xeb, 0xe0, 0x80, 0x7d, 0xd4, 0x1, 0xf, 0x84, 0xf8, 0xfe, 0xff, 0xff, 0xeb, 0xd4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10150413, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x10150418, 0x5)   calld(sys_check_available_stack_size, 0x15935); /* call 0x10165d52 */
    II(0x1015041d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015041e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015041f, 0x1)   pushd(edx);                           /* push edx */
    II(0x10150420, 0x1)   pushd(esi);                           /* push esi */
    II(0x10150421, 0x1)   pushd(edi);                           /* push edi */
    II(0x10150422, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10150423, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10150425, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x1015042b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015042e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150431, 0x4)   mov(memb_a32(ds, eax + 0x7b), 0);     /* mov byte [eax+0x7b], 0x0 */
    II(0x10150435, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150438, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x1015043c, 0x2)   jnzd(0x10150447, 0x9);                /* jnz 0x10150447 */
    II(0x1015043e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150441, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1f);  /* cmp byte [eax+0x3e], 0x1f */
    II(0x10150445, 0x2)   jnzd(0x1015044c, 0x5);                /* jnz 0x1015044c */
l_0x10150447:
    II(0x10150447, 0x5)   jmpd(0x10150523, 0xd7);               /* jmp 0x10150523 */
l_0x1015044c:
    II(0x1015044c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015044f, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x10150453, 0x6)   jzd(0x10150523, 0xca);                /* jz dword 0x10150523 */
    II(0x10150459, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015045c, 0x3)   mov(ebx, memd_a32(ds, eax + 0x50));   /* mov ebx, [eax+0x50] */
    II(0x1015045f, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10150462, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150465, 0x3)   mov(al, memb_a32(ds, eax + 0x45));    /* mov al, [eax+0x45] */
    II(0x10150468, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015046a, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015046d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150470, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10150473, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10150476, 0x5)   calld(0x100d4c69, -0x7b812);          /* call 0x100d4c69 */
    II(0x1015047b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1015047e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10150482, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150485, 0x3)   mov(eax, memd_a32(ds, eax + 0x76));   /* mov eax, [eax+0x76] */
    II(0x10150488, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015048b, 0x5)   calld(my_min, -0xc6d0c);              /* call 0x10089784 */
    II(0x10150490, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10150492, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150495, 0x4)   mov(memw_a32(ds, eax + 0x78), dx);    /* mov [eax+0x78], dx */
    II(0x10150499, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015049c, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015049f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101504a4, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101504aa, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x101504b0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101504b5, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x101504b8, 0x2)   jnzd(0x101504c9, 0xf);                /* jnz 0x101504c9 */
    II(0x101504ba, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x101504bf, 0x5)   calld(0x10075fdc, -0xda4e8);          /* call 0x10075fdc */
    II(0x101504c4, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x101504c7, 0x2)   jged(0x101504cb, 0x2);                /* jge 0x101504cb */
l_0x101504c9:
    II(0x101504c9, 0x2)   jmpd(0x10150503, 0x38);               /* jmp 0x10150503 */
l_0x101504cb:
    II(0x101504cb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101504cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101504d0, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x101504d3, 0x5)   calld(0x1008b228, -0xc52b0);          /* call 0x1008b228 */
    II(0x101504d8, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x101504db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101504de, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x101504e1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101504e6, 0x6)   imul(ebx, eax, 0x247);                /* imul ebx, eax, 0x247 */
    II(0x101504ec, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x101504f1, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x101504f3, 0x5)   calld(0x100dfd2c, -0x707cc);          /* call 0x100dfd2c */
    II(0x101504f8, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101504fb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101504fe, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10150501, 0x2)   jled(0x10150523, 0x20);               /* jle 0x10150523 */
l_0x10150503:
    II(0x10150503, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150506, 0x3)   mov(edx, memd_a32(ds, eax + 0x76));   /* mov edx, [eax+0x76] */
    II(0x10150509, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015050c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015050f, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10150512, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10150515, 0x5)   calld(0x10071e00, -0xde71a);          /* call 0x10071e00 */
    II(0x1015051a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015051c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015051f, 0x4)   sub(memw_a32(ds, eax + 0x52), dx);    /* sub [eax+0x52], dx */
l_0x10150523:
    II(0x10150523, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150526, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0);      /* cmp word [eax+0x8], 0x0 */
    II(0x1015052b, 0x2)   jnzd(0x10150536, 0x9);                /* jnz 0x10150536 */
    II(0x1015052d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150530, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x10150534, 0x2)   jzd(0x1015053b, 0x5);                 /* jz 0x1015053b */
l_0x10150536:
    II(0x10150536, 0x5)   jmpd(0x101505c4, 0x89);               /* jmp 0x101505c4 */
l_0x1015053b:
    II(0x1015053b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015053e, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10150541, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10150546, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015054c, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10150552, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x10150555, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10150558, 0x5)   calld(0x100cb67c, -0x84ee1);          /* call 0x100cb67c */
    II(0x1015055d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10150560, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150563, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10150566, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10150569, 0x5)   calld(0x10072073, -0xde4fb);          /* call 0x10072073 */
    II(0x1015056e, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10150571, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10150574, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10150577, 0x5)   calld(0x100cb60c, -0x84f70);          /* call 0x100cb60c */
    II(0x1015057c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10150580, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10150582, 0x2)   jnzd(0x10150597, 0x13);               /* jnz 0x10150597 */
    II(0x10150584, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150587, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10150589, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1015058c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015058e, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10150593, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10150595, 0x2)   jzd(0x10150599, 0x2);                 /* jz 0x10150599 */
l_0x10150597:
    II(0x10150597, 0x2)   jmpd(0x101505a6, 0xd);                /* jmp 0x101505a6 */
l_0x10150599:
    II(0x10150599, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015059c, 0x5)   calld(0x100cb67c, -0x84f25);          /* call 0x100cb67c */
    II(0x101505a1, 0x1)   cwde();                               /* cwde */
    II(0x101505a2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101505a4, 0x2)   jgd(0x101505a8, 0x2);                 /* jg 0x101505a8 */
l_0x101505a6:
    II(0x101505a6, 0x2)   jmpd(0x101505c4, 0x1c);               /* jmp 0x101505c4 */
l_0x101505a8:
    II(0x101505a8, 0x5)   calld(0x100d5470, -0x7b13d);          /* call 0x100d5470 */
    II(0x101505ad, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x101505b0, 0x5)   mov(ebx, 0x45d);                      /* mov ebx, 0x45d */
    II(0x101505b5, 0x5)   mov(edx, 0x45c);                      /* mov edx, 0x45c */
    II(0x101505ba, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x101505bf, 0x5)   calld(0x1013daea, -0x12ada);          /* call 0x1013daea */
l_0x101505c4:
    II(0x101505c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101505c7, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x101505cc, 0x2)   jnzd(0x101505d7, 0x9);                /* jnz 0x101505d7 */
    II(0x101505ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101505d1, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x101505d5, 0x2)   jzd(0x101505dc, 0x5);                 /* jz 0x101505dc */
l_0x101505d7:
    II(0x101505d7, 0x5)   jmpd(0x1015066a, 0x8e);               /* jmp 0x1015066a */
l_0x101505dc:
    II(0x101505dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101505df, 0x4)   inc(memw_a32(ds, eax + 0x52));        /* inc word [eax+0x52] */
    II(0x101505e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101505e6, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x101505e9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101505ee, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101505f4, 0x6)   inc(memd_a32(ds, eax + 0x101ca550));  /* inc dword [eax+0x101ca550] */
    II(0x101505fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101505fd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101505ff, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10150602, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10150604, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10150609, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1015060b, 0x2)   jzd(0x10150627, 0x1a);                /* jz 0x10150627 */
    II(0x1015060d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150610, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10150613, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10150618, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015061e, 0x7)   cmp(memd_a32(ds, eax + 0x101ca550), 0x1); /* cmp dword [eax+0x101ca550], 0x1 */
    II(0x10150625, 0x2)   jzd(0x10150629, 0x2);                 /* jz 0x10150629 */
l_0x10150627:
    II(0x10150627, 0x2)   jmpd(0x1015066a, 0x41);               /* jmp 0x1015066a */
l_0x10150629:
    II(0x10150629, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
    II(0x10150630, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150633, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10150636, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10150638, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x1015063b, 0x1)   inc(edx);                             /* inc edx */
    II(0x1015063c, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1015063f, 0x5)   add(eax, 0x43b);                      /* add eax, 0x43b */
    II(0x10150644, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x10150647, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015064a, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x1015064d, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10150650, 0x5)   calld(0x100d5470, -0x7b1e5);          /* call 0x100d5470 */
    II(0x10150655, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10150658, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x1015065c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10150660, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10150665, 0x5)   calld(0x1013daea, -0x12b80);          /* call 0x1013daea */
l_0x1015066a:
    II(0x1015066a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015066d, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10150670, 0x5)   calld(0x10076730, -0xd9f45);          /* call 0x10076730 */
    II(0x10150675, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10150678, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015067b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015067d, 0x6)   jzd(0x10150727, 0xa4);                /* jz dword 0x10150727 */
    II(0x10150683, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150686, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10150689, 0x5)   calld(0x10076730, -0xd9f5e);          /* call 0x10076730 */
    II(0x1015068e, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x10150691, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10150694, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150697, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x1015069a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015069f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x101506a1, 0x2)   jled(0x101506f3, 0x50);               /* jle 0x101506f3 */
    II(0x101506a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101506a6, 0x3)   mov(dl, memb_a32(ds, eax + 0x54));    /* mov dl, [eax+0x54] */
//    II(0x101506a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101506ac, 0x3)   mov(memb_a32(ds, eax + 0x50), dl);    /* mov [eax+0x50], dl */
    II(0x101506af, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x101506b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101506b7, 0x5)   calld(0x10076d98, -0xd9924);          /* call 0x10076d98 */
    II(0x101506bc, 0x2)   test(al, al);                         /* test al, al */
    II(0x101506be, 0x2)   jzd(0x101506d3, 0x13);                /* jz 0x101506d3 */
    II(0x101506c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101506c3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101506c5, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x101506c8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101506ca, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x101506cf, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x101506d1, 0x2)   jzd(0x101506d5, 0x2);                 /* jz 0x101506d5 */
l_0x101506d3:
    II(0x101506d3, 0x2)   jmpd(0x101506f1, 0x1c);               /* jmp 0x101506f1 */
l_0x101506d5:
    II(0x101506d5, 0x5)   calld(0x100d5470, -0x7b26a);          /* call 0x100d5470 */
    II(0x101506da, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x101506dd, 0x5)   mov(ebx, 0x412);                      /* mov ebx, 0x412 */
    II(0x101506e2, 0x5)   mov(edx, 0x40f);                      /* mov edx, 0x40f */
    II(0x101506e7, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x101506ec, 0x5)   calld(0x1013daea, -0x12c07);          /* call 0x1013daea */
l_0x101506f1:
    II(0x101506f1, 0x2)   jmpd(0x10150727, 0x34);               /* jmp 0x10150727 */
l_0x101506f3:
    II(0x101506f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101506f6, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x101506f9, 0x5)   calld(0x10076730, -0xd9fce);          /* call 0x10076730 */
    II(0x101506fe, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x10150701, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10150704, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150707, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x1015070a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015070f, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10150711, 0x2)   jzd(0x10150727, 0x14);                /* jz 0x10150727 */
    II(0x10150713, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150716, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10150719, 0x5)   calld(0x10076730, -0xd9fee);          /* call 0x10076730 */
    II(0x1015071e, 0x3)   mov(dl, memb_a32(ds, eax + 0x14));    /* mov dl, [eax+0x14] */
    II(0x10150721, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150724, 0x3)   mov(memb_a32(ds, eax + 0x50), dl);    /* mov [eax+0x50], dl */
l_0x10150727:
    II(0x10150727, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015072a, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1015072d, 0x5)   calld(0x10076730, -0xda002);          /* call 0x10076730 */
    II(0x10150732, 0x3)   mov(dl, memb_a32(ds, eax + 0x10));    /* mov dl, [eax+0x10] */
    II(0x10150735, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150738, 0x3)   mov(memb_a32(ds, eax + 0x4e), dl);    /* mov [eax+0x4e], dl */
    II(0x1015073b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015073e, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x10150741, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10150746, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10150748, 0x2)   jled(0x10150772, 0x28);               /* jle 0x10150772 */
    II(0x1015074a, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x10150751, 0x2)   jmpd(0x10150759, 0x6);                /* jmp 0x10150759 */
l_0x10150753:
    II(0x10150753, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10150756, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
l_0x10150759:
    II(0x10150759, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1015075d, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x10150760, 0x2)   jged(0x10150772, 0x10);               /* jge 0x10150772 */
    II(0x10150762, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10150766, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10150769, 0x7)   mov(memb_a32(ds, eax + 0xb0), 0);     /* mov byte [eax+0xb0], 0x0 */
    II(0x10150770, 0x2)   jmpd(0x10150753, -0x1f);              /* jmp 0x10150753 */
l_0x10150772:
    II(0x10150772, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150775, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x10150779, 0x2)   jzd(0x1015078f, 0x14);                /* jz 0x1015078f */
    II(0x1015077b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015077e, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x10150782, 0x2)   jnzd(0x1015078d, 0x9);                /* jnz 0x1015078d */
    II(0x10150784, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150787, 0x4)   cmp(memb_a32(ds, eax + 0x3f), 0x1a);  /* cmp byte [eax+0x3f], 0x1a */
    II(0x1015078b, 0x2)   jzd(0x1015078f, 0x2);                 /* jz 0x1015078f */
l_0x1015078d:
    II(0x1015078d, 0x2)   jmpd(0x1015079f, 0x10);               /* jmp 0x1015079f */
l_0x1015078f:
    II(0x1015078f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150792, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10150795, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015079a, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1015079d, 0x2)   jnzd(0x101507a4, 0x5);                /* jnz 0x101507a4 */
l_0x1015079f:
    II(0x1015079f, 0x5)   jmpd(0x1015083e, 0x9a);               /* jmp 0x1015083e */
l_0x101507a4:
    II(0x101507a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101507a7, 0x3)   dec(memb_a32(ds, eax + 0x58));        /* dec byte [eax+0x58] */
    II(0x101507aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101507ad, 0x3)   mov(al, memb_a32(ds, eax + 0x58));    /* mov al, [eax+0x58] */
    II(0x101507b0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101507b5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101507b7, 0x6)   jgd(0x1015083e, 0x81);                /* jg dword 0x1015083e */
    II(0x101507bd, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x101507c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101507c3, 0x5)   calld(0x1014edfa, -0x19ce);           /* call 0x1014edfa */
    II(0x101507c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101507cb, 0x4)   mov(memb_a32(ds, eax + 0x58), 0);     /* mov byte [eax+0x58], 0x0 */
    II(0x101507cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101507d2, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x101507d6, 0x2)   jnzd(0x101507e8, 0x10);               /* jnz 0x101507e8 */
    II(0x101507d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101507db, 0x4)   mov(memb_a32(ds, eax + 0x3f), 0);     /* mov byte [eax+0x3f], 0x0 */
    II(0x101507df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101507e2, 0x4)   mov(memb_a32(ds, eax + 0x40), 0x1);   /* mov byte [eax+0x40], 0x1 */
    II(0x101507e6, 0x2)   jmpd(0x10150834, 0x4c);               /* jmp 0x10150834 */
l_0x101507e8:
    II(0x101507e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101507eb, 0x5)   calld(0x1014f08b, -0x1765);           /* call 0x1014f08b */
    II(0x101507f0, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101507f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101507f8, 0x5)   calld(0x10071838, -0xdefc5);          /* call 0x10071838 */
    II(0x101507fd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101507ff, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10150802, 0x5)   calld(0x10076600, -0xda207);          /* call 0x10076600 */
    II(0x10150807, 0x5)   calld(0x10071838, -0xdefd4);          /* call 0x10071838 */
    II(0x1015080c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015080f, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10150812, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10150817, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015081d, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10150823, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10150828, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1015082b, 0x2)   jnzd(0x10150834, 0x7);                /* jnz 0x10150834 */
    II(0x1015082d, 0x7)   mov(memb_a32(ds, 0x101c391b), 0x1);   /* mov byte [0x101c391b], 0x1 */
l_0x10150834:
    II(0x10150834, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10150836, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10150839, 0x5)   calld(0x10075f2c, -0xda912);          /* call 0x10075f2c */
l_0x1015083e:
    II(0x1015083e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150841, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x2);   /* cmp byte [eax+0x3e], 0x2 */
    II(0x10150845, 0x2)   jnzd(0x1015084e, 0x7);                /* jnz 0x1015084e */
    II(0x10150847, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015084a, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
l_0x1015084e:
    II(0x1015084e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10150850, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150853, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x10150856, 0x5)   calld(0x1013ad71, -0x15aea);          /* call 0x1013ad71 */
    II(0x1015085b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015085d, 0x2)   jzd(0x10150874, 0x15);                /* jz 0x10150874 */
    II(0x1015085f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150862, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10150865, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10150868, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1015086b, 0x7)   cmp(memb_a32(ds, eax + 0x101c81d5), 0); /* cmp byte [eax+0x101c81d5], 0x0 */
    II(0x10150872, 0x2)   jnzd(0x10150879, 0x5);                /* jnz 0x10150879 */
l_0x10150874:
    II(0x10150874, 0x5)   jmpd(0x1015099d, 0x124);              /* jmp 0x1015099d */
l_0x10150879:
    II(0x10150879, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015087c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1015087f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10150882, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10150885, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d5)); /* mov al, [eax+0x101c81d5] */
    II(0x1015088b, 0x3)   mov(memb_a32(ss, ebp - 0x28), al);    /* mov [ebp-0x28], al */
    II(0x1015088e, 0x5)   jmpd(0x10150973, 0xe0);               /* jmp 0x10150973 */
l_0x10150893:
    II(0x10150893, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150896, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10150899, 0x5)   calld(0x10076730, -0xda16e);          /* call 0x10076730 */
    II(0x1015089e, 0x3)   mov(edx, memd_a32(ds, eax + 0x17));   /* mov edx, [eax+0x17] */
    II(0x101508a1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101508a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101508a7, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x101508aa, 0x5)   calld(0x10076884, -0xda02b);          /* call 0x10076884 */
    II(0x101508af, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101508b2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101508b5, 0x5)   calld(my_min, -0xc7136);              /* call 0x10089784 */
    II(0x101508ba, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101508bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101508bf, 0x4)   mov(memw_a32(ds, eax + 0x52), dx);    /* mov [eax+0x52], dx */
    II(0x101508c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101508c6, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x101508c9, 0x5)   calld(0x10076884, -0xda04a);          /* call 0x10076884 */
    II(0x101508ce, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101508d1, 0x4)   mov(dx, memw_a32(ds, edx + 0x52));    /* mov dx, [edx+0x52] */
    II(0x101508d5, 0x4)   sub(memw_a32(ds, eax + 0x8), dx);     /* sub [eax+0x8], dx */
    II(0x101508d9, 0x5)   jmpd(0x1015099d, 0xbf);               /* jmp 0x1015099d */
l_0x101508de:
    II(0x101508de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101508e1, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x101508e4, 0x5)   calld(0x10076730, -0xda1b9);          /* call 0x10076730 */
    II(0x101508e9, 0x3)   mov(edx, memd_a32(ds, eax + 0x17));   /* mov edx, [eax+0x17] */
    II(0x101508ec, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101508ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101508f2, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x101508f5, 0x5)   calld(0x10076884, -0xda076);          /* call 0x10076884 */
    II(0x101508fa, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x101508fd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10150900, 0x5)   calld(my_min, -0xc7181);              /* call 0x10089784 */
    II(0x10150905, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10150907, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015090a, 0x4)   mov(memw_a32(ds, eax + 0x52), dx);    /* mov [eax+0x52], dx */
    II(0x1015090e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150911, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x10150914, 0x5)   calld(0x10076884, -0xda095);          /* call 0x10076884 */
    II(0x10150919, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015091c, 0x4)   mov(dx, memw_a32(ds, edx + 0x52));    /* mov dx, [edx+0x52] */
    II(0x10150920, 0x4)   sub(memw_a32(ds, eax + 0xa), dx);     /* sub [eax+0xa], dx */
    II(0x10150924, 0x5)   jmpd(0x1015099d, 0x74);               /* jmp 0x1015099d */
l_0x10150929:
    II(0x10150929, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015092c, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1015092f, 0x5)   calld(0x10076730, -0xda204);          /* call 0x10076730 */
    II(0x10150934, 0x3)   mov(edx, memd_a32(ds, eax + 0x17));   /* mov edx, [eax+0x17] */
    II(0x10150937, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015093a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015093d, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x10150940, 0x5)   calld(0x10076884, -0xda0c1);          /* call 0x10076884 */
    II(0x10150945, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x10150948, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015094b, 0x5)   calld(my_min, -0xc71cc);              /* call 0x10089784 */
    II(0x10150950, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10150952, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150955, 0x4)   mov(memw_a32(ds, eax + 0x52), dx);    /* mov [eax+0x52], dx */
    II(0x10150959, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015095c, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1015095f, 0x5)   calld(0x10076884, -0xda0e0);          /* call 0x10076884 */
    II(0x10150964, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10150967, 0x4)   mov(dx, memw_a32(ds, edx + 0x52));    /* mov dx, [edx+0x52] */
    II(0x1015096b, 0x4)   sub(memw_a32(ds, eax + 0xc), dx);     /* sub [eax+0xc], dx */
    II(0x1015096f, 0x2)   jmpd(0x1015099d, 0x2c);               /* jmp 0x1015099d */
l_0x10150971:
    II(0x10150971, 0x2)   jmpd(0x1015099d, 0x2a);               /* jmp 0x1015099d */
l_0x10150973:
    II(0x10150973, 0x3)   mov(al, memb_a32(ss, ebp - 0x28));    /* mov al, [ebp-0x28] */
    II(0x10150976, 0x3)   mov(memb_a32(ss, ebp - 0x2c), al);    /* mov [ebp-0x2c], al */
    II(0x10150979, 0x4)   cmp(memb_a32(ss, ebp - 0x2c), 0x2);   /* cmp byte [ebp-0x2c], 0x2 */
    II(0x1015097d, 0x2)   jbd(0x10150991, 0x12);                /* jb 0x10150991 */
    II(0x1015097f, 0x4)   cmp(memb_a32(ss, ebp - 0x2c), 0x2);   /* cmp byte [ebp-0x2c], 0x2 */
    II(0x10150983, 0x6)   jbed(0x101508de, -0xab);              /* jbe dword 0x101508de */
    II(0x10150989, 0x4)   cmp(memb_a32(ss, ebp - 0x2c), 0x3);   /* cmp byte [ebp-0x2c], 0x3 */
    II(0x1015098d, 0x2)   jzd(0x10150929, -0x66);               /* jz 0x10150929 */
    II(0x1015098f, 0x2)   jmpd(0x10150971, -0x20);              /* jmp 0x10150971 */
l_0x10150991:
    II(0x10150991, 0x4)   cmp(memb_a32(ss, ebp - 0x2c), 0x1);   /* cmp byte [ebp-0x2c], 0x1 */
    II(0x10150995, 0x6)   jzd(0x10150893, -0x108);              /* jz dword 0x10150893 */
    II(0x1015099b, 0x2)   jmpd(0x10150971, -0x2c);              /* jmp 0x10150971 */
l_0x1015099d:
    II(0x1015099d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015099f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101509a0, 0x1)   popd(edi);                            /* pop edi */
    II(0x101509a1, 0x1)   popd(esi);                            /* pop esi */
    II(0x101509a2, 0x1)   popd(edx);                            /* pop edx */
    II(0x101509a3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101509a4, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101509a5, 0x1)   retd();                               /* ret */
FUNC_END

