FUNC_BEGIN(0x1010744d, 0x351efb947a47a443, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xfb, 0xe8, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xf4, 0x4, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x20, 0x7d, 0x5b, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xd0, 0x76, 0x2, 0, 0, 0xa1, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd0, 0x80, 0x78, 0x8, 0, 0x75, 0x42, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xd0, 0x76, 0x2, 0, 0, 0xa1, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x74, 0xfd, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xd0, 0x76, 0x2, 0, 0, 0xa1, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd0, 0xc6, 0x40, 0x8, 0, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x76, 0x2, 0, 0, 0x8b, 0x15, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x7, 0xfa, 0xff, 0xff, 0xeb, 0x96, 0xc7, 0x45, 0xf8, 0x4, 0, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0xf, 0x84, 0x54, 0x2, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x83, 0xb8, 0x60, 0x41, 0x1c, 0x10, 0, 0xf, 0x84, 0x3b, 0x2, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x8a, 0x80, 0xb0, 0x40, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x1, 0xc0, 0xf, 0xbf, 0x55, 0xf8, 0xc1, 0xe2, 0x7, 0x1, 0xd0, 0x66, 0x83, 0xb8, 0x70, 0x41, 0x1c, 0x10, 0, 0xf, 0x84, 0xb2, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x8a, 0x80, 0xb0, 0x40, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0xc1, 0xe0, 0x2, 0xf, 0xbf, 0x55, 0xf8, 0xc1, 0xe2, 0x8, 0x1, 0xd0, 0x8b, 0x80, 0x70, 0x43, 0x1c, 0x10, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xf8, 0x8a, 0x80, 0xb0, 0x40, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x1, 0xc0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x7, 0x1, 0xd0, 0x66, 0x8b, 0x80, 0x70, 0x41, 0x1c, 0x10, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xe4, 0x3, 0x45, 0xec, 0x3d, 0, 0x4, 0, 0, 0x7e, 0x54, 0xb8, 0, 0x4, 0, 0, 0x2b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0x31, 0xdb, 0x66, 0x8b, 0x5d, 0xe4, 0xf, 0xbf, 0x55, 0xf8, 0xc1, 0xe2, 0x2, 0x8b, 0x92, 0x40, 0x41, 0x1c, 0x10, 0x3, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0x96, 0xe8, 0x5, 0, 0x31, 0xdb, 0x66, 0x8b, 0x5d, 0xe8, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xe4, 0x29, 0xc3, 0xf, 0xbf, 0x55, 0xf8, 0xc1, 0xe2, 0x2, 0x8b, 0x92, 0x40, 0x41, 0x1c, 0x10, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xe4, 0x3, 0x45, 0xfc, 0xe8, 0x6d, 0xe8, 0x5, 0, 0xeb, 0x1e, 0x31, 0xdb, 0x66, 0x8b, 0x5d, 0xe4, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x90, 0x40, 0x41, 0x1c, 0x10, 0x3, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0x4d, 0xe8, 0x5, 0, 0xf, 0xbf, 0x45, 0xf8, 0x8a, 0x80, 0xb0, 0x40, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x1, 0xc0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x7, 0x1, 0xd0, 0x66, 0xc7, 0x80, 0x70, 0x41, 0x1c, 0x10, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x8a, 0x80, 0xb0, 0x40, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x8, 0x1, 0xd0, 0xc7, 0x80, 0x70, 0x43, 0x1c, 0x10, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0xff, 0x88, 0x60, 0x41, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0xfe, 0x80, 0xb0, 0x40, 0x1c, 0x10, 0x31, 0xd2, 0x8a, 0x90, 0xb0, 0x40, 0x1c, 0x10, 0xbb, 0x40, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x45, 0xf8, 0x88, 0x90, 0xb0, 0x40, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0xc6, 0x80, 0x80, 0x4d, 0x1c, 0x10, 0, 0x80, 0x3d, 0xb8, 0x59, 0x1c, 0x10, 0, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x2, 0xeb, 0x24, 0xf, 0xbf, 0x45, 0xf8, 0x8b, 0x80, 0x3d, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x18, 0xe8, 0x1b, 0xe9, 0xf6, 0xff, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x88, 0x90, 0x90, 0xa4, 0x1c, 0x10, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xf0, 0xeb, 0x6d, 0xf, 0xbf, 0x45, 0xf8, 0x8a, 0x80, 0x80, 0x4d, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x4e, 0xf, 0xbf, 0x4d, 0xf8, 0xc6, 0x81, 0x80, 0x4d, 0x1c, 0x10, 0x1, 0xf, 0xbf, 0x4d, 0xf8, 0x31, 0xc0, 0x8a, 0x81, 0xb0, 0x40, 0x1c, 0x10, 0x66, 0xa3, 0x9, 0x90, 0x1b, 0x10, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xf8, 0x6b, 0xdb, 0x6, 0xb8, 0x90, 0x40, 0x1c, 0x10, 0x1, 0xc3, 0xba, 0x5, 0, 0, 0, 0xb8, 0x8, 0x90, 0x1b, 0x10, 0xe8, 0x3d, 0x7, 0, 0, 0xe8, 0xc2, 0xb, 0x4, 0, 0xf, 0xbf, 0x5d, 0xf8, 0xc1, 0xe3, 0x2, 0x89, 0x83, 0x84, 0x4d, 0x1c, 0x10, 0xe9, 0x9e, 0xfd, 0xff, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010744d, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x10107452, 0x5)   calld(sys_check_available_stack_size, 0x5e8fb); /* call 0x10165d52 */
    II(0x10107457, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10107458, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10107459, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010745a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010745b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010745c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010745d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010745f, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10107465, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10107468, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x4);    /* mov dword [ebp-0xc], 0x4 */
    II(0x1010746f, 0x2)   jmpd(0x10107477, 0x6);                /* jmp 0x10107477 */
l_0x10107471:
    II(0x10107471, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10107474, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x10107477:
    II(0x10107477, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010747b, 0x3)   cmp(eax, 0x20);                       /* cmp eax, 0x20 */
    II(0x1010747e, 0x2)   jged(0x101074db, 0x5b);               /* jge 0x101074db */
    II(0x10107480, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10107484, 0x6)   imul(edx, eax, 0x276);                /* imul edx, eax, 0x276 */
    II(0x1010748a, 0x5)   mov(eax, memd_a32(ds, 0x101c4dac));   /* mov eax, [0x101c4dac] */
    II(0x1010748f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107491, 0x4)   cmp(memb_a32(ds, eax + 0x8), 0);      /* cmp byte [eax+0x8], 0x0 */
    II(0x10107495, 0x2)   jnzd(0x101074d9, 0x42);               /* jnz 0x101074d9 */
    II(0x10107497, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010749b, 0x6)   imul(edx, eax, 0x276);                /* imul edx, eax, 0x276 */
    II(0x101074a1, 0x5)   mov(eax, memd_a32(ds, 0x101c4dac));   /* mov eax, [0x101c4dac] */
    II(0x101074a6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101074a8, 0x5)   calld(0x10107221, -0x28c);            /* call 0x10107221 */
    II(0x101074ad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101074b1, 0x6)   imul(edx, eax, 0x276);                /* imul edx, eax, 0x276 */
    II(0x101074b7, 0x5)   mov(eax, memd_a32(ds, 0x101c4dac));   /* mov eax, [0x101c4dac] */
    II(0x101074bc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101074be, 0x4)   mov(memb_a32(ds, eax + 0x8), 0);      /* mov byte [eax+0x8], 0x0 */
    II(0x101074c2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101074c6, 0x6)   imul(eax, eax, 0x276);                /* imul eax, eax, 0x276 */
    II(0x101074cc, 0x6)   mov(edx, memd_a32(ds, 0x101c4dac));   /* mov edx, [0x101c4dac] */
    II(0x101074d2, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101074d4, 0x5)   calld(0x10106ee0, -0x5f9);            /* call 0x10106ee0 */
l_0x101074d9:
    II(0x101074d9, 0x2)   jmpd(0x10107471, -0x6a);              /* jmp 0x10107471 */
l_0x101074db:
    II(0x101074db, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x4);    /* mov dword [ebp-0x8], 0x4 */
l_0x101074e2:
    II(0x101074e2, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x101074e5, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x101074ea, 0x6)   jzd(0x10107744, 0x254);               /* jz dword 0x10107744 */
    II(0x101074f0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101074f4, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101074f7, 0x7)   cmp(memd_a32(ds, eax + 0x101c4160), 0); /* cmp dword [eax+0x101c4160], 0x0 */
    II(0x101074fe, 0x6)   jzd(0x1010773f, 0x23b);               /* jz dword 0x1010773f */
    II(0x10107504, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107508, 0x6)   mov(al, memb_a32(ds, eax + 0x101c40b0)); /* mov al, [eax+0x101c40b0] */
    II(0x1010750e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10107513, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10107515, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10107519, 0x3)   shl(edx, 0x7);                        /* shl edx, 0x7 */
    II(0x1010751c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1010751e, 0x8)   cmp(memw_a32(ds, eax + 0x101c4170), 0); /* cmp word [eax+0x101c4170], 0x0 */
    II(0x10107526, 0x6)   jzd(0x101076de, 0x1b2);               /* jz dword 0x101076de */
    II(0x1010752c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107530, 0x6)   mov(al, memb_a32(ds, eax + 0x101c40b0)); /* mov al, [eax+0x101c40b0] */
    II(0x10107536, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010753b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010753e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10107542, 0x3)   shl(edx, 0x8);                        /* shl edx, 0x8 */
    II(0x10107545, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107547, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4370)); /* mov eax, [eax+0x101c4370] */
    II(0x1010754d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10107550, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107554, 0x6)   mov(al, memb_a32(ds, eax + 0x101c40b0)); /* mov al, [eax+0x101c40b0] */
    II(0x1010755a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010755f, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10107561, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10107563, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107567, 0x3)   shl(eax, 0x7);                        /* shl eax, 0x7 */
    II(0x1010756a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1010756c, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c4170)); /* mov ax, [eax+0x101c4170] */
    II(0x10107573, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x10107576, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10107579, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1010757c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010757e, 0x4)   mov(ax, memw_a32(ss, ebp - 0x1c));    /* mov ax, [ebp-0x1c] */
    II(0x10107582, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x10107585, 0x5)   cmp(eax, 0x400);                      /* cmp eax, 0x400 */
    II(0x1010758a, 0x2)   jled(0x101075e0, 0x54);               /* jle 0x101075e0 */
    II(0x1010758c, 0x5)   mov(eax, 0x400);                      /* mov eax, 0x400 */
    II(0x10107591, 0x3)   sub(eax, memd_a32(ss, ebp - 0x14));   /* sub eax, [ebp-0x14] */
    II(0x10107594, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10107597, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10107599, 0x4)   mov(bx, memw_a32(ss, ebp - 0x1c));    /* mov bx, [ebp-0x1c] */
    II(0x1010759d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x101075a1, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x101075a4, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c4140)); /* mov edx, [edx+0x101c4140] */
    II(0x101075aa, 0x3)   add(edx, memd_a32(ss, ebp - 0x14));   /* add edx, [ebp-0x14] */
    II(0x101075ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101075b0, 0x5)   calld(sys_memcpy, 0x5e896);           /* call 0x10165e4b */
    II(0x101075b5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101075b7, 0x4)   mov(bx, memw_a32(ss, ebp - 0x18));    /* mov bx, [ebp-0x18] */
    II(0x101075bb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101075bd, 0x4)   mov(ax, memw_a32(ss, ebp - 0x1c));    /* mov ax, [ebp-0x1c] */
    II(0x101075c1, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x101075c3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x101075c7, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x101075ca, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c4140)); /* mov edx, [edx+0x101c4140] */
    II(0x101075d0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101075d2, 0x4)   mov(ax, memw_a32(ss, ebp - 0x1c));    /* mov ax, [ebp-0x1c] */
    II(0x101075d6, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x101075d9, 0x5)   calld(sys_memcpy, 0x5e86d);           /* call 0x10165e4b */
    II(0x101075de, 0x2)   jmpd(0x101075fe, 0x1e);               /* jmp 0x101075fe */
l_0x101075e0:
    II(0x101075e0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101075e2, 0x4)   mov(bx, memw_a32(ss, ebp - 0x1c));    /* mov bx, [ebp-0x1c] */
    II(0x101075e6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101075ea, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101075ed, 0x6)   mov(edx, memd_a32(ds, eax + 0x101c4140)); /* mov edx, [eax+0x101c4140] */
    II(0x101075f3, 0x3)   add(edx, memd_a32(ss, ebp - 0x14));   /* add edx, [ebp-0x14] */
    II(0x101075f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101075f9, 0x5)   calld(sys_memcpy, 0x5e84d);           /* call 0x10165e4b */
l_0x101075fe:
    II(0x101075fe, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107602, 0x6)   mov(al, memb_a32(ds, eax + 0x101c40b0)); /* mov al, [eax+0x101c40b0] */
    II(0x10107608, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010760d, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1010760f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10107611, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107615, 0x3)   shl(eax, 0x7);                        /* shl eax, 0x7 */
    II(0x10107618, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1010761a, 0x9)   mov(memw_a32(ds, eax + 0x101c4170), 0); /* mov word [eax+0x101c4170], 0x0 */
    II(0x10107623, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107627, 0x6)   mov(al, memb_a32(ds, eax + 0x101c40b0)); /* mov al, [eax+0x101c40b0] */
    II(0x1010762d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10107632, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10107635, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10107637, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010763b, 0x3)   shl(eax, 0x8);                        /* shl eax, 0x8 */
    II(0x1010763e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107640, 0xa)   mov(memd_a32(ds, eax + 0x101c4370), 0); /* mov dword [eax+0x101c4370], 0x0 */
    II(0x1010764a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010764e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10107651, 0x6)   dec(memd_a32(ds, eax + 0x101c4160));  /* dec dword [eax+0x101c4160] */
    II(0x10107657, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010765b, 0x6)   inc(memb_a32(ds, eax + 0x101c40b0));  /* inc byte [eax+0x101c40b0] */
    II(0x10107661, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10107663, 0x6)   mov(dl, memb_a32(ds, eax + 0x101c40b0)); /* mov dl, [eax+0x101c40b0] */
    II(0x10107669, 0x5)   mov(ebx, 0x40);                       /* mov ebx, 0x40 */
    II(0x1010766e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10107670, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10107673, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10107675, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107679, 0x6)   mov(memb_a32(ds, eax + 0x101c40b0), dl); /* mov [eax+0x101c40b0], dl */
    II(0x1010767f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107683, 0x7)   mov(memb_a32(ds, eax + 0x101c4d80), 0); /* mov byte [eax+0x101c4d80], 0x0 */
    II(0x1010768a, 0x7)   cmp(memb_a32(ds, 0x101c59b8), 0);     /* cmp byte [0x101c59b8], 0x0 */
    II(0x10107691, 0x2)   jzd(0x101076ad, 0x1a);                /* jz 0x101076ad */
    II(0x10107693, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10107697, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1010769d, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x101076a3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101076a8, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x101076ab, 0x2)   jnzd(0x101076af, 0x2);                /* jnz 0x101076af */
l_0x101076ad:
    II(0x101076ad, 0x2)   jmpd(0x101076d3, 0x24);               /* jmp 0x101076d3 */
l_0x101076af:
    II(0x101076af, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101076b3, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b873d)); /* mov eax, [eax+0x101b873d] */
    II(0x101076b9, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x101076bc, 0x5)   calld(0x10075fdc, -0x916e5);          /* call 0x10075fdc */
    II(0x101076c1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101076c3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101076c7, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101076cd, 0x6)   mov(memb_a32(ds, eax + 0x101ca490), dl); /* mov [eax+0x101ca490], dl */
l_0x101076d3:
    II(0x101076d3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101076d5, 0x4)   mov(ax, memw_a32(ss, ebp - 0x18));    /* mov ax, [ebp-0x18] */
    II(0x101076d9, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101076dc, 0x2)   jmpd(0x1010774b, 0x6d);               /* jmp 0x1010774b */
l_0x101076de:
    II(0x101076de, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101076e2, 0x6)   mov(al, memb_a32(ds, eax + 0x101c4d80)); /* mov al, [eax+0x101c4d80] */
    II(0x101076e8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101076ed, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101076ef, 0x2)   jnzd(0x1010773f, 0x4e);               /* jnz 0x1010773f */
    II(0x101076f1, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x8));  /* movsx ecx, word [ebp-0x8] */
    II(0x101076f5, 0x7)   mov(memb_a32(ds, ecx + 0x101c4d80), 0x1); /* mov byte [ecx+0x101c4d80], 0x1 */
    II(0x101076fc, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x8));  /* movsx ecx, word [ebp-0x8] */
    II(0x10107700, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10107702, 0x6)   mov(al, memb_a32(ds, ecx + 0x101c40b0)); /* mov al, [ecx+0x101c40b0] */
    II(0x10107708, 0x6)   mov(memw_a32(ds, 0x101b9009), ax);    /* mov [0x101b9009], ax */
    II(0x1010770e, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10107710, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x10107714, 0x3)   imul(ebx, ebx, 0x6);                  /* imul ebx, ebx, 0x6 */
    II(0x10107717, 0x5)   mov(eax, 0x101c4090);                 /* mov eax, 0x101c4090 */
    II(0x1010771c, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x1010771e, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x10107723, 0x5)   mov(eax, 0x101b9008);                 /* mov eax, 0x101b9008 */
    II(0x10107728, 0x5)   calld(0x10107e6a, 0x73d);             /* call 0x10107e6a */
    II(0x1010772d, 0x5)   calld(0x101482f4, 0x40bc2);           /* call 0x101482f4 */
    II(0x10107732, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x10107736, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x10107739, 0x6)   mov(memd_a32(ds, ebx + 0x101c4d84), eax); /* mov [ebx+0x101c4d84], eax */
l_0x1010773f:
    II(0x1010773f, 0x5)   jmpd(0x101074e2, -0x262);             /* jmp 0x101074e2 */
l_0x10107744:
    II(0x10107744, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x1010774b:
    II(0x1010774b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010774e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10107750, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10107751, 0x1)   popd(edi);                            /* pop edi */
    II(0x10107752, 0x1)   popd(esi);                            /* pop esi */
    II(0x10107753, 0x1)   popd(edx);                            /* pop edx */
    II(0x10107754, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10107755, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10107756, 0x1)   retd();                               /* ret */
FUNC_END

