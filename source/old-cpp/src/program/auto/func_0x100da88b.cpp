FUNC_BEGIN(0x100da88b, 0x5c6c713df7d0eb2f, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0xbd, 0xb4, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x59, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x75, 0x9, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x11, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0xba, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf0, 0x83, 0x7d, 0xf0, 0, 0x74, 0x35, 0xe8, 0x5e, 0xaa, 0xff, 0xff, 0x98, 0x50, 0xe8, 0x7b, 0xaa, 0xff, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x25, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x31, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0xe8, 0x48, 0xe3, 0, 0, 0x66, 0x85, 0xc0, 0x75, 0x54, 0x6a, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x25, 0xc1, 0xf9, 0x10, 0xbb, 0xf0, 0, 0, 0, 0xba, 0x2c, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x47, 0xe8, 0x4a, 0x4, 0x9, 0, 0x83, 0x7d, 0xf0, 0, 0x74, 0x2e, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x11, 0, 0, 0, 0x50, 0xb9, 0x10, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x25, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x31, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0xe8, 0x76, 0x5b, 0x1, 0, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0x9, 0x80, 0x3d, 0xd0, 0x7e, 0x1b, 0x10, 0, 0x75, 0x2, 0xeb, 0x4d, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xce, 0xf8, 0x8, 0, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0x68, 0xa2, 0, 0x1, 0, 0xb8, 0xe6, 0, 0, 0, 0x50, 0xb8, 0x18, 0x1, 0, 0, 0x50, 0xb8, 0x11, 0, 0, 0, 0x50, 0xb9, 0x10, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xfc, 0x6b, 0xdb, 0x33, 0x8b, 0x9b, 0xdf, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x25, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x47, 0xe8, 0x24, 0xf1, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x51, 0x7d, 0x4a, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x75, 0x3, 0, 0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0xe8, 0x6e, 0xda, 0xff, 0xff, 0xe8, 0x60, 0xb5, 0x8, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0xc7, 0x80, 0x75, 0x3, 0, 0, 0, 0, 0, 0, 0xeb, 0xa4, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x51, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xa3, 0x3, 0, 0, 0xe8, 0x7f, 0xa4, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x53, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xab, 0x3, 0, 0, 0xe8, 0x12, 0xd5, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0xd, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x58, 0x34, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x3c, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xbc, 0xf4, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xc3, 0xf6, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x79, 0xf7, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x13, 0xf8, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x5b, 0xf9, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x58, 0x13, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xe4, 0xff, 0x53, 0x18, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100da88b, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x100da890, 0x5)   calld(sys_check_available_stack_size, 0x8b4bd); /* call 0x10165d52 */
    II(0x100da895, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100da896, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100da897, 0x1)   pushd(esi);                           /* push esi */
    II(0x100da898, 0x1)   pushd(edi);                           /* push edi */
    II(0x100da899, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100da89a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100da89c, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100da8a2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100da8a5, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100da8a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100da8ab, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100da8ae, 0x4)   mov(memw_a32(ds, edx + 0x59), ax);    /* mov [edx+0x59], ax */
    II(0x100da8b2, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100da8b7, 0x2)   jnzd(0x100da8c2, 0x9);                /* jnz 0x100da8c2 */
    II(0x100da8b9, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100da8c0, 0x2)   jmpd(0x100da8d3, 0x11);               /* jmp 0x100da8d3 */
l_0x100da8c2:
    II(0x100da8c2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100da8c6, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100da8c9, 0x5)   mov(edx, 0x101c81c0);                 /* mov edx, 0x101c81c0 */
    II(0x100da8ce, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100da8d0, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
l_0x100da8d3:
    II(0x100da8d3, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x100da8d7, 0x2)   jzd(0x100da90e, 0x35);                /* jz 0x100da90e */
    II(0x100da8d9, 0x5)   calld(0x100d533c, -0x55a2);           /* call 0x100d533c */
    II(0x100da8de, 0x1)   cwde();                               /* cwde */
    II(0x100da8df, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da8e0, 0x5)   calld(0x100d5360, -0x5585);           /* call 0x100d5360 */
    II(0x100da8e5, 0x1)   cwde();                               /* cwde */
    II(0x100da8e6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da8e7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100da8e9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da8ea, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100da8ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da8ef, 0x3)   mov(ebx, memd_a32(ds, eax + 0x25));   /* mov ebx, [eax+0x25] */
    II(0x100da8f2, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100da8f5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100da8f8, 0x3)   add(edx, 0x31);                       /* add edx, 0x31 */
    II(0x100da8fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100da8fe, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x100da901, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100da904, 0x5)   calld(0x100e8c51, 0xe348);            /* call 0x100e8c51 */
    II(0x100da909, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100da90c, 0x2)   jnzd(0x100da962, 0x54);               /* jnz 0x100da962 */
l_0x100da90e:
    II(0x100da90e, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x100da910, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da913, 0x3)   mov(ecx, memd_a32(ds, eax + 0x25));   /* mov ecx, [eax+0x25] */
    II(0x100da916, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100da919, 0x5)   mov(ebx, 0xf0);                       /* mov ebx, 0xf0 */
    II(0x100da91e, 0x5)   mov(edx, 0x12c);                      /* mov edx, 0x12c */
    II(0x100da923, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da926, 0x3)   mov(eax, memd_a32(ds, eax + 0x47));   /* mov eax, [eax+0x47] */
    II(0x100da929, 0x5)   calld(/* sys */ 0x1016ad78, 0x9044a); /* call 0x1016ad78 */
    II(0x100da92e, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x100da932, 0x2)   jzd(0x100da962, 0x2e);                /* jz 0x100da962 */
    II(0x100da934, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100da936, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da937, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100da939, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da93a, 0x5)   mov(eax, 0x11);                       /* mov eax, 0x11 */
    II(0x100da93f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da940, 0x5)   mov(ecx, 0x10);                       /* mov ecx, 0x10 */
    II(0x100da945, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da948, 0x3)   mov(ebx, memd_a32(ds, eax + 0x25));   /* mov ebx, [eax+0x25] */
    II(0x100da94b, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100da94e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100da951, 0x3)   add(edx, 0x31);                       /* add edx, 0x31 */
    II(0x100da954, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100da957, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100da95a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100da95d, 0x5)   calld(0x100f04d8, 0x15b76);           /* call 0x100f04d8 */
l_0x100da962:
    II(0x100da962, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100da967, 0x2)   jzd(0x100da972, 0x9);                 /* jz 0x100da972 */
    II(0x100da969, 0x7)   cmp(memb_a32(ds, 0x101b7ed0), 0);     /* cmp byte [0x101b7ed0], 0x0 */
    II(0x100da970, 0x2)   jnzd(0x100da974, 0x2);                /* jnz 0x100da974 */
l_0x100da972:
    II(0x100da972, 0x2)   jmpd(0x100da9c1, 0x4d);               /* jmp 0x100da9c1 */
l_0x100da974:
    II(0x100da974, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100da979, 0x5)   calld(/* sys */ 0x1016a24c, 0x8f8ce); /* call 0x1016a24c */
    II(0x100da97e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100da980, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da981, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100da983, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da984, 0x5)   pushd(0x100a2);                       /* push dword 0x100a2 */
    II(0x100da989, 0x5)   mov(eax, 0xe6);                       /* mov eax, 0xe6 */
    II(0x100da98e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da98f, 0x5)   mov(eax, 0x118);                      /* mov eax, 0x118 */
    II(0x100da994, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da995, 0x5)   mov(eax, 0x11);                       /* mov eax, 0x11 */
    II(0x100da99a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100da99b, 0x5)   mov(ecx, 0x10);                       /* mov ecx, 0x10 */
    II(0x100da9a0, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100da9a4, 0x3)   imul(ebx, ebx, 0x33);                 /* imul ebx, ebx, 0x33 */
    II(0x100da9a7, 0x6)   mov(ebx, memd_a32(ds, ebx + 0x101c81df)); /* mov ebx, [ebx+0x101c81df] */
    II(0x100da9ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da9b0, 0x3)   mov(edx, memd_a32(ds, eax + 0x25));   /* mov edx, [eax+0x25] */
    II(0x100da9b3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100da9b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100da9b9, 0x3)   mov(eax, memd_a32(ds, eax + 0x47));   /* mov eax, [eax+0x47] */
    II(0x100da9bc, 0x5)   calld(0x100e9ae5, 0xf124);            /* call 0x100e9ae5 */
l_0x100da9c1:
    II(0x100da9c1, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100da9c8, 0x2)   jmpd(0x100da9d0, 0x6);                /* jmp 0x100da9d0 */
l_0x100da9ca:
    II(0x100da9ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100da9cd, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100da9d0:
    II(0x100da9d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100da9d3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100da9d6, 0x4)   cmp(ax, memw_a32(ds, edx + 0x51));    /* cmp ax, [edx+0x51] */
    II(0x100da9da, 0x2)   jged(0x100daa26, 0x4a);               /* jge 0x100daa26 */
    II(0x100da9dc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100da9e0, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100da9e3, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100da9e6, 0x6)   mov(eax, memd_a32(ds, eax + 0x375));  /* mov eax, [eax+0x375] */
    II(0x100da9ec, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100da9ef, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100da9f3, 0x2)   jzd(0x100daa09, 0x14);                /* jz 0x100daa09 */
    II(0x100da9f5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100da9f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100da9fa, 0x5)   calld(my_dtor_d4, -0x2592);           /* call 0x100d846d */
    II(0x100da9ff, 0x5)   calld(sys_delete, 0x8b560);           /* call 0x10165f64 */
    II(0x100daa04, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100daa07, 0x2)   jmpd(0x100daa10, 0x7);                /* jmp 0x100daa10 */
l_0x100daa09:
    II(0x100daa09, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x100daa10:
    II(0x100daa10, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100daa14, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100daa17, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100daa1a, 0xa)   mov(memd_a32(ds, eax + 0x375), 0);    /* mov dword [eax+0x375], 0x0 */
    II(0x100daa24, 0x2)   jmpd(0x100da9ca, -0x5c);              /* jmp 0x100da9ca */
l_0x100daa26:
    II(0x100daa26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daa29, 0x6)   mov(memw_a32(ds, eax + 0x51), 0);     /* mov word [eax+0x51], 0x0 */
    II(0x100daa2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daa32, 0x6)   mov(eax, memd_a32(ds, eax + 0x3a3));  /* mov eax, [eax+0x3a3] */
    II(0x100daa38, 0x5)   calld(0x100d4ebc, -0x5b81);           /* call 0x100d4ebc */
    II(0x100daa3d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100daa3f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daa42, 0x4)   mov(memw_a32(ds, eax + 0x53), dx);    /* mov [eax+0x53], dx */
    II(0x100daa46, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100daa49, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100daa4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daa4f, 0x6)   mov(eax, memd_a32(ds, eax + 0x3ab));  /* mov eax, [eax+0x3ab] */
    II(0x100daa55, 0x5)   calld(0x100d7f6c, -0x2aee);           /* call 0x100d7f6c */
    II(0x100daa5a, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100daa5f, 0x2)   jzd(0x100daa6e, 0xd);                 /* jz 0x100daa6e */
    II(0x100daa61, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100daa65, 0x5)   calld(0x100cdec2, -0xcba8);           /* call 0x100cdec2 */
    II(0x100daa6a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100daa6c, 0x2)   jnzd(0x100daa70, 0x2);                /* jnz 0x100daa70 */
l_0x100daa6e:
    II(0x100daa6e, 0x2)   jmpd(0x100daaac, 0x3c);               /* jmp 0x100daaac */
l_0x100daa70:
    II(0x100daa70, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100daa74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daa77, 0x5)   calld(0x100d9f38, -0xb44);            /* call 0x100d9f38 */
    II(0x100daa7c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100daa80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daa83, 0x5)   calld(0x100da14b, -0x93d);            /* call 0x100da14b */
    II(0x100daa88, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100daa8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daa8f, 0x5)   calld(0x100da20d, -0x887);            /* call 0x100da20d */
    II(0x100daa94, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100daa98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daa9b, 0x5)   calld(0x100da2b3, -0x7ed);            /* call 0x100da2b3 */
    II(0x100daaa0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100daaa4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daaa7, 0x5)   calld(0x100da407, -0x6a5);            /* call 0x100da407 */
l_0x100daaac:
    II(0x100daaac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daaaf, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100daab2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100daab5, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
    II(0x100daab8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100daabc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100daabf, 0x3)   calld_abs(memd_a32(ds, ebx + 0x18));  /* call dword near [ebx+0x18] */
    II(0x100daac2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100daac4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100daac5, 0x1)   popd(edi);                            /* pop edi */
    II(0x100daac6, 0x1)   popd(esi);                            /* pop esi */
    II(0x100daac7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100daac8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100daac9, 0x1)   retd();                               /* ret */
FUNC_END

