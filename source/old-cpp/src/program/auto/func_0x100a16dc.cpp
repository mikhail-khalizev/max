FUNC_BEGIN(0x100a16dc, 0x6f3b3addaa61ca0a, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0x6c, 0x46, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0xf9, 0x4d, 0xfd, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xda, 0x4f, 0xfd, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0x8d, 0x45, 0xd8, 0xe8, 0x8c, 0x9, 0xfd, 0xff, 0x8d, 0x45, 0xcc, 0xe8, 0x84, 0x9, 0xfd, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x44, 0xe8, 0x37, 0x96, 0x9, 0, 0x84, 0xc0, 0x74, 0x11, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x44, 0xe8, 0x2b, 0x4e, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0x8, 0x75, 0x2, 0xeb, 0x11, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x44, 0xe8, 0x18, 0x4e, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0x11, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x44, 0xe8, 0x5, 0x4e, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x12, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x44, 0xe8, 0xf2, 0x4d, 0xfd, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0x2b, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x44, 0x8d, 0x45, 0xe8, 0xe8, 0x7f, 0x94, 0xfe, 0xff, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x44, 0xe8, 0x54, 0x4e, 0xfd, 0xff, 0xe8, 0xd7, 0xb, 0xfd, 0xff, 0xe9, 0xe7, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x70, 0x4e, 0xfd, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x6e, 0x4b, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x68, 0x4c, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x93, 0x95, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0xb7, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xb2, 0x4b, 0xfd, 0xff, 0xe8, 0x11, 0x4a, 0xfd, 0xff, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x2, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xfe, 0x55, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0x92, 0x4b, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0x8, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0x82, 0x4b, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0x72, 0x4b, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0x62, 0x4b, 0xfd, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0x49, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x55, 0xcc, 0x8d, 0x45, 0xf0, 0xe8, 0xb1, 0x4b, 0xfd, 0xff, 0xe8, 0x2c, 0xb, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xab, 0x94, 0x9, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xd0, 0x66, 0x3b, 0x45, 0xdc, 0x7d, 0x1d, 0x8d, 0x45, 0xf0, 0xe8, 0x8d, 0x4b, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xab, 0x4d, 0xfd, 0xff, 0x8d, 0x55, 0xcc, 0x8d, 0x45, 0xd8, 0xe8, 0xe8, 0x86, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x60, 0x53, 0xfd, 0xff, 0xe9, 0x37, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x6a, 0x94, 0x9, 0, 0x84, 0xc0, 0x74, 0x1d, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x73, 0x46, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xa9, 0x46, 0xfd, 0xff, 0xe9, 0xb0, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xa4, 0x4c, 0xfd, 0xff, 0x8a, 0x40, 0x47, 0x30, 0xe4, 0x8b, 0x55, 0xfc, 0x66, 0x29, 0x42, 0x20, 0x8d, 0x45, 0xe8, 0xe8, 0x90, 0x4c, 0xfd, 0xff, 0x8a, 0x40, 0x49, 0x30, 0xe4, 0x8b, 0x55, 0xfc, 0x66, 0x29, 0x42, 0x1e, 0x8d, 0x45, 0xe8, 0xe8, 0x7c, 0x4c, 0xfd, 0xff, 0x8a, 0x40, 0x48, 0x30, 0xe4, 0x8b, 0x55, 0xfc, 0x66, 0x29, 0x42, 0x22, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xe5, 0xfa, 0xff, 0xff, 0x31, 0xdb, 0xba, 0x8, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xdf, 0x4c, 0xfd, 0xff, 0xe8, 0x2d, 0x17, 0xc, 0, 0xb8, 0x73, 0xa, 0x1a, 0x10, 0x50, 0xb9, 0x79, 0xa, 0x1a, 0x10, 0xbb, 0x99, 0xa, 0x1a, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0xc2, 0x4c, 0xfd, 0xff, 0x8b, 0x75, 0xfc, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x2d, 0xf6, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd4, 0x45, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xa, 0x46, 0xfd, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xbe, 0x45, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xf4, 0x45, 0xfd, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a16dc, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x100a16e1, 0x5)   calld(sys_check_available_stack_size, 0xc466c); /* call 0x10165d52 */
    II(0x100a16e6, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a16e7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a16e8, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a16e9, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a16ea, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a16eb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a16ec, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a16ee, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x100a16f4, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a16f7, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100a16fb, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a16fe, 0x5)   calld(0x100764fc, -0x2b207);          /* call 0x100764fc */
    II(0x100a1703, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100a1706, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100a170a, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100a170e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a1711, 0x5)   calld(my_ctor_0x101b38f8, -0x2b026);  /* call 0x100766f0 */
    II(0x100a1716, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100a1719, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100a171d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100a1720, 0x5)   calld(0x100720b1, -0x2f674);          /* call 0x100720b1 */
    II(0x100a1725, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100a1728, 0x5)   calld(0x100720b1, -0x2f67c);          /* call 0x100720b1 */
    II(0x100a172d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a172f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1732, 0x3)   add(eax, 0x44);                       /* add eax, 0x44 */
    II(0x100a1735, 0x5)   calld(0x1013ad71, 0x99637);           /* call 0x1013ad71 */
    II(0x100a173a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a173c, 0x2)   jzd(0x100a174f, 0x11);                /* jz 0x100a174f */
    II(0x100a173e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1741, 0x3)   add(eax, 0x44);                       /* add eax, 0x44 */
    II(0x100a1744, 0x5)   calld(0x10076574, -0x2b1d5);          /* call 0x10076574 */
    II(0x100a1749, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x8);   /* cmp byte [eax+0x3d], 0x8 */
    II(0x100a174d, 0x2)   jnzd(0x100a1751, 0x2);                /* jnz 0x100a1751 */
l_0x100a174f:
    II(0x100a174f, 0x2)   jmpd(0x100a1762, 0x11);               /* jmp 0x100a1762 */
l_0x100a1751:
    II(0x100a1751, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1754, 0x3)   add(eax, 0x44);                       /* add eax, 0x44 */
    II(0x100a1757, 0x5)   calld(0x10076574, -0x2b1e8);          /* call 0x10076574 */
    II(0x100a175c, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100a1760, 0x2)   jnzd(0x100a1764, 0x2);                /* jnz 0x100a1764 */
l_0x100a1762:
    II(0x100a1762, 0x2)   jmpd(0x100a1775, 0x11);               /* jmp 0x100a1775 */
l_0x100a1764:
    II(0x100a1764, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1767, 0x3)   add(eax, 0x44);                       /* add eax, 0x44 */
    II(0x100a176a, 0x5)   calld(0x10076574, -0x2b1fb);          /* call 0x10076574 */
    II(0x100a176f, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100a1773, 0x2)   jnzd(0x100a1777, 0x2);                /* jnz 0x100a1777 */
l_0x100a1775:
    II(0x100a1775, 0x2)   jmpd(0x100a1789, 0x12);               /* jmp 0x100a1789 */
l_0x100a1777:
    II(0x100a1777, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a177a, 0x3)   add(eax, 0x44);                       /* add eax, 0x44 */
    II(0x100a177d, 0x5)   calld(0x10076574, -0x2b20e);          /* call 0x10076574 */
    II(0x100a1782, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x100a1787, 0x2)   jzd(0x100a178b, 0x2);                 /* jz 0x100a178b */
l_0x100a1789:
    II(0x100a1789, 0x2)   jmpd(0x100a17b6, 0x2b);               /* jmp 0x100a17b6 */
l_0x100a178b:
    II(0x100a178b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a178e, 0x3)   add(edx, 0x44);                       /* add edx, 0x44 */
    II(0x100a1791, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a1794, 0x5)   calld(0x1008ac18, -0x16b81);          /* call 0x1008ac18 */
    II(0x100a1799, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100a179e, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100a17a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a17a4, 0x3)   add(eax, 0x44);                       /* add eax, 0x44 */
    II(0x100a17a7, 0x5)   calld(0x10076600, -0x2b1ac);          /* call 0x10076600 */
    II(0x100a17ac, 0x5)   calld(0x10072388, -0x2f429);          /* call 0x10072388 */
    II(0x100a17b1, 0x5)   jmpd(0x100a189d, 0xe7);               /* jmp 0x100a189d */
l_0x100a17b6:
    II(0x100a17b6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a17b8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a17bb, 0x5)   calld(0x10076630, -0x2b190);          /* call 0x10076630 */
    II(0x100a17c0, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100a17c5, 0x5)   calld(0x10076338, -0x2b492);          /* call 0x10076338 */
    II(0x100a17ca, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a17cc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a17cf, 0x5)   calld(0x1007643c, -0x2b398);          /* call 0x1007643c */
l_0x100a17d4:
    II(0x100a17d4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a17d6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a17d9, 0x5)   calld(0x1013ad71, 0x99593);           /* call 0x1013ad71 */
    II(0x100a17de, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a17e0, 0x6)   jzd(0x100a189d, 0xb7);                /* jz dword 0x100a189d */
    II(0x100a17e6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a17e9, 0x5)   calld(0x100763a0, -0x2b44e);          /* call 0x100763a0 */
    II(0x100a17ee, 0x5)   calld(0x10076204, -0x2b5ef);          /* call 0x10076204 */
    II(0x100a17f3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100a17f6, 0x3)   add(ebx, 0x2);                        /* add ebx, 0x2 */
    II(0x100a17f9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a17fb, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a17fd, 0x5)   calld(0x10076e00, -0x2aa02);          /* call 0x10076e00 */
    II(0x100a1802, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a1804, 0x2)   jzd(0x100a1814, 0xe);                 /* jz 0x100a1814 */
    II(0x100a1806, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a1809, 0x5)   calld(0x100763a0, -0x2b46e);          /* call 0x100763a0 */
    II(0x100a180e, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x8);   /* cmp byte [eax+0x3d], 0x8 */
    II(0x100a1812, 0x2)   jnzd(0x100a1816, 0x2);                /* jnz 0x100a1816 */
l_0x100a1814:
    II(0x100a1814, 0x2)   jmpd(0x100a1824, 0xe);                /* jmp 0x100a1824 */
l_0x100a1816:
    II(0x100a1816, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a1819, 0x5)   calld(0x100763a0, -0x2b47e);          /* call 0x100763a0 */
    II(0x100a181e, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100a1822, 0x2)   jnzd(0x100a1826, 0x2);                /* jnz 0x100a1826 */
l_0x100a1824:
    II(0x100a1824, 0x2)   jmpd(0x100a1834, 0xe);                /* jmp 0x100a1834 */
l_0x100a1826:
    II(0x100a1826, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a1829, 0x5)   calld(0x100763a0, -0x2b48e);          /* call 0x100763a0 */
    II(0x100a182e, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100a1832, 0x2)   jnzd(0x100a1836, 0x2);                /* jnz 0x100a1836 */
l_0x100a1834:
    II(0x100a1834, 0x2)   jmpd(0x100a1845, 0xf);                /* jmp 0x100a1845 */
l_0x100a1836:
    II(0x100a1836, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a1839, 0x5)   calld(0x100763a0, -0x2b49e);          /* call 0x100763a0 */
    II(0x100a183e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x100a1843, 0x2)   jzd(0x100a1847, 0x2);                 /* jz 0x100a1847 */
l_0x100a1845:
    II(0x100a1845, 0x2)   jmpd(0x100a1890, 0x49);               /* jmp 0x100a1890 */
l_0x100a1847:
    II(0x100a1847, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100a184c, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x100a184f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a1852, 0x5)   calld(0x10076408, -0x2b44f);          /* call 0x10076408 */
    II(0x100a1857, 0x5)   calld(0x10072388, -0x2f4d4);          /* call 0x10072388 */
    II(0x100a185c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a185e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a1861, 0x5)   calld(0x1013ad11, 0x994ab);           /* call 0x1013ad11 */
    II(0x100a1866, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a1868, 0x2)   jnzd(0x100a1873, 0x9);                /* jnz 0x100a1873 */
    II(0x100a186a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100a186d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x100a1871, 0x2)   jged(0x100a1890, 0x1d);               /* jge 0x100a1890 */
l_0x100a1873:
    II(0x100a1873, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a1876, 0x5)   calld(0x10076408, -0x2b473);          /* call 0x10076408 */
    II(0x100a187b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a187d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a1880, 0x5)   calld(0x10076630, -0x2b255);          /* call 0x10076630 */
    II(0x100a1885, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x100a1888, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100a188b, 0x5)   calld(0x100a9f78, 0x86e8);            /* call 0x100a9f78 */
l_0x100a1890:
    II(0x100a1890, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a1893, 0x5)   calld(0x10076bf8, -0x2aca0);          /* call 0x10076bf8 */
    II(0x100a1898, 0x5)   jmpd(0x100a17d4, -0xc9);              /* jmp 0x100a17d4 */
l_0x100a189d:
    II(0x100a189d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a189f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a18a2, 0x5)   calld(0x1013ad11, 0x9946a);           /* call 0x1013ad11 */
    II(0x100a18a7, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a18a9, 0x2)   jzd(0x100a18c8, 0x1d);                /* jz 0x100a18c8 */
    II(0x100a18ab, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100a18af, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a18b1, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a18b4, 0x5)   calld(0x10075f2c, -0x2b98d);          /* call 0x10075f2c */
    II(0x100a18b9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a18bb, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a18be, 0x5)   calld(0x10075f6c, -0x2b957);          /* call 0x10075f6c */
    II(0x100a18c3, 0x5)   jmpd(0x100a1978, 0xb0);               /* jmp 0x100a1978 */
l_0x100a18c8:
    II(0x100a18c8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a18cb, 0x5)   calld(0x10076574, -0x2b35c);          /* call 0x10076574 */
    II(0x100a18d0, 0x3)   mov(al, memb_a32(ds, eax + 0x47));    /* mov al, [eax+0x47] */
    II(0x100a18d3, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100a18d5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a18d8, 0x4)   sub(memw_a32(ds, edx + 0x20), ax);    /* sub [edx+0x20], ax */
    II(0x100a18dc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a18df, 0x5)   calld(0x10076574, -0x2b370);          /* call 0x10076574 */
    II(0x100a18e4, 0x3)   mov(al, memb_a32(ds, eax + 0x49));    /* mov al, [eax+0x49] */
    II(0x100a18e7, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100a18e9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a18ec, 0x4)   sub(memw_a32(ds, edx + 0x1e), ax);    /* sub [edx+0x1e], ax */
    II(0x100a18f0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a18f3, 0x5)   calld(0x10076574, -0x2b384);          /* call 0x10076574 */
    II(0x100a18f8, 0x3)   mov(al, memb_a32(ds, eax + 0x48));    /* mov al, [eax+0x48] */
    II(0x100a18fb, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100a18fd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a1900, 0x4)   sub(memw_a32(ds, edx + 0x22), ax);    /* sub [edx+0x22], ax */
    II(0x100a1904, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100a1907, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a190a, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x100a190d, 0x5)   calld(0x100a13f7, -0x51b);            /* call 0x100a13f7 */
    II(0x100a1912, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a1914, 0x5)   mov(edx, 0x8);                        /* mov edx, 0x8 */
    II(0x100a1919, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a191c, 0x5)   calld(0x10076600, -0x2b321);          /* call 0x10076600 */
    II(0x100a1921, 0x5)   calld(0x10163053, 0xc172d);           /* call 0x10163053 */
    II(0x100a1926, 0x5)   mov(eax, 0x101a0a73);                 /* mov eax, 0x101a0a73 */ /* "power" */
    II(0x100a192b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a192c, 0x5)   mov(ecx, 0x101a0a79);                 /* mov ecx, 0x101a0a79 */ /* "More %s needed, %s turned off.\n" */
    II(0x100a1931, 0x5)   mov(ebx, 0x101a0a99);                 /* mov ebx, 0x101a0a99 */ /* "Cannot turn %s on, %s needed.\n" */
    II(0x100a1936, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a1939, 0x5)   calld(0x10076600, -0x2b33e);          /* call 0x10076600 */
    II(0x100a193e, 0x3)   mov(esi, memd_a32(ss, ebp - 0x4));    /* mov esi, [ebp-0x4] */
    II(0x100a1941, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a1943, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100a1945, 0x5)   calld(0x100a0f77, -0x9d3);            /* call 0x100a0f77 */
    II(0x100a194a, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100a194e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a1950, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a1953, 0x5)   calld(0x10075f2c, -0x2ba2c);          /* call 0x10075f2c */
    II(0x100a1958, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a195a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a195d, 0x5)   calld(0x10075f6c, -0x2b9f6);          /* call 0x10075f6c */
    II(0x100a1962, 0x2)   jmpd(0x100a1978, 0x14);               /* jmp 0x100a1978 */
//  II(0x100a1964, 0x14)  /* Недостижимый код. */
l_0x100a1978:
    II(0x100a1978, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100a197b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a197d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a197e, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a197f, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a1980, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a1981, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a1982, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a1983, 0x1)   retd();                               /* ret */
FUNC_END

