FUNC_BEGIN(0x1016419a, 0xea391ba294b320f6, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0xae, 0x1b, 0, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0xba, 0xad, 0x2b, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x28, 0x33, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x8, 0xc1, 0xfb, 0x10, 0xba, 0xb6, 0x2b, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x12, 0x33, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0xa, 0xc1, 0xfb, 0x10, 0xba, 0xbb, 0x2b, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfc, 0x32, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0xc, 0xc1, 0xfb, 0x10, 0xba, 0xc0, 0x2b, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe6, 0x32, 0xfe, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0xe, 0xc1, 0xfb, 0x10, 0xba, 0xc6, 0x2b, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd0, 0x32, 0xfe, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x10, 0xc1, 0xfb, 0x10, 0xba, 0xce, 0x2b, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xba, 0x32, 0xfe, 0xff, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x12, 0xc1, 0xfb, 0x10, 0xba, 0xd8, 0x2b, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa4, 0x32, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1016419a, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x1016419f, 0x5)   calld(sys_check_available_stack_size, 0x1bae); /* call 0x10165d52 */
    II(0x101641a4, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101641a5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101641a6, 0x1)   pushd(esi);                           /* push esi */
    II(0x101641a7, 0x1)   pushd(edi);                           /* push edi */
    II(0x101641a8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101641a9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101641ab, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x101641b1, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101641b4, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x101641b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101641ba, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x101641bd, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101641c0, 0x5)   mov(edx, 0x101b2bad);                 /* mov edx, 0x101b2bad */ /* "material" */
    II(0x101641c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101641c8, 0x5)   calld(0x101474f5, -0x1ccd8);          /* call 0x101474f5 */
    II(0x101641cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101641d0, 0x3)   mov(ebx, memd_a32(ds, eax + 0x8));    /* mov ebx, [eax+0x8] */
    II(0x101641d3, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101641d6, 0x5)   mov(edx, 0x101b2bb6);                 /* mov edx, 0x101b2bb6 */ /* "fuel" */
    II(0x101641db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101641de, 0x5)   calld(0x101474f5, -0x1ccee);          /* call 0x101474f5 */
    II(0x101641e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101641e6, 0x3)   mov(ebx, memd_a32(ds, eax + 0xa));    /* mov ebx, [eax+0xa] */
    II(0x101641e9, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101641ec, 0x5)   mov(edx, 0x101b2bbb);                 /* mov edx, 0x101b2bbb */ /* "gold" */
    II(0x101641f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101641f4, 0x5)   calld(0x101474f5, -0x1cd04);          /* call 0x101474f5 */
    II(0x101641f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101641fc, 0x3)   mov(ebx, memd_a32(ds, eax + 0xc));    /* mov ebx, [eax+0xc] */
    II(0x101641ff, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10164202, 0x5)   mov(edx, 0x101b2bc0);                 /* mov edx, 0x101b2bc0 */ /* "power" */
    II(0x10164207, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1016420a, 0x5)   calld(0x101474f5, -0x1cd1a);          /* call 0x101474f5 */
    II(0x1016420f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10164212, 0x3)   mov(ebx, memd_a32(ds, ebx + 0xe));    /* mov ebx, [ebx+0xe] */
    II(0x10164215, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10164218, 0x5)   mov(edx, 0x101b2bc6);                 /* mov edx, 0x101b2bc6 */ /* "workers" */
    II(0x1016421d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10164220, 0x5)   calld(0x101474f5, -0x1cd30);          /* call 0x101474f5 */
    II(0x10164225, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10164228, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x10));   /* mov ebx, [ebx+0x10] */
    II(0x1016422b, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1016422e, 0x5)   mov(edx, 0x101b2bce);                 /* mov edx, 0x101b2bce */ /* "buildings" */
    II(0x10164233, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10164236, 0x5)   calld(0x101474f5, -0x1cd46);          /* call 0x101474f5 */
    II(0x1016423b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1016423e, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x12));   /* mov ebx, [ebx+0x12] */
    II(0x10164241, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10164244, 0x5)   mov(edx, 0x101b2bd8);                 /* mov edx, 0x101b2bd8 */ /* "id" */
    II(0x10164249, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1016424c, 0x5)   calld(0x101474f5, -0x1cd5c);          /* call 0x101474f5 */
    II(0x10164251, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10164253, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10164254, 0x1)   popd(edi);                            /* pop edi */
    II(0x10164255, 0x1)   popd(esi);                            /* pop esi */
    II(0x10164256, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10164257, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10164258, 0x1)   retd();                               /* ret */
FUNC_END

