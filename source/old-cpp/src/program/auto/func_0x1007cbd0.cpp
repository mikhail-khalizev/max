FUNC_BEGIN(0x1007cbd0, 0x8f4fca9cfa1d5848, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x78, 0x91, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x12, 0xe1, 0xb, 0, 0x84, 0xc0, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x6, 0, 0x75, 0x5, 0xe9, 0x80, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x6, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x16, 0x97, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xd, 0x98, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xd5, 0xe0, 0xb, 0, 0x84, 0xc0, 0x74, 0x19, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xee, 0x96, 0xff, 0xff, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x13, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xe3, 0x97, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xb, 0xe1, 0xb, 0, 0x84, 0xc0, 0x74, 0x1d, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x2b, 0x97, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0xc7, 0x1, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xd3, 0xe0, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x92, 0, 0, 0, 0xe8, 0x49, 0xb6, 0xc, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x72, 0x60, 0x8b, 0x45, 0xfc, 0xe8, 0x67, 0xe0, 0, 0, 0x84, 0xc0, 0x75, 0x52, 0xe8, 0xf2, 0xda, 0, 0, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xf4, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x24, 0x91, 0xe, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x16, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xd3, 0x6b, 0x2, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0x8b, 0x55, 0xe4, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x5d, 0xf4, 0xe8, 0x9f, 0x80, 0x2, 0, 0xeb, 0x1f, 0x8b, 0x45, 0xfc, 0xe8, 0xf5, 0, 0, 0, 0x84, 0xc0, 0x75, 0x13, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x25, 0x1, 0, 0, 0xe9, 0x59, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1007cbd0, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x1007cbd5, 0x5)   calld(sys_check_available_stack_size, 0xe9178); /* call 0x10165d52 */
    II(0x1007cbda, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007cbdb, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007cbdc, 0x1)   pushd(edx);                           /* push edx */
    II(0x1007cbdd, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007cbde, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007cbdf, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007cbe0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007cbe2, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x1007cbe8, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1007cbeb, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1007cbf2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007cbf4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cbf7, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1007cbfa, 0x5)   calld(0x1013ad11, 0xbe112);           /* call 0x1013ad11 */
    II(0x1007cbff, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007cc01, 0x2)   jzd(0x1007cc0c, 0x9);                 /* jz 0x1007cc0c */
    II(0x1007cc03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cc06, 0x4)   cmp(memb_a32(ds, eax + 0x6), 0);      /* cmp byte [eax+0x6], 0x0 */
    II(0x1007cc0a, 0x2)   jnzd(0x1007cc11, 0x5);                /* jnz 0x1007cc11 */
l_0x1007cc0c:
    II(0x1007cc0c, 0x5)   jmpd(0x1007cc91, 0x80);               /* jmp 0x1007cc91 */
l_0x1007cc11:
    II(0x1007cc11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cc14, 0x4)   mov(memb_a32(ds, eax + 0x6), 0);      /* mov byte [eax+0x6], 0x0 */
    II(0x1007cc18, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x1007cc1d, 0x5)   calld(0x10076338, -0x68ea);           /* call 0x10076338 */
    II(0x1007cc22, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007cc24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cc27, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1007cc2a, 0x5)   calld(0x1007643c, -0x67f3);           /* call 0x1007643c */
    II(0x1007cc2f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007cc31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cc34, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1007cc37, 0x5)   calld(0x1013ad11, 0xbe0d5);           /* call 0x1013ad11 */
    II(0x1007cc3c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007cc3e, 0x2)   jzd(0x1007cc59, 0x19);                /* jz 0x1007cc59 */
    II(0x1007cc40, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x1007cc45, 0x5)   calld(0x10076338, -0x6912);           /* call 0x10076338 */
    II(0x1007cc4a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1007cc4d, 0x3)   add(ebx, 0x13);                       /* add ebx, 0x13 */
    II(0x1007cc50, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007cc52, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007cc54, 0x5)   calld(0x1007643c, -0x681d);           /* call 0x1007643c */
l_0x1007cc59:
    II(0x1007cc59, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007cc5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cc5e, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1007cc61, 0x5)   calld(0x1013ad71, 0xbe10b);           /* call 0x1013ad71 */
    II(0x1007cc66, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007cc68, 0x2)   jzd(0x1007cc87, 0x1d);                /* jz 0x1007cc87 */
    II(0x1007cc6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cc6d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1007cc70, 0x5)   calld(0x100763a0, -0x68d5);           /* call 0x100763a0 */
    II(0x1007cc75, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007cc77, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1007cc7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cc7d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007cc80, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007cc83, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007cc85, 0x2)   jnzd(0x1007cc89, 0x2);                /* jnz 0x1007cc89 */
l_0x1007cc87:
    II(0x1007cc87, 0x2)   jmpd(0x1007cc91, 0x8);                /* jmp 0x1007cc91 */
l_0x1007cc89:
    II(0x1007cc89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cc8c, 0x5)   calld(0x1007ce58, 0x1c7);             /* call 0x1007ce58 */
l_0x1007cc91:
    II(0x1007cc91, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007cc93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cc96, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1007cc99, 0x5)   calld(0x1013ad71, 0xbe0d3);           /* call 0x1013ad71 */
    II(0x1007cc9e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007cca0, 0x6)   jzd(0x1007cd38, 0x92);                /* jz dword 0x1007cd38 */
    II(0x1007cca6, 0x5)   calld(0x101482f4, 0xcb649);           /* call 0x101482f4 */
    II(0x1007ccab, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x1007ccb1, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x1007ccb7, 0x2)   jbd(0x1007cd19, 0x60);                /* jb 0x1007cd19 */
    II(0x1007ccb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ccbc, 0x5)   calld(0x1008ad28, 0xe067);            /* call 0x1008ad28 */
    II(0x1007ccc1, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007ccc3, 0x2)   jnzd(0x1007cd17, 0x52);               /* jnz 0x1007cd17 */
    II(0x1007ccc5, 0x5)   calld(0x1008a7bc, 0xdaf2);            /* call 0x1008a7bc */
    II(0x1007ccca, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007cccf, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1007ccd2, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x1007ccd7, 0x5)   calld(sys_new, 0xe9124);              /* call 0x10165e00 */
    II(0x1007ccdc, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1007ccdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007cce2, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1007cce5, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x1007cce9, 0x2)   jzd(0x1007cd01, 0x16);                /* jz 0x1007cd01 */
    II(0x1007cceb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007ccee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ccf1, 0x5)   calld(my_ctor_c11, 0x26bd3);          /* call 0x100a38c9 */
    II(0x1007ccf6, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1007ccf9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1007ccfc, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1007ccff, 0x2)   jmpd(0x1007cd07, 0x6);                /* jmp 0x1007cd07 */
l_0x1007cd01:
    II(0x1007cd01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1007cd04, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1007cd07:
    II(0x1007cd07, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1c));   /* mov edx, [ebp-0x1c] */
    II(0x1007cd0a, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1007cd0f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x1007cd12, 0x5)   calld(0x100a4db6, 0x2809f);           /* call 0x100a4db6 */
l_0x1007cd17:
    II(0x1007cd17, 0x2)   jmpd(0x1007cd38, 0x1f);               /* jmp 0x1007cd38 */
l_0x1007cd19:
    II(0x1007cd19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cd1c, 0x5)   calld(0x1007ce16, 0xf5);              /* call 0x1007ce16 */
    II(0x1007cd21, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007cd23, 0x2)   jnzd(0x1007cd38, 0x13);               /* jnz 0x1007cd38 */
    II(0x1007cd25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007cd28, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
    II(0x1007cd2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007cd2e, 0x5)   calld(0x1007ce58, 0x125);             /* call 0x1007ce58 */
    II(0x1007cd33, 0x5)   jmpd(0x1007cc91, -0xa7);              /* jmp 0x1007cc91 */
l_0x1007cd38:
    II(0x1007cd38, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007cd3a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007cd3b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007cd3c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007cd3d, 0x1)   popd(edx);                            /* pop edx */
    II(0x1007cd3e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007cd3f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1007cd40, 0x1)   retd();                               /* ret */
FUNC_END

