FUNC_BEGIN(0x100e3e05, 0x2bfd92d9767bd36c, 0x20, ({0x68, 0xa8, 0, 0, 0, 0xe8, 0x43, 0x1f, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x78, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x87, 0xe2, 0xf8, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x7f, 0xe2, 0xf8, 0xff, 0x8d, 0x55, 0xc4, 0x8b, 0x45, 0xf8, 0xe8, 0xd4, 0x2b, 0xff, 0xff, 0x8d, 0x5d, 0xe0, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x26, 0x27, 0xf9, 0xff, 0xe8, 0xb1, 0x23, 0xf9, 0xff, 0xe8, 0xbe, 0xf7, 0x5, 0, 0x8d, 0x55, 0xc4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x44, 0xe8, 0x6, 0x41, 0xff, 0xff, 0x8d, 0x55, 0xc4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x48, 0xe8, 0xf8, 0x40, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x44, 0xe8, 0xa5, 0x10, 0xff, 0xff, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x28, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x9, 0xc7, 0x45, 0xc0, 0, 0, 0, 0, 0xeb, 0x1e, 0xf, 0xbf, 0x45, 0xee, 0xf, 0xbf, 0x55, 0xc0, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x28, 0xc1, 0xfb, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x44, 0xe8, 0xfb, 0xf, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xd4, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x44, 0xe8, 0x1a, 0x10, 0xff, 0xff, 0x98, 0x3, 0x45, 0xda, 0x1, 0xd0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x44, 0xe8, 0x3a, 0x10, 0xff, 0xff, 0x98, 0xf, 0xbf, 0x55, 0xc0, 0x29, 0xd0, 0xf, 0xbf, 0x55, 0xd4, 0xf, 0xaf, 0xc2, 0x1, 0x45, 0xbc, 0xb8, 0x21, 0x2, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x44, 0xe8, 0x4c, 0x10, 0xff, 0xff, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xc0, 0xf, 0xbf, 0x55, 0xd4, 0x8b, 0x45, 0xbc, 0xe8, 0xff, 0x30, 0xff, 0xff, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x23, 0x63, 0x8, 0, 0xf, 0xbf, 0x45, 0xee, 0x50, 0xb8, 0x58, 0x1c, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x88, 0x50, 0xe8, 0xc4, 0x1f, 0x8, 0, 0x83, 0xc4, 0xc, 0xe8, 0xd7, 0x13, 0xff, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x68, 0xa2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x48, 0xe8, 0xc3, 0xf, 0xff, 0xff, 0x98, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x48, 0xe8, 0xea, 0xf, 0xff, 0xff, 0x98, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x48, 0xe8, 0x41, 0xf, 0xff, 0xff, 0x98, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x48, 0xe8, 0x68, 0xf, 0xff, 0xff, 0xf, 0xbf, 0xc8, 0x8d, 0x5d, 0x88, 0xf, 0xbf, 0x55, 0xd4, 0x8b, 0x45, 0xda, 0xe8, 0x4b, 0x5b, 0, 0, 0x80, 0x7d, 0xfc, 0, 0x74, 0x1c, 0x8b, 0x55, 0xd6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x44, 0xe8, 0x5f, 0x42, 0xff, 0xff, 0x8b, 0x55, 0xd6, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x48, 0xe8, 0x51, 0x42, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100e3e05, 0x5)   pushd(0xa8);                          /* push dword 0xa8 */
    II(0x100e3e0a, 0x5)   calld(sys_check_available_stack_size, 0x81f43); /* call 0x10165d52 */
    II(0x100e3e0f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e3e10, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e3e11, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e3e12, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e3e13, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e3e14, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e3e16, 0x6)   sub(esp, 0x78);                       /* sub esp, 0x78 */
    II(0x100e3e1c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e3e1f, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100e3e22, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e3e25, 0x5)   calld(0x100720b1, -0x71d79);          /* call 0x100720b1 */
    II(0x100e3e2a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e3e2d, 0x5)   calld(0x100720b1, -0x71d81);          /* call 0x100720b1 */
    II(0x100e3e32, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100e3e35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3e38, 0x5)   calld(0x100d6a11, -0xd42c);           /* call 0x100d6a11 */
    II(0x100e3e3d, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x100e3e40, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100e3e43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3e46, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100e3e49, 0x5)   calld(0x10076574, -0x6d8da);          /* call 0x10076574 */
    II(0x100e3e4e, 0x5)   calld(0x10076204, -0x6dc4f);          /* call 0x10076204 */
    II(0x100e3e53, 0x5)   calld(0x10143616, 0x5f7be);           /* call 0x10143616 */
    II(0x100e3e58, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100e3e5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3e5e, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100e3e61, 0x5)   calld(0x100d7f6c, -0xbefa);           /* call 0x100d7f6c */
    II(0x100e3e66, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100e3e69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3e6c, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100e3e6f, 0x5)   calld(0x100d7f6c, -0xbf08);           /* call 0x100d7f6c */
    II(0x100e3e74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3e77, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100e3e7a, 0x5)   calld(0x100d4f24, -0xef5b);           /* call 0x100d4f24 */
    II(0x100e3e7f, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100e3e82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3e85, 0x3)   mov(eax, memd_a32(ds, eax + 0x28));   /* mov eax, [eax+0x28] */
    II(0x100e3e88, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e3e8b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e3e8d, 0x2)   jnzd(0x100e3e98, 0x9);                /* jnz 0x100e3e98 */
    II(0x100e3e8f, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0);     /* mov dword [ebp-0x40], 0x0 */
    II(0x100e3e96, 0x2)   jmpd(0x100e3eb6, 0x1e);               /* jmp 0x100e3eb6 */
l_0x100e3e98:
    II(0x100e3e98, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x100e3e9c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100e3ea0, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100e3ea3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3ea6, 0x3)   mov(ebx, memd_a32(ds, eax + 0x28));   /* mov ebx, [eax+0x28] */
    II(0x100e3ea9, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100e3eac, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e3eae, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e3eb1, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100e3eb3, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x100e3eb6:
    II(0x100e3eb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3eb9, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100e3ebc, 0x5)   calld(0x100d4ebc, -0xf005);           /* call 0x100d4ebc */
    II(0x100e3ec1, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e3ec4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100e3ec8, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100e3ecb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3ece, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100e3ed1, 0x5)   calld(0x100d4ef0, -0xefe6);           /* call 0x100d4ef0 */
    II(0x100e3ed6, 0x1)   cwde();                               /* cwde */
    II(0x100e3ed7, 0x3)   add(eax, memd_a32(ss, ebp - 0x26));   /* add eax, [ebp-0x26] */
    II(0x100e3eda, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e3edc, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100e3edf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3ee2, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100e3ee5, 0x5)   calld(0x100d4f24, -0xefc6);           /* call 0x100d4f24 */
    II(0x100e3eea, 0x1)   cwde();                               /* cwde */
    II(0x100e3eeb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100e3eef, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100e3ef1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100e3ef5, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100e3ef8, 0x3)   add(memd_a32(ss, ebp - 0x44), eax);   /* add [ebp-0x44], eax */
    II(0x100e3efb, 0x5)   mov(eax, 0x221);                      /* mov eax, 0x221 */
    II(0x100e3f00, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3f01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3f04, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100e3f07, 0x5)   calld(0x100d4f58, -0xefb4);           /* call 0x100d4f58 */
    II(0x100e3f0c, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e3f0f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x40)); /* movsx ebx, word [ebp-0x40] */
    II(0x100e3f13, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100e3f17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100e3f1a, 0x5)   calld(0x100d701e, -0xcf01);           /* call 0x100d701e */
    II(0x100e3f1f, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100e3f24, 0x5)   calld(/* sys */ 0x1016a24c, 0x86323); /* call 0x1016a24c */
    II(0x100e3f29, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x100e3f2d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3f2e, 0x5)   mov(eax, 0x101a1c58);                 /* mov eax, 0x101a1c58 */ /* "%i" */
    II(0x100e3f33, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3f34, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x100e3f37, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3f38, 0x5)   calld(sys_sprintf, 0x81fc4);          /* call 0x10165f01 */
    II(0x100e3f3d, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100e3f40, 0x5)   calld(0x100d531c, -0xec29);           /* call 0x100d531c */
    II(0x100e3f45, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e3f4a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3f4b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100e3f50, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3f51, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x100e3f56, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3f59, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100e3f5c, 0x5)   calld(0x100d4f24, -0xf03d);           /* call 0x100d4f24 */
    II(0x100e3f61, 0x1)   cwde();                               /* cwde */
    II(0x100e3f62, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3f63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3f66, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100e3f69, 0x5)   calld(0x100d4f58, -0xf016);           /* call 0x100d4f58 */
    II(0x100e3f6e, 0x1)   cwde();                               /* cwde */
    II(0x100e3f6f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3f70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3f73, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100e3f76, 0x5)   calld(0x100d4ebc, -0xf0bf);           /* call 0x100d4ebc */
    II(0x100e3f7b, 0x1)   cwde();                               /* cwde */
    II(0x100e3f7c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e3f7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3f80, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100e3f83, 0x5)   calld(0x100d4ef0, -0xf098);           /* call 0x100d4ef0 */
    II(0x100e3f88, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e3f8b, 0x3)   lea(ebx, ebp - 0x78);                 /* lea ebx, [ebp-0x78] */
    II(0x100e3f8e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100e3f92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x26));   /* mov eax, [ebp-0x26] */
    II(0x100e3f95, 0x5)   calld(0x100e9ae5, 0x5b4b);            /* call 0x100e9ae5 */
    II(0x100e3f9a, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100e3f9e, 0x2)   jzd(0x100e3fbc, 0x1c);                /* jz 0x100e3fbc */
    II(0x100e3fa0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2a));   /* mov edx, [ebp-0x2a] */
    II(0x100e3fa3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3fa6, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100e3fa9, 0x5)   calld(0x100d820d, -0xbda1);           /* call 0x100d820d */
    II(0x100e3fae, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2a));   /* mov edx, [ebp-0x2a] */
    II(0x100e3fb1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3fb4, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100e3fb7, 0x5)   calld(0x100d820d, -0xbdaf);           /* call 0x100d820d */
l_0x100e3fbc:
    II(0x100e3fbc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e3fbe, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e3fbf, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e3fc0, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e3fc1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e3fc2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e3fc3, 0x1)   retd();                               /* ret */
FUNC_END

