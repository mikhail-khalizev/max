FUNC_BEGIN(0x100ee881, 0xad77377b91eaa0ed, 0x20, ({0x68, 0xf0, 0, 0, 0, 0xe8, 0xc7, 0x74, 0x7, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xd0, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0xc7, 0x45, 0xe4, 0x9, 0, 0, 0, 0xc6, 0x45, 0xe8, 0, 0xf, 0xbf, 0x55, 0xf8, 0x31, 0xc0, 0xe8, 0x95, 0xe4, 0xff, 0xff, 0x88, 0x45, 0xec, 0x80, 0x7d, 0xec, 0, 0x75, 0x27, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x1, 0xc0, 0x8b, 0x44, 0x28, 0xd6, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x1, 0x75, 0x6, 0xc6, 0x45, 0xe0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe0, 0, 0x8a, 0x45, 0xe0, 0x88, 0x45, 0xe8, 0xeb, 0x16, 0x80, 0x7d, 0xec, 0x2, 0x75, 0x6, 0xc6, 0x45, 0xd4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd4, 0, 0x8a, 0x45, 0xd4, 0x88, 0x45, 0xe8, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x5, 0xe8, 0x47, 0xae, 0x3, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x22, 0x80, 0x7d, 0xfc, 0, 0x75, 0x6, 0xc6, 0x45, 0xd0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd0, 0, 0x31, 0xd2, 0x8a, 0x55, 0xd0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0x35, 0xc8, 0x3, 0, 0xf, 0xbf, 0x55, 0xe4, 0xe8, 0x5b, 0x75, 0x7, 0, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x89, 0x45, 0xe4, 0x66, 0xc7, 0x5, 0x74, 0x86, 0x1b, 0x10, 0x32, 0, 0xe8, 0xf1, 0x9, 0, 0, 0x98, 0xe8, 0x3c, 0x4b, 0, 0, 0x89, 0x45, 0xcc, 0x80, 0x4d, 0xc8, 0x1, 0x8d, 0x45, 0xc4, 0xe8, 0x7c, 0x31, 0x5, 0, 0x89, 0x45, 0xc0, 0x80, 0x65, 0xc8, 0xfe, 0x80, 0x7d, 0xe8, 0, 0x74, 0xf, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x59, 0x76, 0xf8, 0xff, 0x83, 0xf8, 0x2, 0x74, 0x5, 0xe9, 0xac, 0, 0, 0, 0xba, 0, 0x3f, 0x1c, 0x10, 0x8d, 0x45, 0xbc, 0xe8, 0xa1, 0x30, 0x5, 0, 0x80, 0x4d, 0xc8, 0x1, 0x8d, 0x45, 0xb8, 0xe8, 0x42, 0x31, 0x5, 0, 0x89, 0x45, 0xb4, 0x80, 0x65, 0xc8, 0xfe, 0xa1, 0x80, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0xb4, 0x1f, 0x1a, 0x10, 0x50, 0xb8, 0x1e, 0, 0, 0, 0x50, 0x8d, 0x45, 0xb8, 0x50, 0xe8, 0x6c, 0x36, 0x5, 0, 0x83, 0xc4, 0x10, 0x8d, 0x55, 0xb8, 0x8d, 0x45, 0xbc, 0xe8, 0xb0, 0x32, 0x5, 0, 0xba, 0xbe, 0x1f, 0x1a, 0x10, 0x8d, 0x45, 0xbc, 0xe8, 0xe2, 0xad, 0xf9, 0xff, 0xe8, 0x34, 0xa, 0, 0, 0x89, 0x45, 0xb0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x31, 0x8b, 0x45, 0xb0, 0xe8, 0x9, 0x35, 0x8, 0, 0x89, 0x45, 0xac, 0x83, 0x7d, 0xac, 0xff, 0x74, 0xf, 0x31, 0xd2, 0x8a, 0x55, 0xac, 0x8d, 0x45, 0xc4, 0xe8, 0xd8, 0x33, 0x5, 0, 0xeb, 0xe0, 0x8b, 0x45, 0xb0, 0xe8, 0x4d, 0x36, 0x8, 0, 0x66, 0xc7, 0x5, 0x74, 0x86, 0x1b, 0x10, 0xa, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xfb, 0x30, 0x5, 0, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0xf1, 0x30, 0x5, 0, 0x80, 0x4d, 0xc8, 0x1, 0xf, 0xbf, 0x45, 0xe4, 0x1, 0xc0, 0x8b, 0x90, 0x76, 0x86, 0x1b, 0x10, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x94, 0xe8, 0x84, 0x7d, 0xfe, 0xff, 0x89, 0x45, 0x90, 0x80, 0x65, 0xc8, 0xfe, 0xc6, 0x5, 0x84, 0x39, 0x1c, 0x10, 0x1, 0xc6, 0x5, 0x70, 0x39, 0x1c, 0x10, 0, 0xc6, 0x5, 0xd2, 0x37, 0x1c, 0x10, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x10, 0xe6, 0x4, 0, 0x31, 0xc0, 0xe8, 0xb, 0x5a, 0, 0, 0xba, 0x10, 0, 0, 0, 0x8d, 0x45, 0x94, 0xe8, 0x8a, 0x8, 0, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xb4, 0xb7, 0x7, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xf2, 0x22, 0x3, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0x94, 0xe8, 0x39, 0x8, 0, 0, 0xe8, 0x70, 0x76, 0xfe, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x45, 0x94, 0xe8, 0x1f, 0x80, 0xfe, 0xff, 0x8d, 0x95, 0x74, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x94, 0xe8, 0x43, 0x7f, 0xfe, 0xff, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x85, 0x70, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x70, 0xff, 0xff, 0xff, 0x83, 0xf8, 0x4, 0x7d, 0x12, 0xf, 0xbf, 0x85, 0x70, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x66, 0xc7, 0x44, 0x28, 0xd8, 0, 0, 0xeb, 0xd6, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x85, 0x70, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0xf, 0xbf, 0x95, 0x70, 0xff, 0xff, 0xff, 0x48, 0x39, 0xc2, 0xf, 0x8d, 0xa5, 0, 0, 0, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x40, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xff, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xf4, 0x7d, 0x79, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x8b, 0x55, 0xf0, 0x1, 0xc2, 0xf, 0xbf, 0x12, 0xf, 0xbf, 0x85, 0x70, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0, 0xe8, 0xe9, 0xd7, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x7d, 0x4a, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x3, 0x45, 0xf0, 0x66, 0x8b, 0, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x70, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x1, 0xd2, 0x3, 0x55, 0xf0, 0x66, 0x8b, 0, 0x66, 0x89, 0x2, 0xf, 0xbf, 0x85, 0x70, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x8b, 0x55, 0xf0, 0x1, 0xc2, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x66, 0x89, 0x2, 0xe9, 0x6f, 0xff, 0xff, 0xff, 0xe9, 0x3b, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xf4, 0x7d, 0x1f, 0x8b, 0x95, 0x70, 0xff, 0xff, 0xff, 0x42, 0xf, 0xbf, 0x85, 0x70, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0, 0x1, 0xc0, 0x66, 0x89, 0x54, 0x28, 0xd8, 0xeb, 0xc9, 0x80, 0x7d, 0xe8, 0, 0x74, 0x2f, 0xe8, 0x4d, 0x68, 0xfe, 0xff, 0xf, 0xbf, 0xc8, 0xbb, 0x64, 0x4, 0, 0, 0xba, 0x64, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xb0, 0xee, 0x4, 0, 0x31, 0xdb, 0xba, 0xb1, 0x6, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x43, 0xe3, 0x4, 0, 0xeb, 0x11, 0x31, 0xdb, 0xba, 0xb2, 0x6, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x30, 0xe3, 0x4, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x8a, 0xc2, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x38, 0x8b, 0x45, 0x86, 0xe8, 0x11, 0x88, 0x7, 0, 0x31, 0xc0, 0x50, 0xb8, 0x90, 0x1, 0, 0, 0x50, 0xb8, 0x58, 0x2, 0, 0, 0x50, 0xb9, 0x14, 0, 0, 0, 0xbb, 0x14, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x34, 0xab, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0xaf, 0xec, 0xff, 0xff, 0xeb, 0x17, 0x31, 0xc9, 0x8a, 0x4d, 0xfc, 0xf, 0xbf, 0x5d, 0xf8, 0x8d, 0x55, 0xd8, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0x98, 0xed, 0xff, 0xff, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x88, 0xb5, 0x7, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x32, 0x71, 0x7, 0, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x60, 0xff, 0xff, 0xff, 0, 0x74, 0x34, 0xb8, 0xca, 0x1, 0, 0, 0x50, 0xb9, 0x25, 0x1, 0, 0, 0xbb, 0x5b, 0x1, 0, 0, 0xba, 0x5a, 0x1, 0, 0, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0x6, 0xf7, 0xfd, 0xff, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x89, 0x85, 0x54, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0xe4, 0x64, 0xfe, 0xff, 0x50, 0x8d, 0x85, 0x4c, 0xff, 0xff, 0xff, 0xe8, 0x4, 0x65, 0xfe, 0xff, 0x50, 0x8d, 0x85, 0x48, 0xff, 0xff, 0xff, 0xe8, 0x24, 0x65, 0xfe, 0xff, 0x50, 0x8d, 0x85, 0x44, 0xff, 0xff, 0xff, 0xe8, 0x44, 0x65, 0xfe, 0xff, 0x50, 0xe8, 0x6a, 0x65, 0xfe, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0x86, 0x65, 0xfe, 0xff, 0xf, 0xbf, 0xd8, 0xba, 0xc1, 0x1f, 0x1a, 0x10, 0x8b, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0xdf, 0x1, 0xfe, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xbd, 0xb4, 0x7, 0, 0xba, 0x1b, 0, 0, 0, 0x8b, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0x95, 0x63, 0xfe, 0xff, 0x8b, 0x55, 0x86, 0x8b, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0xaf, 0xa, 0xfe, 0xff, 0x8b, 0x45, 0x86, 0xe8, 0xcf, 0x86, 0x7, 0, 0xc6, 0x85, 0x40, 0xff, 0xff, 0xff, 0, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x68, 0x78, 0xf8, 0xff, 0xe8, 0x27, 0x95, 0x5, 0, 0x89, 0x85, 0x3c, 0xff, 0xff, 0xff, 0xe8, 0x30, 0xc4, 0x7, 0, 0x89, 0x85, 0x38, 0xff, 0xff, 0xff, 0xe9, 0xb9, 0, 0, 0, 0xc6, 0x85, 0x40, 0xff, 0xff, 0xff, 0x1, 0xe9, 0xe1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe4, 0x40, 0xbb, 0x9, 0, 0, 0, 0x31, 0xd2, 0xf7, 0xf3, 0x89, 0x55, 0xe4, 0xe8, 0x37, 0x65, 0xfe, 0xff, 0x98, 0x50, 0xe8, 0x54, 0x65, 0xfe, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0x84, 0x8d, 0x95, 0x74, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xe4, 0x1, 0xc0, 0x8b, 0x80, 0x76, 0x86, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x1d, 0x9e, 0xff, 0xff, 0x8d, 0x45, 0xc4, 0xe8, 0xb4, 0xc0, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x38, 0x8b, 0x45, 0x86, 0xe8, 0x3b, 0x86, 0x7, 0, 0x31, 0xc0, 0x50, 0xb8, 0x90, 0x1, 0, 0, 0x50, 0xb8, 0x58, 0x2, 0, 0, 0x50, 0xb9, 0x14, 0, 0, 0, 0xbb, 0x14, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x5e, 0xa9, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0xd9, 0xea, 0xff, 0xff, 0xeb, 0x17, 0x31, 0xc9, 0x8a, 0x4d, 0xfc, 0xf, 0xbf, 0x5d, 0xf8, 0x8d, 0x55, 0xd8, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0xc2, 0xeb, 0xff, 0xff, 0x8b, 0x45, 0x86, 0xe8, 0xec, 0x85, 0x7, 0, 0xeb, 0x36, 0xeb, 0x34, 0x83, 0xbd, 0x38, 0xff, 0xff, 0xff, 0x1b, 0x72, 0x1c, 0x83, 0xbd, 0x38, 0xff, 0xff, 0xff, 0x1b, 0xf, 0x86, 0x31, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x38, 0xff, 0xff, 0xff, 0x20, 0xf, 0x84, 0x30, 0xff, 0xff, 0xff, 0xeb, 0xd9, 0x83, 0xbd, 0x38, 0xff, 0xff, 0xff, 0xd, 0xf, 0x84, 0x15, 0xff, 0xff, 0xff, 0xeb, 0xca, 0x80, 0xbd, 0x40, 0xff, 0xff, 0xff, 0, 0xf, 0x84, 0xf6, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x54, 0xff, 0xff, 0xff, 0x89, 0x85, 0x34, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x34, 0xff, 0xff, 0xff, 0, 0x74, 0x1a, 0x31, 0xd2, 0x8b, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0x39, 0xf6, 0xfd, 0xff, 0xe8, 0x60, 0x70, 0x7, 0, 0x89, 0x85, 0x30, 0xff, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x30, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0x94, 0xe8, 0x79, 0x7a, 0xfe, 0xff, 0x31, 0xdb, 0x8b, 0x55, 0xcc, 0x31, 0xc0, 0xe8, 0x88, 0x4a, 0, 0, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x9f, 0x70, 0xf8, 0xff, 0x83, 0xf8, 0x2, 0x75, 0x6, 0x80, 0x7d, 0xe8, 0, 0x75, 0x2, 0xeb, 0x4b, 0x8b, 0x15, 0x80, 0x39, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x42, 0xb8, 0x3d, 0, 0, 0, 0xe8, 0x9e, 0xbb, 0xfd, 0xff, 0x8b, 0x15, 0x80, 0x39, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xb8, 0x41, 0, 0, 0, 0xe8, 0x6b, 0x70, 0xf8, 0xff, 0x42, 0x39, 0xc2, 0x7e, 0x15, 0xa1, 0x80, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x8d, 0x50, 0x1, 0xb8, 0x41, 0, 0, 0, 0xe8, 0x71, 0xbb, 0xfd, 0xff, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0xef, 0x70, 0x1, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x8b, 0x2b, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100ee881, 0x5)   pushd(0xf0);                          /* push dword 0xf0 */
    II(0x100ee886, 0x5)   calld(sys_check_available_stack_size, 0x774c7); /* call 0x10165d52 */
    II(0x100ee88b, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ee88c, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ee88d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ee88e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ee890, 0x6)   sub(esp, 0xd0);                       /* sub esp, 0xd0 */
    II(0x100ee896, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ee899, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100ee89c, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100ee89f, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x100ee8a2, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x9);   /* mov dword [ebp-0x1c], 0x9 */
    II(0x100ee8a9, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x100ee8ad, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100ee8b1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ee8b3, 0x5)   calld(0x100ecd4d, -0x1b6b);           /* call 0x100ecd4d */
    II(0x100ee8b8, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100ee8bb, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x100ee8bf, 0x2)   jnzd(0x100ee8e8, 0x27);               /* jnz 0x100ee8e8 */
    II(0x100ee8c1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ee8c3, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100ee8c8, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100ee8ca, 0x4)   mov(eax, memd_a32(ds, eax + ebp - 0x2a)); /* mov eax, [eax+ebp-0x2a] */
    II(0x100ee8ce, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ee8d1, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ee8d4, 0x2)   jnzd(0x100ee8dc, 0x6);                /* jnz 0x100ee8dc */
    II(0x100ee8d6, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
    II(0x100ee8da, 0x2)   jmpd(0x100ee8e0, 0x4);                /* jmp 0x100ee8e0 */
l_0x100ee8dc:
    II(0x100ee8dc, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0);     /* mov byte [ebp-0x20], 0x0 */
l_0x100ee8e0:
    II(0x100ee8e0, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x100ee8e3, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x100ee8e6, 0x2)   jmpd(0x100ee8fe, 0x16);               /* jmp 0x100ee8fe */
l_0x100ee8e8:
    II(0x100ee8e8, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0x2);   /* cmp byte [ebp-0x14], 0x2 */
    II(0x100ee8ec, 0x2)   jnzd(0x100ee8f4, 0x6);                /* jnz 0x100ee8f4 */
    II(0x100ee8ee, 0x4)   mov(memb_a32(ss, ebp - 0x2c), 0x1);   /* mov byte [ebp-0x2c], 0x1 */
    II(0x100ee8f2, 0x2)   jmpd(0x100ee8f8, 0x4);                /* jmp 0x100ee8f8 */
l_0x100ee8f4:
    II(0x100ee8f4, 0x4)   mov(memb_a32(ss, ebp - 0x2c), 0);     /* mov byte [ebp-0x2c], 0x0 */
l_0x100ee8f8:
    II(0x100ee8f8, 0x3)   mov(al, memb_a32(ss, ebp - 0x2c));    /* mov al, [ebp-0x2c] */
    II(0x100ee8fb, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
l_0x100ee8fe:
    II(0x100ee8fe, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100ee905, 0x2)   jzd(0x100ee90c, 0x5);                 /* jz 0x100ee90c */
    II(0x100ee907, 0x5)   calld(0x10129753, 0x3ae47);           /* call 0x10129753 */
l_0x100ee90c:
    II(0x100ee90c, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100ee913, 0x2)   jzd(0x100ee937, 0x22);                /* jz 0x100ee937 */
    II(0x100ee915, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100ee919, 0x2)   jnzd(0x100ee921, 0x6);                /* jnz 0x100ee921 */
    II(0x100ee91b, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0x1);   /* mov byte [ebp-0x30], 0x1 */
    II(0x100ee91f, 0x2)   jmpd(0x100ee925, 0x4);                /* jmp 0x100ee925 */
l_0x100ee921:
    II(0x100ee921, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0);     /* mov byte [ebp-0x30], 0x0 */
l_0x100ee925:
    II(0x100ee925, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee927, 0x3)   mov(dl, memb_a32(ss, ebp - 0x30));    /* mov dl, [ebp-0x30] */
    II(0x100ee92a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ee92c, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100ee931, 0x1)   cwde();                               /* cwde */
    II(0x100ee932, 0x5)   calld(0x1012b16c, 0x3c835);           /* call 0x1012b16c */
l_0x100ee937:
    II(0x100ee937, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100ee93b, 0x5)   calld(/* sys */ 0x10165e9b, 0x7755b); /* call 0x10165e9b */
    II(0x100ee940, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100ee943, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100ee946, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100ee949, 0x9)   mov(memw_a32(ds, 0x101b8674), 0x32);  /* mov word [0x101b8674], 0x32 */
    II(0x100ee952, 0x5)   calld(0x100ef348, 0x9f1);             /* call 0x100ef348 */
    II(0x100ee957, 0x1)   cwde();                               /* cwde */
    II(0x100ee958, 0x5)   calld(0x100f3499, 0x4b3c);            /* call 0x100f3499 */
    II(0x100ee95d, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100ee960, 0x4)   or_(memb_a32(ss, ebp - 0x38), 0x1);   /* or byte [ebp-0x38], 0x1 */
    II(0x100ee964, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ee967, 0x5)   calld(my_string_ctor, 0x5317c);       /* call 0x10141ae8 */
    II(0x100ee96c, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100ee96f, 0x4)   and_(memb_a32(ss, ebp - 0x38), -0x2 /* 0xfe */); /* and byte [ebp-0x38], 0xfe */
    II(0x100ee973, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x100ee977, 0x2)   jzd(0x100ee988, 0xf);                 /* jz 0x100ee988 */
    II(0x100ee979, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x100ee97e, 0x5)   calld(0x10075fdc, -0x789a7);          /* call 0x10075fdc */
    II(0x100ee983, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ee986, 0x2)   jzd(0x100ee98d, 0x5);                 /* jz 0x100ee98d */
l_0x100ee988:
    II(0x100ee988, 0x5)   jmpd(0x100eea39, 0xac);               /* jmp 0x100eea39 */
l_0x100ee98d:
    II(0x100ee98d, 0x5)   mov(edx, 0x101c3f00);                 /* mov edx, 0x101c3f00 */
    II(0x100ee992, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ee995, 0x5)   calld(my_string_ctor_char_ptr, 0x530a1); /* call 0x10141a3b */
    II(0x100ee99a, 0x4)   or_(memb_a32(ss, ebp - 0x38), 0x1);   /* or byte [ebp-0x38], 0x1 */
    II(0x100ee99e, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100ee9a1, 0x5)   calld(my_string_ctor, 0x53142);       /* call 0x10141ae8 */
    II(0x100ee9a6, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100ee9a9, 0x4)   and_(memb_a32(ss, ebp - 0x38), -0x2 /* 0xfe */); /* and byte [ebp-0x38], 0xfe */
    II(0x100ee9ad, 0x5)   mov(eax, memd_a32(ds, 0x101c3980));   /* mov eax, [0x101c3980] */
    II(0x100ee9b2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ee9b5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee9b6, 0x5)   mov(eax, 0x101a1fb4);                 /* mov eax, 0x101a1fb4 */ /* "win%i.cam" */
    II(0x100ee9bb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee9bc, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x100ee9c1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee9c2, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100ee9c5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee9c6, 0x5)   calld(0x10142037, 0x5366c);           /* call 0x10142037 */
    II(0x100ee9cb, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100ee9ce, 0x3)   lea(edx, ebp - 0x48);                 /* lea edx, [ebp-0x48] */
    II(0x100ee9d1, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ee9d4, 0x5)   calld(my_string_append_string, 0x532b0); /* call 0x10141c89 */
    II(0x100ee9d9, 0x5)   mov(edx, 0x101a1fbe);                 /* mov edx, 0x101a1fbe */ /* "rt" */
    II(0x100ee9de, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100ee9e1, 0x5)   calld(my_strobj_c_str_v2, -0x6521e);  /* call 0x100897c8 */
    II(0x100ee9e6, 0x5)   calld(my_fopen, 0xa34);               /* call 0x100ef41f */
    II(0x100ee9eb, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100ee9ee, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x100ee9f2, 0x2)   jzd(0x100eea25, 0x31);                /* jz 0x100eea25 */
l_0x100ee9f4:
    II(0x100ee9f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100ee9f7, 0x5)   calld(/* sys */ 0x10171f05, 0x83509); /* call 0x10171f05 */
    II(0x100ee9fc, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100ee9ff, 0x4)   cmp(memd_a32(ss, ebp - 0x54), -0x1 /* 0xff */); /* cmp dword [ebp-0x54], 0xff */
    II(0x100eea03, 0x2)   jzd(0x100eea14, 0xf);                 /* jz 0x100eea14 */
    II(0x100eea05, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eea07, 0x3)   mov(dl, memb_a32(ss, ebp - 0x54));    /* mov dl, [ebp-0x54] */
    II(0x100eea0a, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100eea0d, 0x5)   calld(my_string_append_char, 0x533d8); /* call 0x10141dea */
    II(0x100eea12, 0x2)   jmpd(0x100ee9f4, -0x20);              /* jmp 0x100ee9f4 */
l_0x100eea14:
    II(0x100eea14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100eea17, 0x5)   calld(sys_fclose, 0x8364d);           /* call 0x10172069 */
    II(0x100eea1c, 0x9)   mov(memw_a32(ds, 0x101b8674), 0xa);   /* mov word [0x101b8674], 0xa */
l_0x100eea25:
    II(0x100eea25, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eea27, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100eea2a, 0x5)   calld(my_string_dtor, 0x530fb);       /* call 0x10141b2a */
    II(0x100eea2f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eea31, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100eea34, 0x5)   calld(my_string_dtor, 0x530f1);       /* call 0x10141b2a */
l_0x100eea39:
    II(0x100eea39, 0x4)   or_(memb_a32(ss, ebp - 0x38), 0x1);   /* or byte [ebp-0x38], 0x1 */
    II(0x100eea3d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100eea41, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eea43, 0x6)   mov(edx, memd_a32(ds, eax + 0x101b8676)); /* mov edx, [eax+0x101b8676] */
    II(0x100eea49, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100eea4c, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100eea4f, 0x5)   calld(0x100d67d8, -0x1827c);          /* call 0x100d67d8 */
    II(0x100eea54, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x100eea57, 0x4)   and_(memb_a32(ss, ebp - 0x38), -0x2 /* 0xfe */); /* and byte [ebp-0x38], 0xfe */
    II(0x100eea5b, 0x7)   mov(memb_a32(ds, 0x101c3984), 0x1);   /* mov byte [0x101c3984], 0x1 */
    II(0x100eea62, 0x7)   mov(memb_a32(ds, 0x101c3970), 0);     /* mov byte [0x101c3970], 0x0 */
    II(0x100eea69, 0x7)   mov(memb_a32(ds, 0x101c37d2), 0);     /* mov byte [0x101c37d2], 0x0 */
    II(0x100eea70, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100eea75, 0x5)   calld(0x1013d08a, 0x4e610);           /* call 0x1013d08a */
    II(0x100eea7a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100eea7c, 0x5)   calld(0x100f448c, 0x5a0b);            /* call 0x100f448c */
    II(0x100eea81, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x100eea86, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100eea89, 0x5)   calld(0x100ef318, 0x88a);             /* call 0x100ef318 */
    II(0x100eea8e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100eea93, 0x5)   calld(/* sys */ 0x1016a24c, 0x7b7b4); /* call 0x1016a24c */
    II(0x100eea98, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100eea9d, 0x5)   calld(0x10120d94, 0x322f2);           /* call 0x10120d94 */
    II(0x100eeaa2, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100eeaa7, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100eeaaa, 0x5)   calld(0x100ef2e8, 0x839);             /* call 0x100ef2e8 */
    II(0x100eeaaf, 0x5)   calld(0x100d6124, -0x18990);          /* call 0x100d6124 */
    II(0x100eeab4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eeab6, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100eeab8, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100eeabb, 0x5)   calld(0x100d6adf, -0x17fe1);          /* call 0x100d6adf */
    II(0x100eeac0, 0x6)   lea(edx, ebp - 0x8c);                 /* lea edx, [ebp+0xffffff74] */
    II(0x100eeac6, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100eeac9, 0x5)   calld(0x100d6a11, -0x180bd);          /* call 0x100d6a11 */
    II(0x100eeace, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
    II(0x100eead8, 0x2)   jmpd(0x100eeae6, 0xc);                /* jmp 0x100eeae6 */
l_0x100eeada:
    II(0x100eeada, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100eeae0, 0x6)   inc(memd_a32(ss, ebp - 0x90));        /* inc dword [ebp+0xffffff70] */
l_0x100eeae6:
    II(0x100eeae6, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x90)); /* movsx eax, word [ebp+0xffffff70] */
    II(0x100eeaed, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100eeaf0, 0x2)   jged(0x100eeb04, 0x12);               /* jge 0x100eeb04 */
    II(0x100eeaf2, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x90)); /* movsx eax, word [ebp+0xffffff70] */
    II(0x100eeaf9, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eeafb, 0x7)   mov(memw_a32(ds, eax + ebp - 0x28), 0); /* mov word [eax+ebp-0x28], 0x0 */
    II(0x100eeb02, 0x2)   jmpd(0x100eeada, -0x2a);              /* jmp 0x100eeada */
l_0x100eeb04:
    II(0x100eeb04, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
    II(0x100eeb0e, 0x2)   jmpd(0x100eeb1c, 0xc);                /* jmp 0x100eeb1c */
l_0x100eeb10:
    II(0x100eeb10, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100eeb16, 0x6)   inc(memd_a32(ss, ebp - 0x90));        /* inc dword [ebp+0xffffff70] */
l_0x100eeb1c:
    II(0x100eeb1c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100eeb20, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x90)); /* movsx edx, word [ebp+0xffffff70] */
    II(0x100eeb27, 0x1)   dec(eax);                             /* dec eax */
    II(0x100eeb28, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100eeb2a, 0x6)   jged(0x100eebd5, 0xa5);               /* jge dword 0x100eebd5 */
    II(0x100eeb30, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100eeb36, 0x1)   inc(eax);                             /* inc eax */
    II(0x100eeb37, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
    II(0x100eeb3d, 0x2)   jmpd(0x100eeb4b, 0xc);                /* jmp 0x100eeb4b */
l_0x100eeb3f:
    II(0x100eeb3f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100eeb45, 0x6)   inc(memd_a32(ss, ebp - 0x94));        /* inc dword [ebp+0xffffff6c] */
l_0x100eeb4b:
    II(0x100eeb4b, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100eeb51, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100eeb55, 0x2)   jged(0x100eebd0, 0x79);               /* jge 0x100eebd0 */
    II(0x100eeb57, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x100eeb5e, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eeb60, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100eeb63, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100eeb65, 0x3)   movsx(edx, memw_a32(ds, edx));        /* movsx edx, word [edx] */
    II(0x100eeb68, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x90)); /* movsx eax, word [ebp+0xffffff70] */
    II(0x100eeb6f, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eeb71, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100eeb74, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100eeb77, 0x5)   calld(0x100ec365, -0x2817);           /* call 0x100ec365 */
    II(0x100eeb7c, 0x1)   cwde();                               /* cwde */
    II(0x100eeb7d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100eeb7f, 0x2)   jged(0x100eebcb, 0x4a);               /* jge 0x100eebcb */
    II(0x100eeb81, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x100eeb88, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eeb8a, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100eeb8d, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100eeb90, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
    II(0x100eeb96, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x90)); /* movsx eax, word [ebp+0xffffff70] */
    II(0x100eeb9d, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eeb9f, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100eeba2, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x94)); /* movsx edx, word [ebp+0xffffff6c] */
    II(0x100eeba9, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100eebab, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x100eebae, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100eebb1, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x100eebb4, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x90)); /* movsx eax, word [ebp+0xffffff70] */
    II(0x100eebbb, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eebbd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100eebc0, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100eebc2, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100eebc8, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
l_0x100eebcb:
    II(0x100eebcb, 0x5)   jmpd(0x100eeb3f, -0x91);              /* jmp 0x100eeb3f */
l_0x100eebd0:
    II(0x100eebd0, 0x5)   jmpd(0x100eeb10, -0xc5);              /* jmp 0x100eeb10 */
l_0x100eebd5:
    II(0x100eebd5, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
    II(0x100eebdf, 0x2)   jmpd(0x100eebed, 0xc);                /* jmp 0x100eebed */
l_0x100eebe1:
    II(0x100eebe1, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100eebe7, 0x6)   inc(memd_a32(ss, ebp - 0x90));        /* inc dword [ebp+0xffffff70] */
l_0x100eebed:
    II(0x100eebed, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100eebf3, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100eebf7, 0x2)   jged(0x100eec18, 0x1f);               /* jge 0x100eec18 */
    II(0x100eebf9, 0x6)   mov(edx, memd_a32(ss, ebp - 0x90));   /* mov edx, [ebp+0xffffff70] */
    II(0x100eebff, 0x1)   inc(edx);                             /* inc edx */
    II(0x100eec00, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x90)); /* movsx eax, word [ebp+0xffffff70] */
    II(0x100eec07, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eec09, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100eec0c, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100eec0f, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eec11, 0x5)   mov(memw_a32(ds, eax + ebp - 0x28), dx); /* mov [eax+ebp-0x28], dx */
    II(0x100eec16, 0x2)   jmpd(0x100eebe1, -0x37);              /* jmp 0x100eebe1 */
l_0x100eec18:
    II(0x100eec18, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x100eec1c, 0x2)   jzd(0x100eec4d, 0x2f);                /* jz 0x100eec4d */
    II(0x100eec1e, 0x5)   calld(0x100d5470, -0x197b3);          /* call 0x100d5470 */
    II(0x100eec23, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100eec26, 0x5)   mov(ebx, 0x464);                      /* mov ebx, 0x464 */
    II(0x100eec2b, 0x5)   mov(edx, 0x464);                      /* mov edx, 0x464 */
    II(0x100eec30, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100eec35, 0x5)   calld(0x1013daea, 0x4eeb0);           /* call 0x1013daea */
    II(0x100eec3a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100eec3c, 0x5)   mov(edx, 0x6b1);                      /* mov edx, 0x6b1 */
    II(0x100eec41, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100eec46, 0x5)   calld(0x1013cf8e, 0x4e343);           /* call 0x1013cf8e */
    II(0x100eec4b, 0x2)   jmpd(0x100eec5e, 0x11);               /* jmp 0x100eec5e */
l_0x100eec4d:
    II(0x100eec4d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100eec4f, 0x5)   mov(edx, 0x6b2);                      /* mov edx, 0x6b2 */
    II(0x100eec54, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100eec59, 0x5)   calld(0x1013cf8e, 0x4e330);           /* call 0x1013cf8e */
l_0x100eec5e:
    II(0x100eec5e, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100eec61, 0x5)   calld(0x100eaef0, -0x3d76);           /* call 0x100eaef0 */
    II(0x100eec66, 0x1)   cwde();                               /* cwde */
    II(0x100eec67, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100eec69, 0x2)   jled(0x100eeca3, 0x38);               /* jle 0x100eeca3 */
    II(0x100eec6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7a));   /* mov eax, [ebp-0x7a] */
    II(0x100eec6e, 0x5)   calld(sys_display_draw_0, 0x78811);   /* call 0x10167484 */
    II(0x100eec73, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100eec75, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eec76, 0x5)   mov(eax, 0x190);                      /* mov eax, 0x190 */
    II(0x100eec7b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eec7c, 0x5)   mov(eax, 0x258);                      /* mov eax, 0x258 */
    II(0x100eec81, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eec82, 0x5)   mov(ecx, 0x14);                       /* mov ecx, 0x14 */
    II(0x100eec87, 0x5)   mov(ebx, 0x14);                       /* mov ebx, 0x14 */
    II(0x100eec8c, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100eec8f, 0x5)   calld(my_strobj_c_str_v2, -0x654cc);  /* call 0x100897c8 */
    II(0x100eec94, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100eec96, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x100eec9c, 0x5)   calld(0x100ed950, -0x1351);           /* call 0x100ed950 */
    II(0x100eeca1, 0x2)   jmpd(0x100eecba, 0x17);               /* jmp 0x100eecba */
l_0x100eeca3:
    II(0x100eeca3, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100eeca5, 0x3)   mov(cl, memb_a32(ss, ebp - 0x4));     /* mov cl, [ebp-0x4] */
    II(0x100eeca8, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100eecac, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100eecaf, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x100eecb5, 0x5)   calld(0x100eda52, -0x1268);           /* call 0x100eda52 */
l_0x100eecba:
    II(0x100eecba, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100eecbf, 0x5)   calld(/* sys */ 0x1016a24c, 0x7b588); /* call 0x1016a24c */
    II(0x100eecc4, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x100eecc9, 0x5)   calld(sys_new, 0x77132);              /* call 0x10165e00 */
    II(0x100eecce, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
//    II(0x100eecd4, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x100eecda, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
    II(0x100eece0, 0x7)   cmp(memd_a32(ss, ebp - 0xa0), 0);     /* cmp dword [ebp+0xffffff60], 0x0 */
    II(0x100eece7, 0x2)   jzd(0x100eed1d, 0x34);                /* jz 0x100eed1d */
    II(0x100eece9, 0x5)   mov(eax, 0x1ca);                      /* mov eax, 0x1ca */
    II(0x100eecee, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eecef, 0x5)   mov(ecx, 0x125);                      /* mov ecx, 0x125 */
    II(0x100eecf4, 0x5)   mov(ebx, 0x15b);                      /* mov ebx, 0x15b */
    II(0x100eecf9, 0x5)   mov(edx, 0x15a);                      /* mov edx, 0x15a */
    II(0x100eecfe, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x100eed04, 0x5)   calld(my_ctor_c17, -0x208fa);         /* call 0x100ce40f */
    II(0x100eed09, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
//    II(0x100eed0f, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x100eed15, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x100eed1b, 0x2)   jmpd(0x100eed29, 0xc);                /* jmp 0x100eed29 */
l_0x100eed1d:
    II(0x100eed1d, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x100eed23, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
l_0x100eed29:
    II(0x100eed29, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x100eed2f, 0x6)   mov(memd_a32(ss, ebp - 0xac), eax);   /* mov [ebp+0xffffff54], eax */
    II(0x100eed35, 0x6)   lea(eax, ebp - 0xb0);                 /* lea eax, [ebp+0xffffff50] */
    II(0x100eed3b, 0x5)   calld(0x100d5224, -0x19b1c);          /* call 0x100d5224 */
    II(0x100eed40, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eed41, 0x6)   lea(eax, ebp - 0xb4);                 /* lea eax, [ebp+0xffffff4c] */
    II(0x100eed47, 0x5)   calld(0x100d5250, -0x19afc);          /* call 0x100d5250 */
    II(0x100eed4c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eed4d, 0x6)   lea(eax, ebp - 0xb8);                 /* lea eax, [ebp+0xffffff48] */
    II(0x100eed53, 0x5)   calld(0x100d527c, -0x19adc);          /* call 0x100d527c */
    II(0x100eed58, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eed59, 0x6)   lea(eax, ebp - 0xbc);                 /* lea eax, [ebp+0xffffff44] */
    II(0x100eed5f, 0x5)   calld(0x100d52a8, -0x19abc);          /* call 0x100d52a8 */
    II(0x100eed64, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eed65, 0x5)   calld(0x100d52d4, -0x19a96);          /* call 0x100d52d4 */
    II(0x100eed6a, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100eed6d, 0x5)   calld(0x100d52f8, -0x19a7a);          /* call 0x100d52f8 */
    II(0x100eed72, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100eed75, 0x5)   mov(edx, 0x101a1fc1);                 /* mov edx, 0x101a1fc1 */ /* "OK" */
    II(0x100eed7a, 0x6)   mov(eax, memd_a32(ss, ebp - 0xac));   /* mov eax, [ebp+0xffffff54] */
    II(0x100eed80, 0x5)   calld(0x100cef64, -0x1fe21);          /* call 0x100cef64 */
    II(0x100eed85, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100eed8a, 0x5)   calld(/* sys */ 0x1016a24c, 0x7b4bd); /* call 0x1016a24c */
    II(0x100eed8f, 0x5)   mov(edx, 0x1b);                       /* mov edx, 0x1b */
    II(0x100eed94, 0x6)   mov(eax, memd_a32(ss, ebp - 0xac));   /* mov eax, [ebp+0xffffff54] */
    II(0x100eed9a, 0x5)   calld(0x100d5134, -0x19c6b);          /* call 0x100d5134 */
    II(0x100eed9f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x7a));   /* mov edx, [ebp-0x7a] */
    II(0x100eeda2, 0x6)   mov(eax, memd_a32(ss, ebp - 0xac));   /* mov eax, [ebp+0xffffff54] */
    II(0x100eeda8, 0x5)   calld(0x100cf85c, -0x1f551);          /* call 0x100cf85c */
    II(0x100eedad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7a));   /* mov eax, [ebp-0x7a] */
    II(0x100eedb0, 0x5)   calld(sys_display_draw_0, 0x786cf);   /* call 0x10167484 */
    II(0x100eedb5, 0x7)   mov(memb_a32(ss, ebp - 0xc0), 0);     /* mov byte [ebp+0xffffff40], 0x0 */
    II(0x100eedbc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eedbe, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100eedc3, 0x5)   calld(0x10076630, -0x78798);          /* call 0x10076630 */
    II(0x100eedc8, 0x5)   calld(0x101482f4, 0x59527);           /* call 0x101482f4 */
    II(0x100eedcd, 0x6)   mov(memd_a32(ss, ebp - 0xc4), eax);   /* mov [ebp+0xffffff3c], eax */
l_0x100eedd3:
    II(0x100eedd3, 0x5)   calld(/* sys */ 0x1016b208, 0x7c430); /* call 0x1016b208 */
    II(0x100eedd8, 0x6)   mov(memd_a32(ss, ebp - 0xc8), eax);   /* mov [ebp+0xffffff38], eax */
    II(0x100eedde, 0x5)   jmpd(0x100eee9c, 0xb9);               /* jmp 0x100eee9c */
l_0x100eede3:
    II(0x100eede3, 0x7)   mov(memb_a32(ss, ebp - 0xc0), 0x1);   /* mov byte [ebp+0xffffff40], 0x1 */
    II(0x100eedea, 0x5)   jmpd(0x100eeed0, 0xe1);               /* jmp 0x100eeed0 */
l_0x100eedef:
    II(0x100eedef, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100eedf3, 0x1)   inc(eax);                             /* inc eax */
    II(0x100eedf4, 0x5)   mov(ebx, 0x9);                        /* mov ebx, 0x9 */
    II(0x100eedf9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eedfb, 0x2)   div(ebx);                             /* div ebx */
    II(0x100eedfd, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x100eee00, 0x5)   calld(0x100d533c, -0x19ac9);          /* call 0x100d533c */
    II(0x100eee05, 0x1)   cwde();                               /* cwde */
    II(0x100eee06, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eee07, 0x5)   calld(0x100d5360, -0x19aac);          /* call 0x100d5360 */
    II(0x100eee0c, 0x1)   cwde();                               /* cwde */
    II(0x100eee0d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eee0e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100eee10, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eee11, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100eee16, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x7c)); /* movsx ebx, word [ebp-0x7c] */
    II(0x100eee1a, 0x6)   lea(edx, ebp - 0x8c);                 /* lea edx, [ebp+0xffffff74] */
    II(0x100eee20, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100eee24, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100eee26, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8676)); /* mov eax, [eax+0x101b8676] */
    II(0x100eee2c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100eee2f, 0x5)   calld(0x100e8c51, -0x61e3);           /* call 0x100e8c51 */
    II(0x100eee34, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100eee37, 0x5)   calld(0x100eaef0, -0x3f4c);           /* call 0x100eaef0 */
    II(0x100eee3c, 0x1)   cwde();                               /* cwde */
    II(0x100eee3d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100eee3f, 0x2)   jled(0x100eee79, 0x38);               /* jle 0x100eee79 */
    II(0x100eee41, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7a));   /* mov eax, [ebp-0x7a] */
    II(0x100eee44, 0x5)   calld(sys_display_draw_0, 0x7863b);   /* call 0x10167484 */
    II(0x100eee49, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100eee4b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eee4c, 0x5)   mov(eax, 0x190);                      /* mov eax, 0x190 */
    II(0x100eee51, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eee52, 0x5)   mov(eax, 0x258);                      /* mov eax, 0x258 */
    II(0x100eee57, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eee58, 0x5)   mov(ecx, 0x14);                       /* mov ecx, 0x14 */
    II(0x100eee5d, 0x5)   mov(ebx, 0x14);                       /* mov ebx, 0x14 */
    II(0x100eee62, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100eee65, 0x5)   calld(my_strobj_c_str_v2, -0x656a2);  /* call 0x100897c8 */
    II(0x100eee6a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100eee6c, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x100eee72, 0x5)   calld(0x100ed950, -0x1527);           /* call 0x100ed950 */
    II(0x100eee77, 0x2)   jmpd(0x100eee90, 0x17);               /* jmp 0x100eee90 */
l_0x100eee79:
    II(0x100eee79, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100eee7b, 0x3)   mov(cl, memb_a32(ss, ebp - 0x4));     /* mov cl, [ebp-0x4] */
    II(0x100eee7e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100eee82, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100eee85, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x100eee8b, 0x5)   calld(0x100eda52, -0x143e);           /* call 0x100eda52 */
l_0x100eee90:
    II(0x100eee90, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7a));   /* mov eax, [ebp-0x7a] */
    II(0x100eee93, 0x5)   calld(sys_display_draw_0, 0x785ec);   /* call 0x10167484 */
    II(0x100eee98, 0x2)   jmpd(0x100eeed0, 0x36);               /* jmp 0x100eeed0 */
l_0x100eee9a:
    II(0x100eee9a, 0x2)   jmpd(0x100eeed0, 0x34);               /* jmp 0x100eeed0 */
l_0x100eee9c:
    II(0x100eee9c, 0x7)   cmp(memd_a32(ss, ebp - 0xc8), 0x1b);  /* cmp dword [ebp+0xffffff38], 0x1b */
    II(0x100eeea3, 0x2)   jbd(0x100eeec1, 0x1c);                /* jb 0x100eeec1 */
    II(0x100eeea5, 0x7)   cmp(memd_a32(ss, ebp - 0xc8), 0x1b);  /* cmp dword [ebp+0xffffff38], 0x1b */
    II(0x100eeeac, 0x6)   jbed(0x100eede3, -0xcf);              /* jbe dword 0x100eede3 */
    II(0x100eeeb2, 0x7)   cmp(memd_a32(ss, ebp - 0xc8), 0x20);  /* cmp dword [ebp+0xffffff38], 0x20 */
    II(0x100eeeb9, 0x6)   jzd(0x100eedef, -0xd0);               /* jz dword 0x100eedef */
    II(0x100eeebf, 0x2)   jmpd(0x100eee9a, -0x27);              /* jmp 0x100eee9a */
l_0x100eeec1:
    II(0x100eeec1, 0x7)   cmp(memd_a32(ss, ebp - 0xc8), 0xd);   /* cmp dword [ebp+0xffffff38], 0xd */
    II(0x100eeec8, 0x6)   jzd(0x100eede3, -0xeb);               /* jz dword 0x100eede3 */
    II(0x100eeece, 0x2)   jmpd(0x100eee9a, -0x36);              /* jmp 0x100eee9a */
l_0x100eeed0:
    II(0x100eeed0, 0x7)   cmp(memb_a32(ss, ebp - 0xc0), 0);     /* cmp byte [ebp+0xffffff40], 0x0 */
    II(0x100eeed7, 0x6)   jzd(0x100eedd3, -0x10a);              /* jz dword 0x100eedd3 */
    II(0x100eeedd, 0x6)   mov(eax, memd_a32(ss, ebp - 0xac));   /* mov eax, [ebp+0xffffff54] */
    II(0x100eeee3, 0x6)   mov(memd_a32(ss, ebp - 0xcc), eax);   /* mov [ebp+0xffffff34], eax */
    II(0x100eeee9, 0x7)   cmp(memd_a32(ss, ebp - 0xcc), 0);     /* cmp dword [ebp+0xffffff34], 0x0 */
    II(0x100eeef0, 0x2)   jzd(0x100eef0c, 0x1a);                /* jz 0x100eef0c */
    II(0x100eeef2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eeef4, 0x6)   mov(eax, memd_a32(ss, ebp - 0xcc));   /* mov eax, [ebp+0xffffff34] */
    II(0x100eeefa, 0x5)   calld(my_dtor_d2, -0x209c7);          /* call 0x100ce538 */
    II(0x100eeeff, 0x5)   calld(sys_delete, 0x77060);           /* call 0x10165f64 */
    II(0x100eef04, 0x6)   mov(memd_a32(ss, ebp - 0xd0), eax);   /* mov [ebp+0xffffff30], eax */
    II(0x100eef0a, 0x2)   jmpd(0x100eef16, 0xa);                /* jmp 0x100eef16 */
l_0x100eef0c:
    II(0x100eef0c, 0xa)   mov(memd_a32(ss, ebp - 0xd0), 0);     /* mov dword [ebp+0xffffff30], 0x0 */
l_0x100eef16:
    II(0x100eef16, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eef18, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100eef1b, 0x5)   calld(0x100d6999, -0x18587);          /* call 0x100d6999 */
    II(0x100eef20, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100eef22, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x100eef25, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100eef27, 0x5)   calld(0x100f39b4, 0x4a88);            /* call 0x100f39b4 */
    II(0x100eef2c, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
    II(0x100eef33, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x100eef38, 0x5)   calld(0x10075fdc, -0x78f61);          /* call 0x10075fdc */
    II(0x100eef3d, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100eef40, 0x2)   jnzd(0x100eef48, 0x6);                /* jnz 0x100eef48 */
    II(0x100eef42, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x100eef46, 0x2)   jnzd(0x100eef4a, 0x2);                /* jnz 0x100eef4a */
l_0x100eef48:
    II(0x100eef48, 0x2)   jmpd(0x100eef95, 0x4b);               /* jmp 0x100eef95 */
l_0x100eef4a:
    II(0x100eef4a, 0x6)   mov(edx, memd_a32(ds, 0x101c3980));   /* mov edx, [0x101c3980] */
    II(0x100eef50, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100eef53, 0x1)   inc(edx);                             /* inc edx */
    II(0x100eef54, 0x5)   mov(eax, 0x3d);                       /* mov eax, 0x3d */
    II(0x100eef59, 0x5)   calld(0x100caafc, -0x24462);          /* call 0x100caafc */
    II(0x100eef5e, 0x6)   mov(edx, memd_a32(ds, 0x101c3980));   /* mov edx, [0x101c3980] */
    II(0x100eef64, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100eef67, 0x5)   mov(eax, 0x41);                       /* mov eax, 0x41 */
    II(0x100eef6c, 0x5)   calld(0x10075fdc, -0x78f95);          /* call 0x10075fdc */
    II(0x100eef71, 0x1)   inc(edx);                             /* inc edx */
    II(0x100eef72, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100eef74, 0x2)   jled(0x100eef8b, 0x15);               /* jle 0x100eef8b */
    II(0x100eef76, 0x5)   mov(eax, memd_a32(ds, 0x101c3980));   /* mov eax, [0x101c3980] */
    II(0x100eef7b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100eef7e, 0x3)   lea(edx, eax + 0x1);                  /* lea edx, [eax+0x1] */
    II(0x100eef81, 0x5)   mov(eax, 0x41);                       /* mov eax, 0x41 */
    II(0x100eef86, 0x5)   calld(0x100caafc, -0x2448f);          /* call 0x100caafc */
l_0x100eef8b:
    II(0x100eef8b, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x100eef90, 0x5)   calld(0x10106084, 0x170ef);           /* call 0x10106084 */
l_0x100eef95:
    II(0x100eef95, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eef97, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100eef9a, 0x5)   calld(my_string_dtor, 0x52b8b);       /* call 0x10141b2a */
    II(0x100eef9f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100eefa1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100eefa2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100eefa3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100eefa4, 0x1)   retd();                               /* ret */
FUNC_END

