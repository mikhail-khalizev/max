FUNC_BEGIN(0x101299ef, 0x6a1a11934f8afafe, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x59, 0xc3, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0xc6, 0x45, 0xf8, 0, 0xe8, 0xdd, 0xdb, 0xff, 0xff, 0xc7, 0x45, 0xf0, 0x4, 0, 0, 0, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0x74, 0x38, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x1c, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xd0, 0x13, 0xb8, 0xb4, 0x35, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x1a, 0x19, 0xf6, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x4, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0xbe, 0x80, 0x7d, 0xf8, 0, 0x74, 0x9, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x75, 0x5, 0xe9, 0x2d, 0x1, 0, 0, 0xe8, 0x8e, 0xf, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xa3, 0xf, 0xfa, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x94, 0x83, 0x1a, 0x10, 0xe8, 0x96, 0xc2, 0xfe, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xfd, 0x72, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0, 0x74, 0x9, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x75, 0x5, 0xe9, 0xea, 0, 0, 0, 0xe8, 0x3d, 0xdb, 0xff, 0xff, 0x31, 0xc0, 0xe8, 0x47, 0x74, 0xfd, 0xff, 0xe8, 0x2b, 0xd, 0xfc, 0xff, 0xc6, 0x45, 0xf8, 0, 0xc7, 0x45, 0xf0, 0x4, 0, 0, 0, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0x74, 0x38, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x1c, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xd0, 0x13, 0xb8, 0xb4, 0x35, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x6a, 0x18, 0xf6, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x4, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0xbe, 0xe8, 0xfa, 0x16, 0x4, 0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0x1b, 0x74, 0x9, 0x81, 0x7d, 0xec, 0x2d, 0x1, 0, 0, 0x75, 0x2, 0xeb, 0x9, 0x81, 0x7d, 0xec, 0x44, 0x1, 0, 0, 0x75, 0x47, 0x83, 0x7d, 0xec, 0x1b, 0x75, 0x9, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0xe, 0xeb, 0x19, 0x81, 0x7d, 0xec, 0x2d, 0x1, 0, 0, 0x75, 0x9, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0xeb, 0x7, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0xf, 0x31, 0xdb, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xb8, 0x2a, 0, 0, 0, 0xe8, 0x2e, 0xed, 0xff, 0xff, 0xc6, 0x45, 0xfc, 0x6, 0xe9, 0x48, 0x1, 0, 0, 0x83, 0x7d, 0xec, 0x3f, 0x75, 0x18, 0xe8, 0xef, 0xb2, 0xfa, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xba, 0x26, 0, 0, 0, 0xb8, 0x10, 0, 0, 0, 0xe8, 0x70, 0xbf, 0xfd, 0xff, 0xe9, 0x2, 0xff, 0xff, 0xff, 0xe8, 0xd2, 0xc4, 0xfe, 0xff, 0xc7, 0x45, 0xf0, 0x4, 0, 0, 0, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0x74, 0x54, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x38, 0xf, 0xbf, 0x55, 0xf0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0xfd, 0x1d, 0xfd, 0xff, 0x88, 0x45, 0xf4, 0x80, 0x7d, 0xf4, 0, 0x74, 0x1e, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xd0, 0x13, 0xb8, 0xb4, 0x35, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x6, 0x2f, 0xf7, 0xff, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xfc, 0xe9, 0xbd, 0, 0, 0, 0xeb, 0xa2, 0xc7, 0x45, 0xf0, 0x4, 0, 0, 0, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0xf, 0x84, 0x98, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0xf, 0x85, 0x75, 0, 0, 0, 0xc7, 0x45, 0xe8, 0x4, 0, 0, 0, 0xff, 0x4d, 0xe8, 0x66, 0x83, 0x7d, 0xe8, 0xff, 0x74, 0x64, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xe8, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xe8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x74, 0x2, 0xeb, 0x3d, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xf0, 0xe8, 0x5e, 0x1d, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x2c, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xd0, 0x13, 0xb8, 0xb4, 0x35, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x6c, 0x2e, 0xf7, 0xff, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x13, 0xba, 0xb4, 0x35, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x59, 0x2e, 0xf7, 0xff, 0xc6, 0x45, 0xfc, 0x5, 0xeb, 0x15, 0xeb, 0x92, 0xe9, 0x5a, 0xff, 0xff, 0xff, 0xa1, 0x28, 0x56, 0x1c, 0x10, 0xe8, 0x9, 0xc2, 0x3, 0, 0xc6, 0x45, 0xfc, 0, 0x8a, 0x45, 0xfc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101299ef, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x101299f4, 0x5)   calld(sys_check_available_stack_size, 0x3c359); /* call 0x10165d52 */
    II(0x101299f9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101299fa, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101299fb, 0x1)   pushd(edx);                           /* push edx */
    II(0x101299fc, 0x1)   pushd(esi);                           /* push esi */
    II(0x101299fd, 0x1)   pushd(edi);                           /* push edi */
    II(0x101299fe, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101299ff, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10129a01, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x10129a07, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10129a0b, 0x5)   calld(0x101275ed, -0x2423);           /* call 0x101275ed */
    II(0x10129a10, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x4);   /* mov dword [ebp-0x10], 0x4 */
l_0x10129a17:
    II(0x10129a17, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x10129a1a, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x10129a1f, 0x2)   jzd(0x10129a59, 0x38);                /* jz 0x10129a59 */
    II(0x10129a21, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10129a25, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10129a2b, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10129a31, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10129a36, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10129a39, 0x2)   jnzd(0x10129a57, 0x1c);               /* jnz 0x10129a57 */
    II(0x10129a3b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10129a3f, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x10129a42, 0x5)   mov(eax, 0x101c35b4);                 /* mov eax, 0x101c35b4 */
    II(0x10129a47, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10129a49, 0x5)   calld(my_2_get_count, -0x9e6e6);      /* call 0x1008b368 */
    II(0x10129a4e, 0x1)   cwde();                               /* cwde */
    II(0x10129a4f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10129a51, 0x2)   jnzd(0x10129a57, 0x4);                /* jnz 0x10129a57 */
    II(0x10129a53, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x10129a57:
    II(0x10129a57, 0x2)   jmpd(0x10129a17, -0x42);              /* jmp 0x10129a17 */
l_0x10129a59:
    II(0x10129a59, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10129a5d, 0x2)   jzd(0x10129a68, 0x9);                 /* jz 0x10129a68 */
    II(0x10129a5f, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x10129a66, 0x2)   jnzd(0x10129a6d, 0x5);                /* jnz 0x10129a6d */
l_0x10129a68:
    II(0x10129a68, 0x5)   jmpd(0x10129b9a, 0x12d);              /* jmp 0x10129b9a */
l_0x10129a6d:
    II(0x10129a6d, 0x5)   calld(0x100caa00, -0x5f072);          /* call 0x100caa00 */
    II(0x10129a72, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10129a77, 0x1)   pushd(eax);                           /* push eax */
    II(0x10129a78, 0x5)   calld(0x100caa20, -0x5f05d);          /* call 0x100caa20 */
    II(0x10129a7d, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10129a7f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10129a81, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10129a83, 0x5)   mov(eax, 0x101a8394);                 /* mov eax, 0x101a8394 */ /* "Waiting for remote player\nto select starting location..." */
    II(0x10129a88, 0x5)   calld(0x10115d23, -0x13d6a);          /* call 0x10115d23 */
    II(0x10129a8d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10129a92, 0x5)   calld(0x10120d94, -0x8d03);           /* call 0x10120d94 */
l_0x10129a97:
    II(0x10129a97, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10129a9b, 0x2)   jzd(0x10129aa6, 0x9);                 /* jz 0x10129aa6 */
    II(0x10129a9d, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x10129aa4, 0x2)   jnzd(0x10129aab, 0x5);                /* jnz 0x10129aab */
l_0x10129aa6:
    II(0x10129aa6, 0x5)   jmpd(0x10129b95, 0xea);               /* jmp 0x10129b95 */
l_0x10129aab:
    II(0x10129aab, 0x5)   calld(0x101275ed, -0x24c3);           /* call 0x101275ed */
    II(0x10129ab0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10129ab2, 0x5)   calld(0x10100efe, -0x28bb9);          /* call 0x10100efe */
    II(0x10129ab7, 0x5)   calld(0x100ea7e7, -0x3f2d5);          /* call 0x100ea7e7 */
    II(0x10129abc, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10129ac0, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x4);   /* mov dword [ebp-0x10], 0x4 */
l_0x10129ac7:
    II(0x10129ac7, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x10129aca, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x10129acf, 0x2)   jzd(0x10129b09, 0x38);                /* jz 0x10129b09 */
    II(0x10129ad1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10129ad5, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10129adb, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10129ae1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10129ae6, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10129ae9, 0x2)   jnzd(0x10129b07, 0x1c);               /* jnz 0x10129b07 */
    II(0x10129aeb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10129aef, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x10129af2, 0x5)   mov(eax, 0x101c35b4);                 /* mov eax, 0x101c35b4 */
    II(0x10129af7, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10129af9, 0x5)   calld(my_2_get_count, -0x9e796);      /* call 0x1008b368 */
    II(0x10129afe, 0x1)   cwde();                               /* cwde */
    II(0x10129aff, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10129b01, 0x2)   jnzd(0x10129b07, 0x4);                /* jnz 0x10129b07 */
    II(0x10129b03, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x10129b07:
    II(0x10129b07, 0x2)   jmpd(0x10129ac7, -0x42);              /* jmp 0x10129ac7 */
l_0x10129b09:
    II(0x10129b09, 0x5)   calld(/* sys */ 0x1016b208, 0x416fa); /* call 0x1016b208 */
    II(0x10129b0e, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10129b11, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0x1b);  /* cmp dword [ebp-0x14], 0x1b */
    II(0x10129b15, 0x2)   jzd(0x10129b20, 0x9);                 /* jz 0x10129b20 */
    II(0x10129b17, 0x7)   cmp(memd_a32(ss, ebp - 0x14), 0x12d); /* cmp dword [ebp-0x14], 0x12d */
    II(0x10129b1e, 0x2)   jnzd(0x10129b22, 0x2);                /* jnz 0x10129b22 */
l_0x10129b20:
    II(0x10129b20, 0x2)   jmpd(0x10129b2b, 0x9);                /* jmp 0x10129b2b */
l_0x10129b22:
    II(0x10129b22, 0x7)   cmp(memd_a32(ss, ebp - 0x14), 0x144); /* cmp dword [ebp-0x14], 0x144 */
    II(0x10129b29, 0x2)   jnzd(0x10129b72, 0x47);               /* jnz 0x10129b72 */
l_0x10129b2b:
    II(0x10129b2b, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0x1b);  /* cmp dword [ebp-0x14], 0x1b */
    II(0x10129b2f, 0x2)   jnzd(0x10129b3a, 0x9);                /* jnz 0x10129b3a */
    II(0x10129b31, 0x7)   mov(memb_a32(ds, 0x101c391e), 0xe);   /* mov byte [0x101c391e], 0xe */
    II(0x10129b38, 0x2)   jmpd(0x10129b53, 0x19);               /* jmp 0x10129b53 */
l_0x10129b3a:
    II(0x10129b3a, 0x7)   cmp(memd_a32(ss, ebp - 0x14), 0x12d); /* cmp dword [ebp-0x14], 0x12d */
    II(0x10129b41, 0x2)   jnzd(0x10129b4c, 0x9);                /* jnz 0x10129b4c */
    II(0x10129b43, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
    II(0x10129b4a, 0x2)   jmpd(0x10129b53, 0x7);                /* jmp 0x10129b53 */
l_0x10129b4c:
    II(0x10129b4c, 0x7)   mov(memb_a32(ds, 0x101c391e), 0xf);   /* mov byte [0x101c391e], 0xf */
l_0x10129b53:
    II(0x10129b53, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10129b55, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10129b57, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10129b5c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10129b5f, 0x5)   mov(eax, 0x2a);                       /* mov eax, 0x2a */
    II(0x10129b64, 0x5)   calld(0x10128897, -0x12d2);           /* call 0x10128897 */
    II(0x10129b69, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x6);    /* mov byte [ebp-0x4], 0x6 */
    II(0x10129b6d, 0x5)   jmpd(0x10129cba, 0x148);              /* jmp 0x10129cba */
l_0x10129b72:
    II(0x10129b72, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0x3f);  /* cmp dword [ebp-0x14], 0x3f */
    II(0x10129b76, 0x2)   jnzd(0x10129b90, 0x18);               /* jnz 0x10129b90 */
    II(0x10129b78, 0x5)   calld(0x100d4e6c, -0x54d11);          /* call 0x100d4e6c */
    II(0x10129b7d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10129b7f, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10129b81, 0x5)   mov(edx, 0x26);                       /* mov edx, 0x26 */
    II(0x10129b86, 0x5)   mov(eax, 0x10);                       /* mov eax, 0x10 */
    II(0x10129b8b, 0x5)   calld(0x10105b00, -0x24090);          /* call 0x10105b00 */
l_0x10129b90:
    II(0x10129b90, 0x5)   jmpd(0x10129a97, -0xfe);              /* jmp 0x10129a97 */
l_0x10129b95:
    II(0x10129b95, 0x5)   calld(0x1011606c, -0x13b2e);          /* call 0x1011606c */
l_0x10129b9a:
    II(0x10129b9a, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x4);   /* mov dword [ebp-0x10], 0x4 */
l_0x10129ba1:
    II(0x10129ba1, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x10129ba4, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x10129ba9, 0x2)   jzd(0x10129bff, 0x54);                /* jz 0x10129bff */
    II(0x10129bab, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10129baf, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10129bb5, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10129bbb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10129bc0, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10129bc3, 0x2)   jnzd(0x10129bfd, 0x38);               /* jnz 0x10129bfd */
    II(0x10129bc5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10129bc9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10129bcb, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10129bd0, 0x1)   cwde();                               /* cwde */
    II(0x10129bd1, 0x5)   calld(0x100fb9d3, -0x2e203);          /* call 0x100fb9d3 */
    II(0x10129bd6, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x10129bd9, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x10129bdd, 0x2)   jzd(0x10129bfd, 0x1e);                /* jz 0x10129bfd */
    II(0x10129bdf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10129be3, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x10129be6, 0x5)   mov(eax, 0x101c35b4);                 /* mov eax, 0x101c35b4 */
    II(0x10129beb, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10129bed, 0x5)   calld(0x1009caf8, -0x8d0fa);          /* call 0x1009caf8 */
    II(0x10129bf2, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10129bf5, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x10129bf8, 0x5)   jmpd(0x10129cba, 0xbd);               /* jmp 0x10129cba */
l_0x10129bfd:
    II(0x10129bfd, 0x2)   jmpd(0x10129ba1, -0x5e);              /* jmp 0x10129ba1 */
l_0x10129bff:
    II(0x10129bff, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x4);   /* mov dword [ebp-0x10], 0x4 */
l_0x10129c06:
    II(0x10129c06, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x10129c09, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x10129c0e, 0x6)   jzd(0x10129cac, 0x98);                /* jz dword 0x10129cac */
    II(0x10129c14, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10129c18, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10129c1e, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10129c24, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10129c29, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10129c2c, 0x6)   jnzd(0x10129ca7, 0x75);               /* jnz dword 0x10129ca7 */
    II(0x10129c32, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x4);   /* mov dword [ebp-0x18], 0x4 */
l_0x10129c39:
    II(0x10129c39, 0x3)   dec(memd_a32(ss, ebp - 0x18));        /* dec dword [ebp-0x18] */
    II(0x10129c3c, 0x5)   cmp(memw_a32(ss, ebp - 0x18), -0x1 /* 0xff */); /* cmp word [ebp-0x18], 0xff */
    II(0x10129c41, 0x2)   jzd(0x10129ca7, 0x64);                /* jz 0x10129ca7 */
    II(0x10129c43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10129c46, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x10129c4a, 0x2)   jzd(0x10129c66, 0x1a);                /* jz 0x10129c66 */
    II(0x10129c4c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10129c50, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10129c56, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10129c5c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10129c61, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10129c64, 0x2)   jzd(0x10129c68, 0x2);                 /* jz 0x10129c68 */
l_0x10129c66:
    II(0x10129c66, 0x2)   jmpd(0x10129ca5, 0x3d);               /* jmp 0x10129ca5 */
l_0x10129c68:
    II(0x10129c68, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10129c6c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10129c70, 0x5)   calld(0x100fb9d3, -0x2e2a2);          /* call 0x100fb9d3 */
    II(0x10129c75, 0x2)   test(al, al);                         /* test al, al */
    II(0x10129c77, 0x2)   jzd(0x10129ca5, 0x2c);                /* jz 0x10129ca5 */
    II(0x10129c79, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10129c7d, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x10129c80, 0x5)   mov(eax, 0x101c35b4);                 /* mov eax, 0x101c35b4 */
    II(0x10129c85, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10129c87, 0x5)   calld(0x1009caf8, -0x8d194);          /* call 0x1009caf8 */
    II(0x10129c8c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10129c90, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x10129c93, 0x5)   mov(edx, 0x101c35b4);                 /* mov edx, 0x101c35b4 */
    II(0x10129c98, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10129c9a, 0x5)   calld(0x1009caf8, -0x8d1a7);          /* call 0x1009caf8 */
    II(0x10129c9f, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x5);    /* mov byte [ebp-0x4], 0x5 */
    II(0x10129ca3, 0x2)   jmpd(0x10129cba, 0x15);               /* jmp 0x10129cba */
l_0x10129ca5:
    II(0x10129ca5, 0x2)   jmpd(0x10129c39, -0x6e);              /* jmp 0x10129c39 */
l_0x10129ca7:
    II(0x10129ca7, 0x5)   jmpd(0x10129c06, -0xa6);              /* jmp 0x10129c06 */
l_0x10129cac:
    II(0x10129cac, 0x5)   mov(eax, memd_a32(ds, 0x101c5628));   /* mov eax, [0x101c5628] */
    II(0x10129cb1, 0x5)   calld(/* sys */ 0x10165ebf, 0x3c209); /* call 0x10165ebf */
    II(0x10129cb6, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
l_0x10129cba:
    II(0x10129cba, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10129cbd, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10129cbf, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10129cc0, 0x1)   popd(edi);                            /* pop edi */
    II(0x10129cc1, 0x1)   popd(esi);                            /* pop esi */
    II(0x10129cc2, 0x1)   popd(edx);                            /* pop edx */
    II(0x10129cc3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10129cc4, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10129cc5, 0x1)   retd();                               /* ret */
FUNC_END

