FUNC_BEGIN(0x1013e341, 0x602e545074eaac65, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x7, 0x7a, 0x2, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0xb8, 0xc9, 0xd, 0, 0, 0, 0xf, 0x84, 0x1, 0x1, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0xa, 0x74, 0x14, 0xf, 0xbf, 0x45, 0xf8, 0x8a, 0x80, 0x84, 0x80, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0xdd, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0xa, 0x75, 0x25, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0xa, 0x74, 0xd, 0xf, 0xbf, 0x45, 0xf8, 0xc6, 0x80, 0x84, 0x80, 0x1c, 0x10, 0x1, 0xeb, 0xe4, 0xe8, 0xd0, 0x7a, 0x2, 0, 0x6b, 0xc0, 0xa, 0xc1, 0xe8, 0xf, 0x5, 0xa5, 0x6, 0, 0, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x8a, 0x80, 0xdf, 0x79, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0xda, 0xf, 0xbf, 0x45, 0xf4, 0xc6, 0x80, 0xdf, 0x79, 0x1c, 0x10, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0xab, 0xfd, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x64, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0xa, 0x74, 0x14, 0xf, 0xbf, 0x45, 0xf8, 0x8a, 0x80, 0x84, 0x80, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0xdd, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0xa, 0x75, 0x2a, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8b, 0x90, 0xc5, 0xd, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x8, 0xe8, 0x3, 0x10, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x90, 0xca, 0xd, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x90, 0xce, 0xd, 0, 0, 0xeb, 0x5, 0xe9, 0x5b, 0xff, 0xff, 0xff, 0xeb, 0x28, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8b, 0x90, 0xc5, 0xd, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x8, 0xe8, 0xd2, 0xf, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x90, 0xca, 0xd, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x90, 0xce, 0xd, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1013e341, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1013e346, 0x5)   calld(sys_check_available_stack_size, 0x27a07); /* call 0x10165d52 */
    II(0x1013e34b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013e34c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013e34d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1013e34e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013e34f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013e350, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013e351, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013e353, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x1013e359, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1013e35c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e35f, 0x7)   cmp(memb_a32(ds, eax + 0xdc9), 0);    /* cmp byte [eax+0xdc9], 0x0 */
    II(0x1013e366, 0x6)   jzd(0x1013e46d, 0x101);               /* jz dword 0x1013e46d */
    II(0x1013e36c, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1013e373, 0x2)   jmpd(0x1013e37b, 0x6);                /* jmp 0x1013e37b */
l_0x1013e375:
    II(0x1013e375, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013e378, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x1013e37b:
    II(0x1013e37b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013e37f, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x1013e382, 0x2)   jzd(0x1013e398, 0x14);                /* jz 0x1013e398 */
    II(0x1013e384, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013e388, 0x6)   mov(al, memb_a32(ds, eax + 0x101c8084)); /* mov al, [eax+0x101c8084] */
    II(0x1013e38e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013e393, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1013e396, 0x2)   jnzd(0x1013e375, -0x23);              /* jnz 0x1013e375 */
l_0x1013e398:
    II(0x1013e398, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013e39c, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x1013e39f, 0x2)   jnzd(0x1013e3c6, 0x25);               /* jnz 0x1013e3c6 */
    II(0x1013e3a1, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1013e3a8, 0x2)   jmpd(0x1013e3b0, 0x6);                /* jmp 0x1013e3b0 */
l_0x1013e3aa:
    II(0x1013e3aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013e3ad, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x1013e3b0:
    II(0x1013e3b0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013e3b4, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x1013e3b7, 0x2)   jzd(0x1013e3c6, 0xd);                 /* jz 0x1013e3c6 */
    II(0x1013e3b9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013e3bd, 0x7)   mov(memb_a32(ds, eax + 0x101c8084), 0x1); /* mov byte [eax+0x101c8084], 0x1 */
    II(0x1013e3c4, 0x2)   jmpd(0x1013e3aa, -0x1c);              /* jmp 0x1013e3aa */
l_0x1013e3c6:
    II(0x1013e3c6, 0x5)   calld(/* sys */ 0x10165e9b, 0x27ad0); /* call 0x10165e9b */
    II(0x1013e3cb, 0x3)   imul(eax, eax, 0xa);                  /* imul eax, eax, 0xa */
    II(0x1013e3ce, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x1013e3d1, 0x5)   add(eax, 0x6a5);                      /* add eax, 0x6a5 */
    II(0x1013e3d6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1013e3d9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1013e3dd, 0x6)   mov(al, memb_a32(ds, eax + 0x101c79df)); /* mov al, [eax+0x101c79df] */
    II(0x1013e3e3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013e3e8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1013e3ea, 0x2)   jzd(0x1013e3c6, -0x26);               /* jz 0x1013e3c6 */
    II(0x1013e3ec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1013e3f0, 0x7)   mov(memb_a32(ds, eax + 0x101c79df), 0); /* mov byte [eax+0x101c79df], 0x0 */
    II(0x1013e3f7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1013e3fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e3fe, 0x5)   calld(0x1013e1ae, -0x255);            /* call 0x1013e1ae */
    II(0x1013e403, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1013e405, 0x2)   jnzd(0x1013e46b, 0x64);               /* jnz 0x1013e46b */
    II(0x1013e407, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1013e40e, 0x2)   jmpd(0x1013e416, 0x6);                /* jmp 0x1013e416 */
l_0x1013e410:
    II(0x1013e410, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013e413, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x1013e416:
    II(0x1013e416, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013e41a, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x1013e41d, 0x2)   jzd(0x1013e433, 0x14);                /* jz 0x1013e433 */
    II(0x1013e41f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013e423, 0x6)   mov(al, memb_a32(ds, eax + 0x101c8084)); /* mov al, [eax+0x101c8084] */
    II(0x1013e429, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013e42e, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1013e431, 0x2)   jnzd(0x1013e410, -0x23);              /* jnz 0x1013e410 */
l_0x1013e433:
    II(0x1013e433, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013e437, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x1013e43a, 0x2)   jnzd(0x1013e466, 0x2a);               /* jnz 0x1013e466 */
    II(0x1013e43c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1013e43e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e441, 0x6)   mov(edx, memd_a32(ds, eax + 0xdc5));  /* mov edx, [eax+0xdc5] */
//    II(0x1013e447, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e44a, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x1013e44d, 0x5)   calld(my_fseek, -0x4effd);            /* call 0x100ef455 */
    II(0x1013e452, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e455, 0x6)   mov(edx, memd_a32(ds, eax + 0xdca));  /* mov edx, [eax+0xdca] */
//    II(0x1013e45b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e45e, 0x6)   mov(memd_a32(ds, eax + 0xdce), edx);  /* mov [eax+0xdce], edx */
    II(0x1013e464, 0x2)   jmpd(0x1013e46b, 0x5);                /* jmp 0x1013e46b */
l_0x1013e466:
    II(0x1013e466, 0x5)   jmpd(0x1013e3c6, -0xa5);              /* jmp 0x1013e3c6 */
l_0x1013e46b:
    II(0x1013e46b, 0x2)   jmpd(0x1013e495, 0x28);               /* jmp 0x1013e495 */
l_0x1013e46d:
    II(0x1013e46d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1013e46f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e472, 0x6)   mov(edx, memd_a32(ds, eax + 0xdc5));  /* mov edx, [eax+0xdc5] */
//    II(0x1013e478, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e47b, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x1013e47e, 0x5)   calld(my_fseek, -0x4f02e);            /* call 0x100ef455 */
    II(0x1013e483, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e486, 0x6)   mov(edx, memd_a32(ds, eax + 0xdca));  /* mov edx, [eax+0xdca] */
//    II(0x1013e48c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013e48f, 0x6)   mov(memd_a32(ds, eax + 0xdce), edx);  /* mov [eax+0xdce], edx */
l_0x1013e495:
    II(0x1013e495, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013e497, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013e498, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013e499, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013e49a, 0x1)   popd(edx);                            /* pop edx */
    II(0x1013e49b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013e49c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013e49d, 0x1)   retd();                               /* ret */
FUNC_END

