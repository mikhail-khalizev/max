FUNC_BEGIN(0x10137a19, 0x4b7c0ec925da863a, 0x20, ({0x68, 0x78, 0x1, 0, 0, 0xe8, 0x2f, 0xe3, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x44, 0x1, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xe8, 0xf5, 0x43, 0x3, 0, 0x80, 0x7d, 0x20, 0, 0x74, 0x30, 0xe8, 0xf2, 0xd8, 0xf9, 0xff, 0x98, 0x50, 0xe8, 0xf, 0xd9, 0xf9, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x80, 0x2, 0, 0, 0x31, 0xc0, 0xe8, 0xd6, 0xd, 0xfb, 0xff, 0xbe, 0xc2, 0x6, 0, 0, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0xdc, 0x11, 0xfb, 0xff, 0x31, 0xc0, 0xe8, 0xc1, 0xd, 0xfb, 0xff, 0x89, 0x45, 0xec, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xc3, 0x27, 0x3, 0, 0xe8, 0x8e, 0xd8, 0xf9, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xe8, 0xff, 0x75, 0xe8, 0xc7, 0x45, 0xe4, 0x1, 0, 0, 0, 0xff, 0x75, 0xe4, 0x6a, 0x2, 0xc7, 0x45, 0xe0, 0x15, 0, 0, 0, 0xff, 0x75, 0xe0, 0xc7, 0x45, 0xdc, 0xb5, 0, 0, 0, 0xff, 0x75, 0xdc, 0xc7, 0x45, 0xd8, 0x5, 0, 0, 0, 0xff, 0x75, 0xd8, 0xc7, 0x45, 0xd4, 0xe5, 0, 0, 0, 0x80, 0x7d, 0x10, 0, 0x74, 0x9, 0xc7, 0x45, 0xd0, 0xd6, 0xc7, 0x1a, 0x10, 0xeb, 0x7, 0xc7, 0x45, 0xd0, 0xe5, 0xc7, 0x1a, 0x10, 0x8b, 0x5d, 0xd0, 0x8b, 0x45, 0xec, 0x8b, 0x50, 0xe, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x16, 0x8b, 0x4d, 0xd4, 0xe8, 0xeb, 0x1f, 0xfb, 0xff, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0xff, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x3b, 0x45, 0xf4, 0xf, 0x8d, 0x51, 0x5, 0, 0, 0x80, 0x7d, 0x14, 0, 0x74, 0x23, 0xf, 0xbf, 0x45, 0x1c, 0x3, 0x45, 0xcc, 0x50, 0xb8, 0xef, 0xc7, 0x1a, 0x10, 0x50, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x83, 0xc0, 0x20, 0x50, 0xe8, 0xc8, 0xe3, 0x2, 0, 0x83, 0xc4, 0xc, 0xeb, 0x2e, 0xf, 0xbe, 0x45, 0x18, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x2c, 0xd4, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0x1c, 0x3, 0x45, 0xcc, 0x50, 0xb8, 0xfc, 0xc7, 0x1a, 0x10, 0x50, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x83, 0xc0, 0x20, 0x50, 0xe8, 0x98, 0xe3, 0x2, 0, 0x83, 0xc4, 0x10, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x66, 0xe4, 0xf3, 0xff, 0x88, 0x45, 0xc8, 0xba, 0x70, 0x3d, 0x1c, 0x10, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0x46, 0xe3, 0x2, 0, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x8d, 0x50, 0x20, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0x93, 0xe3, 0x2, 0, 0xba, 0x6, 0xc8, 0x1a, 0x10, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0xcc, 0xa7, 0x3, 0, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x60, 0xff, 0xff, 0xff, 0, 0x75, 0x10, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0xc6, 0x40, 0x4d, 0, 0xe9, 0x72, 0, 0, 0, 0x80, 0x7d, 0x14, 0, 0x74, 0xd, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0xc6, 0x40, 0x4d, 0x1, 0xeb, 0x5f, 0x8b, 0x8d, 0x60, 0xff, 0xff, 0xff, 0xbb, 0x2, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x58, 0xff, 0xff, 0xff, 0xe8, 0x71, 0xa9, 0x3, 0, 0xf, 0xbf, 0x85, 0x58, 0xff, 0xff, 0xff, 0x83, 0xf8, 0x46, 0x75, 0x9, 0xc6, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x1, 0xeb, 0x7, 0xc6, 0x85, 0x5c, 0xff, 0xff, 0xff, 0, 0x6b, 0x4d, 0xcc, 0x53, 0x3, 0x4d, 0xf0, 0x8a, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x88, 0x41, 0x4d, 0x8b, 0x8d, 0x60, 0xff, 0xff, 0xff, 0xbb, 0x1, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0x2d, 0xa9, 0x3, 0, 0x6b, 0x55, 0xcc, 0x53, 0x3, 0x55, 0xf0, 0x8a, 0x45, 0xc8, 0x88, 0x42, 0x4e, 0x6b, 0x55, 0xcc, 0x53, 0x3, 0x55, 0xf0, 0x80, 0x7a, 0x4d, 0, 0xf, 0x84, 0xec, 0, 0, 0, 0x80, 0x7d, 0x14, 0, 0xf, 0x84, 0xc1, 0, 0, 0, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0xf7, 0xa3, 0x3, 0, 0xc7, 0x85, 0x60, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x80, 0x8d, 0x54, 0xff, 0xff, 0xff, 0x1, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0xd4, 0xe8, 0, 0, 0x89, 0x85, 0x2c, 0xff, 0xff, 0xff, 0x80, 0xa5, 0x54, 0xff, 0xff, 0xff, 0xfe, 0x8d, 0x95, 0x64, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0x22, 0xe9, 0, 0, 0x8d, 0x95, 0x28, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0xbf, 0x21, 0, 0, 0xbb, 0x9, 0xc8, 0x1a, 0x10, 0x8d, 0x95, 0x24, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0x75, 0x89, 0xfa, 0xff, 0xe8, 0x1b, 0xe4, 0, 0, 0x8d, 0x85, 0x24, 0xff, 0xff, 0xff, 0xe8, 0xe5, 0x1a, 0xf5, 0xff, 0x89, 0xc2, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x83, 0xc0, 0x2f, 0xe8, 0xdb, 0xe1, 0x2, 0, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0xe0, 0xe9, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x24, 0xff, 0xff, 0xff, 0xe8, 0x1e, 0x9e, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0xe3, 0x86, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0xf2, 0x20, 0, 0, 0xeb, 0x1f, 0x8b, 0x8d, 0x60, 0xff, 0xff, 0xff, 0xbb, 0x1e, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x83, 0xc0, 0x2f, 0xe8, 0x25, 0xa8, 0x3, 0, 0xeb, 0xb, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0xc6, 0x40, 0x2f, 0, 0x83, 0xbd, 0x60, 0xff, 0xff, 0xff, 0, 0x74, 0xb, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0x1, 0xa3, 0x3, 0, 0x8b, 0x45, 0xcc, 0x5, 0xc5, 0x4, 0, 0, 0x98, 0xe8, 0x75, 0xc4, 0xff, 0xff, 0x89, 0x85, 0x20, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xcc, 0x5, 0xcf, 0x4, 0, 0, 0x98, 0xe8, 0x61, 0xc4, 0xff, 0xff, 0x89, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x20, 0xff, 0xff, 0xff, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x20, 0xff, 0xff, 0xff, 0xf, 0xbf, 0, 0xf, 0xaf, 0xc2, 0x89, 0x85, 0x18, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0, 0xf, 0xaf, 0xc2, 0x89, 0x85, 0x14, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x18, 0xff, 0xff, 0xff, 0xe8, 0x3b, 0xe2, 0x2, 0, 0x89, 0xc2, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x89, 0x50, 0x14, 0x8b, 0x85, 0x18, 0xff, 0xff, 0xff, 0xe8, 0x24, 0xe2, 0x2, 0, 0x6b, 0x55, 0xcc, 0x53, 0x3, 0x55, 0xf0, 0x89, 0x42, 0x18, 0x8b, 0x9d, 0x18, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x20, 0xff, 0xff, 0xff, 0x83, 0xc2, 0x8, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x8b, 0x40, 0x14, 0xe8, 0x37, 0xe0, 0x2, 0, 0x8b, 0x9d, 0x14, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x1c, 0xff, 0xff, 0xff, 0x83, 0xc2, 0x8, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x8b, 0x40, 0x18, 0xe8, 0x19, 0xe0, 0x2, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x10, 0x24, 0x3, 0, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x8b, 0x40, 0x14, 0x89, 0x85, 0xe, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x20, 0xff, 0xff, 0xff, 0x66, 0x8b, 0, 0x66, 0x89, 0x85, 0x8, 0xff, 0xff, 0xff, 0xbb, 0xa, 0, 0, 0, 0x8d, 0x95, 0xf0, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x45, 0x1c, 0x3, 0x45, 0xcc, 0xe8, 0x85, 0x15, 0x4, 0, 0xb9, 0xc7, 0, 0, 0, 0xbb, 0xb1, 0, 0, 0, 0xba, 0xa5, 0, 0, 0, 0x8d, 0x85, 0xec, 0xfe, 0xff, 0xff, 0xe8, 0x17, 0xd5, 0xf9, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x46, 0, 0, 0, 0x50, 0xb8, 0x28, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x8d, 0x95, 0xf0, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0xe8, 0xe2, 0x2c, 0xfb, 0xff, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x8b, 0x40, 0x18, 0x89, 0x85, 0xe, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x66, 0x8b, 0, 0x66, 0x89, 0x85, 0x8, 0xff, 0xff, 0xff, 0xb9, 0xc7, 0, 0, 0, 0xbb, 0x3a, 0, 0, 0, 0xba, 0x5, 0, 0, 0, 0x8d, 0x85, 0xe8, 0xfe, 0xff, 0xff, 0xe8, 0xaf, 0xd4, 0xf9, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x46, 0, 0, 0, 0x50, 0xb8, 0x28, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x8d, 0x95, 0xf0, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0xe8, 0x7a, 0x2c, 0xfb, 0xff, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x1f, 0x23, 0x3, 0, 0xbb, 0x5, 0, 0, 0, 0x8b, 0x45, 0xcc, 0x8b, 0x55, 0xcc, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x69, 0xd0, 0x92, 0x1, 0, 0, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x83, 0xc2, 0x10, 0x89, 0x50, 0x4, 0xbb, 0x5, 0, 0, 0, 0x8b, 0x45, 0xcc, 0x8b, 0x55, 0xcc, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x6b, 0xd2, 0x4c, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x83, 0xc2, 0x2c, 0x89, 0x50, 0x8, 0x8b, 0x95, 0x20, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x12, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x89, 0x50, 0xc, 0x8b, 0x95, 0x20, 0xff, 0xff, 0xff, 0x8b, 0x12, 0xc1, 0xfa, 0x10, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x89, 0x50, 0x10, 0x6b, 0x55, 0xcc, 0x53, 0x3, 0x55, 0xf0, 0x8a, 0x52, 0x4e, 0x81, 0xe2, 0xff, 0, 0, 0, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0xe8, 0x99, 0xf8, 0xff, 0xff, 0x6a, 0x1, 0x6a, 0, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0xff, 0x70, 0x18, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0xff, 0x70, 0x14, 0x8b, 0x45, 0xcc, 0x5, 0xf3, 0x3, 0, 0, 0x50, 0x8b, 0x45, 0xcc, 0x5, 0xe9, 0x3, 0, 0, 0x50, 0x6a, 0xff, 0x6a, 0xff, 0x8b, 0x85, 0x20, 0xff, 0xff, 0xff, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x8d, 0x20, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x9, 0x6b, 0x5d, 0xcc, 0x53, 0x3, 0x5d, 0xf0, 0x8b, 0x5b, 0x8, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0xe8, 0x9a, 0x6, 0x3, 0, 0x89, 0xc2, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0x89, 0x50, 0x1c, 0x8b, 0x85, 0x20, 0xff, 0xff, 0xff, 0xe8, 0x37, 0xdf, 0x2, 0, 0x8b, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xe8, 0x2c, 0xdf, 0x2, 0, 0x8b, 0x45, 0xec, 0x8b, 0x50, 0x12, 0x6b, 0x45, 0xcc, 0x53, 0x3, 0x45, 0xf0, 0xe8, 0xb8, 0xeb, 0xff, 0xff, 0x6b, 0x55, 0xcc, 0x53, 0x3, 0x55, 0xf0, 0x8b, 0x45, 0xcc, 0xc1, 0xe0, 0x2, 0x8b, 0x52, 0x1c, 0x89, 0x94, 0x28, 0xc0, 0xfe, 0xff, 0xff, 0xe9, 0x9d, 0xfa, 0xff, 0xff, 0x8d, 0x95, 0xc0, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xe8, 0x4, 0x1a, 0x3, 0, 0x68, 0x49, 0x1, 0, 0, 0x6a, 0, 0xb8, 0xb6, 0x1, 0, 0, 0x50, 0xb9, 0x21, 0, 0, 0, 0xbb, 0x44, 0x3, 0, 0, 0xba, 0x43, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0xe8, 0x84, 0xf8, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0x10, 0x68, 0x51, 0x1, 0, 0, 0x6a, 0, 0xb8, 0xb6, 0x1, 0, 0, 0x50, 0xb9, 0x3f, 0, 0, 0, 0xbb, 0x46, 0x3, 0, 0, 0xba, 0x45, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0xe8, 0x56, 0xf8, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x4, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x73, 0x21, 0x3, 0, 0x68, 0xff, 0x3, 0, 0, 0xb8, 0x15, 0xc8, 0x1a, 0x10, 0x50, 0xb8, 0xb6, 0x1, 0, 0, 0x50, 0xb9, 0x2, 0x2, 0, 0, 0xbb, 0x3e, 0x3, 0, 0, 0xba, 0x3d, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0xe8, 0x1b, 0xf8, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x8, 0x68, 0xfd, 0x3, 0, 0, 0xb8, 0x1a, 0xc8, 0x1a, 0x10, 0x50, 0xb8, 0xb6, 0x1, 0, 0, 0x50, 0xb9, 0xd1, 0x1, 0, 0, 0xbb, 0x3c, 0x3, 0, 0, 0xba, 0x3b, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0xe8, 0xea, 0xf7, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0xc, 0x68, 0xe8, 0x3, 0, 0, 0x80, 0x7d, 0x10, 0, 0x74, 0xc, 0xc7, 0x85, 0xbc, 0xfe, 0xff, 0xff, 0x1c, 0xc8, 0x1a, 0x10, 0xeb, 0xa, 0xc7, 0x85, 0xbc, 0xfe, 0xff, 0xff, 0x23, 0xc8, 0x1a, 0x10, 0xff, 0xb5, 0xbc, 0xfe, 0xff, 0xff, 0xb8, 0xb6, 0x1, 0, 0, 0x50, 0xb9, 0x62, 0x1, 0, 0, 0xbb, 0x3a, 0x3, 0, 0, 0xba, 0x39, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0xe8, 0x9d, 0xf7, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0x10, 0x80, 0x7d, 0x10, 0, 0x74, 0x66, 0x68, 0, 0x4, 0, 0, 0xb8, 0x2a, 0xc8, 0x1a, 0x10, 0x50, 0xb8, 0xb6, 0x1, 0, 0, 0x50, 0xb9, 0xf3, 0, 0, 0, 0xbb, 0x38, 0x3, 0, 0, 0xba, 0x37, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0xe8, 0x64, 0xf7, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0x14, 0x68, 0xfe, 0x3, 0, 0, 0xb8, 0x2f, 0xc8, 0x1a, 0x10, 0x50, 0xb8, 0xb6, 0x1, 0, 0, 0x50, 0xb9, 0x84, 0, 0, 0, 0xbb, 0x36, 0x3, 0, 0, 0xba, 0x35, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0xe8, 0x31, 0xf7, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0x18, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0xe8, 0x83, 0xf2, 0x2, 0, 0x80, 0x7d, 0x20, 0, 0x74, 0x33, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0x68, 0, 0, 0, 0x50, 0xb9, 0, 0x1, 0, 0, 0xbb, 0x80, 0x2, 0, 0, 0x31, 0xc0, 0xe8, 0x16, 0x6, 0xfb, 0xff, 0x89, 0xc2, 0xb8, 0xb1, 0x4, 0, 0, 0xe8, 0xa5, 0x82, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x89, 0x10, 0xe8, 0x85, 0x3a, 0x3, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x14, 0}))
    II(0x10137a19, 0x5)   pushd(0x178);                         /* push dword 0x178 */
    II(0x10137a1e, 0x5)   calld(sys_check_available_stack_size, 0x2e32f); /* call 0x10165d52 */
    II(0x10137a23, 0x1)   pushd(esi);                           /* push esi */
    II(0x10137a24, 0x1)   pushd(edi);                           /* push edi */
    II(0x10137a25, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10137a26, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10137a28, 0x6)   sub(esp, 0x144);                      /* sub esp, 0x144 */
    II(0x10137a2e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10137a31, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10137a34, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10137a37, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x10137a3a, 0x5)   calld(/* sys */ 0x1016be34, 0x343f5); /* call 0x1016be34 */
    II(0x10137a3f, 0x4)   cmp(memb_a32(ss, ebp + 0x20), 0);     /* cmp byte [ebp+0x20], 0x0 */
    II(0x10137a43, 0x2)   jzd(0x10137a75, 0x30);                /* jz 0x10137a75 */
    II(0x10137a45, 0x5)   calld(0x100d533c, -0x6270e);          /* call 0x100d533c */
    II(0x10137a4a, 0x1)   cwde();                               /* cwde */
    II(0x10137a4b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137a4c, 0x5)   calld(0x100d5360, -0x626f1);          /* call 0x100d5360 */
    II(0x10137a51, 0x1)   cwde();                               /* cwde */
    II(0x10137a52, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137a53, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10137a55, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137a56, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10137a5b, 0x5)   mov(ebx, 0x280);                      /* mov ebx, 0x280 */
    II(0x10137a60, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10137a62, 0x5)   calld(0x100e883d, -0x4f22a);          /* call 0x100e883d */
    II(0x10137a67, 0x5)   mov(esi, 0x6c2);                      /* mov esi, 0x6c2 */
    II(0x10137a6c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10137a6e, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x10137a70, 0x5)   calld(0x100e8c51, -0x4ee24);          /* call 0x100e8c51 */
l_0x10137a75:
    II(0x10137a75, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10137a77, 0x5)   calld(0x100e883d, -0x4f23f);          /* call 0x100e883d */
    II(0x10137a7c, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10137a7f, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10137a84, 0x5)   calld(/* sys */ 0x1016a24c, 0x327c3); /* call 0x1016a24c */
    II(0x10137a89, 0x5)   calld(0x100d531c, -0x62772);          /* call 0x100d531c */
    II(0x10137a8e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10137a93, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10137a96, 0x3)   pushd(memd_a32(ss, ebp - 0x18));      /* push dword [ebp-0x18] */
    II(0x10137a99, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x1);   /* mov dword [ebp-0x1c], 0x1 */
    II(0x10137aa0, 0x3)   pushd(memd_a32(ss, ebp - 0x1c));      /* push dword [ebp-0x1c] */
    II(0x10137aa3, 0x2)   pushd(0x2);                           /* push 0x2 */
    II(0x10137aa5, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x15);  /* mov dword [ebp-0x20], 0x15 */
    II(0x10137aac, 0x3)   pushd(memd_a32(ss, ebp - 0x20));      /* push dword [ebp-0x20] */
    II(0x10137aaf, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0xb5);  /* mov dword [ebp-0x24], 0xb5 */
    II(0x10137ab6, 0x3)   pushd(memd_a32(ss, ebp - 0x24));      /* push dword [ebp-0x24] */
    II(0x10137ab9, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0x5);   /* mov dword [ebp-0x28], 0x5 */
    II(0x10137ac0, 0x3)   pushd(memd_a32(ss, ebp - 0x28));      /* push dword [ebp-0x28] */
    II(0x10137ac3, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0xe5);  /* mov dword [ebp-0x2c], 0xe5 */
    II(0x10137aca, 0x4)   cmp(memb_a32(ss, ebp + 0x10), 0);     /* cmp byte [ebp+0x10], 0x0 */
    II(0x10137ace, 0x2)   jzd(0x10137ad9, 0x9);                 /* jz 0x10137ad9 */
    II(0x10137ad0, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0x101ac7d6); /* mov dword [ebp-0x30], 0x101ac7d6 */ /* "Save/Load Menu" */
    II(0x10137ad7, 0x2)   jmpd(0x10137ae0, 0x7);                /* jmp 0x10137ae0 */
l_0x10137ad9:
    II(0x10137ad9, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0x101ac7e5); /* mov dword [ebp-0x30], 0x101ac7e5 */ /* "Load Menu" */
l_0x10137ae0:
    II(0x10137ae0, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x30));   /* mov ebx, [ebp-0x30] */
    II(0x10137ae3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10137ae6, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x10137ae9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10137aec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10137aef, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10137af2, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x2c));   /* mov ecx, [ebp-0x2c] */
    II(0x10137af5, 0x5)   calld(0x100e9ae5, -0x4e015);          /* call 0x100e9ae5 */
    II(0x10137afa, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x10137b01, 0x2)   jmpd(0x10137b09, 0x6);                /* jmp 0x10137b09 */
l_0x10137b03:
    II(0x10137b03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10137b06, 0x3)   inc(memd_a32(ss, ebp - 0x34));        /* inc dword [ebp-0x34] */
l_0x10137b09:
    II(0x10137b09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10137b0c, 0x3)   cmp(eax, memd_a32(ss, ebp - 0xc));    /* cmp eax, [ebp-0xc] */
    II(0x10137b0f, 0x6)   jged(0x10138066, 0x551);              /* jge dword 0x10138066 */
    II(0x10137b15, 0x4)   cmp(memb_a32(ss, ebp + 0x14), 0);     /* cmp byte [ebp+0x14], 0x0 */
    II(0x10137b19, 0x2)   jzd(0x10137b3e, 0x23);                /* jz 0x10137b3e */
    II(0x10137b1b, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x1c)); /* movsx eax, word [ebp+0x1c] */
    II(0x10137b1f, 0x3)   add(eax, memd_a32(ss, ebp - 0x34));   /* add eax, [ebp-0x34] */
    II(0x10137b22, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137b23, 0x5)   mov(eax, 0x101ac7ef);                 /* mov eax, 0x101ac7ef */ /* "scnrio%i.txt" */
    II(0x10137b28, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137b29, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137b2d, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137b30, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10137b33, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137b34, 0x5)   calld(sys_sprintf, 0x2e3c8);          /* call 0x10165f01 */
    II(0x10137b39, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x10137b3c, 0x2)   jmpd(0x10137b6c, 0x2e);               /* jmp 0x10137b6c */
l_0x10137b3e:
    II(0x10137b3e, 0x4)   movsx(eax, memb_a32(ss, ebp + 0x18)); /* movsx eax, byte [ebp+0x18] */
    II(0x10137b42, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10137b45, 0x6)   pushd(memd_a32(ds, eax + 0x101bd42c)); /* push dword [eax+0x101bd42c] */
    II(0x10137b4b, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x1c)); /* movsx eax, word [ebp+0x1c] */
    II(0x10137b4f, 0x3)   add(eax, memd_a32(ss, ebp - 0x34));   /* add eax, [ebp-0x34] */
    II(0x10137b52, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137b53, 0x5)   mov(eax, 0x101ac7fc);                 /* mov eax, 0x101ac7fc */ /* "save%i.%s" */
    II(0x10137b58, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137b59, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137b5d, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137b60, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10137b63, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137b64, 0x5)   calld(sys_sprintf, 0x2e398);          /* call 0x10165f01 */
    II(0x10137b69, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
l_0x10137b6c:
    II(0x10137b6c, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x10137b71, 0x5)   calld(0x10075fdc, -0xc1b9a);          /* call 0x10075fdc */
    II(0x10137b76, 0x3)   mov(memb_a32(ss, ebp - 0x38), al);    /* mov [ebp-0x38], al */
    II(0x10137b79, 0x5)   mov(edx, 0x101c3d70);                 /* mov edx, 0x101c3d70 */
    II(0x10137b7e, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x10137b84, 0x5)   calld(sys_strcpy, 0x2e346);           /* call 0x10165ecf */
    II(0x10137b89, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137b8d, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137b90, 0x3)   lea(edx, eax + 0x20);                 /* lea edx, [eax+0x20] */
    II(0x10137b93, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x10137b99, 0x5)   calld(sys_strcat, 0x2e393);           /* call 0x10165f31 */
    II(0x10137b9e, 0x5)   mov(edx, 0x101ac806);                 /* mov edx, 0x101ac806 */ /* "rb" */
    II(0x10137ba3, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x10137ba9, 0x5)   calld(sys_fopen, 0x3a7cc);            /* call 0x1017237a */
    II(0x10137bae, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
    II(0x10137bb4, 0x7)   cmp(memd_a32(ss, ebp - 0xa0), 0);     /* cmp dword [ebp+0xffffff60], 0x0 */
    II(0x10137bbb, 0x2)   jnzd(0x10137bcd, 0x10);               /* jnz 0x10137bcd */
    II(0x10137bbd, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137bc1, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137bc4, 0x4)   mov(memb_a32(ds, eax + 0x4d), 0);     /* mov byte [eax+0x4d], 0x0 */
    II(0x10137bc8, 0x5)   jmpd(0x10137c3f, 0x72);               /* jmp 0x10137c3f */
l_0x10137bcd:
    II(0x10137bcd, 0x4)   cmp(memb_a32(ss, ebp + 0x14), 0);     /* cmp byte [ebp+0x14], 0x0 */
    II(0x10137bd1, 0x2)   jzd(0x10137be0, 0xd);                 /* jz 0x10137be0 */
    II(0x10137bd3, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137bd7, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137bda, 0x4)   mov(memb_a32(ds, eax + 0x4d), 0x1);   /* mov byte [eax+0x4d], 0x1 */
    II(0x10137bde, 0x2)   jmpd(0x10137c3f, 0x5f);               /* jmp 0x10137c3f */
l_0x10137be0:
    II(0x10137be0, 0x6)   mov(ecx, memd_a32(ss, ebp - 0xa0));   /* mov ecx, [ebp+0xffffff60] */
    II(0x10137be6, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x10137beb, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10137bf0, 0x6)   lea(eax, ebp - 0xa8);                 /* lea eax, [ebp+0xffffff58] */
    II(0x10137bf6, 0x5)   calld(sys_fread, 0x3a971);            /* call 0x1017256c */
    II(0x10137bfb, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xa8)); /* movsx eax, word [ebp+0xffffff58] */
    II(0x10137c02, 0x3)   cmp(eax, 0x46);                       /* cmp eax, 0x46 */
    II(0x10137c05, 0x2)   jnzd(0x10137c10, 0x9);                /* jnz 0x10137c10 */
    II(0x10137c07, 0x7)   mov(memb_a32(ss, ebp - 0xa4), 0x1);   /* mov byte [ebp+0xffffff5c], 0x1 */
    II(0x10137c0e, 0x2)   jmpd(0x10137c17, 0x7);                /* jmp 0x10137c17 */
l_0x10137c10:
    II(0x10137c10, 0x7)   mov(memb_a32(ss, ebp - 0xa4), 0);     /* mov byte [ebp+0xffffff5c], 0x0 */
l_0x10137c17:
    II(0x10137c17, 0x4)   imul(ecx, memd_a32(ss, ebp - 0x34), 0x53); /* imul ecx, [ebp-0x34], 0x53 */
    II(0x10137c1b, 0x3)   add(ecx, memd_a32(ss, ebp - 0x10));   /* add ecx, [ebp-0x10] */
    II(0x10137c1e, 0x6)   mov(al, memb_a32(ss, ebp - 0xa4));    /* mov al, [ebp+0xffffff5c] */
    II(0x10137c24, 0x3)   mov(memb_a32(ds, ecx + 0x4d), al);    /* mov [ecx+0x4d], al */
    II(0x10137c27, 0x6)   mov(ecx, memd_a32(ss, ebp - 0xa0));   /* mov ecx, [ebp+0xffffff60] */
    II(0x10137c2d, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10137c32, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10137c37, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10137c3a, 0x5)   calld(sys_fread, 0x3a92d);            /* call 0x1017256c */
l_0x10137c3f:
    II(0x10137c3f, 0x4)   imul(edx, memd_a32(ss, ebp - 0x34), 0x53); /* imul edx, [ebp-0x34], 0x53 */
    II(0x10137c43, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10137c46, 0x3)   mov(al, memb_a32(ss, ebp - 0x38));    /* mov al, [ebp-0x38] */
    II(0x10137c49, 0x3)   mov(memb_a32(ds, edx + 0x4e), al);    /* mov [edx+0x4e], al */
    II(0x10137c4c, 0x4)   imul(edx, memd_a32(ss, ebp - 0x34), 0x53); /* imul edx, [ebp-0x34], 0x53 */
    II(0x10137c50, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10137c53, 0x4)   cmp(memb_a32(ds, edx + 0x4d), 0);     /* cmp byte [edx+0x4d], 0x0 */
    II(0x10137c57, 0x6)   jzd(0x10137d49, 0xec);                /* jz dword 0x10137d49 */
    II(0x10137c5d, 0x4)   cmp(memb_a32(ss, ebp + 0x14), 0);     /* cmp byte [ebp+0x14], 0x0 */
    II(0x10137c61, 0x6)   jzd(0x10137d28, 0xc1);                /* jz dword 0x10137d28 */
    II(0x10137c67, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x10137c6d, 0x5)   calld(sys_fclose, 0x3a3f7);           /* call 0x10172069 */
    II(0x10137c72, 0xa)   mov(memd_a32(ss, ebp - 0xa0), 0);     /* mov dword [ebp+0xffffff60], 0x0 */
    II(0x10137c7c, 0x7)   or_(memb_a32(ss, ebp - 0xac), 0x1);   /* or byte [ebp+0xffffff54], 0x1 */
    II(0x10137c83, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x10137c89, 0x5)   calld(0x10146562, 0xe8d4);            /* call 0x10146562 */
    II(0x10137c8e, 0x6)   mov(memd_a32(ss, ebp - 0xd4), eax);   /* mov [ebp+0xffffff2c], eax */
    II(0x10137c94, 0x7)   and_(memb_a32(ss, ebp - 0xac), -0x2 /* 0xfe */); /* and byte [ebp+0xffffff54], 0xfe */
    II(0x10137c9b, 0x6)   lea(edx, ebp - 0x9c);                 /* lea edx, [ebp+0xffffff64] */
    II(0x10137ca1, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x10137ca7, 0x5)   calld(0x101465ce, 0xe922);            /* call 0x101465ce */
    II(0x10137cac, 0x6)   lea(edx, ebp - 0xd8);                 /* lea edx, [ebp+0xffffff28] */
    II(0x10137cb2, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x10137cb8, 0x5)   calld(0x10139e7c, 0x21bf);            /* call 0x10139e7c */
    II(0x10137cbd, 0x5)   mov(ebx, 0x101ac809);                 /* mov ebx, 0x101ac809 */ /* "description" */
    II(0x10137cc2, 0x6)   lea(edx, ebp - 0xdc);                 /* lea edx, [ebp+0xffffff24] */
    II(0x10137cc8, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x10137cce, 0x5)   calld(0x100e0648, -0x5768b);          /* call 0x100e0648 */
    II(0x10137cd3, 0x5)   calld(0x101460f3, 0xe41b);            /* call 0x101460f3 */
    II(0x10137cd8, 0x6)   lea(eax, ebp - 0xdc);                 /* lea eax, [ebp+0xffffff24] */
    II(0x10137cde, 0x5)   calld(my_strobj_c_str_v2, -0xae51b);  /* call 0x100897c8 */
    II(0x10137ce3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10137ce5, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137ce9, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137cec, 0x3)   add(eax, 0x2f);                       /* add eax, 0x2f */
    II(0x10137cef, 0x5)   calld(sys_strcpy, 0x2e1db);           /* call 0x10165ecf */
    II(0x10137cf4, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x10137cfa, 0x5)   calld(0x101466df, 0xe9e0);            /* call 0x101466df */
    II(0x10137cff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10137d01, 0x6)   lea(eax, ebp - 0xdc);                 /* lea eax, [ebp+0xffffff24] */
    II(0x10137d07, 0x5)   calld(my_string_dtor, 0x9e1e);        /* call 0x10141b2a */
    II(0x10137d0c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10137d0e, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x10137d14, 0x5)   calld(0x100e03fc, -0x5791d);          /* call 0x100e03fc */
    II(0x10137d19, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10137d1b, 0x6)   lea(eax, ebp - 0xd0);                 /* lea eax, [ebp+0xffffff30] */
    II(0x10137d21, 0x5)   calld(0x10139e18, 0x20f2);            /* call 0x10139e18 */
    II(0x10137d26, 0x2)   jmpd(0x10137d47, 0x1f);               /* jmp 0x10137d47 */
l_0x10137d28:
    II(0x10137d28, 0x6)   mov(ecx, memd_a32(ss, ebp - 0xa0));   /* mov ecx, [ebp+0xffffff60] */
    II(0x10137d2e, 0x5)   mov(ebx, 0x1e);                       /* mov ebx, 0x1e */
    II(0x10137d33, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10137d38, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137d3c, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137d3f, 0x3)   add(eax, 0x2f);                       /* add eax, 0x2f */
    II(0x10137d42, 0x5)   calld(sys_fread, 0x3a825);            /* call 0x1017256c */
l_0x10137d47:
    II(0x10137d47, 0x2)   jmpd(0x10137d54, 0xb);                /* jmp 0x10137d54 */
l_0x10137d49:
    II(0x10137d49, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137d4d, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137d50, 0x4)   mov(memb_a32(ds, eax + 0x2f), 0);     /* mov byte [eax+0x2f], 0x0 */
l_0x10137d54:
    II(0x10137d54, 0x7)   cmp(memd_a32(ss, ebp - 0xa0), 0);     /* cmp dword [ebp+0xffffff60], 0x0 */
    II(0x10137d5b, 0x2)   jzd(0x10137d68, 0xb);                 /* jz 0x10137d68 */
    II(0x10137d5d, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x10137d63, 0x5)   calld(sys_fclose, 0x3a301);           /* call 0x10172069 */
l_0x10137d68:
    II(0x10137d68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10137d6b, 0x5)   add(eax, 0x4c5);                      /* add eax, 0x4c5 */
    II(0x10137d70, 0x1)   cwde();                               /* cwde */
    II(0x10137d71, 0x5)   calld(my_get_res_data_by_id_malloc, -0x3b8b); /* call 0x101341eb */
    II(0x10137d76, 0x6)   mov(memd_a32(ss, ebp - 0xe0), eax);   /* mov [ebp+0xffffff20], eax */
    II(0x10137d7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10137d7f, 0x5)   add(eax, 0x4cf);                      /* add eax, 0x4cf */
    II(0x10137d84, 0x1)   cwde();                               /* cwde */
    II(0x10137d85, 0x5)   calld(my_get_res_data_by_id_malloc, -0x3b9f); /* call 0x101341eb */
    II(0x10137d8a, 0x6)   mov(memd_a32(ss, ebp - 0xe4), eax);   /* mov [ebp+0xffffff1c], eax */
    II(0x10137d90, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe0));   /* mov eax, [ebp+0xffffff20] */
    II(0x10137d96, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x10137d98, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10137d9b, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe0));   /* mov eax, [ebp+0xffffff20] */
    II(0x10137da1, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10137da4, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10137da7, 0x6)   mov(memd_a32(ss, ebp - 0xe8), eax);   /* mov [ebp+0xffffff18], eax */
    II(0x10137dad, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe4));   /* mov eax, [ebp+0xffffff1c] */
    II(0x10137db3, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x10137db5, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10137db8, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe4));   /* mov eax, [ebp+0xffffff1c] */
    II(0x10137dbe, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10137dc1, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10137dc4, 0x6)   mov(memd_a32(ss, ebp - 0xec), eax);   /* mov [ebp+0xffffff14], eax */
    II(0x10137dca, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe8));   /* mov eax, [ebp+0xffffff18] */
    II(0x10137dd0, 0x5)   calld(sys_new_arr, 0x2e23b);          /* call 0x10166010 */
    II(0x10137dd5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10137dd7, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137ddb, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137dde, 0x3)   mov(memd_a32(ds, eax + 0x14), edx);   /* mov [eax+0x14], edx */
    II(0x10137de1, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe8));   /* mov eax, [ebp+0xffffff18] */
    II(0x10137de7, 0x5)   calld(sys_new_arr, 0x2e224);          /* call 0x10166010 */
    II(0x10137dec, 0x4)   imul(edx, memd_a32(ss, ebp - 0x34), 0x53); /* imul edx, [ebp-0x34], 0x53 */
    II(0x10137df0, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10137df3, 0x3)   mov(memd_a32(ds, edx + 0x18), eax);   /* mov [edx+0x18], eax */
    II(0x10137df6, 0x6)   mov(ebx, memd_a32(ss, ebp - 0xe8));   /* mov ebx, [ebp+0xffffff18] */
    II(0x10137dfc, 0x6)   mov(edx, memd_a32(ss, ebp - 0xe0));   /* mov edx, [ebp+0xffffff20] */
    II(0x10137e02, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x10137e05, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137e09, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137e0c, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x10137e0f, 0x5)   calld(sys_memcpy, 0x2e037);           /* call 0x10165e4b */
    II(0x10137e14, 0x6)   mov(ebx, memd_a32(ss, ebp - 0xec));   /* mov ebx, [ebp+0xffffff14] */
    II(0x10137e1a, 0x6)   mov(edx, memd_a32(ss, ebp - 0xe4));   /* mov edx, [ebp+0xffffff1c] */
    II(0x10137e20, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x10137e23, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137e27, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137e2a, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10137e2d, 0x5)   calld(sys_memcpy, 0x2e019);           /* call 0x10165e4b */
    II(0x10137e32, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10137e37, 0x5)   calld(/* sys */ 0x1016a24c, 0x32410); /* call 0x1016a24c */
    II(0x10137e3c, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137e40, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137e43, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x10137e46, 0x6)   mov(memd_a32(ss, ebp - 0xf2), eax);   /* mov [ebp+0xffffff0e], eax */
    II(0x10137e4c, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe0));   /* mov eax, [ebp+0xffffff20] */
    II(0x10137e52, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10137e55, 0x7)   mov(memw_a32(ss, ebp - 0xf8), ax);    /* mov [ebp+0xffffff08], ax */
    II(0x10137e5c, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x10137e61, 0x6)   lea(edx, ebp - 0x110);                /* lea edx, [ebp+0xfffffef0] */
    II(0x10137e67, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x1c)); /* movsx eax, word [ebp+0x1c] */
    II(0x10137e6b, 0x3)   add(eax, memd_a32(ss, ebp - 0x34));   /* add eax, [ebp-0x34] */
    II(0x10137e6e, 0x5)   calld(/* sys */ 0x101793f8, 0x41585); /* call 0x101793f8 */
    II(0x10137e73, 0x5)   mov(ecx, 0xc7);                       /* mov ecx, 0xc7 */
    II(0x10137e78, 0x5)   mov(ebx, 0xb1);                       /* mov ebx, 0xb1 */
    II(0x10137e7d, 0x5)   mov(edx, 0xa5);                       /* mov edx, 0xa5 */
    II(0x10137e82, 0x6)   lea(eax, ebp - 0x114);                /* lea eax, [ebp+0xfffffeec] */
    II(0x10137e88, 0x5)   calld(0x100d53a4, -0x62ae9);          /* call 0x100d53a4 */
    II(0x10137e8d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137e8e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10137e93, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137e94, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10137e99, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137e9a, 0x5)   mov(eax, 0x46);                       /* mov eax, 0x46 */
    II(0x10137e9f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137ea0, 0x5)   mov(eax, 0x28);                       /* mov eax, 0x28 */
    II(0x10137ea5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137ea6, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10137ea8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10137eaa, 0x6)   lea(edx, ebp - 0x110);                /* lea edx, [ebp+0xfffffef0] */
    II(0x10137eb0, 0x6)   lea(eax, ebp - 0x108);                /* lea eax, [ebp+0xfffffef8] */
    II(0x10137eb6, 0x5)   calld(0x100eab9d, -0x4d31e);          /* call 0x100eab9d */
    II(0x10137ebb, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137ebf, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137ec2, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10137ec5, 0x6)   mov(memd_a32(ss, ebp - 0xf2), eax);   /* mov [ebp+0xffffff0e], eax */
    II(0x10137ecb, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe4));   /* mov eax, [ebp+0xffffff1c] */
    II(0x10137ed1, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10137ed4, 0x7)   mov(memw_a32(ss, ebp - 0xf8), ax);    /* mov [ebp+0xffffff08], ax */
    II(0x10137edb, 0x5)   mov(ecx, 0xc7);                       /* mov ecx, 0xc7 */
    II(0x10137ee0, 0x5)   mov(ebx, 0x3a);                       /* mov ebx, 0x3a */
    II(0x10137ee5, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x10137eea, 0x6)   lea(eax, ebp - 0x118);                /* lea eax, [ebp+0xfffffee8] */
    II(0x10137ef0, 0x5)   calld(0x100d53a4, -0x62b51);          /* call 0x100d53a4 */
    II(0x10137ef5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137ef6, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10137efb, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137efc, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10137f01, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137f02, 0x5)   mov(eax, 0x46);                       /* mov eax, 0x46 */
    II(0x10137f07, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137f08, 0x5)   mov(eax, 0x28);                       /* mov eax, 0x28 */
    II(0x10137f0d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137f0e, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10137f10, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10137f12, 0x6)   lea(edx, ebp - 0x110);                /* lea edx, [ebp+0xfffffef0] */
    II(0x10137f18, 0x6)   lea(eax, ebp - 0x108);                /* lea eax, [ebp+0xfffffef8] */
    II(0x10137f1e, 0x5)   calld(0x100eab9d, -0x4d386);          /* call 0x100eab9d */
    II(0x10137f23, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10137f28, 0x5)   calld(/* sys */ 0x1016a24c, 0x3231f); /* call 0x1016a24c */
    II(0x10137f2d, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x10137f32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10137f35, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x10137f38, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10137f3b, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10137f3d, 0x6)   imul(edx, eax, 0x192);                /* imul edx, eax, 0x192 */
    II(0x10137f43, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137f47, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137f4a, 0x3)   add(edx, 0x10);                       /* add edx, 0x10 */
    II(0x10137f4d, 0x3)   mov(memd_a32(ds, eax + 0x4), edx);    /* mov [eax+0x4], edx */
    II(0x10137f50, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x10137f55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10137f58, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x10137f5b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10137f5e, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10137f60, 0x3)   imul(edx, edx, 0x4c);                 /* imul edx, edx, 0x4c */
    II(0x10137f63, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137f67, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137f6a, 0x3)   add(edx, 0x2c);                       /* add edx, 0x2c */
    II(0x10137f6d, 0x3)   mov(memd_a32(ds, eax + 0x8), edx);    /* mov [eax+0x8], edx */
    II(0x10137f70, 0x6)   mov(edx, memd_a32(ss, ebp - 0xe0));   /* mov edx, [ebp+0xffffff20] */
    II(0x10137f76, 0x3)   movsx(edx, memw_a32(ds, edx));        /* movsx edx, word [edx] */
    II(0x10137f79, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137f7d, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137f80, 0x3)   mov(memd_a32(ds, eax + 0xc), edx);    /* mov [eax+0xc], edx */
    II(0x10137f83, 0x6)   mov(edx, memd_a32(ss, ebp - 0xe0));   /* mov edx, [ebp+0xffffff20] */
    II(0x10137f89, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10137f8b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10137f8e, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137f92, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137f95, 0x3)   mov(memd_a32(ds, eax + 0x10), edx);   /* mov [eax+0x10], edx */
    II(0x10137f98, 0x4)   imul(edx, memd_a32(ss, ebp - 0x34), 0x53); /* imul edx, [ebp-0x34], 0x53 */
    II(0x10137f9c, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10137f9f, 0x3)   mov(dl, memb_a32(ds, edx + 0x4e));    /* mov dl, [edx+0x4e] */
    II(0x10137fa2, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x10137fa8, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137fac, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137faf, 0x5)   calld(0x1013784d, -0x767);            /* call 0x1013784d */
    II(0x10137fb4, 0x2)   pushd(0x1);                           /* push 0x1 */
    II(0x10137fb6, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x10137fb8, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137fbc, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137fbf, 0x3)   pushd(memd_a32(ds, eax + 0x18));      /* push dword [eax+0x18] */
    II(0x10137fc2, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10137fc6, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10137fc9, 0x3)   pushd(memd_a32(ds, eax + 0x14));      /* push dword [eax+0x14] */
    II(0x10137fcc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10137fcf, 0x5)   add(eax, 0x3f3);                      /* add eax, 0x3f3 */
    II(0x10137fd4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137fd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10137fd8, 0x5)   add(eax, 0x3e9);                      /* add eax, 0x3e9 */
    II(0x10137fdd, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137fde, 0x2)   pushd(-0x1 /* 0xff */);               /* push 0xff */
    II(0x10137fe0, 0x2)   pushd(-0x1 /* 0xff */);               /* push 0xff */
    II(0x10137fe2, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe0));   /* mov eax, [ebp+0xffffff20] */
    II(0x10137fe8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10137fea, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10137fed, 0x1)   pushd(eax);                           /* push eax */
    II(0x10137fee, 0x6)   mov(ecx, memd_a32(ss, ebp - 0xe0));   /* mov ecx, [ebp+0xffffff20] */
    II(0x10137ff4, 0x3)   movsx(ecx, memw_a32(ds, ecx));        /* movsx ecx, word [ecx] */
    II(0x10137ff7, 0x4)   imul(ebx, memd_a32(ss, ebp - 0x34), 0x53); /* imul ebx, [ebp-0x34], 0x53 */
    II(0x10137ffb, 0x3)   add(ebx, memd_a32(ss, ebp - 0x10));   /* add ebx, [ebp-0x10] */
    II(0x10137ffe, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x8));    /* mov ebx, [ebx+0x8] */
    II(0x10138001, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10138005, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10138008, 0x3)   mov(edx, memd_a32(ds, eax + 0x4));    /* mov edx, [eax+0x4] */
    II(0x1013800b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013800e, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10138011, 0x5)   calld(/* sys */ 0x101686b0, 0x3069a); /* call 0x101686b0 */
    II(0x10138016, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10138018, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x1013801c, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1013801f, 0x3)   mov(memd_a32(ds, eax + 0x1c), edx);   /* mov [eax+0x1c], edx */
    II(0x10138022, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe0));   /* mov eax, [ebp+0xffffff20] */
    II(0x10138028, 0x5)   calld(sys_delete, 0x2df37);           /* call 0x10165f64 */
    II(0x1013802d, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe4));   /* mov eax, [ebp+0xffffff1c] */
    II(0x10138033, 0x5)   calld(sys_delete, 0x2df2c);           /* call 0x10165f64 */
    II(0x10138038, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013803b, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x1013803e, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34), 0x53); /* imul eax, [ebp-0x34], 0x53 */
    II(0x10138042, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10138045, 0x5)   calld(0x10136c02, -0x1448);           /* call 0x10136c02 */
    II(0x1013804a, 0x4)   imul(edx, memd_a32(ss, ebp - 0x34), 0x53); /* imul edx, [ebp-0x34], 0x53 */
    II(0x1013804e, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x10138051, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10138054, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10138057, 0x3)   mov(edx, memd_a32(ds, edx + 0x1c));   /* mov edx, [edx+0x1c] */
    II(0x1013805a, 0x7)   mov(memd_a32(ds, eax + ebp - 0x140), edx); /* mov [eax+ebp+0xfffffec0], edx */
    II(0x10138061, 0x5)   jmpd(0x10137b03, -0x563);             /* jmp 0x10137b03 */
l_0x10138066:
    II(0x10138066, 0x6)   lea(edx, ebp - 0x140);                /* lea edx, [ebp+0xfffffec0] */
    II(0x1013806c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013806f, 0x5)   calld(/* sys */ 0x10169a78, 0x31a04); /* call 0x10169a78 */
    II(0x10138074, 0x5)   pushd(0x149);                         /* push dword 0x149 */
    II(0x10138079, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x1013807b, 0x5)   mov(eax, 0x1b6);                      /* mov eax, 0x1b6 */
    II(0x10138080, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138081, 0x5)   mov(ecx, 0x21);                       /* mov ecx, 0x21 */
    II(0x10138086, 0x5)   mov(ebx, 0x344);                      /* mov ebx, 0x344 */
    II(0x1013808b, 0x5)   mov(edx, 0x343);                      /* mov edx, 0x343 */
    II(0x10138090, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10138093, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10138096, 0x5)   calld(0x1013791f, -0x77c);            /* call 0x1013791f */
    II(0x1013809b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1013809d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101380a0, 0x2)   mov(memd_a32(ds, eax), edx);          /* mov [eax], edx */
    II(0x101380a2, 0x5)   pushd(0x151);                         /* push dword 0x151 */
    II(0x101380a7, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x101380a9, 0x5)   mov(eax, 0x1b6);                      /* mov eax, 0x1b6 */
    II(0x101380ae, 0x1)   pushd(eax);                           /* push eax */
    II(0x101380af, 0x5)   mov(ecx, 0x3f);                       /* mov ecx, 0x3f */
    II(0x101380b4, 0x5)   mov(ebx, 0x346);                      /* mov ebx, 0x346 */
    II(0x101380b9, 0x5)   mov(edx, 0x345);                      /* mov edx, 0x345 */
    II(0x101380be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101380c1, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x101380c4, 0x5)   calld(0x1013791f, -0x7aa);            /* call 0x1013791f */
    II(0x101380c9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101380cc, 0x3)   mov(memd_a32(ds, edx + 0x4), eax);    /* mov [edx+0x4], eax */
    II(0x101380cf, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101380d4, 0x5)   calld(/* sys */ 0x1016a24c, 0x32173); /* call 0x1016a24c */
    II(0x101380d9, 0x5)   pushd(0x3ff);                         /* push dword 0x3ff */
    II(0x101380de, 0x5)   mov(eax, 0x101ac815);                 /* mov eax, 0x101ac815 */ /* "Load" */
    II(0x101380e3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101380e4, 0x5)   mov(eax, 0x1b6);                      /* mov eax, 0x1b6 */
    II(0x101380e9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101380ea, 0x5)   mov(ecx, 0x202);                      /* mov ecx, 0x202 */
    II(0x101380ef, 0x5)   mov(ebx, 0x33e);                      /* mov ebx, 0x33e */
    II(0x101380f4, 0x5)   mov(edx, 0x33d);                      /* mov edx, 0x33d */
    II(0x101380f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101380fc, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x101380ff, 0x5)   calld(0x1013791f, -0x7e5);            /* call 0x1013791f */
    II(0x10138104, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10138107, 0x3)   mov(memd_a32(ds, edx + 0x8), eax);    /* mov [edx+0x8], eax */
    II(0x1013810a, 0x5)   pushd(0x3fd);                         /* push dword 0x3fd */
    II(0x1013810f, 0x5)   mov(eax, 0x101ac81a);                 /* mov eax, 0x101ac81a */ /* "?" */
    II(0x10138114, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138115, 0x5)   mov(eax, 0x1b6);                      /* mov eax, 0x1b6 */
    II(0x1013811a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013811b, 0x5)   mov(ecx, 0x1d1);                      /* mov ecx, 0x1d1 */
    II(0x10138120, 0x5)   mov(ebx, 0x33c);                      /* mov ebx, 0x33c */
    II(0x10138125, 0x5)   mov(edx, 0x33b);                      /* mov edx, 0x33b */
    II(0x1013812a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013812d, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10138130, 0x5)   calld(0x1013791f, -0x816);            /* call 0x1013791f */
    II(0x10138135, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10138138, 0x3)   mov(memd_a32(ds, edx + 0xc), eax);    /* mov [edx+0xc], eax */
    II(0x1013813b, 0x5)   pushd(0x3e8);                         /* push dword 0x3e8 */
    II(0x10138140, 0x4)   cmp(memb_a32(ss, ebp + 0x10), 0);     /* cmp byte [ebp+0x10], 0x0 */
    II(0x10138144, 0x2)   jzd(0x10138152, 0xc);                 /* jz 0x10138152 */
    II(0x10138146, 0xa)   mov(memd_a32(ss, ebp - 0x144), 0x101ac81c); /* mov dword [ebp+0xfffffebc], 0x101ac81c */ /* "Return" */
    II(0x10138150, 0x2)   jmpd(0x1013815c, 0xa);                /* jmp 0x1013815c */
l_0x10138152:
    II(0x10138152, 0xa)   mov(memd_a32(ss, ebp - 0x144), 0x101ac823); /* mov dword [ebp+0xfffffebc], 0x101ac823 */ /* "Cancel" */
l_0x1013815c:
    II(0x1013815c, 0x6)   pushd(memd_a32(ss, ebp - 0x144));     /* push dword [ebp+0xfffffebc] */
    II(0x10138162, 0x5)   mov(eax, 0x1b6);                      /* mov eax, 0x1b6 */
    II(0x10138167, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138168, 0x5)   mov(ecx, 0x162);                      /* mov ecx, 0x162 */
    II(0x1013816d, 0x5)   mov(ebx, 0x33a);                      /* mov ebx, 0x33a */
    II(0x10138172, 0x5)   mov(edx, 0x339);                      /* mov edx, 0x339 */
    II(0x10138177, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013817a, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1013817d, 0x5)   calld(0x1013791f, -0x863);            /* call 0x1013791f */
    II(0x10138182, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10138184, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10138187, 0x3)   mov(memd_a32(ds, eax + 0x10), edx);   /* mov [eax+0x10], edx */
    II(0x1013818a, 0x4)   cmp(memb_a32(ss, ebp + 0x10), 0);     /* cmp byte [ebp+0x10], 0x0 */
    II(0x1013818e, 0x2)   jzd(0x101381f6, 0x66);                /* jz 0x101381f6 */
    II(0x10138190, 0x5)   pushd(0x400);                         /* push dword 0x400 */
    II(0x10138195, 0x5)   mov(eax, 0x101ac82a);                 /* mov eax, 0x101ac82a */ /* "Quit" */
    II(0x1013819a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013819b, 0x5)   mov(eax, 0x1b6);                      /* mov eax, 0x1b6 */
    II(0x101381a0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101381a1, 0x5)   mov(ecx, 0xf3);                       /* mov ecx, 0xf3 */
    II(0x101381a6, 0x5)   mov(ebx, 0x338);                      /* mov ebx, 0x338 */
    II(0x101381ab, 0x5)   mov(edx, 0x337);                      /* mov edx, 0x337 */
    II(0x101381b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101381b3, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x101381b6, 0x5)   calld(0x1013791f, -0x89c);            /* call 0x1013791f */
    II(0x101381bb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101381bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101381c0, 0x3)   mov(memd_a32(ds, eax + 0x14), edx);   /* mov [eax+0x14], edx */
    II(0x101381c3, 0x5)   pushd(0x3fe);                         /* push dword 0x3fe */
    II(0x101381c8, 0x5)   mov(eax, 0x101ac82f);                 /* mov eax, 0x101ac82f */ /* "Save" */
    II(0x101381cd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101381ce, 0x5)   mov(eax, 0x1b6);                      /* mov eax, 0x1b6 */
    II(0x101381d3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101381d4, 0x5)   mov(ecx, 0x84);                       /* mov ecx, 0x84 */
    II(0x101381d9, 0x5)   mov(ebx, 0x336);                      /* mov ebx, 0x336 */
    II(0x101381de, 0x5)   mov(edx, 0x335);                      /* mov edx, 0x335 */
    II(0x101381e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101381e6, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x101381e9, 0x5)   calld(0x1013791f, -0x8cf);            /* call 0x1013791f */
    II(0x101381ee, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101381f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101381f3, 0x3)   mov(memd_a32(ds, eax + 0x18), edx);   /* mov [eax+0x18], edx */
l_0x101381f6:
    II(0x101381f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101381f9, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x101381fc, 0x5)   calld(sys_display_draw_0, 0x2f283);   /* call 0x10167484 */
    II(0x10138201, 0x4)   cmp(memb_a32(ss, ebp + 0x20), 0);     /* cmp byte [ebp+0x20], 0x0 */
    II(0x10138205, 0x2)   jzd(0x1013823a, 0x33);                /* jz 0x1013823a */
    II(0x10138207, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10138209, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013820a, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1013820f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138210, 0x5)   mov(eax, 0x68);                       /* mov eax, 0x68 */
    II(0x10138215, 0x1)   pushd(eax);                           /* push eax */
    II(0x10138216, 0x5)   mov(ecx, 0x100);                      /* mov ecx, 0x100 */
    II(0x1013821b, 0x5)   mov(ebx, 0x280);                      /* mov ebx, 0x280 */
    II(0x10138220, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10138222, 0x5)   calld(0x100e883d, -0x4f9ea);          /* call 0x100e883d */
    II(0x10138227, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10138229, 0x5)   mov(eax, 0x4b1);                      /* mov eax, 0x4b1 */
    II(0x1013822e, 0x5)   calld(0x100f04d8, -0x47d5b);          /* call 0x100f04d8 */
    II(0x10138233, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10138235, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10138238, 0x2)   mov(memd_a32(ds, eax), edx);          /* mov [eax], edx */
l_0x1013823a:
    II(0x1013823a, 0x5)   calld(/* sys */ 0x1016bcc4, 0x33a85); /* call 0x1016bcc4 */
    II(0x1013823f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10138241, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10138242, 0x1)   popd(edi);                            /* pop edi */
    II(0x10138243, 0x1)   popd(esi);                            /* pop esi */
    II(0x10138244, 0x3)   retd(0x14);                           /* ret 0x14 */
FUNC_END

