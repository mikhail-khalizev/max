FUNC_BEGIN(0x1010610a, 0x535cad7d85370cd0, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x3e, 0xfc, 0x5, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf4, 0x88, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x80, 0x7d, 0xfc, 0x76, 0xf, 0x8d, 0x77, 0, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x80, 0xac, 0, 0, 0, 0x89, 0x45, 0xf0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0x82, 0xac, 0, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xe8, 0x50, 0xff, 0xff, 0xff, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0x8c, 0xd5, 0x1, 0, 0x83, 0xc4, 0x8, 0x85, 0xc0, 0x74, 0x2d, 0xf, 0xbe, 0x45, 0xfc, 0x8d, 0x4, 0xc0, 0xff, 0xb0, 0x80, 0x8b, 0x1b, 0x10, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0xc5, 0xd6, 0x1, 0, 0x83, 0xc4, 0x8, 0x85, 0xc0, 0x74, 0x10, 0x8b, 0x45, 0xf8, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0xe3, 0xdb, 0x1, 0, 0x83, 0xc4, 0x8, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1010610a, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1010610f, 0x5)   calld(sys_check_available_stack_size, 0x5fc3e); /* call 0x10165d52 */
    II(0x10106114, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10106115, 0x1)   pushd(esi);                           /* push esi */
    II(0x10106116, 0x1)   pushd(edi);                           /* push edi */
    II(0x10106117, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10106118, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010611a, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10106120, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10106123, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10106126, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10106129, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x76);   /* cmp byte [ebp-0x4], 0x76 */
    II(0x1010612d, 0x6)   jged(0x101061aa, 0x77);               /* jge dword 0x101061aa */
    II(0x10106133, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10106137, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010613a, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010613d, 0x6)   mov(eax, memd_a32(ds, eax + 0xac));   /* mov eax, [eax+0xac] */
    II(0x10106143, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10106146, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010614a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010614d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10106150, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10106152, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10106155, 0x6)   mov(memd_a32(ds, edx + 0xac), eax);   /* mov [edx+0xac], eax */
    II(0x1010615b, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010615f, 0x5)   calld(0x101060b4, -0xb0);             /* call 0x101060b4 */
    II(0x10106164, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106165, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10106168, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106169, 0x5)   calld(0x101236fa, 0x1d58c);           /* call 0x101236fa */
    II(0x1010616e, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x10106171, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10106173, 0x2)   jzd(0x101061a2, 0x2d);                /* jz 0x101061a2 */
    II(0x10106175, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10106179, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x1010617c, 0x6)   pushd(memd_a32(ds, eax + 0x101b8b80)); /* push dword [eax+0x101b8b80] */
    II(0x10106182, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10106185, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106186, 0x5)   calld(0x10123850, 0x1d6c5);           /* call 0x10123850 */
    II(0x1010618b, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x1010618e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10106190, 0x2)   jzd(0x101061a2, 0x10);                /* jz 0x101061a2 */
    II(0x10106192, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10106195, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106196, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10106199, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010619a, 0x5)   calld(0x10123d82, 0x1dbe3);           /* call 0x10123d82 */
    II(0x1010619f, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
l_0x101061a2:
    II(0x101061a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101061a5, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101061a8, 0x2)   jmpd(0x101061b1, 0x7);                /* jmp 0x101061b1 */
l_0x101061aa:
    II(0x101061aa, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x101061b1:
    II(0x101061b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101061b4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101061b6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101061b7, 0x1)   popd(edi);                            /* pop edi */
    II(0x101061b8, 0x1)   popd(esi);                            /* pop esi */
    II(0x101061b9, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101061ba, 0x1)   retd();                               /* ret */
FUNC_END

