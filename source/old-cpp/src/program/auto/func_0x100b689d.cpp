FUNC_BEGIN(0x100b689d, 0x3398d9b48ef0901b, 0x20, ({0x68, 0xbc, 0, 0, 0, 0xe8, 0xab, 0xf4, 0xa, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x98, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x74, 0xfa, 0xfb, 0xff, 0x8d, 0x5d, 0xd8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xe8, 0xfb, 0xfb, 0xff, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x11, 0x2, 0xfc, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x9, 0x2, 0xfc, 0xff, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x60, 0xc1, 0x9, 0, 0x84, 0xc0, 0x75, 0x13, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x68, 0xf6, 0xfb, 0xff, 0xe9, 0x23, 0x5, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x2b, 0xf9, 0xfb, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x52, 0x66, 0x3b, 0x50, 0x19, 0x7d, 0xf, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0xf8, 0x1, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0xe8, 0x99, 0x3d, 0xfd, 0xff, 0x98, 0x89, 0x45, 0xd0, 0xff, 0x75, 0xd0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x6, 0xc6, 0x45, 0xd4, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xd4, 0x3, 0x8b, 0x4d, 0xd1, 0xc1, 0xf9, 0x18, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xc0, 0xe8, 0x55, 0x95, 0x6, 0, 0x89, 0x45, 0xbc, 0x80, 0x65, 0xf0, 0xfe, 0xeb, 0x8, 0x8d, 0x45, 0xd8, 0xe8, 0x7b, 0x2, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xea, 0x43, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x29, 0x1, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x9, 0xfa, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0xe, 0x8d, 0x45, 0xd8, 0xe8, 0xef, 0xf9, 0xfb, 0xff, 0xf6, 0x40, 0x13, 0x1, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xd8, 0xe8, 0xdf, 0xf9, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x39, 0x75, 0x2, 0xeb, 0x11, 0x8d, 0x45, 0xd8, 0xe8, 0xce, 0xf9, 0xfb, 0xff, 0xe8, 0xd5, 0xbc, 0x9, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x20, 0x8d, 0x45, 0xd8, 0xe8, 0xbb, 0xf9, 0xfb, 0xff, 0xe8, 0xc2, 0xbc, 0x9, 0, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xb8, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x74, 0x2, 0xeb, 0x11, 0x8d, 0x45, 0xd8, 0xe8, 0xcd, 0xf9, 0xfb, 0xff, 0xe8, 0xcf, 0xc4, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0x9e, 0, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x83, 0xf9, 0xfb, 0xff, 0xe8, 0x8a, 0xbc, 0x9, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0xe8, 0x1a, 0x68, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x14, 0x8d, 0x45, 0xd8, 0xe8, 0x67, 0xf9, 0xfb, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x6e, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xd8, 0xe8, 0x84, 0xf9, 0xfb, 0xff, 0xe8, 0xac, 0xa2, 0xfb, 0xff, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xdc, 0, 0x74, 0x9, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0x19, 0x8d, 0x5d, 0xc0, 0x8d, 0x45, 0xd8, 0xe8, 0x62, 0xf9, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x76, 0xb1, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x31, 0x8d, 0x45, 0xd8, 0xe8, 0x4a, 0xf9, 0xfb, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xec, 0x8d, 0x45, 0xd8, 0xe8, 0x5, 0xf9, 0xfb, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x45, 0xe0, 0x8d, 0x45, 0xd8, 0xe8, 0xf5, 0xf8, 0xfb, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x45, 0xe2, 0xe9, 0xbd, 0xfe, 0xff, 0xff, 0x83, 0x7d, 0xdc, 0, 0x74, 0x62, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x75, 0x9, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0x3, 0, 0, 0, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xb0, 0xe8, 0x81, 0xf3, 0xfb, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb2, 0xa1, 0xfb, 0xff, 0x66, 0x3b, 0x45, 0xe8, 0x7f, 0x2b, 0x8b, 0x5d, 0xdc, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x96, 0xfa, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xeb, 0x21, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x51, 0xf4, 0xfb, 0xff, 0xe9, 0xc, 0x3, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xd2, 0x21, 0xfd, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0xf, 0x8e, 0xa5, 0x1, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xf3, 0xf7, 0xfb, 0xff, 0x8d, 0x5d, 0xd8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xeb, 0xf8, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd8, 0xe8, 0x9d, 0, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xc, 0x42, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x73, 0x1, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x2b, 0xf8, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x12, 0x8d, 0x45, 0xd8, 0xe8, 0x1d, 0xf8, 0xfb, 0xff, 0xe8, 0x94, 0xf5, 0xfb, 0xff, 0x3b, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0x1a, 0x8d, 0x45, 0xd8, 0xe8, 0x9, 0xf8, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x5, 0xe9, 0x2d, 0x1, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0xea, 0xf7, 0xfb, 0xff, 0xe8, 0xf1, 0xba, 0x9, 0, 0x85, 0xc0, 0x74, 0x20, 0x8d, 0x45, 0xd8, 0xe8, 0xd9, 0xf7, 0xfb, 0xff, 0xe8, 0xe0, 0xba, 0x9, 0, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xac, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x74, 0x4e, 0xb8, 0x49, 0, 0, 0, 0xe8, 0x17, 0xf2, 0xa, 0, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xa4, 0x83, 0x7d, 0xa4, 0, 0x74, 0x22, 0xbb, 0xbb, 0xe, 0xb, 0x10, 0x8d, 0x45, 0xd8, 0xe8, 0xcf, 0xf7, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xa8, 0xe8, 0x4e, 0x58, 0xff, 0xff, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x89, 0x45, 0x9c, 0xeb, 0x6, 0x8b, 0x45, 0xa4, 0x89, 0x45, 0x9c, 0x8b, 0x55, 0x9c, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x23, 0xe1, 0xfe, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0x6b, 0xf7, 0xfb, 0xff, 0xe8, 0x72, 0xba, 0x9, 0, 0x89, 0x45, 0x98, 0x8b, 0x45, 0x98, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0x98, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x75, 0x9, 0xc7, 0x45, 0x94, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x20, 0x11, 0, 0, 0xbb, 0x91, 0x11, 0x1a, 0x10, 0xba, 0x9d, 0x11, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x26, 0xf1, 0xa, 0, 0x89, 0x45, 0x94, 0x8d, 0x55, 0x90, 0x8d, 0x45, 0xd8, 0xe8, 0x26, 0xf7, 0xfb, 0xff, 0xe8, 0x2d, 0xba, 0x9, 0, 0xe8, 0x1c, 0x11, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xb6, 0x1e, 0xfd, 0xff, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0x8c, 0xe8, 0xcb, 0xf1, 0xfb, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xfc, 0x9f, 0xfb, 0xff, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7c, 0x2b, 0x83, 0x7d, 0xdc, 0, 0x74, 0x9, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0x1c, 0x8d, 0x45, 0xd8, 0xe8, 0xd, 0xf7, 0xfb, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xec, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xe0, 0xe8, 0x69, 0x1e, 0xfd, 0xff, 0xe9, 0x73, 0xfe, 0xff, 0xff, 0x83, 0x7d, 0xdc, 0, 0xf, 0x84, 0x28, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x75, 0x9, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0x3, 0, 0, 0, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0x88, 0xe8, 0x55, 0xf1, 0xfb, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x86, 0x9f, 0xfb, 0xff, 0x66, 0x3b, 0x45, 0xe8, 0x7f, 0x22, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0x84, 0xe8, 0x38, 0xf1, 0xfb, 0xff, 0x8b, 0x5d, 0xdc, 0x8b, 0x55, 0xfc, 0x8b, 0x75, 0xf8, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0xcc, 0xf9, 0xff, 0xff, 0xe9, 0xbf, 0, 0, 0, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xb3, 0xf0, 0xa, 0, 0x89, 0x45, 0x80, 0x8b, 0x45, 0x80, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x7c, 0xff, 0xff, 0xff, 0, 0x74, 0x5f, 0xb8, 0xbb, 0xe, 0xb, 0x10, 0x50, 0x8d, 0x55, 0xe0, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0xee, 0xf0, 0xfb, 0xff, 0x50, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x9, 0xc6, 0x85, 0x74, 0xff, 0xff, 0xff, 0x2, 0xeb, 0x7, 0xc6, 0x85, 0x74, 0xff, 0xff, 0xff, 0x3, 0x8b, 0x85, 0x71, 0xff, 0xff, 0xff, 0xc1, 0xf8, 0x18, 0x50, 0xf, 0xbf, 0x4d, 0xe8, 0x8b, 0x5d, 0xf8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0x80, 0xe8, 0x73, 0x54, 0xff, 0xff, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x68, 0xff, 0xff, 0xff, 0xe8, 0x82, 0x42, 0xfd, 0xff, 0x8d, 0x85, 0x68, 0xff, 0xff, 0xff, 0xe8, 0x9b, 0x41, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x5b, 0xdf, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x68, 0xff, 0xff, 0xff, 0xe8, 0x7a, 0x1d, 0xfd, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x5c, 0xf1, 0xfb, 0xff, 0xeb, 0x1a, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x4c, 0xf1, 0xfb, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x40, 0xf1, 0xfb, 0xff, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b689d, 0x5)   pushd(0xbc);                          /* push dword 0xbc */
    II(0x100b68a2, 0x5)   calld(sys_check_available_stack_size, 0xaf4ab); /* call 0x10165d52 */
    II(0x100b68a7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b68a8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b68a9, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b68aa, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b68ab, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b68ac, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b68ae, 0x6)   sub(esp, 0x98);                       /* sub esp, 0x98 */
    II(0x100b68b4, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b68b7, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b68ba, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100b68bf, 0x5)   calld(0x10076338, -0x4058c);          /* call 0x10076338 */
    II(0x100b68c4, 0x3)   lea(ebx, ebp - 0x28);                 /* lea ebx, [ebp-0x28] */
    II(0x100b68c7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b68c9, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b68cb, 0x5)   calld(0x100764b8, -0x40418);          /* call 0x100764b8 */
    II(0x100b68d0, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100b68d7, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b68da, 0x5)   calld(my_ctor_0x101b4184, -0x3fdef);  /* call 0x10076af0 */
    II(0x100b68df, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b68e2, 0x5)   calld(my_ctor_0x101b4184, -0x3fdf7);  /* call 0x10076af0 */
    II(0x100b68e7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b68ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b68ed, 0x5)   calld(0x10152a52, 0x9c160);           /* call 0x10152a52 */
    II(0x100b68f2, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b68f4, 0x2)   jnzd(0x100b6909, 0x13);               /* jnz 0x100b6909 */
    II(0x100b68f6, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b68fa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b68fc, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b68ff, 0x5)   calld(0x10075f6c, -0x40998);          /* call 0x10075f6c */
    II(0x100b6904, 0x5)   jmpd(0x100b6e2c, 0x523);              /* jmp 0x100b6e2c */
l_0x100b6909:
    II(0x100b6909, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b690c, 0x5)   calld(0x1007623c, -0x406d5);          /* call 0x1007623c */
    II(0x100b6911, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b6914, 0x4)   mov(dx, memw_a32(ds, edx + 0x52));    /* mov dx, [edx+0x52] */
    II(0x100b6918, 0x4)   cmp(dx, memw_a32(ds, eax + 0x19));    /* cmp dx, [eax+0x19] */
    II(0x100b691c, 0x2)   jged(0x100b692d, 0xf);                /* jge 0x100b692d */
    II(0x100b691e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6921, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100b6924, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b6929, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b692b, 0x2)   jgd(0x100b6932, 0x5);                 /* jg 0x100b6932 */
l_0x100b692d:
    II(0x100b692d, 0x5)   jmpd(0x100b6b2a, 0x1f8);              /* jmp 0x100b6b2a */
l_0x100b6932:
    II(0x100b6932, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x100b6936, 0x5)   calld(0x1008a6d4, -0x2c267);          /* call 0x1008a6d4 */
    II(0x100b693b, 0x1)   cwde();                               /* cwde */
    II(0x100b693c, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100b693f, 0x3)   pushd(memd_a32(ss, ebp - 0x30));      /* push dword [ebp-0x30] */
    II(0x100b6942, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6945, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x100b694a, 0x2)   jnzd(0x100b6952, 0x6);                /* jnz 0x100b6952 */
    II(0x100b694c, 0x4)   mov(memb_a32(ss, ebp - 0x2c), 0x2);   /* mov byte [ebp-0x2c], 0x2 */
    II(0x100b6950, 0x2)   jmpd(0x100b6956, 0x4);                /* jmp 0x100b6956 */
l_0x100b6952:
    II(0x100b6952, 0x4)   mov(memb_a32(ss, ebp - 0x2c), 0x3);   /* mov byte [ebp-0x2c], 0x3 */
l_0x100b6956:
    II(0x100b6956, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x2f));   /* mov ecx, [ebp-0x2f] */
    II(0x100b6959, 0x3)   sar(ecx, 0x18);                       /* sar ecx, 0x18 */
    II(0x100b695c, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100b6961, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b6964, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100b6967, 0x5)   calld(0x1011fec1, 0x69555);           /* call 0x1011fec1 */
    II(0x100b696c, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100b696f, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x100b6973, 0x2)   jmpd(0x100b697d, 0x8);                /* jmp 0x100b697d */
l_0x100b6975:
    II(0x100b6975, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6978, 0x5)   calld(0x10076bf8, -0x3fd85);          /* call 0x10076bf8 */
l_0x100b697d:
    II(0x100b697d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b697f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6982, 0x5)   calld(0x1013ad71, 0x843ea);           /* call 0x1013ad71 */
    II(0x100b6987, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b6989, 0x6)   jzd(0x100b6ab8, 0x129);               /* jz dword 0x100b6ab8 */
    II(0x100b698f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6992, 0x5)   calld(0x100763a0, -0x405f7);          /* call 0x100763a0 */
    II(0x100b6997, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6999, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100b699c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b699f, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b69a2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b69a5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b69a7, 0x2)   jnzd(0x100b69b7, 0xe);                /* jnz 0x100b69b7 */
    II(0x100b69a9, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b69ac, 0x5)   calld(0x100763a0, -0x40611);          /* call 0x100763a0 */
    II(0x100b69b1, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x100b69b5, 0x2)   jnzd(0x100b69b9, 0x2);                /* jnz 0x100b69b9 */
l_0x100b69b7:
    II(0x100b69b7, 0x2)   jmpd(0x100b69c8, 0xf);                /* jmp 0x100b69c8 */
l_0x100b69b9:
    II(0x100b69b9, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b69bc, 0x5)   calld(0x100763a0, -0x40621);          /* call 0x100763a0 */
    II(0x100b69c1, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x39);   /* cmp word [eax+0x8], 0x39 */
    II(0x100b69c6, 0x2)   jnzd(0x100b69ca, 0x2);                /* jnz 0x100b69ca */
l_0x100b69c8:
    II(0x100b69c8, 0x2)   jmpd(0x100b69db, 0x11);               /* jmp 0x100b69db */
l_0x100b69ca:
    II(0x100b69ca, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b69cd, 0x5)   calld(0x100763a0, -0x40632);          /* call 0x100763a0 */
    II(0x100b69d2, 0x5)   calld(0x101526ac, 0x9bcd5);           /* call 0x101526ac */
    II(0x100b69d7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b69d9, 0x2)   jnzd(0x100b69dd, 0x2);                /* jnz 0x100b69dd */
l_0x100b69db:
    II(0x100b69db, 0x2)   jmpd(0x100b69fd, 0x20);               /* jmp 0x100b69fd */
l_0x100b69dd:
    II(0x100b69dd, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b69e0, 0x5)   calld(0x100763a0, -0x40645);          /* call 0x100763a0 */
    II(0x100b69e5, 0x5)   calld(0x101526ac, 0x9bcc2);           /* call 0x101526ac */
    II(0x100b69ea, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x100b69ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100b69f0, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b69f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100b69f6, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100b69f9, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x100b69fb, 0x2)   jzd(0x100b69ff, 0x2);                 /* jz 0x100b69ff */
l_0x100b69fd:
    II(0x100b69fd, 0x2)   jmpd(0x100b6a10, 0x11);               /* jmp 0x100b6a10 */
l_0x100b69ff:
    II(0x100b69ff, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6a02, 0x5)   calld(0x100763d4, -0x40633);          /* call 0x100763d4 */
    II(0x100b6a07, 0x5)   calld(0x100a2edb, -0x13b31);          /* call 0x100a2edb */
    II(0x100b6a0c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b6a0e, 0x2)   jnzd(0x100b6a15, 0x5);                /* jnz 0x100b6a15 */
l_0x100b6a10:
    II(0x100b6a10, 0x5)   jmpd(0x100b6ab3, 0x9e);               /* jmp 0x100b6ab3 */
l_0x100b6a15:
    II(0x100b6a15, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6a18, 0x5)   calld(0x100763a0, -0x4067d);          /* call 0x100763a0 */
    II(0x100b6a1d, 0x5)   calld(0x101526ac, 0x9bc8a);           /* call 0x101526ac */
    II(0x100b6a22, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x100b6a25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100b6a28, 0x5)   calld(0x100ad247, -0x97e6);           /* call 0x100ad247 */
    II(0x100b6a2d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b6a2f, 0x2)   jnzd(0x100b6a45, 0x14);               /* jnz 0x100b6a45 */
    II(0x100b6a31, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6a34, 0x5)   calld(0x100763a0, -0x40699);          /* call 0x100763a0 */
    II(0x100b6a39, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100b6a3c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b6a41, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6a43, 0x2)   jnzd(0x100b6ab3, 0x6e);               /* jnz 0x100b6ab3 */
l_0x100b6a45:
    II(0x100b6a45, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b6a48, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6a4b, 0x5)   calld(0x100763d4, -0x4067c);          /* call 0x100763d4 */
    II(0x100b6a50, 0x5)   calld(0x10070d01, -0x45d54);          /* call 0x10070d01 */
    II(0x100b6a55, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b6a58, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100b6a5c, 0x2)   jzd(0x100b6a67, 0x9);                 /* jz 0x100b6a67 */
    II(0x100b6a5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b6a61, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100b6a65, 0x2)   jged(0x100b6a80, 0x19);               /* jge 0x100b6a80 */
l_0x100b6a67:
    II(0x100b6a67, 0x3)   lea(ebx, ebp - 0x40);                 /* lea ebx, [ebp-0x40] */
    II(0x100b6a6a, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6a6d, 0x5)   calld(0x100763d4, -0x4069e);          /* call 0x100763d4 */
    II(0x100b6a72, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6a74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6a77, 0x5)   calld(0x100b1bf2, -0x4e8a);           /* call 0x100b1bf2 */
    II(0x100b6a7c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b6a7e, 0x2)   jnzd(0x100b6a82, 0x2);                /* jnz 0x100b6a82 */
l_0x100b6a80:
    II(0x100b6a80, 0x2)   jmpd(0x100b6ab3, 0x31);               /* jmp 0x100b6ab3 */
l_0x100b6a82:
    II(0x100b6a82, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6a85, 0x5)   calld(0x100763d4, -0x406b6);          /* call 0x100763d4 */
    II(0x100b6a8a, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100b6a8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b6a90, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b6a93, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6a96, 0x5)   calld(0x100763a0, -0x406fb);          /* call 0x100763a0 */
    II(0x100b6a9b, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100b6a9f, 0x4)   mov(memw_a32(ss, ebp - 0x20), ax);    /* mov [ebp-0x20], ax */
    II(0x100b6aa3, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6aa6, 0x5)   calld(0x100763a0, -0x4070b);          /* call 0x100763a0 */
    II(0x100b6aab, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100b6aaf, 0x4)   mov(memw_a32(ss, ebp - 0x1e), ax);    /* mov [ebp-0x1e], ax */
l_0x100b6ab3:
    II(0x100b6ab3, 0x5)   jmpd(0x100b6975, -0x143);             /* jmp 0x100b6975 */
l_0x100b6ab8:
    II(0x100b6ab8, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100b6abc, 0x2)   jzd(0x100b6b20, 0x62);                /* jz 0x100b6b20 */
    II(0x100b6abe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6ac1, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100b6ac6, 0x2)   jnzd(0x100b6ad1, 0x9);                /* jnz 0x100b6ad1 */
    II(0x100b6ac8, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100b6acf, 0x2)   jmpd(0x100b6ad8, 0x7);                /* jmp 0x100b6ad8 */
l_0x100b6ad1:
    II(0x100b6ad1, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x3);   /* mov dword [ebp-0x18], 0x3 */
l_0x100b6ad8:
    II(0x100b6ad8, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100b6adb, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100b6ade, 0x5)   calld(0x10075e64, -0x40c7f);          /* call 0x10075e64 */
    II(0x100b6ae3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100b6ae6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6ae8, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b6aea, 0x5)   calld(0x10070ca1, -0x45e4e);          /* call 0x10070ca1 */
    II(0x100b6aef, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100b6af3, 0x2)   jgd(0x100b6b20, 0x2b);                /* jg 0x100b6b20 */
    II(0x100b6af5, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x24));   /* mov ebx, [ebp-0x24] */
    II(0x100b6af8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b6afb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b6afe, 0x5)   calld(0x100b6599, -0x56a);            /* call 0x100b6599 */
    II(0x100b6b03, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100b6b07, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6b09, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100b6b0c, 0x5)   calld(my_dtor_d1, -0x2de15);          /* call 0x10088cfc */
    II(0x100b6b11, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6b13, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6b16, 0x5)   calld(0x10075f6c, -0x40baf);          /* call 0x10075f6c */
    II(0x100b6b1b, 0x5)   jmpd(0x100b6e2c, 0x30c);              /* jmp 0x100b6e2c */
l_0x100b6b20:
    II(0x100b6b20, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6b22, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100b6b25, 0x5)   calld(my_dtor_d1, -0x2de2e);          /* call 0x10088cfc */
l_0x100b6b2a:
    II(0x100b6b2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6b2d, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100b6b30, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b6b33, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6b35, 0x6)   jled(0x100b6ce0, 0x1a5);              /* jle dword 0x100b6ce0 */
    II(0x100b6b3b, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100b6b40, 0x5)   calld(0x10076338, -0x4080d);          /* call 0x10076338 */
    II(0x100b6b45, 0x3)   lea(ebx, ebp - 0x28);                 /* lea ebx, [ebp-0x28] */
    II(0x100b6b48, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6b4a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b6b4c, 0x5)   calld(0x1007643c, -0x40715);          /* call 0x1007643c */
    II(0x100b6b51, 0x2)   jmpd(0x100b6b5b, 0x8);                /* jmp 0x100b6b5b */
l_0x100b6b53:
    II(0x100b6b53, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6b56, 0x5)   calld(0x10076bf8, -0x3ff63);          /* call 0x10076bf8 */
l_0x100b6b5b:
    II(0x100b6b5b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6b5d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6b60, 0x5)   calld(0x1013ad71, 0x8420c);           /* call 0x1013ad71 */
    II(0x100b6b65, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b6b67, 0x6)   jzd(0x100b6ce0, 0x173);               /* jz dword 0x100b6ce0 */
    II(0x100b6b6d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6b70, 0x5)   calld(0x100763a0, -0x407d5);          /* call 0x100763a0 */
    II(0x100b6b75, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100b6b79, 0x2)   jnzd(0x100b6b8d, 0x12);               /* jnz 0x100b6b8d */
    II(0x100b6b7b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6b7e, 0x5)   calld(0x100763a0, -0x407e3);          /* call 0x100763a0 */
    II(0x100b6b83, 0x5)   calld(0x1007611c, -0x40a6c);          /* call 0x1007611c */
    II(0x100b6b88, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100b6b8b, 0x2)   jzd(0x100b6b8f, 0x2);                 /* jz 0x100b6b8f */
l_0x100b6b8d:
    II(0x100b6b8d, 0x2)   jmpd(0x100b6ba9, 0x1a);               /* jmp 0x100b6ba9 */
l_0x100b6b8f:
    II(0x100b6b8f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6b92, 0x5)   calld(0x100763a0, -0x407f7);          /* call 0x100763a0 */
    II(0x100b6b97, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6b99, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100b6b9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b6b9f, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b6ba2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b6ba5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b6ba7, 0x2)   jzd(0x100b6bae, 0x5);                 /* jz 0x100b6bae */
l_0x100b6ba9:
    II(0x100b6ba9, 0x5)   jmpd(0x100b6cdb, 0x12d);              /* jmp 0x100b6cdb */
l_0x100b6bae:
    II(0x100b6bae, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6bb1, 0x5)   calld(0x100763a0, -0x40816);          /* call 0x100763a0 */
    II(0x100b6bb6, 0x5)   calld(0x101526ac, 0x9baf1);           /* call 0x101526ac */
    II(0x100b6bbb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6bbd, 0x2)   jzd(0x100b6bdf, 0x20);                /* jz 0x100b6bdf */
    II(0x100b6bbf, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6bc2, 0x5)   calld(0x100763a0, -0x40827);          /* call 0x100763a0 */
    II(0x100b6bc7, 0x5)   calld(0x101526ac, 0x9bae0);           /* call 0x101526ac */
    II(0x100b6bcc, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x100b6bcf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100b6bd2, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b6bd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100b6bd8, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100b6bdb, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x100b6bdd, 0x2)   jzd(0x100b6c2d, 0x4e);                /* jz 0x100b6c2d */
l_0x100b6bdf:
    II(0x100b6bdf, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100b6be4, 0x5)   calld(sys_new, 0xaf217);              /* call 0x10165e00 */
    II(0x100b6be9, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
//    II(0x100b6bec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100b6bef, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100b6bf2, 0x4)   cmp(memd_a32(ss, ebp - 0x5c), 0);     /* cmp dword [ebp-0x5c], 0x0 */
    II(0x100b6bf6, 0x2)   jzd(0x100b6c1a, 0x22);                /* jz 0x100b6c1a */
    II(0x100b6bf8, 0x5)   mov(ebx, 0x100b0ebb);                 /* mov ebx, 0x100b0ebb */
    II(0x100b6bfd, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6c00, 0x5)   calld(0x100763d4, -0x40831);          /* call 0x100763d4 */
    II(0x100b6c05, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6c07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100b6c0a, 0x5)   calld(0x100ac45d, -0xa7b2);           /* call 0x100ac45d */
    II(0x100b6c0f, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
//    II(0x100b6c12, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100b6c15, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x100b6c18, 0x2)   jmpd(0x100b6c20, 0x6);                /* jmp 0x100b6c20 */
l_0x100b6c1a:
    II(0x100b6c1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100b6c1d, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
l_0x100b6c20:
    II(0x100b6c20, 0x3)   mov(edx, memd_a32(ss, ebp - 0x64));   /* mov edx, [ebp-0x64] */
    II(0x100b6c23, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b6c28, 0x5)   calld(0x100a4d50, -0x11edd);          /* call 0x100a4d50 */
l_0x100b6c2d:
    II(0x100b6c2d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6c30, 0x5)   calld(0x100763a0, -0x40895);          /* call 0x100763a0 */
    II(0x100b6c35, 0x5)   calld(0x101526ac, 0x9ba72);           /* call 0x101526ac */
    II(0x100b6c3a, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
//    II(0x100b6c3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100b6c40, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b6c43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100b6c46, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100b6c49, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x100b6c4b, 0x2)   jnzd(0x100b6c56, 0x9);                /* jnz 0x100b6c56 */
    II(0x100b6c4d, 0x7)   mov(memd_a32(ss, ebp - 0x6c), 0);     /* mov dword [ebp-0x6c], 0x0 */
    II(0x100b6c54, 0x2)   jmpd(0x100b6c6f, 0x19);               /* jmp 0x100b6c6f */
l_0x100b6c56:
    II(0x100b6c56, 0x5)   mov(ecx, 0x1120);                     /* mov ecx, 0x1120 */
    II(0x100b6c5b, 0x5)   mov(ebx, 0x101a1191);                 /* mov ebx, 0x101a1191 */ /* "ai_move.cpp" */
    II(0x100b6c60, 0x5)   mov(edx, 0x101a119d);                 /* mov edx, 0x101a119d */ /* "client->GetTask()->GetType() == task_move" */
    II(0x100b6c65, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b6c67, 0x5)   calld(sys_assert, 0xaf126);           /* call 0x10165d92 */
    II(0x100b6c6c, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
l_0x100b6c6f:
    II(0x100b6c6f, 0x3)   lea(edx, ebp - 0x70);                 /* lea edx, [ebp-0x70] */
    II(0x100b6c72, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6c75, 0x5)   calld(0x100763a0, -0x408da);          /* call 0x100763a0 */
    II(0x100b6c7a, 0x5)   calld(0x101526ac, 0x9ba2d);           /* call 0x101526ac */
    II(0x100b6c7f, 0x5)   calld(0x100b7da0, 0x111c);            /* call 0x100b7da0 */
    II(0x100b6c84, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6c86, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b6c89, 0x5)   calld(0x10088b44, -0x2e14a);          /* call 0x10088b44 */
    II(0x100b6c8e, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100b6c91, 0x3)   lea(eax, ebp - 0x74);                 /* lea eax, [ebp-0x74] */
    II(0x100b6c94, 0x5)   calld(0x10075e64, -0x40e35);          /* call 0x10075e64 */
    II(0x100b6c99, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100b6c9c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6c9e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b6ca0, 0x5)   calld(0x10070ca1, -0x46004);          /* call 0x10070ca1 */
    II(0x100b6ca5, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b6ca8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100b6cac, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b6cae, 0x2)   jld(0x100b6cdb, 0x2b);                /* jl 0x100b6cdb */
    II(0x100b6cb0, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100b6cb4, 0x2)   jzd(0x100b6cbf, 0x9);                 /* jz 0x100b6cbf */
    II(0x100b6cb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b6cb9, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100b6cbd, 0x2)   jged(0x100b6cdb, 0x1c);               /* jge 0x100b6cdb */
l_0x100b6cbf:
    II(0x100b6cbf, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6cc2, 0x5)   calld(0x100763d4, -0x408f3);          /* call 0x100763d4 */
    II(0x100b6cc7, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100b6cca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b6ccd, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b6cd0, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100b6cd3, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b6cd6, 0x5)   calld(0x10088b44, -0x2e197);          /* call 0x10088b44 */
l_0x100b6cdb:
    II(0x100b6cdb, 0x5)   jmpd(0x100b6b53, -0x18d);             /* jmp 0x100b6b53 */
l_0x100b6ce0:
    II(0x100b6ce0, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100b6ce4, 0x6)   jzd(0x100b6e12, 0x128);               /* jz dword 0x100b6e12 */
    II(0x100b6cea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6ced, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100b6cf2, 0x2)   jnzd(0x100b6cfd, 0x9);                /* jnz 0x100b6cfd */
    II(0x100b6cf4, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100b6cfb, 0x2)   jmpd(0x100b6d04, 0x7);                /* jmp 0x100b6d04 */
l_0x100b6cfd:
    II(0x100b6cfd, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x3);   /* mov dword [ebp-0x18], 0x3 */
l_0x100b6d04:
    II(0x100b6d04, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100b6d07, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x100b6d0a, 0x5)   calld(0x10075e64, -0x40eab);          /* call 0x10075e64 */
    II(0x100b6d0f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100b6d12, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6d14, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b6d16, 0x5)   calld(0x10070ca1, -0x4607a);          /* call 0x10070ca1 */
    II(0x100b6d1b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100b6d1f, 0x2)   jgd(0x100b6d43, 0x22);                /* jg 0x100b6d43 */
    II(0x100b6d21, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100b6d24, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x100b6d27, 0x5)   calld(0x10075e64, -0x40ec8);          /* call 0x10075e64 */
    II(0x100b6d2c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x24));   /* mov ebx, [ebp-0x24] */
    II(0x100b6d2f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b6d32, 0x3)   mov(esi, memd_a32(ss, ebp - 0x8));    /* mov esi, [ebp-0x8] */
    II(0x100b6d35, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100b6d37, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100b6d39, 0x5)   calld(0x100b670a, -0x634);            /* call 0x100b670a */
    II(0x100b6d3e, 0x5)   jmpd(0x100b6e02, 0xbf);               /* jmp 0x100b6e02 */
l_0x100b6d43:
    II(0x100b6d43, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100b6d48, 0x5)   calld(sys_new, 0xaf0b3);              /* call 0x10165e00 */
    II(0x100b6d4d, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
//    II(0x100b6d50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x100b6d53, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
    II(0x100b6d59, 0x7)   cmp(memd_a32(ss, ebp - 0x84), 0);     /* cmp dword [ebp+0xffffff7c], 0x0 */
    II(0x100b6d60, 0x2)   jzd(0x100b6dc1, 0x5f);                /* jz 0x100b6dc1 */
    II(0x100b6d62, 0x5)   mov(eax, 0x100b0ebb);                 /* mov eax, 0x100b0ebb */
    II(0x100b6d67, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b6d68, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100b6d6b, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x100b6d71, 0x5)   calld(0x10075e64, -0x40f12);          /* call 0x10075e64 */
    II(0x100b6d76, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b6d77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6d7a, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x100b6d7f, 0x2)   jnzd(0x100b6d8a, 0x9);                /* jnz 0x100b6d8a */
    II(0x100b6d81, 0x7)   mov(memb_a32(ss, ebp - 0x8c), 0x2);   /* mov byte [ebp+0xffffff74], 0x2 */
    II(0x100b6d88, 0x2)   jmpd(0x100b6d91, 0x7);                /* jmp 0x100b6d91 */
l_0x100b6d8a:
    II(0x100b6d8a, 0x7)   mov(memb_a32(ss, ebp - 0x8c), 0x3);   /* mov byte [ebp+0xffffff74], 0x3 */
l_0x100b6d91:
    II(0x100b6d91, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8f));   /* mov eax, [ebp+0xffffff71] */
    II(0x100b6d97, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100b6d9a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b6d9b, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x18)); /* movsx ecx, word [ebp-0x18] */
    II(0x100b6d9f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100b6da2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b6da5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x100b6da8, 0x5)   calld(0x100ac220, -0xab8d);           /* call 0x100ac220 */
    II(0x100b6dad, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
//    II(0x100b6db3, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100b6db9, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
    II(0x100b6dbf, 0x2)   jmpd(0x100b6dcd, 0xc);                /* jmp 0x100b6dcd */
l_0x100b6dc1:
    II(0x100b6dc1, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x100b6dc7, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
l_0x100b6dcd:
    II(0x100b6dcd, 0x6)   mov(edx, memd_a32(ss, ebp - 0x94));   /* mov edx, [ebp+0xffffff6c] */
    II(0x100b6dd3, 0x6)   lea(eax, ebp - 0x98);                 /* lea eax, [ebp+0xffffff68] */
    II(0x100b6dd9, 0x5)   calld(0x1008b060, -0x2bd7e);          /* call 0x1008b060 */
    II(0x100b6dde, 0x6)   lea(eax, ebp - 0x98);                 /* lea eax, [ebp+0xffffff68] */
    II(0x100b6de4, 0x5)   calld(0x1008af84, -0x2be65);          /* call 0x1008af84 */
    II(0x100b6de9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b6deb, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b6df0, 0x5)   calld(0x100a4d50, -0x120a5);          /* call 0x100a4d50 */
    II(0x100b6df5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6df7, 0x6)   lea(eax, ebp - 0x98);                 /* lea eax, [ebp+0xffffff68] */
    II(0x100b6dfd, 0x5)   calld(0x10088b7c, -0x2e286);          /* call 0x10088b7c */
l_0x100b6e02:
    II(0x100b6e02, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100b6e06, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6e08, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6e0b, 0x5)   calld(0x10075f6c, -0x40ea4);          /* call 0x10075f6c */
    II(0x100b6e10, 0x2)   jmpd(0x100b6e2c, 0x1a);               /* jmp 0x100b6e2c */
l_0x100b6e12:
    II(0x100b6e12, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b6e16, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b6e18, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b6e1b, 0x5)   calld(0x10075f6c, -0x40eb4);          /* call 0x10075f6c */
    II(0x100b6e20, 0x2)   jmpd(0x100b6e2c, 0xa);                /* jmp 0x100b6e2c */
//  II(0x100b6e22, 0xa)   /* Недостижимый код. */
l_0x100b6e2c:
    II(0x100b6e2c, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100b6e2f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b6e31, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b6e32, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b6e33, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b6e34, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b6e35, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b6e36, 0x1)   retd();                               /* ret */
FUNC_END

