FUNC_BEGIN(0x10153ef5, 0x5919ff7373cd24fd, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x53, 0x1e, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x3d, 0x7d, 0x94, 0x1c, 0x10, 0, 0x74, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x5f, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x5e, 0x25, 0xff, 0, 0, 0, 0xc1, 0xf8, 0x3, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x3, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x5e, 0x25, 0xff, 0, 0, 0, 0x83, 0xc2, 0x4, 0x39, 0xd0, 0x7f, 0x29, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x5e, 0x1, 0x74, 0x1e, 0xf, 0xbf, 0x45, 0xf0, 0x66, 0xf, 0xbe, 0x80, 0x14, 0xd9, 0x1b, 0x10, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xf0, 0x66, 0xf, 0xbe, 0x80, 0x1c, 0xd9, 0x1b, 0x10, 0x89, 0x45, 0xf4, 0xeb, 0x2d, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x5e, 0x1, 0x74, 0x24, 0xf, 0xbf, 0x45, 0xf0, 0x66, 0xf, 0xbe, 0x80, 0x14, 0xd9, 0x1b, 0x10, 0x89, 0x45, 0xec, 0xf7, 0x5d, 0xec, 0xf, 0xbf, 0x45, 0xf0, 0x66, 0xf, 0xbe, 0x80, 0x1c, 0xd9, 0x1b, 0x10, 0x89, 0x45, 0xf4, 0xf7, 0x5d, 0xf4, 0x66, 0x83, 0x7d, 0xec, 0, 0x75, 0x7, 0x66, 0x83, 0x7d, 0xf4, 0, 0x74, 0x6a, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x5f, 0, 0x75, 0xb, 0x31, 0xc0, 0xa0, 0x7c, 0x94, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x7c, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xc5, 0x5f, 0xff, 0xff, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0x3c, 0x5c, 0xff, 0xff, 0x8b, 0x55, 0xec, 0x1, 0xd2, 0x8b, 0x45, 0xfc, 0x66, 0x29, 0x90, 0xd9, 0, 0, 0, 0x8b, 0x55, 0xf4, 0x1, 0xd2, 0x8b, 0x45, 0xfc, 0x66, 0x29, 0x90, 0xdb, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xb8, 0x5c, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x87, 0x5f, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x5f, 0x1, 0x8b, 0x45, 0xfc, 0x8a, 0x50, 0x5e, 0xfe, 0xc2, 0x8b, 0x45, 0xfc, 0x80, 0xe2, 0x3f, 0x88, 0x50, 0x5e, 0x66, 0x83, 0x7d, 0xec, 0, 0x75, 0x7, 0x66, 0x83, 0x7d, 0xf4, 0, 0x74, 0x6, 0xc6, 0x45, 0xe8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xf8, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10153ef5, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10153efa, 0x5)   calld(sys_check_available_stack_size, 0x11e53); /* call 0x10165d52 */
    II(0x10153eff, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10153f00, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10153f01, 0x1)   pushd(edx);                           /* push edx */
    II(0x10153f02, 0x1)   pushd(esi);                           /* push esi */
    II(0x10153f03, 0x1)   pushd(edi);                           /* push edi */
    II(0x10153f04, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10153f05, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10153f07, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x10153f0d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10153f10, 0x7)   cmp(memb_a32(ds, 0x101c947d), 0);     /* cmp byte [0x101c947d], 0x0 */
    II(0x10153f17, 0x2)   jzd(0x10153f20, 0x7);                 /* jz 0x10153f20 */
    II(0x10153f19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153f1c, 0x4)   mov(memb_a32(ds, eax + 0x5f), 0);     /* mov byte [eax+0x5f], 0x0 */
l_0x10153f20:
    II(0x10153f20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153f23, 0x3)   mov(al, memb_a32(ds, eax + 0x5e));    /* mov al, [eax+0x5e] */
    II(0x10153f26, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10153f2b, 0x3)   sar(eax, 0x3);                        /* sar eax, 0x3 */
    II(0x10153f2e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10153f31, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10153f38, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10153f3f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10153f43, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x10153f46, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10153f48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153f4b, 0x3)   mov(al, memb_a32(ds, eax + 0x5e));    /* mov al, [eax+0x5e] */
    II(0x10153f4e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10153f53, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x10153f56, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10153f58, 0x2)   jgd(0x10153f83, 0x29);                /* jg 0x10153f83 */
    II(0x10153f5a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153f5d, 0x4)   test(memb_a32(ds, eax + 0x5e), 0x1);  /* test byte [eax+0x5e], 0x1 */
    II(0x10153f61, 0x2)   jzd(0x10153f81, 0x1e);                /* jz 0x10153f81 */
    II(0x10153f63, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10153f67, 0x8)   movsx(ax, memb_a32(ds, eax + 0x101bd914)); /* movsx ax, byte [eax+0x101bd914] */
    II(0x10153f6f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10153f72, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10153f76, 0x8)   movsx(ax, memb_a32(ds, eax + 0x101bd91c)); /* movsx ax, byte [eax+0x101bd91c] */
    II(0x10153f7e, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x10153f81:
    II(0x10153f81, 0x2)   jmpd(0x10153fb0, 0x2d);               /* jmp 0x10153fb0 */
l_0x10153f83:
    II(0x10153f83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153f86, 0x4)   test(memb_a32(ds, eax + 0x5e), 0x1);  /* test byte [eax+0x5e], 0x1 */
    II(0x10153f8a, 0x2)   jzd(0x10153fb0, 0x24);                /* jz 0x10153fb0 */
    II(0x10153f8c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10153f90, 0x8)   movsx(ax, memb_a32(ds, eax + 0x101bd914)); /* movsx ax, byte [eax+0x101bd914] */
    II(0x10153f98, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10153f9b, 0x3)   neg(memd_a32(ss, ebp - 0x14));        /* neg dword [ebp-0x14] */
    II(0x10153f9e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10153fa2, 0x8)   movsx(ax, memb_a32(ds, eax + 0x101bd91c)); /* movsx ax, byte [eax+0x101bd91c] */
    II(0x10153faa, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10153fad, 0x3)   neg(memd_a32(ss, ebp - 0xc));         /* neg dword [ebp-0xc] */
l_0x10153fb0:
    II(0x10153fb0, 0x5)   cmp(memw_a32(ss, ebp - 0x14), 0);     /* cmp word [ebp-0x14], 0x0 */
    II(0x10153fb5, 0x2)   jnzd(0x10153fbe, 0x7);                /* jnz 0x10153fbe */
    II(0x10153fb7, 0x5)   cmp(memw_a32(ss, ebp - 0xc), 0);      /* cmp word [ebp-0xc], 0x0 */
    II(0x10153fbc, 0x2)   jzd(0x10154028, 0x6a);                /* jz 0x10154028 */
l_0x10153fbe:
    II(0x10153fbe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153fc1, 0x4)   cmp(memb_a32(ds, eax + 0x5f), 0);     /* cmp byte [eax+0x5f], 0x0 */
    II(0x10153fc5, 0x2)   jnzd(0x10153fd2, 0xb);                /* jnz 0x10153fd2 */
    II(0x10153fc7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10153fc9, 0x5)   mov(al, memb_a32(ds, 0x101c947c));    /* mov al, [0x101c947c] */
    II(0x10153fce, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10153fd0, 0x2)   jnzd(0x10153fdb, 0x9);                /* jnz 0x10153fdb */
l_0x10153fd2:
    II(0x10153fd2, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10153fd6, 0x5)   jmpd(0x10154057, 0x7c);               /* jmp 0x10154057 */
l_0x10153fdb:
    II(0x10153fdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153fde, 0x5)   calld(0x10149fa8, -0xa03b);           /* call 0x10149fa8 */
    II(0x10153fe3, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x10153fe7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10153feb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153fee, 0x5)   calld(0x10149c2f, -0xa3c4);           /* call 0x10149c2f */
    II(0x10153ff3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x10153ff6, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10153ff8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153ffb, 0x7)   sub(memw_a32(ds, eax + 0xd9), dx);    /* sub [eax+0xd9], dx */
    II(0x10154002, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10154005, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10154007, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015400a, 0x7)   sub(memw_a32(ds, eax + 0xdb), dx);    /* sub [eax+0xdb], dx */
    II(0x10154011, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154014, 0x5)   calld(0x10149cd1, -0xa348);           /* call 0x10149cd1 */
    II(0x10154019, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015401c, 0x5)   calld(0x10149fa8, -0xa079);           /* call 0x10149fa8 */
    II(0x10154021, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154024, 0x4)   mov(memb_a32(ds, eax + 0x5f), 0x1);   /* mov byte [eax+0x5f], 0x1 */
l_0x10154028:
    II(0x10154028, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015402b, 0x3)   mov(dl, memb_a32(ds, eax + 0x5e));    /* mov dl, [eax+0x5e] */
    II(0x1015402e, 0x2)   inc(dl);                              /* inc dl */
    II(0x10154030, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154033, 0x3)   and_(dl, 0x3f);                       /* and dl, 0x3f */
    II(0x10154036, 0x3)   mov(memb_a32(ds, eax + 0x5e), dl);    /* mov [eax+0x5e], dl */
    II(0x10154039, 0x5)   cmp(memw_a32(ss, ebp - 0x14), 0);     /* cmp word [ebp-0x14], 0x0 */
    II(0x1015403e, 0x2)   jnzd(0x10154047, 0x7);                /* jnz 0x10154047 */
    II(0x10154040, 0x5)   cmp(memw_a32(ss, ebp - 0xc), 0);      /* cmp word [ebp-0xc], 0x0 */
    II(0x10154045, 0x2)   jzd(0x1015404d, 0x6);                 /* jz 0x1015404d */
l_0x10154047:
    II(0x10154047, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x1015404b, 0x2)   jmpd(0x10154051, 0x4);                /* jmp 0x10154051 */
l_0x1015404d:
    II(0x1015404d, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x10154051:
    II(0x10154051, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x10154054, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
l_0x10154057:
    II(0x10154057, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1015405a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015405c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015405d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015405e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015405f, 0x1)   popd(edx);                            /* pop edx */
    II(0x10154060, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10154061, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10154062, 0x1)   retd();                               /* ret */
FUNC_END

