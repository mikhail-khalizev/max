FUNC_BEGIN(0x100a71f8, 0x8c58dc53afa944ee, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x50, 0xeb, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x1b, 0x8d, 0x45, 0xf8, 0xe8, 0x47, 0xf4, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x2, 0xf4, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xf5, 0xf3, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xcc, 0x3a, 0x9, 0, 0x84, 0xc0, 0x74, 0xc, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xd9, 0xec, 0xfc, 0xff, 0xeb, 0x51, 0xe8, 0xf6, 0x39, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf8, 0xe8, 0xb, 0xf3, 0xfc, 0xff, 0xe8, 0xf4, 0xb6, 0xa, 0, 0x8d, 0x45, 0xf8, 0xe8, 0xfe, 0xf2, 0xfc, 0xff, 0xe8, 0x31, 0xb4, 0xa, 0, 0x85, 0xc0, 0x75, 0x1d, 0xe8, 0x18, 0x35, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x45, 0xf8, 0xe8, 0x40, 0xf3, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x10, 0xe1, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x86, 0xec, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a71f8, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100a71fd, 0x5)   calld(sys_check_available_stack_size, 0xbeb50); /* call 0x10165d52 */
    II(0x100a7202, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a7203, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a7204, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a7205, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a7206, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a7207, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a7208, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a720a, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100a7210, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a7213, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a7216, 0x3)   add(edx, 0x1b);                       /* add edx, 0x1b */
    II(0x100a7219, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a721c, 0x5)   calld(0x10076668, -0x30bb9);          /* call 0x10076668 */
    II(0x100a7221, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7223, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7226, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a7229, 0x5)   calld(0x10076630, -0x30bfe);          /* call 0x10076630 */
    II(0x100a722e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7230, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7233, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x100a7236, 0x5)   calld(0x10076630, -0x30c0b);          /* call 0x10076630 */
    II(0x100a723b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a723d, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a7240, 0x5)   calld(0x1013ad11, 0x93acc);           /* call 0x1013ad11 */
    II(0x100a7245, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a7247, 0x2)   jzd(0x100a7255, 0xc);                 /* jz 0x100a7255 */
    II(0x100a7249, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a724b, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a724e, 0x5)   calld(0x10075f2c, -0x31327);          /* call 0x10075f2c */
    II(0x100a7253, 0x2)   jmpd(0x100a72a6, 0x51);               /* jmp 0x100a72a6 */
l_0x100a7255:
    II(0x100a7255, 0x5)   calld(0x1008ac50, -0x1c60a);          /* call 0x1008ac50 */
    II(0x100a725a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a725c, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100a725e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a7261, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a7264, 0x5)   calld(0x10076574, -0x30cf5);          /* call 0x10076574 */
    II(0x100a7269, 0x5)   calld(0x10152962, 0xab6f4);           /* call 0x10152962 */
    II(0x100a726e, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a7271, 0x5)   calld(0x10076574, -0x30d02);          /* call 0x10076574 */
    II(0x100a7276, 0x5)   calld(0x101526ac, 0xab431);           /* call 0x101526ac */
    II(0x100a727b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a727d, 0x2)   jnzd(0x100a729c, 0x1d);               /* jnz 0x100a729c */
    II(0x100a727f, 0x5)   calld(0x1008a79c, -0x1cae8);          /* call 0x1008a79c */
    II(0x100a7284, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a7286, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100a7288, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a728b, 0x5)   calld(0x100765d0, -0x30cc0);          /* call 0x100765d0 */
    II(0x100a7290, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a7292, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a7297, 0x5)   calld(0x100a53ac, -0x1ef0);           /* call 0x100a53ac */
l_0x100a729c:
    II(0x100a729c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a729e, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a72a1, 0x5)   calld(0x10075f2c, -0x3137a);          /* call 0x10075f2c */
l_0x100a72a6:
    II(0x100a72a6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a72a8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a72a9, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a72aa, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a72ab, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a72ac, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a72ad, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a72ae, 0x1)   retd();                               /* ret */
FUNC_END

