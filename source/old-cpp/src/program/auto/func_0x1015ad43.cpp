FUNC_BEGIN(0x1015ad43, 0x551de6d27b38e83d, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x5, 0xb0, 0, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0x8b, 0x45, 0x10, 0x48, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x3d, 0xff, 0, 0, 0, 0xf, 0x84, 0x1f, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8a, 0, 0x30, 0xe4, 0x1, 0x45, 0xe0, 0x8b, 0x55, 0xf0, 0xff, 0x45, 0xf0, 0x31, 0xc0, 0x8a, 0x2, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe0, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xec, 0x21, 0xd0, 0xf, 0xbf, 0x55, 0xdc, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x85, 0xc0, 0x75, 0x18, 0x8b, 0x45, 0xdc, 0x1, 0x45, 0xe0, 0x80, 0x7d, 0xfc, 0, 0x75, 0x7, 0xf, 0xbf, 0x45, 0xdc, 0x1, 0x45, 0xf0, 0xe9, 0xc3, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xec, 0x21, 0xd0, 0xf, 0xbf, 0x55, 0xe0, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x88, 0xc2, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x88, 0x10, 0x8b, 0x45, 0xe0, 0x1, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xec, 0x21, 0xd0, 0xf, 0xbf, 0x55, 0xdc, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x88, 0xc2, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x88, 0x10, 0x80, 0x7d, 0xfc, 0, 0x74, 0x8, 0x8b, 0x45, 0xdc, 0x1, 0x45, 0xe4, 0xeb, 0x5e, 0x8b, 0x45, 0xe4, 0x23, 0x45, 0xec, 0x8b, 0x55, 0xec, 0x29, 0xc2, 0x89, 0x55, 0xe0, 0xf, 0xbf, 0x45, 0xe0, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xdc, 0x1, 0x45, 0xe4, 0x8b, 0x45, 0xe0, 0x40, 0x29, 0x45, 0xdc, 0x8b, 0x55, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8a, 0x12, 0x88, 0x10, 0x8b, 0x45, 0xdc, 0x66, 0x3b, 0x45, 0xec, 0x7e, 0x1c, 0x8b, 0x55, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x8a, 0, 0x88, 0x2, 0xf, 0xbf, 0x45, 0x10, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0x10, 0x29, 0x45, 0xdc, 0xeb, 0xdb, 0xf, 0xbf, 0x45, 0xdc, 0x1, 0x45, 0xf0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xe9, 0xcc, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xc6, 0, 0xff, 0x8b, 0x45, 0xe8, 0x2b, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0x4, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0xe8, 0x3a, 0xb1, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x89, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x58, 0x2, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xe8, 0x58, 0xaf, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x1015ad43, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x1015ad48, 0x5)   calld(sys_check_available_stack_size, 0xb005); /* call 0x10165d52 */
    II(0x1015ad4d, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015ad4e, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015ad4f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015ad50, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015ad52, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1015ad58, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1015ad5b, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1015ad5e, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1015ad61, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x1015ad64, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1015ad67, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015ad68, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015ad6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015ad6e, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1015ad71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015ad74, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1015ad77, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x1015ad7e:
    II(0x1015ad7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015ad81, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1015ad83, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015ad88, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x1015ad8d, 0x6)   jzd(0x1015aeb2, 0x11f);               /* jz dword 0x1015aeb2 */
    II(0x1015ad93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015ad96, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x1015ad99, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1015ad9b, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015ad9d, 0x3)   add(memd_a32(ss, ebp - 0x20), eax);   /* add [ebp-0x20], eax */
    II(0x1015ada0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1015ada3, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x1015ada6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015ada8, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x1015adaa, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1015adad, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1015adb1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1015adb5, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1015adb7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1015adbb, 0x2)   and_(eax, edx);                       /* and eax, edx */
    II(0x1015adbd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1015adc1, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1015adc3, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x10)); /* movsx ebx, word [ebp+0x10] */
    II(0x1015adc7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1015adc9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1015adcc, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1015adce, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015add0, 0x2)   jnzd(0x1015adea, 0x18);               /* jnz 0x1015adea */
    II(0x1015add2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1015add5, 0x3)   add(memd_a32(ss, ebp - 0x20), eax);   /* add [ebp-0x20], eax */
    II(0x1015add8, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1015addc, 0x2)   jnzd(0x1015ade5, 0x7);                /* jnz 0x1015ade5 */
    II(0x1015adde, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1015ade2, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1015ade5:
    II(0x1015ade5, 0x5)   jmpd(0x1015aead, 0xc3);               /* jmp 0x1015aead */
l_0x1015adea:
    II(0x1015adea, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1015adee, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1015adf2, 0x2)   and_(eax, edx);                       /* and eax, edx */
    II(0x1015adf4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x1015adf8, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1015adfa, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x10)); /* movsx ebx, word [ebp+0x10] */
    II(0x1015adfe, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1015ae00, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1015ae03, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1015ae05, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1015ae07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015ae0a, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x1015ae0d, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x1015ae0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1015ae12, 0x3)   add(memd_a32(ss, ebp - 0x1c), eax);   /* add [ebp-0x1c], eax */
    II(0x1015ae15, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1015ae19, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015ae1d, 0x2)   and_(eax, edx);                       /* and eax, edx */
    II(0x1015ae1f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1015ae23, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1015ae25, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x10)); /* movsx ebx, word [ebp+0x10] */
    II(0x1015ae29, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1015ae2b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1015ae2e, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1015ae30, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1015ae32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015ae35, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x1015ae38, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x1015ae3a, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1015ae3e, 0x2)   jzd(0x1015ae48, 0x8);                 /* jz 0x1015ae48 */
    II(0x1015ae40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1015ae43, 0x3)   add(memd_a32(ss, ebp - 0x1c), eax);   /* add [ebp-0x1c], eax */
    II(0x1015ae46, 0x2)   jmpd(0x1015aea6, 0x5e);               /* jmp 0x1015aea6 */
l_0x1015ae48:
    II(0x1015ae48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1015ae4b, 0x3)   and_(eax, memd_a32(ss, ebp - 0x14));  /* and eax, [ebp-0x14] */
    II(0x1015ae4e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x1015ae51, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1015ae53, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x1015ae56, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1015ae5a, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x1015ae5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1015ae60, 0x3)   add(memd_a32(ss, ebp - 0x1c), eax);   /* add [ebp-0x1c], eax */
    II(0x1015ae63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1015ae66, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015ae67, 0x3)   sub(memd_a32(ss, ebp - 0x24), eax);   /* sub [ebp-0x24], eax */
    II(0x1015ae6a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1015ae6d, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x1015ae70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015ae73, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x1015ae76, 0x2)   mov(dl, memb_a32(ds, edx));           /* mov dl, [edx] */
    II(0x1015ae78, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
l_0x1015ae7a:
    II(0x1015ae7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1015ae7d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x1015ae81, 0x2)   jled(0x1015ae9f, 0x1c);               /* jle 0x1015ae9f */
    II(0x1015ae83, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x1015ae86, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x1015ae89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015ae8c, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1015ae8e, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x1015ae90, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x1015ae94, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x1015ae97, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1015ae9a, 0x3)   sub(memd_a32(ss, ebp - 0x24), eax);   /* sub [ebp-0x24], eax */
    II(0x1015ae9d, 0x2)   jmpd(0x1015ae7a, -0x25);              /* jmp 0x1015ae7a */
l_0x1015ae9f:
    II(0x1015ae9f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1015aea3, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1015aea6:
    II(0x1015aea6, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x1015aead:
    II(0x1015aead, 0x5)   jmpd(0x1015ad7e, -0x134);             /* jmp 0x1015ad7e */
l_0x1015aeb2:
    II(0x1015aeb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015aeb5, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x1015aeb8, 0x3)   mov(memb_a32(ds, eax), 0xff);         /* mov byte [eax], 0xff */
    II(0x1015aebb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015aebe, 0x3)   sub(eax, memd_a32(ss, ebp - 0x8));    /* sub eax, [ebp-0x8] */
    II(0x1015aec1, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1015aec4, 0x4)   mov(memw_a32(ds, edx + 0x4), ax);     /* mov [edx+0x4], ax */
    II(0x1015aec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015aecb, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x1015aece, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015aed1, 0x5)   calld(sys_new_arr, 0xb13a);           /* call 0x10166010 */
    II(0x1015aed6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015aed8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015aedb, 0x2)   mov(memd_a32(ds, eax), edx);          /* mov [eax], edx */
    II(0x1015aedd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015aee0, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1015aee3, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015aee6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1015aee9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015aeec, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1015aeee, 0x5)   calld(sys_memcpy, 0xaf58);            /* call 0x10165e4b */
    II(0x1015aef3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015aef5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015aef6, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015aef7, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015aef8, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

