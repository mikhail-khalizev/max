FUNC_BEGIN(0x1013322d, 0x3ba13c77806e5dd9, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x1b, 0x2b, 0x3, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf4, 0x88, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x81, 0xc2, 0x88, 0, 0, 0, 0x1, 0xc2, 0x89, 0x55, 0xf0, 0x8a, 0x45, 0xfc, 0x4, 0x1e, 0xf, 0xbe, 0xc0, 0xe8, 0x60, 0x2d, 0xf4, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0x8b, 0, 0x89, 0x45, 0xe4, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xdf, 0x6d, 0xe4, 0xdc, 0x35, 0x40, 0x89, 0x1a, 0x10, 0xd9, 0xe8, 0xde, 0xc1, 0xdd, 0x5d, 0xdc, 0xdd, 0x45, 0xdc, 0xdc, 0x5, 0x48, 0x89, 0x1a, 0x10, 0xdd, 0x5, 0x50, 0x89, 0x1a, 0x10, 0xd9, 0xc9, 0xe8, 0xec, 0x91, 0x3, 0, 0xdc, 0xd, 0x58, 0x89, 0x1a, 0x10, 0xdb, 0x45, 0xec, 0xde, 0xf9, 0xdd, 0x5, 0x50, 0x89, 0x1a, 0x10, 0xdd, 0x45, 0xdc, 0xe8, 0xd3, 0x91, 0x3, 0, 0xdc, 0xd, 0x58, 0x89, 0x1a, 0x10, 0xdb, 0x45, 0xec, 0xde, 0xf9, 0xde, 0xe9, 0xe8, 0x9f, 0x2d, 0x3, 0, 0xdb, 0x5d, 0xd8, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x1, 0x50, 0x8, 0x8b, 0x45, 0xf0, 0x83, 0x78, 0x8, 0, 0x74, 0x9, 0x8b, 0x45, 0xf0, 0x83, 0x78, 0x4, 0, 0x74, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xd8, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x4, 0x8b, 0x45, 0xf0, 0x83, 0x78, 0x8, 0, 0x75, 0xb, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x4, 0x3b, 0x45, 0xd8, 0x74, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x4, 0, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1013322d, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x10133232, 0x5)   calld(sys_check_available_stack_size, 0x32b1b); /* call 0x10165d52 */
    II(0x10133237, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10133238, 0x1)   pushd(esi);                           /* push esi */
    II(0x10133239, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013323a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013323b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013323d, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x10133243, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10133246, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10133249, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1013324c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10133250, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10133256, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x1013325b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013325d, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10133261, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x10133264, 0x6)   add(edx, 0x88);                       /* add edx, 0x88 */
    II(0x1013326a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013326c, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x1013326f, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10133272, 0x2)   add(al, 0x1e);                        /* add al, 0x1e */
    II(0x10133274, 0x3)   movsx(eax, al);                       /* movsx eax, al */
    II(0x10133277, 0x5)   calld(0x10075fdc, -0xbd2a0);          /* call 0x10075fdc */
    II(0x1013327c, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1013327f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10133282, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10133284, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10133287, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1013328e, 0x3)   fild(memq_a32(ss, ebp - 0x1c));       /* fild qword [ebp-0x1c] */
    II(0x10133291, 0x6)   fdiv(memq_a32(ds, 0x101a8940));       /* fdiv qword [0x101a8940] */
    II(0x10133297, 0x2)   fld1();                               /* fld1 */
    II(0x10133299, 0x2)   faddp(0x1 /* st1 */, 0 /* st0 */);    /* faddp st1, st0 */
    II(0x1013329b, 0x3)   fstp(memq_a32(ss, ebp - 0x24));       /* fstp qword [ebp-0x24] */
    II(0x1013329e, 0x3)   fld(memq_a32(ss, ebp - 0x24));        /* fld qword [ebp-0x24] */
    II(0x101332a1, 0x6)   fadd(memq_a32(ds, 0x101a8948));       /* fadd qword [0x101a8948] */
    II(0x101332a7, 0x6)   fld(memq_a32(ds, 0x101a8950));        /* fld qword [0x101a8950] */
    II(0x101332ad, 0x2)   fxch(0 /* st0 */, 0x1 /* st1 */);     /* fxch st0, st1 */
    II(0x101332af, 0x5)   calld(/* sys */ 0x1016c4a0, 0x391ec); /* call 0x1016c4a0 */
    II(0x101332b4, 0x6)   fmul(memq_a32(ds, 0x101a8958));       /* fmul qword [0x101a8958] */
    II(0x101332ba, 0x3)   fild(memd_a32(ss, ebp - 0x14));       /* fild dword [ebp-0x14] */
    II(0x101332bd, 0x2)   fdivp(0x1 /* st1 */, 0 /* st0 */);    /* fdivp st1, st0 */
    II(0x101332bf, 0x6)   fld(memq_a32(ds, 0x101a8950));        /* fld qword [0x101a8950] */
    II(0x101332c5, 0x3)   fld(memq_a32(ss, ebp - 0x24));        /* fld qword [ebp-0x24] */
    II(0x101332c8, 0x5)   calld(/* sys */ 0x1016c4a0, 0x391d3); /* call 0x1016c4a0 */
    II(0x101332cd, 0x6)   fmul(memq_a32(ds, 0x101a8958));       /* fmul qword [0x101a8958] */
    II(0x101332d3, 0x3)   fild(memd_a32(ss, ebp - 0x14));       /* fild dword [ebp-0x14] */
    II(0x101332d6, 0x2)   fdivp(0x1 /* st1 */, 0 /* st0 */);    /* fdivp st1, st0 */
    II(0x101332d8, 0x2)   fsubp(0x1 /* st1 */, 0 /* st0 */);    /* fsubp st1, st0 */
    II(0x101332da, 0x5)   calld(sys_round, 0x32d9f);            /* call 0x1016607e */
    II(0x101332df, 0x3)   fistp(memd_a32(ss, ebp - 0x28));      /* fistp dword [ebp-0x28] */
    II(0x101332e2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x101332e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101332e9, 0x3)   add(memd_a32(ds, eax + 0x8), edx);    /* add [eax+0x8], edx */
    II(0x101332ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101332ef, 0x4)   cmp(memd_a32(ds, eax + 0x8), 0);      /* cmp dword [eax+0x8], 0x0 */
    II(0x101332f3, 0x2)   jzd(0x101332fe, 0x9);                 /* jz 0x101332fe */
    II(0x101332f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101332f8, 0x4)   cmp(memd_a32(ds, eax + 0x4), 0);      /* cmp dword [eax+0x4], 0x0 */
    II(0x101332fc, 0x2)   jzd(0x10133300, 0x2);                 /* jz 0x10133300 */
l_0x101332fe:
    II(0x101332fe, 0x2)   jmpd(0x10133309, 0x9);                /* jmp 0x10133309 */
l_0x10133300:
    II(0x10133300, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10133303, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10133306, 0x3)   mov(memd_a32(ds, edx + 0x4), eax);    /* mov [edx+0x4], eax */
l_0x10133309:
    II(0x10133309, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013330c, 0x4)   cmp(memd_a32(ds, eax + 0x8), 0);      /* cmp dword [eax+0x8], 0x0 */
    II(0x10133310, 0x2)   jnzd(0x1013331d, 0xb);                /* jnz 0x1013331d */
    II(0x10133312, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10133315, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10133318, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x28));   /* cmp eax, [ebp-0x28] */
    II(0x1013331b, 0x2)   jzd(0x1013331f, 0x2);                 /* jz 0x1013331f */
l_0x1013331d:
    II(0x1013331d, 0x2)   jmpd(0x10133329, 0xa);                /* jmp 0x10133329 */
l_0x1013331f:
    II(0x1013331f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10133322, 0x7)   mov(memd_a32(ds, eax + 0x4), 0);      /* mov dword [eax+0x4], 0x0 */
l_0x10133329:
    II(0x10133329, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013332b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013332c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013332d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013332e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013332f, 0x1)   retd();                               /* ret */
FUNC_END

