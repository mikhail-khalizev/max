FUNC_BEGIN(0x100dfdf9, 0x150d1f08a3110014, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0x4f, 0x5f, 0x8, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0xf, 0xbf, 0x55, 0xf4, 0x69, 0xd2, 0x47, 0x2, 0, 0, 0x8b, 0x9a, 0x62, 0xa5, 0x1c, 0x10, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x7b, 0xb8, 0xfe, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xbf, 0x69, 0xf9, 0xff, 0xf, 0xbf, 0x55, 0xf8, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xaa, 0xb2, 0xfa, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x9c, 0x69, 0xf9, 0xff, 0xf, 0xbe, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xf4, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8a, 0x45, 0xfc, 0x88, 0x45, 0xf0, 0xe9, 0xd5, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf8, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xb1, 0x38, 0x5, 0, 0x89, 0x45, 0xe0, 0xe9, 0xdb, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf8, 0xba, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x97, 0x38, 0x5, 0, 0x89, 0x45, 0xe0, 0xe9, 0xc1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf8, 0xba, 0x2, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x7d, 0x38, 0x5, 0, 0x89, 0x45, 0xe0, 0xe9, 0xa7, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf8, 0xba, 0x3, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x63, 0x38, 0x5, 0, 0x89, 0x45, 0xe0, 0xe9, 0x8d, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf8, 0xba, 0x4, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x49, 0x38, 0x5, 0, 0x89, 0x45, 0xe0, 0xe9, 0x73, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf8, 0xba, 0x6, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x2f, 0x38, 0x5, 0, 0x89, 0x45, 0xe0, 0xeb, 0x5c, 0xf, 0xbf, 0x5d, 0xf8, 0xba, 0x5, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x18, 0x38, 0x5, 0, 0x89, 0x45, 0xe0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x3e, 0x90, 0x83, 0xfe, 0xd, 0x10, 0x9a, 0xfe, 0xd, 0x10, 0xb4, 0xfe, 0xd, 0x10, 0x2e, 0xff, 0xd, 0x10, 0xce, 0xfe, 0xd, 0x10, 0xe8, 0xfe, 0xd, 0x10, 0x2, 0xff, 0xd, 0x10, 0x19, 0xff, 0xd, 0x10, 0x8a, 0x45, 0xf0, 0xfe, 0xc8, 0x88, 0x45, 0xdc, 0x80, 0x7d, 0xdc, 0x7, 0x77, 0xc8, 0x31, 0xc0, 0x8a, 0x45, 0xdc, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x38, 0xff, 0xd, 0x10, 0xf, 0xbe, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0xaf, 0x67, 0xf9, 0xff, 0xe8, 0xbb, 0x3b, 0x8, 0, 0x66, 0x8b, 0, 0x89, 0x45, 0xd8, 0xf, 0xbe, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x98, 0x67, 0xf9, 0xff, 0xe8, 0xa4, 0x3b, 0x8, 0, 0x66, 0x8b, 0, 0x89, 0x45, 0xd4, 0xf, 0xbf, 0x4d, 0xd8, 0xf, 0xbf, 0x5d, 0xe0, 0xf, 0xbf, 0x55, 0xd4, 0xf, 0xbe, 0x45, 0xfc, 0xe8, 0x90, 0x82, 0xff, 0xff, 0x89, 0x45, 0xd0, 0x80, 0x7d, 0xfc, 0x9, 0x75, 0x8, 0x8b, 0x45, 0xe4, 0x29, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x1, 0x45, 0xd4, 0xf, 0xbe, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0x55, 0x67, 0xf9, 0xff, 0xe8, 0x61, 0x3b, 0x8, 0, 0xf, 0xbf, 0x8, 0xf, 0xbf, 0x5d, 0xe0, 0xf, 0xbf, 0x55, 0xd4, 0xf, 0xbe, 0x45, 0xfc, 0xe8, 0x54, 0x82, 0xff, 0xff, 0x2b, 0x45, 0xd0, 0x89, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0xf, 0x85, 0x75, 0, 0, 0, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xba, 0x5f, 0xf9, 0xff, 0x89, 0x45, 0xcc, 0xeb, 0x4a, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x14, 0x92, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x89, 0x45, 0xd0, 0xeb, 0x4d, 0xf, 0xbf, 0x55, 0xd0, 0xc1, 0xe2, 0x2, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xd0, 0xeb, 0x35, 0xf, 0xbf, 0x55, 0xd0, 0x1, 0xd2, 0xbb, 0x3, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xd0, 0xeb, 0x1e, 0xeb, 0x1c, 0x83, 0x7d, 0xcc, 0x4, 0x72, 0xe, 0x83, 0x7d, 0xcc, 0x4, 0x76, 0xc3, 0x83, 0x7d, 0xcc, 0x5, 0x74, 0xd5, 0xeb, 0xea, 0x83, 0x7d, 0xcc, 0, 0x74, 0x9c, 0xeb, 0xe2, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0x1, 0x7d, 0x7, 0xc7, 0x45, 0xd0, 0x1, 0, 0, 0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xc8, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x3f, 0x5e, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x35, 0x5e, 0xf9, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x29, 0x5e, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x1f, 0x5e, 0xf9, 0xff, 0x8b, 0x45, 0xc8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100dfdf9, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x100dfdfe, 0x5)   calld(sys_check_available_stack_size, 0x85f4f); /* call 0x10165d52 */
    II(0x100dfe03, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100dfe04, 0x1)   pushd(esi);                           /* push esi */
    II(0x100dfe05, 0x1)   pushd(edi);                           /* push edi */
    II(0x100dfe06, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100dfe07, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100dfe09, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x100dfe0f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100dfe12, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100dfe15, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100dfe18, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100dfe1c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100dfe20, 0x6)   imul(edx, edx, 0x247);                /* imul edx, edx, 0x247 */
    II(0x100dfe26, 0x6)   mov(ebx, memd_a32(ds, edx + 0x101ca562)); /* mov ebx, [edx+0x101ca562] */
    II(0x100dfe2c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dfe2e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100dfe30, 0x5)   calld(0x100cb6b0, -0x14785);          /* call 0x100cb6b0 */
    II(0x100dfe35, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100dfe38, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dfe3a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100dfe3c, 0x5)   calld(0x10076800, -0x69641);          /* call 0x10076800 */
    II(0x100dfe41, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100dfe45, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dfe49, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100dfe4f, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x100dfe55, 0x5)   calld(0x1008b104, -0x54d56);          /* call 0x1008b104 */
    II(0x100dfe5a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100dfe5c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100dfe5f, 0x5)   calld(0x10076800, -0x69664);          /* call 0x10076800 */
    II(0x100dfe64, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x100dfe68, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100dfe6c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dfe70, 0x5)   calld(0x100dfd69, -0x10c);            /* call 0x100dfd69 */
    II(0x100dfe75, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100dfe78, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100dfe7b, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x100dfe7e, 0x5)   jmpd(0x100dff58, 0xd5);               /* jmp 0x100dff58 */
l_0x100dfe83:
    II(0x100dfe83, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100dfe87, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dfe89, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dfe8d, 0x5)   calld(0x10133743, 0x538b1);           /* call 0x10133743 */
    II(0x100dfe92, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100dfe95, 0x5)   jmpd(0x100dff75, 0xdb);               /* jmp 0x100dff75 */
l_0x100dfe9a:
    II(0x100dfe9a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100dfe9e, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100dfea3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dfea7, 0x5)   calld(0x10133743, 0x53897);           /* call 0x10133743 */
    II(0x100dfeac, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100dfeaf, 0x5)   jmpd(0x100dff75, 0xc1);               /* jmp 0x100dff75 */
l_0x100dfeb4:
    II(0x100dfeb4, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100dfeb8, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100dfebd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dfec1, 0x5)   calld(0x10133743, 0x5387d);           /* call 0x10133743 */
    II(0x100dfec6, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100dfec9, 0x5)   jmpd(0x100dff75, 0xa7);               /* jmp 0x100dff75 */
l_0x100dfece:
    II(0x100dfece, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100dfed2, 0x5)   mov(edx, 0x3);                        /* mov edx, 0x3 */
    II(0x100dfed7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dfedb, 0x5)   calld(0x10133743, 0x53863);           /* call 0x10133743 */
    II(0x100dfee0, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100dfee3, 0x5)   jmpd(0x100dff75, 0x8d);               /* jmp 0x100dff75 */
l_0x100dfee8:
    II(0x100dfee8, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100dfeec, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x100dfef1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dfef5, 0x5)   calld(0x10133743, 0x53849);           /* call 0x10133743 */
    II(0x100dfefa, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100dfefd, 0x5)   jmpd(0x100dff75, 0x73);               /* jmp 0x100dff75 */
l_0x100dff02:
    II(0x100dff02, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100dff06, 0x5)   mov(edx, 0x6);                        /* mov edx, 0x6 */
    II(0x100dff0b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dff0f, 0x5)   calld(0x10133743, 0x5382f);           /* call 0x10133743 */
    II(0x100dff14, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100dff17, 0x2)   jmpd(0x100dff75, 0x5c);               /* jmp 0x100dff75 */
l_0x100dff19:
    II(0x100dff19, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100dff1d, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x100dff22, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dff26, 0x5)   calld(0x10133743, 0x53818);           /* call 0x10133743 */
    II(0x100dff2b, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100dff2e:
    II(0x100dff2e, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100dff35, 0x2)   jmpd(0x100dff75, 0x3e);               /* jmp 0x100dff75 */
//    II(0x100dff37, 0x1)   /* Выравнивание. */
//    II(0x100dff38, 0x20)  /* Служебная область с абсолютными адресами переходов. {0x100dfe83, 0x100dfe9a, 0x100dfeb4, 0x100dff2e, 0x100dfece, 0x100dfee8, 0x100dff02, 0x100dff19}. */
l_0x100dff58:
    II(0x100dff58, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x100dff5b, 0x2)   dec(al);                              /* dec al */
    II(0x100dff5d, 0x3)   mov(memb_a32(ss, ebp - 0x24), al);    /* mov [ebp-0x24], al */
    II(0x100dff60, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x7);   /* cmp byte [ebp-0x24], 0x7 */
    II(0x100dff64, 0x2)   jad(0x100dff2e, -0x38);               /* ja 0x100dff2e */
    II(0x100dff66, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100dff68, 0x3)   mov(al, memb_a32(ss, ebp - 0x24));    /* mov al, [ebp-0x24] */
    II(0x100dff6b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dff6e, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x100dff38), (0x100dfe83)(0x100dfe9a)(0x100dfeb4)(0x100dfece)(0x100dfee8)(0x100dff02)(0x100dff19)(0x100dff2e)); /* jmp dword near [cs:eax+0x100dff38] */
l_0x100dff75:
    II(0x100dff75, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x100dff79, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100dff7c, 0x5)   calld(0x10076730, -0x69851);          /* call 0x10076730 */
    II(0x100dff81, 0x5)   calld(0x10163b41, 0x83bbb);           /* call 0x10163b41 */
    II(0x100dff86, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100dff89, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100dff8c, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x100dff90, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100dff93, 0x5)   calld(0x10076730, -0x69868);          /* call 0x10076730 */
    II(0x100dff98, 0x5)   calld(0x10163b41, 0x83ba4);           /* call 0x10163b41 */
    II(0x100dff9d, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100dffa0, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100dffa3, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x28)); /* movsx ecx, word [ebp-0x28] */
    II(0x100dffa7, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x20)); /* movsx ebx, word [ebp-0x20] */
    II(0x100dffab, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100dffaf, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x100dffb3, 0x5)   calld(0x100d8248, -0x7d70);           /* call 0x100d8248 */
    II(0x100dffb8, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100dffbb, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x9);    /* cmp byte [ebp-0x4], 0x9 */
    II(0x100dffbf, 0x2)   jnzd(0x100dffc9, 0x8);                /* jnz 0x100dffc9 */
    II(0x100dffc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100dffc4, 0x3)   sub(memd_a32(ss, ebp - 0x2c), eax);   /* sub [ebp-0x2c], eax */
    II(0x100dffc7, 0x2)   jmpd(0x100dffcf, 0x6);                /* jmp 0x100dffcf */
l_0x100dffc9:
    II(0x100dffc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100dffcc, 0x3)   add(memd_a32(ss, ebp - 0x2c), eax);   /* add [ebp-0x2c], eax */
l_0x100dffcf:
    II(0x100dffcf, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x100dffd3, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100dffd6, 0x5)   calld(0x10076730, -0x698ab);          /* call 0x10076730 */
    II(0x100dffdb, 0x5)   calld(0x10163b41, 0x83b61);           /* call 0x10163b41 */
    II(0x100dffe0, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x100dffe3, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x20)); /* movsx ebx, word [ebp-0x20] */
    II(0x100dffe7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100dffeb, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x100dffef, 0x5)   calld(0x100d8248, -0x7dac);           /* call 0x100d8248 */
    II(0x100dfff4, 0x3)   sub(eax, memd_a32(ss, ebp - 0x30));   /* sub eax, [ebp-0x30] */
    II(0x100dfff7, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100dfffa, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100dfffe, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100e0004, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100e000a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e000f, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100e0012, 0x6)   jnzd(0x100e008d, 0x75);               /* jnz dword 0x100e008d */
    II(0x100e0018, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x100e001d, 0x5)   calld(0x10075fdc, -0x6a046);          /* call 0x10075fdc */
    II(0x100e0022, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100e0025, 0x2)   jmpd(0x100e0071, 0x4a);               /* jmp 0x100e0071 */
l_0x100e0027:
    II(0x100e0027, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100e002b, 0x3)   lea(edx, edx + edx * 0x4);            /* lea edx, [edx+edx*4] */
    II(0x100e002e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e0030, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e0033, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100e0036, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x100e0038, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x100e003b, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100e003e, 0x2)   jmpd(0x100e008d, 0x4d);               /* jmp 0x100e008d */
l_0x100e0040:
    II(0x100e0040, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100e0044, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100e0047, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x100e004c, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e004e, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e0051, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100e0053, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100e0056, 0x2)   jmpd(0x100e008d, 0x35);               /* jmp 0x100e008d */
l_0x100e0058:
    II(0x100e0058, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100e005c, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100e005e, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x100e0063, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e0065, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e0068, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100e006a, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100e006d, 0x2)   jmpd(0x100e008d, 0x1e);               /* jmp 0x100e008d */
l_0x100e006f:
    II(0x100e006f, 0x2)   jmpd(0x100e008d, 0x1c);               /* jmp 0x100e008d */
l_0x100e0071:
    II(0x100e0071, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0x4);   /* cmp dword [ebp-0x34], 0x4 */
    II(0x100e0075, 0x2)   jbd(0x100e0085, 0xe);                 /* jb 0x100e0085 */
    II(0x100e0077, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0x4);   /* cmp dword [ebp-0x34], 0x4 */
    II(0x100e007b, 0x2)   jbed(0x100e0040, -0x3d);              /* jbe 0x100e0040 */
    II(0x100e007d, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0x5);   /* cmp dword [ebp-0x34], 0x5 */
    II(0x100e0081, 0x2)   jzd(0x100e0058, -0x2b);               /* jz 0x100e0058 */
    II(0x100e0083, 0x2)   jmpd(0x100e006f, -0x16);              /* jmp 0x100e006f */
l_0x100e0085:
    II(0x100e0085, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100e0089, 0x2)   jzd(0x100e0027, -0x64);               /* jz 0x100e0027 */
    II(0x100e008b, 0x2)   jmpd(0x100e006f, -0x1e);              /* jmp 0x100e006f */
l_0x100e008d:
    II(0x100e008d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100e0091, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100e0094, 0x2)   jged(0x100e009d, 0x7);                /* jge 0x100e009d */
    II(0x100e0096, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0x1);   /* mov dword [ebp-0x30], 0x1 */
l_0x100e009d:
    II(0x100e009d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100e00a0, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100e00a3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e00a5, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100e00a8, 0x5)   calld(0x10075eec, -0x6a1c1);          /* call 0x10075eec */
    II(0x100e00ad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e00af, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e00b2, 0x5)   calld(0x10075eec, -0x6a1cb);          /* call 0x10075eec */
    II(0x100e00b7, 0x2)   jmpd(0x100e00cd, 0x14);               /* jmp 0x100e00cd */
//  II(0x100e00b9, 0x14)  /* Недостижимый код. */
l_0x100e00cd:
    II(0x100e00cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100e00d0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e00d2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e00d3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e00d4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e00d5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e00d6, 0x1)   retd();                               /* ret */
FUNC_END

