FUNC_BEGIN(0x100a08ce, 0x750851bb5a26ccff, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x7a, 0x54, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0x7, 0x5c, 0xfd, 0xff, 0x89, 0x45, 0xf4, 0x80, 0x65, 0xf8, 0xfe, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x32, 0x5a, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x2c, 0x5b, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xde, 0x62, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x4d, 0xa4, 0x9, 0, 0x84, 0xc0, 0x74, 0x2b, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x44, 0x8d, 0x45, 0xf0, 0xe8, 0xd2, 0x5a, 0xfd, 0xff, 0xe8, 0x79, 0xab, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x12, 0x8d, 0x45, 0xf0, 0xe8, 0xc1, 0x5a, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xe2, 0xfe, 0xff, 0xff, 0xeb, 0xbf, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x44, 0xe8, 0x11, 0xa4, 0x9, 0, 0x84, 0xc0, 0x74, 0x15, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x44, 0xe8, 0x91, 0x5c, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xba, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xe9, 0x55, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a08ce, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100a08d3, 0x5)   calld(sys_check_available_stack_size, 0xc547a); /* call 0x10165d52 */
    II(0x100a08d8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a08d9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a08da, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a08db, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a08dc, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a08dd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a08de, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a08e0, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100a08e6, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a08e9, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100a08ed, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a08f0, 0x5)   calld(0x100764fc, -0x2a3f9);          /* call 0x100764fc */
    II(0x100a08f5, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a08f8, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100a08fc, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100a0901, 0x5)   calld(0x10076338, -0x2a5ce);          /* call 0x10076338 */
    II(0x100a0906, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a0908, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a090b, 0x5)   calld(0x1007643c, -0x2a4d4);          /* call 0x1007643c */
    II(0x100a0910, 0x2)   jmpd(0x100a091a, 0x8);                /* jmp 0x100a091a */
l_0x100a0912:
    II(0x100a0912, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a0915, 0x5)   calld(0x10076bf8, -0x29d22);          /* call 0x10076bf8 */
l_0x100a091a:
    II(0x100a091a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a091c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a091f, 0x5)   calld(0x1013ad71, 0x9a44d);           /* call 0x1013ad71 */
    II(0x100a0924, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a0926, 0x2)   jzd(0x100a0953, 0x2b);                /* jz 0x100a0953 */
    II(0x100a0928, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a092b, 0x3)   add(edx, 0x44);                       /* add edx, 0x44 */
    II(0x100a092e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a0931, 0x5)   calld(0x10076408, -0x2a52e);          /* call 0x10076408 */
    II(0x100a0936, 0x5)   calld(0x1008b4b4, -0x15487);          /* call 0x1008b4b4 */
    II(0x100a093b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a093d, 0x2)   jzd(0x100a0951, 0x12);                /* jz 0x100a0951 */
    II(0x100a093f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a0942, 0x5)   calld(0x10076408, -0x2a53f);          /* call 0x10076408 */
    II(0x100a0947, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a0949, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a094c, 0x5)   calld(0x100a0833, -0x11e);            /* call 0x100a0833 */
l_0x100a0951:
    II(0x100a0951, 0x2)   jmpd(0x100a0912, -0x41);              /* jmp 0x100a0912 */
l_0x100a0953:
    II(0x100a0953, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a0955, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a0958, 0x3)   add(eax, 0x44);                       /* add eax, 0x44 */
    II(0x100a095b, 0x5)   calld(0x1013ad71, 0x9a411);           /* call 0x1013ad71 */
    II(0x100a0960, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a0962, 0x2)   jzd(0x100a0979, 0x15);                /* jz 0x100a0979 */
    II(0x100a0964, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a0967, 0x3)   add(eax, 0x44);                       /* add eax, 0x44 */
    II(0x100a096a, 0x5)   calld(0x10076600, -0x2a36f);          /* call 0x10076600 */
    II(0x100a096f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a0971, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a0974, 0x5)   calld(0x100a0833, -0x146);            /* call 0x100a0833 */
l_0x100a0979:
    II(0x100a0979, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a097b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a097e, 0x5)   calld(0x10075f6c, -0x2aa17);          /* call 0x10075f6c */
    II(0x100a0983, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a0985, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a0986, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a0987, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a0988, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a0989, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a098a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a098b, 0x1)   retd();                               /* ret */
FUNC_END

