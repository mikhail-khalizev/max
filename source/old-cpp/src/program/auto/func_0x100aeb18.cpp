FUNC_BEGIN(0x100aeb18, 0xc01c2e2727cd1359, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x30, 0x72, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xe8, 0xbe, 0xff, 0xff, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x18, 0x73, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x77, 0x7a, 0xfc, 0xff, 0xe8, 0x43, 0x21, 0xfc, 0xff, 0x98, 0x83, 0xf8, 0x2, 0x7e, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x8d, 0x2, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xf9, 0xc8, 0xfd, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0xf, 0x8e, 0x99, 0, 0, 0, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x82, 0xbe, 0xff, 0xff, 0x8b, 0x8, 0xc1, 0xf9, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x6e, 0xbe, 0xff, 0xff, 0xf, 0xbf, 0x18, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xa3, 0x79, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xdd, 0x16, 0xfc, 0xff, 0x66, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x10, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x2f, 0xbe, 0xff, 0xff, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1a, 0x75, 0x1c, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x14, 0xbe, 0xff, 0xff, 0x66, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1c, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x5, 0xe9, 0x4c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x4b, 0xc8, 0xfd, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0xb6, 0x1, 0, 0, 0xb8, 0x1c, 0, 0, 0, 0xe8, 0xb2, 0x71, 0xb, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x25, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xec, 0xe8, 0xdf, 0xb2, 0x6, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xd8, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xd8, 0x8b, 0x55, 0xd8, 0x8d, 0x45, 0xe0, 0xe8, 0x1d, 0xc7, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xd6, 0x78, 0xfc, 0xff, 0x89, 0xc3, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x7b, 0xbd, 0xff, 0xff, 0x66, 0x8b, 0x53, 0x1a, 0x66, 0x3b, 0x10, 0x75, 0x24, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xb3, 0x78, 0xfc, 0xff, 0x89, 0xc3, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x58, 0xbd, 0xff, 0xff, 0x66, 0x8b, 0x53, 0x1c, 0x66, 0x3b, 0x50, 0x2, 0x74, 0x5a, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x41, 0xbd, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x80, 0x78, 0xfc, 0xff, 0x89, 0xc3, 0x66, 0x8b, 0x42, 0x2, 0x66, 0x2b, 0x43, 0x1c, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x68, 0x78, 0xfc, 0xff, 0x89, 0xc3, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xd, 0xbd, 0xff, 0xff, 0x66, 0x8b, 0, 0x66, 0x2b, 0x43, 0x1a, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe0, 0xe8, 0xb3, 0xc5, 0xff, 0xff, 0x89, 0xcb, 0xe8, 0x6f, 0xbf, 0x6, 0, 0xc7, 0x45, 0xf4, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xf0, 0x7f, 0x6f, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xcd, 0xbc, 0xff, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xb9, 0xbc, 0xff, 0xff, 0x89, 0xc2, 0x66, 0x8b, 0x43, 0x2, 0x66, 0x2b, 0x42, 0x2, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x9d, 0xbc, 0xff, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x89, 0xbc, 0xff, 0xff, 0x89, 0xc2, 0x66, 0x8b, 0x3, 0x66, 0x2b, 0x2, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe0, 0xe8, 0x2e, 0xc5, 0xff, 0xff, 0x89, 0xcb, 0xe8, 0xea, 0xbe, 0x6, 0, 0xeb, 0x82, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x22, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x28, 0xe8, 0x78, 0x9d, 0xfd, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x68, 0xc5, 0xff, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd7, 0xd, 0, 0, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x4a, 0xb1, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x3e, 0xb1, 0xff, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100aeb18, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x100aeb1d, 0x5)   calld(sys_check_available_stack_size, 0xb7230); /* call 0x10165d52 */
    II(0x100aeb22, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100aeb23, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100aeb24, 0x1)   pushd(edx);                           /* push edx */
    II(0x100aeb25, 0x1)   pushd(esi);                           /* push esi */
    II(0x100aeb26, 0x1)   pushd(edi);                           /* push edi */
    II(0x100aeb27, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100aeb28, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100aeb2a, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100aeb30, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100aeb33, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aeb35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeb38, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aeb3b, 0x5)   calld(0x100aaa28, -0x4118);           /* call 0x100aaa28 */
    II(0x100aeb40, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100aeb43, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aeb45, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100aeb47, 0x5)   calld(0x10075e64, -0x38ce8);          /* call 0x10075e64 */
    II(0x100aeb4c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aeb4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeb51, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aeb54, 0x5)   calld(0x100765d0, -0x38589);          /* call 0x100765d0 */
    II(0x100aeb59, 0x5)   calld(0x10070ca1, -0x3debd);          /* call 0x10070ca1 */
    II(0x100aeb5e, 0x1)   cwde();                               /* cwde */
    II(0x100aeb5f, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100aeb62, 0x2)   jled(0x100aeb6d, 0x9);                /* jle 0x100aeb6d */
    II(0x100aeb64, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100aeb68, 0x5)   jmpd(0x100aedfa, 0x28d);              /* jmp 0x100aedfa */
l_0x100aeb6d:
    II(0x100aeb6d, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100aeb74, 0x2)   jmpd(0x100aeb7c, 0x6);                /* jmp 0x100aeb7c */
l_0x100aeb76:
    II(0x100aeb76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100aeb79, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100aeb7c:
    II(0x100aeb7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeb7f, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aeb82, 0x5)   calld(my_3_get_count, -0x23707);      /* call 0x1008b480 */
    II(0x100aeb87, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100aeb8b, 0x6)   jled(0x100aec2a, 0x99);               /* jle dword 0x100aec2a */
    II(0x100aeb91, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100aeb96, 0x1)   pushd(eax);                           /* push eax */
    II(0x100aeb97, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100aeb9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeb9e, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aeba1, 0x5)   calld(0x100aaa28, -0x417e);           /* call 0x100aaa28 */
    II(0x100aeba6, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x100aeba8, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100aebab, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100aebaf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aebb2, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aebb5, 0x5)   calld(0x100aaa28, -0x4192);           /* call 0x100aaa28 */
    II(0x100aebba, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100aebbd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100aebc0, 0x3)   mov(edx, memd_a32(ds, edx + 0x7));    /* mov edx, [edx+0x7] */
    II(0x100aebc3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100aebc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aebc9, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aebcc, 0x5)   calld(0x10076574, -0x3865d);          /* call 0x10076574 */
    II(0x100aebd1, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100aebd4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100aebd7, 0x5)   calld(0x100702b9, -0x3e923);          /* call 0x100702b9 */
    II(0x100aebdc, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100aebdf, 0x2)   jnzd(0x100aebea, 0x9);                /* jnz 0x100aebea */
    II(0x100aebe1, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100aebe5, 0x5)   jmpd(0x100aedfa, 0x210);              /* jmp 0x100aedfa */
l_0x100aebea:
    II(0x100aebea, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100aebee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aebf1, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aebf4, 0x5)   calld(0x100aaa28, -0x41d1);           /* call 0x100aaa28 */
    II(0x100aebf9, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100aebfc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aebff, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1a));    /* cmp dx, [eax+0x1a] */
    II(0x100aec03, 0x2)   jnzd(0x100aec21, 0x1c);               /* jnz 0x100aec21 */
    II(0x100aec05, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100aec09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aec0c, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aec0f, 0x5)   calld(0x100aaa28, -0x41ec);           /* call 0x100aaa28 */
    II(0x100aec14, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x100aec18, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aec1b, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1c));    /* cmp dx, [eax+0x1c] */
    II(0x100aec1f, 0x2)   jzd(0x100aec23, 0x2);                 /* jz 0x100aec23 */
l_0x100aec21:
    II(0x100aec21, 0x2)   jmpd(0x100aec25, 0x2);                /* jmp 0x100aec25 */
l_0x100aec23:
    II(0x100aec23, 0x2)   jmpd(0x100aec2a, 0x5);                /* jmp 0x100aec2a */
l_0x100aec25:
    II(0x100aec25, 0x5)   jmpd(0x100aeb76, -0xb4);              /* jmp 0x100aeb76 */
l_0x100aec2a:
    II(0x100aec2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aec2d, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aec30, 0x5)   calld(my_3_get_count, -0x237b5);      /* call 0x1008b480 */
    II(0x100aec35, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100aec39, 0x2)   jnzd(0x100aec44, 0x9);                /* jnz 0x100aec44 */
    II(0x100aec3b, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100aec3f, 0x5)   jmpd(0x100aedfa, 0x1b6);              /* jmp 0x100aedfa */
l_0x100aec44:
    II(0x100aec44, 0x5)   mov(eax, 0x1c);                       /* mov eax, 0x1c */
    II(0x100aec49, 0x5)   calld(sys_new, 0xb71b2);              /* call 0x10165e00 */
    II(0x100aec4e, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100aec51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100aec54, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100aec57, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100aec5b, 0x2)   jzd(0x100aec82, 0x25);                /* jz 0x100aec82 */
    II(0x100aec5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aec60, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100aec63, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100aec66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aec69, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100aec6c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100aec6f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100aec72, 0x5)   calld(my_ctor_c20, 0x6b2df);          /* call 0x10119f56 */
    II(0x100aec77, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100aec7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100aec7d, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100aec80, 0x2)   jmpd(0x100aec88, 0x6);                /* jmp 0x100aec88 */
l_0x100aec82:
    II(0x100aec82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100aec85, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100aec88:
    II(0x100aec88, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x100aec8b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100aec8e, 0x5)   calld(0x100ab3b0, -0x38e3);           /* call 0x100ab3b0 */
    II(0x100aec93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aec96, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aec99, 0x5)   calld(0x10076574, -0x3872a);          /* call 0x10076574 */
    II(0x100aec9e, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100aeca0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aeca2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeca5, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aeca8, 0x5)   calld(0x100aaa28, -0x4285);           /* call 0x100aaa28 */
    II(0x100aecad, 0x4)   mov(dx, memw_a32(ds, ebx + 0x1a));    /* mov dx, [ebx+0x1a] */
    II(0x100aecb1, 0x3)   cmp(dx, memw_a32(ds, eax));           /* cmp dx, [eax] */
    II(0x100aecb4, 0x2)   jnzd(0x100aecda, 0x24);               /* jnz 0x100aecda */
    II(0x100aecb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aecb9, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aecbc, 0x5)   calld(0x10076574, -0x3874d);          /* call 0x10076574 */
    II(0x100aecc1, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100aecc3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aecc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aecc8, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aeccb, 0x5)   calld(0x100aaa28, -0x42a8);           /* call 0x100aaa28 */
    II(0x100aecd0, 0x4)   mov(dx, memw_a32(ds, ebx + 0x1c));    /* mov dx, [ebx+0x1c] */
    II(0x100aecd4, 0x4)   cmp(dx, memw_a32(ds, eax + 0x2));     /* cmp dx, [eax+0x2] */
    II(0x100aecd8, 0x2)   jzd(0x100aed34, 0x5a);                /* jz 0x100aed34 */
l_0x100aecda:
    II(0x100aecda, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aecdc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aecdf, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aece2, 0x5)   calld(0x100aaa28, -0x42bf);           /* call 0x100aaa28 */
    II(0x100aece7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aece9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aecec, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aecef, 0x5)   calld(0x10076574, -0x38780);          /* call 0x10076574 */
    II(0x100aecf4, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100aecf6, 0x4)   mov(ax, memw_a32(ds, edx + 0x2));     /* mov ax, [edx+0x2] */
    II(0x100aecfa, 0x4)   sub(ax, memw_a32(ds, ebx + 0x1c));    /* sub ax, [ebx+0x1c] */
    II(0x100aecfe, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100aed01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aed04, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aed07, 0x5)   calld(0x10076574, -0x38798);          /* call 0x10076574 */
    II(0x100aed0c, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100aed0e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aed10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aed13, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aed16, 0x5)   calld(0x100aaa28, -0x42f3);           /* call 0x100aaa28 */
    II(0x100aed1b, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100aed1e, 0x4)   sub(ax, memw_a32(ds, ebx + 0x1a));    /* sub ax, [ebx+0x1a] */
    II(0x100aed22, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100aed25, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100aed28, 0x5)   calld(0x100ab2e0, -0x3a4d);           /* call 0x100ab2e0 */
    II(0x100aed2d, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x100aed2f, 0x5)   calld(0x1011aca3, 0x6bf6f);           /* call 0x1011aca3 */
l_0x100aed34:
    II(0x100aed34, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x1);    /* mov dword [ebp-0xc], 0x1 */
    II(0x100aed3b, 0x2)   jmpd(0x100aed43, 0x6);                /* jmp 0x100aed43 */
l_0x100aed3d:
    II(0x100aed3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100aed40, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100aed43:
    II(0x100aed43, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100aed46, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100aed4a, 0x2)   jgd(0x100aedbb, 0x6f);                /* jg 0x100aedbb */
    II(0x100aed4c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100aed50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aed53, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aed56, 0x5)   calld(0x100aaa28, -0x4333);           /* call 0x100aaa28 */
    II(0x100aed5b, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100aed5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100aed60, 0x1)   dec(eax);                             /* dec eax */
    II(0x100aed61, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100aed64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aed67, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aed6a, 0x5)   calld(0x100aaa28, -0x4347);           /* call 0x100aaa28 */
    II(0x100aed6f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aed71, 0x4)   mov(ax, memw_a32(ds, ebx + 0x2));     /* mov ax, [ebx+0x2] */
    II(0x100aed75, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x100aed79, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100aed7c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100aed80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aed83, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aed86, 0x5)   calld(0x100aaa28, -0x4363);           /* call 0x100aaa28 */
    II(0x100aed8b, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100aed8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100aed90, 0x1)   dec(eax);                             /* dec eax */
    II(0x100aed91, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100aed94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aed97, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100aed9a, 0x5)   calld(0x100aaa28, -0x4377);           /* call 0x100aaa28 */
    II(0x100aed9f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aeda1, 0x3)   mov(ax, memw_a32(ds, ebx));           /* mov ax, [ebx] */
    II(0x100aeda4, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x100aeda7, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100aedaa, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100aedad, 0x5)   calld(0x100ab2e0, -0x3ad2);           /* call 0x100ab2e0 */
    II(0x100aedb2, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x100aedb4, 0x5)   calld(0x1011aca3, 0x6beea);           /* call 0x1011aca3 */
    II(0x100aedb9, 0x2)   jmpd(0x100aed3d, -0x7e);              /* jmp 0x100aed3d */
l_0x100aedbb:
    II(0x100aedbb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100aedbe, 0x3)   add(edx, 0x22);                       /* add edx, 0x22 */
    II(0x100aedc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aedc4, 0x3)   add(eax, 0x28);                       /* add eax, 0x28 */
    II(0x100aedc7, 0x5)   calld(0x10088b44, -0x26288);          /* call 0x10088b44 */
    II(0x100aedcc, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100aedcf, 0x5)   calld(0x100ab33c, -0x3a98);           /* call 0x100ab33c */
    II(0x100aedd4, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100aedd7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100aedd9, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100aeddb, 0x5)   calld(0x100afbb7, 0xdd7);             /* call 0x100afbb7 */
    II(0x100aede0, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100aede4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aede6, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100aede9, 0x5)   calld(0x100a9f38, -0x4eb6);           /* call 0x100a9f38 */
    II(0x100aedee, 0x2)   jmpd(0x100aedfa, 0xa);                /* jmp 0x100aedfa */
//  II(0x100aedf0, 0xa)   /* Недостижимый код. */
l_0x100aedfa:
    II(0x100aedfa, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100aedfd, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100aedff, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100aee00, 0x1)   popd(edi);                            /* pop edi */
    II(0x100aee01, 0x1)   popd(esi);                            /* pop esi */
    II(0x100aee02, 0x1)   popd(edx);                            /* pop edx */
    II(0x100aee03, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100aee04, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100aee05, 0x1)   retd();                               /* ret */
FUNC_END

