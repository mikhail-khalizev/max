FUNC_BEGIN(0x10108ed4, 0x92a339c0c2344194, 0x20, ({0x68, 0x78, 0, 0, 0, 0xe8, 0x74, 0xce, 0x5, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf4, 0x88, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0xf, 0xbe, 0x45, 0xf8, 0x6b, 0xd0, 0x18, 0xb8, 0x2c, 0x9a, 0x1b, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xf0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x3e, 0x13, 0x6, 0, 0x80, 0x7d, 0xf8, 0, 0x7c, 0x6, 0x80, 0x7d, 0xf8, 0x7, 0x7e, 0x5, 0xe9, 0x99, 0, 0, 0, 0x66, 0xf, 0xbe, 0x45, 0xf8, 0x5, 0xd6, 0x2, 0, 0, 0x89, 0x45, 0xec, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xca, 0xce, 0x5, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x36, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe8, 0xe8, 0x9f, 0x54, 0xfc, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xdc, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x4d, 0xf4, 0x1, 0xc1, 0x8b, 0x45, 0xdc, 0x89, 0x41, 0x15, 0xb9, 0x28, 0, 0, 0, 0xbb, 0x29, 0, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xe8, 0x68, 0x5d, 0xfc, 0xff, 0xe9, 0x3f, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x78, 0x8, 0xff, 0xf, 0x85, 0x77, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x30, 0xce, 0x5, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x41, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x6, 0x8b, 0x55, 0xf0, 0x66, 0x2b, 0x42, 0x2, 0x98, 0x50, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x4, 0x8b, 0x55, 0xf0, 0x66, 0x2b, 0x2, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf0, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xd8, 0xe8, 0x88, 0x53, 0xfc, 0xff, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xcc, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0x8b, 0x45, 0xcc, 0x89, 0x42, 0x15, 0xe9, 0xba, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xb9, 0xcd, 0x5, 0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x36, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xc8, 0xe8, 0x8e, 0x53, 0xfc, 0xff, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0xeb, 0x6, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xbc, 0xf, 0xbe, 0x55, 0xf8, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf4, 0x8b, 0x45, 0xbc, 0x89, 0x42, 0x15, 0x8b, 0x45, 0xf0, 0x83, 0x78, 0xa, 0, 0x74, 0x4c, 0x8d, 0x45, 0xb8, 0xe8, 0x71, 0xc1, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xb4, 0xe8, 0x94, 0xc1, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xb0, 0xe8, 0xb7, 0xc1, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xac, 0xe8, 0xda, 0xc1, 0xfc, 0xff, 0x50, 0xe8, 0, 0xc2, 0xfc, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0x1c, 0xc2, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0xa, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xe8, 0x6d, 0x5e, 0xfc, 0xff, 0x80, 0x7d, 0xfc, 0, 0x74, 0x35, 0xba, 0x5, 0, 0, 0, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xe8, 0x80, 0xc0, 0xfc, 0xff, 0xf, 0xbe, 0x55, 0xf8, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xe8, 0x34, 0xc0, 0xfc, 0xff, 0xeb, 0x4c, 0x31, 0xd2, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xe8, 0x4e, 0xc0, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xf8, 0x8d, 0x90, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xe8, 0xd2, 0xbf, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xf8, 0x8d, 0x90, 0, 0x70, 0, 0, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xe8, 0xe6, 0xbf, 0xfc, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xe8, 0x3b, 0xbf, 0xfc, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0, 0x8b, 0x50, 0x12, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x15, 0xe8, 0xa9, 0x66, 0xfc, 0xff, 0xf, 0xbe, 0x55, 0xf8, 0xf, 0xbe, 0x45, 0xf8, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf4, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0x89, 0x50, 0x45, 0xf, 0xbe, 0x45, 0xf8, 0x6b, 0xc0, 0xc, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xe, 0x89, 0x42, 0x49, 0xf, 0xbe, 0x45, 0xf8, 0x6b, 0xc0, 0xc, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x12, 0x89, 0x42, 0x4d, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10108ed4, 0x5)   pushd(0x78);                          /* push dword 0x78 */
    II(0x10108ed9, 0x5)   calld(sys_check_available_stack_size, 0x5ce74); /* call 0x10165d52 */
    II(0x10108ede, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10108edf, 0x1)   pushd(esi);                           /* push esi */
    II(0x10108ee0, 0x1)   pushd(edi);                           /* push edi */
    II(0x10108ee1, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10108ee2, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10108ee4, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x10108eea, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10108eed, 0x3)   mov(memb_a32(ss, ebp - 0x8), dl);     /* mov [ebp-0x8], dl */
    II(0x10108ef0, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x10108ef3, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10108ef7, 0x3)   imul(edx, eax, 0x18);                 /* imul edx, eax, 0x18 */
    II(0x10108efa, 0x5)   mov(eax, 0x101b9a2c);                 /* mov eax, 0x101b9a2c */
    II(0x10108eff, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10108f01, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10108f04, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10108f09, 0x5)   calld(/* sys */ 0x1016a24c, 0x6133e); /* call 0x1016a24c */
    II(0x10108f0e, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10108f12, 0x2)   jld(0x10108f1a, 0x6);                 /* jl 0x10108f1a */
    II(0x10108f14, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0x7);    /* cmp byte [ebp-0x8], 0x7 */
    II(0x10108f18, 0x2)   jled(0x10108f1f, 0x5);                /* jle 0x10108f1f */
l_0x10108f1a:
    II(0x10108f1a, 0x5)   jmpd(0x10108fb8, 0x99);               /* jmp 0x10108fb8 */
l_0x10108f1f:
    II(0x10108f1f, 0x5)   movsx(ax, memb_a32(ss, ebp - 0x8));   /* movsx ax, byte [ebp-0x8] */
    II(0x10108f24, 0x5)   add(eax, 0x2d6);                      /* add eax, 0x2d6 */
    II(0x10108f29, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10108f2c, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10108f31, 0x5)   calld(sys_new, 0x5ceca);              /* call 0x10165e00 */
    II(0x10108f36, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x10108f39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10108f3c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10108f3f, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x10108f43, 0x2)   jzd(0x10108f7b, 0x36);                /* jz 0x10108f7b */
    II(0x10108f45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108f48, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10108f4a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10108f4d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10108f4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108f51, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x10108f54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108f57, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10108f5b, 0x1)   inc(eax);                             /* inc eax */
    II(0x10108f5c, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10108f5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108f62, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x10108f65, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10108f68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10108f6b, 0x5)   calld(my_ctor_c17, -0x3ab61);         /* call 0x100ce40f */
    II(0x10108f70, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x10108f73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10108f76, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10108f79, 0x2)   jmpd(0x10108f81, 0x6);                /* jmp 0x10108f81 */
l_0x10108f7b:
    II(0x10108f7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10108f7e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x10108f81:
    II(0x10108f81, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10108f85, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10108f88, 0x3)   mov(ecx, memd_a32(ss, ebp - 0xc));    /* mov ecx, [ebp-0xc] */
    II(0x10108f8b, 0x2)   add(ecx, eax);                        /* add ecx, eax */
    II(0x10108f8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10108f90, 0x3)   mov(memd_a32(ds, ecx + 0x15), eax);   /* mov [ecx+0x15], eax */
    II(0x10108f93, 0x5)   mov(ecx, 0x28);                       /* mov ecx, 0x28 */
    II(0x10108f98, 0x5)   mov(ebx, 0x29);                       /* mov ebx, 0x29 */
    II(0x10108f9d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10108fa1, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10108fa5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10108fa8, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10108fab, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x10108fae, 0x5)   calld(0x100ced1b, -0x3a298);          /* call 0x100ced1b */
    II(0x10108fb3, 0x5)   jmpd(0x101090f7, 0x13f);              /* jmp 0x101090f7 */
l_0x10108fb8:
    II(0x10108fb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108fbb, 0x5)   cmp(memw_a32(ds, eax + 0x8), -0x1 /* 0xff */); /* cmp word [eax+0x8], 0xff */
    II(0x10108fc0, 0x6)   jnzd(0x1010903d, 0x77);               /* jnz dword 0x1010903d */
    II(0x10108fc6, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10108fcb, 0x5)   calld(sys_new, 0x5ce30);              /* call 0x10165e00 */
    II(0x10108fd0, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x10108fd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10108fd6, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10108fd9, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x10108fdd, 0x2)   jzd(0x10109020, 0x41);                /* jz 0x10109020 */
    II(0x10108fdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108fe2, 0x4)   mov(ax, memw_a32(ds, eax + 0x6));     /* mov ax, [eax+0x6] */
    II(0x10108fe6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10108fe9, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x10108fed, 0x1)   cwde();                               /* cwde */
    II(0x10108fee, 0x1)   pushd(eax);                           /* push eax */
    II(0x10108fef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108ff2, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x10108ff6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10108ff9, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x10108ffc, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10108fff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10109002, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x10109004, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10109007, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010900a, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1010900d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10109010, 0x5)   calld(0x100ce39d, -0x3ac78);          /* call 0x100ce39d */
    II(0x10109015, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x10109018, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1010901b, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1010901e, 0x2)   jmpd(0x10109026, 0x6);                /* jmp 0x10109026 */
l_0x10109020:
    II(0x10109020, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10109023, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x10109026:
    II(0x10109026, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010902a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010902d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10109030, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10109032, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10109035, 0x3)   mov(memd_a32(ds, edx + 0x15), eax);   /* mov [edx+0x15], eax */
    II(0x10109038, 0x5)   jmpd(0x101090f7, 0xba);               /* jmp 0x101090f7 */
l_0x1010903d:
    II(0x1010903d, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10109042, 0x5)   calld(sys_new, 0x5cdb9);              /* call 0x10165e00 */
    II(0x10109047, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x1010904a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1010904d, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x10109050, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x10109054, 0x2)   jzd(0x1010908c, 0x36);                /* jz 0x1010908c */
    II(0x10109056, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10109059, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010905b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010905e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010905f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10109062, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x10109065, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10109068, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1010906c, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010906d, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10109070, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10109073, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x10109076, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10109079, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1010907c, 0x5)   calld(my_ctor_c17, -0x3ac72);         /* call 0x100ce40f */
    II(0x10109081, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x10109084, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10109087, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x1010908a, 0x2)   jmpd(0x10109092, 0x6);                /* jmp 0x10109092 */
l_0x1010908c:
    II(0x1010908c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1010908f, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x10109092:
    II(0x10109092, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x8));  /* movsx edx, byte [ebp-0x8] */
    II(0x10109096, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10109099, 0x3)   add(edx, memd_a32(ss, ebp - 0xc));    /* add edx, [ebp-0xc] */
    II(0x1010909c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1010909f, 0x3)   mov(memd_a32(ds, edx + 0x15), eax);   /* mov [edx+0x15], eax */
    II(0x101090a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101090a5, 0x4)   cmp(memd_a32(ds, eax + 0xa), 0);      /* cmp dword [eax+0xa], 0x0 */
    II(0x101090a9, 0x2)   jzd(0x101090f7, 0x4c);                /* jz 0x101090f7 */
    II(0x101090ab, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x101090ae, 0x5)   calld(0x100d5224, -0x33e8f);          /* call 0x100d5224 */
    II(0x101090b3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101090b4, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x101090b7, 0x5)   calld(0x100d5250, -0x33e6c);          /* call 0x100d5250 */
    II(0x101090bc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101090bd, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x101090c0, 0x5)   calld(0x100d527c, -0x33e49);          /* call 0x100d527c */
    II(0x101090c5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101090c6, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x101090c9, 0x5)   calld(0x100d52a8, -0x33e26);          /* call 0x100d52a8 */
    II(0x101090ce, 0x1)   pushd(eax);                           /* push eax */
    II(0x101090cf, 0x5)   calld(0x100d52d4, -0x33e00);          /* call 0x100d52d4 */
    II(0x101090d4, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x101090d7, 0x5)   calld(0x100d52f8, -0x33de4);          /* call 0x100d52f8 */
    II(0x101090dc, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101090df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101090e2, 0x3)   mov(edx, memd_a32(ds, eax + 0xa));    /* mov edx, [eax+0xa] */
    II(0x101090e5, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x101090e9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101090ec, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x101090ef, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x101090f2, 0x5)   calld(0x100cef64, -0x3a193);          /* call 0x100cef64 */
l_0x101090f7:
    II(0x101090f7, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x101090fb, 0x2)   jzd(0x10109132, 0x35);                /* jz 0x10109132 */
    II(0x101090fd, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x10109102, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10109106, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10109109, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010910c, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x1010910f, 0x5)   calld(0x100d5194, -0x33f80);          /* call 0x100d5194 */
    II(0x10109114, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x8));  /* movsx edx, byte [ebp-0x8] */
    II(0x10109118, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x1010911e, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10109122, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10109125, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109128, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x1010912b, 0x5)   calld(0x100d5164, -0x33fcc);          /* call 0x100d5164 */
    II(0x10109130, 0x2)   jmpd(0x1010917e, 0x4c);               /* jmp 0x1010917e */
l_0x10109132:
    II(0x10109132, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10109134, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10109138, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010913b, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010913e, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x10109141, 0x5)   calld(0x100d5194, -0x33fb2);          /* call 0x100d5194 */
    II(0x10109146, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010914a, 0x6)   lea(edx, eax + 0x3e8);                /* lea edx, [eax+0x3e8] */
    II(0x10109150, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10109154, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10109157, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010915a, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x1010915d, 0x5)   calld(0x100d5134, -0x3402e);          /* call 0x100d5134 */
    II(0x10109162, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10109166, 0x6)   lea(edx, eax + 0x7000);               /* lea edx, [eax+0x7000] */
    II(0x1010916c, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x10109170, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10109173, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109176, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x10109179, 0x5)   calld(0x100d5164, -0x3401a);          /* call 0x100d5164 */
l_0x1010917e:
    II(0x1010917e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10109181, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
    II(0x10109184, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10109187, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010918b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010918e, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10109191, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x10109194, 0x5)   calld(0x100d50d4, -0x340c5);          /* call 0x100d50d4 */
    II(0x10109199, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010919c, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010919e, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x101091a1, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x101091a5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101091a8, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x101091ab, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x101091ae, 0x5)   calld(0x100cf85c, -0x39957);          /* call 0x100cf85c */
    II(0x101091b3, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x8));  /* movsx edx, byte [ebp-0x8] */
    II(0x101091b7, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x101091bb, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x101091be, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x101091c1, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x101091c7, 0x3)   mov(memd_a32(ds, eax + 0x45), edx);   /* mov [eax+0x45], edx */
    II(0x101091ca, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x101091ce, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x101091d1, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101091d4, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101091d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101091d9, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x101091dc, 0x3)   mov(memd_a32(ds, edx + 0x49), eax);   /* mov [edx+0x49], eax */
    II(0x101091df, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x101091e3, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x101091e6, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101091e9, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101091eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101091ee, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x101091f1, 0x3)   mov(memd_a32(ds, edx + 0x4d), eax);   /* mov [edx+0x4d], eax */
    II(0x101091f4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101091f6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101091f7, 0x1)   popd(edi);                            /* pop edi */
    II(0x101091f8, 0x1)   popd(esi);                            /* pop esi */
    II(0x101091f9, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101091fa, 0x1)   retd();                               /* ret */
FUNC_END

