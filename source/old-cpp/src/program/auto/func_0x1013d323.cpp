FUNC_BEGIN(0x1013d323, 0x30df08c4fd8c7b26, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x25, 0x8a, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x80, 0x7d, 0xfc, 0, 0x74, 0x5b, 0xc7, 0x45, 0xf4, 0x14, 0, 0, 0, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x3b, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x91, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x81, 0xc2, 0x51, 0x2, 0, 0, 0x1, 0xc2, 0x89, 0x55, 0xf0, 0x8b, 0x45, 0xf0, 0x81, 0x38, 0xff, 0xff, 0, 0, 0x74, 0x9, 0x8b, 0x45, 0xf0, 0x80, 0x78, 0x6, 0x2, 0x7e, 0x2, 0xeb, 0xb, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xf8, 0xe8, 0xaf, 0xfa, 0xff, 0xff, 0xeb, 0xbb, 0x8b, 0x45, 0xf8, 0xc7, 0x80, 0xa5, 0xd, 0, 0, 0, 0, 0, 0, 0xeb, 0x60, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xc4, 0xd9, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x50, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xb9, 0x91, 0xf3, 0xff, 0x8a, 0x40, 0x2c, 0x88, 0x45, 0xec, 0xe8, 0x32, 0x58, 0xfc, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0x31, 0xdb, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x2a, 0x92, 0xf3, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xe0, 0x1, 0, 0, 0xe8, 0x13, 0x58, 0xfc, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xf, 0xbe, 0x5d, 0xec, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x9, 0x92, 0xf3, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xbf, 0x1, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1013d323, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x1013d328, 0x5)   calld(sys_check_available_stack_size, 0x28a25); /* call 0x10165d52 */
    II(0x1013d32d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013d32e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013d32f, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013d330, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013d331, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013d332, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013d334, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1013d33a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1013d33d, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x1013d340, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1013d344, 0x2)   jzd(0x1013d3a1, 0x5b);                /* jz 0x1013d3a1 */
    II(0x1013d346, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x14);   /* mov dword [ebp-0xc], 0x14 */
l_0x1013d34d:
    II(0x1013d34d, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
    II(0x1013d350, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x1013d355, 0x2)   jzd(0x1013d392, 0x3b);                /* jz 0x1013d392 */
    II(0x1013d357, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1013d35b, 0x6)   imul(eax, eax, 0x91);                 /* imul eax, eax, 0x91 */
    II(0x1013d361, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013d364, 0x6)   add(edx, 0x251);                      /* add edx, 0x251 */
    II(0x1013d36a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013d36c, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x1013d36f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d372, 0x6)   cmp(memd_a32(ds, eax), 0xffff);       /* cmp dword [eax], 0xffff */
    II(0x1013d378, 0x2)   jzd(0x1013d383, 0x9);                 /* jz 0x1013d383 */
    II(0x1013d37a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d37d, 0x4)   cmp(memb_a32(ds, eax + 0x6), 0x2);    /* cmp byte [eax+0x6], 0x2 */
    II(0x1013d381, 0x2)   jled(0x1013d385, 0x2);                /* jle 0x1013d385 */
l_0x1013d383:
    II(0x1013d383, 0x2)   jmpd(0x1013d390, 0xb);                /* jmp 0x1013d390 */
l_0x1013d385:
    II(0x1013d385, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1013d388, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013d38b, 0x5)   calld(0x1013ce3f, -0x551);            /* call 0x1013ce3f */
l_0x1013d390:
    II(0x1013d390, 0x2)   jmpd(0x1013d34d, -0x45);              /* jmp 0x1013d34d */
l_0x1013d392:
    II(0x1013d392, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013d395, 0xa)   mov(memd_a32(ds, eax + 0xda5), 0);    /* mov dword [eax+0xda5], 0x0 */
    II(0x1013d39f, 0x2)   jmpd(0x1013d401, 0x60);               /* jmp 0x1013d401 */
l_0x1013d3a1:
    II(0x1013d3a1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013d3a3, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x1013d3a8, 0x5)   calld(0x1013ad71, -0x263c);           /* call 0x1013ad71 */
    II(0x1013d3ad, 0x2)   test(al, al);                         /* test al, al */
    II(0x1013d3af, 0x2)   jzd(0x1013d401, 0x50);                /* jz 0x1013d401 */
    II(0x1013d3b1, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x1013d3b6, 0x5)   calld(0x10076574, -0xc6e47);          /* call 0x10076574 */
    II(0x1013d3bb, 0x3)   mov(al, memb_a32(ds, eax + 0x2c));    /* mov al, [eax+0x2c] */
    II(0x1013d3be, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x1013d3c1, 0x5)   calld(0x10102bf8, -0x3a7ce);          /* call 0x10102bf8 */
    II(0x1013d3c6, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1013d3c8, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x1013d3ca, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1013d3cc, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x1013d3d1, 0x5)   calld(0x10076600, -0xc6dd6);          /* call 0x10076600 */
    II(0x1013d3d6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1013d3d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013d3db, 0x5)   calld(0x1013d5c0, 0x1e0);             /* call 0x1013d5c0 */
    II(0x1013d3e0, 0x5)   calld(0x10102bf8, -0x3a7ed);          /* call 0x10102bf8 */
    II(0x1013d3e5, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1013d3e7, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x1013d3e9, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x14)); /* movsx ebx, byte [ebp-0x14] */
    II(0x1013d3ed, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x1013d3f2, 0x5)   calld(0x10076600, -0xc6df7);          /* call 0x10076600 */
    II(0x1013d3f7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1013d3f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013d3fc, 0x5)   calld(0x1013d5c0, 0x1bf);             /* call 0x1013d5c0 */
l_0x1013d401:
    II(0x1013d401, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013d403, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013d404, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013d405, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013d406, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013d407, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013d408, 0x1)   retd();                               /* ret */
FUNC_END

