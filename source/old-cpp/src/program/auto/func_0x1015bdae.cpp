FUNC_BEGIN(0x1015bdae, 0xa50990ac69b00bad, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x9a, 0x9f, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0x8b, 0x55, 0xfc, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xe8, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0x10, 0xa9, 0xf1, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0xe8, 0xb9, 0xe1, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf7, 0x40, 0x12, 0x18, 0, 0x80, 0, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x1, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x1e, 0xa1, 0xf1, 0xff, 0xe9, 0x1d, 0x5, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x70, 0x4, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xdc, 0x2, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0x1, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x1, 0xf, 0x84, 0x8d, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0xc2, 0x94, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb5, 0xa7, 0xf1, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0xf1, 0xa6, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xe0, 0xa6, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xef, 0xeb, 0x41, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xec, 0x40, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x80, 0x94, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x43, 0xaf, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xab, 0xa6, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xef, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x9d, 0xa6, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xdf, 0x8d, 0x45, 0xe0, 0xe8, 0x91, 0xa6, 0xf1, 0xff, 0xe8, 0xc0, 0xe0, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x2, 0xf, 0x84, 0x8b, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xec, 0x40, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x25, 0x94, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x1a, 0xa7, 0xf1, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x56, 0xa6, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x45, 0xa6, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xef, 0xeb, 0x3e, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0xe8, 0x93, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xab, 0xae, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x13, 0xa6, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xdf, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x5, 0xa6, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xef, 0x8d, 0x45, 0xe0, 0xe8, 0xf9, 0xa5, 0xf1, 0xff, 0xe8, 0x28, 0xe0, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x4, 0xf, 0x84, 0x91, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf4, 0x8b, 0x45, 0xec, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x8e, 0x93, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x81, 0xa6, 0xf1, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0xbd, 0xa5, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xac, 0xa5, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xbf, 0xeb, 0x43, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xec, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x4a, 0x93, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd, 0xae, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x75, 0xa5, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xbf, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x67, 0xa5, 0xf1, 0xff, 0x80, 0x60, 0x69, 0x7f, 0x8d, 0x45, 0xe0, 0xe8, 0x5b, 0xa5, 0xf1, 0xff, 0xe8, 0x8a, 0xdf, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x8, 0xf, 0x84, 0x8f, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xec, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0xed, 0x92, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xe2, 0xa5, 0xf1, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x1e, 0xa5, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xd, 0xa5, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xbf, 0xeb, 0x40, 0xf, 0xbf, 0x5d, 0xf4, 0x8b, 0x45, 0xec, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0xae, 0x92, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x71, 0xad, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xd9, 0xa4, 0xf1, 0xff, 0x80, 0x60, 0x69, 0x7f, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0xcb, 0xa4, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xbf, 0x8d, 0x45, 0xe0, 0xe8, 0xbf, 0xa4, 0xf1, 0xff, 0xe8, 0xee, 0xde, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x10, 0xf, 0x84, 0x91, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x54, 0x92, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x47, 0xa5, 0xf1, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x83, 0xa4, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x72, 0xa4, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfe, 0xeb, 0x43, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xec, 0x40, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x10, 0x92, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd3, 0xac, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x3b, 0xa4, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfe, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x2d, 0xa4, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfd, 0x8d, 0x45, 0xe0, 0xe8, 0x21, 0xa4, 0xf1, 0xff, 0xe8, 0x50, 0xde, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x20, 0xf, 0x84, 0x8f, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xec, 0x40, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0xb3, 0x91, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xa8, 0xa4, 0xf1, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0xe4, 0xa3, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xd3, 0xa3, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfe, 0xeb, 0x40, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x74, 0x91, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x37, 0xac, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x9f, 0xa3, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfd, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x91, 0xa3, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfe, 0x8d, 0x45, 0xe0, 0xe8, 0x85, 0xa3, 0xf1, 0xff, 0xe8, 0xb4, 0xdd, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x40, 0xf, 0x84, 0x8d, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf4, 0x8b, 0x45, 0xec, 0x48, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x1c, 0x91, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf, 0xa4, 0xf1, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x4b, 0xa3, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x3a, 0xa3, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfb, 0xeb, 0x41, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xec, 0x48, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0xda, 0x90, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x9d, 0xab, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x5, 0xa3, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfb, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0xf7, 0xa2, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xf7, 0x8d, 0x45, 0xe0, 0xe8, 0xeb, 0xa2, 0xf1, 0xff, 0xe8, 0x1a, 0xdd, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x69, 0x80, 0xf, 0x84, 0x8b, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xec, 0x48, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x7f, 0x90, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x74, 0xa3, 0xf1, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0xb0, 0xa2, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x9f, 0xa2, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfb, 0xeb, 0x3e, 0xf, 0xbf, 0x5d, 0xf4, 0x8b, 0x45, 0xec, 0x48, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x42, 0x90, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x5, 0xab, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x6d, 0xa2, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xf7, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x5f, 0xa2, 0xf1, 0xff, 0x80, 0x60, 0x69, 0xfb, 0x8d, 0x45, 0xe0, 0xe8, 0x53, 0xa2, 0xf1, 0xff, 0xe8, 0x82, 0xdc, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xfc, 0x9b, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015bdae, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x1015bdb3, 0x5)   calld(sys_check_available_stack_size, 0x9f9a); /* call 0x10165d52 */
    II(0x1015bdb8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015bdb9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015bdba, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015bdbb, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015bdbc, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015bdbd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015bdbe, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015bdc0, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1015bdc6, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1015bdc9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015bdcb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015bdce, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x1015bdd1, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1015bdd4, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1015bdd8, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bddb, 0x5)   calld(my_ctor_0x101b38f8, -0xe56f0);  /* call 0x100766f0 */
    II(0x1015bde0, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1015bde3, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1015bde7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015bdea, 0x5)   calld(0x10149fa8, -0x11e47);          /* call 0x10149fa8 */
    II(0x1015bdef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015bdf2, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800018); /* test dword [eax+0x12], 0x800018 */
    II(0x1015bdf9, 0x2)   jzd(0x1015be04, 0x9);                 /* jz 0x1015be04 */
    II(0x1015bdfb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015bdfe, 0x4)   test(memb_a32(ds, eax + 0x12), 0x1);  /* test byte [eax+0x12], 0x1 */
    II(0x1015be02, 0x2)   jzd(0x1015be13, 0xf);                 /* jz 0x1015be13 */
l_0x1015be04:
    II(0x1015be04, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015be06, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015be09, 0x5)   calld(0x10075f2c, -0xe5ee2);          /* call 0x10075f2c */
    II(0x1015be0e, 0x5)   jmpd(0x1015c330, 0x51d);              /* jmp 0x1015c330 */
l_0x1015be13:
    II(0x1015be13, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015be16, 0x5)   calld(0x1014c28b, -0xfb90);           /* call 0x1014c28b */
    II(0x1015be1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015be1e, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1015be22, 0x2)   jzd(0x1015be2d, 0x9);                 /* jz 0x1015be2d */
    II(0x1015be24, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0x2);   /* mov dword [ebp-0x24], 0x2 */
    II(0x1015be2b, 0x2)   jmpd(0x1015be34, 0x7);                /* jmp 0x1015be34 */
l_0x1015be2d:
    II(0x1015be2d, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0x1);   /* mov dword [ebp-0x24], 0x1 */
l_0x1015be34:
    II(0x1015be34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1015be37, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1015be3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015be3d, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1015be41, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015be44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015be47, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1015be4b, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015be4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015be51, 0x4)   test(memb_a32(ds, eax + 0x69), 0x1);  /* test byte [eax+0x69], 0x1 */
    II(0x1015be55, 0x6)   jzd(0x1015bee8, 0x8d);                /* jz dword 0x1015bee8 */
    II(0x1015be5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015be5e, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015be5f, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015be62, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1015be66, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015be6a, 0x5)   calld(0x10075331, -0xe6b3e);          /* call 0x10075331 */
    II(0x1015be6f, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015be72, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015be74, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015be76, 0x5)   calld(0x10076630, -0xe584b);          /* call 0x10076630 */
    II(0x1015be7b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015be7e, 0x5)   calld(0x10076574, -0xe590f);          /* call 0x10076574 */
    II(0x1015be83, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015be8a, 0x2)   jzd(0x1015be9a, 0xe);                 /* jz 0x1015be9a */
    II(0x1015be8c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015be8f, 0x5)   calld(0x10076574, -0xe5920);          /* call 0x10076574 */
    II(0x1015be94, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x11 /* 0xef */); /* and byte [eax+0x69], 0xef */
    II(0x1015be98, 0x2)   jmpd(0x1015bedb, 0x41);               /* jmp 0x1015bedb */
l_0x1015be9a:
    II(0x1015be9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015be9d, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015be9e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015bea1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015bea4, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015bea5, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015bea8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015beac, 0x5)   calld(0x10075331, -0xe6b80);          /* call 0x10075331 */
    II(0x1015beb1, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015beb4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015beb6, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015beb8, 0x5)   calld(0x10076e00, -0xe50bd);          /* call 0x10076e00 */
    II(0x1015bebd, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015bebf, 0x2)   jzd(0x1015becf, 0xe);                 /* jz 0x1015becf */
    II(0x1015bec1, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bec4, 0x5)   calld(0x10076574, -0xe5955);          /* call 0x10076574 */
    II(0x1015bec9, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x11 /* 0xef */); /* and byte [eax+0x69], 0xef */
    II(0x1015becd, 0x2)   jmpd(0x1015bedb, 0xc);                /* jmp 0x1015bedb */
l_0x1015becf:
    II(0x1015becf, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bed2, 0x5)   calld(0x10076574, -0xe5963);          /* call 0x10076574 */
    II(0x1015bed7, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x21 /* 0xdf */); /* and byte [eax+0x69], 0xdf */
l_0x1015bedb:
    II(0x1015bedb, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bede, 0x5)   calld(0x10076574, -0xe596f);          /* call 0x10076574 */
    II(0x1015bee3, 0x5)   calld(0x10149fa8, -0x11f40);          /* call 0x10149fa8 */
l_0x1015bee8:
    II(0x1015bee8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015beeb, 0x4)   test(memb_a32(ds, eax + 0x69), 0x2);  /* test byte [eax+0x69], 0x2 */
    II(0x1015beef, 0x6)   jzd(0x1015bf80, 0x8b);                /* jz dword 0x1015bf80 */
    II(0x1015bef5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015bef8, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015bef9, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015befc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015beff, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015bf00, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015bf03, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015bf07, 0x5)   calld(0x10075331, -0xe6bdb);          /* call 0x10075331 */
    II(0x1015bf0c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015bf0e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bf11, 0x5)   calld(0x10076630, -0xe58e6);          /* call 0x10076630 */
    II(0x1015bf16, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bf19, 0x5)   calld(0x10076574, -0xe59aa);          /* call 0x10076574 */
    II(0x1015bf1e, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015bf25, 0x2)   jzd(0x1015bf35, 0xe);                 /* jz 0x1015bf35 */
    II(0x1015bf27, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bf2a, 0x5)   calld(0x10076574, -0xe59bb);          /* call 0x10076574 */
    II(0x1015bf2f, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x11 /* 0xef */); /* and byte [eax+0x69], 0xef */
    II(0x1015bf33, 0x2)   jmpd(0x1015bf73, 0x3e);               /* jmp 0x1015bf73 */
l_0x1015bf35:
    II(0x1015bf35, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015bf38, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015bf39, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015bf3c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1015bf40, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015bf44, 0x5)   calld(0x10075331, -0xe6c18);          /* call 0x10075331 */
    II(0x1015bf49, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015bf4c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015bf4e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015bf50, 0x5)   calld(0x10076e00, -0xe5155);          /* call 0x10076e00 */
    II(0x1015bf55, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015bf57, 0x2)   jzd(0x1015bf67, 0xe);                 /* jz 0x1015bf67 */
    II(0x1015bf59, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bf5c, 0x5)   calld(0x10076574, -0xe59ed);          /* call 0x10076574 */
    II(0x1015bf61, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x21 /* 0xdf */); /* and byte [eax+0x69], 0xdf */
    II(0x1015bf65, 0x2)   jmpd(0x1015bf73, 0xc);                /* jmp 0x1015bf73 */
l_0x1015bf67:
    II(0x1015bf67, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bf6a, 0x5)   calld(0x10076574, -0xe59fb);          /* call 0x10076574 */
    II(0x1015bf6f, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x11 /* 0xef */); /* and byte [eax+0x69], 0xef */
l_0x1015bf73:
    II(0x1015bf73, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bf76, 0x5)   calld(0x10076574, -0xe5a07);          /* call 0x10076574 */
    II(0x1015bf7b, 0x5)   calld(0x10149fa8, -0x11fd8);          /* call 0x10149fa8 */
l_0x1015bf80:
    II(0x1015bf80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015bf83, 0x4)   test(memb_a32(ds, eax + 0x69), 0x4);  /* test byte [eax+0x69], 0x4 */
    II(0x1015bf87, 0x6)   jzd(0x1015c01e, 0x91);                /* jz dword 0x1015c01e */
    II(0x1015bf8d, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1015bf91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015bf94, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015bf97, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015bf9a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015bf9e, 0x5)   calld(0x10075331, -0xe6c72);          /* call 0x10075331 */
    II(0x1015bfa3, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015bfa6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015bfa8, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015bfaa, 0x5)   calld(0x10076630, -0xe597f);          /* call 0x10076630 */
    II(0x1015bfaf, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bfb2, 0x5)   calld(0x10076574, -0xe5a43);          /* call 0x10076574 */
    II(0x1015bfb7, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015bfbe, 0x2)   jzd(0x1015bfce, 0xe);                 /* jz 0x1015bfce */
    II(0x1015bfc0, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bfc3, 0x5)   calld(0x10076574, -0xe5a54);          /* call 0x10076574 */
    II(0x1015bfc8, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x41 /* 0xbf */); /* and byte [eax+0x69], 0xbf */
    II(0x1015bfcc, 0x2)   jmpd(0x1015c011, 0x43);               /* jmp 0x1015c011 */
l_0x1015bfce:
    II(0x1015bfce, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015bfd1, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015bfd2, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015bfd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015bfd8, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015bfdb, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015bfde, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015bfe2, 0x5)   calld(0x10075331, -0xe6cb6);          /* call 0x10075331 */
    II(0x1015bfe7, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015bfea, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015bfec, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015bfee, 0x5)   calld(0x10076e00, -0xe51f3);          /* call 0x10076e00 */
    II(0x1015bff3, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015bff5, 0x2)   jzd(0x1015c005, 0xe);                 /* jz 0x1015c005 */
    II(0x1015bff7, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015bffa, 0x5)   calld(0x10076574, -0xe5a8b);          /* call 0x10076574 */
    II(0x1015bfff, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x41 /* 0xbf */); /* and byte [eax+0x69], 0xbf */
    II(0x1015c003, 0x2)   jmpd(0x1015c011, 0xc);                /* jmp 0x1015c011 */
l_0x1015c005:
    II(0x1015c005, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c008, 0x5)   calld(0x10076574, -0xe5a99);          /* call 0x10076574 */
    II(0x1015c00d, 0x4)   and_(memb_a32(ds, eax + 0x69), 0x7f); /* and byte [eax+0x69], 0x7f */
l_0x1015c011:
    II(0x1015c011, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c014, 0x5)   calld(0x10076574, -0xe5aa5);          /* call 0x10076574 */
    II(0x1015c019, 0x5)   calld(0x10149fa8, -0x12076);          /* call 0x10149fa8 */
l_0x1015c01e:
    II(0x1015c01e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015c021, 0x4)   test(memb_a32(ds, eax + 0x69), 0x8);  /* test byte [eax+0x69], 0x8 */
    II(0x1015c025, 0x6)   jzd(0x1015c0ba, 0x8f);                /* jz dword 0x1015c0ba */
    II(0x1015c02b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015c02e, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015c02f, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015c032, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015c035, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015c038, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015c03b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c03f, 0x5)   calld(0x10075331, -0xe6d13);          /* call 0x10075331 */
    II(0x1015c044, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c046, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c049, 0x5)   calld(0x10076630, -0xe5a1e);          /* call 0x10076630 */
    II(0x1015c04e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c051, 0x5)   calld(0x10076574, -0xe5ae2);          /* call 0x10076574 */
    II(0x1015c056, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015c05d, 0x2)   jzd(0x1015c06d, 0xe);                 /* jz 0x1015c06d */
    II(0x1015c05f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c062, 0x5)   calld(0x10076574, -0xe5af3);          /* call 0x10076574 */
    II(0x1015c067, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x41 /* 0xbf */); /* and byte [eax+0x69], 0xbf */
    II(0x1015c06b, 0x2)   jmpd(0x1015c0ad, 0x40);               /* jmp 0x1015c0ad */
l_0x1015c06d:
    II(0x1015c06d, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1015c071, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015c074, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015c077, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015c07a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c07e, 0x5)   calld(0x10075331, -0xe6d52);          /* call 0x10075331 */
    II(0x1015c083, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015c086, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c088, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015c08a, 0x5)   calld(0x10076e00, -0xe528f);          /* call 0x10076e00 */
    II(0x1015c08f, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015c091, 0x2)   jzd(0x1015c0a1, 0xe);                 /* jz 0x1015c0a1 */
    II(0x1015c093, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c096, 0x5)   calld(0x10076574, -0xe5b27);          /* call 0x10076574 */
    II(0x1015c09b, 0x4)   and_(memb_a32(ds, eax + 0x69), 0x7f); /* and byte [eax+0x69], 0x7f */
    II(0x1015c09f, 0x2)   jmpd(0x1015c0ad, 0xc);                /* jmp 0x1015c0ad */
l_0x1015c0a1:
    II(0x1015c0a1, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c0a4, 0x5)   calld(0x10076574, -0xe5b35);          /* call 0x10076574 */
    II(0x1015c0a9, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x41 /* 0xbf */); /* and byte [eax+0x69], 0xbf */
l_0x1015c0ad:
    II(0x1015c0ad, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c0b0, 0x5)   calld(0x10076574, -0xe5b41);          /* call 0x10076574 */
    II(0x1015c0b5, 0x5)   calld(0x10149fa8, -0x12112);          /* call 0x10149fa8 */
l_0x1015c0ba:
    II(0x1015c0ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015c0bd, 0x4)   test(memb_a32(ds, eax + 0x69), 0x10); /* test byte [eax+0x69], 0x10 */
    II(0x1015c0c1, 0x6)   jzd(0x1015c158, 0x91);                /* jz dword 0x1015c158 */
    II(0x1015c0c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015c0ca, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015c0cd, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015c0d0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1015c0d4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c0d8, 0x5)   calld(0x10075331, -0xe6dac);          /* call 0x10075331 */
    II(0x1015c0dd, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015c0e0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c0e2, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015c0e4, 0x5)   calld(0x10076630, -0xe5ab9);          /* call 0x10076630 */
    II(0x1015c0e9, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c0ec, 0x5)   calld(0x10076574, -0xe5b7d);          /* call 0x10076574 */
    II(0x1015c0f1, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015c0f8, 0x2)   jzd(0x1015c108, 0xe);                 /* jz 0x1015c108 */
    II(0x1015c0fa, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c0fd, 0x5)   calld(0x10076574, -0xe5b8e);          /* call 0x10076574 */
    II(0x1015c102, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x2 /* 0xfe */); /* and byte [eax+0x69], 0xfe */
    II(0x1015c106, 0x2)   jmpd(0x1015c14b, 0x43);               /* jmp 0x1015c14b */
l_0x1015c108:
    II(0x1015c108, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015c10b, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015c10e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015c111, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015c114, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015c115, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015c118, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c11c, 0x5)   calld(0x10075331, -0xe6df0);          /* call 0x10075331 */
    II(0x1015c121, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015c124, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c126, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015c128, 0x5)   calld(0x10076e00, -0xe532d);          /* call 0x10076e00 */
    II(0x1015c12d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015c12f, 0x2)   jzd(0x1015c13f, 0xe);                 /* jz 0x1015c13f */
    II(0x1015c131, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c134, 0x5)   calld(0x10076574, -0xe5bc5);          /* call 0x10076574 */
    II(0x1015c139, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x2 /* 0xfe */); /* and byte [eax+0x69], 0xfe */
    II(0x1015c13d, 0x2)   jmpd(0x1015c14b, 0xc);                /* jmp 0x1015c14b */
l_0x1015c13f:
    II(0x1015c13f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c142, 0x5)   calld(0x10076574, -0xe5bd3);          /* call 0x10076574 */
    II(0x1015c147, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x3 /* 0xfd */); /* and byte [eax+0x69], 0xfd */
l_0x1015c14b:
    II(0x1015c14b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c14e, 0x5)   calld(0x10076574, -0xe5bdf);          /* call 0x10076574 */
    II(0x1015c153, 0x5)   calld(0x10149fa8, -0x121b0);          /* call 0x10149fa8 */
l_0x1015c158:
    II(0x1015c158, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015c15b, 0x4)   test(memb_a32(ds, eax + 0x69), 0x20); /* test byte [eax+0x69], 0x20 */
    II(0x1015c15f, 0x6)   jzd(0x1015c1f4, 0x8f);                /* jz dword 0x1015c1f4 */
    II(0x1015c165, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015c168, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015c16b, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015c16e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015c171, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015c172, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015c175, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c179, 0x5)   calld(0x10075331, -0xe6e4d);          /* call 0x10075331 */
    II(0x1015c17e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c180, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c183, 0x5)   calld(0x10076630, -0xe5b58);          /* call 0x10076630 */
    II(0x1015c188, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c18b, 0x5)   calld(0x10076574, -0xe5c1c);          /* call 0x10076574 */
    II(0x1015c190, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015c197, 0x2)   jzd(0x1015c1a7, 0xe);                 /* jz 0x1015c1a7 */
    II(0x1015c199, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c19c, 0x5)   calld(0x10076574, -0xe5c2d);          /* call 0x10076574 */
    II(0x1015c1a1, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x2 /* 0xfe */); /* and byte [eax+0x69], 0xfe */
    II(0x1015c1a5, 0x2)   jmpd(0x1015c1e7, 0x40);               /* jmp 0x1015c1e7 */
l_0x1015c1a7:
    II(0x1015c1a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015c1aa, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015c1ad, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015c1b0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1015c1b4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c1b8, 0x5)   calld(0x10075331, -0xe6e8c);          /* call 0x10075331 */
    II(0x1015c1bd, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015c1c0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c1c2, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015c1c4, 0x5)   calld(0x10076e00, -0xe53c9);          /* call 0x10076e00 */
    II(0x1015c1c9, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015c1cb, 0x2)   jzd(0x1015c1db, 0xe);                 /* jz 0x1015c1db */
    II(0x1015c1cd, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c1d0, 0x5)   calld(0x10076574, -0xe5c61);          /* call 0x10076574 */
    II(0x1015c1d5, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x3 /* 0xfd */); /* and byte [eax+0x69], 0xfd */
    II(0x1015c1d9, 0x2)   jmpd(0x1015c1e7, 0xc);                /* jmp 0x1015c1e7 */
l_0x1015c1db:
    II(0x1015c1db, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c1de, 0x5)   calld(0x10076574, -0xe5c6f);          /* call 0x10076574 */
    II(0x1015c1e3, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x2 /* 0xfe */); /* and byte [eax+0x69], 0xfe */
l_0x1015c1e7:
    II(0x1015c1e7, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c1ea, 0x5)   calld(0x10076574, -0xe5c7b);          /* call 0x10076574 */
    II(0x1015c1ef, 0x5)   calld(0x10149fa8, -0x1224c);          /* call 0x10149fa8 */
l_0x1015c1f4:
    II(0x1015c1f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015c1f7, 0x4)   test(memb_a32(ds, eax + 0x69), 0x40); /* test byte [eax+0x69], 0x40 */
    II(0x1015c1fb, 0x6)   jzd(0x1015c28e, 0x8d);                /* jz dword 0x1015c28e */
    II(0x1015c201, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1015c205, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015c208, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015c209, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015c20c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c210, 0x5)   calld(0x10075331, -0xe6ee4);          /* call 0x10075331 */
    II(0x1015c215, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015c218, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c21a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015c21c, 0x5)   calld(0x10076630, -0xe5bf1);          /* call 0x10076630 */
    II(0x1015c221, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c224, 0x5)   calld(0x10076574, -0xe5cb5);          /* call 0x10076574 */
    II(0x1015c229, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015c230, 0x2)   jzd(0x1015c240, 0xe);                 /* jz 0x1015c240 */
    II(0x1015c232, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c235, 0x5)   calld(0x10076574, -0xe5cc6);          /* call 0x10076574 */
    II(0x1015c23a, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x5 /* 0xfb */); /* and byte [eax+0x69], 0xfb */
    II(0x1015c23e, 0x2)   jmpd(0x1015c281, 0x41);               /* jmp 0x1015c281 */
l_0x1015c240:
    II(0x1015c240, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015c243, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015c244, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015c247, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015c24a, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015c24b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015c24e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c252, 0x5)   calld(0x10075331, -0xe6f26);          /* call 0x10075331 */
    II(0x1015c257, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015c25a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c25c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015c25e, 0x5)   calld(0x10076e00, -0xe5463);          /* call 0x10076e00 */
    II(0x1015c263, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015c265, 0x2)   jzd(0x1015c275, 0xe);                 /* jz 0x1015c275 */
    II(0x1015c267, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c26a, 0x5)   calld(0x10076574, -0xe5cfb);          /* call 0x10076574 */
    II(0x1015c26f, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x5 /* 0xfb */); /* and byte [eax+0x69], 0xfb */
    II(0x1015c273, 0x2)   jmpd(0x1015c281, 0xc);                /* jmp 0x1015c281 */
l_0x1015c275:
    II(0x1015c275, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c278, 0x5)   calld(0x10076574, -0xe5d09);          /* call 0x10076574 */
    II(0x1015c27d, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x9 /* 0xf7 */); /* and byte [eax+0x69], 0xf7 */
l_0x1015c281:
    II(0x1015c281, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c284, 0x5)   calld(0x10076574, -0xe5d15);          /* call 0x10076574 */
    II(0x1015c289, 0x5)   calld(0x10149fa8, -0x122e6);          /* call 0x10149fa8 */
l_0x1015c28e:
    II(0x1015c28e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015c291, 0x4)   test(memb_a32(ds, eax + 0x69), 0x80); /* test byte [eax+0x69], 0x80 */
    II(0x1015c295, 0x6)   jzd(0x1015c326, 0x8b);                /* jz dword 0x1015c326 */
    II(0x1015c29b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015c29e, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015c29f, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015c2a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015c2a5, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015c2a6, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015c2a9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c2ad, 0x5)   calld(0x10075331, -0xe6f81);          /* call 0x10075331 */
    II(0x1015c2b2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c2b4, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c2b7, 0x5)   calld(0x10076630, -0xe5c8c);          /* call 0x10076630 */
    II(0x1015c2bc, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c2bf, 0x5)   calld(0x10076574, -0xe5d50);          /* call 0x10076574 */
    II(0x1015c2c4, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015c2cb, 0x2)   jzd(0x1015c2db, 0xe);                 /* jz 0x1015c2db */
    II(0x1015c2cd, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c2d0, 0x5)   calld(0x10076574, -0xe5d61);          /* call 0x10076574 */
    II(0x1015c2d5, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x5 /* 0xfb */); /* and byte [eax+0x69], 0xfb */
    II(0x1015c2d9, 0x2)   jmpd(0x1015c319, 0x3e);               /* jmp 0x1015c319 */
l_0x1015c2db:
    II(0x1015c2db, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1015c2df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015c2e2, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015c2e3, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015c2e6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015c2ea, 0x5)   calld(0x10075331, -0xe6fbe);          /* call 0x10075331 */
    II(0x1015c2ef, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015c2f2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015c2f4, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015c2f6, 0x5)   calld(0x10076e00, -0xe54fb);          /* call 0x10076e00 */
    II(0x1015c2fb, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015c2fd, 0x2)   jzd(0x1015c30d, 0xe);                 /* jz 0x1015c30d */
    II(0x1015c2ff, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c302, 0x5)   calld(0x10076574, -0xe5d93);          /* call 0x10076574 */
    II(0x1015c307, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x9 /* 0xf7 */); /* and byte [eax+0x69], 0xf7 */
    II(0x1015c30b, 0x2)   jmpd(0x1015c319, 0xc);                /* jmp 0x1015c319 */
l_0x1015c30d:
    II(0x1015c30d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c310, 0x5)   calld(0x10076574, -0xe5da1);          /* call 0x10076574 */
    II(0x1015c315, 0x4)   and_(memb_a32(ds, eax + 0x69), -0x5 /* 0xfb */); /* and byte [eax+0x69], 0xfb */
l_0x1015c319:
    II(0x1015c319, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c31c, 0x5)   calld(0x10076574, -0xe5dad);          /* call 0x10076574 */
    II(0x1015c321, 0x5)   calld(0x10149fa8, -0x1237e);          /* call 0x10149fa8 */
l_0x1015c326:
    II(0x1015c326, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015c328, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015c32b, 0x5)   calld(0x10075f2c, -0xe6404);          /* call 0x10075f2c */
l_0x1015c330:
    II(0x1015c330, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015c332, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015c333, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015c334, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015c335, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015c336, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015c337, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015c338, 0x1)   retd();                               /* ret */
FUNC_END

