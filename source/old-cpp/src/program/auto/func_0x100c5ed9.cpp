FUNC_BEGIN(0x100c5ed9, 0x5805438924ebc101, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x6f, 0xfe, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xe6, 0x42, 0xfc, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x55, 0xf8, 0xf, 0xbf, 0x12, 0x8b, 0x45, 0xfc, 0xe8, 0xe3, 0x61, 0x7, 0, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x2, 0x8b, 0x45, 0xfc, 0xe8, 0x2b, 0x61, 0x7, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x1, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xbf, 0x61, 0x7, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x3, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xae, 0x61, 0x7, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x5, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x9d, 0x61, 0x7, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x79, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8c, 0x61, 0x7, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x43, 0xe8, 0x17, 0xc, 0xfb, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x76, 0x61, 0x7, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x43, 0xe8, 0x71, 0x50, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xcf, 0x4f, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x55, 0xc, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xc4, 0x4d, 0x7, 0, 0x84, 0xc0, 0x74, 0x12, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x3c, 0x41, 0xfc, 0xff, 0xe8, 0xca, 0x2d, 0xff, 0xff, 0xeb, 0xd8, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x63, 0, 0x74, 0x9, 0xc7, 0x45, 0xe4, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0xc, 0x61, 0x7, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x63, 0, 0x74, 0x41, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x26, 0x8b, 0x1d, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x63, 0x1, 0xc2, 0x8b, 0x12, 0x8b, 0x45, 0xfc, 0xe8, 0x1f, 0x60, 0x7, 0, 0xeb, 0xc8, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x67, 0, 0x74, 0x9, 0xc7, 0x45, 0xe0, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0x97, 0x60, 0x7, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x67, 0, 0x74, 0x41, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x26, 0x8b, 0x1d, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x67, 0x1, 0xc2, 0x8b, 0x12, 0x8b, 0x45, 0xfc, 0xe8, 0xaa, 0x5f, 0x7, 0, 0xeb, 0xc8, 0xbb, 0x4, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x77, 0x8b, 0x45, 0xfc, 0xe8, 0x95, 0x5f, 0x7, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x82, 0x2d, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100c5ed9, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100c5ede, 0x5)   calld(sys_check_available_stack_size, 0x9fe6f); /* call 0x10165d52 */
    II(0x100c5ee3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100c5ee4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c5ee5, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c5ee6, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c5ee7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c5ee8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c5eea, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100c5ef0, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100c5ef3, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100c5ef6, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100c5efa, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c5efd, 0x5)   calld(0x1008a1e8, -0x3bd1a);          /* call 0x1008a1e8 */
    II(0x100c5f02, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c5f05, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100c5f09, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c5f0c, 0x3)   movsx(edx, memw_a32(ds, edx));        /* movsx edx, word [edx] */
    II(0x100c5f0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5f12, 0x5)   calld(0x1013c0fa, 0x761e3);           /* call 0x1013c0fa */
    II(0x100c5f17, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100c5f1c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c5f1f, 0x3)   add(edx, 0x2);                        /* add edx, 0x2 */
    II(0x100c5f22, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5f25, 0x5)   calld(0x1013c055, 0x7612b);           /* call 0x1013c055 */
    II(0x100c5f2a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c5f2d, 0x3)   mov(edx, memd_a32(ds, edx + 0x1));    /* mov edx, [edx+0x1] */
    II(0x100c5f30, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c5f33, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5f36, 0x5)   calld(0x1013c0fa, 0x761bf);           /* call 0x1013c0fa */
    II(0x100c5f3b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c5f3e, 0x3)   mov(edx, memd_a32(ds, edx + 0x3));    /* mov edx, [edx+0x3] */
    II(0x100c5f41, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c5f44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5f47, 0x5)   calld(0x1013c0fa, 0x761ae);           /* call 0x1013c0fa */
    II(0x100c5f4c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c5f4f, 0x3)   mov(edx, memd_a32(ds, edx + 0x5));    /* mov edx, [edx+0x5] */
    II(0x100c5f52, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c5f55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5f58, 0x5)   calld(0x1013c0fa, 0x7619d);           /* call 0x1013c0fa */
    II(0x100c5f5d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c5f60, 0x3)   mov(edx, memd_a32(ds, edx + 0x79));   /* mov edx, [edx+0x79] */
    II(0x100c5f63, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c5f66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5f69, 0x5)   calld(0x1013c0fa, 0x7618c);           /* call 0x1013c0fa */
    II(0x100c5f6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c5f71, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c5f74, 0x5)   calld(0x10076b90, -0x4f3e9);          /* call 0x10076b90 */
    II(0x100c5f79, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c5f7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5f7f, 0x5)   calld(0x1013c0fa, 0x76176);           /* call 0x1013c0fa */
    II(0x100c5f84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c5f87, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c5f8a, 0x5)   calld(0x100cb000, 0x5071);            /* call 0x100cb000 */
    II(0x100c5f8f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c5f91, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c5f94, 0x5)   calld(0x100caf68, 0x4fcf);            /* call 0x100caf68 */
    II(0x100c5f99, 0x2)   jmpd(0x100c5fa3, 0x8);                /* jmp 0x100c5fa3 */
l_0x100c5f9b:
    II(0x100c5f9b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c5f9e, 0x5)   calld(0x10076bf8, -0x4f3ab);          /* call 0x10076bf8 */
l_0x100c5fa3:
    II(0x100c5fa3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c5fa5, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c5fa8, 0x5)   calld(0x1013ad71, 0x74dc4);           /* call 0x1013ad71 */
    II(0x100c5fad, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c5faf, 0x2)   jzd(0x100c5fc3, 0x12);                /* jz 0x100c5fc3 */
    II(0x100c5fb1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c5fb4, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c5fb7, 0x5)   calld(0x1008a0f8, -0x3bec4);          /* call 0x1008a0f8 */
    II(0x100c5fbc, 0x5)   calld(0x100b8d8b, -0xd236);           /* call 0x100b8d8b */
    II(0x100c5fc1, 0x2)   jmpd(0x100c5f9b, -0x28);              /* jmp 0x100c5f9b */
l_0x100c5fc3:
    II(0x100c5fc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c5fc6, 0x4)   cmp(memd_a32(ds, eax + 0x63), 0);     /* cmp dword [eax+0x63], 0x0 */
    II(0x100c5fca, 0x2)   jzd(0x100c5fd5, 0x9);                 /* jz 0x100c5fd5 */
    II(0x100c5fcc, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x1);   /* mov dword [ebp-0x1c], 0x1 */
    II(0x100c5fd3, 0x2)   jmpd(0x100c5fdc, 0x7);                /* jmp 0x100c5fdc */
l_0x100c5fd5:
    II(0x100c5fd5, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x100c5fdc:
    II(0x100c5fdc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100c5fdf, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c5fe2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100c5fe6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5fe9, 0x5)   calld(0x1013c0fa, 0x7610c);           /* call 0x1013c0fa */
    II(0x100c5fee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c5ff1, 0x4)   cmp(memd_a32(ds, eax + 0x63), 0);     /* cmp dword [eax+0x63], 0x0 */
    II(0x100c5ff5, 0x2)   jzd(0x100c6038, 0x41);                /* jz 0x100c6038 */
    II(0x100c5ff7, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100c5ffe, 0x2)   jmpd(0x100c6006, 0x6);                /* jmp 0x100c6006 */
l_0x100c6000:
    II(0x100c6000, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c6003, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100c6006:
    II(0x100c6006, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c6009, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c6010, 0x2)   jged(0x100c6038, 0x26);               /* jge 0x100c6038 */
    II(0x100c6012, 0x6)   mov(ebx, memd_a32(ds, 0x101c8172));   /* mov ebx, [0x101c8172] */
    II(0x100c6018, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c601b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100c601f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c6022, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c6024, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c6027, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100c602a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c602c, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100c602e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c6031, 0x5)   calld(0x1013c055, 0x7601f);           /* call 0x1013c055 */
    II(0x100c6036, 0x2)   jmpd(0x100c6000, -0x38);              /* jmp 0x100c6000 */
l_0x100c6038:
    II(0x100c6038, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c603b, 0x4)   cmp(memd_a32(ds, eax + 0x67), 0);     /* cmp dword [eax+0x67], 0x0 */
    II(0x100c603f, 0x2)   jzd(0x100c604a, 0x9);                 /* jz 0x100c604a */
    II(0x100c6041, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x1);   /* mov dword [ebp-0x20], 0x1 */
    II(0x100c6048, 0x2)   jmpd(0x100c6051, 0x7);                /* jmp 0x100c6051 */
l_0x100c604a:
    II(0x100c604a, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x100c6051:
    II(0x100c6051, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100c6054, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c6057, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100c605b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c605e, 0x5)   calld(0x1013c0fa, 0x76097);           /* call 0x1013c0fa */
    II(0x100c6063, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c6066, 0x4)   cmp(memd_a32(ds, eax + 0x67), 0);     /* cmp dword [eax+0x67], 0x0 */
    II(0x100c606a, 0x2)   jzd(0x100c60ad, 0x41);                /* jz 0x100c60ad */
    II(0x100c606c, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100c6073, 0x2)   jmpd(0x100c607b, 0x6);                /* jmp 0x100c607b */
l_0x100c6075:
    II(0x100c6075, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c6078, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100c607b:
    II(0x100c607b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c607e, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c6085, 0x2)   jged(0x100c60ad, 0x26);               /* jge 0x100c60ad */
    II(0x100c6087, 0x6)   mov(ebx, memd_a32(ds, 0x101c8172));   /* mov ebx, [0x101c8172] */
    II(0x100c608d, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c6090, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100c6094, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c6097, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c6099, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c609c, 0x3)   mov(eax, memd_a32(ds, eax + 0x67));   /* mov eax, [eax+0x67] */
    II(0x100c609f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c60a1, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100c60a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c60a6, 0x5)   calld(0x1013c055, 0x75faa);           /* call 0x1013c055 */
    II(0x100c60ab, 0x2)   jmpd(0x100c6075, -0x38);              /* jmp 0x100c6075 */
l_0x100c60ad:
    II(0x100c60ad, 0x5)   mov(ebx, 0x4);                        /* mov ebx, 0x4 */
    II(0x100c60b2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c60b5, 0x3)   add(edx, 0x77);                       /* add edx, 0x77 */
    II(0x100c60b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c60bb, 0x5)   calld(0x1013c055, 0x75f95);           /* call 0x1013c055 */
    II(0x100c60c0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c60c2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c60c5, 0x5)   calld(0x10088e4c, -0x3d27e);          /* call 0x10088e4c */
    II(0x100c60ca, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c60cc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c60cd, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c60ce, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c60cf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c60d0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100c60d1, 0x1)   retd();                               /* ret */
FUNC_END

