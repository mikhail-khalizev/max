FUNC_BEGIN(0x100f744f, 0xcbaa108d476b2b1e, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xf9, 0xe8, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xc2, 0xee, 0xf7, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x36, 0xf0, 0xf7, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x6c, 0xf7, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xdb, 0x38, 0x4, 0, 0x84, 0xc0, 0x74, 0x49, 0x8d, 0x45, 0xf4, 0xe8, 0xfe, 0xee, 0xf7, 0xff, 0xe8, 0x5d, 0xed, 0xf7, 0xff, 0x3b, 0x45, 0xf8, 0x75, 0x1c, 0x8d, 0x45, 0xf4, 0xe8, 0xec, 0xee, 0xf7, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd5, 0x81, 0x1c, 0x10, 0x3a, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xf4, 0xe8, 0x2, 0xef, 0xf7, 0xff, 0x89, 0x45, 0xf0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x8d, 0xea, 0xf7, 0xff, 0xeb, 0x1f, 0xeb, 0xa1, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x78, 0xea, 0xf7, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x6c, 0xea, 0xf7, 0xff, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100f744f, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100f7454, 0x5)   calld(sys_check_available_stack_size, 0x6e8f9); /* call 0x10165d52 */
    II(0x100f7459, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f745a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f745b, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f745c, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f745d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f745e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f7460, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100f7466, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f7469, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100f746c, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100f7471, 0x5)   calld(0x10076338, -0x8113e);          /* call 0x10076338 */
    II(0x100f7476, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100f7479, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100f747b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100f747d, 0x5)   calld(0x100764b8, -0x80fca);          /* call 0x100764b8 */
    II(0x100f7482, 0x2)   jmpd(0x100f748c, 0x8);                /* jmp 0x100f748c */
l_0x100f7484:
    II(0x100f7484, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f7487, 0x5)   calld(0x10076bf8, -0x80894);          /* call 0x10076bf8 */
l_0x100f748c:
    II(0x100f748c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f748e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f7491, 0x5)   calld(0x1013ad71, 0x438db);           /* call 0x1013ad71 */
    II(0x100f7496, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f7498, 0x2)   jzd(0x100f74e3, 0x49);                /* jz 0x100f74e3 */
    II(0x100f749a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f749d, 0x5)   calld(0x100763a0, -0x81102);          /* call 0x100763a0 */
    II(0x100f74a2, 0x5)   calld(0x10076204, -0x812a3);          /* call 0x10076204 */
    II(0x100f74a7, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x8));    /* cmp eax, [ebp-0x8] */
    II(0x100f74aa, 0x2)   jnzd(0x100f74c8, 0x1c);               /* jnz 0x100f74c8 */
    II(0x100f74ac, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f74af, 0x5)   calld(0x100763a0, -0x81114);          /* call 0x100763a0 */
    II(0x100f74b4, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100f74b7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f74ba, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100f74bd, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d5)); /* mov al, [eax+0x101c81d5] */
    II(0x100f74c3, 0x3)   cmp(al, memb_a32(ss, ebp - 0x4));     /* cmp al, [ebp-0x4] */
    II(0x100f74c6, 0x2)   jzd(0x100f74ca, 0x2);                 /* jz 0x100f74ca */
l_0x100f74c8:
    II(0x100f74c8, 0x2)   jmpd(0x100f74e1, 0x17);               /* jmp 0x100f74e1 */
l_0x100f74ca:
    II(0x100f74ca, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f74cd, 0x5)   calld(0x100763d4, -0x810fe);          /* call 0x100763d4 */
    II(0x100f74d2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100f74d5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f74d7, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f74da, 0x5)   calld(0x10075f6c, -0x81573);          /* call 0x10075f6c */
    II(0x100f74df, 0x2)   jmpd(0x100f7500, 0x1f);               /* jmp 0x100f7500 */
l_0x100f74e1:
    II(0x100f74e1, 0x2)   jmpd(0x100f7484, -0x5f);              /* jmp 0x100f7484 */
l_0x100f74e3:
    II(0x100f74e3, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100f74ea, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f74ec, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f74ef, 0x5)   calld(0x10075f6c, -0x81588);          /* call 0x10075f6c */
    II(0x100f74f4, 0x2)   jmpd(0x100f7500, 0xa);                /* jmp 0x100f7500 */
//  II(0x100f74f6, 0xa)   /* Недостижимый код. */
l_0x100f7500:
    II(0x100f7500, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f7503, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f7505, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f7506, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f7507, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f7508, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f7509, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f750a, 0x1)   retd();                               /* ret */
FUNC_END

