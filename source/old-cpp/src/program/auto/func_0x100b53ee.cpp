FUNC_BEGIN(0x100b53ee, 0x3de1309e1a1dd70f, 0x20, ({0x68, 0x84, 0, 0, 0, 0xe8, 0x5a, 0x9, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x60, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xe7, 0x19, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x17, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x49, 0x11, 0xfc, 0xff, 0xe8, 0x22, 0xd6, 0x9, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x17, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x33, 0x11, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0xc5, 0x3, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x8f, 0x67, 0xfd, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0x7c, 0x67, 0xfd, 0xff, 0x89, 0x45, 0xd8, 0x80, 0x65, 0xf4, 0xfe, 0x8d, 0x45, 0xe8, 0xe8, 0x78, 0x52, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x1, 0x5, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xdf, 0x10, 0xfc, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x32, 0xbb, 0x23, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x50, 0x52, 0xfd, 0xff, 0x8b, 0x4d, 0xf8, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xa, 0x6, 0, 0, 0xbb, 0xa8, 0x81, 0x1c, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0x37, 0x52, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xcb, 0x7, 0, 0, 0xeb, 0x77, 0xbb, 0x22, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x1e, 0x52, 0xfd, 0xff, 0x8b, 0x4d, 0xf8, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xd8, 0x5, 0, 0, 0xbb, 0x24, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x5, 0x52, 0xfd, 0xff, 0x8b, 0x4d, 0xf8, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xbf, 0x5, 0, 0, 0xbb, 0x25, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xec, 0x51, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xa8, 0x5, 0, 0, 0xbb, 0x84, 0x81, 0x1c, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0xd5, 0x51, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x69, 0x7, 0, 0, 0xbb, 0x9c, 0x81, 0x1c, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0xbe, 0x51, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x52, 0x7, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x25, 0x10, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x14, 0x10, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xd4, 0xe8, 0x3e, 0x15, 0xfc, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0x7a, 0x15, 0xfc, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xf3, 0xf, 0xfc, 0xff, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x6b, 0xd2, 0x33, 0x31, 0xc0, 0x8a, 0x82, 0xd4, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xba, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x18, 0x4b, 0xfd, 0xff, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xb6, 0xf, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xa5, 0xf, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0x4b, 0x51, 0xfd, 0xff, 0x8d, 0x14, 0x18, 0x31, 0xc0, 0x8a, 0x2, 0x89, 0x45, 0xc4, 0xc7, 0x45, 0xc0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x7b, 0xf, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x68, 0xf, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x45, 0xd6, 0xb9, 0x3, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xd2, 0x50, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x9d, 0xf, 0xfc, 0xff, 0xe8, 0xf0, 0x98, 0x6, 0, 0x66, 0xc7, 0x45, 0xd0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xdd, 0, 0, 0, 0x66, 0xc7, 0x45, 0xd2, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd2, 0x66, 0xff, 0x45, 0xd2, 0x8b, 0x45, 0xd2, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xb9, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xd2, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xe8, 0xe8, 0xa2, 0x50, 0xfd, 0xff, 0x8d, 0x14, 0x18, 0x31, 0xc0, 0x8a, 0x2, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x66, 0x3b, 0x45, 0xc4, 0x7c, 0x1d, 0xf, 0xbf, 0x5d, 0xd2, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xdc, 0xe8, 0x7f, 0x50, 0xfd, 0xff, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x17, 0xf, 0xbf, 0x45, 0xd0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xc8, 0xf, 0xbf, 0x55, 0xd2, 0x8b, 0, 0x1, 0xd0, 0xf6, 0, 0x8, 0x74, 0x2, 0xeb, 0x59, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x98, 0xe, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x2b, 0x45, 0xd2, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x83, 0xe, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x2b, 0x45, 0xd0, 0x98, 0xe8, 0x67, 0x8, 0xff, 0xff, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xbc, 0x66, 0x3b, 0x45, 0xc4, 0x7f, 0x9, 0x8b, 0x45, 0xb8, 0x66, 0x3b, 0x45, 0xc0, 0x7d, 0x17, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xc0, 0x8d, 0x55, 0xd0, 0x8d, 0x45, 0xd4, 0xe8, 0x20, 0x34, 0xfd, 0xff, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xc4, 0xe9, 0x30, 0xff, 0xff, 0xff, 0xe9, 0xc, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x35, 0xe, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xd4, 0x66, 0x3b, 0x42, 0x1a, 0x75, 0x1a, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x1f, 0xe, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xd6, 0x66, 0x3b, 0x42, 0x1c, 0xf, 0x84, 0x9f, 0, 0, 0, 0xb8, 0x49, 0, 0, 0, 0xe8, 0x92, 0x6, 0xb, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x3d, 0xb8, 0x4b, 0x59, 0xb, 0x10, 0x50, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xac, 0xe8, 0xd6, 0x6, 0xfc, 0xff, 0x50, 0xb8, 0x3, 0, 0, 0, 0x50, 0x31, 0xc9, 0x8b, 0x5d, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x2b, 0xe, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xb4, 0xe8, 0x71, 0x6a, 0xff, 0xff, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xa4, 0xeb, 0x6, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa4, 0x8b, 0x55, 0xa4, 0x8d, 0x45, 0xa0, 0xe8, 0x95, 0x58, 0xfd, 0xff, 0x8d, 0x45, 0xa0, 0xe8, 0xb1, 0x57, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x71, 0xf5, 0xfe, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xa0, 0xe8, 0x8f, 0x33, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xa8, 0x64, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x9e, 0x64, 0xfd, 0xff, 0xeb, 0x18, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x92, 0x64, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x88, 0x64, 0xfd, 0xff, 0xc6, 0x45, 0xf0, 0, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b53ee, 0x5)   pushd(0x84);                          /* push dword 0x84 */
    II(0x100b53f3, 0x5)   calld(sys_check_available_stack_size, 0xb095a); /* call 0x10165d52 */
    II(0x100b53f8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b53f9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b53fa, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b53fb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b53fc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b53fd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b53ff, 0x6)   sub(esp, 0x60);                       /* sub esp, 0x60 */
    II(0x100b5405, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b5408, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100b540b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x100b540e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5411, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b5414, 0x5)   calld(0x10076e00, -0x3e619);          /* call 0x10076e00 */
    II(0x100b5419, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b541b, 0x2)   jzd(0x100b5434, 0x17);                /* jz 0x100b5434 */
    II(0x100b541d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b5420, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5423, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b5426, 0x5)   calld(0x10076574, -0x3eeb7);          /* call 0x10076574 */
    II(0x100b542b, 0x5)   calld(0x10152a52, 0x9d622);           /* call 0x10152a52 */
    II(0x100b5430, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b5432, 0x2)   jnzd(0x100b5436, 0x2);                /* jnz 0x100b5436 */
l_0x100b5434:
    II(0x100b5434, 0x2)   jmpd(0x100b544d, 0x17);               /* jmp 0x100b544d */
l_0x100b5436:
    II(0x100b5436, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5439, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b543c, 0x5)   calld(0x10076574, -0x3eecd);          /* call 0x10076574 */
    II(0x100b5441, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100b5444, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b5449, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b544b, 0x2)   jgd(0x100b5452, 0x5);                 /* jg 0x100b5452 */
l_0x100b544d:
    II(0x100b544d, 0x5)   jmpd(0x100b5817, 0x3c5);              /* jmp 0x100b5817 */
l_0x100b5452:
    II(0x100b5452, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100b5456, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b5459, 0x5)   calld(0x1008bbed, -0x29871);          /* call 0x1008bbed */
    II(0x100b545e, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100b5461, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100b5465, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100b5469, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b546c, 0x5)   calld(0x1008bbed, -0x29884);          /* call 0x1008bbed */
    II(0x100b5471, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100b5474, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100b5478, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b547b, 0x5)   calld(0x1008a6f8, -0x2ad88);          /* call 0x1008a6f8 */
    II(0x100b5480, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b5482, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5485, 0x5)   calld(0x100b598b, 0x501);             /* call 0x100b598b */
    II(0x100b548a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b548d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b5490, 0x5)   calld(0x10076574, -0x3ef21);          /* call 0x10076574 */
    II(0x100b5495, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x100b5499, 0x2)   jzd(0x100b54cd, 0x32);                /* jz 0x100b54cd */
    II(0x100b549b, 0x5)   mov(ebx, 0x23);                       /* mov ebx, 0x23 */
    II(0x100b54a0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b54a3, 0x5)   calld(0x1008a6f8, -0x2adb0);          /* call 0x1008a6f8 */
    II(0x100b54a8, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x100b54ab, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b54ad, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100b54af, 0x5)   calld(0x100b5abe, 0x60a);             /* call 0x100b5abe */
    II(0x100b54b4, 0x5)   mov(ebx, 0x101c81a8);                 /* mov ebx, 0x101c81a8 */
    II(0x100b54b9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b54bc, 0x5)   calld(0x1008a6f8, -0x2adc9);          /* call 0x1008a6f8 */
    II(0x100b54c1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b54c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b54c6, 0x5)   calld(0x100b5c96, 0x7cb);             /* call 0x100b5c96 */
    II(0x100b54cb, 0x2)   jmpd(0x100b5544, 0x77);               /* jmp 0x100b5544 */
l_0x100b54cd:
    II(0x100b54cd, 0x5)   mov(ebx, 0x22);                       /* mov ebx, 0x22 */
    II(0x100b54d2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b54d5, 0x5)   calld(0x1008a6f8, -0x2ade2);          /* call 0x1008a6f8 */
    II(0x100b54da, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x100b54dd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b54df, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100b54e1, 0x5)   calld(0x100b5abe, 0x5d8);             /* call 0x100b5abe */
    II(0x100b54e6, 0x5)   mov(ebx, 0x24);                       /* mov ebx, 0x24 */
    II(0x100b54eb, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b54ee, 0x5)   calld(0x1008a6f8, -0x2adfb);          /* call 0x1008a6f8 */
    II(0x100b54f3, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x100b54f6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b54f8, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100b54fa, 0x5)   calld(0x100b5abe, 0x5bf);             /* call 0x100b5abe */
    II(0x100b54ff, 0x5)   mov(ebx, 0x25);                       /* mov ebx, 0x25 */
    II(0x100b5504, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b5507, 0x5)   calld(0x1008a6f8, -0x2ae14);          /* call 0x1008a6f8 */
    II(0x100b550c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b550e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5511, 0x5)   calld(0x100b5abe, 0x5a8);             /* call 0x100b5abe */
    II(0x100b5516, 0x5)   mov(ebx, 0x101c8184);                 /* mov ebx, 0x101c8184 */
    II(0x100b551b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b551e, 0x5)   calld(0x1008a6f8, -0x2ae2b);          /* call 0x1008a6f8 */
    II(0x100b5523, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b5525, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5528, 0x5)   calld(0x100b5c96, 0x769);             /* call 0x100b5c96 */
    II(0x100b552d, 0x5)   mov(ebx, 0x101c819c);                 /* mov ebx, 0x101c819c */
    II(0x100b5532, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b5535, 0x5)   calld(0x1008a6f8, -0x2ae42);          /* call 0x1008a6f8 */
    II(0x100b553a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b553c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b553f, 0x5)   calld(0x100b5c96, 0x752);             /* call 0x100b5c96 */
l_0x100b5544:
    II(0x100b5544, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5547, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b554a, 0x5)   calld(0x10076574, -0x3efdb);          /* call 0x10076574 */
    II(0x100b554f, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100b5552, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b5555, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5558, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b555b, 0x5)   calld(0x10076574, -0x3efec);          /* call 0x10076574 */
    II(0x100b5560, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100b5563, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b5566, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b5569, 0x5)   calld(0x10076aac, -0x3eac2);          /* call 0x10076aac */
    II(0x100b556e, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100b5571, 0x5)   calld(my_ctor_0x101b4184, -0x3ea86);  /* call 0x10076af0 */
    II(0x100b5576, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5579, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b557c, 0x5)   calld(0x10076574, -0x3f00d);          /* call 0x10076574 */
    II(0x100b5581, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100b5584, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b5587, 0x3)   imul(edx, edx, 0x33);                 /* imul edx, edx, 0x33 */
    II(0x100b558a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b558c, 0x6)   mov(al, memb_a32(ds, edx + 0x101c81d4)); /* mov al, [edx+0x101c81d4] */
    II(0x100b5592, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100b5595, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5598, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b559b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b559e, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100b55a4, 0x5)   mov(edx, 0x101c31c4);                 /* mov edx, 0x101c31c4 */
    II(0x100b55a9, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100b55ab, 0x5)   calld(0x1008a0c8, -0x2b4e8);          /* call 0x1008a0c8 */
    II(0x100b55b0, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100b55b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b55b6, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b55b9, 0x5)   calld(0x10076574, -0x3f04a);          /* call 0x10076574 */
    II(0x100b55be, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100b55c1, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b55c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b55c7, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b55ca, 0x5)   calld(0x10076574, -0x3f05b);          /* call 0x10076574 */
    II(0x100b55cf, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100b55d2, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b55d5, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b55d8, 0x5)   calld(0x1008a728, -0x2aeb5);          /* call 0x1008a728 */
    II(0x100b55dd, 0x3)   lea(edx, eax + ebx);                  /* lea edx, [eax+ebx] */
    II(0x100b55e0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b55e2, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x100b55e4, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100b55e7, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0);     /* mov dword [ebp-0x40], 0x0 */
    II(0x100b55ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b55f1, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b55f4, 0x5)   calld(0x10076574, -0x3f085);          /* call 0x10076574 */
    II(0x100b55f9, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100b55fd, 0x4)   mov(memw_a32(ss, ebp - 0x2c), ax);    /* mov [ebp-0x2c], ax */
    II(0x100b5601, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5604, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b5607, 0x5)   calld(0x10076574, -0x3f098);          /* call 0x10076574 */
    II(0x100b560c, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100b5610, 0x4)   mov(memw_a32(ss, ebp - 0x2a), ax);    /* mov [ebp-0x2a], ax */
    II(0x100b5614, 0x5)   mov(ecx, 0x3);                        /* mov ecx, 0x3 */
    II(0x100b5619, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100b561e, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b5621, 0x5)   calld(0x1008a6f8, -0x2af2e);          /* call 0x1008a6f8 */
    II(0x100b5626, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b5628, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b562b, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b562e, 0x5)   calld(0x100765d0, -0x3f063);          /* call 0x100765d0 */
    II(0x100b5633, 0x5)   calld(0x1011ef28, 0x698f0);           /* call 0x1011ef28 */
    II(0x100b5638, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0);     /* mov word [ebp-0x30], 0x0 */
    II(0x100b563e, 0x2)   jmpd(0x100b5647, 0x7);                /* jmp 0x100b5647 */
l_0x100b5640:
    II(0x100b5640, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100b5643, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
l_0x100b5647:
    II(0x100b5647, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100b564a, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100b5651, 0x6)   jged(0x100b5734, 0xdd);               /* jge dword 0x100b5734 */
    II(0x100b5657, 0x6)   mov(memw_a32(ss, ebp - 0x2e), 0);     /* mov word [ebp-0x2e], 0x0 */
    II(0x100b565d, 0x2)   jmpd(0x100b5666, 0x7);                /* jmp 0x100b5666 */
l_0x100b565f:
    II(0x100b565f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2e));   /* mov eax, [ebp-0x2e] */
    II(0x100b5662, 0x4)   inc(memw_a32(ss, ebp - 0x2e));        /* inc word [ebp-0x2e] */
l_0x100b5666:
    II(0x100b5666, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2e));   /* mov eax, [ebp-0x2e] */
    II(0x100b5669, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100b5670, 0x6)   jged(0x100b572f, 0xb9);               /* jge dword 0x100b572f */
    II(0x100b5676, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x2e)); /* movsx ebx, word [ebp-0x2e] */
    II(0x100b567a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100b567e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b5681, 0x5)   calld(0x1008a728, -0x2af5e);          /* call 0x1008a728 */
    II(0x100b5686, 0x3)   lea(edx, eax + ebx);                  /* lea edx, [eax+ebx] */
    II(0x100b5689, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b568b, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x100b568d, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x100b5690, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100b5693, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x3c));    /* cmp ax, [ebp-0x3c] */
    II(0x100b5697, 0x2)   jld(0x100b56b6, 0x1d);                /* jl 0x100b56b6 */
    II(0x100b5699, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x2e)); /* movsx ebx, word [ebp-0x2e] */
    II(0x100b569d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100b56a1, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b56a4, 0x5)   calld(0x1008a728, -0x2af81);          /* call 0x1008a728 */
    II(0x100b56a9, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100b56ab, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100b56ad, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b56b2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b56b4, 0x2)   jgd(0x100b56b8, 0x2);                 /* jg 0x100b56b8 */
l_0x100b56b6:
    II(0x100b56b6, 0x2)   jmpd(0x100b56cf, 0x17);               /* jmp 0x100b56cf */
l_0x100b56b8:
    II(0x100b56b8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100b56bc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100b56bf, 0x3)   add(eax, memd_a32(ss, ebp - 0x38));   /* add eax, [ebp-0x38] */
    II(0x100b56c2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2e)); /* movsx edx, word [ebp-0x2e] */
    II(0x100b56c6, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100b56c8, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100b56ca, 0x3)   test(memb_a32(ds, eax), 0x8);         /* test byte [eax], 0x8 */
    II(0x100b56cd, 0x2)   jzd(0x100b56d1, 0x2);                 /* jz 0x100b56d1 */
l_0x100b56cf:
    II(0x100b56cf, 0x2)   jmpd(0x100b572a, 0x59);               /* jmp 0x100b572a */
l_0x100b56d1:
    II(0x100b56d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b56d4, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b56d7, 0x5)   calld(0x10076574, -0x3f168);          /* call 0x10076574 */
    II(0x100b56dc, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100b56e0, 0x3)   sub(eax, memd_a32(ss, ebp - 0x2e));   /* sub eax, [ebp-0x2e] */
    II(0x100b56e3, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100b56e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b56e9, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b56ec, 0x5)   calld(0x10076574, -0x3f17d);          /* call 0x10076574 */
    II(0x100b56f1, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100b56f5, 0x3)   sub(eax, memd_a32(ss, ebp - 0x30));   /* sub eax, [ebp-0x30] */
    II(0x100b56f8, 0x1)   cwde();                               /* cwde */
    II(0x100b56f9, 0x5)   calld(0x100a5f65, -0xf799);           /* call 0x100a5f65 */
    II(0x100b56fe, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100b5701, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100b5704, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x3c));    /* cmp ax, [ebp-0x3c] */
    II(0x100b5708, 0x2)   jgd(0x100b5713, 0x9);                 /* jg 0x100b5713 */
    II(0x100b570a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100b570d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x40));    /* cmp ax, [ebp-0x40] */
    II(0x100b5711, 0x2)   jged(0x100b572a, 0x17);               /* jge 0x100b572a */
l_0x100b5713:
    II(0x100b5713, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100b5716, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100b5719, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100b571c, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b571f, 0x5)   calld(0x10088b44, -0x2cbe0);          /* call 0x10088b44 */
    II(0x100b5724, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100b5727, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
l_0x100b572a:
    II(0x100b572a, 0x5)   jmpd(0x100b565f, -0xd0);              /* jmp 0x100b565f */
l_0x100b572f:
    II(0x100b572f, 0x5)   jmpd(0x100b5640, -0xf4);              /* jmp 0x100b5640 */
l_0x100b5734:
    II(0x100b5734, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b5737, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b573a, 0x5)   calld(0x10076574, -0x3f1cb);          /* call 0x10076574 */
    II(0x100b573f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b5741, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100b5744, 0x4)   cmp(ax, memw_a32(ds, edx + 0x1a));    /* cmp ax, [edx+0x1a] */
    II(0x100b5748, 0x2)   jnzd(0x100b5764, 0x1a);               /* jnz 0x100b5764 */
    II(0x100b574a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b574d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b5750, 0x5)   calld(0x10076574, -0x3f1e1);          /* call 0x10076574 */
    II(0x100b5755, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b5757, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2a));   /* mov eax, [ebp-0x2a] */
    II(0x100b575a, 0x4)   cmp(ax, memw_a32(ds, edx + 0x1c));    /* cmp ax, [edx+0x1c] */
    II(0x100b575e, 0x6)   jzd(0x100b5803, 0x9f);                /* jz dword 0x100b5803 */
l_0x100b5764:
    II(0x100b5764, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100b5769, 0x5)   calld(sys_new, 0xb0692);              /* call 0x10165e00 */
    II(0x100b576e, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x100b5771, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100b5774, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100b5777, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x100b577b, 0x2)   jzd(0x100b57ba, 0x3d);                /* jz 0x100b57ba */
    II(0x100b577d, 0x5)   mov(eax, 0x100b594b);                 /* mov eax, 0x100b594b */
    II(0x100b5782, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b5783, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100b5786, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100b5789, 0x5)   calld(0x10075e64, -0x3f92a);          /* call 0x10075e64 */
    II(0x100b578e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b578f, 0x5)   mov(eax, 0x3);                        /* mov eax, 0x3 */
    II(0x100b5794, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b5795, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100b5797, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100b579a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b579d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b57a0, 0x5)   calld(0x100765d0, -0x3f1d5);          /* call 0x100765d0 */
    II(0x100b57a5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b57a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100b57aa, 0x5)   calld(0x100ac220, -0x958f);           /* call 0x100ac220 */
    II(0x100b57af, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
//    II(0x100b57b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100b57b5, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100b57b8, 0x2)   jmpd(0x100b57c0, 0x6);                /* jmp 0x100b57c0 */
l_0x100b57ba:
    II(0x100b57ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100b57bd, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
l_0x100b57c0:
    II(0x100b57c0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x5c));   /* mov edx, [ebp-0x5c] */
    II(0x100b57c3, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100b57c6, 0x5)   calld(0x1008b060, -0x2a76b);          /* call 0x1008b060 */
    II(0x100b57cb, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100b57ce, 0x5)   calld(0x1008af84, -0x2a84f);          /* call 0x1008af84 */
    II(0x100b57d3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b57d5, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b57da, 0x5)   calld(0x100a4d50, -0x10a8f);          /* call 0x100a4d50 */
    II(0x100b57df, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100b57e3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b57e5, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100b57e8, 0x5)   calld(0x10088b7c, -0x2cc71);          /* call 0x10088b7c */
    II(0x100b57ed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b57ef, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b57f2, 0x5)   calld(0x1008bc9f, -0x29b58);          /* call 0x1008bc9f */
    II(0x100b57f7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b57f9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b57fc, 0x5)   calld(0x1008bc9f, -0x29b62);          /* call 0x1008bc9f */
    II(0x100b5801, 0x2)   jmpd(0x100b581b, 0x18);               /* jmp 0x100b581b */
l_0x100b5803:
    II(0x100b5803, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b5805, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b5808, 0x5)   calld(0x1008bc9f, -0x29b6e);          /* call 0x1008bc9f */
    II(0x100b580d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b580f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b5812, 0x5)   calld(0x1008bc9f, -0x29b78);          /* call 0x1008bc9f */
l_0x100b5817:
    II(0x100b5817, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x100b581b:
    II(0x100b581b, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x100b581e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b5820, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b5821, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b5822, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b5823, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b5824, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b5825, 0x1)   retd();                               /* ret */
FUNC_END

