FUNC_BEGIN(0x100bad49, 0x6f06416d4ac3fe17, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0xff, 0xaf, 0xa, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xfa, 0xf9, 0xfc, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf6, 0, 0xfd, 0xff, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x3, 0x7d, 0x18, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x37, 0x1, 0xd8, 0xe8, 0x3c, 0x2, 0xfd, 0xff, 0xeb, 0xd9, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x44, 0xbe, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb3, 0xff, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x5c, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xf6, 0xff, 0xfc, 0xff, 0xe8, 0xbd, 0xff, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x10, 0x75, 0x1b, 0x8d, 0x45, 0xec, 0xe8, 0xdf, 0xff, 0xfc, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x20, 0x3c, 0x2, 0x74, 0x5, 0xe9, 0x20, 0x1, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xb8, 0xff, 0xfc, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe4, 0xff, 0x52, 0x14, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x3, 0x7d, 0x1a, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x37, 0x1, 0xd8, 0xe8, 0x34, 0xff, 0x7, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x22, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x37, 0x1, 0xd8, 0xe8, 0xcd, 0, 0xfd, 0xff, 0xe8, 0x64, 0x7d, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xeb, 0xaf, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x3, 0x75, 0x1c, 0x8d, 0x45, 0xec, 0xe8, 0x44, 0xff, 0xfc, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe0, 0xff, 0x52, 0x48, 0xe9, 0x89, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3f, 0xe8, 0xd0, 0xfe, 0x7, 0, 0x84, 0xc0, 0x74, 0x1a, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3f, 0xe8, 0x78, 0, 0xfd, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xdc, 0xff, 0x52, 0x48, 0xc7, 0x45, 0xf4, 0x2, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x4d, 0xf4, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xf8, 0x7e, 0x28, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x83, 0xe8, 0x4, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x37, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x37, 0x1, 0xd8, 0xe8, 0x33, 0x3, 0xff, 0xff, 0xeb, 0xc9, 0x8d, 0x45, 0xec, 0xe8, 0xf1, 0xfe, 0xfc, 0xff, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x37, 0x1, 0xd8, 0xe8, 0xc7, 0, 0xfd, 0xff, 0xe9, 0x8a, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x90, 0xdc, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100bad49, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x100bad4e, 0x5)   calld(sys_check_available_stack_size, 0xaafff); /* call 0x10165d52 */
    II(0x100bad53, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100bad54, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100bad55, 0x1)   pushd(edx);                           /* push edx */
    II(0x100bad56, 0x1)   pushd(esi);                           /* push esi */
    II(0x100bad57, 0x1)   pushd(edi);                           /* push edi */
    II(0x100bad58, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100bad59, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100bad5b, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100bad61, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100bad64, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bad69, 0x5)   calld(0x1008a768, -0x30606);          /* call 0x1008a768 */
    II(0x100bad6e, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100bad71, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bad73, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bad75, 0x5)   calld(0x1008ae70, -0x2ff0a);          /* call 0x1008ae70 */
    II(0x100bad7a, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100bad81, 0x2)   jmpd(0x100bad89, 0x6);                /* jmp 0x100bad89 */
l_0x100bad83:
    II(0x100bad83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bad86, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100bad89:
    II(0x100bad89, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100bad8d, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100bad90, 0x2)   jged(0x100badaa, 0x18);               /* jge 0x100badaa */
    II(0x100bad92, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bad94, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100bad98, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bad9b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100bad9e, 0x3)   add(ebx, 0x37);                       /* add ebx, 0x37 */
    II(0x100bada1, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bada3, 0x5)   calld(0x1008afe4, -0x2fdc4);          /* call 0x1008afe4 */
    II(0x100bada8, 0x2)   jmpd(0x100bad83, -0x27);              /* jmp 0x100bad83 */
l_0x100badaa:
    II(0x100badaa, 0x2)   jmpd(0x100badb4, 0x8);                /* jmp 0x100badb4 */
l_0x100badac:
    II(0x100badac, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100badaf, 0x5)   calld(0x10076bf8, -0x441bc);          /* call 0x10076bf8 */
l_0x100badb4:
    II(0x100badb4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100badb6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100badb9, 0x5)   calld(0x1013ad71, 0x7ffb3);           /* call 0x1013ad71 */
    II(0x100badbe, 0x2)   test(al, al);                         /* test al, al */
    II(0x100badc0, 0x6)   jzd(0x100baf22, 0x15c);               /* jz dword 0x100baf22 */
    II(0x100badc6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100badc9, 0x5)   calld(0x1008adc4, -0x3000a);          /* call 0x1008adc4 */
    II(0x100badce, 0x5)   calld(0x1008ad90, -0x30043);          /* call 0x1008ad90 */
    II(0x100badd3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100badd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100badd8, 0x3)   cmp(dx, memw_a32(ds, eax));           /* cmp dx, [eax] */
    II(0x100baddb, 0x2)   jnzd(0x100badf8, 0x1b);               /* jnz 0x100badf8 */
    II(0x100baddd, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bade0, 0x5)   calld(0x1008adc4, -0x30021);          /* call 0x1008adc4 */
    II(0x100bade5, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100bade8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100badeb, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100badee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100badf1, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100badf4, 0x2)   cmp(al, 0x2);                         /* cmp al, 0x2 */
    II(0x100badf6, 0x2)   jzd(0x100badfd, 0x5);                 /* jz 0x100badfd */
l_0x100badf8:
    II(0x100badf8, 0x5)   jmpd(0x100baf1d, 0x120);              /* jmp 0x100baf1d */
l_0x100badfd:
    II(0x100badfd, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100bae04, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bae07, 0x5)   calld(0x1008adc4, -0x30048);          /* call 0x1008adc4 */
    II(0x100bae0c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100bae0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bae12, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100bae15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bae18, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100bae1b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x100bae1e:
    II(0x100bae1e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100bae22, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100bae25, 0x2)   jged(0x100bae41, 0x1a);               /* jge 0x100bae41 */
    II(0x100bae27, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bae29, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100bae2d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bae30, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100bae33, 0x3)   add(ebx, 0x37);                       /* add ebx, 0x37 */
    II(0x100bae36, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bae38, 0x5)   calld(0x1013ad71, 0x7ff34);           /* call 0x1013ad71 */
    II(0x100bae3d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bae3f, 0x2)   jnzd(0x100bae43, 0x2);                /* jnz 0x100bae43 */
l_0x100bae41:
    II(0x100bae41, 0x2)   jmpd(0x100bae65, 0x22);               /* jmp 0x100bae65 */
l_0x100bae43:
    II(0x100bae43, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100bae47, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100bae4b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bae4e, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100bae51, 0x3)   add(ebx, 0x37);                       /* add ebx, 0x37 */
    II(0x100bae54, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bae56, 0x5)   calld(0x1008af28, -0x2ff33);          /* call 0x1008af28 */
    II(0x100bae5b, 0x5)   calld(0x100a2bc4, -0x1829c);          /* call 0x100a2bc4 */
    II(0x100bae60, 0x1)   cwde();                               /* cwde */
    II(0x100bae61, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bae63, 0x2)   jled(0x100bae67, 0x2);                /* jle 0x100bae67 */
l_0x100bae65:
    II(0x100bae65, 0x2)   jmpd(0x100bae6f, 0x8);                /* jmp 0x100bae6f */
l_0x100bae67:
    II(0x100bae67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bae6a, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
    II(0x100bae6d, 0x2)   jmpd(0x100bae1e, -0x51);              /* jmp 0x100bae1e */
l_0x100bae6f:
    II(0x100bae6f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100bae73, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100bae76, 0x2)   jnzd(0x100bae94, 0x1c);               /* jnz 0x100bae94 */
    II(0x100bae78, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bae7b, 0x5)   calld(0x1008adc4, -0x300bc);          /* call 0x1008adc4 */
    II(0x100bae80, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100bae83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100bae86, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100bae89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100bae8c, 0x3)   calld_abs(memd_a32(ds, edx + 0x48));  /* call dword near [edx+0x48] */
    II(0x100bae8f, 0x5)   jmpd(0x100baf1d, 0x89);               /* jmp 0x100baf1d */
l_0x100bae94:
    II(0x100bae94, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bae96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bae99, 0x3)   add(eax, 0x3f);                       /* add eax, 0x3f */
    II(0x100bae9c, 0x5)   calld(0x1013ad71, 0x7fed0);           /* call 0x1013ad71 */
    II(0x100baea1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100baea3, 0x2)   jzd(0x100baebf, 0x1a);                /* jz 0x100baebf */
    II(0x100baea5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100baea8, 0x3)   add(eax, 0x3f);                       /* add eax, 0x3f */
    II(0x100baeab, 0x5)   calld(0x1008af28, -0x2ff88);          /* call 0x1008af28 */
    II(0x100baeb0, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100baeb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100baeb6, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100baeb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100baebc, 0x3)   calld_abs(memd_a32(ds, edx + 0x48));  /* call dword near [edx+0x48] */
l_0x100baebf:
    II(0x100baebf, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2);    /* mov dword [ebp-0xc], 0x2 */
    II(0x100baec6, 0x2)   jmpd(0x100baece, 0x6);                /* jmp 0x100baece */
l_0x100baec8:
    II(0x100baec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100baecb, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
l_0x100baece:
    II(0x100baece, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100baed1, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100baed5, 0x2)   jled(0x100baeff, 0x28);               /* jle 0x100baeff */
    II(0x100baed7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100baedb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100baede, 0x3)   sub(eax, 0x4);                        /* sub eax, 0x4 */
    II(0x100baee1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100baee4, 0x3)   add(edx, 0x37);                       /* add edx, 0x37 */
    II(0x100baee7, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100baee9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100baeed, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100baef0, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100baef3, 0x3)   add(ebx, 0x37);                       /* add ebx, 0x37 */
    II(0x100baef6, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100baef8, 0x5)   calld(0x100ab230, -0xfccd);           /* call 0x100ab230 */
    II(0x100baefd, 0x2)   jmpd(0x100baec8, -0x37);              /* jmp 0x100baec8 */
l_0x100baeff:
    II(0x100baeff, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100baf02, 0x5)   calld(0x1008adf8, -0x3010f);          /* call 0x1008adf8 */
    II(0x100baf07, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100baf09, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100baf0d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100baf10, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100baf13, 0x3)   add(ebx, 0x37);                       /* add ebx, 0x37 */
    II(0x100baf16, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100baf18, 0x5)   calld(0x1008afe4, -0x2ff39);          /* call 0x1008afe4 */
l_0x100baf1d:
    II(0x100baf1d, 0x5)   jmpd(0x100badac, -0x176);             /* jmp 0x100badac */
l_0x100baf22:
    II(0x100baf22, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100baf24, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100baf27, 0x5)   calld(0x10088bbc, -0x32370);          /* call 0x10088bbc */
    II(0x100baf2c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100baf2e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100baf2f, 0x1)   popd(edi);                            /* pop edi */
    II(0x100baf30, 0x1)   popd(esi);                            /* pop esi */
    II(0x100baf31, 0x1)   popd(edx);                            /* pop edx */
    II(0x100baf32, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100baf33, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100baf34, 0x1)   retd();                               /* ret */
FUNC_END

