FUNC_BEGIN(0x100d77e8, 0x8caa30aca35e5acb, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x60, 0xe5, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf8, 0x3b, 0x42, 0x10, 0x75, 0x10, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x50, 0x2b, 0x7d, 0x2, 0xeb, 0x9, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x8e, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf8, 0x3b, 0x42, 0x14, 0x75, 0x10, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x50, 0x2d, 0x7e, 0x2, 0xeb, 0x9, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x68, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf8, 0x3b, 0x42, 0x18, 0xf, 0x85, 0x4b, 0x1, 0, 0, 0x8d, 0x5d, 0xf0, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x20, 0xe8, 0x21, 0xf2, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x42, 0x2, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x26, 0, 0x74, 0x69, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xe8, 0x27, 0xd6, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xe8, 0x81, 0xd6, 0xff, 0xff, 0x98, 0x1, 0xd0, 0x2b, 0x45, 0xf0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xe8, 0x6d, 0xd6, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xaf, 0x55, 0xf0, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xe8, 0x4c, 0xd6, 0xff, 0xff, 0xf, 0xbf, 0xd8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xe4, 0xeb, 0x54, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xe8, 0xf2, 0xd5, 0xff, 0xff, 0x98, 0x29, 0x45, 0xec, 0x8b, 0x55, 0xf8, 0x8b, 0x42, 0x6, 0xe8, 0x4b, 0xd6, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xaf, 0x55, 0xec, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xe8, 0x2a, 0xd6, 0xff, 0xff, 0xf, 0xbf, 0xd8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xe4, 0x8b, 0x55, 0xf8, 0x8b, 0x12, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xe4, 0xe8, 0x24, 0xf5, 0xf9, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x55, 0xf8, 0xf, 0xbf, 0x12, 0xf, 0xbf, 0x45, 0xe4, 0xe8, 0x1a, 0x1e, 0xfb, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x2b, 0x7e, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x2b, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x2d, 0x7d, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x2d, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0x8b, 0x45, 0xf8, 0xe8, 0x8c, 0xfa, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0xe, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x5, 0xfb, 0xff, 0xff, 0x88, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d77e8, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100d77ed, 0x5)   calld(sys_check_available_stack_size, 0x8e560); /* call 0x10165d52 */
    II(0x100d77f2, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d77f3, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d77f4, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d77f5, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d77f6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d77f7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d77f9, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100d77ff, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d7802, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100d7805, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d7808, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d780b, 0x3)   cmp(eax, memd_a32(ds, edx + 0x10));   /* cmp eax, [edx+0x10] */
    II(0x100d780e, 0x2)   jnzd(0x100d7820, 0x10);               /* jnz 0x100d7820 */
    II(0x100d7810, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7813, 0x4)   mov(dx, memw_a32(ds, eax + 0x4));     /* mov dx, [eax+0x4] */
//    II(0x100d7817, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d781a, 0x4)   cmp(dx, memw_a32(ds, eax + 0x2b));    /* cmp dx, [eax+0x2b] */
    II(0x100d781e, 0x2)   jged(0x100d7822, 0x2);                /* jge 0x100d7822 */
l_0x100d7820:
    II(0x100d7820, 0x2)   jmpd(0x100d782b, 0x9);                /* jmp 0x100d782b */
l_0x100d7822:
    II(0x100d7822, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d7826, 0x5)   jmpd(0x100d79b9, 0x18e);              /* jmp 0x100d79b9 */
l_0x100d782b:
    II(0x100d782b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d782e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d7831, 0x3)   cmp(eax, memd_a32(ds, edx + 0x14));   /* cmp eax, [edx+0x14] */
    II(0x100d7834, 0x2)   jnzd(0x100d7846, 0x10);               /* jnz 0x100d7846 */
    II(0x100d7836, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7839, 0x4)   mov(dx, memw_a32(ds, eax + 0x4));     /* mov dx, [eax+0x4] */
//    II(0x100d783d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7840, 0x4)   cmp(dx, memw_a32(ds, eax + 0x2d));    /* cmp dx, [eax+0x2d] */
    II(0x100d7844, 0x2)   jled(0x100d7848, 0x2);                /* jle 0x100d7848 */
l_0x100d7846:
    II(0x100d7846, 0x2)   jmpd(0x100d7851, 0x9);                /* jmp 0x100d7851 */
l_0x100d7848:
    II(0x100d7848, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d784c, 0x5)   jmpd(0x100d79b9, 0x168);              /* jmp 0x100d79b9 */
l_0x100d7851:
    II(0x100d7851, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d7854, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d7857, 0x3)   cmp(eax, memd_a32(ds, edx + 0x18));   /* cmp eax, [edx+0x18] */
    II(0x100d785a, 0x6)   jnzd(0x100d79ab, 0x14b);              /* jnz dword 0x100d79ab */
    II(0x100d7860, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100d7863, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100d7866, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7869, 0x3)   mov(eax, memd_a32(ds, eax + 0x20));   /* mov eax, [eax+0x20] */
    II(0x100d786c, 0x5)   calld(0x100d6a92, -0xddf);            /* call 0x100d6a92 */
    II(0x100d7871, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7874, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100d7877, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d787a, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x100d787e, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100d7881, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7884, 0x4)   cmp(memb_a32(ds, eax + 0x26), 0);     /* cmp byte [eax+0x26], 0x0 */
    II(0x100d7888, 0x2)   jzd(0x100d78f3, 0x69);                /* jz 0x100d78f3 */
    II(0x100d788a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d788d, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d7890, 0x5)   calld(0x100d4ebc, -0x29d9);           /* call 0x100d4ebc */
    II(0x100d7895, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100d7898, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d789b, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d789e, 0x5)   calld(0x100d4f24, -0x297f);           /* call 0x100d4f24 */
    II(0x100d78a3, 0x1)   cwde();                               /* cwde */
    II(0x100d78a4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d78a6, 0x3)   sub(eax, memd_a32(ss, ebp - 0x10));   /* sub eax, [ebp-0x10] */
    II(0x100d78a9, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d78ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d78af, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d78b2, 0x5)   calld(0x100d4f24, -0x2993);           /* call 0x100d4f24 */
    II(0x100d78b7, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100d78ba, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100d78bc, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100d78bf, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100d78c1, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100d78c3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100d78c7, 0x4)   imul(edx, memd_a32(ss, ebp - 0x10));  /* imul edx, [ebp-0x10] */
    II(0x100d78cb, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d78cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d78d0, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d78d3, 0x5)   calld(0x100d4f24, -0x29b4);           /* call 0x100d4f24 */
    II(0x100d78d8, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100d78db, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100d78dd, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100d78e0, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100d78e2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d78e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d78e7, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100d78e9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d78ec, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d78ee, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d78f1, 0x2)   jmpd(0x100d7947, 0x54);               /* jmp 0x100d7947 */
l_0x100d78f3:
    II(0x100d78f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d78f6, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d78f9, 0x5)   calld(0x100d4ef0, -0x2a0e);           /* call 0x100d4ef0 */
    II(0x100d78fe, 0x1)   cwde();                               /* cwde */
    II(0x100d78ff, 0x3)   sub(memd_a32(ss, ebp - 0x14), eax);   /* sub [ebp-0x14], eax */
    II(0x100d7902, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d7905, 0x3)   mov(eax, memd_a32(ds, edx + 0x6));    /* mov eax, [edx+0x6] */
    II(0x100d7908, 0x5)   calld(0x100d4f58, -0x29b5);           /* call 0x100d4f58 */
    II(0x100d790d, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100d7910, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100d7912, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100d7915, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100d7917, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100d7919, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100d791d, 0x4)   imul(edx, memd_a32(ss, ebp - 0x14));  /* imul edx, [ebp-0x14] */
    II(0x100d7921, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d7923, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7926, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d7929, 0x5)   calld(0x100d4f58, -0x29d6);           /* call 0x100d4f58 */
    II(0x100d792e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100d7931, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100d7933, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100d7936, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100d7938, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d793a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d793d, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100d793f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d7942, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d7944, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x100d7947:
    II(0x100d7947, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d794a, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100d794c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d794f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100d7953, 0x5)   calld(0x10076e7c, -0x60adc);          /* call 0x10076e7c */
    II(0x100d7958, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d795b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d795e, 0x3)   movsx(edx, memw_a32(ds, edx));        /* movsx edx, word [edx] */
    II(0x100d7961, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100d7965, 0x5)   calld(my_min, -0x4e1e6);              /* call 0x10089784 */
    II(0x100d796a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100d796d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d7970, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d7973, 0x4)   cmp(ax, memw_a32(ds, edx + 0x2b));    /* cmp ax, [edx+0x2b] */
    II(0x100d7977, 0x2)   jled(0x100d7983, 0xa);                /* jle 0x100d7983 */
    II(0x100d7979, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d797c, 0x4)   mov(ax, memw_a32(ds, eax + 0x2b));    /* mov ax, [eax+0x2b] */
    II(0x100d7980, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x100d7983:
    II(0x100d7983, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d7986, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d7989, 0x4)   cmp(ax, memw_a32(ds, edx + 0x2d));    /* cmp ax, [edx+0x2d] */
    II(0x100d798d, 0x2)   jged(0x100d7999, 0xa);                /* jge 0x100d7999 */
    II(0x100d798f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7992, 0x4)   mov(ax, memw_a32(ds, eax + 0x2d));    /* mov ax, [eax+0x2d] */
    II(0x100d7996, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x100d7999:
    II(0x100d7999, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100d799d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d79a0, 0x5)   calld(0x100d7431, -0x574);            /* call 0x100d7431 */
    II(0x100d79a5, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d79a9, 0x2)   jmpd(0x100d79b9, 0xe);                /* jmp 0x100d79b9 */
l_0x100d79ab:
    II(0x100d79ab, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d79ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d79b1, 0x5)   calld(0x100d74bb, -0x4fb);            /* call 0x100d74bb */
    II(0x100d79b6, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
l_0x100d79b9:
    II(0x100d79b9, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100d79bc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d79be, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d79bf, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d79c0, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d79c1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d79c2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d79c3, 0x1)   retd();                               /* ret */
FUNC_END

