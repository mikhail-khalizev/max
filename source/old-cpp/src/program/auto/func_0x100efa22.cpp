FUNC_BEGIN(0x100efa22, 0xbad627e3841208a3, 0x20, ({0x56, 0x57, 0xf, 0xb7, 0x5, 0x52, 0x36, 0x1c, 0x10, 0xf7, 0x25, 0x4c, 0x36, 0x1c, 0x10, 0xeb, 0xb, 0xa1, 0xd0, 0x86, 0x1b, 0x10, 0x3, 0x5, 0x4c, 0x36, 0x1c, 0x10, 0xa3, 0xd0, 0x86, 0x1b, 0x10, 0xc1, 0xe8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x35, 0x34, 0x36, 0x1c, 0x10, 0x1, 0xc6, 0x8b, 0x36, 0x3, 0x35, 0x3c, 0x36, 0x1c, 0x10, 0x8b, 0x3d, 0x38, 0x36, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xd4, 0x86, 0x1b, 0x10, 0, 0, 0x66, 0xc7, 0x5, 0xd6, 0x86, 0x1b, 0x10, 0, 0, 0x66, 0xa1, 0x50, 0x36, 0x1c, 0x10, 0x66, 0xa3, 0xd8, 0x86, 0x1b, 0x10, 0x66, 0xa1, 0x54, 0x36, 0x1c, 0x10, 0x66, 0xa3, 0xda, 0x86, 0x1b, 0x10, 0xf, 0xb7, 0x6, 0x3c, 0xff, 0xf, 0x84, 0x9, 0x1, 0, 0, 0x66, 0xf, 0xb6, 0xdc, 0x30, 0xe4, 0x46, 0x46, 0x66, 0x1, 0x5, 0xd4, 0x86, 0x1b, 0x10, 0x74, 0x54, 0x66, 0xa1, 0xd4, 0x86, 0x1b, 0x10, 0xc1, 0xe0, 0x10, 0x99, 0xf7, 0x35, 0x48, 0x36, 0x1c, 0x10, 0x66, 0x40, 0x66, 0x2b, 0x5, 0xd6, 0x86, 0x1b, 0x10, 0x66, 0x1, 0x5, 0xd6, 0x86, 0x1b, 0x10, 0x66, 0x83, 0x3d, 0xd8, 0x86, 0x1b, 0x10, 0, 0x74, 0x1b, 0x66, 0x29, 0x5, 0xd8, 0x86, 0x1b, 0x10, 0x7d, 0x21, 0x66, 0xa1, 0xd8, 0x86, 0x1b, 0x10, 0x66, 0xf7, 0xd8, 0x66, 0xc7, 0x5, 0xd8, 0x86, 0x1b, 0x10, 0, 0, 0x66, 0x29, 0x5, 0xda, 0x86, 0x1b, 0x10, 0xf, 0x8e, 0xa6, 0, 0, 0, 0x1, 0xc7, 0x66, 0x1, 0x1d, 0xd4, 0x86, 0x1b, 0x10, 0xf, 0xb7, 0x5, 0xd4, 0x86, 0x1b, 0x10, 0xc1, 0xe0, 0x10, 0x99, 0xf7, 0x35, 0x48, 0x36, 0x1c, 0x10, 0x66, 0x40, 0x66, 0x2b, 0x5, 0xd6, 0x86, 0x1b, 0x10, 0x66, 0x1, 0x5, 0xd6, 0x86, 0x1b, 0x10, 0x66, 0x83, 0x3d, 0xd8, 0x86, 0x1b, 0x10, 0, 0x74, 0x1f, 0x66, 0x29, 0x5, 0xd8, 0x86, 0x1b, 0x10, 0xf, 0x8d, 0x51, 0xff, 0xff, 0xff, 0x66, 0xa1, 0xd8, 0x86, 0x1b, 0x10, 0x66, 0xf7, 0xd8, 0x66, 0xc7, 0x5, 0xd8, 0x86, 0x1b, 0x10, 0, 0, 0x66, 0x29, 0x5, 0xda, 0x86, 0x1b, 0x10, 0x7d, 0x10, 0x66, 0x3, 0x5, 0xda, 0x86, 0x1b, 0x10, 0x66, 0xc7, 0x5, 0xda, 0x86, 0x1b, 0x10, 0, 0, 0x89, 0xc1, 0x67, 0xe3, 0x30, 0xa1, 0x5c, 0x94, 0x1c, 0x10, 0x5, 0, 0x5, 0, 0, 0x3, 0x3d, 0x74, 0x94, 0x1c, 0x10, 0x88, 0xcb, 0x66, 0xd1, 0xe9, 0x66, 0x83, 0xd1, 0, 0xf6, 0xc3, 0x1, 0x75, 0x5, 0x8a, 0x7, 0x8a, 0, 0xaa, 0x8a, 0x7, 0x8a, 0, 0xaa, 0xe2, 0xf4, 0x2b, 0x3d, 0x74, 0x94, 0x1c, 0x10, 0xe9, 0xec, 0xfe, 0xff, 0xff, 0xf, 0xb7, 0x5, 0x5c, 0x7f, 0x1b, 0x10, 0x1, 0x5, 0x38, 0x36, 0x1c, 0x10, 0x66, 0xff, 0xd, 0x56, 0x36, 0x1c, 0x10, 0xf, 0x85, 0x7c, 0xfe, 0xff, 0xff, 0x5f, 0x5e, 0xc3}))
    II(0x100efa22, 0x1)   pushd(esi);                           /* push esi */
    II(0x100efa23, 0x1)   pushd(edi);                           /* push edi */
    II(0x100efa24, 0x7)   movzx(eax, memw_a32(ds, 0x101c3652)); /* movzx eax, word [0x101c3652] */
    II(0x100efa2b, 0x6)   mul(memd_a32(ds, 0x101c364c));        /* mul dword [0x101c364c] */
    II(0x100efa31, 0x2)   jmpd(0x100efa3e, 0xb);                /* jmp 0x100efa3e */
l_0x100efa33:
    II(0x100efa33, 0x5)   mov(eax, memd_a32(ds, 0x101b86d0));   /* mov eax, [0x101b86d0] */
    II(0x100efa38, 0x6)   add(eax, memd_a32(ds, 0x101c364c));   /* add eax, [0x101c364c] */
l_0x100efa3e:
    II(0x100efa3e, 0x5)   mov(memd_a32(ds, 0x101b86d0), eax);   /* mov [0x101b86d0], eax */
    II(0x100efa43, 0x3)   shr(eax, 0x10);                       /* shr eax, 0x10 */
    II(0x100efa46, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100efa49, 0x6)   mov(esi, memd_a32(ds, 0x101c3634));   /* mov esi, [0x101c3634] */
    II(0x100efa4f, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100efa51, 0x2)   mov(esi, memd_a32(ds, esi));          /* mov esi, [esi] */
    II(0x100efa53, 0x6)   add(esi, memd_a32(ds, 0x101c363c));   /* add esi, [0x101c363c] */
    II(0x100efa59, 0x6)   mov(edi, memd_a32(ds, 0x101c3638));   /* mov edi, [0x101c3638] */
    II(0x100efa5f, 0x9)   mov(memw_a32(ds, 0x101b86d4), 0);     /* mov word [0x101b86d4], 0x0 */
    II(0x100efa68, 0x9)   mov(memw_a32(ds, 0x101b86d6), 0);     /* mov word [0x101b86d6], 0x0 */
    II(0x100efa71, 0x6)   mov(ax, memw_a32(ds, 0x101c3650));    /* mov ax, [0x101c3650] */
    II(0x100efa77, 0x6)   mov(memw_a32(ds, 0x101b86d8), ax);    /* mov [0x101b86d8], ax */
    II(0x100efa7d, 0x6)   mov(ax, memw_a32(ds, 0x101c3654));    /* mov ax, [0x101c3654] */
    II(0x100efa83, 0x6)   mov(memw_a32(ds, 0x101b86da), ax);    /* mov [0x101b86da], ax */
l_0x100efa89:
    II(0x100efa89, 0x3)   movzx(eax, memw_a32(ds, esi));        /* movzx eax, word [esi] */
    II(0x100efa8c, 0x2)   cmp(al, -0x1 /* 0xff */);             /* cmp al, 0xff */
    II(0x100efa8e, 0x6)   jzd(0x100efb9d, 0x109);               /* jz dword 0x100efb9d */
    II(0x100efa94, 0x4)   movzx(bx, ah);                        /* movzx bx, ah */
    II(0x100efa98, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100efa9a, 0x1)   inc(esi);                             /* inc esi */
    II(0x100efa9b, 0x1)   inc(esi);                             /* inc esi */
    II(0x100efa9c, 0x7)   add(memw_a32(ds, 0x101b86d4), ax);    /* add [0x101b86d4], ax */
    II(0x100efaa3, 0x2)   jzd(0x100efaf9, 0x54);                /* jz 0x100efaf9 */
    II(0x100efaa5, 0x6)   mov(ax, memw_a32(ds, 0x101b86d4));    /* mov ax, [0x101b86d4] */
    II(0x100efaab, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x100efaae, 0x1)   cdq();                                /* cdq */
    II(0x100efaaf, 0x6)   div(memd_a32(ds, 0x101c3648));        /* div dword [0x101c3648] */
    II(0x100efab5, 0x2)   inc(ax);                              /* inc ax */
    II(0x100efab7, 0x7)   sub(ax, memw_a32(ds, 0x101b86d6));    /* sub ax, [0x101b86d6] */
    II(0x100efabe, 0x7)   add(memw_a32(ds, 0x101b86d6), ax);    /* add [0x101b86d6], ax */
    II(0x100efac5, 0x8)   cmp(memw_a32(ds, 0x101b86d8), 0);     /* cmp word [0x101b86d8], 0x0 */
    II(0x100efacd, 0x2)   jzd(0x100efaea, 0x1b);                /* jz 0x100efaea */
    II(0x100efacf, 0x7)   sub(memw_a32(ds, 0x101b86d8), ax);    /* sub [0x101b86d8], ax */
    II(0x100efad6, 0x2)   jged(0x100efaf9, 0x21);               /* jge 0x100efaf9 */
    II(0x100efad8, 0x6)   mov(ax, memw_a32(ds, 0x101b86d8));    /* mov ax, [0x101b86d8] */
    II(0x100efade, 0x3)   neg(ax);                              /* neg ax */
    II(0x100efae1, 0x9)   mov(memw_a32(ds, 0x101b86d8), 0);     /* mov word [0x101b86d8], 0x0 */
l_0x100efaea:
    II(0x100efaea, 0x7)   sub(memw_a32(ds, 0x101b86da), ax);    /* sub [0x101b86da], ax */
    II(0x100efaf1, 0x6)   jled(0x100efb9d, 0xa6);               /* jle dword 0x100efb9d */
    II(0x100efaf7, 0x2)   add(edi, eax);                        /* add edi, eax */
l_0x100efaf9:
    II(0x100efaf9, 0x7)   add(memw_a32(ds, 0x101b86d4), bx);    /* add [0x101b86d4], bx */
    II(0x100efb00, 0x7)   movzx(eax, memw_a32(ds, 0x101b86d4)); /* movzx eax, word [0x101b86d4] */
    II(0x100efb07, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x100efb0a, 0x1)   cdq();                                /* cdq */
    II(0x100efb0b, 0x6)   div(memd_a32(ds, 0x101c3648));        /* div dword [0x101c3648] */
    II(0x100efb11, 0x2)   inc(ax);                              /* inc ax */
    II(0x100efb13, 0x7)   sub(ax, memw_a32(ds, 0x101b86d6));    /* sub ax, [0x101b86d6] */
    II(0x100efb1a, 0x7)   add(memw_a32(ds, 0x101b86d6), ax);    /* add [0x101b86d6], ax */
    II(0x100efb21, 0x8)   cmp(memw_a32(ds, 0x101b86d8), 0);     /* cmp word [0x101b86d8], 0x0 */
    II(0x100efb29, 0x2)   jzd(0x100efb4a, 0x1f);                /* jz 0x100efb4a */
    II(0x100efb2b, 0x7)   sub(memw_a32(ds, 0x101b86d8), ax);    /* sub [0x101b86d8], ax */
    II(0x100efb32, 0x6)   jged(0x100efa89, -0xaf);              /* jge dword 0x100efa89 */
    II(0x100efb38, 0x6)   mov(ax, memw_a32(ds, 0x101b86d8));    /* mov ax, [0x101b86d8] */
    II(0x100efb3e, 0x3)   neg(ax);                              /* neg ax */
    II(0x100efb41, 0x9)   mov(memw_a32(ds, 0x101b86d8), 0);     /* mov word [0x101b86d8], 0x0 */
l_0x100efb4a:
    II(0x100efb4a, 0x7)   sub(memw_a32(ds, 0x101b86da), ax);    /* sub [0x101b86da], ax */
    II(0x100efb51, 0x2)   jged(0x100efb63, 0x10);               /* jge 0x100efb63 */
    II(0x100efb53, 0x7)   add(ax, memw_a32(ds, 0x101b86da));    /* add ax, [0x101b86da] */
    II(0x100efb5a, 0x9)   mov(memw_a32(ds, 0x101b86da), 0);     /* mov word [0x101b86da], 0x0 */
l_0x100efb63:
    II(0x100efb63, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100efb65, 0x3)   jcxzd(0x100efb98, 0x30);              /* jcxz 0x100efb98 */
    II(0x100efb68, 0x5)   mov(eax, memd_a32(ds, 0x101c945c));   /* mov eax, [0x101c945c] */
    II(0x100efb6d, 0x5)   add(eax, 0x500);                      /* add eax, 0x500 */
    II(0x100efb72, 0x6)   add(edi, memd_a32(ds, 0x101c9474));   /* add edi, [0x101c9474] */
    II(0x100efb78, 0x2)   mov(bl, cl);                          /* mov bl, cl */
    II(0x100efb7a, 0x3)   shr(cx, 0x1);                         /* shr cx, 1 */
    II(0x100efb7d, 0x4)   adc(cx, 0);                           /* adc cx, 0x0 */
    II(0x100efb81, 0x3)   test(bl, 0x1);                        /* test bl, 0x1 */
    II(0x100efb84, 0x2)   jnzd(0x100efb8b, 0x5);                /* jnz 0x100efb8b */
l_0x100efb86:
    II(0x100efb86, 0x2)   mov(al, memb_a32(ds, edi));           /* mov al, [edi] */
    II(0x100efb88, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100efb8a, 0x1)   stosb_a32();                          /* stosb */
l_0x100efb8b:
    II(0x100efb8b, 0x2)   mov(al, memb_a32(ds, edi));           /* mov al, [edi] */
    II(0x100efb8d, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100efb8f, 0x1)   stosb_a32();                          /* stosb */
    II(0x100efb90, 0x2)   loopd_a32(0x100efb86, -0xc);          /* loop 0x100efb86 */
    II(0x100efb92, 0x6)   sub(edi, memd_a32(ds, 0x101c9474));   /* sub edi, [0x101c9474] */
l_0x100efb98:
    II(0x100efb98, 0x5)   jmpd(0x100efa89, -0x114);             /* jmp 0x100efa89 */
l_0x100efb9d:
    II(0x100efb9d, 0x7)   movzx(eax, memw_a32(ds, 0x101b7f5c)); /* movzx eax, word [0x101b7f5c] */
    II(0x100efba4, 0x6)   add(memd_a32(ds, 0x101c3638), eax);   /* add [0x101c3638], eax */
    II(0x100efbaa, 0x7)   dec(memw_a32(ds, 0x101c3656));        /* dec word [0x101c3656] */
    II(0x100efbb1, 0x6)   jnzd(0x100efa33, -0x184);             /* jnz dword 0x100efa33 */
    II(0x100efbb7, 0x1)   popd(edi);                            /* pop edi */
    II(0x100efbb8, 0x1)   popd(esi);                            /* pop esi */
    II(0x100efbb9, 0x1)   retd();                               /* ret */
FUNC_END

