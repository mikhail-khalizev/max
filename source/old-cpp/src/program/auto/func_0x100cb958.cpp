FUNC_BEGIN(0x100cb958, 0x7613f94a394b35b, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xf0, 0xa3, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x8f, 0xf3, 0x6, 0, 0x84, 0xc0, 0x74, 0xf, 0xba, 0x24, 0x14, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x3c, 0xa5, 0x9, 0, 0xeb, 0x2f, 0xba, 0x3a, 0x14, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x2d, 0xa5, 0x9, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xc7, 0xab, 0xfa, 0xff, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x6b, 0xd2, 0x33, 0x8b, 0x92, 0xd7, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x6d, 0xa5, 0x9, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100cb958, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100cb95d, 0x5)   calld(sys_check_available_stack_size, 0x9a3f0); /* call 0x10165d52 */
    II(0x100cb962, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100cb963, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100cb964, 0x1)   pushd(esi);                           /* push esi */
    II(0x100cb965, 0x1)   pushd(edi);                           /* push edi */
    II(0x100cb966, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100cb967, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100cb969, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100cb96f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100cb972, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100cb975, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cb977, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cb97a, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cb97d, 0x5)   calld(0x1013ad11, 0x6f38f);           /* call 0x1013ad11 */
    II(0x100cb982, 0x2)   test(al, al);                         /* test al, al */
    II(0x100cb984, 0x2)   jzd(0x100cb995, 0xf);                 /* jz 0x100cb995 */
    II(0x100cb986, 0x5)   mov(edx, 0x101a1424);                 /* mov edx, 0x101a1424 */ /* "Finished repair task." */
    II(0x100cb98b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cb98e, 0x5)   calld(sys_strcpy, 0x9a53c);           /* call 0x10165ecf */
    II(0x100cb993, 0x2)   jmpd(0x100cb9c4, 0x2f);               /* jmp 0x100cb9c4 */
l_0x100cb995:
    II(0x100cb995, 0x5)   mov(edx, 0x101a143a);                 /* mov edx, 0x101a143a */ /* "Repair " */
    II(0x100cb99a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cb99d, 0x5)   calld(sys_strcpy, 0x9a52d);           /* call 0x10165ecf */
    II(0x100cb9a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cb9a5, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cb9a8, 0x5)   calld(0x10076574, -0x55439);          /* call 0x10076574 */
    II(0x100cb9ad, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100cb9b0, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100cb9b3, 0x3)   imul(edx, edx, 0x33);                 /* imul edx, edx, 0x33 */
    II(0x100cb9b6, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c81d7)); /* mov edx, [edx+0x101c81d7] */
    II(0x100cb9bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cb9bf, 0x5)   calld(sys_strcat, 0x9a56d);           /* call 0x10165f31 */
l_0x100cb9c4:
    II(0x100cb9c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cb9c7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100cb9ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100cb9cd, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100cb9cf, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100cb9d0, 0x1)   popd(edi);                            /* pop edi */
    II(0x100cb9d1, 0x1)   popd(esi);                            /* pop esi */
    II(0x100cb9d2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100cb9d3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100cb9d4, 0x1)   retd();                               /* ret */
FUNC_END

