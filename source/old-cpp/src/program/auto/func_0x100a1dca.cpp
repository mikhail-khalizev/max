FUNC_BEGIN(0x100a1dca, 0x355e13ffddb16026, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x7e, 0x3f, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x10, 0xba, 0x46, 0xb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4d, 0xe8, 0xcb, 0x40, 0xc, 0, 0xb8, 0x59, 0xb, 0x1a, 0x10, 0x50, 0xb9, 0x7f, 0xb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1e, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4d, 0xe8, 0x15, 0xff, 0xff, 0xff, 0xb8, 0xa3, 0xb, 0x1a, 0x10, 0x50, 0xb9, 0xc1, 0xb, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x8, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x20, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4d, 0xe8, 0xed, 0xfe, 0xff, 0xff, 0xb8, 0xdd, 0xb, 0x1a, 0x10, 0x50, 0xb8, 0xfb, 0xb, 0x1a, 0x10, 0x8b, 0x4d, 0xfc, 0x8b, 0x59, 0x4, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x1c, 0xc1, 0xfa, 0x10, 0x8b, 0x75, 0xfc, 0x83, 0xc6, 0x4d, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0xc1, 0xfe, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4d, 0xe8, 0x89, 0x3e, 0x7, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a1dca, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100a1dcf, 0x5)   calld(sys_check_available_stack_size, 0xc3f7e); /* call 0x10165d52 */
    II(0x100a1dd4, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a1dd5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a1dd6, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a1dd7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a1dd8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a1dd9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a1dda, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a1ddc, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x100a1de2, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100a1de5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1de8, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100a1deb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a1df0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a1df2, 0x2)   jnzd(0x100a1e04, 0x10);               /* jnz 0x100a1e04 */
    II(0x100a1df4, 0x5)   mov(edx, 0x101a0b46);                 /* mov edx, 0x101a0b46 */ /* "Adjustments made:\n" */
    II(0x100a1df9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1dfc, 0x3)   add(eax, 0x4d);                       /* add eax, 0x4d */
    II(0x100a1dff, 0x5)   calld(sys_strcpy, 0xc40cb);           /* call 0x10165ecf */
l_0x100a1e04:
    II(0x100a1e04, 0x5)   mov(eax, 0x101a0b59);                 /* mov eax, 0x101a0b59 */ /* "Raw material mining increased to %i.\n" */
    II(0x100a1e09, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a1e0a, 0x5)   mov(ecx, 0x101a0b7f);                 /* mov ecx, 0x101a0b7f */ /* "Raw material mining reduced to %i.\n" */
    II(0x100a1e0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1e12, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x100a1e15, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100a1e18, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1e1b, 0x3)   mov(edx, memd_a32(ds, eax + 0x1e));   /* mov edx, [eax+0x1e] */
    II(0x100a1e1e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100a1e21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1e24, 0x3)   add(eax, 0x4d);                       /* add eax, 0x4d */
    II(0x100a1e27, 0x5)   calld(0x100a1d41, -0xeb);             /* call 0x100a1d41 */
    II(0x100a1e2c, 0x5)   mov(eax, 0x101a0ba3);                 /* mov eax, 0x101a0ba3 */ /* "Fuel mining increased to %i.\n" */
    II(0x100a1e31, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a1e32, 0x5)   mov(ecx, 0x101a0bc1);                 /* mov ecx, 0x101a0bc1 */ /* "Fuel mining reduced to %i.\n" */
    II(0x100a1e37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1e3a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x8));    /* mov ebx, [eax+0x8] */
    II(0x100a1e3d, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100a1e40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1e43, 0x3)   mov(edx, memd_a32(ds, eax + 0x20));   /* mov edx, [eax+0x20] */
    II(0x100a1e46, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100a1e49, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1e4c, 0x3)   add(eax, 0x4d);                       /* add eax, 0x4d */
    II(0x100a1e4f, 0x5)   calld(0x100a1d41, -0x113);            /* call 0x100a1d41 */
    II(0x100a1e54, 0x5)   mov(eax, 0x101a0bdd);                 /* mov eax, 0x101a0bdd */ /* "Gold mining increased to %i.\n" */
    II(0x100a1e59, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a1e5a, 0x5)   mov(eax, 0x101a0bfb);                 /* mov eax, 0x101a0bfb */ /* "Gold mining reduced to %i.\n" */
    II(0x100a1e5f, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x100a1e62, 0x3)   mov(ebx, memd_a32(ds, ecx + 0x4));    /* mov ebx, [ecx+0x4] */
    II(0x100a1e65, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100a1e68, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a1e6b, 0x3)   mov(edx, memd_a32(ds, edx + 0x1c));   /* mov edx, [edx+0x1c] */
    II(0x100a1e6e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100a1e71, 0x3)   mov(esi, memd_a32(ss, ebp - 0x4));    /* mov esi, [ebp-0x4] */
    II(0x100a1e74, 0x3)   add(esi, 0x4d);                       /* add esi, 0x4d */
    II(0x100a1e77, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100a1e79, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100a1e7b, 0x5)   calld(0x100a1d41, -0x13f);            /* call 0x100a1d41 */
    II(0x100a1e80, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100a1e85, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a1e86, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100a1e88, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a1e8a, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100a1e8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a1e92, 0x3)   add(eax, 0x4d);                       /* add eax, 0x4d */
    II(0x100a1e95, 0x5)   calld(0x10115d23, 0x73e89);           /* call 0x10115d23 */
    II(0x100a1e9a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a1e9c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a1e9d, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a1e9e, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a1e9f, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a1ea0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a1ea1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a1ea2, 0x1)   retd();                               /* ret */
FUNC_END

