FUNC_BEGIN(0x10103a68, 0xb4136053e1f9a235, 0x20, ({0x68, 0x68, 0, 0, 0, 0xe8, 0xe0, 0x22, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x50, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xd8, 0xe8, 0x8f, 0xcc, 0xfd, 0xff, 0x89, 0x45, 0xdc, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0x7c, 0xcc, 0xfd, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0xe8, 0x58, 0xfd, 0xff, 0xff, 0xba, 0xec, 0x63, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x4, 0xe8, 0xf5, 0x24, 0x6, 0, 0xe8, 0x10, 0x25, 0x6, 0, 0xba, 0xe5, 0x31, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd5, 0x25, 0x4, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x10, 0xba, 0xef, 0x31, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc0, 0x25, 0x4, 0, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x2, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0, 0x66, 0x89, 0x45, 0xec, 0xbb, 0xec, 0x63, 0x1b, 0x10, 0x8b, 0x55, 0xea, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xea, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0xa, 0x83, 0xc0, 0x4, 0xe8, 0xf9, 0x24, 0x6, 0, 0xe8, 0xe3, 0xe2, 0x6, 0, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x4, 0x31, 0xc9, 0xbb, 0xf7, 0x31, 0x1a, 0x10, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0x28, 0x27, 0x4, 0, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0x66, 0xcb, 0xfd, 0xff, 0x89, 0xca, 0xe8, 0x2c, 0x72, 0x3, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xd4, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x93, 0xc8, 0xfd, 0xff, 0x83, 0x7d, 0xd0, 0, 0xf, 0x84, 0xd8, 0, 0, 0, 0xba, 0xfd, 0x31, 0x1a, 0x10, 0x8d, 0x45, 0xd8, 0xe8, 0xc8, 0xca, 0xfd, 0xff, 0xe8, 0x25, 0x25, 0x4, 0, 0x89, 0x45, 0xf0, 0x31, 0xc9, 0xbb, 0x3, 0x32, 0x1a, 0x10, 0x8d, 0x55, 0xcc, 0x8d, 0x45, 0xd8, 0xe8, 0xae, 0xca, 0xfd, 0xff, 0xe8, 0xbd, 0x26, 0x4, 0, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf9, 0xca, 0xfd, 0xff, 0x89, 0xca, 0xe8, 0xbf, 0x71, 0x3, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xc8, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x26, 0xc8, 0xfd, 0xff, 0x83, 0x7d, 0xc4, 0, 0x74, 0x6a, 0xb8, 0x14, 0, 0, 0, 0xe8, 0x1a, 0x22, 0x6, 0, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0x83, 0x7d, 0xbc, 0, 0x74, 0x17, 0x31, 0xdb, 0x31, 0xd2, 0x8b, 0x45, 0xc0, 0xe8, 0x68, 0xf4, 0xff, 0xff, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xb4, 0xeb, 0x6, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0x8d, 0x45, 0xe0, 0xe8, 0xa0, 0xc, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xb0, 0xe8, 0x58, 0xf5, 0xff, 0xff, 0x8b, 0x55, 0xb0, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xd8, 0xa, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x4, 0x1, 0xd8, 0xe8, 0x33, 0xa, 0, 0, 0xe9, 0x42, 0xff, 0xff, 0xff, 0xe9, 0xd7, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xa7, 0xc7, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x9d, 0xc7, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10103a68, 0x5)   pushd(0x68);                          /* push dword 0x68 */
    II(0x10103a6d, 0x5)   calld(sys_check_available_stack_size, 0x622e0); /* call 0x10165d52 */
    II(0x10103a72, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10103a73, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10103a74, 0x1)   pushd(esi);                           /* push esi */
    II(0x10103a75, 0x1)   pushd(edi);                           /* push edi */
    II(0x10103a76, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10103a77, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10103a79, 0x6)   sub(esp, 0x50);                       /* sub esp, 0x50 */
    II(0x10103a7f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10103a82, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10103a85, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10103a89, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10103a8c, 0x5)   calld(0x100e0720, -0x23371);          /* call 0x100e0720 */
    II(0x10103a91, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10103a94, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10103a98, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10103a9c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10103a9f, 0x5)   calld(0x100e0720, -0x23384);          /* call 0x100e0720 */
    II(0x10103aa4, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10103aa7, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10103aab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103aae, 0x5)   calld(0x1010380b, -0x2a8);            /* call 0x1010380b */
    II(0x10103ab3, 0x5)   mov(edx, 0x101b63ec);                 /* mov edx, 0x101b63ec */
    II(0x10103ab8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103abb, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10103abe, 0x5)   calld(sys_call_dtor_arr, 0x624f5);    /* call 0x10165fb8 */
    II(0x10103ac3, 0x5)   calld(sys_delete_arr, 0x62510);       /* call 0x10165fd8 */
    II(0x10103ac8, 0x5)   mov(edx, 0x101a31e5);                 /* mov edx, 0x101a31e5 */ /* "hash_size" */
    II(0x10103acd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103ad0, 0x5)   calld(0x101460aa, 0x425d5);           /* call 0x101460aa */
    II(0x10103ad5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10103ad7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103ada, 0x3)   mov(memw_a32(ds, eax), dx);           /* mov [eax], dx */
    II(0x10103add, 0x5)   mov(edx, 0x101a31ef);                 /* mov edx, 0x101a31ef */ /* "x_shift" */
    II(0x10103ae2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103ae5, 0x5)   calld(0x101460aa, 0x425c0);           /* call 0x101460aa */
    II(0x10103aea, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10103aed, 0x4)   mov(memw_a32(ds, edx + 0x2), ax);     /* mov [edx+0x2], ax */
    II(0x10103af1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103af4, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10103af7, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x10103afb, 0x5)   mov(ebx, 0x101b63ec);                 /* mov ebx, 0x101b63ec */
    II(0x10103b00, 0x3)   mov(edx, memd_a32(ss, ebp - 0x16));   /* mov edx, [ebp-0x16] */
    II(0x10103b03, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10103b06, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x10103b09, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10103b0c, 0x3)   imul(eax, eax, 0xa);                  /* imul eax, eax, 0xa */
    II(0x10103b0f, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x10103b12, 0x5)   calld(sys_new_arr, 0x624f9);          /* call 0x10166010 */
    II(0x10103b17, 0x5)   calld(sys_call_ctor_arr, 0x6e2e3);    /* call 0x10171dff */
    II(0x10103b1c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10103b1f, 0x3)   mov(memd_a32(ds, edx + 0x4), eax);    /* mov [edx+0x4], eax */
l_0x10103b22:
    II(0x10103b22, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10103b24, 0x5)   mov(ebx, 0x101a31f7);                 /* mov ebx, 0x101a31f7 */ /* "entry" */
    II(0x10103b29, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10103b2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103b2f, 0x5)   calld(0x1014625c, 0x42728);           /* call 0x1014625c */
    II(0x10103b34, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10103b36, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10103b39, 0x5)   calld(0x100e06a4, -0x2349a);          /* call 0x100e06a4 */
    II(0x10103b3e, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x10103b40, 0x5)   calld(0x1013ad71, 0x3722c);           /* call 0x1013ad71 */
    II(0x10103b45, 0x2)   test(al, al);                         /* test al, al */
    II(0x10103b47, 0x2)   jzd(0x10103b52, 0x9);                 /* jz 0x10103b52 */
    II(0x10103b49, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0x1);   /* mov dword [ebp-0x2c], 0x1 */
    II(0x10103b50, 0x2)   jmpd(0x10103b59, 0x7);                /* jmp 0x10103b59 */
l_0x10103b52:
    II(0x10103b52, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
l_0x10103b59:
    II(0x10103b59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10103b5c, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10103b5f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103b61, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103b64, 0x5)   calld(0x100e03fc, -0x2376d);          /* call 0x100e03fc */
    II(0x10103b69, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x10103b6d, 0x6)   jzd(0x10103c4b, 0xd8);                /* jz dword 0x10103c4b */
    II(0x10103b73, 0x5)   mov(edx, 0x101a31fd);                 /* mov edx, 0x101a31fd */ /* "index" */
    II(0x10103b78, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10103b7b, 0x5)   calld(0x100e0648, -0x23538);          /* call 0x100e0648 */
    II(0x10103b80, 0x5)   calld(0x101460aa, 0x42525);           /* call 0x101460aa */
    II(0x10103b85, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x10103b88:
    II(0x10103b88, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10103b8a, 0x5)   mov(ebx, 0x101a3203);                 /* mov ebx, 0x101a3203 */ /* "list" */
    II(0x10103b8f, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x10103b92, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10103b95, 0x5)   calld(0x100e0648, -0x23552);          /* call 0x100e0648 */
    II(0x10103b9a, 0x5)   calld(0x1014625c, 0x426bd);           /* call 0x1014625c */
    II(0x10103b9f, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x10103ba2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10103ba4, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10103ba6, 0x5)   calld(0x100e06a4, -0x23507);          /* call 0x100e06a4 */
    II(0x10103bab, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x10103bad, 0x5)   calld(0x1013ad71, 0x371bf);           /* call 0x1013ad71 */
    II(0x10103bb2, 0x2)   test(al, al);                         /* test al, al */
    II(0x10103bb4, 0x2)   jzd(0x10103bbf, 0x9);                 /* jz 0x10103bbf */
    II(0x10103bb6, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0x1);   /* mov dword [ebp-0x38], 0x1 */
    II(0x10103bbd, 0x2)   jmpd(0x10103bc6, 0x7);                /* jmp 0x10103bc6 */
l_0x10103bbf:
    II(0x10103bbf, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
l_0x10103bc6:
    II(0x10103bc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10103bc9, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x10103bcc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103bce, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10103bd1, 0x5)   calld(0x100e03fc, -0x237da);          /* call 0x100e03fc */
    II(0x10103bd6, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x10103bda, 0x2)   jzd(0x10103c46, 0x6a);                /* jz 0x10103c46 */
    II(0x10103bdc, 0x5)   mov(eax, 0x14);                       /* mov eax, 0x14 */
    II(0x10103be1, 0x5)   calld(sys_new, 0x6221a);              /* call 0x10165e00 */
    II(0x10103be6, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x10103be9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10103bec, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x10103bef, 0x4)   cmp(memd_a32(ss, ebp - 0x44), 0);     /* cmp dword [ebp-0x44], 0x0 */
    II(0x10103bf3, 0x2)   jzd(0x10103c0c, 0x17);                /* jz 0x10103c0c */
    II(0x10103bf5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10103bf7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103bf9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10103bfc, 0x5)   calld(0x10103069, -0xb98);            /* call 0x10103069 */
    II(0x10103c01, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x10103c04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10103c07, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x10103c0a, 0x2)   jmpd(0x10103c12, 0x6);                /* jmp 0x10103c12 */
l_0x10103c0c:
    II(0x10103c0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10103c0f, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
l_0x10103c12:
    II(0x10103c12, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10103c15, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x10103c18, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10103c1b, 0x5)   calld(0x101048c0, 0xca0);             /* call 0x101048c0 */
    II(0x10103c20, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10103c22, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x10103c25, 0x5)   calld(0x10103182, -0xaa8);            /* call 0x10103182 */
    II(0x10103c2a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x50));   /* mov edx, [ebp-0x50] */
    II(0x10103c2d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10103c31, 0x3)   imul(ebx, eax, 0xa);                  /* imul ebx, eax, 0xa */
    II(0x10103c34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103c37, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10103c3a, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10103c3c, 0x5)   calld(0x10104674, 0xa33);             /* call 0x10104674 */
    II(0x10103c41, 0x5)   jmpd(0x10103b88, -0xbe);              /* jmp 0x10103b88 */
l_0x10103c46:
    II(0x10103c46, 0x5)   jmpd(0x10103b22, -0x129);             /* jmp 0x10103b22 */
l_0x10103c4b:
    II(0x10103c4b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103c4d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10103c50, 0x5)   calld(0x100e03fc, -0x23859);          /* call 0x100e03fc */
    II(0x10103c55, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103c57, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10103c5a, 0x5)   calld(0x100e03fc, -0x23863);          /* call 0x100e03fc */
    II(0x10103c5f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10103c61, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10103c62, 0x1)   popd(edi);                            /* pop edi */
    II(0x10103c63, 0x1)   popd(esi);                            /* pop esi */
    II(0x10103c64, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10103c65, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10103c66, 0x1)   retd();                               /* ret */
FUNC_END

