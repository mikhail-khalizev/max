FUNC_BEGIN(0x1013e49e, 0x6e34115dc803abd7, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0xaa, 0x78, 0x2, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x81, 0x3d, 0x94, 0x72, 0x1c, 0x10, 0xff, 0xff, 0, 0, 0xf, 0x84, 0x9f, 0x2, 0, 0, 0x80, 0x3d, 0x8e, 0x72, 0x1c, 0x10, 0, 0xf, 0x84, 0x2b, 0x1, 0, 0, 0xc6, 0x5, 0x8e, 0x72, 0x1c, 0x10, 0, 0x31, 0xc0, 0xa0, 0x81, 0x80, 0x1c, 0x10, 0x8a, 0x80, 0x78, 0x80, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x85, 0xb3, 0, 0, 0, 0x83, 0x3d, 0x46, 0x80, 0x1c, 0x10, 0, 0x75, 0xa, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x3a, 0xfe, 0xff, 0xff, 0x31, 0xc0, 0xa0, 0x81, 0x80, 0x1c, 0x10, 0x69, 0xd0, 0, 0x6e, 0, 0, 0xa1, 0x8a, 0x72, 0x1c, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xf0, 0x8b, 0x15, 0x46, 0x80, 0x1c, 0x10, 0xb8, 0, 0x6e, 0, 0, 0xe8, 0x56, 0xb2, 0xf4, 0xff, 0x89, 0x45, 0xec, 0x8b, 0xd, 0x80, 0x72, 0x1c, 0x10, 0x8b, 0x5d, 0xec, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xe8, 0x25, 0x40, 0x3, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xec, 0x29, 0x5, 0x46, 0x80, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0x81, 0x80, 0x1c, 0x10, 0xc6, 0x80, 0x78, 0x80, 0x1c, 0x10, 0x1, 0xfe, 0x5, 0x81, 0x80, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0x81, 0x80, 0x1c, 0x10, 0x83, 0xf8, 0x9, 0x7c, 0x7, 0xc6, 0x5, 0x81, 0x80, 0x1c, 0x10, 0, 0x83, 0x3d, 0x46, 0x80, 0x1c, 0x10, 0, 0x7f, 0x1f, 0xbb, 0, 0x6e, 0, 0, 0x2b, 0x5d, 0xe8, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0x3, 0x45, 0xe8, 0xe8, 0x48, 0x78, 0x2, 0, 0xc7, 0x5, 0x46, 0x80, 0x1c, 0x10, 0, 0, 0, 0, 0xe9, 0x33, 0xff, 0xff, 0xff, 0x80, 0x3d, 0x8f, 0x72, 0x1c, 0x10, 0, 0x74, 0x4e, 0x8c, 0xd8, 0x8b, 0x15, 0x8a, 0x72, 0x1c, 0x10, 0x31, 0xc9, 0x8a, 0xd, 0x82, 0x80, 0x1c, 0x10, 0x69, 0xc9, 0, 0x6e, 0, 0, 0x89, 0xc3, 0x1, 0xd1, 0xa1, 0x78, 0x72, 0x1c, 0x10, 0x66, 0x89, 0x58, 0xf, 0x89, 0x48, 0xb, 0xa1, 0x78, 0x72, 0x1c, 0x10, 0x83, 0xc0, 0xb, 0x8c, 0xdb, 0x8b, 0x15, 0x90, 0x72, 0x1c, 0x10, 0x8b, 0x35, 0x94, 0x72, 0x1c, 0x10, 0x89, 0xd9, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0xe5, 0x1d, 0x4, 0, 0xc6, 0x5, 0x8f, 0x72, 0x1c, 0x10, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xc6, 0x45, 0xfc, 0, 0xc6, 0x45, 0xf8, 0, 0xeb, 0x6, 0x8a, 0x45, 0xf8, 0xfe, 0x45, 0xf8, 0x8a, 0x45, 0xf8, 0x3a, 0x5, 0x98, 0x72, 0x1c, 0x10, 0xf, 0x83, 0x72, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x6b, 0xc0, 0x1c, 0xba, 0x99, 0x72, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe4, 0x80, 0x7d, 0xfc, 0, 0x74, 0x9, 0x8b, 0x45, 0xe4, 0x80, 0x78, 0xa, 0x3, 0x74, 0x11, 0x8b, 0x55, 0xe4, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x1c, 0x1, 0, 0, 0x3c, 0xb, 0x75, 0x3b, 0xf, 0xbf, 0x55, 0xf4, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x39, 0xc2, 0x74, 0x1b, 0xbb, 0x1c, 0, 0, 0, 0x8b, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x1c, 0xb9, 0x99, 0x72, 0x1c, 0x10, 0x1, 0xc8, 0xe8, 0xcd, 0x77, 0x2, 0, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xe4, 0x80, 0x78, 0xa, 0x3, 0x75, 0x4, 0xc6, 0x45, 0xfc, 0x1, 0xe9, 0x79, 0xff, 0xff, 0xff, 0x8a, 0x45, 0xf4, 0xa2, 0x98, 0x72, 0x1c, 0x10, 0xc6, 0x45, 0xf8, 0x14, 0xfe, 0x4d, 0xf8, 0x80, 0x7d, 0xf8, 0xff, 0xf, 0x84, 0xb6, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x69, 0xc0, 0x91, 0, 0, 0, 0xba, 0xc9, 0x74, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe0, 0x8b, 0x45, 0xe0, 0x81, 0x38, 0xff, 0xff, 0, 0, 0x74, 0xc, 0x8b, 0x45, 0xe0, 0x83, 0xb8, 0x8b, 0, 0, 0, 0, 0x75, 0x5, 0xe9, 0x80, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x8b, 0x80, 0x8b, 0, 0, 0, 0xe8, 0xbf, 0x9e, 0, 0, 0x83, 0xf8, 0x7d, 0x76, 0x6d, 0x8b, 0x45, 0xe0, 0xd1, 0xa8, 0x83, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x83, 0xb8, 0x83, 0, 0, 0, 0, 0x74, 0x4b, 0x8b, 0x45, 0xe0, 0xd1, 0x68, 0x7f, 0xb8, 0x37, 0, 0, 0, 0xe8, 0xc4, 0x78, 0xf3, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xe0, 0x8b, 0x40, 0x7f, 0xf, 0xaf, 0xc3, 0xbb, 0x64, 0, 0, 0, 0x31, 0xd2, 0xf7, 0xf3, 0x89, 0x45, 0xdc, 0x8b, 0x5d, 0xdc, 0x8b, 0x45, 0xe0, 0x8b, 0x10, 0xa1, 0x94, 0x72, 0x1c, 0x10, 0xe8, 0x66, 0x20, 0x4, 0, 0xe8, 0xae, 0x9b, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xe0, 0x89, 0x90, 0x8b, 0, 0, 0, 0xeb, 0xd, 0x8b, 0x55, 0xe0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xdf, 0xe6, 0xff, 0xff, 0xe9, 0x3d, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1013e49e, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x1013e4a3, 0x5)   calld(sys_check_available_stack_size, 0x278aa); /* call 0x10165d52 */
    II(0x1013e4a8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013e4a9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013e4aa, 0x1)   pushd(edx);                           /* push edx */
    II(0x1013e4ab, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013e4ac, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013e4ad, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013e4ae, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013e4b0, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1013e4b6, 0xa)   cmp(memd_a32(ds, 0x101c7294), 0xffff); /* cmp dword [0x101c7294], 0xffff */
    II(0x1013e4c0, 0x6)   jzd(0x1013e765, 0x29f);               /* jz dword 0x1013e765 */
    II(0x1013e4c6, 0x7)   cmp(memb_a32(ds, 0x101c728e), 0);     /* cmp byte [0x101c728e], 0x0 */
    II(0x1013e4cd, 0x6)   jzd(0x1013e5fe, 0x12b);               /* jz dword 0x1013e5fe */
    II(0x1013e4d3, 0x7)   mov(memb_a32(ds, 0x101c728e), 0);     /* mov byte [0x101c728e], 0x0 */
l_0x1013e4da:
    II(0x1013e4da, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013e4dc, 0x5)   mov(al, memb_a32(ds, 0x101c8081));    /* mov al, [0x101c8081] */
    II(0x1013e4e1, 0x6)   mov(al, memb_a32(ds, eax + 0x101c8078)); /* mov al, [eax+0x101c8078] */
    II(0x1013e4e7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013e4ec, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1013e4ee, 0x6)   jnzd(0x1013e5a7, 0xb3);               /* jnz dword 0x1013e5a7 */
    II(0x1013e4f4, 0x7)   cmp(memd_a32(ds, 0x101c8046), 0);     /* cmp dword [0x101c8046], 0x0 */
    II(0x1013e4fb, 0x2)   jnzd(0x1013e507, 0xa);                /* jnz 0x1013e507 */
    II(0x1013e4fd, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x1013e502, 0x5)   calld(0x1013e341, -0x1c6);            /* call 0x1013e341 */
l_0x1013e507:
    II(0x1013e507, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013e509, 0x5)   mov(al, memb_a32(ds, 0x101c8081));    /* mov al, [0x101c8081] */
    II(0x1013e50e, 0x6)   imul(edx, eax, 0x6e00);               /* imul edx, eax, 0x6e00 */
    II(0x1013e514, 0x5)   mov(eax, memd_a32(ds, 0x101c728a));   /* mov eax, [0x101c728a] */
    II(0x1013e519, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013e51b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013e51e, 0x6)   mov(edx, memd_a32(ds, 0x101c8046));   /* mov edx, [0x101c8046] */
    II(0x1013e524, 0x5)   mov(eax, 0x6e00);                     /* mov eax, 0x6e00 */
    II(0x1013e529, 0x5)   calld(my_min, -0xb4daa);              /* call 0x10089784 */
    II(0x1013e52e, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1013e531, 0x6)   mov(ecx, memd_a32(ds, 0x101c7280));   /* mov ecx, [0x101c7280] */
    II(0x1013e537, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x14));   /* mov ebx, [ebp-0x14] */
    II(0x1013e53a, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1013e53f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013e542, 0x5)   calld(sys_fread, 0x34025);            /* call 0x1017256c */
    II(0x1013e547, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1013e54a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013e54d, 0x6)   sub(memd_a32(ds, 0x101c8046), eax);   /* sub [0x101c8046], eax */
    II(0x1013e553, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013e555, 0x5)   mov(al, memb_a32(ds, 0x101c8081));    /* mov al, [0x101c8081] */
    II(0x1013e55a, 0x7)   mov(memb_a32(ds, eax + 0x101c8078), 0x1); /* mov byte [eax+0x101c8078], 0x1 */
    II(0x1013e561, 0x6)   inc(memb_a32(ds, 0x101c8081));        /* inc byte [0x101c8081] */
    II(0x1013e567, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013e569, 0x5)   mov(al, memb_a32(ds, 0x101c8081));    /* mov al, [0x101c8081] */
    II(0x1013e56e, 0x3)   cmp(eax, 0x9);                        /* cmp eax, 0x9 */
    II(0x1013e571, 0x2)   jld(0x1013e57a, 0x7);                 /* jl 0x1013e57a */
    II(0x1013e573, 0x7)   mov(memb_a32(ds, 0x101c8081), 0);     /* mov byte [0x101c8081], 0x0 */
l_0x1013e57a:
    II(0x1013e57a, 0x7)   cmp(memd_a32(ds, 0x101c8046), 0);     /* cmp dword [0x101c8046], 0x0 */
    II(0x1013e581, 0x2)   jgd(0x1013e5a2, 0x1f);                /* jg 0x1013e5a2 */
    II(0x1013e583, 0x5)   mov(ebx, 0x6e00);                     /* mov ebx, 0x6e00 */
    II(0x1013e588, 0x3)   sub(ebx, memd_a32(ss, ebp - 0x18));   /* sub ebx, [ebp-0x18] */
    II(0x1013e58b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013e58d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013e590, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x1013e593, 0x5)   calld(sys_memset, 0x27848);           /* call 0x10165de0 */
    II(0x1013e598, 0xa)   mov(memd_a32(ds, 0x101c8046), 0);     /* mov dword [0x101c8046], 0x0 */
l_0x1013e5a2:
    II(0x1013e5a2, 0x5)   jmpd(0x1013e4da, -0xcd);              /* jmp 0x1013e4da */
l_0x1013e5a7:
    II(0x1013e5a7, 0x7)   cmp(memb_a32(ds, 0x101c728f), 0);     /* cmp byte [0x101c728f], 0x0 */
    II(0x1013e5ae, 0x2)   jzd(0x1013e5fe, 0x4e);                /* jz 0x1013e5fe */
    II(0x1013e5b0, 0x2)   mov(eax, ds);                         /* mov eax, ds */
    II(0x1013e5b2, 0x6)   mov(edx, memd_a32(ds, 0x101c728a));   /* mov edx, [0x101c728a] */
    II(0x1013e5b8, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1013e5ba, 0x6)   mov(cl, memb_a32(ds, 0x101c8082));    /* mov cl, [0x101c8082] */
    II(0x1013e5c0, 0x6)   imul(ecx, ecx, 0x6e00);               /* imul ecx, ecx, 0x6e00 */
    II(0x1013e5c6, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1013e5c8, 0x2)   add(ecx, edx);                        /* add ecx, edx */
    II(0x1013e5ca, 0x5)   mov(eax, memd_a32(ds, 0x101c7278));   /* mov eax, [0x101c7278] */
    II(0x1013e5cf, 0x4)   mov(memw_a32(ds, eax + 0xf), bx);     /* mov [eax+0xf], bx */
    II(0x1013e5d3, 0x3)   mov(memd_a32(ds, eax + 0xb), ecx);    /* mov [eax+0xb], ecx */
    II(0x1013e5d6, 0x5)   mov(eax, memd_a32(ds, 0x101c7278));   /* mov eax, [0x101c7278] */
    II(0x1013e5db, 0x3)   add(eax, 0xb);                        /* add eax, 0xb */
    II(0x1013e5de, 0x2)   mov(ebx, ds);                         /* mov ebx, ds */
    II(0x1013e5e0, 0x6)   mov(edx, memd_a32(ds, 0x101c7290));   /* mov edx, [0x101c7290] */
    II(0x1013e5e6, 0x6)   mov(esi, memd_a32(ds, 0x101c7294));   /* mov esi, [0x101c7294] */
    II(0x1013e5ec, 0x2)   mov(ecx, ebx);                        /* mov ecx, ebx */
    II(0x1013e5ee, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1013e5f0, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1013e5f2, 0x5)   calld(/* sys */ 0x101803dc, 0x41de5); /* call 0x101803dc */
    II(0x1013e5f7, 0x7)   mov(memb_a32(ds, 0x101c728f), 0);     /* mov byte [0x101c728f], 0x0 */
l_0x1013e5fe:
    II(0x1013e5fe, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1013e605, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
    II(0x1013e609, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1013e60d, 0x2)   jmpd(0x1013e615, 0x6);                /* jmp 0x1013e615 */
l_0x1013e60f:
    II(0x1013e60f, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1013e612, 0x3)   inc(memb_a32(ss, ebp - 0x8));         /* inc byte [ebp-0x8] */
l_0x1013e615:
    II(0x1013e615, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1013e618, 0x6)   cmp(al, memb_a32(ds, 0x101c7298));    /* cmp al, [0x101c7298] */
    II(0x1013e61e, 0x6)   jaed(0x1013e696, 0x72);               /* jae dword 0x1013e696 */
    II(0x1013e624, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013e626, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1013e629, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x1013e62c, 0x5)   mov(edx, 0x101c7299);                 /* mov edx, 0x101c7299 */
    II(0x1013e631, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013e633, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x1013e636, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1013e63a, 0x2)   jzd(0x1013e645, 0x9);                 /* jz 0x1013e645 */
    II(0x1013e63c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1013e63f, 0x4)   cmp(memb_a32(ds, eax + 0xa), 0x3);    /* cmp byte [eax+0xa], 0x3 */
    II(0x1013e643, 0x2)   jzd(0x1013e656, 0x11);                /* jz 0x1013e656 */
l_0x1013e645:
    II(0x1013e645, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1c));   /* mov edx, [ebp-0x1c] */
    II(0x1013e648, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x1013e64d, 0x5)   calld(0x1013e76e, 0x11c);             /* call 0x1013e76e */
    II(0x1013e652, 0x2)   cmp(al, 0xb);                         /* cmp al, 0xb */
    II(0x1013e654, 0x2)   jnzd(0x1013e691, 0x3b);               /* jnz 0x1013e691 */
l_0x1013e656:
    II(0x1013e656, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1013e65a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013e65c, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1013e65f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1013e661, 0x2)   jzd(0x1013e67e, 0x1b);                /* jz 0x1013e67e */
    II(0x1013e663, 0x5)   mov(ebx, 0x1c);                       /* mov ebx, 0x1c */
    II(0x1013e668, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1c));   /* mov edx, [ebp-0x1c] */
    II(0x1013e66b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1013e66f, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x1013e672, 0x5)   mov(ecx, 0x101c7299);                 /* mov ecx, 0x101c7299 */
    II(0x1013e677, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x1013e679, 0x5)   calld(sys_memcpy, 0x277cd);           /* call 0x10165e4b */
l_0x1013e67e:
    II(0x1013e67e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013e681, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
    II(0x1013e684, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1013e687, 0x4)   cmp(memb_a32(ds, eax + 0xa), 0x3);    /* cmp byte [eax+0xa], 0x3 */
    II(0x1013e68b, 0x2)   jnzd(0x1013e691, 0x4);                /* jnz 0x1013e691 */
    II(0x1013e68d, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
l_0x1013e691:
    II(0x1013e691, 0x5)   jmpd(0x1013e60f, -0x87);              /* jmp 0x1013e60f */
l_0x1013e696:
    II(0x1013e696, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x1013e699, 0x5)   mov(memb_a32(ds, 0x101c7298), al);    /* mov [0x101c7298], al */
    II(0x1013e69e, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x14);   /* mov byte [ebp-0x8], 0x14 */
l_0x1013e6a2:
    II(0x1013e6a2, 0x3)   dec(memb_a32(ss, ebp - 0x8));         /* dec byte [ebp-0x8] */
    II(0x1013e6a5, 0x4)   cmp(memb_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp byte [ebp-0x8], 0xff */
    II(0x1013e6a9, 0x6)   jzd(0x1013e765, 0xb6);                /* jz dword 0x1013e765 */
    II(0x1013e6af, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013e6b1, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1013e6b4, 0x6)   imul(eax, eax, 0x91);                 /* imul eax, eax, 0x91 */
    II(0x1013e6ba, 0x5)   mov(edx, 0x101c74c9);                 /* mov edx, 0x101c74c9 */
    II(0x1013e6bf, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013e6c1, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x1013e6c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1013e6c7, 0x6)   cmp(memd_a32(ds, eax), 0xffff);       /* cmp dword [eax], 0xffff */
    II(0x1013e6cd, 0x2)   jzd(0x1013e6db, 0xc);                 /* jz 0x1013e6db */
    II(0x1013e6cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1013e6d2, 0x7)   cmp(memd_a32(ds, eax + 0x8b), 0);     /* cmp dword [eax+0x8b], 0x0 */
    II(0x1013e6d9, 0x2)   jnzd(0x1013e6e0, 0x5);                /* jnz 0x1013e6e0 */
l_0x1013e6db:
    II(0x1013e6db, 0x5)   jmpd(0x1013e760, 0x80);               /* jmp 0x1013e760 */
l_0x1013e6e0:
    II(0x1013e6e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1013e6e3, 0x6)   mov(eax, memd_a32(ds, eax + 0x8b));   /* mov eax, [eax+0x8b] */
    II(0x1013e6e9, 0x5)   calld(0x101485ad, 0x9ebf);            /* call 0x101485ad */
    II(0x1013e6ee, 0x3)   cmp(eax, 0x7d);                       /* cmp eax, 0x7d */
    II(0x1013e6f1, 0x2)   jbed(0x1013e760, 0x6d);               /* jbe 0x1013e760 */
    II(0x1013e6f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1013e6f6, 0x6)   shr(memd_a32(ds, eax + 0x83), 0x1);   /* shr dword [eax+0x83], 1 */
    II(0x1013e6fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1013e6ff, 0x7)   cmp(memd_a32(ds, eax + 0x83), 0);     /* cmp dword [eax+0x83], 0x0 */
    II(0x1013e706, 0x2)   jzd(0x1013e753, 0x4b);                /* jz 0x1013e753 */
    II(0x1013e708, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1013e70b, 0x3)   shr(memd_a32(ds, eax + 0x7f), 0x1);   /* shr dword [eax+0x7f], 1 */
    II(0x1013e70e, 0x5)   mov(eax, 0x37);                       /* mov eax, 0x37 */
    II(0x1013e713, 0x5)   calld(0x10075fdc, -0xc873c);          /* call 0x10075fdc */
    II(0x1013e718, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1013e71a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1013e71d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7f));   /* mov eax, [eax+0x7f] */
    II(0x1013e720, 0x3)   imul(eax, ebx);                       /* imul eax, ebx */
    II(0x1013e723, 0x5)   mov(ebx, 0x64);                       /* mov ebx, 0x64 */
    II(0x1013e728, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013e72a, 0x2)   div(ebx);                             /* div ebx */
    II(0x1013e72c, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1013e72f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x24));   /* mov ebx, [ebp-0x24] */
    II(0x1013e732, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1013e735, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x1013e737, 0x5)   mov(eax, memd_a32(ds, 0x101c7294));   /* mov eax, [0x101c7294] */
    II(0x1013e73c, 0x5)   calld(/* sys */ 0x101807a7, 0x42066); /* call 0x101807a7 */
    II(0x1013e741, 0x5)   calld(0x101482f4, 0x9bae);            /* call 0x101482f4 */
    II(0x1013e746, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1013e748, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1013e74b, 0x6)   mov(memd_a32(ds, eax + 0x8b), edx);   /* mov [eax+0x8b], edx */
    II(0x1013e751, 0x2)   jmpd(0x1013e760, 0xd);                /* jmp 0x1013e760 */
l_0x1013e753:
    II(0x1013e753, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x1013e756, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x1013e75b, 0x5)   calld(0x1013ce3f, -0x1921);           /* call 0x1013ce3f */
l_0x1013e760:
    II(0x1013e760, 0x5)   jmpd(0x1013e6a2, -0xc3);              /* jmp 0x1013e6a2 */
l_0x1013e765:
    II(0x1013e765, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013e767, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013e768, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013e769, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013e76a, 0x1)   popd(edx);                            /* pop edx */
    II(0x1013e76b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013e76c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013e76d, 0x1)   retd();                               /* ret */
FUNC_END

