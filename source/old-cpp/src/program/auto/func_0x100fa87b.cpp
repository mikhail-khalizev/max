FUNC_BEGIN(0x100fa87b, 0x366f83d314622d99, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0xcd, 0xb4, 0x6, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xf8, 0, 0x74, 0x9, 0x8b, 0x45, 0xf0, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x5, 0xe9, 0x46, 0x1, 0, 0, 0xc1, 0x65, 0xf8, 0x6, 0xf, 0xbf, 0x55, 0xf8, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x4, 0x75, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xe8, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0x2, 0, 0, 0, 0xb8, 0x40, 0, 0, 0, 0xba, 0x40, 0, 0, 0, 0xc1, 0xfa, 0x1f, 0xf7, 0x7d, 0xe8, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x6, 0x1, 0xd0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf0, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xd4, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xd4, 0x2, 0, 0, 0, 0xb8, 0x40, 0, 0, 0, 0xba, 0x40, 0, 0, 0, 0xc1, 0xfa, 0x1f, 0xf7, 0x7d, 0xd4, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x1a, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x6, 0x1, 0xc2, 0x89, 0x55, 0xdc, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0x8b, 0x55, 0xdc, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x98, 0x50, 0x8b, 0x55, 0xd8, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfa, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x98, 0x50, 0x8b, 0xd, 0x48, 0x87, 0x1b, 0x10, 0xc1, 0xf9, 0x10, 0x8b, 0x1d, 0x46, 0x87, 0x1b, 0x10, 0xc1, 0xfb, 0x10, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x16, 0xe8, 0x8c, 0xb7, 0xfd, 0xff, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xaf, 0x5, 0xc4, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x8b, 0x55, 0xd8, 0x1, 0xc2, 0x89, 0x55, 0xe0, 0xf, 0xbf, 0x45, 0xf8, 0x8b, 0x55, 0xdc, 0x1, 0xc2, 0x89, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xf8, 0x29, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xf8, 0x29, 0x45, 0xdc, 0x8d, 0x45, 0xd8, 0xe8, 0x6b, 0x4b, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100fa87b, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x100fa880, 0x5)   calld(sys_check_available_stack_size, 0x6b4cd); /* call 0x10165d52 */
    II(0x100fa885, 0x1)   pushd(esi);                           /* push esi */
    II(0x100fa886, 0x1)   pushd(edi);                           /* push edi */
    II(0x100fa887, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100fa888, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100fa88a, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x100fa890, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100fa893, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100fa896, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100fa899, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100fa89c, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0);      /* cmp word [ebp-0x8], 0x0 */
    II(0x100fa8a1, 0x2)   jzd(0x100fa8ac, 0x9);                 /* jz 0x100fa8ac */
    II(0x100fa8a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100fa8a6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100fa8aa, 0x2)   jnzd(0x100fa8b1, 0x5);                /* jnz 0x100fa8b1 */
l_0x100fa8ac:
    II(0x100fa8ac, 0x5)   jmpd(0x100fa9f7, 0x146);              /* jmp 0x100fa9f7 */
l_0x100fa8b1:
    II(0x100fa8b1, 0x4)   shl(memd_a32(ss, ebp - 0x8), 0x6);    /* shl dword [ebp-0x8], 0x6 */
    II(0x100fa8b5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100fa8b9, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100fa8bc, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fa8be, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fa8c1, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100fa8c7, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100fa8ca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100fa8ce, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100fa8d1, 0x2)   jnzd(0x100fa8d9, 0x6);                /* jnz 0x100fa8d9 */
    II(0x100fa8d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100fa8d6, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100fa8d9:
    II(0x100fa8d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100fa8dc, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x100fa8e0, 0x2)   jzd(0x100fa8eb, 0x9);                 /* jz 0x100fa8eb */
    II(0x100fa8e2, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x1);   /* mov dword [ebp-0x18], 0x1 */
    II(0x100fa8e9, 0x2)   jmpd(0x100fa8f2, 0x7);                /* jmp 0x100fa8f2 */
l_0x100fa8eb:
    II(0x100fa8eb, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x2);   /* mov dword [ebp-0x18], 0x2 */
l_0x100fa8f2:
    II(0x100fa8f2, 0x5)   mov(eax, 0x40);                       /* mov eax, 0x40 */
    II(0x100fa8f7, 0x5)   mov(edx, 0x40);                       /* mov edx, 0x40 */
    II(0x100fa8fc, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fa8ff, 0x3)   idiv(memd_a32(ss, ebp - 0x18));       /* idiv dword [ebp-0x18] */
    II(0x100fa902, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fa904, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100fa907, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100fa90a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fa90d, 0x3)   shl(eax, 0x6);                        /* shl eax, 0x6 */
    II(0x100fa910, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100fa912, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100fa915, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100fa918, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x100fa91c, 0x2)   jzd(0x100fa927, 0x9);                 /* jz 0x100fa927 */
    II(0x100fa91e, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0x1);   /* mov dword [ebp-0x2c], 0x1 */
    II(0x100fa925, 0x2)   jmpd(0x100fa92e, 0x7);                /* jmp 0x100fa92e */
l_0x100fa927:
    II(0x100fa927, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0x2);   /* mov dword [ebp-0x2c], 0x2 */
l_0x100fa92e:
    II(0x100fa92e, 0x5)   mov(eax, 0x40);                       /* mov eax, 0x40 */
    II(0x100fa933, 0x5)   mov(edx, 0x40);                       /* mov edx, 0x40 */
    II(0x100fa938, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fa93b, 0x3)   idiv(memd_a32(ss, ebp - 0x2c));       /* idiv dword [ebp-0x2c] */
    II(0x100fa93e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100fa941, 0x3)   mov(edx, memd_a32(ds, edx + 0x1a));   /* mov edx, [edx+0x1a] */
    II(0x100fa944, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fa947, 0x3)   shl(edx, 0x6);                        /* shl edx, 0x6 */
    II(0x100fa94a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fa94c, 0x3)   mov(memd_a32(ss, ebp - 0x24), edx);   /* mov [ebp-0x24], edx */
    II(0x100fa94f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fa951, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100fa954, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fa955, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100fa959, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fa95a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100fa95d, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100fa960, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fa962, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fa965, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100fa96b, 0x6)   mov(edx, memd_a32(ds, 0x101c38fc));   /* mov edx, [0x101c38fc] */
    II(0x100fa971, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fa974, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100fa976, 0x1)   cwde();                               /* cwde */
    II(0x100fa977, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fa978, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x100fa97b, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100fa97e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fa980, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fa983, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100fa989, 0x6)   mov(edx, memd_a32(ds, 0x101c38fa));   /* mov edx, [0x101c38fa] */
    II(0x100fa98f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fa992, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100fa994, 0x1)   cwde();                               /* cwde */
    II(0x100fa995, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fa996, 0x6)   mov(ecx, memd_a32(ds, 0x101b8748));   /* mov ecx, [0x101b8748] */
    II(0x100fa99c, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100fa99f, 0x6)   mov(ebx, memd_a32(ds, 0x101b8746));   /* mov ebx, [0x101b8746] */
    II(0x100fa9a5, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100fa9a8, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100fa9ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fa9b0, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100fa9b3, 0x5)   calld(0x100d6144, -0x24874);          /* call 0x100d6144 */
    II(0x100fa9b8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100fa9bc, 0x7)   imul(eax, memd_a32(ds, 0x101c38c4));  /* imul eax, [0x101c38c4] */
    II(0x100fa9c3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fa9c6, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100fa9c9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100fa9cd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x100fa9d0, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fa9d2, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x100fa9d5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100fa9d9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100fa9dc, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fa9de, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x100fa9e1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100fa9e5, 0x3)   sub(memd_a32(ss, ebp - 0x28), eax);   /* sub [ebp-0x28], eax */
    II(0x100fa9e8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100fa9ec, 0x3)   sub(memd_a32(ss, ebp - 0x24), eax);   /* sub [ebp-0x24], eax */
    II(0x100fa9ef, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100fa9f2, 0x5)   calld(0x100ff562, 0x4b6b);            /* call 0x100ff562 */
l_0x100fa9f7:
    II(0x100fa9f7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100fa9f9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100fa9fa, 0x1)   popd(edi);                            /* pop edi */
    II(0x100fa9fb, 0x1)   popd(esi);                            /* pop esi */
    II(0x100fa9fc, 0x1)   retd();                               /* ret */
FUNC_END

