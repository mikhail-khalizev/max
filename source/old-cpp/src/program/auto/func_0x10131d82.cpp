FUNC_BEGIN(0x10131d82, 0xe0e8ea2e3e88e621, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0xc6, 0x3f, 0x3, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xc8, 0xe8, 0x80, 0xc7, 0xf9, 0xff, 0xe8, 0xa7, 0x41, 0x3, 0, 0x89, 0x45, 0xe0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xb, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xcc, 0xe8, 0x56, 0xc7, 0xf9, 0xff, 0xe8, 0x7d, 0x41, 0x3, 0, 0x89, 0x45, 0xe4, 0xeb, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xf, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd0, 0xe8, 0x2c, 0xc7, 0xf9, 0xff, 0xe8, 0x53, 0x41, 0x3, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x13, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd4, 0xe8, 0xfd, 0x5e, 0xfa, 0xff, 0xe8, 0x29, 0x41, 0x3, 0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x17, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd8, 0xe8, 0xd3, 0x5e, 0xfa, 0xff, 0xe8, 0xff, 0x40, 0x3, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1b, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xdc, 0xe8, 0xa9, 0x5e, 0xfa, 0xff, 0xe8, 0xd5, 0x40, 0x3, 0, 0x89, 0x45, 0xf4, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10131d82, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x10131d87, 0x5)   calld(sys_check_available_stack_size, 0x33fc6); /* call 0x10165d52 */
    II(0x10131d8c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10131d8d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10131d8e, 0x1)   pushd(esi);                           /* push esi */
    II(0x10131d8f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10131d90, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10131d91, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10131d93, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x10131d99, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10131d9c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x10131d9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10131da2, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10131da5, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10131da8, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x10131dac, 0x2)   jzd(0x10131dc2, 0x14);                /* jz 0x10131dc2 */
    II(0x10131dae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10131db0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10131db3, 0x5)   calld(my_dtor_d2, -0x63880);          /* call 0x100ce538 */
    II(0x10131db8, 0x5)   calld(sys_delete, 0x341a7);           /* call 0x10165f64 */
    II(0x10131dbd, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10131dc0, 0x2)   jmpd(0x10131dc9, 0x7);                /* jmp 0x10131dc9 */
l_0x10131dc2:
    II(0x10131dc2, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x10131dc9:
    II(0x10131dc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10131dcc, 0x3)   mov(eax, memd_a32(ds, eax + 0xb));    /* mov eax, [eax+0xb] */
    II(0x10131dcf, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10131dd2, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x10131dd6, 0x2)   jzd(0x10131dec, 0x14);                /* jz 0x10131dec */
    II(0x10131dd8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10131dda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10131ddd, 0x5)   calld(my_dtor_d2, -0x638aa);          /* call 0x100ce538 */
    II(0x10131de2, 0x5)   calld(sys_delete, 0x3417d);           /* call 0x10165f64 */
    II(0x10131de7, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10131dea, 0x2)   jmpd(0x10131df3, 0x7);                /* jmp 0x10131df3 */
l_0x10131dec:
    II(0x10131dec, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x10131df3:
    II(0x10131df3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10131df6, 0x3)   mov(eax, memd_a32(ds, eax + 0xf));    /* mov eax, [eax+0xf] */
    II(0x10131df9, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10131dfc, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x10131e00, 0x2)   jzd(0x10131e16, 0x14);                /* jz 0x10131e16 */
    II(0x10131e02, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10131e04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10131e07, 0x5)   calld(my_dtor_d2, -0x638d4);          /* call 0x100ce538 */
    II(0x10131e0c, 0x5)   calld(sys_delete, 0x34153);           /* call 0x10165f64 */
    II(0x10131e11, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10131e14, 0x2)   jmpd(0x10131e1d, 0x7);                /* jmp 0x10131e1d */
l_0x10131e16:
    II(0x10131e16, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x10131e1d:
    II(0x10131e1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10131e20, 0x3)   mov(eax, memd_a32(ds, eax + 0x13));   /* mov eax, [eax+0x13] */
    II(0x10131e23, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10131e26, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x10131e2a, 0x2)   jzd(0x10131e40, 0x14);                /* jz 0x10131e40 */
    II(0x10131e2c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10131e2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10131e31, 0x5)   calld(my_dtor_d3, -0x5a103);          /* call 0x100d7d33 */
    II(0x10131e36, 0x5)   calld(sys_delete, 0x34129);           /* call 0x10165f64 */
    II(0x10131e3b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10131e3e, 0x2)   jmpd(0x10131e47, 0x7);                /* jmp 0x10131e47 */
l_0x10131e40:
    II(0x10131e40, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x10131e47:
    II(0x10131e47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10131e4a, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x10131e4d, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10131e50, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x10131e54, 0x2)   jzd(0x10131e6a, 0x14);                /* jz 0x10131e6a */
    II(0x10131e56, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10131e58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10131e5b, 0x5)   calld(my_dtor_d3, -0x5a12d);          /* call 0x100d7d33 */
    II(0x10131e60, 0x5)   calld(sys_delete, 0x340ff);           /* call 0x10165f64 */
    II(0x10131e65, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10131e68, 0x2)   jmpd(0x10131e71, 0x7);                /* jmp 0x10131e71 */
l_0x10131e6a:
    II(0x10131e6a, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x10131e71:
    II(0x10131e71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10131e74, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x10131e77, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10131e7a, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x10131e7e, 0x2)   jzd(0x10131e94, 0x14);                /* jz 0x10131e94 */
    II(0x10131e80, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10131e82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10131e85, 0x5)   calld(my_dtor_d3, -0x5a157);          /* call 0x100d7d33 */
    II(0x10131e8a, 0x5)   calld(sys_delete, 0x340d5);           /* call 0x10165f64 */
    II(0x10131e8f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10131e92, 0x2)   jmpd(0x10131e9b, 0x7);                /* jmp 0x10131e9b */
l_0x10131e94:
    II(0x10131e94, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
l_0x10131e9b:
    II(0x10131e9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10131e9e, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x10131ea1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10131ea4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10131ea6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10131ea7, 0x1)   popd(edi);                            /* pop edi */
    II(0x10131ea8, 0x1)   popd(esi);                            /* pop esi */
    II(0x10131ea9, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10131eaa, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10131eab, 0x1)   retd();                               /* ret */
FUNC_END

