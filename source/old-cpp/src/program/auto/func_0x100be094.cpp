FUNC_BEGIN(0x100be094, 0xac2c98d8229ec283, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xb4, 0x7c, 0xa, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x7f, 0x82, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0xf5, 0x83, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x2b, 0x8b, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x9a, 0xcc, 0x7, 0, 0x84, 0xc0, 0x74, 0x58, 0x8d, 0x45, 0xf4, 0xe8, 0xbd, 0x82, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x11, 0x8d, 0x45, 0xf4, 0xe8, 0xda, 0x82, 0xfb, 0xff, 0xe8, 0xdc, 0x4d, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xf4, 0xe8, 0x93, 0x82, 0xfb, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x16, 0x8d, 0x45, 0xf4, 0xe8, 0xb1, 0x82, 0xfb, 0xff, 0xbb, 0x80, 0x31, 0x1c, 0x10, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x1f, 0x64, 0xfe, 0xff, 0xeb, 0x92, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x2f, 0x7e, 0xfb, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100be094, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100be099, 0x5)   calld(sys_check_available_stack_size, 0xa7cb4); /* call 0x10165d52 */
    II(0x100be09e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100be09f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100be0a0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100be0a1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100be0a2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100be0a3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100be0a5, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100be0ab, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100be0ae, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100be0b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be0b4, 0x5)   calld(0x10076338, -0x47d81);          /* call 0x10076338 */
    II(0x100be0b9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100be0bb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100be0be, 0x5)   calld(0x100764b8, -0x47c0b);          /* call 0x100764b8 */
    II(0x100be0c3, 0x2)   jmpd(0x100be0cd, 0x8);                /* jmp 0x100be0cd */
l_0x100be0c5:
    II(0x100be0c5, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100be0c8, 0x5)   calld(0x10076bf8, -0x474d5);          /* call 0x10076bf8 */
l_0x100be0cd:
    II(0x100be0cd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be0cf, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100be0d2, 0x5)   calld(0x1013ad71, 0x7cc9a);           /* call 0x1013ad71 */
    II(0x100be0d7, 0x2)   test(al, al);                         /* test al, al */
    II(0x100be0d9, 0x2)   jzd(0x100be133, 0x58);                /* jz 0x100be133 */
    II(0x100be0db, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100be0de, 0x5)   calld(0x100763a0, -0x47d43);          /* call 0x100763a0 */
    II(0x100be0e3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be0e5, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100be0e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100be0eb, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100be0ee, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100be0f0, 0x2)   jnzd(0x100be103, 0x11);               /* jnz 0x100be103 */
    II(0x100be0f2, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100be0f5, 0x5)   calld(0x100763d4, -0x47d26);          /* call 0x100763d4 */
    II(0x100be0fa, 0x5)   calld(0x100a2edb, -0x1b224);          /* call 0x100a2edb */
    II(0x100be0ff, 0x2)   test(al, al);                         /* test al, al */
    II(0x100be101, 0x2)   jnzd(0x100be105, 0x2);                /* jnz 0x100be105 */
l_0x100be103:
    II(0x100be103, 0x2)   jmpd(0x100be119, 0x14);               /* jmp 0x100be119 */
l_0x100be105:
    II(0x100be105, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100be108, 0x5)   calld(0x100763a0, -0x47d6d);          /* call 0x100763a0 */
    II(0x100be10d, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100be110, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100be115, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100be117, 0x2)   jnzd(0x100be11b, 0x2);                /* jnz 0x100be11b */
l_0x100be119:
    II(0x100be119, 0x2)   jmpd(0x100be131, 0x16);               /* jmp 0x100be131 */
l_0x100be11b:
    II(0x100be11b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100be11e, 0x5)   calld(0x100763d4, -0x47d4f);          /* call 0x100763d4 */
    II(0x100be123, 0x5)   mov(ebx, 0x101c3180);                 /* mov ebx, 0x101c3180 */
    II(0x100be128, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100be12a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100be12c, 0x5)   calld(0x100a4550, -0x19be1);          /* call 0x100a4550 */
l_0x100be131:
    II(0x100be131, 0x2)   jmpd(0x100be0c5, -0x6e);              /* jmp 0x100be0c5 */
l_0x100be133:
    II(0x100be133, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be135, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100be138, 0x5)   calld(0x10075f6c, -0x481d1);          /* call 0x10075f6c */
    II(0x100be13d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100be13f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100be140, 0x1)   popd(edi);                            /* pop edi */
    II(0x100be141, 0x1)   popd(esi);                            /* pop esi */
    II(0x100be142, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100be143, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100be144, 0x1)   retd();                               /* ret */
FUNC_END

