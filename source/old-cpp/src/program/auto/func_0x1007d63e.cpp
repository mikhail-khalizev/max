FUNC_BEGIN(0x1007d63e, 0xbc53400eb5d4aaf1, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xa, 0x87, 0xe, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xe, 0xe8, 0xf3, 0xdc, 0, 0, 0x66, 0x3b, 0x45, 0xf4, 0x7e, 0x38, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xe, 0xe8, 0x9e, 0xdb, 0, 0, 0xf, 0xbf, 0, 0xe8, 0x68, 0x8, 0x5, 0, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0xf, 0xbf, 0, 0x85, 0xc0, 0x7e, 0xc, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x66, 0xff, 0x8, 0xeb, 0xb1, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1007d63e, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1007d643, 0x5)   calld(sys_check_available_stack_size, 0xe870a); /* call 0x10165d52 */
    II(0x1007d648, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007d649, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007d64a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007d64b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007d64c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007d64d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007d64f, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1007d655, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1007d658, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1007d65b, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1007d662, 0x2)   jmpd(0x1007d66a, 0x6);                /* jmp 0x1007d66a */
l_0x1007d664:
    II(0x1007d664, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007d667, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1007d66a:
    II(0x1007d66a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d66d, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1007d670, 0x5)   calld(my_2_get_count, 0xdcf3);        /* call 0x1008b368 */
    II(0x1007d675, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x1007d679, 0x2)   jled(0x1007d6b3, 0x38);               /* jle 0x1007d6b3 */
    II(0x1007d67b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1007d67f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d682, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1007d685, 0x5)   calld(0x1008b228, 0xdb9e);            /* call 0x1008b228 */
    II(0x1007d68a, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1007d68d, 0x5)   calld(0x100cdefa, 0x50868);           /* call 0x100cdefa */
    II(0x1007d692, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007d695, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1007d699, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1007d69b, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1007d69e, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1007d6a1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007d6a3, 0x2)   jled(0x1007d6b1, 0xc);                /* jle 0x1007d6b1 */
    II(0x1007d6a5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1007d6a9, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1007d6ab, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1007d6ae, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
l_0x1007d6b1:
    II(0x1007d6b1, 0x2)   jmpd(0x1007d664, -0x4f);              /* jmp 0x1007d664 */
l_0x1007d6b3:
    II(0x1007d6b3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007d6b5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007d6b6, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007d6b7, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007d6b8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007d6b9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1007d6ba, 0x1)   retd();                               /* ret */
FUNC_END

