FUNC_BEGIN(0x10113c12, 0xb417bdc09598dcaa, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x36, 0x21, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xb8, 0x96, 0x1, 0, 0, 0, 0x74, 0x2d, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x96, 0x1, 0, 0, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0x82, 0x74, 0xfd, 0xff, 0xe8, 0xa, 0x23, 0x5, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xb8, 0x9a, 0x1, 0, 0, 0, 0x74, 0x2d, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x9a, 0x1, 0, 0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0xe8, 0x49, 0x74, 0xfd, 0xff, 0xe8, 0xd1, 0x22, 0x5, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xc7, 0x45, 0xf8, 0x18, 0, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0x43, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x83, 0x78, 0x16, 0, 0x74, 0x31, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe4, 0xe8, 0x58, 0xa8, 0xfb, 0xff, 0xe8, 0x7f, 0x22, 0x5, 0, 0x89, 0x45, 0xe0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0xb3, 0xc7, 0x45, 0xf8, 0xe, 0, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0x49, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x83, 0xb8, 0x9d, 0x5, 0, 0, 0, 0x74, 0x34, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0x9d, 0x5, 0, 0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xdc, 0xe8, 0xf9, 0x3f, 0xfc, 0xff, 0xe8, 0x25, 0x22, 0x5, 0, 0x89, 0x45, 0xd8, 0xeb, 0x7, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0xad, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10113c12, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x10113c17, 0x5)   calld(sys_check_available_stack_size, 0x52136); /* call 0x10165d52 */
    II(0x10113c1c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10113c1d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10113c1e, 0x1)   pushd(edx);                           /* push edx */
    II(0x10113c1f, 0x1)   pushd(esi);                           /* push esi */
    II(0x10113c20, 0x1)   pushd(edi);                           /* push edi */
    II(0x10113c21, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10113c22, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10113c24, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x10113c2a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10113c2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113c30, 0x7)   cmp(memd_a32(ds, eax + 0x196), 0);    /* cmp dword [eax+0x196], 0x0 */
    II(0x10113c37, 0x2)   jzd(0x10113c66, 0x2d);                /* jz 0x10113c66 */
    II(0x10113c39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113c3c, 0x6)   mov(eax, memd_a32(ds, eax + 0x196));  /* mov eax, [eax+0x196] */
    II(0x10113c42, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10113c45, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x10113c49, 0x2)   jzd(0x10113c5f, 0x14);                /* jz 0x10113c5f */
    II(0x10113c4b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10113c4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10113c50, 0x5)   calld(my_dtor_d6, -0x28b7e);          /* call 0x100eb0d7 */
    II(0x10113c55, 0x5)   calld(sys_delete, 0x5230a);           /* call 0x10165f64 */
    II(0x10113c5a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10113c5d, 0x2)   jmpd(0x10113c66, 0x7);                /* jmp 0x10113c66 */
l_0x10113c5f:
    II(0x10113c5f, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x10113c66:
    II(0x10113c66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113c69, 0x7)   cmp(memd_a32(ds, eax + 0x19a), 0);    /* cmp dword [eax+0x19a], 0x0 */
    II(0x10113c70, 0x2)   jzd(0x10113c9f, 0x2d);                /* jz 0x10113c9f */
    II(0x10113c72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113c75, 0x6)   mov(eax, memd_a32(ds, eax + 0x19a));  /* mov eax, [eax+0x19a] */
    II(0x10113c7b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10113c7e, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x10113c82, 0x2)   jzd(0x10113c98, 0x14);                /* jz 0x10113c98 */
    II(0x10113c84, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10113c86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10113c89, 0x5)   calld(my_dtor_d6, -0x28bb7);          /* call 0x100eb0d7 */
    II(0x10113c8e, 0x5)   calld(sys_delete, 0x522d1);           /* call 0x10165f64 */
    II(0x10113c93, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10113c96, 0x2)   jmpd(0x10113c9f, 0x7);                /* jmp 0x10113c9f */
l_0x10113c98:
    II(0x10113c98, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x10113c9f:
    II(0x10113c9f, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x18);   /* mov dword [ebp-0x8], 0x18 */
l_0x10113ca6:
    II(0x10113ca6, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x10113ca9, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x10113cae, 0x2)   jzd(0x10113cf3, 0x43);                /* jz 0x10113cf3 */
    II(0x10113cb0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10113cb4, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113cb7, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113cba, 0x4)   cmp(memd_a32(ds, eax + 0x16), 0);     /* cmp dword [eax+0x16], 0x0 */
    II(0x10113cbe, 0x2)   jzd(0x10113cf1, 0x31);                /* jz 0x10113cf1 */
    II(0x10113cc0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10113cc4, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113cc7, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113cca, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10113ccd, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10113cd0, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x10113cd4, 0x2)   jzd(0x10113cea, 0x14);                /* jz 0x10113cea */
    II(0x10113cd6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10113cd8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10113cdb, 0x5)   calld(my_dtor_d2, -0x457a8);          /* call 0x100ce538 */
    II(0x10113ce0, 0x5)   calld(sys_delete, 0x5227f);           /* call 0x10165f64 */
    II(0x10113ce5, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10113ce8, 0x2)   jmpd(0x10113cf1, 0x7);                /* jmp 0x10113cf1 */
l_0x10113cea:
    II(0x10113cea, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x10113cf1:
    II(0x10113cf1, 0x2)   jmpd(0x10113ca6, -0x4d);              /* jmp 0x10113ca6 */
l_0x10113cf3:
    II(0x10113cf3, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0xe);    /* mov dword [ebp-0x8], 0xe */
l_0x10113cfa:
    II(0x10113cfa, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x10113cfd, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x10113d02, 0x2)   jzd(0x10113d4d, 0x49);                /* jz 0x10113d4d */
    II(0x10113d04, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10113d08, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113d0b, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113d0e, 0x7)   cmp(memd_a32(ds, eax + 0x59d), 0);    /* cmp dword [eax+0x59d], 0x0 */
    II(0x10113d15, 0x2)   jzd(0x10113d4b, 0x34);                /* jz 0x10113d4b */
    II(0x10113d17, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10113d1b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113d1e, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113d21, 0x6)   mov(eax, memd_a32(ds, eax + 0x59d));  /* mov eax, [eax+0x59d] */
    II(0x10113d27, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10113d2a, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x10113d2e, 0x2)   jzd(0x10113d44, 0x14);                /* jz 0x10113d44 */
    II(0x10113d30, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10113d32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10113d35, 0x5)   calld(my_dtor_d3, -0x3c007);          /* call 0x100d7d33 */
    II(0x10113d3a, 0x5)   calld(sys_delete, 0x52225);           /* call 0x10165f64 */
    II(0x10113d3f, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10113d42, 0x2)   jmpd(0x10113d4b, 0x7);                /* jmp 0x10113d4b */
l_0x10113d44:
    II(0x10113d44, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
l_0x10113d4b:
    II(0x10113d4b, 0x2)   jmpd(0x10113cfa, -0x53);              /* jmp 0x10113cfa */
l_0x10113d4d:
    II(0x10113d4d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10113d4f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10113d50, 0x1)   popd(edi);                            /* pop edi */
    II(0x10113d51, 0x1)   popd(esi);                            /* pop esi */
    II(0x10113d52, 0x1)   popd(edx);                            /* pop edx */
    II(0x10113d53, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10113d54, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10113d55, 0x1)   retd();                               /* ret */
FUNC_END

