FUNC_BEGIN(0x100defe7, 0x3562bf5eb769a2c7, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x61, 0x6d, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x7e, 0x9, 0x81, 0x7d, 0xfc, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x9e, 0x3, 0, 0, 0, 0x81, 0x7d, 0xfc, 0xf7, 0x3, 0, 0, 0x7c, 0x9, 0x81, 0x7d, 0xfc, 0x1, 0x4, 0, 0, 0x7c, 0x2, 0xeb, 0x27, 0x8b, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x99, 0xf3, 0xff, 0xff, 0xe8, 0x2d, 0x1b, 0, 0, 0x3c, 0x9, 0x75, 0xd, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x97, 0xfd, 0xff, 0xff, 0xeb, 0x39, 0x81, 0x7d, 0xfc, 0x1, 0x4, 0, 0, 0x7c, 0x9, 0x81, 0x7d, 0xfc, 0xb, 0x4, 0, 0, 0x7c, 0x2, 0xeb, 0x25, 0x8b, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x71, 0xf3, 0xff, 0xff, 0xe8, 0xf2, 0x1a, 0, 0, 0x3c, 0x9, 0x75, 0xd, 0xba, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x5c, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0xe9, 0x36, 0x1, 0, 0, 0xe8, 0x3, 0x7b, 0x3, 0, 0xe9, 0xa6, 0x1, 0, 0, 0xe8, 0xbf, 0x5d, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0xb8, 0x6, 0, 0, 0, 0xe8, 0x43, 0x6a, 0x2, 0, 0xe9, 0x8c, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xd3, 0x3, 0, 0, 0xe8, 0xee, 0xa, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x9d, 0x3, 0, 0, 0x1, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xec, 0xff, 0x52, 0x14, 0xe9, 0x5d, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xd3, 0x3, 0, 0, 0xe8, 0xbf, 0xa, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x9d, 0x3, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x14, 0xe9, 0x2e, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x6b, 0xf3, 0xff, 0xff, 0xe9, 0x21, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x40, 0xf4, 0xff, 0xff, 0xe9, 0x14, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xbf, 0x3, 0, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x58, 0x40, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xe4, 0xff, 0x53, 0xc, 0x84, 0xc0, 0x75, 0x1f, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xbb, 0x3, 0, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x58, 0x40, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xe0, 0xff, 0x53, 0xc, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x1f, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xdf, 0x3, 0, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x8b, 0x58, 0x27, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xdc, 0xff, 0x53, 0xc, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x34, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x8b, 0xbb, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x9f, 0, 0, 0, 0x81, 0x7d, 0xfc, 0x1, 0x4, 0, 0, 0x7c, 0x9, 0x81, 0x7d, 0xfc, 0xb, 0x4, 0, 0, 0x7c, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x47, 0xf9, 0xff, 0xff, 0xe9, 0x7a, 0, 0, 0, 0x81, 0x7d, 0xf0, 0x4c, 0x4, 0, 0, 0x72, 0x3a, 0x81, 0x7d, 0xf0, 0x4c, 0x4, 0, 0, 0xf, 0x86, 0xd8, 0xfe, 0xff, 0xff, 0x81, 0x7d, 0xf0, 0x4e, 0x4, 0, 0, 0x72, 0x1f, 0x81, 0x7d, 0xf0, 0x4e, 0x4, 0, 0, 0xf, 0x86, 0x20, 0xff, 0xff, 0xff, 0x81, 0x7d, 0xf0, 0x4f, 0x4, 0, 0, 0xf, 0x84, 0x20, 0xff, 0xff, 0xff, 0xe9, 0x28, 0xff, 0xff, 0xff, 0xe9, 0xda, 0xfe, 0xff, 0xff, 0x81, 0x7d, 0xf0, 0x19, 0x1, 0, 0, 0x72, 0x1f, 0x81, 0x7d, 0xf0, 0x19, 0x1, 0, 0, 0xf, 0x86, 0x71, 0xfe, 0xff, 0xff, 0x81, 0x7d, 0xf0, 0xe9, 0x3, 0, 0, 0xf, 0x84, 0x6e, 0xfe, 0xff, 0xff, 0xe9, 0xfb, 0xfe, 0xff, 0xff, 0x83, 0x7d, 0xf0, 0x3f, 0xf, 0x84, 0x5f, 0xfe, 0xff, 0xff, 0xe9, 0xec, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100defe7, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100defec, 0x5)   calld(sys_check_available_stack_size, 0x86d61); /* call 0x10165d52 */
    II(0x100deff1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100deff2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100deff3, 0x1)   pushd(esi);                           /* push esi */
    II(0x100deff4, 0x1)   pushd(edi);                           /* push edi */
    II(0x100deff5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100deff6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100deff8, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100deffe, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100df001, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100df004, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100df008, 0x2)   jled(0x100df013, 0x9);                /* jle 0x100df013 */
    II(0x100df00a, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x7000); /* cmp dword [ebp-0x4], 0x7000 */
    II(0x100df011, 0x2)   jld(0x100df015, 0x2);                 /* jl 0x100df015 */
l_0x100df013:
    II(0x100df013, 0x2)   jmpd(0x100df01f, 0xa);                /* jmp 0x100df01f */
l_0x100df015:
    II(0x100df015, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df018, 0x7)   mov(memb_a32(ds, eax + 0x39e), 0);    /* mov byte [eax+0x39e], 0x0 */
l_0x100df01f:
    II(0x100df01f, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x3f7);  /* cmp dword [ebp-0x4], 0x3f7 */
    II(0x100df026, 0x2)   jld(0x100df031, 0x9);                 /* jl 0x100df031 */
    II(0x100df028, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x401);  /* cmp dword [ebp-0x4], 0x401 */
    II(0x100df02f, 0x2)   jld(0x100df033, 0x2);                 /* jl 0x100df033 */
l_0x100df031:
    II(0x100df031, 0x2)   jmpd(0x100df05a, 0x27);               /* jmp 0x100df05a */
l_0x100df033:
    II(0x100df033, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df036, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100df039, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100df03c, 0x6)   mov(eax, memd_a32(ds, eax - 0xc67));  /* mov eax, [eax+0xfffff399] */
    II(0x100df042, 0x5)   calld(0x100e0b74, 0x1b2d);            /* call 0x100e0b74 */
    II(0x100df047, 0x2)   cmp(al, 0x9);                         /* cmp al, 0x9 */
    II(0x100df049, 0x2)   jnzd(0x100df058, 0xd);                /* jnz 0x100df058 */
    II(0x100df04b, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100df050, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df053, 0x5)   calld(0x100dedef, -0x269);            /* call 0x100dedef */
l_0x100df058:
    II(0x100df058, 0x2)   jmpd(0x100df093, 0x39);               /* jmp 0x100df093 */
l_0x100df05a:
    II(0x100df05a, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x401);  /* cmp dword [ebp-0x4], 0x401 */
    II(0x100df061, 0x2)   jld(0x100df06c, 0x9);                 /* jl 0x100df06c */
    II(0x100df063, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x40b);  /* cmp dword [ebp-0x4], 0x40b */
    II(0x100df06a, 0x2)   jld(0x100df06e, 0x2);                 /* jl 0x100df06e */
l_0x100df06c:
    II(0x100df06c, 0x2)   jmpd(0x100df093, 0x25);               /* jmp 0x100df093 */
l_0x100df06e:
    II(0x100df06e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df071, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100df074, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100df077, 0x6)   mov(eax, memd_a32(ds, eax - 0xc8f));  /* mov eax, [eax+0xfffff371] */
    II(0x100df07d, 0x5)   calld(0x100e0b74, 0x1af2);            /* call 0x100e0b74 */
    II(0x100df082, 0x2)   cmp(al, 0x9);                         /* cmp al, 0x9 */
    II(0x100df084, 0x2)   jnzd(0x100df093, 0xd);                /* jnz 0x100df093 */
    II(0x100df086, 0x5)   mov(edx, 0xffffffff);                 /* mov edx, 0xffffffff */
    II(0x100df08b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df08e, 0x5)   calld(0x100dedef, -0x2a4);            /* call 0x100dedef */
l_0x100df093:
    II(0x100df093, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df096, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100df099, 0x5)   jmpd(0x100df1d4, 0x136);              /* jmp 0x100df1d4 */
l_0x100df09e:
    II(0x100df09e, 0x5)   calld(0x10116ba6, 0x37b03);           /* call 0x10116ba6 */
    II(0x100df0a3, 0x5)   jmpd(0x100df24e, 0x1a6);              /* jmp 0x100df24e */
l_0x100df0a8:
    II(0x100df0a8, 0x5)   calld(0x100d4e6c, -0xa241);           /* call 0x100d4e6c */
    II(0x100df0ad, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100df0af, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100df0b1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df0b3, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x100df0b8, 0x5)   calld(0x10105b00, 0x26a43);           /* call 0x10105b00 */
    II(0x100df0bd, 0x5)   jmpd(0x100df24e, 0x18c);              /* jmp 0x100df24e */
l_0x100df0c2:
    II(0x100df0c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df0c5, 0x6)   mov(eax, memd_a32(ds, eax + 0x3d3));  /* mov eax, [eax+0x3d3] */
    II(0x100df0cb, 0x5)   calld(0x100cfbbe, -0xf512);           /* call 0x100cfbbe */
    II(0x100df0d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df0d3, 0x7)   mov(memb_a32(ds, eax + 0x39d), 0x1);  /* mov byte [eax+0x39d], 0x1 */
    II(0x100df0da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df0dd, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100df0e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100df0e3, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100df0e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100df0e9, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100df0ec, 0x5)   jmpd(0x100df24e, 0x15d);              /* jmp 0x100df24e */
l_0x100df0f1:
    II(0x100df0f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df0f4, 0x6)   mov(eax, memd_a32(ds, eax + 0x3d3));  /* mov eax, [eax+0x3d3] */
    II(0x100df0fa, 0x5)   calld(0x100cfbbe, -0xf541);           /* call 0x100cfbbe */
    II(0x100df0ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df102, 0x7)   mov(memb_a32(ds, eax + 0x39d), 0);    /* mov byte [eax+0x39d], 0x0 */
    II(0x100df109, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df10c, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100df10f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100df112, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100df115, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100df118, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100df11b, 0x5)   jmpd(0x100df24e, 0x12e);              /* jmp 0x100df24e */
l_0x100df120:
    II(0x100df120, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df123, 0x5)   calld(0x100de493, -0xc95);            /* call 0x100de493 */
    II(0x100df128, 0x5)   jmpd(0x100df24e, 0x121);              /* jmp 0x100df24e */
l_0x100df12d:
    II(0x100df12d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df130, 0x5)   calld(0x100de575, -0xbc0);            /* call 0x100de575 */
    II(0x100df135, 0x5)   jmpd(0x100df24e, 0x114);              /* jmp 0x100df24e */
l_0x100df13a:
    II(0x100df13a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df13d, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bf));  /* mov eax, [eax+0x3bf] */
    II(0x100df143, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100df146, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100df149, 0x3)   mov(ebx, memd_a32(ds, eax + 0x40));   /* mov ebx, [eax+0x40] */
    II(0x100df14c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x100df14f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100df152, 0x3)   calld_abs(memd_a32(ds, ebx + 0xc));   /* call dword near [ebx+0xc] */
    II(0x100df155, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df157, 0x2)   jnzd(0x100df178, 0x1f);               /* jnz 0x100df178 */
    II(0x100df159, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df15c, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bb));  /* mov eax, [eax+0x3bb] */
    II(0x100df162, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100df165, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100df168, 0x3)   mov(ebx, memd_a32(ds, eax + 0x40));   /* mov ebx, [eax+0x40] */
    II(0x100df16b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x100df16e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100df171, 0x3)   calld_abs(memd_a32(ds, ebx + 0xc));   /* call dword near [ebx+0xc] */
    II(0x100df174, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df176, 0x2)   jzd(0x100df17a, 0x2);                 /* jz 0x100df17a */
l_0x100df178:
    II(0x100df178, 0x2)   jmpd(0x100df199, 0x1f);               /* jmp 0x100df199 */
l_0x100df17a:
    II(0x100df17a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df17d, 0x6)   mov(eax, memd_a32(ds, eax + 0x3df));  /* mov eax, [eax+0x3df] */
    II(0x100df183, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100df186, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100df189, 0x3)   mov(ebx, memd_a32(ds, eax + 0x27));   /* mov ebx, [eax+0x27] */
    II(0x100df18c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x100df18f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100df192, 0x3)   calld_abs(memd_a32(ds, ebx + 0xc));   /* call dword near [ebx+0xc] */
    II(0x100df195, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df197, 0x2)   jzd(0x100df19b, 0x2);                 /* jz 0x100df19b */
l_0x100df199:
    II(0x100df199, 0x2)   jmpd(0x100df1cf, 0x34);               /* jmp 0x100df1cf */
l_0x100df19b:
    II(0x100df19b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100df19e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df1a1, 0x5)   calld(0x100dad31, -0x4475);           /* call 0x100dad31 */
    II(0x100df1a6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df1a8, 0x2)   jnzd(0x100df1b3, 0x9);                /* jnz 0x100df1b3 */
    II(0x100df1aa, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100df1ae, 0x5)   jmpd(0x100df252, 0x9f);               /* jmp 0x100df252 */
l_0x100df1b3:
    II(0x100df1b3, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x401);  /* cmp dword [ebp-0x4], 0x401 */
    II(0x100df1ba, 0x2)   jld(0x100df1c5, 0x9);                 /* jl 0x100df1c5 */
    II(0x100df1bc, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x40b);  /* cmp dword [ebp-0x4], 0x40b */
    II(0x100df1c3, 0x2)   jld(0x100df1c7, 0x2);                 /* jl 0x100df1c7 */
l_0x100df1c5:
    II(0x100df1c5, 0x2)   jmpd(0x100df1cf, 0x8);                /* jmp 0x100df1cf */
l_0x100df1c7:
    II(0x100df1c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100df1ca, 0x5)   calld(0x100deb16, -0x6b9);            /* call 0x100deb16 */
l_0x100df1cf:
    II(0x100df1cf, 0x5)   jmpd(0x100df24e, 0x7a);               /* jmp 0x100df24e */
l_0x100df1d4:
    II(0x100df1d4, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x44c); /* cmp dword [ebp-0x10], 0x44c */
    II(0x100df1db, 0x2)   jbd(0x100df217, 0x3a);                /* jb 0x100df217 */
    II(0x100df1dd, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x44c); /* cmp dword [ebp-0x10], 0x44c */
    II(0x100df1e4, 0x6)   jbed(0x100df0c2, -0x128);             /* jbe dword 0x100df0c2 */
    II(0x100df1ea, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x44e); /* cmp dword [ebp-0x10], 0x44e */
    II(0x100df1f1, 0x2)   jbd(0x100df212, 0x1f);                /* jb 0x100df212 */
    II(0x100df1f3, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x44e); /* cmp dword [ebp-0x10], 0x44e */
    II(0x100df1fa, 0x6)   jbed(0x100df120, -0xe0);              /* jbe dword 0x100df120 */
    II(0x100df200, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x44f); /* cmp dword [ebp-0x10], 0x44f */
    II(0x100df207, 0x6)   jzd(0x100df12d, -0xe0);               /* jz dword 0x100df12d */
    II(0x100df20d, 0x5)   jmpd(0x100df13a, -0xd8);              /* jmp 0x100df13a */
l_0x100df212:
    II(0x100df212, 0x5)   jmpd(0x100df0f1, -0x126);             /* jmp 0x100df0f1 */
l_0x100df217:
    II(0x100df217, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x119); /* cmp dword [ebp-0x10], 0x119 */
    II(0x100df21e, 0x2)   jbd(0x100df23f, 0x1f);                /* jb 0x100df23f */
    II(0x100df220, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x119); /* cmp dword [ebp-0x10], 0x119 */
    II(0x100df227, 0x6)   jbed(0x100df09e, -0x18f);             /* jbe dword 0x100df09e */
    II(0x100df22d, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x3e9); /* cmp dword [ebp-0x10], 0x3e9 */
    II(0x100df234, 0x6)   jzd(0x100df0a8, -0x192);              /* jz dword 0x100df0a8 */
    II(0x100df23a, 0x5)   jmpd(0x100df13a, -0x105);             /* jmp 0x100df13a */
l_0x100df23f:
    II(0x100df23f, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0x3f);  /* cmp dword [ebp-0x10], 0x3f */
    II(0x100df243, 0x6)   jzd(0x100df0a8, -0x1a1);              /* jz dword 0x100df0a8 */
    II(0x100df249, 0x5)   jmpd(0x100df13a, -0x114);             /* jmp 0x100df13a */
l_0x100df24e:
    II(0x100df24e, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x100df252:
    II(0x100df252, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100df255, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100df257, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100df258, 0x1)   popd(edi);                            /* pop edi */
    II(0x100df259, 0x1)   popd(esi);                            /* pop esi */
    II(0x100df25a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100df25b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100df25c, 0x1)   retd();                               /* ret */
FUNC_END

