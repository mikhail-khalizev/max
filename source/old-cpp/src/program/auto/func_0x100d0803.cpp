FUNC_BEGIN(0x100d0803, 0x22b49e260ce0540d, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0x45, 0x55, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xc, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x4, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0xff, 0x70, 0x1a, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2a, 0xf, 0xbf, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2a, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2a, 0xf, 0xbf, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2a, 0x83, 0xc0, 0x8, 0x50, 0xe8, 0x4e, 0xa3, 0x9, 0, 0x83, 0xc4, 0x18, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xd1, 0x99, 0x9, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x28, 0x7d, 0x1f, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x22, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xb8, 0xaa, 0xfb, 0xff, 0x98, 0x39, 0xc2, 0x7c, 0x2, 0xeb, 0x46, 0xb8, 0xa2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0x8b, 0x45, 0xf8, 0xc1, 0xe0, 0x5, 0x98, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x24, 0x3, 0x45, 0xf8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x44, 0xa9, 0xfb, 0xff, 0xf, 0xbf, 0x18, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x12, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xe8, 0xe1, 0xae, 0x5, 0, 0xeb, 0x87, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x24, 0x7c, 0x21, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x22, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x24, 0xc1, 0xf8, 0x10, 0x39, 0xd0, 0x7c, 0x5, 0xe9, 0xa3, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x24, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xe1, 0xa8, 0xfb, 0xff, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xba, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x26, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x24, 0xc1, 0xe0, 0x5, 0x89, 0x45, 0xec, 0xe8, 0x44, 0x47, 0, 0, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xe8, 0xff, 0x75, 0xe8, 0x8b, 0x45, 0xf0, 0x8b, 0, 0x83, 0xe0, 0x10, 0x89, 0x45, 0xe4, 0xff, 0x75, 0xe4, 0x8b, 0x45, 0xf0, 0xf6, 0, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xe0, 0, 0, 0x4, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0x2, 0, 0xff, 0x75, 0xe0, 0x8b, 0x45, 0xec, 0x5, 0x20, 0, 0, 0, 0x98, 0x50, 0xb8, 0x20, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x4d, 0xec, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x12, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xe8, 0x9d, 0x18, 0x3, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x22, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x1f, 0xe8, 0xfc, 0x47, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x13, 0x48, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x38, 0xe8, 0x7c, 0xf0, 0xff, 0xff, 0xeb, 0x14, 0xe8, 0xbd, 0x47, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x38, 0xe8, 0xf0, 0xf0, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x22, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x33, 0xa9, 0xfb, 0xff, 0x98, 0x39, 0xc2, 0x7d, 0x1f, 0xe8, 0xa5, 0x47, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xbc, 0x47, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3c, 0xe8, 0x25, 0xf0, 0xff, 0xff, 0xeb, 0x14, 0xe8, 0x66, 0x47, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3c, 0xe8, 0x99, 0xf0, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0x2a, 0x6a, 0x9, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100d0803, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x100d0808, 0x5)   calld(sys_check_available_stack_size, 0x95545); /* call 0x10165d52 */
    II(0x100d080d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d080e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d080f, 0x1)   pushd(edx);                           /* push edx */
    II(0x100d0810, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d0811, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d0812, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d0813, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d0815, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100d081b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100d081e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0821, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x100d0825, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d0828, 0x4)   sub(ax, memw_a32(ds, edx + 0x4));     /* sub ax, [edx+0x4] */
    II(0x100d082c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d082f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0832, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100d0835, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0838, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0839, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d083c, 0x3)   pushd(memd_a32(ds, eax + 0x1a));      /* push dword [eax+0x1a] */
    II(0x100d083f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0842, 0x3)   mov(eax, memd_a32(ds, eax + 0x2a));   /* mov eax, [eax+0x2a] */
    II(0x100d0845, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100d0848, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0849, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d084c, 0x3)   mov(eax, memd_a32(ds, eax + 0x2a));   /* mov eax, [eax+0x2a] */
    II(0x100d084f, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100d0851, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0854, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0855, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0858, 0x3)   mov(eax, memd_a32(ds, eax + 0x2a));   /* mov eax, [eax+0x2a] */
    II(0x100d085b, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100d085e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d085f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0862, 0x3)   mov(eax, memd_a32(ds, eax + 0x2a));   /* mov eax, [eax+0x2a] */
    II(0x100d0865, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100d0868, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0869, 0x5)   calld(/* sys */ 0x1016abbc, 0x9a34e); /* call 0x1016abbc */
    II(0x100d086e, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100d0871, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100d0876, 0x5)   calld(/* sys */ 0x1016a24c, 0x999d1); /* call 0x1016a24c */
    II(0x100d087b, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100d0882, 0x2)   jmpd(0x100d088a, 0x6);                /* jmp 0x100d088a */
l_0x100d0884:
    II(0x100d0884, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0887, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100d088a:
    II(0x100d088a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d088d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d0890, 0x4)   cmp(ax, memw_a32(ds, edx + 0x28));    /* cmp ax, [edx+0x28] */
    II(0x100d0894, 0x2)   jged(0x100d08b5, 0x1f);               /* jge 0x100d08b5 */
    II(0x100d0896, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0899, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x100d089c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d089f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100d08a3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d08a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d08a8, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d08ab, 0x5)   calld(my_2_get_count, -0x45548);      /* call 0x1008b368 */
    II(0x100d08b0, 0x1)   cwde();                               /* cwde */
    II(0x100d08b1, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d08b3, 0x2)   jld(0x100d08b7, 0x2);                 /* jl 0x100d08b7 */
l_0x100d08b5:
    II(0x100d08b5, 0x2)   jmpd(0x100d08fd, 0x46);               /* jmp 0x100d08fd */
l_0x100d08b7:
    II(0x100d08b7, 0x5)   mov(eax, 0xa2);                       /* mov eax, 0xa2 */
    II(0x100d08bc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d08bd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100d08c1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d08c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d08c5, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x100d08c8, 0x1)   cwde();                               /* cwde */
    II(0x100d08c9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d08ca, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100d08cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d08cf, 0x4)   mov(ax, memw_a32(ds, eax + 0x24));    /* mov ax, [eax+0x24] */
    II(0x100d08d3, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100d08d6, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100d08d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d08dc, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d08df, 0x5)   calld(0x1008b228, -0x456bc);          /* call 0x1008b228 */
    II(0x100d08e4, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100d08e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d08ea, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x100d08ed, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d08f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d08f3, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100d08f6, 0x5)   calld(0x1012b7dc, 0x5aee1);           /* call 0x1012b7dc */
    II(0x100d08fb, 0x2)   jmpd(0x100d0884, -0x79);              /* jmp 0x100d0884 */
l_0x100d08fd:
    II(0x100d08fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0900, 0x4)   mov(dx, memw_a32(ds, eax + 0x26));    /* mov dx, [eax+0x26] */
//    II(0x100d0904, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0907, 0x4)   cmp(dx, memw_a32(ds, eax + 0x24));    /* cmp dx, [eax+0x24] */
    II(0x100d090b, 0x2)   jld(0x100d092e, 0x21);                /* jl 0x100d092e */
    II(0x100d090d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0910, 0x3)   mov(edx, memd_a32(ds, eax + 0x22));   /* mov edx, [eax+0x22] */
    II(0x100d0913, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d0916, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0919, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x100d091c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d091f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d0921, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0924, 0x3)   mov(eax, memd_a32(ds, eax + 0x24));   /* mov eax, [eax+0x24] */
    II(0x100d0927, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d092a, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100d092c, 0x2)   jld(0x100d0933, 0x5);                 /* jl 0x100d0933 */
l_0x100d092e:
    II(0x100d092e, 0x5)   jmpd(0x100d09d6, 0xa3);               /* jmp 0x100d09d6 */
l_0x100d0933:
    II(0x100d0933, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0936, 0x3)   mov(edx, memd_a32(ds, eax + 0x24));   /* mov edx, [eax+0x24] */
    II(0x100d0939, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d093c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d093f, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d0942, 0x5)   calld(0x1008b228, -0x4571f);          /* call 0x1008b228 */
    II(0x100d0947, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100d094a, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100d094d, 0x5)   mov(edx, 0x101c81c0);                 /* mov edx, 0x101c81c0 */
    II(0x100d0952, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d0954, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x100d0957, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d095a, 0x4)   mov(ax, memw_a32(ds, eax + 0x26));    /* mov ax, [eax+0x26] */
    II(0x100d095e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d0961, 0x4)   sub(ax, memw_a32(ds, edx + 0x24));    /* sub ax, [edx+0x24] */
    II(0x100d0965, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x100d0968, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100d096b, 0x5)   calld(0x100d50b4, 0x4744);            /* call 0x100d50b4 */
    II(0x100d0970, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100d0975, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100d0978, 0x3)   pushd(memd_a32(ss, ebp - 0x18));      /* push dword [ebp-0x18] */
    II(0x100d097b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d097e, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100d0980, 0x3)   and_(eax, 0x10);                      /* and eax, 0x10 */
    II(0x100d0983, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d0986, 0x3)   pushd(memd_a32(ss, ebp - 0x1c));      /* push dword [ebp-0x1c] */
    II(0x100d0989, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d098c, 0x3)   test(memb_a32(ds, eax), 0x10);        /* test byte [eax], 0x10 */
    II(0x100d098f, 0x2)   jzd(0x100d099a, 0x9);                 /* jz 0x100d099a */
    II(0x100d0991, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x40000); /* mov dword [ebp-0x20], 0x40000 */
    II(0x100d0998, 0x2)   jmpd(0x100d09a1, 0x7);                /* jmp 0x100d09a1 */
l_0x100d099a:
    II(0x100d099a, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x20000); /* mov dword [ebp-0x20], 0x20000 */
l_0x100d09a1:
    II(0x100d09a1, 0x3)   pushd(memd_a32(ss, ebp - 0x20));      /* push dword [ebp-0x20] */
    II(0x100d09a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d09a7, 0x5)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100d09ac, 0x1)   cwde();                               /* cwde */
    II(0x100d09ad, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d09ae, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100d09b3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d09b4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100d09b8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d09b9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d09bb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d09bc, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x14)); /* movsx ecx, word [ebp-0x14] */
    II(0x100d09c0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100d09c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d09c5, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x100d09c8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d09cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d09ce, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100d09d1, 0x5)   calld(0x10102273, 0x3189d);           /* call 0x10102273 */
l_0x100d09d6:
    II(0x100d09d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d09d9, 0x3)   mov(eax, memd_a32(ds, eax + 0x22));   /* mov eax, [eax+0x22] */
    II(0x100d09dc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d09df, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d09e1, 0x2)   jled(0x100d0a02, 0x1f);               /* jle 0x100d0a02 */
    II(0x100d09e3, 0x5)   calld(0x100d51e4, 0x47fc);            /* call 0x100d51e4 */
    II(0x100d09e8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100d09ea, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100d09ec, 0x5)   calld(0x100d5204, 0x4813);            /* call 0x100d5204 */
    II(0x100d09f1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d09f3, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100d09f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d09f8, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x100d09fb, 0x5)   calld(0x100cfa7c, -0xf84);            /* call 0x100cfa7c */
    II(0x100d0a00, 0x2)   jmpd(0x100d0a16, 0x14);               /* jmp 0x100d0a16 */
l_0x100d0a02:
    II(0x100d0a02, 0x5)   calld(0x100d51c4, 0x47bd);            /* call 0x100d51c4 */
    II(0x100d0a07, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d0a09, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100d0a0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0a0e, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x100d0a11, 0x5)   calld(0x100cfb06, -0xf10);            /* call 0x100cfb06 */
l_0x100d0a16:
    II(0x100d0a16, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0a19, 0x3)   mov(edx, memd_a32(ds, eax + 0x22));   /* mov edx, [eax+0x22] */
    II(0x100d0a1c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d0a1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0a22, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x100d0a25, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0a28, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d0a2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0a2d, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d0a30, 0x5)   calld(my_2_get_count, -0x456cd);      /* call 0x1008b368 */
    II(0x100d0a35, 0x1)   cwde();                               /* cwde */
    II(0x100d0a36, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d0a38, 0x2)   jged(0x100d0a59, 0x1f);               /* jge 0x100d0a59 */
    II(0x100d0a3a, 0x5)   calld(0x100d51e4, 0x47a5);            /* call 0x100d51e4 */
    II(0x100d0a3f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100d0a41, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100d0a43, 0x5)   calld(0x100d5204, 0x47bc);            /* call 0x100d5204 */
    II(0x100d0a48, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d0a4a, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100d0a4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0a4f, 0x3)   mov(eax, memd_a32(ds, eax + 0x3c));   /* mov eax, [eax+0x3c] */
    II(0x100d0a52, 0x5)   calld(0x100cfa7c, -0xfdb);            /* call 0x100cfa7c */
    II(0x100d0a57, 0x2)   jmpd(0x100d0a6d, 0x14);               /* jmp 0x100d0a6d */
l_0x100d0a59:
    II(0x100d0a59, 0x5)   calld(0x100d51c4, 0x4766);            /* call 0x100d51c4 */
    II(0x100d0a5e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d0a60, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100d0a62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0a65, 0x3)   mov(eax, memd_a32(ds, eax + 0x3c));   /* mov eax, [eax+0x3c] */
    II(0x100d0a68, 0x5)   calld(0x100cfb06, -0xf67);            /* call 0x100cfb06 */
l_0x100d0a6d:
    II(0x100d0a6d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d0a70, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x100d0a73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0a76, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100d0a79, 0x5)   calld(sys_display_draw_1, 0x96a2a);   /* call 0x101674a8 */
    II(0x100d0a7e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d0a80, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d0a81, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d0a82, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d0a83, 0x1)   popd(edx);                            /* pop edx */
    II(0x100d0a84, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d0a85, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d0a86, 0x1)   retd();                               /* ret */
FUNC_END

