FUNC_BEGIN(0x100faa9e, 0xeef7b800cca47d34, 0x20, ({0x68, 0xcc, 0, 0, 0, 0xe8, 0xaa, 0xb2, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x98, 0, 0, 0, 0x83, 0x3d, 0x50, 0x94, 0x1c, 0x10, 0, 0x74, 0x9, 0x80, 0x3d, 0x88, 0x38, 0x1c, 0x10, 0, 0x74, 0x5, 0xe9, 0x66, 0x9, 0, 0, 0xe8, 0x22, 0xd8, 0x4, 0, 0x89, 0x45, 0xf8, 0x8b, 0x15, 0x84, 0x39, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x86, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x9, 0xd0, 0x85, 0xc0, 0x74, 0x3c, 0xe8, 0xdb, 0x7f, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0x8b, 0x1d, 0x86, 0x39, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0x8b, 0x15, 0x84, 0x39, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xb8, 0x2, 0, 0, 0, 0xe8, 0xf, 0x6b, 0, 0, 0x66, 0xc7, 0x5, 0x88, 0x39, 0x1c, 0x10, 0, 0, 0x66, 0xa1, 0x88, 0x39, 0x1c, 0x10, 0x66, 0xa3, 0x86, 0x39, 0x1c, 0x10, 0xeb, 0x15, 0x66, 0xa1, 0x8a, 0x39, 0x1c, 0x10, 0x66, 0xa3, 0x8c, 0x39, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0x8e, 0x39, 0x1c, 0x10, 0, 0, 0xe8, 0xf4, 0xb6, 0xfe, 0xff, 0x80, 0x3d, 0x1a, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0xe4, 0x8, 0, 0, 0x80, 0x3d, 0x1b, 0x39, 0x1c, 0x10, 0, 0x74, 0x52, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x7, 0x74, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xc, 0x75, 0x2, 0xeb, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xd, 0x75, 0x9, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0, 0xeb, 0x2c, 0xb8, 0x23, 0, 0, 0, 0xe8, 0xb5, 0xdc, 0xfe, 0xff, 0x89, 0x45, 0xf4, 0x68, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0xff, 0x70, 0x16, 0x6a, 0x70, 0x6a, 0x70, 0x6a, 0x70, 0xff, 0x35, 0xe0, 0x70, 0x1c, 0x10, 0xe8, 0x15, 0, 0x7, 0, 0x83, 0xc4, 0x18, 0x80, 0x3d, 0xa3, 0x38, 0x1c, 0x10, 0, 0xf, 0x84, 0x18, 0x1, 0, 0, 0xa1, 0xa4, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xe0, 0xa1, 0xa8, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xe4, 0xa1, 0xac, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xe8, 0xa1, 0xb0, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xec, 0xb8, 0x26, 0, 0, 0, 0xe8, 0x5c, 0xdc, 0xfe, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x15, 0x98, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0x2b, 0x10, 0x89, 0xd0, 0xf, 0xaf, 0x5, 0xc4, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x3, 0x5, 0xec, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xdc, 0xa1, 0x9a, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x8b, 0x55, 0xf4, 0x2b, 0x42, 0x4, 0xf, 0xaf, 0x5, 0xc4, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x3, 0x5, 0xf0, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x55, 0xdc, 0xa1, 0x9c, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x4b, 0xeb, 0xf8, 0xff, 0xa3, 0xa4, 0x38, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xd8, 0xa1, 0x9e, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x35, 0xeb, 0xf8, 0xff, 0xa3, 0xa8, 0x38, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xdc, 0xa1, 0x9c, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x17, 0xc2, 0xf7, 0xff, 0xa3, 0xac, 0x38, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xd8, 0xa1, 0x9e, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x1, 0xc2, 0xf7, 0xff, 0xa3, 0xb0, 0x38, 0x1c, 0x10, 0x8b, 0x55, 0xe0, 0xa1, 0xa4, 0x38, 0x1c, 0x10, 0xe8, 0xf7, 0xea, 0xf8, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x55, 0xe4, 0xa1, 0xa8, 0x38, 0x1c, 0x10, 0xe8, 0xe7, 0xea, 0xf8, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x55, 0xe8, 0xa1, 0xac, 0x38, 0x1c, 0x10, 0xe8, 0xcf, 0xc1, 0xf7, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x55, 0xec, 0xa1, 0xb0, 0x38, 0x1c, 0x10, 0xe8, 0xbf, 0xc1, 0xf7, 0xff, 0x89, 0x45, 0xec, 0x8d, 0x45, 0xe0, 0xe8, 0x9a, 0x48, 0, 0, 0xc6, 0x5, 0xa3, 0x38, 0x1c, 0x10, 0, 0xa0, 0x1d, 0x39, 0x1c, 0x10, 0x88, 0x45, 0xf0, 0x80, 0x7d, 0xf0, 0, 0x74, 0x22, 0x8d, 0x45, 0xc8, 0xe8, 0x18, 0xfd, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x1f, 0xd3, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0xa, 0x8d, 0x45, 0xc8, 0xe8, 0x69, 0x48, 0, 0, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x80, 0x4d, 0xfc, 0x1, 0x8d, 0x45, 0xb4, 0xe8, 0x29, 0xd1, 0xfe, 0xff, 0x89, 0x45, 0xb0, 0x80, 0x65, 0xfc, 0xfe, 0x31, 0xd2, 0x8a, 0x15, 0x8d, 0x38, 0x1c, 0x10, 0x8d, 0x45, 0xb4, 0xe8, 0x7c, 0xca, 0xfe, 0xff, 0xb8, 0x26, 0, 0, 0, 0xe8, 0x11, 0xdb, 0xfe, 0xff, 0x89, 0x45, 0xf4, 0x80, 0x3d, 0x8b, 0x38, 0x1c, 0x10, 0, 0x74, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0xb, 0x74, 0x2, 0xeb, 0xd, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x3a, 0x5, 0xda, 0x37, 0x1c, 0x10, 0x75, 0x2, 0xeb, 0x2f, 0xe8, 0x24, 0xcf, 0xfe, 0xff, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0, 0xa0, 0x1b, 0x39, 0x1c, 0x10, 0xa2, 0x1a, 0x39, 0x1c, 0x10, 0xa0, 0x1a, 0x39, 0x1c, 0x10, 0xa2, 0x1c, 0x39, 0x1c, 0x10, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x16, 0xd1, 0xfe, 0xff, 0xe9, 0xb2, 0x6, 0, 0, 0xfe, 0xd, 0x46, 0x87, 0x1b, 0x10, 0x31, 0xc0, 0xa0, 0x46, 0x87, 0x1b, 0x10, 0x85, 0xc0, 0x75, 0xe, 0x80, 0x35, 0x45, 0x87, 0x1b, 0x10, 0xff, 0xc6, 0x5, 0x46, 0x87, 0x1b, 0x10, 0x5, 0xe8, 0x9b, 0xc8, 0xfe, 0xff, 0x80, 0x3d, 0x8e, 0x38, 0x1c, 0x10, 0, 0x75, 0x9, 0x80, 0x3d, 0x12, 0x39, 0x1c, 0x10, 0, 0x74, 0x8, 0x8d, 0x45, 0xb4, 0xe8, 0x8b, 0xcd, 0xfe, 0xff, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xa6, 0xff, 0x3, 0, 0x84, 0xc0, 0xf, 0x84, 0xa9, 0x2, 0, 0, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x97, 0xb7, 0xf7, 0xff, 0xe8, 0x5a, 0xb4, 0xf7, 0xff, 0x8d, 0x5d, 0xac, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x12, 0xba, 0xf7, 0xff, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x7c, 0xb7, 0xf7, 0xff, 0x80, 0x78, 0x3e, 0x1, 0x74, 0x10, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x6c, 0xb7, 0xf7, 0xff, 0x80, 0x78, 0x3e, 0x1d, 0x75, 0x2, 0xeb, 0x10, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x5a, 0xb7, 0xf7, 0xff, 0x80, 0x78, 0x3e, 0x2, 0x75, 0x2, 0xeb, 0x10, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x48, 0xb7, 0xf7, 0xff, 0x80, 0x78, 0x3d, 0x4, 0x75, 0x1d, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x2e, 0xb7, 0xf7, 0xff, 0xe8, 0x29, 0xb2, 0xf7, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0xc0, 0, 0, 0, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xa2, 0xb7, 0xf7, 0xff, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x11, 0x31, 0xd2, 0x8b, 0x45, 0xa8, 0x83, 0xc0, 0x65, 0xe8, 0xf0, 0xfe, 0x3, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x20, 0x8b, 0x45, 0xa8, 0x83, 0xc0, 0x65, 0xe8, 0x46, 0xbb, 0xf7, 0xff, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa4, 0x8b, 0x48, 0x2, 0x8b, 0x5d, 0xf4, 0x8b, 0x55, 0xa8, 0x8b, 0x45, 0xa4, 0xff, 0x51, 0x34, 0x80, 0x3d, 0x89, 0x38, 0x1c, 0x10, 0, 0x74, 0x3d, 0xc7, 0x45, 0xa0, 0x1, 0, 0, 0, 0x8b, 0x45, 0xa8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x40, 0x98, 0xf7, 0xff, 0xa8, 0x40, 0x74, 0x7, 0xc7, 0x45, 0xa0, 0x5, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xa0, 0x8d, 0x45, 0xac, 0xe8, 0x54, 0xb8, 0xf7, 0xff, 0x8b, 0x58, 0x10, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xa8, 0xe8, 0x8e, 0xf9, 0xff, 0xff, 0x80, 0x3d, 0x8a, 0x38, 0x1c, 0x10, 0, 0x74, 0x1e, 0xb9, 0x4, 0, 0, 0, 0x8d, 0x45, 0xac, 0xe8, 0x2d, 0xb8, 0xf7, 0xff, 0x8b, 0x58, 0x15, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xa8, 0xe8, 0x67, 0xf9, 0xff, 0xff, 0x80, 0x3d, 0x8c, 0x38, 0x1c, 0x10, 0, 0x74, 0x15, 0x31, 0xd2, 0x8a, 0x15, 0x89, 0x38, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0x8a, 0x38, 0x1c, 0x10, 0x9, 0xd0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0xf, 0xb8, 0x24, 0x39, 0x1c, 0x10, 0xe8, 0x52, 0xbc, 0xf7, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0x2a, 0x1, 0, 0, 0xb8, 0x24, 0x39, 0x1c, 0x10, 0xe8, 0xe6, 0xb3, 0xf7, 0xff, 0x8d, 0x5d, 0x9c, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x5a, 0xb5, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0x9, 0xfe, 0x3, 0, 0x84, 0xc0, 0xf, 0x84, 0xf8, 0, 0, 0, 0x8d, 0x45, 0x9c, 0xe8, 0x28, 0xb4, 0xf7, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x1e, 0x8d, 0x45, 0x9c, 0xe8, 0x10, 0xb4, 0xf7, 0xff, 0x80, 0x78, 0x3e, 0x1, 0x74, 0xe, 0x8d, 0x45, 0x9c, 0xe8, 0x2, 0xb4, 0xf7, 0xff, 0x80, 0x78, 0x3e, 0x2, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x1b, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0x9c, 0xe8, 0xe6, 0xb3, 0xf7, 0xff, 0xe8, 0xb5, 0xb0, 0xf7, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0x93, 0, 0, 0, 0x8d, 0x45, 0x9c, 0xe8, 0xd0, 0xb3, 0xf7, 0xff, 0xe8, 0x67, 0xb2, 0xf7, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xac, 0xe8, 0x9d, 0x7, 0xfd, 0xff, 0x80, 0x3d, 0x89, 0x38, 0x1c, 0x10, 0, 0x74, 0x47, 0xc7, 0x45, 0x98, 0x1, 0, 0, 0, 0x8d, 0x45, 0x9c, 0xe8, 0xa9, 0xb3, 0xf7, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x3, 0x97, 0xf7, 0xff, 0xa8, 0x40, 0x74, 0x7, 0xc7, 0x45, 0x98, 0x5, 0, 0, 0, 0xf, 0xbf, 0x4d, 0x98, 0x8d, 0x45, 0xac, 0xe8, 0x17, 0xb7, 0xf7, 0xff, 0x8b, 0x58, 0x10, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0x9c, 0xe8, 0xde, 0xb3, 0xf7, 0xff, 0xe8, 0x4c, 0xf8, 0xff, 0xff, 0x80, 0x3d, 0x8a, 0x38, 0x1c, 0x10, 0, 0x74, 0x23, 0xb9, 0x4, 0, 0, 0, 0x8d, 0x45, 0xac, 0xe8, 0xeb, 0xb6, 0xf7, 0xff, 0x8b, 0x58, 0x15, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0x9c, 0xe8, 0xb2, 0xb3, 0xf7, 0xff, 0xe8, 0x20, 0xf8, 0xff, 0xff, 0x8d, 0x45, 0x9c, 0xe8, 0x95, 0xbb, 0xf7, 0xff, 0xe9, 0xf6, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0xfa, 0xae, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0x70, 0xae, 0xf7, 0xff, 0x80, 0x7d, 0xf0, 0, 0x74, 0x5, 0xe8, 0x17, 0xaf, 0x1, 0, 0x80, 0x3d, 0xa2, 0x38, 0x1c, 0x10, 0x2, 0xf, 0x85, 0x21, 0x2, 0, 0, 0x8b, 0x15, 0xa4, 0x38, 0x1c, 0x10, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfa, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0x94, 0x8b, 0x15, 0xa8, 0x38, 0x1c, 0x10, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0x90, 0x8b, 0x15, 0xac, 0x38, 0x1c, 0x10, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfa, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0x8c, 0x8b, 0x15, 0xb0, 0x38, 0x1c, 0x10, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0x88, 0xa1, 0xa4, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xf4, 0x38, 0x1c, 0x10, 0x7f, 0xd, 0xa1, 0xac, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xec, 0x38, 0x1c, 0x10, 0x7d, 0x2, 0xeb, 0xd, 0xa1, 0xa8, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xf8, 0x38, 0x1c, 0x10, 0x7e, 0x2, 0xeb, 0xd, 0xa1, 0xb0, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xf0, 0x38, 0x1c, 0x10, 0x7d, 0x5, 0xe9, 0x5c, 0x1, 0, 0, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0x94, 0xe8, 0x18, 0xbd, 0xf7, 0xff, 0x89, 0x45, 0x84, 0xa1, 0x46, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x8d, 0x50, 0xff, 0xf, 0xbf, 0x45, 0x8c, 0xe8, 0x9, 0xe6, 0xf8, 0xff, 0x89, 0x45, 0x80, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0x90, 0xe8, 0xf3, 0xbc, 0xf7, 0xff, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xa1, 0x48, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0x8d, 0x50, 0xff, 0xf, 0xbf, 0x45, 0x88, 0xe8, 0xe1, 0xe5, 0xf8, 0xff, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0xa1, 0xa8, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xf0, 0x38, 0x1c, 0x10, 0x7c, 0xd, 0xa1, 0xa8, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xf8, 0x38, 0x1c, 0x10, 0x7e, 0x2, 0xeb, 0x24, 0x6a, 0x4, 0xf, 0xbf, 0x45, 0x90, 0x50, 0xf, 0xbf, 0x45, 0x80, 0x50, 0xf, 0xbf, 0x4d, 0x90, 0xf, 0xbf, 0x5d, 0x84, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x16, 0xe8, 0xb7, 0xf3, 0x6, 0, 0xa1, 0xac, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xec, 0x38, 0x1c, 0x10, 0x7c, 0xd, 0xa1, 0xac, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xf4, 0x38, 0x1c, 0x10, 0x7e, 0x2, 0xeb, 0x2a, 0x6a, 0x4, 0xf, 0xbf, 0x85, 0x78, 0xff, 0xff, 0xff, 0x50, 0xf, 0xbf, 0x45, 0x8c, 0x50, 0xf, 0xbf, 0x8d, 0x7c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x5d, 0x8c, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x16, 0xe8, 0x71, 0xf3, 0x6, 0, 0xa1, 0xb0, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xf0, 0x38, 0x1c, 0x10, 0x7c, 0xd, 0xa1, 0xb0, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xf8, 0x38, 0x1c, 0x10, 0x7e, 0x2, 0xeb, 0x24, 0x6a, 0x4, 0xf, 0xbf, 0x45, 0x88, 0x50, 0xf, 0xbf, 0x45, 0x80, 0x50, 0xf, 0xbf, 0x4d, 0x88, 0xf, 0xbf, 0x5d, 0x84, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x16, 0xe8, 0x31, 0xf3, 0x6, 0, 0xa1, 0xa4, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xec, 0x38, 0x1c, 0x10, 0x7c, 0xd, 0xa1, 0xa4, 0x38, 0x1c, 0x10, 0x3b, 0x5, 0xf4, 0x38, 0x1c, 0x10, 0x7e, 0x2, 0xeb, 0x2a, 0x6a, 0x4, 0xf, 0xbf, 0x85, 0x78, 0xff, 0xff, 0xff, 0x50, 0xf, 0xbf, 0x45, 0x94, 0x50, 0xf, 0xbf, 0x8d, 0x7c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x5d, 0x94, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x16, 0xe8, 0xeb, 0xf2, 0x6, 0, 0xe8, 0xc1, 0xc9, 0xfe, 0xff, 0xc6, 0x5, 0x1a, 0x39, 0x1c, 0x10, 0, 0xa0, 0x1a, 0x39, 0x1c, 0x10, 0xa2, 0x1c, 0x39, 0x1c, 0x10, 0x80, 0x3d, 0x1b, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0x51, 0x1, 0, 0, 0xb8, 0x23, 0, 0, 0, 0xe8, 0x5b, 0xd5, 0xfe, 0xff, 0x89, 0x45, 0xf4, 0x6a, 0x1, 0xa1, 0xde, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xa1, 0xdc, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0xda, 0x38, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x8b, 0x1d, 0xd8, 0x38, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x16, 0xe8, 0x71, 0xf3, 0x6, 0, 0x80, 0x3d, 0xd0, 0x37, 0x1c, 0x10, 0, 0xf, 0x84, 0xec, 0, 0, 0, 0xa1, 0xe4, 0x70, 0x1c, 0x10, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x15, 0xe4, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x16, 0x1, 0xc2, 0xa1, 0xe6, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x80, 0x2, 0, 0, 0x1, 0xc2, 0x89, 0x95, 0x70, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x38, 0, 0, 0, 0xff, 0x8d, 0x6c, 0xff, 0xff, 0xff, 0x66, 0x83, 0xbd, 0x6c, 0xff, 0xff, 0xff, 0xff, 0xf, 0x84, 0x7d, 0, 0, 0, 0xc7, 0x85, 0x68, 0xff, 0xff, 0xff, 0x38, 0, 0, 0, 0xff, 0x8d, 0x68, 0xff, 0xff, 0xff, 0x66, 0x83, 0xbd, 0x68, 0xff, 0xff, 0xff, 0xff, 0x74, 0x34, 0x8b, 0x95, 0x74, 0xff, 0xff, 0xff, 0xff, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8a, 0, 0x88, 0x2, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x74, 0xff, 0xff, 0xff, 0xff, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8a, 0, 0x88, 0x2, 0xeb, 0xbc, 0xbb, 0x70, 0, 0, 0, 0x8b, 0x95, 0x74, 0xff, 0xff, 0xff, 0x83, 0xea, 0x70, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0x6c, 0xaa, 0x6, 0, 0x81, 0x85, 0x70, 0xff, 0xff, 0xff, 0x48, 0x2, 0, 0, 0x83, 0x85, 0x74, 0xff, 0xff, 0xff, 0x70, 0xe9, 0x6f, 0xff, 0xff, 0xff, 0x68, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0xff, 0x70, 0x16, 0x6a, 0x70, 0x6a, 0x70, 0x6a, 0x70, 0xff, 0x35, 0xe4, 0x70, 0x1c, 0x10, 0xe8, 0xab, 0xf7, 0x6, 0, 0x83, 0xc4, 0x18, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x12, 0xe8, 0x86, 0xc0, 0x6, 0, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x5f, 0xca, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100faa9e, 0x5)   pushd(0xcc);                          /* push dword 0xcc */
    II(0x100faaa3, 0x5)   calld(sys_check_available_stack_size, 0x6b2aa); /* call 0x10165d52 */
    II(0x100faaa8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100faaa9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100faaaa, 0x1)   pushd(edx);                           /* push edx */
    II(0x100faaab, 0x1)   pushd(esi);                           /* push esi */
    II(0x100faaac, 0x1)   pushd(edi);                           /* push edi */
    II(0x100faaad, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100faaae, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100faab0, 0x6)   sub(esp, 0x98);                       /* sub esp, 0x98 */
    II(0x100faab6, 0x7)   cmp(memd_a32(ds, 0x101c9450), 0);     /* cmp dword [0x101c9450], 0x0 */
    II(0x100faabd, 0x2)   jzd(0x100faac8, 0x9);                 /* jz 0x100faac8 */
    II(0x100faabf, 0x7)   cmp(memb_a32(ds, 0x101c3888), 0);     /* cmp byte [0x101c3888], 0x0 */
    II(0x100faac6, 0x2)   jzd(0x100faacd, 0x5);                 /* jz 0x100faacd */
l_0x100faac8:
    II(0x100faac8, 0x5)   jmpd(0x100fb433, 0x966);              /* jmp 0x100fb433 */
l_0x100faacd:
    II(0x100faacd, 0x5)   calld(0x101482f4, 0x4d822);           /* call 0x101482f4 */
    II(0x100faad2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100faad5, 0x6)   mov(edx, memd_a32(ds, 0x101c3984));   /* mov edx, [0x101c3984] */
    II(0x100faadb, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100faade, 0x5)   mov(eax, memd_a32(ds, 0x101c3986));   /* mov eax, [0x101c3986] */
    II(0x100faae3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100faae6, 0x2)   or_(eax, edx);                        /* or eax, edx */
    II(0x100faae8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100faaea, 0x2)   jzd(0x100fab28, 0x3c);                /* jz 0x100fab28 */
    II(0x100faaec, 0x5)   calld(0x10102acc, 0x7fdb);            /* call 0x10102acc */
    II(0x100faaf1, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100faaf3, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x100faaf5, 0x6)   mov(ebx, memd_a32(ds, 0x101c3986));   /* mov ebx, [0x101c3986] */
    II(0x100faafb, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100faafe, 0x6)   mov(edx, memd_a32(ds, 0x101c3984));   /* mov edx, [0x101c3984] */
    II(0x100fab04, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fab07, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100fab0c, 0x5)   calld(0x10101620, 0x6b0f);            /* call 0x10101620 */
    II(0x100fab11, 0x9)   mov(memw_a32(ds, 0x101c3988), 0);     /* mov word [0x101c3988], 0x0 */
    II(0x100fab1a, 0x6)   mov(ax, memw_a32(ds, 0x101c3988));    /* mov ax, [0x101c3988] */
    II(0x100fab20, 0x6)   mov(memw_a32(ds, 0x101c3986), ax);    /* mov [0x101c3986], ax */
    II(0x100fab26, 0x2)   jmpd(0x100fab3d, 0x15);               /* jmp 0x100fab3d */
l_0x100fab28:
    II(0x100fab28, 0x6)   mov(ax, memw_a32(ds, 0x101c398a));    /* mov ax, [0x101c398a] */
    II(0x100fab2e, 0x6)   mov(memw_a32(ds, 0x101c398c), ax);    /* mov [0x101c398c], ax */
    II(0x100fab34, 0x9)   mov(memw_a32(ds, 0x101c398e), 0);     /* mov word [0x101c398e], 0x0 */
l_0x100fab3d:
    II(0x100fab3d, 0x5)   calld(0x100e6236, -0x1490c);          /* call 0x100e6236 */
    II(0x100fab42, 0x7)   cmp(memb_a32(ds, 0x101c391a), 0);     /* cmp byte [0x101c391a], 0x0 */
    II(0x100fab49, 0x6)   jzd(0x100fb433, 0x8e4);               /* jz dword 0x100fb433 */
    II(0x100fab4f, 0x7)   cmp(memb_a32(ds, 0x101c391b), 0);     /* cmp byte [0x101c391b], 0x0 */
    II(0x100fab56, 0x2)   jzd(0x100fabaa, 0x52);                /* jz 0x100fabaa */
    II(0x100fab58, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x7);   /* cmp byte [0x101c391e], 0x7 */
    II(0x100fab5f, 0x2)   jzd(0x100fab6a, 0x9);                 /* jz 0x100fab6a */
    II(0x100fab61, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xc);   /* cmp byte [0x101c391e], 0xc */
    II(0x100fab68, 0x2)   jnzd(0x100fab6c, 0x2);                /* jnz 0x100fab6c */
l_0x100fab6a:
    II(0x100fab6a, 0x2)   jmpd(0x100fab75, 0x9);                /* jmp 0x100fab75 */
l_0x100fab6c:
    II(0x100fab6c, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xd);   /* cmp byte [0x101c391e], 0xd */
    II(0x100fab73, 0x2)   jnzd(0x100fab7e, 0x9);                /* jnz 0x100fab7e */
l_0x100fab75:
    II(0x100fab75, 0x7)   mov(memb_a32(ds, 0x101c391b), 0);     /* mov byte [0x101c391b], 0x0 */
    II(0x100fab7c, 0x2)   jmpd(0x100fabaa, 0x2c);               /* jmp 0x100fabaa */
l_0x100fab7e:
    II(0x100fab7e, 0x5)   mov(eax, 0x23);                       /* mov eax, 0x23 */
    II(0x100fab83, 0x5)   calld(0x100e883d, -0x1234b);          /* call 0x100e883d */
    II(0x100fab88, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100fab8b, 0x5)   pushd(0x280);                         /* push dword 0x280 */
    II(0x100fab90, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fab93, 0x3)   pushd(memd_a32(ds, eax + 0x16));      /* push dword [eax+0x16] */
    II(0x100fab96, 0x2)   pushd(0x70);                          /* push 0x70 */
    II(0x100fab98, 0x2)   pushd(0x70);                          /* push 0x70 */
    II(0x100fab9a, 0x2)   pushd(0x70);                          /* push 0x70 */
    II(0x100fab9c, 0x6)   pushd(memd_a32(ds, 0x101c70e0));      /* push dword [0x101c70e0] */
    II(0x100faba2, 0x5)   calld(/* sys */ 0x1016abbc, 0x70015); /* call 0x1016abbc */
    II(0x100faba7, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
l_0x100fabaa:
    II(0x100fabaa, 0x7)   cmp(memb_a32(ds, 0x101c38a3), 0);     /* cmp byte [0x101c38a3], 0x0 */
    II(0x100fabb1, 0x6)   jzd(0x100faccf, 0x118);               /* jz dword 0x100faccf */
    II(0x100fabb7, 0x5)   mov(eax, memd_a32(ds, 0x101c38a4));   /* mov eax, [0x101c38a4] */
    II(0x100fabbc, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100fabbf, 0x5)   mov(eax, memd_a32(ds, 0x101c38a8));   /* mov eax, [0x101c38a8] */
    II(0x100fabc4, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100fabc7, 0x5)   mov(eax, memd_a32(ds, 0x101c38ac));   /* mov eax, [0x101c38ac] */
    II(0x100fabcc, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100fabcf, 0x5)   mov(eax, memd_a32(ds, 0x101c38b0));   /* mov eax, [0x101c38b0] */
    II(0x100fabd4, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100fabd7, 0x5)   mov(eax, 0x26);                       /* mov eax, 0x26 */
    II(0x100fabdc, 0x5)   calld(0x100e883d, -0x123a4);          /* call 0x100e883d */
    II(0x100fabe1, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100fabe4, 0x6)   mov(edx, memd_a32(ds, 0x101c3898));   /* mov edx, [0x101c3898] */
    II(0x100fabea, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fabed, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fabf0, 0x2)   sub(edx, memd_a32(ds, eax));          /* sub edx, [eax] */
    II(0x100fabf2, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fabf4, 0x7)   imul(eax, memd_a32(ds, 0x101c38c4));  /* imul eax, [0x101c38c4] */
    II(0x100fabfb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fabfe, 0x6)   add(eax, memd_a32(ds, 0x101c38ec));   /* add eax, [0x101c38ec] */
    II(0x100fac04, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100fac07, 0x5)   mov(eax, memd_a32(ds, 0x101c389a));   /* mov eax, [0x101c389a] */
    II(0x100fac0c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fac0f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100fac12, 0x3)   sub(eax, memd_a32(ds, edx + 0x4));    /* sub eax, [edx+0x4] */
    II(0x100fac15, 0x7)   imul(eax, memd_a32(ds, 0x101c38c4));  /* imul eax, [0x101c38c4] */
    II(0x100fac1c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fac1f, 0x6)   add(eax, memd_a32(ds, 0x101c38f0));   /* add eax, [0x101c38f0] */
    II(0x100fac25, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100fac28, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100fac2c, 0x5)   mov(eax, memd_a32(ds, 0x101c389c));   /* mov eax, [0x101c389c] */
    II(0x100fac31, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fac34, 0x5)   calld(my_min, -0x714b5);              /* call 0x10089784 */
    II(0x100fac39, 0x5)   mov(memd_a32(ds, 0x101c38a4), eax);   /* mov [0x101c38a4], eax */
    II(0x100fac3e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100fac42, 0x5)   mov(eax, memd_a32(ds, 0x101c389e));   /* mov eax, [0x101c389e] */
    II(0x100fac47, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fac4a, 0x5)   calld(my_min, -0x714cb);              /* call 0x10089784 */
    II(0x100fac4f, 0x5)   mov(memd_a32(ds, 0x101c38a8), eax);   /* mov [0x101c38a8], eax */
    II(0x100fac54, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100fac58, 0x5)   mov(eax, memd_a32(ds, 0x101c389c));   /* mov eax, [0x101c389c] */
    II(0x100fac5d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fac60, 0x5)   calld(0x10076e7c, -0x83de9);          /* call 0x10076e7c */
    II(0x100fac65, 0x5)   mov(memd_a32(ds, 0x101c38ac), eax);   /* mov [0x101c38ac], eax */
    II(0x100fac6a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100fac6e, 0x5)   mov(eax, memd_a32(ds, 0x101c389e));   /* mov eax, [0x101c389e] */
    II(0x100fac73, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fac76, 0x5)   calld(0x10076e7c, -0x83dff);          /* call 0x10076e7c */
    II(0x100fac7b, 0x5)   mov(memd_a32(ds, 0x101c38b0), eax);   /* mov [0x101c38b0], eax */
    II(0x100fac80, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x100fac83, 0x5)   mov(eax, memd_a32(ds, 0x101c38a4));   /* mov eax, [0x101c38a4] */
    II(0x100fac88, 0x5)   calld(my_min, -0x71509);              /* call 0x10089784 */
    II(0x100fac8d, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100fac90, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1c));   /* mov edx, [ebp-0x1c] */
    II(0x100fac93, 0x5)   mov(eax, memd_a32(ds, 0x101c38a8));   /* mov eax, [0x101c38a8] */
    II(0x100fac98, 0x5)   calld(my_min, -0x71519);              /* call 0x10089784 */
    II(0x100fac9d, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100faca0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x100faca3, 0x5)   mov(eax, memd_a32(ds, 0x101c38ac));   /* mov eax, [0x101c38ac] */
    II(0x100faca8, 0x5)   calld(0x10076e7c, -0x83e31);          /* call 0x10076e7c */
    II(0x100facad, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100facb0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100facb3, 0x5)   mov(eax, memd_a32(ds, 0x101c38b0));   /* mov eax, [0x101c38b0] */
    II(0x100facb8, 0x5)   calld(0x10076e7c, -0x83e41);          /* call 0x10076e7c */
    II(0x100facbd, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100facc0, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100facc3, 0x5)   calld(0x100ff562, 0x489a);            /* call 0x100ff562 */
    II(0x100facc8, 0x7)   mov(memb_a32(ds, 0x101c38a3), 0);     /* mov byte [0x101c38a3], 0x0 */
l_0x100faccf:
    II(0x100faccf, 0x5)   mov(al, memb_a32(ds, 0x101c391d));    /* mov al, [0x101c391d] */
    II(0x100facd4, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x100facd7, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x100facdb, 0x2)   jzd(0x100facff, 0x22);                /* jz 0x100facff */
    II(0x100facdd, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100face0, 0x5)   calld(0x100fa9fd, -0x2e8);            /* call 0x100fa9fd */
    II(0x100face5, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100face8, 0x5)   calld(0x100e800c, -0x12ce1);          /* call 0x100e800c */
    II(0x100faced, 0x2)   test(al, al);                         /* test al, al */
    II(0x100facef, 0x2)   jzd(0x100facfb, 0xa);                 /* jz 0x100facfb */
    II(0x100facf1, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100facf4, 0x5)   calld(0x100ff562, 0x4869);            /* call 0x100ff562 */
    II(0x100facf9, 0x2)   jmpd(0x100facff, 0x4);                /* jmp 0x100facff */
l_0x100facfb:
    II(0x100facfb, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x100facff:
    II(0x100facff, 0x4)   or_(memb_a32(ss, ebp - 0x4), 0x1);    /* or byte [ebp-0x4], 0x1 */
    II(0x100fad03, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100fad06, 0x5)   calld(0x100e7e34, -0x12ed7);          /* call 0x100e7e34 */
    II(0x100fad0b, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100fad0e, 0x4)   and_(memb_a32(ss, ebp - 0x4), -0x2 /* 0xfe */); /* and byte [ebp-0x4], 0xfe */
    II(0x100fad12, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fad14, 0x6)   mov(dl, memb_a32(ds, 0x101c388d));    /* mov dl, [0x101c388d] */
    II(0x100fad1a, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100fad1d, 0x5)   calld(0x100e779e, -0x13584);          /* call 0x100e779e */
    II(0x100fad22, 0x5)   mov(eax, 0x26);                       /* mov eax, 0x26 */
    II(0x100fad27, 0x5)   calld(0x100e883d, -0x124ef);          /* call 0x100e883d */
    II(0x100fad2c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100fad2f, 0x7)   cmp(memb_a32(ds, 0x101c388b), 0);     /* cmp byte [0x101c388b], 0x0 */
    II(0x100fad36, 0x2)   jzd(0x100fad41, 0x9);                 /* jz 0x100fad41 */
    II(0x100fad38, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0xb);   /* cmp byte [0x101c391e], 0xb */
    II(0x100fad3f, 0x2)   jzd(0x100fad43, 0x2);                 /* jz 0x100fad43 */
l_0x100fad41:
    II(0x100fad41, 0x2)   jmpd(0x100fad50, 0xd);                /* jmp 0x100fad50 */
l_0x100fad43:
    II(0x100fad43, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100fad48, 0x6)   cmp(al, memb_a32(ds, 0x101c37da));    /* cmp al, [0x101c37da] */
    II(0x100fad4e, 0x2)   jnzd(0x100fad52, 0x2);                /* jnz 0x100fad52 */
l_0x100fad50:
    II(0x100fad50, 0x2)   jmpd(0x100fad81, 0x2f);               /* jmp 0x100fad81 */
l_0x100fad52:
    II(0x100fad52, 0x5)   calld(0x100e7c7b, -0x130dc);          /* call 0x100e7c7b */
    II(0x100fad57, 0x7)   mov(memb_a32(ds, 0x101c391b), 0);     /* mov byte [0x101c391b], 0x0 */
    II(0x100fad5e, 0x5)   mov(al, memb_a32(ds, 0x101c391b));    /* mov al, [0x101c391b] */
    II(0x100fad63, 0x5)   mov(memb_a32(ds, 0x101c391a), al);    /* mov [0x101c391a], al */
//    II(0x100fad68, 0x5)   mov(al, memb_a32(ds, 0x101c391a));    /* mov al, [0x101c391a] */
    II(0x100fad6d, 0x5)   mov(memb_a32(ds, 0x101c391c), al);    /* mov [0x101c391c], al */
    II(0x100fad72, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fad74, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100fad77, 0x5)   calld(0x100e7e92, -0x12eea);          /* call 0x100e7e92 */
    II(0x100fad7c, 0x5)   jmpd(0x100fb433, 0x6b2);              /* jmp 0x100fb433 */
l_0x100fad81:
    II(0x100fad81, 0x6)   dec(memb_a32(ds, 0x101b8746));        /* dec byte [0x101b8746] */
    II(0x100fad87, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fad89, 0x5)   mov(al, memb_a32(ds, 0x101b8746));    /* mov al, [0x101b8746] */
    II(0x100fad8e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100fad90, 0x2)   jnzd(0x100fada0, 0xe);                /* jnz 0x100fada0 */
    II(0x100fad92, 0x7)   xor_(memb_a32(ds, 0x101b8745), -0x1 /* 0xff */); /* xor byte [0x101b8745], 0xff */
    II(0x100fad99, 0x7)   mov(memb_a32(ds, 0x101b8746), 0x5);   /* mov byte [0x101b8746], 0x5 */
l_0x100fada0:
    II(0x100fada0, 0x5)   calld(0x100e7640, -0x13765);          /* call 0x100e7640 */
    II(0x100fada5, 0x7)   cmp(memb_a32(ds, 0x101c388e), 0);     /* cmp byte [0x101c388e], 0x0 */
    II(0x100fadac, 0x2)   jnzd(0x100fadb7, 0x9);                /* jnz 0x100fadb7 */
    II(0x100fadae, 0x7)   cmp(memb_a32(ds, 0x101c3912), 0);     /* cmp byte [0x101c3912], 0x0 */
    II(0x100fadb5, 0x2)   jzd(0x100fadbf, 0x8);                 /* jz 0x100fadbf */
l_0x100fadb7:
    II(0x100fadb7, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100fadba, 0x5)   calld(0x100e7b4a, -0x13275);          /* call 0x100e7b4a */
l_0x100fadbf:
    II(0x100fadbf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fadc1, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fadc6, 0x5)   calld(0x1013ad71, 0x3ffa6);           /* call 0x1013ad71 */
    II(0x100fadcb, 0x2)   test(al, al);                         /* test al, al */
    II(0x100fadcd, 0x6)   jzd(0x100fb07c, 0x2a9);               /* jz dword 0x100fb07c */
    II(0x100fadd3, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fadd8, 0x5)   calld(0x10076574, -0x84869);          /* call 0x10076574 */
    II(0x100faddd, 0x5)   calld(0x1007623c, -0x84ba6);          /* call 0x1007623c */
    II(0x100fade2, 0x3)   lea(ebx, ebp - 0x54);                 /* lea ebx, [ebp-0x54] */
    II(0x100fade5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fade7, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100fade9, 0x5)   calld(0x10076800, -0x845ee);          /* call 0x10076800 */
    II(0x100fadee, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fadf3, 0x5)   calld(0x10076574, -0x84884);          /* call 0x10076574 */
    II(0x100fadf8, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100fadfc, 0x2)   jzd(0x100fae0e, 0x10);                /* jz 0x100fae0e */
    II(0x100fadfe, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fae03, 0x5)   calld(0x10076574, -0x84894);          /* call 0x10076574 */
    II(0x100fae08, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1d);  /* cmp byte [eax+0x3e], 0x1d */
    II(0x100fae0c, 0x2)   jnzd(0x100fae10, 0x2);                /* jnz 0x100fae10 */
l_0x100fae0e:
    II(0x100fae0e, 0x2)   jmpd(0x100fae20, 0x10);               /* jmp 0x100fae20 */
l_0x100fae10:
    II(0x100fae10, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fae15, 0x5)   calld(0x10076574, -0x848a6);          /* call 0x10076574 */
    II(0x100fae1a, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x2);   /* cmp byte [eax+0x3e], 0x2 */
    II(0x100fae1e, 0x2)   jnzd(0x100fae22, 0x2);                /* jnz 0x100fae22 */
l_0x100fae20:
    II(0x100fae20, 0x2)   jmpd(0x100fae32, 0x10);               /* jmp 0x100fae32 */
l_0x100fae22:
    II(0x100fae22, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fae27, 0x5)   calld(0x10076574, -0x848b8);          /* call 0x10076574 */
    II(0x100fae2c, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x100fae30, 0x2)   jnzd(0x100fae4f, 0x1d);               /* jnz 0x100fae4f */
l_0x100fae32:
    II(0x100fae32, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fae34, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fae39, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100fae3c, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fae41, 0x5)   calld(0x10076574, -0x848d2);          /* call 0x10076574 */
    II(0x100fae46, 0x5)   calld(0x10076074, -0x84dd7);          /* call 0x10076074 */
    II(0x100fae4b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100fae4d, 0x2)   jnzd(0x100fae54, 0x5);                /* jnz 0x100fae54 */
l_0x100fae4f:
    II(0x100fae4f, 0x5)   jmpd(0x100faf14, 0xc0);               /* jmp 0x100faf14 */
l_0x100fae54:
    II(0x100fae54, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fae59, 0x5)   calld(0x10076600, -0x8485e);          /* call 0x10076600 */
    II(0x100fae5e, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
//    II(0x100fae61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100fae64, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fae66, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100fae69, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fae6b, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fae70, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100fae72, 0x2)   jnzd(0x100fae85, 0x11);               /* jnz 0x100fae85 */
    II(0x100fae74, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fae76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100fae79, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100fae7c, 0x5)   calld(0x1013ad71, 0x3fef0);           /* call 0x1013ad71 */
    II(0x100fae81, 0x2)   test(al, al);                         /* test al, al */
    II(0x100fae83, 0x2)   jnzd(0x100fae87, 0x2);                /* jnz 0x100fae87 */
l_0x100fae85:
    II(0x100fae85, 0x2)   jmpd(0x100faea7, 0x20);               /* jmp 0x100faea7 */
l_0x100fae87:
    II(0x100fae87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100fae8a, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100fae8d, 0x5)   calld(0x100769d8, -0x844ba);          /* call 0x100769d8 */
    II(0x100fae92, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
//    II(0x100fae95, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100fae98, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x100fae9b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100fae9e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x58));   /* mov edx, [ebp-0x58] */
//    II(0x100faea1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100faea4, 0x3)   calld_abs(memd_a32(ds, ecx + 0x34));  /* call dword near [ecx+0x34] */
l_0x100faea7:
    II(0x100faea7, 0x7)   cmp(memb_a32(ds, 0x101c3889), 0);     /* cmp byte [0x101c3889], 0x0 */
    II(0x100faeae, 0x2)   jzd(0x100faeed, 0x3d);                /* jz 0x100faeed */
    II(0x100faeb0, 0x7)   mov(memd_a32(ss, ebp - 0x60), 0x1);   /* mov dword [ebp-0x60], 0x1 */
    II(0x100faeb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100faeba, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100faebd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100faec0, 0x5)   calld(0x10074705, -0x867c0);          /* call 0x10074705 */
    II(0x100faec5, 0x2)   test(al, 0x40);                       /* test al, 0x40 */
    II(0x100faec7, 0x2)   jzd(0x100faed0, 0x7);                 /* jz 0x100faed0 */
    II(0x100faec9, 0x7)   mov(memd_a32(ss, ebp - 0x60), 0x5);   /* mov dword [ebp-0x60], 0x5 */
l_0x100faed0:
    II(0x100faed0, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x60)); /* movsx ecx, word [ebp-0x60] */
    II(0x100faed4, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100faed7, 0x5)   calld(0x10076730, -0x847ac);          /* call 0x10076730 */
    II(0x100faedc, 0x3)   mov(ebx, memd_a32(ds, eax + 0x10));   /* mov ebx, [eax+0x10] */
    II(0x100faedf, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100faee2, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100faee5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100faee8, 0x5)   calld(0x100fa87b, -0x672);            /* call 0x100fa87b */
l_0x100faeed:
    II(0x100faeed, 0x7)   cmp(memb_a32(ds, 0x101c388a), 0);     /* cmp byte [0x101c388a], 0x0 */
    II(0x100faef4, 0x2)   jzd(0x100faf14, 0x1e);                /* jz 0x100faf14 */
    II(0x100faef6, 0x5)   mov(ecx, 0x4);                        /* mov ecx, 0x4 */
    II(0x100faefb, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100faefe, 0x5)   calld(0x10076730, -0x847d3);          /* call 0x10076730 */
    II(0x100faf03, 0x3)   mov(ebx, memd_a32(ds, eax + 0x15));   /* mov ebx, [eax+0x15] */
    II(0x100faf06, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100faf09, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100faf0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100faf0f, 0x5)   calld(0x100fa87b, -0x699);            /* call 0x100fa87b */
l_0x100faf14:
    II(0x100faf14, 0x7)   cmp(memb_a32(ds, 0x101c388c), 0);     /* cmp byte [0x101c388c], 0x0 */
    II(0x100faf1b, 0x2)   jzd(0x100faf32, 0x15);                /* jz 0x100faf32 */
    II(0x100faf1d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100faf1f, 0x6)   mov(dl, memb_a32(ds, 0x101c3889));    /* mov dl, [0x101c3889] */
    II(0x100faf25, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100faf27, 0x5)   mov(al, memb_a32(ds, 0x101c388a));    /* mov al, [0x101c388a] */
    II(0x100faf2c, 0x2)   or_(eax, edx);                        /* or eax, edx */
    II(0x100faf2e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100faf30, 0x2)   jnzd(0x100faf34, 0x2);                /* jnz 0x100faf34 */
l_0x100faf32:
    II(0x100faf32, 0x2)   jmpd(0x100faf43, 0xf);                /* jmp 0x100faf43 */
l_0x100faf34:
    II(0x100faf34, 0x5)   mov(eax, 0x101c3924);                 /* mov eax, 0x101c3924 */
    II(0x100faf39, 0x5)   calld(0x10076b90, -0x843ae);          /* call 0x10076b90 */
    II(0x100faf3e, 0x1)   cwde();                               /* cwde */
    II(0x100faf3f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100faf41, 0x2)   jnzd(0x100faf48, 0x5);                /* jnz 0x100faf48 */
l_0x100faf43:
    II(0x100faf43, 0x5)   jmpd(0x100fb072, 0x12a);              /* jmp 0x100fb072 */
l_0x100faf48:
    II(0x100faf48, 0x5)   mov(eax, 0x101c3924);                 /* mov eax, 0x101c3924 */
    II(0x100faf4d, 0x5)   calld(0x10076338, -0x84c1a);          /* call 0x10076338 */
    II(0x100faf52, 0x3)   lea(ebx, ebp - 0x64);                 /* lea ebx, [ebp-0x64] */
    II(0x100faf55, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100faf57, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100faf59, 0x5)   calld(0x100764b8, -0x84aa6);          /* call 0x100764b8 */
l_0x100faf5e:
    II(0x100faf5e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100faf60, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100faf63, 0x5)   calld(0x1013ad71, 0x3fe09);           /* call 0x1013ad71 */
    II(0x100faf68, 0x2)   test(al, al);                         /* test al, al */
    II(0x100faf6a, 0x6)   jzd(0x100fb068, 0xf8);                /* jz dword 0x100fb068 */
    II(0x100faf70, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100faf73, 0x5)   calld(0x100763a0, -0x84bd8);          /* call 0x100763a0 */
    II(0x100faf78, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100faf7a, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100faf7d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100faf7f, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100faf84, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100faf86, 0x2)   jzd(0x100fafa6, 0x1e);                /* jz 0x100fafa6 */
    II(0x100faf88, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100faf8b, 0x5)   calld(0x100763a0, -0x84bf0);          /* call 0x100763a0 */
    II(0x100faf90, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100faf94, 0x2)   jzd(0x100fafa4, 0xe);                 /* jz 0x100fafa4 */
    II(0x100faf96, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100faf99, 0x5)   calld(0x100763a0, -0x84bfe);          /* call 0x100763a0 */
    II(0x100faf9e, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x2);   /* cmp byte [eax+0x3e], 0x2 */
    II(0x100fafa2, 0x2)   jnzd(0x100fafa6, 0x2);                /* jnz 0x100fafa6 */
l_0x100fafa4:
    II(0x100fafa4, 0x2)   jmpd(0x100fafa8, 0x2);                /* jmp 0x100fafa8 */
l_0x100fafa6:
    II(0x100fafa6, 0x2)   jmpd(0x100fafc3, 0x1b);               /* jmp 0x100fafc3 */
l_0x100fafa8:
    II(0x100fafa8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fafaa, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fafaf, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100fafb2, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100fafb5, 0x5)   calld(0x100763a0, -0x84c1a);          /* call 0x100763a0 */
    II(0x100fafba, 0x5)   calld(0x10076074, -0x84f4b);          /* call 0x10076074 */
    II(0x100fafbf, 0x2)   test(al, al);                         /* test al, al */
    II(0x100fafc1, 0x2)   jnzd(0x100fafc8, 0x5);                /* jnz 0x100fafc8 */
l_0x100fafc3:
    II(0x100fafc3, 0x5)   jmpd(0x100fb05b, 0x93);               /* jmp 0x100fb05b */
l_0x100fafc8:
    II(0x100fafc8, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100fafcb, 0x5)   calld(0x100763a0, -0x84c30);          /* call 0x100763a0 */
    II(0x100fafd0, 0x5)   calld(0x1007623c, -0x84d99);          /* call 0x1007623c */
    II(0x100fafd5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100fafd7, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100fafda, 0x5)   calld(0x100cb77c, -0x2f863);          /* call 0x100cb77c */
    II(0x100fafdf, 0x7)   cmp(memb_a32(ds, 0x101c3889), 0);     /* cmp byte [0x101c3889], 0x0 */
    II(0x100fafe6, 0x2)   jzd(0x100fb02f, 0x47);                /* jz 0x100fb02f */
    II(0x100fafe8, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0x1);   /* mov dword [ebp-0x68], 0x1 */
    II(0x100fafef, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100faff2, 0x5)   calld(0x100763a0, -0x84c57);          /* call 0x100763a0 */
    II(0x100faff7, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100faffa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100faffd, 0x5)   calld(0x10074705, -0x868fd);          /* call 0x10074705 */
    II(0x100fb002, 0x2)   test(al, 0x40);                       /* test al, 0x40 */
    II(0x100fb004, 0x2)   jzd(0x100fb00d, 0x7);                 /* jz 0x100fb00d */
    II(0x100fb006, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0x5);   /* mov dword [ebp-0x68], 0x5 */
l_0x100fb00d:
    II(0x100fb00d, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x68)); /* movsx ecx, word [ebp-0x68] */
    II(0x100fb011, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100fb014, 0x5)   calld(0x10076730, -0x848e9);          /* call 0x10076730 */
    II(0x100fb019, 0x3)   mov(ebx, memd_a32(ds, eax + 0x10));   /* mov ebx, [eax+0x10] */
    II(0x100fb01c, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100fb01f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100fb022, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100fb025, 0x5)   calld(0x10076408, -0x84c22);          /* call 0x10076408 */
    II(0x100fb02a, 0x5)   calld(0x100fa87b, -0x7b4);            /* call 0x100fa87b */
l_0x100fb02f:
    II(0x100fb02f, 0x7)   cmp(memb_a32(ds, 0x101c388a), 0);     /* cmp byte [0x101c388a], 0x0 */
    II(0x100fb036, 0x2)   jzd(0x100fb05b, 0x23);                /* jz 0x100fb05b */
    II(0x100fb038, 0x5)   mov(ecx, 0x4);                        /* mov ecx, 0x4 */
    II(0x100fb03d, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100fb040, 0x5)   calld(0x10076730, -0x84915);          /* call 0x10076730 */
    II(0x100fb045, 0x3)   mov(ebx, memd_a32(ds, eax + 0x15));   /* mov ebx, [eax+0x15] */
    II(0x100fb048, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100fb04b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100fb04e, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100fb051, 0x5)   calld(0x10076408, -0x84c4e);          /* call 0x10076408 */
    II(0x100fb056, 0x5)   calld(0x100fa87b, -0x7e0);            /* call 0x100fa87b */
l_0x100fb05b:
    II(0x100fb05b, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100fb05e, 0x5)   calld(0x10076bf8, -0x8446b);          /* call 0x10076bf8 */
    II(0x100fb063, 0x5)   jmpd(0x100faf5e, -0x10a);             /* jmp 0x100faf5e */
l_0x100fb068:
    II(0x100fb068, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fb06a, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100fb06d, 0x5)   calld(0x10075f6c, -0x85106);          /* call 0x10075f6c */
l_0x100fb072:
    II(0x100fb072, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fb074, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100fb077, 0x5)   calld(0x10075eec, -0x85190);          /* call 0x10075eec */
l_0x100fb07c:
    II(0x100fb07c, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x100fb080, 0x2)   jzd(0x100fb087, 0x5);                 /* jz 0x100fb087 */
    II(0x100fb082, 0x5)   calld(0x10115f9e, 0x1af17);           /* call 0x10115f9e */
l_0x100fb087:
    II(0x100fb087, 0x7)   cmp(memb_a32(ds, 0x101c38a2), 0x2);   /* cmp byte [0x101c38a2], 0x2 */
    II(0x100fb08e, 0x6)   jnzd(0x100fb2b5, 0x221);              /* jnz dword 0x100fb2b5 */
    II(0x100fb094, 0x6)   mov(edx, memd_a32(ds, 0x101c38a4));   /* mov edx, [0x101c38a4] */
    II(0x100fb09a, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100fb09d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fb09f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fb0a2, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100fb0a8, 0x6)   mov(edx, memd_a32(ds, 0x101c38fa));   /* mov edx, [0x101c38fa] */
    II(0x100fb0ae, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb0b1, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100fb0b3, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x100fb0b6, 0x6)   mov(edx, memd_a32(ds, 0x101c38a8));   /* mov edx, [0x101c38a8] */
    II(0x100fb0bc, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100fb0bf, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fb0c1, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fb0c4, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100fb0ca, 0x6)   mov(edx, memd_a32(ds, 0x101c38fc));   /* mov edx, [0x101c38fc] */
    II(0x100fb0d0, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb0d3, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100fb0d5, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x100fb0d8, 0x6)   mov(edx, memd_a32(ds, 0x101c38ac));   /* mov edx, [0x101c38ac] */
    II(0x100fb0de, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100fb0e1, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fb0e3, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fb0e6, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100fb0ec, 0x6)   mov(edx, memd_a32(ds, 0x101c38fa));   /* mov edx, [0x101c38fa] */
    II(0x100fb0f2, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb0f5, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100fb0f7, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x100fb0fa, 0x6)   mov(edx, memd_a32(ds, 0x101c38b0));   /* mov edx, [0x101c38b0] */
    II(0x100fb100, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100fb103, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100fb105, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100fb108, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100fb10e, 0x6)   mov(edx, memd_a32(ds, 0x101c38fc));   /* mov edx, [0x101c38fc] */
    II(0x100fb114, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb117, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100fb119, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x100fb11c, 0x5)   mov(eax, memd_a32(ds, 0x101c38a4));   /* mov eax, [0x101c38a4] */
    II(0x100fb121, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f4));   /* cmp eax, [0x101c38f4] */
    II(0x100fb127, 0x2)   jgd(0x100fb136, 0xd);                 /* jg 0x100fb136 */
    II(0x100fb129, 0x5)   mov(eax, memd_a32(ds, 0x101c38ac));   /* mov eax, [0x101c38ac] */
    II(0x100fb12e, 0x6)   cmp(eax, memd_a32(ds, 0x101c38ec));   /* cmp eax, [0x101c38ec] */
    II(0x100fb134, 0x2)   jged(0x100fb138, 0x2);                /* jge 0x100fb138 */
l_0x100fb136:
    II(0x100fb136, 0x2)   jmpd(0x100fb145, 0xd);                /* jmp 0x100fb145 */
l_0x100fb138:
    II(0x100fb138, 0x5)   mov(eax, memd_a32(ds, 0x101c38a8));   /* mov eax, [0x101c38a8] */
    II(0x100fb13d, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f8));   /* cmp eax, [0x101c38f8] */
    II(0x100fb143, 0x2)   jled(0x100fb147, 0x2);                /* jle 0x100fb147 */
l_0x100fb145:
    II(0x100fb145, 0x2)   jmpd(0x100fb154, 0xd);                /* jmp 0x100fb154 */
l_0x100fb147:
    II(0x100fb147, 0x5)   mov(eax, memd_a32(ds, 0x101c38b0));   /* mov eax, [0x101c38b0] */
    II(0x100fb14c, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f0));   /* cmp eax, [0x101c38f0] */
    II(0x100fb152, 0x2)   jged(0x100fb159, 0x5);                /* jge 0x100fb159 */
l_0x100fb154:
    II(0x100fb154, 0x5)   jmpd(0x100fb2b5, 0x15c);              /* jmp 0x100fb2b5 */
l_0x100fb159:
    II(0x100fb159, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fb15b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x6c)); /* movsx eax, word [ebp-0x6c] */
    II(0x100fb15f, 0x5)   calld(0x10076e7c, -0x842e8);          /* call 0x10076e7c */
    II(0x100fb164, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
    II(0x100fb167, 0x5)   mov(eax, memd_a32(ds, 0x101b8746));   /* mov eax, [0x101b8746] */
    II(0x100fb16c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fb16f, 0x3)   lea(edx, eax - 0x1);                  /* lea edx, [eax-0x1] */
    II(0x100fb172, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100fb176, 0x5)   calld(my_min, -0x719f7);              /* call 0x10089784 */
    II(0x100fb17b, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
    II(0x100fb17e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fb180, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x100fb184, 0x5)   calld(0x10076e7c, -0x8430d);          /* call 0x10076e7c */
    II(0x100fb189, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
    II(0x100fb18f, 0x5)   mov(eax, memd_a32(ds, 0x101b8748));   /* mov eax, [0x101b8748] */
    II(0x100fb194, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fb197, 0x3)   lea(edx, eax - 0x1);                  /* lea edx, [eax-0x1] */
    II(0x100fb19a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x78)); /* movsx eax, word [ebp-0x78] */
    II(0x100fb19e, 0x5)   calld(my_min, -0x71a1f);              /* call 0x10089784 */
    II(0x100fb1a3, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
    II(0x100fb1a9, 0x5)   mov(eax, memd_a32(ds, 0x101c38a8));   /* mov eax, [0x101c38a8] */
    II(0x100fb1ae, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f0));   /* cmp eax, [0x101c38f0] */
    II(0x100fb1b4, 0x2)   jld(0x100fb1c3, 0xd);                 /* jl 0x100fb1c3 */
    II(0x100fb1b6, 0x5)   mov(eax, memd_a32(ds, 0x101c38a8));   /* mov eax, [0x101c38a8] */
    II(0x100fb1bb, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f8));   /* cmp eax, [0x101c38f8] */
    II(0x100fb1c1, 0x2)   jled(0x100fb1c5, 0x2);                /* jle 0x100fb1c5 */
l_0x100fb1c3:
    II(0x100fb1c3, 0x2)   jmpd(0x100fb1e9, 0x24);               /* jmp 0x100fb1e9 */
l_0x100fb1c5:
    II(0x100fb1c5, 0x2)   pushd(0x4);                           /* push 0x4 */
    II(0x100fb1c7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x100fb1cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb1cc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x80)); /* movsx eax, word [ebp-0x80] */
    II(0x100fb1d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb1d1, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x70)); /* movsx ecx, word [ebp-0x70] */
    II(0x100fb1d5, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x7c)); /* movsx ebx, word [ebp-0x7c] */
    II(0x100fb1d9, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100fb1de, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fb1e1, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100fb1e4, 0x5)   calld(/* sys */ 0x1016a5a0, 0x6f3b7); /* call 0x1016a5a0 */
l_0x100fb1e9:
    II(0x100fb1e9, 0x5)   mov(eax, memd_a32(ds, 0x101c38ac));   /* mov eax, [0x101c38ac] */
    II(0x100fb1ee, 0x6)   cmp(eax, memd_a32(ds, 0x101c38ec));   /* cmp eax, [0x101c38ec] */
    II(0x100fb1f4, 0x2)   jld(0x100fb203, 0xd);                 /* jl 0x100fb203 */
    II(0x100fb1f6, 0x5)   mov(eax, memd_a32(ds, 0x101c38ac));   /* mov eax, [0x101c38ac] */
    II(0x100fb1fb, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f4));   /* cmp eax, [0x101c38f4] */
    II(0x100fb201, 0x2)   jled(0x100fb205, 0x2);                /* jle 0x100fb205 */
l_0x100fb203:
    II(0x100fb203, 0x2)   jmpd(0x100fb22f, 0x2a);               /* jmp 0x100fb22f */
l_0x100fb205:
    II(0x100fb205, 0x2)   pushd(0x4);                           /* push 0x4 */
    II(0x100fb207, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x88)); /* movsx eax, word [ebp+0xffffff78] */
    II(0x100fb20e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb20f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100fb213, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb214, 0x7)   movsx(ecx, memw_a32(ss, ebp - 0x84)); /* movsx ecx, word [ebp+0xffffff7c] */
    II(0x100fb21b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x74)); /* movsx ebx, word [ebp-0x74] */
    II(0x100fb21f, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100fb224, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fb227, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100fb22a, 0x5)   calld(/* sys */ 0x1016a5a0, 0x6f371); /* call 0x1016a5a0 */
l_0x100fb22f:
    II(0x100fb22f, 0x5)   mov(eax, memd_a32(ds, 0x101c38b0));   /* mov eax, [0x101c38b0] */
    II(0x100fb234, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f0));   /* cmp eax, [0x101c38f0] */
    II(0x100fb23a, 0x2)   jld(0x100fb249, 0xd);                 /* jl 0x100fb249 */
    II(0x100fb23c, 0x5)   mov(eax, memd_a32(ds, 0x101c38b0));   /* mov eax, [0x101c38b0] */
    II(0x100fb241, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f8));   /* cmp eax, [0x101c38f8] */
    II(0x100fb247, 0x2)   jled(0x100fb24b, 0x2);                /* jle 0x100fb24b */
l_0x100fb249:
    II(0x100fb249, 0x2)   jmpd(0x100fb26f, 0x24);               /* jmp 0x100fb26f */
l_0x100fb24b:
    II(0x100fb24b, 0x2)   pushd(0x4);                           /* push 0x4 */
    II(0x100fb24d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x78)); /* movsx eax, word [ebp-0x78] */
    II(0x100fb251, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb252, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x80)); /* movsx eax, word [ebp-0x80] */
    II(0x100fb256, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb257, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x78)); /* movsx ecx, word [ebp-0x78] */
    II(0x100fb25b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x7c)); /* movsx ebx, word [ebp-0x7c] */
    II(0x100fb25f, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100fb264, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fb267, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100fb26a, 0x5)   calld(/* sys */ 0x1016a5a0, 0x6f331); /* call 0x1016a5a0 */
l_0x100fb26f:
    II(0x100fb26f, 0x5)   mov(eax, memd_a32(ds, 0x101c38a4));   /* mov eax, [0x101c38a4] */
    II(0x100fb274, 0x6)   cmp(eax, memd_a32(ds, 0x101c38ec));   /* cmp eax, [0x101c38ec] */
    II(0x100fb27a, 0x2)   jld(0x100fb289, 0xd);                 /* jl 0x100fb289 */
    II(0x100fb27c, 0x5)   mov(eax, memd_a32(ds, 0x101c38a4));   /* mov eax, [0x101c38a4] */
    II(0x100fb281, 0x6)   cmp(eax, memd_a32(ds, 0x101c38f4));   /* cmp eax, [0x101c38f4] */
    II(0x100fb287, 0x2)   jled(0x100fb28b, 0x2);                /* jle 0x100fb28b */
l_0x100fb289:
    II(0x100fb289, 0x2)   jmpd(0x100fb2b5, 0x2a);               /* jmp 0x100fb2b5 */
l_0x100fb28b:
    II(0x100fb28b, 0x2)   pushd(0x4);                           /* push 0x4 */
    II(0x100fb28d, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x88)); /* movsx eax, word [ebp+0xffffff78] */
    II(0x100fb294, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb295, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x6c)); /* movsx eax, word [ebp-0x6c] */
    II(0x100fb299, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb29a, 0x7)   movsx(ecx, memw_a32(ss, ebp - 0x84)); /* movsx ecx, word [ebp+0xffffff7c] */
    II(0x100fb2a1, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x6c)); /* movsx ebx, word [ebp-0x6c] */
    II(0x100fb2a5, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100fb2aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fb2ad, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100fb2b0, 0x5)   calld(/* sys */ 0x1016a5a0, 0x6f2eb); /* call 0x1016a5a0 */
l_0x100fb2b5:
    II(0x100fb2b5, 0x5)   calld(0x100e7c7b, -0x1363f);          /* call 0x100e7c7b */
    II(0x100fb2ba, 0x7)   mov(memb_a32(ds, 0x101c391a), 0);     /* mov byte [0x101c391a], 0x0 */
    II(0x100fb2c1, 0x5)   mov(al, memb_a32(ds, 0x101c391a));    /* mov al, [0x101c391a] */
    II(0x100fb2c6, 0x5)   mov(memb_a32(ds, 0x101c391c), al);    /* mov [0x101c391c], al */
    II(0x100fb2cb, 0x7)   cmp(memb_a32(ds, 0x101c391b), 0);     /* cmp byte [0x101c391b], 0x0 */
    II(0x100fb2d2, 0x6)   jzd(0x100fb429, 0x151);               /* jz dword 0x100fb429 */
    II(0x100fb2d8, 0x5)   mov(eax, 0x23);                       /* mov eax, 0x23 */
    II(0x100fb2dd, 0x5)   calld(0x100e883d, -0x12aa5);          /* call 0x100e883d */
    II(0x100fb2e2, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100fb2e5, 0x2)   pushd(0x1);                           /* push 0x1 */
    II(0x100fb2e7, 0x5)   mov(eax, memd_a32(ds, 0x101c38de));   /* mov eax, [0x101c38de] */
    II(0x100fb2ec, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fb2ef, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb2f0, 0x5)   mov(eax, memd_a32(ds, 0x101c38dc));   /* mov eax, [0x101c38dc] */
    II(0x100fb2f5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fb2f8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fb2f9, 0x6)   mov(ecx, memd_a32(ds, 0x101c38da));   /* mov ecx, [0x101c38da] */
    II(0x100fb2ff, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100fb302, 0x6)   mov(ebx, memd_a32(ds, 0x101c38d8));   /* mov ebx, [0x101c38d8] */
    II(0x100fb308, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100fb30b, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100fb310, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fb313, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100fb316, 0x5)   calld(/* sys */ 0x1016a68c, 0x6f371); /* call 0x1016a68c */
    II(0x100fb31b, 0x7)   cmp(memb_a32(ds, 0x101c37d0), 0);     /* cmp byte [0x101c37d0], 0x0 */
    II(0x100fb322, 0x6)   jzd(0x100fb414, 0xec);                /* jz dword 0x100fb414 */
    II(0x100fb328, 0x5)   mov(eax, memd_a32(ds, 0x101c70e4));   /* mov eax, [0x101c70e4] */
    II(0x100fb32d, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
    II(0x100fb333, 0x6)   mov(edx, memd_a32(ds, 0x101c38e4));   /* mov edx, [0x101c38e4] */
    II(0x100fb339, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100fb33c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fb33f, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100fb342, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fb344, 0x5)   mov(eax, memd_a32(ds, 0x101c38e6));   /* mov eax, [0x101c38e6] */
    II(0x100fb349, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100fb34c, 0x6)   imul(eax, eax, 0x280);                /* imul eax, eax, 0x280 */
    II(0x100fb352, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100fb354, 0x6)   mov(memd_a32(ss, ebp - 0x90), edx);   /* mov [ebp+0xffffff70], edx */
    II(0x100fb35a, 0xa)   mov(memd_a32(ss, ebp - 0x94), 0x38);  /* mov dword [ebp+0xffffff6c], 0x38 */
l_0x100fb364:
    II(0x100fb364, 0x6)   dec(memd_a32(ss, ebp - 0x94));        /* dec dword [ebp+0xffffff6c] */
    II(0x100fb36a, 0x8)   cmp(memw_a32(ss, ebp - 0x94), -0x1 /* 0xff */); /* cmp word [ebp+0xffffff6c], 0xff */
    II(0x100fb372, 0x6)   jzd(0x100fb3f5, 0x7d);                /* jz dword 0x100fb3f5 */
    II(0x100fb378, 0xa)   mov(memd_a32(ss, ebp - 0x98), 0x38);  /* mov dword [ebp+0xffffff68], 0x38 */
l_0x100fb382:
    II(0x100fb382, 0x6)   dec(memd_a32(ss, ebp - 0x98));        /* dec dword [ebp+0xffffff68] */
    II(0x100fb388, 0x8)   cmp(memw_a32(ss, ebp - 0x98), -0x1 /* 0xff */); /* cmp word [ebp+0xffffff68], 0xff */
    II(0x100fb390, 0x2)   jzd(0x100fb3c6, 0x34);                /* jz 0x100fb3c6 */
    II(0x100fb392, 0x6)   mov(edx, memd_a32(ss, ebp - 0x8c));   /* mov edx, [ebp+0xffffff74] */
    II(0x100fb398, 0x6)   inc(memd_a32(ss, ebp - 0x8c));        /* inc dword [ebp+0xffffff74] */
    II(0x100fb39e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100fb3a4, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100fb3a6, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x100fb3a8, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100fb3ae, 0x6)   inc(memd_a32(ss, ebp - 0x90));        /* inc dword [ebp+0xffffff70] */
    II(0x100fb3b4, 0x6)   mov(edx, memd_a32(ss, ebp - 0x8c));   /* mov edx, [ebp+0xffffff74] */
    II(0x100fb3ba, 0x6)   inc(memd_a32(ss, ebp - 0x8c));        /* inc dword [ebp+0xffffff74] */
    II(0x100fb3c0, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100fb3c2, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x100fb3c4, 0x2)   jmpd(0x100fb382, -0x44);              /* jmp 0x100fb382 */
l_0x100fb3c6:
    II(0x100fb3c6, 0x5)   mov(ebx, 0x70);                       /* mov ebx, 0x70 */
    II(0x100fb3cb, 0x6)   mov(edx, memd_a32(ss, ebp - 0x8c));   /* mov edx, [ebp+0xffffff74] */
    II(0x100fb3d1, 0x3)   sub(edx, 0x70);                       /* sub edx, 0x70 */
    II(0x100fb3d4, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x100fb3da, 0x5)   calld(sys_memcpy, 0x6aa6c);           /* call 0x10165e4b */
    II(0x100fb3df, 0xa)   add(memd_a32(ss, ebp - 0x90), 0x248); /* add dword [ebp+0xffffff70], 0x248 */
    II(0x100fb3e9, 0x7)   add(memd_a32(ss, ebp - 0x8c), 0x70);  /* add dword [ebp+0xffffff74], 0x70 */
    II(0x100fb3f0, 0x5)   jmpd(0x100fb364, -0x91);              /* jmp 0x100fb364 */
l_0x100fb3f5:
    II(0x100fb3f5, 0x5)   pushd(0x280);                         /* push dword 0x280 */
    II(0x100fb3fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fb3fd, 0x3)   pushd(memd_a32(ds, eax + 0x16));      /* push dword [eax+0x16] */
    II(0x100fb400, 0x2)   pushd(0x70);                          /* push 0x70 */
    II(0x100fb402, 0x2)   pushd(0x70);                          /* push 0x70 */
    II(0x100fb404, 0x2)   pushd(0x70);                          /* push 0x70 */
    II(0x100fb406, 0x6)   pushd(memd_a32(ds, 0x101c70e4));      /* push dword [0x101c70e4] */
    II(0x100fb40c, 0x5)   calld(/* sys */ 0x1016abbc, 0x6f7ab); /* call 0x1016abbc */
    II(0x100fb411, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
l_0x100fb414:
    II(0x100fb414, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100fb417, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100fb41a, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100fb41d, 0x5)   calld(sys_display_draw_1, 0x6c086);   /* call 0x101674a8 */
    II(0x100fb422, 0x7)   mov(memb_a32(ds, 0x101c391b), 0);     /* mov byte [0x101c391b], 0x0 */
l_0x100fb429:
    II(0x100fb429, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fb42b, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100fb42e, 0x5)   calld(0x100e7e92, -0x135a1);          /* call 0x100e7e92 */
l_0x100fb433:
    II(0x100fb433, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100fb435, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100fb436, 0x1)   popd(edi);                            /* pop edi */
    II(0x100fb437, 0x1)   popd(esi);                            /* pop esi */
    II(0x100fb438, 0x1)   popd(edx);                            /* pop edx */
    II(0x100fb439, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100fb43a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100fb43b, 0x1)   retd();                               /* ret */
FUNC_END

