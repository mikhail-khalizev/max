FUNC_BEGIN(0x1013f8a4, 0xffbde92614a158d2, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xa4, 0x64, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xf4, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0x10, 0xbb, 0xc4, 0xcd, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xc6, 0xfb, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x64, 0x2, 0, 0, 0x50, 0xb9, 0x64, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0x83, 0xe8, 0x4c, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4c, 0xe8, 0x8, 0xfd, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x13, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x14, 0, 0x74, 0x66, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0x10, 0xbb, 0xcb, 0xcd, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0x56, 0xfb, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x66, 0x2, 0, 0, 0x50, 0xb9, 0x66, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0x83, 0xe8, 0x4c, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4c, 0xe8, 0x98, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x13, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x12, 0, 0x74, 0x66, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0x10, 0xbb, 0xd1, 0xcd, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xe6, 0xfa, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x67, 0x2, 0, 0, 0x50, 0xb9, 0x67, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0x83, 0xe8, 0x4c, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4c, 0xe8, 0x28, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x13, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x1b, 0, 0x74, 0x66, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0x10, 0xbb, 0xd7, 0xcd, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0x76, 0xfa, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0x68, 0x2, 0, 0, 0x50, 0xb9, 0x68, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0x83, 0xe8, 0x4c, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4c, 0xe8, 0xb8, 0xfb, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x13, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x1013f8a4, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1013f8a9, 0x5)   calld(sys_check_available_stack_size, 0x264a4); /* call 0x10165d52 */
    II(0x1013f8ae, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013f8af, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013f8b0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013f8b1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013f8b3, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1013f8b9, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013f8bc, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1013f8bf, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1013f8c2, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x1013f8c5, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1013f8ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f8cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013f8ce, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x1013f8d1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013f8d4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f8d5, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x10)); /* movsx ecx, word [ebp+0x10] */
    II(0x1013f8d9, 0x5)   mov(ebx, 0x101acdc4);                 /* mov ebx, 0x101acdc4 */ /* "Attack" */
    II(0x1013f8de, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013f8e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013f8e5, 0x5)   calld(0x1013f4b0, -0x43a);            /* call 0x1013f4b0 */
    II(0x1013f8ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013f8ed, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x1013f8f0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013f8f3, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f8f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013f8f7, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x1013f8fa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013f8fd, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f8fe, 0x5)   mov(eax, 0x264);                      /* mov eax, 0x264 */
    II(0x1013f903, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f904, 0x5)   mov(ecx, 0x264);                      /* mov ecx, 0x264 */
    II(0x1013f909, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1013f90c, 0x3)   sub(eax, 0x4c);                       /* sub eax, 0x4c */
    II(0x1013f90f, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1013f912, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013f916, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013f919, 0x3)   add(eax, 0x4c);                       /* add eax, 0x4c */
    II(0x1013f91c, 0x5)   calld(0x1013f629, -0x2f8);            /* call 0x1013f629 */
    II(0x1013f921, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013f925, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x1013f928, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x1013f92b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013f92e, 0x5)   cmp(memw_a32(ds, eax + 0x14), 0);     /* cmp word [eax+0x14], 0x0 */
    II(0x1013f933, 0x2)   jzd(0x1013f99b, 0x66);                /* jz 0x1013f99b */
    II(0x1013f935, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1013f93a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f93b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013f93e, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1013f941, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013f944, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f945, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x10)); /* movsx ecx, word [ebp+0x10] */
    II(0x1013f949, 0x5)   mov(ebx, 0x101acdcb);                 /* mov ebx, 0x101acdcb */ /* "Shots" */
    II(0x1013f94e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013f952, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013f955, 0x5)   calld(0x1013f4b0, -0x4aa);            /* call 0x1013f4b0 */
    II(0x1013f95a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013f95d, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1013f960, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013f963, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f964, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013f967, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1013f96a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013f96d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f96e, 0x5)   mov(eax, 0x266);                      /* mov eax, 0x266 */
    II(0x1013f973, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f974, 0x5)   mov(ecx, 0x266);                      /* mov ecx, 0x266 */
    II(0x1013f979, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1013f97c, 0x3)   sub(eax, 0x4c);                       /* sub eax, 0x4c */
    II(0x1013f97f, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1013f982, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013f986, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013f989, 0x3)   add(eax, 0x4c);                       /* add eax, 0x4c */
    II(0x1013f98c, 0x5)   calld(0x1013f629, -0x368);            /* call 0x1013f629 */
    II(0x1013f991, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013f995, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x1013f998, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1013f99b:
    II(0x1013f99b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013f99e, 0x5)   cmp(memw_a32(ds, eax + 0x12), 0);     /* cmp word [eax+0x12], 0x0 */
    II(0x1013f9a3, 0x2)   jzd(0x1013fa0b, 0x66);                /* jz 0x1013fa0b */
    II(0x1013f9a5, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1013f9aa, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f9ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013f9ae, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x1013f9b1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013f9b4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f9b5, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x10)); /* movsx ecx, word [ebp+0x10] */
    II(0x1013f9b9, 0x5)   mov(ebx, 0x101acdd1);                 /* mov ebx, 0x101acdd1 */ /* "Range" */
    II(0x1013f9be, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013f9c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013f9c5, 0x5)   calld(0x1013f4b0, -0x51a);            /* call 0x1013f4b0 */
    II(0x1013f9ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013f9cd, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x1013f9d0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013f9d3, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f9d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013f9d7, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x1013f9da, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013f9dd, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f9de, 0x5)   mov(eax, 0x267);                      /* mov eax, 0x267 */
    II(0x1013f9e3, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013f9e4, 0x5)   mov(ecx, 0x267);                      /* mov ecx, 0x267 */
    II(0x1013f9e9, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1013f9ec, 0x3)   sub(eax, 0x4c);                       /* sub eax, 0x4c */
    II(0x1013f9ef, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1013f9f2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013f9f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013f9f9, 0x3)   add(eax, 0x4c);                       /* add eax, 0x4c */
    II(0x1013f9fc, 0x5)   calld(0x1013f629, -0x3d8);            /* call 0x1013f629 */
    II(0x1013fa01, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013fa05, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x1013fa08, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1013fa0b:
    II(0x1013fa0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013fa0e, 0x5)   cmp(memw_a32(ds, eax + 0x1b), 0);     /* cmp word [eax+0x1b], 0x0 */
    II(0x1013fa13, 0x2)   jzd(0x1013fa7b, 0x66);                /* jz 0x1013fa7b */
    II(0x1013fa15, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1013fa1a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fa1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013fa1e, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x1013fa21, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013fa24, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fa25, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x10)); /* movsx ecx, word [ebp+0x10] */
    II(0x1013fa29, 0x5)   mov(ebx, 0x101acdd7);                 /* mov ebx, 0x101acdd7 */ /* "Ammo" */
    II(0x1013fa2e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013fa32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013fa35, 0x5)   calld(0x1013f4b0, -0x58a);            /* call 0x1013f4b0 */
    II(0x1013fa3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013fa3d, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x1013fa40, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013fa43, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fa44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013fa47, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x1013fa4a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013fa4d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fa4e, 0x5)   mov(eax, 0x268);                      /* mov eax, 0x268 */
    II(0x1013fa53, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fa54, 0x5)   mov(ecx, 0x268);                      /* mov ecx, 0x268 */
    II(0x1013fa59, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1013fa5c, 0x3)   sub(eax, 0x4c);                       /* sub eax, 0x4c */
    II(0x1013fa5f, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1013fa62, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013fa66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013fa69, 0x3)   add(eax, 0x4c);                       /* add eax, 0x4c */
    II(0x1013fa6c, 0x5)   calld(0x1013f629, -0x448);            /* call 0x1013f629 */
    II(0x1013fa71, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013fa75, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x1013fa78, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x1013fa7b:
    II(0x1013fa7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013fa7e, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x1013fa81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013fa84, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013fa86, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013fa87, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013fa88, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013fa89, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

