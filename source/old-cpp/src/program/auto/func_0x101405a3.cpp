FUNC_BEGIN(0x101405a3, 0xa90c09797ed0f809, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xa5, 0x57, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf7, 0x45, 0xfc, 0x4, 0, 0, 0, 0x74, 0x17, 0xba, 0x1c, 0x70, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xe2, 0x59, 0x2, 0, 0xe8, 0xfd, 0x59, 0x2, 0, 0xe9, 0xbf, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x46, 0x30, 0x70, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2c, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xdc, 0xe8, 0x30, 0x77, 0xf9, 0xff, 0xe8, 0x5c, 0x59, 0x2, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x30, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe0, 0xe8, 0xb, 0xdf, 0xf8, 0xff, 0xe8, 0x32, 0x59, 0x2, 0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x34, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe4, 0xe8, 0xe1, 0xde, 0xf8, 0xff, 0xe8, 0x8, 0x59, 0x2, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x3e, 0xe8, 0x9, 0x8f, 0xfa, 0xff, 0x83, 0xe8, 0x3e, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1c, 0xe8, 0x9c, 0xe, 0, 0, 0x83, 0xe8, 0x1c, 0x89, 0x45, 0xf8, 0xf7, 0x45, 0xfc, 0x2, 0, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xc5, 0x58, 0x2, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101405a3, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x101405a8, 0x5)   calld(sys_check_available_stack_size, 0x257a5); /* call 0x10165d52 */
    II(0x101405ad, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101405ae, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101405af, 0x1)   pushd(esi);                           /* push esi */
    II(0x101405b0, 0x1)   pushd(edi);                           /* push edi */
    II(0x101405b1, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101405b2, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101405b4, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x101405ba, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101405bd, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101405c0, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x4);   /* test dword [ebp-0x4], 0x4 */
    II(0x101405c7, 0x2)   jzd(0x101405e0, 0x17);                /* jz 0x101405e0 */
    II(0x101405c9, 0x5)   mov(edx, 0x101b701c);                 /* mov edx, 0x101b701c */
    II(0x101405ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101405d1, 0x5)   calld(sys_call_dtor_arr, 0x259e2);    /* call 0x10165fb8 */
    II(0x101405d6, 0x5)   calld(sys_delete_arr, 0x259fd);       /* call 0x10165fd8 */
    II(0x101405db, 0x5)   jmpd(0x1014069f, 0xbf);               /* jmp 0x1014069f */
l_0x101405e0:
    II(0x101405e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101405e3, 0x7)   mov(memd_a32(ds, eax + 0x46), 0x101b7030); /* mov dword [eax+0x46], 0x101b7030 */
    II(0x101405ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101405ed, 0x3)   mov(eax, memd_a32(ds, eax + 0x2c));   /* mov eax, [eax+0x2c] */
    II(0x101405f0, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101405f3, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x101405f7, 0x2)   jzd(0x1014060d, 0x14);                /* jz 0x1014060d */
    II(0x101405f9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101405fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101405fe, 0x5)   calld(my_dtor_d3, -0x688d0);          /* call 0x100d7d33 */
    II(0x10140603, 0x5)   calld(sys_delete, 0x2595c);           /* call 0x10165f64 */
    II(0x10140608, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1014060b, 0x2)   jmpd(0x10140614, 0x7);                /* jmp 0x10140614 */
l_0x1014060d:
    II(0x1014060d, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x10140614:
    II(0x10140614, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140617, 0x3)   mov(eax, memd_a32(ds, eax + 0x30));   /* mov eax, [eax+0x30] */
    II(0x1014061a, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1014061d, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x10140621, 0x2)   jzd(0x10140637, 0x14);                /* jz 0x10140637 */
    II(0x10140623, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10140625, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10140628, 0x5)   calld(my_dtor_d2, -0x720f5);          /* call 0x100ce538 */
    II(0x1014062d, 0x5)   calld(sys_delete, 0x25932);           /* call 0x10165f64 */
    II(0x10140632, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10140635, 0x2)   jmpd(0x1014063e, 0x7);                /* jmp 0x1014063e */
l_0x10140637:
    II(0x10140637, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x1014063e:
    II(0x1014063e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140641, 0x3)   mov(eax, memd_a32(ds, eax + 0x34));   /* mov eax, [eax+0x34] */
    II(0x10140644, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10140647, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1014064b, 0x2)   jzd(0x10140661, 0x14);                /* jz 0x10140661 */
    II(0x1014064d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014064f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10140652, 0x5)   calld(my_dtor_d2, -0x7211f);          /* call 0x100ce538 */
    II(0x10140657, 0x5)   calld(sys_delete, 0x25908);           /* call 0x10165f64 */
    II(0x1014065c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1014065f, 0x2)   jmpd(0x10140668, 0x7);                /* jmp 0x10140668 */
l_0x10140661:
    II(0x10140661, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x10140668:
    II(0x10140668, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014066a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014066d, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x10140670, 0x5)   calld(0x100e957e, -0x570f7);          /* call 0x100e957e */
    II(0x10140675, 0x3)   sub(eax, 0x3e);                       /* sub eax, 0x3e */
    II(0x10140678, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1014067b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014067d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140680, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10140683, 0x5)   calld(0x10141524, 0xe9c);             /* call 0x10141524 */
    II(0x10140688, 0x3)   sub(eax, 0x1c);                       /* sub eax, 0x1c */
    II(0x1014068b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1014068e, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x2);   /* test dword [ebp-0x4], 0x2 */
    II(0x10140695, 0x2)   jzd(0x1014069f, 0x8);                 /* jz 0x1014069f */
    II(0x10140697, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014069a, 0x5)   calld(sys_delete, 0x258c5);           /* call 0x10165f64 */
l_0x1014069f:
    II(0x1014069f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101406a2, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x101406a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101406a8, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101406aa, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101406ab, 0x1)   popd(edi);                            /* pop edi */
    II(0x101406ac, 0x1)   popd(esi);                            /* pop esi */
    II(0x101406ad, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101406ae, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101406af, 0x1)   retd();                               /* ret */
FUNC_END

