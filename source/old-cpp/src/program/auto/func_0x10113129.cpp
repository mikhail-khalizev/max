FUNC_BEGIN(0x10113129, 0xfb0f6bac1294868, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0x1f, 0x2c, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x1e, 0x3, 0x45, 0xf8, 0x8a, 0x80, 0x20, 0x5, 0, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x62, 0xba, 0x12, 0x48, 0x1a, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x1e, 0x8b, 0x5d, 0xf8, 0x81, 0xc3, 0x38, 0x3, 0, 0, 0x1, 0xd8, 0xe8, 0x54, 0x2d, 0x5, 0, 0xf, 0xbf, 0x55, 0xfc, 0x6b, 0xd2, 0x1e, 0x8b, 0x45, 0xf8, 0x5, 0x20, 0x5, 0, 0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x1e, 0x8b, 0x5d, 0xf8, 0x81, 0xc3, 0x38, 0x3, 0, 0, 0x1, 0xd8, 0xe8, 0x8e, 0x2d, 0x5, 0, 0xba, 0x14, 0x48, 0x1a, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x1e, 0x8b, 0x5d, 0xf8, 0x81, 0xc3, 0x38, 0x3, 0, 0, 0x1, 0xd8, 0xe8, 0x72, 0x2d, 0x5, 0, 0xeb, 0x28, 0xf, 0xbf, 0x55, 0xfc, 0x6b, 0xd2, 0x1e, 0x8b, 0x45, 0xf8, 0x5, 0x20, 0x5, 0, 0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x1e, 0x8b, 0x5d, 0xf8, 0x81, 0xc3, 0x38, 0x3, 0, 0, 0x1, 0xd8, 0xe8, 0xe6, 0x2c, 0x5, 0, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x66, 0xc7, 0x80, 0xdc, 0x4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x3, 0x45, 0xf8, 0xc6, 0x80, 0xec, 0x4, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10113129, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x1011312e, 0x5)   calld(sys_check_available_stack_size, 0x52c1f); /* call 0x10165d52 */
    II(0x10113133, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10113134, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10113135, 0x1)   pushd(esi);                           /* push esi */
    II(0x10113136, 0x1)   pushd(edi);                           /* push edi */
    II(0x10113137, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10113138, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011313a, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x10113140, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10113143, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10113146, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1011314a, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x1011314d, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10113150, 0x6)   mov(al, memb_a32(ds, eax + 0x520));   /* mov al, [eax+0x520] */
    II(0x10113156, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011315b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011315d, 0x2)   jzd(0x101131c1, 0x62);                /* jz 0x101131c1 */
    II(0x1011315f, 0x5)   mov(edx, 0x101a4812);                 /* mov edx, 0x101a4812 */ /* "<" */
    II(0x10113164, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10113168, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x1011316b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1011316e, 0x6)   add(ebx, 0x338);                      /* add ebx, 0x338 */
    II(0x10113174, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10113176, 0x5)   calld(sys_strcpy, 0x52d54);           /* call 0x10165ecf */
    II(0x1011317b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1011317f, 0x3)   imul(edx, edx, 0x1e);                 /* imul edx, edx, 0x1e */
    II(0x10113182, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113185, 0x5)   add(eax, 0x520);                      /* add eax, 0x520 */
    II(0x1011318a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011318c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10113190, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x10113193, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10113196, 0x6)   add(ebx, 0x338);                      /* add ebx, 0x338 */
    II(0x1011319c, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1011319e, 0x5)   calld(sys_strcat, 0x52d8e);           /* call 0x10165f31 */
    II(0x101131a3, 0x5)   mov(edx, 0x101a4814);                 /* mov edx, 0x101a4814 */ /* ">" */
    II(0x101131a8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101131ac, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x101131af, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x101131b2, 0x6)   add(ebx, 0x338);                      /* add ebx, 0x338 */
    II(0x101131b8, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x101131ba, 0x5)   calld(sys_strcat, 0x52d72);           /* call 0x10165f31 */
    II(0x101131bf, 0x2)   jmpd(0x101131e9, 0x28);               /* jmp 0x101131e9 */
l_0x101131c1:
    II(0x101131c1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x101131c5, 0x3)   imul(edx, edx, 0x1e);                 /* imul edx, edx, 0x1e */
    II(0x101131c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101131cb, 0x5)   add(eax, 0x520);                      /* add eax, 0x520 */
    II(0x101131d0, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101131d2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101131d6, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x101131d9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x101131dc, 0x6)   add(ebx, 0x338);                      /* add ebx, 0x338 */
    II(0x101131e2, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x101131e4, 0x5)   calld(sys_strcpy, 0x52ce6);           /* call 0x10165ecf */
l_0x101131e9:
    II(0x101131e9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101131ed, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101131ef, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101131f2, 0x9)   mov(memw_a32(ds, eax + 0x4dc), 0);    /* mov word [eax+0x4dc], 0x0 */
    II(0x101131fb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101131ff, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10113202, 0x7)   mov(memb_a32(ds, eax + 0x4ec), 0);    /* mov byte [eax+0x4ec], 0x0 */
    II(0x10113209, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011320b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011320c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011320d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011320e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011320f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10113210, 0x1)   retd();                               /* ret */
FUNC_END

