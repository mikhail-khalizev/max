FUNC_BEGIN(0x100c0d5c, 0x6ef92a7b65f7d0ae, 0x20, ({0x68, 0x74, 0, 0, 0, 0xe8, 0xec, 0x4f, 0xa, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x88, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0x8b, 0x45, 0xf0, 0xe8, 0xb7, 0x54, 0xfb, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x9, 0x8b, 0x45, 0x10, 0x83, 0x78, 0x8, 0, 0x75, 0x2, 0xeb, 0x6, 0x8b, 0x45, 0x10, 0x89, 0x45, 0x14, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7e, 0x13, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x3, 0x45, 0xf8, 0x80, 0x38, 0, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0x1c, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xec, 0x66, 0x3, 0x42, 0x1d, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf0, 0xe8, 0x52, 0x54, 0xfb, 0xff, 0x66, 0x8b, 0x40, 0xe, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x40, 0x14, 0x89, 0x45, 0xd8, 0x31, 0xc0, 0x8b, 0x55, 0xf0, 0x8a, 0x42, 0x54, 0x89, 0x45, 0xd4, 0x8a, 0x45, 0xfc, 0x88, 0x45, 0xe8, 0xe9, 0xa8, 0x2, 0, 0, 0x31, 0xc0, 0x50, 0x8d, 0x45, 0xd4, 0x50, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x50, 0x30, 0xe4, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0xf, 0xbf, 0x4d, 0xe4, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xd0, 0xe8, 0x2e, 0x50, 0xfb, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x75, 0x14, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x69, 0xfc, 0xff, 0xff, 0xe9, 0x9d, 0x2, 0, 0, 0x8b, 0x45, 0xec, 0x80, 0x78, 0x16, 0, 0xf, 0x84, 0xc4, 0, 0, 0, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x45, 0xd4, 0x50, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x50, 0x30, 0xe4, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0xf, 0xbf, 0x4d, 0xe4, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xcc, 0xe8, 0xe5, 0x4f, 0xfb, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x75, 0x14, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x20, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x3, 0x45, 0xf8, 0x80, 0x38, 0, 0x74, 0x46, 0x31, 0xc0, 0x50, 0x8d, 0x45, 0xd4, 0x50, 0xf, 0xbf, 0x45, 0xd8, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0x8b, 0x55, 0xec, 0x8b, 0x52, 0xe, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xe0, 0x1, 0xd0, 0xf, 0xbf, 0xc8, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xc8, 0xe8, 0x8c, 0x4f, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0x14, 0xe8, 0xc9, 0xfb, 0xff, 0xff, 0xeb, 0x2f, 0x31, 0xc0, 0x50, 0x8d, 0x45, 0xd4, 0x50, 0xf, 0xbf, 0x45, 0xd8, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0xf, 0xbf, 0x4d, 0xe0, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xc4, 0xe8, 0x5d, 0x4f, 0xfb, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x75, 0x14, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x98, 0xfb, 0xff, 0xff, 0xe9, 0xae, 0, 0, 0, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x45, 0xd4, 0x50, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x50, 0x30, 0xe4, 0x40, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0xf, 0xbf, 0x4d, 0xe4, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xc0, 0xe8, 0x20, 0x4f, 0xfb, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x75, 0x14, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x5b, 0xfb, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x3, 0x45, 0xf8, 0x80, 0x38, 0, 0x74, 0x63, 0x8b, 0x45, 0xd8, 0xff, 0x4d, 0xd8, 0x98, 0x83, 0xf8, 0x1, 0x7e, 0x57, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xd8, 0x40, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xd8, 0x8d, 0x58, 0x1, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xbc, 0x31, 0xc0, 0x50, 0x8d, 0x45, 0xd4, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0x8b, 0x45, 0xe0, 0x3, 0x45, 0xbc, 0xf, 0xbf, 0xc8, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xb8, 0xe8, 0xaa, 0x4e, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0x14, 0xe8, 0xe7, 0xfa, 0xff, 0xff, 0xeb, 0x9d, 0xe9, 0x19, 0x1, 0, 0, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x45, 0xd4, 0x50, 0xf, 0xbf, 0x45, 0xd8, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0xf, 0xbf, 0x4d, 0xe0, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xb4, 0xe8, 0x73, 0x4e, 0xfb, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x75, 0x14, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0xae, 0xfa, 0xff, 0xff, 0xc7, 0x45, 0xbc, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x3, 0x45, 0xf8, 0x80, 0x38, 0, 0x74, 0x5f, 0x8b, 0x45, 0xec, 0x80, 0x78, 0x16, 0, 0x74, 0x17, 0x8b, 0x55, 0xec, 0x8b, 0x52, 0xe, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xbc, 0xeb, 0x3f, 0x8b, 0x55, 0xec, 0x8b, 0x42, 0xe, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xd8, 0x40, 0x4a, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x5d, 0xd8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xbc, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x74, 0x14, 0x8b, 0x45, 0xf0, 0x31, 0xd2, 0x8a, 0x50, 0x4e, 0xf, 0xbf, 0x45, 0xbc, 0xe8, 0x6, 0x5e, 0xfb, 0xff, 0x89, 0x45, 0xbc, 0xf, 0xbf, 0x45, 0xbc, 0x85, 0xc0, 0x7e, 0x34, 0x31, 0xc0, 0x50, 0x8d, 0x45, 0xd4, 0x50, 0xf, 0xbf, 0x45, 0xd8, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0x8b, 0x45, 0xe0, 0x3, 0x45, 0xbc, 0xf, 0xbf, 0xc8, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xb0, 0xe8, 0xbe, 0x4d, 0xfb, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x75, 0x14, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0xf9, 0xf9, 0xff, 0xff, 0xeb, 0x30, 0xeb, 0x2e, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xac, 0x80, 0x7d, 0xac, 0x2, 0x72, 0x16, 0x80, 0x7d, 0xac, 0x2, 0xf, 0x86, 0x7b, 0xfd, 0xff, 0xff, 0x80, 0x7d, 0xac, 0x3, 0xf, 0x84, 0xf5, 0xfe, 0xff, 0xff, 0xeb, 0xdc, 0x80, 0x7d, 0xac, 0x1, 0xf, 0x84, 0x2c, 0xfd, 0xff, 0xff, 0xeb, 0xd0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x8, 0}))
    II(0x100c0d5c, 0x5)   pushd(0x74);                          /* push dword 0x74 */
    II(0x100c0d61, 0x5)   calld(sys_check_available_stack_size, 0xa4fec); /* call 0x10165d52 */
    II(0x100c0d66, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c0d67, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c0d68, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c0d69, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c0d6b, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x100c0d71, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c0d74, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100c0d77, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100c0d7a, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x100c0d7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0d80, 0x5)   calld(0x1007623c, -0x4ab49);          /* call 0x1007623c */
    II(0x100c0d85, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c0d88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0d8b, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x100c0d8f, 0x2)   jzd(0x100c0d9a, 0x9);                 /* jz 0x100c0d9a */
    II(0x100c0d91, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100c0d94, 0x4)   cmp(memd_a32(ds, eax + 0x8), 0);      /* cmp dword [eax+0x8], 0x0 */
    II(0x100c0d98, 0x2)   jnzd(0x100c0d9c, 0x2);                /* jnz 0x100c0d9c */
l_0x100c0d9a:
    II(0x100c0d9a, 0x2)   jmpd(0x100c0da2, 0x6);                /* jmp 0x100c0da2 */
l_0x100c0d9c:
    II(0x100c0d9c, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100c0d9f, 0x3)   mov(memd_a32(ss, ebp + 0x14), eax);   /* mov [ebp+0x14], eax */
l_0x100c0da2:
    II(0x100c0da2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0da5, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100c0da8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c0dad, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c0daf, 0x2)   jled(0x100c0dc4, 0x13);               /* jle 0x100c0dc4 */
    II(0x100c0db1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0db4, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100c0db7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c0dbc, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100c0dbf, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100c0dc2, 0x2)   jzd(0x100c0dc6, 0x2);                 /* jz 0x100c0dc6 */
l_0x100c0dc4:
    II(0x100c0dc4, 0x2)   jmpd(0x100c0dcb, 0x5);                /* jmp 0x100c0dcb */
l_0x100c0dc6:
    II(0x100c0dc6, 0x5)   jmpd(0x100c10e7, 0x31c);              /* jmp 0x100c10e7 */
l_0x100c0dcb:
    II(0x100c0dcb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c0dce, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x100c0dd2, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100c0dd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100c0dd8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100c0ddb, 0x4)   add(ax, memw_a32(ds, edx + 0x1d));    /* add ax, [edx+0x1d] */
    II(0x100c0ddf, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100c0de2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0de5, 0x5)   calld(0x1007623c, -0x4abae);          /* call 0x1007623c */
    II(0x100c0dea, 0x4)   mov(ax, memw_a32(ds, eax + 0xe));     /* mov ax, [eax+0xe] */
    II(0x100c0dee, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100c0df1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c0df4, 0x4)   mov(ax, memw_a32(ds, eax + 0x14));    /* mov ax, [eax+0x14] */
    II(0x100c0df8, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100c0dfb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0dfd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c0e00, 0x3)   mov(al, memb_a32(ds, edx + 0x54));    /* mov al, [edx+0x54] */
    II(0x100c0e03, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100c0e06, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100c0e09, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x100c0e0c, 0x5)   jmpd(0x100c10b9, 0x2a8);              /* jmp 0x100c10b9 */
l_0x100c0e11:
    II(0x100c0e11, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0e13, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0e14, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c0e17, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0e18, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0e1b, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100c0e1e, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100c0e20, 0x1)   cwde();                               /* cwde */
    II(0x100c0e21, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0e22, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c0e26, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0e27, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x1c)); /* movsx ecx, word [ebp-0x1c] */
    II(0x100c0e2b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c0e2e, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c0e31, 0x5)   calld(0x10075e64, -0x4afd2);          /* call 0x10075e64 */
    II(0x100c0e36, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c0e39, 0x3)   mov(esi, memd_a32(ss, ebp + 0x14));   /* mov esi, [ebp+0x14] */
    II(0x100c0e3c, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c0e3e, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100c0e40, 0x5)   calld(0x100c0aae, -0x397);            /* call 0x100c0aae */
    II(0x100c0e45, 0x5)   jmpd(0x100c10e7, 0x29d);              /* jmp 0x100c10e7 */
l_0x100c0e4a:
    II(0x100c0e4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c0e4d, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x100c0e51, 0x6)   jzd(0x100c0f1b, 0xc4);                /* jz dword 0x100c0f1b */
    II(0x100c0e57, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100c0e5c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0e5d, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c0e60, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0e61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0e64, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100c0e67, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100c0e69, 0x1)   cwde();                               /* cwde */
    II(0x100c0e6a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0e6b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c0e6f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0e70, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x1c)); /* movsx ecx, word [ebp-0x1c] */
    II(0x100c0e74, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c0e77, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100c0e7a, 0x5)   calld(0x10075e64, -0x4b01b);          /* call 0x10075e64 */
    II(0x100c0e7f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c0e82, 0x3)   mov(esi, memd_a32(ss, ebp + 0x14));   /* mov esi, [ebp+0x14] */
    II(0x100c0e85, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c0e87, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100c0e89, 0x5)   calld(0x100c0aae, -0x3e0);            /* call 0x100c0aae */
    II(0x100c0e8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0e91, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100c0e94, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c0e99, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100c0e9c, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100c0e9f, 0x2)   jzd(0x100c0ee7, 0x46);                /* jz 0x100c0ee7 */
    II(0x100c0ea1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0ea3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0ea4, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c0ea7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0ea8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c0eac, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0ead, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c0eb1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0eb2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100c0eb5, 0x3)   mov(edx, memd_a32(ds, edx + 0xe));    /* mov edx, [edx+0xe] */
    II(0x100c0eb8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c0ebb, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c0ebd, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c0ec0, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c0ec2, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c0ec4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100c0ec8, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c0eca, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100c0ecd, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c0ed0, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c0ed3, 0x5)   calld(0x10075e64, -0x4b074);          /* call 0x10075e64 */
    II(0x100c0ed8, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c0eda, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c0edd, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100c0ee0, 0x5)   calld(0x100c0aae, -0x437);            /* call 0x100c0aae */
    II(0x100c0ee5, 0x2)   jmpd(0x100c0f16, 0x2f);               /* jmp 0x100c0f16 */
l_0x100c0ee7:
    II(0x100c0ee7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0ee9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0eea, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c0eed, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0eee, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c0ef2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0ef3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c0ef7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0ef8, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x20)); /* movsx ecx, word [ebp-0x20] */
    II(0x100c0efc, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c0eff, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100c0f02, 0x5)   calld(0x10075e64, -0x4b0a3);          /* call 0x10075e64 */
    II(0x100c0f07, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c0f0a, 0x3)   mov(esi, memd_a32(ss, ebp + 0x14));   /* mov esi, [ebp+0x14] */
    II(0x100c0f0d, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c0f0f, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100c0f11, 0x5)   calld(0x100c0aae, -0x468);            /* call 0x100c0aae */
l_0x100c0f16:
    II(0x100c0f16, 0x5)   jmpd(0x100c0fc9, 0xae);               /* jmp 0x100c0fc9 */
l_0x100c0f1b:
    II(0x100c0f1b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100c0f20, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0f21, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c0f24, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0f25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0f28, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100c0f2b, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100c0f2d, 0x1)   inc(eax);                             /* inc eax */
    II(0x100c0f2e, 0x1)   cwde();                               /* cwde */
    II(0x100c0f2f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0f30, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c0f34, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0f35, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x1c)); /* movsx ecx, word [ebp-0x1c] */
    II(0x100c0f39, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c0f3c, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100c0f3f, 0x5)   calld(0x10075e64, -0x4b0e0);          /* call 0x10075e64 */
    II(0x100c0f44, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c0f47, 0x3)   mov(esi, memd_a32(ss, ebp + 0x14));   /* mov esi, [ebp+0x14] */
    II(0x100c0f4a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c0f4c, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100c0f4e, 0x5)   calld(0x100c0aae, -0x4a5);            /* call 0x100c0aae */
    II(0x100c0f53, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0f56, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100c0f59, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c0f5e, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100c0f61, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100c0f64, 0x2)   jzd(0x100c0fc9, 0x63);                /* jz 0x100c0fc9 */
l_0x100c0f66:
    II(0x100c0f66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100c0f69, 0x3)   dec(memd_a32(ss, ebp - 0x28));        /* dec dword [ebp-0x28] */
    II(0x100c0f6c, 0x1)   cwde();                               /* cwde */
    II(0x100c0f6d, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100c0f70, 0x2)   jled(0x100c0fc9, 0x57);               /* jle 0x100c0fc9 */
    II(0x100c0f72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c0f75, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100c0f78, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c0f7b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c0f7f, 0x1)   inc(eax);                             /* inc eax */
    II(0x100c0f80, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c0f83, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c0f87, 0x3)   lea(ebx, eax + 0x1);                  /* lea ebx, [eax+0x1] */
    II(0x100c0f8a, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c0f8c, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c0f8f, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100c0f91, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100c0f94, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0f96, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0f97, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c0f9a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0f9b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100c0fa0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0fa1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c0fa5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0fa6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100c0fa9, 0x3)   add(eax, memd_a32(ss, ebp - 0x44));   /* add eax, [ebp-0x44] */
    II(0x100c0fac, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100c0faf, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c0fb2, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c0fb5, 0x5)   calld(0x10075e64, -0x4b156);          /* call 0x10075e64 */
    II(0x100c0fba, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c0fbc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c0fbf, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100c0fc2, 0x5)   calld(0x100c0aae, -0x519);            /* call 0x100c0aae */
    II(0x100c0fc7, 0x2)   jmpd(0x100c0f66, -0x63);              /* jmp 0x100c0f66 */
l_0x100c0fc9:
    II(0x100c0fc9, 0x5)   jmpd(0x100c10e7, 0x119);              /* jmp 0x100c10e7 */
l_0x100c0fce:
    II(0x100c0fce, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100c0fd3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0fd4, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c0fd7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0fd8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c0fdc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0fdd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c0fe1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0fe2, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x20)); /* movsx ecx, word [ebp-0x20] */
    II(0x100c0fe6, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c0fe9, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c0fec, 0x5)   calld(0x10075e64, -0x4b18d);          /* call 0x10075e64 */
    II(0x100c0ff1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c0ff4, 0x3)   mov(esi, memd_a32(ss, ebp + 0x14));   /* mov esi, [ebp+0x14] */
    II(0x100c0ff7, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c0ff9, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100c0ffb, 0x5)   calld(0x100c0aae, -0x552);            /* call 0x100c0aae */
    II(0x100c1000, 0x7)   mov(memd_a32(ss, ebp - 0x44), 0);     /* mov dword [ebp-0x44], 0x0 */
    II(0x100c1007, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c100a, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100c100d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c1012, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100c1015, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100c1018, 0x2)   jzd(0x100c1079, 0x5f);                /* jz 0x100c1079 */
    II(0x100c101a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c101d, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x100c1021, 0x2)   jzd(0x100c103a, 0x17);                /* jz 0x100c103a */
    II(0x100c1023, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100c1026, 0x3)   mov(edx, memd_a32(ds, edx + 0xe));    /* mov edx, [edx+0xe] */
    II(0x100c1029, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c102c, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c102e, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c1031, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c1033, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c1035, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100c1038, 0x2)   jmpd(0x100c1079, 0x3f);               /* jmp 0x100c1079 */
l_0x100c103a:
    II(0x100c103a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100c103d, 0x3)   mov(eax, memd_a32(ds, edx + 0xe));    /* mov eax, [edx+0xe] */
    II(0x100c1040, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c1043, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c1047, 0x1)   inc(eax);                             /* inc eax */
    II(0x100c1048, 0x1)   dec(edx);                             /* dec edx */
    II(0x100c1049, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c104c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x28)); /* movsx ebx, word [ebp-0x28] */
    II(0x100c1050, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c1052, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c1055, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100c1057, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100c105a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c105c, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100c1061, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c1063, 0x2)   jzd(0x100c1079, 0x14);                /* jz 0x100c1079 */
    II(0x100c1065, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1068, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c106a, 0x3)   mov(dl, memb_a32(ds, eax + 0x4e));    /* mov dl, [eax+0x4e] */
    II(0x100c106d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x44)); /* movsx eax, word [ebp-0x44] */
    II(0x100c1071, 0x5)   calld(0x10076e7c, -0x4a1fa);          /* call 0x10076e7c */
    II(0x100c1076, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x100c1079:
    II(0x100c1079, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x44)); /* movsx eax, word [ebp-0x44] */
    II(0x100c107d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c107f, 0x2)   jled(0x100c10b5, 0x34);               /* jle 0x100c10b5 */
    II(0x100c1081, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c1083, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c1084, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c1087, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c1088, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c108c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c108d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c1091, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c1092, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100c1095, 0x3)   add(eax, memd_a32(ss, ebp - 0x44));   /* add eax, [ebp-0x44] */
    II(0x100c1098, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100c109b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c109e, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100c10a1, 0x5)   calld(0x10075e64, -0x4b242);          /* call 0x10075e64 */
    II(0x100c10a6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c10a9, 0x3)   mov(esi, memd_a32(ss, ebp + 0x14));   /* mov esi, [ebp+0x14] */
    II(0x100c10ac, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c10ae, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100c10b0, 0x5)   calld(0x100c0aae, -0x607);            /* call 0x100c0aae */
l_0x100c10b5:
    II(0x100c10b5, 0x2)   jmpd(0x100c10e7, 0x30);               /* jmp 0x100c10e7 */
l_0x100c10b7:
    II(0x100c10b7, 0x2)   jmpd(0x100c10e7, 0x2e);               /* jmp 0x100c10e7 */
l_0x100c10b9:
    II(0x100c10b9, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x100c10bc, 0x3)   mov(memb_a32(ss, ebp - 0x54), al);    /* mov [ebp-0x54], al */
    II(0x100c10bf, 0x4)   cmp(memb_a32(ss, ebp - 0x54), 0x2);   /* cmp byte [ebp-0x54], 0x2 */
    II(0x100c10c3, 0x2)   jbd(0x100c10db, 0x16);                /* jb 0x100c10db */
    II(0x100c10c5, 0x4)   cmp(memb_a32(ss, ebp - 0x54), 0x2);   /* cmp byte [ebp-0x54], 0x2 */
    II(0x100c10c9, 0x6)   jbed(0x100c0e4a, -0x285);             /* jbe dword 0x100c0e4a */
    II(0x100c10cf, 0x4)   cmp(memb_a32(ss, ebp - 0x54), 0x3);   /* cmp byte [ebp-0x54], 0x3 */
    II(0x100c10d3, 0x6)   jzd(0x100c0fce, -0x10b);              /* jz dword 0x100c0fce */
    II(0x100c10d9, 0x2)   jmpd(0x100c10b7, -0x24);              /* jmp 0x100c10b7 */
l_0x100c10db:
    II(0x100c10db, 0x4)   cmp(memb_a32(ss, ebp - 0x54), 0x1);   /* cmp byte [ebp-0x54], 0x1 */
    II(0x100c10df, 0x6)   jzd(0x100c0e11, -0x2d4);              /* jz dword 0x100c0e11 */
    II(0x100c10e5, 0x2)   jmpd(0x100c10b7, -0x30);              /* jmp 0x100c10b7 */
l_0x100c10e7:
    II(0x100c10e7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c10e9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c10ea, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c10eb, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c10ec, 0x3)   retd(0x8);                            /* ret 0x8 */
FUNC_END

