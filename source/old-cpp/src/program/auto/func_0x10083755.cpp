FUNC_BEGIN(0x10083755, 0x5a49bfca4cb5c9ce, 0x20, ({0x68, 0xc8, 0, 0, 0, 0xe8, 0xf3, 0x25, 0xe, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xac, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x1c, 0x33, 0xff, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x58, 0x33, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x69, 0xd2, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x15, 0x69, 0, 0, 0x89, 0x45, 0xe4, 0x31, 0xc9, 0xf, 0xbe, 0x5d, 0x10, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbe, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0xfa, 0xe7, 0x3, 0, 0x89, 0x45, 0xe0, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x4d, 0x79, 0, 0, 0xc7, 0x45, 0xcc, 0xff, 0xff, 0xff, 0xff, 0xba, 0x4e, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0xc7, 0x39, 0x3, 0, 0x98, 0x85, 0xc0, 0x7e, 0xc, 0xc7, 0x45, 0xcc, 0x4e, 0, 0, 0, 0xe9, 0xad, 0, 0, 0, 0xba, 0x48, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0xa3, 0x39, 0x3, 0, 0x98, 0x85, 0xc0, 0x7e, 0xc, 0xc7, 0x45, 0xcc, 0x48, 0, 0, 0, 0xe9, 0x89, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0x18, 0xba, 0x41, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x6b, 0x39, 0x3, 0, 0x98, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xcc, 0x41, 0, 0, 0, 0xeb, 0x52, 0xba, 0x1b, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x48, 0x39, 0x3, 0, 0x98, 0x85, 0xc0, 0x7e, 0x9, 0xc7, 0x45, 0xcc, 0x4e, 0, 0, 0, 0xeb, 0x31, 0xba, 0x17, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x27, 0x39, 0x3, 0, 0x98, 0x85, 0xc0, 0x7f, 0x12, 0x8b, 0x55, 0xf0, 0x83, 0xc2, 0x32, 0x8b, 0x45, 0xf8, 0xe8, 0xd0, 0x34, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0xc7, 0x45, 0xcc, 0x48, 0, 0, 0, 0x80, 0x4d, 0xc8, 0x1, 0xf, 0xbf, 0x45, 0xcc, 0x50, 0xf, 0xbe, 0x4d, 0x10, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xb8, 0xe8, 0xd1, 0xc5, 0x9, 0, 0x89, 0x45, 0xb4, 0x80, 0x65, 0xc8, 0xfe, 0x8b, 0x45, 0xf0, 0xe8, 0xae, 0xfd, 0xff, 0xff, 0x88, 0x45, 0xb0, 0x83, 0x7d, 0xe0, 0, 0x75, 0x13, 0xc6, 0x45, 0xac, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xe6, 0x53, 0, 0, 0xe9, 0x86, 0x5, 0, 0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x20, 0xe8, 0x6a, 0x32, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x13, 0xc6, 0x45, 0xac, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xc3, 0x53, 0, 0, 0xe9, 0x63, 0x5, 0, 0, 0xf, 0xbe, 0x5d, 0x10, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0xe8, 0x24, 0xfd, 0x1, 0, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xac, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x9d, 0x53, 0, 0, 0xe9, 0x3d, 0x5, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x20, 0xe8, 0xf7, 0x62, 0, 0, 0xe8, 0xfa, 0x65, 0, 0, 0x85, 0xc0, 0x75, 0x13, 0xc6, 0x45, 0xac, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x74, 0x53, 0, 0, 0xe9, 0x14, 0x5, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x20, 0xe8, 0xce, 0x62, 0, 0, 0xe8, 0xd1, 0x65, 0, 0, 0x89, 0xc2, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x15, 0xf, 0xbf, 0x45, 0xa8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xab, 0xa6, 0x1c, 0x10, 0x89, 0x45, 0xa4, 0xeb, 0x34, 0x8b, 0x45, 0xf8, 0xe8, 0x6b, 0x9, 0xe, 0, 0x84, 0xc0, 0x74, 0x15, 0xf, 0xbf, 0x45, 0xa8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa7, 0xa6, 0x1c, 0x10, 0x89, 0x45, 0xa4, 0xeb, 0x13, 0xf, 0xbf, 0x45, 0xa8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x89, 0x45, 0xa4, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xa0, 0xe8, 0x5d, 0x24, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xec, 0x8d, 0x45, 0x9c, 0xe8, 0x50, 0x24, 0xff, 0xff, 0x89, 0xda, 0xe8, 0xaf, 0x25, 0x2, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0x98, 0x31, 0xc0, 0x8b, 0x55, 0xf8, 0x8a, 0x42, 0x4d, 0x89, 0x45, 0x94, 0x80, 0x7d, 0x10, 0x3, 0x75, 0x7, 0xc7, 0x45, 0x94, 0x1, 0, 0, 0, 0xc7, 0x45, 0x90, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0x90, 0xff, 0x45, 0x90, 0x8b, 0x45, 0x90, 0x66, 0x3b, 0x45, 0x98, 0xf, 0x8d, 0xdf, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0, 0x2b, 0x45, 0x90, 0x66, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x2, 0x3, 0x45, 0x90, 0x66, 0x89, 0x45, 0xea, 0xc7, 0x45, 0x8c, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0x8c, 0x2, 0xf, 0xbf, 0x45, 0x8c, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0xa5, 0x1, 0, 0, 0xc7, 0x45, 0x88, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0x88, 0xff, 0x45, 0x88, 0xf, 0xbf, 0x45, 0x90, 0x1, 0xc0, 0xf, 0xbf, 0x55, 0x88, 0x39, 0xc2, 0xf, 0x8d, 0x7f, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0x8c, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xda, 0x76, 0, 0, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0xd0, 0xe8, 0xf9, 0x47, 0x8, 0, 0x84, 0xc0, 0x74, 0x1d, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xe0, 0xf, 0xbf, 0x55, 0xea, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0x94, 0x7c, 0x2, 0xeb, 0x2c, 0x80, 0x7d, 0xb0, 0, 0x74, 0x24, 0xf, 0xbf, 0x45, 0xea, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xe8, 0x1, 0xd0, 0x3, 0x45, 0xa4, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0x5, 0x1, 0, 0, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0x84, 0xe8, 0x30, 0x23, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0x80, 0xe8, 0x23, 0x23, 0xff, 0xff, 0x89, 0xda, 0xe8, 0x82, 0x24, 0x2, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1c, 0x2b, 0x45, 0xea, 0xf, 0xbf, 0xc8, 0x8b, 0x55, 0xf8, 0x66, 0x8b, 0x42, 0x1a, 0x2b, 0x45, 0xe8, 0x98, 0x89, 0xca, 0xe8, 0xf0, 0x23, 0x2, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x1, 0xd8, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x45, 0x98, 0x7d, 0x17, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xea, 0x8b, 0, 0x1, 0xd0, 0xf6, 0, 0x8, 0x74, 0x2, 0xeb, 0x1c, 0x8d, 0x55, 0xe8, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0xa4, 0x22, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xb8, 0xe8, 0x82, 0xc3, 0x9, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x5e, 0x8b, 0x45, 0xf0, 0xf6, 0x40, 0x3b, 0x1, 0x74, 0x17, 0xf, 0xbf, 0x55, 0xea, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x62, 0x1, 0xff, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x3e, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xea, 0xf, 0xbf, 0x5d, 0xe8, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xa4, 0xc6, 0xfe, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x14, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0xec, 0xe8, 0x1f, 0x4f, 0, 0, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x89, 0x45, 0x98, 0xe9, 0x69, 0xfe, 0xff, 0xff, 0xe9, 0x4a, 0xfe, 0xff, 0xff, 0xe9, 0xe, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x1e, 0x8b, 0x45, 0xee, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x20, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x1a, 0x75, 0xc, 0x8b, 0x45, 0xee, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x1c, 0x74, 0x2, 0xeb, 0x56, 0x8b, 0x55, 0xf0, 0x83, 0xc2, 0x32, 0x8b, 0x45, 0xf8, 0xe8, 0x1f, 0x31, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x31, 0x8b, 0x45, 0xf0, 0x80, 0x78, 0x15, 0x5, 0x75, 0x11, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x15, 0x6, 0x8b, 0x45, 0xf0, 0xe8, 0x46, 0x20, 0, 0, 0xeb, 0x17, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x46, 0x1, 0x8b, 0x45, 0xf0, 0xe8, 0x59, 0x25, 0, 0, 0x8b, 0x45, 0xf0, 0xe8, 0xbb, 0xf6, 0xff, 0xff, 0xc6, 0x45, 0xac, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x40, 0x50, 0, 0, 0xe9, 0xe0, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7e, 0x4, 0xc6, 0x45, 0x10, 0x2, 0x8b, 0x45, 0xf0, 0x80, 0x78, 0x15, 0x5, 0x7d, 0x12, 0x8b, 0x55, 0xf0, 0x83, 0xc2, 0x32, 0x8b, 0x45, 0xf8, 0xe8, 0xad, 0x30, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0xca, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x20, 0xe8, 0x9, 0x60, 0, 0, 0x89, 0xc2, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0xd8, 0x5e, 0, 0, 0x80, 0x4d, 0xc8, 0x1, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xe1, 0x27, 0xff, 0xff, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x80, 0x65, 0xc8, 0xfe, 0xeb, 0xb, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0xc6, 0x2e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0x32, 0x70, 0xb, 0, 0x84, 0xc0, 0x74, 0x61, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0x7e, 0x5d, 0, 0, 0xe8, 0x71, 0x62, 0, 0, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xdc, 0x26, 0xff, 0xff, 0xeb, 0xb, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x8b, 0x2e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xf7, 0x6f, 0xb, 0, 0x84, 0xc0, 0x74, 0x24, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x17, 0x26, 0xff, 0xff, 0x66, 0xc7, 0x40, 0x1e, 0, 0, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x6, 0x26, 0xff, 0xff, 0x66, 0xc7, 0x40, 0x20, 0, 0, 0xeb, 0xc0, 0xeb, 0x83, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xbb, 0x21, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0x86, 0x52, 0, 0, 0xb8, 0x49, 0, 0, 0, 0xe8, 0x38, 0x20, 0xe, 0, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x64, 0xff, 0xff, 0xff, 0, 0x74, 0x41, 0xb8, 0xbb, 0xe, 0xb, 0x10, 0x50, 0x8d, 0x55, 0xec, 0x8d, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0x6d, 0x20, 0xff, 0xff, 0x50, 0xf, 0xbe, 0x45, 0x10, 0x50, 0x31, 0xc9, 0x8b, 0x5d, 0xf4, 0x8b, 0x55, 0xf8, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xe8, 0x10, 0x84, 0x2, 0, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x58, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0xaf, 0x67, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0xcf, 0x66, 0, 0, 0xe8, 0x4e, 0x68, 0, 0, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0x1b, 0x67, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xe3, 0xe, 0x2, 0, 0xc6, 0x45, 0xac, 0x1, 0x31, 0xd2, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0xce, 0x4e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x74, 0x4e, 0, 0, 0xeb, 0x17, 0x31, 0xd2, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0xb5, 0x4e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x5b, 0x4e, 0, 0, 0x8a, 0x45, 0xac, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x10083755, 0x5)   pushd(0xc8);                          /* push dword 0xc8 */
    II(0x1008375a, 0x5)   calld(sys_check_available_stack_size, 0xe25f3); /* call 0x10165d52 */
    II(0x1008375f, 0x1)   pushd(esi);                           /* push esi */
    II(0x10083760, 0x1)   pushd(edi);                           /* push edi */
    II(0x10083761, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10083762, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10083764, 0x6)   sub(esp, 0xac);                       /* sub esp, 0xac */
    II(0x1008376a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008376d, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10083770, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10083773, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x10083776, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083779, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1008377c, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1008377f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083782, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10083785, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10083788, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1008378b, 0x5)   calld(0x10076aac, -0xcce4);           /* call 0x10076aac */
    II(0x10083790, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10083793, 0x5)   calld(my_ctor_0x101b4184, -0xcca8);   /* call 0x10076af0 */
    II(0x10083798, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008379b, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x1008379e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100837a1, 0x6)   imul(edx, edx, 0xc5);                 /* imul edx, edx, 0xc5 */
    II(0x100837a7, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100837ac, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100837ae, 0x5)   calld(0x1008a0c8, 0x6915);            /* call 0x1008a0c8 */
    II(0x100837b3, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100837b6, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100837b8, 0x4)   movsx(ebx, memb_a32(ss, ebp + 0x10)); /* movsx ebx, byte [ebp+0x10] */
    II(0x100837bc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100837bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100837c2, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100837c5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100837c8, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100837ce, 0x5)   mov(esi, 0x101c31c4);                 /* mov esi, 0x101c31c4 */
    II(0x100837d3, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100837d5, 0x5)   calld(0x100c1fd4, 0x3e7fa);           /* call 0x100c1fd4 */
    II(0x100837da, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100837dd, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100837e2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100837e5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100837e6, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100837ec, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100837ef, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100837f1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100837f3, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100837f6, 0x5)   calld(0x1008b148, 0x794d);            /* call 0x1008b148 */
    II(0x100837fb, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0xffffffff); /* mov dword [ebp-0x34], 0xffffffff */
    II(0x10083802, 0x5)   mov(edx, 0x4e);                       /* mov edx, 0x4e */
    II(0x10083807, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008380a, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1008380d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10083810, 0x5)   calld(0x100b71dc, 0x339c7);           /* call 0x100b71dc */
    II(0x10083815, 0x1)   cwde();                               /* cwde */
    II(0x10083816, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10083818, 0x2)   jled(0x10083826, 0xc);                /* jle 0x10083826 */
    II(0x1008381a, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x4e);  /* mov dword [ebp-0x34], 0x4e */
    II(0x10083821, 0x5)   jmpd(0x100838d3, 0xad);               /* jmp 0x100838d3 */
l_0x10083826:
    II(0x10083826, 0x5)   mov(edx, 0x48);                       /* mov edx, 0x48 */
    II(0x1008382b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008382e, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10083831, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10083834, 0x5)   calld(0x100b71dc, 0x339a3);           /* call 0x100b71dc */
    II(0x10083839, 0x1)   cwde();                               /* cwde */
    II(0x1008383a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008383c, 0x2)   jled(0x1008384a, 0xc);                /* jle 0x1008384a */
    II(0x1008383e, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x48);  /* mov dword [ebp-0x34], 0x48 */
    II(0x10083845, 0x5)   jmpd(0x100838d3, 0x89);               /* jmp 0x100838d3 */
l_0x1008384a:
    II(0x1008384a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008384d, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x10083852, 0x2)   jzd(0x1008385e, 0xa);                 /* jz 0x1008385e */
    II(0x10083854, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083857, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x1008385c, 0x2)   jnzd(0x10083876, 0x18);               /* jnz 0x10083876 */
l_0x1008385e:
    II(0x1008385e, 0x5)   mov(edx, 0x41);                       /* mov edx, 0x41 */
    II(0x10083863, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083866, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10083869, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008386c, 0x5)   calld(0x100b71dc, 0x3396b);           /* call 0x100b71dc */
    II(0x10083871, 0x1)   cwde();                               /* cwde */
    II(0x10083872, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10083874, 0x2)   jgd(0x10083878, 0x2);                 /* jg 0x10083878 */
l_0x10083876:
    II(0x10083876, 0x2)   jmpd(0x10083881, 0x9);                /* jmp 0x10083881 */
l_0x10083878:
    II(0x10083878, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x41);  /* mov dword [ebp-0x34], 0x41 */
    II(0x1008387f, 0x2)   jmpd(0x100838d3, 0x52);               /* jmp 0x100838d3 */
l_0x10083881:
    II(0x10083881, 0x5)   mov(edx, 0x1b);                       /* mov edx, 0x1b */
    II(0x10083886, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083889, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1008388c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008388f, 0x5)   calld(0x100b71dc, 0x33948);           /* call 0x100b71dc */
    II(0x10083894, 0x1)   cwde();                               /* cwde */
    II(0x10083895, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10083897, 0x2)   jled(0x100838a2, 0x9);                /* jle 0x100838a2 */
    II(0x10083899, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x4e);  /* mov dword [ebp-0x34], 0x4e */
    II(0x100838a0, 0x2)   jmpd(0x100838d3, 0x31);               /* jmp 0x100838d3 */
l_0x100838a2:
    II(0x100838a2, 0x5)   mov(edx, 0x17);                       /* mov edx, 0x17 */
    II(0x100838a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100838aa, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100838ad, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100838b0, 0x5)   calld(0x100b71dc, 0x33927);           /* call 0x100b71dc */
    II(0x100838b5, 0x1)   cwde();                               /* cwde */
    II(0x100838b6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100838b8, 0x2)   jgd(0x100838cc, 0x12);                /* jg 0x100838cc */
    II(0x100838ba, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100838bd, 0x3)   add(edx, 0x32);                       /* add edx, 0x32 */
    II(0x100838c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100838c3, 0x5)   calld(0x10076d98, -0xcb30);           /* call 0x10076d98 */
    II(0x100838c8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100838ca, 0x2)   jzd(0x100838d3, 0x7);                 /* jz 0x100838d3 */
l_0x100838cc:
    II(0x100838cc, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x48);  /* mov dword [ebp-0x34], 0x48 */
l_0x100838d3:
    II(0x100838d3, 0x4)   or_(memb_a32(ss, ebp - 0x38), 0x1);   /* or byte [ebp-0x38], 0x1 */
    II(0x100838d7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x100838db, 0x1)   pushd(eax);                           /* push eax */
    II(0x100838dc, 0x4)   movsx(ecx, memb_a32(ss, ebp + 0x10)); /* movsx ecx, byte [ebp+0x10] */
    II(0x100838e0, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100838e5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100838e8, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100838eb, 0x5)   calld(0x1011fec1, 0x9c5d1);           /* call 0x1011fec1 */
    II(0x100838f0, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100838f3, 0x4)   and_(memb_a32(ss, ebp - 0x38), -0x2 /* 0xfe */); /* and byte [ebp-0x38], 0xfe */
    II(0x100838f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100838fa, 0x5)   calld(0x100836ad, -0x252);            /* call 0x100836ad */
    II(0x100838ff, 0x3)   mov(memb_a32(ss, ebp - 0x50), al);    /* mov [ebp-0x50], al */
    II(0x10083902, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x10083906, 0x2)   jnzd(0x1008391b, 0x13);               /* jnz 0x1008391b */
    II(0x10083908, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0);     /* mov byte [ebp-0x54], 0x0 */
    II(0x1008390c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008390e, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10083911, 0x5)   calld(my_dtor_d1, 0x53e6);            /* call 0x10088cfc */
    II(0x10083916, 0x5)   jmpd(0x10083ea1, 0x586);              /* jmp 0x10083ea1 */
l_0x1008391b:
    II(0x1008391b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008391e, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10083921, 0x5)   calld(0x10076b90, -0xcd96);           /* call 0x10076b90 */
    II(0x10083926, 0x1)   cwde();                               /* cwde */
    II(0x10083927, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10083929, 0x2)   jnzd(0x1008393e, 0x13);               /* jnz 0x1008393e */
    II(0x1008392b, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0);     /* mov byte [ebp-0x54], 0x0 */
    II(0x1008392f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083931, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10083934, 0x5)   calld(my_dtor_d1, 0x53c3);            /* call 0x10088cfc */
    II(0x10083939, 0x5)   jmpd(0x10083ea1, 0x563);              /* jmp 0x10083ea1 */
l_0x1008393e:
    II(0x1008393e, 0x4)   movsx(ebx, memb_a32(ss, ebp + 0x10)); /* movsx ebx, byte [ebp+0x10] */
    II(0x10083942, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10083945, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083948, 0x5)   calld(0x100a3671, 0x1fd24);           /* call 0x100a3671 */
    II(0x1008394d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008394f, 0x2)   jzd(0x10083964, 0x13);                /* jz 0x10083964 */
    II(0x10083951, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0x1);   /* mov byte [ebp-0x54], 0x1 */
    II(0x10083955, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083957, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1008395a, 0x5)   calld(my_dtor_d1, 0x539d);            /* call 0x10088cfc */
    II(0x1008395f, 0x5)   jmpd(0x10083ea1, 0x53d);              /* jmp 0x10083ea1 */
l_0x10083964:
    II(0x10083964, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083966, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083969, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x1008396c, 0x5)   calld(0x10089c68, 0x62f7);            /* call 0x10089c68 */
    II(0x10083971, 0x5)   calld(0x10089f70, 0x65fa);            /* call 0x10089f70 */
    II(0x10083976, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10083978, 0x2)   jnzd(0x1008398d, 0x13);               /* jnz 0x1008398d */
    II(0x1008397a, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0);     /* mov byte [ebp-0x54], 0x0 */
    II(0x1008397e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083980, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10083983, 0x5)   calld(my_dtor_d1, 0x5374);            /* call 0x10088cfc */
    II(0x10083988, 0x5)   jmpd(0x10083ea1, 0x514);              /* jmp 0x10083ea1 */
l_0x1008398d:
    II(0x1008398d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008398f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083992, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10083995, 0x5)   calld(0x10089c68, 0x62ce);            /* call 0x10089c68 */
    II(0x1008399a, 0x5)   calld(0x10089f70, 0x65d1);            /* call 0x10089f70 */
    II(0x1008399f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100839a1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100839a3, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x100839a6, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100839a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100839ac, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100839b1, 0x2)   jnzd(0x100839c8, 0x15);               /* jnz 0x100839c8 */
    II(0x100839b3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x100839b7, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100839bd, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6ab)); /* mov eax, [eax+0x101ca6ab] */
    II(0x100839c3, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100839c6, 0x2)   jmpd(0x100839fc, 0x34);               /* jmp 0x100839fc */
l_0x100839c8:
    II(0x100839c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100839cb, 0x5)   calld(0x1016433b, 0xe096b);           /* call 0x1016433b */
    II(0x100839d0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100839d2, 0x2)   jzd(0x100839e9, 0x15);                /* jz 0x100839e9 */
    II(0x100839d4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x100839d8, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100839de, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a7)); /* mov eax, [eax+0x101ca6a7] */
    II(0x100839e4, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100839e7, 0x2)   jmpd(0x100839fc, 0x13);               /* jmp 0x100839fc */
l_0x100839e9:
    II(0x100839e9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x100839ed, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100839f3, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x100839f9, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
l_0x100839fc:
    II(0x100839fc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100839ff, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x10083a02, 0x5)   calld(0x10075e64, -0xdba3);           /* call 0x10075e64 */
    II(0x10083a07, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10083a09, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x10083a0c, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10083a0f, 0x5)   calld(0x10075e64, -0xdbb0);           /* call 0x10075e64 */
    II(0x10083a14, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x10083a16, 0x5)   calld(0x100a5fca, 0x225af);           /* call 0x100a5fca */
    II(0x10083a1b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10083a1e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10083a20, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10083a23, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10083a25, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10083a27, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x10083a2a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10083a2c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10083a2f, 0x3)   mov(al, memb_a32(ds, edx + 0x4d));    /* mov al, [edx+0x4d] */
    II(0x10083a32, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x10083a35, 0x4)   cmp(memb_a32(ss, ebp + 0x10), 0x3);   /* cmp byte [ebp+0x10], 0x3 */
    II(0x10083a39, 0x2)   jnzd(0x10083a42, 0x7);                /* jnz 0x10083a42 */
    II(0x10083a3b, 0x7)   mov(memd_a32(ss, ebp - 0x6c), 0x1);   /* mov dword [ebp-0x6c], 0x1 */
l_0x10083a42:
    II(0x10083a42, 0x7)   mov(memd_a32(ss, ebp - 0x70), 0x1);   /* mov dword [ebp-0x70], 0x1 */
    II(0x10083a49, 0x2)   jmpd(0x10083a51, 0x6);                /* jmp 0x10083a51 */
l_0x10083a4b:
    II(0x10083a4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x10083a4e, 0x3)   inc(memd_a32(ss, ebp - 0x70));        /* inc dword [ebp-0x70] */
l_0x10083a51:
    II(0x10083a51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x10083a54, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x68));    /* cmp ax, [ebp-0x68] */
    II(0x10083a58, 0x6)   jged(0x10083c3d, 0x1df);              /* jge dword 0x10083c3d */
    II(0x10083a5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10083a61, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10083a64, 0x3)   sub(eax, memd_a32(ss, ebp - 0x70));   /* sub eax, [ebp-0x70] */
    II(0x10083a67, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x10083a6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10083a6e, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x10083a72, 0x3)   add(eax, memd_a32(ss, ebp - 0x70));   /* add eax, [ebp-0x70] */
    II(0x10083a75, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x10083a79, 0x7)   mov(memd_a32(ss, ebp - 0x74), 0);     /* mov dword [ebp-0x74], 0x0 */
    II(0x10083a80, 0x2)   jmpd(0x10083a86, 0x4);                /* jmp 0x10083a86 */
l_0x10083a82:
    II(0x10083a82, 0x4)   add(memd_a32(ss, ebp - 0x74), 0x2);   /* add dword [ebp-0x74], 0x2 */
l_0x10083a86:
    II(0x10083a86, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x10083a8a, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x10083a8d, 0x6)   jged(0x10083c38, 0x1a5);              /* jge dword 0x10083c38 */
    II(0x10083a93, 0x7)   mov(memd_a32(ss, ebp - 0x78), 0);     /* mov dword [ebp-0x78], 0x0 */
    II(0x10083a9a, 0x2)   jmpd(0x10083aa2, 0x6);                /* jmp 0x10083aa2 */
l_0x10083a9c:
    II(0x10083a9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x10083a9f, 0x3)   inc(memd_a32(ss, ebp - 0x78));        /* inc dword [ebp-0x78] */
l_0x10083aa2:
    II(0x10083aa2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x10083aa6, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10083aa8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x78)); /* movsx edx, word [ebp-0x78] */
    II(0x10083aac, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10083aae, 0x6)   jged(0x10083c33, 0x17f);              /* jge dword 0x10083c33 */
    II(0x10083ab4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x74)); /* movsx edx, word [ebp-0x74] */
    II(0x10083ab8, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10083abb, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x10083ac0, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10083ac2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10083ac5, 0x5)   calld(0x1008b1a4, 0x76da);            /* call 0x1008b1a4 */
    II(0x10083aca, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10083acd, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10083ad0, 0x5)   calld(0x101082ce, 0x847f9);           /* call 0x101082ce */
    II(0x10083ad5, 0x2)   test(al, al);                         /* test al, al */
    II(0x10083ad7, 0x2)   jzd(0x10083af6, 0x1d);                /* jz 0x10083af6 */
    II(0x10083ad9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10083add, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10083ae0, 0x3)   add(eax, memd_a32(ss, ebp - 0x20));   /* add eax, [ebp-0x20] */
    II(0x10083ae3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x16)); /* movsx edx, word [ebp-0x16] */
    II(0x10083ae7, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10083ae9, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10083aeb, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10083aed, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10083af0, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x6c));    /* cmp ax, [ebp-0x6c] */
    II(0x10083af4, 0x2)   jld(0x10083af8, 0x2);                 /* jl 0x10083af8 */
l_0x10083af6:
    II(0x10083af6, 0x2)   jmpd(0x10083b24, 0x2c);               /* jmp 0x10083b24 */
l_0x10083af8:
    II(0x10083af8, 0x4)   cmp(memb_a32(ss, ebp - 0x50), 0);     /* cmp byte [ebp-0x50], 0x0 */
    II(0x10083afc, 0x2)   jzd(0x10083b22, 0x24);                /* jz 0x10083b22 */
    II(0x10083afe, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x16)); /* movsx eax, word [ebp-0x16] */
    II(0x10083b02, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x10083b08, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10083b0b, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10083b0e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10083b12, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10083b14, 0x3)   add(eax, memd_a32(ss, ebp - 0x5c));   /* add eax, [ebp-0x5c] */
    II(0x10083b17, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10083b19, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10083b1e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10083b20, 0x2)   jnzd(0x10083b24, 0x2);                /* jnz 0x10083b24 */
l_0x10083b22:
    II(0x10083b22, 0x2)   jmpd(0x10083b29, 0x5);                /* jmp 0x10083b29 */
l_0x10083b24:
    II(0x10083b24, 0x5)   jmpd(0x10083c2e, 0x105);              /* jmp 0x10083c2e */
l_0x10083b29:
    II(0x10083b29, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10083b2c, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x10083b2f, 0x5)   calld(0x10075e64, -0xdcd0);           /* call 0x10075e64 */
    II(0x10083b34, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10083b36, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10083b39, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x10083b3c, 0x5)   calld(0x10075e64, -0xdcdd);           /* call 0x10075e64 */
    II(0x10083b41, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x10083b43, 0x5)   calld(0x100a5fca, 0x22482);           /* call 0x100a5fca */
    II(0x10083b48, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10083b4b, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10083b4d, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10083b50, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10083b52, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10083b54, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10083b56, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083b59, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x10083b5d, 0x3)   sub(eax, memd_a32(ss, ebp - 0x16));   /* sub eax, [ebp-0x16] */
    II(0x10083b60, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10083b63, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10083b66, 0x4)   mov(ax, memw_a32(ds, edx + 0x1a));    /* mov ax, [edx+0x1a] */
    II(0x10083b6a, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x10083b6d, 0x1)   cwde();                               /* cwde */
    II(0x10083b6e, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x10083b70, 0x5)   calld(0x100a5f65, 0x223f0);           /* call 0x100a5f65 */
    II(0x10083b75, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10083b78, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10083b7a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10083b7d, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10083b80, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x10083b82, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x10083b85, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10083b87, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
//    II(0x10083b8d, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10083b93, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x68));    /* cmp ax, [ebp-0x68] */
    II(0x10083b97, 0x2)   jged(0x10083bb0, 0x17);               /* jge 0x10083bb0 */
    II(0x10083b99, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10083b9d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10083ba0, 0x3)   add(eax, memd_a32(ss, ebp - 0x1c));   /* add eax, [ebp-0x1c] */
    II(0x10083ba3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x16)); /* movsx edx, word [ebp-0x16] */
    II(0x10083ba7, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10083ba9, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10083bab, 0x3)   test(memb_a32(ds, eax), 0x8);         /* test byte [eax], 0x8 */
    II(0x10083bae, 0x2)   jzd(0x10083bb2, 0x2);                 /* jz 0x10083bb2 */
l_0x10083bb0:
    II(0x10083bb0, 0x2)   jmpd(0x10083bce, 0x1c);               /* jmp 0x10083bce */
l_0x10083bb2:
    II(0x10083bb2, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10083bb5, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x10083bbb, 0x5)   calld(0x10075e64, -0xdd5c);           /* call 0x10075e64 */
    II(0x10083bc0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10083bc2, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10083bc5, 0x5)   calld(0x1011ff4c, 0x9c382);           /* call 0x1011ff4c */
    II(0x10083bca, 0x2)   test(al, al);                         /* test al, al */
    II(0x10083bcc, 0x2)   jnzd(0x10083bd0, 0x2);                /* jnz 0x10083bd0 */
l_0x10083bce:
    II(0x10083bce, 0x2)   jmpd(0x10083c2e, 0x5e);               /* jmp 0x10083c2e */
l_0x10083bd0:
    II(0x10083bd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083bd3, 0x4)   test(memb_a32(ds, eax + 0x3b), 0x1);  /* test byte [eax+0x3b], 0x1 */
    II(0x10083bd7, 0x2)   jzd(0x10083bf0, 0x17);                /* jz 0x10083bf0 */
    II(0x10083bd9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x16)); /* movsx edx, word [ebp-0x16] */
    II(0x10083bdd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10083be1, 0x5)   calld(0x10073d48, -0xfe9e);           /* call 0x10073d48 */
    II(0x10083be6, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10083beb, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x10083bee, 0x2)   jzd(0x10083c2e, 0x3e);                /* jz 0x10083c2e */
l_0x10083bf0:
    II(0x10083bf0, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10083bf5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10083bf6, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x16)); /* movsx ecx, word [ebp-0x16] */
    II(0x10083bfa, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x10083bfe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083c01, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x10083c04, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10083c07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083c0a, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10083c0d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10083c10, 0x5)   calld(0x100702b9, -0x1395c);          /* call 0x100702b9 */
    II(0x10083c15, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x10083c18, 0x2)   jzd(0x10083c2e, 0x14);                /* jz 0x10083c2e */
    II(0x10083c1a, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10083c1d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10083c20, 0x5)   calld(0x10088b44, 0x4f1f);            /* call 0x10088b44 */
    II(0x10083c25, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10083c2b, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
l_0x10083c2e:
    II(0x10083c2e, 0x5)   jmpd(0x10083a9c, -0x197);             /* jmp 0x10083a9c */
l_0x10083c33:
    II(0x10083c33, 0x5)   jmpd(0x10083a82, -0x1b6);             /* jmp 0x10083a82 */
l_0x10083c38:
    II(0x10083c38, 0x5)   jmpd(0x10083a4b, -0x1f2);             /* jmp 0x10083a4b */
l_0x10083c3d:
    II(0x10083c3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10083c40, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10083c43, 0x4)   mov(memw_a32(ds, edx + 0x1e), ax);    /* mov [edx+0x1e], ax */
    II(0x10083c47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x10083c4a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10083c4d, 0x4)   mov(memw_a32(ds, edx + 0x20), ax);    /* mov [edx+0x20], ax */
    II(0x10083c51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10083c54, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10083c57, 0x4)   cmp(ax, memw_a32(ds, edx + 0x1a));    /* cmp ax, [edx+0x1a] */
    II(0x10083c5b, 0x2)   jnzd(0x10083c69, 0xc);                /* jnz 0x10083c69 */
    II(0x10083c5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x10083c60, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10083c63, 0x4)   cmp(ax, memw_a32(ds, edx + 0x1c));    /* cmp ax, [edx+0x1c] */
    II(0x10083c67, 0x2)   jzd(0x10083c6b, 0x2);                 /* jz 0x10083c6b */
l_0x10083c69:
    II(0x10083c69, 0x2)   jmpd(0x10083cc1, 0x56);               /* jmp 0x10083cc1 */
l_0x10083c6b:
    II(0x10083c6b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10083c6e, 0x3)   add(edx, 0x32);                       /* add edx, 0x32 */
    II(0x10083c71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083c74, 0x5)   calld(0x10076d98, -0xcee1);           /* call 0x10076d98 */
    II(0x10083c79, 0x2)   test(al, al);                         /* test al, al */
    II(0x10083c7b, 0x2)   jzd(0x10083cae, 0x31);                /* jz 0x10083cae */
    II(0x10083c7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083c80, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x5);   /* cmp byte [eax+0x15], 0x5 */
    II(0x10083c84, 0x2)   jnzd(0x10083c97, 0x11);               /* jnz 0x10083c97 */
    II(0x10083c86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083c89, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x6);   /* mov byte [eax+0x15], 0x6 */
    II(0x10083c8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083c90, 0x5)   calld(0x10085cdb, 0x2046);            /* call 0x10085cdb */
    II(0x10083c95, 0x2)   jmpd(0x10083cae, 0x17);               /* jmp 0x10083cae */
l_0x10083c97:
    II(0x10083c97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083c9a, 0x4)   mov(memb_a32(ds, eax + 0x46), 0x1);   /* mov byte [eax+0x46], 0x1 */
    II(0x10083c9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083ca1, 0x5)   calld(0x100861ff, 0x2559);            /* call 0x100861ff */
    II(0x10083ca6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083ca9, 0x5)   calld(0x10083369, -0x945);            /* call 0x10083369 */
l_0x10083cae:
    II(0x10083cae, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0);     /* mov byte [ebp-0x54], 0x0 */
    II(0x10083cb2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083cb4, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10083cb7, 0x5)   calld(my_dtor_d1, 0x5040);            /* call 0x10088cfc */
    II(0x10083cbc, 0x5)   jmpd(0x10083ea1, 0x1e0);              /* jmp 0x10083ea1 */
l_0x10083cc1:
    II(0x10083cc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083cc4, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x10083cc7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10083ccc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10083cce, 0x2)   jled(0x10083cd4, 0x4);                /* jle 0x10083cd4 */
    II(0x10083cd0, 0x4)   mov(memb_a32(ss, ebp + 0x10), 0x2);   /* mov byte [ebp+0x10], 0x2 */
l_0x10083cd4:
    II(0x10083cd4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083cd7, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x5);   /* cmp byte [eax+0x15], 0x5 */
    II(0x10083cdb, 0x2)   jged(0x10083cef, 0x12);               /* jge 0x10083cef */
    II(0x10083cdd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10083ce0, 0x3)   add(edx, 0x32);                       /* add edx, 0x32 */
    II(0x10083ce3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10083ce6, 0x5)   calld(0x10076d98, -0xcf53);           /* call 0x10076d98 */
    II(0x10083ceb, 0x2)   test(al, al);                         /* test al, al */
    II(0x10083ced, 0x2)   jnzd(0x10083cf4, 0x5);                /* jnz 0x10083cf4 */
l_0x10083cef:
    II(0x10083cef, 0x5)   jmpd(0x10083dbe, 0xca);               /* jmp 0x10083dbe */
l_0x10083cf4:
    II(0x10083cf4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10083cf7, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10083cfa, 0x5)   calld(0x10089d08, 0x6009);            /* call 0x10089d08 */
    II(0x10083cff, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10083d01, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x10083d07, 0x5)   calld(0x10089be4, 0x5ed8);            /* call 0x10089be4 */
    II(0x10083d0c, 0x4)   or_(memb_a32(ss, ebp - 0x38), 0x1);   /* or byte [ebp-0x38], 0x1 */
    II(0x10083d10, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10083d16, 0x5)   calld(0x100764fc, -0xd81f);           /* call 0x100764fc */
    II(0x10083d1b, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
    II(0x10083d21, 0x4)   and_(memb_a32(ss, ebp - 0x38), -0x2 /* 0xfe */); /* and byte [ebp-0x38], 0xfe */
    II(0x10083d25, 0x2)   jmpd(0x10083d32, 0xb);                /* jmp 0x10083d32 */
l_0x10083d27:
    II(0x10083d27, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x10083d2d, 0x5)   calld(0x10076bf8, -0xd13a);           /* call 0x10076bf8 */
l_0x10083d32:
    II(0x10083d32, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083d34, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x10083d3a, 0x5)   calld(0x1013ad71, 0xb7032);           /* call 0x1013ad71 */
    II(0x10083d3f, 0x2)   test(al, al);                         /* test al, al */
    II(0x10083d41, 0x2)   jzd(0x10083da4, 0x61);                /* jz 0x10083da4 */
    II(0x10083d43, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x10083d49, 0x5)   calld(0x10089acc, 0x5d7e);            /* call 0x10089acc */
    II(0x10083d4e, 0x5)   calld(0x10089fc4, 0x6271);            /* call 0x10089fc4 */
    II(0x10083d53, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10083d55, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10083d5b, 0x5)   calld(0x1007643c, -0xd924);           /* call 0x1007643c */
    II(0x10083d60, 0x2)   jmpd(0x10083d6d, 0xb);                /* jmp 0x10083d6d */
l_0x10083d62:
    II(0x10083d62, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10083d68, 0x5)   calld(0x10076bf8, -0xd175);           /* call 0x10076bf8 */
l_0x10083d6d:
    II(0x10083d6d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083d6f, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10083d75, 0x5)   calld(0x1013ad71, 0xb6ff7);           /* call 0x1013ad71 */
    II(0x10083d7a, 0x2)   test(al, al);                         /* test al, al */
    II(0x10083d7c, 0x2)   jzd(0x10083da2, 0x24);                /* jz 0x10083da2 */
    II(0x10083d7e, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10083d84, 0x5)   calld(0x100763a0, -0xd9e9);           /* call 0x100763a0 */
    II(0x10083d89, 0x6)   mov(memw_a32(ds, eax + 0x1e), 0);     /* mov word [eax+0x1e], 0x0 */
    II(0x10083d8f, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10083d95, 0x5)   calld(0x100763a0, -0xd9fa);           /* call 0x100763a0 */
    II(0x10083d9a, 0x6)   mov(memw_a32(ds, eax + 0x20), 0);     /* mov word [eax+0x20], 0x0 */
    II(0x10083da0, 0x2)   jmpd(0x10083d62, -0x40);              /* jmp 0x10083d62 */
l_0x10083da2:
    II(0x10083da2, 0x2)   jmpd(0x10083d27, -0x7d);              /* jmp 0x10083d27 */
l_0x10083da4:
    II(0x10083da4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083da6, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10083dac, 0x5)   calld(0x10075f6c, -0xde45);           /* call 0x10075f6c */
    II(0x10083db1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083db3, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x10083db9, 0x5)   calld(0x10089044, 0x5286);            /* call 0x10089044 */
l_0x10083dbe:
    II(0x10083dbe, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x10083dc3, 0x5)   calld(sys_new, 0xe2038);              /* call 0x10165e00 */
    II(0x10083dc8, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
//    II(0x10083dce, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x10083dd4, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
    II(0x10083dda, 0x7)   cmp(memd_a32(ss, ebp - 0x9c), 0);     /* cmp dword [ebp+0xffffff64], 0x0 */
    II(0x10083de1, 0x2)   jzd(0x10083e24, 0x41);                /* jz 0x10083e24 */
    II(0x10083de3, 0x5)   mov(eax, 0x100b0ebb);                 /* mov eax, 0x100b0ebb */
    II(0x10083de8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10083de9, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x10083dec, 0x6)   lea(eax, ebp - 0xa0);                 /* lea eax, [ebp+0xffffff60] */
    II(0x10083df2, 0x5)   calld(0x10075e64, -0xdf93);           /* call 0x10075e64 */
    II(0x10083df7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10083df8, 0x4)   movsx(eax, memb_a32(ss, ebp + 0x10)); /* movsx eax, byte [ebp+0x10] */
    II(0x10083dfc, 0x1)   pushd(eax);                           /* push eax */
    II(0x10083dfd, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10083dff, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x10083e02, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10083e05, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x10083e0b, 0x5)   calld(0x100ac220, 0x28410);           /* call 0x100ac220 */
    II(0x10083e10, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
//    II(0x10083e16, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x10083e1c, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x10083e22, 0x2)   jmpd(0x10083e30, 0xc);                /* jmp 0x10083e30 */
l_0x10083e24:
    II(0x10083e24, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x10083e2a, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
l_0x10083e30:
    II(0x10083e30, 0x6)   mov(edx, memd_a32(ss, ebp - 0xa8));   /* mov edx, [ebp+0xffffff58] */
    II(0x10083e36, 0x6)   lea(eax, ebp - 0xac);                 /* lea eax, [ebp+0xffffff54] */
    II(0x10083e3c, 0x5)   calld(0x1008a5f0, 0x67af);            /* call 0x1008a5f0 */
    II(0x10083e41, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10083e46, 0x6)   lea(eax, ebp - 0xac);                 /* lea eax, [ebp+0xffffff54] */
    II(0x10083e4c, 0x5)   calld(0x1008a520, 0x66cf);            /* call 0x1008a520 */
    II(0x10083e51, 0x5)   calld(0x1008a6a4, 0x684e);            /* call 0x1008a6a4 */
    II(0x10083e56, 0x6)   lea(eax, ebp - 0xac);                 /* lea eax, [ebp+0xffffff54] */
    II(0x10083e5c, 0x5)   calld(0x1008a57c, 0x671b);            /* call 0x1008a57c */
    II(0x10083e61, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10083e63, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10083e68, 0x5)   calld(0x100a4d50, 0x20ee3);           /* call 0x100a4d50 */
    II(0x10083e6d, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0x1);   /* mov byte [ebp-0x54], 0x1 */
    II(0x10083e71, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083e73, 0x6)   lea(eax, ebp - 0xac);                 /* lea eax, [ebp+0xffffff54] */
    II(0x10083e79, 0x5)   calld(0x10088d4c, 0x4ece);            /* call 0x10088d4c */
    II(0x10083e7e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10083e80, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10083e83, 0x5)   calld(my_dtor_d1, 0x4e74);            /* call 0x10088cfc */
    II(0x10083e88, 0x2)   jmpd(0x10083ea1, 0x17);               /* jmp 0x10083ea1 */
//  II(0x10083e8a, 0x17)  /* Недостижимый код. */
l_0x10083ea1:
    II(0x10083ea1, 0x3)   mov(al, memb_a32(ss, ebp - 0x54));    /* mov al, [ebp-0x54] */
    II(0x10083ea4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10083ea6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10083ea7, 0x1)   popd(edi);                            /* pop edi */
    II(0x10083ea8, 0x1)   popd(esi);                            /* pop esi */
    II(0x10083ea9, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

