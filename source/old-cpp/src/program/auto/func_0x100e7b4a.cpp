FUNC_BEGIN(0x100e7b4a, 0x2451670c5ce43a3f, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0xfe, 0xe1, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x83, 0xef, 0xf8, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x37, 0xc, 0, 0, 0x8d, 0x7d, 0xd8, 0x89, 0xc6, 0xa5, 0xa5, 0xa5, 0xa5, 0x8b, 0x45, 0xfc, 0xe8, 0x86, 0xb, 0, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0xe3, 0xb, 0, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0xa0, 0xb, 0, 0, 0x89, 0x45, 0xf8, 0x66, 0xc7, 0x45, 0xea, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xea, 0x66, 0xff, 0x45, 0xea, 0x8b, 0x45, 0xea, 0x66, 0x3b, 0x45, 0xf8, 0xf, 0x8d, 0xb7, 0, 0, 0, 0x66, 0xc7, 0x45, 0xe8, 0, 0, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xf4, 0xf, 0x8d, 0x9f, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xf4, 0x7d, 0x1d, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xea, 0x8b, 0, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xe8, 0x66, 0xff, 0x45, 0xe8, 0xeb, 0xcf, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xf4, 0x7d, 0x60, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xf4, 0x7d, 0x1e, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xea, 0x8b, 0, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xe8, 0x66, 0xff, 0x45, 0xe8, 0xeb, 0xce, 0x8b, 0x45, 0xe8, 0x3, 0x45, 0xd8, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xea, 0x3, 0x45, 0xdc, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x3, 0x45, 0xd8, 0xf, 0xbf, 0xd0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0xc8, 0xac, 0x5, 0, 0xe9, 0x54, 0xff, 0xff, 0xff, 0xe9, 0x35, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100e7b4a, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x100e7b4f, 0x5)   calld(sys_check_available_stack_size, 0x7e1fe); /* call 0x10165d52 */
    II(0x100e7b54, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e7b55, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e7b56, 0x1)   pushd(edx);                           /* push edx */
    II(0x100e7b57, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e7b58, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e7b59, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e7b5a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e7b5c, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100e7b62, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100e7b65, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100e7b68, 0x5)   calld(my_ctor_0x101b4184, -0x7107d);  /* call 0x10076af0 */
    II(0x100e7b6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7b70, 0x5)   calld(0x100e87ac, 0xc37);             /* call 0x100e87ac */
    II(0x100e7b75, 0x3)   lea(edi, ebp - 0x28);                 /* lea edi, [ebp-0x28] */
    II(0x100e7b78, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x100e7b7a, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e7b7b, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e7b7c, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e7b7d, 0x1)   movsd_a32();                          /* movsd */
    II(0x100e7b7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7b81, 0x5)   calld(0x100e870c, 0xb86);             /* call 0x100e870c */
    II(0x100e7b86, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100e7b89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7b8c, 0x5)   calld(0x100e8774, 0xbe3);             /* call 0x100e8774 */
    II(0x100e7b91, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100e7b94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e7b97, 0x5)   calld(0x100e873c, 0xba0);             /* call 0x100e873c */
    II(0x100e7b9c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100e7b9f, 0x6)   mov(memw_a32(ss, ebp - 0x16), 0);     /* mov word [ebp-0x16], 0x0 */
    II(0x100e7ba5, 0x2)   jmpd(0x100e7bae, 0x7);                /* jmp 0x100e7bae */
l_0x100e7ba7:
    II(0x100e7ba7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x100e7baa, 0x4)   inc(memw_a32(ss, ebp - 0x16));        /* inc word [ebp-0x16] */
l_0x100e7bae:
    II(0x100e7bae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x100e7bb1, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100e7bb5, 0x6)   jged(0x100e7c72, 0xb7);               /* jge dword 0x100e7c72 */
    II(0x100e7bbb, 0x6)   mov(memw_a32(ss, ebp - 0x18), 0);     /* mov word [ebp-0x18], 0x0 */
l_0x100e7bc1:
    II(0x100e7bc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e7bc4, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100e7bc8, 0x6)   jged(0x100e7c6d, 0x9f);               /* jge dword 0x100e7c6d */
l_0x100e7bce:
    II(0x100e7bce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e7bd1, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100e7bd5, 0x2)   jged(0x100e7bf4, 0x1d);               /* jge 0x100e7bf4 */
    II(0x100e7bd7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100e7bdb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e7bde, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x100e7be1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x16)); /* movsx edx, word [ebp-0x16] */
    II(0x100e7be5, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100e7be7, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e7be9, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e7beb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e7bf0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e7bf2, 0x2)   jzd(0x100e7bf6, 0x2);                 /* jz 0x100e7bf6 */
l_0x100e7bf4:
    II(0x100e7bf4, 0x2)   jmpd(0x100e7bff, 0x9);                /* jmp 0x100e7bff */
l_0x100e7bf6:
    II(0x100e7bf6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e7bf9, 0x4)   inc(memw_a32(ss, ebp - 0x18));        /* inc word [ebp-0x18] */
    II(0x100e7bfd, 0x2)   jmpd(0x100e7bce, -0x31);              /* jmp 0x100e7bce */
l_0x100e7bff:
    II(0x100e7bff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e7c02, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100e7c06, 0x2)   jged(0x100e7c68, 0x60);               /* jge 0x100e7c68 */
    II(0x100e7c08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e7c0b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x100e7c0e:
    II(0x100e7c0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e7c11, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100e7c15, 0x2)   jged(0x100e7c35, 0x1e);               /* jge 0x100e7c35 */
    II(0x100e7c17, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100e7c1b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e7c1e, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x100e7c21, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x16)); /* movsx edx, word [ebp-0x16] */
    II(0x100e7c25, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100e7c27, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e7c29, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e7c2b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e7c30, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100e7c33, 0x2)   jzd(0x100e7c37, 0x2);                 /* jz 0x100e7c37 */
l_0x100e7c35:
    II(0x100e7c35, 0x2)   jmpd(0x100e7c40, 0x9);                /* jmp 0x100e7c40 */
l_0x100e7c37:
    II(0x100e7c37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e7c3a, 0x4)   inc(memw_a32(ss, ebp - 0x18));        /* inc word [ebp-0x18] */
    II(0x100e7c3e, 0x2)   jmpd(0x100e7c0e, -0x32);              /* jmp 0x100e7c0e */
l_0x100e7c40:
    II(0x100e7c40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e7c43, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x100e7c46, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e7c49, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x100e7c4c, 0x3)   add(eax, memd_a32(ss, ebp - 0x24));   /* add eax, [ebp-0x24] */
    II(0x100e7c4f, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100e7c52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e7c55, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x100e7c58, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e7c5b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e7c5d, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100e7c62, 0x1)   cwde();                               /* cwde */
    II(0x100e7c63, 0x5)   calld(0x10142930, 0x5acc8);           /* call 0x10142930 */
l_0x100e7c68:
    II(0x100e7c68, 0x5)   jmpd(0x100e7bc1, -0xac);              /* jmp 0x100e7bc1 */
l_0x100e7c6d:
    II(0x100e7c6d, 0x5)   jmpd(0x100e7ba7, -0xcb);              /* jmp 0x100e7ba7 */
l_0x100e7c72:
    II(0x100e7c72, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e7c74, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e7c75, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e7c76, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e7c77, 0x1)   popd(edx);                            /* pop edx */
    II(0x100e7c78, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e7c79, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e7c7a, 0x1)   retd();                               /* ret */
FUNC_END

