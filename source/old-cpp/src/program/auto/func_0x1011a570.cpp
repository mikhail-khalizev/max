FUNC_BEGIN(0x1011a570, 0x4b256d8fd8976660, 0x20, ({0x68, 0x78, 0, 0, 0, 0xe8, 0xd8, 0xb7, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x5c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x43, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x14, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0xbf, 0xdc, 0xf9, 0xff, 0x66, 0xf, 0xbe, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x14, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0xa4, 0xdc, 0xf9, 0xff, 0x66, 0xf, 0xbe, 0x40, 0x1, 0x89, 0x45, 0xd0, 0xf, 0xbf, 0x55, 0xc4, 0xf, 0xbf, 0x45, 0xd0, 0x9, 0xd0, 0x85, 0xc0, 0xf, 0x85, 0x8a, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x16, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0xb8, 0xdc, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x50, 0x16, 0x7e, 0x39, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x14, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x59, 0xdc, 0xf9, 0xff, 0x66, 0xf, 0xbe, 0, 0x89, 0x45, 0xc4, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x14, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x3e, 0xdc, 0xf9, 0xff, 0x66, 0xf, 0xbe, 0x40, 0x1, 0x89, 0x45, 0xd0, 0xeb, 0x2f, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xc0, 0xe8, 0x8d, 0x66, 0, 0, 0xe8, 0x38, 0x64, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xb3, 0x49, 0x3, 0, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x9a, 0x5c, 0, 0, 0xe9, 0x8f, 0x5, 0, 0, 0xe9, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xd0, 0xf, 0xbf, 0x45, 0xc4, 0xe8, 0xb1, 0xf7, 0xff, 0xff, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x66, 0xf, 0xbe, 0x80, 0x14, 0xd9, 0x1b, 0x10, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xdc, 0x66, 0xf, 0xbe, 0x80, 0x1c, 0xd9, 0x1b, 0x10, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x88, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x4f, 0, 0x74, 0xb, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4f, 0xfe, 0xc8, 0x88, 0x45, 0xf4, 0x31, 0xc0, 0x8a, 0x45, 0xf4, 0x85, 0xc0, 0x74, 0xf, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x60, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x4b, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x60, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x1b, 0x8b, 0x45, 0xfc, 0xe8, 0xc7, 0xf, 0x3, 0, 0xe8, 0x95, 0x63, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x10, 0x49, 0x3, 0, 0xeb, 0x18, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0xe8, 0x9b, 0x63, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x87, 0x47, 0x3, 0, 0xc6, 0x45, 0xec, 0, 0xe9, 0xdc, 0x4, 0, 0, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0xe8, 0x82, 0xd8, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xec, 0, 0xe9, 0xc3, 0x4, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xd4, 0x3, 0x45, 0xe0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe4, 0x3, 0x45, 0xd8, 0x89, 0x45, 0xcc, 0xc7, 0x45, 0xc8, 0x4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x1b, 0xf, 0x85, 0x23, 0x1, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xbc, 0xe8, 0x67, 0xbf, 0xf5, 0xff, 0x89, 0x45, 0xb8, 0x80, 0x65, 0xf0, 0xfe, 0xf, 0xbf, 0x5d, 0xcc, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0x6b, 0xa9, 0xf5, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xbc, 0xe8, 0x86, 0xbe, 0xf5, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0xbd, 0x5, 0x2, 0, 0x84, 0xc0, 0xf, 0x84, 0xda, 0, 0, 0, 0x8d, 0x45, 0xbc, 0xe8, 0xb0, 0xbd, 0xf5, 0xff, 0xe8, 0x73, 0xba, 0xf5, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xbc, 0xe8, 0xfd, 0xbd, 0xf5, 0xff, 0xe8, 0xff, 0x8c, 0xf5, 0xff, 0x66, 0x3b, 0x42, 0x19, 0x75, 0x24, 0xe8, 0xad, 0x62, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x28, 0x48, 0x3, 0, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0x2f, 0xb7, 0xf5, 0xff, 0xe9, 0x4, 0x4, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0x10, 0x8d, 0x45, 0xbc, 0xe8, 0x63, 0xbd, 0xf5, 0xff, 0x66, 0x83, 0x78, 0x8, 0x48, 0x74, 0xf, 0x8d, 0x45, 0xbc, 0xe8, 0x54, 0xbd, 0xf5, 0xff, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x4, 0xeb, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x3, 0x8d, 0x45, 0xbc, 0xe8, 0x91, 0xbd, 0xf5, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x4d, 0x1, 0xf7, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0xdc, 0xc1, 0xf5, 0xff, 0xba, 0x21, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa5, 0x86, 0x4, 0, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x26, 0xc5, 0xf5, 0xff, 0x84, 0xc0, 0x74, 0xd, 0x8d, 0x45, 0xbc, 0xe8, 0x52, 0xbd, 0xf5, 0xff, 0xe8, 0xb4, 0x4d, 0xfe, 0xff, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0x9b, 0xb6, 0xf5, 0xff, 0xe9, 0x70, 0x3, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0x8c, 0xb6, 0xf5, 0xff, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x29, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xcc, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x34, 0xfb, 0xff, 0xff, 0xb8, 0x1a, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xcc, 0xf, 0xbf, 0x5d, 0xe8, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xcf, 0x59, 0xf5, 0xff, 0x89, 0x45, 0xc8, 0xf, 0xbf, 0x45, 0xc8, 0x85, 0xc0, 0xf, 0x85, 0xec, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x12, 0x24, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xcc, 0xf, 0xbf, 0x5d, 0xe8, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0xea, 0x56, 0xf5, 0xff, 0x66, 0x85, 0xc0, 0xf, 0x85, 0xad, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xb4, 0xe8, 0xa6, 0x63, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x4, 0x74, 0x21, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x2, 0xeb, 0x17, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0xc, 0xa1, 0x60, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x13, 0xe8, 0xe, 0x61, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x89, 0x46, 0x3, 0, 0xeb, 0x42, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x2a, 0xeb, 0x18, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x17, 0xe, 0, 0, 0x85, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x2a, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x30, 0x59, 0, 0, 0xc6, 0x45, 0xec, 0, 0xe9, 0x21, 0x2, 0, 0, 0x66, 0x83, 0x7d, 0xe0, 0, 0x74, 0x7, 0x66, 0x83, 0x7d, 0xd8, 0, 0x75, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xb0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xb0, 0, 0x31, 0xc9, 0x8a, 0x4d, 0xb0, 0xbb, 0x2, 0, 0, 0, 0xf, 0xbf, 0x55, 0xc8, 0x8b, 0x45, 0xfc, 0xe8, 0x78, 0xf6, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x21, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0xe8, 0x8b, 0x60, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x77, 0x44, 0x3, 0, 0xc6, 0x45, 0xec, 0, 0xe9, 0xcc, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x12, 0x25, 0x80, 0x1, 0, 0, 0x3d, 0x80, 0x1, 0, 0, 0xf, 0x85, 0x7b, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xcc, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0xeb, 0x92, 0xf5, 0xff, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x41, 0xf, 0x85, 0xfc, 0, 0, 0, 0xc7, 0x45, 0xa8, 0, 0, 0, 0, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xac, 0x83, 0xf8, 0x2, 0x74, 0xc, 0xc7, 0x45, 0xa8, 0x8, 0, 0, 0, 0xe9, 0xcc, 0, 0, 0, 0xc7, 0x45, 0xa4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xa4, 0xff, 0x45, 0xa4, 0xf, 0xbf, 0x45, 0xa4, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xb0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xa4, 0x39, 0xc2, 0x74, 0x19, 0xf, 0xbf, 0x45, 0xa4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0x7a, 0, 0, 0, 0xf, 0xbf, 0x45, 0xcc, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0xe8, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xa4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa7, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x4c, 0xf, 0xbf, 0x55, 0xa4, 0x8b, 0x45, 0xfc, 0xe8, 0x5c, 0xb7, 0xf5, 0xff, 0x84, 0xc0, 0x74, 0x33, 0xf, 0xbf, 0x45, 0xcc, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0xe8, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xa4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x5, 0xe9, 0x3d, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xa4, 0x83, 0xf8, 0x4, 0x7d, 0x7, 0xc7, 0x45, 0xa8, 0x8, 0, 0, 0, 0xeb, 0x1b, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xac, 0x83, 0xf8, 0x2, 0x75, 0x9, 0xc7, 0x45, 0xa8, 0x8, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xa8, 0, 0, 0, 0, 0x8b, 0x45, 0xa8, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x33, 0x74, 0x3a, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0xc, 0x8b, 0x45, 0xa8, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x37, 0xeb, 0xf, 0x8b, 0x45, 0xa8, 0x5, 0x10, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x37, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x39, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xa8, 0x8b, 0x45, 0xfc, 0xe8, 0xec, 0xee, 0x2, 0, 0xf, 0xbf, 0x5d, 0xcc, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0x22, 0x78, 0x3, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x5e, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x6, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa2, 0xc1, 0xf5, 0xff, 0x84, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x4b, 0x5d, 0xfe, 0xff, 0xc6, 0x45, 0xec, 0x1, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011a570, 0x5)   pushd(0x78);                          /* push dword 0x78 */
    II(0x1011a575, 0x5)   calld(sys_check_available_stack_size, 0x4b7d8); /* call 0x10165d52 */
    II(0x1011a57a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011a57b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011a57c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011a57d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011a57e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011a57f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011a581, 0x6)   sub(esp, 0x5c);                       /* sub esp, 0x5c */
    II(0x1011a587, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011a58a, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1011a58d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a590, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x1011a594, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a597, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x1011a59b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a59e, 0x4)   mov(dx, memw_a32(ds, eax + 0xa));     /* mov dx, [eax+0xa] */
    II(0x1011a5a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a5a5, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x1011a5a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a5ac, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
    II(0x1011a5af, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011a5b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a5b5, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1011a5b8, 0x5)   calld(0x100b827c, -0x62341);          /* call 0x100b827c */
    II(0x1011a5bd, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x1011a5c1, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1011a5c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a5c7, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
    II(0x1011a5ca, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011a5cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a5d0, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1011a5d3, 0x5)   calld(0x100b827c, -0x6235c);          /* call 0x100b827c */
    II(0x1011a5d8, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x1011a5dd, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
l_0x1011a5e0:
    II(0x1011a5e0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x1011a5e4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1011a5e8, 0x2)   or_(eax, edx);                        /* or eax, edx */
    II(0x1011a5ea, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011a5ec, 0x6)   jnzd(0x1011a67c, 0x8a);               /* jnz dword 0x1011a67c */
    II(0x1011a5f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a5f5, 0x4)   inc(memw_a32(ds, eax + 0x16));        /* inc word [eax+0x16] */
    II(0x1011a5f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a5fc, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1011a5ff, 0x5)   calld(0x100b82bc, -0x62348);          /* call 0x100b82bc */
    II(0x1011a604, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011a606, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a609, 0x4)   cmp(dx, memw_a32(ds, eax + 0x16));    /* cmp dx, [eax+0x16] */
    II(0x1011a60d, 0x2)   jled(0x1011a648, 0x39);               /* jle 0x1011a648 */
    II(0x1011a60f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011a612, 0x3)   mov(edx, memd_a32(ds, edx + 0x14));   /* mov edx, [edx+0x14] */
    II(0x1011a615, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011a618, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a61b, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1011a61e, 0x5)   calld(0x100b827c, -0x623a7);          /* call 0x100b827c */
    II(0x1011a623, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x1011a627, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1011a62a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011a62d, 0x3)   mov(edx, memd_a32(ds, edx + 0x14));   /* mov edx, [edx+0x14] */
    II(0x1011a630, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011a633, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011a636, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1011a639, 0x5)   calld(0x100b827c, -0x623c2);          /* call 0x100b827c */
    II(0x1011a63e, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x1011a643, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1011a646, 0x2)   jmpd(0x1011a677, 0x2f);               /* jmp 0x1011a677 */
l_0x1011a648:
    II(0x1011a648, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011a64b, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1011a64e, 0x5)   calld(0x10120ce0, 0x668d);            /* call 0x10120ce0 */
    II(0x1011a653, 0x5)   calld(0x10120a90, 0x6438);            /* call 0x10120a90 */
    II(0x1011a658, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a65a, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011a65c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a65f, 0x5)   calld(0x1014f017, 0x349b3);           /* call 0x1014f017 */
    II(0x1011a664, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1011a668, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a66a, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1011a66d, 0x5)   calld(0x1012030c, 0x5c9a);            /* call 0x1012030c */
    II(0x1011a672, 0x5)   jmpd(0x1011ac06, 0x58f);              /* jmp 0x1011ac06 */
l_0x1011a677:
    II(0x1011a677, 0x5)   jmpd(0x1011a5e0, -0x9c);              /* jmp 0x1011a5e0 */
l_0x1011a67c:
    II(0x1011a67c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x1011a680, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x1011a684, 0x5)   calld(0x10119e3a, -0x84f);            /* call 0x10119e3a */
    II(0x1011a689, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1011a68c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1011a690, 0x8)   movsx(ax, memb_a32(ds, eax + 0x101bd914)); /* movsx ax, byte [eax+0x101bd914] */
    II(0x1011a698, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1011a69b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1011a69f, 0x8)   movsx(ax, memb_a32(ds, eax + 0x101bd91c)); /* movsx ax, byte [eax+0x101bd91c] */
    II(0x1011a6a7, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1011a6aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a6ad, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x1011a6b0, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x1011a6b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a6b6, 0x4)   cmp(memb_a32(ds, eax + 0x4f), 0);     /* cmp byte [eax+0x4f], 0x0 */
    II(0x1011a6ba, 0x2)   jzd(0x1011a6c7, 0xb);                 /* jz 0x1011a6c7 */
    II(0x1011a6bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a6bf, 0x3)   mov(al, memb_a32(ds, eax + 0x4f));    /* mov al, [eax+0x4f] */
    II(0x1011a6c2, 0x2)   dec(al);                              /* dec al */
    II(0x1011a6c4, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
l_0x1011a6c7:
    II(0x1011a6c7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1011a6c9, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x1011a6cc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011a6ce, 0x2)   jzd(0x1011a6df, 0xf);                 /* jz 0x1011a6df */
    II(0x1011a6d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a6d3, 0x3)   mov(al, memb_a32(ds, eax + 0x60));    /* mov al, [eax+0x60] */
    II(0x1011a6d6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011a6db, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011a6dd, 0x2)   jnzd(0x1011a72a, 0x4b);               /* jnz 0x1011a72a */
l_0x1011a6df:
    II(0x1011a6df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a6e2, 0x3)   mov(al, memb_a32(ds, eax + 0x60));    /* mov al, [eax+0x60] */
    II(0x1011a6e5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011a6ea, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011a6ec, 0x2)   jnzd(0x1011a709, 0x1b);               /* jnz 0x1011a709 */
    II(0x1011a6ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a6f1, 0x5)   calld(0x1014b6bd, 0x30fc7);           /* call 0x1014b6bd */
    II(0x1011a6f6, 0x5)   calld(0x10120a90, 0x6395);            /* call 0x10120a90 */
    II(0x1011a6fb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a6fd, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011a6ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a702, 0x5)   calld(0x1014f017, 0x34910);           /* call 0x1014f017 */
    II(0x1011a707, 0x2)   jmpd(0x1011a721, 0x18);               /* jmp 0x1011a721 */
l_0x1011a709:
    II(0x1011a709, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a70c, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1011a710, 0x5)   calld(0x10120ab0, 0x639b);            /* call 0x10120ab0 */
    II(0x1011a715, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a717, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011a719, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a71c, 0x5)   calld(0x1014eea8, 0x34787);           /* call 0x1014eea8 */
l_0x1011a721:
    II(0x1011a721, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1011a725, 0x5)   jmpd(0x1011ac06, 0x4dc);              /* jmp 0x1011ac06 */
l_0x1011a72a:
    II(0x1011a72a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1011a72e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a731, 0x5)   calld(0x10117fb8, -0x277e);           /* call 0x10117fb8 */
    II(0x1011a736, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011a738, 0x2)   jzd(0x1011a743, 0x9);                 /* jz 0x1011a743 */
    II(0x1011a73a, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1011a73e, 0x5)   jmpd(0x1011ac06, 0x4c3);              /* jmp 0x1011ac06 */
l_0x1011a743:
    II(0x1011a743, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a746, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1011a74a, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1011a74d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a750, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1011a754, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1011a757, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1011a75a, 0x3)   add(eax, memd_a32(ss, ebp - 0x20));   /* add eax, [ebp-0x20] */
    II(0x1011a75d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011a760, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1011a763, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x1011a766, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1011a769, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0x4);   /* mov dword [ebp-0x38], 0x4 */
    II(0x1011a770, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a773, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x1011a777, 0x6)   jnzd(0x1011a8a0, 0x123);              /* jnz dword 0x1011a8a0 */
    II(0x1011a77d, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x1011a781, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a784, 0x5)   calld(my_ctor_0x101b38f8, -0xa4099);  /* call 0x100766f0 */
    II(0x1011a789, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x1011a78c, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x1011a790, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x34)); /* movsx ebx, word [ebp-0x34] */
    II(0x1011a794, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1011a798, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a79b, 0x5)   calld(0x1007510b, -0xa5695);          /* call 0x1007510b */
    II(0x1011a7a0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011a7a2, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a7a5, 0x5)   calld(0x10076630, -0xa417a);          /* call 0x10076630 */
    II(0x1011a7aa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a7ac, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a7af, 0x5)   calld(0x1013ad71, 0x205bd);           /* call 0x1013ad71 */
    II(0x1011a7b4, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011a7b6, 0x6)   jzd(0x1011a896, 0xda);                /* jz dword 0x1011a896 */
    II(0x1011a7bc, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a7bf, 0x5)   calld(0x10076574, -0xa4250);          /* call 0x10076574 */
    II(0x1011a7c4, 0x5)   calld(0x1007623c, -0xa458d);          /* call 0x1007623c */
    II(0x1011a7c9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011a7cb, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a7ce, 0x5)   calld(0x100765d0, -0xa4203);          /* call 0x100765d0 */
    II(0x1011a7d3, 0x5)   calld(0x100734d7, -0xa7301);          /* call 0x100734d7 */
    II(0x1011a7d8, 0x4)   cmp(ax, memw_a32(ds, edx + 0x19));    /* cmp ax, [edx+0x19] */
    II(0x1011a7dc, 0x2)   jnzd(0x1011a802, 0x24);               /* jnz 0x1011a802 */
    II(0x1011a7de, 0x5)   calld(0x10120a90, 0x62ad);            /* call 0x10120a90 */
    II(0x1011a7e3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a7e5, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011a7e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a7ea, 0x5)   calld(0x1014f017, 0x34828);           /* call 0x1014f017 */
    II(0x1011a7ef, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1011a7f3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a7f5, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a7f8, 0x5)   calld(0x10075f2c, -0xa48d1);          /* call 0x10075f2c */
    II(0x1011a7fd, 0x5)   jmpd(0x1011ac06, 0x404);              /* jmp 0x1011ac06 */
l_0x1011a802:
    II(0x1011a802, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a805, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x10);  /* mov byte [eax+0x3d], 0x10 */
    II(0x1011a809, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a80c, 0x5)   calld(0x10076574, -0xa429d);          /* call 0x10076574 */
    II(0x1011a811, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x48);   /* cmp word [eax+0x8], 0x48 */
    II(0x1011a816, 0x2)   jzd(0x1011a827, 0xf);                 /* jz 0x1011a827 */
    II(0x1011a818, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a81b, 0x5)   calld(0x10076574, -0xa42ac);          /* call 0x10076574 */
    II(0x1011a820, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x1011a825, 0x2)   jnzd(0x1011a830, 0x9);                /* jnz 0x1011a830 */
l_0x1011a827:
    II(0x1011a827, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a82a, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x4);   /* mov byte [eax+0x3e], 0x4 */
    II(0x1011a82e, 0x2)   jmpd(0x1011a837, 0x7);                /* jmp 0x1011a837 */
l_0x1011a830:
    II(0x1011a830, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a833, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x3);   /* mov byte [eax+0x3e], 0x3 */
l_0x1011a837:
    II(0x1011a837, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a83a, 0x5)   calld(0x100765d0, -0xa426f);          /* call 0x100765d0 */
    II(0x1011a83f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1011a842, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011a844, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1011a846, 0x5)   calld(0x1008a998, -0x8feb3);          /* call 0x1008a998 */
    II(0x1011a84b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a84d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a850, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1011a853, 0x5)   calld(0x10076a34, -0xa3e24);          /* call 0x10076a34 */
    II(0x1011a858, 0x5)   mov(edx, 0x21);                       /* mov edx, 0x21 */
    II(0x1011a85d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a860, 0x5)   calld(0x10162f0a, 0x486a5);           /* call 0x10162f0a */
    II(0x1011a865, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1011a86a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a86d, 0x5)   calld(0x10076d98, -0xa3ada);          /* call 0x10076d98 */
    II(0x1011a872, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011a874, 0x2)   jzd(0x1011a883, 0xd);                 /* jz 0x1011a883 */
    II(0x1011a876, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a879, 0x5)   calld(0x100765d0, -0xa42ae);          /* call 0x100765d0 */
    II(0x1011a87e, 0x5)   calld(0x100ff637, -0x1b24c);          /* call 0x100ff637 */
l_0x1011a883:
    II(0x1011a883, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1011a887, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a889, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a88c, 0x5)   calld(0x10075f2c, -0xa4965);          /* call 0x10075f2c */
    II(0x1011a891, 0x5)   jmpd(0x1011ac06, 0x370);              /* jmp 0x1011ac06 */
l_0x1011a896:
    II(0x1011a896, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a898, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011a89b, 0x5)   calld(0x10075f2c, -0xa4974);          /* call 0x10075f2c */
l_0x1011a8a0:
    II(0x1011a8a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a8a3, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1011a8a6, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1011a8a8, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1011a8ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a8ae, 0x3)   mov(al, memb_a32(ds, eax + 0x29));    /* mov al, [eax+0x29] */
    II(0x1011a8b1, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1011a8b3, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1011a8b6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x1011a8ba, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1011a8be, 0x5)   calld(0x1011a3f7, -0x4cc);            /* call 0x1011a3f7 */
    II(0x1011a8c3, 0x5)   mov(eax, 0x1a);                       /* mov eax, 0x1a */
    II(0x1011a8c8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011a8c9, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x34)); /* movsx ecx, word [ebp-0x34] */
    II(0x1011a8cd, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x1011a8d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a8d4, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1011a8d7, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1011a8d9, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1011a8dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a8df, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1011a8e2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011a8e5, 0x5)   calld(0x100702b9, -0xaa631);          /* call 0x100702b9 */
    II(0x1011a8ea, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1011a8ed, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x1011a8f1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011a8f3, 0x6)   jnzd(0x1011a9e5, 0xec);               /* jnz dword 0x1011a9e5 */
    II(0x1011a8f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a8fc, 0x3)   mov(al, memb_a32(ds, eax + 0x12));    /* mov al, [eax+0x12] */
    II(0x1011a8ff, 0x2)   and_(al, 0);                          /* and al, 0x0 */
    II(0x1011a901, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011a906, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011a907, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x34)); /* movsx ecx, word [ebp-0x34] */
    II(0x1011a90b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x1011a90f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a912, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x1011a915, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011a918, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a91b, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1011a91e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011a921, 0x5)   calld(0x10070010, -0xaa916);          /* call 0x10070010 */
    II(0x1011a926, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x1011a929, 0x6)   jnzd(0x1011a9dc, 0xad);               /* jnz dword 0x1011a9dc */
    II(0x1011a92f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011a932, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011a935, 0x5)   calld(0x10120ce0, 0x63a6);            /* call 0x10120ce0 */
    II(0x1011a93a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a93d, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x1011a941, 0x2)   jzd(0x1011a964, 0x21);                /* jz 0x1011a964 */
    II(0x1011a943, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a946, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1011a949, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011a94e, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1011a954, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1011a95a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011a95f, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1011a962, 0x2)   jnzd(0x1011a966, 0x2);                /* jnz 0x1011a966 */
l_0x1011a964:
    II(0x1011a964, 0x2)   jmpd(0x1011a97d, 0x17);               /* jmp 0x1011a97d */
l_0x1011a966:
    II(0x1011a966, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x1011a96d, 0x2)   jnzd(0x1011a97b, 0xc);                /* jnz 0x1011a97b */
    II(0x1011a96f, 0x5)   mov(eax, memd_a32(ds, 0x101c3960));   /* mov eax, [0x101c3960] */
    II(0x1011a974, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011a977, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011a979, 0x2)   jzd(0x1011a97d, 0x2);                 /* jz 0x1011a97d */
l_0x1011a97b:
    II(0x1011a97b, 0x2)   jmpd(0x1011a990, 0x13);               /* jmp 0x1011a990 */
l_0x1011a97d:
    II(0x1011a97d, 0x5)   calld(0x10120a90, 0x610e);            /* call 0x10120a90 */
    II(0x1011a982, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a984, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011a986, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a989, 0x5)   calld(0x1014f017, 0x34689);           /* call 0x1014f017 */
    II(0x1011a98e, 0x2)   jmpd(0x1011a9d2, 0x42);               /* jmp 0x1011a9d2 */
l_0x1011a990:
    II(0x1011a990, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a993, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1011a996, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011a99b, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1011a9a1, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1011a9a7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011a9ac, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x1011a9af, 0x2)   jnzd(0x1011a9ba, 0x9);                /* jnz 0x1011a9ba */
    II(0x1011a9b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a9b4, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x2a);  /* mov byte [eax+0x3e], 0x2a */
    II(0x1011a9b8, 0x2)   jmpd(0x1011a9d2, 0x18);               /* jmp 0x1011a9d2 */
l_0x1011a9ba:
    II(0x1011a9ba, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1011a9bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a9c2, 0x5)   calld(0x1011b7de, 0xe17);             /* call 0x1011b7de */
    II(0x1011a9c7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011a9c9, 0x2)   jzd(0x1011a9d2, 0x7);                 /* jz 0x1011a9d2 */
    II(0x1011a9cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011a9ce, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x2a);  /* mov byte [eax+0x3e], 0x2a */
l_0x1011a9d2:
    II(0x1011a9d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011a9d4, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1011a9d7, 0x5)   calld(0x1012030c, 0x5930);            /* call 0x1012030c */
l_0x1011a9dc:
    II(0x1011a9dc, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1011a9e0, 0x5)   jmpd(0x1011ac06, 0x221);              /* jmp 0x1011ac06 */
l_0x1011a9e5:
    II(0x1011a9e5, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0);     /* cmp word [ebp-0x20], 0x0 */
    II(0x1011a9ea, 0x2)   jzd(0x1011a9f3, 0x7);                 /* jz 0x1011a9f3 */
    II(0x1011a9ec, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0);     /* cmp word [ebp-0x28], 0x0 */
    II(0x1011a9f1, 0x2)   jnzd(0x1011a9f5, 0x2);                /* jnz 0x1011a9f5 */
l_0x1011a9f3:
    II(0x1011a9f3, 0x2)   jmpd(0x1011a9fb, 0x6);                /* jmp 0x1011a9fb */
l_0x1011a9f5:
    II(0x1011a9f5, 0x4)   mov(memb_a32(ss, ebp - 0x50), 0x1);   /* mov byte [ebp-0x50], 0x1 */
    II(0x1011a9f9, 0x2)   jmpd(0x1011a9ff, 0x4);                /* jmp 0x1011a9ff */
l_0x1011a9fb:
    II(0x1011a9fb, 0x4)   mov(memb_a32(ss, ebp - 0x50), 0);     /* mov byte [ebp-0x50], 0x0 */
l_0x1011a9ff:
    II(0x1011a9ff, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1011aa01, 0x3)   mov(cl, memb_a32(ss, ebp - 0x50));    /* mov cl, [ebp-0x50] */
    II(0x1011aa04, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1011aa09, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x1011aa0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011aa10, 0x5)   calld(0x1011a08d, -0x988);            /* call 0x1011a08d */
    II(0x1011aa15, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011aa17, 0x2)   jnzd(0x1011aa3a, 0x21);               /* jnz 0x1011aa3a */
    II(0x1011aa19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011aa1c, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1011aa20, 0x5)   calld(0x10120ab0, 0x608b);            /* call 0x10120ab0 */
    II(0x1011aa25, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011aa27, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1011aa29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011aa2c, 0x5)   calld(0x1014eea8, 0x34477);           /* call 0x1014eea8 */
    II(0x1011aa31, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1011aa35, 0x5)   jmpd(0x1011ac06, 0x1cc);              /* jmp 0x1011ac06 */
l_0x1011aa3a:
    II(0x1011aa3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011aa3d, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1011aa40, 0x5)   and_(eax, 0x180);                     /* and eax, 0x180 */
    II(0x1011aa45, 0x5)   cmp(eax, 0x180);                      /* cmp eax, 0x180 */
    II(0x1011aa4a, 0x6)   jnzd(0x1011abcb, 0x17b);              /* jnz dword 0x1011abcb */
    II(0x1011aa50, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x1011aa54, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1011aa58, 0x5)   calld(0x10073d48, -0xa6d15);          /* call 0x10073d48 */
    II(0x1011aa5d, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x1011aa60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011aa63, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x1011aa68, 0x6)   jnzd(0x1011ab6a, 0xfc);               /* jnz dword 0x1011ab6a */
    II(0x1011aa6e, 0x7)   mov(memd_a32(ss, ebp - 0x58), 0);     /* mov dword [ebp-0x58], 0x0 */
    II(0x1011aa75, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1011aa77, 0x4)   mov(ax, memw_a32(ss, ebp - 0x54));    /* mov ax, [ebp-0x54] */
    II(0x1011aa7b, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1011aa7e, 0x2)   jzd(0x1011aa8c, 0xc);                 /* jz 0x1011aa8c */
    II(0x1011aa80, 0x7)   mov(memd_a32(ss, ebp - 0x58), 0x8);   /* mov dword [ebp-0x58], 0x8 */
    II(0x1011aa87, 0x5)   jmpd(0x1011ab58, 0xcc);               /* jmp 0x1011ab58 */
l_0x1011aa8c:
    II(0x1011aa8c, 0x7)   mov(memd_a32(ss, ebp - 0x5c), 0);     /* mov dword [ebp-0x5c], 0x0 */
    II(0x1011aa93, 0x2)   jmpd(0x1011aa9b, 0x6);                /* jmp 0x1011aa9b */
l_0x1011aa95:
    II(0x1011aa95, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x1011aa98, 0x3)   inc(memd_a32(ss, ebp - 0x5c));        /* inc dword [ebp-0x5c] */
l_0x1011aa9b:
    II(0x1011aa9b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x1011aa9f, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1011aaa2, 0x6)   jged(0x1011ab58, 0xb0);               /* jge dword 0x1011ab58 */
    II(0x1011aaa8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011aaab, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1011aaae, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011aab3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1011aab7, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1011aab9, 0x2)   jzd(0x1011aad4, 0x19);                /* jz 0x1011aad4 */
    II(0x1011aabb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x1011aabf, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1011aac5, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1011aacb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011aad0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011aad2, 0x2)   jnzd(0x1011aad9, 0x5);                /* jnz 0x1011aad9 */
l_0x1011aad4:
    II(0x1011aad4, 0x5)   jmpd(0x1011ab53, 0x7a);               /* jmp 0x1011ab53 */
l_0x1011aad9:
    II(0x1011aad9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011aadd, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x1011aae3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011aae6, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1011aae9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1011aaed, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011aaef, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x1011aaf3, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1011aaf9, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a7)); /* mov eax, [eax+0x101ca6a7] */
    II(0x1011aaff, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011ab01, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1011ab03, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011ab08, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011ab0a, 0x2)   jnzd(0x1011ab58, 0x4c);               /* jnz 0x1011ab58 */
    II(0x1011ab0c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1011ab10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011ab13, 0x5)   calld(0x10076274, -0xa48a4);          /* call 0x10076274 */
    II(0x1011ab18, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011ab1a, 0x2)   jzd(0x1011ab4f, 0x33);                /* jz 0x1011ab4f */
    II(0x1011ab1c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x1011ab20, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x1011ab26, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011ab29, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1011ab2c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1011ab30, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011ab32, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x1011ab36, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1011ab3c, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x1011ab42, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011ab44, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1011ab46, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011ab4b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011ab4d, 0x2)   jnzd(0x1011ab51, 0x2);                /* jnz 0x1011ab51 */
l_0x1011ab4f:
    II(0x1011ab4f, 0x2)   jmpd(0x1011ab53, 0x2);                /* jmp 0x1011ab53 */
l_0x1011ab51:
    II(0x1011ab51, 0x2)   jmpd(0x1011ab58, 0x5);                /* jmp 0x1011ab58 */
l_0x1011ab53:
    II(0x1011ab53, 0x5)   jmpd(0x1011aa95, -0xc3);              /* jmp 0x1011aa95 */
l_0x1011ab58:
    II(0x1011ab58, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x1011ab5c, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1011ab5f, 0x2)   jged(0x1011ab68, 0x7);                /* jge 0x1011ab68 */
    II(0x1011ab61, 0x7)   mov(memd_a32(ss, ebp - 0x58), 0x8);   /* mov dword [ebp-0x58], 0x8 */
l_0x1011ab68:
    II(0x1011ab68, 0x2)   jmpd(0x1011ab85, 0x1b);               /* jmp 0x1011ab85 */
l_0x1011ab6a:
    II(0x1011ab6a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1011ab6c, 0x4)   mov(ax, memw_a32(ss, ebp - 0x54));    /* mov ax, [ebp-0x54] */
    II(0x1011ab70, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1011ab73, 0x2)   jnzd(0x1011ab7e, 0x9);                /* jnz 0x1011ab7e */
    II(0x1011ab75, 0x7)   mov(memd_a32(ss, ebp - 0x58), 0x8);   /* mov dword [ebp-0x58], 0x8 */
    II(0x1011ab7c, 0x2)   jmpd(0x1011ab85, 0x7);                /* jmp 0x1011ab85 */
l_0x1011ab7e:
    II(0x1011ab7e, 0x7)   mov(memd_a32(ss, ebp - 0x58), 0);     /* mov dword [ebp-0x58], 0x0 */
l_0x1011ab85:
    II(0x1011ab85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x1011ab88, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1011ab8b, 0x4)   cmp(ax, memw_a32(ds, edx + 0x33));    /* cmp ax, [edx+0x33] */
    II(0x1011ab8f, 0x2)   jzd(0x1011abcb, 0x3a);                /* jz 0x1011abcb */
    II(0x1011ab91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011ab94, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x1011ab99, 0x2)   jnzd(0x1011aba7, 0xc);                /* jnz 0x1011aba7 */
    II(0x1011ab9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x1011ab9e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1011aba1, 0x4)   mov(memw_a32(ds, edx + 0x37), ax);    /* mov [edx+0x37], ax */
    II(0x1011aba5, 0x2)   jmpd(0x1011abb6, 0xf);                /* jmp 0x1011abb6 */
l_0x1011aba7:
    II(0x1011aba7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x1011abaa, 0x5)   add(eax, 0x10);                       /* add eax, 0x10 */
    II(0x1011abaf, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1011abb2, 0x4)   mov(memw_a32(ds, edx + 0x37), ax);    /* mov [edx+0x37], ax */
l_0x1011abb6:
    II(0x1011abb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011abb9, 0x3)   mov(ebx, memd_a32(ds, eax + 0x39));   /* mov ebx, [eax+0x39] */
    II(0x1011abbc, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011abbf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x58)); /* movsx edx, word [ebp-0x58] */
    II(0x1011abc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011abc6, 0x5)   calld(0x10149ab7, 0x2eeec);           /* call 0x10149ab7 */
l_0x1011abcb:
    II(0x1011abcb, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x34)); /* movsx ebx, word [ebp-0x34] */
    II(0x1011abcf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1011abd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011abd6, 0x5)   calld(0x101523fd, 0x37822);           /* call 0x101523fd */
    II(0x1011abdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011abde, 0x4)   mov(memb_a32(ds, eax + 0x5e), 0);     /* mov byte [eax+0x5e], 0x0 */
    II(0x1011abe2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011abe5, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x6);   /* mov byte [eax+0x3e], 0x6 */
    II(0x1011abe9, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1011abee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011abf1, 0x5)   calld(0x10076d98, -0xa3e5e);          /* call 0x10076d98 */
    II(0x1011abf6, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011abf8, 0x2)   jzd(0x1011ac02, 0x8);                 /* jz 0x1011ac02 */
    II(0x1011abfa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011abfd, 0x5)   calld(0x1010094d, -0x1a2b5);          /* call 0x1010094d */
l_0x1011ac02:
    II(0x1011ac02, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
l_0x1011ac06:
    II(0x1011ac06, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1011ac09, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011ac0b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011ac0c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011ac0d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011ac0e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011ac0f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011ac10, 0x1)   retd();                               /* ret */
FUNC_END

