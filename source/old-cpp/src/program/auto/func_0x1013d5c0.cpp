FUNC_BEGIN(0x1013d5c0, 0x1f78111cf46e1d6b, 0x20, ({0x68, 0x80, 0, 0, 0, 0xe8, 0x88, 0x87, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x70, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x88, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0xf, 0xbe, 0x45, 0xf8, 0x8a, 0x80, 0x38, 0xd5, 0x1b, 0x10, 0x88, 0x45, 0xe8, 0x80, 0x7d, 0xfc, 0, 0x74, 0x4, 0xc6, 0x45, 0xe8, 0x1, 0xf6, 0x45, 0xe8, 0x2, 0x74, 0x23, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x2c, 0x88, 0x45, 0xe4, 0x8a, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x88, 0x42, 0x2c, 0x31, 0xd2, 0x8a, 0x55, 0xe4, 0xf, 0xbe, 0x45, 0xf8, 0x39, 0xc2, 0xf, 0x84, 0xe9, 0x2, 0, 0, 0x80, 0x7d, 0xf8, 0, 0x75, 0x10, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0xa8, 0xfe, 0xff, 0xff, 0xe9, 0xd3, 0x2, 0, 0, 0xb8, 0x3a, 0, 0, 0, 0xe8, 0x9b, 0x89, 0xf3, 0xff, 0x85, 0xc0, 0x75, 0xc, 0x8b, 0x45, 0xf0, 0x81, 0x78, 0x1c, 0xff, 0xff, 0, 0, 0x75, 0x5, 0xe9, 0xb4, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0xe, 0x8a, 0, 0x88, 0x45, 0xec, 0xc6, 0x45, 0xe0, 0, 0xeb, 0x6, 0x8a, 0x45, 0xe0, 0xfe, 0x45, 0xe0, 0x8a, 0x45, 0xe0, 0x3a, 0x45, 0xec, 0x74, 0x18, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xe, 0x31, 0xc0, 0x8a, 0x45, 0xe0, 0x8d, 0x4, 0x40, 0x1, 0xd0, 0x8a, 0x40, 0x1, 0x3a, 0x45, 0xf8, 0x75, 0xda, 0x8a, 0x45, 0xe0, 0x3a, 0x45, 0xec, 0x75, 0x33, 0xf, 0xbe, 0x45, 0xf8, 0x8a, 0x80, 0x38, 0xd5, 0x1b, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x10, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x26, 0xfe, 0xff, 0xff, 0xe9, 0x51, 0x2, 0, 0, 0x66, 0xf, 0xbe, 0x45, 0xf8, 0x5, 0x1c, 0x5, 0, 0, 0x89, 0x45, 0xdc, 0xeb, 0x17, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xe, 0x31, 0xc0, 0x8a, 0x45, 0xe0, 0x8d, 0x4, 0x40, 0x1, 0xd0, 0x66, 0x8b, 0x40, 0x2, 0x89, 0x45, 0xdc, 0x80, 0x7d, 0xf8, 0x1, 0x7c, 0x6, 0x80, 0x7d, 0xf8, 0x5, 0x7e, 0x2, 0xeb, 0x12, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x12, 0x25, 0x80, 0x1, 0, 0, 0x3d, 0x80, 0x1, 0, 0, 0x74, 0x2, 0xeb, 0xe, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x31, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x8, 0x74, 0x2, 0xeb, 0x3, 0xff, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x81, 0xe8, 0x1d, 0x5, 0, 0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x14, 0x92, 0x8b, 0x45, 0xf0, 0x8b, 0x80, 0xad, 0xd, 0, 0, 0x1, 0xd0, 0x8a, 0x40, 0x4, 0x25, 0xff, 0, 0, 0, 0x3d, 0xff, 0, 0, 0, 0x75, 0x64, 0xf, 0xbf, 0x45, 0xd8, 0x8d, 0x14, 0x80, 0x8b, 0x45, 0xf0, 0x8b, 0x80, 0xad, 0xd, 0, 0, 0x1, 0xd0, 0xc6, 0x40, 0x4, 0x1, 0xf, 0xbf, 0x45, 0xdc, 0xe8, 0x8b, 0x6a, 0xff, 0xff, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x3c, 0xba, 0x38, 0xcd, 0x1a, 0x10, 0x8b, 0x45, 0xd4, 0xe8, 0xa9, 0x1c, 0xfb, 0xff, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x74, 0x1e, 0xf, 0xbf, 0x45, 0xd8, 0x8d, 0x14, 0x80, 0x8b, 0x45, 0xf0, 0x8b, 0x80, 0xad, 0xd, 0, 0, 0x1, 0xd0, 0xc6, 0x40, 0x4, 0, 0x8b, 0x45, 0xd0, 0xe8, 0xcc, 0x48, 0x3, 0, 0x8b, 0x45, 0xd4, 0xe8, 0xbf, 0x87, 0x2, 0, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x14, 0x92, 0x8b, 0x45, 0xf0, 0x8b, 0x80, 0xad, 0xd, 0, 0, 0x1, 0xd0, 0x8a, 0x40, 0x4, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x19, 0x66, 0xf, 0xbe, 0x45, 0xf8, 0x5, 0x1c, 0x5, 0, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x81, 0xe8, 0x1d, 0x5, 0, 0, 0x89, 0x45, 0xd8, 0xf6, 0x45, 0xe8, 0x2, 0x74, 0x6, 0xc6, 0x45, 0xc8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xc8, 0, 0x8a, 0x45, 0xc8, 0x88, 0x45, 0xb6, 0x8b, 0x45, 0xdc, 0x66, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x45, 0xbf, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x45, 0xc1, 0xf6, 0x45, 0xe8, 0x4, 0x74, 0x9, 0xc7, 0x45, 0xa8, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x7, 0xc7, 0x45, 0xa8, 0, 0, 0, 0, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xbb, 0x8a, 0x45, 0xf8, 0x88, 0x45, 0xc5, 0x8b, 0x15, 0xdc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0xd8, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0xd1, 0xf8, 0x89, 0x45, 0xa4, 0x8b, 0x15, 0xde, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0xda, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0xd1, 0xf8, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xbf, 0x2b, 0x45, 0xa4, 0x89, 0x45, 0x9c, 0xf, 0xbf, 0x45, 0x9c, 0xe8, 0x84, 0x85, 0x2, 0, 0x89, 0x45, 0x98, 0xf, 0xbf, 0x55, 0xc1, 0xf, 0xbf, 0x45, 0xa0, 0x29, 0xc2, 0x89, 0xd0, 0xe8, 0x70, 0x85, 0x2, 0, 0x89, 0x45, 0x94, 0xf, 0xbf, 0x45, 0xd8, 0x8d, 0x14, 0x80, 0x8b, 0x45, 0xf0, 0x8b, 0x80, 0xad, 0xd, 0, 0, 0x1, 0xd0, 0x8b, 0, 0x89, 0x45, 0x90, 0x8b, 0x45, 0x90, 0x89, 0x45, 0xb2, 0xf, 0xbf, 0x55, 0x94, 0xf, 0xbf, 0x45, 0x98, 0xe8, 0xc7, 0x95, 0xf3, 0xff, 0xf, 0xaf, 0x45, 0x90, 0xbb, 0x70, 0, 0, 0, 0x31, 0xd2, 0xf7, 0xf3, 0x8b, 0x55, 0x90, 0x29, 0xc2, 0x89, 0x55, 0xae, 0xf, 0xbf, 0x45, 0x9c, 0x85, 0xc0, 0x7d, 0x6, 0xc6, 0x45, 0xcc, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xcc, 0, 0x31, 0xd2, 0x8a, 0x55, 0xcc, 0xf, 0xbf, 0x45, 0x98, 0xe8, 0x74, 0xfb, 0xff, 0xff, 0x89, 0x45, 0xb7, 0x66, 0xc7, 0x45, 0xc3, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0x59, 0x88, 0xf3, 0xff, 0x66, 0x89, 0x45, 0xc6, 0x8d, 0x55, 0xac, 0x8b, 0x45, 0xf0, 0xe8, 0xc7, 0x6, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x1013d5c0, 0x5)   pushd(0x80);                          /* push dword 0x80 */
    II(0x1013d5c5, 0x5)   calld(sys_check_available_stack_size, 0x28788); /* call 0x10165d52 */
    II(0x1013d5ca, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013d5cb, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013d5cc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013d5cd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013d5cf, 0x6)   sub(esp, 0x70);                       /* sub esp, 0x70 */
    II(0x1013d5d5, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013d5d8, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1013d5db, 0x3)   mov(memb_a32(ss, ebp - 0x8), bl);     /* mov [ebp-0x8], bl */
    II(0x1013d5de, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x1013d5e1, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1013d5e5, 0x6)   mov(al, memb_a32(ds, eax + 0x101bd538)); /* mov al, [eax+0x101bd538] */
    II(0x1013d5eb, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x1013d5ee, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1013d5f2, 0x2)   jzd(0x1013d5f8, 0x4);                 /* jz 0x1013d5f8 */
    II(0x1013d5f4, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
l_0x1013d5f8:
    II(0x1013d5f8, 0x4)   test(memb_a32(ss, ebp - 0x18), 0x2);  /* test byte [ebp-0x18], 0x2 */
    II(0x1013d5fc, 0x2)   jzd(0x1013d621, 0x23);                /* jz 0x1013d621 */
    II(0x1013d5fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d601, 0x3)   mov(al, memb_a32(ds, eax + 0x2c));    /* mov al, [eax+0x2c] */
    II(0x1013d604, 0x3)   mov(memb_a32(ss, ebp - 0x1c), al);    /* mov [ebp-0x1c], al */
    II(0x1013d607, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1013d60a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1013d60d, 0x3)   mov(memb_a32(ds, edx + 0x2c), al);    /* mov [edx+0x2c], al */
    II(0x1013d610, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013d612, 0x3)   mov(dl, memb_a32(ss, ebp - 0x1c));    /* mov dl, [ebp-0x1c] */
    II(0x1013d615, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1013d619, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1013d61b, 0x6)   jzd(0x1013d90a, 0x2e9);               /* jz dword 0x1013d90a */
l_0x1013d621:
    II(0x1013d621, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1013d625, 0x2)   jnzd(0x1013d637, 0x10);               /* jnz 0x1013d637 */
    II(0x1013d627, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1013d62a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d62d, 0x5)   calld(0x1013d4da, -0x158);            /* call 0x1013d4da */
    II(0x1013d632, 0x5)   jmpd(0x1013d90a, 0x2d3);              /* jmp 0x1013d90a */
l_0x1013d637:
    II(0x1013d637, 0x5)   mov(eax, 0x3a);                       /* mov eax, 0x3a */
    II(0x1013d63c, 0x5)   calld(0x10075fdc, -0xc7665);          /* call 0x10075fdc */
    II(0x1013d641, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1013d643, 0x2)   jnzd(0x1013d651, 0xc);                /* jnz 0x1013d651 */
    II(0x1013d645, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d648, 0x7)   cmp(memd_a32(ds, eax + 0x1c), 0xffff); /* cmp dword [eax+0x1c], 0xffff */
    II(0x1013d64f, 0x2)   jnzd(0x1013d656, 0x5);                /* jnz 0x1013d656 */
l_0x1013d651:
    II(0x1013d651, 0x5)   jmpd(0x1013d90a, 0x2b4);              /* jmp 0x1013d90a */
l_0x1013d656:
    II(0x1013d656, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d659, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1013d65c, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1013d65e, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x1013d661, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0);     /* mov byte [ebp-0x20], 0x0 */
    II(0x1013d665, 0x2)   jmpd(0x1013d66d, 0x6);                /* jmp 0x1013d66d */
l_0x1013d667:
    II(0x1013d667, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x1013d66a, 0x3)   inc(memb_a32(ss, ebp - 0x20));        /* inc byte [ebp-0x20] */
l_0x1013d66d:
    II(0x1013d66d, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x1013d670, 0x3)   cmp(al, memb_a32(ss, ebp - 0x14));    /* cmp al, [ebp-0x14] */
    II(0x1013d673, 0x2)   jzd(0x1013d68d, 0x18);                /* jz 0x1013d68d */
    II(0x1013d675, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d678, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x1013d67b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013d67d, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x1013d680, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x1013d683, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013d685, 0x3)   mov(al, memb_a32(ds, eax + 0x1));     /* mov al, [eax+0x1] */
    II(0x1013d688, 0x3)   cmp(al, memb_a32(ss, ebp - 0x8));     /* cmp al, [ebp-0x8] */
    II(0x1013d68b, 0x2)   jnzd(0x1013d667, -0x26);              /* jnz 0x1013d667 */
l_0x1013d68d:
    II(0x1013d68d, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x1013d690, 0x3)   cmp(al, memb_a32(ss, ebp - 0x14));    /* cmp al, [ebp-0x14] */
    II(0x1013d693, 0x2)   jnzd(0x1013d6c8, 0x33);               /* jnz 0x1013d6c8 */
    II(0x1013d695, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1013d699, 0x6)   mov(al, memb_a32(ds, eax + 0x101bd538)); /* mov al, [eax+0x101bd538] */
    II(0x1013d69f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013d6a4, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1013d6a7, 0x2)   jzd(0x1013d6b9, 0x10);                /* jz 0x1013d6b9 */
    II(0x1013d6a9, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1013d6ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d6af, 0x5)   calld(0x1013d4da, -0x1da);            /* call 0x1013d4da */
    II(0x1013d6b4, 0x5)   jmpd(0x1013d90a, 0x251);              /* jmp 0x1013d90a */
l_0x1013d6b9:
    II(0x1013d6b9, 0x5)   movsx(ax, memb_a32(ss, ebp - 0x8));   /* movsx ax, byte [ebp-0x8] */
    II(0x1013d6be, 0x5)   add(eax, 0x51c);                      /* add eax, 0x51c */
    II(0x1013d6c3, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1013d6c6, 0x2)   jmpd(0x1013d6df, 0x17);               /* jmp 0x1013d6df */
l_0x1013d6c8:
    II(0x1013d6c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d6cb, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x1013d6ce, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013d6d0, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x1013d6d3, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x1013d6d6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013d6d8, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x1013d6dc, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x1013d6df:
    II(0x1013d6df, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0x1);    /* cmp byte [ebp-0x8], 0x1 */
    II(0x1013d6e3, 0x2)   jld(0x1013d6eb, 0x6);                 /* jl 0x1013d6eb */
    II(0x1013d6e5, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0x5);    /* cmp byte [ebp-0x8], 0x5 */
    II(0x1013d6e9, 0x2)   jled(0x1013d6ed, 0x2);                /* jle 0x1013d6ed */
l_0x1013d6eb:
    II(0x1013d6eb, 0x2)   jmpd(0x1013d6ff, 0x12);               /* jmp 0x1013d6ff */
l_0x1013d6ed:
    II(0x1013d6ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d6f0, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1013d6f3, 0x5)   and_(eax, 0x180);                     /* and eax, 0x180 */
    II(0x1013d6f8, 0x5)   cmp(eax, 0x180);                      /* cmp eax, 0x180 */
    II(0x1013d6fd, 0x2)   jzd(0x1013d701, 0x2);                 /* jz 0x1013d701 */
l_0x1013d6ff:
    II(0x1013d6ff, 0x2)   jmpd(0x1013d70f, 0xe);                /* jmp 0x1013d70f */
l_0x1013d701:
    II(0x1013d701, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d704, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x1013d707, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013d70a, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1013d70d, 0x2)   jzd(0x1013d711, 0x2);                 /* jz 0x1013d711 */
l_0x1013d70f:
    II(0x1013d70f, 0x2)   jmpd(0x1013d714, 0x3);                /* jmp 0x1013d714 */
l_0x1013d711:
    II(0x1013d711, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x1013d714:
    II(0x1013d714, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1013d717, 0x6)   sub(eax, 0x51d);                      /* sub eax, 0x51d */
    II(0x1013d71d, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1013d720, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1013d724, 0x3)   lea(edx, edx + edx * 0x4);            /* lea edx, [edx+edx*4] */
    II(0x1013d727, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d72a, 0x6)   mov(eax, memd_a32(ds, eax + 0xdad));  /* mov eax, [eax+0xdad] */
    II(0x1013d730, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013d732, 0x3)   mov(al, memb_a32(ds, eax + 0x4));     /* mov al, [eax+0x4] */
    II(0x1013d735, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013d73a, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x1013d73f, 0x2)   jnzd(0x1013d7a5, 0x64);               /* jnz 0x1013d7a5 */
    II(0x1013d741, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1013d745, 0x3)   lea(edx, eax + eax * 0x4);            /* lea edx, [eax+eax*4] */
    II(0x1013d748, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d74b, 0x6)   mov(eax, memd_a32(ds, eax + 0xdad));  /* mov eax, [eax+0xdad] */
    II(0x1013d751, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013d753, 0x4)   mov(memb_a32(ds, eax + 0x4), 0x1);    /* mov byte [eax+0x4], 0x1 */
    II(0x1013d757, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1013d75b, 0x5)   calld(my_get_res_data_by_id_malloc, -0x9575); /* call 0x101341eb */
    II(0x1013d760, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1013d763, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x1013d767, 0x2)   jzd(0x1013d7a5, 0x3c);                /* jz 0x1013d7a5 */
    II(0x1013d769, 0x5)   mov(edx, 0x101acd38);                 /* mov edx, 0x101acd38 */ /* "rb" */
    II(0x1013d76e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1013d771, 0x5)   calld(my_fopen, -0x4e357);            /* call 0x100ef41f */
    II(0x1013d776, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1013d779, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x1013d77d, 0x2)   jzd(0x1013d79d, 0x1e);                /* jz 0x1013d79d */
    II(0x1013d77f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1013d783, 0x3)   lea(edx, eax + eax * 0x4);            /* lea edx, [eax+eax*4] */
    II(0x1013d786, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d789, 0x6)   mov(eax, memd_a32(ds, eax + 0xdad));  /* mov eax, [eax+0xdad] */
    II(0x1013d78f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013d791, 0x4)   mov(memb_a32(ds, eax + 0x4), 0);      /* mov byte [eax+0x4], 0x0 */
    II(0x1013d795, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1013d798, 0x5)   calld(sys_fclose, 0x348cc);           /* call 0x10172069 */
l_0x1013d79d:
    II(0x1013d79d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1013d7a0, 0x5)   calld(sys_delete, 0x287bf);           /* call 0x10165f64 */
l_0x1013d7a5:
    II(0x1013d7a5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1013d7a9, 0x3)   lea(edx, edx + edx * 0x4);            /* lea edx, [edx+edx*4] */
    II(0x1013d7ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d7af, 0x6)   mov(eax, memd_a32(ds, eax + 0xdad));  /* mov eax, [eax+0xdad] */
    II(0x1013d7b5, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013d7b7, 0x3)   mov(al, memb_a32(ds, eax + 0x4));     /* mov al, [eax+0x4] */
    II(0x1013d7ba, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013d7bf, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1013d7c2, 0x2)   jnzd(0x1013d7dd, 0x19);               /* jnz 0x1013d7dd */
    II(0x1013d7c4, 0x5)   movsx(ax, memb_a32(ss, ebp - 0x8));   /* movsx ax, byte [ebp-0x8] */
    II(0x1013d7c9, 0x5)   add(eax, 0x51c);                      /* add eax, 0x51c */
    II(0x1013d7ce, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x1013d7d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1013d7d4, 0x6)   sub(eax, 0x51d);                      /* sub eax, 0x51d */
    II(0x1013d7da, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x1013d7dd:
    II(0x1013d7dd, 0x4)   test(memb_a32(ss, ebp - 0x18), 0x2);  /* test byte [ebp-0x18], 0x2 */
    II(0x1013d7e1, 0x2)   jzd(0x1013d7e9, 0x6);                 /* jz 0x1013d7e9 */
    II(0x1013d7e3, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0x1);   /* mov byte [ebp-0x38], 0x1 */
    II(0x1013d7e7, 0x2)   jmpd(0x1013d7ed, 0x4);                /* jmp 0x1013d7ed */
l_0x1013d7e9:
    II(0x1013d7e9, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0);     /* mov byte [ebp-0x38], 0x0 */
l_0x1013d7ed:
    II(0x1013d7ed, 0x3)   mov(al, memb_a32(ss, ebp - 0x38));    /* mov al, [ebp-0x38] */
    II(0x1013d7f0, 0x3)   mov(memb_a32(ss, ebp - 0x4a), al);    /* mov [ebp-0x4a], al */
    II(0x1013d7f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1013d7f6, 0x4)   mov(memw_a32(ss, ebp - 0x54), ax);    /* mov [ebp-0x54], ax */
    II(0x1013d7fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d7fd, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1013d801, 0x4)   mov(memw_a32(ss, ebp - 0x41), ax);    /* mov [ebp-0x41], ax */
    II(0x1013d805, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d808, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1013d80c, 0x4)   mov(memw_a32(ss, ebp - 0x3f), ax);    /* mov [ebp-0x3f], ax */
    II(0x1013d810, 0x4)   test(memb_a32(ss, ebp - 0x18), 0x4);  /* test byte [ebp-0x18], 0x4 */
    II(0x1013d814, 0x2)   jzd(0x1013d81f, 0x9);                 /* jz 0x1013d81f */
    II(0x1013d816, 0x7)   mov(memd_a32(ss, ebp - 0x58), 0xffffffff); /* mov dword [ebp-0x58], 0xffffffff */
    II(0x1013d81d, 0x2)   jmpd(0x1013d826, 0x7);                /* jmp 0x1013d826 */
l_0x1013d81f:
    II(0x1013d81f, 0x7)   mov(memd_a32(ss, ebp - 0x58), 0);     /* mov dword [ebp-0x58], 0x0 */
l_0x1013d826:
    II(0x1013d826, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x1013d829, 0x3)   mov(memd_a32(ss, ebp - 0x45), eax);   /* mov [ebp-0x45], eax */
    II(0x1013d82c, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1013d82f, 0x3)   mov(memb_a32(ss, ebp - 0x3b), al);    /* mov [ebp-0x3b], al */
    II(0x1013d832, 0x6)   mov(edx, memd_a32(ds, 0x101c38dc));   /* mov edx, [0x101c38dc] */
    II(0x1013d838, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1013d83b, 0x5)   mov(eax, memd_a32(ds, 0x101c38d8));   /* mov eax, [0x101c38d8] */
    II(0x1013d840, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013d843, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013d845, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1013d847, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x1013d84a, 0x6)   mov(edx, memd_a32(ds, 0x101c38de));   /* mov edx, [0x101c38de] */
    II(0x1013d850, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1013d853, 0x5)   mov(eax, memd_a32(ds, 0x101c38da));   /* mov eax, [0x101c38da] */
    II(0x1013d858, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013d85b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013d85d, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1013d85f, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x1013d862, 0x3)   mov(eax, memd_a32(ss, ebp - 0x41));   /* mov eax, [ebp-0x41] */
    II(0x1013d865, 0x3)   sub(eax, memd_a32(ss, ebp - 0x5c));   /* sub eax, [ebp-0x5c] */
    II(0x1013d868, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x1013d86b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x1013d86f, 0x5)   calld(/* sys */ 0x10165df8, 0x28584); /* call 0x10165df8 */
    II(0x1013d874, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x1013d877, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3f)); /* movsx edx, word [ebp-0x3f] */
    II(0x1013d87b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x60)); /* movsx eax, word [ebp-0x60] */
    II(0x1013d87f, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1013d881, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013d883, 0x5)   calld(/* sys */ 0x10165df8, 0x28570); /* call 0x10165df8 */
    II(0x1013d888, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x1013d88b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1013d88f, 0x3)   lea(edx, eax + eax * 0x4);            /* lea edx, [eax+eax*4] */
    II(0x1013d892, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d895, 0x6)   mov(eax, memd_a32(ds, eax + 0xdad));  /* mov eax, [eax+0xdad] */
    II(0x1013d89b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013d89d, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1013d89f, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
//    II(0x1013d8a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x1013d8a5, 0x3)   mov(memd_a32(ss, ebp - 0x4e), eax);   /* mov [ebp-0x4e], eax */
    II(0x1013d8a8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x6c)); /* movsx edx, word [ebp-0x6c] */
    II(0x1013d8ac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x68)); /* movsx eax, word [ebp-0x68] */
    II(0x1013d8b0, 0x5)   calld(0x10076e7c, -0xc6a39);          /* call 0x10076e7c */
    II(0x1013d8b5, 0x4)   imul(eax, memd_a32(ss, ebp - 0x70));  /* imul eax, [ebp-0x70] */
    II(0x1013d8b9, 0x5)   mov(ebx, 0x70);                       /* mov ebx, 0x70 */
    II(0x1013d8be, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013d8c0, 0x2)   div(ebx);                             /* div ebx */
    II(0x1013d8c2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x70));   /* mov edx, [ebp-0x70] */
    II(0x1013d8c5, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1013d8c7, 0x3)   mov(memd_a32(ss, ebp - 0x52), edx);   /* mov [ebp-0x52], edx */
    II(0x1013d8ca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x1013d8ce, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1013d8d0, 0x2)   jged(0x1013d8d8, 0x6);                /* jge 0x1013d8d8 */
    II(0x1013d8d2, 0x4)   mov(memb_a32(ss, ebp - 0x34), 0x1);   /* mov byte [ebp-0x34], 0x1 */
    II(0x1013d8d6, 0x2)   jmpd(0x1013d8dc, 0x4);                /* jmp 0x1013d8dc */
l_0x1013d8d8:
    II(0x1013d8d8, 0x4)   mov(memb_a32(ss, ebp - 0x34), 0);     /* mov byte [ebp-0x34], 0x0 */
l_0x1013d8dc:
    II(0x1013d8dc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013d8de, 0x3)   mov(dl, memb_a32(ss, ebp - 0x34));    /* mov dl, [ebp-0x34] */
    II(0x1013d8e1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x68)); /* movsx eax, word [ebp-0x68] */
    II(0x1013d8e5, 0x5)   calld(0x1013d45e, -0x48c);            /* call 0x1013d45e */
    II(0x1013d8ea, 0x3)   mov(memd_a32(ss, ebp - 0x49), eax);   /* mov [ebp-0x49], eax */
    II(0x1013d8ed, 0x6)   mov(memw_a32(ss, ebp - 0x3d), 0);     /* mov word [ebp-0x3d], 0x0 */
    II(0x1013d8f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d8f6, 0x5)   calld(0x10076154, -0xc77a7);          /* call 0x10076154 */
    II(0x1013d8fb, 0x4)   mov(memw_a32(ss, ebp - 0x3a), ax);    /* mov [ebp-0x3a], ax */
    II(0x1013d8ff, 0x3)   lea(edx, ebp - 0x54);                 /* lea edx, [ebp-0x54] */
    II(0x1013d902, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013d905, 0x5)   calld(0x1013dfd1, 0x6c7);             /* call 0x1013dfd1 */
l_0x1013d90a:
    II(0x1013d90a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013d90c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013d90d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013d90e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013d90f, 0x1)   retd();                               /* ret */
FUNC_END

