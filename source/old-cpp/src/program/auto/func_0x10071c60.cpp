FUNC_BEGIN(0x10071c60, 0x8236d56802729b67, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xe8, 0x40, 0xf, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xb5, 0x46, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf8, 0xe8, 0x2b, 0x48, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xda, 0x90, 0xc, 0, 0x84, 0xc0, 0x74, 0x1c, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xf8, 0xe8, 0x60, 0x47, 0, 0, 0xe8, 0x8b, 0xfb, 0xff, 0xff, 0x8d, 0x45, 0xf8, 0xe8, 0x43, 0x4f, 0, 0, 0xeb, 0xd6, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xab, 0x42, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10071c60, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x10071c65, 0x5)   calld(sys_check_available_stack_size, 0xf40e8); /* call 0x10165d52 */
    II(0x10071c6a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10071c6b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10071c6c, 0x1)   pushd(edx);                           /* push edx */
    II(0x10071c6d, 0x1)   pushd(esi);                           /* push esi */
    II(0x10071c6e, 0x1)   pushd(edi);                           /* push edi */
    II(0x10071c6f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10071c70, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10071c72, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x10071c78, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10071c7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10071c7e, 0x5)   calld(0x10076338, 0x46b5);            /* call 0x10076338 */
    II(0x10071c83, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10071c85, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10071c88, 0x5)   calld(0x100764b8, 0x482b);            /* call 0x100764b8 */
l_0x10071c8d:
    II(0x10071c8d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10071c8f, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10071c92, 0x5)   calld(0x1013ad71, 0xc90da);           /* call 0x1013ad71 */
    II(0x10071c97, 0x2)   test(al, al);                         /* test al, al */
    II(0x10071c99, 0x2)   jzd(0x10071cb7, 0x1c);                /* jz 0x10071cb7 */
    II(0x10071c9b, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10071ca0, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10071ca3, 0x5)   calld(0x10076408, 0x4760);            /* call 0x10076408 */
    II(0x10071ca8, 0x5)   calld(0x10071838, -0x475);            /* call 0x10071838 */
    II(0x10071cad, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10071cb0, 0x5)   calld(0x10076bf8, 0x4f43);            /* call 0x10076bf8 */
    II(0x10071cb5, 0x2)   jmpd(0x10071c8d, -0x2a);              /* jmp 0x10071c8d */
l_0x10071cb7:
    II(0x10071cb7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10071cb9, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10071cbc, 0x5)   calld(0x10075f6c, 0x42ab);            /* call 0x10075f6c */
    II(0x10071cc1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10071cc3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10071cc4, 0x1)   popd(edi);                            /* pop edi */
    II(0x10071cc5, 0x1)   popd(esi);                            /* pop esi */
    II(0x10071cc6, 0x1)   popd(edx);                            /* pop edx */
    II(0x10071cc7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10071cc8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10071cc9, 0x1)   retd();                               /* ret */
FUNC_END

