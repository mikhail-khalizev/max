FUNC_BEGIN(0x100f62d9, 0x84f105c94c9c9eaa, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x6f, 0xfa, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xd0, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xf8, 0xe8, 0xfb, 0x4e, 0x7, 0, 0x89, 0x45, 0xfc, 0x83, 0x3d, 0x40, 0x39, 0x1c, 0x10, 0, 0x74, 0x12, 0xf, 0xbf, 0x55, 0xfc, 0xa1, 0x40, 0x39, 0x1c, 0x10, 0xe8, 0x5c, 0x4f, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0x74, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0xd, 0x75, 0x64, 0xba, 0x44, 0x39, 0x1c, 0x10, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x2c, 0x2, 0xf8, 0xff, 0xe8, 0x71, 0x97, 0x5, 0, 0xa1, 0x40, 0x39, 0x1c, 0x10, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0x72, 0x4d, 0xff, 0xff, 0xe8, 0xfa, 0xfb, 0x6, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x5, 0x40, 0x39, 0x1c, 0x10, 0, 0, 0, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x14, 0xba, 0x44, 0x39, 0x1c, 0x10, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x38, 0x2, 0xf8, 0xff, 0xe8, 0x12, 0x4d, 0x3, 0, 0xc7, 0x45, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0xeb, 0xfd, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0xc7, 0x45, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xe8, 0x37, 0x1f, 0x5, 0, 0xa3, 0x30, 0x39, 0x1c, 0x10, 0xa0, 0x6a, 0x94, 0x20, 0x10, 0xa, 0x5, 0x76, 0x94, 0x20, 0x10, 0xa2, 0x18, 0x39, 0x1c, 0x10, 0xa0, 0x5d, 0x94, 0x20, 0x10, 0xa, 0x5, 0xdd, 0x94, 0x20, 0x10, 0xa2, 0x17, 0x39, 0x1c, 0x10, 0x80, 0x3d, 0xd2, 0x37, 0x1c, 0x10, 0, 0xf, 0x84, 0xe5, 0, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x91, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x85, 0x6e, 0, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x1d, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0x32, 0xe8, 0xc5, 0x97, 0, 0, 0x80, 0x3d, 0x1d, 0x39, 0x1c, 0x10, 0, 0x74, 0x9, 0xc7, 0x45, 0xfc, 0x1b, 0, 0, 0, 0xeb, 0x1b, 0x80, 0x3d, 0xd4, 0x37, 0x1c, 0x10, 0, 0x75, 0x9, 0x80, 0x3d, 0x13, 0x39, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0x7, 0xc7, 0x45, 0xfc, 0xeb, 0x3, 0, 0, 0xeb, 0x57, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x4, 0x7d, 0x3f, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0x13, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x80, 0xb8, 0x91, 0xa4, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0xe, 0xba, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x26, 0xc2, 0, 0, 0xeb, 0xb2, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x7e, 0xb, 0xf, 0xbf, 0x45, 0xfc, 0x3d, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0x7, 0xc6, 0x5, 0x90, 0x38, 0x1c, 0x10, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe8, 0xe9, 0x34, 0x8, 0, 0, 0xba, 0xe3, 0x25, 0x1a, 0x10, 0xb8, 0xb4, 0x39, 0x1c, 0x10, 0xe8, 0xc1, 0xbc, 0x4, 0, 0xe9, 0x96, 0xb, 0, 0, 0x80, 0x3d, 0x16, 0x39, 0x1c, 0x10, 0, 0x75, 0x1d, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0x69, 0xb, 0, 0, 0xa1, 0xb6, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0xff, 0xf, 0x84, 0x8f, 0, 0, 0, 0xe8, 0x54, 0xdb, 0xff, 0xff, 0xe8, 0x75, 0xc5, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0x8b, 0x1d, 0xb8, 0x38, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0x8b, 0x15, 0xb6, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xa9, 0xb0, 0, 0, 0x31, 0xd2, 0xb8, 0xb4, 0x38, 0x1c, 0x10, 0xe8, 0xee, 0x47, 0x4, 0, 0x84, 0xc0, 0x74, 0x1d, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xb8, 0xb4, 0x38, 0x1c, 0x10, 0xe8, 0xd9, 0xff, 0xf7, 0xff, 0xe8, 0xd4, 0xfa, 0xf7, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x16, 0xe8, 0xc1, 0xfa, 0x1, 0, 0xb8, 0xb4, 0x38, 0x1c, 0x10, 0xe8, 0x1b, 0, 0xf8, 0xff, 0xe8, 0x7d, 0x90, 0, 0, 0xeb, 0x20, 0xe8, 0x3f, 0x44, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x54, 0x44, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0xe5, 0x25, 0x1a, 0x10, 0xe8, 0x47, 0xf7, 0x1, 0, 0xe9, 0xc4, 0xa, 0, 0, 0x80, 0x3d, 0x16, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0xb7, 0xa, 0, 0, 0x81, 0x45, 0xfc, 0xc1, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0xeb, 0, 0, 0, 0xc1, 0xf8, 0x18, 0x83, 0xf8, 0xff, 0x74, 0x3b, 0xe8, 0xbb, 0xc4, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x80, 0xef, 0, 0, 0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x80, 0xee, 0, 0, 0, 0xf, 0xbf, 0xd0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xd9, 0xaf, 0, 0, 0xe9, 0x59, 0xa, 0, 0, 0x81, 0x45, 0xfc, 0x94, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x8a, 0x15, 0xe2, 0x38, 0x1c, 0x10, 0x88, 0x90, 0xee, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x8a, 0x15, 0xe4, 0x38, 0x1c, 0x10, 0x88, 0x90, 0xef, 0, 0, 0, 0xe8, 0x7e, 0x43, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x93, 0x43, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0xff, 0x25, 0x1a, 0x10, 0xe8, 0x86, 0xf6, 0x1, 0, 0xe9, 0x3, 0xa, 0, 0, 0x80, 0xd, 0, 0x39, 0x1c, 0x10, 0x8, 0xe9, 0xf7, 0x9, 0, 0, 0x80, 0xd, 0, 0x39, 0x1c, 0x10, 0x4, 0xe9, 0xeb, 0x9, 0, 0, 0x80, 0xd, 0, 0x39, 0x1c, 0x10, 0x2, 0xe9, 0xdf, 0x9, 0, 0, 0x80, 0xd, 0, 0x39, 0x1c, 0x10, 0x1, 0xe9, 0xd3, 0x9, 0, 0, 0x80, 0x3d, 0x16, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0xc6, 0x9, 0, 0, 0x31, 0xc9, 0x31, 0xdb, 0x66, 0xa1, 0xc0, 0x38, 0x1c, 0x10, 0x40, 0xf, 0xbf, 0xd0, 0x31, 0xc0, 0xe8, 0x2c, 0xaf, 0, 0, 0xe9, 0xac, 0x9, 0, 0, 0x80, 0x3d, 0x16, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0x9f, 0x9, 0, 0, 0x31, 0xc9, 0x31, 0xdb, 0x66, 0xa1, 0xc0, 0x38, 0x1c, 0x10, 0x48, 0xf, 0xbf, 0xd0, 0x31, 0xc0, 0xe8, 0x5, 0xaf, 0, 0, 0xe9, 0x85, 0x9, 0, 0, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x7, 0xf, 0x85, 0x95, 0, 0, 0, 0xe8, 0x3a, 0xf9, 0x1, 0, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0xa6, 0xbe, 0xfa, 0xff, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x6b, 0xc0, 0x13, 0x66, 0x8b, 0x80, 0xbc, 0x35, 0x1c, 0x10, 0x66, 0xa3, 0xe2, 0x38, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x6b, 0xc0, 0x13, 0x66, 0x8b, 0x80, 0xbe, 0x35, 0x1c, 0x10, 0x66, 0xa3, 0xe4, 0x38, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0x8b, 0x15, 0xe2, 0x38, 0x1c, 0x10, 0x66, 0x89, 0x90, 0x6c, 0xa5, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0x8b, 0x15, 0xe4, 0x38, 0x1c, 0x10, 0x66, 0x89, 0x90, 0x6e, 0xa5, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0xc7, 0x80, 0x6a, 0xa5, 0x1c, 0x10, 0x40, 0, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0xd, 0xeb, 0x15, 0x80, 0x3d, 0x38, 0x39, 0x1c, 0x10, 0, 0x74, 0xc, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0xe9, 0xce, 0x8, 0, 0, 0x80, 0x3d, 0x16, 0x39, 0x1c, 0x10, 0, 0x74, 0x16, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x80, 0xb8, 0x91, 0xa4, 0x1c, 0x10, 0, 0x74, 0x5, 0xe9, 0xaa, 0x8, 0, 0, 0xba, 0xdd, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x4f, 0x74, 0x4, 0, 0xe8, 0xb8, 0xeb, 0xff, 0xff, 0x31, 0xc0, 0xa0, 0xd2, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0xd2, 0xbe, 0, 0, 0x85, 0xc0, 0x75, 0xa, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x6e, 0xe7, 0xff, 0xff, 0xe9, 0x6c, 0x8, 0, 0, 0x80, 0x3d, 0x38, 0x39, 0x1c, 0x10, 0, 0x74, 0x7, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0xe9, 0x57, 0x8, 0, 0, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x7, 0x75, 0x9, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0xe, 0xeb, 0x5d, 0x80, 0x3d, 0x13, 0x39, 0x1c, 0x10, 0, 0x74, 0x9, 0xc6, 0x5, 0x13, 0x39, 0x1c, 0x10, 0, 0xeb, 0x4b, 0x80, 0x3d, 0xe4, 0x37, 0x1c, 0x10, 0, 0x74, 0x9, 0x31, 0xc0, 0xe8, 0xa, 0xdc, 0xff, 0xff, 0xeb, 0x39, 0x80, 0x3d, 0x1d, 0x39, 0x1c, 0x10, 0, 0x74, 0x7, 0xe8, 0xda, 0xf7, 0x1, 0, 0xeb, 0x29, 0x80, 0x3d, 0x38, 0x39, 0x1c, 0x10, 0, 0x74, 0x9, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0xeb, 0x17, 0x31, 0xd2, 0xb8, 0x1f, 0x26, 0x1a, 0x10, 0xe8, 0x84, 0x7, 0x2, 0, 0x85, 0xc0, 0x74, 0x7, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0xe9, 0xe3, 0x7, 0, 0, 0xe8, 0xf3, 0xe4, 0xff, 0xff, 0xe9, 0xd9, 0x7, 0, 0, 0x80, 0x3d, 0x16, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0xcc, 0x7, 0, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x26, 0xe8, 0x19, 0x41, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0xba, 0x2, 0, 0, 0, 0xb8, 0x30, 0x26, 0x1a, 0x10, 0xe8, 0x1d, 0xf4, 0x1, 0, 0xeb, 0x7, 0x31, 0xc0, 0xe8, 0x18, 0xe9, 0xff, 0xff, 0xe9, 0x91, 0x7, 0, 0, 0x80, 0x3d, 0x16, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0x84, 0x7, 0, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xfc, 0xe8, 0xff, 0xff, 0xe9, 0x75, 0x7, 0, 0, 0x80, 0x3d, 0x16, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0x68, 0x7, 0, 0, 0x31, 0xd2, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x75, 0xe5, 0xff, 0xff, 0xe9, 0x57, 0x7, 0, 0, 0xe8, 0xc3, 0xe1, 0xff, 0xff, 0xe9, 0x4d, 0x7, 0, 0, 0xe8, 0x55, 0xe1, 0xff, 0xff, 0xe9, 0x43, 0x7, 0, 0, 0xe8, 0x7d, 0xe1, 0xff, 0xff, 0xe9, 0x39, 0x7, 0, 0, 0xe8, 0xdb, 0xe0, 0xff, 0xff, 0xe9, 0x2f, 0x7, 0, 0, 0x31, 0xd2, 0xa1, 0x99, 0x87, 0x1b, 0x10, 0xe8, 0xf1, 0x91, 0xfd, 0xff, 0x31, 0xc0, 0xe8, 0xeb, 0xa9, 0, 0, 0xe8, 0x88, 0xe1, 0xff, 0xff, 0xe9, 0x12, 0x7, 0, 0, 0x31, 0xd2, 0xa1, 0xa7, 0x87, 0x1b, 0x10, 0xe8, 0xd4, 0x91, 0xfd, 0xff, 0x80, 0x3d, 0x18, 0x39, 0x1c, 0x10, 0, 0x74, 0x1d, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x2d, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x4a, 0xc5, 0xf7, 0xff, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x36, 0xc5, 0xf7, 0xff, 0xe9, 0x6b, 0, 0, 0, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x71, 0x43, 0x4, 0, 0x84, 0xc0, 0x74, 0x1a, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x66, 0xfb, 0xf7, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x1d, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x11, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xb7, 0xfb, 0xf7, 0xff, 0xe8, 0xff, 0x13, 0x6, 0, 0xeb, 0xf, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x1a, 0xa9, 0, 0, 0xe8, 0xb7, 0xe0, 0xff, 0xff, 0xe9, 0x41, 0x6, 0, 0, 0x31, 0xd2, 0xa1, 0xb5, 0x87, 0x1b, 0x10, 0xe8, 0x3, 0x91, 0xfd, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xfa, 0xa8, 0, 0, 0xe8, 0x97, 0xe0, 0xff, 0xff, 0xe9, 0x21, 0x6, 0, 0, 0xe8, 0x1d, 0xd6, 0xff, 0xff, 0xe8, 0x8, 0xdd, 0xff, 0xff, 0xe9, 0x12, 0x6, 0, 0, 0xe8, 0xe, 0xd6, 0xff, 0xff, 0xe8, 0x50, 0xe1, 0xff, 0xff, 0xe9, 0x3, 0x6, 0, 0, 0xba, 0x12, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xa8, 0x71, 0x4, 0, 0x80, 0x35, 0x8e, 0x38, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0x8e, 0x38, 0x1c, 0x10, 0xe8, 0x24, 0x3d, 0, 0, 0xe9, 0xdc, 0x5, 0, 0, 0xba, 0xb, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x81, 0x71, 0x4, 0, 0x80, 0x35, 0xcc, 0x37, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0xcc, 0x37, 0x1c, 0x10, 0xe8, 0xf9, 0xdc, 0xff, 0xff, 0xe9, 0xb5, 0x5, 0, 0, 0xba, 0xc, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x5a, 0x71, 0x4, 0, 0x80, 0x35, 0xcd, 0x37, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0xcd, 0x37, 0x1c, 0x10, 0xe8, 0x6c, 0xdd, 0xff, 0xff, 0xe9, 0x8e, 0x5, 0, 0, 0xba, 0xd, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x33, 0x71, 0x4, 0, 0x80, 0x35, 0xce, 0x37, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0xce, 0x37, 0x1c, 0x10, 0xe8, 0x92, 0xdd, 0xff, 0xff, 0xe9, 0x67, 0x5, 0, 0, 0xba, 0x13, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xc, 0x71, 0x4, 0, 0x80, 0x3d, 0xcb, 0x37, 0x1c, 0x10, 0, 0x75, 0x6, 0xc6, 0x45, 0xe4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe4, 0, 0x31, 0xc0, 0x8a, 0x45, 0xe4, 0xe8, 0xae, 0xdd, 0xff, 0xff, 0xe9, 0x36, 0x5, 0, 0, 0xba, 0xe, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xdb, 0x70, 0x4, 0, 0x80, 0x35, 0xcf, 0x37, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0xcf, 0x37, 0x1c, 0x10, 0xe8, 0xd4, 0xdd, 0xff, 0xff, 0xe9, 0xf, 0x5, 0, 0, 0xba, 0xf, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xb4, 0x70, 0x4, 0, 0x80, 0x35, 0x89, 0x38, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0x89, 0x38, 0x1c, 0x10, 0xe8, 0x79, 0xdc, 0xff, 0xff, 0xe9, 0xe8, 0x4, 0, 0, 0xba, 0x10, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x8d, 0x70, 0x4, 0, 0x80, 0x35, 0x8a, 0x38, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0x8a, 0x38, 0x1c, 0x10, 0xe8, 0xc1, 0xdf, 0xff, 0xff, 0xe9, 0xc1, 0x4, 0, 0, 0xba, 0xdd, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x66, 0x70, 0x4, 0, 0x80, 0x35, 0x8c, 0x38, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0x8c, 0x38, 0x1c, 0x10, 0xe8, 0xb, 0xcb, 0xff, 0xff, 0xe9, 0x9a, 0x4, 0, 0, 0xba, 0x11, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x3f, 0x70, 0x4, 0, 0x80, 0x35, 0x8d, 0x38, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0x8d, 0x38, 0x1c, 0x10, 0xe8, 0x28, 0xe3, 0xff, 0xff, 0xe9, 0x73, 0x4, 0, 0, 0xba, 0xe, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x18, 0x70, 0x4, 0, 0x80, 0x35, 0xd0, 0x37, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0xd0, 0x37, 0x1c, 0x10, 0xe8, 0x5e, 0xdd, 0xff, 0xff, 0xe9, 0x4c, 0x4, 0, 0, 0xba, 0xe, 0x5, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xf1, 0x6f, 0x4, 0, 0x80, 0x35, 0xd1, 0x37, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0xd1, 0x37, 0x1c, 0x10, 0xe8, 0x84, 0xdd, 0xff, 0xff, 0xe9, 0x25, 0x4, 0, 0, 0xe8, 0x21, 0xff, 0x1, 0, 0xe9, 0x1b, 0x4, 0, 0, 0x31, 0xd2, 0xb8, 0x6b, 0x26, 0x1a, 0x10, 0xe8, 0xa0, 0x3, 0x2, 0, 0x85, 0xc0, 0xf, 0x84, 0x7, 0x4, 0, 0, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0x31, 0xc0, 0xe8, 0xe0, 0xd7, 0xff, 0xff, 0xe9, 0xf4, 0x3, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x59, 0xe7, 0xff, 0xff, 0x84, 0xc0, 0x75, 0xb, 0xf, 0xbf, 0x45, 0xfc, 0x3d, 0, 0x70, 0, 0, 0x7d, 0x2, 0xeb, 0x9, 0x80, 0x3d, 0x90, 0x38, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0x54, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x7, 0x75, 0x35, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x3f, 0x75, 0x9, 0x83, 0x3d, 0xa0, 0x39, 0x1c, 0x10, 0, 0x75, 0x2, 0xeb, 0xc, 0xa1, 0xa0, 0x39, 0x1c, 0x10, 0xe8, 0xc1, 0x8e, 0xfd, 0xff, 0xeb, 0x13, 0x83, 0x3d, 0xa4, 0x39, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0xa4, 0x39, 0x1c, 0x10, 0xe8, 0xac, 0x8e, 0xfd, 0xff, 0xeb, 0xf, 0xba, 0xdd, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x36, 0x6f, 0x4, 0, 0xc6, 0x5, 0x90, 0x38, 0x1c, 0x10, 0x1, 0xe9, 0x76, 0x3, 0, 0, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe0, 0x66, 0x81, 0x7d, 0xe0, 0x6c, 0x1, 0xf, 0x82, 0x94, 0x1, 0, 0, 0x66, 0x81, 0x7d, 0xe0, 0x6f, 0x1, 0xf, 0x86, 0xff, 0xf8, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xfc, 0x3, 0xf, 0x82, 0xcc, 0, 0, 0, 0x66, 0x81, 0x7d, 0xe0, 0xfc, 0x3, 0xf, 0x86, 0x1f, 0xfd, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x6, 0x4, 0x72, 0x6c, 0x66, 0x81, 0x7d, 0xe0, 0x6, 0x4, 0xf, 0x86, 0xf6, 0xfd, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x9, 0x4, 0x72, 0x42, 0x66, 0x81, 0x7d, 0xe0, 0x9, 0x4, 0xf, 0x86, 0x7e, 0xfe, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xc, 0x4, 0x72, 0x1d, 0x66, 0x81, 0x7d, 0xe0, 0xc, 0x4, 0xf, 0x86, 0x91, 0xfe, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xd, 0x4, 0xf, 0x84, 0xac, 0xfe, 0xff, 0xff, 0xe9, 0xff, 0xfe, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xa, 0x4, 0xf, 0x84, 0x80, 0xfd, 0xff, 0xff, 0xe9, 0xee, 0xfe, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x7, 0x4, 0xf, 0x86, 0xc7, 0xfd, 0xff, 0xff, 0xe9, 0xe9, 0xfd, 0xff, 0xff, 0xe9, 0xd8, 0xfe, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x3, 0x4, 0x72, 0x22, 0x66, 0x81, 0x7d, 0xe0, 0x3, 0x4, 0xf, 0x86, 0xdc, 0xfc, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x4, 0x4, 0xf, 0x86, 0xf7, 0xfc, 0xff, 0xff, 0xe9, 0x19, 0xfd, 0xff, 0xff, 0xe9, 0xae, 0xfe, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xfd, 0x3, 0xf, 0x86, 0x84, 0xfc, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x2, 0x4, 0xf, 0x84, 0x87, 0xfc, 0xff, 0xff, 0xe9, 0x91, 0xfe, 0xff, 0xff, 0xe9, 0x8c, 0xfe, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xf6, 0x3, 0x72, 0x4c, 0x66, 0x81, 0x7d, 0xe0, 0xf6, 0x3, 0xf, 0x86, 0x15, 0xfb, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xf9, 0x3, 0x72, 0x22, 0x66, 0x81, 0x7d, 0xe0, 0xf9, 0x3, 0xf, 0x86, 0x46, 0xfb, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xfa, 0x3, 0xf, 0x86, 0xb, 0xfc, 0xff, 0xff, 0xe9, 0xe, 0xfb, 0xff, 0xff, 0xe9, 0x4e, 0xfe, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xf7, 0x3, 0xf, 0x86, 0x75, 0xfd, 0xff, 0xff, 0xe9, 0x2, 0xfb, 0xff, 0xff, 0xe9, 0x38, 0xfe, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xed, 0x3, 0x72, 0x36, 0x66, 0x81, 0x7d, 0xe0, 0xed, 0x3, 0xf, 0x86, 0x35, 0xfa, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xef, 0x3, 0x72, 0x1d, 0x66, 0x81, 0x7d, 0xe0, 0xef, 0x3, 0xf, 0x86, 0xb7, 0xfa, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xf0, 0x3, 0xf, 0x84, 0xb5, 0xfa, 0xff, 0xff, 0xe9, 0xff, 0xfd, 0xff, 0xff, 0xe9, 0xfa, 0xfd, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0xeb, 0x3, 0x72, 0x11, 0x66, 0x81, 0x7d, 0xe0, 0xeb, 0x3, 0xf, 0x86, 0x30, 0xf9, 0xff, 0xff, 0xe9, 0x60, 0xfa, 0xff, 0xff, 0xe9, 0xdc, 0xfd, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x67, 0xf, 0x82, 0xf3, 0, 0, 0, 0x66, 0x83, 0x7d, 0xe0, 0x67, 0xf, 0x86, 0x20, 0xfd, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x3b, 0x1, 0xf, 0x82, 0x74, 0, 0, 0, 0x66, 0x81, 0x7d, 0xe0, 0x3b, 0x1, 0xf, 0x86, 0xc, 0xf6, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x4b, 0x1, 0x72, 0x36, 0x66, 0x81, 0x7d, 0xe0, 0x4b, 0x1, 0xf, 0x86, 0x97, 0xf7, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x4d, 0x1, 0x72, 0x1d, 0x66, 0x81, 0x7d, 0xe0, 0x4d, 0x1, 0xf, 0x86, 0x77, 0xf7, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x50, 0x1, 0xf, 0x84, 0x83, 0xf7, 0xff, 0xff, 0xe9, 0x75, 0xfd, 0xff, 0xff, 0xe9, 0x70, 0xfd, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x3f, 0x1, 0x72, 0x1d, 0x66, 0x81, 0x7d, 0xe0, 0x42, 0x1, 0xf, 0x86, 0x8c, 0xf6, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x48, 0x1, 0xf, 0x84, 0x65, 0xf7, 0xff, 0xff, 0xe9, 0x4b, 0xfd, 0xff, 0xff, 0xe9, 0x46, 0xfd, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x21, 0x1, 0x72, 0x36, 0x66, 0x81, 0x7d, 0xe0, 0x21, 0x1, 0xf, 0x86, 0xb1, 0xf9, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x26, 0x1, 0x72, 0x1d, 0x66, 0x81, 0x7d, 0xe0, 0x26, 0x1, 0xf, 0x86, 0x39, 0xf9, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x2d, 0x1, 0xf, 0x84, 0xeb, 0xfc, 0xff, 0xff, 0xe9, 0xd, 0xfd, 0xff, 0xff, 0xe9, 0x8, 0xfd, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x19, 0x1, 0x72, 0x1d, 0x66, 0x81, 0x7d, 0xe0, 0x19, 0x1, 0xf, 0x86, 0xc3, 0xfc, 0xff, 0xff, 0x66, 0x81, 0x7d, 0xe0, 0x1f, 0x1, 0xf, 0x84, 0x4b, 0xf9, 0xff, 0xff, 0xe9, 0xe3, 0xfc, 0xff, 0xff, 0xe9, 0xde, 0xfc, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x3d, 0x72, 0x6b, 0x66, 0x83, 0x7d, 0xe0, 0x3d, 0xf, 0x86, 0xed, 0xf6, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x47, 0x72, 0x32, 0x66, 0x83, 0x7d, 0xe0, 0x47, 0xf, 0x86, 0x14, 0xfc, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x5b, 0x72, 0x1b, 0x66, 0x83, 0x7d, 0xe0, 0x5b, 0xf, 0x86, 0xf2, 0xf4, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x66, 0xf, 0x84, 0x3a, 0xf9, 0xff, 0xff, 0xe9, 0x98, 0xfc, 0xff, 0xff, 0xe9, 0x93, 0xfc, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x3f, 0x72, 0x1b, 0x66, 0x83, 0x7d, 0xe0, 0x3f, 0xf, 0x86, 0x3c, 0xf9, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x46, 0xf, 0x84, 0x13, 0xf9, 0xff, 0xff, 0xe9, 0x71, 0xfc, 0xff, 0xff, 0xe9, 0x6c, 0xfc, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x20, 0x72, 0x32, 0x66, 0x83, 0x7d, 0xe0, 0x20, 0xf, 0x86, 0xe2, 0xf7, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x2b, 0x72, 0x1b, 0x66, 0x83, 0x7d, 0xe0, 0x2b, 0xf, 0x86, 0x69, 0xf6, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x2d, 0xf, 0x84, 0x85, 0xf6, 0xff, 0xff, 0xe9, 0x38, 0xfc, 0xff, 0xff, 0xe9, 0x33, 0xfc, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0xd, 0x72, 0x1b, 0x66, 0x83, 0x7d, 0xe0, 0xd, 0xf, 0x86, 0x90, 0xf6, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x1b, 0xf, 0x84, 0xb3, 0xf7, 0xff, 0xff, 0xe9, 0x11, 0xfc, 0xff, 0xff, 0xe9, 0xc, 0xfc, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f62d9, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x100f62de, 0x5)   calld(sys_check_available_stack_size, 0x6fa6f); /* call 0x10165d52 */
    II(0x100f62e3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f62e4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f62e5, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f62e6, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f62e7, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f62e8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f62e9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f62eb, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100f62f1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f62f3, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f62f8, 0x6)   imul(edx, eax, 0x247);                /* imul edx, eax, 0x247 */
    II(0x100f62fe, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x100f6303, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100f6305, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f6308, 0x5)   calld(/* sys */ 0x1016b208, 0x74efb); /* call 0x1016b208 */
    II(0x100f630d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f6310, 0x7)   cmp(memd_a32(ds, 0x101c3940), 0);     /* cmp dword [0x101c3940], 0x0 */
    II(0x100f6317, 0x2)   jzd(0x100f632b, 0x12);                /* jz 0x100f632b */
    II(0x100f6319, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100f631d, 0x5)   mov(eax, memd_a32(ds, 0x101c3940));   /* mov eax, [0x101c3940] */
    II(0x100f6322, 0x5)   calld(0x100eb283, -0xb0a4);           /* call 0x100eb283 */
    II(0x100f6327, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f6329, 0x2)   jnzd(0x100f6330, 0x5);                /* jnz 0x100f6330 */
l_0x100f632b:
    II(0x100f632b, 0x5)   jmpd(0x100f63a4, 0x74);               /* jmp 0x100f63a4 */
l_0x100f6330:
    II(0x100f6330, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f6334, 0x3)   cmp(eax, 0xd);                        /* cmp eax, 0xd */
    II(0x100f6337, 0x2)   jnzd(0x100f639d, 0x64);               /* jnz 0x100f639d */
    II(0x100f6339, 0x5)   mov(edx, 0x101c3944);                 /* mov edx, 0x101c3944 */
    II(0x100f633e, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100f6343, 0x5)   calld(0x10076574, -0x7fdd4);          /* call 0x10076574 */
    II(0x100f6348, 0x5)   calld(0x1014fabe, 0x59771);           /* call 0x1014fabe */
    II(0x100f634d, 0x5)   mov(eax, memd_a32(ds, 0x101c3940));   /* mov eax, [0x101c3940] */
    II(0x100f6352, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100f6355, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x100f6359, 0x2)   jzd(0x100f636f, 0x14);                /* jz 0x100f636f */
    II(0x100f635b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f635d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f6360, 0x5)   calld(my_dtor_d6, -0xb28e);           /* call 0x100eb0d7 */
    II(0x100f6365, 0x5)   calld(sys_delete, 0x6fbfa);           /* call 0x10165f64 */
    II(0x100f636a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100f636d, 0x2)   jmpd(0x100f6376, 0x7);                /* jmp 0x100f6376 */
l_0x100f636f:
    II(0x100f636f, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x100f6376:
    II(0x100f6376, 0xa)   mov(memd_a32(ds, 0x101c3940), 0);     /* mov dword [0x101c3940], 0x0 */
    II(0x100f6380, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100f6387, 0x2)   jzd(0x100f639d, 0x14);                /* jz 0x100f639d */
    II(0x100f6389, 0x5)   mov(edx, 0x101c3944);                 /* mov edx, 0x101c3944 */
    II(0x100f638e, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100f6393, 0x5)   calld(0x100765d0, -0x7fdc8);          /* call 0x100765d0 */
    II(0x100f6398, 0x5)   calld(0x1012b0af, 0x34d12);           /* call 0x1012b0af */
l_0x100f639d:
    II(0x100f639d, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0xffffffff); /* mov dword [ebp-0x4], 0xffffffff */
l_0x100f63a4:
    II(0x100f63a4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f63a8, 0x5)   calld(0x100f6198, -0x215);            /* call 0x100f6198 */
    II(0x100f63ad, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f63af, 0x2)   jzd(0x100f63b8, 0x7);                 /* jz 0x100f63b8 */
    II(0x100f63b1, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0xffffffff); /* mov dword [ebp-0x4], 0xffffffff */
l_0x100f63b8:
    II(0x100f63b8, 0x5)   calld(0x101482f4, 0x51f37);           /* call 0x101482f4 */
    II(0x100f63bd, 0x5)   mov(memd_a32(ds, 0x101c3930), eax);   /* mov [0x101c3930], eax */
    II(0x100f63c2, 0x5)   mov(al, memb_a32(ds, 0x1020946a));    /* mov al, [0x1020946a] */
    II(0x100f63c7, 0x6)   or_(al, memb_a32(ds, 0x10209476));    /* or al, [0x10209476] */
    II(0x100f63cd, 0x5)   mov(memb_a32(ds, 0x101c3918), al);    /* mov [0x101c3918], al */
    II(0x100f63d2, 0x5)   mov(al, memb_a32(ds, 0x1020945d));    /* mov al, [0x1020945d] */
    II(0x100f63d7, 0x6)   or_(al, memb_a32(ds, 0x102094dd));    /* or al, [0x102094dd] */
    II(0x100f63dd, 0x5)   mov(memb_a32(ds, 0x101c3917), al);    /* mov [0x101c3917], al */
    II(0x100f63e2, 0x7)   cmp(memb_a32(ds, 0x101c37d2), 0);     /* cmp byte [0x101c37d2], 0x0 */
    II(0x100f63e9, 0x6)   jzd(0x100f64d4, 0xe5);                /* jz dword 0x100f64d4 */
    II(0x100f63ef, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f63f1, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f63f6, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f63fc, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca491)); /* mov al, [eax+0x101ca491] */
    II(0x100f6402, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f6407, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f6409, 0x6)   jnzd(0x100f647d, 0x6e);               /* jnz dword 0x100f647d */
    II(0x100f640f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6411, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f6416, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f641c, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100f6422, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f6427, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f642a, 0x2)   jzd(0x100f6449, 0x1d);                /* jz 0x100f6449 */
    II(0x100f642c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f642e, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f6433, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f6439, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100f643f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f6444, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100f6447, 0x2)   jnzd(0x100f647b, 0x32);               /* jnz 0x100f647b */
l_0x100f6449:
    II(0x100f6449, 0x5)   calld(0x100ffc13, 0x97c5);            /* call 0x100ffc13 */
    II(0x100f644e, 0x7)   cmp(memb_a32(ds, 0x101c391d), 0);     /* cmp byte [0x101c391d], 0x0 */
    II(0x100f6455, 0x2)   jzd(0x100f6460, 0x9);                 /* jz 0x100f6460 */
    II(0x100f6457, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x1b);   /* mov dword [ebp-0x4], 0x1b */
    II(0x100f645e, 0x2)   jmpd(0x100f647b, 0x1b);               /* jmp 0x100f647b */
l_0x100f6460:
    II(0x100f6460, 0x7)   cmp(memb_a32(ds, 0x101c37d4), 0);     /* cmp byte [0x101c37d4], 0x0 */
    II(0x100f6467, 0x2)   jnzd(0x100f6472, 0x9);                /* jnz 0x100f6472 */
    II(0x100f6469, 0x7)   cmp(memb_a32(ds, 0x101c3913), 0);     /* cmp byte [0x101c3913], 0x0 */
    II(0x100f6470, 0x2)   jzd(0x100f6474, 0x2);                 /* jz 0x100f6474 */
l_0x100f6472:
    II(0x100f6472, 0x2)   jmpd(0x100f647b, 0x7);                /* jmp 0x100f647b */
l_0x100f6474:
    II(0x100f6474, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x3eb);  /* mov dword [ebp-0x4], 0x3eb */
l_0x100f647b:
    II(0x100f647b, 0x2)   jmpd(0x100f64d4, 0x57);               /* jmp 0x100f64d4 */
l_0x100f647d:
    II(0x100f647d, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100f6484, 0x2)   jmpd(0x100f648c, 0x6);                /* jmp 0x100f648c */
l_0x100f6486:
    II(0x100f6486, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f6489, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100f648c:
    II(0x100f648c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f6490, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100f6493, 0x2)   jged(0x100f64d4, 0x3f);               /* jge 0x100f64d4 */
    II(0x100f6495, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f6499, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f649f, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100f64a5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f64aa, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100f64ad, 0x2)   jnzd(0x100f64c2, 0x13);               /* jnz 0x100f64c2 */
    II(0x100f64af, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f64b3, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f64b9, 0x7)   cmp(memb_a32(ds, eax + 0x101ca491), 0); /* cmp byte [eax+0x101ca491], 0x0 */
    II(0x100f64c0, 0x2)   jzd(0x100f64c4, 0x2);                 /* jz 0x100f64c4 */
l_0x100f64c2:
    II(0x100f64c2, 0x2)   jmpd(0x100f64d2, 0xe);                /* jmp 0x100f64d2 */
l_0x100f64c4:
    II(0x100f64c4, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100f64c9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f64cd, 0x5)   calld(0x101026f8, 0xc226);            /* call 0x101026f8 */
l_0x100f64d2:
    II(0x100f64d2, 0x2)   jmpd(0x100f6486, -0x4e);              /* jmp 0x100f6486 */
l_0x100f64d4:
    II(0x100f64d4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f64d8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f64da, 0x2)   jled(0x100f64e7, 0xb);                /* jle 0x100f64e7 */
    II(0x100f64dc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f64e0, 0x5)   cmp(eax, 0x7000);                     /* cmp eax, 0x7000 */
    II(0x100f64e5, 0x2)   jld(0x100f64e9, 0x2);                 /* jl 0x100f64e9 */
l_0x100f64e7:
    II(0x100f64e7, 0x2)   jmpd(0x100f64f0, 0x7);                /* jmp 0x100f64f0 */
l_0x100f64e9:
    II(0x100f64e9, 0x7)   mov(memb_a32(ds, 0x101c3890), 0);     /* mov byte [0x101c3890], 0x0 */
l_0x100f64f0:
    II(0x100f64f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f64f3, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100f64f6, 0x5)   jmpd(0x100f6d2f, 0x834);              /* jmp 0x100f6d2f */
l_0x100f64fb:
    II(0x100f64fb, 0x5)   mov(edx, 0x101a25e3);                 /* mov edx, 0x101a25e3 */ /* "[" */
    II(0x100f6500, 0x5)   mov(eax, 0x101c39b4);                 /* mov eax, 0x101c39b4 */
    II(0x100f6505, 0x5)   calld(0x101421cb, 0x4bcc1);           /* call 0x101421cb */
    II(0x100f650a, 0x5)   jmpd(0x100f70a5, 0xb96);              /* jmp 0x100f70a5 */
l_0x100f650f:
    II(0x100f650f, 0x7)   cmp(memb_a32(ds, 0x101c3916), 0);     /* cmp byte [0x101c3916], 0x0 */
    II(0x100f6516, 0x2)   jnzd(0x100f6535, 0x1d);               /* jnz 0x100f6535 */
    II(0x100f6518, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f651a, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f651f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f6525, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100f652b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f6530, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f6533, 0x2)   jzd(0x100f6537, 0x2);                 /* jz 0x100f6537 */
l_0x100f6535:
    II(0x100f6535, 0x2)   jmpd(0x100f653c, 0x5);                /* jmp 0x100f653c */
l_0x100f6537:
    II(0x100f6537, 0x5)   jmpd(0x100f70a5, 0xb69);              /* jmp 0x100f70a5 */
l_0x100f653c:
    II(0x100f653c, 0x5)   mov(eax, memd_a32(ds, 0x101c38b6));   /* mov eax, [0x101c38b6] */
    II(0x100f6541, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f6544, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x100f6547, 0x6)   jzd(0x100f65dc, 0x8f);                /* jz dword 0x100f65dc */
    II(0x100f654d, 0x5)   calld(0x100f40a6, -0x24ac);           /* call 0x100f40a6 */
    II(0x100f6552, 0x5)   calld(0x10102acc, 0xc575);            /* call 0x10102acc */
    II(0x100f6557, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100f6559, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x100f655b, 0x6)   mov(ebx, memd_a32(ds, 0x101c38b8));   /* mov ebx, [0x101c38b8] */
    II(0x100f6561, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100f6564, 0x6)   mov(edx, memd_a32(ds, 0x101c38b6));   /* mov edx, [0x101c38b6] */
    II(0x100f656a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f656d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f6572, 0x5)   calld(0x10101620, 0xb0a9);            /* call 0x10101620 */
    II(0x100f6577, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f6579, 0x5)   mov(eax, 0x101c38b4);                 /* mov eax, 0x101c38b4 */
    II(0x100f657e, 0x5)   calld(0x1013ad71, 0x447ee);           /* call 0x1013ad71 */
    II(0x100f6583, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f6585, 0x2)   jzd(0x100f65a4, 0x1d);                /* jz 0x100f65a4 */
    II(0x100f6587, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6589, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f658e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f6591, 0x5)   mov(eax, 0x101c38b4);                 /* mov eax, 0x101c38b4 */
    II(0x100f6596, 0x5)   calld(0x10076574, -0x80027);          /* call 0x10076574 */
    II(0x100f659b, 0x5)   calld(0x10076074, -0x8052c);          /* call 0x10076074 */
    II(0x100f65a0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f65a2, 0x2)   jnzd(0x100f65a6, 0x2);                /* jnz 0x100f65a6 */
l_0x100f65a4:
    II(0x100f65a4, 0x2)   jmpd(0x100f65bc, 0x16);               /* jmp 0x100f65bc */
l_0x100f65a6:
    II(0x100f65a6, 0x5)   calld(0x1011606c, 0x1fac1);           /* call 0x1011606c */
    II(0x100f65ab, 0x5)   mov(eax, 0x101c38b4);                 /* mov eax, 0x101c38b4 */
    II(0x100f65b0, 0x5)   calld(0x100765d0, -0x7ffe5);          /* call 0x100765d0 */
    II(0x100f65b5, 0x5)   calld(0x100ff637, 0x907d);            /* call 0x100ff637 */
    II(0x100f65ba, 0x2)   jmpd(0x100f65dc, 0x20);               /* jmp 0x100f65dc */
l_0x100f65bc:
    II(0x100f65bc, 0x5)   calld(0x100caa00, -0x2bbc1);          /* call 0x100caa00 */
    II(0x100f65c1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f65c6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f65c7, 0x5)   calld(0x100caa20, -0x2bbac);          /* call 0x100caa20 */
    II(0x100f65cc, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f65ce, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f65d0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f65d2, 0x5)   mov(eax, 0x101a25e5);                 /* mov eax, 0x101a25e5 */ /* "Tagged unit out of range." */
    II(0x100f65d7, 0x5)   calld(0x10115d23, 0x1f747);           /* call 0x10115d23 */
l_0x100f65dc:
    II(0x100f65dc, 0x5)   jmpd(0x100f70a5, 0xac4);              /* jmp 0x100f70a5 */
l_0x100f65e1:
    II(0x100f65e1, 0x7)   cmp(memb_a32(ds, 0x101c3916), 0);     /* cmp byte [0x101c3916], 0x0 */
    II(0x100f65e8, 0x6)   jzd(0x100f70a5, 0xab7);               /* jz dword 0x100f70a5 */
    II(0x100f65ee, 0x7)   add(memd_a32(ss, ebp - 0x4), 0xfffffec1); /* add dword [ebp-0x4], 0xfffffec1 */
    II(0x100f65f5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f65f9, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100f65fb, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100f65fe, 0x6)   mov(eax, memd_a32(ds, eax + 0xeb));   /* mov eax, [eax+0xeb] */
    II(0x100f6604, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100f6607, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x100f660a, 0x2)   jzd(0x100f6647, 0x3b);                /* jz 0x100f6647 */
    II(0x100f660c, 0x5)   calld(0x10102acc, 0xc4bb);            /* call 0x10102acc */
    II(0x100f6611, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100f6613, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x100f6615, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f6619, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100f661b, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100f661e, 0x8)   movsx(ax, memb_a32(ds, eax + 0xef));  /* movsx ax, byte [eax+0xef] */
    II(0x100f6626, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100f6629, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f662d, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100f662f, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100f6632, 0x8)   movsx(ax, memb_a32(ds, eax + 0xee));  /* movsx ax, byte [eax+0xee] */
    II(0x100f663a, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f663d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f6642, 0x5)   calld(0x10101620, 0xafd9);            /* call 0x10101620 */
l_0x100f6647:
    II(0x100f6647, 0x5)   jmpd(0x100f70a5, 0xa59);              /* jmp 0x100f70a5 */
l_0x100f664c:
    II(0x100f664c, 0x7)   add(memd_a32(ss, ebp - 0x4), 0xfffffe94); /* add dword [ebp-0x4], 0xfffffe94 */
    II(0x100f6653, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f6657, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100f6659, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100f665c, 0x6)   mov(dl, memb_a32(ds, 0x101c38e2));    /* mov dl, [0x101c38e2] */
    II(0x100f6662, 0x6)   mov(memb_a32(ds, eax + 0xee), dl);    /* mov [eax+0xee], dl */
    II(0x100f6668, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f666c, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100f666e, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100f6671, 0x6)   mov(dl, memb_a32(ds, 0x101c38e4));    /* mov dl, [0x101c38e4] */
    II(0x100f6677, 0x6)   mov(memb_a32(ds, eax + 0xef), dl);    /* mov [eax+0xef], dl */
    II(0x100f667d, 0x5)   calld(0x100caa00, -0x2bc82);          /* call 0x100caa00 */
    II(0x100f6682, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f6687, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f6688, 0x5)   calld(0x100caa20, -0x2bc6d);          /* call 0x100caa20 */
    II(0x100f668d, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f668f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f6691, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f6693, 0x5)   mov(eax, 0x101a25ff);                 /* mov eax, 0x101a25ff */ /* "Window position has been saved." */
    II(0x100f6698, 0x5)   calld(0x10115d23, 0x1f686);           /* call 0x10115d23 */
    II(0x100f669d, 0x5)   jmpd(0x100f70a5, 0xa03);              /* jmp 0x100f70a5 */
l_0x100f66a2:
    II(0x100f66a2, 0x7)   or_(memb_a32(ds, 0x101c3900), 0x8);   /* or byte [0x101c3900], 0x8 */
    II(0x100f66a9, 0x5)   jmpd(0x100f70a5, 0x9f7);              /* jmp 0x100f70a5 */
l_0x100f66ae:
    II(0x100f66ae, 0x7)   or_(memb_a32(ds, 0x101c3900), 0x4);   /* or byte [0x101c3900], 0x4 */
    II(0x100f66b5, 0x5)   jmpd(0x100f70a5, 0x9eb);              /* jmp 0x100f70a5 */
l_0x100f66ba:
    II(0x100f66ba, 0x7)   or_(memb_a32(ds, 0x101c3900), 0x2);   /* or byte [0x101c3900], 0x2 */
    II(0x100f66c1, 0x5)   jmpd(0x100f70a5, 0x9df);              /* jmp 0x100f70a5 */
l_0x100f66c6:
    II(0x100f66c6, 0x7)   or_(memb_a32(ds, 0x101c3900), 0x1);   /* or byte [0x101c3900], 0x1 */
    II(0x100f66cd, 0x5)   jmpd(0x100f70a5, 0x9d3);              /* jmp 0x100f70a5 */
l_0x100f66d2:
    II(0x100f66d2, 0x7)   cmp(memb_a32(ds, 0x101c3916), 0);     /* cmp byte [0x101c3916], 0x0 */
    II(0x100f66d9, 0x6)   jzd(0x100f70a5, 0x9c6);               /* jz dword 0x100f70a5 */
    II(0x100f66df, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100f66e1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f66e3, 0x6)   mov(ax, memw_a32(ds, 0x101c38c0));    /* mov ax, [0x101c38c0] */
    II(0x100f66e9, 0x1)   inc(eax);                             /* inc eax */
    II(0x100f66ea, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f66ed, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f66ef, 0x5)   calld(0x10101620, 0xaf2c);            /* call 0x10101620 */
    II(0x100f66f4, 0x5)   jmpd(0x100f70a5, 0x9ac);              /* jmp 0x100f70a5 */
l_0x100f66f9:
    II(0x100f66f9, 0x7)   cmp(memb_a32(ds, 0x101c3916), 0);     /* cmp byte [0x101c3916], 0x0 */
    II(0x100f6700, 0x6)   jzd(0x100f70a5, 0x99f);               /* jz dword 0x100f70a5 */
    II(0x100f6706, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100f6708, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f670a, 0x6)   mov(ax, memw_a32(ds, 0x101c38c0));    /* mov ax, [0x101c38c0] */
    II(0x100f6710, 0x1)   dec(eax);                             /* dec eax */
    II(0x100f6711, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f6714, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6716, 0x5)   calld(0x10101620, 0xaf05);            /* call 0x10101620 */
    II(0x100f671b, 0x5)   jmpd(0x100f70a5, 0x985);              /* jmp 0x100f70a5 */
l_0x100f6720:
    II(0x100f6720, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x7);   /* cmp byte [0x101c391e], 0x7 */
    II(0x100f6727, 0x6)   jnzd(0x100f67c2, 0x95);               /* jnz dword 0x100f67c2 */
    II(0x100f672d, 0x5)   calld(0x1011606c, 0x1f93a);           /* call 0x1011606c */
    II(0x100f6732, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6734, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100f6739, 0x1)   cwde();                               /* cwde */
    II(0x100f673a, 0x5)   calld(0x100a25e5, -0x5415a);          /* call 0x100a25e5 */
    II(0x100f673f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6741, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100f6746, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100f6749, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c35bc)); /* mov ax, [eax+0x101c35bc] */
    II(0x100f6750, 0x6)   mov(memw_a32(ds, 0x101c38e2), ax);    /* mov [0x101c38e2], ax */
    II(0x100f6756, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6758, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100f675d, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100f6760, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c35be)); /* mov ax, [eax+0x101c35be] */
    II(0x100f6767, 0x6)   mov(memw_a32(ds, 0x101c38e4), ax);    /* mov [0x101c38e4], ax */
    II(0x100f676d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f676f, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100f6774, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f677a, 0x7)   mov(dx, memw_a32(ds, 0x101c38e2));    /* mov dx, [0x101c38e2] */
    II(0x100f6781, 0x7)   mov(memw_a32(ds, eax + 0x101ca56c), dx); /* mov [eax+0x101ca56c], dx */
    II(0x100f6788, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f678a, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100f678f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f6795, 0x7)   mov(dx, memw_a32(ds, 0x101c38e4));    /* mov dx, [0x101c38e4] */
    II(0x100f679c, 0x7)   mov(memw_a32(ds, eax + 0x101ca56e), dx); /* mov [eax+0x101ca56e], dx */
    II(0x100f67a3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f67a5, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100f67aa, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f67b0, 0x9)   mov(memw_a32(ds, eax + 0x101ca56a), 0x40); /* mov word [eax+0x101ca56a], 0x40 */
    II(0x100f67b9, 0x7)   mov(memb_a32(ds, 0x101c391e), 0xd);   /* mov byte [0x101c391e], 0xd */
    II(0x100f67c0, 0x2)   jmpd(0x100f67d7, 0x15);               /* jmp 0x100f67d7 */
l_0x100f67c2:
    II(0x100f67c2, 0x7)   cmp(memb_a32(ds, 0x101c3938), 0);     /* cmp byte [0x101c3938], 0x0 */
    II(0x100f67c9, 0x2)   jzd(0x100f67d7, 0xc);                 /* jz 0x100f67d7 */
    II(0x100f67cb, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
    II(0x100f67d2, 0x5)   jmpd(0x100f70a5, 0x8ce);              /* jmp 0x100f70a5 */
l_0x100f67d7:
    II(0x100f67d7, 0x7)   cmp(memb_a32(ds, 0x101c3916), 0);     /* cmp byte [0x101c3916], 0x0 */
    II(0x100f67de, 0x2)   jzd(0x100f67f6, 0x16);                /* jz 0x100f67f6 */
    II(0x100f67e0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f67e2, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f67e7, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f67ed, 0x7)   cmp(memb_a32(ds, eax + 0x101ca491), 0); /* cmp byte [eax+0x101ca491], 0x0 */
    II(0x100f67f4, 0x2)   jzd(0x100f67fb, 0x5);                 /* jz 0x100f67fb */
l_0x100f67f6:
    II(0x100f67f6, 0x5)   jmpd(0x100f70a5, 0x8aa);              /* jmp 0x100f70a5 */
l_0x100f67fb:
    II(0x100f67fb, 0x5)   mov(edx, 0x4dd);                      /* mov edx, 0x4dd */
    II(0x100f6800, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6805, 0x5)   calld(0x1013dc59, 0x4744f);           /* call 0x1013dc59 */
    II(0x100f680a, 0x5)   calld(0x100f53c7, -0x1448);           /* call 0x100f53c7 */
    II(0x100f680f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6811, 0x5)   mov(al, memb_a32(ds, 0x101c37d2));    /* mov al, [0x101c37d2] */
    II(0x100f6816, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f6819, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f681b, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f6820, 0x1)   cwde();                               /* cwde */
    II(0x100f6821, 0x5)   calld(0x101026f8, 0xbed2);            /* call 0x101026f8 */
    II(0x100f6826, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f6828, 0x2)   jnzd(0x100f6834, 0xa);                /* jnz 0x100f6834 */
    II(0x100f682a, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f682f, 0x5)   calld(0x100f4fa2, -0x1892);           /* call 0x100f4fa2 */
l_0x100f6834:
    II(0x100f6834, 0x5)   jmpd(0x100f70a5, 0x86c);              /* jmp 0x100f70a5 */
l_0x100f6839:
    II(0x100f6839, 0x7)   cmp(memb_a32(ds, 0x101c3938), 0);     /* cmp byte [0x101c3938], 0x0 */
    II(0x100f6840, 0x2)   jzd(0x100f6849, 0x7);                 /* jz 0x100f6849 */
    II(0x100f6842, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
l_0x100f6849:
    II(0x100f6849, 0x5)   jmpd(0x100f70a5, 0x857);              /* jmp 0x100f70a5 */
l_0x100f684e:
    II(0x100f684e, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x7);   /* cmp byte [0x101c391e], 0x7 */
    II(0x100f6855, 0x2)   jnzd(0x100f6860, 0x9);                /* jnz 0x100f6860 */
    II(0x100f6857, 0x7)   mov(memb_a32(ds, 0x101c391e), 0xe);   /* mov byte [0x101c391e], 0xe */
    II(0x100f685e, 0x2)   jmpd(0x100f68bd, 0x5d);               /* jmp 0x100f68bd */
l_0x100f6860:
    II(0x100f6860, 0x7)   cmp(memb_a32(ds, 0x101c3913), 0);     /* cmp byte [0x101c3913], 0x0 */
    II(0x100f6867, 0x2)   jzd(0x100f6872, 0x9);                 /* jz 0x100f6872 */
    II(0x100f6869, 0x7)   mov(memb_a32(ds, 0x101c3913), 0);     /* mov byte [0x101c3913], 0x0 */
    II(0x100f6870, 0x2)   jmpd(0x100f68bd, 0x4b);               /* jmp 0x100f68bd */
l_0x100f6872:
    II(0x100f6872, 0x7)   cmp(memb_a32(ds, 0x101c37e4), 0);     /* cmp byte [0x101c37e4], 0x0 */
    II(0x100f6879, 0x2)   jzd(0x100f6884, 0x9);                 /* jz 0x100f6884 */
    II(0x100f687b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f687d, 0x5)   calld(0x100f448c, -0x23f6);           /* call 0x100f448c */
    II(0x100f6882, 0x2)   jmpd(0x100f68bd, 0x39);               /* jmp 0x100f68bd */
l_0x100f6884:
    II(0x100f6884, 0x7)   cmp(memb_a32(ds, 0x101c391d), 0);     /* cmp byte [0x101c391d], 0x0 */
    II(0x100f688b, 0x2)   jzd(0x100f6894, 0x7);                 /* jz 0x100f6894 */
    II(0x100f688d, 0x5)   calld(0x1011606c, 0x1f7da);           /* call 0x1011606c */
    II(0x100f6892, 0x2)   jmpd(0x100f68bd, 0x29);               /* jmp 0x100f68bd */
l_0x100f6894:
    II(0x100f6894, 0x7)   cmp(memb_a32(ds, 0x101c3938), 0);     /* cmp byte [0x101c3938], 0x0 */
    II(0x100f689b, 0x2)   jzd(0x100f68a6, 0x9);                 /* jz 0x100f68a6 */
    II(0x100f689d, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
    II(0x100f68a4, 0x2)   jmpd(0x100f68bd, 0x17);               /* jmp 0x100f68bd */
l_0x100f68a6:
    II(0x100f68a6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f68a8, 0x5)   mov(eax, 0x101a261f);                 /* mov eax, 0x101a261f */ /* "OK to exit game?" */
    II(0x100f68ad, 0x5)   calld(0x10117036, 0x20784);           /* call 0x10117036 */
    II(0x100f68b2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f68b4, 0x2)   jzd(0x100f68bd, 0x7);                 /* jz 0x100f68bd */
    II(0x100f68b6, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
l_0x100f68bd:
    II(0x100f68bd, 0x5)   jmpd(0x100f70a5, 0x7e3);              /* jmp 0x100f70a5 */
l_0x100f68c2:
    II(0x100f68c2, 0x5)   calld(0x100f4dba, -0x1b0d);           /* call 0x100f4dba */
    II(0x100f68c7, 0x5)   jmpd(0x100f70a5, 0x7d9);              /* jmp 0x100f70a5 */
l_0x100f68cc:
    II(0x100f68cc, 0x7)   cmp(memb_a32(ds, 0x101c3916), 0);     /* cmp byte [0x101c3916], 0x0 */
    II(0x100f68d3, 0x6)   jzd(0x100f70a5, 0x7cc);               /* jz dword 0x100f70a5 */
    II(0x100f68d9, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100f68e0, 0x2)   jzd(0x100f6908, 0x26);                /* jz 0x100f6908 */
    II(0x100f68e2, 0x5)   calld(0x100caa00, -0x2bee7);          /* call 0x100caa00 */
    II(0x100f68e7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f68ec, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f68ed, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100f68f2, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100f68f7, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100f68fc, 0x5)   mov(eax, 0x101a2630);                 /* mov eax, 0x101a2630 */ /* "Unable to load a saved game while remote play in progress." */
    II(0x100f6901, 0x5)   calld(0x10115d23, 0x1f41d);           /* call 0x10115d23 */
    II(0x100f6906, 0x2)   jmpd(0x100f690f, 0x7);                /* jmp 0x100f690f */
l_0x100f6908:
    II(0x100f6908, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f690a, 0x5)   calld(0x100f5227, -0x16e8);           /* call 0x100f5227 */
l_0x100f690f:
    II(0x100f690f, 0x5)   jmpd(0x100f70a5, 0x791);              /* jmp 0x100f70a5 */
l_0x100f6914:
    II(0x100f6914, 0x7)   cmp(memb_a32(ds, 0x101c3916), 0);     /* cmp byte [0x101c3916], 0x0 */
    II(0x100f691b, 0x6)   jzd(0x100f70a5, 0x784);               /* jz dword 0x100f70a5 */
    II(0x100f6921, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f6926, 0x5)   calld(0x100f5227, -0x1704);           /* call 0x100f5227 */
    II(0x100f692b, 0x5)   jmpd(0x100f70a5, 0x775);              /* jmp 0x100f70a5 */
l_0x100f6930:
    II(0x100f6930, 0x7)   cmp(memb_a32(ds, 0x101c3916), 0);     /* cmp byte [0x101c3916], 0x0 */
    II(0x100f6937, 0x6)   jzd(0x100f70a5, 0x768);               /* jz dword 0x100f70a5 */
    II(0x100f693d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f693f, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f6944, 0x5)   calld(0x100f4ebe, -0x1a8b);           /* call 0x100f4ebe */
    II(0x100f6949, 0x5)   jmpd(0x100f70a5, 0x757);              /* jmp 0x100f70a5 */
l_0x100f694e:
    II(0x100f694e, 0x5)   calld(0x100f4b16, -0x1e3d);           /* call 0x100f4b16 */
    II(0x100f6953, 0x5)   jmpd(0x100f70a5, 0x74d);              /* jmp 0x100f70a5 */
l_0x100f6958:
    II(0x100f6958, 0x5)   calld(0x100f4ab2, -0x1eab);           /* call 0x100f4ab2 */
    II(0x100f695d, 0x5)   jmpd(0x100f70a5, 0x743);              /* jmp 0x100f70a5 */
l_0x100f6962:
    II(0x100f6962, 0x5)   calld(0x100f4ae4, -0x1e83);           /* call 0x100f4ae4 */
    II(0x100f6967, 0x5)   jmpd(0x100f70a5, 0x739);              /* jmp 0x100f70a5 */
l_0x100f696c:
    II(0x100f696c, 0x5)   calld(0x100f4a4c, -0x1f25);           /* call 0x100f4a4c */
    II(0x100f6971, 0x5)   jmpd(0x100f70a5, 0x72f);              /* jmp 0x100f70a5 */
l_0x100f6976:
    II(0x100f6976, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f6978, 0x5)   mov(eax, memd_a32(ds, 0x101b8799));   /* mov eax, [0x101b8799] */
    II(0x100f697d, 0x5)   calld(0x100cfb73, -0x26e0f);          /* call 0x100cfb73 */
    II(0x100f6982, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6984, 0x5)   calld(0x10101374, 0xa9eb);            /* call 0x10101374 */
    II(0x100f6989, 0x5)   calld(0x100f4b16, -0x1e78);           /* call 0x100f4b16 */
    II(0x100f698e, 0x5)   jmpd(0x100f70a5, 0x712);              /* jmp 0x100f70a5 */
l_0x100f6993:
    II(0x100f6993, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f6995, 0x5)   mov(eax, memd_a32(ds, 0x101b87a7));   /* mov eax, [0x101b87a7] */
    II(0x100f699a, 0x5)   calld(0x100cfb73, -0x26e2c);          /* call 0x100cfb73 */
    II(0x100f699f, 0x7)   cmp(memb_a32(ds, 0x101c3918), 0);     /* cmp byte [0x101c3918], 0x0 */
    II(0x100f69a6, 0x2)   jzd(0x100f69c5, 0x1d);                /* jz 0x100f69c5 */
    II(0x100f69a8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f69aa, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f69af, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f69b5, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100f69bb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f69c0, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f69c3, 0x2)   jzd(0x100f69c7, 0x2);                 /* jz 0x100f69c7 */
l_0x100f69c5:
    II(0x100f69c5, 0x2)   jmpd(0x100f69f4, 0x2d);               /* jmp 0x100f69f4 */
l_0x100f69c7:
    II(0x100f69c7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f69c9, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f69ce, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f69d1, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100f69d6, 0x5)   calld(0x10072f25, -0x83ab6);          /* call 0x10072f25 */
    II(0x100f69db, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f69dd, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f69e2, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f69e5, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100f69ea, 0x5)   calld(0x10072f25, -0x83aca);          /* call 0x10072f25 */
    II(0x100f69ef, 0x5)   jmpd(0x100f6a5f, 0x6b);               /* jmp 0x100f6a5f */
l_0x100f69f4:
    II(0x100f69f4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f69f6, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100f69fb, 0x5)   calld(0x1013ad71, 0x44371);           /* call 0x1013ad71 */
    II(0x100f6a00, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f6a02, 0x2)   jzd(0x100f6a1e, 0x1a);                /* jz 0x100f6a1e */
    II(0x100f6a04, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100f6a09, 0x5)   calld(0x10076574, -0x8049a);          /* call 0x10076574 */
    II(0x100f6a0e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f6a10, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100f6a13, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6a15, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f6a1a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100f6a1c, 0x2)   jzd(0x100f6a20, 0x2);                 /* jz 0x100f6a20 */
l_0x100f6a1e:
    II(0x100f6a1e, 0x2)   jmpd(0x100f6a3d, 0x1d);               /* jmp 0x100f6a3d */
l_0x100f6a20:
    II(0x100f6a20, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6a22, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f6a27, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f6a2d, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100f6a33, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f6a38, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f6a3b, 0x2)   jzd(0x100f6a3f, 0x2);                 /* jz 0x100f6a3f */
l_0x100f6a3d:
    II(0x100f6a3d, 0x2)   jmpd(0x100f6a50, 0x11);               /* jmp 0x100f6a50 */
l_0x100f6a3f:
    II(0x100f6a3f, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100f6a44, 0x5)   calld(0x10076600, -0x80449);          /* call 0x10076600 */
    II(0x100f6a49, 0x5)   calld(0x10157e4d, 0x613ff);           /* call 0x10157e4d */
    II(0x100f6a4e, 0x2)   jmpd(0x100f6a5f, 0xf);                /* jmp 0x100f6a5f */
l_0x100f6a50:
    II(0x100f6a50, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f6a55, 0x5)   calld(0x10101374, 0xa91a);            /* call 0x10101374 */
    II(0x100f6a5a, 0x5)   calld(0x100f4b16, -0x1f49);           /* call 0x100f4b16 */
l_0x100f6a5f:
    II(0x100f6a5f, 0x5)   jmpd(0x100f70a5, 0x641);              /* jmp 0x100f70a5 */
l_0x100f6a64:
    II(0x100f6a64, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f6a66, 0x5)   mov(eax, memd_a32(ds, 0x101b87b5));   /* mov eax, [0x101b87b5] */
    II(0x100f6a6b, 0x5)   calld(0x100cfb73, -0x26efd);          /* call 0x100cfb73 */
    II(0x100f6a70, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f6a75, 0x5)   calld(0x10101374, 0xa8fa);            /* call 0x10101374 */
    II(0x100f6a7a, 0x5)   calld(0x100f4b16, -0x1f69);           /* call 0x100f4b16 */
    II(0x100f6a7f, 0x5)   jmpd(0x100f70a5, 0x621);              /* jmp 0x100f70a5 */
l_0x100f6a84:
    II(0x100f6a84, 0x5)   calld(0x100f40a6, -0x29e3);           /* call 0x100f40a6 */
    II(0x100f6a89, 0x5)   calld(0x100f4796, -0x22f8);           /* call 0x100f4796 */
    II(0x100f6a8e, 0x5)   jmpd(0x100f70a5, 0x612);              /* jmp 0x100f70a5 */
l_0x100f6a93:
    II(0x100f6a93, 0x5)   calld(0x100f40a6, -0x29f2);           /* call 0x100f40a6 */
    II(0x100f6a98, 0x5)   calld(0x100f4bed, -0x1eb0);           /* call 0x100f4bed */
    II(0x100f6a9d, 0x5)   jmpd(0x100f70a5, 0x603);              /* jmp 0x100f70a5 */
l_0x100f6aa2:
    II(0x100f6aa2, 0x5)   mov(edx, 0x512);                      /* mov edx, 0x512 */
    II(0x100f6aa7, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6aac, 0x5)   calld(0x1013dc59, 0x471a8);           /* call 0x1013dc59 */
    II(0x100f6ab1, 0x7)   xor_(memb_a32(ds, 0x101c388e), 0x1);  /* xor byte [0x101c388e], 0x1 */
    II(0x100f6ab8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6aba, 0x5)   mov(al, memb_a32(ds, 0x101c388e));    /* mov al, [0x101c388e] */
    II(0x100f6abf, 0x5)   calld(0x100fa7e8, 0x3d24);            /* call 0x100fa7e8 */
    II(0x100f6ac4, 0x5)   jmpd(0x100f70a5, 0x5dc);              /* jmp 0x100f70a5 */
l_0x100f6ac9:
    II(0x100f6ac9, 0x5)   mov(edx, 0x50b);                      /* mov edx, 0x50b */
    II(0x100f6ace, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6ad3, 0x5)   calld(0x1013dc59, 0x47181);           /* call 0x1013dc59 */
    II(0x100f6ad8, 0x7)   xor_(memb_a32(ds, 0x101c37cc), 0x1);  /* xor byte [0x101c37cc], 0x1 */
    II(0x100f6adf, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6ae1, 0x5)   mov(al, memb_a32(ds, 0x101c37cc));    /* mov al, [0x101c37cc] */
    II(0x100f6ae6, 0x5)   calld(0x100f47e4, -0x2307);           /* call 0x100f47e4 */
    II(0x100f6aeb, 0x5)   jmpd(0x100f70a5, 0x5b5);              /* jmp 0x100f70a5 */
l_0x100f6af0:
    II(0x100f6af0, 0x5)   mov(edx, 0x50c);                      /* mov edx, 0x50c */
    II(0x100f6af5, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6afa, 0x5)   calld(0x1013dc59, 0x4715a);           /* call 0x1013dc59 */
    II(0x100f6aff, 0x7)   xor_(memb_a32(ds, 0x101c37cd), 0x1);  /* xor byte [0x101c37cd], 0x1 */
    II(0x100f6b06, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6b08, 0x5)   mov(al, memb_a32(ds, 0x101c37cd));    /* mov al, [0x101c37cd] */
    II(0x100f6b0d, 0x5)   calld(0x100f487e, -0x2294);           /* call 0x100f487e */
    II(0x100f6b12, 0x5)   jmpd(0x100f70a5, 0x58e);              /* jmp 0x100f70a5 */
l_0x100f6b17:
    II(0x100f6b17, 0x5)   mov(edx, 0x50d);                      /* mov edx, 0x50d */
    II(0x100f6b1c, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6b21, 0x5)   calld(0x1013dc59, 0x47133);           /* call 0x1013dc59 */
    II(0x100f6b26, 0x7)   xor_(memb_a32(ds, 0x101c37ce), 0x1);  /* xor byte [0x101c37ce], 0x1 */
    II(0x100f6b2d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6b2f, 0x5)   mov(al, memb_a32(ds, 0x101c37ce));    /* mov al, [0x101c37ce] */
    II(0x100f6b34, 0x5)   calld(0x100f48cb, -0x226e);           /* call 0x100f48cb */
    II(0x100f6b39, 0x5)   jmpd(0x100f70a5, 0x567);              /* jmp 0x100f70a5 */
l_0x100f6b3e:
    II(0x100f6b3e, 0x5)   mov(edx, 0x513);                      /* mov edx, 0x513 */
    II(0x100f6b43, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6b48, 0x5)   calld(0x1013dc59, 0x4710c);           /* call 0x1013dc59 */
    II(0x100f6b4d, 0x7)   cmp(memb_a32(ds, 0x101c37cb), 0);     /* cmp byte [0x101c37cb], 0x0 */
    II(0x100f6b54, 0x2)   jnzd(0x100f6b5c, 0x6);                /* jnz 0x100f6b5c */
    II(0x100f6b56, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0x1);   /* mov byte [ebp-0x1c], 0x1 */
    II(0x100f6b5a, 0x2)   jmpd(0x100f6b60, 0x4);                /* jmp 0x100f6b60 */
l_0x100f6b5c:
    II(0x100f6b5c, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0);     /* mov byte [ebp-0x1c], 0x0 */
l_0x100f6b60:
    II(0x100f6b60, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6b62, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x100f6b65, 0x5)   calld(0x100f4918, -0x2252);           /* call 0x100f4918 */
    II(0x100f6b6a, 0x5)   jmpd(0x100f70a5, 0x536);              /* jmp 0x100f70a5 */
l_0x100f6b6f:
    II(0x100f6b6f, 0x5)   mov(edx, 0x50e);                      /* mov edx, 0x50e */
    II(0x100f6b74, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6b79, 0x5)   calld(0x1013dc59, 0x470db);           /* call 0x1013dc59 */
    II(0x100f6b7e, 0x7)   xor_(memb_a32(ds, 0x101c37cf), 0x1);  /* xor byte [0x101c37cf], 0x1 */
    II(0x100f6b85, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6b87, 0x5)   mov(al, memb_a32(ds, 0x101c37cf));    /* mov al, [0x101c37cf] */
    II(0x100f6b8c, 0x5)   calld(0x100f4965, -0x222c);           /* call 0x100f4965 */
    II(0x100f6b91, 0x5)   jmpd(0x100f70a5, 0x50f);              /* jmp 0x100f70a5 */
l_0x100f6b96:
    II(0x100f6b96, 0x5)   mov(edx, 0x50f);                      /* mov edx, 0x50f */
    II(0x100f6b9b, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6ba0, 0x5)   calld(0x1013dc59, 0x470b4);           /* call 0x1013dc59 */
    II(0x100f6ba5, 0x7)   xor_(memb_a32(ds, 0x101c3889), 0x1);  /* xor byte [0x101c3889], 0x1 */
    II(0x100f6bac, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6bae, 0x5)   mov(al, memb_a32(ds, 0x101c3889));    /* mov al, [0x101c3889] */
    II(0x100f6bb3, 0x5)   calld(0x100f4831, -0x2387);           /* call 0x100f4831 */
    II(0x100f6bb8, 0x5)   jmpd(0x100f70a5, 0x4e8);              /* jmp 0x100f70a5 */
l_0x100f6bbd:
    II(0x100f6bbd, 0x5)   mov(edx, 0x510);                      /* mov edx, 0x510 */
    II(0x100f6bc2, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6bc7, 0x5)   calld(0x1013dc59, 0x4708d);           /* call 0x1013dc59 */
    II(0x100f6bcc, 0x7)   xor_(memb_a32(ds, 0x101c388a), 0x1);  /* xor byte [0x101c388a], 0x1 */
    II(0x100f6bd3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6bd5, 0x5)   mov(al, memb_a32(ds, 0x101c388a));    /* mov al, [0x101c388a] */
    II(0x100f6bda, 0x5)   calld(0x100f4ba0, -0x203f);           /* call 0x100f4ba0 */
    II(0x100f6bdf, 0x5)   jmpd(0x100f70a5, 0x4c1);              /* jmp 0x100f70a5 */
l_0x100f6be4:
    II(0x100f6be4, 0x5)   mov(edx, 0x4dd);                      /* mov edx, 0x4dd */
    II(0x100f6be9, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6bee, 0x5)   calld(0x1013dc59, 0x47066);           /* call 0x1013dc59 */
    II(0x100f6bf3, 0x7)   xor_(memb_a32(ds, 0x101c388c), 0x1);  /* xor byte [0x101c388c], 0x1 */
    II(0x100f6bfa, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6bfc, 0x5)   mov(al, memb_a32(ds, 0x101c388c));    /* mov al, [0x101c388c] */
    II(0x100f6c01, 0x5)   calld(0x100f3711, -0x34f5);           /* call 0x100f3711 */
    II(0x100f6c06, 0x5)   jmpd(0x100f70a5, 0x49a);              /* jmp 0x100f70a5 */
l_0x100f6c0b:
    II(0x100f6c0b, 0x5)   mov(edx, 0x511);                      /* mov edx, 0x511 */
    II(0x100f6c10, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6c15, 0x5)   calld(0x1013dc59, 0x4703f);           /* call 0x1013dc59 */
    II(0x100f6c1a, 0x7)   xor_(memb_a32(ds, 0x101c388d), 0x1);  /* xor byte [0x101c388d], 0x1 */
    II(0x100f6c21, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6c23, 0x5)   mov(al, memb_a32(ds, 0x101c388d));    /* mov al, [0x101c388d] */
    II(0x100f6c28, 0x5)   calld(0x100f4f55, -0x1cd8);           /* call 0x100f4f55 */
    II(0x100f6c2d, 0x5)   jmpd(0x100f70a5, 0x473);              /* jmp 0x100f70a5 */
l_0x100f6c32:
    II(0x100f6c32, 0x5)   mov(edx, 0x50e);                      /* mov edx, 0x50e */
    II(0x100f6c37, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6c3c, 0x5)   calld(0x1013dc59, 0x47018);           /* call 0x1013dc59 */
    II(0x100f6c41, 0x7)   xor_(memb_a32(ds, 0x101c37d0), 0x1);  /* xor byte [0x101c37d0], 0x1 */
    II(0x100f6c48, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6c4a, 0x5)   mov(al, memb_a32(ds, 0x101c37d0));    /* mov al, [0x101c37d0] */
    II(0x100f6c4f, 0x5)   calld(0x100f49b2, -0x22a2);           /* call 0x100f49b2 */
    II(0x100f6c54, 0x5)   jmpd(0x100f70a5, 0x44c);              /* jmp 0x100f70a5 */
l_0x100f6c59:
    II(0x100f6c59, 0x5)   mov(edx, 0x50e);                      /* mov edx, 0x50e */
    II(0x100f6c5e, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6c63, 0x5)   calld(0x1013dc59, 0x46ff1);           /* call 0x1013dc59 */
    II(0x100f6c68, 0x7)   xor_(memb_a32(ds, 0x101c37d1), 0x1);  /* xor byte [0x101c37d1], 0x1 */
    II(0x100f6c6f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6c71, 0x5)   mov(al, memb_a32(ds, 0x101c37d1));    /* mov al, [0x101c37d1] */
    II(0x100f6c76, 0x5)   calld(0x100f49ff, -0x227c);           /* call 0x100f49ff */
    II(0x100f6c7b, 0x5)   jmpd(0x100f70a5, 0x425);              /* jmp 0x100f70a5 */
l_0x100f6c80:
    II(0x100f6c80, 0x5)   calld(0x10116ba6, 0x1ff21);           /* call 0x10116ba6 */
    II(0x100f6c85, 0x5)   jmpd(0x100f70a5, 0x41b);              /* jmp 0x100f70a5 */
l_0x100f6c8a:
    II(0x100f6c8a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f6c8c, 0x5)   mov(eax, 0x101a266b);                 /* mov eax, 0x101a266b */ /* "OK to exit game?" */
    II(0x100f6c91, 0x5)   calld(0x10117036, 0x203a0);           /* call 0x10117036 */
    II(0x100f6c96, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f6c98, 0x6)   jzd(0x100f70a5, 0x407);               /* jz dword 0x100f70a5 */
    II(0x100f6c9e, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
    II(0x100f6ca5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f6ca7, 0x5)   calld(0x100f448c, -0x2820);           /* call 0x100f448c */
    II(0x100f6cac, 0x5)   jmpd(0x100f70a5, 0x3f4);              /* jmp 0x100f70a5 */
l_0x100f6cb1:
    II(0x100f6cb1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f6cb5, 0x5)   calld(0x100f5413, -0x18a7);           /* call 0x100f5413 */
    II(0x100f6cba, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f6cbc, 0x2)   jnzd(0x100f6cc9, 0xb);                /* jnz 0x100f6cc9 */
    II(0x100f6cbe, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f6cc2, 0x5)   cmp(eax, 0x7000);                     /* cmp eax, 0x7000 */
    II(0x100f6cc7, 0x2)   jged(0x100f6ccb, 0x2);                /* jge 0x100f6ccb */
l_0x100f6cc9:
    II(0x100f6cc9, 0x2)   jmpd(0x100f6cd4, 0x9);                /* jmp 0x100f6cd4 */
l_0x100f6ccb:
    II(0x100f6ccb, 0x7)   cmp(memb_a32(ds, 0x101c3890), 0);     /* cmp byte [0x101c3890], 0x0 */
    II(0x100f6cd2, 0x2)   jzd(0x100f6cd6, 0x2);                 /* jz 0x100f6cd6 */
l_0x100f6cd4:
    II(0x100f6cd4, 0x2)   jmpd(0x100f6d2a, 0x54);               /* jmp 0x100f6d2a */
l_0x100f6cd6:
    II(0x100f6cd6, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x7);   /* cmp byte [0x101c391e], 0x7 */
    II(0x100f6cdd, 0x2)   jnzd(0x100f6d14, 0x35);               /* jnz 0x100f6d14 */
    II(0x100f6cdf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f6ce3, 0x3)   cmp(eax, 0x3f);                       /* cmp eax, 0x3f */
    II(0x100f6ce6, 0x2)   jnzd(0x100f6cf1, 0x9);                /* jnz 0x100f6cf1 */
    II(0x100f6ce8, 0x7)   cmp(memd_a32(ds, 0x101c39a0), 0);     /* cmp dword [0x101c39a0], 0x0 */
    II(0x100f6cef, 0x2)   jnzd(0x100f6cf3, 0x2);                /* jnz 0x100f6cf3 */
l_0x100f6cf1:
    II(0x100f6cf1, 0x2)   jmpd(0x100f6cff, 0xc);                /* jmp 0x100f6cff */
l_0x100f6cf3:
    II(0x100f6cf3, 0x5)   mov(eax, memd_a32(ds, 0x101c39a0));   /* mov eax, [0x101c39a0] */
    II(0x100f6cf8, 0x5)   calld(0x100cfbbe, -0x2713f);          /* call 0x100cfbbe */
    II(0x100f6cfd, 0x2)   jmpd(0x100f6d12, 0x13);               /* jmp 0x100f6d12 */
l_0x100f6cff:
    II(0x100f6cff, 0x7)   cmp(memd_a32(ds, 0x101c39a4), 0);     /* cmp dword [0x101c39a4], 0x0 */
    II(0x100f6d06, 0x2)   jzd(0x100f6d12, 0xa);                 /* jz 0x100f6d12 */
    II(0x100f6d08, 0x5)   mov(eax, memd_a32(ds, 0x101c39a4));   /* mov eax, [0x101c39a4] */
    II(0x100f6d0d, 0x5)   calld(0x100cfbbe, -0x27154);          /* call 0x100cfbbe */
l_0x100f6d12:
    II(0x100f6d12, 0x2)   jmpd(0x100f6d23, 0xf);                /* jmp 0x100f6d23 */
l_0x100f6d14:
    II(0x100f6d14, 0x5)   mov(edx, 0x4dd);                      /* mov edx, 0x4dd */
    II(0x100f6d19, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f6d1e, 0x5)   calld(0x1013dc59, 0x46f36);           /* call 0x1013dc59 */
l_0x100f6d23:
    II(0x100f6d23, 0x7)   mov(memb_a32(ds, 0x101c3890), 0x1);   /* mov byte [0x101c3890], 0x1 */
l_0x100f6d2a:
    II(0x100f6d2a, 0x5)   jmpd(0x100f70a5, 0x376);              /* jmp 0x100f70a5 */
l_0x100f6d2f:
    II(0x100f6d2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100f6d32, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100f6d35, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x16c); /* cmp word [ebp-0x20], 0x16c */
    II(0x100f6d3b, 0x6)   jbd(0x100f6ed5, 0x194);               /* jb dword 0x100f6ed5 */
    II(0x100f6d41, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x16f); /* cmp word [ebp-0x20], 0x16f */
    II(0x100f6d47, 0x6)   jbed(0x100f664c, -0x701);             /* jbe dword 0x100f664c */
    II(0x100f6d4d, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3fc); /* cmp word [ebp-0x20], 0x3fc */
    II(0x100f6d53, 0x6)   jbd(0x100f6e25, 0xcc);                /* jb dword 0x100f6e25 */
    II(0x100f6d59, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3fc); /* cmp word [ebp-0x20], 0x3fc */
    II(0x100f6d5f, 0x6)   jbed(0x100f6a84, -0x2e1);             /* jbe dword 0x100f6a84 */
    II(0x100f6d65, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x406); /* cmp word [ebp-0x20], 0x406 */
    II(0x100f6d6b, 0x2)   jbd(0x100f6dd9, 0x6c);                /* jb 0x100f6dd9 */
    II(0x100f6d6d, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x406); /* cmp word [ebp-0x20], 0x406 */
    II(0x100f6d73, 0x6)   jbed(0x100f6b6f, -0x20a);             /* jbe dword 0x100f6b6f */
    II(0x100f6d79, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x409); /* cmp word [ebp-0x20], 0x409 */
    II(0x100f6d7f, 0x2)   jbd(0x100f6dc3, 0x42);                /* jb 0x100f6dc3 */
    II(0x100f6d81, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x409); /* cmp word [ebp-0x20], 0x409 */
    II(0x100f6d87, 0x6)   jbed(0x100f6c0b, -0x182);             /* jbe dword 0x100f6c0b */
    II(0x100f6d8d, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x40c); /* cmp word [ebp-0x20], 0x40c */
    II(0x100f6d93, 0x2)   jbd(0x100f6db2, 0x1d);                /* jb 0x100f6db2 */
    II(0x100f6d95, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x40c); /* cmp word [ebp-0x20], 0x40c */
    II(0x100f6d9b, 0x6)   jbed(0x100f6c32, -0x16f);             /* jbe dword 0x100f6c32 */
    II(0x100f6da1, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x40d); /* cmp word [ebp-0x20], 0x40d */
    II(0x100f6da7, 0x6)   jzd(0x100f6c59, -0x154);              /* jz dword 0x100f6c59 */
    II(0x100f6dad, 0x5)   jmpd(0x100f6cb1, -0x101);             /* jmp 0x100f6cb1 */
l_0x100f6db2:
    II(0x100f6db2, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x40a); /* cmp word [ebp-0x20], 0x40a */
    II(0x100f6db8, 0x6)   jzd(0x100f6b3e, -0x280);              /* jz dword 0x100f6b3e */
    II(0x100f6dbe, 0x5)   jmpd(0x100f6cb1, -0x112);             /* jmp 0x100f6cb1 */
l_0x100f6dc3:
    II(0x100f6dc3, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x407); /* cmp word [ebp-0x20], 0x407 */
    II(0x100f6dc9, 0x6)   jbed(0x100f6b96, -0x239);             /* jbe dword 0x100f6b96 */
    II(0x100f6dcf, 0x5)   jmpd(0x100f6bbd, -0x217);             /* jmp 0x100f6bbd */
//  II(0x100f6dd4, 0x5)   /* Недостижимый код. */
l_0x100f6dd9:
    II(0x100f6dd9, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x403); /* cmp word [ebp-0x20], 0x403 */
    II(0x100f6ddf, 0x2)   jbd(0x100f6e03, 0x22);                /* jb 0x100f6e03 */
    II(0x100f6de1, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x403); /* cmp word [ebp-0x20], 0x403 */
    II(0x100f6de7, 0x6)   jbed(0x100f6ac9, -0x324);             /* jbe dword 0x100f6ac9 */
    II(0x100f6ded, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x404); /* cmp word [ebp-0x20], 0x404 */
    II(0x100f6df3, 0x6)   jbed(0x100f6af0, -0x309);             /* jbe dword 0x100f6af0 */
    II(0x100f6df9, 0x5)   jmpd(0x100f6b17, -0x2e7);             /* jmp 0x100f6b17 */
//  II(0x100f6dfe, 0x5)   /* Недостижимый код. */
l_0x100f6e03:
    II(0x100f6e03, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3fd); /* cmp word [ebp-0x20], 0x3fd */
    II(0x100f6e09, 0x6)   jbed(0x100f6a93, -0x37c);             /* jbe dword 0x100f6a93 */
    II(0x100f6e0f, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x402); /* cmp word [ebp-0x20], 0x402 */
    II(0x100f6e15, 0x6)   jzd(0x100f6aa2, -0x379);              /* jz dword 0x100f6aa2 */
    II(0x100f6e1b, 0x5)   jmpd(0x100f6cb1, -0x16f);             /* jmp 0x100f6cb1 */
//  II(0x100f6e20, 0x5)   /* Недостижимый код. */
l_0x100f6e25:
    II(0x100f6e25, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3f6); /* cmp word [ebp-0x20], 0x3f6 */
    II(0x100f6e2b, 0x2)   jbd(0x100f6e79, 0x4c);                /* jb 0x100f6e79 */
    II(0x100f6e2d, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3f6); /* cmp word [ebp-0x20], 0x3f6 */
    II(0x100f6e33, 0x6)   jbed(0x100f694e, -0x4eb);             /* jbe dword 0x100f694e */
    II(0x100f6e39, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3f9); /* cmp word [ebp-0x20], 0x3f9 */
    II(0x100f6e3f, 0x2)   jbd(0x100f6e63, 0x22);                /* jb 0x100f6e63 */
    II(0x100f6e41, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3f9); /* cmp word [ebp-0x20], 0x3f9 */
    II(0x100f6e47, 0x6)   jbed(0x100f6993, -0x4ba);             /* jbe dword 0x100f6993 */
    II(0x100f6e4d, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3fa); /* cmp word [ebp-0x20], 0x3fa */
    II(0x100f6e53, 0x6)   jbed(0x100f6a64, -0x3f5);             /* jbe dword 0x100f6a64 */
    II(0x100f6e59, 0x5)   jmpd(0x100f696c, -0x4f2);             /* jmp 0x100f696c */
//  II(0x100f6e5e, 0x5)   /* Недостижимый код. */
l_0x100f6e63:
    II(0x100f6e63, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3f7); /* cmp word [ebp-0x20], 0x3f7 */
    II(0x100f6e69, 0x6)   jbed(0x100f6be4, -0x28b);             /* jbe dword 0x100f6be4 */
    II(0x100f6e6f, 0x5)   jmpd(0x100f6976, -0x4fe);             /* jmp 0x100f6976 */
//  II(0x100f6e74, 0x5)   /* Недостижимый код. */
l_0x100f6e79:
    II(0x100f6e79, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3ed); /* cmp word [ebp-0x20], 0x3ed */
    II(0x100f6e7f, 0x2)   jbd(0x100f6eb7, 0x36);                /* jb 0x100f6eb7 */
    II(0x100f6e81, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3ed); /* cmp word [ebp-0x20], 0x3ed */
    II(0x100f6e87, 0x6)   jbed(0x100f68c2, -0x5cb);             /* jbe dword 0x100f68c2 */
    II(0x100f6e8d, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3ef); /* cmp word [ebp-0x20], 0x3ef */
    II(0x100f6e93, 0x2)   jbd(0x100f6eb2, 0x1d);                /* jb 0x100f6eb2 */
    II(0x100f6e95, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3ef); /* cmp word [ebp-0x20], 0x3ef */
    II(0x100f6e9b, 0x6)   jbed(0x100f6958, -0x549);             /* jbe dword 0x100f6958 */
    II(0x100f6ea1, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3f0); /* cmp word [ebp-0x20], 0x3f0 */
    II(0x100f6ea7, 0x6)   jzd(0x100f6962, -0x54b);              /* jz dword 0x100f6962 */
    II(0x100f6ead, 0x5)   jmpd(0x100f6cb1, -0x201);             /* jmp 0x100f6cb1 */
l_0x100f6eb2:
    II(0x100f6eb2, 0x5)   jmpd(0x100f6cb1, -0x206);             /* jmp 0x100f6cb1 */
l_0x100f6eb7:
    II(0x100f6eb7, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3eb); /* cmp word [ebp-0x20], 0x3eb */
    II(0x100f6ebd, 0x2)   jbd(0x100f6ed0, 0x11);                /* jb 0x100f6ed0 */
    II(0x100f6ebf, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x3eb); /* cmp word [ebp-0x20], 0x3eb */
    II(0x100f6ec5, 0x6)   jbed(0x100f67fb, -0x6d0);             /* jbe dword 0x100f67fb */
    II(0x100f6ecb, 0x5)   jmpd(0x100f6930, -0x5a0);             /* jmp 0x100f6930 */
l_0x100f6ed0:
    II(0x100f6ed0, 0x5)   jmpd(0x100f6cb1, -0x224);             /* jmp 0x100f6cb1 */
l_0x100f6ed5:
    II(0x100f6ed5, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x67);  /* cmp word [ebp-0x20], 0x67 */
    II(0x100f6eda, 0x6)   jbd(0x100f6fd3, 0xf3);                /* jb dword 0x100f6fd3 */
    II(0x100f6ee0, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x67);  /* cmp word [ebp-0x20], 0x67 */
    II(0x100f6ee5, 0x6)   jbed(0x100f6c0b, -0x2e0);             /* jbe dword 0x100f6c0b */
    II(0x100f6eeb, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x13b); /* cmp word [ebp-0x20], 0x13b */
    II(0x100f6ef1, 0x6)   jbd(0x100f6f6b, 0x74);                /* jb dword 0x100f6f6b */
    II(0x100f6ef7, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x13b); /* cmp word [ebp-0x20], 0x13b */
    II(0x100f6efd, 0x6)   jbed(0x100f650f, -0x9f4);             /* jbe dword 0x100f650f */
    II(0x100f6f03, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x14b); /* cmp word [ebp-0x20], 0x14b */
    II(0x100f6f09, 0x2)   jbd(0x100f6f41, 0x36);                /* jb 0x100f6f41 */
    II(0x100f6f0b, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x14b); /* cmp word [ebp-0x20], 0x14b */
    II(0x100f6f11, 0x6)   jbed(0x100f66ae, -0x869);             /* jbe dword 0x100f66ae */
    II(0x100f6f17, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x14d); /* cmp word [ebp-0x20], 0x14d */
    II(0x100f6f1d, 0x2)   jbd(0x100f6f3c, 0x1d);                /* jb 0x100f6f3c */
    II(0x100f6f1f, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x14d); /* cmp word [ebp-0x20], 0x14d */
    II(0x100f6f25, 0x6)   jbed(0x100f66a2, -0x889);             /* jbe dword 0x100f66a2 */
    II(0x100f6f2b, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x150); /* cmp word [ebp-0x20], 0x150 */
    II(0x100f6f31, 0x6)   jzd(0x100f66ba, -0x87d);              /* jz dword 0x100f66ba */
    II(0x100f6f37, 0x5)   jmpd(0x100f6cb1, -0x28b);             /* jmp 0x100f6cb1 */
l_0x100f6f3c:
    II(0x100f6f3c, 0x5)   jmpd(0x100f6cb1, -0x290);             /* jmp 0x100f6cb1 */
l_0x100f6f41:
    II(0x100f6f41, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x13f); /* cmp word [ebp-0x20], 0x13f */
    II(0x100f6f47, 0x2)   jbd(0x100f6f66, 0x1d);                /* jb 0x100f6f66 */
    II(0x100f6f49, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x142); /* cmp word [ebp-0x20], 0x142 */
    II(0x100f6f4f, 0x6)   jbed(0x100f65e1, -0x974);             /* jbe dword 0x100f65e1 */
    II(0x100f6f55, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x148); /* cmp word [ebp-0x20], 0x148 */
    II(0x100f6f5b, 0x6)   jzd(0x100f66c6, -0x89b);              /* jz dword 0x100f66c6 */
    II(0x100f6f61, 0x5)   jmpd(0x100f6cb1, -0x2b5);             /* jmp 0x100f6cb1 */
l_0x100f6f66:
    II(0x100f6f66, 0x5)   jmpd(0x100f6cb1, -0x2ba);             /* jmp 0x100f6cb1 */
l_0x100f6f6b:
    II(0x100f6f6b, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x121); /* cmp word [ebp-0x20], 0x121 */
    II(0x100f6f71, 0x2)   jbd(0x100f6fa9, 0x36);                /* jb 0x100f6fa9 */
    II(0x100f6f73, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x121); /* cmp word [ebp-0x20], 0x121 */
    II(0x100f6f79, 0x6)   jbed(0x100f6930, -0x64f);             /* jbe dword 0x100f6930 */
    II(0x100f6f7f, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x126); /* cmp word [ebp-0x20], 0x126 */
    II(0x100f6f85, 0x2)   jbd(0x100f6fa4, 0x1d);                /* jb 0x100f6fa4 */
    II(0x100f6f87, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x126); /* cmp word [ebp-0x20], 0x126 */
    II(0x100f6f8d, 0x6)   jbed(0x100f68cc, -0x6c7);             /* jbe dword 0x100f68cc */
    II(0x100f6f93, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x12d); /* cmp word [ebp-0x20], 0x12d */
    II(0x100f6f99, 0x6)   jzd(0x100f6c8a, -0x315);              /* jz dword 0x100f6c8a */
    II(0x100f6f9f, 0x5)   jmpd(0x100f6cb1, -0x2f3);             /* jmp 0x100f6cb1 */
l_0x100f6fa4:
    II(0x100f6fa4, 0x5)   jmpd(0x100f6cb1, -0x2f8);             /* jmp 0x100f6cb1 */
l_0x100f6fa9:
    II(0x100f6fa9, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x119); /* cmp word [ebp-0x20], 0x119 */
    II(0x100f6faf, 0x2)   jbd(0x100f6fce, 0x1d);                /* jb 0x100f6fce */
    II(0x100f6fb1, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x119); /* cmp word [ebp-0x20], 0x119 */
    II(0x100f6fb7, 0x6)   jbed(0x100f6c80, -0x33d);             /* jbe dword 0x100f6c80 */
    II(0x100f6fbd, 0x6)   cmp(memw_a32(ss, ebp - 0x20), 0x11f); /* cmp word [ebp-0x20], 0x11f */
    II(0x100f6fc3, 0x6)   jzd(0x100f6914, -0x6b5);              /* jz dword 0x100f6914 */
    II(0x100f6fc9, 0x5)   jmpd(0x100f6cb1, -0x31d);             /* jmp 0x100f6cb1 */
l_0x100f6fce:
    II(0x100f6fce, 0x5)   jmpd(0x100f6cb1, -0x322);             /* jmp 0x100f6cb1 */
l_0x100f6fd3:
    II(0x100f6fd3, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x3d);  /* cmp word [ebp-0x20], 0x3d */
    II(0x100f6fd8, 0x2)   jbd(0x100f7045, 0x6b);                /* jb 0x100f7045 */
    II(0x100f6fda, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x3d);  /* cmp word [ebp-0x20], 0x3d */
    II(0x100f6fdf, 0x6)   jbed(0x100f66d2, -0x913);             /* jbe dword 0x100f66d2 */
    II(0x100f6fe5, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x47);  /* cmp word [ebp-0x20], 0x47 */
    II(0x100f6fea, 0x2)   jbd(0x100f701e, 0x32);                /* jb 0x100f701e */
    II(0x100f6fec, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x47);  /* cmp word [ebp-0x20], 0x47 */
    II(0x100f6ff1, 0x6)   jbed(0x100f6c0b, -0x3ec);             /* jbe dword 0x100f6c0b */
    II(0x100f6ff7, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x5b);  /* cmp word [ebp-0x20], 0x5b */
    II(0x100f6ffc, 0x2)   jbd(0x100f7019, 0x1b);                /* jb 0x100f7019 */
    II(0x100f6ffe, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x5b);  /* cmp word [ebp-0x20], 0x5b */
    II(0x100f7003, 0x6)   jbed(0x100f64fb, -0xb0e);             /* jbe dword 0x100f64fb */
    II(0x100f7009, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x66);  /* cmp word [ebp-0x20], 0x66 */
    II(0x100f700e, 0x6)   jzd(0x100f694e, -0x6c6);              /* jz dword 0x100f694e */
    II(0x100f7014, 0x5)   jmpd(0x100f6cb1, -0x368);             /* jmp 0x100f6cb1 */
l_0x100f7019:
    II(0x100f7019, 0x5)   jmpd(0x100f6cb1, -0x36d);             /* jmp 0x100f6cb1 */
l_0x100f701e:
    II(0x100f701e, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x3f);  /* cmp word [ebp-0x20], 0x3f */
    II(0x100f7023, 0x2)   jbd(0x100f7040, 0x1b);                /* jb 0x100f7040 */
    II(0x100f7025, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x3f);  /* cmp word [ebp-0x20], 0x3f */
    II(0x100f702a, 0x6)   jbed(0x100f696c, -0x6c4);             /* jbe dword 0x100f696c */
    II(0x100f7030, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x46);  /* cmp word [ebp-0x20], 0x46 */
    II(0x100f7035, 0x6)   jzd(0x100f694e, -0x6ed);              /* jz dword 0x100f694e */
    II(0x100f703b, 0x5)   jmpd(0x100f6cb1, -0x38f);             /* jmp 0x100f6cb1 */
l_0x100f7040:
    II(0x100f7040, 0x5)   jmpd(0x100f6cb1, -0x394);             /* jmp 0x100f6cb1 */
l_0x100f7045:
    II(0x100f7045, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x20);  /* cmp word [ebp-0x20], 0x20 */
    II(0x100f704a, 0x2)   jbd(0x100f707e, 0x32);                /* jb 0x100f707e */
    II(0x100f704c, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x20);  /* cmp word [ebp-0x20], 0x20 */
    II(0x100f7051, 0x6)   jbed(0x100f6839, -0x81e);             /* jbe dword 0x100f6839 */
    II(0x100f7057, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x2b);  /* cmp word [ebp-0x20], 0x2b */
    II(0x100f705c, 0x2)   jbd(0x100f7079, 0x1b);                /* jb 0x100f7079 */
    II(0x100f705e, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x2b);  /* cmp word [ebp-0x20], 0x2b */
    II(0x100f7063, 0x6)   jbed(0x100f66d2, -0x997);             /* jbe dword 0x100f66d2 */
    II(0x100f7069, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x2d);  /* cmp word [ebp-0x20], 0x2d */
    II(0x100f706e, 0x6)   jzd(0x100f66f9, -0x97b);              /* jz dword 0x100f66f9 */
    II(0x100f7074, 0x5)   jmpd(0x100f6cb1, -0x3c8);             /* jmp 0x100f6cb1 */
l_0x100f7079:
    II(0x100f7079, 0x5)   jmpd(0x100f6cb1, -0x3cd);             /* jmp 0x100f6cb1 */
l_0x100f707e:
    II(0x100f707e, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0xd);   /* cmp word [ebp-0x20], 0xd */
    II(0x100f7083, 0x2)   jbd(0x100f70a0, 0x1b);                /* jb 0x100f70a0 */
    II(0x100f7085, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0xd);   /* cmp word [ebp-0x20], 0xd */
    II(0x100f708a, 0x6)   jbed(0x100f6720, -0x970);             /* jbe dword 0x100f6720 */
    II(0x100f7090, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x1b);  /* cmp word [ebp-0x20], 0x1b */
    II(0x100f7095, 0x6)   jzd(0x100f684e, -0x84d);              /* jz dword 0x100f684e */
    II(0x100f709b, 0x5)   jmpd(0x100f6cb1, -0x3ef);             /* jmp 0x100f6cb1 */
l_0x100f70a0:
    II(0x100f70a0, 0x5)   jmpd(0x100f6cb1, -0x3f4);             /* jmp 0x100f6cb1 */
l_0x100f70a5:
    II(0x100f70a5, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f70a7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f70a8, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f70a9, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f70aa, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f70ab, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f70ac, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f70ad, 0x1)   retd();                               /* ret */
FUNC_END

