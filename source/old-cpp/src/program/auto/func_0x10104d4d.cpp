FUNC_BEGIN(0x10104d4d, 0xfd11671707da5e8, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0xfb, 0xf, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf7, 0x45, 0xfc, 0x4, 0, 0, 0, 0x74, 0x17, 0xba, 0x90, 0x64, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x38, 0x12, 0x6, 0, 0xe8, 0x53, 0x12, 0x6, 0, 0xe9, 0x80, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x13, 0xa4, 0x64, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x33, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x33, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0xe8, 0x82, 0x97, 0xfc, 0xff, 0xe8, 0xa9, 0x11, 0x6, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x37, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x37, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe4, 0xe8, 0x4f, 0x97, 0xfc, 0xff, 0xe8, 0x76, 0x11, 0x6, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x3b, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x3b, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xdc, 0xe8, 0x1c, 0x97, 0xfc, 0xff, 0xe8, 0x43, 0x11, 0x6, 0, 0x89, 0x45, 0xe0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x3f, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x3f, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd4, 0xe8, 0xe9, 0x96, 0xfc, 0xff, 0xe8, 0x10, 0x11, 0x6, 0, 0x89, 0x45, 0xd8, 0xeb, 0x7, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xb8, 0x62, 0x4, 0, 0, 0, 0x74, 0x2d, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x62, 0x4, 0, 0, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xcc, 0xe8, 0xab, 0x2e, 0xfd, 0xff, 0xe8, 0xd7, 0x10, 0x6, 0, 0x89, 0x45, 0xd0, 0xeb, 0x7, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xb8, 0x6c, 0x4, 0, 0, 0, 0x74, 0x18, 0xba, 0x10, 0x5c, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x6c, 0x4, 0, 0, 0xe8, 0, 0x11, 0x6, 0, 0xe8, 0x1b, 0x11, 0x6, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x45, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x48, 0x45, 0x66, 0x85, 0xd2, 0x74, 0x19, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x43, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x47, 0xe8, 0x7d, 0x10, 0x6, 0, 0xeb, 0xd4, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xa3, 0x1a, 0xfd, 0xff, 0x89, 0x45, 0xf8, 0xf7, 0x45, 0xfc, 0x2, 0, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x5a, 0x10, 0x6, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10104d4d, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x10104d52, 0x5)   calld(sys_check_available_stack_size, 0x60ffb); /* call 0x10165d52 */
    II(0x10104d57, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10104d58, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10104d59, 0x1)   pushd(esi);                           /* push esi */
    II(0x10104d5a, 0x1)   pushd(edi);                           /* push edi */
    II(0x10104d5b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10104d5c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10104d5e, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x10104d64, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10104d67, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10104d6a, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x4);   /* test dword [ebp-0x4], 0x4 */
    II(0x10104d71, 0x2)   jzd(0x10104d8a, 0x17);                /* jz 0x10104d8a */
    II(0x10104d73, 0x5)   mov(edx, 0x101b6490);                 /* mov edx, 0x101b6490 */
    II(0x10104d78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104d7b, 0x5)   calld(sys_call_dtor_arr, 0x61238);    /* call 0x10165fb8 */
    II(0x10104d80, 0x5)   calld(sys_delete_arr, 0x61253);       /* call 0x10165fd8 */
    II(0x10104d85, 0x5)   jmpd(0x10104f0a, 0x180);              /* jmp 0x10104f0a */
l_0x10104d8a:
    II(0x10104d8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104d8d, 0x7)   mov(memd_a32(ds, eax + 0x13), 0x101b64a4); /* mov dword [eax+0x13], 0x101b64a4 */
    II(0x10104d94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104d97, 0x4)   cmp(memd_a32(ds, eax + 0x33), 0);     /* cmp dword [eax+0x33], 0x0 */
    II(0x10104d9b, 0x2)   jzd(0x10104dc7, 0x2a);                /* jz 0x10104dc7 */
    II(0x10104d9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104da0, 0x3)   mov(eax, memd_a32(ds, eax + 0x33));   /* mov eax, [eax+0x33] */
    II(0x10104da3, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10104da6, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x10104daa, 0x2)   jzd(0x10104dc0, 0x14);                /* jz 0x10104dc0 */
    II(0x10104dac, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10104dae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10104db1, 0x5)   calld(my_dtor_d2, -0x3687e);          /* call 0x100ce538 */
    II(0x10104db6, 0x5)   calld(sys_delete, 0x611a9);           /* call 0x10165f64 */
    II(0x10104dbb, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10104dbe, 0x2)   jmpd(0x10104dc7, 0x7);                /* jmp 0x10104dc7 */
l_0x10104dc0:
    II(0x10104dc0, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x10104dc7:
    II(0x10104dc7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104dca, 0x4)   cmp(memd_a32(ds, eax + 0x37), 0);     /* cmp dword [eax+0x37], 0x0 */
    II(0x10104dce, 0x2)   jzd(0x10104dfa, 0x2a);                /* jz 0x10104dfa */
    II(0x10104dd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104dd3, 0x3)   mov(eax, memd_a32(ds, eax + 0x37));   /* mov eax, [eax+0x37] */
    II(0x10104dd6, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10104dd9, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x10104ddd, 0x2)   jzd(0x10104df3, 0x14);                /* jz 0x10104df3 */
    II(0x10104ddf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10104de1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10104de4, 0x5)   calld(my_dtor_d2, -0x368b1);          /* call 0x100ce538 */
    II(0x10104de9, 0x5)   calld(sys_delete, 0x61176);           /* call 0x10165f64 */
    II(0x10104dee, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10104df1, 0x2)   jmpd(0x10104dfa, 0x7);                /* jmp 0x10104dfa */
l_0x10104df3:
    II(0x10104df3, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x10104dfa:
    II(0x10104dfa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104dfd, 0x4)   cmp(memd_a32(ds, eax + 0x3b), 0);     /* cmp dword [eax+0x3b], 0x0 */
    II(0x10104e01, 0x2)   jzd(0x10104e2d, 0x2a);                /* jz 0x10104e2d */
    II(0x10104e03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104e06, 0x3)   mov(eax, memd_a32(ds, eax + 0x3b));   /* mov eax, [eax+0x3b] */
    II(0x10104e09, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10104e0c, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x10104e10, 0x2)   jzd(0x10104e26, 0x14);                /* jz 0x10104e26 */
    II(0x10104e12, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10104e14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10104e17, 0x5)   calld(my_dtor_d2, -0x368e4);          /* call 0x100ce538 */
    II(0x10104e1c, 0x5)   calld(sys_delete, 0x61143);           /* call 0x10165f64 */
    II(0x10104e21, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10104e24, 0x2)   jmpd(0x10104e2d, 0x7);                /* jmp 0x10104e2d */
l_0x10104e26:
    II(0x10104e26, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x10104e2d:
    II(0x10104e2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104e30, 0x4)   cmp(memd_a32(ds, eax + 0x3f), 0);     /* cmp dword [eax+0x3f], 0x0 */
    II(0x10104e34, 0x2)   jzd(0x10104e60, 0x2a);                /* jz 0x10104e60 */
    II(0x10104e36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104e39, 0x3)   mov(eax, memd_a32(ds, eax + 0x3f));   /* mov eax, [eax+0x3f] */
    II(0x10104e3c, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10104e3f, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x10104e43, 0x2)   jzd(0x10104e59, 0x14);                /* jz 0x10104e59 */
    II(0x10104e45, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10104e47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10104e4a, 0x5)   calld(my_dtor_d2, -0x36917);          /* call 0x100ce538 */
    II(0x10104e4f, 0x5)   calld(sys_delete, 0x61110);           /* call 0x10165f64 */
    II(0x10104e54, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10104e57, 0x2)   jmpd(0x10104e60, 0x7);                /* jmp 0x10104e60 */
l_0x10104e59:
    II(0x10104e59, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
l_0x10104e60:
    II(0x10104e60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104e63, 0x7)   cmp(memd_a32(ds, eax + 0x462), 0);    /* cmp dword [eax+0x462], 0x0 */
    II(0x10104e6a, 0x2)   jzd(0x10104e99, 0x2d);                /* jz 0x10104e99 */
    II(0x10104e6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104e6f, 0x6)   mov(eax, memd_a32(ds, eax + 0x462));  /* mov eax, [eax+0x462] */
    II(0x10104e75, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10104e78, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x10104e7c, 0x2)   jzd(0x10104e92, 0x14);                /* jz 0x10104e92 */
    II(0x10104e7e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10104e80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10104e83, 0x5)   calld(my_dtor_d3, -0x2d155);          /* call 0x100d7d33 */
    II(0x10104e88, 0x5)   calld(sys_delete, 0x610d7);           /* call 0x10165f64 */
    II(0x10104e8d, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10104e90, 0x2)   jmpd(0x10104e99, 0x7);                /* jmp 0x10104e99 */
l_0x10104e92:
    II(0x10104e92, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
l_0x10104e99:
    II(0x10104e99, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104e9c, 0x7)   cmp(memd_a32(ds, eax + 0x46c), 0);    /* cmp dword [eax+0x46c], 0x0 */
    II(0x10104ea3, 0x2)   jzd(0x10104ebd, 0x18);                /* jz 0x10104ebd */
    II(0x10104ea5, 0x5)   mov(edx, 0x101b5c10);                 /* mov edx, 0x101b5c10 */
    II(0x10104eaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104ead, 0x6)   mov(eax, memd_a32(ds, eax + 0x46c));  /* mov eax, [eax+0x46c] */
    II(0x10104eb3, 0x5)   calld(sys_call_dtor_arr, 0x61100);    /* call 0x10165fb8 */
    II(0x10104eb8, 0x5)   calld(sys_delete_arr, 0x6111b);       /* call 0x10165fd8 */
l_0x10104ebd:
    II(0x10104ebd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104ec0, 0x4)   mov(dx, memw_a32(ds, eax + 0x45));    /* mov dx, [eax+0x45] */
//    II(0x10104ec4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104ec7, 0x4)   dec(memw_a32(ds, eax + 0x45));        /* dec word [eax+0x45] */
    II(0x10104ecb, 0x3)   test(dx, dx);                         /* test dx, dx */
    II(0x10104ece, 0x2)   jzd(0x10104ee9, 0x19);                /* jz 0x10104ee9 */
    II(0x10104ed0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104ed3, 0x3)   mov(eax, memd_a32(ds, eax + 0x43));   /* mov eax, [eax+0x43] */
    II(0x10104ed6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10104ed9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10104edc, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10104edf, 0x3)   mov(eax, memd_a32(ds, eax + 0x47));   /* mov eax, [eax+0x47] */
    II(0x10104ee2, 0x5)   calld(sys_delete, 0x6107d);           /* call 0x10165f64 */
    II(0x10104ee7, 0x2)   jmpd(0x10104ebd, -0x2c);              /* jmp 0x10104ebd */
l_0x10104ee9:
    II(0x10104ee9, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10104eee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104ef1, 0x5)   calld(0x100d6999, -0x2e55d);          /* call 0x100d6999 */
    II(0x10104ef6, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10104ef9, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x2);   /* test dword [ebp-0x4], 0x2 */
    II(0x10104f00, 0x2)   jzd(0x10104f0a, 0x8);                 /* jz 0x10104f0a */
    II(0x10104f02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104f05, 0x5)   calld(sys_delete, 0x6105a);           /* call 0x10165f64 */
l_0x10104f0a:
    II(0x10104f0a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10104f0d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x10104f10, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10104f13, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10104f15, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10104f16, 0x1)   popd(edi);                            /* pop edi */
    II(0x10104f17, 0x1)   popd(esi);                            /* pop esi */
    II(0x10104f18, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10104f19, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10104f1a, 0x1)   retd();                               /* ret */
FUNC_END

