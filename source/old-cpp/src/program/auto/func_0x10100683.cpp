FUNC_BEGIN(0x10100683, 0xb73ca9eeb9cc6fd0, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xc5, 0x56, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0xa1, 0x64, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x1, 0x75, 0xe, 0x66, 0xa1, 0x68, 0x39, 0x1c, 0x10, 0x89, 0x45, 0xf8, 0xe9, 0x79, 0, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0x7d, 0x5a, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x2, 0xeb, 0x23, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x90, 0x50, 0xa5, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x4f, 0x67, 0xf7, 0xff, 0x89, 0x45, 0xf8, 0xeb, 0x97, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x1, 0x7d, 0x7, 0xc7, 0x45, 0xf8, 0xa, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x83, 0xc2, 0xe, 0xbb, 0xf, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0x8b, 0x55, 0xfc, 0x31, 0xc0, 0x66, 0x8b, 0x42, 0x52, 0x50, 0x8b, 0x55, 0xfc, 0x31, 0xc9, 0x66, 0x8b, 0x4a, 0x52, 0xbb, 0x8a, 0x2, 0, 0, 0xba, 0xb, 0, 0, 0, 0xb8, 0x67, 0x2b, 0x1a, 0x10, 0xe8, 0x11, 0xf8, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf8, 0x50, 0x8b, 0x55, 0xfc, 0x31, 0xc9, 0x8a, 0x4a, 0x26, 0x69, 0xc9, 0x47, 0x2, 0, 0, 0x66, 0x8b, 0x89, 0x50, 0xa5, 0x1c, 0x10, 0x81, 0xe1, 0xff, 0xff, 0, 0, 0xbb, 0x8a, 0x2, 0, 0, 0xba, 0xc, 0, 0, 0, 0xb8, 0x6e, 0x2b, 0x1a, 0x10, 0xe8, 0xd6, 0xf7, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10100683, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10100688, 0x5)   calld(sys_check_available_stack_size, 0x656c5); /* call 0x10165d52 */
    II(0x1010068d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010068e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010068f, 0x1)   pushd(edx);                           /* push edx */
    II(0x10100690, 0x1)   pushd(esi);                           /* push esi */
    II(0x10100691, 0x1)   pushd(edi);                           /* push edi */
    II(0x10100692, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10100693, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10100695, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1010069b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010069e, 0x5)   mov(eax, memd_a32(ds, 0x101c3964));   /* mov eax, [0x101c3964] */
    II(0x101006a3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101006a6, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x101006a9, 0x2)   jnzd(0x101006b9, 0xe);                /* jnz 0x101006b9 */
    II(0x101006ab, 0x6)   mov(ax, memw_a32(ds, 0x101c3968));    /* mov ax, [0x101c3968] */
    II(0x101006b1, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101006b4, 0x5)   jmpd(0x10100732, 0x79);               /* jmp 0x10100732 */
l_0x101006b9:
    II(0x101006b9, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x101006c0, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x101006c7, 0x2)   jmpd(0x101006cf, 0x6);                /* jmp 0x101006cf */
l_0x101006c9:
    II(0x101006c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101006cc, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x101006cf:
    II(0x101006cf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x101006d3, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x101006d6, 0x2)   jged(0x10100732, 0x5a);               /* jge 0x10100732 */
    II(0x101006d8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x101006dc, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101006e2, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x101006e8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101006ed, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101006ef, 0x2)   jzd(0x1010070b, 0x1a);                /* jz 0x1010070b */
    II(0x101006f1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x101006f5, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101006fb, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10100701, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10100706, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10100709, 0x2)   jnzd(0x1010070d, 0x2);                /* jnz 0x1010070d */
l_0x1010070b:
    II(0x1010070b, 0x2)   jmpd(0x10100730, 0x23);               /* jmp 0x10100730 */
l_0x1010070d:
    II(0x1010070d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100710, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10100713, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10100718, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1010071e, 0x6)   mov(edx, memd_a32(ds, eax + 0x101ca550)); /* mov edx, [eax+0x101ca550] */
    II(0x10100724, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10100728, 0x5)   calld(0x10076e7c, -0x898b1);          /* call 0x10076e7c */
    II(0x1010072d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
l_0x10100730:
    II(0x10100730, 0x2)   jmpd(0x101006c9, -0x69);              /* jmp 0x101006c9 */
l_0x10100732:
    II(0x10100732, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10100736, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10100739, 0x2)   jged(0x10100742, 0x7);                /* jge 0x10100742 */
    II(0x1010073b, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0xa);    /* mov dword [ebp-0x8], 0xa */
l_0x10100742:
    II(0x10100742, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10100746, 0x3)   add(edx, 0xe);                        /* add edx, 0xe */
    II(0x10100749, 0x5)   mov(ebx, 0xf);                        /* mov ebx, 0xf */
    II(0x1010074e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10100750, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10100753, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10100755, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10100758, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010075c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010075d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10100760, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100762, 0x4)   mov(ax, memw_a32(ds, edx + 0x52));    /* mov ax, [edx+0x52] */
    II(0x10100766, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100767, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1010076a, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010076c, 0x4)   mov(cx, memw_a32(ds, edx + 0x52));    /* mov cx, [edx+0x52] */
    II(0x10100770, 0x5)   mov(ebx, 0x28a);                      /* mov ebx, 0x28a */
    II(0x10100775, 0x5)   mov(edx, 0xb);                        /* mov edx, 0xb */
    II(0x1010077a, 0x5)   mov(eax, 0x101a2b67);                 /* mov eax, 0x101a2b67 */ /* "points" */
    II(0x1010077f, 0x5)   calld(0x100fff95, -0x7ef);            /* call 0x100fff95 */
    II(0x10100784, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10100788, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100789, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010078b, 0x4)   mov(ax, memw_a32(ss, ebp - 0x8));     /* mov ax, [ebp-0x8] */
    II(0x1010078f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100790, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10100793, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100795, 0x3)   mov(cl, memb_a32(ds, edx + 0x26));    /* mov cl, [edx+0x26] */
    II(0x10100798, 0x6)   imul(ecx, ecx, 0x247);                /* imul ecx, ecx, 0x247 */
    II(0x1010079e, 0x7)   mov(cx, memw_a32(ds, ecx + 0x101ca550)); /* mov cx, [ecx+0x101ca550] */
    II(0x101007a5, 0x6)   and_(ecx, 0xffff);                    /* and ecx, 0xffff */
    II(0x101007ab, 0x5)   mov(ebx, 0x28a);                      /* mov ebx, 0x28a */
    II(0x101007b0, 0x5)   mov(edx, 0xc);                        /* mov edx, 0xc */
    II(0x101007b5, 0x5)   mov(eax, 0x101a2b6e);                 /* mov eax, 0x101a2b6e */ /* "Total" */
    II(0x101007ba, 0x5)   calld(0x100fff95, -0x82a);            /* call 0x100fff95 */
    II(0x101007bf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101007c1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101007c2, 0x1)   popd(edi);                            /* pop edi */
    II(0x101007c3, 0x1)   popd(esi);                            /* pop esi */
    II(0x101007c4, 0x1)   popd(edx);                            /* pop edx */
    II(0x101007c5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101007c6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101007c7, 0x1)   retd();                               /* ret */
FUNC_END

