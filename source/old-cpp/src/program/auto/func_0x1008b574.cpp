FUNC_BEGIN(0x1008b574, 0x90bc195b640c607c, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0xd4, 0xa7, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x9f, 0xad, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0x15, 0xaf, 0xfe, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xbb, 0xf1, 0xff, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb7, 0xf8, 0xff, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x2e, 0xb6, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x9d, 0xf7, 0xa, 0, 0x84, 0xc0, 0x74, 0x2d, 0x8d, 0x45, 0xf4, 0xe8, 0xc0, 0xad, 0xfe, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0x16, 0x8d, 0x45, 0xf4, 0xe8, 0xab, 0xad, 0xfe, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x2e, 0x69, 0xfe, 0xff, 0x1, 0x45, 0xec, 0xeb, 0xbd, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x7f, 0x1d, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xa1, 0xd5, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x47, 0xa9, 0xfe, 0xff, 0xe9, 0xbe, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xc4, 0xb5, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x33, 0xf7, 0xa, 0, 0x84, 0xc0, 0x74, 0x64, 0x8d, 0x45, 0xf0, 0xe8, 0x7a, 0xf7, 0xff, 0xff, 0xe8, 0x41, 0xf7, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xfc, 0x75, 0x1b, 0x8d, 0x45, 0xf0, 0xe8, 0x67, 0xf7, 0xff, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x20, 0x3c, 0x9, 0x74, 0x2, 0xeb, 0x32, 0x8d, 0x45, 0xf0, 0xe8, 0x7e, 0xf7, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe0, 0xff, 0x52, 0x70, 0x84, 0xc0, 0x74, 0x11, 0x8b, 0x45, 0xe4, 0xe8, 0x29, 0xe, 0x1, 0, 0x98, 0xe8, 0x8d, 0x68, 0xfe, 0xff, 0x1, 0x45, 0xec, 0xeb, 0x86, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x7e, 0x6, 0xc6, 0x45, 0xdc, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xdc, 0, 0x8a, 0x45, 0xdc, 0x88, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xf4, 0xd4, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x9a, 0xa8, 0xfe, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xde, 0xd4, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x84, 0xa8, 0xfe, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008b574, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x1008b579, 0x5)   calld(sys_check_available_stack_size, 0xda7d4); /* call 0x10165d52 */
    II(0x1008b57e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008b57f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008b580, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008b581, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008b582, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008b583, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008b584, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008b586, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1008b58c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1008b58f, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1008b594, 0x5)   calld(0x10076338, -0x15261);          /* call 0x10076338 */
    II(0x1008b599, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008b59b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b59e, 0x5)   calld(0x100764b8, -0x150eb);          /* call 0x100764b8 */
    II(0x1008b5a3, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1008b5a8, 0x5)   calld(0x1008a768, -0xe45);            /* call 0x1008a768 */
    II(0x1008b5ad, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x1008b5b0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008b5b2, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008b5b4, 0x5)   calld(0x1008ae70, -0x749);            /* call 0x1008ae70 */
    II(0x1008b5b9, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1008b5c0, 0x2)   jmpd(0x1008b5ca, 0x8);                /* jmp 0x1008b5ca */
l_0x1008b5c2:
    II(0x1008b5c2, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b5c5, 0x5)   calld(0x10076bf8, -0x149d2);          /* call 0x10076bf8 */
l_0x1008b5ca:
    II(0x1008b5ca, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b5cc, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b5cf, 0x5)   calld(0x1013ad71, 0xaf79d);           /* call 0x1013ad71 */
    II(0x1008b5d4, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008b5d6, 0x2)   jzd(0x1008b605, 0x2d);                /* jz 0x1008b605 */
    II(0x1008b5d8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b5db, 0x5)   calld(0x100763a0, -0x15240);          /* call 0x100763a0 */
    II(0x1008b5e0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b5e2, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1008b5e5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1008b5e9, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008b5eb, 0x2)   jnzd(0x1008b603, 0x16);               /* jnz 0x1008b603 */
    II(0x1008b5ed, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b5f0, 0x5)   calld(0x100763a0, -0x15255);          /* call 0x100763a0 */
    II(0x1008b5f5, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1008b5f8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008b5fb, 0x5)   calld(0x10071f2e, -0x196d2);          /* call 0x10071f2e */
    II(0x1008b600, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
l_0x1008b603:
    II(0x1008b603, 0x2)   jmpd(0x1008b5c2, -0x43);              /* jmp 0x1008b5c2 */
l_0x1008b605:
    II(0x1008b605, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1008b609, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008b60b, 0x2)   jgd(0x1008b62a, 0x1d);                /* jg 0x1008b62a */
    II(0x1008b60d, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1008b611, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b613, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008b616, 0x5)   calld(0x10088bbc, -0x2a5f);           /* call 0x10088bbc */
    II(0x1008b61b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b61d, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b620, 0x5)   calld(0x10075f6c, -0x156b9);          /* call 0x10075f6c */
    II(0x1008b625, 0x5)   jmpd(0x1008b6e8, 0xbe);               /* jmp 0x1008b6e8 */
l_0x1008b62a:
    II(0x1008b62a, 0x2)   jmpd(0x1008b634, 0x8);                /* jmp 0x1008b634 */
l_0x1008b62c:
    II(0x1008b62c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008b62f, 0x5)   calld(0x10076bf8, -0x14a3c);          /* call 0x10076bf8 */
l_0x1008b634:
    II(0x1008b634, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b636, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008b639, 0x5)   calld(0x1013ad71, 0xaf733);           /* call 0x1013ad71 */
    II(0x1008b63e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008b640, 0x2)   jzd(0x1008b6a6, 0x64);                /* jz 0x1008b6a6 */
    II(0x1008b642, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008b645, 0x5)   calld(0x1008adc4, -0x886);            /* call 0x1008adc4 */
    II(0x1008b64a, 0x5)   calld(0x1008ad90, -0x8bf);            /* call 0x1008ad90 */
    II(0x1008b64f, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x1008b653, 0x2)   jnzd(0x1008b670, 0x1b);               /* jnz 0x1008b670 */
    II(0x1008b655, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008b658, 0x5)   calld(0x1008adc4, -0x899);            /* call 0x1008adc4 */
    II(0x1008b65d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1008b660, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1008b663, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x1008b666, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1008b669, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x1008b66c, 0x2)   cmp(al, 0x9);                         /* cmp al, 0x9 */
    II(0x1008b66e, 0x2)   jzd(0x1008b672, 0x2);                 /* jz 0x1008b672 */
l_0x1008b670:
    II(0x1008b670, 0x2)   jmpd(0x1008b6a4, 0x32);               /* jmp 0x1008b6a4 */
l_0x1008b672:
    II(0x1008b672, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008b675, 0x5)   calld(0x1008adf8, -0x882);            /* call 0x1008adf8 */
    II(0x1008b67a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x1008b67d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1008b680, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1008b683, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008b686, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x1008b689, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008b68c, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x1008b68f, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008b691, 0x2)   jzd(0x1008b6a4, 0x11);                /* jz 0x1008b6a4 */
    II(0x1008b693, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1008b696, 0x5)   calld(0x1009c4c4, 0x10e29);           /* call 0x1009c4c4 */
    II(0x1008b69b, 0x1)   cwde();                               /* cwde */
    II(0x1008b69c, 0x5)   calld(0x10071f2e, -0x19773);          /* call 0x10071f2e */
    II(0x1008b6a1, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
l_0x1008b6a4:
    II(0x1008b6a4, 0x2)   jmpd(0x1008b62c, -0x7a);              /* jmp 0x1008b62c */
l_0x1008b6a6:
    II(0x1008b6a6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1008b6aa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008b6ac, 0x2)   jled(0x1008b6b4, 0x6);                /* jle 0x1008b6b4 */
    II(0x1008b6ae, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x1008b6b2, 0x2)   jmpd(0x1008b6b8, 0x4);                /* jmp 0x1008b6b8 */
l_0x1008b6b4:
    II(0x1008b6b4, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0);     /* mov byte [ebp-0x24], 0x0 */
l_0x1008b6b8:
    II(0x1008b6b8, 0x3)   mov(al, memb_a32(ss, ebp - 0x24));    /* mov al, [ebp-0x24] */
    II(0x1008b6bb, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x1008b6be, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b6c0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008b6c3, 0x5)   calld(0x10088bbc, -0x2b0c);           /* call 0x10088bbc */
    II(0x1008b6c8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008b6ca, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1008b6cd, 0x5)   calld(0x10075f6c, -0x15766);          /* call 0x10075f6c */
    II(0x1008b6d2, 0x2)   jmpd(0x1008b6e8, 0x14);               /* jmp 0x1008b6e8 */
//  II(0x1008b6d4, 0x14)  /* Недостижимый код. */
l_0x1008b6e8:
    II(0x1008b6e8, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1008b6eb, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008b6ed, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008b6ee, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008b6ef, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008b6f0, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008b6f1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008b6f2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008b6f3, 0x1)   retd();                               /* ret */
FUNC_END

