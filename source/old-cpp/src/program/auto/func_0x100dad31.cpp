FUNC_BEGIN(0x100dad31, 0x25553bc58850d0de, 0x20, ({0x68, 0x6c, 0, 0, 0, 0xe8, 0x17, 0xb0, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x7e, 0x9, 0x81, 0x7d, 0xfc, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x9e, 0x3, 0, 0, 0, 0x81, 0x7d, 0xfc, 0xf7, 0x3, 0, 0, 0x7c, 0x9, 0x81, 0x7d, 0xfc, 0x1, 0x4, 0, 0, 0x7c, 0x2, 0xeb, 0x34, 0x8b, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x99, 0xf3, 0xff, 0xff, 0xe8, 0x33, 0xdc, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x13, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x57, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf0, 0xff, 0x53, 0x18, 0xe9, 0x69, 0x4, 0, 0, 0x81, 0x7d, 0xfc, 0x1, 0x4, 0, 0, 0x7c, 0x9, 0x81, 0x7d, 0xfc, 0xb, 0x4, 0, 0, 0x7c, 0x2, 0xeb, 0x34, 0x8b, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x71, 0xf3, 0xff, 0xff, 0xe8, 0x89, 0xdc, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x58, 0x13, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x57, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xec, 0xff, 0x53, 0x18, 0xe9, 0x21, 0x4, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe8, 0xe9, 0x20, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x44, 0x3, 0, 0, 0x1, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x43, 0x3, 0, 0, 0x1, 0xe9, 0xfd, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xe4, 0xff, 0x52, 0x1c, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x43, 0x3, 0, 0, 0x1, 0xe9, 0xdc, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x5d, 0x3, 0, 0, 0xe8, 0x72, 0x4d, 0xff, 0xff, 0xc6, 0x5, 0xcc, 0x7e, 0x1b, 0x10, 0x1, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xe0, 0xff, 0x52, 0x14, 0xe9, 0xb0, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x5d, 0x3, 0, 0, 0xe8, 0x46, 0x4d, 0xff, 0xff, 0xc6, 0x5, 0xcc, 0x7e, 0x1b, 0x10, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xdc, 0xff, 0x52, 0x14, 0xe9, 0x84, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x61, 0x3, 0, 0, 0xe8, 0x1a, 0x4d, 0xff, 0xff, 0xc6, 0x5, 0xcd, 0x7e, 0x1b, 0x10, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xd8, 0xff, 0x52, 0x14, 0xe9, 0x58, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x61, 0x3, 0, 0, 0xe8, 0xee, 0x4c, 0xff, 0xff, 0xc6, 0x5, 0xcd, 0x7e, 0x1b, 0x10, 0x1, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xd4, 0xff, 0x52, 0x14, 0xe9, 0x2c, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x65, 0x3, 0, 0, 0xe8, 0xc2, 0x4c, 0xff, 0xff, 0xc6, 0x5, 0xce, 0x7e, 0x1b, 0x10, 0x1, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xd0, 0xff, 0x52, 0x14, 0xe9, 0, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x65, 0x3, 0, 0, 0xe8, 0x96, 0x4c, 0xff, 0xff, 0xc6, 0x5, 0xce, 0x7e, 0x1b, 0x10, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xcc, 0xff, 0x52, 0x14, 0xe9, 0xd4, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x69, 0x3, 0, 0, 0xe8, 0x6a, 0x4c, 0xff, 0xff, 0xc6, 0x5, 0xcf, 0x7e, 0x1b, 0x10, 0x1, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xc8, 0xff, 0x52, 0x14, 0xe9, 0xa8, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x69, 0x3, 0, 0, 0xe8, 0x3e, 0x4c, 0xff, 0xff, 0xc6, 0x5, 0xcf, 0x7e, 0x1b, 0x10, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xc4, 0xff, 0x52, 0x14, 0xe9, 0x7c, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x6d, 0x3, 0, 0, 0xe8, 0x12, 0x4c, 0xff, 0xff, 0xc6, 0x5, 0x4, 0x36, 0x1c, 0x10, 0x1, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xc0, 0xff, 0x52, 0x14, 0xe9, 0x50, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x6d, 0x3, 0, 0, 0xe8, 0xe6, 0x4b, 0xff, 0xff, 0xc6, 0x5, 0x4, 0x36, 0x1c, 0x10, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x8b, 0x50, 0x13, 0x8b, 0x45, 0xbc, 0xff, 0x52, 0x14, 0xe9, 0x24, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x71, 0x3, 0, 0, 0xe8, 0xba, 0x4b, 0xff, 0xff, 0xc6, 0x5, 0xd0, 0x7e, 0x1b, 0x10, 0x1, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8b, 0x58, 0x13, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x57, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xb8, 0xff, 0x53, 0x8, 0xe9, 0xef, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x71, 0x3, 0, 0, 0xe8, 0x85, 0x4b, 0xff, 0xff, 0xc6, 0x5, 0xd0, 0x7e, 0x1b, 0x10, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x8b, 0x58, 0x13, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x57, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xb4, 0xff, 0x53, 0x8, 0xe9, 0xba, 0x1, 0, 0, 0x81, 0x7d, 0xfc, 0, 0x70, 0, 0, 0xf, 0x8c, 0x8f, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x9e, 0x3, 0, 0, 0, 0xf, 0x85, 0x73, 0, 0, 0, 0x81, 0x45, 0xfc, 0, 0x90, 0xff, 0xff, 0x81, 0x7d, 0xfc, 0xe8, 0x3, 0, 0, 0x75, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x51, 0x3, 0, 0, 0xe8, 0x23, 0x4b, 0xff, 0xff, 0xeb, 0x53, 0x81, 0x7d, 0xfc, 0xe9, 0x3, 0, 0, 0x75, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x55, 0x3, 0, 0, 0xe8, 0xa, 0x4b, 0xff, 0xff, 0xeb, 0x3a, 0x81, 0x7d, 0xfc, 0xea, 0x3, 0, 0, 0x75, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x59, 0x3, 0, 0, 0xe8, 0xf1, 0x4a, 0xff, 0xff, 0xeb, 0x21, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x45, 0x3, 0, 0, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb0, 0x8b, 0x58, 0x40, 0x8b, 0x55, 0xfc, 0x81, 0xc2, 0, 0x70, 0, 0, 0x8b, 0x45, 0xb0, 0xff, 0x53, 0xc, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x9e, 0x3, 0, 0, 0x1, 0xeb, 0x23, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x45, 0x3, 0, 0, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x8b, 0x58, 0x40, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xac, 0xff, 0x53, 0xc, 0x88, 0x45, 0xf4, 0xe9, 0xff, 0, 0, 0, 0xe9, 0xf6, 0, 0, 0, 0x81, 0x7d, 0xe8, 0xee, 0x3, 0, 0, 0xf, 0x82, 0x82, 0, 0, 0, 0x81, 0x7d, 0xe8, 0xee, 0x3, 0, 0, 0xf, 0x86, 0x58, 0xfd, 0xff, 0xff, 0x81, 0x7d, 0xe8, 0xf2, 0x3, 0, 0, 0x72, 0x4c, 0x81, 0x7d, 0xe8, 0xf2, 0x3, 0, 0, 0xf, 0x86, 0x1e, 0xfe, 0xff, 0xff, 0x81, 0x7d, 0xe8, 0xf4, 0x3, 0, 0, 0x72, 0x31, 0x81, 0x7d, 0xe8, 0xf4, 0x3, 0, 0, 0xf, 0x86, 0x60, 0xfe, 0xff, 0xff, 0x81, 0x7d, 0xe8, 0xf5, 0x3, 0, 0, 0xf, 0x86, 0x7f, 0xfe, 0xff, 0xff, 0x81, 0x7d, 0xe8, 0xf6, 0x3, 0, 0, 0xf, 0x84, 0xa7, 0xfe, 0xff, 0xff, 0xe9, 0xd7, 0xfe, 0xff, 0xff, 0xe9, 0xd2, 0xfe, 0xff, 0xff, 0xe9, 0xb, 0xfe, 0xff, 0xff, 0x81, 0x7d, 0xe8, 0xf0, 0x3, 0, 0, 0x72, 0x12, 0x81, 0x7d, 0xe8, 0xf0, 0x3, 0, 0, 0xf, 0x86, 0x71, 0xfd, 0xff, 0xff, 0xe9, 0x98, 0xfd, 0xff, 0xff, 0xe9, 0x3b, 0xfd, 0xff, 0xff, 0x81, 0x7d, 0xe8, 0xea, 0x3, 0, 0, 0x72, 0x2d, 0x81, 0x7d, 0xe8, 0xea, 0x3, 0, 0, 0xf, 0x86, 0x3b, 0xfc, 0xff, 0xff, 0x81, 0x7d, 0xe8, 0xec, 0x3, 0, 0, 0x72, 0x12, 0x81, 0x7d, 0xe8, 0xec, 0x3, 0, 0, 0xf, 0x86, 0x8b, 0xfc, 0xff, 0xff, 0xe9, 0xde, 0xfc, 0xff, 0xff, 0xe9, 0x55, 0xfc, 0xff, 0xff, 0x83, 0x7d, 0xe8, 0x1b, 0x72, 0x1c, 0x83, 0x7d, 0xe8, 0x1b, 0xf, 0x86, 0xb, 0xfc, 0xff, 0xff, 0x81, 0x7d, 0xe8, 0xe8, 0x3, 0, 0, 0xf, 0x84, 0x17, 0xfc, 0xff, 0xff, 0xe9, 0x55, 0xfe, 0xff, 0xff, 0x83, 0x7d, 0xe8, 0xd, 0xf, 0x84, 0x8, 0xfc, 0xff, 0xff, 0xe9, 0x46, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100dad31, 0x5)   pushd(0x6c);                          /* push dword 0x6c */
    II(0x100dad36, 0x5)   calld(sys_check_available_stack_size, 0x8b017); /* call 0x10165d52 */
    II(0x100dad3b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100dad3c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100dad3d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100dad3e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100dad3f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100dad40, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100dad42, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x100dad48, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100dad4b, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100dad4e, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100dad52, 0x2)   jled(0x100dad5d, 0x9);                /* jle 0x100dad5d */
    II(0x100dad54, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x7000); /* cmp dword [ebp-0x4], 0x7000 */
    II(0x100dad5b, 0x2)   jld(0x100dad5f, 0x2);                 /* jl 0x100dad5f */
l_0x100dad5d:
    II(0x100dad5d, 0x2)   jmpd(0x100dad69, 0xa);                /* jmp 0x100dad69 */
l_0x100dad5f:
    II(0x100dad5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dad62, 0x7)   mov(memb_a32(ds, eax + 0x39e), 0);    /* mov byte [eax+0x39e], 0x0 */
l_0x100dad69:
    II(0x100dad69, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x3f7);  /* cmp dword [ebp-0x4], 0x3f7 */
    II(0x100dad70, 0x2)   jld(0x100dad7b, 0x9);                 /* jl 0x100dad7b */
    II(0x100dad72, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x401);  /* cmp dword [ebp-0x4], 0x401 */
    II(0x100dad79, 0x2)   jld(0x100dad7d, 0x2);                 /* jl 0x100dad7d */
l_0x100dad7b:
    II(0x100dad7b, 0x2)   jmpd(0x100dadb1, 0x34);               /* jmp 0x100dadb1 */
l_0x100dad7d:
    II(0x100dad7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dad80, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dad83, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100dad86, 0x6)   mov(eax, memd_a32(ds, eax - 0xc67));  /* mov eax, [eax+0xfffff399] */
    II(0x100dad8c, 0x5)   calld(0x100d89c4, -0x23cd);           /* call 0x100d89c4 */
    II(0x100dad91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dad94, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100dad97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100dad9a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
//    II(0x100dad9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dada0, 0x3)   mov(edx, memd_a32(ds, eax + 0x57));   /* mov edx, [eax+0x57] */
    II(0x100dada3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100dada6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100dada9, 0x3)   calld_abs(memd_a32(ds, ebx + 0x18));  /* call dword near [ebx+0x18] */
    II(0x100dadac, 0x5)   jmpd(0x100db21a, 0x469);              /* jmp 0x100db21a */
l_0x100dadb1:
    II(0x100dadb1, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x401);  /* cmp dword [ebp-0x4], 0x401 */
    II(0x100dadb8, 0x2)   jld(0x100dadc3, 0x9);                 /* jl 0x100dadc3 */
    II(0x100dadba, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x40b);  /* cmp dword [ebp-0x4], 0x40b */
    II(0x100dadc1, 0x2)   jld(0x100dadc5, 0x2);                 /* jl 0x100dadc5 */
l_0x100dadc3:
    II(0x100dadc3, 0x2)   jmpd(0x100dadf9, 0x34);               /* jmp 0x100dadf9 */
l_0x100dadc5:
    II(0x100dadc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dadc8, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100dadcb, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100dadce, 0x6)   mov(eax, memd_a32(ds, eax - 0xc8f));  /* mov eax, [eax+0xfffff371] */
    II(0x100dadd4, 0x5)   calld(0x100d8a62, -0x2377);           /* call 0x100d8a62 */
    II(0x100dadd9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daddc, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100daddf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100dade2, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
//    II(0x100dade5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dade8, 0x3)   mov(edx, memd_a32(ds, eax + 0x57));   /* mov edx, [eax+0x57] */
    II(0x100dadeb, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100dadee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100dadf1, 0x3)   calld_abs(memd_a32(ds, ebx + 0x18));  /* call dword near [ebx+0x18] */
    II(0x100dadf4, 0x5)   jmpd(0x100db21a, 0x421);              /* jmp 0x100db21a */
l_0x100dadf9:
    II(0x100dadf9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dadfc, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100dadff, 0x5)   jmpd(0x100db124, 0x320);              /* jmp 0x100db124 */
l_0x100dae04:
    II(0x100dae04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dae07, 0x7)   mov(memb_a32(ds, eax + 0x344), 0x1);  /* mov byte [eax+0x344], 0x1 */
    II(0x100dae0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dae11, 0x7)   mov(memb_a32(ds, eax + 0x343), 0x1);  /* mov byte [eax+0x343], 0x1 */
    II(0x100dae18, 0x5)   jmpd(0x100db21a, 0x3fd);              /* jmp 0x100db21a */
l_0x100dae1d:
    II(0x100dae1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dae20, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100dae23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100dae26, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100dae29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100dae2c, 0x3)   calld_abs(memd_a32(ds, edx + 0x1c));  /* call dword near [edx+0x1c] */
    II(0x100dae2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dae32, 0x7)   mov(memb_a32(ds, eax + 0x343), 0x1);  /* mov byte [eax+0x343], 0x1 */
    II(0x100dae39, 0x5)   jmpd(0x100db21a, 0x3dc);              /* jmp 0x100db21a */
l_0x100dae3e:
    II(0x100dae3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dae41, 0x6)   mov(eax, memd_a32(ds, eax + 0x35d));  /* mov eax, [eax+0x35d] */
    II(0x100dae47, 0x5)   calld(0x100cfbbe, -0xb28e);           /* call 0x100cfbbe */
    II(0x100dae4c, 0x7)   mov(memb_a32(ds, 0x101b7ecc), 0x1);   /* mov byte [0x101b7ecc], 0x1 */
    II(0x100dae53, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dae56, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100dae59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100dae5c, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100dae5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100dae62, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100dae65, 0x5)   jmpd(0x100db21a, 0x3b0);              /* jmp 0x100db21a */
l_0x100dae6a:
    II(0x100dae6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dae6d, 0x6)   mov(eax, memd_a32(ds, eax + 0x35d));  /* mov eax, [eax+0x35d] */
    II(0x100dae73, 0x5)   calld(0x100cfbbe, -0xb2ba);           /* call 0x100cfbbe */
    II(0x100dae78, 0x7)   mov(memb_a32(ds, 0x101b7ecc), 0);     /* mov byte [0x101b7ecc], 0x0 */
    II(0x100dae7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dae82, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100dae85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100dae88, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100dae8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100dae8e, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100dae91, 0x5)   jmpd(0x100db21a, 0x384);              /* jmp 0x100db21a */
l_0x100dae96:
    II(0x100dae96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dae99, 0x6)   mov(eax, memd_a32(ds, eax + 0x361));  /* mov eax, [eax+0x361] */
    II(0x100dae9f, 0x5)   calld(0x100cfbbe, -0xb2e6);           /* call 0x100cfbbe */
    II(0x100daea4, 0x7)   mov(memb_a32(ds, 0x101b7ecd), 0);     /* mov byte [0x101b7ecd], 0x0 */
    II(0x100daeab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daeae, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100daeb1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100daeb4, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100daeb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100daeba, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100daebd, 0x5)   jmpd(0x100db21a, 0x358);              /* jmp 0x100db21a */
l_0x100daec2:
    II(0x100daec2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daec5, 0x6)   mov(eax, memd_a32(ds, eax + 0x361));  /* mov eax, [eax+0x361] */
    II(0x100daecb, 0x5)   calld(0x100cfbbe, -0xb312);           /* call 0x100cfbbe */
    II(0x100daed0, 0x7)   mov(memb_a32(ds, 0x101b7ecd), 0x1);   /* mov byte [0x101b7ecd], 0x1 */
    II(0x100daed7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daeda, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x100daedd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100daee0, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100daee3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100daee6, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100daee9, 0x5)   jmpd(0x100db21a, 0x32c);              /* jmp 0x100db21a */
l_0x100daeee:
    II(0x100daeee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daef1, 0x6)   mov(eax, memd_a32(ds, eax + 0x365));  /* mov eax, [eax+0x365] */
    II(0x100daef7, 0x5)   calld(0x100cfbbe, -0xb33e);           /* call 0x100cfbbe */
    II(0x100daefc, 0x7)   mov(memb_a32(ds, 0x101b7ece), 0x1);   /* mov byte [0x101b7ece], 0x1 */
    II(0x100daf03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daf06, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100daf09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100daf0c, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100daf0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100daf12, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100daf15, 0x5)   jmpd(0x100db21a, 0x300);              /* jmp 0x100db21a */
l_0x100daf1a:
    II(0x100daf1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daf1d, 0x6)   mov(eax, memd_a32(ds, eax + 0x365));  /* mov eax, [eax+0x365] */
    II(0x100daf23, 0x5)   calld(0x100cfbbe, -0xb36a);           /* call 0x100cfbbe */
    II(0x100daf28, 0x7)   mov(memb_a32(ds, 0x101b7ece), 0);     /* mov byte [0x101b7ece], 0x0 */
    II(0x100daf2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daf32, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x100daf35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100daf38, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100daf3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100daf3e, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100daf41, 0x5)   jmpd(0x100db21a, 0x2d4);              /* jmp 0x100db21a */
l_0x100daf46:
    II(0x100daf46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daf49, 0x6)   mov(eax, memd_a32(ds, eax + 0x369));  /* mov eax, [eax+0x369] */
    II(0x100daf4f, 0x5)   calld(0x100cfbbe, -0xb396);           /* call 0x100cfbbe */
    II(0x100daf54, 0x7)   mov(memb_a32(ds, 0x101b7ecf), 0x1);   /* mov byte [0x101b7ecf], 0x1 */
    II(0x100daf5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daf5e, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100daf61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100daf64, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100daf67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100daf6a, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100daf6d, 0x5)   jmpd(0x100db21a, 0x2a8);              /* jmp 0x100db21a */
l_0x100daf72:
    II(0x100daf72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daf75, 0x6)   mov(eax, memd_a32(ds, eax + 0x369));  /* mov eax, [eax+0x369] */
    II(0x100daf7b, 0x5)   calld(0x100cfbbe, -0xb3c2);           /* call 0x100cfbbe */
    II(0x100daf80, 0x7)   mov(memb_a32(ds, 0x101b7ecf), 0);     /* mov byte [0x101b7ecf], 0x0 */
    II(0x100daf87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daf8a, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x100daf8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100daf90, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100daf93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100daf96, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100daf99, 0x5)   jmpd(0x100db21a, 0x27c);              /* jmp 0x100db21a */
l_0x100daf9e:
    II(0x100daf9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dafa1, 0x6)   mov(eax, memd_a32(ds, eax + 0x36d));  /* mov eax, [eax+0x36d] */
    II(0x100dafa7, 0x5)   calld(0x100cfbbe, -0xb3ee);           /* call 0x100cfbbe */
    II(0x100dafac, 0x7)   mov(memb_a32(ds, 0x101c3604), 0x1);   /* mov byte [0x101c3604], 0x1 */
    II(0x100dafb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dafb6, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100dafb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100dafbc, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100dafbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100dafc2, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100dafc5, 0x5)   jmpd(0x100db21a, 0x250);              /* jmp 0x100db21a */
l_0x100dafca:
    II(0x100dafca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dafcd, 0x6)   mov(eax, memd_a32(ds, eax + 0x36d));  /* mov eax, [eax+0x36d] */
    II(0x100dafd3, 0x5)   calld(0x100cfbbe, -0xb41a);           /* call 0x100cfbbe */
    II(0x100dafd8, 0x7)   mov(memb_a32(ds, 0x101c3604), 0);     /* mov byte [0x101c3604], 0x0 */
    II(0x100dafdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100dafe2, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x100dafe5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100dafe8, 0x3)   mov(edx, memd_a32(ds, eax + 0x13));   /* mov edx, [eax+0x13] */
//    II(0x100dafeb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100dafee, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100daff1, 0x5)   jmpd(0x100db21a, 0x224);              /* jmp 0x100db21a */
l_0x100daff6:
    II(0x100daff6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100daff9, 0x6)   mov(eax, memd_a32(ds, eax + 0x371));  /* mov eax, [eax+0x371] */
    II(0x100dafff, 0x5)   calld(0x100cfbbe, -0xb446);           /* call 0x100cfbbe */
    II(0x100db004, 0x7)   mov(memb_a32(ds, 0x101b7ed0), 0x1);   /* mov byte [0x101b7ed0], 0x1 */
    II(0x100db00b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db00e, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x100db011, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100db014, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
//    II(0x100db017, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db01a, 0x3)   mov(edx, memd_a32(ds, eax + 0x57));   /* mov edx, [eax+0x57] */
    II(0x100db01d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100db020, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100db023, 0x3)   calld_abs(memd_a32(ds, ebx + 0x8));   /* call dword near [ebx+0x8] */
    II(0x100db026, 0x5)   jmpd(0x100db21a, 0x1ef);              /* jmp 0x100db21a */
l_0x100db02b:
    II(0x100db02b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db02e, 0x6)   mov(eax, memd_a32(ds, eax + 0x371));  /* mov eax, [eax+0x371] */
    II(0x100db034, 0x5)   calld(0x100cfbbe, -0xb47b);           /* call 0x100cfbbe */
    II(0x100db039, 0x7)   mov(memb_a32(ds, 0x101b7ed0), 0);     /* mov byte [0x101b7ed0], 0x0 */
    II(0x100db040, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db043, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x100db046, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100db049, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
//    II(0x100db04c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db04f, 0x3)   mov(edx, memd_a32(ds, eax + 0x57));   /* mov edx, [eax+0x57] */
    II(0x100db052, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100db055, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100db058, 0x3)   calld_abs(memd_a32(ds, ebx + 0x8));   /* call dword near [ebx+0x8] */
    II(0x100db05b, 0x5)   jmpd(0x100db21a, 0x1ba);              /* jmp 0x100db21a */
l_0x100db060:
    II(0x100db060, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x7000); /* cmp dword [ebp-0x4], 0x7000 */
    II(0x100db067, 0x6)   jld(0x100db0fc, 0x8f);                /* jl dword 0x100db0fc */
    II(0x100db06d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db070, 0x7)   cmp(memb_a32(ds, eax + 0x39e), 0);    /* cmp byte [eax+0x39e], 0x0 */
    II(0x100db077, 0x6)   jnzd(0x100db0f0, 0x73);               /* jnz dword 0x100db0f0 */
    II(0x100db07d, 0x7)   add(memd_a32(ss, ebp - 0x4), 0xffff9000); /* add dword [ebp-0x4], 0xffff9000 */
    II(0x100db084, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x3e8);  /* cmp dword [ebp-0x4], 0x3e8 */
    II(0x100db08b, 0x2)   jnzd(0x100db09d, 0x10);               /* jnz 0x100db09d */
    II(0x100db08d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db090, 0x6)   mov(eax, memd_a32(ds, eax + 0x351));  /* mov eax, [eax+0x351] */
    II(0x100db096, 0x5)   calld(0x100cfbbe, -0xb4dd);           /* call 0x100cfbbe */
    II(0x100db09b, 0x2)   jmpd(0x100db0f0, 0x53);               /* jmp 0x100db0f0 */
l_0x100db09d:
    II(0x100db09d, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x3e9);  /* cmp dword [ebp-0x4], 0x3e9 */
    II(0x100db0a4, 0x2)   jnzd(0x100db0b6, 0x10);               /* jnz 0x100db0b6 */
    II(0x100db0a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db0a9, 0x6)   mov(eax, memd_a32(ds, eax + 0x355));  /* mov eax, [eax+0x355] */
    II(0x100db0af, 0x5)   calld(0x100cfbbe, -0xb4f6);           /* call 0x100cfbbe */
    II(0x100db0b4, 0x2)   jmpd(0x100db0f0, 0x3a);               /* jmp 0x100db0f0 */
l_0x100db0b6:
    II(0x100db0b6, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x3ea);  /* cmp dword [ebp-0x4], 0x3ea */
    II(0x100db0bd, 0x2)   jnzd(0x100db0cf, 0x10);               /* jnz 0x100db0cf */
    II(0x100db0bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db0c2, 0x6)   mov(eax, memd_a32(ds, eax + 0x359));  /* mov eax, [eax+0x359] */
    II(0x100db0c8, 0x5)   calld(0x100cfbbe, -0xb50f);           /* call 0x100cfbbe */
    II(0x100db0cd, 0x2)   jmpd(0x100db0f0, 0x21);               /* jmp 0x100db0f0 */
l_0x100db0cf:
    II(0x100db0cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db0d2, 0x6)   mov(eax, memd_a32(ds, eax + 0x345));  /* mov eax, [eax+0x345] */
    II(0x100db0d8, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
//    II(0x100db0db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100db0de, 0x3)   mov(ebx, memd_a32(ds, eax + 0x40));   /* mov ebx, [eax+0x40] */
    II(0x100db0e1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100db0e4, 0x6)   add(edx, 0x7000);                     /* add edx, 0x7000 */
    II(0x100db0ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100db0ed, 0x3)   calld_abs(memd_a32(ds, ebx + 0xc));   /* call dword near [ebx+0xc] */
l_0x100db0f0:
    II(0x100db0f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db0f3, 0x7)   mov(memb_a32(ds, eax + 0x39e), 0x1);  /* mov byte [eax+0x39e], 0x1 */
    II(0x100db0fa, 0x2)   jmpd(0x100db11f, 0x23);               /* jmp 0x100db11f */
l_0x100db0fc:
    II(0x100db0fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100db0ff, 0x6)   mov(eax, memd_a32(ds, eax + 0x345));  /* mov eax, [eax+0x345] */
    II(0x100db105, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x100db108, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100db10b, 0x3)   mov(ebx, memd_a32(ds, eax + 0x40));   /* mov ebx, [eax+0x40] */
    II(0x100db10e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x100db111, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100db114, 0x3)   calld_abs(memd_a32(ds, ebx + 0xc));   /* call dword near [ebx+0xc] */
    II(0x100db117, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x100db11a, 0x5)   jmpd(0x100db21e, 0xff);               /* jmp 0x100db21e */
l_0x100db11f:
    II(0x100db11f, 0x5)   jmpd(0x100db21a, 0xf6);               /* jmp 0x100db21a */
l_0x100db124:
    II(0x100db124, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3ee); /* cmp dword [ebp-0x18], 0x3ee */
    II(0x100db12b, 0x6)   jbd(0x100db1b3, 0x82);                /* jb dword 0x100db1b3 */
    II(0x100db131, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3ee); /* cmp dword [ebp-0x18], 0x3ee */
    II(0x100db138, 0x6)   jbed(0x100dae96, -0x2a8);             /* jbe dword 0x100dae96 */
    II(0x100db13e, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3f2); /* cmp dword [ebp-0x18], 0x3f2 */
    II(0x100db145, 0x2)   jbd(0x100db193, 0x4c);                /* jb 0x100db193 */
    II(0x100db147, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3f2); /* cmp dword [ebp-0x18], 0x3f2 */
    II(0x100db14e, 0x6)   jbed(0x100daf72, -0x1e2);             /* jbe dword 0x100daf72 */
    II(0x100db154, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3f4); /* cmp dword [ebp-0x18], 0x3f4 */
    II(0x100db15b, 0x2)   jbd(0x100db18e, 0x31);                /* jb 0x100db18e */
    II(0x100db15d, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3f4); /* cmp dword [ebp-0x18], 0x3f4 */
    II(0x100db164, 0x6)   jbed(0x100dafca, -0x1a0);             /* jbe dword 0x100dafca */
    II(0x100db16a, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3f5); /* cmp dword [ebp-0x18], 0x3f5 */
    II(0x100db171, 0x6)   jbed(0x100daff6, -0x181);             /* jbe dword 0x100daff6 */
    II(0x100db177, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3f6); /* cmp dword [ebp-0x18], 0x3f6 */
    II(0x100db17e, 0x6)   jzd(0x100db02b, -0x159);              /* jz dword 0x100db02b */
    II(0x100db184, 0x5)   jmpd(0x100db060, -0x129);             /* jmp 0x100db060 */
//  II(0x100db189, 0x5)   /* Недостижимый код. */
l_0x100db18e:
    II(0x100db18e, 0x5)   jmpd(0x100daf9e, -0x1f5);             /* jmp 0x100daf9e */
l_0x100db193:
    II(0x100db193, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3f0); /* cmp dword [ebp-0x18], 0x3f0 */
    II(0x100db19a, 0x2)   jbd(0x100db1ae, 0x12);                /* jb 0x100db1ae */
    II(0x100db19c, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3f0); /* cmp dword [ebp-0x18], 0x3f0 */
    II(0x100db1a3, 0x6)   jbed(0x100daf1a, -0x28f);             /* jbe dword 0x100daf1a */
    II(0x100db1a9, 0x5)   jmpd(0x100daf46, -0x268);             /* jmp 0x100daf46 */
l_0x100db1ae:
    II(0x100db1ae, 0x5)   jmpd(0x100daeee, -0x2c5);             /* jmp 0x100daeee */
l_0x100db1b3:
    II(0x100db1b3, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3ea); /* cmp dword [ebp-0x18], 0x3ea */
    II(0x100db1ba, 0x2)   jbd(0x100db1e9, 0x2d);                /* jb 0x100db1e9 */
    II(0x100db1bc, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3ea); /* cmp dword [ebp-0x18], 0x3ea */
    II(0x100db1c3, 0x6)   jbed(0x100dae04, -0x3c5);             /* jbe dword 0x100dae04 */
    II(0x100db1c9, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3ec); /* cmp dword [ebp-0x18], 0x3ec */
    II(0x100db1d0, 0x2)   jbd(0x100db1e4, 0x12);                /* jb 0x100db1e4 */
    II(0x100db1d2, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3ec); /* cmp dword [ebp-0x18], 0x3ec */
    II(0x100db1d9, 0x6)   jbed(0x100dae6a, -0x375);             /* jbe dword 0x100dae6a */
    II(0x100db1df, 0x5)   jmpd(0x100daec2, -0x322);             /* jmp 0x100daec2 */
l_0x100db1e4:
    II(0x100db1e4, 0x5)   jmpd(0x100dae3e, -0x3ab);             /* jmp 0x100dae3e */
l_0x100db1e9:
    II(0x100db1e9, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0x1b);  /* cmp dword [ebp-0x18], 0x1b */
    II(0x100db1ed, 0x2)   jbd(0x100db20b, 0x1c);                /* jb 0x100db20b */
    II(0x100db1ef, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0x1b);  /* cmp dword [ebp-0x18], 0x1b */
    II(0x100db1f3, 0x6)   jbed(0x100dae04, -0x3f5);             /* jbe dword 0x100dae04 */
    II(0x100db1f9, 0x7)   cmp(memd_a32(ss, ebp - 0x18), 0x3e8); /* cmp dword [ebp-0x18], 0x3e8 */
    II(0x100db200, 0x6)   jzd(0x100dae1d, -0x3e9);              /* jz dword 0x100dae1d */
    II(0x100db206, 0x5)   jmpd(0x100db060, -0x1ab);             /* jmp 0x100db060 */
l_0x100db20b:
    II(0x100db20b, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0xd);   /* cmp dword [ebp-0x18], 0xd */
    II(0x100db20f, 0x6)   jzd(0x100dae1d, -0x3f8);              /* jz dword 0x100dae1d */
    II(0x100db215, 0x5)   jmpd(0x100db060, -0x1ba);             /* jmp 0x100db060 */
l_0x100db21a:
    II(0x100db21a, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x100db21e:
    II(0x100db21e, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100db221, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100db223, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100db224, 0x1)   popd(edi);                            /* pop edi */
    II(0x100db225, 0x1)   popd(esi);                            /* pop esi */
    II(0x100db226, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100db227, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100db228, 0x1)   retd();                               /* ret */
FUNC_END

