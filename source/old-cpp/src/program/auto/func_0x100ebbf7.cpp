FUNC_BEGIN(0x100ebbf7, 0x32610297b959ae5a, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x51, 0xa1, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x13, 0xa7, 0xf8, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x87, 0xa8, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xbd, 0xaf, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x2c, 0xf1, 0x4, 0, 0x84, 0xc0, 0x74, 0x44, 0x8d, 0x45, 0xf0, 0xe8, 0x4f, 0xa7, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x75, 0x1c, 0x8d, 0x45, 0xf0, 0xe8, 0x3a, 0xa7, 0xf8, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd5, 0x81, 0x1c, 0x10, 0x3a, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0x1c, 0xa7, 0xf8, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x1, 0x45, 0xf4, 0xeb, 0xa6, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xa1, 0xa6, 0xf8, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x99, 0xa7, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x4b, 0xaf, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xba, 0xf0, 0x4, 0, 0x84, 0xc0, 0x74, 0x44, 0x8d, 0x45, 0xf0, 0xe8, 0xdd, 0xa6, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x75, 0x1c, 0x8d, 0x45, 0xf0, 0xe8, 0xc8, 0xa6, 0xf8, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8a, 0x80, 0xd5, 0x81, 0x1c, 0x10, 0x3a, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0xaa, 0xa6, 0xf8, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x1, 0x45, 0xf4, 0xeb, 0xa6, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xec, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x5d, 0xa2, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x51, 0xa2, 0xf8, 0xff, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ebbf7, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100ebbfc, 0x5)   calld(sys_check_available_stack_size, 0x7a151); /* call 0x10165d52 */
    II(0x100ebc01, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ebc02, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ebc03, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ebc04, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ebc05, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ebc06, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ebc08, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100ebc0e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ebc11, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100ebc14, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100ebc1b, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100ebc20, 0x5)   calld(0x10076338, -0x758ed);          /* call 0x10076338 */
    II(0x100ebc25, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100ebc28, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ebc2a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ebc2c, 0x5)   calld(0x100764b8, -0x75779);          /* call 0x100764b8 */
    II(0x100ebc31, 0x2)   jmpd(0x100ebc3b, 0x8);                /* jmp 0x100ebc3b */
l_0x100ebc33:
    II(0x100ebc33, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebc36, 0x5)   calld(0x10076bf8, -0x75043);          /* call 0x10076bf8 */
l_0x100ebc3b:
    II(0x100ebc3b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebc3d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebc40, 0x5)   calld(0x1013ad71, 0x4f12c);           /* call 0x1013ad71 */
    II(0x100ebc45, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebc47, 0x2)   jzd(0x100ebc8d, 0x44);                /* jz 0x100ebc8d */
    II(0x100ebc49, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebc4c, 0x5)   calld(0x100763a0, -0x758b1);          /* call 0x100763a0 */
    II(0x100ebc51, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebc53, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ebc56, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ebc5a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ebc5c, 0x2)   jnzd(0x100ebc7a, 0x1c);               /* jnz 0x100ebc7a */
    II(0x100ebc5e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebc61, 0x5)   calld(0x100763a0, -0x758c6);          /* call 0x100763a0 */
    II(0x100ebc66, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ebc69, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ebc6c, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100ebc6f, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d5)); /* mov al, [eax+0x101c81d5] */
    II(0x100ebc75, 0x3)   cmp(al, memb_a32(ss, ebp - 0x4));     /* cmp al, [ebp-0x4] */
    II(0x100ebc78, 0x2)   jzd(0x100ebc7c, 0x2);                 /* jz 0x100ebc7c */
l_0x100ebc7a:
    II(0x100ebc7a, 0x2)   jmpd(0x100ebc8b, 0xf);                /* jmp 0x100ebc8b */
l_0x100ebc7c:
    II(0x100ebc7c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebc7f, 0x5)   calld(0x100763a0, -0x758e4);          /* call 0x100763a0 */
    II(0x100ebc84, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x100ebc88, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
l_0x100ebc8b:
    II(0x100ebc8b, 0x2)   jmpd(0x100ebc33, -0x5a);              /* jmp 0x100ebc33 */
l_0x100ebc8d:
    II(0x100ebc8d, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100ebc92, 0x5)   calld(0x10076338, -0x7595f);          /* call 0x10076338 */
    II(0x100ebc97, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100ebc9a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ebc9c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ebc9e, 0x5)   calld(0x1007643c, -0x75867);          /* call 0x1007643c */
    II(0x100ebca3, 0x2)   jmpd(0x100ebcad, 0x8);                /* jmp 0x100ebcad */
l_0x100ebca5:
    II(0x100ebca5, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebca8, 0x5)   calld(0x10076bf8, -0x750b5);          /* call 0x10076bf8 */
l_0x100ebcad:
    II(0x100ebcad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebcaf, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebcb2, 0x5)   calld(0x1013ad71, 0x4f0ba);           /* call 0x1013ad71 */
    II(0x100ebcb7, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebcb9, 0x2)   jzd(0x100ebcff, 0x44);                /* jz 0x100ebcff */
    II(0x100ebcbb, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebcbe, 0x5)   calld(0x100763a0, -0x75923);          /* call 0x100763a0 */
    II(0x100ebcc3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebcc5, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ebcc8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ebccc, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ebcce, 0x2)   jnzd(0x100ebcec, 0x1c);               /* jnz 0x100ebcec */
    II(0x100ebcd0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebcd3, 0x5)   calld(0x100763a0, -0x75938);          /* call 0x100763a0 */
    II(0x100ebcd8, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ebcdb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ebcde, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100ebce1, 0x6)   mov(al, memb_a32(ds, eax + 0x101c81d5)); /* mov al, [eax+0x101c81d5] */
    II(0x100ebce7, 0x3)   cmp(al, memb_a32(ss, ebp - 0x4));     /* cmp al, [ebp-0x4] */
    II(0x100ebcea, 0x2)   jzd(0x100ebcee, 0x2);                 /* jz 0x100ebcee */
l_0x100ebcec:
    II(0x100ebcec, 0x2)   jmpd(0x100ebcfd, 0xf);                /* jmp 0x100ebcfd */
l_0x100ebcee:
    II(0x100ebcee, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebcf1, 0x5)   calld(0x100763a0, -0x75956);          /* call 0x100763a0 */
    II(0x100ebcf6, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x100ebcfa, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
l_0x100ebcfd:
    II(0x100ebcfd, 0x2)   jmpd(0x100ebca5, -0x5a);              /* jmp 0x100ebca5 */
l_0x100ebcff:
    II(0x100ebcff, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ebd02, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100ebd05, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebd07, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebd0a, 0x5)   calld(0x10075f6c, -0x75da3);          /* call 0x10075f6c */
    II(0x100ebd0f, 0x2)   jmpd(0x100ebd1b, 0xa);                /* jmp 0x100ebd1b */
//  II(0x100ebd11, 0xa)   /* Недостижимый код. */
l_0x100ebd1b:
    II(0x100ebd1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ebd1e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ebd20, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ebd21, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ebd22, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ebd23, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ebd24, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ebd25, 0x1)   retd();                               /* ret */
FUNC_END

