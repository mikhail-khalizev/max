FUNC_BEGIN(0x100f2bf4, 0x53a28af9968e4c19, 0x20, ({0x68, 0xa4, 0xd, 0, 0, 0xe8, 0x54, 0x31, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x78, 0xd, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x7d, 0xe0, 0xbe, 0xa0, 0x8a, 0x1b, 0x10, 0xa5, 0xa5, 0xa5, 0x8d, 0x7d, 0xd4, 0xbe, 0xac, 0x8a, 0x1b, 0x10, 0xa5, 0xa5, 0xa5, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xc6, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0, 0xc6, 0x45, 0xf8, 0, 0xc7, 0x45, 0xec, 0x5c, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x4d, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0xf, 0x8c, 0x74, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x66, 0x83, 0x38, 0, 0xf, 0x84, 0x5c, 0x1, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xe5, 0x1e, 0xfe, 0xff, 0x98, 0x83, 0xf8, 0x1, 0x7e, 0x4, 0xc6, 0x45, 0xf8, 0x1, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x66, 0x8b, 0, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0xf, 0xbf, 0, 0x83, 0xf8, 0x1, 0x7e, 0x42, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xdb, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0xf, 0xbf, 0, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xd3, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x18, 0xc1, 0xe0, 0x2, 0xff, 0x74, 0x28, 0xd4, 0x8d, 0x85, 0x8c, 0xf2, 0xff, 0xff, 0x50, 0xe8, 0x15, 0x32, 0x7, 0, 0x83, 0xc4, 0x10, 0xeb, 0x33, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xd3, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x18, 0xc1, 0xe0, 0x2, 0xff, 0x74, 0x28, 0xe0, 0x8d, 0x85, 0x8c, 0xf2, 0xff, 0xff, 0x50, 0xe8, 0xe0, 0x31, 0x7, 0, 0x83, 0xc4, 0xc, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x1, 0x75, 0x16, 0x8d, 0x95, 0x8c, 0xf2, 0xff, 0xff, 0x8d, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0xe8, 0xf3, 0x31, 0x7, 0, 0xe9, 0x85, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x2, 0x75, 0x12, 0xba, 0xcf, 0x23, 0x1a, 0x10, 0x8d, 0x85, 0x8c, 0xf2, 0xff, 0xff, 0xe8, 0xd5, 0x31, 0x7, 0, 0xeb, 0x10, 0xba, 0xd5, 0x23, 0x1a, 0x10, 0x8d, 0x85, 0x8c, 0xf2, 0xff, 0xff, 0xe8, 0xc3, 0x31, 0x7, 0, 0x8d, 0x85, 0x8c, 0xf2, 0xff, 0xff, 0xe8, 0x4e, 0xf1, 0x7, 0, 0x89, 0xc2, 0x8d, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0xe8, 0x41, 0xf1, 0x7, 0, 0x1, 0xd0, 0x3d, 0xb9, 0xb, 0, 0, 0x73, 0xc, 0xc7, 0x85, 0x88, 0xf2, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0x1c, 0xb9, 0x92, 0x5, 0, 0, 0xbb, 0xd8, 0x23, 0x1a, 0x10, 0xba, 0xe4, 0x23, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xe1, 0x2f, 0x7, 0, 0x89, 0x85, 0x88, 0xf2, 0xff, 0xff, 0x8d, 0x95, 0x1c, 0xf4, 0xff, 0xff, 0x8d, 0x85, 0x8c, 0xf2, 0xff, 0xff, 0xe8, 0xcb, 0xfd, 0xff, 0xff, 0xe9, 0x7a, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0xf, 0x8e, 0xa2, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0xe8, 0xaf, 0xfc, 0x7, 0, 0x88, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x1, 0x75, 0x44, 0xba, 0x24, 0x24, 0x1a, 0x10, 0x8d, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0xe8, 0x2c, 0x31, 0x7, 0, 0xba, 0x28, 0x24, 0x1a, 0x10, 0x8d, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0xe8, 0x1c, 0x31, 0x7, 0, 0x80, 0x7d, 0xf8, 0, 0x74, 0x1c, 0xe8, 0x50, 0x26, 0xfe, 0xff, 0xf, 0xbf, 0xc8, 0xbb, 0x54, 0x4, 0, 0, 0xba, 0x4f, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xb3, 0xac, 0x4, 0, 0xeb, 0x42, 0xba, 0x3e, 0x24, 0x1a, 0x10, 0x8d, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0xe8, 0xe8, 0x30, 0x7, 0, 0xba, 0x43, 0x24, 0x1a, 0x10, 0x8d, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0xe8, 0xd8, 0x30, 0x7, 0, 0x80, 0x7d, 0xf8, 0, 0x74, 0x1c, 0xe8, 0xc, 0x26, 0xfe, 0xff, 0xf, 0xbf, 0xc8, 0xbb, 0x4e, 0x4, 0, 0, 0xba, 0x4b, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x6f, 0xac, 0x4, 0, 0xff, 0x35, 0xdc, 0x37, 0x1c, 0x10, 0xb8, 0x59, 0x24, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x8c, 0xf2, 0xff, 0xff, 0x50, 0xe8, 0x6e, 0x30, 0x7, 0, 0x83, 0xc4, 0xc, 0x8d, 0x95, 0x1c, 0xf4, 0xff, 0xff, 0x8d, 0x85, 0x8c, 0xf2, 0xff, 0xff, 0xe8, 0xec, 0xfc, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x85, 0x1c, 0xf4, 0xff, 0xff, 0xe8, 0x65, 0x2e, 0x2, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f2bf4, 0x5)   pushd(0xda4);                         /* push dword 0xda4 */
    II(0x100f2bf9, 0x5)   calld(sys_check_available_stack_size, 0x73154); /* call 0x10165d52 */
    II(0x100f2bfe, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f2bff, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f2c00, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f2c01, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f2c02, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f2c03, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f2c04, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f2c06, 0x6)   sub(esp, 0xd78);                      /* sub esp, 0xd78 */
    II(0x100f2c0c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f2c0f, 0x3)   lea(edi, ebp - 0x20);                 /* lea edi, [ebp-0x20] */
    II(0x100f2c12, 0x5)   mov(esi, 0x101b8aa0);                 /* mov esi, 0x101b8aa0 */
    II(0x100f2c17, 0x1)   movsd_a32();                          /* movsd */
    II(0x100f2c18, 0x1)   movsd_a32();                          /* movsd */
    II(0x100f2c19, 0x1)   movsd_a32();                          /* movsd */
    II(0x100f2c1a, 0x3)   lea(edi, ebp - 0x2c);                 /* lea edi, [ebp-0x2c] */
    II(0x100f2c1d, 0x5)   mov(esi, 0x101b8aac);                 /* mov esi, 0x101b8aac */
    II(0x100f2c22, 0x1)   movsd_a32();                          /* movsd */
    II(0x100f2c23, 0x1)   movsd_a32();                          /* movsd */
    II(0x100f2c24, 0x1)   movsd_a32();                          /* movsd */
    II(0x100f2c25, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100f2c2c, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100f2c33, 0x7)   mov(memb_a32(ss, ebp - 0xbe4), 0);    /* mov byte [ebp+0xfffff41c], 0x0 */
    II(0x100f2c3a, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100f2c3e, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x5c);  /* mov dword [ebp-0x14], 0x5c */
    II(0x100f2c45, 0x2)   jmpd(0x100f2c4d, 0x6);                /* jmp 0x100f2c4d */
l_0x100f2c47:
    II(0x100f2c47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f2c4a, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
l_0x100f2c4d:
    II(0x100f2c4d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2c51, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f2c53, 0x6)   jld(0x100f2dcd, 0x174);               /* jl dword 0x100f2dcd */
    II(0x100f2c59, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2c5d, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100f2c5f, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100f2c62, 0x4)   cmp(memw_a32(ds, eax), 0);            /* cmp word [eax], 0x0 */
    II(0x100f2c66, 0x6)   jzd(0x100f2dc8, 0x15c);               /* jz dword 0x100f2dc8 */
    II(0x100f2c6c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f2c6e, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f2c73, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100f2c76, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2c7a, 0x5)   calld(0x100d4b64, -0x1e11b);          /* call 0x100d4b64 */
    II(0x100f2c7f, 0x1)   cwde();                               /* cwde */
    II(0x100f2c80, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f2c83, 0x2)   jled(0x100f2c89, 0x4);                /* jle 0x100f2c89 */
    II(0x100f2c85, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x100f2c89:
    II(0x100f2c89, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2c8d, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100f2c8f, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100f2c92, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100f2c95, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100f2c98, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f2c9b, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
    II(0x100f2c9e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2ca2, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100f2ca4, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100f2ca7, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100f2caa, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f2cad, 0x2)   jled(0x100f2cf1, 0x42);               /* jle 0x100f2cf1 */
    II(0x100f2caf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2cb3, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100f2cb6, 0x6)   pushd(memd_a32(ds, eax + 0x101c81db)); /* push dword [eax+0x101c81db] */
    II(0x100f2cbc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2cc0, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100f2cc2, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100f2cc5, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100f2cc8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f2cc9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2ccd, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100f2cd0, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81d3)); /* mov eax, [eax+0x101c81d3] */
    II(0x100f2cd6, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100f2cd9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f2cdc, 0x4)   pushd(memd_a32(ds, eax + ebp - 0x2c)); /* push dword [eax+ebp-0x2c] */
    II(0x100f2ce0, 0x6)   lea(eax, ebp - 0xd74);                /* lea eax, [ebp+0xfffff28c] */
    II(0x100f2ce6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f2ce7, 0x5)   calld(sys_sprintf, 0x73215);          /* call 0x10165f01 */
    II(0x100f2cec, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100f2cef, 0x2)   jmpd(0x100f2d24, 0x33);               /* jmp 0x100f2d24 */
l_0x100f2cf1:
    II(0x100f2cf1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2cf5, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100f2cf8, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x100f2cfe, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f2d02, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100f2d05, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81d3)); /* mov eax, [eax+0x101c81d3] */
    II(0x100f2d0b, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100f2d0e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f2d11, 0x4)   pushd(memd_a32(ds, eax + ebp - 0x20)); /* push dword [eax+ebp-0x20] */
    II(0x100f2d15, 0x6)   lea(eax, ebp - 0xd74);                /* lea eax, [ebp+0xfffff28c] */
    II(0x100f2d1b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f2d1c, 0x5)   calld(sys_sprintf, 0x731e0);          /* call 0x10165f01 */
    II(0x100f2d21, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
l_0x100f2d24:
    II(0x100f2d24, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f2d28, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f2d2b, 0x2)   jnzd(0x100f2d43, 0x16);               /* jnz 0x100f2d43 */
    II(0x100f2d2d, 0x6)   lea(edx, ebp - 0xd74);                /* lea edx, [ebp+0xfffff28c] */
    II(0x100f2d33, 0x6)   lea(eax, ebp - 0xbe4);                /* lea eax, [ebp+0xfffff41c] */
    II(0x100f2d39, 0x5)   calld(sys_strcat, 0x731f3);           /* call 0x10165f31 */
    II(0x100f2d3e, 0x5)   jmpd(0x100f2dc8, 0x85);               /* jmp 0x100f2dc8 */
l_0x100f2d43:
    II(0x100f2d43, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f2d47, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100f2d4a, 0x2)   jnzd(0x100f2d5e, 0x12);               /* jnz 0x100f2d5e */
    II(0x100f2d4c, 0x5)   mov(edx, 0x101a23cf);                 /* mov edx, 0x101a23cf */ /* " and " */
    II(0x100f2d51, 0x6)   lea(eax, ebp - 0xd74);                /* lea eax, [ebp+0xfffff28c] */
    II(0x100f2d57, 0x5)   calld(sys_strcat, 0x731d5);           /* call 0x10165f31 */
    II(0x100f2d5c, 0x2)   jmpd(0x100f2d6e, 0x10);               /* jmp 0x100f2d6e */
l_0x100f2d5e:
    II(0x100f2d5e, 0x5)   mov(edx, 0x101a23d5);                 /* mov edx, 0x101a23d5 */ /* ", " */
    II(0x100f2d63, 0x6)   lea(eax, ebp - 0xd74);                /* lea eax, [ebp+0xfffff28c] */
    II(0x100f2d69, 0x5)   calld(sys_strcat, 0x731c3);           /* call 0x10165f31 */
l_0x100f2d6e:
    II(0x100f2d6e, 0x6)   lea(eax, ebp - 0xd74);                /* lea eax, [ebp+0xfffff28c] */
    II(0x100f2d74, 0x5)   calld(sys_strlen, 0x7f14e);           /* call 0x10171ec7 */
    II(0x100f2d79, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100f2d7b, 0x6)   lea(eax, ebp - 0xbe4);                /* lea eax, [ebp+0xfffff41c] */
    II(0x100f2d81, 0x5)   calld(sys_strlen, 0x7f141);           /* call 0x10171ec7 */
    II(0x100f2d86, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100f2d88, 0x5)   cmp(eax, 0xbb9);                      /* cmp eax, 0xbb9 */
    II(0x100f2d8d, 0x2)   jaed(0x100f2d9b, 0xc);                /* jae 0x100f2d9b */
    II(0x100f2d8f, 0xa)   mov(memd_a32(ss, ebp - 0xd78), 0);    /* mov dword [ebp+0xfffff288], 0x0 */
    II(0x100f2d99, 0x2)   jmpd(0x100f2db7, 0x1c);               /* jmp 0x100f2db7 */
l_0x100f2d9b:
    II(0x100f2d9b, 0x5)   mov(ecx, 0x592);                      /* mov ecx, 0x592 */
    II(0x100f2da0, 0x5)   mov(ebx, 0x101a23d8);                 /* mov ebx, 0x101a23d8 */ /* "gamemgr.cpp" */
    II(0x100f2da5, 0x5)   mov(edx, 0x101a23e4);                 /* mov edx, 0x101a23e4 */ /* "strlen( new_chunk ) + strlen( message ) < sizeof( message ) + 1" */
    II(0x100f2daa, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f2dac, 0x5)   calld(sys_assert, 0x72fe1);           /* call 0x10165d92 */
    II(0x100f2db1, 0x6)   mov(memd_a32(ss, ebp - 0xd78), eax);  /* mov [ebp+0xfffff288], eax */
l_0x100f2db7:
    II(0x100f2db7, 0x6)   lea(edx, ebp - 0xbe4);                /* lea edx, [ebp+0xfffff41c] */
    II(0x100f2dbd, 0x6)   lea(eax, ebp - 0xd74);                /* lea eax, [ebp+0xfffff28c] */
    II(0x100f2dc3, 0x5)   calld(0x100f2b93, -0x235);            /* call 0x100f2b93 */
l_0x100f2dc8:
    II(0x100f2dc8, 0x5)   jmpd(0x100f2c47, -0x186);             /* jmp 0x100f2c47 */
l_0x100f2dcd:
    II(0x100f2dcd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100f2dd1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f2dd3, 0x6)   jled(0x100f2e7b, 0xa2);               /* jle dword 0x100f2e7b */
    II(0x100f2dd9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f2ddb, 0x6)   mov(al, memb_a32(ss, ebp - 0xbe4));   /* mov al, [ebp+0xfffff41c] */
    II(0x100f2de1, 0x5)   calld(sys_tolower, 0x7fcaf);          /* call 0x10172a95 */
    II(0x100f2de6, 0x6)   mov(memb_a32(ss, ebp - 0xbe4), al);   /* mov [ebp+0xfffff41c], al */
    II(0x100f2dec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100f2df0, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f2df3, 0x2)   jnzd(0x100f2e39, 0x44);               /* jnz 0x100f2e39 */
    II(0x100f2df5, 0x5)   mov(edx, 0x101a2424);                 /* mov edx, 0x101a2424 */ /* " is" */
    II(0x100f2dfa, 0x6)   lea(eax, ebp - 0xbe4);                /* lea eax, [ebp+0xfffff41c] */
    II(0x100f2e00, 0x5)   calld(sys_strcat, 0x7312c);           /* call 0x10165f31 */
    II(0x100f2e05, 0x5)   mov(edx, 0x101a2428);                 /* mov edx, 0x101a2428 */ /* " available this turn." */
    II(0x100f2e0a, 0x6)   lea(eax, ebp - 0xbe4);                /* lea eax, [ebp+0xfffff41c] */
    II(0x100f2e10, 0x5)   calld(sys_strcat, 0x7311c);           /* call 0x10165f31 */
    II(0x100f2e15, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x100f2e19, 0x2)   jzd(0x100f2e37, 0x1c);                /* jz 0x100f2e37 */
    II(0x100f2e1b, 0x5)   calld(0x100d5470, -0x1d9b0);          /* call 0x100d5470 */
    II(0x100f2e20, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100f2e23, 0x5)   mov(ebx, 0x454);                      /* mov ebx, 0x454 */
    II(0x100f2e28, 0x5)   mov(edx, 0x44f);                      /* mov edx, 0x44f */
    II(0x100f2e2d, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f2e32, 0x5)   calld(0x1013daea, 0x4acb3);           /* call 0x1013daea */
l_0x100f2e37:
    II(0x100f2e37, 0x2)   jmpd(0x100f2e7b, 0x42);               /* jmp 0x100f2e7b */
l_0x100f2e39:
    II(0x100f2e39, 0x5)   mov(edx, 0x101a243e);                 /* mov edx, 0x101a243e */ /* " are" */
    II(0x100f2e3e, 0x6)   lea(eax, ebp - 0xbe4);                /* lea eax, [ebp+0xfffff41c] */
    II(0x100f2e44, 0x5)   calld(sys_strcat, 0x730e8);           /* call 0x10165f31 */
    II(0x100f2e49, 0x5)   mov(edx, 0x101a2443);                 /* mov edx, 0x101a2443 */ /* " available this turn." */
    II(0x100f2e4e, 0x6)   lea(eax, ebp - 0xbe4);                /* lea eax, [ebp+0xfffff41c] */
    II(0x100f2e54, 0x5)   calld(sys_strcat, 0x730d8);           /* call 0x10165f31 */
    II(0x100f2e59, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x100f2e5d, 0x2)   jzd(0x100f2e7b, 0x1c);                /* jz 0x100f2e7b */
    II(0x100f2e5f, 0x5)   calld(0x100d5470, -0x1d9f4);          /* call 0x100d5470 */
    II(0x100f2e64, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100f2e67, 0x5)   mov(ebx, 0x44e);                      /* mov ebx, 0x44e */
    II(0x100f2e6c, 0x5)   mov(edx, 0x44b);                      /* mov edx, 0x44b */
    II(0x100f2e71, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f2e76, 0x5)   calld(0x1013daea, 0x4ac6f);           /* call 0x1013daea */
l_0x100f2e7b:
    II(0x100f2e7b, 0x6)   pushd(memd_a32(ds, 0x101c37dc));      /* push dword [0x101c37dc] */
    II(0x100f2e81, 0x5)   mov(eax, 0x101a2459);                 /* mov eax, 0x101a2459 */ /* "Begin turn %i.\n" */
    II(0x100f2e86, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f2e87, 0x6)   lea(eax, ebp - 0xd74);                /* lea eax, [ebp+0xfffff28c] */
    II(0x100f2e8d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f2e8e, 0x5)   calld(sys_sprintf, 0x7306e);          /* call 0x10165f01 */
    II(0x100f2e93, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100f2e96, 0x6)   lea(edx, ebp - 0xbe4);                /* lea edx, [ebp+0xfffff41c] */
    II(0x100f2e9c, 0x6)   lea(eax, ebp - 0xd74);                /* lea eax, [ebp+0xfffff28c] */
    II(0x100f2ea2, 0x5)   calld(0x100f2b93, -0x314);            /* call 0x100f2b93 */
    II(0x100f2ea7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f2eac, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f2ead, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100f2eaf, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f2eb1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f2eb3, 0x6)   lea(eax, ebp - 0xbe4);                /* lea eax, [ebp+0xfffff41c] */
    II(0x100f2eb9, 0x5)   calld(0x10115d23, 0x22e65);           /* call 0x10115d23 */
    II(0x100f2ebe, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f2ec0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f2ec1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f2ec2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f2ec3, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f2ec4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f2ec5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f2ec6, 0x1)   retd();                               /* ret */
FUNC_END

