FUNC_BEGIN(0x100ae6e2, 0x68146f51bdf5239c, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0x66, 0x76, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x69, 0x7e, 0xfc, 0xff, 0xe8, 0x42, 0x43, 0xa, 0, 0x84, 0xc0, 0x74, 0x22, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0xd4, 0x3, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0xb5, 0x7d, 0xfc, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf8, 0xfe, 0xc6, 0x45, 0xf4, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x23, 0xcd, 0xfd, 0xff, 0x89, 0x45, 0xe8, 0x83, 0x45, 0xe8, 0xff, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x7c, 0x3d, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xad, 0xc2, 0xff, 0xff, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1a, 0x75, 0x1c, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x92, 0xc2, 0xff, 0xff, 0x66, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1c, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0xb7, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0xf, 0x8c, 0xef, 0x2, 0, 0, 0x8b, 0x45, 0xe8, 0xff, 0x4d, 0xe8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x5f, 0xc2, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1a, 0xe8, 0x6e, 0xa3, 0xfd, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x1f, 0xfd, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xb9, 0x2, 0, 0, 0xc6, 0x45, 0xf4, 0x1, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0x3b, 0x4d, 0x5, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x2c, 0x7c, 0xfc, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xde, 0x83, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x4d, 0xc5, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0xb1, 0x1, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x6c, 0x7b, 0xfc, 0xff, 0xf6, 0x40, 0x12, 0x40, 0xf, 0x84, 0x9a, 0x1, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x5a, 0x7b, 0xfc, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0x4c, 0x7b, 0xfc, 0xff, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x2, 0xeb, 0x61, 0xe8, 0x5b, 0xbf, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xe4, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x8d, 0x75, 0xb, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x16, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xe0, 0xe8, 0x3c, 0x50, 0xff, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd4, 0x8b, 0x55, 0xd4, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x5d, 0xe4, 0xe8, 0x8, 0x65, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xb4, 0x76, 0xfc, 0xff, 0xe9, 0x52, 0x2, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xdb, 0x7a, 0xfc, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x15, 0x8d, 0x45, 0xf0, 0xe8, 0xc1, 0x7a, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x7d, 0x20, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x75, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x6e, 0x76, 0xfc, 0xff, 0xe9, 0xc, 0x2, 0, 0, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xd1, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3c, 0xe8, 0xf8, 0xc3, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0xa8, 0, 0, 0, 0xb8, 0x1f, 0, 0, 0, 0xe8, 0xd5, 0x74, 0xb, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x25, 0x8b, 0x5d, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x88, 0x7c, 0xfc, 0xff, 0x8b, 0x4d, 0xd0, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x83, 0x8a, 0xff, 0xff, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc4, 0x8b, 0x55, 0xc4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3c, 0xe8, 0x85, 0xdf, 0xfe, 0xff, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x1a, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3c, 0xe8, 0xa0, 0xbe, 0xff, 0xff, 0xe8, 0xce, 0x8b, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x45, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3c, 0xe8, 0x88, 0xbe, 0xff, 0xff, 0xe8, 0xff, 0x97, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3c, 0xe8, 0x48, 0x97, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbb, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xe9, 0x37, 0x1, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x99, 0x75, 0xfc, 0xff, 0xe9, 0x37, 0x1, 0, 0, 0xe9, 0x35, 0xfe, 0xff, 0xff, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x51, 0x79, 0xfc, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x49, 0x7a, 0xfc, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xfb, 0x81, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x6a, 0xc3, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x8a, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x89, 0x79, 0xfc, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0x7b, 0x79, 0xfc, 0xff, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x2, 0xeb, 0x1a, 0x8d, 0x45, 0xf0, 0xe8, 0x6b, 0x79, 0xfc, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x15, 0x8d, 0x45, 0xf0, 0xe8, 0x4f, 0x79, 0xfc, 0xff, 0x66, 0x8b, 0x50, 0x41, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1a, 0x74, 0x2, 0xeb, 0x15, 0x8d, 0x45, 0xf0, 0xe8, 0x38, 0x79, 0xfc, 0xff, 0x66, 0x8b, 0x50, 0x43, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1c, 0x74, 0x2, 0xeb, 0x1d, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x75, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xe3, 0x74, 0xfc, 0xff, 0xe9, 0x81, 0, 0, 0, 0xc6, 0x45, 0xf4, 0, 0xeb, 0x5, 0xe9, 0x5c, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xf4, 0, 0x75, 0x5, 0xe9, 0x5, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xc5, 0x7a, 0xfc, 0xff, 0x8b, 0x5d, 0xfc, 0x66, 0x8b, 0x53, 0x1a, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xaf, 0x7a, 0xfc, 0xff, 0x8b, 0x5d, 0xfc, 0x66, 0x8b, 0x53, 0x1c, 0x66, 0x89, 0x50, 0x43, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x46, 0x1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x8b, 0x7a, 0xfc, 0xff, 0xe8, 0x32, 0xc6, 0xff, 0xff, 0x31, 0xdb, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xd0, 0x7a, 0xfc, 0xff, 0xe8, 0x4e, 0x45, 0xb, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x5d, 0x74, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ae6e2, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x100ae6e7, 0x5)   calld(sys_check_available_stack_size, 0xb7666); /* call 0x10165d52 */
    II(0x100ae6ec, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ae6ed, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ae6ee, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ae6ef, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ae6f0, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ae6f1, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ae6f2, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ae6f4, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x100ae6fa, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ae6fd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x100ae700, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae703, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae706, 0x5)   calld(0x10076574, -0x38197);          /* call 0x10076574 */
    II(0x100ae70b, 0x5)   calld(0x10152a52, 0xa4342);           /* call 0x10152a52 */
    II(0x100ae710, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae712, 0x2)   jzd(0x100ae736, 0x22);                /* jz 0x100ae736 */
    II(0x100ae714, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ae716, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100ae71b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ae71d, 0x2)   jnzd(0x100ae734, 0x15);               /* jnz 0x100ae734 */
    II(0x100ae71f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae722, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100ae725, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ae728, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae72a, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100ae730, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ae732, 0x2)   jnzd(0x100ae736, 0x2);                /* jnz 0x100ae736 */
l_0x100ae734:
    II(0x100ae734, 0x2)   jmpd(0x100ae73b, 0x5);                /* jmp 0x100ae73b */
l_0x100ae736:
    II(0x100ae736, 0x5)   jmpd(0x100aeb0f, 0x3d4);              /* jmp 0x100aeb0f */
l_0x100ae73b:
    II(0x100ae73b, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100ae73f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae742, 0x5)   calld(0x100764fc, -0x3824b);          /* call 0x100764fc */
    II(0x100ae747, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100ae74a, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100ae74e, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100ae752, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae755, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100ae758, 0x5)   calld(my_3_get_count, -0x232dd);      /* call 0x1008b480 */
    II(0x100ae75d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x100ae760:
    II(0x100ae760, 0x4)   add(memd_a32(ss, ebp - 0x18), -0x1 /* 0xff */); /* add dword [ebp-0x18], 0xff */
    II(0x100ae764, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100ae768, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ae76a, 0x2)   jld(0x100ae7a9, 0x3d);                /* jl 0x100ae7a9 */
    II(0x100ae76c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100ae770, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae773, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100ae776, 0x5)   calld(0x100aaa28, -0x3d53);           /* call 0x100aaa28 */
    II(0x100ae77b, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100ae77e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae781, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1a));    /* cmp dx, [eax+0x1a] */
    II(0x100ae785, 0x2)   jnzd(0x100ae7a3, 0x1c);               /* jnz 0x100ae7a3 */
    II(0x100ae787, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100ae78b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae78e, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100ae791, 0x5)   calld(0x100aaa28, -0x3d6e);           /* call 0x100aaa28 */
    II(0x100ae796, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x100ae79a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae79d, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1c));    /* cmp dx, [eax+0x1c] */
    II(0x100ae7a1, 0x2)   jzd(0x100ae7a5, 0x2);                 /* jz 0x100ae7a5 */
l_0x100ae7a3:
    II(0x100ae7a3, 0x2)   jmpd(0x100ae7a7, 0x2);                /* jmp 0x100ae7a7 */
l_0x100ae7a5:
    II(0x100ae7a5, 0x2)   jmpd(0x100ae7a9, 0x2);                /* jmp 0x100ae7a9 */
l_0x100ae7a7:
    II(0x100ae7a7, 0x2)   jmpd(0x100ae760, -0x49);              /* jmp 0x100ae760 */
l_0x100ae7a9:
    II(0x100ae7a9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100ae7ad, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ae7af, 0x6)   jld(0x100aeaa4, 0x2ef);               /* jl dword 0x100aeaa4 */
    II(0x100ae7b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ae7b8, 0x3)   dec(memd_a32(ss, ebp - 0x18));        /* dec dword [ebp-0x18] */
    II(0x100ae7bb, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100ae7be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae7c1, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100ae7c4, 0x5)   calld(0x100aaa28, -0x3da1);           /* call 0x100aaa28 */
    II(0x100ae7c9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ae7cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae7ce, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100ae7d1, 0x5)   calld(0x10088b44, -0x25c92);          /* call 0x10088b44 */
    II(0x100ae7d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae7d9, 0x5)   calld(0x100ae4fd, -0x2e1);            /* call 0x100ae4fd */
    II(0x100ae7de, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae7e0, 0x6)   jzd(0x100aea9f, 0x2b9);               /* jz dword 0x100aea9f */
    II(0x100ae7e6, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100ae7ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae7ed, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100ae7f0, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100ae7f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae7f6, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100ae7f9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ae7fc, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x100ae801, 0x5)   calld(0x10103541, 0x54d3b);           /* call 0x10103541 */
    II(0x100ae806, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ae808, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae80b, 0x5)   calld(0x1007643c, -0x383d4);          /* call 0x1007643c */
    II(0x100ae810, 0x2)   jmpd(0x100ae81a, 0x8);                /* jmp 0x100ae81a */
l_0x100ae812:
    II(0x100ae812, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae815, 0x5)   calld(0x10076bf8, -0x37c22);          /* call 0x10076bf8 */
l_0x100ae81a:
    II(0x100ae81a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae81c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae81f, 0x5)   calld(0x1013ad71, 0x8c54d);           /* call 0x1013ad71 */
    II(0x100ae824, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae826, 0x6)   jzd(0x100ae9dd, 0x1b1);               /* jz dword 0x100ae9dd */
    II(0x100ae82c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae82f, 0x5)   calld(0x100763a0, -0x38494);          /* call 0x100763a0 */
    II(0x100ae834, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x100ae838, 0x6)   jzd(0x100ae9d8, 0x19a);               /* jz dword 0x100ae9d8 */
    II(0x100ae83e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae841, 0x5)   calld(0x100763a0, -0x384a6);          /* call 0x100763a0 */
    II(0x100ae846, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x100ae84a, 0x2)   jnzd(0x100ae85a, 0xe);                /* jnz 0x100ae85a */
    II(0x100ae84c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae84f, 0x5)   calld(0x100763a0, -0x384b4);          /* call 0x100763a0 */
    II(0x100ae854, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100ae858, 0x2)   jnzd(0x100ae85c, 0x2);                /* jnz 0x100ae85c */
l_0x100ae85a:
    II(0x100ae85a, 0x2)   jmpd(0x100ae8bd, 0x61);               /* jmp 0x100ae8bd */
l_0x100ae85c:
    II(0x100ae85c, 0x5)   calld(0x1008a7bc, -0x240a5);          /* call 0x1008a7bc */
    II(0x100ae861, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ae866, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100ae869, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x100ae86e, 0x5)   calld(sys_new, 0xb758d);              /* call 0x10165e00 */
    II(0x100ae873, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100ae876, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100ae879, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100ae87c, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100ae880, 0x2)   jzd(0x100ae898, 0x16);                /* jz 0x100ae898 */
    II(0x100ae882, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ae885, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100ae888, 0x5)   calld(my_ctor_c11, -0xafc4);          /* call 0x100a38c9 */
    II(0x100ae88d, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100ae890, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ae893, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100ae896, 0x2)   jmpd(0x100ae89e, 0x6);                /* jmp 0x100ae89e */
l_0x100ae898:
    II(0x100ae898, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ae89b, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100ae89e:
    II(0x100ae89e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2c));   /* mov edx, [ebp-0x2c] */
    II(0x100ae8a1, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100ae8a6, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x1c));   /* mov ebx, [ebp-0x1c] */
    II(0x100ae8a9, 0x5)   calld(0x100a4db6, -0x9af8);           /* call 0x100a4db6 */
    II(0x100ae8ae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae8b0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae8b3, 0x5)   calld(0x10075f6c, -0x3894c);          /* call 0x10075f6c */
    II(0x100ae8b8, 0x5)   jmpd(0x100aeb0f, 0x252);              /* jmp 0x100aeb0f */
l_0x100ae8bd:
    II(0x100ae8bd, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae8c0, 0x5)   calld(0x100763a0, -0x38525);          /* call 0x100763a0 */
    II(0x100ae8c5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae8c7, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ae8ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae8cd, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100ae8d0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ae8d3, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ae8d5, 0x2)   jnzd(0x100ae8ec, 0x15);               /* jnz 0x100ae8ec */
    II(0x100ae8d7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae8da, 0x5)   calld(0x100763a0, -0x3853f);          /* call 0x100763a0 */
    II(0x100ae8df, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100ae8e2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ae8e7, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ae8ea, 0x2)   jged(0x100ae90c, 0x20);               /* jge 0x100ae90c */
l_0x100ae8ec:
    II(0x100ae8ec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100ae8f0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ae8f2, 0x2)   jnzd(0x100ae903, 0xf);                /* jnz 0x100ae903 */
    II(0x100ae8f4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae8f6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae8f9, 0x5)   calld(0x10075f6c, -0x38992);          /* call 0x10075f6c */
    II(0x100ae8fe, 0x5)   jmpd(0x100aeb0f, 0x20c);              /* jmp 0x100aeb0f */
l_0x100ae903:
    II(0x100ae903, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100ae907, 0x5)   jmpd(0x100ae9dd, 0xd1);               /* jmp 0x100ae9dd */
l_0x100ae90c:
    II(0x100ae90c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae90e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae911, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100ae914, 0x5)   calld(0x1013ad11, 0x8c3f8);           /* call 0x1013ad11 */
    II(0x100ae919, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ae91b, 0x6)   jzd(0x100ae9c9, 0xa8);                /* jz dword 0x100ae9c9 */
    II(0x100ae921, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x100ae926, 0x5)   calld(sys_new, 0xb74d5);              /* call 0x10165e00 */
    II(0x100ae92b, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100ae92e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ae931, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100ae934, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100ae938, 0x2)   jzd(0x100ae95f, 0x25);                /* jz 0x100ae95f */
    II(0x100ae93a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100ae93d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae940, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ae943, 0x5)   calld(0x100765d0, -0x38378);          /* call 0x100765d0 */
    II(0x100ae948, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x30));   /* mov ecx, [ebp-0x30] */
    II(0x100ae94b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ae94d, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100ae94f, 0x5)   calld(0x100a73d7, -0x757d);           /* call 0x100a73d7 */
    II(0x100ae954, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100ae957, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100ae95a, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100ae95d, 0x2)   jmpd(0x100ae965, 0x6);                /* jmp 0x100ae965 */
l_0x100ae95f:
    II(0x100ae95f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100ae962, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
l_0x100ae965:
    II(0x100ae965, 0x3)   mov(edx, memd_a32(ss, ebp - 0x3c));   /* mov edx, [ebp-0x3c] */
    II(0x100ae968, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae96b, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100ae96e, 0x5)   calld(0x1009c8f8, -0x1207b);          /* call 0x1009c8f8 */
    II(0x100ae973, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ae976, 0x3)   add(edx, 0x1a);                       /* add edx, 0x1a */
    II(0x100ae979, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae97c, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100ae97f, 0x5)   calld(0x100aa824, -0x4160);           /* call 0x100aa824 */
    II(0x100ae984, 0x5)   calld(0x100a7557, -0x7432);           /* call 0x100a7557 */
    II(0x100ae989, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae98c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae98e, 0x3)   mov(dl, memb_a32(ds, eax + 0x45));    /* mov dl, [eax+0x45] */
    II(0x100ae991, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae994, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100ae997, 0x5)   calld(0x100aa824, -0x4178);           /* call 0x100aa824 */
    II(0x100ae99c, 0x5)   calld(0x100b81a0, 0x97ff);            /* call 0x100b81a0 */
    II(0x100ae9a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae9a4, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100ae9a7, 0x5)   calld(0x100b80f4, 0x9748);            /* call 0x100b80f4 */
    II(0x100ae9ac, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ae9ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ae9b1, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100ae9b4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ae9b7, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100ae9bd, 0x5)   mov(ebx, 0x101c31c4);                 /* mov ebx, 0x101c31c4 */
    II(0x100ae9c2, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100ae9c4, 0x5)   calld(0x100c21b2, 0x137e9);           /* call 0x100c21b2 */
l_0x100ae9c9:
    II(0x100ae9c9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae9cb, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae9ce, 0x5)   calld(0x10075f6c, -0x38a67);          /* call 0x10075f6c */
    II(0x100ae9d3, 0x5)   jmpd(0x100aeb0f, 0x137);              /* jmp 0x100aeb0f */
l_0x100ae9d8:
    II(0x100ae9d8, 0x5)   jmpd(0x100ae812, -0x1cb);             /* jmp 0x100ae812 */
l_0x100ae9dd:
    II(0x100ae9dd, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100ae9e2, 0x5)   calld(0x10076338, -0x386af);          /* call 0x10076338 */
    II(0x100ae9e7, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100ae9ea, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ae9ec, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ae9ee, 0x5)   calld(0x1007643c, -0x385b7);          /* call 0x1007643c */
    II(0x100ae9f3, 0x2)   jmpd(0x100ae9fd, 0x8);                /* jmp 0x100ae9fd */
l_0x100ae9f5:
    II(0x100ae9f5, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ae9f8, 0x5)   calld(0x10076bf8, -0x37e05);          /* call 0x10076bf8 */
l_0x100ae9fd:
    II(0x100ae9fd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ae9ff, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100aea02, 0x5)   calld(0x1013ad71, 0x8c36a);           /* call 0x1013ad71 */
    II(0x100aea07, 0x2)   test(al, al);                         /* test al, al */
    II(0x100aea09, 0x6)   jzd(0x100aea99, 0x8a);                /* jz dword 0x100aea99 */
    II(0x100aea0f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100aea12, 0x5)   calld(0x100763a0, -0x38677);          /* call 0x100763a0 */
    II(0x100aea17, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x100aea1b, 0x2)   jnzd(0x100aea2b, 0xe);                /* jnz 0x100aea2b */
    II(0x100aea1d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100aea20, 0x5)   calld(0x100763a0, -0x38685);          /* call 0x100763a0 */
    II(0x100aea25, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100aea29, 0x2)   jnzd(0x100aea2d, 0x2);                /* jnz 0x100aea2d */
l_0x100aea2b:
    II(0x100aea2b, 0x2)   jmpd(0x100aea47, 0x1a);               /* jmp 0x100aea47 */
l_0x100aea2d:
    II(0x100aea2d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100aea30, 0x5)   calld(0x100763a0, -0x38695);          /* call 0x100763a0 */
    II(0x100aea35, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aea37, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100aea3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aea3d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100aea40, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100aea43, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100aea45, 0x2)   jzd(0x100aea49, 0x2);                 /* jz 0x100aea49 */
l_0x100aea47:
    II(0x100aea47, 0x2)   jmpd(0x100aea5e, 0x15);               /* jmp 0x100aea5e */
l_0x100aea49:
    II(0x100aea49, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100aea4c, 0x5)   calld(0x100763a0, -0x386b1);          /* call 0x100763a0 */
    II(0x100aea51, 0x4)   mov(dx, memw_a32(ds, eax + 0x41));    /* mov dx, [eax+0x41] */
    II(0x100aea55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aea58, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1a));    /* cmp dx, [eax+0x1a] */
    II(0x100aea5c, 0x2)   jzd(0x100aea60, 0x2);                 /* jz 0x100aea60 */
l_0x100aea5e:
    II(0x100aea5e, 0x2)   jmpd(0x100aea75, 0x15);               /* jmp 0x100aea75 */
l_0x100aea60:
    II(0x100aea60, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100aea63, 0x5)   calld(0x100763a0, -0x386c8);          /* call 0x100763a0 */
    II(0x100aea68, 0x4)   mov(dx, memw_a32(ds, eax + 0x43));    /* mov dx, [eax+0x43] */
    II(0x100aea6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aea6f, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1c));    /* cmp dx, [eax+0x1c] */
    II(0x100aea73, 0x2)   jzd(0x100aea77, 0x2);                 /* jz 0x100aea77 */
l_0x100aea75:
    II(0x100aea75, 0x2)   jmpd(0x100aea94, 0x1d);               /* jmp 0x100aea94 */
l_0x100aea77:
    II(0x100aea77, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100aea7b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100aea7d, 0x2)   jnzd(0x100aea8e, 0xf);                /* jnz 0x100aea8e */
    II(0x100aea7f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aea81, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100aea84, 0x5)   calld(0x10075f6c, -0x38b1d);          /* call 0x10075f6c */
    II(0x100aea89, 0x5)   jmpd(0x100aeb0f, 0x81);               /* jmp 0x100aeb0f */
l_0x100aea8e:
    II(0x100aea8e, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100aea92, 0x2)   jmpd(0x100aea99, 0x5);                /* jmp 0x100aea99 */
l_0x100aea94:
    II(0x100aea94, 0x5)   jmpd(0x100ae9f5, -0xa4);              /* jmp 0x100ae9f5 */
l_0x100aea99:
    II(0x100aea99, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x100aea9d, 0x2)   jnzd(0x100aeaa4, 0x5);                /* jnz 0x100aeaa4 */
l_0x100aea9f:
    II(0x100aea9f, 0x5)   jmpd(0x100ae7a9, -0x2fb);             /* jmp 0x100ae7a9 */
l_0x100aeaa4:
    II(0x100aeaa4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeaa7, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aeaaa, 0x5)   calld(0x10076574, -0x3853b);          /* call 0x10076574 */
    II(0x100aeaaf, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100aeab2, 0x4)   mov(dx, memw_a32(ds, ebx + 0x1a));    /* mov dx, [ebx+0x1a] */
    II(0x100aeab6, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x100aeaba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeabd, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aeac0, 0x5)   calld(0x10076574, -0x38551);          /* call 0x10076574 */
    II(0x100aeac5, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100aeac8, 0x4)   mov(dx, memw_a32(ds, ebx + 0x1c));    /* mov dx, [ebx+0x1c] */
    II(0x100aeacc, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x100aead0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aead3, 0x4)   mov(memb_a32(ds, eax + 0x46), 0x1);   /* mov byte [eax+0x46], 0x1 */
    II(0x100aead7, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100aead9, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100aeade, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeae1, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aeae4, 0x5)   calld(0x10076574, -0x38575);          /* call 0x10076574 */
    II(0x100aeae9, 0x5)   calld(0x100ab120, -0x39ce);           /* call 0x100ab120 */
    II(0x100aeaee, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100aeaf0, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100aeaf5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100aeaf8, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100aeafb, 0x5)   calld(0x100765d0, -0x38530);          /* call 0x100765d0 */
    II(0x100aeb00, 0x5)   calld(0x10163053, 0xb454e);           /* call 0x10163053 */
    II(0x100aeb05, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100aeb07, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100aeb0a, 0x5)   calld(0x10075f6c, -0x38ba3);          /* call 0x10075f6c */
l_0x100aeb0f:
    II(0x100aeb0f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100aeb11, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100aeb12, 0x1)   popd(edi);                            /* pop edi */
    II(0x100aeb13, 0x1)   popd(esi);                            /* pop esi */
    II(0x100aeb14, 0x1)   popd(edx);                            /* pop edx */
    II(0x100aeb15, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100aeb16, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100aeb17, 0x1)   retd();                               /* ret */
FUNC_END

