FUNC_BEGIN(0x1015ec73, 0x39847a6e6d3d2172, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0xd5, 0x70, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0x8b, 0x55, 0xfc, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xec, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0x4b, 0x7a, 0xf1, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0xe8, 0xf4, 0xb2, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf7, 0x40, 0x12, 0x18, 0, 0x80, 0, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x1, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x59, 0x72, 0xf1, 0xff, 0xe9, 0xeb, 0x5, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xd8, 0x2, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xd8, 0x1, 0, 0, 0, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xef, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0x74, 0xa, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x80, 0x13, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x28, 0x75, 0xa, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x80, 0x15, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0x74, 0xa, 0x8b, 0x45, 0xdc, 0x66, 0xff, 0x80, 0x17, 0x1, 0, 0, 0x31, 0xc9, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xb9, 0x65, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xae, 0x78, 0xf1, 0xff, 0x89, 0xca, 0xe8, 0xe8, 0xbf, 0xfd, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x74, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x48, 0x69, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0xd4, 0x77, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xc3, 0x77, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x10, 0xeb, 0x41, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xe8, 0x40, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x63, 0x65, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x26, 0x80, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x8e, 0x77, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x10, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x80, 0x77, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x20, 0x8d, 0x45, 0xe0, 0xe8, 0x74, 0x77, 0xf1, 0xff, 0xe8, 0xa3, 0xb1, 0xfe, 0xff, 0x31, 0xc9, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x14, 0x65, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x9, 0x78, 0xf1, 0xff, 0x89, 0xca, 0xe8, 0x43, 0xbf, 0xfd, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x76, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x48, 0x69, 0x10, 0x8d, 0x45, 0xe0, 0xe8, 0x2f, 0x77, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x1e, 0x77, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x1, 0xeb, 0x43, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xe8, 0x40, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xbc, 0x64, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x7f, 0x7f, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xe7, 0x76, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x1, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0xd9, 0x76, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x2, 0x8d, 0x45, 0xe0, 0xe8, 0xcd, 0x76, 0xf1, 0xff, 0xe8, 0xfc, 0xb0, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0xf, 0x84, 0x4a, 0x1, 0, 0, 0x31, 0xc9, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xe8, 0x40, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x5f, 0x64, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x54, 0x77, 0xf1, 0xff, 0x89, 0xca, 0xe8, 0x8e, 0xbe, 0xfd, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x71, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x48, 0x69, 0x2, 0x8d, 0x45, 0xe0, 0xe8, 0x7a, 0x76, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x69, 0x76, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x10, 0xeb, 0x3e, 0x8b, 0x45, 0xf4, 0x48, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xc, 0x64, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xcf, 0x7e, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x37, 0x76, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x20, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x29, 0x76, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x10, 0x8d, 0x45, 0xe0, 0xe8, 0x1d, 0x76, 0xf1, 0xff, 0xe8, 0x4c, 0xb0, 0xfe, 0xff, 0x31, 0xc9, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xe8, 0x40, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xba, 0x63, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xaf, 0x76, 0xf1, 0xff, 0x89, 0xca, 0xe8, 0xe9, 0xbd, 0xfd, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x73, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x48, 0x69, 0x20, 0x8d, 0x45, 0xe0, 0xe8, 0xd5, 0x75, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xc4, 0x75, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x1, 0xeb, 0x40, 0x8b, 0x45, 0xf4, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x65, 0x63, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x28, 0x7e, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x90, 0x75, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x2, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x82, 0x75, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0x76, 0x75, 0xf1, 0xff, 0xe8, 0xa5, 0xaf, 0xfe, 0xff, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xf4, 0x8b, 0x45, 0xe8, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x16, 0x63, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xb, 0x76, 0xf1, 0xff, 0x89, 0xca, 0xe8, 0x45, 0xbd, 0xfd, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x76, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x48, 0x69, 0x4, 0x8d, 0x45, 0xe0, 0xe8, 0x31, 0x75, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x20, 0x75, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x40, 0xeb, 0x43, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xe8, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xbe, 0x62, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x81, 0x7d, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xe9, 0x74, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x40, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0xdb, 0x74, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x80, 0x8d, 0x45, 0xe0, 0xe8, 0xcf, 0x74, 0xf1, 0xff, 0xe8, 0xfe, 0xae, 0xfe, 0xff, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xf4, 0x8b, 0x45, 0xe8, 0x48, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x71, 0x62, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x66, 0x75, 0xf1, 0xff, 0x89, 0xca, 0xe8, 0xa0, 0xbc, 0xfd, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x74, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x48, 0x69, 0x40, 0x8d, 0x45, 0xe0, 0xe8, 0x8c, 0x74, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x7b, 0x74, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x4, 0xeb, 0x41, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xe8, 0x48, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x1b, 0x62, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xde, 0x7c, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x46, 0x74, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x4, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x38, 0x74, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x8, 0x8d, 0x45, 0xe0, 0xe8, 0x2c, 0x74, 0xf1, 0xff, 0xe8, 0x5b, 0xae, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0xf, 0x84, 0x4a, 0x1, 0, 0, 0x31, 0xc9, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xe8, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xbc, 0x61, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xb1, 0x74, 0xf1, 0xff, 0x89, 0xca, 0xe8, 0xeb, 0xbb, 0xfd, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x73, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x48, 0x69, 0x8, 0x8d, 0x45, 0xe0, 0xe8, 0xd7, 0x73, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xc6, 0x73, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x40, 0xeb, 0x40, 0xf, 0xbf, 0x5d, 0xf4, 0x8b, 0x45, 0xe8, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x67, 0x61, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2a, 0x7c, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x92, 0x73, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x80, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0x84, 0x73, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x40, 0x8d, 0x45, 0xe0, 0xe8, 0x78, 0x73, 0xf1, 0xff, 0xe8, 0xa7, 0xad, 0xfe, 0xff, 0x31, 0xc9, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xe8, 0x48, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x17, 0x61, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xc, 0x74, 0xf1, 0xff, 0x89, 0xca, 0xe8, 0x46, 0xbb, 0xfd, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x71, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x48, 0x69, 0x80, 0x8d, 0x45, 0xe0, 0xe8, 0x32, 0x73, 0xf1, 0xff, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0x21, 0x73, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x4, 0xeb, 0x3e, 0xf, 0xbf, 0x5d, 0xf4, 0x8b, 0x45, 0xe8, 0x48, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xc4, 0x60, 0xf1, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x87, 0x7b, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xe0, 0xe8, 0xef, 0x72, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x8, 0xeb, 0xc, 0x8d, 0x45, 0xe0, 0xe8, 0xe1, 0x72, 0xf1, 0xff, 0x80, 0x48, 0x69, 0x4, 0x8d, 0x45, 0xe0, 0xe8, 0xd5, 0x72, 0xf1, 0xff, 0xe8, 0x4, 0xad, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xec, 0xc8, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x50, 0x6f, 0xf1, 0xff, 0xe8, 0xf3, 0x42, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x69, 0x6c, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015ec73, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x1015ec78, 0x5)   calld(sys_check_available_stack_size, 0x70d5); /* call 0x10165d52 */
    II(0x1015ec7d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015ec7e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015ec7f, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015ec80, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015ec81, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015ec82, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015ec83, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015ec85, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x1015ec8b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1015ec8e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015ec90, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015ec93, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x1015ec96, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015ec99, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1015ec9d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015eca0, 0x5)   calld(my_ctor_0x101b38f8, -0xe85b5);  /* call 0x100766f0 */
    II(0x1015eca5, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1015eca8, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1015ecac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ecaf, 0x5)   calld(0x10149fa8, -0x14d0c);          /* call 0x10149fa8 */
    II(0x1015ecb4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ecb7, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800018); /* test dword [eax+0x12], 0x800018 */
    II(0x1015ecbe, 0x2)   jzd(0x1015ecc9, 0x9);                 /* jz 0x1015ecc9 */
    II(0x1015ecc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ecc3, 0x4)   test(memb_a32(ds, eax + 0x12), 0x1);  /* test byte [eax+0x12], 0x1 */
    II(0x1015ecc7, 0x2)   jzd(0x1015ecd8, 0xf);                 /* jz 0x1015ecd8 */
l_0x1015ecc9:
    II(0x1015ecc9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015eccb, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ecce, 0x5)   calld(0x10075f2c, -0xe8da7);          /* call 0x10075f2c */
    II(0x1015ecd3, 0x5)   jmpd(0x1015f2c3, 0x5eb);              /* jmp 0x1015f2c3 */
l_0x1015ecd8:
    II(0x1015ecd8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ecdb, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1015ecdf, 0x2)   jzd(0x1015ecea, 0x9);                 /* jz 0x1015ecea */
    II(0x1015ece1, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0x2);   /* mov dword [ebp-0x28], 0x2 */
    II(0x1015ece8, 0x2)   jmpd(0x1015ecf1, 0x7);                /* jmp 0x1015ecf1 */
l_0x1015ecea:
    II(0x1015ecea, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0x1);   /* mov dword [ebp-0x28], 0x1 */
l_0x1015ecf1:
    II(0x1015ecf1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1015ecf4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1015ecf7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ecfa, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1015ecfe, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1015ed01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ed04, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1015ed08, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015ed0b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015ed0f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015ed15, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x1015ed1a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1015ed1c, 0x3)   mov(memd_a32(ss, ebp - 0x24), edx);   /* mov [ebp-0x24], edx */
    II(0x1015ed1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ed22, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1015ed25, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015ed28, 0x5)   calld(0x1015ec1c, -0x111);            /* call 0x1015ec1c */
    II(0x1015ed2d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015ed2f, 0x2)   jzd(0x1015ed3b, 0xa);                 /* jz 0x1015ed3b */
    II(0x1015ed31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1015ed34, 0x7)   inc(memw_a32(ds, eax + 0x113));       /* inc word [eax+0x113] */
l_0x1015ed3b:
    II(0x1015ed3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ed3e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x1015ed43, 0x2)   jnzd(0x1015ed4f, 0xa);                /* jnz 0x1015ed4f */
    II(0x1015ed45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1015ed48, 0x7)   inc(memw_a32(ds, eax + 0x115));       /* inc word [eax+0x115] */
l_0x1015ed4f:
    II(0x1015ed4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ed52, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1015ed56, 0x2)   jzd(0x1015ed62, 0xa);                 /* jz 0x1015ed62 */
    II(0x1015ed58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1015ed5b, 0x7)   inc(memw_a32(ds, eax + 0x117));       /* inc word [eax+0x117] */
l_0x1015ed62:
    II(0x1015ed62, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015ed64, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015ed67, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015ed68, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015ed6b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1015ed6f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015ed73, 0x5)   calld(0x10075331, -0xe9a47);          /* call 0x10075331 */
    II(0x1015ed78, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015ed7a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ed7d, 0x5)   calld(0x10076630, -0xe8752);          /* call 0x10076630 */
    II(0x1015ed82, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1015ed84, 0x5)   calld(0x1013ad71, -0x24018);          /* call 0x1013ad71 */
    II(0x1015ed89, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015ed8b, 0x6)   jzd(0x1015ee05, 0x74);                /* jz dword 0x1015ee05 */
    II(0x1015ed91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ed94, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x1);   /* or byte [eax+0x69], 0x1 */
    II(0x1015ed98, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ed9b, 0x5)   calld(0x10076574, -0xe882c);          /* call 0x10076574 */
    II(0x1015eda0, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015eda7, 0x2)   jzd(0x1015edb7, 0xe);                 /* jz 0x1015edb7 */
    II(0x1015eda9, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015edac, 0x5)   calld(0x10076574, -0xe883d);          /* call 0x10076574 */
    II(0x1015edb1, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x10);  /* or byte [eax+0x69], 0x10 */
    II(0x1015edb5, 0x2)   jmpd(0x1015edf8, 0x41);               /* jmp 0x1015edf8 */
l_0x1015edb7:
    II(0x1015edb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015edba, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015edbb, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015edbe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015edc1, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015edc2, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015edc5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015edc9, 0x5)   calld(0x10075331, -0xe9a9d);          /* call 0x10075331 */
    II(0x1015edce, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015edd1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015edd3, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015edd5, 0x5)   calld(0x10076e00, -0xe7fda);          /* call 0x10076e00 */
    II(0x1015edda, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015eddc, 0x2)   jzd(0x1015edec, 0xe);                 /* jz 0x1015edec */
    II(0x1015edde, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ede1, 0x5)   calld(0x10076574, -0xe8872);          /* call 0x10076574 */
    II(0x1015ede6, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x10);  /* or byte [eax+0x69], 0x10 */
    II(0x1015edea, 0x2)   jmpd(0x1015edf8, 0xc);                /* jmp 0x1015edf8 */
l_0x1015edec:
    II(0x1015edec, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015edef, 0x5)   calld(0x10076574, -0xe8880);          /* call 0x10076574 */
    II(0x1015edf4, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x20);  /* or byte [eax+0x69], 0x20 */
l_0x1015edf8:
    II(0x1015edf8, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015edfb, 0x5)   calld(0x10076574, -0xe888c);          /* call 0x10076574 */
    II(0x1015ee00, 0x5)   calld(0x10149fa8, -0x14e5d);          /* call 0x10149fa8 */
l_0x1015ee05:
    II(0x1015ee05, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015ee07, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015ee0a, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015ee0d, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015ee10, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1015ee14, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015ee18, 0x5)   calld(0x10075331, -0xe9aec);          /* call 0x10075331 */
    II(0x1015ee1d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015ee1f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ee22, 0x5)   calld(0x10076630, -0xe87f7);          /* call 0x10076630 */
    II(0x1015ee27, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1015ee29, 0x5)   calld(0x1013ad71, -0x240bd);          /* call 0x1013ad71 */
    II(0x1015ee2e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015ee30, 0x6)   jzd(0x1015eeac, 0x76);                /* jz dword 0x1015eeac */
    II(0x1015ee36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ee39, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x10);  /* or byte [eax+0x69], 0x10 */
    II(0x1015ee3d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ee40, 0x5)   calld(0x10076574, -0xe88d1);          /* call 0x10076574 */
    II(0x1015ee45, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015ee4c, 0x2)   jzd(0x1015ee5c, 0xe);                 /* jz 0x1015ee5c */
    II(0x1015ee4e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ee51, 0x5)   calld(0x10076574, -0xe88e2);          /* call 0x10076574 */
    II(0x1015ee56, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x1);   /* or byte [eax+0x69], 0x1 */
    II(0x1015ee5a, 0x2)   jmpd(0x1015ee9f, 0x43);               /* jmp 0x1015ee9f */
l_0x1015ee5c:
    II(0x1015ee5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015ee5f, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015ee62, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015ee65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015ee68, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015ee69, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015ee6c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015ee70, 0x5)   calld(0x10075331, -0xe9b44);          /* call 0x10075331 */
    II(0x1015ee75, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015ee78, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015ee7a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015ee7c, 0x5)   calld(0x10076e00, -0xe8081);          /* call 0x10076e00 */
    II(0x1015ee81, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015ee83, 0x2)   jzd(0x1015ee93, 0xe);                 /* jz 0x1015ee93 */
    II(0x1015ee85, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ee88, 0x5)   calld(0x10076574, -0xe8919);          /* call 0x10076574 */
    II(0x1015ee8d, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x1);   /* or byte [eax+0x69], 0x1 */
    II(0x1015ee91, 0x2)   jmpd(0x1015ee9f, 0xc);                /* jmp 0x1015ee9f */
l_0x1015ee93:
    II(0x1015ee93, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ee96, 0x5)   calld(0x10076574, -0xe8927);          /* call 0x10076574 */
    II(0x1015ee9b, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x2);   /* or byte [eax+0x69], 0x2 */
l_0x1015ee9f:
    II(0x1015ee9f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015eea2, 0x5)   calld(0x10076574, -0xe8933);          /* call 0x10076574 */
    II(0x1015eea7, 0x5)   calld(0x10149fa8, -0x14f04);          /* call 0x10149fa8 */
l_0x1015eeac:
    II(0x1015eeac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015eeaf, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1015eeb3, 0x6)   jzd(0x1015f003, 0x14a);               /* jz dword 0x1015f003 */
    II(0x1015eeb9, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015eebb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015eebe, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015eebf, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015eec2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015eec5, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015eec6, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015eec9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015eecd, 0x5)   calld(0x10075331, -0xe9ba1);          /* call 0x10075331 */
    II(0x1015eed2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015eed4, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015eed7, 0x5)   calld(0x10076630, -0xe88ac);          /* call 0x10076630 */
    II(0x1015eedc, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1015eede, 0x5)   calld(0x1013ad71, -0x24172);          /* call 0x1013ad71 */
    II(0x1015eee3, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015eee5, 0x6)   jzd(0x1015ef5c, 0x71);                /* jz dword 0x1015ef5c */
    II(0x1015eeeb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015eeee, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x2);   /* or byte [eax+0x69], 0x2 */
    II(0x1015eef2, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015eef5, 0x5)   calld(0x10076574, -0xe8986);          /* call 0x10076574 */
    II(0x1015eefa, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015ef01, 0x2)   jzd(0x1015ef11, 0xe);                 /* jz 0x1015ef11 */
    II(0x1015ef03, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ef06, 0x5)   calld(0x10076574, -0xe8997);          /* call 0x10076574 */
    II(0x1015ef0b, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x10);  /* or byte [eax+0x69], 0x10 */
    II(0x1015ef0f, 0x2)   jmpd(0x1015ef4f, 0x3e);               /* jmp 0x1015ef4f */
l_0x1015ef11:
    II(0x1015ef11, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015ef14, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015ef15, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015ef18, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1015ef1c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015ef20, 0x5)   calld(0x10075331, -0xe9bf4);          /* call 0x10075331 */
    II(0x1015ef25, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015ef28, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015ef2a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015ef2c, 0x5)   calld(0x10076e00, -0xe8131);          /* call 0x10076e00 */
    II(0x1015ef31, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015ef33, 0x2)   jzd(0x1015ef43, 0xe);                 /* jz 0x1015ef43 */
    II(0x1015ef35, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ef38, 0x5)   calld(0x10076574, -0xe89c9);          /* call 0x10076574 */
    II(0x1015ef3d, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x20);  /* or byte [eax+0x69], 0x20 */
    II(0x1015ef41, 0x2)   jmpd(0x1015ef4f, 0xc);                /* jmp 0x1015ef4f */
l_0x1015ef43:
    II(0x1015ef43, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ef46, 0x5)   calld(0x10076574, -0xe89d7);          /* call 0x10076574 */
    II(0x1015ef4b, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x10);  /* or byte [eax+0x69], 0x10 */
l_0x1015ef4f:
    II(0x1015ef4f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ef52, 0x5)   calld(0x10076574, -0xe89e3);          /* call 0x10076574 */
    II(0x1015ef57, 0x5)   calld(0x10149fa8, -0x14fb4);          /* call 0x10149fa8 */
l_0x1015ef5c:
    II(0x1015ef5c, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015ef5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015ef61, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015ef64, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015ef67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015ef6a, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015ef6b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015ef6e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015ef72, 0x5)   calld(0x10075331, -0xe9c46);          /* call 0x10075331 */
    II(0x1015ef77, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015ef79, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ef7c, 0x5)   calld(0x10076630, -0xe8951);          /* call 0x10076630 */
    II(0x1015ef81, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1015ef83, 0x5)   calld(0x1013ad71, -0x24217);          /* call 0x1013ad71 */
    II(0x1015ef88, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015ef8a, 0x6)   jzd(0x1015f003, 0x73);                /* jz dword 0x1015f003 */
    II(0x1015ef90, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ef93, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x20);  /* or byte [eax+0x69], 0x20 */
    II(0x1015ef97, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015ef9a, 0x5)   calld(0x10076574, -0xe8a2b);          /* call 0x10076574 */
    II(0x1015ef9f, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015efa6, 0x2)   jzd(0x1015efb6, 0xe);                 /* jz 0x1015efb6 */
    II(0x1015efa8, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015efab, 0x5)   calld(0x10076574, -0xe8a3c);          /* call 0x10076574 */
    II(0x1015efb0, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x1);   /* or byte [eax+0x69], 0x1 */
    II(0x1015efb4, 0x2)   jmpd(0x1015eff6, 0x40);               /* jmp 0x1015eff6 */
l_0x1015efb6:
    II(0x1015efb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015efb9, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015efbc, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015efbf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1015efc3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015efc7, 0x5)   calld(0x10075331, -0xe9c9b);          /* call 0x10075331 */
    II(0x1015efcc, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015efcf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015efd1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015efd3, 0x5)   calld(0x10076e00, -0xe81d8);          /* call 0x10076e00 */
    II(0x1015efd8, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015efda, 0x2)   jzd(0x1015efea, 0xe);                 /* jz 0x1015efea */
    II(0x1015efdc, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015efdf, 0x5)   calld(0x10076574, -0xe8a70);          /* call 0x10076574 */
    II(0x1015efe4, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x2);   /* or byte [eax+0x69], 0x2 */
    II(0x1015efe8, 0x2)   jmpd(0x1015eff6, 0xc);                /* jmp 0x1015eff6 */
l_0x1015efea:
    II(0x1015efea, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015efed, 0x5)   calld(0x10076574, -0xe8a7e);          /* call 0x10076574 */
    II(0x1015eff2, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x1);   /* or byte [eax+0x69], 0x1 */
l_0x1015eff6:
    II(0x1015eff6, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015eff9, 0x5)   calld(0x10076574, -0xe8a8a);          /* call 0x10076574 */
    II(0x1015effe, 0x5)   calld(0x10149fa8, -0x1505b);          /* call 0x10149fa8 */
l_0x1015f003:
    II(0x1015f003, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015f005, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1015f009, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015f00c, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015f00f, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f012, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015f016, 0x5)   calld(0x10075331, -0xe9cea);          /* call 0x10075331 */
    II(0x1015f01b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f01d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f020, 0x5)   calld(0x10076630, -0xe89f5);          /* call 0x10076630 */
    II(0x1015f025, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1015f027, 0x5)   calld(0x1013ad71, -0x242bb);          /* call 0x1013ad71 */
    II(0x1015f02c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015f02e, 0x6)   jzd(0x1015f0aa, 0x76);                /* jz dword 0x1015f0aa */
    II(0x1015f034, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f037, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x4);   /* or byte [eax+0x69], 0x4 */
    II(0x1015f03b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f03e, 0x5)   calld(0x10076574, -0xe8acf);          /* call 0x10076574 */
    II(0x1015f043, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015f04a, 0x2)   jzd(0x1015f05a, 0xe);                 /* jz 0x1015f05a */
    II(0x1015f04c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f04f, 0x5)   calld(0x10076574, -0xe8ae0);          /* call 0x10076574 */
    II(0x1015f054, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x40);  /* or byte [eax+0x69], 0x40 */
    II(0x1015f058, 0x2)   jmpd(0x1015f09d, 0x43);               /* jmp 0x1015f09d */
l_0x1015f05a:
    II(0x1015f05a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015f05d, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015f05e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015f061, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015f064, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015f067, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f06a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015f06e, 0x5)   calld(0x10075331, -0xe9d42);          /* call 0x10075331 */
    II(0x1015f073, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015f076, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f078, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015f07a, 0x5)   calld(0x10076e00, -0xe827f);          /* call 0x10076e00 */
    II(0x1015f07f, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015f081, 0x2)   jzd(0x1015f091, 0xe);                 /* jz 0x1015f091 */
    II(0x1015f083, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f086, 0x5)   calld(0x10076574, -0xe8b17);          /* call 0x10076574 */
    II(0x1015f08b, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x40);  /* or byte [eax+0x69], 0x40 */
    II(0x1015f08f, 0x2)   jmpd(0x1015f09d, 0xc);                /* jmp 0x1015f09d */
l_0x1015f091:
    II(0x1015f091, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f094, 0x5)   calld(0x10076574, -0xe8b25);          /* call 0x10076574 */
    II(0x1015f099, 0x4)   or_(memb_a32(ds, eax + 0x69), -0x80 /* 0x80 */); /* or byte [eax+0x69], 0x80 */
l_0x1015f09d:
    II(0x1015f09d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f0a0, 0x5)   calld(0x10076574, -0xe8b31);          /* call 0x10076574 */
    II(0x1015f0a5, 0x5)   calld(0x10149fa8, -0x15102);          /* call 0x10149fa8 */
l_0x1015f0aa:
    II(0x1015f0aa, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015f0ac, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1015f0b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015f0b3, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015f0b4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f0b7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015f0bb, 0x5)   calld(0x10075331, -0xe9d8f);          /* call 0x10075331 */
    II(0x1015f0c0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f0c2, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f0c5, 0x5)   calld(0x10076630, -0xe8a9a);          /* call 0x10076630 */
    II(0x1015f0ca, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1015f0cc, 0x5)   calld(0x1013ad71, -0x24360);          /* call 0x1013ad71 */
    II(0x1015f0d1, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015f0d3, 0x6)   jzd(0x1015f14d, 0x74);                /* jz dword 0x1015f14d */
    II(0x1015f0d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f0dc, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x40);  /* or byte [eax+0x69], 0x40 */
    II(0x1015f0e0, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f0e3, 0x5)   calld(0x10076574, -0xe8b74);          /* call 0x10076574 */
    II(0x1015f0e8, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015f0ef, 0x2)   jzd(0x1015f0ff, 0xe);                 /* jz 0x1015f0ff */
    II(0x1015f0f1, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f0f4, 0x5)   calld(0x10076574, -0xe8b85);          /* call 0x10076574 */
    II(0x1015f0f9, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x4);   /* or byte [eax+0x69], 0x4 */
    II(0x1015f0fd, 0x2)   jmpd(0x1015f140, 0x41);               /* jmp 0x1015f140 */
l_0x1015f0ff:
    II(0x1015f0ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015f102, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015f103, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015f106, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015f109, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015f10a, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f10d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015f111, 0x5)   calld(0x10075331, -0xe9de5);          /* call 0x10075331 */
    II(0x1015f116, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015f119, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f11b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015f11d, 0x5)   calld(0x10076e00, -0xe8322);          /* call 0x10076e00 */
    II(0x1015f122, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015f124, 0x2)   jzd(0x1015f134, 0xe);                 /* jz 0x1015f134 */
    II(0x1015f126, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f129, 0x5)   calld(0x10076574, -0xe8bba);          /* call 0x10076574 */
    II(0x1015f12e, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x4);   /* or byte [eax+0x69], 0x4 */
    II(0x1015f132, 0x2)   jmpd(0x1015f140, 0xc);                /* jmp 0x1015f140 */
l_0x1015f134:
    II(0x1015f134, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f137, 0x5)   calld(0x10076574, -0xe8bc8);          /* call 0x10076574 */
    II(0x1015f13c, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x8);   /* or byte [eax+0x69], 0x8 */
l_0x1015f140:
    II(0x1015f140, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f143, 0x5)   calld(0x10076574, -0xe8bd4);          /* call 0x10076574 */
    II(0x1015f148, 0x5)   calld(0x10149fa8, -0x151a5);          /* call 0x10149fa8 */
l_0x1015f14d:
    II(0x1015f14d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f150, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1015f154, 0x6)   jzd(0x1015f2a4, 0x14a);               /* jz dword 0x1015f2a4 */
    II(0x1015f15a, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015f15c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015f15f, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015f160, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015f163, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015f166, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015f169, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f16c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015f170, 0x5)   calld(0x10075331, -0xe9e44);          /* call 0x10075331 */
    II(0x1015f175, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f177, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f17a, 0x5)   calld(0x10076630, -0xe8b4f);          /* call 0x10076630 */
    II(0x1015f17f, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1015f181, 0x5)   calld(0x1013ad71, -0x24415);          /* call 0x1013ad71 */
    II(0x1015f186, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015f188, 0x6)   jzd(0x1015f201, 0x73);                /* jz dword 0x1015f201 */
    II(0x1015f18e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f191, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x8);   /* or byte [eax+0x69], 0x8 */
    II(0x1015f195, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f198, 0x5)   calld(0x10076574, -0xe8c29);          /* call 0x10076574 */
    II(0x1015f19d, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015f1a4, 0x2)   jzd(0x1015f1b4, 0xe);                 /* jz 0x1015f1b4 */
    II(0x1015f1a6, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f1a9, 0x5)   calld(0x10076574, -0xe8c3a);          /* call 0x10076574 */
    II(0x1015f1ae, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x40);  /* or byte [eax+0x69], 0x40 */
    II(0x1015f1b2, 0x2)   jmpd(0x1015f1f4, 0x40);               /* jmp 0x1015f1f4 */
l_0x1015f1b4:
    II(0x1015f1b4, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1015f1b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015f1bb, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1015f1be, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f1c1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015f1c5, 0x5)   calld(0x10075331, -0xe9e99);          /* call 0x10075331 */
    II(0x1015f1ca, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015f1cd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f1cf, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015f1d1, 0x5)   calld(0x10076e00, -0xe83d6);          /* call 0x10076e00 */
    II(0x1015f1d6, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015f1d8, 0x2)   jzd(0x1015f1e8, 0xe);                 /* jz 0x1015f1e8 */
    II(0x1015f1da, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f1dd, 0x5)   calld(0x10076574, -0xe8c6e);          /* call 0x10076574 */
    II(0x1015f1e2, 0x4)   or_(memb_a32(ds, eax + 0x69), -0x80 /* 0x80 */); /* or byte [eax+0x69], 0x80 */
    II(0x1015f1e6, 0x2)   jmpd(0x1015f1f4, 0xc);                /* jmp 0x1015f1f4 */
l_0x1015f1e8:
    II(0x1015f1e8, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f1eb, 0x5)   calld(0x10076574, -0xe8c7c);          /* call 0x10076574 */
    II(0x1015f1f0, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x40);  /* or byte [eax+0x69], 0x40 */
l_0x1015f1f4:
    II(0x1015f1f4, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f1f7, 0x5)   calld(0x10076574, -0xe8c88);          /* call 0x10076574 */
    II(0x1015f1fc, 0x5)   calld(0x10149fa8, -0x15259);          /* call 0x10149fa8 */
l_0x1015f201:
    II(0x1015f201, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015f203, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015f206, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015f207, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015f20a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015f20d, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015f20e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f211, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015f215, 0x5)   calld(0x10075331, -0xe9ee9);          /* call 0x10075331 */
    II(0x1015f21a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f21c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f21f, 0x5)   calld(0x10076630, -0xe8bf4);          /* call 0x10076630 */
    II(0x1015f224, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1015f226, 0x5)   calld(0x1013ad71, -0x244ba);          /* call 0x1013ad71 */
    II(0x1015f22b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015f22d, 0x6)   jzd(0x1015f2a4, 0x71);                /* jz dword 0x1015f2a4 */
    II(0x1015f233, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f236, 0x4)   or_(memb_a32(ds, eax + 0x69), -0x80 /* 0x80 */); /* or byte [eax+0x69], 0x80 */
    II(0x1015f23a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f23d, 0x5)   calld(0x10076574, -0xe8cce);          /* call 0x10076574 */
    II(0x1015f242, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x1015f249, 0x2)   jzd(0x1015f259, 0xe);                 /* jz 0x1015f259 */
    II(0x1015f24b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f24e, 0x5)   calld(0x10076574, -0xe8cdf);          /* call 0x10076574 */
    II(0x1015f253, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x4);   /* or byte [eax+0x69], 0x4 */
    II(0x1015f257, 0x2)   jmpd(0x1015f297, 0x3e);               /* jmp 0x1015f297 */
l_0x1015f259:
    II(0x1015f259, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1015f25d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015f260, 0x1)   dec(eax);                             /* dec eax */
    II(0x1015f261, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015f264, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1015f268, 0x5)   calld(0x10075331, -0xe9f3c);          /* call 0x10075331 */
    II(0x1015f26d, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x1015f270, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f272, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015f274, 0x5)   calld(0x10076e00, -0xe8479);          /* call 0x10076e00 */
    II(0x1015f279, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015f27b, 0x2)   jzd(0x1015f28b, 0xe);                 /* jz 0x1015f28b */
    II(0x1015f27d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f280, 0x5)   calld(0x10076574, -0xe8d11);          /* call 0x10076574 */
    II(0x1015f285, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x8);   /* or byte [eax+0x69], 0x8 */
    II(0x1015f289, 0x2)   jmpd(0x1015f297, 0xc);                /* jmp 0x1015f297 */
l_0x1015f28b:
    II(0x1015f28b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f28e, 0x5)   calld(0x10076574, -0xe8d1f);          /* call 0x10076574 */
    II(0x1015f293, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x4);   /* or byte [eax+0x69], 0x4 */
l_0x1015f297:
    II(0x1015f297, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f29a, 0x5)   calld(0x10076574, -0xe8d2b);          /* call 0x10076574 */
    II(0x1015f29f, 0x5)   calld(0x10149fa8, -0x152fc);          /* call 0x10149fa8 */
l_0x1015f2a4:
    II(0x1015f2a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f2a7, 0x5)   calld(0x1014bb98, -0x13714);          /* call 0x1014bb98 */
    II(0x1015f2ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f2af, 0x5)   calld(0x10076204, -0xe90b0);          /* call 0x10076204 */
    II(0x1015f2b4, 0x5)   calld(0x100735ac, -0xebd0d);          /* call 0x100735ac */
    II(0x1015f2b9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015f2bb, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015f2be, 0x5)   calld(0x10075f2c, -0xe9397);          /* call 0x10075f2c */
l_0x1015f2c3:
    II(0x1015f2c3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015f2c5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015f2c6, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015f2c7, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015f2c8, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015f2c9, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015f2ca, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015f2cb, 0x1)   retd();                               /* ret */
FUNC_END

