FUNC_BEGIN(0x100a83ea, 0x5ab458a3a43cadc8, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x5e, 0xd9, 0xb, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xfc, 0, 0x74, 0x2a, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0x4d, 0x29, 0x9, 0, 0x84, 0xc0, 0x74, 0x17, 0x8b, 0x55, 0xec, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0x3e, 0xe1, 0xfc, 0xff, 0xe8, 0x17, 0xa6, 0xa, 0, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x25, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x5, 0xe9, 0x8b, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0xfc, 0x28, 0x9, 0, 0x84, 0xc0, 0x74, 0x50, 0xe8, 0xd2, 0x27, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xec, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0xe4, 0xe0, 0xfc, 0xff, 0xe8, 0xcd, 0xa4, 0xa, 0, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0xd4, 0xe0, 0xfc, 0xff, 0xe8, 0x7, 0xa2, 0xa, 0, 0x85, 0xc0, 0x75, 0x20, 0xe8, 0xee, 0x22, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0x13, 0xe1, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xe3, 0xce, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0x5a, 0xe1, 0xfc, 0xff, 0x8b, 0x45, 0xec, 0xc6, 0x40, 0x13, 0, 0xe8, 0xa6, 0x2d, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xec, 0xe8, 0x11, 0xa4, 0xff, 0xff, 0xe9, 0xbd, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0x71, 0x28, 0x9, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x37, 0xd, 0, 0, 0xbb, 0xc5, 0xc, 0x1a, 0x10, 0xba, 0xd1, 0xc, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x6f, 0xd8, 0xb, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xec, 0xc6, 0x40, 0x13, 0x4, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0x3c, 0xe0, 0xfc, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x19, 0x31, 0xdb, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0x80, 0xe0, 0xfc, 0xff, 0xe8, 0xfe, 0xaa, 0xb, 0, 0xeb, 0x59, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0xf, 0xe0, 0xfc, 0xff, 0x83, 0xc0, 0x65, 0xe8, 0xc7, 0xe4, 0xfc, 0xff, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0xfc, 0xdf, 0xfc, 0xff, 0xe8, 0x3d, 0xc3, 0xa, 0, 0xbb, 0x5, 0, 0, 0, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0x3e, 0xe0, 0xfc, 0xff, 0xe8, 0xbc, 0xaa, 0xb, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x10, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x4e, 0xe8, 0x25, 0xe0, 0xfc, 0xff, 0xe8, 0xdd, 0x28, 0x8, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100a83ea, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100a83ef, 0x5)   calld(sys_check_available_stack_size, 0xbd95e); /* call 0x10165d52 */
    II(0x100a83f4, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a83f5, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a83f6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a83f7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a83f9, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100a83ff, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a8402, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100a8405, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100a8408, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
//    II(0x100a840b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a840e, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100a8411, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100a8415, 0x2)   jzd(0x100a8441, 0x2a);                /* jz 0x100a8441 */
    II(0x100a8417, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a8419, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a841c, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a841f, 0x5)   calld(0x1013ad71, 0x9294d);           /* call 0x1013ad71 */
    II(0x100a8424, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a8426, 0x2)   jzd(0x100a843f, 0x17);                /* jz 0x100a843f */
    II(0x100a8428, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100a842b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a842e, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a8431, 0x5)   calld(0x10076574, -0x31ec2);          /* call 0x10076574 */
    II(0x100a8436, 0x5)   calld(0x10152a52, 0xaa617);           /* call 0x10152a52 */
    II(0x100a843b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a843d, 0x2)   jzd(0x100a8441, 0x2);                 /* jz 0x100a8441 */
l_0x100a843f:
    II(0x100a843f, 0x2)   jmpd(0x100a8443, 0x2);                /* jmp 0x100a8443 */
l_0x100a8441:
    II(0x100a8441, 0x2)   jmpd(0x100a8468, 0x25);               /* jmp 0x100a8468 */
l_0x100a8443:
    II(0x100a8443, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a8445, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100a844a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a844c, 0x2)   jnzd(0x100a8463, 0x15);               /* jnz 0x100a8463 */
    II(0x100a844e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a8451, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100a8454, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a8457, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a8459, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100a845f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a8461, 0x2)   jnzd(0x100a8468, 0x5);                /* jnz 0x100a8468 */
l_0x100a8463:
    II(0x100a8463, 0x5)   jmpd(0x100a84f3, 0x8b);               /* jmp 0x100a84f3 */
l_0x100a8468:
    II(0x100a8468, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a846a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a846d, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a8470, 0x5)   calld(0x1013ad71, 0x928fc);           /* call 0x1013ad71 */
    II(0x100a8475, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a8477, 0x2)   jzd(0x100a84c9, 0x50);                /* jz 0x100a84c9 */
    II(0x100a8479, 0x5)   calld(0x1008ac50, -0x1d82e);          /* call 0x1008ac50 */
    II(0x100a847e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a8480, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100a8482, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100a8485, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a8488, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a848b, 0x5)   calld(0x10076574, -0x31f1c);          /* call 0x10076574 */
    II(0x100a8490, 0x5)   calld(0x10152962, 0xaa4cd);           /* call 0x10152962 */
    II(0x100a8495, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a8498, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a849b, 0x5)   calld(0x10076574, -0x31f2c);          /* call 0x10076574 */
    II(0x100a84a0, 0x5)   calld(0x101526ac, 0xaa207);           /* call 0x101526ac */
    II(0x100a84a5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a84a7, 0x2)   jnzd(0x100a84c9, 0x20);               /* jnz 0x100a84c9 */
    II(0x100a84a9, 0x5)   calld(0x1008a79c, -0x1dd12);          /* call 0x1008a79c */
    II(0x100a84ae, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a84b0, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100a84b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a84b5, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a84b8, 0x5)   calld(0x100765d0, -0x31eed);          /* call 0x100765d0 */
    II(0x100a84bd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a84bf, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a84c4, 0x5)   calld(0x100a53ac, -0x311d);           /* call 0x100a53ac */
l_0x100a84c9:
    II(0x100a84c9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a84cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a84ce, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a84d1, 0x5)   calld(0x10076630, -0x31ea6);          /* call 0x10076630 */
    II(0x100a84d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a84d9, 0x4)   mov(memb_a32(ds, eax + 0x13), 0);     /* mov byte [eax+0x13], 0x0 */
    II(0x100a84dd, 0x5)   calld(0x100ab288, 0x2da6);            /* call 0x100ab288 */
    II(0x100a84e2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a84e4, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100a84e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a84e9, 0x5)   calld(0x100a28ff, -0x5bef);           /* call 0x100a28ff */
    II(0x100a84ee, 0x5)   jmpd(0x100a85b0, 0xbd);               /* jmp 0x100a85b0 */
l_0x100a84f3:
    II(0x100a84f3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a84f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a84f8, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a84fb, 0x5)   calld(0x1013ad71, 0x92871);           /* call 0x1013ad71 */
    II(0x100a8500, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a8502, 0x2)   jzd(0x100a850d, 0x9);                 /* jz 0x100a850d */
    II(0x100a8504, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100a850b, 0x2)   jmpd(0x100a8526, 0x19);               /* jmp 0x100a8526 */
l_0x100a850d:
    II(0x100a850d, 0x5)   mov(ecx, 0xd37);                      /* mov ecx, 0xd37 */
    II(0x100a8512, 0x5)   mov(ebx, 0x101a0cc5);                 /* mov ebx, 0x101a0cc5 */ /* "ai_main.cpp" */
    II(0x100a8517, 0x5)   mov(edx, 0x101a0cd1);                 /* mov edx, 0x101a0cd1 */ /* "clear_zone->moving_unit != 0" */
    II(0x100a851c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a851e, 0x5)   calld(sys_assert, 0xbd86f);           /* call 0x10165d92 */
    II(0x100a8523, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x100a8526:
    II(0x100a8526, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a8529, 0x4)   mov(memb_a32(ds, eax + 0x13), 0x4);   /* mov byte [eax+0x13], 0x4 */
    II(0x100a852d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a8530, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a8533, 0x5)   calld(0x10076574, -0x31fc4);          /* call 0x10076574 */
    II(0x100a8538, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x100a853c, 0x2)   jzd(0x100a8557, 0x19);                /* jz 0x100a8557 */
    II(0x100a853e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a8540, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100a8545, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a8548, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a854b, 0x5)   calld(0x100765d0, -0x31f80);          /* call 0x100765d0 */
    II(0x100a8550, 0x5)   calld(0x10163053, 0xbaafe);           /* call 0x10163053 */
    II(0x100a8555, 0x2)   jmpd(0x100a85b0, 0x59);               /* jmp 0x100a85b0 */
l_0x100a8557:
    II(0x100a8557, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a855a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a855d, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a8560, 0x5)   calld(0x10076574, -0x31ff1);          /* call 0x10076574 */
    II(0x100a8565, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100a8568, 0x5)   calld(0x10076a34, -0x31b39);          /* call 0x10076a34 */
    II(0x100a856d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a8570, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a8573, 0x5)   calld(0x10076574, -0x32004);          /* call 0x10076574 */
    II(0x100a8578, 0x5)   calld(0x101548ba, 0xac33d);           /* call 0x101548ba */
    II(0x100a857d, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x100a8582, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100a8587, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a858a, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a858d, 0x5)   calld(0x100765d0, -0x31fc2);          /* call 0x100765d0 */
    II(0x100a8592, 0x5)   calld(0x10163053, 0xbaabc);           /* call 0x10163053 */
    II(0x100a8597, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100a859e, 0x2)   jzd(0x100a85b0, 0x10);                /* jz 0x100a85b0 */
    II(0x100a85a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a85a3, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a85a6, 0x5)   calld(0x100765d0, -0x31fdb);          /* call 0x100765d0 */
    II(0x100a85ab, 0x5)   calld(0x1012ae8d, 0x828dd);           /* call 0x1012ae8d */
l_0x100a85b0:
    II(0x100a85b0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a85b2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a85b3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a85b4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a85b5, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

