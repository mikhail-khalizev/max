FUNC_BEGIN(0x100d5cbd, 0xf3747e4b14243719, 0x20, ({0x68, 0x80, 0, 0, 0, 0xe8, 0x8b, 0, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xf3, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0xf, 0x85, 0xd0, 0, 0, 0, 0xb9, 0x1e, 0, 0, 0, 0x8d, 0x5d, 0xd4, 0x8a, 0x45, 0xf8, 0x4, 0x63, 0xf, 0xbe, 0xd0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x55, 0x5, 0x3, 0, 0xe8, 0xeb, 0xf5, 0xff, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xd0, 0xff, 0x75, 0xd0, 0xc7, 0x45, 0xcc, 0x1, 0, 0, 0, 0xff, 0x75, 0xcc, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x3e, 0xe8, 0xac, 0xf3, 0xff, 0xff, 0xe8, 0x8b, 0x30, 0x9, 0, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xf4, 0xff, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xc0, 0x8a, 0x45, 0xf4, 0x89, 0x45, 0xc8, 0xff, 0x75, 0xc8, 0xc7, 0x45, 0xc4, 0xa, 0, 0, 0, 0xff, 0x75, 0xc4, 0xc7, 0x45, 0xc0, 0x82, 0, 0, 0, 0xff, 0x75, 0xc0, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x1, 0x7e, 0x9, 0xc7, 0x45, 0xbc, 0x39, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xbc, 0x16, 0, 0, 0, 0x8b, 0x45, 0xbc, 0x98, 0x89, 0x45, 0xb8, 0xff, 0x75, 0xb8, 0x66, 0xf7, 0x45, 0xf8, 0x1, 0, 0x74, 0x9, 0xc7, 0x45, 0xb4, 0x6, 0x1, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xb4, 0x42, 0, 0, 0, 0x8b, 0x45, 0xb4, 0xf, 0xbf, 0xc8, 0x8d, 0x5d, 0xd4, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x25, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2d, 0xe8, 0x3, 0x3d, 0x1, 0, 0xe9, 0xfa, 0xfe, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x29, 0xe8, 0xb0, 0x16, 0x9, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100d5cbd, 0x5)   pushd(0x80);                          /* push dword 0x80 */
    II(0x100d5cc2, 0x5)   calld(sys_check_available_stack_size, 0x9008b); /* call 0x10165d52 */
    II(0x100d5cc7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d5cc8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d5cc9, 0x1)   pushd(edx);                           /* push edx */
    II(0x100d5cca, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d5ccb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d5ccc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d5ccd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d5ccf, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x100d5cd5, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100d5cd8, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100d5cdf, 0x2)   jmpd(0x100d5ce7, 0x6);                /* jmp 0x100d5ce7 */
l_0x100d5ce1:
    II(0x100d5ce1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d5ce4, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100d5ce7:
    II(0x100d5ce7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d5ceb, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100d5cee, 0x6)   jged(0x100d5de7, 0xf3);               /* jge dword 0x100d5de7 */
    II(0x100d5cf4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d5cf8, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100d5cfe, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100d5d04, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100d5d09, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100d5d0c, 0x6)   jnzd(0x100d5de2, 0xd0);               /* jnz dword 0x100d5de2 */
    II(0x100d5d12, 0x5)   mov(ecx, 0x1e);                       /* mov ecx, 0x1e */
    II(0x100d5d17, 0x3)   lea(ebx, ebp - 0x2c);                 /* lea ebx, [ebp-0x2c] */
    II(0x100d5d1a, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100d5d1d, 0x2)   add(al, 0x63);                        /* add al, 0x63 */
    II(0x100d5d1f, 0x3)   movsx(edx, al);                       /* movsx edx, al */
    II(0x100d5d22, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x100d5d27, 0x5)   calld(0x10106281, 0x30555);           /* call 0x10106281 */
    II(0x100d5d2c, 0x5)   calld(0x100d531c, -0xa15);            /* call 0x100d531c */
    II(0x100d5d31, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100d5d36, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100d5d39, 0x3)   pushd(memd_a32(ss, ebp - 0x30));      /* push dword [ebp-0x30] */
    II(0x100d5d3c, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x1);   /* mov dword [ebp-0x34], 0x1 */
    II(0x100d5d43, 0x3)   pushd(memd_a32(ss, ebp - 0x34));      /* push dword [ebp-0x34] */
    II(0x100d5d46, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d5d4a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d5d4d, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100d5d50, 0x3)   mov(eax, memd_a32(ds, eax + 0x3e));   /* mov eax, [eax+0x3e] */
    II(0x100d5d53, 0x5)   calld(0x100d5104, -0xc54);            /* call 0x100d5104 */
    II(0x100d5d58, 0x5)   calld(/* sys */ 0x10168de8, 0x9308b); /* call 0x10168de8 */
    II(0x100d5d5d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d5d5f, 0x2)   jzd(0x100d5d67, 0x6);                 /* jz 0x100d5d67 */
    II(0x100d5d61, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0xff);   /* mov byte [ebp-0xc], 0xff */
    II(0x100d5d65, 0x2)   jmpd(0x100d5d6b, 0x4);                /* jmp 0x100d5d6b */
l_0x100d5d67:
    II(0x100d5d67, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x100d5d6b:
    II(0x100d5d6b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d5d6d, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100d5d70, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100d5d73, 0x3)   pushd(memd_a32(ss, ebp - 0x38));      /* push dword [ebp-0x38] */
    II(0x100d5d76, 0x7)   mov(memd_a32(ss, ebp - 0x3c), 0xa);   /* mov dword [ebp-0x3c], 0xa */
    II(0x100d5d7d, 0x3)   pushd(memd_a32(ss, ebp - 0x3c));      /* push dword [ebp-0x3c] */
    II(0x100d5d80, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0x82);  /* mov dword [ebp-0x40], 0x82 */
    II(0x100d5d87, 0x3)   pushd(memd_a32(ss, ebp - 0x40));      /* push dword [ebp-0x40] */
    II(0x100d5d8a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d5d8e, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100d5d91, 0x2)   jled(0x100d5d9c, 0x9);                /* jle 0x100d5d9c */
    II(0x100d5d93, 0x7)   mov(memd_a32(ss, ebp - 0x44), 0x39);  /* mov dword [ebp-0x44], 0x39 */
    II(0x100d5d9a, 0x2)   jmpd(0x100d5da3, 0x7);                /* jmp 0x100d5da3 */
l_0x100d5d9c:
    II(0x100d5d9c, 0x7)   mov(memd_a32(ss, ebp - 0x44), 0x16);  /* mov dword [ebp-0x44], 0x16 */
l_0x100d5da3:
    II(0x100d5da3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100d5da6, 0x1)   cwde();                               /* cwde */
    II(0x100d5da7, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100d5daa, 0x3)   pushd(memd_a32(ss, ebp - 0x48));      /* push dword [ebp-0x48] */
    II(0x100d5dad, 0x6)   test(memw_a32(ss, ebp - 0x8), 0x1);   /* test word [ebp-0x8], 0x1 */
    II(0x100d5db3, 0x2)   jzd(0x100d5dbe, 0x9);                 /* jz 0x100d5dbe */
    II(0x100d5db5, 0x7)   mov(memd_a32(ss, ebp - 0x4c), 0x106); /* mov dword [ebp-0x4c], 0x106 */
    II(0x100d5dbc, 0x2)   jmpd(0x100d5dc5, 0x7);                /* jmp 0x100d5dc5 */
l_0x100d5dbe:
    II(0x100d5dbe, 0x7)   mov(memd_a32(ss, ebp - 0x4c), 0x42);  /* mov dword [ebp-0x4c], 0x42 */
l_0x100d5dc5:
    II(0x100d5dc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d5dc8, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100d5dcb, 0x3)   lea(ebx, ebp - 0x2c);                 /* lea ebx, [ebp-0x2c] */
    II(0x100d5dce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d5dd1, 0x3)   mov(edx, memd_a32(ds, eax + 0x25));   /* mov edx, [eax+0x25] */
    II(0x100d5dd4, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d5dd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d5dda, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x100d5ddd, 0x5)   calld(0x100e9ae5, 0x13d03);           /* call 0x100e9ae5 */
l_0x100d5de2:
    II(0x100d5de2, 0x5)   jmpd(0x100d5ce1, -0x106);             /* jmp 0x100d5ce1 */
l_0x100d5de7:
    II(0x100d5de7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d5dea, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d5ded, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d5df0, 0x3)   mov(eax, memd_a32(ds, eax + 0x29));   /* mov eax, [eax+0x29] */
    II(0x100d5df3, 0x5)   calld(sys_display_draw_1, 0x916b0);   /* call 0x101674a8 */
    II(0x100d5df8, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d5dfa, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d5dfb, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d5dfc, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d5dfd, 0x1)   popd(edx);                            /* pop edx */
    II(0x100d5dfe, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d5dff, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d5e00, 0x1)   retd();                               /* ret */
FUNC_END

