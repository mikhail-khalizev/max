FUNC_BEGIN(0x100a9ae0, 0x5ef8d8273d395add, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x68, 0xc2, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xa7, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x17, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x12, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x1a, 0x66, 0x1, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x12, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x12, 0x66, 0x8b, 0x3, 0x66, 0xf, 0xaf, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x8, 0x29, 0xd0, 0xc1, 0xe0, 0x2, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0x66, 0x8b, 0x10, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0x66, 0x8b, 0, 0xf, 0xaf, 0xc2, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1c, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0x66, 0xf, 0xaf, 0x10, 0x3, 0x55, 0xf0, 0x42, 0x89, 0x55, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0x1b, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xec, 0x7e, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x1c, 0x66, 0x1, 0x10, 0xeb, 0x19, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xec, 0x7f, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x1c, 0x66, 0x1, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xa, 0x8b, 0x55, 0xfc, 0x66, 0x3, 0x2, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0xe, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xc, 0x8b, 0x55, 0xfc, 0x66, 0x3, 0x42, 0x2, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x42, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7c, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xe, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0xd, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x10, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x5, 0xe9, 0xd8, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a9ae0, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100a9ae5, 0x5)   calld(sys_check_available_stack_size, 0xbc268); /* call 0x10165d52 */
    II(0x100a9aea, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a9aeb, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a9aec, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a9aed, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a9aee, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a9aef, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a9af0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a9af2, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100a9af8, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x100a9afb:
    II(0x100a9afb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9afe, 0x5)   calld(0x100a99aa, -0x159);            /* call 0x100a99aa */
    II(0x100a9b03, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a9b05, 0x2)   jnzd(0x100a9b10, 0x9);                /* jnz 0x100a9b10 */
    II(0x100a9b07, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100a9b0b, 0x5)   jmpd(0x100a9c27, 0x117);              /* jmp 0x100a9c27 */
l_0x100a9b10:
    II(0x100a9b10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9b13, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100a9b16, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9b19, 0x4)   mov(dx, memw_a32(ds, edx + 0x1a));    /* mov dx, [edx+0x1a] */
    II(0x100a9b1d, 0x3)   add(memw_a32(ds, eax), dx);           /* add [eax], dx */
    II(0x100a9b20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9b23, 0x3)   mov(ebx, memd_a32(ds, eax + 0x12));   /* mov ebx, [eax+0x12] */
//    II(0x100a9b26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9b29, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x100a9b2c, 0x3)   mov(ax, memw_a32(ds, ebx));           /* mov ax, [ebx] */
    II(0x100a9b2f, 0x4)   imul(ax, memw_a32(ds, edx));          /* imul ax, [edx] */
    II(0x100a9b33, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a9b35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9b38, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100a9b3c, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100a9b3e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100a9b41, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a9b44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9b47, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100a9b4a, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100a9b4d, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100a9b50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9b53, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100a9b56, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100a9b59, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100a9b5c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a9b5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9b62, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x100a9b66, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100a9b69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9b6c, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100a9b6f, 0x4)   imul(dx, memw_a32(ds, eax));          /* imul dx, [eax] */
    II(0x100a9b73, 0x3)   add(edx, memd_a32(ss, ebp - 0x10));   /* add edx, [ebp-0x10] */
    II(0x100a9b76, 0x1)   inc(edx);                             /* inc edx */
    II(0x100a9b77, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x100a9b7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a9b7d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100a9b81, 0x2)   jled(0x100a9b9e, 0x1b);               /* jle 0x100a9b9e */
    II(0x100a9b83, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a9b86, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100a9b8a, 0x2)   jled(0x100a9b9c, 0x10);               /* jle 0x100a9b9c */
    II(0x100a9b8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9b8f, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100a9b92, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9b95, 0x4)   mov(dx, memw_a32(ds, edx + 0x1c));    /* mov dx, [edx+0x1c] */
    II(0x100a9b99, 0x3)   add(memw_a32(ds, eax), dx);           /* add [eax], dx */
l_0x100a9b9c:
    II(0x100a9b9c, 0x2)   jmpd(0x100a9bb7, 0x19);               /* jmp 0x100a9bb7 */
l_0x100a9b9e:
    II(0x100a9b9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a9ba1, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100a9ba5, 0x2)   jgd(0x100a9bb7, 0x10);                /* jg 0x100a9bb7 */
    II(0x100a9ba7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9baa, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100a9bad, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9bb0, 0x4)   mov(dx, memw_a32(ds, edx + 0x1c));    /* mov dx, [edx+0x1c] */
    II(0x100a9bb4, 0x3)   add(memw_a32(ds, eax), dx);           /* add [eax], dx */
l_0x100a9bb7:
    II(0x100a9bb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9bba, 0x4)   mov(ax, memw_a32(ds, eax + 0xa));     /* mov ax, [eax+0xa] */
    II(0x100a9bbe, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9bc1, 0x3)   add(ax, memw_a32(ds, edx));           /* add ax, [edx] */
    II(0x100a9bc4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9bc7, 0x4)   mov(memw_a32(ds, edx + 0xe), ax);     /* mov [edx+0xe], ax */
    II(0x100a9bcb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9bce, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x100a9bd2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9bd5, 0x4)   add(ax, memw_a32(ds, edx + 0x2));     /* add ax, [edx+0x2] */
    II(0x100a9bd9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9bdc, 0x4)   mov(memw_a32(ds, edx + 0x10), ax);    /* mov [edx+0x10], ax */
    II(0x100a9be0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a9be3, 0x3)   mov(eax, memd_a32(ds, edx + 0xc));    /* mov eax, [edx+0xc] */
    II(0x100a9be6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a9be9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a9beb, 0x2)   jld(0x100a9bfd, 0x10);                /* jl 0x100a9bfd */
    II(0x100a9bed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9bf0, 0x4)   mov(ax, memw_a32(ds, eax + 0xe));     /* mov ax, [eax+0xe] */
    II(0x100a9bf4, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100a9bfb, 0x2)   jld(0x100a9bff, 0x2);                 /* jl 0x100a9bff */
l_0x100a9bfd:
    II(0x100a9bfd, 0x2)   jmpd(0x100a9c0c, 0xd);                /* jmp 0x100a9c0c */
l_0x100a9bff:
    II(0x100a9bff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9c02, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100a9c05, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a9c08, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a9c0a, 0x2)   jged(0x100a9c0e, 0x2);                /* jge 0x100a9c0e */
l_0x100a9c0c:
    II(0x100a9c0c, 0x2)   jmpd(0x100a9c1e, 0x10);               /* jmp 0x100a9c1e */
l_0x100a9c0e:
    II(0x100a9c0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a9c11, 0x4)   mov(ax, memw_a32(ds, eax + 0x10));    /* mov ax, [eax+0x10] */
    II(0x100a9c15, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100a9c1c, 0x2)   jld(0x100a9c23, 0x5);                 /* jl 0x100a9c23 */
l_0x100a9c1e:
    II(0x100a9c1e, 0x5)   jmpd(0x100a9afb, -0x128);             /* jmp 0x100a9afb */
l_0x100a9c23:
    II(0x100a9c23, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x100a9c27:
    II(0x100a9c27, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100a9c2a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a9c2c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a9c2d, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a9c2e, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a9c2f, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a9c30, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a9c31, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a9c32, 0x1)   retd();                               /* ret */
FUNC_END

