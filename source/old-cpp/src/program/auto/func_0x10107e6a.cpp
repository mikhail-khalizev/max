FUNC_BEGIN(0x10107e6a, 0xfd29df1f5b07f84d, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xde, 0xde, 0x5, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xac, 0xf0, 0xff, 0xff, 0x89, 0x45, 0xec, 0x81, 0x7d, 0xf4, 0x26, 0x2, 0, 0, 0x72, 0xa, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xb6, 0x47, 0x6, 0, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xd0, 0x76, 0x2, 0, 0, 0xa1, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd0, 0x80, 0x78, 0x8, 0, 0x75, 0xe5, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xd0, 0x76, 0x2, 0, 0, 0xa1, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd0, 0x80, 0x78, 0x9, 0, 0x74, 0xa, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x76, 0x47, 0x6, 0, 0xbb, 0x6, 0, 0, 0, 0x8b, 0x55, 0xf8, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xc8, 0x76, 0x2, 0, 0, 0xa1, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xc8, 0x83, 0xc0, 0x34, 0xe8, 0x3d, 0xdf, 0x5, 0, 0xbb, 0x6, 0, 0, 0, 0x8b, 0x55, 0xf8, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x76, 0x2, 0, 0, 0x8b, 0xd, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xc8, 0x83, 0xc0, 0x1c, 0xe8, 0x17, 0xdf, 0x5, 0, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x76, 0x2, 0, 0, 0x8b, 0x1d, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xc3, 0x66, 0xa1, 0xd0, 0x40, 0x1c, 0x10, 0x66, 0x89, 0x43, 0x4c, 0x8b, 0x5d, 0xf4, 0x83, 0xc3, 0x26, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x76, 0x2, 0, 0, 0x8b, 0x15, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x89, 0x58, 0x28, 0x8b, 0x5d, 0xf4, 0x8b, 0x55, 0xf0, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x76, 0x2, 0, 0, 0x8b, 0xd, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xc8, 0x83, 0xc0, 0x50, 0xe8, 0xb3, 0xde, 0x5, 0, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x7c, 0x26, 0xf, 0xbf, 0x45, 0xec, 0x31, 0xd2, 0x8a, 0x90, 0xb4, 0x40, 0x1c, 0x10, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xd8, 0x76, 0x2, 0, 0, 0xa1, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd8, 0x89, 0x50, 0x48, 0xeb, 0x1c, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xd0, 0x76, 0x2, 0, 0, 0xa1, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd0, 0xc7, 0x40, 0x48, 0, 0, 0, 0, 0xa1, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x76, 0x2, 0, 0, 0x8b, 0x15, 0xac, 0x4d, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xb0, 0xf7, 0xff, 0xff, 0x8b, 0x15, 0xb4, 0x4d, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x42, 0xbb, 0x4, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x66, 0x89, 0x15, 0xb6, 0x4d, 0x1c, 0x10, 0x80, 0x7d, 0xfc, 0, 0x75, 0x9, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0xff, 0x75, 0x5, 0xe9, 0xfe, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x50, 0x41, 0x1c, 0x10, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x70, 0x47, 0x1c, 0x10, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xec, 0x8a, 0x80, 0xb4, 0x40, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x1, 0xc0, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x7, 0x1, 0xc2, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x82, 0x80, 0x47, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0xf, 0xbf, 0x55, 0xec, 0x8a, 0x92, 0xb4, 0x40, 0x1c, 0x10, 0x81, 0xe2, 0xff, 0, 0, 0, 0xc1, 0xe2, 0x2, 0x89, 0xd3, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x8, 0x1, 0xda, 0x8b, 0x80, 0x70, 0x47, 0x1c, 0x10, 0x89, 0x82, 0x80, 0x49, 0x1c, 0x10, 0x8b, 0x45, 0xe0, 0x3, 0x45, 0xf4, 0x3d, 0, 0x4, 0, 0, 0x76, 0x2f, 0xb8, 0, 0x4, 0, 0, 0x2b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x8b, 0x5d, 0xdc, 0x8b, 0x55, 0xe8, 0x8b, 0x45, 0xe4, 0x3, 0x45, 0xe0, 0xe8, 0x79, 0xdd, 0x5, 0, 0x8b, 0x45, 0xdc, 0x1, 0x45, 0xe8, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x29, 0x45, 0xf4, 0x8b, 0x5d, 0xf4, 0x8b, 0x55, 0xe8, 0x8b, 0x45, 0xe4, 0x3, 0x45, 0xe0, 0xe8, 0x55, 0xdd, 0x5, 0, 0x8b, 0x45, 0xe0, 0x3, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0x89, 0x82, 0x70, 0x47, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x31, 0xd2, 0x8a, 0x90, 0xb4, 0x40, 0x1c, 0x10, 0x42, 0xbb, 0x40, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x45, 0xec, 0x88, 0x90, 0xb4, 0x40, 0x1c, 0x10, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10107e6a, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10107e6f, 0x5)   calld(sys_check_available_stack_size, 0x5dede); /* call 0x10165d52 */
    II(0x10107e74, 0x1)   pushd(esi);                           /* push esi */
    II(0x10107e75, 0x1)   pushd(edi);                           /* push edi */
    II(0x10107e76, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10107e77, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10107e79, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x10107e7f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10107e82, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10107e85, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10107e88, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x10107e8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10107e8e, 0x5)   calld(0x10106f3f, -0xf54);            /* call 0x10106f3f */
    II(0x10107e93, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10107e96, 0x7)   cmp(memd_a32(ss, ebp - 0xc), 0x226);  /* cmp dword [ebp-0xc], 0x226 */
    II(0x10107e9d, 0x2)   jbd(0x10107ea9, 0xa);                 /* jb 0x10107ea9 */
    II(0x10107e9f, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10107ea4, 0x5)   calld(sys_exit, 0x647b6);             /* call 0x1016c65f */
l_0x10107ea9:
    II(0x10107ea9, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107eae, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107eb1, 0x6)   imul(edx, eax, 0x276);                /* imul edx, eax, 0x276 */
    II(0x10107eb7, 0x5)   mov(eax, memd_a32(ds, 0x101c4dac));   /* mov eax, [0x101c4dac] */
    II(0x10107ebc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107ebe, 0x4)   cmp(memb_a32(ds, eax + 0x8), 0);      /* cmp byte [eax+0x8], 0x0 */
    II(0x10107ec2, 0x2)   jnzd(0x10107ea9, -0x1b);              /* jnz 0x10107ea9 */
    II(0x10107ec4, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107ec9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107ecc, 0x6)   imul(edx, eax, 0x276);                /* imul edx, eax, 0x276 */
    II(0x10107ed2, 0x5)   mov(eax, memd_a32(ds, 0x101c4dac));   /* mov eax, [0x101c4dac] */
    II(0x10107ed7, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107ed9, 0x4)   cmp(memb_a32(ds, eax + 0x9), 0);      /* cmp byte [eax+0x9], 0x0 */
    II(0x10107edd, 0x2)   jzd(0x10107ee9, 0xa);                 /* jz 0x10107ee9 */
    II(0x10107edf, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10107ee4, 0x5)   calld(sys_exit, 0x64776);             /* call 0x1016c65f */
l_0x10107ee9:
    II(0x10107ee9, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x10107eee, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10107ef1, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107ef6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107ef9, 0x6)   imul(ecx, eax, 0x276);                /* imul ecx, eax, 0x276 */
    II(0x10107eff, 0x5)   mov(eax, memd_a32(ds, 0x101c4dac));   /* mov eax, [0x101c4dac] */
    II(0x10107f04, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x10107f06, 0x3)   add(eax, 0x34);                       /* add eax, 0x34 */
    II(0x10107f09, 0x5)   calld(sys_memcpy, 0x5df3d);           /* call 0x10165e4b */
    II(0x10107f0e, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x10107f13, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10107f16, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107f1b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107f1e, 0x6)   imul(eax, eax, 0x276);                /* imul eax, eax, 0x276 */
    II(0x10107f24, 0x6)   mov(ecx, memd_a32(ds, 0x101c4dac));   /* mov ecx, [0x101c4dac] */
    II(0x10107f2a, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x10107f2c, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10107f2f, 0x5)   calld(sys_memcpy, 0x5df17);           /* call 0x10165e4b */
    II(0x10107f34, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107f39, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107f3c, 0x6)   imul(eax, eax, 0x276);                /* imul eax, eax, 0x276 */
    II(0x10107f42, 0x6)   mov(ebx, memd_a32(ds, 0x101c4dac));   /* mov ebx, [0x101c4dac] */
    II(0x10107f48, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x10107f4a, 0x6)   mov(ax, memw_a32(ds, 0x101c40d0));    /* mov ax, [0x101c40d0] */
    II(0x10107f50, 0x4)   mov(memw_a32(ds, ebx + 0x4c), ax);    /* mov [ebx+0x4c], ax */
    II(0x10107f54, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x10107f57, 0x3)   add(ebx, 0x26);                       /* add ebx, 0x26 */
    II(0x10107f5a, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107f5f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107f62, 0x6)   imul(eax, eax, 0x276);                /* imul eax, eax, 0x276 */
    II(0x10107f68, 0x6)   mov(edx, memd_a32(ds, 0x101c4dac));   /* mov edx, [0x101c4dac] */
    II(0x10107f6e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107f70, 0x4)   mov(memw_a32(ds, eax + 0x28), bx);    /* mov [eax+0x28], bx */
    II(0x10107f74, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x10107f77, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10107f7a, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107f7f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107f82, 0x6)   imul(eax, eax, 0x276);                /* imul eax, eax, 0x276 */
    II(0x10107f88, 0x6)   mov(ecx, memd_a32(ds, 0x101c4dac));   /* mov ecx, [0x101c4dac] */
    II(0x10107f8e, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x10107f90, 0x3)   add(eax, 0x50);                       /* add eax, 0x50 */
    II(0x10107f93, 0x5)   calld(sys_memcpy, 0x5deb3);           /* call 0x10165e4b */
    II(0x10107f98, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10107f9c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10107f9e, 0x2)   jld(0x10107fc6, 0x26);                /* jl 0x10107fc6 */
    II(0x10107fa0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10107fa4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10107fa6, 0x6)   mov(dl, memb_a32(ds, eax + 0x101c40b4)); /* mov dl, [eax+0x101c40b4] */
    II(0x10107fac, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107fb1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107fb4, 0x6)   imul(ebx, eax, 0x276);                /* imul ebx, eax, 0x276 */
    II(0x10107fba, 0x5)   mov(eax, memd_a32(ds, 0x101c4dac));   /* mov eax, [0x101c4dac] */
    II(0x10107fbf, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10107fc1, 0x3)   mov(memd_a32(ds, eax + 0x48), edx);   /* mov [eax+0x48], edx */
    II(0x10107fc4, 0x2)   jmpd(0x10107fe2, 0x1c);               /* jmp 0x10107fe2 */
l_0x10107fc6:
    II(0x10107fc6, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107fcb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107fce, 0x6)   imul(edx, eax, 0x276);                /* imul edx, eax, 0x276 */
    II(0x10107fd4, 0x5)   mov(eax, memd_a32(ds, 0x101c4dac));   /* mov eax, [0x101c4dac] */
    II(0x10107fd9, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107fdb, 0x7)   mov(memd_a32(ds, eax + 0x48), 0);     /* mov dword [eax+0x48], 0x0 */
l_0x10107fe2:
    II(0x10107fe2, 0x5)   mov(eax, memd_a32(ds, 0x101c4db4));   /* mov eax, [0x101c4db4] */
    II(0x10107fe7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10107fea, 0x6)   imul(eax, eax, 0x276);                /* imul eax, eax, 0x276 */
    II(0x10107ff0, 0x6)   mov(edx, memd_a32(ds, 0x101c4dac));   /* mov edx, [0x101c4dac] */
    II(0x10107ff6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107ff8, 0x5)   calld(0x101077ad, -0x850);            /* call 0x101077ad */
    II(0x10107ffd, 0x6)   mov(edx, memd_a32(ds, 0x101c4db4));   /* mov edx, [0x101c4db4] */
    II(0x10108003, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10108006, 0x1)   inc(edx);                             /* inc edx */
    II(0x10108007, 0x5)   mov(ebx, 0x4);                        /* mov ebx, 0x4 */
    II(0x1010800c, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1010800e, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10108011, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10108013, 0x7)   mov(memw_a32(ds, 0x101c4db6), dx);    /* mov [0x101c4db6], dx */
    II(0x1010801a, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1010801e, 0x2)   jnzd(0x10108029, 0x9);                /* jnz 0x10108029 */
    II(0x10108020, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10108024, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x10108027, 0x2)   jnzd(0x1010802e, 0x5);                /* jnz 0x1010802e */
l_0x10108029:
    II(0x10108029, 0x5)   jmpd(0x1010812c, 0xfe);               /* jmp 0x1010812c */
l_0x1010802e:
    II(0x1010802e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108031, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10108034, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10108038, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010803b, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4150)); /* mov eax, [eax+0x101c4150] */
    II(0x10108041, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10108044, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10108048, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010804b, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4770)); /* mov eax, [eax+0x101c4770] */
    II(0x10108051, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10108054, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10108058, 0x6)   mov(al, memb_a32(ds, eax + 0x101c40b4)); /* mov al, [eax+0x101c40b4] */
    II(0x1010805e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10108063, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10108065, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10108069, 0x3)   shl(edx, 0x7);                        /* shl edx, 0x7 */
    II(0x1010806c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010806e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10108071, 0x7)   mov(memw_a32(ds, edx + 0x101c4780), ax); /* mov [edx+0x101c4780], ax */
    II(0x10108078, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1010807c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010807f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10108083, 0x6)   mov(dl, memb_a32(ds, edx + 0x101c40b4)); /* mov dl, [edx+0x101c40b4] */
    II(0x10108089, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x1010808f, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10108092, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x10108094, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10108098, 0x3)   shl(edx, 0x8);                        /* shl edx, 0x8 */
    II(0x1010809b, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x1010809d, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4770)); /* mov eax, [eax+0x101c4770] */
    II(0x101080a3, 0x6)   mov(memd_a32(ds, edx + 0x101c4980), eax); /* mov [edx+0x101c4980], eax */
    II(0x101080a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101080ac, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x101080af, 0x5)   cmp(eax, 0x400);                      /* cmp eax, 0x400 */
    II(0x101080b4, 0x2)   jbed(0x101080e5, 0x2f);               /* jbe 0x101080e5 */
    II(0x101080b6, 0x5)   mov(eax, 0x400);                      /* mov eax, 0x400 */
    II(0x101080bb, 0x3)   sub(eax, memd_a32(ss, ebp - 0x20));   /* sub eax, [ebp-0x20] */
    II(0x101080be, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101080c1, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x24));   /* mov ebx, [ebp-0x24] */
    II(0x101080c4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x101080c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101080ca, 0x3)   add(eax, memd_a32(ss, ebp - 0x20));   /* add eax, [ebp-0x20] */
    II(0x101080cd, 0x5)   calld(sys_memcpy, 0x5dd79);           /* call 0x10165e4b */
    II(0x101080d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101080d5, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
    II(0x101080d8, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x101080df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101080e2, 0x3)   sub(memd_a32(ss, ebp - 0xc), eax);    /* sub [ebp-0xc], eax */
l_0x101080e5:
    II(0x101080e5, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x101080e8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x101080eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101080ee, 0x3)   add(eax, memd_a32(ss, ebp - 0x20));   /* add eax, [ebp-0x20] */
    II(0x101080f1, 0x5)   calld(sys_memcpy, 0x5dd55);           /* call 0x10165e4b */
    II(0x101080f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101080f9, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x101080fc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10108100, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10108103, 0x6)   mov(memd_a32(ds, edx + 0x101c4770), eax); /* mov [edx+0x101c4770], eax */
    II(0x10108109, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1010810d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010810f, 0x6)   mov(dl, memb_a32(ds, eax + 0x101c40b4)); /* mov dl, [eax+0x101c40b4] */
    II(0x10108115, 0x1)   inc(edx);                             /* inc edx */
    II(0x10108116, 0x5)   mov(ebx, 0x40);                       /* mov ebx, 0x40 */
    II(0x1010811b, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1010811d, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10108120, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10108122, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10108126, 0x6)   mov(memb_a32(ds, eax + 0x101c40b4), dl); /* mov [eax+0x101c40b4], dl */
l_0x1010812c:
    II(0x1010812c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010812e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010812f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10108130, 0x1)   popd(esi);                            /* pop esi */
    II(0x10108131, 0x1)   retd();                               /* ret */
FUNC_END

