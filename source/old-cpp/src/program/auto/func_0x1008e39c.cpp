FUNC_BEGIN(0x1008e39c, 0x87e276cc303e3784, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0xac, 0x79, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x44, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2b, 0xe8, 0xce, 0x87, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x7e, 0x1, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0x20, 0x81, 0xfe, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x58, 0x2, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xe0, 0xff, 0x53, 0x1c, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xec, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x3b, 0x45, 0xd8, 0xf, 0x8d, 0x21, 0x1, 0, 0, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xf0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x3b, 0x45, 0xdc, 0xf, 0x8d, 0x1, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xec, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0x1, 0x51, 0x7, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xf2, 0x7f, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0xa4, 0x87, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x13, 0xc9, 0xa, 0, 0x84, 0xc0, 0x74, 0x22, 0x8d, 0x45, 0xe4, 0xe8, 0x36, 0x7f, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0xe, 0x74, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0x27, 0x7f, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0xd, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0xc8, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xe3, 0xc8, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x94, 0, 0, 0, 0xb8, 0x1b, 0, 0, 0, 0xe8, 0x60, 0x79, 0xd, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x25, 0xb9, 0, 0x2, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x18, 0x7f, 0xfe, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xcc, 0xe8, 0xbc, 0xbb, 0, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc0, 0x8b, 0x55, 0xc0, 0x8d, 0x45, 0xbc, 0xe8, 0x7b, 0xcb, 0xff, 0xff, 0x8d, 0x45, 0xbc, 0xe8, 0x97, 0xca, 0xff, 0xff, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x2b, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x44, 0xe5, 0, 0, 0x8d, 0x45, 0xbc, 0xe8, 0x80, 0xca, 0xff, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x40, 0x68, 0x1, 0, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0x5e, 0xa6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x44, 0x7a, 0xfe, 0xff, 0xeb, 0x24, 0xe9, 0xec, 0xfe, 0xff, 0xff, 0xe9, 0xcc, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x2a, 0x7a, 0xfe, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x1e, 0x7a, 0xfe, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008e39c, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x1008e3a1, 0x5)   calld(sys_check_available_stack_size, 0xd79ac); /* call 0x10165d52 */
    II(0x1008e3a6, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008e3a7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008e3a8, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008e3a9, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008e3aa, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008e3ab, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008e3ac, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008e3ae, 0x6)   sub(esp, 0x44);                       /* sub esp, 0x44 */
    II(0x1008e3b4, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1008e3b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e3ba, 0x3)   add(eax, 0x2b);                       /* add eax, 0x2b */
    II(0x1008e3bd, 0x5)   calld(0x10076b90, -0x17832);          /* call 0x10076b90 */
    II(0x1008e3c2, 0x1)   cwde();                               /* cwde */
    II(0x1008e3c3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e3c5, 0x2)   jzd(0x1008e3d0, 0x9);                 /* jz 0x1008e3d0 */
    II(0x1008e3c7, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1008e3cb, 0x5)   jmpd(0x1008e54e, 0x17e);              /* jmp 0x1008e54e */
l_0x1008e3d0:
    II(0x1008e3d0, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1008e3d4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e3d7, 0x5)   calld(0x100764fc, -0x17ee0);          /* call 0x100764fc */
    II(0x1008e3dc, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1008e3df, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1008e3e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008e3e6, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1008e3e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008e3ec, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1008e3ef, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x1008e3f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008e3f5, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x1008e3f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1008e3fb, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1008e3fe, 0x2)   jmpd(0x1008e406, 0x6);                /* jmp 0x1008e406 */
l_0x1008e400:
    II(0x1008e400, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1008e403, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x1008e406:
    II(0x1008e406, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1008e40a, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x28));   /* cmp eax, [ebp-0x28] */
    II(0x1008e40d, 0x6)   jged(0x1008e534, 0x121);              /* jge dword 0x1008e534 */
    II(0x1008e413, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1008e416, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008e419, 0x2)   jmpd(0x1008e421, 0x6);                /* jmp 0x1008e421 */
l_0x1008e41b:
    II(0x1008e41b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008e41e, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1008e421:
    II(0x1008e421, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1008e425, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x24));   /* cmp eax, [ebp-0x24] */
    II(0x1008e428, 0x6)   jged(0x1008e52f, 0x101);              /* jge dword 0x1008e52f */
    II(0x1008e42e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x1008e432, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1008e436, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x1008e43b, 0x5)   calld(0x10103541, 0x75101);           /* call 0x10103541 */
    II(0x1008e440, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008e442, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e445, 0x5)   calld(0x1007643c, -0x1800e);          /* call 0x1007643c */
    II(0x1008e44a, 0x2)   jmpd(0x1008e454, 0x8);                /* jmp 0x1008e454 */
l_0x1008e44c:
    II(0x1008e44c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e44f, 0x5)   calld(0x10076bf8, -0x1785c);          /* call 0x10076bf8 */
l_0x1008e454:
    II(0x1008e454, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e456, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e459, 0x5)   calld(0x1013ad71, 0xac913);           /* call 0x1013ad71 */
    II(0x1008e45e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008e460, 0x2)   jzd(0x1008e484, 0x22);                /* jz 0x1008e484 */
    II(0x1008e462, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e465, 0x5)   calld(0x100763a0, -0x180ca);          /* call 0x100763a0 */
    II(0x1008e46a, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xe);    /* cmp word [eax+0x8], 0xe */
    II(0x1008e46f, 0x2)   jzd(0x1008e480, 0xf);                 /* jz 0x1008e480 */
    II(0x1008e471, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e474, 0x5)   calld(0x100763a0, -0x180d9);          /* call 0x100763a0 */
    II(0x1008e479, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xd);    /* cmp word [eax+0x8], 0xd */
    II(0x1008e47e, 0x2)   jnzd(0x1008e482, 0x2);                /* jnz 0x1008e482 */
l_0x1008e480:
    II(0x1008e480, 0x2)   jmpd(0x1008e484, 0x2);                /* jmp 0x1008e484 */
l_0x1008e482:
    II(0x1008e482, 0x2)   jmpd(0x1008e44c, -0x38);              /* jmp 0x1008e44c */
l_0x1008e484:
    II(0x1008e484, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e486, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e489, 0x5)   calld(0x1013ad71, 0xac8e3);           /* call 0x1013ad71 */
    II(0x1008e48e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008e490, 0x6)   jzd(0x1008e52a, 0x94);                /* jz dword 0x1008e52a */
    II(0x1008e496, 0x5)   mov(eax, 0x1b);                       /* mov eax, 0x1b */
    II(0x1008e49b, 0x5)   calld(sys_new, 0xd7960);              /* call 0x10165e00 */
    II(0x1008e4a0, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x1008e4a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1008e4a6, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1008e4a9, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x1008e4ad, 0x2)   jzd(0x1008e4d4, 0x25);                /* jz 0x1008e4d4 */
    II(0x1008e4af, 0x5)   mov(ecx, 0x200);                      /* mov ecx, 0x200 */
    II(0x1008e4b4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e4b7, 0x5)   calld(0x100763d4, -0x180e8);          /* call 0x100763d4 */
    II(0x1008e4bc, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1008e4be, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008e4c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1008e4c4, 0x5)   calld(0x1009a085, 0xbbbc);            /* call 0x1009a085 */
    II(0x1008e4c9, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x1008e4cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1008e4cf, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1008e4d2, 0x2)   jmpd(0x1008e4da, 0x6);                /* jmp 0x1008e4da */
l_0x1008e4d4:
    II(0x1008e4d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1008e4d7, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x1008e4da:
    II(0x1008e4da, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x1008e4dd, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1008e4e0, 0x5)   calld(0x1008b060, -0x3485);           /* call 0x1008b060 */
    II(0x1008e4e5, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1008e4e8, 0x5)   calld(0x1008af84, -0x3569);           /* call 0x1008af84 */
    II(0x1008e4ed, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1008e4f0, 0x3)   add(ebx, 0x2b);                       /* add ebx, 0x2b */
    II(0x1008e4f3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008e4f5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008e4f7, 0x5)   calld(0x1009ca40, 0xe544);            /* call 0x1009ca40 */
    II(0x1008e4fc, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1008e4ff, 0x5)   calld(0x1008af84, -0x3580);           /* call 0x1008af84 */
    II(0x1008e504, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008e506, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1008e50b, 0x5)   calld(0x100a4d50, 0x16840);           /* call 0x100a4d50 */
    II(0x1008e510, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1008e514, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e516, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1008e519, 0x5)   calld(0x10088b7c, -0x59a2);           /* call 0x10088b7c */
    II(0x1008e51e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e520, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e523, 0x5)   calld(0x10075f6c, -0x185bc);          /* call 0x10075f6c */
    II(0x1008e528, 0x2)   jmpd(0x1008e54e, 0x24);               /* jmp 0x1008e54e */
l_0x1008e52a:
    II(0x1008e52a, 0x5)   jmpd(0x1008e41b, -0x114);             /* jmp 0x1008e41b */
l_0x1008e52f:
    II(0x1008e52f, 0x5)   jmpd(0x1008e400, -0x134);             /* jmp 0x1008e400 */
l_0x1008e534:
    II(0x1008e534, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1008e538, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e53a, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008e53d, 0x5)   calld(0x10075f6c, -0x185d6);          /* call 0x10075f6c */
    II(0x1008e542, 0x2)   jmpd(0x1008e54e, 0xa);                /* jmp 0x1008e54e */
//  II(0x1008e544, 0xa)   /* Недостижимый код. */
l_0x1008e54e:
    II(0x1008e54e, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1008e551, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008e553, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008e554, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008e555, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008e556, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008e557, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008e558, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008e559, 0x1)   retd();                               /* ret */
FUNC_END

