FUNC_BEGIN(0x100a7861, 0xb9abffa4de280577, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xe7, 0xe4, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x52, 0x40, 0x75, 0xf, 0xba, 0x5b, 0xc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x3b, 0xe6, 0xb, 0, 0xeb, 0xd, 0xba, 0x6d, 0xc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x2c, 0xe6, 0xb, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x13, 0x88, 0x45, 0xf0, 0xe9, 0x8f, 0, 0, 0, 0xba, 0x86, 0xc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x73, 0xe6, 0xb, 0, 0xe9, 0x98, 0, 0, 0, 0xba, 0x8e, 0xc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x61, 0xe6, 0xb, 0, 0xe9, 0x86, 0, 0, 0, 0xba, 0x9e, 0xc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4f, 0xe6, 0xb, 0, 0xe9, 0x74, 0, 0, 0, 0xba, 0xac, 0xc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x3d, 0xe6, 0xb, 0, 0xeb, 0x65, 0xba, 0xbd, 0xc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x2e, 0xe6, 0xb, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4e, 0xe8, 0x66, 0xec, 0xfc, 0xff, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x6b, 0xd2, 0x33, 0x8b, 0x92, 0xd7, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc, 0xe6, 0xb, 0, 0xeb, 0x34, 0xeb, 0x32, 0x8d, 0x40, 0, 0xb1, 0x78, 0xa, 0x10, 0xc3, 0x78, 0xa, 0x10, 0xd5, 0x78, 0xa, 0x10, 0xe7, 0x78, 0xa, 0x10, 0xf6, 0x78, 0xa, 0x10, 0x8a, 0x45, 0xf0, 0x88, 0x45, 0xec, 0x80, 0x7d, 0xec, 0x4, 0x77, 0xdb, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x2c, 0x79, 0xa, 0x10, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a7861, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100a7866, 0x5)   calld(sys_check_available_stack_size, 0xbe4e7); /* call 0x10165d52 */
    II(0x100a786b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a786c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a786d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a786e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a786f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a7870, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a7872, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100a7878, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a787b, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100a787e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a7881, 0x4)   cmp(memd_a32(ds, eax + 0x52), 0x40);  /* cmp dword [eax+0x52], 0x40 */
    II(0x100a7885, 0x2)   jnzd(0x100a7896, 0xf);                /* jnz 0x100a7896 */
    II(0x100a7887, 0x5)   mov(edx, 0x101a0c5b);                 /* mov edx, 0x101a0c5b */ /* "Clear air zones: " */
    II(0x100a788c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a788f, 0x5)   calld(sys_strcpy, 0xbe63b);           /* call 0x10165ecf */
    II(0x100a7894, 0x2)   jmpd(0x100a78a3, 0xd);                /* jmp 0x100a78a3 */
l_0x100a7896:
    II(0x100a7896, 0x5)   mov(edx, 0x101a0c6d);                 /* mov edx, 0x101a0c6d */ /* "Clear land / sea zones: " */
    II(0x100a789b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a789e, 0x5)   calld(sys_strcpy, 0xbe62c);           /* call 0x10165ecf */
l_0x100a78a3:
    II(0x100a78a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a78a6, 0x3)   mov(al, memb_a32(ds, eax + 0x13));    /* mov al, [eax+0x13] */
    II(0x100a78a9, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x100a78ac, 0x5)   jmpd(0x100a7940, 0x8f);               /* jmp 0x100a7940 */
l_0x100a78b1:
    II(0x100a78b1, 0x5)   mov(edx, 0x101a0c86);                 /* mov edx, 0x101a0c86 */ /* "waiting" */
    II(0x100a78b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a78b9, 0x5)   calld(sys_strcat, 0xbe673);           /* call 0x10165f31 */
    II(0x100a78be, 0x5)   jmpd(0x100a795b, 0x98);               /* jmp 0x100a795b */
l_0x100a78c3:
    II(0x100a78c3, 0x5)   mov(edx, 0x101a0c8e);                 /* mov edx, 0x101a0c8e */ /* "examining zones" */
    II(0x100a78c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a78cb, 0x5)   calld(sys_strcat, 0xbe661);           /* call 0x10165f31 */
    II(0x100a78d0, 0x5)   jmpd(0x100a795b, 0x86);               /* jmp 0x100a795b */
l_0x100a78d5:
    II(0x100a78d5, 0x5)   mov(edx, 0x101a0c9e);                 /* mov edx, 0x101a0c9e */ /* "searching map" */
    II(0x100a78da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a78dd, 0x5)   calld(sys_strcat, 0xbe64f);           /* call 0x10165f31 */
    II(0x100a78e2, 0x5)   jmpd(0x100a795b, 0x74);               /* jmp 0x100a795b */
l_0x100a78e7:
    II(0x100a78e7, 0x5)   mov(edx, 0x101a0cac);                 /* mov edx, 0x101a0cac */ /* "waiting for path" */
    II(0x100a78ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a78ef, 0x5)   calld(sys_strcat, 0xbe63d);           /* call 0x10165f31 */
    II(0x100a78f4, 0x2)   jmpd(0x100a795b, 0x65);               /* jmp 0x100a795b */
l_0x100a78f6:
    II(0x100a78f6, 0x5)   mov(edx, 0x101a0cbd);                 /* mov edx, 0x101a0cbd */ /* "moving " */
    II(0x100a78fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a78fe, 0x5)   calld(sys_strcat, 0xbe62e);           /* call 0x10165f31 */
    II(0x100a7903, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a7906, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a7909, 0x5)   calld(0x10076574, -0x3139a);          /* call 0x10076574 */
    II(0x100a790e, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100a7911, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100a7914, 0x3)   imul(edx, edx, 0x33);                 /* imul edx, edx, 0x33 */
    II(0x100a7917, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c81d7)); /* mov edx, [edx+0x101c81d7] */
    II(0x100a791d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7920, 0x5)   calld(sys_strcat, 0xbe60c);           /* call 0x10165f31 */
    II(0x100a7925, 0x2)   jmpd(0x100a795b, 0x34);               /* jmp 0x100a795b */
l_0x100a7927:
    II(0x100a7927, 0x2)   jmpd(0x100a795b, 0x32);               /* jmp 0x100a795b */
//    II(0x100a7929, 0x3)   /* Выравнивание. */
//    II(0x100a792c, 0x14)  /* Служебная область с абсолютными адресами переходов. {0x100a78b1, 0x100a78c3, 0x100a78d5, 0x100a78e7, 0x100a78f6}. */
l_0x100a7940:
    II(0x100a7940, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x100a7943, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100a7946, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0x4);   /* cmp byte [ebp-0x14], 0x4 */
    II(0x100a794a, 0x2)   jad(0x100a7927, -0x25);               /* ja 0x100a7927 */
    II(0x100a794c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100a794e, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100a7951, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100a7954, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x100a792c), (0x100a78b1)(0x100a78c3)(0x100a78d5)(0x100a78e7)(0x100a78f6)); /* jmp dword near [cs:eax+0x100a792c] */
l_0x100a795b:
    II(0x100a795b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a795e, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a7961, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a7964, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a7966, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a7967, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a7968, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a7969, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a796a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a796b, 0x1)   retd();                               /* ret */
FUNC_END

