FUNC_BEGIN(0x100a63ef, 0xf9e17c9e03b6d2ec, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x59, 0xf9, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x4b, 0x4e, 0xfe, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xf4, 0xfc, 0xff, 0xff, 0x66, 0x85, 0xc0, 0xf, 0x84, 0x84, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xe3, 0x4e, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xf, 0xe8, 0xd4, 0x4a, 0xfe, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xff, 0x53, 0x2c, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xf7, 0x4e, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x48, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xf, 0xe8, 0xee, 0x48, 0x9, 0, 0x84, 0xc0, 0x74, 0x1d, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xf, 0xe8, 0x96, 0x4a, 0xfe, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xec, 0xff, 0x53, 0x38, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xf, 0xe8, 0x33, 0x4b, 0xfe, 0xff, 0x8b, 0x55, 0xf8, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x69, 0xf9, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a63ef, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100a63f4, 0x5)   calld(sys_check_available_stack_size, 0xbf959); /* call 0x10165d52 */
    II(0x100a63f9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a63fa, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a63fb, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a63fc, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a63fd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a63fe, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a6400, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100a6406, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a6409, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100a640c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a640f, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x100a6412, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a6415, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6418, 0x5)   calld(0x1008b268, -0x1b1b5);          /* call 0x1008b268 */
    II(0x100a641d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a6420, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6423, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100a6426, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100a6429, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a642c, 0x5)   calld(0x100a6125, -0x30c);            /* call 0x100a6125 */
    II(0x100a6431, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100a6434, 0x6)   jzd(0x100a64be, 0x84);                /* jz dword 0x100a64be */
    II(0x100a643a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100a643e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a6441, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6444, 0x5)   calld(0x1008b32c, -0x1b11d);          /* call 0x1008b32c */
    II(0x100a6449, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a644c, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a644f, 0x5)   calld(0x1008af28, -0x1b52c);          /* call 0x1008af28 */
    II(0x100a6454, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100a6457, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a645a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100a645d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x100a6460, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a6463, 0x3)   calld_abs(memd_a32(ds, ebx + 0x2c));  /* call dword near [ebx+0x2c] */
    II(0x100a6466, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a6469, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a646c, 0x5)   calld(my_2_get_count, -0x1b109);      /* call 0x1008b368 */
    II(0x100a6471, 0x1)   cwde();                               /* cwde */
    II(0x100a6472, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a6474, 0x2)   jnzd(0x100a64be, 0x48);               /* jnz 0x100a64be */
    II(0x100a6476, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6478, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a647b, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a647e, 0x5)   calld(0x1013ad71, 0x948ee);           /* call 0x1013ad71 */
    II(0x100a6483, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a6485, 0x2)   jzd(0x100a64a4, 0x1d);                /* jz 0x100a64a4 */
    II(0x100a6487, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a648a, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a648d, 0x5)   calld(0x1008af28, -0x1b56a);          /* call 0x1008af28 */
    II(0x100a6492, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100a6495, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a6498, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100a649b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
//    II(0x100a649e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a64a1, 0x3)   calld_abs(memd_a32(ds, ebx + 0x38));  /* call dword near [ebx+0x38] */
l_0x100a64a4:
    II(0x100a64a4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a64a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a64a9, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a64ac, 0x5)   calld(0x1008afe4, -0x1b4cd);          /* call 0x1008afe4 */
    II(0x100a64b1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a64b4, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a64b9, 0x5)   calld(0x100a5e27, -0x697);            /* call 0x100a5e27 */
l_0x100a64be:
    II(0x100a64be, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a64c0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a64c1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a64c2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a64c3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a64c4, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a64c5, 0x1)   retd();                               /* ret */
FUNC_END

