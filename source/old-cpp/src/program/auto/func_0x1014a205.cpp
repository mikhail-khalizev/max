FUNC_BEGIN(0x1014a205, 0x150bd376ae29e3c6, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x43, 0xbb, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xf0, 0x83, 0x7d, 0xfc, 0, 0x74, 0x6, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0xf7, 0x45, 0xf0, 0x80, 0x1, 0, 0, 0x74, 0x12, 0x8b, 0x55, 0xf8, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x43, 0xa6, 0xfb, 0xff, 0xe9, 0x34, 0x2, 0, 0, 0xf7, 0x45, 0xf0, 0, 0x2, 0, 0, 0xf, 0x84, 0xd, 0x1, 0, 0, 0xf7, 0x45, 0xf0, 0x1, 0, 0, 0, 0xf, 0x84, 0x7d, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x77, 0xfe, 0xff, 0xff, 0x88, 0x45, 0xec, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0xb1, 0xc0, 0xf2, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x27, 0xc2, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd6, 0xa, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x18, 0x8d, 0x45, 0xe8, 0xe8, 0xf9, 0xc0, 0xf2, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x3f, 0xfe, 0xff, 0xff, 0x3a, 0x45, 0xec, 0x72, 0x2, 0xeb, 0xa, 0x8d, 0x45, 0xe8, 0xe8, 0x37, 0xc9, 0xf2, 0xff, 0xeb, 0xce, 0x8b, 0x5d, 0xf8, 0x8d, 0x45, 0xe8, 0xe8, 0xbe, 0x8, 0xf4, 0xff, 0x89, 0xc2, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0x36, 0xae, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x88, 0xbc, 0xf2, 0xff, 0xe9, 0x7e, 0, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0x7, 0xc2, 0xf2, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x18, 0x89, 0x45, 0xdc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x28, 0xc0, 0xf2, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x22, 0xc1, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x4d, 0xa, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x12, 0x8d, 0x45, 0xe4, 0xe8, 0x70, 0xc0, 0xf2, 0xff, 0x66, 0x8b, 0x40, 0x18, 0x66, 0x3b, 0x45, 0xdc, 0x7c, 0x2, 0xeb, 0xa, 0x8d, 0x45, 0xe4, 0xe8, 0xb4, 0xc8, 0xf2, 0xff, 0xeb, 0xd4, 0x8b, 0x5d, 0xf8, 0x8d, 0x45, 0xe4, 0xe8, 0x3b, 0x8, 0xf4, 0xff, 0x89, 0xc2, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xb3, 0xad, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x5, 0xbc, 0xf2, 0xff, 0xe9, 0x1a, 0x1, 0, 0, 0xf7, 0x45, 0xf0, 0x40, 0, 0, 0, 0xf, 0x84, 0x75, 0, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xd8, 0xe8, 0x77, 0xc1, 0xf2, 0xff, 0x89, 0x45, 0xd4, 0x80, 0x65, 0xf4, 0xfe, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xa2, 0xbf, 0xf2, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0x9c, 0xc0, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xc7, 0x9, 0xff, 0xff, 0x84, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xd8, 0xe8, 0xea, 0xbf, 0xf2, 0xff, 0xf6, 0x40, 0x14, 0x1, 0x74, 0x2, 0xeb, 0xa, 0x8d, 0x45, 0xd8, 0xe8, 0x32, 0xc8, 0xf2, 0xff, 0xeb, 0xd8, 0x8b, 0x5d, 0xf8, 0x8d, 0x45, 0xd8, 0xe8, 0xb9, 0x7, 0xf4, 0xff, 0x89, 0xc2, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x31, 0xad, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x83, 0xbb, 0xf2, 0xff, 0xe9, 0x98, 0, 0, 0, 0xf7, 0x45, 0xf0, 0x20, 0, 0, 0, 0xf, 0x84, 0x8b, 0, 0, 0, 0xf7, 0x45, 0xf0, 0x1, 0, 0, 0, 0x74, 0x12, 0x8b, 0x55, 0xf8, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0x7f, 0xa4, 0xfb, 0xff, 0xe9, 0x70, 0, 0, 0, 0xb8, 0x90, 0x81, 0x1c, 0x10, 0xe8, 0x18, 0xbf, 0xf2, 0xff, 0x8d, 0x5d, 0xd0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x8c, 0xc0, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x3b, 0x9, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x1f, 0x8d, 0x45, 0xd0, 0xe8, 0x5e, 0xbf, 0xf2, 0xff, 0xf6, 0x40, 0x12, 0x2, 0x74, 0xf, 0x8d, 0x45, 0xd0, 0xe8, 0x50, 0xbf, 0xf2, 0xff, 0x66, 0x83, 0x78, 0x8, 0x59, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0xa, 0x8d, 0x45, 0xd0, 0xe8, 0x95, 0xc7, 0xf2, 0xff, 0xeb, 0xc7, 0x8b, 0x5d, 0xf8, 0x8d, 0x45, 0xd0, 0xe8, 0x1c, 0x7, 0xf4, 0xff, 0x89, 0xc2, 0xb8, 0x90, 0x81, 0x1c, 0x10, 0xe8, 0x94, 0xac, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xe6, 0xba, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1014a205, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x1014a20a, 0x5)   calld(sys_check_available_stack_size, 0x1bb43); /* call 0x10165d52 */
    II(0x1014a20f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1014a210, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1014a211, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014a212, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014a213, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014a214, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014a216, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x1014a21c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1014a21f, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1014a222, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a225, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1014a228, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1014a22b, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x1014a22f, 0x2)   jzd(0x1014a237, 0x6);                 /* jz 0x1014a237 */
    II(0x1014a231, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014a234, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x1014a237:
    II(0x1014a237, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x180); /* test dword [ebp-0x10], 0x180 */
    II(0x1014a23e, 0x2)   jzd(0x1014a252, 0x12);                /* jz 0x1014a252 */
    II(0x1014a240, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014a243, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x1014a248, 0x5)   calld(0x10104890, -0x459bd);          /* call 0x10104890 */
    II(0x1014a24d, 0x5)   jmpd(0x1014a486, 0x234);              /* jmp 0x1014a486 */
l_0x1014a252:
    II(0x1014a252, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x200); /* test dword [ebp-0x10], 0x200 */
    II(0x1014a259, 0x6)   jzd(0x1014a36c, 0x10d);               /* jz dword 0x1014a36c */
    II(0x1014a25f, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x1);  /* test dword [ebp-0x10], 0x1 */
    II(0x1014a266, 0x6)   jzd(0x1014a2e9, 0x7d);                /* jz dword 0x1014a2e9 */
    II(0x1014a26c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a26f, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1014a272, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014a275, 0x5)   calld(0x1014a0f1, -0x189);            /* call 0x1014a0f1 */
    II(0x1014a27a, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x1014a27d, 0x5)   mov(eax, 0x101c8178);                 /* mov eax, 0x101c8178 */
    II(0x1014a282, 0x5)   calld(0x10076338, -0xd3f4f);          /* call 0x10076338 */
    II(0x1014a287, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a289, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014a28c, 0x5)   calld(0x100764b8, -0xd3dd9);          /* call 0x100764b8 */
l_0x1014a291:
    II(0x1014a291, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a293, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014a296, 0x5)   calld(0x1013ad71, -0xf52a);           /* call 0x1013ad71 */
    II(0x1014a29b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014a29d, 0x2)   jzd(0x1014a2b7, 0x18);                /* jz 0x1014a2b7 */
    II(0x1014a29f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014a2a2, 0x5)   calld(0x100763a0, -0xd3f07);          /* call 0x100763a0 */
    II(0x1014a2a7, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1014a2aa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014a2ad, 0x5)   calld(0x1014a0f1, -0x1c1);            /* call 0x1014a0f1 */
    II(0x1014a2b2, 0x3)   cmp(al, memb_a32(ss, ebp - 0x14));    /* cmp al, [ebp-0x14] */
    II(0x1014a2b5, 0x2)   jbd(0x1014a2b9, 0x2);                 /* jb 0x1014a2b9 */
l_0x1014a2b7:
    II(0x1014a2b7, 0x2)   jmpd(0x1014a2c3, 0xa);                /* jmp 0x1014a2c3 */
l_0x1014a2b9:
    II(0x1014a2b9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014a2bc, 0x5)   calld(0x10076bf8, -0xd36c9);          /* call 0x10076bf8 */
    II(0x1014a2c1, 0x2)   jmpd(0x1014a291, -0x32);              /* jmp 0x1014a291 */
l_0x1014a2c3:
    II(0x1014a2c3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014a2c6, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014a2c9, 0x5)   calld(0x1008ab8c, -0xbf742);          /* call 0x1008ab8c */
    II(0x1014a2ce, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a2d0, 0x5)   mov(eax, 0x101c8178);                 /* mov eax, 0x101c8178 */
    II(0x1014a2d5, 0x5)   calld(0x10155110, 0xae36);            /* call 0x10155110 */
    II(0x1014a2da, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a2dc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014a2df, 0x5)   calld(0x10075f6c, -0xd4378);          /* call 0x10075f6c */
    II(0x1014a2e4, 0x5)   jmpd(0x1014a367, 0x7e);               /* jmp 0x1014a367 */
l_0x1014a2e9:
    II(0x1014a2e9, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1014a2ed, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014a2f0, 0x5)   calld(0x100764fc, -0xd3df9);          /* call 0x100764fc */
    II(0x1014a2f5, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1014a2f8, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1014a2fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a2ff, 0x4)   mov(ax, memw_a32(ds, eax + 0x18));    /* mov ax, [eax+0x18] */
    II(0x1014a303, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1014a306, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1014a30b, 0x5)   calld(0x10076338, -0xd3fd8);          /* call 0x10076338 */
    II(0x1014a310, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a312, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014a315, 0x5)   calld(0x1007643c, -0xd3ede);          /* call 0x1007643c */
l_0x1014a31a:
    II(0x1014a31a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a31c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014a31f, 0x5)   calld(0x1013ad71, -0xf5b3);           /* call 0x1013ad71 */
    II(0x1014a324, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014a326, 0x2)   jzd(0x1014a33a, 0x12);                /* jz 0x1014a33a */
    II(0x1014a328, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014a32b, 0x5)   calld(0x100763a0, -0xd3f90);          /* call 0x100763a0 */
    II(0x1014a330, 0x4)   mov(ax, memw_a32(ds, eax + 0x18));    /* mov ax, [eax+0x18] */
    II(0x1014a334, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x1014a338, 0x2)   jld(0x1014a33c, 0x2);                 /* jl 0x1014a33c */
l_0x1014a33a:
    II(0x1014a33a, 0x2)   jmpd(0x1014a346, 0xa);                /* jmp 0x1014a346 */
l_0x1014a33c:
    II(0x1014a33c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014a33f, 0x5)   calld(0x10076bf8, -0xd374c);          /* call 0x10076bf8 */
    II(0x1014a344, 0x2)   jmpd(0x1014a31a, -0x2c);              /* jmp 0x1014a31a */
l_0x1014a346:
    II(0x1014a346, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014a349, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014a34c, 0x5)   calld(0x1008ab8c, -0xbf7c5);          /* call 0x1008ab8c */
    II(0x1014a351, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a353, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1014a358, 0x5)   calld(0x10155110, 0xadb3);            /* call 0x10155110 */
    II(0x1014a35d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a35f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014a362, 0x5)   calld(0x10075f6c, -0xd43fb);          /* call 0x10075f6c */
l_0x1014a367:
    II(0x1014a367, 0x5)   jmpd(0x1014a486, 0x11a);              /* jmp 0x1014a486 */
l_0x1014a36c:
    II(0x1014a36c, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x40); /* test dword [ebp-0x10], 0x40 */
    II(0x1014a373, 0x6)   jzd(0x1014a3ee, 0x75);                /* jz dword 0x1014a3ee */
    II(0x1014a379, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1014a37d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1014a380, 0x5)   calld(0x100764fc, -0xd3e89);          /* call 0x100764fc */
    II(0x1014a385, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1014a388, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1014a38c, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x1014a391, 0x5)   calld(0x10076338, -0xd405e);          /* call 0x10076338 */
    II(0x1014a396, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a398, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1014a39b, 0x5)   calld(0x1007643c, -0xd3f64);          /* call 0x1007643c */
l_0x1014a3a0:
    II(0x1014a3a0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a3a2, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1014a3a5, 0x5)   calld(0x1013ad71, -0xf639);           /* call 0x1013ad71 */
    II(0x1014a3aa, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014a3ac, 0x2)   jzd(0x1014a3bc, 0xe);                 /* jz 0x1014a3bc */
    II(0x1014a3ae, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1014a3b1, 0x5)   calld(0x100763a0, -0xd4016);          /* call 0x100763a0 */
    II(0x1014a3b6, 0x4)   test(memb_a32(ds, eax + 0x14), 0x1);  /* test byte [eax+0x14], 0x1 */
    II(0x1014a3ba, 0x2)   jzd(0x1014a3be, 0x2);                 /* jz 0x1014a3be */
l_0x1014a3bc:
    II(0x1014a3bc, 0x2)   jmpd(0x1014a3c8, 0xa);                /* jmp 0x1014a3c8 */
l_0x1014a3be:
    II(0x1014a3be, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1014a3c1, 0x5)   calld(0x10076bf8, -0xd37ce);          /* call 0x10076bf8 */
    II(0x1014a3c6, 0x2)   jmpd(0x1014a3a0, -0x28);              /* jmp 0x1014a3a0 */
l_0x1014a3c8:
    II(0x1014a3c8, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014a3cb, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1014a3ce, 0x5)   calld(0x1008ab8c, -0xbf847);          /* call 0x1008ab8c */
    II(0x1014a3d3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a3d5, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x1014a3da, 0x5)   calld(0x10155110, 0xad31);            /* call 0x10155110 */
    II(0x1014a3df, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a3e1, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1014a3e4, 0x5)   calld(0x10075f6c, -0xd447d);          /* call 0x10075f6c */
    II(0x1014a3e9, 0x5)   jmpd(0x1014a486, 0x98);               /* jmp 0x1014a486 */
l_0x1014a3ee:
    II(0x1014a3ee, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x20); /* test dword [ebp-0x10], 0x20 */
    II(0x1014a3f5, 0x6)   jzd(0x1014a486, 0x8b);                /* jz dword 0x1014a486 */
    II(0x1014a3fb, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x1);  /* test dword [ebp-0x10], 0x1 */
    II(0x1014a402, 0x2)   jzd(0x1014a416, 0x12);                /* jz 0x1014a416 */
    II(0x1014a404, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014a407, 0x5)   mov(eax, 0x101c8178);                 /* mov eax, 0x101c8178 */
    II(0x1014a40c, 0x5)   calld(0x10104890, -0x45b81);          /* call 0x10104890 */
    II(0x1014a411, 0x5)   jmpd(0x1014a486, 0x70);               /* jmp 0x1014a486 */
l_0x1014a416:
    II(0x1014a416, 0x5)   mov(eax, 0x101c8190);                 /* mov eax, 0x101c8190 */
    II(0x1014a41b, 0x5)   calld(0x10076338, -0xd40e8);          /* call 0x10076338 */
    II(0x1014a420, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x1014a423, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a425, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1014a427, 0x5)   calld(0x100764b8, -0xd3f74);          /* call 0x100764b8 */
l_0x1014a42c:
    II(0x1014a42c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a42e, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1014a431, 0x5)   calld(0x1013ad71, -0xf6c5);           /* call 0x1013ad71 */
    II(0x1014a436, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014a438, 0x2)   jzd(0x1014a459, 0x1f);                /* jz 0x1014a459 */
    II(0x1014a43a, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1014a43d, 0x5)   calld(0x100763a0, -0xd40a2);          /* call 0x100763a0 */
    II(0x1014a442, 0x4)   test(memb_a32(ds, eax + 0x12), 0x2);  /* test byte [eax+0x12], 0x2 */
    II(0x1014a446, 0x2)   jzd(0x1014a457, 0xf);                 /* jz 0x1014a457 */
    II(0x1014a448, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1014a44b, 0x5)   calld(0x100763a0, -0xd40b0);          /* call 0x100763a0 */
    II(0x1014a450, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x59);   /* cmp word [eax+0x8], 0x59 */
    II(0x1014a455, 0x2)   jnzd(0x1014a459, 0x2);                /* jnz 0x1014a459 */
l_0x1014a457:
    II(0x1014a457, 0x2)   jmpd(0x1014a45b, 0x2);                /* jmp 0x1014a45b */
l_0x1014a459:
    II(0x1014a459, 0x2)   jmpd(0x1014a465, 0xa);                /* jmp 0x1014a465 */
l_0x1014a45b:
    II(0x1014a45b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1014a45e, 0x5)   calld(0x10076bf8, -0xd386b);          /* call 0x10076bf8 */
    II(0x1014a463, 0x2)   jmpd(0x1014a42c, -0x39);              /* jmp 0x1014a42c */
l_0x1014a465:
    II(0x1014a465, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014a468, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1014a46b, 0x5)   calld(0x1008ab8c, -0xbf8e4);          /* call 0x1008ab8c */
    II(0x1014a470, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014a472, 0x5)   mov(eax, 0x101c8190);                 /* mov eax, 0x101c8190 */
    II(0x1014a477, 0x5)   calld(0x10155110, 0xac94);            /* call 0x10155110 */
    II(0x1014a47c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a47e, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1014a481, 0x5)   calld(0x10075f6c, -0xd451a);          /* call 0x10075f6c */
l_0x1014a486:
    II(0x1014a486, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014a488, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014a489, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014a48a, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014a48b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014a48c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1014a48d, 0x1)   retd();                               /* ret */
FUNC_END

