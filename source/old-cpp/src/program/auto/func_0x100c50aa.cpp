FUNC_BEGIN(0x100c50aa, 0x1bd38c1ef089ccd7, 0x20, ({0x68, 0x44, 0x1, 0, 0, 0xe8, 0x9e, 0xc, 0xa, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0x1, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xb8, 0xe8, 0x1f, 0x4f, 0, 0, 0x89, 0x45, 0xb4, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xac, 0xe8, 0x9, 0x6b, 0xfc, 0xff, 0x89, 0x45, 0xc8, 0x80, 0x65, 0xf4, 0xfe, 0x8d, 0x45, 0xc4, 0xe8, 0xfd, 0x19, 0xfb, 0xff, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xc4, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xc4, 0x66, 0xff, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xac, 0, 0, 0, 0x66, 0xc7, 0x45, 0xc6, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xc6, 0x66, 0xff, 0x45, 0xc6, 0x8b, 0x45, 0xc6, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x88, 0, 0, 0, 0xf, 0xbf, 0x55, 0xc6, 0xf, 0xbf, 0x45, 0xc4, 0xe8, 0xb8, 0xeb, 0xfa, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xa8, 0xeb, 0x45, 0xf, 0xbf, 0x5d, 0xc6, 0xf, 0xbf, 0x55, 0xc4, 0x8d, 0x45, 0xac, 0xe8, 0xc8, 0x55, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0x2, 0xeb, 0x54, 0xf, 0xbf, 0x5d, 0xc6, 0xf, 0xbf, 0x55, 0xc4, 0x8d, 0x45, 0xac, 0xe8, 0xb1, 0x55, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0x1, 0xeb, 0x3d, 0xf, 0xbf, 0x5d, 0xc6, 0xf, 0xbf, 0x55, 0xc4, 0x8d, 0x45, 0xac, 0xe8, 0x9a, 0x55, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0, 0xeb, 0x26, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xa4, 0x66, 0x83, 0x7d, 0xa4, 0x2, 0x72, 0x10, 0x66, 0x83, 0x7d, 0xa4, 0x2, 0x76, 0xbe, 0x66, 0x83, 0x7d, 0xa4, 0x4, 0x74, 0xb7, 0xeb, 0xcc, 0x66, 0x83, 0x7d, 0xa4, 0x1, 0x74, 0x97, 0xeb, 0xc3, 0xe9, 0x61, 0xff, 0xff, 0xff, 0xe9, 0x3d, 0xff, 0xff, 0xff, 0x66, 0xc7, 0x45, 0xc4, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xc4, 0x66, 0xff, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xa, 0x1, 0, 0, 0x66, 0xc7, 0x45, 0xc6, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xc6, 0x66, 0xff, 0x45, 0xc6, 0x8b, 0x45, 0xc6, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xe6, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xc6, 0xf, 0xbf, 0x55, 0xc4, 0x8d, 0x45, 0xac, 0xe8, 0x15, 0x55, 0xfc, 0xff, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0xf, 0x85, 0xbf, 0, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xa0, 0xe8, 0xf3, 0x44, 0xfc, 0xff, 0x89, 0x45, 0x9c, 0x80, 0x65, 0xf4, 0xfe, 0xb8, 0x24, 0, 0, 0, 0xe8, 0xbe, 0xb, 0xa, 0, 0x89, 0x45, 0x98, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x94, 0x83, 0x7d, 0x94, 0, 0x74, 0x45, 0xe8, 0x12, 0x5a, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0x90, 0xe8, 0xfd, 0xb, 0xfb, 0xff, 0x89, 0xc1, 0x8d, 0x45, 0xb8, 0xe8, 0x67, 0x62, 0xfe, 0xff, 0x5, 0x3, 0, 0, 0, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0xac, 0xe8, 0x77, 0x54, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0x98, 0xe8, 0x45, 0x2b, 0, 0, 0x89, 0x45, 0x8c, 0x8b, 0x45, 0x8c, 0x89, 0x45, 0x88, 0xeb, 0x6, 0x8b, 0x45, 0x94, 0x89, 0x45, 0x88, 0x8b, 0x55, 0x88, 0x8d, 0x45, 0xa0, 0xe8, 0xed, 0x55, 0, 0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x18, 0x31, 0xd2, 0x8d, 0x45, 0xa0, 0xe8, 0x89, 0x43, 0xfc, 0xff, 0xe8, 0xf8, 0x2e, 0, 0, 0x84, 0xc0, 0x74, 0x1a, 0xe8, 0xf3, 0x56, 0, 0, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0xa0, 0xe8, 0x94, 0x55, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xb8, 0xe8, 0xf2, 0x55, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xa0, 0xe8, 0x1c, 0x43, 0xfc, 0xff, 0xe9, 0x3, 0xff, 0xff, 0xff, 0xe9, 0xdf, 0xfe, 0xff, 0xff, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xe4, 0xc, 0xfb, 0xff, 0x89, 0x45, 0xec, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0xff, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0xa, 0x7d, 0x12, 0xf, 0xbf, 0x45, 0xd0, 0x1, 0xc0, 0x66, 0xc7, 0x84, 0x28, 0x74, 0xff, 0xff, 0xff, 0, 0, 0xeb, 0xdf, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x2, 0xf, 0x8c, 0x4e, 0x1, 0, 0, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0xff, 0x45, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x7e, 0x61, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xd0, 0x7e, 0x2d, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x98, 0x55, 0, 0, 0xe8, 0x8f, 0x58, 0, 0, 0x66, 0x3b, 0x45, 0xe0, 0x7e, 0x14, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x81, 0x55, 0, 0, 0xe8, 0x78, 0x58, 0, 0, 0x89, 0x45, 0xe0, 0xeb, 0xbf, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0xff, 0x45, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x34, 0x61, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xd0, 0x7e, 0x5c, 0xf, 0xbf, 0x45, 0xe0, 0x83, 0xf8, 0x50, 0x7e, 0x17, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x45, 0x55, 0, 0, 0xe8, 0x3c, 0x58, 0, 0, 0x98, 0x83, 0xf8, 0x50, 0x7c, 0x3a, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x18, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x23, 0x55, 0, 0, 0x89, 0xca, 0xe8, 0xcc, 0x2d, 0, 0, 0x84, 0xc0, 0x74, 0xe, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x85, 0x70, 0xff, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0x64, 0, 0, 0, 0xeb, 0x90, 0xf, 0xbf, 0x85, 0x70, 0xff, 0xff, 0xff, 0x83, 0xf8, 0x1, 0xf, 0x85, 0x6a, 0, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xeb, 0x33, 0x66, 0xc7, 0x45, 0x80, 0x1, 0, 0xeb, 0x57, 0x66, 0xc7, 0x45, 0x80, 0x6, 0, 0xeb, 0x4f, 0x66, 0xc7, 0x45, 0x80, 0xc, 0, 0xeb, 0x47, 0x66, 0xc7, 0x45, 0x80, 0x18, 0, 0xeb, 0x3f, 0xeb, 0x3d, 0x90, 0x21, 0x54, 0xc, 0x10, 0x29, 0x54, 0xc, 0x10, 0x31, 0x54, 0xc, 0x10, 0x39, 0x54, 0xc, 0x10, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x83, 0xe8, 0x2, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0x66, 0x83, 0xbd, 0x68, 0xff, 0xff, 0xff, 0x3, 0x77, 0xd4, 0x31, 0xc0, 0x66, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x44, 0x54, 0xc, 0x10, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0xff, 0x45, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x3a, 0x60, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xd0, 0x7e, 0x13, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x54, 0x54, 0, 0, 0xe8, 0x28, 0x2f, 0, 0, 0xeb, 0xd9, 0x8d, 0x45, 0xb8, 0xe8, 0x19, 0x60, 0xfe, 0xff, 0x48, 0x89, 0x45, 0xd0, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0xff, 0x4d, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x5d, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x18, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x1a, 0x54, 0, 0, 0x89, 0xca, 0xe8, 0xc3, 0x2c, 0, 0, 0x84, 0xc0, 0x75, 0xe, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x4e, 0x5d, 0x7, 0, 0xeb, 0x2b, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xf5, 0x53, 0, 0, 0xe8, 0xec, 0x56, 0, 0, 0x66, 0x3b, 0x45, 0xe0, 0x7e, 0x14, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xde, 0x53, 0, 0, 0xe8, 0xd5, 0x56, 0, 0, 0x89, 0x45, 0xe0, 0xeb, 0x95, 0xf, 0xbf, 0x45, 0xe0, 0x83, 0xf8, 0x50, 0x7e, 0x41, 0x8d, 0x45, 0xb8, 0xe8, 0x97, 0x5f, 0xfe, 0xff, 0x48, 0x89, 0x45, 0xd0, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0xff, 0x4d, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x25, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xa3, 0x53, 0, 0, 0xe8, 0x9a, 0x56, 0, 0, 0x98, 0x83, 0xf8, 0x50, 0x7d, 0xc, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xd7, 0x5c, 0x7, 0, 0xeb, 0xcd, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0xff, 0x45, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x39, 0x5f, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xd0, 0x7e, 0x38, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x53, 0x53, 0, 0, 0xe8, 0x1a, 0x56, 0, 0, 0x84, 0xc0, 0x74, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x38, 0x53, 0, 0, 0xe8, 0x98, 0x2d, 0, 0, 0x84, 0xc0, 0x74, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0xeb, 0xb4, 0x8d, 0x45, 0xb8, 0xe8, 0xf3, 0x5e, 0xfe, 0xff, 0x66, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x1, 0x7c, 0xf, 0x8d, 0x45, 0xb8, 0xe8, 0xdb, 0x5e, 0xfe, 0xff, 0x66, 0x89, 0x85, 0x76, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x2, 0x7c, 0x8, 0xf, 0xbf, 0x45, 0x80, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x42, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x7e, 0xb, 0x66, 0xc7, 0x85, 0x7e, 0xff, 0xff, 0xff, 0x1, 0, 0xeb, 0xf, 0x8d, 0x45, 0xb8, 0xe8, 0xa6, 0x5e, 0xfe, 0xff, 0x66, 0x89, 0x85, 0x7e, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x4, 0x7c, 0x7, 0x66, 0xd1, 0xa5, 0x7e, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x5, 0x7c, 0x7, 0x66, 0xd1, 0xa5, 0x7e, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xe4, 0x1, 0xc0, 0x66, 0x89, 0x85, 0x7a, 0xff, 0xff, 0xff, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0x6d, 0x9, 0xfb, 0xff, 0x83, 0xf8, 0x3, 0x7c, 0xc, 0x8d, 0x45, 0xb8, 0xe8, 0x5c, 0x5e, 0xfe, 0xff, 0x66, 0x89, 0x45, 0x86, 0x8b, 0x45, 0xf0, 0x1, 0xc0, 0x66, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xb8, 0xe8, 0x44, 0x5e, 0xfe, 0xff, 0x2b, 0x45, 0xe4, 0x66, 0x89, 0x45, 0x82, 0x8d, 0x45, 0xb8, 0xe8, 0x35, 0x5e, 0xfe, 0xff, 0x2b, 0x45, 0xe4, 0x1, 0xc0, 0x66, 0x89, 0x45, 0x84, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2, 0, 0xb9, 0x4f, 0, 0, 0, 0x8d, 0x9d, 0x18, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8a, 0, 0x4, 0x2d, 0xf, 0xbe, 0xd0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0xaf, 0xb, 0x4, 0, 0x85, 0xc0, 0x74, 0x64, 0xc7, 0x45, 0xd0, 0x9, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x1c, 0xf, 0xbf, 0x55, 0xd0, 0xc1, 0xe2, 0x2, 0x8b, 0x92, 0xec, 0x77, 0x1b, 0x10, 0x8d, 0x85, 0x18, 0xff, 0xff, 0xff, 0xe8, 0x33, 0xa, 0xa, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xd0, 0xff, 0x4d, 0xd0, 0xeb, 0xd2, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x27, 0x8a, 0x45, 0xd0, 0x8b, 0x55, 0xfc, 0x88, 0x42, 0x2, 0x8b, 0x45, 0xfc, 0xf, 0xbe, 0x40, 0x2, 0x1, 0xc0, 0x8b, 0x84, 0x28, 0x72, 0xff, 0xff, 0xff, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x2, 0, 0xf, 0x85, 0xe8, 0x1, 0, 0, 0xc7, 0x85, 0x14, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xc7, 0x85, 0x10, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xd0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0xa, 0x7d, 0x22, 0xf, 0xbf, 0x45, 0xd0, 0x1, 0xc0, 0x8b, 0x84, 0x28, 0x72, 0xff, 0xff, 0xff, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0xc, 0x8b, 0x85, 0x10, 0xff, 0xff, 0xff, 0xff, 0x85, 0x10, 0xff, 0xff, 0xff, 0xeb, 0xce, 0x66, 0xc7, 0x45, 0xd0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0x4, 0x7d, 0x51, 0xf, 0xbf, 0x45, 0xd0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0xb, 0x8b, 0x45, 0xd0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x75, 0x2, 0xeb, 0x1a, 0xf, 0xbf, 0x45, 0xd0, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xba, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x7a, 0x48, 0xfc, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0xc, 0x8b, 0x85, 0x10, 0xff, 0xff, 0xff, 0xff, 0x8d, 0x10, 0xff, 0xff, 0xff, 0xeb, 0x9f, 0xf, 0xbf, 0x85, 0x10, 0xff, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x8e, 0x86, 0, 0, 0, 0x66, 0xc7, 0x45, 0xd0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x6a, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0xb, 0x8b, 0x45, 0xd0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x75, 0x2, 0xeb, 0x1a, 0xf, 0xbf, 0x45, 0xd0, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xba, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xfe, 0x47, 0xfc, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x25, 0xf, 0xbf, 0x55, 0xd0, 0x69, 0xd2, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xe2, 0x47, 0xfc, 0xff, 0xf, 0xbe, 0xc0, 0x1, 0xc0, 0x66, 0xc7, 0x84, 0x28, 0x74, 0xff, 0xff, 0xff, 0, 0, 0xeb, 0x82, 0x66, 0xc7, 0x45, 0xd0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0xa, 0x7d, 0x36, 0xf, 0xbf, 0x45, 0xd0, 0x1, 0xc0, 0x66, 0x8b, 0x84, 0x28, 0x74, 0xff, 0xff, 0xff, 0x1, 0x85, 0x14, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xd0, 0x1, 0xc0, 0x8b, 0x84, 0x28, 0x72, 0xff, 0xff, 0xff, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0xc, 0x8b, 0x85, 0x10, 0xff, 0xff, 0xff, 0xff, 0x85, 0x10, 0xff, 0xff, 0xff, 0xeb, 0xba, 0xf, 0xbf, 0x95, 0x14, 0xff, 0xff, 0xff, 0xe8, 0xae, 0x5, 0xa, 0, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x40, 0x89, 0x85, 0x14, 0xff, 0xff, 0xff, 0x66, 0xc7, 0x45, 0xd0, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x1, 0xc0, 0x66, 0x8b, 0x84, 0x28, 0x74, 0xff, 0xff, 0xff, 0x29, 0x85, 0x14, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x7f, 0xda, 0x8a, 0x45, 0xd0, 0x8b, 0x55, 0xfc, 0x88, 0x42, 0x2, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x2, 0x88, 0x85, 0xc, 0xff, 0xff, 0xff, 0xe9, 0xd1, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0x90, 0x5b, 0xfe, 0xff, 0x48, 0x66, 0x89, 0x45, 0xd0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x4d, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x23, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x9a, 0x4f, 0, 0, 0xe8, 0x61, 0x52, 0, 0, 0x84, 0xc0, 0x75, 0xc, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xd0, 0x58, 0x7, 0, 0xeb, 0xce, 0xe9, 0xd2, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0x4a, 0x5b, 0xfe, 0xff, 0x48, 0x66, 0x89, 0x45, 0xd0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x4d, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x23, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x54, 0x4f, 0, 0, 0xe8, 0xb4, 0x29, 0, 0, 0x84, 0xc0, 0x75, 0xc, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x8a, 0x58, 0x7, 0, 0xeb, 0xce, 0xe9, 0x8c, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0x4, 0x5b, 0xfe, 0xff, 0x48, 0x66, 0x89, 0x45, 0xd0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x4d, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x23, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xe, 0x4f, 0, 0, 0xe8, 0x6e, 0x29, 0, 0, 0x84, 0xc0, 0x74, 0xc, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x44, 0x58, 0x7, 0, 0xeb, 0xce, 0xeb, 0x49, 0xeb, 0x47, 0x8a, 0x85, 0xc, 0xff, 0xff, 0xff, 0x88, 0x85, 0x8, 0xff, 0xff, 0xff, 0x80, 0xbd, 0x8, 0xff, 0xff, 0xff, 0x4, 0x72, 0x23, 0x80, 0xbd, 0x8, 0xff, 0xff, 0xff, 0x4, 0xf, 0x86, 0xd, 0xff, 0xff, 0xff, 0x80, 0xbd, 0x8, 0xff, 0xff, 0xff, 0x7, 0x72, 0xb, 0x80, 0xbd, 0x8, 0xff, 0xff, 0xff, 0x8, 0x76, 0x87, 0xeb, 0xc8, 0xeb, 0xc6, 0x80, 0xbd, 0x8, 0xff, 0xff, 0xff, 0x3, 0xf, 0x84, 0x30, 0xff, 0xff, 0xff, 0xeb, 0xb7, 0x66, 0xc7, 0x45, 0xd0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xde, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0x5c, 0x5a, 0xfe, 0xff, 0x98, 0x83, 0xf8, 0x1, 0x7e, 0xb, 0x8b, 0x45, 0xd0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x75, 0x2, 0xeb, 0x18, 0xf, 0xbf, 0x45, 0xd0, 0x6b, 0xd0, 0x13, 0xb8, 0xb4, 0x35, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xc6, 0x58, 0xfc, 0xff, 0x98, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0xa1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0xf, 0x85, 0x83, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd0, 0x6b, 0xc0, 0x13, 0x8b, 0x98, 0xbc, 0x35, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x45, 0xd0, 0x6b, 0xc0, 0x13, 0x8b, 0x90, 0xba, 0x35, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xac, 0xe8, 0x36, 0x4c, 0xfc, 0xff, 0x8d, 0x14, 0x18, 0x31, 0xc0, 0x8a, 0x2, 0x89, 0x45, 0xcc, 0x8d, 0x45, 0xb8, 0xe8, 0xd4, 0x59, 0xfe, 0xff, 0x48, 0x89, 0x45, 0xdc, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x4d, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x85, 0xc0, 0x7c, 0xe, 0x8d, 0x45, 0xb8, 0xe8, 0xb8, 0x59, 0xfe, 0xff, 0x98, 0x83, 0xf8, 0x1, 0x7f, 0x2, 0xeb, 0x25, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xb8, 0xe8, 0xd0, 0x4d, 0, 0, 0xe8, 0xfb, 0x50, 0, 0, 0x66, 0x3b, 0x45, 0xcc, 0x75, 0xc, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x45, 0xb8, 0xe8, 0x4, 0x57, 0x7, 0, 0xeb, 0xbd, 0xe9, 0xe, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0xd8, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0xd0, 0x8d, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0x25, 0xf, 0xfb, 0xff, 0x8b, 0x55, 0xfc, 0x80, 0x7a, 0x2, 0x1, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x2, 0x3, 0x75, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x2, 0x4, 0x75, 0x2, 0xeb, 0xd, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x2, 0x9, 0xf, 0x85, 0xee, 0, 0, 0, 0xc7, 0x85, 0, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xd0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x4, 0x59, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xd0, 0x7e, 0x4d, 0x8d, 0x9d, 0xfc, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x18, 0x4d, 0, 0, 0x89, 0xda, 0xe8, 0x61, 0x25, 0, 0, 0x89, 0xc3, 0x8d, 0x95, 0x4, 0xff, 0xff, 0xff, 0x8d, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0xe8, 0x5e, 0x2, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0xbd, 0x3, 0xfe, 0xff, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x66, 0x3b, 0x85, 0, 0xff, 0xff, 0xff, 0x7e, 0x9, 0x8b, 0x45, 0xd4, 0x89, 0x85, 0, 0xff, 0xff, 0xff, 0xeb, 0x9e, 0x8d, 0x45, 0xb8, 0xe8, 0xa9, 0x58, 0xfe, 0xff, 0x48, 0x66, 0x89, 0x45, 0xd0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x4d, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x5c, 0x8d, 0x9d, 0xf4, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xad, 0x4c, 0, 0, 0x89, 0xda, 0xe8, 0xf6, 0x24, 0, 0, 0x89, 0xc3, 0x8d, 0x95, 0x4, 0xff, 0xff, 0xff, 0x8d, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0xe8, 0xf3, 0x1, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0x52, 0x3, 0xfe, 0xff, 0x89, 0x45, 0xd4, 0xf, 0xbf, 0x95, 0, 0xff, 0xff, 0xff, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xd4, 0x39, 0xc2, 0x7d, 0xc, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xb0, 0x55, 0x7, 0, 0xeb, 0x95, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x2, 0x5, 0xf, 0x85, 0xf0, 0, 0, 0, 0x66, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0x66, 0x3, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x89, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x66, 0xc7, 0x45, 0xd0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0, 0x58, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xd0, 0x7e, 0x4d, 0x8d, 0x9d, 0xe8, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x14, 0x4c, 0, 0, 0x89, 0xda, 0xe8, 0x5d, 0x24, 0, 0, 0x89, 0xc3, 0x8d, 0x95, 0x4, 0xff, 0xff, 0xff, 0x8d, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0xe8, 0x5a, 0x1, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0xb9, 0x2, 0xfe, 0xff, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x66, 0x3b, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x7d, 0x9, 0x8b, 0x45, 0xd4, 0x89, 0x85, 0xec, 0xfe, 0xff, 0xff, 0xeb, 0x9e, 0x8d, 0x45, 0xb8, 0xe8, 0xa5, 0x57, 0xfe, 0xff, 0x48, 0x66, 0x89, 0x45, 0xd0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x4d, 0xd0, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0x55, 0x8d, 0x9d, 0xe0, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xa9, 0x4b, 0, 0, 0x89, 0xda, 0xe8, 0xf2, 0x23, 0, 0, 0x89, 0xc3, 0x8d, 0x95, 0x4, 0xff, 0xff, 0xff, 0x8d, 0x85, 0xdc, 0xfe, 0xff, 0xff, 0xe8, 0xef, 0, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0x4e, 0x2, 0xfe, 0xff, 0x89, 0x45, 0xd4, 0xf, 0xbf, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x1, 0xc0, 0xf, 0xbf, 0x55, 0xd4, 0x39, 0xc2, 0x7e, 0xc, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xb3, 0x54, 0x7, 0, 0xeb, 0x9c, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0x66, 0xc7, 0x45, 0xd0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x1c, 0x57, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xd0, 0x7e, 0x16, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x36, 0x4b, 0, 0, 0xe8, 0x2d, 0x4e, 0, 0, 0x1, 0x45, 0xd8, 0xeb, 0xd5, 0xf, 0xbf, 0x45, 0xd8, 0x85, 0xc0, 0x75, 0x30, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc6, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0x9e, 0x5e, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x19, 0x4a, 0, 0, 0xe9, 0xbd, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd8, 0xe8, 0x82, 0, 0xa, 0, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x40, 0x89, 0x45, 0xd8, 0x66, 0xc7, 0x45, 0xd0, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0x66, 0xff, 0x45, 0xd0, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xc8, 0x4a, 0, 0, 0xe8, 0xbf, 0x4d, 0, 0, 0x29, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x85, 0xc0, 0x7f, 0xdd, 0x8b, 0x45, 0xfc, 0xf, 0xbe, 0x58, 0x2, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x8, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x9f, 0x4a, 0, 0, 0x89, 0xca, 0xe8, 0x2a, 0x22, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xb1, 0x54, 0x7, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x38, 0xe0, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x87, 0xe5, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xc2, 0xe1, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x5, 0xe2, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xc3, 0xe2, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xf2, 0x5d, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x6d, 0x49, 0, 0, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xdc, 0x5d, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x57, 0x49, 0, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100c50aa, 0x5)   pushd(0x144);                         /* push dword 0x144 */
    II(0x100c50af, 0x5)   calld(sys_check_available_stack_size, 0xa0c9e); /* call 0x10165d52 */
    II(0x100c50b4, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100c50b5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c50b6, 0x1)   pushd(edx);                           /* push edx */
    II(0x100c50b7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c50b8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c50b9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c50ba, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c50bc, 0x6)   sub(esp, 0x124);                      /* sub esp, 0x124 */
    II(0x100c50c2, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100c50c5, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100c50c9, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c50cc, 0x5)   calld(0x100c9ff0, 0x4f1f);            /* call 0x100c9ff0 */
    II(0x100c50d1, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100c50d4, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100c50d8, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100c50dc, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100c50df, 0x5)   calld(0x1008bbed, -0x394f7);          /* call 0x1008bbed */
    II(0x100c50e4, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100c50e7, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100c50eb, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100c50ee, 0x5)   calld(my_ctor_0x101b4184, -0x4e603);  /* call 0x10076af0 */
    II(0x100c50f3, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100c50fa, 0x6)   mov(memw_a32(ss, ebp - 0x3c), 0);     /* mov word [ebp-0x3c], 0x0 */
    II(0x100c5100, 0x2)   jmpd(0x100c5109, 0x7);                /* jmp 0x100c5109 */
l_0x100c5102:
    II(0x100c5102, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100c5105, 0x4)   inc(memw_a32(ss, ebp - 0x3c));        /* inc word [ebp-0x3c] */
l_0x100c5109:
    II(0x100c5109, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100c510c, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c5113, 0x6)   jged(0x100c51c5, 0xac);               /* jge dword 0x100c51c5 */
    II(0x100c5119, 0x6)   mov(memw_a32(ss, ebp - 0x3a), 0);     /* mov word [ebp-0x3a], 0x0 */
    II(0x100c511f, 0x2)   jmpd(0x100c5128, 0x7);                /* jmp 0x100c5128 */
l_0x100c5121:
    II(0x100c5121, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3a));   /* mov eax, [ebp-0x3a] */
    II(0x100c5124, 0x4)   inc(memw_a32(ss, ebp - 0x3a));        /* inc word [ebp-0x3a] */
l_0x100c5128:
    II(0x100c5128, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3a));   /* mov eax, [ebp-0x3a] */
    II(0x100c512b, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100c5132, 0x6)   jged(0x100c51c0, 0x88);               /* jge dword 0x100c51c0 */
    II(0x100c5138, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3a)); /* movsx edx, word [ebp-0x3a] */
    II(0x100c513c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x100c5140, 0x5)   calld(0x10073cfd, -0x51448);          /* call 0x10073cfd */
    II(0x100c5145, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100c5148, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c514b, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100c514e, 0x2)   jmpd(0x100c5195, 0x45);               /* jmp 0x100c5195 */
l_0x100c5150:
    II(0x100c5150, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x3a)); /* movsx ebx, word [ebp-0x3a] */
    II(0x100c5154, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100c5158, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100c515b, 0x5)   calld(0x1008a728, -0x3aa38);          /* call 0x1008a728 */
    II(0x100c5160, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c5162, 0x3)   mov(memb_a32(ds, eax), 0x2);          /* mov byte [eax], 0x2 */
    II(0x100c5165, 0x2)   jmpd(0x100c51bb, 0x54);               /* jmp 0x100c51bb */
l_0x100c5167:
    II(0x100c5167, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x3a)); /* movsx ebx, word [ebp-0x3a] */
    II(0x100c516b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100c516f, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100c5172, 0x5)   calld(0x1008a728, -0x3aa4f);          /* call 0x1008a728 */
    II(0x100c5177, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c5179, 0x3)   mov(memb_a32(ds, eax), 0x1);          /* mov byte [eax], 0x1 */
    II(0x100c517c, 0x2)   jmpd(0x100c51bb, 0x3d);               /* jmp 0x100c51bb */
l_0x100c517e:
    II(0x100c517e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x3a)); /* movsx ebx, word [ebp-0x3a] */
    II(0x100c5182, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100c5186, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100c5189, 0x5)   calld(0x1008a728, -0x3aa66);          /* call 0x1008a728 */
    II(0x100c518e, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c5190, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
    II(0x100c5193, 0x2)   jmpd(0x100c51bb, 0x26);               /* jmp 0x100c51bb */
l_0x100c5195:
    II(0x100c5195, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100c5198, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100c519b, 0x5)   cmp(memw_a32(ss, ebp - 0x5c), 0x2);   /* cmp word [ebp-0x5c], 0x2 */
    II(0x100c51a0, 0x2)   jbd(0x100c51b2, 0x10);                /* jb 0x100c51b2 */
    II(0x100c51a2, 0x5)   cmp(memw_a32(ss, ebp - 0x5c), 0x2);   /* cmp word [ebp-0x5c], 0x2 */
    II(0x100c51a7, 0x2)   jbed(0x100c5167, -0x42);              /* jbe 0x100c5167 */
    II(0x100c51a9, 0x5)   cmp(memw_a32(ss, ebp - 0x5c), 0x4);   /* cmp word [ebp-0x5c], 0x4 */
    II(0x100c51ae, 0x2)   jzd(0x100c5167, -0x49);               /* jz 0x100c5167 */
    II(0x100c51b0, 0x2)   jmpd(0x100c517e, -0x34);              /* jmp 0x100c517e */
l_0x100c51b2:
    II(0x100c51b2, 0x5)   cmp(memw_a32(ss, ebp - 0x5c), 0x1);   /* cmp word [ebp-0x5c], 0x1 */
    II(0x100c51b7, 0x2)   jzd(0x100c5150, -0x69);               /* jz 0x100c5150 */
    II(0x100c51b9, 0x2)   jmpd(0x100c517e, -0x3d);              /* jmp 0x100c517e */
l_0x100c51bb:
    II(0x100c51bb, 0x5)   jmpd(0x100c5121, -0x9f);              /* jmp 0x100c5121 */
l_0x100c51c0:
    II(0x100c51c0, 0x5)   jmpd(0x100c5102, -0xc3);              /* jmp 0x100c5102 */
l_0x100c51c5:
    II(0x100c51c5, 0x6)   mov(memw_a32(ss, ebp - 0x3c), 0);     /* mov word [ebp-0x3c], 0x0 */
    II(0x100c51cb, 0x2)   jmpd(0x100c51d4, 0x7);                /* jmp 0x100c51d4 */
l_0x100c51cd:
    II(0x100c51cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100c51d0, 0x4)   inc(memw_a32(ss, ebp - 0x3c));        /* inc word [ebp-0x3c] */
l_0x100c51d4:
    II(0x100c51d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100c51d7, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c51de, 0x6)   jged(0x100c52ee, 0x10a);              /* jge dword 0x100c52ee */
    II(0x100c51e4, 0x6)   mov(memw_a32(ss, ebp - 0x3a), 0);     /* mov word [ebp-0x3a], 0x0 */
    II(0x100c51ea, 0x2)   jmpd(0x100c51f3, 0x7);                /* jmp 0x100c51f3 */
l_0x100c51ec:
    II(0x100c51ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3a));   /* mov eax, [ebp-0x3a] */
    II(0x100c51ef, 0x4)   inc(memw_a32(ss, ebp - 0x3a));        /* inc word [ebp-0x3a] */
l_0x100c51f3:
    II(0x100c51f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3a));   /* mov eax, [ebp-0x3a] */
    II(0x100c51f6, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100c51fd, 0x6)   jged(0x100c52e9, 0xe6);               /* jge dword 0x100c52e9 */
    II(0x100c5203, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x3a)); /* movsx ebx, word [ebp-0x3a] */
    II(0x100c5207, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100c520b, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100c520e, 0x5)   calld(0x1008a728, -0x3aaeb);          /* call 0x1008a728 */
    II(0x100c5213, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c5215, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100c5217, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c521c, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c521f, 0x6)   jnzd(0x100c52e4, 0xbf);               /* jnz dword 0x100c52e4 */
    II(0x100c5225, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100c5229, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c522c, 0x5)   calld(0x10089724, -0x3bb0d);          /* call 0x10089724 */
    II(0x100c5231, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x100c5234, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100c5238, 0x5)   mov(eax, 0x24);                       /* mov eax, 0x24 */
    II(0x100c523d, 0x5)   calld(sys_new, 0xa0bbe);              /* call 0x10165e00 */
    II(0x100c5242, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
//    II(0x100c5245, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100c5248, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x100c524b, 0x4)   cmp(memd_a32(ss, ebp - 0x6c), 0);     /* cmp dword [ebp-0x6c], 0x0 */
    II(0x100c524f, 0x2)   jzd(0x100c5296, 0x45);                /* jz 0x100c5296 */
    II(0x100c5251, 0x5)   calld(0x100cac68, 0x5a12);            /* call 0x100cac68 */
    II(0x100c5256, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c525b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c525c, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100c525f, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x100c5262, 0x5)   calld(0x10075e64, -0x4f403);          /* call 0x10075e64 */
    II(0x100c5267, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100c5269, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c526c, 0x5)   calld(my_1_get_count, -0x19d99);      /* call 0x100ab4d8 */
    II(0x100c5271, 0x5)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x100c5276, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100c5279, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100c527c, 0x5)   calld(0x1008a6f8, -0x3ab89);          /* call 0x1008a6f8 */
    II(0x100c5281, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c5283, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100c5286, 0x5)   calld(0x100c7dd0, 0x2b45);            /* call 0x100c7dd0 */
    II(0x100c528b, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
//    II(0x100c528e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x100c5291, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x100c5294, 0x2)   jmpd(0x100c529c, 0x6);                /* jmp 0x100c529c */
l_0x100c5296:
    II(0x100c5296, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100c5299, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
l_0x100c529c:
    II(0x100c529c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x78));   /* mov edx, [ebp-0x78] */
    II(0x100c529f, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c52a2, 0x5)   calld(0x100ca894, 0x55ed);            /* call 0x100ca894 */
    II(0x100c52a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c52aa, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c52ad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c52af, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c52b2, 0x5)   calld(0x10089640, -0x3bc77);          /* call 0x10089640 */
    II(0x100c52b7, 0x5)   calld(0x100c81b4, 0x2ef8);            /* call 0x100c81b4 */
    II(0x100c52bc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c52be, 0x2)   jzd(0x100c52da, 0x1a);                /* jz 0x100c52da */
    II(0x100c52c0, 0x5)   calld(0x100ca9b8, 0x56f3);            /* call 0x100ca9b8 */
    II(0x100c52c5, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100c52c8, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c52cb, 0x5)   calld(0x100ca864, 0x5594);            /* call 0x100ca864 */
    II(0x100c52d0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c52d2, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c52d5, 0x5)   calld(0x100ca8cc, 0x55f2);            /* call 0x100ca8cc */
l_0x100c52da:
    II(0x100c52da, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c52dc, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c52df, 0x5)   calld(0x10089600, -0x3bce4);          /* call 0x10089600 */
l_0x100c52e4:
    II(0x100c52e4, 0x5)   jmpd(0x100c51ec, -0xfd);              /* jmp 0x100c51ec */
l_0x100c52e9:
    II(0x100c52e9, 0x5)   jmpd(0x100c51cd, -0x121);             /* jmp 0x100c51cd */
l_0x100c52ee:
    II(0x100c52ee, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x100c52f3, 0x5)   calld(0x10075fdc, -0x4f31c);          /* call 0x10075fdc */
    II(0x100c52f8, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c52fb, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x100c5302, 0x2)   jmpd(0x100c530a, 0x6);                /* jmp 0x100c530a */
l_0x100c5304:
    II(0x100c5304, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5307, 0x3)   inc(memd_a32(ss, ebp - 0x30));        /* inc dword [ebp-0x30] */
l_0x100c530a:
    II(0x100c530a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c530e, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100c5311, 0x2)   jged(0x100c5325, 0x12);               /* jge 0x100c5325 */
    II(0x100c5313, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5317, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c5319, 0xa)   mov(memw_a32(ds, eax + ebp - 0x8c), 0); /* mov word [eax+ebp+0xffffff74], 0x0 */
    II(0x100c5323, 0x2)   jmpd(0x100c5304, -0x21);              /* jmp 0x100c5304 */
l_0x100c5325:
    II(0x100c5325, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c5329, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c532c, 0x6)   jld(0x100c5480, 0x14e);               /* jl dword 0x100c5480 */
    II(0x100c5332, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
    II(0x100c533c, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100c5343, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x100c534a, 0x2)   jmpd(0x100c5352, 0x6);                /* jmp 0x100c5352 */
l_0x100c534c:
    II(0x100c534c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c534f, 0x3)   inc(memd_a32(ss, ebp - 0x30));        /* inc dword [ebp-0x30] */
l_0x100c5352:
    II(0x100c5352, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5355, 0x5)   calld(my_1_get_count, -0x19e82);      /* call 0x100ab4d8 */
    II(0x100c535a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100c535e, 0x2)   jled(0x100c538d, 0x2d);               /* jle 0x100c538d */
    II(0x100c5360, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5364, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5367, 0x5)   calld(0x100ca904, 0x5598);            /* call 0x100ca904 */
    II(0x100c536c, 0x5)   calld(0x100cac00, 0x588f);            /* call 0x100cac00 */
    II(0x100c5371, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x100c5375, 0x2)   jled(0x100c538b, 0x14);               /* jle 0x100c538b */
    II(0x100c5377, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c537b, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c537e, 0x5)   calld(0x100ca904, 0x5581);            /* call 0x100ca904 */
    II(0x100c5383, 0x5)   calld(0x100cac00, 0x5878);            /* call 0x100cac00 */
    II(0x100c5388, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100c538b:
    II(0x100c538b, 0x2)   jmpd(0x100c534c, -0x41);              /* jmp 0x100c534c */
l_0x100c538d:
    II(0x100c538d, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x100c5394, 0x2)   jmpd(0x100c539c, 0x6);                /* jmp 0x100c539c */
l_0x100c5396:
    II(0x100c5396, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5399, 0x3)   inc(memd_a32(ss, ebp - 0x30));        /* inc dword [ebp-0x30] */
l_0x100c539c:
    II(0x100c539c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c539f, 0x5)   calld(my_1_get_count, -0x19ecc);      /* call 0x100ab4d8 */
    II(0x100c53a4, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100c53a8, 0x2)   jled(0x100c5406, 0x5c);               /* jle 0x100c5406 */
    II(0x100c53aa, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c53ae, 0x3)   cmp(eax, 0x50);                       /* cmp eax, 0x50 */
    II(0x100c53b1, 0x2)   jled(0x100c53ca, 0x17);               /* jle 0x100c53ca */
    II(0x100c53b3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c53b7, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c53ba, 0x5)   calld(0x100ca904, 0x5545);            /* call 0x100ca904 */
    II(0x100c53bf, 0x5)   calld(0x100cac00, 0x583c);            /* call 0x100cac00 */
    II(0x100c53c4, 0x1)   cwde();                               /* cwde */
    II(0x100c53c5, 0x3)   cmp(eax, 0x50);                       /* cmp eax, 0x50 */
    II(0x100c53c8, 0x2)   jld(0x100c5404, 0x3a);                /* jl 0x100c5404 */
l_0x100c53ca:
    II(0x100c53ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c53cd, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c53d0, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100c53d5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c53d9, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c53dc, 0x5)   calld(0x100ca904, 0x5523);            /* call 0x100ca904 */
    II(0x100c53e1, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x100c53e3, 0x5)   calld(0x100c81b4, 0x2dcc);            /* call 0x100c81b4 */
    II(0x100c53e8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c53ea, 0x2)   jzd(0x100c53fa, 0xe);                 /* jz 0x100c53fa */
    II(0x100c53ec, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c53f2, 0x6)   inc(memd_a32(ss, ebp - 0x90));        /* inc dword [ebp+0xffffff70] */
    II(0x100c53f8, 0x2)   jmpd(0x100c5404, 0xa);                /* jmp 0x100c5404 */
l_0x100c53fa:
    II(0x100c53fa, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0x64);  /* mov dword [ebp+0xffffff70], 0x64 */
l_0x100c5404:
    II(0x100c5404, 0x2)   jmpd(0x100c5396, -0x70);              /* jmp 0x100c5396 */
l_0x100c5406:
    II(0x100c5406, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x90)); /* movsx eax, word [ebp+0xffffff70] */
    II(0x100c540d, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100c5410, 0x6)   jnzd(0x100c5480, 0x6a);               /* jnz dword 0x100c5480 */
    II(0x100c5416, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c5419, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
    II(0x100c541f, 0x2)   jmpd(0x100c5454, 0x33);               /* jmp 0x100c5454 */
l_0x100c5421:
    II(0x100c5421, 0x6)   mov(memw_a32(ss, ebp - 0x80), 0x1);   /* mov word [ebp-0x80], 0x1 */
    II(0x100c5427, 0x2)   jmpd(0x100c5480, 0x57);               /* jmp 0x100c5480 */
l_0x100c5429:
    II(0x100c5429, 0x6)   mov(memw_a32(ss, ebp - 0x80), 0x6);   /* mov word [ebp-0x80], 0x6 */
    II(0x100c542f, 0x2)   jmpd(0x100c5480, 0x4f);               /* jmp 0x100c5480 */
l_0x100c5431:
    II(0x100c5431, 0x6)   mov(memw_a32(ss, ebp - 0x80), 0xc);   /* mov word [ebp-0x80], 0xc */
    II(0x100c5437, 0x2)   jmpd(0x100c5480, 0x47);               /* jmp 0x100c5480 */
l_0x100c5439:
    II(0x100c5439, 0x6)   mov(memw_a32(ss, ebp - 0x80), 0x18);  /* mov word [ebp-0x80], 0x18 */
    II(0x100c543f, 0x2)   jmpd(0x100c5480, 0x3f);               /* jmp 0x100c5480 */
l_0x100c5441:
    II(0x100c5441, 0x2)   jmpd(0x100c5480, 0x3d);               /* jmp 0x100c5480 */
//    II(0x100c5443, 0x1)   /* Выравнивание. */
//    II(0x100c5444, 0x10)  /* Служебная область с абсолютными адресами переходов. {0x100c5421, 0x100c5429, 0x100c5431, 0x100c5439}. */
l_0x100c5454:
    II(0x100c5454, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100c545a, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x100c545d, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
    II(0x100c5463, 0x8)   cmp(memw_a32(ss, ebp - 0x98), 0x3);   /* cmp word [ebp+0xffffff68], 0x3 */
    II(0x100c546b, 0x2)   jad(0x100c5441, -0x2c);               /* ja 0x100c5441 */
    II(0x100c546d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c546f, 0x7)   mov(ax, memw_a32(ss, ebp - 0x98));    /* mov ax, [ebp+0xffffff68] */
    II(0x100c5476, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c5479, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x100c5444), (0x100c5421)(0x100c5429)(0x100c5431)(0x100c5439)); /* jmp dword near [cs:eax+0x100c5444] */
l_0x100c5480:
    II(0x100c5480, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100c5487, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x100c548e, 0x2)   jmpd(0x100c5496, 0x6);                /* jmp 0x100c5496 */
l_0x100c5490:
    II(0x100c5490, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5493, 0x3)   inc(memd_a32(ss, ebp - 0x30));        /* inc dword [ebp-0x30] */
l_0x100c5496:
    II(0x100c5496, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5499, 0x5)   calld(my_1_get_count, -0x19fc6);      /* call 0x100ab4d8 */
    II(0x100c549e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100c54a2, 0x2)   jled(0x100c54b7, 0x13);               /* jle 0x100c54b7 */
    II(0x100c54a4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c54a8, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c54ab, 0x5)   calld(0x100ca904, 0x5454);            /* call 0x100ca904 */
    II(0x100c54b0, 0x5)   calld(0x100c83dd, 0x2f28);            /* call 0x100c83dd */
    II(0x100c54b5, 0x2)   jmpd(0x100c5490, -0x27);              /* jmp 0x100c5490 */
l_0x100c54b7:
    II(0x100c54b7, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c54ba, 0x5)   calld(my_1_get_count, -0x19fe7);      /* call 0x100ab4d8 */
    II(0x100c54bf, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c54c0, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100c54c3, 0x2)   jmpd(0x100c54cb, 0x6);                /* jmp 0x100c54cb */
l_0x100c54c5:
    II(0x100c54c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c54c8, 0x3)   dec(memd_a32(ss, ebp - 0x30));        /* dec dword [ebp-0x30] */
l_0x100c54cb:
    II(0x100c54cb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c54cf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c54d1, 0x2)   jld(0x100c5530, 0x5d);                /* jl 0x100c5530 */
    II(0x100c54d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c54d6, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c54d9, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100c54de, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c54e2, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c54e5, 0x5)   calld(0x100ca904, 0x541a);            /* call 0x100ca904 */
    II(0x100c54ea, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x100c54ec, 0x5)   calld(0x100c81b4, 0x2cc3);            /* call 0x100c81b4 */
    II(0x100c54f1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c54f3, 0x2)   jnzd(0x100c5503, 0xe);                /* jnz 0x100c5503 */
    II(0x100c54f5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c54f9, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c54fc, 0x5)   calld(0x1013b24f, 0x75d4e);           /* call 0x1013b24f */
    II(0x100c5501, 0x2)   jmpd(0x100c552e, 0x2b);               /* jmp 0x100c552e */
l_0x100c5503:
    II(0x100c5503, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5507, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c550a, 0x5)   calld(0x100ca904, 0x53f5);            /* call 0x100ca904 */
    II(0x100c550f, 0x5)   calld(0x100cac00, 0x56ec);            /* call 0x100cac00 */
    II(0x100c5514, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x100c5518, 0x2)   jled(0x100c552e, 0x14);               /* jle 0x100c552e */
    II(0x100c551a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c551e, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5521, 0x5)   calld(0x100ca904, 0x53de);            /* call 0x100ca904 */
    II(0x100c5526, 0x5)   calld(0x100cac00, 0x56d5);            /* call 0x100cac00 */
    II(0x100c552b, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100c552e:
    II(0x100c552e, 0x2)   jmpd(0x100c54c5, -0x6b);              /* jmp 0x100c54c5 */
l_0x100c5530:
    II(0x100c5530, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c5534, 0x3)   cmp(eax, 0x50);                       /* cmp eax, 0x50 */
    II(0x100c5537, 0x2)   jled(0x100c557a, 0x41);               /* jle 0x100c557a */
    II(0x100c5539, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c553c, 0x5)   calld(my_1_get_count, -0x1a069);      /* call 0x100ab4d8 */
    II(0x100c5541, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c5542, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100c5545, 0x2)   jmpd(0x100c554d, 0x6);                /* jmp 0x100c554d */
l_0x100c5547:
    II(0x100c5547, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c554a, 0x3)   dec(memd_a32(ss, ebp - 0x30));        /* dec dword [ebp-0x30] */
l_0x100c554d:
    II(0x100c554d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5551, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5553, 0x2)   jld(0x100c557a, 0x25);                /* jl 0x100c557a */
    II(0x100c5555, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5559, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c555c, 0x5)   calld(0x100ca904, 0x53a3);            /* call 0x100ca904 */
    II(0x100c5561, 0x5)   calld(0x100cac00, 0x569a);            /* call 0x100cac00 */
    II(0x100c5566, 0x1)   cwde();                               /* cwde */
    II(0x100c5567, 0x3)   cmp(eax, 0x50);                       /* cmp eax, 0x50 */
    II(0x100c556a, 0x2)   jged(0x100c5578, 0xc);                /* jge 0x100c5578 */
    II(0x100c556c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5570, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5573, 0x5)   calld(0x1013b24f, 0x75cd7);           /* call 0x1013b24f */
l_0x100c5578:
    II(0x100c5578, 0x2)   jmpd(0x100c5547, -0x33);              /* jmp 0x100c5547 */
l_0x100c557a:
    II(0x100c557a, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100c5581, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100c5588, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x100c558f, 0x2)   jmpd(0x100c5597, 0x6);                /* jmp 0x100c5597 */
l_0x100c5591:
    II(0x100c5591, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5594, 0x3)   inc(memd_a32(ss, ebp - 0x30));        /* inc dword [ebp-0x30] */
l_0x100c5597:
    II(0x100c5597, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c559a, 0x5)   calld(my_1_get_count, -0x1a0c7);      /* call 0x100ab4d8 */
    II(0x100c559f, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100c55a3, 0x2)   jled(0x100c55dd, 0x38);               /* jle 0x100c55dd */
    II(0x100c55a5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c55a9, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c55ac, 0x5)   calld(0x100ca904, 0x5353);            /* call 0x100ca904 */
    II(0x100c55b1, 0x5)   calld(0x100cabd0, 0x561a);            /* call 0x100cabd0 */
    II(0x100c55b6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c55b8, 0x2)   jzd(0x100c55c0, 0x6);                 /* jz 0x100c55c0 */
    II(0x100c55ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c55bd, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100c55c0:
    II(0x100c55c0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c55c4, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c55c7, 0x5)   calld(0x100ca904, 0x5338);            /* call 0x100ca904 */
    II(0x100c55cc, 0x5)   calld(0x100c8369, 0x2d98);            /* call 0x100c8369 */
    II(0x100c55d1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c55d3, 0x2)   jzd(0x100c55db, 0x6);                 /* jz 0x100c55db */
    II(0x100c55d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100c55d8, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100c55db:
    II(0x100c55db, 0x2)   jmpd(0x100c5591, -0x4c);              /* jmp 0x100c5591 */
l_0x100c55dd:
    II(0x100c55dd, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c55e0, 0x5)   calld(my_1_get_count, -0x1a10d);      /* call 0x100ab4d8 */
    II(0x100c55e5, 0x7)   mov(memw_a32(ss, ebp - 0x88), ax);    /* mov [ebp+0xffffff78], ax */
    II(0x100c55ec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c55f0, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100c55f3, 0x2)   jld(0x100c5604, 0xf);                 /* jl 0x100c5604 */
    II(0x100c55f5, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c55f8, 0x5)   calld(my_1_get_count, -0x1a125);      /* call 0x100ab4d8 */
    II(0x100c55fd, 0x7)   mov(memw_a32(ss, ebp - 0x8a), ax);    /* mov [ebp+0xffffff76], ax */
l_0x100c5604:
    II(0x100c5604, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c5608, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c560b, 0x2)   jld(0x100c5615, 0x8);                 /* jl 0x100c5615 */
    II(0x100c560d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x80)); /* movsx eax, word [ebp-0x80] */
    II(0x100c5611, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5613, 0x2)   jzd(0x100c5617, 0x2);                 /* jz 0x100c5617 */
l_0x100c5615:
    II(0x100c5615, 0x2)   jmpd(0x100c5659, 0x42);               /* jmp 0x100c5659 */
l_0x100c5617:
    II(0x100c5617, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100c561b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c561d, 0x2)   jled(0x100c562a, 0xb);                /* jle 0x100c562a */
    II(0x100c561f, 0x9)   mov(memw_a32(ss, ebp - 0x82), 0x1);   /* mov word [ebp+0xffffff7e], 0x1 */
    II(0x100c5628, 0x2)   jmpd(0x100c5639, 0xf);                /* jmp 0x100c5639 */
l_0x100c562a:
    II(0x100c562a, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c562d, 0x5)   calld(my_1_get_count, -0x1a15a);      /* call 0x100ab4d8 */
    II(0x100c5632, 0x7)   mov(memw_a32(ss, ebp - 0x82), ax);    /* mov [ebp+0xffffff7e], ax */
l_0x100c5639:
    II(0x100c5639, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c563d, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100c5640, 0x2)   jld(0x100c5649, 0x7);                 /* jl 0x100c5649 */
    II(0x100c5642, 0x7)   shl(memw_a32(ss, ebp - 0x82), 0x1);   /* shl word [ebp+0xffffff7e], 1 */
l_0x100c5649:
    II(0x100c5649, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c564d, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x100c5650, 0x2)   jld(0x100c5659, 0x7);                 /* jl 0x100c5659 */
    II(0x100c5652, 0x7)   shl(memw_a32(ss, ebp - 0x82), 0x1);   /* shl word [ebp+0xffffff7e], 1 */
l_0x100c5659:
    II(0x100c5659, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100c565c, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c565e, 0x7)   mov(memw_a32(ss, ebp - 0x86), ax);    /* mov [ebp+0xffffff7a], ax */
    II(0x100c5665, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x100c566a, 0x5)   calld(0x10075fdc, -0x4f693);          /* call 0x10075fdc */
    II(0x100c566f, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100c5672, 0x2)   jld(0x100c5680, 0xc);                 /* jl 0x100c5680 */
    II(0x100c5674, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5677, 0x5)   calld(my_1_get_count, -0x1a1a4);      /* call 0x100ab4d8 */
    II(0x100c567c, 0x4)   mov(memw_a32(ss, ebp - 0x7a), ax);    /* mov [ebp-0x7a], ax */
l_0x100c5680:
    II(0x100c5680, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c5683, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c5685, 0x7)   mov(memw_a32(ss, ebp - 0x84), ax);    /* mov [ebp+0xffffff7c], ax */
    II(0x100c568c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c568f, 0x5)   calld(my_1_get_count, -0x1a1bc);      /* call 0x100ab4d8 */
    II(0x100c5694, 0x3)   sub(eax, memd_a32(ss, ebp - 0x1c));   /* sub eax, [ebp-0x1c] */
    II(0x100c5697, 0x4)   mov(memw_a32(ss, ebp - 0x7e), ax);    /* mov [ebp-0x7e], ax */
    II(0x100c569b, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c569e, 0x5)   calld(my_1_get_count, -0x1a1cb);      /* call 0x100ab4d8 */
    II(0x100c56a3, 0x3)   sub(eax, memd_a32(ss, ebp - 0x1c));   /* sub eax, [ebp-0x1c] */
    II(0x100c56a6, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c56a8, 0x4)   mov(memw_a32(ss, ebp - 0x7c), ax);    /* mov [ebp-0x7c], ax */
    II(0x100c56ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c56af, 0x4)   mov(memb_a32(ds, eax + 0x2), 0);      /* mov byte [eax+0x2], 0x0 */
    II(0x100c56b3, 0x5)   mov(ecx, 0x4f);                       /* mov ecx, 0x4f */
    II(0x100c56b8, 0x6)   lea(ebx, ebp - 0xe8);                 /* lea ebx, [ebp+0xffffff18] */
    II(0x100c56be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c56c1, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100c56c3, 0x2)   add(al, 0x2d);                        /* add al, 0x2d */
    II(0x100c56c5, 0x3)   movsx(edx, al);                       /* movsx edx, al */
    II(0x100c56c8, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x100c56cd, 0x5)   calld(0x10106281, 0x40baf);           /* call 0x10106281 */
    II(0x100c56d2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c56d4, 0x2)   jzd(0x100c573a, 0x64);                /* jz 0x100c573a */
    II(0x100c56d6, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0x9);   /* mov dword [ebp-0x30], 0x9 */
l_0x100c56dd:
    II(0x100c56dd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c56e1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c56e3, 0x2)   jld(0x100c5701, 0x1c);                /* jl 0x100c5701 */
    II(0x100c56e5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c56e9, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c56ec, 0x6)   mov(edx, memd_a32(ds, edx + 0x101b77ec)); /* mov edx, [edx+0x101b77ec] */
    II(0x100c56f2, 0x6)   lea(eax, ebp - 0xe8);                 /* lea eax, [ebp+0xffffff18] */
    II(0x100c56f8, 0x5)   calld(sys_strcasecmp, 0xa0a33);       /* call 0x10166130 */
    II(0x100c56fd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c56ff, 0x2)   jnzd(0x100c5703, 0x2);                /* jnz 0x100c5703 */
l_0x100c5701:
    II(0x100c5701, 0x2)   jmpd(0x100c570b, 0x8);                /* jmp 0x100c570b */
l_0x100c5703:
    II(0x100c5703, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5706, 0x3)   dec(memd_a32(ss, ebp - 0x30));        /* dec dword [ebp-0x30] */
    II(0x100c5709, 0x2)   jmpd(0x100c56dd, -0x2e);              /* jmp 0x100c56dd */
l_0x100c570b:
    II(0x100c570b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c570f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5711, 0x2)   jld(0x100c573a, 0x27);                /* jl 0x100c573a */
    II(0x100c5713, 0x3)   mov(al, memb_a32(ss, ebp - 0x30));    /* mov al, [ebp-0x30] */
    II(0x100c5716, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c5719, 0x3)   mov(memb_a32(ds, edx + 0x2), al);     /* mov [edx+0x2], al */
    II(0x100c571c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c571f, 0x4)   movsx(eax, memb_a32(ds, eax + 0x2));  /* movsx eax, byte [eax+0x2] */
    II(0x100c5723, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c5725, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x8e)); /* mov eax, [eax+ebp+0xffffff72] */
    II(0x100c572c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c572f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5731, 0x2)   jgd(0x100c573a, 0x7);                 /* jg 0x100c573a */
    II(0x100c5733, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5736, 0x4)   mov(memb_a32(ds, eax + 0x2), 0);      /* mov byte [eax+0x2], 0x0 */
l_0x100c573a:
    II(0x100c573a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c573d, 0x4)   cmp(memb_a32(ds, eax + 0x2), 0);      /* cmp byte [eax+0x2], 0x0 */
    II(0x100c5741, 0x6)   jnzd(0x100c592f, 0x1e8);              /* jnz dword 0x100c592f */
    II(0x100c5747, 0xa)   mov(memd_a32(ss, ebp - 0xec), 0);     /* mov dword [ebp+0xffffff14], 0x0 */
    II(0x100c5751, 0xa)   mov(memd_a32(ss, ebp - 0xf0), 0);     /* mov dword [ebp+0xffffff10], 0x0 */
    II(0x100c575b, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0);     /* mov word [ebp-0x30], 0x0 */
    II(0x100c5761, 0x2)   jmpd(0x100c576a, 0x7);                /* jmp 0x100c576a */
l_0x100c5763:
    II(0x100c5763, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5766, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
l_0x100c576a:
    II(0x100c576a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c576e, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100c5771, 0x2)   jged(0x100c5795, 0x22);               /* jge 0x100c5795 */
    II(0x100c5773, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5777, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c5779, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x8e)); /* mov eax, [eax+ebp+0xffffff72] */
    II(0x100c5780, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c5783, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5785, 0x2)   jled(0x100c5793, 0xc);                /* jle 0x100c5793 */
    II(0x100c5787, 0x6)   mov(eax, memd_a32(ss, ebp - 0xf0));   /* mov eax, [ebp+0xffffff10] */
    II(0x100c578d, 0x6)   inc(memd_a32(ss, ebp - 0xf0));        /* inc dword [ebp+0xffffff10] */
l_0x100c5793:
    II(0x100c5793, 0x2)   jmpd(0x100c5763, -0x32);              /* jmp 0x100c5763 */
l_0x100c5795:
    II(0x100c5795, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0);     /* mov word [ebp-0x30], 0x0 */
    II(0x100c579b, 0x2)   jmpd(0x100c57a4, 0x7);                /* jmp 0x100c57a4 */
l_0x100c579d:
    II(0x100c579d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c57a0, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
l_0x100c57a4:
    II(0x100c57a4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c57a8, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100c57ab, 0x2)   jged(0x100c57fe, 0x51);               /* jge 0x100c57fe */
    II(0x100c57ad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c57b1, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c57b7, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100c57bd, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c57c2, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c57c5, 0x2)   jnzd(0x100c57d2, 0xb);                /* jnz 0x100c57d2 */
    II(0x100c57c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c57ca, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c57cd, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100c57d0, 0x2)   jnzd(0x100c57d4, 0x2);                /* jnz 0x100c57d4 */
l_0x100c57d2:
    II(0x100c57d2, 0x2)   jmpd(0x100c57ee, 0x1a);               /* jmp 0x100c57ee */
l_0x100c57d4:
    II(0x100c57d4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c57d8, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100c57de, 0x5)   mov(edx, 0x101c31c4);                 /* mov edx, 0x101c31c4 */
    II(0x100c57e3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c57e5, 0x5)   calld(0x1008a064, -0x3b786);          /* call 0x1008a064 */
    II(0x100c57ea, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c57ec, 0x2)   jnzd(0x100c57f0, 0x2);                /* jnz 0x100c57f0 */
l_0x100c57ee:
    II(0x100c57ee, 0x2)   jmpd(0x100c57fc, 0xc);                /* jmp 0x100c57fc */
l_0x100c57f0:
    II(0x100c57f0, 0x6)   mov(eax, memd_a32(ss, ebp - 0xf0));   /* mov eax, [ebp+0xffffff10] */
    II(0x100c57f6, 0x6)   dec(memd_a32(ss, ebp - 0xf0));        /* dec dword [ebp+0xffffff10] */
l_0x100c57fc:
    II(0x100c57fc, 0x2)   jmpd(0x100c579d, -0x61);              /* jmp 0x100c579d */
l_0x100c57fe:
    II(0x100c57fe, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xf0)); /* movsx eax, word [ebp+0xffffff10] */
    II(0x100c5805, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5807, 0x6)   jled(0x100c5893, 0x86);               /* jle dword 0x100c5893 */
    II(0x100c580d, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0);     /* mov word [ebp-0x30], 0x0 */
    II(0x100c5813, 0x2)   jmpd(0x100c581c, 0x7);                /* jmp 0x100c581c */
l_0x100c5815:
    II(0x100c5815, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5818, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
l_0x100c581c:
    II(0x100c581c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5820, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100c5823, 0x6)   jged(0x100c5893, 0x6a);               /* jge dword 0x100c5893 */
    II(0x100c5829, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c582d, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c5833, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100c5839, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c583e, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c5841, 0x2)   jnzd(0x100c584e, 0xb);                /* jnz 0x100c584e */
    II(0x100c5843, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5846, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c5849, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100c584c, 0x2)   jnzd(0x100c5850, 0x2);                /* jnz 0x100c5850 */
l_0x100c584e:
    II(0x100c584e, 0x2)   jmpd(0x100c586a, 0x1a);               /* jmp 0x100c586a */
l_0x100c5850:
    II(0x100c5850, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5854, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100c585a, 0x5)   mov(edx, 0x101c31c4);                 /* mov edx, 0x101c31c4 */
    II(0x100c585f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c5861, 0x5)   calld(0x1008a064, -0x3b802);          /* call 0x1008a064 */
    II(0x100c5866, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c5868, 0x2)   jnzd(0x100c586c, 0x2);                /* jnz 0x100c586c */
l_0x100c586a:
    II(0x100c586a, 0x2)   jmpd(0x100c5891, 0x25);               /* jmp 0x100c5891 */
l_0x100c586c:
    II(0x100c586c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5870, 0x6)   imul(edx, edx, 0xc5);                 /* imul edx, edx, 0xc5 */
    II(0x100c5876, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100c587b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c587d, 0x5)   calld(0x1008a064, -0x3b81e);          /* call 0x1008a064 */
    II(0x100c5882, 0x3)   movsx(eax, al);                       /* movsx eax, al */
    II(0x100c5885, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c5887, 0xa)   mov(memw_a32(ds, eax + ebp - 0x8c), 0); /* mov word [eax+ebp+0xffffff74], 0x0 */
l_0x100c5891:
    II(0x100c5891, 0x2)   jmpd(0x100c5815, -0x7e);              /* jmp 0x100c5815 */
l_0x100c5893:
    II(0x100c5893, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0);     /* mov word [ebp-0x30], 0x0 */
    II(0x100c5899, 0x2)   jmpd(0x100c58a2, 0x7);                /* jmp 0x100c58a2 */
l_0x100c589b:
    II(0x100c589b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c589e, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
l_0x100c58a2:
    II(0x100c58a2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c58a6, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100c58a9, 0x2)   jged(0x100c58e1, 0x36);               /* jge 0x100c58e1 */
    II(0x100c58ab, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c58af, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c58b1, 0x8)   mov(ax, memw_a32(ds, eax + ebp - 0x8c)); /* mov ax, [eax+ebp+0xffffff74] */
    II(0x100c58b9, 0x6)   add(memd_a32(ss, ebp - 0xec), eax);   /* add [ebp+0xffffff14], eax */
    II(0x100c58bf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c58c3, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c58c5, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x8e)); /* mov eax, [eax+ebp+0xffffff72] */
    II(0x100c58cc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c58cf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c58d1, 0x2)   jled(0x100c58df, 0xc);                /* jle 0x100c58df */
    II(0x100c58d3, 0x6)   mov(eax, memd_a32(ss, ebp - 0xf0));   /* mov eax, [ebp+0xffffff10] */
    II(0x100c58d9, 0x6)   inc(memd_a32(ss, ebp - 0xf0));        /* inc dword [ebp+0xffffff10] */
l_0x100c58df:
    II(0x100c58df, 0x2)   jmpd(0x100c589b, -0x46);              /* jmp 0x100c589b */
l_0x100c58e1:
    II(0x100c58e1, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xec)); /* movsx edx, word [ebp+0xffffff14] */
    II(0x100c58e8, 0x5)   calld(/* sys */ 0x10165e9b, 0xa05ae); /* call 0x10165e9b */
    II(0x100c58ed, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100c58f0, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c58f3, 0x1)   inc(eax);                             /* inc eax */
    II(0x100c58f4, 0x6)   mov(memd_a32(ss, ebp - 0xec), eax);   /* mov [ebp+0xffffff14], eax */
    II(0x100c58fa, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0xffff); /* mov word [ebp-0x30], 0xffff */
l_0x100c5900:
    II(0x100c5900, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5903, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
    II(0x100c5907, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c590b, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c590d, 0x8)   mov(ax, memw_a32(ds, eax + ebp - 0x8c)); /* mov ax, [eax+ebp+0xffffff74] */
    II(0x100c5915, 0x6)   sub(memd_a32(ss, ebp - 0xec), eax);   /* sub [ebp+0xffffff14], eax */
    II(0x100c591b, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x100c5922, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5924, 0x2)   jgd(0x100c5900, -0x26);               /* jg 0x100c5900 */
    II(0x100c5926, 0x3)   mov(al, memb_a32(ss, ebp - 0x30));    /* mov al, [ebp-0x30] */
    II(0x100c5929, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c592c, 0x3)   mov(memb_a32(ds, edx + 0x2), al);     /* mov [edx+0x2], al */
l_0x100c592f:
    II(0x100c592f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5932, 0x3)   mov(al, memb_a32(ds, eax + 0x2));     /* mov al, [eax+0x2] */
    II(0x100c5935, 0x6)   mov(memb_a32(ss, ebp - 0xf4), al);    /* mov [ebp+0xffffff0c], al */
    II(0x100c593b, 0x5)   jmpd(0x100c5a11, 0xd1);               /* jmp 0x100c5a11 */
l_0x100c5940:
    II(0x100c5940, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5943, 0x5)   calld(my_1_get_count, -0x1a470);      /* call 0x100ab4d8 */
    II(0x100c5948, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c5949, 0x4)   mov(memw_a32(ss, ebp - 0x30), ax);    /* mov [ebp-0x30], ax */
    II(0x100c594d, 0x2)   jmpd(0x100c5956, 0x7);                /* jmp 0x100c5956 */
l_0x100c594f:
    II(0x100c594f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5952, 0x4)   dec(memw_a32(ss, ebp - 0x30));        /* dec word [ebp-0x30] */
l_0x100c5956:
    II(0x100c5956, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c595a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c595c, 0x2)   jld(0x100c5981, 0x23);                /* jl 0x100c5981 */
    II(0x100c595e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5962, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5965, 0x5)   calld(0x100ca904, 0x4f9a);            /* call 0x100ca904 */
    II(0x100c596a, 0x5)   calld(0x100cabd0, 0x5261);            /* call 0x100cabd0 */
    II(0x100c596f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c5971, 0x2)   jnzd(0x100c597f, 0xc);                /* jnz 0x100c597f */
    II(0x100c5973, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5977, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c597a, 0x5)   calld(0x1013b24f, 0x758d0);           /* call 0x1013b24f */
l_0x100c597f:
    II(0x100c597f, 0x2)   jmpd(0x100c594f, -0x32);              /* jmp 0x100c594f */
l_0x100c5981:
    II(0x100c5981, 0x5)   jmpd(0x100c5a58, 0xd2);               /* jmp 0x100c5a58 */
l_0x100c5986:
    II(0x100c5986, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5989, 0x5)   calld(my_1_get_count, -0x1a4b6);      /* call 0x100ab4d8 */
    II(0x100c598e, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c598f, 0x4)   mov(memw_a32(ss, ebp - 0x30), ax);    /* mov [ebp-0x30], ax */
    II(0x100c5993, 0x2)   jmpd(0x100c599c, 0x7);                /* jmp 0x100c599c */
l_0x100c5995:
    II(0x100c5995, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5998, 0x4)   dec(memw_a32(ss, ebp - 0x30));        /* dec word [ebp-0x30] */
l_0x100c599c:
    II(0x100c599c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c59a0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c59a2, 0x2)   jld(0x100c59c7, 0x23);                /* jl 0x100c59c7 */
    II(0x100c59a4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c59a8, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c59ab, 0x5)   calld(0x100ca904, 0x4f54);            /* call 0x100ca904 */
    II(0x100c59b0, 0x5)   calld(0x100c8369, 0x29b4);            /* call 0x100c8369 */
    II(0x100c59b5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c59b7, 0x2)   jnzd(0x100c59c5, 0xc);                /* jnz 0x100c59c5 */
    II(0x100c59b9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c59bd, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c59c0, 0x5)   calld(0x1013b24f, 0x7588a);           /* call 0x1013b24f */
l_0x100c59c5:
    II(0x100c59c5, 0x2)   jmpd(0x100c5995, -0x32);              /* jmp 0x100c5995 */
l_0x100c59c7:
    II(0x100c59c7, 0x5)   jmpd(0x100c5a58, 0x8c);               /* jmp 0x100c5a58 */
l_0x100c59cc:
    II(0x100c59cc, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c59cf, 0x5)   calld(my_1_get_count, -0x1a4fc);      /* call 0x100ab4d8 */
    II(0x100c59d4, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c59d5, 0x4)   mov(memw_a32(ss, ebp - 0x30), ax);    /* mov [ebp-0x30], ax */
    II(0x100c59d9, 0x2)   jmpd(0x100c59e2, 0x7);                /* jmp 0x100c59e2 */
l_0x100c59db:
    II(0x100c59db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c59de, 0x4)   dec(memw_a32(ss, ebp - 0x30));        /* dec word [ebp-0x30] */
l_0x100c59e2:
    II(0x100c59e2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c59e6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c59e8, 0x2)   jld(0x100c5a0d, 0x23);                /* jl 0x100c5a0d */
    II(0x100c59ea, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c59ee, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c59f1, 0x5)   calld(0x100ca904, 0x4f0e);            /* call 0x100ca904 */
    II(0x100c59f6, 0x5)   calld(0x100c8369, 0x296e);            /* call 0x100c8369 */
    II(0x100c59fb, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c59fd, 0x2)   jzd(0x100c5a0b, 0xc);                 /* jz 0x100c5a0b */
    II(0x100c59ff, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5a03, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5a06, 0x5)   calld(0x1013b24f, 0x75844);           /* call 0x1013b24f */
l_0x100c5a0b:
    II(0x100c5a0b, 0x2)   jmpd(0x100c59db, -0x32);              /* jmp 0x100c59db */
l_0x100c5a0d:
    II(0x100c5a0d, 0x2)   jmpd(0x100c5a58, 0x49);               /* jmp 0x100c5a58 */
l_0x100c5a0f:
    II(0x100c5a0f, 0x2)   jmpd(0x100c5a58, 0x47);               /* jmp 0x100c5a58 */
l_0x100c5a11:
    II(0x100c5a11, 0x6)   mov(al, memb_a32(ss, ebp - 0xf4));    /* mov al, [ebp+0xffffff0c] */
    II(0x100c5a17, 0x6)   mov(memb_a32(ss, ebp - 0xf8), al);    /* mov [ebp+0xffffff08], al */
    II(0x100c5a1d, 0x7)   cmp(memb_a32(ss, ebp - 0xf8), 0x4);   /* cmp byte [ebp+0xffffff08], 0x4 */
    II(0x100c5a24, 0x2)   jbd(0x100c5a49, 0x23);                /* jb 0x100c5a49 */
    II(0x100c5a26, 0x7)   cmp(memb_a32(ss, ebp - 0xf8), 0x4);   /* cmp byte [ebp+0xffffff08], 0x4 */
    II(0x100c5a2d, 0x6)   jbed(0x100c5940, -0xf3);              /* jbe dword 0x100c5940 */
    II(0x100c5a33, 0x7)   cmp(memb_a32(ss, ebp - 0xf8), 0x7);   /* cmp byte [ebp+0xffffff08], 0x7 */
    II(0x100c5a3a, 0x2)   jbd(0x100c5a47, 0xb);                 /* jb 0x100c5a47 */
    II(0x100c5a3c, 0x7)   cmp(memb_a32(ss, ebp - 0xf8), 0x8);   /* cmp byte [ebp+0xffffff08], 0x8 */
    II(0x100c5a43, 0x2)   jbed(0x100c59cc, -0x79);              /* jbe 0x100c59cc */
    II(0x100c5a45, 0x2)   jmpd(0x100c5a0f, -0x38);              /* jmp 0x100c5a0f */
l_0x100c5a47:
    II(0x100c5a47, 0x2)   jmpd(0x100c5a0f, -0x3a);              /* jmp 0x100c5a0f */
l_0x100c5a49:
    II(0x100c5a49, 0x7)   cmp(memb_a32(ss, ebp - 0xf8), 0x3);   /* cmp byte [ebp+0xffffff08], 0x3 */
    II(0x100c5a50, 0x6)   jzd(0x100c5986, -0xd0);               /* jz dword 0x100c5986 */
    II(0x100c5a56, 0x2)   jmpd(0x100c5a0f, -0x49);              /* jmp 0x100c5a0f */
l_0x100c5a58:
    II(0x100c5a58, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0);     /* mov word [ebp-0x30], 0x0 */
    II(0x100c5a5e, 0x2)   jmpd(0x100c5a67, 0x7);                /* jmp 0x100c5a67 */
l_0x100c5a60:
    II(0x100c5a60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5a63, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
l_0x100c5a67:
    II(0x100c5a67, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5a6b, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100c5a6e, 0x6)   jged(0x100c5b52, 0xde);               /* jge dword 0x100c5b52 */
    II(0x100c5a74, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5a77, 0x5)   calld(my_1_get_count, -0x1a5a4);      /* call 0x100ab4d8 */
    II(0x100c5a7c, 0x1)   cwde();                               /* cwde */
    II(0x100c5a7d, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100c5a80, 0x2)   jled(0x100c5a8d, 0xb);                /* jle 0x100c5a8d */
    II(0x100c5a82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5a85, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c5a88, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100c5a8b, 0x2)   jnzd(0x100c5a8f, 0x2);                /* jnz 0x100c5a8f */
l_0x100c5a8d:
    II(0x100c5a8d, 0x2)   jmpd(0x100c5aa7, 0x18);               /* jmp 0x100c5aa7 */
l_0x100c5a8f:
    II(0x100c5a8f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5a93, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x100c5a96, 0x5)   mov(eax, 0x101c35b4);                 /* mov eax, 0x101c35b4 */
    II(0x100c5a9b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c5a9d, 0x5)   calld(my_2_get_count, -0x3a73a);      /* call 0x1008b368 */
    II(0x100c5aa2, 0x1)   cwde();                               /* cwde */
    II(0x100c5aa3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5aa5, 0x2)   jgd(0x100c5aac, 0x5);                 /* jg 0x100c5aac */
l_0x100c5aa7:
    II(0x100c5aa7, 0x5)   jmpd(0x100c5b4d, 0xa1);               /* jmp 0x100c5b4d */
l_0x100c5aac:
    II(0x100c5aac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5ab0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c5ab6, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100c5abc, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c5ac1, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c5ac4, 0x6)   jnzd(0x100c5b4d, 0x83);               /* jnz dword 0x100c5b4d */
    II(0x100c5aca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5ace, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c5ad1, 0x6)   mov(ebx, memd_a32(ds, eax + 0x101c35bc)); /* mov ebx, [eax+0x101c35bc] */
    II(0x100c5ad7, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c5ada, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5ade, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c5ae1, 0x6)   mov(edx, memd_a32(ds, eax + 0x101c35ba)); /* mov edx, [eax+0x101c35ba] */
    II(0x100c5ae7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c5aea, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100c5aed, 0x5)   calld(0x1008a728, -0x3b3ca);          /* call 0x1008a728 */
    II(0x100c5af2, 0x3)   lea(edx, eax + ebx);                  /* lea edx, [eax+ebx] */
    II(0x100c5af5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c5af7, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x100c5af9, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100c5afc, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5aff, 0x5)   calld(my_1_get_count, -0x1a62c);      /* call 0x100ab4d8 */
    II(0x100c5b04, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c5b05, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100c5b08, 0x2)   jmpd(0x100c5b10, 0x6);                /* jmp 0x100c5b10 */
l_0x100c5b0a:
    II(0x100c5b0a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100c5b0d, 0x3)   dec(memd_a32(ss, ebp - 0x24));        /* dec dword [ebp-0x24] */
l_0x100c5b10:
    II(0x100c5b10, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c5b14, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5b16, 0x2)   jld(0x100c5b26, 0xe);                 /* jl 0x100c5b26 */
    II(0x100c5b18, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5b1b, 0x5)   calld(my_1_get_count, -0x1a648);      /* call 0x100ab4d8 */
    II(0x100c5b20, 0x1)   cwde();                               /* cwde */
    II(0x100c5b21, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100c5b24, 0x2)   jgd(0x100c5b28, 0x2);                 /* jg 0x100c5b28 */
l_0x100c5b26:
    II(0x100c5b26, 0x2)   jmpd(0x100c5b4d, 0x25);               /* jmp 0x100c5b4d */
l_0x100c5b28:
    II(0x100c5b28, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100c5b2c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5b2f, 0x5)   calld(0x100ca904, 0x4dd0);            /* call 0x100ca904 */
    II(0x100c5b34, 0x5)   calld(0x100cac34, 0x50fb);            /* call 0x100cac34 */
    II(0x100c5b39, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x34));    /* cmp ax, [ebp-0x34] */
    II(0x100c5b3d, 0x2)   jnzd(0x100c5b4b, 0xc);                /* jnz 0x100c5b4b */
    II(0x100c5b3f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100c5b43, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5b46, 0x5)   calld(0x1013b24f, 0x75704);           /* call 0x1013b24f */
l_0x100c5b4b:
    II(0x100c5b4b, 0x2)   jmpd(0x100c5b0a, -0x43);              /* jmp 0x100c5b0a */
l_0x100c5b4d:
    II(0x100c5b4d, 0x5)   jmpd(0x100c5a60, -0xf2);              /* jmp 0x100c5a60 */
l_0x100c5b52:
    II(0x100c5b52, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x100c5b58, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c5b5b, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c5b5d, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c5b60, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c5b62, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c5b64, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100c5b67, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x100c5b6d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c5b70, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c5b72, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c5b75, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c5b77, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c5b79, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c5b7c, 0x6)   lea(eax, ebp - 0xfc);                 /* lea eax, [ebp+0xffffff04] */
    II(0x100c5b82, 0x5)   calld(0x10076aac, -0x4f0db);          /* call 0x10076aac */
    II(0x100c5b87, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c5b8a, 0x4)   cmp(memb_a32(ds, edx + 0x2), 0x1);    /* cmp byte [edx+0x2], 0x1 */
    II(0x100c5b8e, 0x2)   jzd(0x100c5b99, 0x9);                 /* jz 0x100c5b99 */
    II(0x100c5b90, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5b93, 0x4)   cmp(memb_a32(ds, eax + 0x2), 0x3);    /* cmp byte [eax+0x2], 0x3 */
    II(0x100c5b97, 0x2)   jnzd(0x100c5b9b, 0x2);                /* jnz 0x100c5b9b */
l_0x100c5b99:
    II(0x100c5b99, 0x2)   jmpd(0x100c5ba4, 0x9);                /* jmp 0x100c5ba4 */
l_0x100c5b9b:
    II(0x100c5b9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5b9e, 0x4)   cmp(memb_a32(ds, eax + 0x2), 0x4);    /* cmp byte [eax+0x2], 0x4 */
    II(0x100c5ba2, 0x2)   jnzd(0x100c5ba6, 0x2);                /* jnz 0x100c5ba6 */
l_0x100c5ba4:
    II(0x100c5ba4, 0x2)   jmpd(0x100c5bb3, 0xd);                /* jmp 0x100c5bb3 */
l_0x100c5ba6:
    II(0x100c5ba6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5ba9, 0x4)   cmp(memb_a32(ds, eax + 0x2), 0x9);    /* cmp byte [eax+0x2], 0x9 */
    II(0x100c5bad, 0x6)   jnzd(0x100c5ca1, 0xee);               /* jnz dword 0x100c5ca1 */
l_0x100c5bb3:
    II(0x100c5bb3, 0xa)   mov(memd_a32(ss, ebp - 0x100), 0);    /* mov dword [ebp+0xffffff00], 0x0 */
    II(0x100c5bbd, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0);     /* mov word [ebp-0x30], 0x0 */
    II(0x100c5bc3, 0x2)   jmpd(0x100c5bcc, 0x7);                /* jmp 0x100c5bcc */
l_0x100c5bc5:
    II(0x100c5bc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5bc8, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
l_0x100c5bcc:
    II(0x100c5bcc, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5bcf, 0x5)   calld(my_1_get_count, -0x1a6fc);      /* call 0x100ab4d8 */
    II(0x100c5bd4, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100c5bd8, 0x2)   jled(0x100c5c27, 0x4d);               /* jle 0x100c5c27 */
    II(0x100c5bda, 0x6)   lea(ebx, ebp - 0x104);                /* lea ebx, [ebp+0xfffffefc] */
    II(0x100c5be0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5be4, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5be7, 0x5)   calld(0x100ca904, 0x4d18);            /* call 0x100ca904 */
    II(0x100c5bec, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c5bee, 0x5)   calld(0x100c8154, 0x2561);            /* call 0x100c8154 */
    II(0x100c5bf3, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c5bf5, 0x6)   lea(edx, ebp - 0xfc);                 /* lea edx, [ebp+0xffffff04] */
    II(0x100c5bfb, 0x6)   lea(eax, ebp - 0x108);                /* lea eax, [ebp+0xfffffef8] */
    II(0x100c5c01, 0x5)   calld(0x10075e64, -0x4fda2);          /* call 0x10075e64 */
    II(0x100c5c06, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c5c08, 0x5)   calld(0x100a5fca, -0x1fc43);          /* call 0x100a5fca */
    II(0x100c5c0d, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x100c5c10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c5c13, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x100));   /* cmp ax, [ebp+0xffffff00] */
    II(0x100c5c1a, 0x2)   jled(0x100c5c25, 0x9);                /* jle 0x100c5c25 */
    II(0x100c5c1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c5c1f, 0x6)   mov(memd_a32(ss, ebp - 0x100), eax);  /* mov [ebp+0xffffff00], eax */
l_0x100c5c25:
    II(0x100c5c25, 0x2)   jmpd(0x100c5bc5, -0x62);              /* jmp 0x100c5bc5 */
l_0x100c5c27:
    II(0x100c5c27, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5c2a, 0x5)   calld(my_1_get_count, -0x1a757);      /* call 0x100ab4d8 */
    II(0x100c5c2f, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c5c30, 0x4)   mov(memw_a32(ss, ebp - 0x30), ax);    /* mov [ebp-0x30], ax */
    II(0x100c5c34, 0x2)   jmpd(0x100c5c3d, 0x7);                /* jmp 0x100c5c3d */
l_0x100c5c36:
    II(0x100c5c36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5c39, 0x4)   dec(memw_a32(ss, ebp - 0x30));        /* dec word [ebp-0x30] */
l_0x100c5c3d:
    II(0x100c5c3d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5c41, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5c43, 0x2)   jld(0x100c5ca1, 0x5c);                /* jl 0x100c5ca1 */
    II(0x100c5c45, 0x6)   lea(ebx, ebp - 0x10c);                /* lea ebx, [ebp+0xfffffef4] */
    II(0x100c5c4b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5c4f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5c52, 0x5)   calld(0x100ca904, 0x4cad);            /* call 0x100ca904 */
    II(0x100c5c57, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c5c59, 0x5)   calld(0x100c8154, 0x24f6);            /* call 0x100c8154 */
    II(0x100c5c5e, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c5c60, 0x6)   lea(edx, ebp - 0xfc);                 /* lea edx, [ebp+0xffffff04] */
    II(0x100c5c66, 0x6)   lea(eax, ebp - 0x110);                /* lea eax, [ebp+0xfffffef0] */
    II(0x100c5c6c, 0x5)   calld(0x10075e64, -0x4fe0d);          /* call 0x10075e64 */
    II(0x100c5c71, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c5c73, 0x5)   calld(0x100a5fca, -0x1fcae);          /* call 0x100a5fca */
    II(0x100c5c78, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100c5c7b, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x100)); /* movsx edx, word [ebp+0xffffff00] */
    II(0x100c5c82, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c5c84, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c5c87, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c5c89, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c5c8b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100c5c8f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c5c91, 0x2)   jged(0x100c5c9f, 0xc);                /* jge 0x100c5c9f */
    II(0x100c5c93, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5c97, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5c9a, 0x5)   calld(0x1013b24f, 0x755b0);           /* call 0x1013b24f */
l_0x100c5c9f:
    II(0x100c5c9f, 0x2)   jmpd(0x100c5c36, -0x6b);              /* jmp 0x100c5c36 */
l_0x100c5ca1:
    II(0x100c5ca1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5ca4, 0x4)   cmp(memb_a32(ds, eax + 0x2), 0x5);    /* cmp byte [eax+0x2], 0x5 */
    II(0x100c5ca8, 0x6)   jnzd(0x100c5d9e, 0xf0);               /* jnz dword 0x100c5d9e */
    II(0x100c5cae, 0x6)   mov(ax, memw_a32(ds, 0x101c8172));    /* mov ax, [0x101c8172] */
    II(0x100c5cb4, 0x7)   add(ax, memw_a32(ds, 0x101c8174));    /* add ax, [0x101c8174] */
    II(0x100c5cbb, 0x6)   mov(memd_a32(ss, ebp - 0x114), eax);  /* mov [ebp+0xfffffeec], eax */
    II(0x100c5cc1, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0);     /* mov word [ebp-0x30], 0x0 */
    II(0x100c5cc7, 0x2)   jmpd(0x100c5cd0, 0x7);                /* jmp 0x100c5cd0 */
l_0x100c5cc9:
    II(0x100c5cc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5ccc, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
l_0x100c5cd0:
    II(0x100c5cd0, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5cd3, 0x5)   calld(my_1_get_count, -0x1a800);      /* call 0x100ab4d8 */
    II(0x100c5cd8, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100c5cdc, 0x2)   jled(0x100c5d2b, 0x4d);               /* jle 0x100c5d2b */
    II(0x100c5cde, 0x6)   lea(ebx, ebp - 0x118);                /* lea ebx, [ebp+0xfffffee8] */
    II(0x100c5ce4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5ce8, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5ceb, 0x5)   calld(0x100ca904, 0x4c14);            /* call 0x100ca904 */
    II(0x100c5cf0, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c5cf2, 0x5)   calld(0x100c8154, 0x245d);            /* call 0x100c8154 */
    II(0x100c5cf7, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c5cf9, 0x6)   lea(edx, ebp - 0xfc);                 /* lea edx, [ebp+0xffffff04] */
    II(0x100c5cff, 0x6)   lea(eax, ebp - 0x11c);                /* lea eax, [ebp+0xfffffee4] */
    II(0x100c5d05, 0x5)   calld(0x10075e64, -0x4fea6);          /* call 0x10075e64 */
    II(0x100c5d0a, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c5d0c, 0x5)   calld(0x100a5fca, -0x1fd47);          /* call 0x100a5fca */
    II(0x100c5d11, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x100c5d14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c5d17, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x114));   /* cmp ax, [ebp+0xfffffeec] */
    II(0x100c5d1e, 0x2)   jged(0x100c5d29, 0x9);                /* jge 0x100c5d29 */
    II(0x100c5d20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c5d23, 0x6)   mov(memd_a32(ss, ebp - 0x114), eax);  /* mov [ebp+0xfffffeec], eax */
l_0x100c5d29:
    II(0x100c5d29, 0x2)   jmpd(0x100c5cc9, -0x62);              /* jmp 0x100c5cc9 */
l_0x100c5d2b:
    II(0x100c5d2b, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5d2e, 0x5)   calld(my_1_get_count, -0x1a85b);      /* call 0x100ab4d8 */
    II(0x100c5d33, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c5d34, 0x4)   mov(memw_a32(ss, ebp - 0x30), ax);    /* mov [ebp-0x30], ax */
    II(0x100c5d38, 0x2)   jmpd(0x100c5d41, 0x7);                /* jmp 0x100c5d41 */
l_0x100c5d3a:
    II(0x100c5d3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5d3d, 0x4)   dec(memw_a32(ss, ebp - 0x30));        /* dec word [ebp-0x30] */
l_0x100c5d41:
    II(0x100c5d41, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100c5d45, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5d47, 0x2)   jld(0x100c5d9e, 0x55);                /* jl 0x100c5d9e */
    II(0x100c5d49, 0x6)   lea(ebx, ebp - 0x120);                /* lea ebx, [ebp+0xfffffee0] */
    II(0x100c5d4f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5d53, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5d56, 0x5)   calld(0x100ca904, 0x4ba9);            /* call 0x100ca904 */
    II(0x100c5d5b, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c5d5d, 0x5)   calld(0x100c8154, 0x23f2);            /* call 0x100c8154 */
    II(0x100c5d62, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c5d64, 0x6)   lea(edx, ebp - 0xfc);                 /* lea edx, [ebp+0xffffff04] */
    II(0x100c5d6a, 0x6)   lea(eax, ebp - 0x124);                /* lea eax, [ebp+0xfffffedc] */
    II(0x100c5d70, 0x5)   calld(0x10075e64, -0x4ff11);          /* call 0x10075e64 */
    II(0x100c5d75, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c5d77, 0x5)   calld(0x100a5fca, -0x1fdb2);          /* call 0x100a5fca */
    II(0x100c5d7c, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100c5d7f, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x114)); /* movsx eax, word [ebp+0xfffffeec] */
    II(0x100c5d86, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c5d88, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100c5d8c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c5d8e, 0x2)   jled(0x100c5d9c, 0xc);                /* jle 0x100c5d9c */
    II(0x100c5d90, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5d94, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5d97, 0x5)   calld(0x1013b24f, 0x754b3);           /* call 0x1013b24f */
l_0x100c5d9c:
    II(0x100c5d9c, 0x2)   jmpd(0x100c5d3a, -0x64);              /* jmp 0x100c5d3a */
l_0x100c5d9e:
    II(0x100c5d9e, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100c5da5, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0);     /* mov word [ebp-0x30], 0x0 */
    II(0x100c5dab, 0x2)   jmpd(0x100c5db4, 0x7);                /* jmp 0x100c5db4 */
l_0x100c5dad:
    II(0x100c5dad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5db0, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
l_0x100c5db4:
    II(0x100c5db4, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5db7, 0x5)   calld(my_1_get_count, -0x1a8e4);      /* call 0x100ab4d8 */
    II(0x100c5dbc, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100c5dc0, 0x2)   jled(0x100c5dd8, 0x16);               /* jle 0x100c5dd8 */
    II(0x100c5dc2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5dc6, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5dc9, 0x5)   calld(0x100ca904, 0x4b36);            /* call 0x100ca904 */
    II(0x100c5dce, 0x5)   calld(0x100cac00, 0x4e2d);            /* call 0x100cac00 */
    II(0x100c5dd3, 0x3)   add(memd_a32(ss, ebp - 0x28), eax);   /* add [ebp-0x28], eax */
    II(0x100c5dd6, 0x2)   jmpd(0x100c5dad, -0x2b);              /* jmp 0x100c5dad */
l_0x100c5dd8:
    II(0x100c5dd8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c5ddc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5dde, 0x2)   jnzd(0x100c5e10, 0x30);               /* jnz 0x100c5e10 */
    II(0x100c5de0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5de3, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c5de6, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c5dec, 0x7)   mov(memb_a32(ds, eax + 0x101ca490), 0); /* mov byte [eax+0x101ca490], 0x0 */
    II(0x100c5df3, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100c5df7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c5df9, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100c5dfc, 0x5)   calld(0x1008bc9f, -0x3a162);          /* call 0x1008bc9f */
    II(0x100c5e01, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c5e03, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5e06, 0x5)   calld(0x100ca824, 0x4a19);            /* call 0x100ca824 */
    II(0x100c5e0b, 0x5)   jmpd(0x100c5ecd, 0xbd);               /* jmp 0x100c5ecd */
l_0x100c5e10:
    II(0x100c5e10, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c5e14, 0x5)   calld(/* sys */ 0x10165e9b, 0xa0082); /* call 0x10165e9b */
    II(0x100c5e19, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100c5e1c, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c5e1f, 0x1)   inc(eax);                             /* inc eax */
    II(0x100c5e20, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100c5e23, 0x6)   mov(memw_a32(ss, ebp - 0x30), 0xffff); /* mov word [ebp-0x30], 0xffff */
l_0x100c5e29:
    II(0x100c5e29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c5e2c, 0x4)   inc(memw_a32(ss, ebp - 0x30));        /* inc word [ebp-0x30] */
    II(0x100c5e30, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5e34, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5e37, 0x5)   calld(0x100ca904, 0x4ac8);            /* call 0x100ca904 */
    II(0x100c5e3c, 0x5)   calld(0x100cac00, 0x4dbf);            /* call 0x100cac00 */
    II(0x100c5e41, 0x3)   sub(memd_a32(ss, ebp - 0x28), eax);   /* sub [ebp-0x28], eax */
    II(0x100c5e44, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c5e48, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c5e4a, 0x2)   jgd(0x100c5e29, -0x23);               /* jg 0x100c5e29 */
    II(0x100c5e4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5e4f, 0x4)   movsx(ebx, memb_a32(ds, eax + 0x2));  /* movsx ebx, byte [eax+0x2] */
    II(0x100c5e53, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5e56, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x100c5e59, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100c5e5d, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5e60, 0x5)   calld(0x100ca904, 0x4a9f);            /* call 0x100ca904 */
    II(0x100c5e65, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x100c5e67, 0x5)   calld(0x100c8096, 0x222a);            /* call 0x100c8096 */
    II(0x100c5e6c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5e6f, 0x5)   calld(0x1013b325, 0x754b1);           /* call 0x1013b325 */
    II(0x100c5e74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5e77, 0x5)   calld(0x100c3eb4, -0x1fc8);           /* call 0x100c3eb4 */
    II(0x100c5e7c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c5e7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5e82, 0x5)   calld(0x100c440e, -0x1a79);           /* call 0x100c440e */
    II(0x100c5e87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5e8a, 0x5)   calld(0x100c4051, -0x1e3e);           /* call 0x100c4051 */
    II(0x100c5e8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5e92, 0x5)   calld(0x100c409c, -0x1dfb);           /* call 0x100c409c */
    II(0x100c5e97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c5e9a, 0x5)   calld(0x100c4162, -0x1d3d);           /* call 0x100c4162 */
    II(0x100c5e9f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100c5ea3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c5ea5, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100c5ea8, 0x5)   calld(0x1008bc9f, -0x3a20e);          /* call 0x1008bc9f */
    II(0x100c5ead, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c5eaf, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c5eb2, 0x5)   calld(0x100ca824, 0x496d);            /* call 0x100ca824 */
    II(0x100c5eb7, 0x2)   jmpd(0x100c5ecd, 0x14);               /* jmp 0x100c5ecd */
//  II(0x100c5eb9, 0x14)  /* Недостижимый код. */
l_0x100c5ecd:
    II(0x100c5ecd, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100c5ed0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c5ed2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c5ed3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c5ed4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c5ed5, 0x1)   popd(edx);                            /* pop edx */
    II(0x100c5ed6, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c5ed7, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100c5ed8, 0x1)   retd();                               /* ret */
FUNC_END

