FUNC_BEGIN(0x100f0b1b, 0x8caa0b4e62d8be08, 0x20, ({0x68, 0xb4, 0, 0, 0, 0xe8, 0x2d, 0x52, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x84, 0, 0, 0, 0x88, 0x45, 0xfc, 0xb9, 0xe6, 0, 0, 0, 0xbb, 0xa7, 0, 0, 0, 0xba, 0xa2, 0, 0, 0, 0x8d, 0x45, 0xf8, 0xe8, 0x57, 0x48, 0xfe, 0xff, 0xb9, 0x24, 0, 0, 0, 0xbb, 0xa3, 0, 0, 0, 0xba, 0xa2, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x40, 0x48, 0xfe, 0xff, 0xb8, 0x6, 0, 0, 0, 0xe8, 0xcf, 0x7c, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x66, 0xc7, 0x5, 0xd9, 0x87, 0x1b, 0x10, 0xa9, 0x2, 0xc7, 0x5, 0xdb, 0x87, 0x1b, 0x10, 0xfc, 0x88, 0x1b, 0x10, 0x66, 0x83, 0x3d, 0x82, 0x39, 0x1c, 0x10, 0, 0x74, 0x9, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0x13, 0x66, 0xc7, 0x5, 0xd9, 0x87, 0x1b, 0x10, 0xab, 0x2, 0xc7, 0x5, 0xdb, 0x87, 0x1b, 0x10, 0x4, 0x89, 0x1b, 0x10, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x18, 0xf, 0x83, 0x15, 0x3, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x83, 0xb8, 0x53, 0x87, 0x1b, 0x10, 0, 0x74, 0x31, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe8, 0xe8, 0x40, 0xd9, 0xfd, 0xff, 0xe8, 0x67, 0x53, 0x7, 0, 0x89, 0x45, 0xe4, 0xeb, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0xc7, 0x80, 0x53, 0x87, 0x1b, 0x10, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x17, 0x75, 0x9, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0xa5, 0x2, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x49, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x18, 0xe8, 0xf5, 0x7b, 0xff, 0xff, 0x89, 0x45, 0xf0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xab, 0x51, 0x7, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x45, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x8, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x66, 0x8b, 0x80, 0x4d, 0x87, 0x1b, 0x10, 0x40, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x90, 0x4b, 0x87, 0x1b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe0, 0xe8, 0x71, 0xd7, 0xfd, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd4, 0xf, 0xbf, 0x55, 0xec, 0x6b, 0xd2, 0xe, 0x8b, 0x45, 0xd4, 0x89, 0x82, 0x53, 0x87, 0x1b, 0x10, 0xc7, 0x45, 0xd0, 0x20, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x49, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x18, 0x5, 0xe8, 0x3, 0, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x5e, 0x95, 0x7, 0, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x17, 0x75, 0xe, 0x83, 0x4d, 0xd0, 0x4, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x47, 0x95, 0x7, 0, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0xb, 0x7c, 0x6, 0x83, 0x4d, 0xd0, 0x1, 0xeb, 0x18, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x49, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x18, 0x5, 0, 0x70, 0, 0, 0x89, 0x45, 0xc8, 0x8b, 0x55, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0x53, 0x44, 0xfe, 0xff, 0x8b, 0x55, 0xcc, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0xde, 0x43, 0xfe, 0xff, 0x8b, 0x55, 0xc8, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0xf9, 0x43, 0xfe, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x83, 0xb8, 0x4f, 0x87, 0x1b, 0x10, 0, 0xf, 0x84, 0xf9, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x17, 0xf, 0x85, 0x83, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x90, 0x44, 0xfe, 0xff, 0x50, 0x8d, 0x45, 0xc0, 0xe8, 0xb3, 0x44, 0xfe, 0xff, 0x50, 0xb9, 0xe6, 0, 0, 0, 0xbb, 0xa2, 0, 0, 0, 0xba, 0xa0, 0, 0, 0, 0x8d, 0x45, 0xbc, 0xe8, 0xef, 0x45, 0xfe, 0xff, 0x50, 0xb9, 0xe6, 0, 0, 0, 0xbb, 0xa2, 0, 0, 0, 0xba, 0xa0, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xd7, 0x45, 0xfe, 0xff, 0x50, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x88, 0x9c, 0x88, 0x1b, 0x10, 0xc1, 0xf9, 0x10, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x98, 0x9a, 0x88, 0x1b, 0x10, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x90, 0x4f, 0x87, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0x57, 0xe1, 0xfd, 0xff, 0xeb, 0x69, 0x8d, 0x45, 0xb4, 0xe8, 0xd, 0x44, 0xfe, 0xff, 0x50, 0x8d, 0x45, 0xb0, 0xe8, 0x30, 0x44, 0xfe, 0xff, 0x50, 0x8d, 0x55, 0xf4, 0x8d, 0x45, 0xac, 0xe8, 0x4c, 0x3f, 0xfe, 0xff, 0x50, 0x8d, 0x55, 0xf8, 0x8d, 0x45, 0xa8, 0xe8, 0x40, 0x3f, 0xfe, 0xff, 0x50, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x88, 0x9c, 0x88, 0x1b, 0x10, 0xc1, 0xf9, 0x10, 0xf, 0xbf, 0x5d, 0xec, 0xc1, 0xe3, 0x2, 0x8b, 0x9b, 0x9a, 0x88, 0x1b, 0x10, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x90, 0x4f, 0x87, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0xec, 0xe0, 0xfd, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x12, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0xcc, 0xe9, 0xfd, 0xff, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x17, 0x75, 0x1b, 0xe8, 0x26, 0x43, 0xfe, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0x52, 0xec, 0xfd, 0xff, 0xe8, 0x2b, 0x43, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x42, 0x43, 0xfe, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0xe, 0x8b, 0x80, 0x53, 0x87, 0x1b, 0x10, 0xe8, 0xa4, 0xeb, 0xfd, 0xff, 0xe9, 0xd8, 0xfc, 0xff, 0xff, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x65, 0x93, 0x7, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x3, 0xf, 0x8f, 0xb9, 0, 0, 0, 0x8b, 0x45, 0xec, 0x5, 0x10, 0x1, 0, 0, 0x89, 0x45, 0xa4, 0xf, 0xbf, 0x45, 0xa4, 0xe8, 0xc1, 0x30, 0x4, 0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x12, 0x89, 0x45, 0x96, 0x8b, 0x45, 0xa0, 0x83, 0xc0, 0x8, 0x89, 0x45, 0x9a, 0xc7, 0x45, 0x84, 0, 0, 0, 0, 0xc7, 0x45, 0x88, 0, 0, 0, 0, 0x8b, 0x45, 0xa0, 0xf, 0xbf, 0, 0x89, 0x45, 0x8c, 0x8b, 0x45, 0xa0, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0x90, 0x8b, 0x45, 0xa0, 0x66, 0x8b, 0, 0x66, 0x89, 0x45, 0x94, 0x8b, 0x45, 0xec, 0x40, 0x89, 0x45, 0x80, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x3, 0x75, 0x7, 0xc7, 0x45, 0x80, 0xff, 0, 0, 0, 0xb9, 0x3f, 0, 0, 0, 0x31, 0xdb, 0x8a, 0x5d, 0x80, 0x31, 0xd2, 0x8a, 0x55, 0x80, 0x8d, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0x1b, 0x44, 0xfe, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xa0, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xa0, 0xf, 0xbf, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0xba, 0xe8, 0x22, 0x1a, 0x10, 0x8d, 0x45, 0x84, 0xe8, 0xe6, 0x9b, 0xff, 0xff, 0xe9, 0x34, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f0b1b, 0x5)   pushd(0xb4);                          /* push dword 0xb4 */
    II(0x100f0b20, 0x5)   calld(sys_check_available_stack_size, 0x7522d); /* call 0x10165d52 */
    II(0x100f0b25, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f0b26, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f0b27, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f0b28, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f0b29, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f0b2a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f0b2b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f0b2d, 0x6)   sub(esp, 0x84);                       /* sub esp, 0x84 */
    II(0x100f0b33, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x100f0b36, 0x5)   mov(ecx, 0xe6);                       /* mov ecx, 0xe6 */
    II(0x100f0b3b, 0x5)   mov(ebx, 0xa7);                       /* mov ebx, 0xa7 */
    II(0x100f0b40, 0x5)   mov(edx, 0xa2);                       /* mov edx, 0xa2 */
    II(0x100f0b45, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100f0b48, 0x5)   calld(0x100d53a4, -0x1b7a9);          /* call 0x100d53a4 */
    II(0x100f0b4d, 0x5)   mov(ecx, 0x24);                       /* mov ecx, 0x24 */
    II(0x100f0b52, 0x5)   mov(ebx, 0xa3);                       /* mov ebx, 0xa3 */
    II(0x100f0b57, 0x5)   mov(edx, 0xa2);                       /* mov edx, 0xa2 */
    II(0x100f0b5c, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100f0b5f, 0x5)   calld(0x100d53a4, -0x1b7c0);          /* call 0x100d53a4 */
    II(0x100f0b64, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x100f0b69, 0x5)   calld(0x100e883d, -0x8331);           /* call 0x100e883d */
    II(0x100f0b6e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100f0b71, 0x9)   mov(memw_a32(ds, 0x101b87d9), 0x2a9); /* mov word [0x101b87d9], 0x2a9 */
    II(0x100f0b7a, 0xa)   mov(memd_a32(ds, 0x101b87db), 0x101b88fc); /* mov dword [0x101b87db], 0x101b88fc */
    II(0x100f0b84, 0x8)   cmp(memw_a32(ds, 0x101c3982), 0);     /* cmp word [0x101c3982], 0x0 */
    II(0x100f0b8c, 0x2)   jzd(0x100f0b97, 0x9);                 /* jz 0x100f0b97 */
    II(0x100f0b8e, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100f0b95, 0x2)   jzd(0x100f0b99, 0x2);                 /* jz 0x100f0b99 */
l_0x100f0b97:
    II(0x100f0b97, 0x2)   jmpd(0x100f0bac, 0x13);               /* jmp 0x100f0bac */
l_0x100f0b99:
    II(0x100f0b99, 0x9)   mov(memw_a32(ds, 0x101b87d9), 0x2ab); /* mov word [0x101b87d9], 0x2ab */
    II(0x100f0ba2, 0xa)   mov(memd_a32(ds, 0x101b87db), 0x101b8904); /* mov dword [0x101b87db], 0x101b8904 */
l_0x100f0bac:
    II(0x100f0bac, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100f0bb3, 0x2)   jmpd(0x100f0bbb, 0x6);                /* jmp 0x100f0bbb */
l_0x100f0bb5:
    II(0x100f0bb5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0bb8, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100f0bbb:
    II(0x100f0bbb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0bbf, 0x3)   cmp(eax, 0x18);                       /* cmp eax, 0x18 */
    II(0x100f0bc2, 0x6)   jaed(0x100f0edd, 0x315);              /* jae dword 0x100f0edd */
    II(0x100f0bc8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0bcc, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0bcf, 0x7)   cmp(memd_a32(ds, eax + 0x101b8753), 0); /* cmp dword [eax+0x101b8753], 0x0 */
    II(0x100f0bd6, 0x2)   jzd(0x100f0c09, 0x31);                /* jz 0x100f0c09 */
    II(0x100f0bd8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0bdc, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0bdf, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100f0be5, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100f0be8, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100f0bec, 0x2)   jzd(0x100f0c02, 0x14);                /* jz 0x100f0c02 */
    II(0x100f0bee, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f0bf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100f0bf3, 0x5)   calld(my_dtor_d2, -0x226c0);          /* call 0x100ce538 */
    II(0x100f0bf8, 0x5)   calld(sys_delete, 0x75367);           /* call 0x10165f64 */
    II(0x100f0bfd, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100f0c00, 0x2)   jmpd(0x100f0c09, 0x7);                /* jmp 0x100f0c09 */
l_0x100f0c02:
    II(0x100f0c02, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x100f0c09:
    II(0x100f0c09, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0c0d, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0c10, 0xa)   mov(memd_a32(ds, eax + 0x101b8753), 0); /* mov dword [eax+0x101b8753], 0x0 */
    II(0x100f0c1a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0c1e, 0x3)   cmp(eax, 0x17);                       /* cmp eax, 0x17 */
    II(0x100f0c21, 0x2)   jnzd(0x100f0c2c, 0x9);                /* jnz 0x100f0c2c */
    II(0x100f0c23, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f0c25, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100f0c28, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f0c2a, 0x2)   jzd(0x100f0c2e, 0x2);                 /* jz 0x100f0c2e */
l_0x100f0c2c:
    II(0x100f0c2c, 0x2)   jmpd(0x100f0c33, 0x5);                /* jmp 0x100f0c33 */
l_0x100f0c2e:
    II(0x100f0c2e, 0x5)   jmpd(0x100f0ed8, 0x2a5);              /* jmp 0x100f0ed8 */
l_0x100f0c33:
    II(0x100f0c33, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0c37, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0c3a, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8749)); /* mov eax, [eax+0x101b8749] */
    II(0x100f0c40, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100f0c43, 0x5)   calld(0x100e883d, -0x840b);           /* call 0x100e883d */
    II(0x100f0c48, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100f0c4b, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x100f0c50, 0x5)   calld(sys_new, 0x751ab);              /* call 0x10165e00 */
    II(0x100f0c55, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100f0c58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100f0c5b, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100f0c5e, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100f0c62, 0x2)   jzd(0x100f0ca9, 0x45);                /* jz 0x100f0ca9 */
    II(0x100f0c64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f0c67, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100f0c6a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f0c6d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0c6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f0c71, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x100f0c74, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0c78, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0c7b, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b874d)); /* mov ax, [eax+0x101b874d] */
    II(0x100f0c82, 0x1)   inc(eax);                             /* inc eax */
    II(0x100f0c83, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100f0c86, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0c8a, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0c8d, 0x6)   mov(edx, memd_a32(ds, eax + 0x101b874b)); /* mov edx, [eax+0x101b874b] */
    II(0x100f0c93, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f0c96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100f0c99, 0x5)   calld(my_ctor_c17, -0x2288f);         /* call 0x100ce40f */
    II(0x100f0c9e, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100f0ca1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f0ca4, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100f0ca7, 0x2)   jmpd(0x100f0caf, 0x6);                /* jmp 0x100f0caf */
l_0x100f0ca9:
    II(0x100f0ca9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100f0cac, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100f0caf:
    II(0x100f0caf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100f0cb3, 0x3)   imul(edx, edx, 0xe);                  /* imul edx, edx, 0xe */
    II(0x100f0cb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100f0cb9, 0x6)   mov(memd_a32(ds, edx + 0x101b8753), eax); /* mov [edx+0x101b8753], eax */
    II(0x100f0cbf, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0x20);  /* mov dword [ebp-0x30], 0x20 */
    II(0x100f0cc6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0cca, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0ccd, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8749)); /* mov eax, [eax+0x101b8749] */
    II(0x100f0cd3, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100f0cd6, 0x5)   add(eax, 0x3e8);                      /* add eax, 0x3e8 */
    II(0x100f0cdb, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x100f0cde, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100f0ce1, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100f0ce4, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100f0ce9, 0x5)   calld(/* sys */ 0x1016a24c, 0x7955e); /* call 0x1016a24c */
    II(0x100f0cee, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0cf2, 0x3)   cmp(eax, 0x17);                       /* cmp eax, 0x17 */
    II(0x100f0cf5, 0x2)   jnzd(0x100f0d05, 0xe);                /* jnz 0x100f0d05 */
    II(0x100f0cf7, 0x4)   or_(memd_a32(ss, ebp - 0x30), 0x4);   /* or dword [ebp-0x30], 0x4 */
    II(0x100f0cfb, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100f0d00, 0x5)   calld(/* sys */ 0x1016a24c, 0x79547); /* call 0x1016a24c */
l_0x100f0d05:
    II(0x100f0d05, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0d09, 0x3)   cmp(eax, 0xb);                        /* cmp eax, 0xb */
    II(0x100f0d0c, 0x2)   jld(0x100f0d14, 0x6);                 /* jl 0x100f0d14 */
    II(0x100f0d0e, 0x4)   or_(memd_a32(ss, ebp - 0x30), 0x1);   /* or dword [ebp-0x30], 0x1 */
    II(0x100f0d12, 0x2)   jmpd(0x100f0d2c, 0x18);               /* jmp 0x100f0d2c */
l_0x100f0d14:
    II(0x100f0d14, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0d18, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0d1b, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8749)); /* mov eax, [eax+0x101b8749] */
    II(0x100f0d21, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x100f0d24, 0x5)   add(eax, 0x7000);                     /* add eax, 0x7000 */
    II(0x100f0d29, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
l_0x100f0d2c:
    II(0x100f0d2c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x100f0d2f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0d33, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0d36, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100f0d3c, 0x5)   calld(0x100d5194, -0x1bbad);          /* call 0x100d5194 */
    II(0x100f0d41, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x100f0d44, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0d48, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0d4b, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100f0d51, 0x5)   calld(0x100d5134, -0x1bc22);          /* call 0x100d5134 */
    II(0x100f0d56, 0x3)   mov(edx, memd_a32(ss, ebp - 0x38));   /* mov edx, [ebp-0x38] */
    II(0x100f0d59, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0d5d, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0d60, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100f0d66, 0x5)   calld(0x100d5164, -0x1bc07);          /* call 0x100d5164 */
    II(0x100f0d6b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0d6f, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0d72, 0x7)   cmp(memd_a32(ds, eax + 0x101b874f), 0); /* cmp dword [eax+0x101b874f], 0x0 */
    II(0x100f0d79, 0x6)   jzd(0x100f0e78, 0xf9);                /* jz dword 0x100f0e78 */
    II(0x100f0d7f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0d83, 0x3)   cmp(eax, 0x17);                       /* cmp eax, 0x17 */
    II(0x100f0d86, 0x6)   jnzd(0x100f0e0f, 0x83);               /* jnz dword 0x100f0e0f */
    II(0x100f0d8c, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100f0d8f, 0x5)   calld(0x100d5224, -0x1bb70);          /* call 0x100d5224 */
    II(0x100f0d94, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0d95, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100f0d98, 0x5)   calld(0x100d5250, -0x1bb4d);          /* call 0x100d5250 */
    II(0x100f0d9d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0d9e, 0x5)   mov(ecx, 0xe6);                       /* mov ecx, 0xe6 */
    II(0x100f0da3, 0x5)   mov(ebx, 0xa2);                       /* mov ebx, 0xa2 */
    II(0x100f0da8, 0x5)   mov(edx, 0xa0);                       /* mov edx, 0xa0 */
    II(0x100f0dad, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100f0db0, 0x5)   calld(0x100d53a4, -0x1ba11);          /* call 0x100d53a4 */
    II(0x100f0db5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0db6, 0x5)   mov(ecx, 0xe6);                       /* mov ecx, 0xe6 */
    II(0x100f0dbb, 0x5)   mov(ebx, 0xa2);                       /* mov ebx, 0xa2 */
    II(0x100f0dc0, 0x5)   mov(edx, 0xa0);                       /* mov edx, 0xa0 */
    II(0x100f0dc5, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100f0dc8, 0x5)   calld(0x100d53a4, -0x1ba29);          /* call 0x100d53a4 */
    II(0x100f0dcd, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0dce, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0dd2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f0dd5, 0x6)   mov(ecx, memd_a32(ds, eax + 0x101b889c)); /* mov ecx, [eax+0x101b889c] */
    II(0x100f0ddb, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100f0dde, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0de2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f0de5, 0x6)   mov(ebx, memd_a32(ds, eax + 0x101b889a)); /* mov ebx, [eax+0x101b889a] */
    II(0x100f0deb, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100f0dee, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0df2, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0df5, 0x6)   mov(edx, memd_a32(ds, eax + 0x101b874f)); /* mov edx, [eax+0x101b874f] */
    II(0x100f0dfb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0dff, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0e02, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100f0e08, 0x5)   calld(0x100cef64, -0x21ea9);          /* call 0x100cef64 */
    II(0x100f0e0d, 0x2)   jmpd(0x100f0e78, 0x69);               /* jmp 0x100f0e78 */
l_0x100f0e0f:
    II(0x100f0e0f, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100f0e12, 0x5)   calld(0x100d5224, -0x1bbf3);          /* call 0x100d5224 */
    II(0x100f0e17, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0e18, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100f0e1b, 0x5)   calld(0x100d5250, -0x1bbd0);          /* call 0x100d5250 */
    II(0x100f0e20, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0e21, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x100f0e24, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100f0e27, 0x5)   calld(0x100d4d78, -0x1c0b4);          /* call 0x100d4d78 */
    II(0x100f0e2c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0e2d, 0x3)   lea(edx, ebp - 0x8);                  /* lea edx, [ebp-0x8] */
    II(0x100f0e30, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100f0e33, 0x5)   calld(0x100d4d78, -0x1c0c0);          /* call 0x100d4d78 */
    II(0x100f0e38, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0e39, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0e3d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f0e40, 0x6)   mov(ecx, memd_a32(ds, eax + 0x101b889c)); /* mov ecx, [eax+0x101b889c] */
    II(0x100f0e46, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100f0e49, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x100f0e4d, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x100f0e50, 0x6)   mov(ebx, memd_a32(ds, ebx + 0x101b889a)); /* mov ebx, [ebx+0x101b889a] */
    II(0x100f0e56, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100f0e59, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0e5d, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0e60, 0x6)   mov(edx, memd_a32(ds, eax + 0x101b874f)); /* mov edx, [eax+0x101b874f] */
    II(0x100f0e66, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0e6a, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0e6d, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100f0e73, 0x5)   calld(0x100cef64, -0x21f14);          /* call 0x100cef64 */
l_0x100f0e78:
    II(0x100f0e78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f0e7b, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x100f0e7e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0e82, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0e85, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100f0e8b, 0x5)   calld(0x100cf85c, -0x21634);          /* call 0x100cf85c */
    II(0x100f0e90, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0e94, 0x3)   cmp(eax, 0x17);                       /* cmp eax, 0x17 */
    II(0x100f0e97, 0x2)   jnzd(0x100f0eb4, 0x1b);               /* jnz 0x100f0eb4 */
    II(0x100f0e99, 0x5)   calld(0x100d51c4, -0x1bcda);          /* call 0x100d51c4 */
    II(0x100f0e9e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f0ea0, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100f0ea2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0ea6, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0ea9, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100f0eaf, 0x5)   calld(0x100cfb06, -0x213ae);          /* call 0x100cfb06 */
l_0x100f0eb4:
    II(0x100f0eb4, 0x5)   calld(0x100d51e4, -0x1bcd5);          /* call 0x100d51e4 */
    II(0x100f0eb9, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f0ebb, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100f0ebd, 0x5)   calld(0x100d5204, -0x1bcbe);          /* call 0x100d5204 */
    II(0x100f0ec2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f0ec4, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100f0ec6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0eca, 0x3)   imul(eax, eax, 0xe);                  /* imul eax, eax, 0xe */
    II(0x100f0ecd, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8753)); /* mov eax, [eax+0x101b8753] */
    II(0x100f0ed3, 0x5)   calld(0x100cfa7c, -0x2145c);          /* call 0x100cfa7c */
l_0x100f0ed8:
    II(0x100f0ed8, 0x5)   jmpd(0x100f0bb5, -0x328);             /* jmp 0x100f0bb5 */
l_0x100f0edd:
    II(0x100f0edd, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100f0ee2, 0x5)   calld(/* sys */ 0x1016a24c, 0x79365); /* call 0x1016a24c */
    II(0x100f0ee7, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100f0eee, 0x2)   jmpd(0x100f0ef6, 0x6);                /* jmp 0x100f0ef6 */
l_0x100f0ef0:
    II(0x100f0ef0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0ef3, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100f0ef6:
    II(0x100f0ef6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0efa, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100f0efd, 0x6)   jgd(0x100f0fbc, 0xb9);                /* jg dword 0x100f0fbc */
    II(0x100f0f03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0f06, 0x5)   add(eax, 0x110);                      /* add eax, 0x110 */
    II(0x100f0f0b, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100f0f0e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x100f0f12, 0x5)   calld(my_get_res_data_by_id, 0x430c1); /* call 0x10133fd8 */
    II(0x100f0f17, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100f0f1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f0f1d, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100f0f20, 0x3)   mov(memd_a32(ss, ebp - 0x6a), eax);   /* mov [ebp-0x6a], eax */
    II(0x100f0f23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100f0f26, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100f0f29, 0x3)   mov(memd_a32(ss, ebp - 0x66), eax);   /* mov [ebp-0x66], eax */
    II(0x100f0f2c, 0x7)   mov(memd_a32(ss, ebp - 0x7c), 0);     /* mov dword [ebp-0x7c], 0x0 */
    II(0x100f0f33, 0x7)   mov(memd_a32(ss, ebp - 0x78), 0);     /* mov dword [ebp-0x78], 0x0 */
    II(0x100f0f3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100f0f3d, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100f0f40, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x100f0f43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100f0f46, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100f0f48, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f0f4b, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x100f0f4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100f0f51, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100f0f54, 0x4)   mov(memw_a32(ss, ebp - 0x6c), ax);    /* mov [ebp-0x6c], ax */
    II(0x100f0f58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0f5b, 0x1)   inc(eax);                             /* inc eax */
    II(0x100f0f5c, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
    II(0x100f0f5f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f0f63, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100f0f66, 0x2)   jnzd(0x100f0f6f, 0x7);                /* jnz 0x100f0f6f */
    II(0x100f0f68, 0x7)   mov(memd_a32(ss, ebp - 0x80), 0xff);  /* mov dword [ebp-0x80], 0xff */
l_0x100f0f6f:
    II(0x100f0f6f, 0x5)   mov(ecx, 0x3f);                       /* mov ecx, 0x3f */
    II(0x100f0f74, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f0f76, 0x3)   mov(bl, memb_a32(ss, ebp - 0x80));    /* mov bl, [ebp-0x80] */
    II(0x100f0f79, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f0f7b, 0x3)   mov(dl, memb_a32(ss, ebp - 0x80));    /* mov dl, [ebp-0x80] */
    II(0x100f0f7e, 0x6)   lea(eax, ebp - 0x84);                 /* lea eax, [ebp+0xffffff7c] */
    II(0x100f0f84, 0x5)   calld(0x100d53a4, -0x1bbe5);          /* call 0x100d53a4 */
    II(0x100f0f89, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0f8a, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f0f8f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0f90, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f0f95, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0f96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100f0f99, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100f0f9b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f0f9e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0f9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100f0fa2, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100f0fa5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f0fa6, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100f0fa8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f0faa, 0x5)   mov(edx, 0x101a22e8);                 /* mov edx, 0x101a22e8 */ /* "End Turn" */
    II(0x100f0faf, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x100f0fb2, 0x5)   calld(0x100eab9d, -0x641a);           /* call 0x100eab9d */
    II(0x100f0fb7, 0x5)   jmpd(0x100f0ef0, -0xcc);              /* jmp 0x100f0ef0 */
l_0x100f0fbc:
    II(0x100f0fbc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f0fbe, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f0fbf, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f0fc0, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f0fc1, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f0fc2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f0fc3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f0fc4, 0x1)   retd();                               /* ret */
FUNC_END

