FUNC_BEGIN(0x101110bd, 0x3b3cee521ca7661f, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x8b, 0x4c, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0xc, 0xe, 0xf, 0x85, 0x74, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x48, 0x1, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x74, 0x5f, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x80, 0x4a, 0x1, 0, 0, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x82, 0x4c, 0x1, 0, 0, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x7d, 0x7, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xe8, 0xd4, 0x71, 0x3, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x88, 0x4a, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x22, 0xf2, 0xff, 0xff, 0xe8, 0xba, 0x71, 0x3, 0, 0x2b, 0x45, 0xf4, 0x3d, 0x8c, 0x30, 0, 0, 0x72, 0xf1, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x80, 0x4a, 0x1, 0, 0, 0x66, 0x3b, 0x45, 0xf8, 0x75, 0xc7, 0xe9, 0x7a, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x90, 0x48, 0x1, 0, 0, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x4a, 0x1, 0, 0, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x46, 0x1, 0, 0, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x7d, 0x50, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x80, 0x4a, 0x1, 0, 0, 0x8b, 0x55, 0xfc, 0x66, 0x3, 0x82, 0x4c, 0x1, 0, 0, 0x89, 0x45, 0xf0, 0xe8, 0x55, 0x71, 0x3, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x80, 0x4a, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa3, 0xf1, 0xff, 0xff, 0xe8, 0x3b, 0x71, 0x3, 0, 0x2b, 0x45, 0xec, 0x3d, 0x8c, 0x30, 0, 0, 0x72, 0xf1, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x80, 0x4a, 0x1, 0, 0, 0x66, 0x3b, 0x45, 0xf0, 0x75, 0xc7, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101110bd, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x101110c2, 0x5)   calld(sys_check_available_stack_size, 0x54c8b); /* call 0x10165d52 */
    II(0x101110c7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101110c8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101110c9, 0x1)   pushd(edx);                           /* push edx */
    II(0x101110ca, 0x1)   pushd(esi);                           /* push esi */
    II(0x101110cb, 0x1)   pushd(edi);                           /* push edi */
    II(0x101110cc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101110cd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101110cf, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x101110d5, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x101110d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101110db, 0x4)   cmp(memd_a32(ds, eax + 0xc), 0xe);    /* cmp dword [eax+0xc], 0xe */
    II(0x101110df, 0x6)   jnzd(0x10111159, 0x74);               /* jnz dword 0x10111159 */
    II(0x101110e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101110e8, 0x6)   mov(eax, memd_a32(ds, eax + 0x148));  /* mov eax, [eax+0x148] */
    II(0x101110ee, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101110f1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101110f3, 0x2)   jzd(0x10111154, 0x5f);                /* jz 0x10111154 */
    II(0x101110f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101110f8, 0x7)   mov(ax, memw_a32(ds, eax + 0x14a));   /* mov ax, [eax+0x14a] */
    II(0x101110ff, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10111102, 0x7)   sub(ax, memw_a32(ds, edx + 0x14c));   /* sub ax, [edx+0x14c] */
    II(0x10111109, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011110c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10111110, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10111112, 0x2)   jged(0x1011111b, 0x7);                /* jge 0x1011111b */
    II(0x10111114, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
l_0x1011111b:
    II(0x1011111b, 0x5)   calld(0x101482f4, 0x371d4);           /* call 0x101482f4 */
    II(0x10111120, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10111123, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111126, 0x7)   dec(memw_a32(ds, eax + 0x14a));       /* dec word [eax+0x14a] */
    II(0x1011112d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111130, 0x5)   calld(0x10110357, -0xdde);            /* call 0x10110357 */
l_0x10111135:
    II(0x10111135, 0x5)   calld(0x101482f4, 0x371ba);           /* call 0x101482f4 */
    II(0x1011113a, 0x3)   sub(eax, memd_a32(ss, ebp - 0xc));    /* sub eax, [ebp-0xc] */
    II(0x1011113d, 0x5)   cmp(eax, 0x308c);                     /* cmp eax, 0x308c */
    II(0x10111142, 0x2)   jbd(0x10111135, -0xf);                /* jb 0x10111135 */
    II(0x10111144, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111147, 0x7)   mov(ax, memw_a32(ds, eax + 0x14a));   /* mov ax, [eax+0x14a] */
    II(0x1011114e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10111152, 0x2)   jnzd(0x1011111b, -0x39);              /* jnz 0x1011111b */
l_0x10111154:
    II(0x10111154, 0x5)   jmpd(0x101111d3, 0x7a);               /* jmp 0x101111d3 */
l_0x10111159:
    II(0x10111159, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011115c, 0x6)   mov(edx, memd_a32(ds, eax + 0x148));  /* mov edx, [eax+0x148] */
    II(0x10111162, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10111165, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111168, 0x6)   mov(eax, memd_a32(ds, eax + 0x14a));  /* mov eax, [eax+0x14a] */
    II(0x1011116e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10111171, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10111173, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111176, 0x6)   mov(eax, memd_a32(ds, eax + 0x146));  /* mov eax, [eax+0x146] */
    II(0x1011117c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011117f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10111181, 0x2)   jged(0x101111d3, 0x50);               /* jge 0x101111d3 */
    II(0x10111183, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111186, 0x7)   mov(ax, memw_a32(ds, eax + 0x14a));   /* mov ax, [eax+0x14a] */
    II(0x1011118d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10111190, 0x7)   add(ax, memw_a32(ds, edx + 0x14c));   /* add ax, [edx+0x14c] */
    II(0x10111197, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x1011119a:
    II(0x1011119a, 0x5)   calld(0x101482f4, 0x37155);           /* call 0x101482f4 */
    II(0x1011119f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101111a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101111a5, 0x7)   inc(memw_a32(ds, eax + 0x14a));       /* inc word [eax+0x14a] */
    II(0x101111ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101111af, 0x5)   calld(0x10110357, -0xe5d);            /* call 0x10110357 */
l_0x101111b4:
    II(0x101111b4, 0x5)   calld(0x101482f4, 0x3713b);           /* call 0x101482f4 */
    II(0x101111b9, 0x3)   sub(eax, memd_a32(ss, ebp - 0x14));   /* sub eax, [ebp-0x14] */
    II(0x101111bc, 0x5)   cmp(eax, 0x308c);                     /* cmp eax, 0x308c */
    II(0x101111c1, 0x2)   jbd(0x101111b4, -0xf);                /* jb 0x101111b4 */
    II(0x101111c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101111c6, 0x7)   mov(ax, memw_a32(ds, eax + 0x14a));   /* mov ax, [eax+0x14a] */
    II(0x101111cd, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x101111d1, 0x2)   jnzd(0x1011119a, -0x39);              /* jnz 0x1011119a */
l_0x101111d3:
    II(0x101111d3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101111d5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101111d6, 0x1)   popd(edi);                            /* pop edi */
    II(0x101111d7, 0x1)   popd(esi);                            /* pop esi */
    II(0x101111d8, 0x1)   popd(edx);                            /* pop edx */
    II(0x101111d9, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101111da, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101111db, 0x1)   retd();                               /* ret */
FUNC_END

