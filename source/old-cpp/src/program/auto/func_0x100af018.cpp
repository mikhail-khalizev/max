FUNC_BEGIN(0x100af018, 0xff42bf0d8e51128d, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x30, 0x6d, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x2f, 0x75, 0xfc, 0xff, 0x89, 0xc2, 0x31, 0xc0, 0x8a, 0x42, 0x4d, 0x89, 0x45, 0xe8, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x80, 0x7a, 0x19, 0, 0x7e, 0x39, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x16, 0xc1, 0xfb, 0x18, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x58, 0x75, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xf0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x3f, 0x2f, 0x1, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x19, 0x3, 0x75, 0x7, 0xc7, 0x45, 0xe8, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xcd, 0xc3, 0xfd, 0xff, 0x98, 0x85, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xd6, 0x5, 0, 0, 0xbb, 0xb8, 0xe, 0x1a, 0x10, 0xba, 0xc4, 0xe, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xbb, 0x6c, 0xb, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x8f, 0x74, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x30, 0xe4, 0xc1, 0xe0, 0x2, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x48, 0, 0x74, 0x7, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x69, 0x74, 0xfc, 0xff, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x1a, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x53, 0x74, 0xfc, 0xff, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x1c, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x3a, 0xc3, 0xfd, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0x8, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0xc1, 0, 0, 0, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xba, 0xb8, 0xff, 0xff, 0x8b, 0x8, 0xc1, 0xf9, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0xa6, 0xb8, 0xff, 0xff, 0xf, 0xbf, 0x18, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xdb, 0x73, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x15, 0x11, 0xfc, 0xff, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x72, 0xb8, 0xff, 0xff, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1a, 0x74, 0x1c, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x57, 0xb8, 0xff, 0xff, 0x66, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x1c, 0x75, 0x2, 0xeb, 0x13, 0xf, 0xbf, 0x55, 0xf4, 0x8d, 0x14, 0x52, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x29, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2c, 0xe8, 0x20, 0xb8, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1a, 0xe8, 0x2f, 0x99, 0xfd, 0xff, 0xe9, 0x1b, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x70, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x19, 0, 0x7e, 0x6, 0x83, 0x7d, 0xe4, 0, 0x75, 0x2, 0xeb, 0x27, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xd0, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xe8, 0x7d, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xf8, 0, 0xeb, 0x30, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xfe, 0x72, 0xfc, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x1a, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xe8, 0x72, 0xfc, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x1c, 0x66, 0x89, 0x50, 0x43, 0xc6, 0x45, 0xf8, 0x1, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100af018, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x100af01d, 0x5)   calld(sys_check_available_stack_size, 0xb6d30); /* call 0x10165d52 */
    II(0x100af022, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100af023, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100af024, 0x1)   pushd(edx);                           /* push edx */
    II(0x100af025, 0x1)   pushd(esi);                           /* push esi */
    II(0x100af026, 0x1)   pushd(edi);                           /* push edi */
    II(0x100af027, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100af028, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100af02a, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100af030, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100af033, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
//    II(0x100af03a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af03d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af040, 0x5)   calld(0x10076574, -0x38ad1);          /* call 0x10076574 */
    II(0x100af045, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af047, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100af049, 0x3)   mov(al, memb_a32(ds, edx + 0x4d));    /* mov al, [edx+0x4d] */
    II(0x100af04c, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100af04f, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100af056, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100af059, 0x4)   cmp(memb_a32(ds, edx + 0x19), 0);     /* cmp byte [edx+0x19], 0x0 */
    II(0x100af05d, 0x2)   jled(0x100af098, 0x39);               /* jle 0x100af098 */
    II(0x100af05f, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100af064, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af067, 0x3)   mov(ebx, memd_a32(ds, eax + 0x16));   /* mov ebx, [eax+0x16] */
    II(0x100af06a, 0x3)   sar(ebx, 0x18);                       /* sar ebx, 0x18 */
    II(0x100af06d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af070, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af073, 0x5)   calld(0x100765d0, -0x38aa8);          /* call 0x100765d0 */
    II(0x100af078, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af07a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af07d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100af080, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100af083, 0x6)   imul(esi, eax, 0xc5);                 /* imul esi, eax, 0xc5 */
    II(0x100af089, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100af08e, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100af090, 0x5)   calld(0x100c1fd4, 0x12f3f);           /* call 0x100c1fd4 */
    II(0x100af095, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x100af098:
    II(0x100af098, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af09b, 0x4)   cmp(memb_a32(ds, eax + 0x19), 0x3);   /* cmp byte [eax+0x19], 0x3 */
    II(0x100af09f, 0x2)   jnzd(0x100af0a8, 0x7);                /* jnz 0x100af0a8 */
    II(0x100af0a1, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x1);   /* mov dword [ebp-0x18], 0x1 */
l_0x100af0a8:
    II(0x100af0a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af0ab, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100af0ae, 0x5)   calld(my_3_get_count, -0x23c33);      /* call 0x1008b480 */
    II(0x100af0b3, 0x1)   cwde();                               /* cwde */
    II(0x100af0b4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100af0b6, 0x2)   jzd(0x100af0c1, 0x9);                 /* jz 0x100af0c1 */
    II(0x100af0b8, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100af0bf, 0x2)   jmpd(0x100af0da, 0x19);               /* jmp 0x100af0da */
l_0x100af0c1:
    II(0x100af0c1, 0x5)   mov(ecx, 0x5d6);                      /* mov ecx, 0x5d6 */
    II(0x100af0c6, 0x5)   mov(ebx, 0x101a0eb8);                 /* mov ebx, 0x101a0eb8 */ /* "ai_move.cpp" */
    II(0x100af0cb, 0x5)   mov(edx, 0x101a0ec4);                 /* mov edx, 0x101a0ec4 */ /* "planned_path.GetCount() != 0" */
    II(0x100af0d0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100af0d2, 0x5)   calld(sys_assert, 0xb6cbb);           /* call 0x10165d92 */
    II(0x100af0d7, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100af0da:
    II(0x100af0da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af0dd, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af0e0, 0x5)   calld(0x10076574, -0x38b71);          /* call 0x10076574 */
    II(0x100af0e5, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100af0e8, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100af0ea, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100af0ed, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100af0f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af0f3, 0x4)   cmp(memb_a32(ds, eax + 0x48), 0);     /* cmp byte [eax+0x48], 0x0 */
    II(0x100af0f7, 0x2)   jzd(0x100af100, 0x7);                 /* jz 0x100af100 */
    II(0x100af0f9, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
l_0x100af100:
    II(0x100af100, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af103, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af106, 0x5)   calld(0x10076574, -0x38b97);          /* call 0x10076574 */
    II(0x100af10b, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
    II(0x100af10f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af112, 0x4)   mov(memw_a32(ds, eax + 0x1a), dx);    /* mov [eax+0x1a], dx */
    II(0x100af116, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af119, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af11c, 0x5)   calld(0x10076574, -0x38bad);          /* call 0x10076574 */
    II(0x100af121, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x100af125, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af128, 0x4)   mov(memw_a32(ds, eax + 0x1c), dx);    /* mov [eax+0x1c], dx */
    II(0x100af12c, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100af133, 0x2)   jmpd(0x100af13b, 0x6);                /* jmp 0x100af13b */
l_0x100af135:
    II(0x100af135, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100af138, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100af13b:
    II(0x100af13b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af13e, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100af141, 0x5)   calld(my_3_get_count, -0x23cc6);      /* call 0x1008b480 */
    II(0x100af146, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100af14a, 0x2)   jled(0x100af154, 0x8);                /* jle 0x100af154 */
    II(0x100af14c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100af150, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100af152, 0x2)   jgd(0x100af159, 0x5);                 /* jg 0x100af159 */
l_0x100af154:
    II(0x100af154, 0x5)   jmpd(0x100af21a, 0xc1);               /* jmp 0x100af21a */
l_0x100af159:
    II(0x100af159, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100af15e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100af15f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100af163, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af166, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100af169, 0x5)   calld(0x100aaa28, -0x4746);           /* call 0x100aaa28 */
    II(0x100af16e, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x100af170, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100af173, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100af177, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af17a, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100af17d, 0x5)   calld(0x100aaa28, -0x475a);           /* call 0x100aaa28 */
    II(0x100af182, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100af185, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af188, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100af18b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100af18e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af191, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af194, 0x5)   calld(0x10076574, -0x38c25);          /* call 0x10076574 */
    II(0x100af199, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100af19c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100af19f, 0x5)   calld(0x100702b9, -0x3eeeb);          /* call 0x100702b9 */
    II(0x100af1a4, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100af1a7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100af1ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af1ae, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100af1b1, 0x5)   calld(0x100aaa28, -0x478e);           /* call 0x100aaa28 */
    II(0x100af1b6, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100af1b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af1bc, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1a));    /* cmp dx, [eax+0x1a] */
    II(0x100af1c0, 0x2)   jzd(0x100af1de, 0x1c);                /* jz 0x100af1de */
    II(0x100af1c2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100af1c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af1c9, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100af1cc, 0x5)   calld(0x100aaa28, -0x47a9);           /* call 0x100aaa28 */
    II(0x100af1d1, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x100af1d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af1d8, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1c));    /* cmp dx, [eax+0x1c] */
    II(0x100af1dc, 0x2)   jnzd(0x100af1e0, 0x2);                /* jnz 0x100af1e0 */
l_0x100af1de:
    II(0x100af1de, 0x2)   jmpd(0x100af1f3, 0x13);               /* jmp 0x100af1f3 */
l_0x100af1e0:
    II(0x100af1e0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100af1e4, 0x3)   lea(edx, edx + edx * 0x2);            /* lea edx, [edx+edx*2] */
    II(0x100af1e7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100af1e9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100af1ec, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100af1ee, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100af1f0, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x100af1f3:
    II(0x100af1f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100af1f6, 0x3)   sub(memd_a32(ss, ebp - 0x14), eax);   /* sub [ebp-0x14], eax */
    II(0x100af1f9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100af1fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af200, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100af203, 0x5)   calld(0x100aaa28, -0x47e0);           /* call 0x100aaa28 */
    II(0x100af208, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af20a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af20d, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100af210, 0x5)   calld(0x10088b44, -0x266d1);          /* call 0x10088b44 */
    II(0x100af215, 0x5)   jmpd(0x100af135, -0xe5);              /* jmp 0x100af135 */
l_0x100af21a:
    II(0x100af21a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100af21e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100af220, 0x2)   jnzd(0x100af22b, 0x9);                /* jnz 0x100af22b */
    II(0x100af222, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100af226, 0x5)   jmpd(0x100af29b, 0x70);               /* jmp 0x100af29b */
l_0x100af22b:
    II(0x100af22b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af22e, 0x4)   cmp(memb_a32(ds, eax + 0x19), 0);     /* cmp byte [eax+0x19], 0x0 */
    II(0x100af232, 0x2)   jled(0x100af23a, 0x6);                /* jle 0x100af23a */
    II(0x100af234, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x100af238, 0x2)   jnzd(0x100af23c, 0x2);                /* jnz 0x100af23c */
l_0x100af23a:
    II(0x100af23a, 0x2)   jmpd(0x100af263, 0x27);               /* jmp 0x100af263 */
l_0x100af23c:
    II(0x100af23c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af23f, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100af242, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100af245, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100af248, 0x3)   add(edx, memd_a32(ss, ebp - 0x1c));   /* add edx, [ebp-0x1c] */
    II(0x100af24b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af24e, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100af251, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100af254, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100af256, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100af258, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100af25a, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100af25d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100af261, 0x2)   jged(0x100af265, 0x2);                /* jge 0x100af265 */
l_0x100af263:
    II(0x100af263, 0x2)   jmpd(0x100af26b, 0x6);                /* jmp 0x100af26b */
l_0x100af265:
    II(0x100af265, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100af269, 0x2)   jmpd(0x100af29b, 0x30);               /* jmp 0x100af29b */
l_0x100af26b:
    II(0x100af26b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af26e, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af271, 0x5)   calld(0x10076574, -0x38d02);          /* call 0x10076574 */
    II(0x100af276, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100af279, 0x4)   mov(dx, memw_a32(ds, edx + 0x1a));    /* mov dx, [edx+0x1a] */
    II(0x100af27d, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x100af281, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af284, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af287, 0x5)   calld(0x10076574, -0x38d18);          /* call 0x10076574 */
    II(0x100af28c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100af28f, 0x4)   mov(dx, memw_a32(ds, edx + 0x1c));    /* mov dx, [edx+0x1c] */
    II(0x100af293, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x100af297, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x100af29b:
    II(0x100af29b, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100af29e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100af2a0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100af2a1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100af2a2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100af2a3, 0x1)   popd(edx);                            /* pop edx */
    II(0x100af2a4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100af2a5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100af2a6, 0x1)   retd();                               /* ret */
FUNC_END

