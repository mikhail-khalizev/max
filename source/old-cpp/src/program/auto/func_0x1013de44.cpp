FUNC_BEGIN(0x1013de44, 0xe8a23cbf4e4cd9a0, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x4, 0x7f, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xb8, 0xa5, 0xd, 0, 0, 0, 0x74, 0x11, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xa5, 0xd, 0, 0, 0x81, 0x38, 0xff, 0xff, 0, 0, 0x75, 0x5, 0xe9, 0x46, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x90, 0xa5, 0xd, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x42, 0x7, 0x8b, 0x45, 0xf8, 0x8b, 0x90, 0xa5, 0xd, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x42, 0x9, 0x8b, 0x15, 0xdc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0xd8, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0xd1, 0xf8, 0x89, 0x45, 0xe4, 0xa1, 0xde, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x8b, 0x15, 0xda, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x1, 0xd0, 0xd1, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xa5, 0xd, 0, 0, 0x66, 0x8b, 0x40, 0x7, 0x2b, 0x45, 0xe4, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x1, 0x7f, 0x2, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xa5, 0xd, 0, 0, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xf0, 0x29, 0xc2, 0x89, 0xd0, 0xe8, 0xe2, 0x7e, 0x2, 0, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xf4, 0x85, 0xc0, 0x7d, 0x6, 0xc6, 0x45, 0xdc, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xdc, 0, 0x31, 0xd2, 0x8a, 0x55, 0xdc, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x25, 0xf5, 0xff, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xf8, 0x8b, 0x82, 0xa5, 0xd, 0, 0, 0x8b, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x4a, 0x1c, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xf5, 0x2a, 0x4, 0, 0x8b, 0x5d, 0xf8, 0x8b, 0x9b, 0xa5, 0xd, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xe8, 0xe8, 0x11, 0x8f, 0xf3, 0xff, 0xf, 0xaf, 0x83, 0x83, 0, 0, 0, 0xbb, 0x70, 0, 0, 0, 0x31, 0xd2, 0xf7, 0xf3, 0x8b, 0x55, 0xf8, 0x8b, 0x92, 0xa5, 0xd, 0, 0, 0x8b, 0x92, 0x83, 0, 0, 0, 0x29, 0xc2, 0x89, 0x55, 0xe0, 0xb8, 0x37, 0, 0, 0, 0xe8, 0x43, 0x80, 0xf3, 0xff, 0x8b, 0x55, 0xe0, 0xf, 0xaf, 0xd0, 0xbb, 0x64, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xe0, 0x8b, 0x5d, 0xe0, 0x8b, 0x55, 0xf8, 0x8b, 0x82, 0xa5, 0xd, 0, 0, 0x8b, 0x8, 0x8b, 0x55, 0xf8, 0x8b, 0x42, 0x1c, 0x89, 0xca, 0xe8, 0xde, 0x27, 0x4, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1013de44, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1013de49, 0x5)   calld(sys_check_available_stack_size, 0x27f04); /* call 0x10165d52 */
    II(0x1013de4e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013de4f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013de50, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013de51, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013de52, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013de53, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013de55, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1013de5b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1013de5e, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1013de61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013de64, 0x7)   cmp(memd_a32(ds, eax + 0xda5), 0);    /* cmp dword [eax+0xda5], 0x0 */
    II(0x1013de6b, 0x2)   jzd(0x1013de7e, 0x11);                /* jz 0x1013de7e */
    II(0x1013de6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013de70, 0x6)   mov(eax, memd_a32(ds, eax + 0xda5));  /* mov eax, [eax+0xda5] */
    II(0x1013de76, 0x6)   cmp(memd_a32(ds, eax), 0xffff);       /* cmp dword [eax], 0xffff */
    II(0x1013de7c, 0x2)   jnzd(0x1013de83, 0x5);                /* jnz 0x1013de83 */
l_0x1013de7e:
    II(0x1013de7e, 0x5)   jmpd(0x1013dfc9, 0x146);              /* jmp 0x1013dfc9 */
l_0x1013de83:
    II(0x1013de83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013de86, 0x6)   mov(edx, memd_a32(ds, eax + 0xda5));  /* mov edx, [eax+0xda5] */
    II(0x1013de8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013de8f, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1013de93, 0x4)   mov(memw_a32(ds, edx + 0x7), ax);     /* mov [edx+0x7], ax */
    II(0x1013de97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013de9a, 0x6)   mov(edx, memd_a32(ds, eax + 0xda5));  /* mov edx, [eax+0xda5] */
    II(0x1013dea0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013dea3, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1013dea7, 0x4)   mov(memw_a32(ds, edx + 0x9), ax);     /* mov [edx+0x9], ax */
    II(0x1013deab, 0x6)   mov(edx, memd_a32(ds, 0x101c38dc));   /* mov edx, [0x101c38dc] */
    II(0x1013deb1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1013deb4, 0x5)   mov(eax, memd_a32(ds, 0x101c38d8));   /* mov eax, [0x101c38d8] */
    II(0x1013deb9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013debc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013debe, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1013dec0, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1013dec3, 0x5)   mov(eax, memd_a32(ds, 0x101c38de));   /* mov eax, [0x101c38de] */
    II(0x1013dec8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013decb, 0x6)   mov(edx, memd_a32(ds, 0x101c38da));   /* mov edx, [0x101c38da] */
    II(0x1013ded1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1013ded4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013ded6, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1013ded8, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013dedb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013dede, 0x6)   mov(eax, memd_a32(ds, eax + 0xda5));  /* mov eax, [eax+0xda5] */
    II(0x1013dee4, 0x4)   mov(ax, memw_a32(ds, eax + 0x7));     /* mov ax, [eax+0x7] */
    II(0x1013dee8, 0x3)   sub(eax, memd_a32(ss, ebp - 0x1c));   /* sub eax, [ebp-0x1c] */
    II(0x1013deeb, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1013deee, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1013def2, 0x5)   calld(/* sys */ 0x10165df8, 0x27f01); /* call 0x10165df8 */
    II(0x1013def7, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1013defa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013defd, 0x6)   mov(eax, memd_a32(ds, eax + 0xda5));  /* mov eax, [eax+0xda5] */
    II(0x1013df03, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x1013df06, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1013df09, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1013df0d, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1013df0f, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013df11, 0x5)   calld(/* sys */ 0x10165df8, 0x27ee2); /* call 0x10165df8 */
    II(0x1013df16, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1013df19, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1013df1d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1013df1f, 0x2)   jged(0x1013df27, 0x6);                /* jge 0x1013df27 */
    II(0x1013df21, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x1013df25, 0x2)   jmpd(0x1013df2b, 0x4);                /* jmp 0x1013df2b */
l_0x1013df27:
    II(0x1013df27, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0);     /* mov byte [ebp-0x24], 0x0 */
l_0x1013df2b:
    II(0x1013df2b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013df2d, 0x3)   mov(dl, memb_a32(ss, ebp - 0x24));    /* mov dl, [ebp-0x24] */
    II(0x1013df30, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1013df34, 0x5)   calld(0x1013d45e, -0xadb);            /* call 0x1013d45e */
    II(0x1013df39, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1013df3b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013df3e, 0x6)   mov(eax, memd_a32(ds, edx + 0xda5));  /* mov eax, [edx+0xda5] */
    II(0x1013df44, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
//    II(0x1013df46, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013df49, 0x3)   mov(ecx, memd_a32(ds, edx + 0x1c));   /* mov ecx, [edx+0x1c] */
    II(0x1013df4c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1013df4e, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1013df50, 0x5)   calld(/* sys */ 0x10180a4a, 0x42af5); /* call 0x10180a4a */
    II(0x1013df55, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1013df58, 0x6)   mov(ebx, memd_a32(ds, ebx + 0xda5));  /* mov ebx, [ebx+0xda5] */
    II(0x1013df5e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1013df62, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1013df66, 0x5)   calld(0x10076e7c, -0xc70ef);          /* call 0x10076e7c */
    II(0x1013df6b, 0x7)   imul(eax, memd_a32(ds, ebx + 0x83));  /* imul eax, [ebx+0x83] */
    II(0x1013df72, 0x5)   mov(ebx, 0x70);                       /* mov ebx, 0x70 */
    II(0x1013df77, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013df79, 0x2)   div(ebx);                             /* div ebx */
    II(0x1013df7b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013df7e, 0x6)   mov(edx, memd_a32(ds, edx + 0xda5));  /* mov edx, [edx+0xda5] */
    II(0x1013df84, 0x6)   mov(edx, memd_a32(ds, edx + 0x83));   /* mov edx, [edx+0x83] */
    II(0x1013df8a, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1013df8c, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x1013df8f, 0x5)   mov(eax, 0x37);                       /* mov eax, 0x37 */
    II(0x1013df94, 0x5)   calld(0x10075fdc, -0xc7fbd);          /* call 0x10075fdc */
    II(0x1013df99, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x1013df9c, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1013df9f, 0x5)   mov(ebx, 0x64);                       /* mov ebx, 0x64 */
    II(0x1013dfa4, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013dfa6, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013dfa9, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1013dfab, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1013dfae, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x20));   /* mov ebx, [ebp-0x20] */
    II(0x1013dfb1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013dfb4, 0x6)   mov(eax, memd_a32(ds, edx + 0xda5));  /* mov eax, [edx+0xda5] */
    II(0x1013dfba, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
//    II(0x1013dfbc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013dfbf, 0x3)   mov(eax, memd_a32(ds, edx + 0x1c));   /* mov eax, [edx+0x1c] */
    II(0x1013dfc2, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1013dfc4, 0x5)   calld(/* sys */ 0x101807a7, 0x427de); /* call 0x101807a7 */
l_0x1013dfc9:
    II(0x1013dfc9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013dfcb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013dfcc, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013dfcd, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013dfce, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013dfcf, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013dfd0, 0x1)   retd();                               /* ret */
FUNC_END

