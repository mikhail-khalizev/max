FUNC_BEGIN(0x10160ec3, 0x9de22cfd25e24a57, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0x85, 0x4e, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0x6, 0x58, 0xf1, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0xa6, 0x90, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x4d, 0, 0x74, 0x1d, 0xe8, 0xe8, 0x1c, 0xfa, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0xd, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x9a, 0xc6, 0xfd, 0xff, 0xeb, 0x44, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x63, 0x5e, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0x18, 0xe8, 0xba, 0x1c, 0xfa, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0x31, 0xdb, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x6f, 0xc6, 0xfd, 0xff, 0xe8, 0xa2, 0x1c, 0xfa, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0xe, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x54, 0xc6, 0xfd, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0xf, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x5, 0xe9, 0x91, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0xb, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x33, 0xa8, 0, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x33, 0xa8, 0, 0x8b, 0x55, 0xfc, 0x8a, 0x52, 0x29, 0x81, 0xe2, 0xff, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xc1, 0xe0, 0x3, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x31, 0xc1, 0xfa, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x33, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x33, 0x83, 0xc2, 0x7, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x3b, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x31, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x9, 0x8b, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0xe, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x5e, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0x82, 0x99, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xc, 0x4f, 0xf1, 0xff, 0xe9, 0xad, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x4d, 0, 0x74, 0x9, 0xc7, 0x45, 0xf4, 0x2f, 0, 0, 0, 0xeb, 0x4f, 0xf7, 0x45, 0xec, 0x10, 0, 0, 0, 0x74, 0x9, 0xc7, 0x45, 0xf4, 0x2e, 0, 0, 0, 0xeb, 0x3d, 0xf7, 0x45, 0xec, 0, 0x1, 0, 0, 0x74, 0x9, 0xc7, 0x45, 0xf4, 0x2b, 0, 0, 0, 0xeb, 0x2b, 0xf7, 0x45, 0xec, 0x40, 0, 0, 0, 0x74, 0x9, 0xc7, 0x45, 0xf4, 0x2c, 0, 0, 0, 0xeb, 0x19, 0xf7, 0x45, 0xec, 0x80, 0, 0, 0, 0x74, 0x9, 0xc7, 0x45, 0xf4, 0x2d, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0x2b, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x33, 0xba, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe8, 0x8b, 0x45, 0xe8, 0x66, 0x81, 0x20, 0x1f, 0xfc, 0xf7, 0x45, 0xec, 0x1, 0, 0, 0, 0x74, 0x9, 0x8b, 0x45, 0xe8, 0x80, 0x48, 0x1, 0x1, 0xeb, 0x29, 0xf7, 0x45, 0xec, 0x80, 0x1, 0, 0, 0x74, 0x9, 0x8b, 0x45, 0xe8, 0x80, 0x48, 0x1, 0x2, 0xeb, 0x17, 0xf7, 0x45, 0xec, 0, 0x2, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xe8, 0x80, 0x8, 0x40, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x80, 0x8, 0x20, 0xe8, 0xa5, 0x1a, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xf4, 0x8d, 0x45, 0xf0, 0xe8, 0xbf, 0x91, 0xff, 0xff, 0x8d, 0x4d, 0xe0, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xf1, 0x9a, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xfb, 0x4d, 0xf1, 0xff, 0x66, 0x83, 0x7d, 0xf4, 0x2e, 0x74, 0x3b, 0x8d, 0x45, 0xe0, 0xe8, 0x34, 0x54, 0xf1, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x18, 0x66, 0x2b, 0x50, 0x18, 0xf, 0xbf, 0xda, 0x8d, 0x45, 0xe0, 0xe8, 0x1e, 0x54, 0xf1, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x16, 0x66, 0x2b, 0x42, 0x16, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe0, 0xe8, 0x6, 0x54, 0xf1, 0xff, 0xe8, 0xbc, 0x8a, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x10, 0xdf, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x3e, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe0, 0xe8, 0xdf, 0x53, 0xf1, 0xff, 0xe8, 0xfe, 0x97, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0xe, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xea, 0x5b, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0x16, 0xb8, 0x57, 0, 0, 0, 0xe8, 0x20, 0x4e, 0xf1, 0xff, 0x85, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0xf0, 0x7, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x5a, 0x4d, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10160ec3, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x10160ec8, 0x5)   calld(sys_check_available_stack_size, 0x4e85); /* call 0x10165d52 */
    II(0x10160ecd, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10160ece, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10160ecf, 0x1)   pushd(edx);                           /* push edx */
    II(0x10160ed0, 0x1)   pushd(esi);                           /* push esi */
    II(0x10160ed1, 0x1)   pushd(edi);                           /* push edi */
    II(0x10160ed2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10160ed3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10160ed5, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10160edb, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10160ede, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x10160ee2, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10160ee5, 0x5)   calld(my_ctor_0x101b38f8, -0xea7fa);  /* call 0x100766f0 */
    II(0x10160eea, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10160eed, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x10160ef1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160ef4, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10160ef7, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10160efa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160efd, 0x5)   calld(0x10149fa8, -0x16f5a);          /* call 0x10149fa8 */
    II(0x10160f02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160f05, 0x4)   cmp(memb_a32(ds, eax + 0x4d), 0);     /* cmp byte [eax+0x4d], 0x0 */
    II(0x10160f09, 0x2)   jzd(0x10160f28, 0x1d);                /* jz 0x10160f28 */
    II(0x10160f0b, 0x5)   calld(0x10102bf8, -0x5e318);          /* call 0x10102bf8 */
    II(0x10160f10, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10160f12, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x10160f14, 0x5)   mov(ebx, 0xd);                        /* mov ebx, 0xd */
    II(0x10160f19, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10160f1c, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10160f21, 0x5)   calld(0x1013d5c0, -0x23966);          /* call 0x1013d5c0 */
    II(0x10160f26, 0x2)   jmpd(0x10160f6c, 0x44);               /* jmp 0x10160f6c */
l_0x10160f28:
    II(0x10160f28, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x10160f2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160f30, 0x5)   calld(0x10076d98, -0xea19d);          /* call 0x10076d98 */
    II(0x10160f35, 0x2)   test(al, al);                         /* test al, al */
    II(0x10160f37, 0x2)   jzd(0x10160f51, 0x18);                /* jz 0x10160f51 */
    II(0x10160f39, 0x5)   calld(0x10102bf8, -0x5e346);          /* call 0x10102bf8 */
    II(0x10160f3e, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10160f40, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x10160f42, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10160f44, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10160f47, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10160f4c, 0x5)   calld(0x1013d5c0, -0x23991);          /* call 0x1013d5c0 */
l_0x10160f51:
    II(0x10160f51, 0x5)   calld(0x10102bf8, -0x5e35e);          /* call 0x10102bf8 */
    II(0x10160f56, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10160f58, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x10160f5a, 0x5)   mov(ebx, 0xe);                        /* mov ebx, 0xe */
    II(0x10160f5f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10160f62, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10160f67, 0x5)   calld(0x1013d5c0, -0x239ac);          /* call 0x1013d5c0 */
l_0x10160f6c:
    II(0x10160f6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160f6f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x10160f74, 0x2)   jzd(0x10160f80, 0xa);                 /* jz 0x10160f80 */
    II(0x10160f76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160f79, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x10160f7e, 0x2)   jnzd(0x10160f8f, 0xf);                /* jnz 0x10160f8f */
l_0x10160f80:
    II(0x10160f80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160f83, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x10160f86, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10160f8b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10160f8d, 0x2)   jzd(0x10160f94, 0x5);                 /* jz 0x10160f94 */
l_0x10160f8f:
    II(0x10160f8f, 0x5)   jmpd(0x10161025, 0x91);               /* jmp 0x10161025 */
l_0x10160f94:
    II(0x10160f94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160f97, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x10160f9c, 0x2)   jnzd(0x10160fa9, 0xb);                /* jnz 0x10160fa9 */
    II(0x10160f9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160fa1, 0x6)   mov(memw_a32(ds, eax + 0x33), 0xa8);  /* mov word [eax+0x33], 0xa8 */
    II(0x10160fa7, 0x2)   jmpd(0x10160fb2, 0x9);                /* jmp 0x10160fb2 */
l_0x10160fa9:
    II(0x10160fa9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160fac, 0x6)   mov(memw_a32(ds, eax + 0x33), 0xa8);  /* mov word [eax+0x33], 0xa8 */
l_0x10160fb2:
    II(0x10160fb2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10160fb5, 0x3)   mov(dl, memb_a32(ds, edx + 0x29));    /* mov dl, [edx+0x29] */
    II(0x10160fb8, 0x6)   and_(edx, 0xff);                      /* and edx, 0xff */
    II(0x10160fbe, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10160fc0, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10160fc3, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10160fc5, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10160fc7, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x10160fca, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10160fcd, 0x3)   mov(edx, memd_a32(ds, edx + 0x31));   /* mov edx, [edx+0x31] */
    II(0x10160fd0, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10160fd3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10160fd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160fd8, 0x4)   mov(memw_a32(ds, eax + 0x33), dx);    /* mov [eax+0x33], dx */
    II(0x10160fdc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10160fdf, 0x4)   mov(dx, memw_a32(ds, edx + 0x33));    /* mov dx, [edx+0x33] */
    II(0x10160fe3, 0x3)   add(edx, 0x7);                        /* add edx, 0x7 */
    II(0x10160fe6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160fe9, 0x4)   mov(memw_a32(ds, eax + 0x3b), dx);    /* mov [eax+0x3b], dx */
    II(0x10160fed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160ff0, 0x3)   mov(edx, memd_a32(ds, eax + 0x31));   /* mov edx, [eax+0x31] */
    II(0x10160ff3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10160ff6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160ff9, 0x5)   calld(0x10149b07, -0x174f7);          /* call 0x10149b07 */
    II(0x10160ffe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161001, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0xe);   /* mov byte [eax+0x3e], 0xe */
    II(0x10161005, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161008, 0x4)   mov(memb_a32(ds, eax + 0x5e), 0);     /* mov byte [eax+0x5e], 0x0 */
    II(0x1016100c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1016100e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161011, 0x5)   calld(0x1008a998, -0xd667e);          /* call 0x1008a998 */
    II(0x10161016, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10161018, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1016101b, 0x5)   calld(0x10075f2c, -0xeb0f4);          /* call 0x10075f2c */
    II(0x10161020, 0x5)   jmpd(0x101611d2, 0x1ad);              /* jmp 0x101611d2 */
l_0x10161025:
    II(0x10161025, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161028, 0x4)   cmp(memb_a32(ds, eax + 0x4d), 0);     /* cmp byte [eax+0x4d], 0x0 */
    II(0x1016102c, 0x2)   jzd(0x10161037, 0x9);                 /* jz 0x10161037 */
    II(0x1016102e, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2f);   /* mov dword [ebp-0xc], 0x2f */
    II(0x10161035, 0x2)   jmpd(0x10161086, 0x4f);               /* jmp 0x10161086 */
l_0x10161037:
    II(0x10161037, 0x7)   test(memd_a32(ss, ebp - 0x14), 0x10); /* test dword [ebp-0x14], 0x10 */
    II(0x1016103e, 0x2)   jzd(0x10161049, 0x9);                 /* jz 0x10161049 */
    II(0x10161040, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2e);   /* mov dword [ebp-0xc], 0x2e */
    II(0x10161047, 0x2)   jmpd(0x10161086, 0x3d);               /* jmp 0x10161086 */
l_0x10161049:
    II(0x10161049, 0x7)   test(memd_a32(ss, ebp - 0x14), 0x100); /* test dword [ebp-0x14], 0x100 */
    II(0x10161050, 0x2)   jzd(0x1016105b, 0x9);                 /* jz 0x1016105b */
    II(0x10161052, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2b);   /* mov dword [ebp-0xc], 0x2b */
    II(0x10161059, 0x2)   jmpd(0x10161086, 0x2b);               /* jmp 0x10161086 */
l_0x1016105b:
    II(0x1016105b, 0x7)   test(memd_a32(ss, ebp - 0x14), 0x40); /* test dword [ebp-0x14], 0x40 */
    II(0x10161062, 0x2)   jzd(0x1016106d, 0x9);                 /* jz 0x1016106d */
    II(0x10161064, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2c);   /* mov dword [ebp-0xc], 0x2c */
    II(0x1016106b, 0x2)   jmpd(0x10161086, 0x19);               /* jmp 0x10161086 */
l_0x1016106d:
    II(0x1016106d, 0x7)   test(memd_a32(ss, ebp - 0x14), 0x80); /* test dword [ebp-0x14], 0x80 */
    II(0x10161074, 0x2)   jzd(0x1016107f, 0x9);                 /* jz 0x1016107f */
    II(0x10161076, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2d);   /* mov dword [ebp-0xc], 0x2d */
    II(0x1016107d, 0x2)   jmpd(0x10161086, 0x7);                /* jmp 0x10161086 */
l_0x1016107f:
    II(0x1016107f, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2b);   /* mov dword [ebp-0xc], 0x2b */
l_0x10161086:
    II(0x10161086, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1016108a, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1016108d, 0x5)   mov(edx, 0x101c81c0);                 /* mov edx, 0x101c81c0 */
    II(0x10161092, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10161094, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x10161097, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1016109a, 0x5)   and_(memw_a32(ds, eax), 0xfc1f);      /* and word [eax], 0xfc1f */
    II(0x1016109f, 0x7)   test(memd_a32(ss, ebp - 0x14), 0x1);  /* test dword [ebp-0x14], 0x1 */
    II(0x101610a6, 0x2)   jzd(0x101610b1, 0x9);                 /* jz 0x101610b1 */
    II(0x101610a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101610ab, 0x4)   or_(memb_a32(ds, eax + 0x1), 0x1);    /* or byte [eax+0x1], 0x1 */
    II(0x101610af, 0x2)   jmpd(0x101610da, 0x29);               /* jmp 0x101610da */
l_0x101610b1:
    II(0x101610b1, 0x7)   test(memd_a32(ss, ebp - 0x14), 0x180); /* test dword [ebp-0x14], 0x180 */
    II(0x101610b8, 0x2)   jzd(0x101610c3, 0x9);                 /* jz 0x101610c3 */
    II(0x101610ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101610bd, 0x4)   or_(memb_a32(ds, eax + 0x1), 0x2);    /* or byte [eax+0x1], 0x2 */
    II(0x101610c1, 0x2)   jmpd(0x101610da, 0x17);               /* jmp 0x101610da */
l_0x101610c3:
    II(0x101610c3, 0x7)   test(memd_a32(ss, ebp - 0x14), 0x200); /* test dword [ebp-0x14], 0x200 */
    II(0x101610ca, 0x2)   jzd(0x101610d4, 0x8);                 /* jz 0x101610d4 */
    II(0x101610cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101610cf, 0x3)   or_(memb_a32(ds, eax), 0x40);         /* or byte [eax], 0x40 */
    II(0x101610d2, 0x2)   jmpd(0x101610da, 0x6);                /* jmp 0x101610da */
l_0x101610d4:
    II(0x101610d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101610d7, 0x3)   or_(memb_a32(ds, eax), 0x20);         /* or byte [eax], 0x20 */
l_0x101610da:
    II(0x101610da, 0x5)   calld(0x10102b84, -0x5e55b);          /* call 0x10102b84 */
    II(0x101610df, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101610e4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101610e5, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101610ea, 0x1)   pushd(eax);                           /* push eax */
    II(0x101610eb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101610ed, 0x1)   pushd(eax);                           /* push eax */
    II(0x101610ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101610f1, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x101610f4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101610f7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101610f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101610fb, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x101610fe, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10161101, 0x1)   pushd(eax);                           /* push eax */
    II(0x10161102, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10161104, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161107, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1016110a, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1016110c, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1016110f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10161113, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10161116, 0x5)   calld(0x1015a2da, -0x6e41);           /* call 0x1015a2da */
    II(0x1016111b, 0x3)   lea(ecx, ebp - 0x20);                 /* lea ecx, [ebp-0x20] */
    II(0x1016111e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10161120, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x10161122, 0x5)   calld(0x1008ac18, -0xd650f);          /* call 0x1008ac18 */
    II(0x10161127, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10161129, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1016112c, 0x5)   calld(0x10075f2c, -0xeb205);          /* call 0x10075f2c */
    II(0x10161131, 0x5)   cmp(memw_a32(ss, ebp - 0xc), 0x2e);   /* cmp word [ebp-0xc], 0x2e */
    II(0x10161136, 0x2)   jzd(0x10161173, 0x3b);                /* jz 0x10161173 */
    II(0x10161138, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1016113b, 0x5)   calld(0x10076574, -0xeabcc);          /* call 0x10076574 */
    II(0x10161140, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10161143, 0x4)   mov(dx, memw_a32(ds, edx + 0x18));    /* mov dx, [edx+0x18] */
    II(0x10161147, 0x4)   sub(dx, memw_a32(ds, eax + 0x18));    /* sub dx, [eax+0x18] */
    II(0x1016114b, 0x3)   movsx(ebx, dx);                       /* movsx ebx, dx */
    II(0x1016114e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10161151, 0x5)   calld(0x10076574, -0xeabe2);          /* call 0x10076574 */
    II(0x10161156, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10161158, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1016115b, 0x4)   mov(ax, memw_a32(ds, eax + 0x16));    /* mov ax, [eax+0x16] */
    II(0x1016115f, 0x4)   sub(ax, memw_a32(ds, edx + 0x16));    /* sub ax, [edx+0x16] */
    II(0x10161163, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10161166, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10161169, 0x5)   calld(0x10076574, -0xeabfa);          /* call 0x10076574 */
    II(0x1016116e, 0x5)   calld(0x10149c2f, -0x17544);          /* call 0x10149c2f */
l_0x10161173:
    II(0x10161173, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161176, 0x5)   calld(0x1014f08b, -0x120f0);          /* call 0x1014f08b */
    II(0x1016117b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1016117e, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x10161181, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10161186, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10161188, 0x2)   jnzd(0x101611c8, 0x3e);               /* jnz 0x101611c8 */
    II(0x1016118a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1016118d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10161190, 0x5)   calld(0x10076574, -0xeac21);          /* call 0x10076574 */
    II(0x10161195, 0x5)   calld(0x1008a998, -0xd6802);          /* call 0x1008a998 */
    II(0x1016119a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1016119d, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0xe);   /* mov byte [eax+0x3e], 0xe */
    II(0x101611a1, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x101611a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101611a9, 0x5)   calld(0x10076d98, -0xea416);          /* call 0x10076d98 */
    II(0x101611ae, 0x2)   test(al, al);                         /* test al, al */
    II(0x101611b0, 0x2)   jzd(0x101611c8, 0x16);                /* jz 0x101611c8 */
    II(0x101611b2, 0x5)   mov(eax, 0x57);                       /* mov eax, 0x57 */
    II(0x101611b7, 0x5)   calld(0x10075fdc, -0xeb1e0);          /* call 0x10075fdc */
    II(0x101611bc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101611be, 0x2)   jzd(0x101611c8, 0x8);                 /* jz 0x101611c8 */
    II(0x101611c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101611c3, 0x5)   calld(0x101019b8, -0x5f810);          /* call 0x101019b8 */
l_0x101611c8:
    II(0x101611c8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101611ca, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101611cd, 0x5)   calld(0x10075f2c, -0xeb2a6);          /* call 0x10075f2c */
l_0x101611d2:
    II(0x101611d2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101611d4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101611d5, 0x1)   popd(edi);                            /* pop edi */
    II(0x101611d6, 0x1)   popd(esi);                            /* pop esi */
    II(0x101611d7, 0x1)   popd(edx);                            /* pop edx */
    II(0x101611d8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101611d9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101611da, 0x1)   retd();                               /* ret */
FUNC_END

