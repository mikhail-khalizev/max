FUNC_BEGIN(0x100f40f6, 0x9183acaad762fbd1, 0x20, ({0x68, 0x84, 0, 0, 0, 0xe8, 0x52, 0x1c, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x58, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x26, 0, 0, 0, 0xe8, 0x22, 0x47, 0xff, 0xff, 0x89, 0x45, 0xd8, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x15, 0x47, 0xff, 0xff, 0x89, 0x45, 0xdc, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x1a, 0x74, 0xd, 0x8b, 0x45, 0xfc, 0xe8, 0xc0, 0xcf, 0, 0, 0x98, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x14, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x13, 0x1, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x1f, 0x74, 0x2, 0xeb, 0xc, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xe9, 0x16, 0x3, 0, 0, 0xc6, 0x5, 0xe4, 0x37, 0x1c, 0x10, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0xa, 0xba, 0xe4, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xff, 0x13, 0x31, 0xc0, 0xa0, 0xe4, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0xc, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xe9, 0xe8, 0x2, 0, 0, 0xb8, 0xb1, 0, 0, 0, 0xe8, 0x36, 0xfe, 0x3, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x66, 0x8b, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xe0, 0x66, 0x8b, 0x40, 0x2, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf4, 0x5, 0x6, 0, 0, 0, 0x66, 0xa3, 0x7f, 0x38, 0x1c, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xe4, 0x37, 0x1c, 0x10, 0xf, 0xaf, 0x55, 0xf8, 0x31, 0xc0, 0xa0, 0xe4, 0x37, 0x1c, 0x10, 0x40, 0x6b, 0xc0, 0x3, 0x1, 0xc2, 0x66, 0x89, 0x15, 0x81, 0x38, 0x1c, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x42, 0x14, 0xc1, 0xf8, 0x10, 0x83, 0xc0, 0x20, 0xc1, 0xe0, 0x10, 0x89, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfa, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0x45, 0xf0, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x16, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0xc3, 0x8b, 0x15, 0x7f, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x29, 0xc3, 0x89, 0x5d, 0xe8, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0, 0x1, 0x45, 0xf0, 0xa1, 0x7d, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x1, 0xc2, 0x8b, 0x45, 0xd8, 0x3b, 0x50, 0x8, 0x7e, 0x10, 0x66, 0xa1, 0x7f, 0x38, 0x1c, 0x10, 0x66, 0x3, 0x5, 0xc0, 0x38, 0x1c, 0x10, 0x29, 0x45, 0xf0, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0x40, 0x4, 0x1, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xd8, 0x3b, 0x50, 0x4, 0x7d, 0xc, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0x40, 0x4, 0x89, 0x45, 0xe8, 0xeb, 0x27, 0xa1, 0x7f, 0x38, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xe8, 0x1, 0xc2, 0x8b, 0x45, 0xd8, 0x3b, 0x50, 0xc, 0x7e, 0x11, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0x40, 0xc, 0x66, 0x2b, 0x5, 0x81, 0x38, 0x1c, 0x10, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xf0, 0x8b, 0x55, 0xdc, 0x89, 0x2, 0xf, 0xbf, 0x45, 0xe8, 0x8b, 0x55, 0xdc, 0x89, 0x42, 0x4, 0x8b, 0x15, 0x7d, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xdc, 0x8b, 0x18, 0x8b, 0x45, 0xdc, 0x1, 0xda, 0x89, 0x50, 0x8, 0x8b, 0x1d, 0x7f, 0x38, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xdc, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xdc, 0x1, 0xd3, 0x89, 0x58, 0xc, 0x8b, 0x45, 0xf0, 0x66, 0xa3, 0x7b, 0x38, 0x1c, 0x10, 0x8b, 0x45, 0xe8, 0x66, 0xa3, 0x7d, 0x38, 0x1c, 0x10, 0x83, 0x45, 0xf0, 0x3, 0x83, 0x45, 0xe8, 0x3, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x25, 0x5f, 0x7, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xec, 0x31, 0xc0, 0xa0, 0xe4, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0xf, 0x8d, 0x22, 0x1, 0, 0, 0xc7, 0x45, 0xd0, 0xb1, 0, 0, 0, 0xc7, 0x45, 0xcc, 0xb2, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x80, 0xb8, 0x21, 0x38, 0x1c, 0x10, 0, 0x74, 0xe, 0xc7, 0x45, 0xd0, 0xb2, 0, 0, 0, 0xc7, 0x45, 0xcc, 0xb1, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x84, 0x1a, 0x7, 0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x24, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xf, 0xbf, 0x4d, 0xf0, 0xf, 0xbf, 0x5d, 0xcc, 0xf, 0xbf, 0x55, 0xd0, 0x8b, 0x45, 0xc8, 0xe8, 0x6b, 0xa0, 0xfd, 0xff, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0xeb, 0x6, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0xba, 0x20, 0, 0, 0, 0x8b, 0x45, 0xb8, 0xe8, 0xcc, 0xd, 0xfe, 0xff, 0x8d, 0x45, 0xb4, 0xe8, 0x54, 0xe, 0xfe, 0xff, 0x50, 0x8d, 0x45, 0xb0, 0xe8, 0x77, 0xe, 0xfe, 0xff, 0x50, 0x8d, 0x45, 0xac, 0xe8, 0x9a, 0xe, 0xfe, 0xff, 0x50, 0x8d, 0x45, 0xa8, 0xe8, 0xbd, 0xe, 0xfe, 0xff, 0x50, 0xb9, 0x2, 0, 0, 0, 0xbb, 0xff, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0x8b, 0x92, 0xf9, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xb8, 0xe8, 0x59, 0xab, 0xfd, 0xff, 0x8b, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0x8b, 0x92, 0x2b, 0x38, 0x1c, 0x10, 0x8b, 0x45, 0xb8, 0xe8, 0x1, 0xb4, 0xfd, 0xff, 0x8b, 0x55, 0xd8, 0x8b, 0x52, 0x12, 0x8b, 0x45, 0xb8, 0xe8, 0x2b, 0xb4, 0xfd, 0xff, 0xe8, 0xae, 0xd, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xc5, 0xd, 0xfe, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xb8, 0xe8, 0x31, 0xb6, 0xfd, 0xff, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xb8, 0x89, 0x82, 0x53, 0x38, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0x5, 0x3, 0, 0, 0, 0x1, 0x45, 0xe8, 0xe9, 0xc5, 0xfe, 0xff, 0xff, 0x8b, 0x55, 0xdc, 0x8b, 0x45, 0xd8, 0x8b, 0x40, 0x12, 0xe8, 0x2f, 0x30, 0x7, 0, 0xc7, 0x45, 0xd4, 0x1, 0, 0, 0, 0x8b, 0x45, 0xd4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f40f6, 0x5)   pushd(0x84);                          /* push dword 0x84 */
    II(0x100f40fb, 0x5)   calld(sys_check_available_stack_size, 0x71c52); /* call 0x10165d52 */
    II(0x100f4100, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f4101, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f4102, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f4103, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f4104, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f4105, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f4106, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f4108, 0x6)   sub(esp, 0x58);                       /* sub esp, 0x58 */
    II(0x100f410e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f4111, 0x5)   mov(eax, 0x26);                       /* mov eax, 0x26 */
    II(0x100f4116, 0x5)   calld(0x100e883d, -0xb8de);           /* call 0x100e883d */
    II(0x100f411b, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100f411e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f4123, 0x5)   calld(0x100e883d, -0xb8eb);           /* call 0x100e883d */
    II(0x100f4128, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100f412b, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100f4132, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f4135, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100f4139, 0x2)   jzd(0x100f4148, 0xd);                 /* jz 0x100f4148 */
    II(0x100f413b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f413e, 0x5)   calld(0x10101103, 0xcfc0);            /* call 0x10101103 */
    II(0x100f4143, 0x1)   cwde();                               /* cwde */
    II(0x100f4144, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f4146, 0x2)   jnzd(0x100f414a, 0x2);                /* jnz 0x100f414a */
l_0x100f4148:
    II(0x100f4148, 0x2)   jmpd(0x100f415e, 0x14);               /* jmp 0x100f415e */
l_0x100f414a:
    II(0x100f414a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f414d, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x100f4151, 0x2)   jzd(0x100f415c, 0x9);                 /* jz 0x100f415c */
    II(0x100f4153, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f4156, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1f);  /* cmp byte [eax+0x3e], 0x1f */
    II(0x100f415a, 0x2)   jzd(0x100f415e, 0x2);                 /* jz 0x100f415e */
l_0x100f415c:
    II(0x100f415c, 0x2)   jmpd(0x100f416a, 0xc);                /* jmp 0x100f416a */
l_0x100f415e:
    II(0x100f415e, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x100f4165, 0x5)   jmpd(0x100f4480, 0x316);              /* jmp 0x100f4480 */
l_0x100f416a:
    II(0x100f416a, 0x7)   mov(memb_a32(ds, 0x101c37e4), 0);     /* mov byte [0x101c37e4], 0x0 */
    II(0x100f4171, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f4174, 0x3)   mov(ebx, memd_a32(ds, eax + 0xa));    /* mov ebx, [eax+0xa] */
    II(0x100f4177, 0x5)   mov(edx, 0x101c37e4);                 /* mov edx, 0x101c37e4 */
//    II(0x100f417c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f417f, 0x2)   calld_abs(memd_a32(ds, ebx));         /* call dword near [ebx] */
    II(0x100f4181, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f4183, 0x5)   mov(al, memb_a32(ds, 0x101c37e4));    /* mov al, [0x101c37e4] */
    II(0x100f4188, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f418a, 0x2)   jnzd(0x100f4198, 0xc);                /* jnz 0x100f4198 */
    II(0x100f418c, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x100f4193, 0x5)   jmpd(0x100f4480, 0x2e8);              /* jmp 0x100f4480 */
l_0x100f4198:
    II(0x100f4198, 0x5)   mov(eax, 0xb1);                       /* mov eax, 0xb1 */
    II(0x100f419d, 0x5)   calld(my_get_res_data_by_id, 0x3fe36); /* call 0x10133fd8 */
    II(0x100f41a2, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100f41a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100f41a8, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100f41ab, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100f41ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100f41b1, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x100f41b5, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f41b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f41bb, 0x5)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100f41c0, 0x6)   mov(memw_a32(ds, 0x101c387f), ax);    /* mov [0x101c387f], ax */
    II(0x100f41c6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f41c8, 0x6)   mov(dl, memb_a32(ds, 0x101c37e4));    /* mov dl, [0x101c37e4] */
    II(0x100f41ce, 0x4)   imul(edx, memd_a32(ss, ebp - 0x8));   /* imul edx, [ebp-0x8] */
    II(0x100f41d2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f41d4, 0x5)   mov(al, memb_a32(ds, 0x101c37e4));    /* mov al, [0x101c37e4] */
    II(0x100f41d9, 0x1)   inc(eax);                             /* inc eax */
    II(0x100f41da, 0x3)   imul(eax, eax, 0x3);                  /* imul eax, eax, 0x3 */
    II(0x100f41dd, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100f41df, 0x7)   mov(memw_a32(ds, 0x101c3881), dx);    /* mov [0x101c3881], dx */
    II(0x100f41e6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f41e9, 0x3)   mov(eax, memd_a32(ds, edx + 0x14));   /* mov eax, [edx+0x14] */
    II(0x100f41ec, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f41ef, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100f41f2, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x100f41f5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
//    II(0x100f41f7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100f41f9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100f41fc, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100f4202, 0x6)   mov(edx, memd_a32(ds, 0x101c38fa));   /* mov edx, [0x101c38fa] */
    II(0x100f4208, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f420b, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100f420d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100f4210, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f4213, 0x3)   mov(edx, memd_a32(ds, edx + 0x16));   /* mov edx, [edx+0x16] */
    II(0x100f4216, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f4219, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100f421c, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100f421e, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100f4221, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100f4227, 0x6)   mov(edx, memd_a32(ds, 0x101c38fc));   /* mov edx, [0x101c38fc] */
    II(0x100f422d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f4230, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100f4232, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100f4234, 0x6)   mov(edx, memd_a32(ds, 0x101c387f));   /* mov edx, [0x101c387f] */
    II(0x100f423a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f423d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100f423f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100f4242, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100f4244, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100f4246, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x100f4248, 0x3)   mov(memd_a32(ss, ebp - 0x18), ebx);   /* mov [ebp-0x18], ebx */
    II(0x100f424b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f424e, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100f4251, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100f4254, 0x5)   mov(eax, memd_a32(ds, 0x101c387d));   /* mov eax, [0x101c387d] */
    II(0x100f4259, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f425c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100f4260, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100f4262, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f4265, 0x3)   cmp(edx, memd_a32(ds, eax + 0x8));    /* cmp edx, [eax+0x8] */
    II(0x100f4268, 0x2)   jled(0x100f427a, 0x10);               /* jle 0x100f427a */
    II(0x100f426a, 0x6)   mov(ax, memw_a32(ds, 0x101c387f));    /* mov ax, [0x101c387f] */
    II(0x100f4270, 0x7)   add(ax, memw_a32(ds, 0x101c38c0));    /* add ax, [0x101c38c0] */
    II(0x100f4277, 0x3)   sub(memd_a32(ss, ebp - 0x10), eax);   /* sub [ebp-0x10], eax */
l_0x100f427a:
    II(0x100f427a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f427d, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100f4281, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
    II(0x100f4284, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100f4288, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f428b, 0x3)   cmp(edx, memd_a32(ds, eax + 0x4));    /* cmp edx, [eax+0x4] */
    II(0x100f428e, 0x2)   jged(0x100f429c, 0xc);                /* jge 0x100f429c */
    II(0x100f4290, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f4293, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100f4297, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100f429a, 0x2)   jmpd(0x100f42c3, 0x27);               /* jmp 0x100f42c3 */
l_0x100f429c:
    II(0x100f429c, 0x5)   mov(eax, memd_a32(ds, 0x101c387f));   /* mov eax, [0x101c387f] */
    II(0x100f42a1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f42a4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100f42a8, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100f42aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f42ad, 0x3)   cmp(edx, memd_a32(ds, eax + 0xc));    /* cmp edx, [eax+0xc] */
    II(0x100f42b0, 0x2)   jled(0x100f42c3, 0x11);               /* jle 0x100f42c3 */
    II(0x100f42b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f42b5, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x100f42b9, 0x7)   sub(ax, memw_a32(ds, 0x101c3881));    /* sub ax, [0x101c3881] */
    II(0x100f42c0, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x100f42c3:
    II(0x100f42c3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100f42c7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100f42ca, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x100f42cc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100f42d0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100f42d3, 0x3)   mov(memd_a32(ds, edx + 0x4), eax);    /* mov [edx+0x4], eax */
    II(0x100f42d6, 0x6)   mov(edx, memd_a32(ds, 0x101c387d));   /* mov edx, [0x101c387d] */
    II(0x100f42dc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f42df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100f42e2, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
//    II(0x100f42e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100f42e7, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x100f42e9, 0x3)   mov(memd_a32(ds, eax + 0x8), edx);    /* mov [eax+0x8], edx */
    II(0x100f42ec, 0x6)   mov(ebx, memd_a32(ds, 0x101c387f));   /* mov ebx, [0x101c387f] */
    II(0x100f42f2, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100f42f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100f42f8, 0x3)   mov(edx, memd_a32(ds, eax + 0x4));    /* mov edx, [eax+0x4] */
//    II(0x100f42fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100f42fe, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x100f4300, 0x3)   mov(memd_a32(ds, eax + 0xc), ebx);    /* mov [eax+0xc], ebx */
    II(0x100f4303, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f4306, 0x6)   mov(memw_a32(ds, 0x101c387b), ax);    /* mov [0x101c387b], ax */
    II(0x100f430c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100f430f, 0x6)   mov(memw_a32(ds, 0x101c387d), ax);    /* mov [0x101c387d], ax */
    II(0x100f4315, 0x4)   add(memd_a32(ss, ebp - 0x10), 0x3);   /* add dword [ebp-0x10], 0x3 */
    II(0x100f4319, 0x4)   add(memd_a32(ss, ebp - 0x18), 0x3);   /* add dword [ebp-0x18], 0x3 */
    II(0x100f431d, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100f4322, 0x5)   calld(/* sys */ 0x1016a24c, 0x75f25); /* call 0x1016a24c */
    II(0x100f4327, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100f432e, 0x2)   jmpd(0x100f4336, 0x6);                /* jmp 0x100f4336 */
l_0x100f4330:
    II(0x100f4330, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f4333, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100f4336:
    II(0x100f4336, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100f433a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f433c, 0x5)   mov(al, memb_a32(ds, 0x101c37e4));    /* mov al, [0x101c37e4] */
    II(0x100f4341, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100f4343, 0x6)   jged(0x100f446b, 0x122);              /* jge dword 0x100f446b */
    II(0x100f4349, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0xb1);  /* mov dword [ebp-0x30], 0xb1 */
    II(0x100f4350, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0xb2);  /* mov dword [ebp-0x34], 0xb2 */
    II(0x100f4357, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100f435b, 0x7)   cmp(memb_a32(ds, eax + 0x101c3821), 0); /* cmp byte [eax+0x101c3821], 0x0 */
    II(0x100f4362, 0x2)   jzd(0x100f4372, 0xe);                 /* jz 0x100f4372 */
    II(0x100f4364, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0xb2);  /* mov dword [ebp-0x30], 0xb2 */
    II(0x100f436b, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0xb1);  /* mov dword [ebp-0x34], 0xb1 */
l_0x100f4372:
    II(0x100f4372, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x100f4377, 0x5)   calld(sys_new, 0x71a84);              /* call 0x10165e00 */
    II(0x100f437c, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100f437f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100f4382, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100f4385, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x100f4389, 0x2)   jzd(0x100f43af, 0x24);                /* jz 0x100f43af */
    II(0x100f438b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100f438f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f4390, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x100f4394, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x34)); /* movsx ebx, word [ebp-0x34] */
    II(0x100f4398, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100f439c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100f439f, 0x5)   calld(my_ctor_c17, -0x25f95);         /* call 0x100ce40f */
    II(0x100f43a4, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100f43a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100f43aa, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100f43ad, 0x2)   jmpd(0x100f43b5, 0x6);                /* jmp 0x100f43b5 */
l_0x100f43af:
    II(0x100f43af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100f43b2, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x100f43b5:
    II(0x100f43b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100f43b8, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100f43bb, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
//    II(0x100f43c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100f43c3, 0x5)   calld(0x100d5194, -0x1f234);          /* call 0x100d5194 */
    II(0x100f43c8, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100f43cb, 0x5)   calld(0x100d5224, -0x1f1ac);          /* call 0x100d5224 */
    II(0x100f43d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f43d1, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100f43d4, 0x5)   calld(0x100d5250, -0x1f189);          /* call 0x100d5250 */
    II(0x100f43d9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f43da, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100f43dd, 0x5)   calld(0x100d527c, -0x1f166);          /* call 0x100d527c */
    II(0x100f43e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f43e3, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100f43e6, 0x5)   calld(0x100d52a8, -0x1f143);          /* call 0x100d52a8 */
    II(0x100f43eb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f43ec, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x100f43f1, 0x5)   mov(ebx, 0xffffffff);                 /* mov ebx, 0xffffffff */
    II(0x100f43f6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100f43fa, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100f43fd, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c37f9)); /* mov edx, [edx+0x101c37f9] */
    II(0x100f4403, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100f4406, 0x5)   calld(0x100cef64, -0x254a7);          /* call 0x100cef64 */
    II(0x100f440b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100f440e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100f4412, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100f4415, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c382b)); /* mov edx, [edx+0x101c382b] */
    II(0x100f441b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100f441e, 0x5)   calld(0x100cf824, -0x24bff);          /* call 0x100cf824 */
    II(0x100f4423, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x100f4426, 0x3)   mov(edx, memd_a32(ds, edx + 0x12));   /* mov edx, [edx+0x12] */
    II(0x100f4429, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100f442c, 0x5)   calld(0x100cf85c, -0x24bd5);          /* call 0x100cf85c */
    II(0x100f4431, 0x5)   calld(0x100d51e4, -0x1f252);          /* call 0x100d51e4 */
    II(0x100f4436, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f4438, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100f443a, 0x5)   calld(0x100d5204, -0x1f23b);          /* call 0x100d5204 */
    II(0x100f443f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f4441, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100f4443, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100f4446, 0x5)   calld(0x100cfa7c, -0x249cf);          /* call 0x100cfa7c */
    II(0x100f444b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100f444f, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100f4452, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100f4455, 0x6)   mov(memd_a32(ds, edx + 0x101c3853), eax); /* mov [edx+0x101c3853], eax */
    II(0x100f445b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f445e, 0x5)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x100f4463, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
    II(0x100f4466, 0x5)   jmpd(0x100f4330, -0x13b);             /* jmp 0x100f4330 */
l_0x100f446b:
    II(0x100f446b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100f446e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f4471, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100f4474, 0x5)   calld(sys_display_draw_1, 0x7302f);   /* call 0x101674a8 */
    II(0x100f4479, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0x1);   /* mov dword [ebp-0x2c], 0x1 */
l_0x100f4480:
    II(0x100f4480, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100f4483, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f4485, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f4486, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f4487, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f4488, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f4489, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f448a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f448b, 0x1)   retd();                               /* ret */
FUNC_END

