FUNC_BEGIN(0x100f2955, 0x99116c7b80ca85f3, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xf3, 0x33, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x31, 0xc0, 0xa0, 0x19, 0x39, 0x1c, 0x10, 0x85, 0xc0, 0xf, 0x84, 0xea, 0, 0, 0, 0xa1, 0x3c, 0x39, 0x1c, 0x10, 0x89, 0x45, 0xf8, 0x83, 0x7d, 0xf8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0xa4, 0xbb, 0xfd, 0xff, 0xe8, 0xcb, 0x35, 0x7, 0, 0x89, 0x45, 0xf4, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xc7, 0x5, 0x3c, 0x39, 0x1c, 0x10, 0, 0, 0, 0, 0xe8, 0x11, 0xe6, 0xff, 0xff, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x6, 0xf, 0x83, 0x88, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x12, 0x8b, 0x80, 0x1a, 0x89, 0x1b, 0x10, 0x89, 0x45, 0xf0, 0x83, 0x7d, 0xf0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0xe8, 0x43, 0x53, 0xfe, 0xff, 0xe8, 0x6f, 0x35, 0x7, 0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x12, 0x83, 0xb8, 0x13, 0x89, 0x1b, 0x10, 0, 0x74, 0x42, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x12, 0x8b, 0x80, 0x13, 0x89, 0x1b, 0x10, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe8, 0xe8, 0x7, 0xbb, 0xfd, 0xff, 0xe8, 0x2e, 0x35, 0x7, 0, 0x89, 0x45, 0xe4, 0xeb, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x12, 0xc7, 0x80, 0x13, 0x89, 0x1b, 0x10, 0, 0, 0, 0, 0xe9, 0x65, 0xff, 0xff, 0xff, 0xc6, 0x5, 0x19, 0x39, 0x1c, 0x10, 0, 0xc6, 0x5, 0x16, 0x39, 0x1c, 0x10, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f2955, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100f295a, 0x5)   calld(sys_check_available_stack_size, 0x733f3); /* call 0x10165d52 */
    II(0x100f295f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f2960, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f2961, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f2962, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f2963, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f2964, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f2965, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f2967, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100f296d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f296f, 0x5)   mov(al, memb_a32(ds, 0x101c3919));    /* mov al, [0x101c3919] */
    II(0x100f2974, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f2976, 0x6)   jzd(0x100f2a66, 0xea);                /* jz dword 0x100f2a66 */
    II(0x100f297c, 0x5)   mov(eax, memd_a32(ds, 0x101c393c));   /* mov eax, [0x101c393c] */
    II(0x100f2981, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f2984, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x100f2988, 0x2)   jzd(0x100f299e, 0x14);                /* jz 0x100f299e */
    II(0x100f298a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f298c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f298f, 0x5)   calld(my_dtor_d2, -0x2445c);          /* call 0x100ce538 */
    II(0x100f2994, 0x5)   calld(sys_delete, 0x735cb);           /* call 0x10165f64 */
    II(0x100f2999, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100f299c, 0x2)   jmpd(0x100f29a5, 0x7);                /* jmp 0x100f29a5 */
l_0x100f299e:
    II(0x100f299e, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
l_0x100f29a5:
    II(0x100f29a5, 0xa)   mov(memd_a32(ds, 0x101c393c), 0);     /* mov dword [0x101c393c], 0x0 */
    II(0x100f29af, 0x5)   calld(0x100f0fc5, -0x19ef);           /* call 0x100f0fc5 */
    II(0x100f29b4, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
    II(0x100f29bb, 0x2)   jmpd(0x100f29c3, 0x6);                /* jmp 0x100f29c3 */
l_0x100f29bd:
    II(0x100f29bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f29c0, 0x3)   inc(memd_a32(ss, ebp - 0x4));         /* inc dword [ebp-0x4] */
l_0x100f29c3:
    II(0x100f29c3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f29c7, 0x3)   cmp(eax, 0x6);                        /* cmp eax, 0x6 */
    II(0x100f29ca, 0x6)   jaed(0x100f2a58, 0x88);               /* jae dword 0x100f2a58 */
    II(0x100f29d0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f29d4, 0x3)   imul(eax, eax, 0x12);                 /* imul eax, eax, 0x12 */
    II(0x100f29d7, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b891a)); /* mov eax, [eax+0x101b891a] */
    II(0x100f29dd, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100f29e0, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x100f29e4, 0x2)   jzd(0x100f29fa, 0x14);                /* jz 0x100f29fa */
    II(0x100f29e6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f29e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f29eb, 0x5)   calld(my_dtor_d3, -0x1acbd);          /* call 0x100d7d33 */
    II(0x100f29f0, 0x5)   calld(sys_delete, 0x7356f);           /* call 0x10165f64 */
    II(0x100f29f5, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100f29f8, 0x2)   jmpd(0x100f2a01, 0x7);                /* jmp 0x100f2a01 */
l_0x100f29fa:
    II(0x100f29fa, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x100f2a01:
    II(0x100f2a01, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2a05, 0x3)   imul(eax, eax, 0x12);                 /* imul eax, eax, 0x12 */
    II(0x100f2a08, 0x7)   cmp(memd_a32(ds, eax + 0x101b8913), 0); /* cmp dword [eax+0x101b8913], 0x0 */
    II(0x100f2a0f, 0x2)   jzd(0x100f2a53, 0x42);                /* jz 0x100f2a53 */
    II(0x100f2a11, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2a15, 0x3)   imul(eax, eax, 0x12);                 /* imul eax, eax, 0x12 */
    II(0x100f2a18, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8913)); /* mov eax, [eax+0x101b8913] */
    II(0x100f2a1e, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100f2a21, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100f2a25, 0x2)   jzd(0x100f2a3b, 0x14);                /* jz 0x100f2a3b */
    II(0x100f2a27, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f2a29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100f2a2c, 0x5)   calld(my_dtor_d2, -0x244f9);          /* call 0x100ce538 */
    II(0x100f2a31, 0x5)   calld(sys_delete, 0x7352e);           /* call 0x10165f64 */
    II(0x100f2a36, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100f2a39, 0x2)   jmpd(0x100f2a42, 0x7);                /* jmp 0x100f2a42 */
l_0x100f2a3b:
    II(0x100f2a3b, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x100f2a42:
    II(0x100f2a42, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2a46, 0x3)   imul(eax, eax, 0x12);                 /* imul eax, eax, 0x12 */
    II(0x100f2a49, 0xa)   mov(memd_a32(ds, eax + 0x101b8913), 0); /* mov dword [eax+0x101b8913], 0x0 */
l_0x100f2a53:
    II(0x100f2a53, 0x5)   jmpd(0x100f29bd, -0x9b);              /* jmp 0x100f29bd */
l_0x100f2a58:
    II(0x100f2a58, 0x7)   mov(memb_a32(ds, 0x101c3919), 0);     /* mov byte [0x101c3919], 0x0 */
    II(0x100f2a5f, 0x7)   mov(memb_a32(ds, 0x101c3916), 0);     /* mov byte [0x101c3916], 0x0 */
l_0x100f2a66:
    II(0x100f2a66, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f2a68, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f2a69, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f2a6a, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f2a6b, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f2a6c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f2a6d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f2a6e, 0x1)   retd();                               /* ret */
FUNC_END

