FUNC_BEGIN(0x100c093a, 0x3370de1e2f43b12f, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xe, 0x54, 0xa, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0x8d, 0x45, 0xec, 0xe8, 0x8d, 0x61, 0xfb, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x85, 0x61, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0xf, 0xaf, 0x45, 0xfc, 0x89, 0x45, 0xe4, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x45, 0xfc, 0x29, 0xc3, 0x89, 0xd8, 0xe8, 0xf2, 0x64, 0xfb, 0xff, 0x48, 0x66, 0x89, 0x45, 0xec, 0x66, 0xc7, 0x45, 0xee, 0, 0, 0x66, 0xc7, 0x45, 0xea, 0, 0, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x8d, 0x50, 0xff, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xd8, 0xe8, 0xcd, 0x8d, 0xfc, 0xff, 0x66, 0x89, 0x45, 0xe8, 0x66, 0xff, 0x45, 0xee, 0x8b, 0x45, 0xee, 0x66, 0x3b, 0x45, 0xea, 0xf, 0x8e, 0xae, 0, 0, 0, 0x66, 0xff, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x45, 0xe8, 0xf, 0x8f, 0xc9, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xec, 0x66, 0x2b, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x5d, 0xec, 0x66, 0x2b, 0x18, 0x89, 0xd8, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xe0, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x45, 0xee, 0xeb, 0x7, 0x8b, 0x45, 0xee, 0x66, 0xff, 0x4d, 0xee, 0xf, 0xbf, 0x45, 0xee, 0x85, 0xc0, 0x7c, 0x19, 0xf, 0xbf, 0x55, 0xee, 0xf, 0xbf, 0x45, 0xee, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xe0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xe4, 0x39, 0xc2, 0x7f, 0xd8, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x8d, 0x50, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x45, 0xee, 0x1, 0xd8, 0xe8, 0x3e, 0x8d, 0xfc, 0xff, 0x66, 0x89, 0x45, 0xea, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x5d, 0xee, 0x29, 0xd8, 0xe8, 0x1d, 0x64, 0xfb, 0xff, 0x66, 0x89, 0x45, 0xee, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xee, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x89, 0x45, 0xdc, 0x80, 0x7d, 0x10, 0, 0x74, 0xa, 0x8b, 0x45, 0xdc, 0xf, 0xbf, 0, 0x85, 0xc0, 0x7c, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xdc, 0x66, 0xc7, 0, 0, 0, 0x8b, 0x55, 0xdc, 0x83, 0x45, 0xdc, 0x2, 0x8b, 0x45, 0xf8, 0x66, 0x1, 0x2, 0xe9, 0x15, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100c093a, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100c093f, 0x5)   calld(sys_check_available_stack_size, 0xa540e); /* call 0x10165d52 */
    II(0x100c0944, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c0945, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c0946, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c0947, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c0949, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100c094f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c0952, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100c0955, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100c0958, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x100c095b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c095e, 0x5)   calld(my_ctor_0x101b4184, -0x49e73);  /* call 0x10076af0 */
    II(0x100c0963, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c0966, 0x5)   calld(my_ctor_0x101b4184, -0x49e7b);  /* call 0x10076af0 */
    II(0x100c096b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c096e, 0x4)   imul(eax, memd_a32(ss, ebp - 0x4));   /* imul eax, [ebp-0x4] */
    II(0x100c0972, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100c0975, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c0977, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c097a, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c097d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100c0981, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x100c0983, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c0985, 0x5)   calld(0x10076e7c, -0x49b0e);          /* call 0x10076e7c */
    II(0x100c098a, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c098b, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x100c098f, 0x6)   mov(memw_a32(ss, ebp - 0x12), 0);     /* mov word [ebp-0x12], 0x0 */
    II(0x100c0995, 0x6)   mov(memw_a32(ss, ebp - 0x16), 0);     /* mov word [ebp-0x16], 0x0 */
    II(0x100c099b, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100c09a0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c09a3, 0x3)   lea(edx, eax - 0x1);                  /* lea edx, [eax-0x1] */
    II(0x100c09a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c09a9, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c09ac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100c09b0, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c09b2, 0x5)   calld(my_min, -0x37233);              /* call 0x10089784 */
    II(0x100c09b7, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
l_0x100c09bb:
    II(0x100c09bb, 0x4)   inc(memw_a32(ss, ebp - 0x12));        /* inc word [ebp-0x12] */
    II(0x100c09bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x100c09c2, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x16));    /* cmp ax, [ebp-0x16] */
    II(0x100c09c6, 0x6)   jled(0x100c0a7a, 0xae);               /* jle dword 0x100c0a7a */
    II(0x100c09cc, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
    II(0x100c09d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c09d3, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100c09d7, 0x6)   jgd(0x100c0aa6, 0xc9);                /* jg dword 0x100c0aa6 */
    II(0x100c09dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c09e0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100c09e3, 0x3)   sub(dx, memw_a32(ds, eax));           /* sub dx, [eax] */
    II(0x100c09e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c09e9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x14));   /* mov ebx, [ebp-0x14] */
    II(0x100c09ec, 0x3)   sub(bx, memw_a32(ds, eax));           /* sub bx, [eax] */
    II(0x100c09ef, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c09f1, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c09f4, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x100c09f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c09fa, 0x4)   mov(memw_a32(ss, ebp - 0x12), ax);    /* mov [ebp-0x12], ax */
    II(0x100c09fe, 0x2)   jmpd(0x100c0a07, 0x7);                /* jmp 0x100c0a07 */
l_0x100c0a00:
    II(0x100c0a00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x100c0a03, 0x4)   dec(memw_a32(ss, ebp - 0x12));        /* dec word [ebp-0x12] */
l_0x100c0a07:
    II(0x100c0a07, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x100c0a0b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c0a0d, 0x2)   jld(0x100c0a28, 0x19);                /* jl 0x100c0a28 */
    II(0x100c0a0f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x12)); /* movsx edx, word [ebp-0x12] */
    II(0x100c0a13, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x100c0a17, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c0a1a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c0a1e, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c0a20, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100c0a24, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c0a26, 0x2)   jgd(0x100c0a00, -0x28);               /* jg 0x100c0a00 */
l_0x100c0a28:
    II(0x100c0a28, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100c0a2d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c0a30, 0x3)   lea(edx, eax - 0x1);                  /* lea edx, [eax-0x1] */
    II(0x100c0a33, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c0a36, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x100c0a38, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c0a3b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x100c0a3f, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c0a41, 0x5)   calld(my_min, -0x372c2);              /* call 0x10089784 */
    II(0x100c0a46, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x100c0a4a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c0a4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c0a4f, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c0a51, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c0a54, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x12)); /* movsx ebx, word [ebp-0x12] */
    II(0x100c0a58, 0x2)   sub(eax, ebx);                        /* sub eax, ebx */
    II(0x100c0a5a, 0x5)   calld(0x10076e7c, -0x49be3);          /* call 0x10076e7c */
    II(0x100c0a5f, 0x4)   mov(memw_a32(ss, ebp - 0x12), ax);    /* mov [ebp-0x12], ax */
    II(0x100c0a63, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100c0a67, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c0a6a, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100c0a6d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x12)); /* movsx edx, word [ebp-0x12] */
    II(0x100c0a71, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100c0a73, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c0a75, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c0a77, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100c0a7a:
    II(0x100c0a7a, 0x4)   cmp(memb_a32(ss, ebp + 0x10), 0);     /* cmp byte [ebp+0x10], 0x0 */
    II(0x100c0a7e, 0x2)   jzd(0x100c0a8a, 0xa);                 /* jz 0x100c0a8a */
    II(0x100c0a80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100c0a83, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c0a86, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c0a88, 0x2)   jld(0x100c0a8c, 0x2);                 /* jl 0x100c0a8c */
l_0x100c0a8a:
    II(0x100c0a8a, 0x2)   jmpd(0x100c0a94, 0x8);                /* jmp 0x100c0a94 */
l_0x100c0a8c:
    II(0x100c0a8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100c0a8f, 0x5)   mov(memw_a32(ds, eax), 0);            /* mov word [eax], 0x0 */
l_0x100c0a94:
    II(0x100c0a94, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100c0a97, 0x4)   add(memd_a32(ss, ebp - 0x24), 0x2);   /* add dword [ebp-0x24], 0x2 */
    II(0x100c0a9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c0a9e, 0x3)   add(memw_a32(ds, edx), ax);           /* add [edx], ax */
    II(0x100c0aa1, 0x5)   jmpd(0x100c09bb, -0xeb);              /* jmp 0x100c09bb */
l_0x100c0aa6:
    II(0x100c0aa6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c0aa8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c0aa9, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c0aaa, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c0aab, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

