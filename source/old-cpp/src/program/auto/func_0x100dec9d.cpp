FUNC_BEGIN(0x100dec9d, 0xfeb61806b5113a04, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xab, 0x70, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x40, 0xbf, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x49, 0xc1, 0xfa, 0x10, 0x6b, 0xd2, 0x13, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x4f, 0x66, 0x89, 0x82, 0xc4, 0x35, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x80, 0xe3, 0x3, 0, 0, 0x89, 0x45, 0xf8, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x5, 0xb3, 0x3, 0, 0, 0xe8, 0x6c, 0xc6, 0xfa, 0xff, 0x66, 0x3b, 0x45, 0xf8, 0x7e, 0x5d, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x49, 0xc1, 0xfb, 0x10, 0x69, 0xdb, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x5, 0xb3, 0x3, 0, 0, 0xe8, 0x6, 0xc5, 0xfa, 0xff, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x49, 0xc1, 0xf8, 0x10, 0x69, 0xc8, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc8, 0xe8, 0xec, 0xf, 0, 0, 0x89, 0xc1, 0xba, 0x1, 0, 0, 0, 0xb8, 0x19, 0, 0, 0, 0xe8, 0xaf, 0x30, 0xf9, 0xff, 0x66, 0xf, 0xaf, 0x41, 0x8, 0x66, 0x29, 0x83, 0x83, 0xa5, 0x1c, 0x10, 0xeb, 0x8a, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x5, 0xb3, 0x3, 0, 0, 0xe8, 0xed, 0xc5, 0xfa, 0xff, 0x66, 0x3b, 0x45, 0xf8, 0x7e, 0x65, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x5, 0xb7, 0x3, 0, 0, 0xe8, 0x2a, 0x1b, 0, 0, 0x66, 0x8b, 0, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x75, 0x6, 0x83, 0x45, 0xf4, 0xd8, 0xeb, 0xd, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x1, 0x75, 0x4, 0x83, 0x45, 0xf4, 0xec, 0x8b, 0x55, 0xfc, 0x8b, 0x5a, 0x49, 0xc1, 0xfb, 0x10, 0x69, 0xdb, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0xb9, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xf9, 0x8b, 0x93, 0x81, 0xa5, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xc2, 0x66, 0x89, 0x93, 0x83, 0xa5, 0x1c, 0x10, 0xeb, 0x82, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100dec9d, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100deca2, 0x5)   calld(sys_check_available_stack_size, 0x870ab); /* call 0x10165d52 */
    II(0x100deca7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100deca8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100deca9, 0x1)   pushd(edx);                           /* push edx */
    II(0x100decaa, 0x1)   pushd(esi);                           /* push esi */
    II(0x100decab, 0x1)   pushd(edi);                           /* push edi */
    II(0x100decac, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100decad, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100decaf, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100decb5, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100decb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100decbb, 0x5)   calld(0x100dac00, -0x40c0);           /* call 0x100dac00 */
    II(0x100decc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100decc3, 0x3)   mov(edx, memd_a32(ds, eax + 0x49));   /* mov edx, [eax+0x49] */
    II(0x100decc6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100decc9, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100deccc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100deccf, 0x4)   mov(ax, memw_a32(ds, eax + 0x4f));    /* mov ax, [eax+0x4f] */
    II(0x100decd3, 0x7)   mov(memw_a32(ds, edx + 0x101c35c4), ax); /* mov [edx+0x101c35c4], ax */
    II(0x100decda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100decdd, 0x7)   mov(ax, memw_a32(ds, eax + 0x3e3));   /* mov ax, [eax+0x3e3] */
    II(0x100dece4, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100dece7, 0x2)   jmpd(0x100decef, 0x6);                /* jmp 0x100decef */
l_0x100dece9:
    II(0x100dece9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100decec, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100decef:
    II(0x100decef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100decf2, 0x5)   add(eax, 0x3b3);                      /* add eax, 0x3b3 */
    II(0x100decf7, 0x5)   calld(my_2_get_count, -0x53994);      /* call 0x1008b368 */
    II(0x100decfc, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100ded00, 0x2)   jled(0x100ded5f, 0x5d);               /* jle 0x100ded5f */
    II(0x100ded02, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ded05, 0x3)   mov(ebx, memd_a32(ds, eax + 0x49));   /* mov ebx, [eax+0x49] */
    II(0x100ded08, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100ded0b, 0x6)   imul(ebx, ebx, 0x247);                /* imul ebx, ebx, 0x247 */
    II(0x100ded11, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100ded15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ded18, 0x5)   add(eax, 0x3b3);                      /* add eax, 0x3b3 */
    II(0x100ded1d, 0x5)   calld(0x1008b228, -0x53afa);          /* call 0x1008b228 */
    II(0x100ded22, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100ded25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ded28, 0x3)   mov(eax, memd_a32(ds, eax + 0x49));   /* mov eax, [eax+0x49] */
    II(0x100ded2b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ded2e, 0x6)   imul(ecx, eax, 0x247);                /* imul ecx, eax, 0x247 */
    II(0x100ded34, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x100ded39, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x100ded3b, 0x5)   calld(0x100dfd2c, 0xfec);             /* call 0x100dfd2c */
    II(0x100ded40, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100ded42, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100ded47, 0x5)   mov(eax, 0x19);                       /* mov eax, 0x19 */
    II(0x100ded4c, 0x5)   calld(0x10071e00, -0x6cf51);          /* call 0x10071e00 */
    II(0x100ded51, 0x5)   imul(ax, memw_a32(ds, ecx + 0x8));    /* imul ax, [ecx+0x8] */
    II(0x100ded56, 0x7)   sub(memw_a32(ds, ebx + 0x101ca583), ax); /* sub [ebx+0x101ca583], ax */
    II(0x100ded5d, 0x2)   jmpd(0x100dece9, -0x76);              /* jmp 0x100dece9 */
l_0x100ded5f:
    II(0x100ded5f, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100ded66, 0x2)   jmpd(0x100ded6e, 0x6);                /* jmp 0x100ded6e */
l_0x100ded68:
    II(0x100ded68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ded6b, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100ded6e:
    II(0x100ded6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ded71, 0x5)   add(eax, 0x3b3);                      /* add eax, 0x3b3 */
    II(0x100ded76, 0x5)   calld(my_2_get_count, -0x53a13);      /* call 0x1008b368 */
    II(0x100ded7b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100ded7f, 0x2)   jled(0x100dede6, 0x65);               /* jle 0x100dede6 */
    II(0x100ded81, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100ded85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ded88, 0x5)   add(eax, 0x3b7);                      /* add eax, 0x3b7 */
    II(0x100ded8d, 0x5)   calld(0x100e08bc, 0x1b2a);            /* call 0x100e08bc */
    II(0x100ded92, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100ded95, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ded98, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ded9c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ded9e, 0x2)   jnzd(0x100deda6, 0x6);                /* jnz 0x100deda6 */
    II(0x100deda0, 0x4)   add(memd_a32(ss, ebp - 0xc), -0x28 /* 0xd8 */); /* add dword [ebp-0xc], 0xd8 */
    II(0x100deda4, 0x2)   jmpd(0x100dedb3, 0xd);                /* jmp 0x100dedb3 */
l_0x100deda6:
    II(0x100deda6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100dedaa, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100dedad, 0x2)   jnzd(0x100dedb3, 0x4);                /* jnz 0x100dedb3 */
    II(0x100dedaf, 0x4)   add(memd_a32(ss, ebp - 0xc), -0x14 /* 0xec */); /* add dword [ebp-0xc], 0xec */
l_0x100dedb3:
    II(0x100dedb3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dedb6, 0x3)   mov(ebx, memd_a32(ds, edx + 0x49));   /* mov ebx, [edx+0x49] */
    II(0x100dedb9, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100dedbc, 0x6)   imul(ebx, ebx, 0x247);                /* imul ebx, ebx, 0x247 */
    II(0x100dedc2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100dedc6, 0x5)   mov(ecx, 0x5);                        /* mov ecx, 0x5 */
    II(0x100dedcb, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100dedcd, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100dedd0, 0x2)   idiv(ecx);                            /* idiv ecx */
    II(0x100dedd2, 0x6)   mov(edx, memd_a32(ds, ebx + 0x101ca581)); /* mov edx, [ebx+0x101ca581] */
    II(0x100dedd8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100deddb, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100deddd, 0x7)   mov(memw_a32(ds, ebx + 0x101ca583), dx); /* mov [ebx+0x101ca583], dx */
    II(0x100dede4, 0x2)   jmpd(0x100ded68, -0x7e);              /* jmp 0x100ded68 */
l_0x100dede6:
    II(0x100dede6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100dede8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100dede9, 0x1)   popd(edi);                            /* pop edi */
    II(0x100dedea, 0x1)   popd(esi);                            /* pop esi */
    II(0x100dedeb, 0x1)   popd(edx);                            /* pop edx */
    II(0x100dedec, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100deded, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100dedee, 0x1)   retd();                               /* ret */
FUNC_END

