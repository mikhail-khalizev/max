FUNC_BEGIN(0x10091e5a, 0xfa6aecee0989fe35, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xee, 0x3e, 0xd, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xf8, 0x7e, 0x23, 0x8b, 0x45, 0xf0, 0x2b, 0x45, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0x10, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0x39, 0xc2, 0x7e, 0x8, 0x8a, 0x45, 0xe8, 0x8b, 0x55, 0x10, 0x88, 0x2, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xfc, 0x7d, 0x24, 0x8b, 0x45, 0xfc, 0x2b, 0x45, 0xf4, 0x66, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0x14, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0x39, 0xc2, 0x7e, 0x8, 0x8a, 0x45, 0xe8, 0x8b, 0x55, 0x14, 0x88, 0x2, 0x8b, 0x45, 0x10, 0x31, 0xd2, 0x8a, 0x10, 0x8b, 0x45, 0x14, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0x29, 0xc2, 0x83, 0xfa, 0x6, 0x7f, 0x6, 0xc6, 0x45, 0xe4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe4, 0, 0x8a, 0x45, 0xe4, 0x88, 0x45, 0xec, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x8, 0}))
    II(0x10091e5a, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10091e5f, 0x5)   calld(sys_check_available_stack_size, 0xd3eee); /* call 0x10165d52 */
    II(0x10091e64, 0x1)   pushd(esi);                           /* push esi */
    II(0x10091e65, 0x1)   pushd(edi);                           /* push edi */
    II(0x10091e66, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10091e67, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10091e69, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10091e6f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10091e72, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10091e75, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10091e78, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
//    II(0x10091e7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10091e7e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10091e82, 0x2)   jled(0x10091ea7, 0x23);               /* jle 0x10091ea7 */
    II(0x10091e84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10091e87, 0x3)   sub(eax, memd_a32(ss, ebp - 0x8));    /* sub eax, [ebp-0x8] */
    II(0x10091e8a, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10091e8d, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10091e90, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10091e92, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10091e97, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10091e9b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10091e9d, 0x2)   jled(0x10091ea7, 0x8);                /* jle 0x10091ea7 */
    II(0x10091e9f, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x10091ea2, 0x3)   mov(edx, memd_a32(ss, ebp + 0x10));   /* mov edx, [ebp+0x10] */
    II(0x10091ea5, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
l_0x10091ea7:
    II(0x10091ea7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10091eaa, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x10091eae, 0x2)   jged(0x10091ed4, 0x24);               /* jge 0x10091ed4 */
    II(0x10091eb0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10091eb3, 0x3)   sub(eax, memd_a32(ss, ebp - 0xc));    /* sub eax, [ebp-0xc] */
    II(0x10091eb6, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x10091eba, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10091ebd, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10091ebf, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10091ec4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10091ec8, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10091eca, 0x2)   jled(0x10091ed4, 0x8);                /* jle 0x10091ed4 */
    II(0x10091ecc, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x10091ecf, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x10091ed2, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
l_0x10091ed4:
    II(0x10091ed4, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10091ed7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10091ed9, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10091edb, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10091ede, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10091ee0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10091ee5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10091ee7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10091eeb, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10091eed, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10091ef1, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10091ef3, 0x3)   cmp(edx, 0x6);                        /* cmp edx, 0x6 */
    II(0x10091ef6, 0x2)   jgd(0x10091efe, 0x6);                 /* jg 0x10091efe */
    II(0x10091ef8, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0x1);   /* mov byte [ebp-0x1c], 0x1 */
    II(0x10091efc, 0x2)   jmpd(0x10091f02, 0x4);                /* jmp 0x10091f02 */
l_0x10091efe:
    II(0x10091efe, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0);     /* mov byte [ebp-0x1c], 0x0 */
l_0x10091f02:
    II(0x10091f02, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x10091f05, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
//    II(0x10091f08, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10091f0b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10091f0d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10091f0e, 0x1)   popd(edi);                            /* pop edi */
    II(0x10091f0f, 0x1)   popd(esi);                            /* pop esi */
    II(0x10091f10, 0x3)   retd(0x8);                            /* ret 0x8 */
FUNC_END

