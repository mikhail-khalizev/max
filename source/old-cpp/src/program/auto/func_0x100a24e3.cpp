FUNC_BEGIN(0x100a24e3, 0xa61be8a74a870bf3, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x65, 0x38, 0xc, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf8, 0x5, 0x2, 0, 0, 0, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf4, 0x5, 0x2, 0, 0, 0, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf8, 0x83, 0xe8, 0x2, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xe8, 0x2, 0x98, 0xe8, 0x39, 0xff, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf0, 0, 0xe9, 0xa1, 0, 0, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x81, 0, 0, 0, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x18, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xd0, 0x13, 0xb8, 0xb4, 0x35, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xf6, 0x8d, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x59, 0x8d, 0x45, 0xe8, 0xe8, 0x6f, 0x45, 0xfd, 0xff, 0xf, 0xbf, 0x55, 0xec, 0x6b, 0xd2, 0x13, 0x8b, 0x45, 0xf4, 0x66, 0x2b, 0x82, 0xbc, 0x35, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xec, 0x6b, 0xd2, 0x13, 0x8b, 0x45, 0xf8, 0x66, 0x2b, 0x82, 0xbe, 0x35, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xea, 0xf, 0xbf, 0x55, 0xea, 0xf, 0xbf, 0x45, 0xea, 0xf, 0xaf, 0xd0, 0x89, 0xd3, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0xf, 0xaf, 0xc2, 0x1, 0xd8, 0x3d, 0x90, 0x1, 0, 0, 0x7d, 0x6, 0xc6, 0x45, 0xf0, 0, 0xeb, 0x9, 0xe9, 0x6c, 0xff, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100a24e3, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100a24e8, 0x5)   calld(sys_check_available_stack_size, 0xc3865); /* call 0x10165d52 */
    II(0x100a24ed, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a24ee, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a24ef, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a24f0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a24f1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a24f3, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100a24f9, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a24fc, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100a24ff, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100a2502, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a2505, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100a250a, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100a250d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a2510, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100a2515, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100a2518, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a251b, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x100a251e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a2521, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a2524, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x100a2527, 0x1)   cwde();                               /* cwde */
    II(0x100a2528, 0x5)   calld(0x100a2466, -0xc7);             /* call 0x100a2466 */
    II(0x100a252d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a252f, 0x2)   jnzd(0x100a253a, 0x9);                /* jnz 0x100a253a */
    II(0x100a2531, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100a2535, 0x5)   jmpd(0x100a25db, 0xa1);               /* jmp 0x100a25db */
l_0x100a253a:
    II(0x100a253a, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100a2541, 0x2)   jmpd(0x100a2549, 0x6);                /* jmp 0x100a2549 */
l_0x100a2543:
    II(0x100a2543, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a2546, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100a2549:
    II(0x100a2549, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100a254d, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100a2550, 0x6)   jged(0x100a25d7, 0x81);               /* jge dword 0x100a25d7 */
    II(0x100a2556, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a2559, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100a255d, 0x2)   jzd(0x100a2577, 0x18);                /* jz 0x100a2577 */
    II(0x100a255f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100a2563, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x100a2566, 0x5)   mov(eax, 0x101c35b4);                 /* mov eax, 0x101c35b4 */
    II(0x100a256b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100a256d, 0x5)   calld(my_2_get_count, -0x1720a);      /* call 0x1008b368 */
    II(0x100a2572, 0x1)   cwde();                               /* cwde */
    II(0x100a2573, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2575, 0x2)   jgd(0x100a2579, 0x2);                 /* jg 0x100a2579 */
l_0x100a2577:
    II(0x100a2577, 0x2)   jmpd(0x100a25d2, 0x59);               /* jmp 0x100a25d2 */
l_0x100a2579:
    II(0x100a2579, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a257c, 0x5)   calld(my_ctor_0x101b4184, -0x2ba91);  /* call 0x10076af0 */
    II(0x100a2581, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100a2585, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100a2588, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a258b, 0x7)   sub(ax, memw_a32(ds, edx + 0x101c35bc)); /* sub ax, [edx+0x101c35bc] */
    II(0x100a2592, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x100a2596, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100a259a, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100a259d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a25a0, 0x7)   sub(ax, memw_a32(ds, edx + 0x101c35be)); /* sub ax, [edx+0x101c35be] */
    II(0x100a25a7, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x100a25ab, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x16)); /* movsx edx, word [ebp-0x16] */
    II(0x100a25af, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x16)); /* movsx eax, word [ebp-0x16] */
    II(0x100a25b3, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100a25b6, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x100a25b8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100a25bc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100a25c0, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100a25c3, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100a25c5, 0x5)   cmp(eax, 0x190);                      /* cmp eax, 0x190 */
    II(0x100a25ca, 0x2)   jged(0x100a25d2, 0x6);                /* jge 0x100a25d2 */
    II(0x100a25cc, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100a25d0, 0x2)   jmpd(0x100a25db, 0x9);                /* jmp 0x100a25db */
l_0x100a25d2:
    II(0x100a25d2, 0x5)   jmpd(0x100a2543, -0x94);              /* jmp 0x100a2543 */
l_0x100a25d7:
    II(0x100a25d7, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x100a25db:
    II(0x100a25db, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x100a25de, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a25e0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a25e1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a25e2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a25e3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a25e4, 0x1)   retd();                               /* ret */
FUNC_END

