FUNC_BEGIN(0x1008685e, 0xd79492b32c04ba25, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xea, 0xf4, 0xd, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xed, 0x3a, 0, 0, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0xf, 0x8b, 0x45, 0xe8, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xa1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x16, 0xe8, 0x59, 0x34, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x2b, 0x33, 0, 0, 0x8b, 0x45, 0xe8, 0xe8, 0xe8, 0xc1, 0xc, 0, 0x83, 0xe8, 0x3, 0x89, 0x45, 0xf0, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0xe8, 0x91, 0x25, 0x3, 0, 0x8b, 0x45, 0xf0, 0xf, 0xaf, 0x45, 0xf0, 0x89, 0x45, 0xf0, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x12, 0x3, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x81, 0x44, 0xb, 0, 0x84, 0xc0, 0x74, 0x37, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xe0, 0xe8, 0x65, 0xf5, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xc3, 0x31, 0, 0, 0xe8, 0x62, 0x36, 0, 0, 0xe8, 0x8e, 0xa3, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7f, 0x10, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x1d, 0x27, 0, 0, 0xeb, 0x1c, 0xeb, 0xb3, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb, 0x27, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xff, 0x26, 0, 0, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1008685e, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x10086863, 0x5)   calld(sys_check_available_stack_size, 0xdf4ea); /* call 0x10165d52 */
    II(0x10086868, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10086869, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008686a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008686b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008686c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008686d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008686f, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10086875, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10086878, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1008687b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008687e, 0x5)   calld(0x1008a370, 0x3aed);            /* call 0x1008a370 */
    II(0x10086883, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10086886, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x1008688a, 0x2)   jzd(0x1008689b, 0xf);                 /* jz 0x1008689b */
    II(0x1008688c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1008688f, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x10086892, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10086897, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10086899, 0x2)   jnzd(0x100868a4, 0x9);                /* jnz 0x100868a4 */
l_0x1008689b:
    II(0x1008689b, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1008689f, 0x5)   jmpd(0x10086945, 0xa1);               /* jmp 0x10086945 */
l_0x100868a4:
    II(0x100868a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100868a7, 0x3)   add(eax, 0x16);                       /* add eax, 0x16 */
    II(0x100868aa, 0x5)   calld(0x10089d08, 0x3459);            /* call 0x10089d08 */
    II(0x100868af, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100868b1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100868b4, 0x5)   calld(0x10089be4, 0x332b);            /* call 0x10089be4 */
    II(0x100868b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100868bc, 0x5)   calld(0x10152aa9, 0xcc1e8);           /* call 0x10152aa9 */
    II(0x100868c1, 0x3)   sub(eax, 0x3);                        /* sub eax, 0x3 */
    II(0x100868c4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100868c7, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100868ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100868cd, 0x5)   calld(0x100b8e63, 0x32591);           /* call 0x100b8e63 */
    II(0x100868d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100868d5, 0x4)   imul(eax, memd_a32(ss, ebp - 0x10));  /* imul eax, [ebp-0x10] */
    II(0x100868d9, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100868dc, 0x2)   jmpd(0x100868e6, 0x8);                /* jmp 0x100868e6 */
l_0x100868de:
    II(0x100868de, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100868e1, 0x5)   calld(0x10076bf8, -0xfcee);           /* call 0x10076bf8 */
l_0x100868e6:
    II(0x100868e6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100868e8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100868eb, 0x5)   calld(0x1013ad71, 0xb4481);           /* call 0x1013ad71 */
    II(0x100868f0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100868f2, 0x2)   jzd(0x1008692b, 0x37);                /* jz 0x1008692b */
    II(0x100868f4, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100868f7, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100868fa, 0x5)   calld(0x10075e64, -0x10a9b);          /* call 0x10075e64 */
    II(0x100868ff, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086901, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10086904, 0x5)   calld(0x10089acc, 0x31c3);            /* call 0x10089acc */
    II(0x10086909, 0x5)   calld(0x10089f70, 0x3662);            /* call 0x10089f70 */
    II(0x1008690e, 0x5)   calld(0x10070ca1, -0x15c72);          /* call 0x10070ca1 */
    II(0x10086913, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x10086917, 0x2)   jgd(0x10086929, 0x10);                /* jg 0x10086929 */
    II(0x10086919, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x1008691d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008691f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10086922, 0x5)   calld(0x10089044, 0x271d);            /* call 0x10089044 */
    II(0x10086927, 0x2)   jmpd(0x10086945, 0x1c);               /* jmp 0x10086945 */
l_0x10086929:
    II(0x10086929, 0x2)   jmpd(0x100868de, -0x4d);              /* jmp 0x100868de */
l_0x1008692b:
    II(0x1008692b, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1008692f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086931, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10086934, 0x5)   calld(0x10089044, 0x270b);            /* call 0x10089044 */
    II(0x10086939, 0x2)   jmpd(0x10086945, 0xa);                /* jmp 0x10086945 */
//  II(0x1008693b, 0xa)   /* Недостижимый код. */
l_0x10086945:
    II(0x10086945, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10086948, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008694a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008694b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008694c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008694d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008694e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008694f, 0x1)   retd();                               /* ret */
FUNC_END

