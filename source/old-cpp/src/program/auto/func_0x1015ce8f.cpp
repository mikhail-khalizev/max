FUNC_BEGIN(0x1015ce8f, 0x83a8f1bfd5d0d58e, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0xb9, 0x8e, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x6a, 0x92, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xf0, 0x97, 0xf1, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x3c, 0x97, 0xf1, 0xff, 0x89, 0x45, 0xe8, 0x31, 0xc0, 0x8b, 0x55, 0xfc, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xf4, 0xc6, 0x45, 0xf8, 0, 0x8b, 0x45, 0xe8, 0xe8, 0x5e, 0x93, 0xf1, 0xff, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x28, 0x8b, 0x45, 0xe8, 0xe8, 0x4c, 0x93, 0xf1, 0xff, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x6b, 0x34, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x83, 0xc2, 0x8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf0, 0xeb, 0x66, 0x8b, 0x45, 0xe8, 0xe8, 0x24, 0x93, 0xf1, 0xff, 0x8b, 0x58, 0xe, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x43, 0x34, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x83, 0xc2, 0x8, 0xf, 0xaf, 0xd3, 0x8b, 0x45, 0xe8, 0xe8, 0x5, 0x93, 0xf1, 0xff, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xe8, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0xf, 0xaf, 0xc3, 0x29, 0xc2, 0x8b, 0x45, 0xe8, 0xe8, 0xe7, 0x92, 0xf1, 0xff, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xe8, 0xe8, 0xd9, 0x92, 0xf1, 0xff, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x1, 0x7d, 0x7, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x12, 0xba, 0x3, 0, 0, 0, 0x8b, 0x45, 0xe8, 0xe8, 0x8c, 0x6c, 0xf9, 0xff, 0xe9, 0xb8, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0xf, 0x85, 0xa5, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe0, 0xe8, 0xd4, 0x9a, 0xf1, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x1, 0x75, 0x1e, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xdc, 0xe8, 0x78, 0x8e, 0xf1, 0xff, 0x8b, 0x8, 0x8b, 0x5d, 0xe8, 0x31, 0xd2, 0xb8, 0x22, 0x28, 0x1b, 0x10, 0xe8, 0x63, 0x8b, 0xfb, 0xff, 0xeb, 0x48, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xd8, 0xe8, 0x5a, 0x8e, 0xf1, 0xff, 0x8b, 0x8, 0x8b, 0x5d, 0xe8, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0xb8, 0x42, 0x28, 0x1b, 0x10, 0x50, 0xb8, 0x64, 0, 0, 0, 0x50, 0x8d, 0x45, 0xd4, 0xe8, 0xbe, 0x4a, 0xfe, 0xff, 0x50, 0xe8, 0x7, 0x50, 0xfe, 0xff, 0x83, 0xc4, 0x10, 0xe8, 0x90, 0xc7, 0xf2, 0xff, 0xe8, 0x23, 0x8b, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xe3, 0x4a, 0xfe, 0xff, 0xe8, 0x24, 0x84, 0xf7, 0xff, 0xf, 0xbf, 0xc8, 0xbb, 0xd8, 0x3, 0, 0, 0xba, 0xd7, 0x3, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x87, 0xa, 0xfe, 0xff, 0x8b, 0x45, 0xe8, 0x8a, 0x40, 0x3d, 0x88, 0x45, 0xd0, 0xe9, 0x76, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x80, 0x78, 0x3e, 0x19, 0x75, 0xa, 0x8b, 0x45, 0xe8, 0xe8, 0xe0, 0x6e, 0xf9, 0xff, 0xeb, 0x29, 0x8b, 0x45, 0xe8, 0xe8, 0x8e, 0x3a, 0xff, 0xff, 0x8b, 0x45, 0xe8, 0x80, 0x78, 0x3d, 0x15, 0x74, 0xef, 0x8b, 0x45, 0xe8, 0xf6, 0x40, 0x13, 0x2, 0x75, 0xf, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xe8, 0xe8, 0xfb, 0x54, 0xff, 0xff, 0xe9, 0x6d, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0xba, 0x8, 0, 0, 0, 0x8b, 0x45, 0xe8, 0xe8, 0xd2, 0x5e, 0, 0, 0x8b, 0x45, 0xe8, 0xe8, 0x5, 0xfc, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4d, 0x31, 0xd2, 0x8b, 0x45, 0xe8, 0xe8, 0xcc, 0x1d, 0xff, 0xff, 0x8b, 0x45, 0xe8, 0xc6, 0x40, 0x3e, 0x1, 0xeb, 0x3a, 0xeb, 0x38, 0x8a, 0x45, 0xd0, 0x88, 0x45, 0xcc, 0x80, 0x7d, 0xcc, 0x4, 0x72, 0x24, 0x80, 0x7d, 0xcc, 0x4, 0xf, 0x86, 0x74, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xcc, 0x7, 0x72, 0x12, 0x80, 0x7d, 0xcc, 0x7, 0x76, 0xa9, 0x80, 0x7d, 0xcc, 0xb, 0xf, 0x84, 0x5e, 0xff, 0xff, 0xff, 0xeb, 0xd0, 0xeb, 0xce, 0x80, 0x7d, 0xcc, 0x2, 0x74, 0xb5, 0xeb, 0xc6, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xe8, 0xe8, 0xd0, 0x1c, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xe8, 0x83, 0xc0, 0x65, 0xe8, 0xfd, 0x98, 0xf1, 0xff, 0xbb, 0x1, 0, 0, 0, 0xba, 0x1a, 0, 0, 0, 0x8b, 0x45, 0xe8, 0xe8, 0x4d, 0x5e, 0, 0, 0x8b, 0x45, 0xe8, 0xe8, 0x2c, 0x57, 0xff, 0xff, 0x8a, 0x45, 0xf0, 0x8b, 0x55, 0xe8, 0x88, 0x42, 0x58, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xe8, 0xe8, 0xd1, 0x46, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x8f, 0x94, 0xf1, 0xff, 0xe8, 0xc2, 0x46, 0xf1, 0xff, 0x8b, 0x45, 0xe8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0xd7, 0xbe, 0xf4, 0xff, 0x8b, 0x45, 0xe8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x7, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0x1, 0x80, 0x7d, 0xf8, 0, 0x74, 0x3d, 0x8b, 0x45, 0xe8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x6, 0xc6, 0x45, 0xc8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xc8, 0, 0x31, 0xc9, 0x8a, 0x4d, 0xc8, 0x8b, 0x5d, 0xe8, 0x8b, 0x45, 0xe8, 0xe8, 0x20, 0x90, 0xf1, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0xaf, 0x4c, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x2e, 0x8d, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x24, 0x8d, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015ce8f, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x1015ce94, 0x5)   calld(sys_check_available_stack_size, 0x8eb9); /* call 0x10165d52 */
    II(0x1015ce99, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015ce9a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015ce9b, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015ce9c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015ce9d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015ce9e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015ce9f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015cea1, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x1015cea7, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015ceaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015cead, 0x5)   calld(0x1007611c, -0xe6d96);          /* call 0x1007611c */
    II(0x1015ceb2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015ceb4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015ceb7, 0x5)   calld(0x100766ac, -0xe6810);          /* call 0x100766ac */
    II(0x1015cebc, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015cebf, 0x5)   calld(0x10076600, -0xe68c4);          /* call 0x10076600 */
    II(0x1015cec4, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1015cec7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015cec9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015cecc, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x1015cecf, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015ced2, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1015ced6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015ced9, 0x5)   calld(0x1007623c, -0xe6ca2);          /* call 0x1007623c */
    II(0x1015cede, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1015cee1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015cee4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015cee6, 0x2)   jnzd(0x1015cf10, 0x28);               /* jnz 0x1015cf10 */
    II(0x1015cee8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015ceeb, 0x5)   calld(0x1007623c, -0xe6cb4);          /* call 0x1007623c */
    II(0x1015cef0, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x1015cef3, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015cef6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015cef9, 0x5)   calld(0x10150369, -0xcb95);           /* call 0x10150369 */
    II(0x1015cefe, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015cf01, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x1015cf04, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1015cf06, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1015cf09, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1015cf0b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1015cf0e, 0x2)   jmpd(0x1015cf76, 0x66);               /* jmp 0x1015cf76 */
l_0x1015cf10:
    II(0x1015cf10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015cf13, 0x5)   calld(0x1007623c, -0xe6cdc);          /* call 0x1007623c */
    II(0x1015cf18, 0x3)   mov(ebx, memd_a32(ds, eax + 0xe));    /* mov ebx, [eax+0xe] */
    II(0x1015cf1b, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015cf1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015cf21, 0x5)   calld(0x10150369, -0xcbbd);           /* call 0x10150369 */
    II(0x1015cf26, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015cf29, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x1015cf2c, 0x3)   imul(edx, ebx);                       /* imul edx, ebx */
    II(0x1015cf2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015cf32, 0x5)   calld(0x1007623c, -0xe6cfb);          /* call 0x1007623c */
    II(0x1015cf37, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x1015cf3a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015cf3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015cf40, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x1015cf43, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015cf48, 0x3)   imul(eax, ebx);                       /* imul eax, ebx */
    II(0x1015cf4b, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1015cf4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015cf50, 0x5)   calld(0x1007623c, -0xe6d19);          /* call 0x1007623c */
    II(0x1015cf55, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x1015cf58, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015cf5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015cf5e, 0x5)   calld(0x1007623c, -0xe6d27);          /* call 0x1007623c */
    II(0x1015cf63, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1015cf66, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015cf69, 0x3)   imul(ebx, eax);                       /* imul ebx, eax */
    II(0x1015cf6c, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1015cf6e, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1015cf71, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1015cf73, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x1015cf76:
    II(0x1015cf76, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1015cf7a, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1015cf7d, 0x2)   jged(0x1015cf86, 0x7);                /* jge 0x1015cf86 */
    II(0x1015cf7f, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
l_0x1015cf86:
    II(0x1015cf86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015cf89, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015cf8b, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1015cf8e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015cf90, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1015cf95, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1015cf97, 0x2)   jnzd(0x1015cfab, 0x12);               /* jnz 0x1015cfab */
    II(0x1015cf99, 0x5)   mov(edx, 0x3);                        /* mov edx, 0x3 */
    II(0x1015cf9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015cfa1, 0x5)   calld(0x100f3c32, -0x69374);          /* call 0x100f3c32 */
    II(0x1015cfa6, 0x5)   jmpd(0x1015d063, 0xb8);               /* jmp 0x1015d063 */
l_0x1015cfab:
    II(0x1015cfab, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1015cfaf, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015cfb1, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1015cfb6, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1015cfb8, 0x6)   jnzd(0x1015d063, 0xa5);               /* jnz dword 0x1015d063 */
    II(0x1015cfbe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015cfc1, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1015cfc4, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015cfc7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015cfca, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1015cfcd, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015cfd0, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015cfd3, 0x5)   calld(0x10076aac, -0xe652c);          /* call 0x10076aac */
    II(0x1015cfd8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1015cfdc, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1015cfdf, 0x2)   jnzd(0x1015cfff, 0x1e);               /* jnz 0x1015cfff */
    II(0x1015cfe1, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x1015cfe4, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1015cfe7, 0x5)   calld(0x10075e64, -0xe7188);          /* call 0x10075e64 */
    II(0x1015cfec, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x1015cfee, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x18));   /* mov ebx, [ebp-0x18] */
    II(0x1015cff1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015cff3, 0x5)   mov(eax, 0x101b2822);                 /* mov eax, 0x101b2822 */ /* "Enemy unit disabled for 1 turn." */
    II(0x1015cff8, 0x5)   calld(0x10115b60, -0x4749d);          /* call 0x10115b60 */
    II(0x1015cffd, 0x2)   jmpd(0x1015d047, 0x48);               /* jmp 0x1015d047 */
l_0x1015cfff:
    II(0x1015cfff, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x1015d002, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1015d005, 0x5)   calld(0x10075e64, -0xe71a6);          /* call 0x10075e64 */
    II(0x1015d00a, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x1015d00c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x18));   /* mov ebx, [ebp-0x18] */
    II(0x1015d00f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015d011, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1015d015, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015d016, 0x5)   mov(eax, 0x101b2842);                 /* mov eax, 0x101b2842 */ /* "Enemy unit disabled for %i turns." */
    II(0x1015d01b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015d01c, 0x5)   mov(eax, 0x64);                       /* mov eax, 0x64 */
    II(0x1015d021, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015d022, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1015d025, 0x5)   calld(my_string_ctor, -0x1b542);      /* call 0x10141ae8 */
    II(0x1015d02a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015d02b, 0x5)   calld(0x10142037, -0x1aff9);          /* call 0x10142037 */
    II(0x1015d030, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x1015d033, 0x5)   calld(my_strobj_c_str_v2, -0xd3870);  /* call 0x100897c8 */
    II(0x1015d038, 0x5)   calld(0x10115b60, -0x474dd);          /* call 0x10115b60 */
    II(0x1015d03d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015d03f, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1015d042, 0x5)   calld(my_string_dtor, -0x1b51d);      /* call 0x10141b2a */
l_0x1015d047:
    II(0x1015d047, 0x5)   calld(0x100d5470, -0x87bdc);          /* call 0x100d5470 */
    II(0x1015d04c, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1015d04f, 0x5)   mov(ebx, 0x3d8);                      /* mov ebx, 0x3d8 */
    II(0x1015d054, 0x5)   mov(edx, 0x3d7);                      /* mov edx, 0x3d7 */
    II(0x1015d059, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x1015d05e, 0x5)   calld(0x1013daea, -0x1f579);          /* call 0x1013daea */
l_0x1015d063:
    II(0x1015d063, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d066, 0x3)   mov(al, memb_a32(ds, eax + 0x3d));    /* mov al, [eax+0x3d] */
    II(0x1015d069, 0x3)   mov(memb_a32(ss, ebp - 0x30), al);    /* mov [ebp-0x30], al */
    II(0x1015d06c, 0x5)   jmpd(0x1015d0e7, 0x76);               /* jmp 0x1015d0e7 */
l_0x1015d071:
    II(0x1015d071, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d074, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x19);  /* cmp byte [eax+0x3e], 0x19 */
    II(0x1015d078, 0x2)   jnzd(0x1015d084, 0xa);                /* jnz 0x1015d084 */
    II(0x1015d07a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d07d, 0x5)   calld(0x100f3f62, -0x69120);          /* call 0x100f3f62 */
    II(0x1015d082, 0x2)   jmpd(0x1015d0ad, 0x29);               /* jmp 0x1015d0ad */
l_0x1015d084:
    II(0x1015d084, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d087, 0x5)   calld(0x10150b1a, -0xc572);           /* call 0x10150b1a */
    II(0x1015d08c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d08f, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x15);  /* cmp byte [eax+0x3d], 0x15 */
    II(0x1015d093, 0x2)   jzd(0x1015d084, -0x11);               /* jz 0x1015d084 */
    II(0x1015d095, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d098, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x1015d09c, 0x2)   jnzd(0x1015d0ad, 0xf);                /* jnz 0x1015d0ad */
    II(0x1015d09e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015d0a1, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1015d0a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d0a8, 0x5)   calld(0x101525a8, -0xab05);           /* call 0x101525a8 */
l_0x1015d0ad:
    II(0x1015d0ad, 0x5)   jmpd(0x1015d11f, 0x6d);               /* jmp 0x1015d11f */
l_0x1015d0b2:
    II(0x1015d0b2, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1015d0b7, 0x5)   mov(edx, 0x8);                        /* mov edx, 0x8 */
    II(0x1015d0bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d0bf, 0x5)   calld(0x10162f96, 0x5ed2);            /* call 0x10162f96 */
    II(0x1015d0c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d0c7, 0x5)   calld(0x1015ccd1, -0x3fb);            /* call 0x1015ccd1 */
    II(0x1015d0cc, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1015d0d0, 0x2)   jmpd(0x1015d11f, 0x4d);               /* jmp 0x1015d11f */
l_0x1015d0d2:
    II(0x1015d0d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015d0d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d0d7, 0x5)   calld(0x1014eea8, -0xe234);           /* call 0x1014eea8 */
    II(0x1015d0dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d0df, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1015d0e3, 0x2)   jmpd(0x1015d11f, 0x3a);               /* jmp 0x1015d11f */
l_0x1015d0e5:
    II(0x1015d0e5, 0x2)   jmpd(0x1015d11f, 0x38);               /* jmp 0x1015d11f */
l_0x1015d0e7:
    II(0x1015d0e7, 0x3)   mov(al, memb_a32(ss, ebp - 0x30));    /* mov al, [ebp-0x30] */
    II(0x1015d0ea, 0x3)   mov(memb_a32(ss, ebp - 0x34), al);    /* mov [ebp-0x34], al */
    II(0x1015d0ed, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0x4);   /* cmp byte [ebp-0x34], 0x4 */
    II(0x1015d0f1, 0x2)   jbd(0x1015d117, 0x24);                /* jb 0x1015d117 */
    II(0x1015d0f3, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0x4);   /* cmp byte [ebp-0x34], 0x4 */
    II(0x1015d0f7, 0x6)   jbed(0x1015d071, -0x8c);              /* jbe dword 0x1015d071 */
    II(0x1015d0fd, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0x7);   /* cmp byte [ebp-0x34], 0x7 */
    II(0x1015d101, 0x2)   jbd(0x1015d115, 0x12);                /* jb 0x1015d115 */
    II(0x1015d103, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0x7);   /* cmp byte [ebp-0x34], 0x7 */
    II(0x1015d107, 0x2)   jbed(0x1015d0b2, -0x57);              /* jbe 0x1015d0b2 */
    II(0x1015d109, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0xb);   /* cmp byte [ebp-0x34], 0xb */
    II(0x1015d10d, 0x6)   jzd(0x1015d071, -0xa2);               /* jz dword 0x1015d071 */
    II(0x1015d113, 0x2)   jmpd(0x1015d0e5, -0x30);              /* jmp 0x1015d0e5 */
l_0x1015d115:
    II(0x1015d115, 0x2)   jmpd(0x1015d0e5, -0x32);              /* jmp 0x1015d0e5 */
l_0x1015d117:
    II(0x1015d117, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0x2);   /* cmp byte [ebp-0x34], 0x2 */
    II(0x1015d11b, 0x2)   jzd(0x1015d0d2, -0x4b);               /* jz 0x1015d0d2 */
    II(0x1015d11d, 0x2)   jmpd(0x1015d0e5, -0x3a);              /* jmp 0x1015d0e5 */
l_0x1015d11f:
    II(0x1015d11f, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x1015d122, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d125, 0x5)   calld(0x1014edfa, -0xe330);           /* call 0x1014edfa */
    II(0x1015d12a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015d12c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d12f, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1015d132, 0x5)   calld(0x10076a34, -0xe6703);          /* call 0x10076a34 */
    II(0x1015d137, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1015d13c, 0x5)   mov(edx, 0x1a);                       /* mov edx, 0x1a */
    II(0x1015d141, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d144, 0x5)   calld(0x10162f96, 0x5e4d);            /* call 0x10162f96 */
    II(0x1015d149, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d14c, 0x5)   calld(0x1015287d, -0xa8d4);           /* call 0x1015287d */
    II(0x1015d151, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x1015d154, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x1015d157, 0x3)   mov(memb_a32(ds, edx + 0x58), al);    /* mov [edx+0x58], al */
    II(0x1015d15a, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1015d15f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d162, 0x5)   calld(0x10071838, -0xeb92f);          /* call 0x10071838 */
    II(0x1015d167, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015d169, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1015d16c, 0x5)   calld(0x10076600, -0xe6b71);          /* call 0x10076600 */
    II(0x1015d171, 0x5)   calld(0x10071838, -0xeb93e);          /* call 0x10071838 */
    II(0x1015d176, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d179, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015d17c, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015d17e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015d181, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015d184, 0x5)   calld(0x100a9060, -0xb4129);          /* call 0x100a9060 */
    II(0x1015d189, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d18c, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015d18f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015d194, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015d19a, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1015d1a0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015d1a5, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1015d1a8, 0x2)   jnzd(0x1015d1b1, 0x7);                /* jnz 0x1015d1b1 */
    II(0x1015d1aa, 0x7)   mov(memb_a32(ds, 0x101c391b), 0x1);   /* mov byte [0x101c391b], 0x1 */
l_0x1015d1b1:
    II(0x1015d1b1, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1015d1b5, 0x2)   jzd(0x1015d1f4, 0x3d);                /* jz 0x1015d1f4 */
    II(0x1015d1b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d1ba, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015d1bc, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1015d1bf, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015d1c1, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1015d1c6, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1015d1c8, 0x2)   jnzd(0x1015d1d0, 0x6);                /* jnz 0x1015d1d0 */
    II(0x1015d1ca, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0x1);   /* mov byte [ebp-0x38], 0x1 */
    II(0x1015d1ce, 0x2)   jmpd(0x1015d1d4, 0x4);                /* jmp 0x1015d1d4 */
l_0x1015d1d0:
    II(0x1015d1d0, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0);     /* mov byte [ebp-0x38], 0x0 */
l_0x1015d1d4:
    II(0x1015d1d4, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015d1d6, 0x3)   mov(cl, memb_a32(ss, ebp - 0x38));    /* mov cl, [ebp-0x38] */
    II(0x1015d1d9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x18));   /* mov ebx, [ebp-0x18] */
    II(0x1015d1dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d1df, 0x5)   calld(0x10076204, -0xe6fe0);          /* call 0x10076204 */
    II(0x1015d1e4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015d1e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015d1e9, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015d1ec, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015d1ee, 0x1)   cwde();                               /* cwde */
    II(0x1015d1ef, 0x5)   calld(0x100a1ea3, -0xbb351);          /* call 0x100a1ea3 */
l_0x1015d1f4:
    II(0x1015d1f4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015d1f6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1015d1f9, 0x5)   calld(0x10075f2c, -0xe72d2);          /* call 0x10075f2c */
    II(0x1015d1fe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015d200, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015d203, 0x5)   calld(0x10075f2c, -0xe72dc);          /* call 0x10075f2c */
    II(0x1015d208, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015d20a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015d20b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015d20c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015d20d, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015d20e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015d20f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015d210, 0x1)   retd();                               /* ret */
FUNC_END

