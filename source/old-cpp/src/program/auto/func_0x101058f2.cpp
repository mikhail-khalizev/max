FUNC_BEGIN(0x101058f2, 0x8cbd2c487f14b073, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x56, 0x4, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xc6, 0x80, 0x61, 0x4, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x31, 0, 0xf, 0x85, 0xad, 0, 0, 0, 0xe8, 0xdd, 0x58, 0x6, 0, 0x89, 0x45, 0xf4, 0x80, 0x3d, 0xd2, 0x37, 0x1c, 0x10, 0, 0x74, 0x7, 0xc7, 0x45, 0xf4, 0xd, 0, 0, 0, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0xe8, 0xc, 0xfd, 0xff, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x85, 0xc0, 0xf, 0x85, 0x78, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x58, 0x4, 0, 0, 0x26, 0x75, 0xe, 0x31, 0xd2, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xc4, 0xb4, 0xff, 0xff, 0xeb, 0x5e, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0x74, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0xb, 0x31, 0xd2, 0x31, 0xc0, 0xe8, 0xa7, 0xb4, 0xff, 0xff, 0xeb, 0x41, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0, 0x74, 0x17, 0xe8, 0xf9, 0x52, 0x2, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x2, 0x75, 0x7, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x31, 0x1, 0xeb, 0x21, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x18, 0xe8, 0x29, 0xe9, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0xe8, 0x70, 0x2e, 0x2, 0, 0x85, 0xc0, 0x74, 0x5, 0xe8, 0xea, 0xd2, 0x5, 0, 0xe9, 0x46, 0xff, 0xff, 0xff, 0x31, 0xc0, 0x8b, 0x55, 0xf8, 0x8a, 0x42, 0x32, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101058f2, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x101058f7, 0x5)   calld(sys_check_available_stack_size, 0x60456); /* call 0x10165d52 */
    II(0x101058fc, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101058fd, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101058fe, 0x1)   pushd(esi);                           /* push esi */
    II(0x101058ff, 0x1)   pushd(edi);                           /* push edi */
    II(0x10105900, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10105901, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10105903, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10105909, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010590c, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x1010590f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10105912, 0x7)   mov(memb_a32(ds, eax + 0x461), 0);    /* mov byte [eax+0x461], 0x0 */
l_0x10105919:
    II(0x10105919, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010591c, 0x4)   cmp(memb_a32(ds, eax + 0x31), 0);     /* cmp byte [eax+0x31], 0x0 */
    II(0x10105920, 0x6)   jnzd(0x101059d3, 0xad);               /* jnz dword 0x101059d3 */
    II(0x10105926, 0x5)   calld(/* sys */ 0x1016b208, 0x658dd); /* call 0x1016b208 */
    II(0x1010592b, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1010592e, 0x7)   cmp(memb_a32(ds, 0x101c37d2), 0);     /* cmp byte [0x101c37d2], 0x0 */
    II(0x10105935, 0x2)   jzd(0x1010593e, 0x7);                 /* jz 0x1010593e */
    II(0x10105937, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xd);    /* mov dword [ebp-0xc], 0xd */
l_0x1010593e:
    II(0x1010593e, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10105941, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10105944, 0x5)   calld(0x10105655, -0x2f4);            /* call 0x10105655 */
    II(0x10105949, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010594b, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1010594e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10105950, 0x6)   jnzd(0x101059ce, 0x78);               /* jnz dword 0x101059ce */
    II(0x10105956, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10105959, 0x7)   cmp(memb_a32(ds, eax + 0x458), 0x26); /* cmp byte [eax+0x458], 0x26 */
    II(0x10105960, 0x2)   jnzd(0x10105970, 0xe);                /* jnz 0x10105970 */
    II(0x10105962, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10105964, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10105969, 0x5)   calld(0x10100e32, -0x4b3c);           /* call 0x10100e32 */
    II(0x1010596e, 0x2)   jmpd(0x101059ce, 0x5e);               /* jmp 0x101059ce */
l_0x10105970:
    II(0x10105970, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x8);   /* cmp byte [0x101c391e], 0x8 */
    II(0x10105977, 0x2)   jzd(0x10105982, 0x9);                 /* jz 0x10105982 */
    II(0x10105979, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x10105980, 0x2)   jnzd(0x1010598d, 0xb);                /* jnz 0x1010598d */
l_0x10105982:
    II(0x10105982, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10105984, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10105986, 0x5)   calld(0x10100e32, -0x4b59);           /* call 0x10100e32 */
    II(0x1010598b, 0x2)   jmpd(0x101059ce, 0x41);               /* jmp 0x101059ce */
l_0x1010598d:
    II(0x1010598d, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0);     /* cmp byte [0x101c5630], 0x0 */
    II(0x10105994, 0x2)   jzd(0x101059ad, 0x17);                /* jz 0x101059ad */
    II(0x10105996, 0x5)   calld(0x1012ac94, 0x252f9);           /* call 0x1012ac94 */
    II(0x1010599b, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x2);   /* cmp byte [0x101c5630], 0x2 */
    II(0x101059a2, 0x2)   jnzd(0x101059ab, 0x7);                /* jnz 0x101059ab */
    II(0x101059a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101059a7, 0x4)   mov(memb_a32(ds, eax + 0x31), 0x1);   /* mov byte [eax+0x31], 0x1 */
l_0x101059ab:
    II(0x101059ab, 0x2)   jmpd(0x101059ce, 0x21);               /* jmp 0x101059ce */
l_0x101059ad:
    II(0x101059ad, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x101059b4, 0x2)   jzd(0x101059ce, 0x18);                /* jz 0x101059ce */
    II(0x101059b6, 0x5)   calld(0x100e42e4, -0x216d7);          /* call 0x100e42e4 */
    II(0x101059bb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101059c0, 0x5)   calld(0x10128835, 0x22e70);           /* call 0x10128835 */
    II(0x101059c5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101059c7, 0x2)   jzd(0x101059ce, 0x5);                 /* jz 0x101059ce */
    II(0x101059c9, 0x5)   calld(0x10162cb8, 0x5d2ea);           /* call 0x10162cb8 */
l_0x101059ce:
    II(0x101059ce, 0x5)   jmpd(0x10105919, -0xba);              /* jmp 0x10105919 */
l_0x101059d3:
    II(0x101059d3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101059d5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101059d8, 0x3)   mov(al, memb_a32(ds, edx + 0x32));    /* mov al, [edx+0x32] */
    II(0x101059db, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x101059de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101059e1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101059e3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101059e4, 0x1)   popd(edi);                            /* pop edi */
    II(0x101059e5, 0x1)   popd(esi);                            /* pop esi */
    II(0x101059e6, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101059e7, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101059e8, 0x1)   retd();                               /* ret */
FUNC_END

