FUNC_BEGIN(0x1028b52e, 0x3511f6b91867477c, 0x20, ({0x1e, 0x6, 0xf, 0xa0, 0xf, 0xa8, 0x60, 0x66, 0xb8, 0xe8, 0x2, 0x66, 0x8e, 0xd8, 0x83, 0x3d, 0x6a, 0x13, 0, 0, 0, 0xf, 0x85, 0xa8, 0x5, 0, 0, 0xff, 0x5, 0x6a, 0x13, 0, 0, 0x66, 0x8c, 0x5, 0x9e, 0x13, 0, 0, 0x1e, 0x6, 0x56, 0x57, 0x55, 0x1e, 0xf, 0xa1, 0x33, 0xff, 0xbe, 0xd0, 0x3, 0, 0, 0xbb, 0x28, 0x12, 0, 0, 0xc7, 0x5, 0xa8, 0x12, 0, 0, 0, 0, 0, 0, 0xb9, 0x20, 0, 0, 0, 0x66, 0xf7, 0x46, 0x30, 0, 0x80, 0x74, 0x13, 0x66, 0xf7, 0x46, 0x30, 0, 0x10, 0x75, 0xb, 0x89, 0x33, 0x83, 0xc3, 0x4, 0xff, 0x5, 0xa8, 0x12, 0, 0, 0x83, 0xc6, 0x6c, 0x49, 0x75, 0xdf, 0x33, 0xc0, 0xba, 0xc, 0, 0, 0, 0x32, 0xc0, 0xee, 0xeb, 0, 0xf, 0xb7, 0x15, 0xbe, 0x14, 0, 0, 0xec, 0xeb, 0, 0x86, 0xc4, 0xec, 0xeb, 0, 0x86, 0xc4, 0x40, 0x83, 0xfa, 0x7, 0x76, 0x2, 0x3, 0xc0, 0x3b, 0x5, 0x66, 0x13, 0, 0, 0x76, 0x21, 0x33, 0xc0, 0xba, 0xc, 0, 0, 0, 0xee, 0xeb, 0, 0xa1, 0x66, 0x13, 0, 0, 0x48, 0xf, 0xb7, 0x15, 0xbe, 0x14, 0, 0, 0xee, 0xeb, 0, 0x86, 0xc4, 0xee, 0xeb, 0, 0x86, 0xc4, 0x8b, 0x1d, 0x66, 0x13, 0, 0, 0x2b, 0xd8, 0x81, 0xe3, 0xfc, 0xff, 0, 0, 0xb, 0xdb, 0x75, 0x3, 0x83, 0xc3, 0x20, 0x89, 0x1d, 0x30, 0x13, 0, 0, 0x2b, 0x1d, 0x54, 0x13, 0, 0, 0xf, 0x83, 0x12, 0, 0, 0, 0x8b, 0x1d, 0x66, 0x13, 0, 0, 0x2b, 0x1d, 0x54, 0x13, 0, 0, 0x3, 0x1d, 0x30, 0x13, 0, 0, 0x89, 0x1d, 0x38, 0x13, 0, 0, 0x89, 0x1d, 0x3c, 0x13, 0, 0, 0xc1, 0xeb, 0x3, 0x81, 0xe3, 0xfc, 0xff, 0, 0, 0x1, 0x1d, 0x3c, 0x13, 0, 0, 0xa1, 0x30, 0x13, 0, 0, 0x5, 0, 0x4, 0, 0, 0x3b, 0x5, 0x66, 0x13, 0, 0, 0x76, 0x6, 0x2b, 0x5, 0x66, 0x13, 0, 0, 0xa3, 0x5e, 0x13, 0, 0, 0x83, 0x3d, 0x2c, 0x13, 0, 0, 0, 0xf, 0x84, 0x99, 0, 0, 0, 0xa1, 0x38, 0x13, 0, 0, 0xbb, 0xac, 0x12, 0, 0, 0x8b, 0xd, 0x2c, 0x13, 0, 0, 0x8b, 0x33, 0x66, 0x29, 0x46, 0x24, 0x73, 0x77, 0x66, 0xc7, 0x46, 0x24, 0, 0, 0x66, 0x81, 0x66, 0x30, 0xff, 0x6f, 0x83, 0x7e, 0x3c, 0, 0x74, 0x4b, 0x66, 0xf7, 0x46, 0x30, 0x2, 0, 0x75, 0x43, 0x60, 0xf, 0xa8, 0x6, 0x1e, 0x66, 0x8e, 0x5, 0x9e, 0x13, 0, 0, 0x1e, 0xf, 0xa9, 0x65, 0x66, 0x8e, 0x1d, 0x6e, 0x13, 0, 0, 0x8b, 0xc6, 0x2d, 0xd0, 0x3, 0, 0, 0x33, 0xd2, 0x66, 0xbb, 0x6c, 0, 0x66, 0xf7, 0xf3, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0x65, 0xf, 0xb7, 0x5, 0x88, 0x13, 0, 0, 0x50, 0x65, 0xff, 0x5e, 0x3c, 0x83, 0xc4, 0xc, 0x1f, 0x7, 0xf, 0xa9, 0x61, 0x6, 0x51, 0x56, 0x1e, 0x7, 0x8b, 0xf3, 0x8b, 0xfb, 0x83, 0xc6, 0x4, 0xfc, 0xf3, 0xa5, 0x5e, 0x59, 0x7, 0xff, 0xd, 0x2c, 0x13, 0, 0, 0xeb, 0x3, 0x83, 0xc3, 0x4, 0x49, 0xf, 0x85, 0x77, 0xff, 0xff, 0xff, 0x66, 0x8e, 0x5, 0x5c, 0x13, 0, 0, 0x33, 0xff, 0x33, 0xc9, 0x8b, 0x3d, 0x54, 0x13, 0, 0, 0x33, 0xc0, 0x8b, 0xd, 0x30, 0x13, 0, 0, 0x2b, 0xcf, 0x72, 0x14, 0x8b, 0xd9, 0xc1, 0xe9, 0x2, 0xfc, 0xf3, 0xab, 0x8b, 0xcb, 0x83, 0xe1, 0x3, 0xf3, 0xaa, 0xeb, 0x30, 0x90, 0x90, 0x90, 0x8b, 0xd, 0x66, 0x13, 0, 0, 0x2b, 0xcf, 0x8b, 0xd9, 0xc1, 0xe9, 0x2, 0xfc, 0xf3, 0xab, 0x8b, 0xcb, 0x83, 0xe1, 0x3, 0xf3, 0xaa, 0x33, 0xff, 0x8b, 0xd, 0x30, 0x13, 0, 0, 0x8b, 0xd9, 0xc1, 0xe9, 0x2, 0xf3, 0xab, 0x8b, 0xcb, 0x83, 0xe1, 0x3, 0xf3, 0xaa, 0x83, 0x3d, 0xa8, 0x12, 0, 0, 0, 0xf, 0x84, 0x72, 0x3, 0, 0, 0x66, 0x8e, 0x5, 0x5c, 0x13, 0, 0, 0xbb, 0x28, 0x12, 0, 0, 0x89, 0x1d, 0x62, 0x13, 0, 0, 0x8b, 0x33, 0xf, 0xb7, 0x46, 0x30, 0x25, 0xb0, 0x7, 0, 0, 0xc1, 0xe0, 0x5, 0xa, 0x46, 0x36, 0xc7, 0x5, 0xa4, 0x13, 0, 0, 0, 0, 0, 0, 0xc7, 0x5, 0xa0, 0x13, 0, 0, 0, 0, 0, 0, 0xbf, 0xa8, 0x13, 0, 0, 0xb9, 0x1f, 0, 0, 0, 0x83, 0x3f, 0, 0x74, 0x10, 0x39, 0x7, 0x74, 0x14, 0x83, 0xc7, 0x4, 0xff, 0x5, 0xa4, 0x13, 0, 0, 0x49, 0x75, 0xeb, 0x89, 0x7, 0xff, 0x5, 0xa0, 0x13, 0, 0, 0xba, 0x4, 0x21, 0, 0, 0xa1, 0xa4, 0x13, 0, 0, 0xbb, 0, 0x2, 0, 0, 0x87, 0xca, 0x66, 0xf7, 0xe3, 0x87, 0xca, 0x3, 0xd0, 0x89, 0x15, 0x74, 0x13, 0, 0, 0x83, 0x3d, 0xa0, 0x13, 0, 0, 0, 0x74, 0xa, 0xe8, 0x5, 0x5, 0, 0, 0xe8, 0x27, 0x8, 0, 0, 0x66, 0xf7, 0x46, 0x30, 0, 0x20, 0x74, 0xf, 0x66, 0x81, 0x66, 0x30, 0xff, 0xdf, 0xa1, 0x5e, 0x13, 0, 0, 0x66, 0x89, 0x46, 0x3a, 0xf, 0xb7, 0x46, 0x3a, 0x8b, 0xf8, 0x8b, 0x15, 0x3c, 0x13, 0, 0, 0x89, 0x15, 0x40, 0x13, 0, 0, 0xc7, 0x5, 0x48, 0x13, 0, 0, 0, 0, 0, 0, 0x3, 0x5, 0x3c, 0x13, 0, 0, 0x3b, 0x5, 0x66, 0x13, 0, 0, 0xf, 0x86, 0x15, 0, 0, 0, 0x8b, 0x15, 0x66, 0x13, 0, 0, 0x2b, 0xc2, 0xa3, 0x48, 0x13, 0, 0, 0x2b, 0xd7, 0x89, 0x15, 0x40, 0x13, 0, 0, 0x66, 0x83, 0x7e, 0x1e, 0, 0x75, 0x62, 0xf, 0xb7, 0x5e, 0x1c, 0x66, 0x83, 0x7e, 0x36, 0x3, 0x74, 0x2, 0x3, 0xdb, 0x66, 0xf7, 0x46, 0x30, 0x20, 0, 0x74, 0x2, 0xd1, 0xe3, 0x66, 0xf7, 0x46, 0x30, 0, 0x4, 0x74, 0x15, 0x52, 0x50, 0x8b, 0xc3, 0x8b, 0x5e, 0x44, 0x8b, 0xd0, 0xc1, 0xea, 0x10, 0xc1, 0xe0, 0x10, 0xf7, 0xf3, 0x8b, 0xd8, 0x58, 0x5a, 0x3b, 0x1d, 0x3c, 0x13, 0, 0, 0x73, 0x26, 0x3b, 0x1d, 0x40, 0x13, 0, 0, 0x77, 0x12, 0xc7, 0x5, 0x48, 0x13, 0, 0, 0, 0, 0, 0, 0x89, 0x1d, 0x40, 0x13, 0, 0, 0xeb, 0xc, 0x2b, 0x1d, 0x40, 0x13, 0, 0, 0x89, 0x1d, 0x48, 0x13, 0, 0, 0x8b, 0x1d, 0x54, 0x13, 0, 0, 0x2b, 0xdf, 0x73, 0xe, 0x8b, 0x1d, 0x66, 0x13, 0, 0, 0x2b, 0xdf, 0x3, 0x1d, 0x54, 0x13, 0, 0, 0xa1, 0x40, 0x13, 0, 0, 0x3, 0x5, 0x48, 0x13, 0, 0, 0x3b, 0xd8, 0x72, 0xb3, 0x8b, 0x15, 0x74, 0x13, 0, 0, 0xff, 0xd2, 0x66, 0x89, 0x7e, 0x3a, 0xf, 0xb7, 0x46, 0x1c, 0xf, 0xb7, 0x56, 0x1e, 0x8b, 0xd, 0x40, 0x13, 0, 0, 0x3, 0xd, 0x48, 0x13, 0, 0, 0x66, 0xf7, 0x46, 0x30, 0x20, 0, 0x74, 0x2, 0xd1, 0xe9, 0x66, 0x83, 0x7e, 0x36, 0x3, 0x74, 0x2, 0xd1, 0xe9, 0x66, 0xf7, 0x46, 0x30, 0, 0x4, 0x74, 0x1c, 0x52, 0x50, 0x8b, 0x5e, 0x44, 0xf, 0xb7, 0xc1, 0xc1, 0xe0, 0x10, 0xf7, 0xe3, 0x66, 0x8b, 0xca, 0xc1, 0xe8, 0x10, 0x66, 0x1, 0x46, 0x6a, 0x83, 0xd1, 0, 0x58, 0x5a, 0x1, 0x4e, 0x4c, 0x66, 0x2b, 0xc1, 0x66, 0x83, 0xda, 0, 0x66, 0x89, 0x46, 0x1c, 0x66, 0x89, 0x56, 0x1e, 0x66, 0x2d, 0x4, 0, 0x66, 0x83, 0xda, 0, 0x66, 0xf7, 0x46, 0x30, 0, 0x4, 0x74, 0x2, 0x33, 0xc9, 0x1, 0x4e, 0x8, 0x66, 0xb, 0xd2, 0xf, 0x89, 0x55, 0x1, 0, 0, 0x66, 0xf7, 0x46, 0x30, 0, 0x40, 0xf, 0x84, 0xa3, 0, 0, 0, 0x66, 0x83, 0x7e, 0x38, 0, 0xf, 0x84, 0x98, 0, 0, 0, 0x66, 0x83, 0x7e, 0x38, 0xff, 0x74, 0x5, 0x66, 0x83, 0x6e, 0x38, 0x1, 0x66, 0xf7, 0x46, 0x30, 0x40, 0, 0x74, 0x1d, 0x66, 0x83, 0x7e, 0x38, 0, 0x74, 0xe, 0x8b, 0x46, 0x10, 0x89, 0x46, 0x8, 0x8b, 0x46, 0x20, 0x89, 0x46, 0x1c, 0xeb, 0x13, 0x8b, 0x46, 0x2c, 0x89, 0x46, 0x1c, 0xeb, 0xb, 0x8b, 0x6, 0x89, 0x46, 0x8, 0x8b, 0x46, 0x18, 0x89, 0x46, 0x1c, 0x83, 0x7e, 0x3c, 0, 0x74, 0x4b, 0x66, 0xf7, 0x46, 0x30, 0x4, 0, 0x75, 0x43, 0x60, 0xf, 0xa8, 0x6, 0x1e, 0x66, 0x8e, 0x5, 0x9e, 0x13, 0, 0, 0x1e, 0xf, 0xa9, 0x65, 0x66, 0x8e, 0x1d, 0x6e, 0x13, 0, 0, 0x8b, 0xc6, 0x2d, 0xd0, 0x3, 0, 0, 0x33, 0xd2, 0x66, 0xbb, 0x6c, 0, 0x66, 0xf7, 0xf3, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x65, 0xf, 0xb7, 0x5, 0x88, 0x13, 0, 0, 0x50, 0x65, 0xff, 0x5e, 0x3c, 0x83, 0xc4, 0xc, 0x1f, 0x7, 0xf, 0xa9, 0x61, 0x8b, 0x1d, 0x62, 0x13, 0, 0, 0xe9, 0x5d, 0xfd, 0xff, 0xff, 0x83, 0x7e, 0x3c, 0, 0x74, 0x4b, 0x66, 0xf7, 0x46, 0x30, 0x8, 0, 0x75, 0x43, 0x60, 0xf, 0xa8, 0x6, 0x1e, 0x66, 0x8e, 0x5, 0x9e, 0x13, 0, 0, 0x1e, 0xf, 0xa9, 0x65, 0x66, 0x8e, 0x1d, 0x6e, 0x13, 0, 0, 0x8b, 0xc6, 0x2d, 0xd0, 0x3, 0, 0, 0x33, 0xd2, 0x66, 0xbb, 0x6c, 0, 0x66, 0xf7, 0xf3, 0x50, 0xb8, 0, 0, 0, 0, 0x50, 0x65, 0xf, 0xb7, 0x5, 0x88, 0x13, 0, 0, 0x50, 0x65, 0xff, 0x5e, 0x3c, 0x83, 0xc4, 0xc, 0x1f, 0x7, 0xf, 0xa9, 0x61, 0x66, 0xf7, 0x46, 0x30, 0, 0x8, 0x74, 0x11, 0x66, 0x81, 0x66, 0x30, 0xff, 0xf7, 0x8b, 0x1d, 0x62, 0x13, 0, 0, 0xe9, 0xf3, 0xfc, 0xff, 0xff, 0x66, 0x81, 0x4e, 0x30, 0, 0x10, 0x8b, 0x1d, 0x2c, 0x13, 0, 0, 0xc1, 0xe3, 0x2, 0x81, 0xc3, 0xac, 0x12, 0, 0, 0x89, 0x33, 0xff, 0x5, 0x2c, 0x13, 0, 0, 0xf, 0xb7, 0x46, 0x3a, 0x2b, 0x5, 0x30, 0x13, 0, 0, 0x73, 0xf, 0xa1, 0x66, 0x13, 0, 0, 0x2b, 0x5, 0x30, 0x13, 0, 0, 0x66, 0x3, 0x46, 0x3a, 0x66, 0x89, 0x46, 0x24, 0x8b, 0x1d, 0x62, 0x13, 0, 0, 0x83, 0xc3, 0x4, 0xff, 0xd, 0xa8, 0x12, 0, 0, 0x83, 0x3d, 0xa8, 0x12, 0, 0, 0, 0x74, 0x5, 0xe9, 0x9a, 0xfc, 0xff, 0xff, 0xa1, 0x30, 0x13, 0, 0, 0xa3, 0x54, 0x13, 0, 0, 0x5d, 0x5f, 0x5e, 0x7, 0x1f, 0xff, 0xd, 0x6a, 0x13, 0, 0, 0x61, 0xf, 0xa9, 0xf, 0xa1, 0x7, 0x1f, 0xcb}))
    II(0x1028b52e, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028b52f, 0x1)   pushd(es);                            /* push es */
    II(0x1028b530, 0x2)   pushd(fs);                            /* push fs */
    II(0x1028b532, 0x2)   pushd(gs);                            /* push gs */
    II(0x1028b534, 0x1)   pushad();                             /* pushad */
    II(0x1028b535, 0x4)   mov(ax, 0x2e8);                       /* mov ax, 0x2e8 */
    II(0x1028b539, 0x3)   mov(ds, ax);                          /* mov ds, ax */
    II(0x1028b53c, 0x7)   cmp(memd_a32(ds, 0x136a), 0);         /* cmp dword [0x136a], 0x0 */
    II(0x1028b543, 0x6)   jnzd(0x1028baf1, 0x5a8);              /* jnz dword 0x1028baf1 */
    II(0x1028b549, 0x6)   inc(memd_a32(ds, 0x136a));            /* inc dword [0x136a] */
    II(0x1028b54f, 0x7)   mov(memw_a32(ds, 0x139e), es);        /* mov [0x139e], es */
    II(0x1028b556, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028b557, 0x1)   pushd(es);                            /* push es */
    II(0x1028b558, 0x1)   pushd(esi);                           /* push esi */
    II(0x1028b559, 0x1)   pushd(edi);                           /* push edi */
    II(0x1028b55a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1028b55b, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028b55c, 0x2)   popd(fs);                             /* pop fs */
    II(0x1028b55e, 0x2)   xor_(edi, edi);                       /* xor edi, edi */
    II(0x1028b560, 0x5)   mov(esi, 0x3d0);                      /* mov esi, 0x3d0 */
    II(0x1028b565, 0x5)   mov(ebx, 0x1228);                     /* mov ebx, 0x1228 */
    II(0x1028b56a, 0xa)   mov(memd_a32(ds, 0x12a8), 0);         /* mov dword [0x12a8], 0x0 */
    II(0x1028b574, 0x5)   mov(ecx, 0x20);                       /* mov ecx, 0x20 */
l_0x1028b579:
    II(0x1028b579, 0x6)   test(memw_a32(ds, esi + 0x30), 0x8000); /* test word [esi+0x30], 0x8000 */
    II(0x1028b57f, 0x2)   jzd(0x1028b594, 0x13);                /* jz 0x1028b594 */
    II(0x1028b581, 0x6)   test(memw_a32(ds, esi + 0x30), 0x1000); /* test word [esi+0x30], 0x1000 */
    II(0x1028b587, 0x2)   jnzd(0x1028b594, 0xb);                /* jnz 0x1028b594 */
    II(0x1028b589, 0x2)   mov(memd_a32(ds, ebx), esi);          /* mov [ebx], esi */
    II(0x1028b58b, 0x3)   add(ebx, 0x4);                        /* add ebx, 0x4 */
    II(0x1028b58e, 0x6)   inc(memd_a32(ds, 0x12a8));            /* inc dword [0x12a8] */
l_0x1028b594:
    II(0x1028b594, 0x3)   add(esi, 0x6c);                       /* add esi, 0x6c */
    II(0x1028b597, 0x1)   dec(ecx);                             /* dec ecx */
    II(0x1028b598, 0x2)   jnzd(0x1028b579, -0x21);              /* jnz 0x1028b579 */
    II(0x1028b59a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1028b59c, 0x5)   mov(edx, 0xc);                        /* mov edx, 0xc */
    II(0x1028b5a1, 0x2)   xor_(al, al);                         /* xor al, al */
    II(0x1028b5a3, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x1028b5a4, 0x2)   jmpd(0x1028b5a6, 0);                  /* jmp 0x1028b5a6 */
l_0x1028b5a6:
    II(0x1028b5a6, 0x7)   movzx(edx, memw_a32(ds, 0x14be));     /* movzx edx, word [0x14be] */
    II(0x1028b5ad, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x1028b5ae, 0x2)   jmpd(0x1028b5b0, 0);                  /* jmp 0x1028b5b0 */
l_0x1028b5b0:
    II(0x1028b5b0, 0x2)   xchg(ah, al);                         /* xchg ah, al */
    II(0x1028b5b2, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x1028b5b3, 0x2)   jmpd(0x1028b5b5, 0);                  /* jmp 0x1028b5b5 */
l_0x1028b5b5:
    II(0x1028b5b5, 0x2)   xchg(ah, al);                         /* xchg ah, al */
    II(0x1028b5b7, 0x1)   inc(eax);                             /* inc eax */
    II(0x1028b5b8, 0x3)   cmp(edx, 0x7);                        /* cmp edx, 0x7 */
    II(0x1028b5bb, 0x2)   jbed(0x1028b5bf, 0x2);                /* jbe 0x1028b5bf */
    II(0x1028b5bd, 0x2)   add(eax, eax);                        /* add eax, eax */
l_0x1028b5bf:
    II(0x1028b5bf, 0x6)   cmp(eax, memd_a32(ds, 0x1366));       /* cmp eax, [0x1366] */
    II(0x1028b5c5, 0x2)   jbed(0x1028b5e8, 0x21);               /* jbe 0x1028b5e8 */
    II(0x1028b5c7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1028b5c9, 0x5)   mov(edx, 0xc);                        /* mov edx, 0xc */
    II(0x1028b5ce, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x1028b5cf, 0x2)   jmpd(0x1028b5d1, 0);                  /* jmp 0x1028b5d1 */
l_0x1028b5d1:
    II(0x1028b5d1, 0x5)   mov(eax, memd_a32(ds, 0x1366));       /* mov eax, [0x1366] */
    II(0x1028b5d6, 0x1)   dec(eax);                             /* dec eax */
    II(0x1028b5d7, 0x7)   movzx(edx, memw_a32(ds, 0x14be));     /* movzx edx, word [0x14be] */
    II(0x1028b5de, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x1028b5df, 0x2)   jmpd(0x1028b5e1, 0);                  /* jmp 0x1028b5e1 */
l_0x1028b5e1:
    II(0x1028b5e1, 0x2)   xchg(ah, al);                         /* xchg ah, al */
    II(0x1028b5e3, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x1028b5e4, 0x2)   jmpd(0x1028b5e6, 0);                  /* jmp 0x1028b5e6 */
l_0x1028b5e6:
    II(0x1028b5e6, 0x2)   xchg(ah, al);                         /* xchg ah, al */
l_0x1028b5e8:
    II(0x1028b5e8, 0x6)   mov(ebx, memd_a32(ds, 0x1366));       /* mov ebx, [0x1366] */
    II(0x1028b5ee, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x1028b5f0, 0x6)   and_(ebx, 0xfffc);                    /* and ebx, 0xfffc */
    II(0x1028b5f6, 0x2)   or_(ebx, ebx);                        /* or ebx, ebx */
    II(0x1028b5f8, 0x2)   jnzd(0x1028b5fd, 0x3);                /* jnz 0x1028b5fd */
    II(0x1028b5fa, 0x3)   add(ebx, 0x20);                       /* add ebx, 0x20 */
l_0x1028b5fd:
    II(0x1028b5fd, 0x6)   mov(memd_a32(ds, 0x1330), ebx);       /* mov [0x1330], ebx */
    II(0x1028b603, 0x6)   sub(ebx, memd_a32(ds, 0x1354));       /* sub ebx, [0x1354] */
    II(0x1028b609, 0x6)   jaed(0x1028b621, 0x12);               /* jae dword 0x1028b621 */
    II(0x1028b60f, 0x6)   mov(ebx, memd_a32(ds, 0x1366));       /* mov ebx, [0x1366] */
    II(0x1028b615, 0x6)   sub(ebx, memd_a32(ds, 0x1354));       /* sub ebx, [0x1354] */
    II(0x1028b61b, 0x6)   add(ebx, memd_a32(ds, 0x1330));       /* add ebx, [0x1330] */
l_0x1028b621:
    II(0x1028b621, 0x6)   mov(memd_a32(ds, 0x1338), ebx);       /* mov [0x1338], ebx */
    II(0x1028b627, 0x6)   mov(memd_a32(ds, 0x133c), ebx);       /* mov [0x133c], ebx */
    II(0x1028b62d, 0x3)   shr(ebx, 0x3);                        /* shr ebx, 0x3 */
    II(0x1028b630, 0x6)   and_(ebx, 0xfffc);                    /* and ebx, 0xfffc */
    II(0x1028b636, 0x6)   add(memd_a32(ds, 0x133c), ebx);       /* add [0x133c], ebx */
    II(0x1028b63c, 0x5)   mov(eax, memd_a32(ds, 0x1330));       /* mov eax, [0x1330] */
    II(0x1028b641, 0x5)   add(eax, 0x400);                      /* add eax, 0x400 */
    II(0x1028b646, 0x6)   cmp(eax, memd_a32(ds, 0x1366));       /* cmp eax, [0x1366] */
    II(0x1028b64c, 0x2)   jbed(0x1028b654, 0x6);                /* jbe 0x1028b654 */
    II(0x1028b64e, 0x6)   sub(eax, memd_a32(ds, 0x1366));       /* sub eax, [0x1366] */
l_0x1028b654:
    II(0x1028b654, 0x5)   mov(memd_a32(ds, 0x135e), eax);       /* mov [0x135e], eax */
    II(0x1028b659, 0x7)   cmp(memd_a32(ds, 0x132c), 0);         /* cmp dword [0x132c], 0x0 */
    II(0x1028b660, 0x6)   jzd(0x1028b6ff, 0x99);                /* jz dword 0x1028b6ff */
    II(0x1028b666, 0x5)   mov(eax, memd_a32(ds, 0x1338));       /* mov eax, [0x1338] */
    II(0x1028b66b, 0x5)   mov(ebx, 0x12ac);                     /* mov ebx, 0x12ac */
    II(0x1028b670, 0x6)   mov(ecx, memd_a32(ds, 0x132c));       /* mov ecx, [0x132c] */
l_0x1028b676:
    II(0x1028b676, 0x2)   mov(esi, memd_a32(ds, ebx));          /* mov esi, [ebx] */
    II(0x1028b678, 0x4)   sub(memw_a32(ds, esi + 0x24), ax);    /* sub [esi+0x24], ax */
    II(0x1028b67c, 0x2)   jaed(0x1028b6f5, 0x77);               /* jae 0x1028b6f5 */
    II(0x1028b67e, 0x6)   mov(memw_a32(ds, esi + 0x24), 0);     /* mov word [esi+0x24], 0x0 */
    II(0x1028b684, 0x6)   and_(memw_a32(ds, esi + 0x30), 0x6fff); /* and word [esi+0x30], 0x6fff */
    II(0x1028b68a, 0x4)   cmp(memd_a32(ds, esi + 0x3c), 0);     /* cmp dword [esi+0x3c], 0x0 */
    II(0x1028b68e, 0x2)   jzd(0x1028b6db, 0x4b);                /* jz 0x1028b6db */
    II(0x1028b690, 0x6)   test(memw_a32(ds, esi + 0x30), 0x2);  /* test word [esi+0x30], 0x2 */
    II(0x1028b696, 0x2)   jnzd(0x1028b6db, 0x43);               /* jnz 0x1028b6db */
    II(0x1028b698, 0x1)   pushad();                             /* pushad */
    II(0x1028b699, 0x2)   pushd(gs);                            /* push gs */
    II(0x1028b69b, 0x1)   pushd(es);                            /* push es */
    II(0x1028b69c, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028b69d, 0x7)   mov(es, memw_a32(ds, 0x139e));        /* mov es, [0x139e] */
    II(0x1028b6a4, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028b6a5, 0x2)   popd(gs);                             /* pop gs */
    II(0x1028b6a7, 0x8)   mov(ds, memw_a32(gs, 0x136e));        /* mov ds, [gs:0x136e] */
    II(0x1028b6af, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1028b6b1, 0x5)   sub(eax, 0x3d0);                      /* sub eax, 0x3d0 */
    II(0x1028b6b6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1028b6b8, 0x4)   mov(bx, 0x6c);                        /* mov bx, 0x6c */
    II(0x1028b6bc, 0x3)   div(bx);                              /* div bx */
    II(0x1028b6bf, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028b6c0, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1028b6c5, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028b6c6, 0x8)   movzx(eax, memw_a32(gs, 0x1388));     /* movzx eax, word [gs:0x1388] */
    II(0x1028b6ce, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028b6cf, 0x4)   calld_a32_far_ind(gs, esi + 0x3c);    /* call dword far [gs:esi+0x3c] */
    II(0x1028b6d3, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x1028b6d6, 0x1)   popd(ds);                             /* pop ds */
    II(0x1028b6d7, 0x1)   popd(es);                             /* pop es */
    II(0x1028b6d8, 0x2)   popd(gs);                             /* pop gs */
    II(0x1028b6da, 0x1)   popad();                              /* popad */
l_0x1028b6db:
    II(0x1028b6db, 0x1)   pushd(es);                            /* push es */
    II(0x1028b6dc, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1028b6dd, 0x1)   pushd(esi);                           /* push esi */
    II(0x1028b6de, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028b6df, 0x1)   popd(es);                             /* pop es */
    II(0x1028b6e0, 0x2)   mov(esi, ebx);                        /* mov esi, ebx */
    II(0x1028b6e2, 0x2)   mov(edi, ebx);                        /* mov edi, ebx */
    II(0x1028b6e4, 0x3)   add(esi, 0x4);                        /* add esi, 0x4 */
    II(0x1028b6e7, 0x1)   cld();                                /* cld */
    II(0x1028b6e8, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */
    II(0x1028b6ea, 0x1)   popd(esi);                            /* pop esi */
    II(0x1028b6eb, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1028b6ec, 0x1)   popd(es);                             /* pop es */
    II(0x1028b6ed, 0x6)   dec(memd_a32(ds, 0x132c));            /* dec dword [0x132c] */
    II(0x1028b6f3, 0x2)   jmpd(0x1028b6f8, 0x3);                /* jmp 0x1028b6f8 */
l_0x1028b6f5:
    II(0x1028b6f5, 0x3)   add(ebx, 0x4);                        /* add ebx, 0x4 */
l_0x1028b6f8:
    II(0x1028b6f8, 0x1)   dec(ecx);                             /* dec ecx */
    II(0x1028b6f9, 0x6)   jnzd(0x1028b676, -0x89);              /* jnz dword 0x1028b676 */
l_0x1028b6ff:
    II(0x1028b6ff, 0x7)   mov(es, memw_a32(ds, 0x135c));        /* mov es, [0x135c] */
    II(0x1028b706, 0x2)   xor_(edi, edi);                       /* xor edi, edi */
    II(0x1028b708, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1028b70a, 0x6)   mov(edi, memd_a32(ds, 0x1354));       /* mov edi, [0x1354] */
    II(0x1028b710, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1028b712, 0x6)   mov(ecx, memd_a32(ds, 0x1330));       /* mov ecx, [0x1330] */
    II(0x1028b718, 0x2)   sub(ecx, edi);                        /* sub ecx, edi */
    II(0x1028b71a, 0x2)   jbd(0x1028b730, 0x14);                /* jb 0x1028b730 */
    II(0x1028b71c, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x1028b71e, 0x3)   shr(ecx, 0x2);                        /* shr ecx, 0x2 */
    II(0x1028b721, 0x1)   cld();                                /* cld */
    II(0x1028b722, 0x2)   rep_a32 stosd_a32();                  /* rep stosd */
    II(0x1028b724, 0x2)   mov(ecx, ebx);                        /* mov ecx, ebx */
    II(0x1028b726, 0x3)   and_(ecx, 0x3);                       /* and ecx, 0x3 */
    II(0x1028b729, 0x2)   rep_a32 stosb_a32();                  /* rep stosb */
    II(0x1028b72b, 0x2)   jmpd(0x1028b75d, 0x30);               /* jmp 0x1028b75d */
//    II(0x1028b72d, 0x3)   /* Недостижимый код. */
l_0x1028b730:
    II(0x1028b730, 0x6)   mov(ecx, memd_a32(ds, 0x1366));       /* mov ecx, [0x1366] */
    II(0x1028b736, 0x2)   sub(ecx, edi);                        /* sub ecx, edi */
    II(0x1028b738, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x1028b73a, 0x3)   shr(ecx, 0x2);                        /* shr ecx, 0x2 */
    II(0x1028b73d, 0x1)   cld();                                /* cld */
    II(0x1028b73e, 0x2)   rep_a32 stosd_a32();                  /* rep stosd */
    II(0x1028b740, 0x2)   mov(ecx, ebx);                        /* mov ecx, ebx */
    II(0x1028b742, 0x3)   and_(ecx, 0x3);                       /* and ecx, 0x3 */
    II(0x1028b745, 0x2)   rep_a32 stosb_a32();                  /* rep stosb */
    II(0x1028b747, 0x2)   xor_(edi, edi);                       /* xor edi, edi */
    II(0x1028b749, 0x6)   mov(ecx, memd_a32(ds, 0x1330));       /* mov ecx, [0x1330] */
    II(0x1028b74f, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x1028b751, 0x3)   shr(ecx, 0x2);                        /* shr ecx, 0x2 */
    II(0x1028b754, 0x2)   rep_a32 stosd_a32();                  /* rep stosd */
    II(0x1028b756, 0x2)   mov(ecx, ebx);                        /* mov ecx, ebx */
    II(0x1028b758, 0x3)   and_(ecx, 0x3);                       /* and ecx, 0x3 */
    II(0x1028b75b, 0x2)   rep_a32 stosb_a32();                  /* rep stosb */
l_0x1028b75d:
    II(0x1028b75d, 0x7)   cmp(memd_a32(ds, 0x12a8), 0);         /* cmp dword [0x12a8], 0x0 */
    II(0x1028b764, 0x6)   jzd(0x1028badc, 0x372);               /* jz dword 0x1028badc */
    II(0x1028b76a, 0x7)   mov(es, memw_a32(ds, 0x135c));        /* mov es, [0x135c] */
    II(0x1028b771, 0x5)   mov(ebx, 0x1228);                     /* mov ebx, 0x1228 */
l_0x1028b776:
    II(0x1028b776, 0x6)   mov(memd_a32(ds, 0x1362), ebx);       /* mov [0x1362], ebx */
    II(0x1028b77c, 0x2)   mov(esi, memd_a32(ds, ebx));          /* mov esi, [ebx] */
    II(0x1028b77e, 0x4)   movzx(eax, memw_a32(ds, esi + 0x30)); /* movzx eax, word [esi+0x30] */
    II(0x1028b782, 0x5)   and_(eax, 0x7b0);                     /* and eax, 0x7b0 */
    II(0x1028b787, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x1028b78a, 0x3)   or_(al, memb_a32(ds, esi + 0x36));    /* or al, [esi+0x36] */
    II(0x1028b78d, 0xa)   mov(memd_a32(ds, 0x13a4), 0);         /* mov dword [0x13a4], 0x0 */
    II(0x1028b797, 0xa)   mov(memd_a32(ds, 0x13a0), 0);         /* mov dword [0x13a0], 0x0 */
    II(0x1028b7a1, 0x5)   mov(edi, 0x13a8);                     /* mov edi, 0x13a8 */
    II(0x1028b7a6, 0x5)   mov(ecx, 0x1f);                       /* mov ecx, 0x1f */
l_0x1028b7ab:
    II(0x1028b7ab, 0x3)   cmp(memd_a32(ds, edi), 0);            /* cmp dword [edi], 0x0 */
    II(0x1028b7ae, 0x2)   jzd(0x1028b7c0, 0x10);                /* jz 0x1028b7c0 */
    II(0x1028b7b0, 0x2)   cmp(memd_a32(ds, edi), eax);          /* cmp [edi], eax */
    II(0x1028b7b2, 0x2)   jzd(0x1028b7c8, 0x14);                /* jz 0x1028b7c8 */
    II(0x1028b7b4, 0x3)   add(edi, 0x4);                        /* add edi, 0x4 */
    II(0x1028b7b7, 0x6)   inc(memd_a32(ds, 0x13a4));            /* inc dword [0x13a4] */
    II(0x1028b7bd, 0x1)   dec(ecx);                             /* dec ecx */
    II(0x1028b7be, 0x2)   jnzd(0x1028b7ab, -0x15);              /* jnz 0x1028b7ab */
l_0x1028b7c0:
    II(0x1028b7c0, 0x2)   mov(memd_a32(ds, edi), eax);          /* mov [edi], eax */
    II(0x1028b7c2, 0x6)   inc(memd_a32(ds, 0x13a0));            /* inc dword [0x13a0] */
l_0x1028b7c8:
    II(0x1028b7c8, 0x5)   mov(edx, 0x2104);                     /* mov edx, 0x2104 */
    II(0x1028b7cd, 0x5)   mov(eax, memd_a32(ds, 0x13a4));       /* mov eax, [0x13a4] */
    II(0x1028b7d2, 0x5)   mov(ebx, 0x200);                      /* mov ebx, 0x200 */
    II(0x1028b7d7, 0x2)   xchg(edx, ecx);                       /* xchg edx, ecx */
    II(0x1028b7d9, 0x3)   mul(bx);                              /* mul bx */
    II(0x1028b7dc, 0x2)   xchg(edx, ecx);                       /* xchg edx, ecx */
    II(0x1028b7de, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1028b7e0, 0x6)   mov(memd_a32(ds, 0x1374), edx);       /* mov [0x1374], edx */
    II(0x1028b7e6, 0x7)   cmp(memd_a32(ds, 0x13a0), 0);         /* cmp dword [0x13a0], 0x0 */
    II(0x1028b7ed, 0x2)   jzd(0x1028b7f9, 0xa);                 /* jz 0x1028b7f9 */
    II(0x1028b7ef, 0x5)   calld(0x1028bcf9, 0x505);             /* call 0x1028bcf9 */
    II(0x1028b7f4, 0x5)   calld(0x1028c020, 0x827);             /* call 0x1028c020 */
l_0x1028b7f9:
    II(0x1028b7f9, 0x6)   test(memw_a32(ds, esi + 0x30), 0x2000); /* test word [esi+0x30], 0x2000 */
    II(0x1028b7ff, 0x2)   jzd(0x1028b810, 0xf);                 /* jz 0x1028b810 */
    II(0x1028b801, 0x6)   and_(memw_a32(ds, esi + 0x30), 0xdfff); /* and word [esi+0x30], 0xdfff */
    II(0x1028b807, 0x5)   mov(eax, memd_a32(ds, 0x135e));       /* mov eax, [0x135e] */
    II(0x1028b80c, 0x4)   mov(memw_a32(ds, esi + 0x3a), ax);    /* mov [esi+0x3a], ax */
l_0x1028b810:
    II(0x1028b810, 0x4)   movzx(eax, memw_a32(ds, esi + 0x3a)); /* movzx eax, word [esi+0x3a] */
    II(0x1028b814, 0x2)   mov(edi, eax);                        /* mov edi, eax */
    II(0x1028b816, 0x6)   mov(edx, memd_a32(ds, 0x133c));       /* mov edx, [0x133c] */
    II(0x1028b81c, 0x6)   mov(memd_a32(ds, 0x1340), edx);       /* mov [0x1340], edx */
    II(0x1028b822, 0xa)   mov(memd_a32(ds, 0x1348), 0);         /* mov dword [0x1348], 0x0 */
    II(0x1028b82c, 0x6)   add(eax, memd_a32(ds, 0x133c));       /* add eax, [0x133c] */
    II(0x1028b832, 0x6)   cmp(eax, memd_a32(ds, 0x1366));       /* cmp eax, [0x1366] */
    II(0x1028b838, 0x6)   jbed(0x1028b853, 0x15);               /* jbe dword 0x1028b853 */
    II(0x1028b83e, 0x6)   mov(edx, memd_a32(ds, 0x1366));       /* mov edx, [0x1366] */
    II(0x1028b844, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1028b846, 0x5)   mov(memd_a32(ds, 0x1348), eax);       /* mov [0x1348], eax */
    II(0x1028b84b, 0x2)   sub(edx, edi);                        /* sub edx, edi */
    II(0x1028b84d, 0x6)   mov(memd_a32(ds, 0x1340), edx);       /* mov [0x1340], edx */
l_0x1028b853:
    II(0x1028b853, 0x5)   cmp(memw_a32(ds, esi + 0x1e), 0);     /* cmp word [esi+0x1e], 0x0 */
    II(0x1028b858, 0x2)   jnzd(0x1028b8bc, 0x62);               /* jnz 0x1028b8bc */
    II(0x1028b85a, 0x4)   movzx(ebx, memw_a32(ds, esi + 0x1c)); /* movzx ebx, word [esi+0x1c] */
    II(0x1028b85e, 0x5)   cmp(memw_a32(ds, esi + 0x36), 0x3);   /* cmp word [esi+0x36], 0x3 */
    II(0x1028b863, 0x2)   jzd(0x1028b867, 0x2);                 /* jz 0x1028b867 */
    II(0x1028b865, 0x2)   add(ebx, ebx);                        /* add ebx, ebx */
l_0x1028b867:
    II(0x1028b867, 0x6)   test(memw_a32(ds, esi + 0x30), 0x20); /* test word [esi+0x30], 0x20 */
    II(0x1028b86d, 0x2)   jzd(0x1028b871, 0x2);                 /* jz 0x1028b871 */
    II(0x1028b86f, 0x2)   shl(ebx, 0x1);                        /* shl ebx, 1 */
l_0x1028b871:
    II(0x1028b871, 0x6)   test(memw_a32(ds, esi + 0x30), 0x400); /* test word [esi+0x30], 0x400 */
    II(0x1028b877, 0x2)   jzd(0x1028b88e, 0x15);                /* jz 0x1028b88e */
    II(0x1028b879, 0x1)   pushd(edx);                           /* push edx */
    II(0x1028b87a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028b87b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1028b87d, 0x3)   mov(ebx, memd_a32(ds, esi + 0x44));   /* mov ebx, [esi+0x44] */
    II(0x1028b880, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1028b882, 0x3)   shr(edx, 0x10);                       /* shr edx, 0x10 */
    II(0x1028b885, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1028b888, 0x2)   div(ebx);                             /* div ebx */
    II(0x1028b88a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1028b88c, 0x1)   popd(eax);                            /* pop eax */
    II(0x1028b88d, 0x1)   popd(edx);                            /* pop edx */
l_0x1028b88e:
    II(0x1028b88e, 0x6)   cmp(ebx, memd_a32(ds, 0x133c));       /* cmp ebx, [0x133c] */
    II(0x1028b894, 0x2)   jaed(0x1028b8bc, 0x26);               /* jae 0x1028b8bc */
l_0x1028b896:
    II(0x1028b896, 0x6)   cmp(ebx, memd_a32(ds, 0x1340));       /* cmp ebx, [0x1340] */
    II(0x1028b89c, 0x2)   jad(0x1028b8b0, 0x12);                /* ja 0x1028b8b0 */
    II(0x1028b89e, 0xa)   mov(memd_a32(ds, 0x1348), 0);         /* mov dword [0x1348], 0x0 */
    II(0x1028b8a8, 0x6)   mov(memd_a32(ds, 0x1340), ebx);       /* mov [0x1340], ebx */
    II(0x1028b8ae, 0x2)   jmpd(0x1028b8bc, 0xc);                /* jmp 0x1028b8bc */
l_0x1028b8b0:
    II(0x1028b8b0, 0x6)   sub(ebx, memd_a32(ds, 0x1340));       /* sub ebx, [0x1340] */
    II(0x1028b8b6, 0x6)   mov(memd_a32(ds, 0x1348), ebx);       /* mov [0x1348], ebx */
l_0x1028b8bc:
    II(0x1028b8bc, 0x6)   mov(ebx, memd_a32(ds, 0x1354));       /* mov ebx, [0x1354] */
    II(0x1028b8c2, 0x2)   sub(ebx, edi);                        /* sub ebx, edi */
    II(0x1028b8c4, 0x2)   jaed(0x1028b8d4, 0xe);                /* jae 0x1028b8d4 */
    II(0x1028b8c6, 0x6)   mov(ebx, memd_a32(ds, 0x1366));       /* mov ebx, [0x1366] */
    II(0x1028b8cc, 0x2)   sub(ebx, edi);                        /* sub ebx, edi */
    II(0x1028b8ce, 0x6)   add(ebx, memd_a32(ds, 0x1354));       /* add ebx, [0x1354] */
l_0x1028b8d4:
    II(0x1028b8d4, 0x5)   mov(eax, memd_a32(ds, 0x1340));       /* mov eax, [0x1340] */
    II(0x1028b8d9, 0x6)   add(eax, memd_a32(ds, 0x1348));       /* add eax, [0x1348] */
    II(0x1028b8df, 0x2)   cmp(ebx, eax);                        /* cmp ebx, eax */
    II(0x1028b8e1, 0x2)   jbd(0x1028b896, -0x4d);               /* jb 0x1028b896 */
    II(0x1028b8e3, 0x6)   mov(edx, memd_a32(ds, 0x1374));       /* mov edx, [0x1374] */
    II(0x1028b8e9, 0x2)   calld_abs(edx);                       /* call edx */
    II(0x1028b8eb, 0x4)   mov(memw_a32(ds, esi + 0x3a), di);    /* mov [esi+0x3a], di */
    II(0x1028b8ef, 0x4)   movzx(eax, memw_a32(ds, esi + 0x1c)); /* movzx eax, word [esi+0x1c] */
    II(0x1028b8f3, 0x4)   movzx(edx, memw_a32(ds, esi + 0x1e)); /* movzx edx, word [esi+0x1e] */
    II(0x1028b8f7, 0x6)   mov(ecx, memd_a32(ds, 0x1340));       /* mov ecx, [0x1340] */
    II(0x1028b8fd, 0x6)   add(ecx, memd_a32(ds, 0x1348));       /* add ecx, [0x1348] */
    II(0x1028b903, 0x6)   test(memw_a32(ds, esi + 0x30), 0x20); /* test word [esi+0x30], 0x20 */
    II(0x1028b909, 0x2)   jzd(0x1028b90d, 0x2);                 /* jz 0x1028b90d */
    II(0x1028b90b, 0x2)   shr(ecx, 0x1);                        /* shr ecx, 1 */
l_0x1028b90d:
    II(0x1028b90d, 0x5)   cmp(memw_a32(ds, esi + 0x36), 0x3);   /* cmp word [esi+0x36], 0x3 */
    II(0x1028b912, 0x2)   jzd(0x1028b916, 0x2);                 /* jz 0x1028b916 */
    II(0x1028b914, 0x2)   shr(ecx, 0x1);                        /* shr ecx, 1 */
l_0x1028b916:
    II(0x1028b916, 0x6)   test(memw_a32(ds, esi + 0x30), 0x400); /* test word [esi+0x30], 0x400 */
    II(0x1028b91c, 0x2)   jzd(0x1028b93a, 0x1c);                /* jz 0x1028b93a */
    II(0x1028b91e, 0x1)   pushd(edx);                           /* push edx */
    II(0x1028b91f, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028b920, 0x3)   mov(ebx, memd_a32(ds, esi + 0x44));   /* mov ebx, [esi+0x44] */
    II(0x1028b923, 0x3)   movzx(eax, cx);                       /* movzx eax, cx */
    II(0x1028b926, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1028b929, 0x2)   mul(ebx);                             /* mul ebx */
    II(0x1028b92b, 0x3)   mov(cx, dx);                          /* mov cx, dx */
    II(0x1028b92e, 0x3)   shr(eax, 0x10);                       /* shr eax, 0x10 */
    II(0x1028b931, 0x4)   add(memw_a32(ds, esi + 0x6a), ax);    /* add [esi+0x6a], ax */
    II(0x1028b935, 0x3)   adc(ecx, 0);                          /* adc ecx, 0x0 */
    II(0x1028b938, 0x1)   popd(eax);                            /* pop eax */
    II(0x1028b939, 0x1)   popd(edx);                            /* pop edx */
l_0x1028b93a:
    II(0x1028b93a, 0x3)   add(memd_a32(ds, esi + 0x4c), ecx);   /* add [esi+0x4c], ecx */
    II(0x1028b93d, 0x3)   sub(ax, cx);                          /* sub ax, cx */
    II(0x1028b940, 0x4)   sbb(dx, 0);                           /* sbb dx, 0x0 */
    II(0x1028b944, 0x4)   mov(memw_a32(ds, esi + 0x1c), ax);    /* mov [esi+0x1c], ax */
    II(0x1028b948, 0x4)   mov(memw_a32(ds, esi + 0x1e), dx);    /* mov [esi+0x1e], dx */
    II(0x1028b94c, 0x4)   sub(ax, 0x4);                         /* sub ax, 0x4 */
    II(0x1028b950, 0x4)   sbb(dx, 0);                           /* sbb dx, 0x0 */
    II(0x1028b954, 0x6)   test(memw_a32(ds, esi + 0x30), 0x400); /* test word [esi+0x30], 0x400 */
    II(0x1028b95a, 0x2)   jzd(0x1028b95e, 0x2);                 /* jz 0x1028b95e */
    II(0x1028b95c, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
l_0x1028b95e:
    II(0x1028b95e, 0x3)   add(memd_a32(ds, esi + 0x8), ecx);    /* add [esi+0x8], ecx */
    II(0x1028b961, 0x3)   or_(dx, dx);                          /* or dx, dx */
    II(0x1028b964, 0x6)   jnsd(0x1028babf, 0x155);              /* jns dword 0x1028babf */
    II(0x1028b96a, 0x6)   test(memw_a32(ds, esi + 0x30), 0x4000); /* test word [esi+0x30], 0x4000 */
    II(0x1028b970, 0x6)   jzd(0x1028ba19, 0xa3);                /* jz dword 0x1028ba19 */
    II(0x1028b976, 0x5)   cmp(memw_a32(ds, esi + 0x38), 0);     /* cmp word [esi+0x38], 0x0 */
    II(0x1028b97b, 0x6)   jzd(0x1028ba19, 0x98);                /* jz dword 0x1028ba19 */
    II(0x1028b981, 0x5)   cmp(memw_a32(ds, esi + 0x38), -0x1 /* 0xff */); /* cmp word [esi+0x38], 0xff */
    II(0x1028b986, 0x2)   jzd(0x1028b98d, 0x5);                 /* jz 0x1028b98d */
    II(0x1028b988, 0x5)   sub(memw_a32(ds, esi + 0x38), 0x1);   /* sub word [esi+0x38], 0x1 */
l_0x1028b98d:
    II(0x1028b98d, 0x6)   test(memw_a32(ds, esi + 0x30), 0x40); /* test word [esi+0x30], 0x40 */
    II(0x1028b993, 0x2)   jzd(0x1028b9b2, 0x1d);                /* jz 0x1028b9b2 */
    II(0x1028b995, 0x5)   cmp(memw_a32(ds, esi + 0x38), 0);     /* cmp word [esi+0x38], 0x0 */
    II(0x1028b99a, 0x2)   jzd(0x1028b9aa, 0xe);                 /* jz 0x1028b9aa */
    II(0x1028b99c, 0x3)   mov(eax, memd_a32(ds, esi + 0x10));   /* mov eax, [esi+0x10] */
    II(0x1028b99f, 0x3)   mov(memd_a32(ds, esi + 0x8), eax);    /* mov [esi+0x8], eax */
    II(0x1028b9a2, 0x3)   mov(eax, memd_a32(ds, esi + 0x20));   /* mov eax, [esi+0x20] */
    II(0x1028b9a5, 0x3)   mov(memd_a32(ds, esi + 0x1c), eax);   /* mov [esi+0x1c], eax */
    II(0x1028b9a8, 0x2)   jmpd(0x1028b9bd, 0x13);               /* jmp 0x1028b9bd */
l_0x1028b9aa:
    II(0x1028b9aa, 0x3)   mov(eax, memd_a32(ds, esi + 0x2c));   /* mov eax, [esi+0x2c] */
    II(0x1028b9ad, 0x3)   mov(memd_a32(ds, esi + 0x1c), eax);   /* mov [esi+0x1c], eax */
    II(0x1028b9b0, 0x2)   jmpd(0x1028b9bd, 0xb);                /* jmp 0x1028b9bd */
l_0x1028b9b2:
    II(0x1028b9b2, 0x2)   mov(eax, memd_a32(ds, esi));          /* mov eax, [esi] */
    II(0x1028b9b4, 0x3)   mov(memd_a32(ds, esi + 0x8), eax);    /* mov [esi+0x8], eax */
    II(0x1028b9b7, 0x3)   mov(eax, memd_a32(ds, esi + 0x18));   /* mov eax, [esi+0x18] */
    II(0x1028b9ba, 0x3)   mov(memd_a32(ds, esi + 0x1c), eax);   /* mov [esi+0x1c], eax */
l_0x1028b9bd:
    II(0x1028b9bd, 0x4)   cmp(memd_a32(ds, esi + 0x3c), 0);     /* cmp dword [esi+0x3c], 0x0 */
    II(0x1028b9c1, 0x2)   jzd(0x1028ba0e, 0x4b);                /* jz 0x1028ba0e */
    II(0x1028b9c3, 0x6)   test(memw_a32(ds, esi + 0x30), 0x4);  /* test word [esi+0x30], 0x4 */
    II(0x1028b9c9, 0x2)   jnzd(0x1028ba0e, 0x43);               /* jnz 0x1028ba0e */
    II(0x1028b9cb, 0x1)   pushad();                             /* pushad */
    II(0x1028b9cc, 0x2)   pushd(gs);                            /* push gs */
    II(0x1028b9ce, 0x1)   pushd(es);                            /* push es */
    II(0x1028b9cf, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028b9d0, 0x7)   mov(es, memw_a32(ds, 0x139e));        /* mov es, [0x139e] */
    II(0x1028b9d7, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028b9d8, 0x2)   popd(gs);                             /* pop gs */
    II(0x1028b9da, 0x8)   mov(ds, memw_a32(gs, 0x136e));        /* mov ds, [gs:0x136e] */
    II(0x1028b9e2, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1028b9e4, 0x5)   sub(eax, 0x3d0);                      /* sub eax, 0x3d0 */
    II(0x1028b9e9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1028b9eb, 0x4)   mov(bx, 0x6c);                        /* mov bx, 0x6c */
    II(0x1028b9ef, 0x3)   div(bx);                              /* div bx */
    II(0x1028b9f2, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028b9f3, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1028b9f8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028b9f9, 0x8)   movzx(eax, memw_a32(gs, 0x1388));     /* movzx eax, word [gs:0x1388] */
    II(0x1028ba01, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028ba02, 0x4)   calld_a32_far_ind(gs, esi + 0x3c);    /* call dword far [gs:esi+0x3c] */
    II(0x1028ba06, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x1028ba09, 0x1)   popd(ds);                             /* pop ds */
    II(0x1028ba0a, 0x1)   popd(es);                             /* pop es */
    II(0x1028ba0b, 0x2)   popd(gs);                             /* pop gs */
    II(0x1028ba0d, 0x1)   popad();                              /* popad */
l_0x1028ba0e:
    II(0x1028ba0e, 0x6)   mov(ebx, memd_a32(ds, 0x1362));       /* mov ebx, [0x1362] */
    II(0x1028ba14, 0x5)   jmpd(0x1028b776, -0x2a3);             /* jmp 0x1028b776 */
l_0x1028ba19:
    II(0x1028ba19, 0x4)   cmp(memd_a32(ds, esi + 0x3c), 0);     /* cmp dword [esi+0x3c], 0x0 */
    II(0x1028ba1d, 0x2)   jzd(0x1028ba6a, 0x4b);                /* jz 0x1028ba6a */
    II(0x1028ba1f, 0x6)   test(memw_a32(ds, esi + 0x30), 0x8);  /* test word [esi+0x30], 0x8 */
    II(0x1028ba25, 0x2)   jnzd(0x1028ba6a, 0x43);               /* jnz 0x1028ba6a */
    II(0x1028ba27, 0x1)   pushad();                             /* pushad */
    II(0x1028ba28, 0x2)   pushd(gs);                            /* push gs */
    II(0x1028ba2a, 0x1)   pushd(es);                            /* push es */
    II(0x1028ba2b, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028ba2c, 0x7)   mov(es, memw_a32(ds, 0x139e));        /* mov es, [0x139e] */
    II(0x1028ba33, 0x1)   pushd(ds);                            /* push ds */
    II(0x1028ba34, 0x2)   popd(gs);                             /* pop gs */
    II(0x1028ba36, 0x8)   mov(ds, memw_a32(gs, 0x136e));        /* mov ds, [gs:0x136e] */
    II(0x1028ba3e, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1028ba40, 0x5)   sub(eax, 0x3d0);                      /* sub eax, 0x3d0 */
    II(0x1028ba45, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1028ba47, 0x4)   mov(bx, 0x6c);                        /* mov bx, 0x6c */
    II(0x1028ba4b, 0x3)   div(bx);                              /* div bx */
    II(0x1028ba4e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028ba4f, 0x5)   mov(eax, 0);                          /* mov eax, 0x0 */
    II(0x1028ba54, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028ba55, 0x8)   movzx(eax, memw_a32(gs, 0x1388));     /* movzx eax, word [gs:0x1388] */
    II(0x1028ba5d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1028ba5e, 0x4)   calld_a32_far_ind(gs, esi + 0x3c);    /* call dword far [gs:esi+0x3c] */
    II(0x1028ba62, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x1028ba65, 0x1)   popd(ds);                             /* pop ds */
    II(0x1028ba66, 0x1)   popd(es);                             /* pop es */
    II(0x1028ba67, 0x2)   popd(gs);                             /* pop gs */
    II(0x1028ba69, 0x1)   popad();                              /* popad */
l_0x1028ba6a:
    II(0x1028ba6a, 0x6)   test(memw_a32(ds, esi + 0x30), 0x800); /* test word [esi+0x30], 0x800 */
    II(0x1028ba70, 0x2)   jzd(0x1028ba83, 0x11);                /* jz 0x1028ba83 */
    II(0x1028ba72, 0x6)   and_(memw_a32(ds, esi + 0x30), 0xf7ff); /* and word [esi+0x30], 0xf7ff */
    II(0x1028ba78, 0x6)   mov(ebx, memd_a32(ds, 0x1362));       /* mov ebx, [0x1362] */
    II(0x1028ba7e, 0x5)   jmpd(0x1028b776, -0x30d);             /* jmp 0x1028b776 */
l_0x1028ba83:
    II(0x1028ba83, 0x6)   or_(memw_a32(ds, esi + 0x30), 0x1000); /* or word [esi+0x30], 0x1000 */
    II(0x1028ba89, 0x6)   mov(ebx, memd_a32(ds, 0x132c));       /* mov ebx, [0x132c] */
    II(0x1028ba8f, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x1028ba92, 0x6)   add(ebx, 0x12ac);                     /* add ebx, 0x12ac */
    II(0x1028ba98, 0x2)   mov(memd_a32(ds, ebx), esi);          /* mov [ebx], esi */
    II(0x1028ba9a, 0x6)   inc(memd_a32(ds, 0x132c));            /* inc dword [0x132c] */
    II(0x1028baa0, 0x4)   movzx(eax, memw_a32(ds, esi + 0x3a)); /* movzx eax, word [esi+0x3a] */
    II(0x1028baa4, 0x6)   sub(eax, memd_a32(ds, 0x1330));       /* sub eax, [0x1330] */
    II(0x1028baaa, 0x2)   jaed(0x1028babb, 0xf);                /* jae 0x1028babb */
    II(0x1028baac, 0x5)   mov(eax, memd_a32(ds, 0x1366));       /* mov eax, [0x1366] */
    II(0x1028bab1, 0x6)   sub(eax, memd_a32(ds, 0x1330));       /* sub eax, [0x1330] */
    II(0x1028bab7, 0x4)   add(ax, memw_a32(ds, esi + 0x3a));    /* add ax, [esi+0x3a] */
l_0x1028babb:
    II(0x1028babb, 0x4)   mov(memw_a32(ds, esi + 0x24), ax);    /* mov [esi+0x24], ax */
l_0x1028babf:
    II(0x1028babf, 0x6)   mov(ebx, memd_a32(ds, 0x1362));       /* mov ebx, [0x1362] */
    II(0x1028bac5, 0x3)   add(ebx, 0x4);                        /* add ebx, 0x4 */
    II(0x1028bac8, 0x6)   dec(memd_a32(ds, 0x12a8));            /* dec dword [0x12a8] */
    II(0x1028bace, 0x7)   cmp(memd_a32(ds, 0x12a8), 0);         /* cmp dword [0x12a8], 0x0 */
    II(0x1028bad5, 0x2)   jzd(0x1028badc, 0x5);                 /* jz 0x1028badc */
    II(0x1028bad7, 0x5)   jmpd(0x1028b776, -0x366);             /* jmp 0x1028b776 */
l_0x1028badc:
    II(0x1028badc, 0x5)   mov(eax, memd_a32(ds, 0x1330));       /* mov eax, [0x1330] */
    II(0x1028bae1, 0x5)   mov(memd_a32(ds, 0x1354), eax);       /* mov [0x1354], eax */
    II(0x1028bae6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1028bae7, 0x1)   popd(edi);                            /* pop edi */
    II(0x1028bae8, 0x1)   popd(esi);                            /* pop esi */
    II(0x1028bae9, 0x1)   popd(es);                             /* pop es */
    II(0x1028baea, 0x1)   popd(ds);                             /* pop ds */
    II(0x1028baeb, 0x6)   dec(memd_a32(ds, 0x136a));            /* dec dword [0x136a] */
l_0x1028baf1:
    II(0x1028baf1, 0x1)   popad();                              /* popad */
    II(0x1028baf2, 0x2)   popd(gs);                             /* pop gs */
    II(0x1028baf4, 0x2)   popd(fs);                             /* pop fs */
    II(0x1028baf6, 0x1)   popd(es);                             /* pop es */
    II(0x1028baf7, 0x1)   popd(ds);                             /* pop ds */
    II(0x1028baf8, 0x1)   retfd();                              /* retf */
FUNC_END

