#include "program/manual/file_mve/support.hpp"

FUNC_BEGIN(0x1018ece8, 0x1ac73cf72e8a602d, 0x20, ({}))

    static uint8_t code_template[] = {0x66, 0x8b, 0x6, 0x38, 0xe0, 0xf, 0x87, 0xf9, 0x1, 0, 0, 0x33, 0xc0, 0x8d, 0xd, 0x10, 0xf1, 0x1b, 0x10, 0x8d, 0x15, 0xca, 0xed, 0x18, 0x10, 0x8a, 0x46, 0x2, 0x8b, 0x1c, 0x81, 0x88, 0x1a, 0x88, 0x7a, 0x6, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0xd, 0x88, 0x7a, 0x13, 0x8a, 0x46, 0x3, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x1a, 0x88, 0x7a, 0x20, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x27, 0x88, 0x7a, 0x2d, 0x8a, 0x46, 0x6, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x49, 0x88, 0x7a, 0x4f, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x56, 0x88, 0x7a, 0x5c, 0x8a, 0x46, 0x7, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x63, 0x88, 0x7a, 0x69, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x70, 0x88, 0x7a, 0x76, 0x81, 0xc2, 0x9b, 0, 0, 0, 0x8a, 0x46, 0xa, 0x8b, 0x1c, 0x81, 0x88, 0x1a, 0x88, 0x7a, 0x6, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0xd, 0x88, 0x7a, 0x13, 0x8a, 0x46, 0xb, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x1a, 0x88, 0x7a, 0x20, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x27, 0x88, 0x7a, 0x2d, 0x8a, 0x46, 0xe, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x49, 0x88, 0x7a, 0x4f, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x56, 0x88, 0x7a, 0x5c, 0x8a, 0x46, 0xf, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x63, 0x88, 0x7a, 0x69, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x70, 0x88, 0x7a, 0x76, 0x55, 0x56, 0x66, 0x8b, 0xe, 0x8b, 0x35, 0xd0, 0x9c, 0x20, 0x10, 0x8a, 0xd9, 0x8a, 0xf9, 0x8a, 0xd5, 0x8a, 0xf1, 0x8a, 0xc5, 0x8a, 0xe5, 0x8b, 0xe8, 0xeb, 0, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x8b, 0x4, 0x24, 0x66, 0x8b, 0x48, 0x4, 0x8a, 0xd9, 0x8a, 0xf9, 0x8a, 0xd5, 0x8a, 0xf1, 0x8a, 0xc5, 0x8a, 0xe5, 0x8b, 0xe8, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x8d, 0x4, 0xf5, 0xfc, 0xff, 0xff, 0xff, 0x2b, 0xf8, 0x8b, 0x4, 0x24, 0x66, 0x8b, 0x48, 0x8, 0x8a, 0xd9, 0x8a, 0xf9, 0x8a, 0xd5, 0x8a, 0xf1, 0x8a, 0xc5, 0x8a, 0xe5, 0x8b, 0xe8, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x8b, 0x4, 0x24, 0x66, 0x8b, 0x48, 0xc, 0x8a, 0xd9, 0x8a, 0xf9, 0x8a, 0xd5, 0x8a, 0xf1, 0x8a, 0xc5, 0x8a, 0xe5, 0x8b, 0xe8, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x5e, 0x5d, 0x83, 0xc6, 0x10, 0x83, 0xef, 0x4, 0x2b, 0x7d, 0xf0, 0xc3, 0x8b, 0xc0, 0x66, 0x8b, 0x46, 0x6, 0x38, 0xe0, 0xf, 0x87, 0xd0, 0x1, 0, 0, 0x33, 0xc0, 0x8d, 0xd, 0x10, 0xf1, 0x1b, 0x10, 0x8d, 0x15, 0xd2, 0xef, 0x18, 0x10, 0x8a, 0x46, 0x2, 0x8b, 0x1c, 0x81, 0x88, 0x1a, 0x88, 0x7a, 0x6, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0xd, 0x88, 0x7a, 0x13, 0x8a, 0x46, 0x3, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x1a, 0x88, 0x7a, 0x20, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x27, 0x88, 0x7a, 0x2d, 0x8a, 0x46, 0x4, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x34, 0x88, 0x7a, 0x3a, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x41, 0x88, 0x7a, 0x47, 0x8a, 0x46, 0x5, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x4e, 0x88, 0x7a, 0x54, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x5b, 0x88, 0x7a, 0x61, 0x81, 0xc2, 0x86, 0, 0, 0, 0x8a, 0x46, 0x8, 0x8b, 0x1c, 0x81, 0x88, 0x1a, 0x88, 0x7a, 0x6, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0xd, 0x88, 0x7a, 0x13, 0x8a, 0x46, 0x9, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x1a, 0x88, 0x7a, 0x20, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x27, 0x88, 0x7a, 0x2d, 0x8a, 0x46, 0xa, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x34, 0x88, 0x7a, 0x3a, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x41, 0x88, 0x7a, 0x47, 0x8a, 0x46, 0xb, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x4e, 0x88, 0x7a, 0x54, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x5b, 0x88, 0x7a, 0x61, 0x55, 0x56, 0x66, 0x8b, 0xe, 0x8b, 0x35, 0xd0, 0x9c, 0x20, 0x10, 0x8a, 0xd9, 0x8a, 0xf9, 0x8a, 0xd5, 0x8a, 0xf1, 0x8a, 0xc5, 0x8a, 0xe5, 0x8b, 0xe8, 0xeb, 0x3, 0x2e, 0x8b, 0xc0, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x8d, 0x4, 0xf5, 0xfc, 0xff, 0xff, 0xff, 0x2b, 0xf8, 0x8b, 0x4, 0x24, 0x66, 0x8b, 0x48, 0x6, 0x8a, 0xd9, 0x8a, 0xf9, 0x8a, 0xd5, 0x8a, 0xf1, 0x8a, 0xc5, 0x8a, 0xe5, 0x8b, 0xe8, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x5e, 0x5d, 0x83, 0xc6, 0xc, 0x83, 0xef, 0x4, 0x2b, 0x7d, 0xf0, 0xc3, 0x33, 0xc0, 0x8d, 0xd, 0x10, 0xf1, 0x1b, 0x10, 0x8d, 0x15, 0xa2, 0xf1, 0x18, 0x10, 0x8a, 0x46, 0x2, 0x8b, 0x1c, 0x81, 0x88, 0x1a, 0x88, 0x7a, 0x6, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0xb, 0x88, 0x7a, 0x11, 0x8a, 0x46, 0x3, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x19, 0x88, 0x7a, 0x1f, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x24, 0x88, 0x7a, 0x2a, 0x8a, 0x46, 0x4, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x32, 0x88, 0x7a, 0x38, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x3d, 0x88, 0x7a, 0x43, 0x8a, 0x46, 0x5, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x4b, 0x88, 0x7a, 0x51, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x56, 0x88, 0x7a, 0x5c, 0x81, 0xc2, 0x79, 0, 0, 0, 0x8a, 0x46, 0x8, 0x8b, 0x1c, 0x81, 0x88, 0x1a, 0x88, 0x7a, 0x6, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0xb, 0x88, 0x7a, 0x11, 0x8a, 0x46, 0x9, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x19, 0x88, 0x7a, 0x1f, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x24, 0x88, 0x7a, 0x2a, 0x8a, 0x46, 0xa, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x32, 0x88, 0x7a, 0x38, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x3d, 0x88, 0x7a, 0x43, 0x8a, 0x46, 0xb, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x4b, 0x88, 0x7a, 0x51, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x56, 0x88, 0x7a, 0x5c, 0x55, 0x56, 0x66, 0x8b, 0xe, 0x8b, 0x35, 0xd0, 0x9c, 0x20, 0x10, 0x8a, 0xd9, 0x8a, 0xf9, 0x8a, 0xd5, 0x8a, 0xf1, 0x8a, 0xc5, 0x8a, 0xe5, 0x8b, 0xe8, 0xeb, 0x3, 0x2e, 0x8b, 0xc0, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x47, 0x4, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x47, 0x4, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x47, 0x4, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x47, 0x4, 0x3, 0xfe, 0x8b, 0x4, 0x24, 0x66, 0x8b, 0x48, 0x6, 0x8a, 0xd9, 0x8a, 0xf9, 0x8a, 0xd5, 0x8a, 0xf1, 0x8a, 0xc5, 0x8a, 0xe5, 0x8b, 0xe8, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x47, 0x4, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x47, 0x4, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x47, 0x4, 0x3, 0xfe, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x7, 0x66, 0x8b, 0xc3, 0xc1, 0xe0, 0x10, 0x66, 0x8b, 0xc3, 0x89, 0x47, 0x4, 0x5e, 0x5d, 0x83, 0xc6, 0xc, 0x2b, 0x7d, 0xf0, 0xc3};

    uint8_t code_curr[sizeof(code_template)];
    mem_seg_pg_raw(cs, eip, sizeof(code_curr)).sub_space(0, sizeof(code_curr)).copy_to(code_curr);

    const uint32_t code_pc_start = eip;


    clear(0x1018edc8, 0x3);
    clear(0x1018edce, 0x3);
    clear(0x1018edd1, 0x2);
    clear(0x1018edd5, 0x3);
    clear(0x1018eddb, 0x3);
    clear(0x1018edde, 0x2);
    clear(0x1018ede2, 0x3);
    clear(0x1018ede8, 0x3);
    clear(0x1018edeb, 0x2);
    clear(0x1018edef, 0x3);
    clear(0x1018edf5, 0x3);
    clear(0x1018edf8, 0x2);
    clear(0x1018edfc, 0x3);
    clear(0x1018ee03, 0x2);
    clear(0x1018ee05, 0x2);
    clear(0x1018ee07, 0x2);
    clear(0x1018ee09, 0x2);
    clear(0x1018ee0b, 0x2);
    clear(0x1018ee0d, 0x2);
    clear(0x1018ee0f, 0x2);
    clear(0x1018ee11, 0x3);
    clear(0x1018ee17, 0x3);
    clear(0x1018ee1a, 0x2);
    clear(0x1018ee1e, 0x3);
    clear(0x1018ee24, 0x3);
    clear(0x1018ee27, 0x2);
    clear(0x1018ee2b, 0x3);
    clear(0x1018ee31, 0x3);
    clear(0x1018ee34, 0x2);
    clear(0x1018ee38, 0x3);
    clear(0x1018ee3e, 0x3);
    clear(0x1018ee41, 0x2);
    clear(0x1018ee4e, 0x3);
    clear(0x1018ee55, 0x2);
    clear(0x1018ee57, 0x2);
    clear(0x1018ee59, 0x2);
    clear(0x1018ee5b, 0x2);
    clear(0x1018ee5d, 0x2);
    clear(0x1018ee5f, 0x2);
    clear(0x1018ee61, 0x2);
    clear(0x1018ee63, 0x3);
    clear(0x1018ee69, 0x3);
    clear(0x1018ee6c, 0x2);
    clear(0x1018ee70, 0x3);
    clear(0x1018ee76, 0x3);
    clear(0x1018ee79, 0x2);
    clear(0x1018ee7d, 0x3);
    clear(0x1018ee83, 0x3);
    clear(0x1018ee86, 0x2);
    clear(0x1018ee8a, 0x3);
    clear(0x1018ee90, 0x3);
    clear(0x1018ee93, 0x2);
    clear(0x1018ee97, 0x3);
    clear(0x1018ee9e, 0x2);
    clear(0x1018eea0, 0x2);
    clear(0x1018eea2, 0x2);
    clear(0x1018eea4, 0x2);
    clear(0x1018eea6, 0x2);
    clear(0x1018eea8, 0x2);
    clear(0x1018eeaa, 0x2);
    clear(0x1018eeac, 0x3);
    clear(0x1018eeb2, 0x3);
    clear(0x1018eeb5, 0x2);
    clear(0x1018eeb9, 0x3);
    clear(0x1018eebf, 0x3);
    clear(0x1018eec2, 0x2);
    clear(0x1018eec6, 0x3);
    clear(0x1018eecc, 0x3);
    clear(0x1018eecf, 0x2);
    clear(0x1018eed3, 0x3);
    clear(0x1018eed9, 0x3);
    clear(0x1018eedc, 0x2);
    clear(0x1018efd0, 0x3);
    clear(0x1018efd6, 0x3);
    clear(0x1018efd9, 0x2);
    clear(0x1018efdd, 0x3);
    clear(0x1018efe3, 0x3);
    clear(0x1018efe6, 0x2);
    clear(0x1018efea, 0x3);
    clear(0x1018eff0, 0x3);
    clear(0x1018eff3, 0x2);
    clear(0x1018eff7, 0x3);
    clear(0x1018effd, 0x3);
    clear(0x1018f000, 0x2);
    clear(0x1018f004, 0x3);
    clear(0x1018f00a, 0x3);
    clear(0x1018f00d, 0x2);
    clear(0x1018f011, 0x3);
    clear(0x1018f017, 0x3);
    clear(0x1018f01a, 0x2);
    clear(0x1018f01e, 0x3);
    clear(0x1018f024, 0x3);
    clear(0x1018f027, 0x2);
    clear(0x1018f02b, 0x3);
    clear(0x1018f031, 0x3);
    clear(0x1018f034, 0x2);
    clear(0x1018f041, 0x3);
    clear(0x1018f048, 0x2);
    clear(0x1018f04a, 0x2);
    clear(0x1018f04c, 0x2);
    clear(0x1018f04e, 0x2);
    clear(0x1018f050, 0x2);
    clear(0x1018f052, 0x2);
    clear(0x1018f054, 0x2);
    clear(0x1018f056, 0x3);
    clear(0x1018f05c, 0x3);
    clear(0x1018f05f, 0x2);
    clear(0x1018f063, 0x3);
    clear(0x1018f069, 0x3);
    clear(0x1018f06c, 0x2);
    clear(0x1018f070, 0x3);
    clear(0x1018f076, 0x3);
    clear(0x1018f079, 0x2);
    clear(0x1018f07d, 0x3);
    clear(0x1018f083, 0x3);
    clear(0x1018f086, 0x2);
    clear(0x1018f08a, 0x3);
    clear(0x1018f090, 0x3);
    clear(0x1018f093, 0x2);
    clear(0x1018f097, 0x3);
    clear(0x1018f09d, 0x3);
    clear(0x1018f0a0, 0x2);
    clear(0x1018f0a4, 0x3);
    clear(0x1018f0aa, 0x3);
    clear(0x1018f0ad, 0x2);
    clear(0x1018f0b1, 0x3);
    clear(0x1018f0b7, 0x3);
    clear(0x1018f0ba, 0x2);
    clear(0x1018f1a0, 0x3);
    clear(0x1018f1a6, 0x3);
    clear(0x1018f1a9, 0x2);
    clear(0x1018f1ab, 0x3);
    clear(0x1018f1b1, 0x3);
    clear(0x1018f1b4, 0x3);
    clear(0x1018f1b9, 0x3);
    clear(0x1018f1bf, 0x3);
    clear(0x1018f1c2, 0x2);
    clear(0x1018f1c4, 0x3);
    clear(0x1018f1ca, 0x3);
    clear(0x1018f1cd, 0x3);
    clear(0x1018f1d2, 0x3);
    clear(0x1018f1d8, 0x3);
    clear(0x1018f1db, 0x2);
    clear(0x1018f1dd, 0x3);
    clear(0x1018f1e3, 0x3);
    clear(0x1018f1e6, 0x3);
    clear(0x1018f1eb, 0x3);
    clear(0x1018f1f1, 0x3);
    clear(0x1018f1f4, 0x2);
    clear(0x1018f1f6, 0x3);
    clear(0x1018f1fc, 0x3);
    clear(0x1018f1ff, 0x3);
    clear(0x1018f204, 0x3);
    clear(0x1018f20b, 0x2);
    clear(0x1018f20d, 0x2);
    clear(0x1018f20f, 0x2);
    clear(0x1018f211, 0x2);
    clear(0x1018f213, 0x2);
    clear(0x1018f215, 0x2);
    clear(0x1018f217, 0x2);
    clear(0x1018f219, 0x3);
    clear(0x1018f21f, 0x3);
    clear(0x1018f222, 0x2);
    clear(0x1018f224, 0x3);
    clear(0x1018f22a, 0x3);
    clear(0x1018f22d, 0x3);
    clear(0x1018f232, 0x3);
    clear(0x1018f238, 0x3);
    clear(0x1018f23b, 0x2);
    clear(0x1018f23d, 0x3);
    clear(0x1018f243, 0x3);
    clear(0x1018f246, 0x3);
    clear(0x1018f24b, 0x3);
    clear(0x1018f251, 0x3);
    clear(0x1018f254, 0x2);
    clear(0x1018f256, 0x3);
    clear(0x1018f25c, 0x3);
    clear(0x1018f25f, 0x3);
    clear(0x1018f264, 0x3);
    clear(0x1018f26a, 0x3);
    clear(0x1018f26d, 0x2);
    clear(0x1018f26f, 0x3);
    clear(0x1018f275, 0x3);
    clear(0x1018f278, 0x3);


    II(0x1018ece8, 0x3)   mov(ax, memw_a32(ds, esi));           /* mov ax, [esi] */
    II(0x1018eceb, 0x2)   cmp(al, ah);                          /* cmp al, ah */
    II(0x1018eced, 0x6)   jad(0x1018eeec, 0x1f9);               /* ja dword 0x1018eeec */
    II(0x1018ecf3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018ecf5, 0x6)   lea(ecx, 0x101bf110);                 /* lea ecx, [0x101bf110] */
    II(0x1018ecfb, 0x6)   lea(edx, 0x1018edca);                 /* lea edx, [0x1018edca] */
    II(0x1018ed01, 0x3)   mov(al, memb_a32(ds, esi + 0x2));     /* mov al, [esi+0x2] */
    II(0x1018ed04, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ed07, 0x2)   mov(memb_a32(ds, edx), bl);           /* mov [edx], bl */
    II(0x1018ed09, 0x3)   mov(memb_a32(ds, edx + 0x6), bh);     /* mov [edx+0x6], bh */
    II(0x1018ed0c, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ed0f, 0x3)   mov(memb_a32(ds, edx + 0xd), bl);     /* mov [edx+0xd], bl */
    II(0x1018ed12, 0x3)   mov(memb_a32(ds, edx + 0x13), bh);    /* mov [edx+0x13], bh */
    II(0x1018ed15, 0x3)   mov(al, memb_a32(ds, esi + 0x3));     /* mov al, [esi+0x3] */
    II(0x1018ed18, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ed1b, 0x3)   mov(memb_a32(ds, edx + 0x1a), bl);    /* mov [edx+0x1a], bl */
    II(0x1018ed1e, 0x3)   mov(memb_a32(ds, edx + 0x20), bh);    /* mov [edx+0x20], bh */
    II(0x1018ed21, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ed24, 0x3)   mov(memb_a32(ds, edx + 0x27), bl);    /* mov [edx+0x27], bl */
    II(0x1018ed27, 0x3)   mov(memb_a32(ds, edx + 0x2d), bh);    /* mov [edx+0x2d], bh */
    II(0x1018ed2a, 0x3)   mov(al, memb_a32(ds, esi + 0x6));     /* mov al, [esi+0x6] */
    II(0x1018ed2d, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ed30, 0x3)   mov(memb_a32(ds, edx + 0x49), bl);    /* mov [edx+0x49], bl */
    II(0x1018ed33, 0x3)   mov(memb_a32(ds, edx + 0x4f), bh);    /* mov [edx+0x4f], bh */
    II(0x1018ed36, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ed39, 0x3)   mov(memb_a32(ds, edx + 0x56), bl);    /* mov [edx+0x56], bl */
    II(0x1018ed3c, 0x3)   mov(memb_a32(ds, edx + 0x5c), bh);    /* mov [edx+0x5c], bh */
    II(0x1018ed3f, 0x3)   mov(al, memb_a32(ds, esi + 0x7));     /* mov al, [esi+0x7] */
    II(0x1018ed42, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ed45, 0x3)   mov(memb_a32(ds, edx + 0x63), bl);    /* mov [edx+0x63], bl */
    II(0x1018ed48, 0x3)   mov(memb_a32(ds, edx + 0x69), bh);    /* mov [edx+0x69], bh */
    II(0x1018ed4b, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ed4e, 0x3)   mov(memb_a32(ds, edx + 0x70), bl);    /* mov [edx+0x70], bl */
    II(0x1018ed51, 0x3)   mov(memb_a32(ds, edx + 0x76), bh);    /* mov [edx+0x76], bh */
    II(0x1018ed54, 0x6)   add(edx, 0x9b);                       /* add edx, 0x9b */
    II(0x1018ed5a, 0x3)   mov(al, memb_a32(ds, esi + 0xa));     /* mov al, [esi+0xa] */
    II(0x1018ed5d, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ed60, 0x2)   mov(memb_a32(ds, edx), bl);           /* mov [edx], bl */
    II(0x1018ed62, 0x3)   mov(memb_a32(ds, edx + 0x6), bh);     /* mov [edx+0x6], bh */
    II(0x1018ed65, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ed68, 0x3)   mov(memb_a32(ds, edx + 0xd), bl);     /* mov [edx+0xd], bl */
    II(0x1018ed6b, 0x3)   mov(memb_a32(ds, edx + 0x13), bh);    /* mov [edx+0x13], bh */
    II(0x1018ed6e, 0x3)   mov(al, memb_a32(ds, esi + 0xb));     /* mov al, [esi+0xb] */
    II(0x1018ed71, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ed74, 0x3)   mov(memb_a32(ds, edx + 0x1a), bl);    /* mov [edx+0x1a], bl */
    II(0x1018ed77, 0x3)   mov(memb_a32(ds, edx + 0x20), bh);    /* mov [edx+0x20], bh */
    II(0x1018ed7a, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ed7d, 0x3)   mov(memb_a32(ds, edx + 0x27), bl);    /* mov [edx+0x27], bl */
    II(0x1018ed80, 0x3)   mov(memb_a32(ds, edx + 0x2d), bh);    /* mov [edx+0x2d], bh */
    II(0x1018ed83, 0x3)   mov(al, memb_a32(ds, esi + 0xe));     /* mov al, [esi+0xe] */
    II(0x1018ed86, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ed89, 0x3)   mov(memb_a32(ds, edx + 0x49), bl);    /* mov [edx+0x49], bl */
    II(0x1018ed8c, 0x3)   mov(memb_a32(ds, edx + 0x4f), bh);    /* mov [edx+0x4f], bh */
    II(0x1018ed8f, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ed92, 0x3)   mov(memb_a32(ds, edx + 0x56), bl);    /* mov [edx+0x56], bl */
    II(0x1018ed95, 0x3)   mov(memb_a32(ds, edx + 0x5c), bh);    /* mov [edx+0x5c], bh */
    II(0x1018ed98, 0x3)   mov(al, memb_a32(ds, esi + 0xf));     /* mov al, [esi+0xf] */
    II(0x1018ed9b, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ed9e, 0x3)   mov(memb_a32(ds, edx + 0x63), bl);    /* mov [edx+0x63], bl */
    II(0x1018eda1, 0x3)   mov(memb_a32(ds, edx + 0x69), bh);    /* mov [edx+0x69], bh */
    II(0x1018eda4, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018eda7, 0x3)   mov(memb_a32(ds, edx + 0x70), bl);    /* mov [edx+0x70], bl */
    II(0x1018edaa, 0x3)   mov(memb_a32(ds, edx + 0x76), bh);    /* mov [edx+0x76], bh */
    II(0x1018edad, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1018edae, 0x1)   pushd(esi);                           /* push esi */
    II(0x1018edaf, 0x3)   mov(cx, memw_a32(ds, esi));           /* mov cx, [esi] */
    II(0x1018edb2, 0x6)   mov(esi, memd_a32(ds, 0x10209cd0));   /* mov esi, [0x10209cd0] */
    II(0x1018edb8, 0x2)   mov(bl, cl);                          /* mov bl, cl */
    II(0x1018edba, 0x2)   mov(bh, cl);                          /* mov bh, cl */
    II(0x1018edbc, 0x2)   mov(dl, ch);                          /* mov dl, ch */
    II(0x1018edbe, 0x2)   mov(dh, cl);                          /* mov dh, cl */
    II(0x1018edc0, 0x2)   mov(al, ch);                          /* mov al, ch */
    II(0x1018edc2, 0x2)   mov(ah, ch);                          /* mov ah, ch */
    II(0x1018edc4, 0x2)   mov(ebp, eax);                        /* mov ebp, eax */
    II(0x1018edc6, 0x2)   jmpd(0x1018edc8, 0);                  /* jmp 0x1018edc8 */
l_0x1018edc8:
    II(0x1018edc8, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018edcb, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018edce, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018edd1, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018edd3, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018edd5, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018edd8, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018eddb, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018edde, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018ede0, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018ede2, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ede5, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018ede8, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018edeb, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018eded, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018edef, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018edf2, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018edf5, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018edf8, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018edfa, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018edfc, 0x3)   __mov__(eax, memd_a32(ss, esp));          /* __mov__ eax, [esp] */
    II(0x1018edff, 0x4)   mov(cx, memw_a32(ds, eax + 0x4));     /* __mov__ cx, [eax+0x4] */
    II(0x1018ee03, 0x2)   __mov__(bl, cl);                          /* __mov__ bl, cl */
    II(0x1018ee05, 0x2)   __mov__(bh, cl);                          /* __mov__ bh, cl */
    II(0x1018ee07, 0x2)   __mov__(dl, ch);                          /* __mov__ dl, ch */
    II(0x1018ee09, 0x2)   __mov__(dh, cl);                          /* __mov__ dh, cl */
    II(0x1018ee0b, 0x2)   __mov__(al, ch);                          /* __mov__ al, ch */
    II(0x1018ee0d, 0x2)   __mov__(ah, ch);                          /* __mov__ ah, ch */
    II(0x1018ee0f, 0x2)   __mov__(ebp, eax);                        /* __mov__ ebp, eax */
    II(0x1018ee11, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee14, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018ee17, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee1a, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018ee1c, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018ee1e, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee21, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018ee24, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee27, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018ee29, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018ee2b, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee2e, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018ee31, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee34, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018ee36, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018ee38, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee3b, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018ee3e, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee41, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018ee43, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018ee45, 0x7)   lea(eax, esi * 0x8 - 0x4);            /* lea eax, [esi*8+0xfffffffc] */
    II(0x1018ee4c, 0x2)   sub(edi, eax);                        /* sub edi, eax */
    II(0x1018ee4e, 0x3)   __mov__(eax, memd_a32(ss, esp));          /* __mov__ eax, [esp] */
    II(0x1018ee51, 0x4)   mov(cx, memw_a32(ds, eax + 0x8));     /* __mov__ cx, [eax+0x8] */
    II(0x1018ee55, 0x2)   __mov__(bl, cl);                          /* __mov__ bl, cl */
    II(0x1018ee57, 0x2)   __mov__(bh, cl);                          /* __mov__ bh, cl */
    II(0x1018ee59, 0x2)   __mov__(dl, ch);                          /* __mov__ dl, ch */
    II(0x1018ee5b, 0x2)   __mov__(dh, cl);                          /* __mov__ dh, cl */
    II(0x1018ee5d, 0x2)   __mov__(al, ch);                          /* __mov__ al, ch */
    II(0x1018ee5f, 0x2)   __mov__(ah, ch);                          /* __mov__ ah, ch */
    II(0x1018ee61, 0x2)   __mov__(ebp, eax);                        /* __mov__ ebp, eax */
    II(0x1018ee63, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee66, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018ee69, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee6c, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018ee6e, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018ee70, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee73, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018ee76, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee79, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018ee7b, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018ee7d, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee80, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018ee83, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee86, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018ee88, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018ee8a, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee8d, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018ee90, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018ee93, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018ee95, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018ee97, 0x3)   __mov__(eax, memd_a32(ss, esp));          /* __mov__ eax, [esp] */
    II(0x1018ee9a, 0x4)   mov(cx, memw_a32(ds, eax + 0xc));     /* __mov__ cx, [eax+0xc] */
    II(0x1018ee9e, 0x2)   __mov__(bl, cl);                          /* __mov__ bl, cl */
    II(0x1018eea0, 0x2)   __mov__(bh, cl);                          /* __mov__ bh, cl */
    II(0x1018eea2, 0x2)   __mov__(dl, ch);                          /* __mov__ dl, ch */
    II(0x1018eea4, 0x2)   __mov__(dh, cl);                          /* __mov__ dh, cl */
    II(0x1018eea6, 0x2)   __mov__(al, ch);                          /* __mov__ al, ch */
    II(0x1018eea8, 0x2)   __mov__(ah, ch);                          /* __mov__ ah, ch */
    II(0x1018eeaa, 0x2)   __mov__(ebp, eax);                        /* __mov__ ebp, eax */
    II(0x1018eeac, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018eeaf, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018eeb2, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018eeb5, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018eeb7, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018eeb9, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018eebc, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018eebf, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018eec2, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018eec4, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018eec6, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018eec9, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018eecc, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018eecf, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018eed1, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018eed3, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018eed6, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018eed9, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018eedc, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018eede, 0x1)   popd(esi);                            /* pop esi */
    II(0x1018eedf, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1018eee0, 0x3)   add(esi, 0x10);                       /* add esi, 0x10 */
    II(0x1018eee3, 0x3)   sub(edi, 0x4);                        /* sub edi, 0x4 */
    II(0x1018eee6, 0x3)   sub(edi, memd_a32(ss, ebp - 0x10));   /* sub edi, [ebp-0x10] */
    II(0x1018eee9, 0x1)   __retd__();                               /* ret  */
//    II(0x1018eeea, 0x2)   /* Недостижимый код. */
l_0x1018eeec:
    II(0x1018eeec, 0x4)   mov(ax, memw_a32(ds, esi + 0x6));     /* mov ax, [esi+0x6] */
    II(0x1018eef0, 0x2)   cmp(al, ah);                          /* cmp al, ah */
    II(0x1018eef2, 0x6)   jad(0x1018f0c8, 0x1d0);               /* ja dword 0x1018f0c8 */
    II(0x1018eef8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018eefa, 0x6)   lea(ecx, 0x101bf110);                 /* lea ecx, [0x101bf110] */
    II(0x1018ef00, 0x6)   lea(edx, 0x1018efd2);                 /* lea edx, [0x1018efd2] */
    II(0x1018ef06, 0x3)   mov(al, memb_a32(ds, esi + 0x2));     /* mov al, [esi+0x2] */
    II(0x1018ef09, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ef0c, 0x2)   mov(memb_a32(ds, edx), bl);           /* mov [edx], bl */
    II(0x1018ef0e, 0x3)   mov(memb_a32(ds, edx + 0x6), bh);     /* mov [edx+0x6], bh */
    II(0x1018ef11, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ef14, 0x3)   mov(memb_a32(ds, edx + 0xd), bl);     /* mov [edx+0xd], bl */
    II(0x1018ef17, 0x3)   mov(memb_a32(ds, edx + 0x13), bh);    /* mov [edx+0x13], bh */
    II(0x1018ef1a, 0x3)   mov(al, memb_a32(ds, esi + 0x3));     /* mov al, [esi+0x3] */
    II(0x1018ef1d, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ef20, 0x3)   mov(memb_a32(ds, edx + 0x1a), bl);    /* mov [edx+0x1a], bl */
    II(0x1018ef23, 0x3)   mov(memb_a32(ds, edx + 0x20), bh);    /* mov [edx+0x20], bh */
    II(0x1018ef26, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ef29, 0x3)   mov(memb_a32(ds, edx + 0x27), bl);    /* mov [edx+0x27], bl */
    II(0x1018ef2c, 0x3)   mov(memb_a32(ds, edx + 0x2d), bh);    /* mov [edx+0x2d], bh */
    II(0x1018ef2f, 0x3)   mov(al, memb_a32(ds, esi + 0x4));     /* mov al, [esi+0x4] */
    II(0x1018ef32, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ef35, 0x3)   mov(memb_a32(ds, edx + 0x34), bl);    /* mov [edx+0x34], bl */
    II(0x1018ef38, 0x3)   mov(memb_a32(ds, edx + 0x3a), bh);    /* mov [edx+0x3a], bh */
    II(0x1018ef3b, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ef3e, 0x3)   mov(memb_a32(ds, edx + 0x41), bl);    /* mov [edx+0x41], bl */
    II(0x1018ef41, 0x3)   mov(memb_a32(ds, edx + 0x47), bh);    /* mov [edx+0x47], bh */
    II(0x1018ef44, 0x3)   mov(al, memb_a32(ds, esi + 0x5));     /* mov al, [esi+0x5] */
    II(0x1018ef47, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ef4a, 0x3)   mov(memb_a32(ds, edx + 0x4e), bl);    /* mov [edx+0x4e], bl */
    II(0x1018ef4d, 0x3)   mov(memb_a32(ds, edx + 0x54), bh);    /* mov [edx+0x54], bh */
    II(0x1018ef50, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ef53, 0x3)   mov(memb_a32(ds, edx + 0x5b), bl);    /* mov [edx+0x5b], bl */
    II(0x1018ef56, 0x3)   mov(memb_a32(ds, edx + 0x61), bh);    /* mov [edx+0x61], bh */
    II(0x1018ef59, 0x6)   add(edx, 0x86);                       /* add edx, 0x86 */
    II(0x1018ef5f, 0x3)   mov(al, memb_a32(ds, esi + 0x8));     /* mov al, [esi+0x8] */
    II(0x1018ef62, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ef65, 0x2)   mov(memb_a32(ds, edx), bl);           /* mov [edx], bl */
    II(0x1018ef67, 0x3)   mov(memb_a32(ds, edx + 0x6), bh);     /* mov [edx+0x6], bh */
    II(0x1018ef6a, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ef6d, 0x3)   mov(memb_a32(ds, edx + 0xd), bl);     /* mov [edx+0xd], bl */
    II(0x1018ef70, 0x3)   mov(memb_a32(ds, edx + 0x13), bh);    /* mov [edx+0x13], bh */
    II(0x1018ef73, 0x3)   mov(al, memb_a32(ds, esi + 0x9));     /* mov al, [esi+0x9] */
    II(0x1018ef76, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ef79, 0x3)   mov(memb_a32(ds, edx + 0x1a), bl);    /* mov [edx+0x1a], bl */
    II(0x1018ef7c, 0x3)   mov(memb_a32(ds, edx + 0x20), bh);    /* mov [edx+0x20], bh */
    II(0x1018ef7f, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ef82, 0x3)   mov(memb_a32(ds, edx + 0x27), bl);    /* mov [edx+0x27], bl */
    II(0x1018ef85, 0x3)   mov(memb_a32(ds, edx + 0x2d), bh);    /* mov [edx+0x2d], bh */
    II(0x1018ef88, 0x3)   mov(al, memb_a32(ds, esi + 0xa));     /* mov al, [esi+0xa] */
    II(0x1018ef8b, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018ef8e, 0x3)   mov(memb_a32(ds, edx + 0x34), bl);    /* mov [edx+0x34], bl */
    II(0x1018ef91, 0x3)   mov(memb_a32(ds, edx + 0x3a), bh);    /* mov [edx+0x3a], bh */
    II(0x1018ef94, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018ef97, 0x3)   mov(memb_a32(ds, edx + 0x41), bl);    /* mov [edx+0x41], bl */
    II(0x1018ef9a, 0x3)   mov(memb_a32(ds, edx + 0x47), bh);    /* mov [edx+0x47], bh */
    II(0x1018ef9d, 0x3)   mov(al, memb_a32(ds, esi + 0xb));     /* mov al, [esi+0xb] */
    II(0x1018efa0, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018efa3, 0x3)   mov(memb_a32(ds, edx + 0x4e), bl);    /* mov [edx+0x4e], bl */
    II(0x1018efa6, 0x3)   mov(memb_a32(ds, edx + 0x54), bh);    /* mov [edx+0x54], bh */
    II(0x1018efa9, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018efac, 0x3)   mov(memb_a32(ds, edx + 0x5b), bl);    /* mov [edx+0x5b], bl */
    II(0x1018efaf, 0x3)   mov(memb_a32(ds, edx + 0x61), bh);    /* mov [edx+0x61], bh */
    II(0x1018efb2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1018efb3, 0x1)   pushd(esi);                           /* push esi */
    II(0x1018efb4, 0x3)   mov(cx, memw_a32(ds, esi));           /* mov cx, [esi] */
    II(0x1018efb7, 0x6)   mov(esi, memd_a32(ds, 0x10209cd0));   /* mov esi, [0x10209cd0] */
    II(0x1018efbd, 0x2)   mov(bl, cl);                          /* mov bl, cl */
    II(0x1018efbf, 0x2)   mov(bh, cl);                          /* mov bh, cl */
    II(0x1018efc1, 0x2)   mov(dl, ch);                          /* mov dl, ch */
    II(0x1018efc3, 0x2)   mov(dh, cl);                          /* mov dh, cl */
    II(0x1018efc5, 0x2)   mov(al, ch);                          /* mov al, ch */
    II(0x1018efc7, 0x2)   mov(ah, ch);                          /* mov ah, ch */
    II(0x1018efc9, 0x2)   mov(ebp, eax);                        /* mov ebp, eax */
    II(0x1018efcb, 0x2)   jmpd(0x1018efd0, 0x3);                /* jmp 0x1018efd0 */
//    II(0x1018efcd, 0x3)   /* Недостижимый код. */
l_0x1018efd0:
    II(0x1018efd0, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018efd3, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018efd6, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018efd9, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018efdb, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018efdd, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018efe0, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018efe3, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018efe6, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018efe8, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018efea, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018efed, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018eff0, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018eff3, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018eff5, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018eff7, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018effa, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018effd, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f000, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f002, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f004, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f007, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f00a, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f00d, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f00f, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f011, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f014, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f017, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f01a, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f01c, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f01e, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f021, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f024, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f027, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f029, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f02b, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f02e, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f031, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f034, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f036, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f038, 0x7)   lea(eax, esi * 0x8 - 0x4);            /* lea eax, [esi*8+0xfffffffc] */
    II(0x1018f03f, 0x2)   sub(edi, eax);                        /* sub edi, eax */
    II(0x1018f041, 0x3)   __mov__(eax, memd_a32(ss, esp));          /* __mov__ eax, [esp] */
    II(0x1018f044, 0x4)   mov(cx, memw_a32(ds, eax + 0x6));     /* __mov__ cx, [eax+0x6] */
    II(0x1018f048, 0x2)   __mov__(bl, cl);                          /* __mov__ bl, cl */
    II(0x1018f04a, 0x2)   __mov__(bh, cl);                          /* __mov__ bh, cl */
    II(0x1018f04c, 0x2)   __mov__(dl, ch);                          /* __mov__ dl, ch */
    II(0x1018f04e, 0x2)   __mov__(dh, cl);                          /* __mov__ dh, cl */
    II(0x1018f050, 0x2)   __mov__(al, ch);                          /* __mov__ al, ch */
    II(0x1018f052, 0x2)   __mov__(ah, ch);                          /* __mov__ ah, ch */
    II(0x1018f054, 0x2)   __mov__(ebp, eax);                        /* __mov__ ebp, eax */
    II(0x1018f056, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f059, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f05c, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f05f, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f061, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f063, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f066, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f069, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f06c, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f06e, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f070, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f073, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f076, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f079, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f07b, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f07d, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f080, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f083, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f086, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f088, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f08a, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f08d, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f090, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f093, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f095, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f097, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f09a, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f09d, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f0a0, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f0a2, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f0a4, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f0a7, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f0aa, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f0ad, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f0af, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f0b1, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f0b4, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f0b7, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f0ba, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f0bc, 0x1)   popd(esi);                            /* pop esi */
    II(0x1018f0bd, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1018f0be, 0x3)   add(esi, 0xc);                        /* add esi, 0xc */
    II(0x1018f0c1, 0x3)   sub(edi, 0x4);                        /* sub edi, 0x4 */
    II(0x1018f0c4, 0x3)   sub(edi, memd_a32(ss, ebp - 0x10));   /* sub edi, [ebp-0x10] */
    II(0x1018f0c7, 0x1)   __retd__();                               /* ret  */
l_0x1018f0c8:
    II(0x1018f0c8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018f0ca, 0x6)   lea(ecx, 0x101bf110);                 /* lea ecx, [0x101bf110] */
    II(0x1018f0d0, 0x6)   lea(edx, 0x1018f1a2);                 /* lea edx, [0x1018f1a2] */
    II(0x1018f0d6, 0x3)   mov(al, memb_a32(ds, esi + 0x2));     /* mov al, [esi+0x2] */
    II(0x1018f0d9, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f0dc, 0x2)   mov(memb_a32(ds, edx), bl);           /* mov [edx], bl */
    II(0x1018f0de, 0x3)   mov(memb_a32(ds, edx + 0x6), bh);     /* mov [edx+0x6], bh */
    II(0x1018f0e1, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f0e4, 0x3)   mov(memb_a32(ds, edx + 0xb), bl);     /* mov [edx+0xb], bl */
    II(0x1018f0e7, 0x3)   mov(memb_a32(ds, edx + 0x11), bh);    /* mov [edx+0x11], bh */
    II(0x1018f0ea, 0x3)   mov(al, memb_a32(ds, esi + 0x3));     /* mov al, [esi+0x3] */
    II(0x1018f0ed, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f0f0, 0x3)   mov(memb_a32(ds, edx + 0x19), bl);    /* mov [edx+0x19], bl */
    II(0x1018f0f3, 0x3)   mov(memb_a32(ds, edx + 0x1f), bh);    /* mov [edx+0x1f], bh */
    II(0x1018f0f6, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f0f9, 0x3)   mov(memb_a32(ds, edx + 0x24), bl);    /* mov [edx+0x24], bl */
    II(0x1018f0fc, 0x3)   mov(memb_a32(ds, edx + 0x2a), bh);    /* mov [edx+0x2a], bh */
    II(0x1018f0ff, 0x3)   mov(al, memb_a32(ds, esi + 0x4));     /* mov al, [esi+0x4] */
    II(0x1018f102, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f105, 0x3)   mov(memb_a32(ds, edx + 0x32), bl);    /* mov [edx+0x32], bl */
    II(0x1018f108, 0x3)   mov(memb_a32(ds, edx + 0x38), bh);    /* mov [edx+0x38], bh */
    II(0x1018f10b, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f10e, 0x3)   mov(memb_a32(ds, edx + 0x3d), bl);    /* mov [edx+0x3d], bl */
    II(0x1018f111, 0x3)   mov(memb_a32(ds, edx + 0x43), bh);    /* mov [edx+0x43], bh */
    II(0x1018f114, 0x3)   mov(al, memb_a32(ds, esi + 0x5));     /* mov al, [esi+0x5] */
    II(0x1018f117, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f11a, 0x3)   mov(memb_a32(ds, edx + 0x4b), bl);    /* mov [edx+0x4b], bl */
    II(0x1018f11d, 0x3)   mov(memb_a32(ds, edx + 0x51), bh);    /* mov [edx+0x51], bh */
    II(0x1018f120, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f123, 0x3)   mov(memb_a32(ds, edx + 0x56), bl);    /* mov [edx+0x56], bl */
    II(0x1018f126, 0x3)   mov(memb_a32(ds, edx + 0x5c), bh);    /* mov [edx+0x5c], bh */
    II(0x1018f129, 0x6)   add(edx, 0x79);                       /* add edx, 0x79 */
    II(0x1018f12f, 0x3)   mov(al, memb_a32(ds, esi + 0x8));     /* mov al, [esi+0x8] */
    II(0x1018f132, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f135, 0x2)   mov(memb_a32(ds, edx), bl);           /* mov [edx], bl */
    II(0x1018f137, 0x3)   mov(memb_a32(ds, edx + 0x6), bh);     /* mov [edx+0x6], bh */
    II(0x1018f13a, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f13d, 0x3)   mov(memb_a32(ds, edx + 0xb), bl);     /* mov [edx+0xb], bl */
    II(0x1018f140, 0x3)   mov(memb_a32(ds, edx + 0x11), bh);    /* mov [edx+0x11], bh */
    II(0x1018f143, 0x3)   mov(al, memb_a32(ds, esi + 0x9));     /* mov al, [esi+0x9] */
    II(0x1018f146, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f149, 0x3)   mov(memb_a32(ds, edx + 0x19), bl);    /* mov [edx+0x19], bl */
    II(0x1018f14c, 0x3)   mov(memb_a32(ds, edx + 0x1f), bh);    /* mov [edx+0x1f], bh */
    II(0x1018f14f, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f152, 0x3)   mov(memb_a32(ds, edx + 0x24), bl);    /* mov [edx+0x24], bl */
    II(0x1018f155, 0x3)   mov(memb_a32(ds, edx + 0x2a), bh);    /* mov [edx+0x2a], bh */
    II(0x1018f158, 0x3)   mov(al, memb_a32(ds, esi + 0xa));     /* mov al, [esi+0xa] */
    II(0x1018f15b, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f15e, 0x3)   mov(memb_a32(ds, edx + 0x32), bl);    /* mov [edx+0x32], bl */
    II(0x1018f161, 0x3)   mov(memb_a32(ds, edx + 0x38), bh);    /* mov [edx+0x38], bh */
    II(0x1018f164, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f167, 0x3)   mov(memb_a32(ds, edx + 0x3d), bl);    /* mov [edx+0x3d], bl */
    II(0x1018f16a, 0x3)   mov(memb_a32(ds, edx + 0x43), bh);    /* mov [edx+0x43], bh */
    II(0x1018f16d, 0x3)   mov(al, memb_a32(ds, esi + 0xb));     /* mov al, [esi+0xb] */
    II(0x1018f170, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f173, 0x3)   mov(memb_a32(ds, edx + 0x4b), bl);    /* mov [edx+0x4b], bl */
    II(0x1018f176, 0x3)   mov(memb_a32(ds, edx + 0x51), bh);    /* mov [edx+0x51], bh */
    II(0x1018f179, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f17c, 0x3)   mov(memb_a32(ds, edx + 0x56), bl);    /* mov [edx+0x56], bl */
    II(0x1018f17f, 0x3)   mov(memb_a32(ds, edx + 0x5c), bh);    /* mov [edx+0x5c], bh */
    II(0x1018f182, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1018f183, 0x1)   pushd(esi);                           /* push esi */
    II(0x1018f184, 0x3)   mov(cx, memw_a32(ds, esi));           /* mov cx, [esi] */
    II(0x1018f187, 0x6)   mov(esi, memd_a32(ds, 0x10209cd0));   /* mov esi, [0x10209cd0] */
    II(0x1018f18d, 0x2)   mov(bl, cl);                          /* mov bl, cl */
    II(0x1018f18f, 0x2)   mov(bh, cl);                          /* mov bh, cl */
    II(0x1018f191, 0x2)   mov(dl, ch);                          /* mov dl, ch */
    II(0x1018f193, 0x2)   mov(dh, cl);                          /* mov dh, cl */
    II(0x1018f195, 0x2)   mov(al, ch);                          /* mov al, ch */
    II(0x1018f197, 0x2)   mov(ah, ch);                          /* mov ah, ch */
    II(0x1018f199, 0x2)   mov(ebp, eax);                        /* mov ebp, eax */
    II(0x1018f19b, 0x2)   jmpd(0x1018f1a0, 0x3);                /* jmp 0x1018f1a0 */
//    II(0x1018f19d, 0x3)   /* Недостижимый код. */
l_0x1018f1a0:
    II(0x1018f1a0, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1a3, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f1a6, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1a9, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f1ab, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1ae, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f1b1, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1b4, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f1b7, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f1b9, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1bc, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f1bf, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1c2, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f1c4, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1c7, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f1ca, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1cd, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f1d0, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f1d2, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1d5, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f1d8, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1db, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f1dd, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1e0, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f1e3, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1e6, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f1e9, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f1eb, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1ee, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f1f1, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1f4, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f1f6, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1f9, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f1fc, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f1ff, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f202, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f204, 0x3)   __mov__(eax, memd_a32(ss, esp));          /* __mov__ eax, [esp] */
    II(0x1018f207, 0x4)   mov(cx, memw_a32(ds, eax + 0x6));     /* __mov__ cx, [eax+0x6] */
    II(0x1018f20b, 0x2)   __mov__(bl, cl);                          /* __mov__ bl, cl */
    II(0x1018f20d, 0x2)   __mov__(bh, cl);                          /* __mov__ bh, cl */
    II(0x1018f20f, 0x2)   __mov__(dl, ch);                          /* __mov__ dl, ch */
    II(0x1018f211, 0x2)   __mov__(dh, cl);                          /* __mov__ dh, cl */
    II(0x1018f213, 0x2)   __mov__(al, ch);                          /* __mov__ al, ch */
    II(0x1018f215, 0x2)   __mov__(ah, ch);                          /* __mov__ ah, ch */
    II(0x1018f217, 0x2)   __mov__(ebp, eax);                        /* __mov__ ebp, eax */
    II(0x1018f219, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f21c, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f21f, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f222, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f224, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f227, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f22a, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f22d, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f230, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f232, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f235, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f238, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f23b, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f23d, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f240, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f243, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f246, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f249, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f24b, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f24e, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f251, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f254, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f256, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f259, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f25c, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f25f, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f262, 0x2)   add(edi, esi);                        /* add edi, esi */
    II(0x1018f264, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f267, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f26a, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f26d, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f26f, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f272, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f275, 0x3)   __mov__(ax, bx);                          /* __mov__ ax, bx */
    II(0x1018f278, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f27b, 0x1)   popd(esi);                            /* pop esi */
    II(0x1018f27c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1018f27d, 0x3)   add(esi, 0xc);                        /* add esi, 0xc */
    II(0x1018f280, 0x3)   sub(edi, memd_a32(ss, ebp - 0x10));   /* sub edi, [ebp-0x10] */
    II(0x1018f283, 0x1)   __retd__();                               /* ret  */
FUNC_END
