#include "program/manual/file_mve/support.hpp"

FUNC_BEGIN(0x1018f284, 0x54a91bcc49ab13fc, 0x20, ({}))

    static uint8_t code_template[] = {0x8b, 0x6, 0x38, 0xe0, 0xf, 0x87, 0x7a, 0x3, 0, 0, 0xc1, 0xe8, 0x10, 0x38, 0xe0, 0xf, 0x87, 0x5f, 0x2, 0, 0, 0x33, 0xc0, 0x8d, 0xd, 0x10, 0xf5, 0x1b, 0x10, 0x8d, 0x15, 0x9, 0xf4, 0x18, 0x10, 0x8a, 0x46, 0x4, 0x8b, 0x1c, 0x81, 0x88, 0x1a, 0x88, 0x7a, 0x2, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x7, 0x88, 0x7a, 0x9, 0x8a, 0x46, 0x5, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0xd, 0x88, 0x7a, 0xf, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x14, 0x88, 0x7a, 0x16, 0x8a, 0x46, 0x6, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x1d, 0x88, 0x7a, 0x1f, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x24, 0x88, 0x7a, 0x26, 0x8a, 0x46, 0x7, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x2a, 0x88, 0x7a, 0x2c, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x31, 0x88, 0x7a, 0x33, 0x8a, 0x46, 0x8, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x3a, 0x88, 0x7a, 0x3c, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x41, 0x88, 0x7a, 0x43, 0x8a, 0x46, 0x9, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x47, 0x88, 0x7a, 0x49, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x4e, 0x88, 0x7a, 0x50, 0x8a, 0x46, 0xa, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x57, 0x88, 0x7a, 0x59, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x5e, 0x88, 0x7a, 0x60, 0x8a, 0x46, 0xb, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x64, 0x88, 0x7a, 0x66, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x6b, 0x88, 0x7a, 0x6d, 0x8d, 0x52, 0x74, 0x8a, 0x46, 0xc, 0x8b, 0x1c, 0x81, 0x88, 0x1a, 0x88, 0x7a, 0x2, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x7, 0x88, 0x7a, 0x9, 0x8a, 0x46, 0xd, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0xd, 0x88, 0x7a, 0xf, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x14, 0x88, 0x7a, 0x16, 0x8a, 0x46, 0xe, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x1d, 0x88, 0x7a, 0x1f, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x24, 0x88, 0x7a, 0x26, 0x8a, 0x46, 0xf, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x2a, 0x88, 0x7a, 0x2c, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x31, 0x88, 0x7a, 0x33, 0x8a, 0x46, 0x10, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x3a, 0x88, 0x7a, 0x3c, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x41, 0x88, 0x7a, 0x43, 0x8a, 0x46, 0x11, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x47, 0x88, 0x7a, 0x49, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x4e, 0x88, 0x7a, 0x50, 0x8a, 0x46, 0x12, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x57, 0x88, 0x7a, 0x59, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x5e, 0x88, 0x7a, 0x60, 0x8a, 0x46, 0x13, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x64, 0x88, 0x7a, 0x66, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x6b, 0x88, 0x7a, 0x6d, 0x66, 0x8b, 0x1e, 0x66, 0x8b, 0x4e, 0x2, 0x8b, 0x15, 0xd0, 0x9c, 0x20, 0x10, 0xeb, 0x1, 0x90, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x83, 0xc6, 0x14, 0x2b, 0x7d, 0xf0, 0xc3, 0x2e, 0x8b, 0xc0, 0x33, 0xc0, 0x8d, 0xd, 0x10, 0xf5, 0x1b, 0x10, 0x8d, 0x15, 0x6d, 0xf5, 0x18, 0x10, 0x8a, 0x46, 0x4, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x17, 0x88, 0x7a, 0x10, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x7, 0x88, 0x3a, 0x8a, 0x46, 0x5, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x3c, 0x88, 0x7a, 0x35, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x2c, 0x88, 0x7a, 0x25, 0x8a, 0x46, 0x6, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x61, 0x88, 0x7a, 0x5a, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x51, 0x88, 0x7a, 0x4a, 0x8a, 0x46, 0x7, 0x8b, 0x1c, 0x81, 0x88, 0x9a, 0x86, 0, 0, 0, 0x88, 0x7a, 0x7f, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x76, 0x88, 0x7a, 0x6f, 0x66, 0x8b, 0x1e, 0x66, 0x8b, 0x4e, 0x2, 0x8b, 0x15, 0xd0, 0x9c, 0x20, 0x10, 0xeb, 0x1, 0x90, 0x8a, 0xe3, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe0, 0x89, 0x7, 0x89, 0x4, 0x3a, 0x8a, 0xe3, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x89, 0x44, 0x3a, 0x4, 0x8d, 0x3c, 0x57, 0x8a, 0xe3, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe0, 0x89, 0x7, 0x89, 0x4, 0x3a, 0x8a, 0xe3, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x89, 0x44, 0x3a, 0x4, 0x8d, 0x3c, 0x57, 0x8a, 0xe3, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe0, 0x89, 0x7, 0x89, 0x4, 0x3a, 0x8a, 0xe3, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x89, 0x44, 0x3a, 0x4, 0x8d, 0x3c, 0x57, 0x8a, 0xe3, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe0, 0x89, 0x7, 0x89, 0x4, 0x3a, 0x8a, 0xe3, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x89, 0x44, 0x3a, 0x4, 0x3, 0xfa, 0x83, 0xc6, 0x8, 0x2b, 0x7d, 0xf0, 0xc3, 0x8b, 0xc0, 0xc1, 0xe8, 0x10, 0x38, 0xe0, 0xf, 0x87, 0xb9, 0x1, 0, 0, 0x33, 0xc0, 0x8d, 0xd, 0x10, 0xf5, 0x1b, 0x10, 0x8d, 0x15, 0xdd, 0xf6, 0x18, 0x10, 0x8a, 0x46, 0x4, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x14, 0x88, 0x7a, 0xd, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x7, 0x88, 0x3a, 0x8a, 0x46, 0x5, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x31, 0x88, 0x7a, 0x2a, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x24, 0x88, 0x7a, 0x1d, 0x8a, 0x46, 0x6, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x4e, 0x88, 0x7a, 0x47, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x41, 0x88, 0x7a, 0x3a, 0x8a, 0x46, 0x7, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x6b, 0x88, 0x7a, 0x64, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x5e, 0x88, 0x7a, 0x57, 0x8d, 0x52, 0x74, 0x8a, 0x46, 0x8, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x14, 0x88, 0x7a, 0xd, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x7, 0x88, 0x3a, 0x8a, 0x46, 0x9, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x31, 0x88, 0x7a, 0x2a, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x24, 0x88, 0x7a, 0x1d, 0x8a, 0x46, 0xa, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x4e, 0x88, 0x7a, 0x47, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x41, 0x88, 0x7a, 0x3a, 0x8a, 0x46, 0xb, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x6b, 0x88, 0x7a, 0x64, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x5e, 0x88, 0x7a, 0x57, 0x66, 0x8b, 0x1e, 0x66, 0x8b, 0x4e, 0x2, 0x8b, 0x15, 0xd0, 0x9c, 0x20, 0x10, 0xeb, 0x3, 0x2e, 0x8b, 0xc0, 0x8a, 0xe5, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc1, 0x8a, 0xe0, 0x89, 0x7, 0x8a, 0xe1, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc5, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xe1, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc5, 0x8a, 0xe0, 0x89, 0x7, 0x8a, 0xe1, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc1, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xe5, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc1, 0x8a, 0xe0, 0x89, 0x7, 0x8a, 0xe1, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc1, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xe1, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc1, 0x8a, 0xe0, 0x89, 0x7, 0x8a, 0xe1, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc1, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xe3, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc1, 0x8a, 0xe0, 0x89, 0x7, 0x8a, 0xe7, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xe7, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc7, 0x8a, 0xe0, 0x89, 0x7, 0x8a, 0xe7, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc7, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xe7, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc7, 0x8a, 0xe0, 0x89, 0x7, 0x8a, 0xe7, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc7, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x3, 0xfa, 0x8a, 0xe7, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc7, 0x8a, 0xe0, 0x89, 0x7, 0x8a, 0xe7, 0x8a, 0xc4, 0xc1, 0xe0, 0x10, 0x8a, 0xc7, 0x8a, 0xe0, 0x89, 0x47, 0x4, 0x83, 0xc6, 0xc, 0x2b, 0x7d, 0xf0, 0xc3, 0x2e, 0x8b, 0xc0, 0x33, 0xc0, 0x8d, 0xd, 0x10, 0xf5, 0x1b, 0x10, 0x8d, 0x15, 0x9d, 0xf8, 0x18, 0x10, 0x8a, 0x46, 0x4, 0x8b, 0x1c, 0x81, 0x88, 0x1a, 0x88, 0x7a, 0x2, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x7, 0x88, 0x7a, 0x9, 0x8a, 0x46, 0x5, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x10, 0x88, 0x7a, 0x12, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x17, 0x88, 0x7a, 0x19, 0x8a, 0x46, 0x6, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x25, 0x88, 0x7a, 0x27, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x2c, 0x88, 0x7a, 0x2e, 0x8a, 0x46, 0x7, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x35, 0x88, 0x7a, 0x37, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x3c, 0x88, 0x7a, 0x3e, 0x8a, 0x46, 0x8, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x4a, 0x88, 0x7a, 0x4c, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x51, 0x88, 0x7a, 0x53, 0x8a, 0x46, 0x9, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x5a, 0x88, 0x7a, 0x5c, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x61, 0x88, 0x7a, 0x63, 0x8a, 0x46, 0xa, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x6f, 0x88, 0x7a, 0x71, 0xc1, 0xeb, 0x10, 0x88, 0x5a, 0x76, 0x88, 0x7a, 0x78, 0x8a, 0x46, 0xb, 0x8b, 0x1c, 0x81, 0x88, 0x5a, 0x7f, 0x88, 0xba, 0x81, 0, 0, 0, 0xc1, 0xeb, 0x10, 0x88, 0x9a, 0x86, 0, 0, 0, 0x88, 0xba, 0x88, 0, 0, 0, 0x66, 0x8b, 0x1e, 0x66, 0x8b, 0x4e, 0x2, 0x8b, 0x15, 0xd0, 0x9c, 0x20, 0x10, 0xeb, 0x3, 0x2e, 0x8b, 0xc0, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x89, 0x4, 0x3a, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x89, 0x44, 0x3a, 0x4, 0x8d, 0x3c, 0x57, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x89, 0x4, 0x3a, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x89, 0x44, 0x3a, 0x4, 0x8d, 0x3c, 0x57, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x89, 0x4, 0x3a, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x89, 0x44, 0x3a, 0x4, 0x8d, 0x3c, 0x57, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x7, 0x89, 0x4, 0x3a, 0x8a, 0xc3, 0x8a, 0xe3, 0xc1, 0xe0, 0x10, 0x8a, 0xc3, 0x8a, 0xe3, 0x89, 0x47, 0x4, 0x89, 0x44, 0x3a, 0x4, 0x3, 0xfa, 0x83, 0xc6, 0xc, 0x2b, 0x7d, 0xf0, 0xc3};

    uint8_t code_curr[sizeof(code_template)];
    mem_seg_pg_raw(cs, eip, sizeof(code_curr)).sub_space(0, sizeof(code_curr)).copy_to(code_curr);

    const uint32_t code_pc_start = eip;


    clear(0x1018f408, 0x2);
    clear(0x1018f40a, 0x2);
    clear(0x1018f40f, 0x2);
    clear(0x1018f411, 0x2);
    clear(0x1018f413, 0x2);
    clear(0x1018f415, 0x2);
    clear(0x1018f417, 0x2);
    clear(0x1018f41c, 0x2);
    clear(0x1018f41e, 0x2);
    clear(0x1018f420, 0x3);
    clear(0x1018f425, 0x2);
    clear(0x1018f427, 0x2);
    clear(0x1018f42c, 0x2);
    clear(0x1018f42e, 0x2);
    clear(0x1018f430, 0x2);
    clear(0x1018f432, 0x2);
    clear(0x1018f434, 0x2);
    clear(0x1018f439, 0x2);
    clear(0x1018f43b, 0x2);
    clear(0x1018f43d, 0x3);
    clear(0x1018f442, 0x2);
    clear(0x1018f444, 0x2);
    clear(0x1018f449, 0x2);
    clear(0x1018f44b, 0x2);
    clear(0x1018f44d, 0x2);
    clear(0x1018f44f, 0x2);
    clear(0x1018f451, 0x2);
    clear(0x1018f456, 0x2);
    clear(0x1018f458, 0x2);
    clear(0x1018f45a, 0x3);
    clear(0x1018f45f, 0x2);
    clear(0x1018f461, 0x2);
    clear(0x1018f466, 0x2);
    clear(0x1018f468, 0x2);
    clear(0x1018f46a, 0x2);
    clear(0x1018f46c, 0x2);
    clear(0x1018f46e, 0x2);
    clear(0x1018f473, 0x2);
    clear(0x1018f475, 0x2);
    clear(0x1018f477, 0x3);
    clear(0x1018f47c, 0x2);
    clear(0x1018f47e, 0x2);
    clear(0x1018f483, 0x2);
    clear(0x1018f485, 0x2);
    clear(0x1018f487, 0x2);
    clear(0x1018f489, 0x2);
    clear(0x1018f48b, 0x2);
    clear(0x1018f490, 0x2);
    clear(0x1018f492, 0x2);
    clear(0x1018f494, 0x3);
    clear(0x1018f499, 0x2);
    clear(0x1018f49b, 0x2);
    clear(0x1018f4a0, 0x2);
    clear(0x1018f4a2, 0x2);
    clear(0x1018f4a4, 0x2);
    clear(0x1018f4a6, 0x2);
    clear(0x1018f4a8, 0x2);
    clear(0x1018f4ad, 0x2);
    clear(0x1018f4af, 0x2);
    clear(0x1018f4b1, 0x3);
    clear(0x1018f4b6, 0x2);
    clear(0x1018f4b8, 0x2);
    clear(0x1018f4bd, 0x2);
    clear(0x1018f4bf, 0x2);
    clear(0x1018f4c1, 0x2);
    clear(0x1018f4c3, 0x2);
    clear(0x1018f4c5, 0x2);
    clear(0x1018f4ca, 0x2);
    clear(0x1018f4cc, 0x2);
    clear(0x1018f4ce, 0x3);
    clear(0x1018f4d3, 0x2);
    clear(0x1018f4d5, 0x2);
    clear(0x1018f4da, 0x2);
    clear(0x1018f4dc, 0x2);
    clear(0x1018f4de, 0x2);
    clear(0x1018f4e0, 0x2);
    clear(0x1018f4e2, 0x2);
    clear(0x1018f4e7, 0x2);
    clear(0x1018f4e9, 0x2);
    clear(0x1018f4eb, 0x3);
    clear(0x1018f56c, 0x2);
    clear(0x1018f56e, 0x2);
    clear(0x1018f573, 0x2);
    clear(0x1018f575, 0x2);
    clear(0x1018f577, 0x2);
    clear(0x1018f579, 0x3);
    clear(0x1018f57c, 0x2);
    clear(0x1018f57e, 0x2);
    clear(0x1018f583, 0x2);
    clear(0x1018f585, 0x2);
    clear(0x1018f587, 0x3);
    clear(0x1018f591, 0x2);
    clear(0x1018f593, 0x2);
    clear(0x1018f598, 0x2);
    clear(0x1018f59a, 0x2);
    clear(0x1018f59c, 0x2);
    clear(0x1018f59e, 0x3);
    clear(0x1018f5a1, 0x2);
    clear(0x1018f5a3, 0x2);
    clear(0x1018f5a8, 0x2);
    clear(0x1018f5aa, 0x2);
    clear(0x1018f5ac, 0x3);
    clear(0x1018f5b6, 0x2);
    clear(0x1018f5b8, 0x2);
    clear(0x1018f5bd, 0x2);
    clear(0x1018f5bf, 0x2);
    clear(0x1018f5c1, 0x2);
    clear(0x1018f5c3, 0x3);
    clear(0x1018f5c6, 0x2);
    clear(0x1018f5c8, 0x2);
    clear(0x1018f5cd, 0x2);
    clear(0x1018f5cf, 0x2);
    clear(0x1018f5d1, 0x3);
    clear(0x1018f5db, 0x2);
    clear(0x1018f5dd, 0x2);
    clear(0x1018f5e2, 0x2);
    clear(0x1018f5e4, 0x2);
    clear(0x1018f5e6, 0x2);
    clear(0x1018f5e8, 0x3);
    clear(0x1018f5eb, 0x2);
    clear(0x1018f5ed, 0x2);
    clear(0x1018f5f2, 0x2);
    clear(0x1018f5f4, 0x2);
    clear(0x1018f5f6, 0x3);
    clear(0x1018f6dc, 0x2);
    clear(0x1018f6de, 0x2);
    clear(0x1018f6e3, 0x2);
    clear(0x1018f6e5, 0x2);
    clear(0x1018f6e7, 0x2);
    clear(0x1018f6e9, 0x2);
    clear(0x1018f6eb, 0x2);
    clear(0x1018f6f0, 0x2);
    clear(0x1018f6f2, 0x2);
    clear(0x1018f6f4, 0x3);
    clear(0x1018f6f9, 0x2);
    clear(0x1018f6fb, 0x2);
    clear(0x1018f700, 0x2);
    clear(0x1018f702, 0x2);
    clear(0x1018f704, 0x2);
    clear(0x1018f706, 0x2);
    clear(0x1018f708, 0x2);
    clear(0x1018f70d, 0x2);
    clear(0x1018f70f, 0x2);
    clear(0x1018f711, 0x3);
    clear(0x1018f716, 0x2);
    clear(0x1018f718, 0x2);
    clear(0x1018f71d, 0x2);
    clear(0x1018f71f, 0x2);
    clear(0x1018f721, 0x2);
    clear(0x1018f723, 0x2);
    clear(0x1018f725, 0x2);
    clear(0x1018f72a, 0x2);
    clear(0x1018f72c, 0x2);
    clear(0x1018f72e, 0x3);
    clear(0x1018f733, 0x2);
    clear(0x1018f735, 0x2);
    clear(0x1018f73a, 0x2);
    clear(0x1018f73c, 0x2);
    clear(0x1018f73e, 0x2);
    clear(0x1018f740, 0x2);
    clear(0x1018f742, 0x2);
    clear(0x1018f747, 0x2);
    clear(0x1018f749, 0x2);
    clear(0x1018f74b, 0x3);
    clear(0x1018f750, 0x2);
    clear(0x1018f752, 0x2);
    clear(0x1018f757, 0x2);
    clear(0x1018f759, 0x2);
    clear(0x1018f75b, 0x2);
    clear(0x1018f75d, 0x2);
    clear(0x1018f75f, 0x2);
    clear(0x1018f764, 0x2);
    clear(0x1018f766, 0x2);
    clear(0x1018f768, 0x3);
    clear(0x1018f76d, 0x2);
    clear(0x1018f76f, 0x2);
    clear(0x1018f774, 0x2);
    clear(0x1018f776, 0x2);
    clear(0x1018f778, 0x2);
    clear(0x1018f77a, 0x2);
    clear(0x1018f77c, 0x2);
    clear(0x1018f781, 0x2);
    clear(0x1018f783, 0x2);
    clear(0x1018f785, 0x3);
    clear(0x1018f78a, 0x2);
    clear(0x1018f78c, 0x2);
    clear(0x1018f791, 0x2);
    clear(0x1018f793, 0x2);
    clear(0x1018f795, 0x2);
    clear(0x1018f797, 0x2);
    clear(0x1018f799, 0x2);
    clear(0x1018f79e, 0x2);
    clear(0x1018f7a0, 0x2);
    clear(0x1018f7a2, 0x3);
    clear(0x1018f7a7, 0x2);
    clear(0x1018f7a9, 0x2);
    clear(0x1018f7ae, 0x2);
    clear(0x1018f7b0, 0x2);
    clear(0x1018f7b2, 0x2);
    clear(0x1018f7b4, 0x2);
    clear(0x1018f7b6, 0x2);
    clear(0x1018f7bb, 0x2);
    clear(0x1018f7bd, 0x2);
    clear(0x1018f7bf, 0x3);
    clear(0x1018f89c, 0x2);
    clear(0x1018f89e, 0x2);
    clear(0x1018f8a3, 0x2);
    clear(0x1018f8a5, 0x2);
    clear(0x1018f8a7, 0x2);
    clear(0x1018f8a9, 0x3);
    clear(0x1018f8ac, 0x2);
    clear(0x1018f8ae, 0x2);
    clear(0x1018f8b3, 0x2);
    clear(0x1018f8b5, 0x2);
    clear(0x1018f8b7, 0x3);
    clear(0x1018f8c1, 0x2);
    clear(0x1018f8c3, 0x2);
    clear(0x1018f8c8, 0x2);
    clear(0x1018f8ca, 0x2);
    clear(0x1018f8cc, 0x2);
    clear(0x1018f8ce, 0x3);
    clear(0x1018f8d1, 0x2);
    clear(0x1018f8d3, 0x2);
    clear(0x1018f8d8, 0x2);
    clear(0x1018f8da, 0x2);
    clear(0x1018f8dc, 0x3);
    clear(0x1018f8e6, 0x2);
    clear(0x1018f8e8, 0x2);
    clear(0x1018f8ed, 0x2);
    clear(0x1018f8ef, 0x2);
    clear(0x1018f8f1, 0x2);
    clear(0x1018f8f3, 0x3);
    clear(0x1018f8f6, 0x2);
    clear(0x1018f8f8, 0x2);
    clear(0x1018f8fd, 0x2);
    clear(0x1018f8ff, 0x2);
    clear(0x1018f901, 0x3);
    clear(0x1018f90b, 0x2);
    clear(0x1018f90d, 0x2);
    clear(0x1018f912, 0x2);
    clear(0x1018f914, 0x2);
    clear(0x1018f916, 0x2);
    clear(0x1018f918, 0x3);
    clear(0x1018f91b, 0x2);
    clear(0x1018f91d, 0x2);
    clear(0x1018f922, 0x2);
    clear(0x1018f924, 0x2);
    clear(0x1018f926, 0x3);


    II(0x1018f284, 0x2)   mov(eax, memd_a32(ds, esi));          /* mov eax, [esi] */
    II(0x1018f286, 0x2)   cmp(al, ah);                          /* cmp al, ah */
    II(0x1018f288, 0x6)   jad(0x1018f608, 0x37a);               /* ja dword 0x1018f608 */
    II(0x1018f28e, 0x3)   shr(eax, 0x10);                       /* shr eax, 0x10 */
    II(0x1018f291, 0x2)   cmp(al, ah);                          /* cmp al, ah */
    II(0x1018f293, 0x6)   jad(0x1018f4f8, 0x25f);               /* ja dword 0x1018f4f8 */
    II(0x1018f299, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018f29b, 0x6)   lea(ecx, 0x101bf510);                 /* lea ecx, [0x101bf510] */
    II(0x1018f2a1, 0x6)   lea(edx, 0x1018f409);                 /* lea edx, [0x1018f409] */
    II(0x1018f2a7, 0x3)   mov(al, memb_a32(ds, esi + 0x4));     /* mov al, [esi+0x4] */
    II(0x1018f2aa, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f2ad, 0x2)   mov(memb_a32(ds, edx), bl);           /* mov [edx], bl */
    II(0x1018f2af, 0x3)   mov(memb_a32(ds, edx + 0x2), bh);     /* mov [edx+0x2], bh */
    II(0x1018f2b2, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f2b5, 0x3)   mov(memb_a32(ds, edx + 0x7), bl);     /* mov [edx+0x7], bl */
    II(0x1018f2b8, 0x3)   mov(memb_a32(ds, edx + 0x9), bh);     /* mov [edx+0x9], bh */
    II(0x1018f2bb, 0x3)   mov(al, memb_a32(ds, esi + 0x5));     /* mov al, [esi+0x5] */
    II(0x1018f2be, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f2c1, 0x3)   mov(memb_a32(ds, edx + 0xd), bl);     /* mov [edx+0xd], bl */
    II(0x1018f2c4, 0x3)   mov(memb_a32(ds, edx + 0xf), bh);     /* mov [edx+0xf], bh */
    II(0x1018f2c7, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f2ca, 0x3)   mov(memb_a32(ds, edx + 0x14), bl);    /* mov [edx+0x14], bl */
    II(0x1018f2cd, 0x3)   mov(memb_a32(ds, edx + 0x16), bh);    /* mov [edx+0x16], bh */
    II(0x1018f2d0, 0x3)   mov(al, memb_a32(ds, esi + 0x6));     /* mov al, [esi+0x6] */
    II(0x1018f2d3, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f2d6, 0x3)   mov(memb_a32(ds, edx + 0x1d), bl);    /* mov [edx+0x1d], bl */
    II(0x1018f2d9, 0x3)   mov(memb_a32(ds, edx + 0x1f), bh);    /* mov [edx+0x1f], bh */
    II(0x1018f2dc, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f2df, 0x3)   mov(memb_a32(ds, edx + 0x24), bl);    /* mov [edx+0x24], bl */
    II(0x1018f2e2, 0x3)   mov(memb_a32(ds, edx + 0x26), bh);    /* mov [edx+0x26], bh */
    II(0x1018f2e5, 0x3)   mov(al, memb_a32(ds, esi + 0x7));     /* mov al, [esi+0x7] */
    II(0x1018f2e8, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f2eb, 0x3)   mov(memb_a32(ds, edx + 0x2a), bl);    /* mov [edx+0x2a], bl */
    II(0x1018f2ee, 0x3)   mov(memb_a32(ds, edx + 0x2c), bh);    /* mov [edx+0x2c], bh */
    II(0x1018f2f1, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f2f4, 0x3)   mov(memb_a32(ds, edx + 0x31), bl);    /* mov [edx+0x31], bl */
    II(0x1018f2f7, 0x3)   mov(memb_a32(ds, edx + 0x33), bh);    /* mov [edx+0x33], bh */
    II(0x1018f2fa, 0x3)   mov(al, memb_a32(ds, esi + 0x8));     /* mov al, [esi+0x8] */
    II(0x1018f2fd, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f300, 0x3)   mov(memb_a32(ds, edx + 0x3a), bl);    /* mov [edx+0x3a], bl */
    II(0x1018f303, 0x3)   mov(memb_a32(ds, edx + 0x3c), bh);    /* mov [edx+0x3c], bh */
    II(0x1018f306, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f309, 0x3)   mov(memb_a32(ds, edx + 0x41), bl);    /* mov [edx+0x41], bl */
    II(0x1018f30c, 0x3)   mov(memb_a32(ds, edx + 0x43), bh);    /* mov [edx+0x43], bh */
    II(0x1018f30f, 0x3)   mov(al, memb_a32(ds, esi + 0x9));     /* mov al, [esi+0x9] */
    II(0x1018f312, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f315, 0x3)   mov(memb_a32(ds, edx + 0x47), bl);    /* mov [edx+0x47], bl */
    II(0x1018f318, 0x3)   mov(memb_a32(ds, edx + 0x49), bh);    /* mov [edx+0x49], bh */
    II(0x1018f31b, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f31e, 0x3)   mov(memb_a32(ds, edx + 0x4e), bl);    /* mov [edx+0x4e], bl */
    II(0x1018f321, 0x3)   mov(memb_a32(ds, edx + 0x50), bh);    /* mov [edx+0x50], bh */
    II(0x1018f324, 0x3)   mov(al, memb_a32(ds, esi + 0xa));     /* mov al, [esi+0xa] */
    II(0x1018f327, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f32a, 0x3)   mov(memb_a32(ds, edx + 0x57), bl);    /* mov [edx+0x57], bl */
    II(0x1018f32d, 0x3)   mov(memb_a32(ds, edx + 0x59), bh);    /* mov [edx+0x59], bh */
    II(0x1018f330, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f333, 0x3)   mov(memb_a32(ds, edx + 0x5e), bl);    /* mov [edx+0x5e], bl */
    II(0x1018f336, 0x3)   mov(memb_a32(ds, edx + 0x60), bh);    /* mov [edx+0x60], bh */
    II(0x1018f339, 0x3)   mov(al, memb_a32(ds, esi + 0xb));     /* mov al, [esi+0xb] */
    II(0x1018f33c, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f33f, 0x3)   mov(memb_a32(ds, edx + 0x64), bl);    /* mov [edx+0x64], bl */
    II(0x1018f342, 0x3)   mov(memb_a32(ds, edx + 0x66), bh);    /* mov [edx+0x66], bh */
    II(0x1018f345, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f348, 0x3)   mov(memb_a32(ds, edx + 0x6b), bl);    /* mov [edx+0x6b], bl */
    II(0x1018f34b, 0x3)   mov(memb_a32(ds, edx + 0x6d), bh);    /* mov [edx+0x6d], bh */
    II(0x1018f34e, 0x3)   lea(edx, edx + 0x74);                 /* lea edx, [edx+0x74] */
    II(0x1018f351, 0x3)   mov(al, memb_a32(ds, esi + 0xc));     /* mov al, [esi+0xc] */
    II(0x1018f354, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f357, 0x2)   mov(memb_a32(ds, edx), bl);           /* mov [edx], bl */
    II(0x1018f359, 0x3)   mov(memb_a32(ds, edx + 0x2), bh);     /* mov [edx+0x2], bh */
    II(0x1018f35c, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f35f, 0x3)   mov(memb_a32(ds, edx + 0x7), bl);     /* mov [edx+0x7], bl */
    II(0x1018f362, 0x3)   mov(memb_a32(ds, edx + 0x9), bh);     /* mov [edx+0x9], bh */
    II(0x1018f365, 0x3)   mov(al, memb_a32(ds, esi + 0xd));     /* mov al, [esi+0xd] */
    II(0x1018f368, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f36b, 0x3)   mov(memb_a32(ds, edx + 0xd), bl);     /* mov [edx+0xd], bl */
    II(0x1018f36e, 0x3)   mov(memb_a32(ds, edx + 0xf), bh);     /* mov [edx+0xf], bh */
    II(0x1018f371, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f374, 0x3)   mov(memb_a32(ds, edx + 0x14), bl);    /* mov [edx+0x14], bl */
    II(0x1018f377, 0x3)   mov(memb_a32(ds, edx + 0x16), bh);    /* mov [edx+0x16], bh */
    II(0x1018f37a, 0x3)   mov(al, memb_a32(ds, esi + 0xe));     /* mov al, [esi+0xe] */
    II(0x1018f37d, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f380, 0x3)   mov(memb_a32(ds, edx + 0x1d), bl);    /* mov [edx+0x1d], bl */
    II(0x1018f383, 0x3)   mov(memb_a32(ds, edx + 0x1f), bh);    /* mov [edx+0x1f], bh */
    II(0x1018f386, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f389, 0x3)   mov(memb_a32(ds, edx + 0x24), bl);    /* mov [edx+0x24], bl */
    II(0x1018f38c, 0x3)   mov(memb_a32(ds, edx + 0x26), bh);    /* mov [edx+0x26], bh */
    II(0x1018f38f, 0x3)   mov(al, memb_a32(ds, esi + 0xf));     /* mov al, [esi+0xf] */
    II(0x1018f392, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f395, 0x3)   mov(memb_a32(ds, edx + 0x2a), bl);    /* mov [edx+0x2a], bl */
    II(0x1018f398, 0x3)   mov(memb_a32(ds, edx + 0x2c), bh);    /* mov [edx+0x2c], bh */
    II(0x1018f39b, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f39e, 0x3)   mov(memb_a32(ds, edx + 0x31), bl);    /* mov [edx+0x31], bl */
    II(0x1018f3a1, 0x3)   mov(memb_a32(ds, edx + 0x33), bh);    /* mov [edx+0x33], bh */
    II(0x1018f3a4, 0x3)   mov(al, memb_a32(ds, esi + 0x10));    /* mov al, [esi+0x10] */
    II(0x1018f3a7, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f3aa, 0x3)   mov(memb_a32(ds, edx + 0x3a), bl);    /* mov [edx+0x3a], bl */
    II(0x1018f3ad, 0x3)   mov(memb_a32(ds, edx + 0x3c), bh);    /* mov [edx+0x3c], bh */
    II(0x1018f3b0, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f3b3, 0x3)   mov(memb_a32(ds, edx + 0x41), bl);    /* mov [edx+0x41], bl */
    II(0x1018f3b6, 0x3)   mov(memb_a32(ds, edx + 0x43), bh);    /* mov [edx+0x43], bh */
    II(0x1018f3b9, 0x3)   mov(al, memb_a32(ds, esi + 0x11));    /* mov al, [esi+0x11] */
    II(0x1018f3bc, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f3bf, 0x3)   mov(memb_a32(ds, edx + 0x47), bl);    /* mov [edx+0x47], bl */
    II(0x1018f3c2, 0x3)   mov(memb_a32(ds, edx + 0x49), bh);    /* mov [edx+0x49], bh */
    II(0x1018f3c5, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f3c8, 0x3)   mov(memb_a32(ds, edx + 0x4e), bl);    /* mov [edx+0x4e], bl */
    II(0x1018f3cb, 0x3)   mov(memb_a32(ds, edx + 0x50), bh);    /* mov [edx+0x50], bh */
    II(0x1018f3ce, 0x3)   mov(al, memb_a32(ds, esi + 0x12));    /* mov al, [esi+0x12] */
    II(0x1018f3d1, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f3d4, 0x3)   mov(memb_a32(ds, edx + 0x57), bl);    /* mov [edx+0x57], bl */
    II(0x1018f3d7, 0x3)   mov(memb_a32(ds, edx + 0x59), bh);    /* mov [edx+0x59], bh */
    II(0x1018f3da, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f3dd, 0x3)   mov(memb_a32(ds, edx + 0x5e), bl);    /* mov [edx+0x5e], bl */
    II(0x1018f3e0, 0x3)   mov(memb_a32(ds, edx + 0x60), bh);    /* mov [edx+0x60], bh */
    II(0x1018f3e3, 0x3)   mov(al, memb_a32(ds, esi + 0x13));    /* mov al, [esi+0x13] */
    II(0x1018f3e6, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f3e9, 0x3)   mov(memb_a32(ds, edx + 0x64), bl);    /* mov [edx+0x64], bl */
    II(0x1018f3ec, 0x3)   mov(memb_a32(ds, edx + 0x66), bh);    /* mov [edx+0x66], bh */
    II(0x1018f3ef, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f3f2, 0x3)   mov(memb_a32(ds, edx + 0x6b), bl);    /* mov [edx+0x6b], bl */
    II(0x1018f3f5, 0x3)   mov(memb_a32(ds, edx + 0x6d), bh);    /* mov [edx+0x6d], bh */
    II(0x1018f3f8, 0x3)   mov(bx, memw_a32(ds, esi));           /* mov bx, [esi] */
    II(0x1018f3fb, 0x4)   mov(cx, memw_a32(ds, esi + 0x2));     /* mov cx, [esi+0x2] */
    II(0x1018f3ff, 0x6)   mov(edx, memd_a32(ds, 0x10209cd0));   /* mov edx, [0x10209cd0] */
    II(0x1018f405, 0x2)   jmpd(0x1018f408, 0x1);                /* jmp 0x1018f408 */
//    II(0x1018f407, 0x1)   /* Недостижимый код. */
l_0x1018f408:
    II(0x1018f408, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f40a, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f40c, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f40f, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f411, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f413, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f415, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f417, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f419, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f41c, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f41e, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f420, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f423, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f425, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f427, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f429, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f42c, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f42e, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f430, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f432, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f434, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f436, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f439, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f43b, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f43d, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f440, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f442, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f444, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f446, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f449, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f44b, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f44d, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f44f, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f451, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f453, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f456, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f458, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f45a, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f45d, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f45f, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f461, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f463, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f466, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f468, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f46a, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f46c, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f46e, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f470, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f473, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f475, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f477, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f47a, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f47c, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f47e, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f480, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f483, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f485, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f487, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f489, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f48b, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f48d, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f490, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f492, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f494, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f497, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f499, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f49b, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f49d, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f4a0, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4a2, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4a4, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f4a6, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4a8, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4aa, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f4ad, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4af, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4b1, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f4b4, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f4b6, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4b8, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4ba, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f4bd, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4bf, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4c1, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f4c3, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4c5, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4c7, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f4ca, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4cc, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4ce, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f4d1, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f4d3, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4d5, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4d7, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f4da, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4dc, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4de, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f4e0, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4e2, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4e4, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f4e7, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f4e9, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f4eb, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f4ee, 0x3)   add(esi, 0x14);                       /* add esi, 0x14 */
    II(0x1018f4f1, 0x3)   sub(edi, memd_a32(ss, ebp - 0x10));   /* sub edi, [ebp-0x10] */
    II(0x1018f4f4, 0x1)   __retd__();                               /* ret  */
//    II(0x1018f4f5, 0x3)   /* Недостижимый код. */
l_0x1018f4f8:
    II(0x1018f4f8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018f4fa, 0x6)   lea(ecx, 0x101bf510);                 /* lea ecx, [0x101bf510] */
    II(0x1018f500, 0x6)   lea(edx, 0x1018f56d);                 /* lea edx, [0x1018f56d] */
    II(0x1018f506, 0x3)   mov(al, memb_a32(ds, esi + 0x4));     /* mov al, [esi+0x4] */
    II(0x1018f509, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f50c, 0x3)   mov(memb_a32(ds, edx + 0x17), bl);    /* mov [edx+0x17], bl */
    II(0x1018f50f, 0x3)   mov(memb_a32(ds, edx + 0x10), bh);    /* mov [edx+0x10], bh */
    II(0x1018f512, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f515, 0x3)   mov(memb_a32(ds, edx + 0x7), bl);     /* mov [edx+0x7], bl */
    II(0x1018f518, 0x2)   mov(memb_a32(ds, edx), bh);           /* mov [edx], bh */
    II(0x1018f51a, 0x3)   mov(al, memb_a32(ds, esi + 0x5));     /* mov al, [esi+0x5] */
    II(0x1018f51d, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f520, 0x3)   mov(memb_a32(ds, edx + 0x3c), bl);    /* mov [edx+0x3c], bl */
    II(0x1018f523, 0x3)   mov(memb_a32(ds, edx + 0x35), bh);    /* mov [edx+0x35], bh */
    II(0x1018f526, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f529, 0x3)   mov(memb_a32(ds, edx + 0x2c), bl);    /* mov [edx+0x2c], bl */
    II(0x1018f52c, 0x3)   mov(memb_a32(ds, edx + 0x25), bh);    /* mov [edx+0x25], bh */
    II(0x1018f52f, 0x3)   mov(al, memb_a32(ds, esi + 0x6));     /* mov al, [esi+0x6] */
    II(0x1018f532, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f535, 0x3)   mov(memb_a32(ds, edx + 0x61), bl);    /* mov [edx+0x61], bl */
    II(0x1018f538, 0x3)   mov(memb_a32(ds, edx + 0x5a), bh);    /* mov [edx+0x5a], bh */
    II(0x1018f53b, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f53e, 0x3)   mov(memb_a32(ds, edx + 0x51), bl);    /* mov [edx+0x51], bl */
    II(0x1018f541, 0x3)   mov(memb_a32(ds, edx + 0x4a), bh);    /* mov [edx+0x4a], bh */
    II(0x1018f544, 0x3)   mov(al, memb_a32(ds, esi + 0x7));     /* mov al, [esi+0x7] */
    II(0x1018f547, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f54a, 0x6)   mov(memb_a32(ds, edx + 0x86), bl);    /* mov [edx+0x86], bl */
    II(0x1018f550, 0x3)   mov(memb_a32(ds, edx + 0x7f), bh);    /* mov [edx+0x7f], bh */
    II(0x1018f553, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f556, 0x3)   mov(memb_a32(ds, edx + 0x76), bl);    /* mov [edx+0x76], bl */
    II(0x1018f559, 0x3)   mov(memb_a32(ds, edx + 0x6f), bh);    /* mov [edx+0x6f], bh */
    II(0x1018f55c, 0x3)   mov(bx, memw_a32(ds, esi));           /* mov bx, [esi] */
    II(0x1018f55f, 0x4)   mov(cx, memw_a32(ds, esi + 0x2));     /* mov cx, [esi+0x2] */
    II(0x1018f563, 0x6)   mov(edx, memd_a32(ds, 0x10209cd0));   /* mov edx, [0x10209cd0] */
    II(0x1018f569, 0x2)   jmpd(0x1018f56c, 0x1);                /* jmp 0x1018f56c */
//    II(0x1018f56b, 0x1)   /* Недостижимый код. */
l_0x1018f56c:
    II(0x1018f56c, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f56e, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f570, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f573, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f575, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f577, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f579, 0x3)   __mov__(memd_a32(ds, edx + edi), eax);    /* __mov__ [edx+edi], eax */
    II(0x1018f57c, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f57e, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f580, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f583, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f585, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f587, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f58a, 0x4)   mov(memd_a32(ds, edx + edi + 0x4), eax); /* __mov__ [edx+edi+0x4], eax */
    II(0x1018f58e, 0x3)   lea(edi, edi + edx * 0x2);            /* lea edi, [edi+edx*2] */
    II(0x1018f591, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f593, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f595, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f598, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f59a, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f59c, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f59e, 0x3)   __mov__(memd_a32(ds, edx + edi), eax);    /* __mov__ [edx+edi], eax */
    II(0x1018f5a1, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f5a3, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f5a5, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f5a8, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f5aa, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f5ac, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f5af, 0x4)   mov(memd_a32(ds, edx + edi + 0x4), eax); /* __mov__ [edx+edi+0x4], eax */
    II(0x1018f5b3, 0x3)   lea(edi, edi + edx * 0x2);            /* lea edi, [edi+edx*2] */
    II(0x1018f5b6, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f5b8, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f5ba, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f5bd, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f5bf, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f5c1, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f5c3, 0x3)   __mov__(memd_a32(ds, edx + edi), eax);    /* __mov__ [edx+edi], eax */
    II(0x1018f5c6, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f5c8, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f5ca, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f5cd, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f5cf, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f5d1, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f5d4, 0x4)   mov(memd_a32(ds, edx + edi + 0x4), eax); /* __mov__ [edx+edi+0x4], eax */
    II(0x1018f5d8, 0x3)   lea(edi, edi + edx * 0x2);            /* lea edi, [edi+edx*2] */
    II(0x1018f5db, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f5dd, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f5df, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f5e2, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f5e4, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f5e6, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f5e8, 0x3)   __mov__(memd_a32(ds, edx + edi), eax);    /* __mov__ [edx+edi], eax */
    II(0x1018f5eb, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f5ed, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f5ef, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f5f2, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f5f4, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f5f6, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f5f9, 0x4)   mov(memd_a32(ds, edx + edi + 0x4), eax); /* __mov__ [edx+edi+0x4], eax */
    II(0x1018f5fd, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f5ff, 0x3)   add(esi, 0x8);                        /* add esi, 0x8 */
    II(0x1018f602, 0x3)   sub(edi, memd_a32(ss, ebp - 0x10));   /* sub edi, [ebp-0x10] */
    II(0x1018f605, 0x1)   __retd__();                               /* ret  */
//    II(0x1018f606, 0x2)   /* Недостижимый код. */
l_0x1018f608:
    II(0x1018f608, 0x3)   shr(eax, 0x10);                       /* shr eax, 0x10 */
    II(0x1018f60b, 0x2)   cmp(al, ah);                          /* cmp al, ah */
    II(0x1018f60d, 0x6)   jad(0x1018f7cc, 0x1b9);               /* ja dword 0x1018f7cc */
    II(0x1018f613, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018f615, 0x6)   lea(ecx, 0x101bf510);                 /* lea ecx, [0x101bf510] */
    II(0x1018f61b, 0x6)   lea(edx, 0x1018f6dd);                 /* lea edx, [0x1018f6dd] */
    II(0x1018f621, 0x3)   mov(al, memb_a32(ds, esi + 0x4));     /* mov al, [esi+0x4] */
    II(0x1018f624, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f627, 0x3)   mov(memb_a32(ds, edx + 0x14), bl);    /* mov [edx+0x14], bl */
    II(0x1018f62a, 0x3)   mov(memb_a32(ds, edx + 0xd), bh);     /* mov [edx+0xd], bh */
    II(0x1018f62d, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f630, 0x3)   mov(memb_a32(ds, edx + 0x7), bl);     /* mov [edx+0x7], bl */
    II(0x1018f633, 0x2)   mov(memb_a32(ds, edx), bh);           /* mov [edx], bh */
    II(0x1018f635, 0x3)   mov(al, memb_a32(ds, esi + 0x5));     /* mov al, [esi+0x5] */
    II(0x1018f638, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f63b, 0x3)   mov(memb_a32(ds, edx + 0x31), bl);    /* mov [edx+0x31], bl */
    II(0x1018f63e, 0x3)   mov(memb_a32(ds, edx + 0x2a), bh);    /* mov [edx+0x2a], bh */
    II(0x1018f641, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f644, 0x3)   mov(memb_a32(ds, edx + 0x24), bl);    /* mov [edx+0x24], bl */
    II(0x1018f647, 0x3)   mov(memb_a32(ds, edx + 0x1d), bh);    /* mov [edx+0x1d], bh */
    II(0x1018f64a, 0x3)   mov(al, memb_a32(ds, esi + 0x6));     /* mov al, [esi+0x6] */
    II(0x1018f64d, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f650, 0x3)   mov(memb_a32(ds, edx + 0x4e), bl);    /* mov [edx+0x4e], bl */
    II(0x1018f653, 0x3)   mov(memb_a32(ds, edx + 0x47), bh);    /* mov [edx+0x47], bh */
    II(0x1018f656, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f659, 0x3)   mov(memb_a32(ds, edx + 0x41), bl);    /* mov [edx+0x41], bl */
    II(0x1018f65c, 0x3)   mov(memb_a32(ds, edx + 0x3a), bh);    /* mov [edx+0x3a], bh */
    II(0x1018f65f, 0x3)   mov(al, memb_a32(ds, esi + 0x7));     /* mov al, [esi+0x7] */
    II(0x1018f662, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f665, 0x3)   mov(memb_a32(ds, edx + 0x6b), bl);    /* mov [edx+0x6b], bl */
    II(0x1018f668, 0x3)   mov(memb_a32(ds, edx + 0x64), bh);    /* mov [edx+0x64], bh */
    II(0x1018f66b, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f66e, 0x3)   mov(memb_a32(ds, edx + 0x5e), bl);    /* mov [edx+0x5e], bl */
    II(0x1018f671, 0x3)   mov(memb_a32(ds, edx + 0x57), bh);    /* mov [edx+0x57], bh */
    II(0x1018f674, 0x3)   lea(edx, edx + 0x74);                 /* lea edx, [edx+0x74] */
    II(0x1018f677, 0x3)   mov(al, memb_a32(ds, esi + 0x8));     /* mov al, [esi+0x8] */
    II(0x1018f67a, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f67d, 0x3)   mov(memb_a32(ds, edx + 0x14), bl);    /* mov [edx+0x14], bl */
    II(0x1018f680, 0x3)   mov(memb_a32(ds, edx + 0xd), bh);     /* mov [edx+0xd], bh */
    II(0x1018f683, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f686, 0x3)   mov(memb_a32(ds, edx + 0x7), bl);     /* mov [edx+0x7], bl */
    II(0x1018f689, 0x2)   mov(memb_a32(ds, edx), bh);           /* mov [edx], bh */
    II(0x1018f68b, 0x3)   mov(al, memb_a32(ds, esi + 0x9));     /* mov al, [esi+0x9] */
    II(0x1018f68e, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f691, 0x3)   mov(memb_a32(ds, edx + 0x31), bl);    /* mov [edx+0x31], bl */
    II(0x1018f694, 0x3)   mov(memb_a32(ds, edx + 0x2a), bh);    /* mov [edx+0x2a], bh */
    II(0x1018f697, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f69a, 0x3)   mov(memb_a32(ds, edx + 0x24), bl);    /* mov [edx+0x24], bl */
    II(0x1018f69d, 0x3)   mov(memb_a32(ds, edx + 0x1d), bh);    /* mov [edx+0x1d], bh */
    II(0x1018f6a0, 0x3)   mov(al, memb_a32(ds, esi + 0xa));     /* mov al, [esi+0xa] */
    II(0x1018f6a3, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f6a6, 0x3)   mov(memb_a32(ds, edx + 0x4e), bl);    /* mov [edx+0x4e], bl */
    II(0x1018f6a9, 0x3)   mov(memb_a32(ds, edx + 0x47), bh);    /* mov [edx+0x47], bh */
    II(0x1018f6ac, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f6af, 0x3)   mov(memb_a32(ds, edx + 0x41), bl);    /* mov [edx+0x41], bl */
    II(0x1018f6b2, 0x3)   mov(memb_a32(ds, edx + 0x3a), bh);    /* mov [edx+0x3a], bh */
    II(0x1018f6b5, 0x3)   mov(al, memb_a32(ds, esi + 0xb));     /* mov al, [esi+0xb] */
    II(0x1018f6b8, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f6bb, 0x3)   mov(memb_a32(ds, edx + 0x6b), bl);    /* mov [edx+0x6b], bl */
    II(0x1018f6be, 0x3)   mov(memb_a32(ds, edx + 0x64), bh);    /* mov [edx+0x64], bh */
    II(0x1018f6c1, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f6c4, 0x3)   mov(memb_a32(ds, edx + 0x5e), bl);    /* mov [edx+0x5e], bl */
    II(0x1018f6c7, 0x3)   mov(memb_a32(ds, edx + 0x57), bh);    /* mov [edx+0x57], bh */
    II(0x1018f6ca, 0x3)   mov(bx, memw_a32(ds, esi));           /* mov bx, [esi] */
    II(0x1018f6cd, 0x4)   mov(cx, memw_a32(ds, esi + 0x2));     /* mov cx, [esi+0x2] */
    II(0x1018f6d1, 0x6)   mov(edx, memd_a32(ds, 0x10209cd0));   /* mov edx, [0x10209cd0] */
    II(0x1018f6d7, 0x2)   jmpd(0x1018f6dc, 0x3);                /* jmp 0x1018f6dc */
//    II(0x1018f6d9, 0x3)   /* Недостижимый код. */
l_0x1018f6dc:
    II(0x1018f6dc, 0x2)   __mov__(ah, ch);                          /* __mov__ ah, ch */
    II(0x1018f6de, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f6e0, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f6e3, 0x2)   __mov__(al, cl);                          /* __mov__ al, cl */
    II(0x1018f6e5, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f6e7, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f6e9, 0x2)   __mov__(ah, cl);                          /* __mov__ ah, cl */
    II(0x1018f6eb, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f6ed, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f6f0, 0x2)   __mov__(al, ch);                          /* __mov__ al, ch */
    II(0x1018f6f2, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f6f4, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f6f7, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f6f9, 0x2)   __mov__(ah, cl);                          /* __mov__ ah, cl */
    II(0x1018f6fb, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f6fd, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f700, 0x2)   __mov__(al, ch);                          /* __mov__ al, ch */
    II(0x1018f702, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f704, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f706, 0x2)   __mov__(ah, cl);                          /* __mov__ ah, cl */
    II(0x1018f708, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f70a, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f70d, 0x2)   __mov__(al, cl);                          /* __mov__ al, cl */
    II(0x1018f70f, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f711, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f714, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f716, 0x2)   __mov__(ah, ch);                          /* __mov__ ah, ch */
    II(0x1018f718, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f71a, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f71d, 0x2)   __mov__(al, cl);                          /* __mov__ al, cl */
    II(0x1018f71f, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f721, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f723, 0x2)   __mov__(ah, cl);                          /* __mov__ ah, cl */
    II(0x1018f725, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f727, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f72a, 0x2)   __mov__(al, cl);                          /* __mov__ al, cl */
    II(0x1018f72c, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f72e, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f731, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f733, 0x2)   __mov__(ah, cl);                          /* __mov__ ah, cl */
    II(0x1018f735, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f737, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f73a, 0x2)   __mov__(al, cl);                          /* __mov__ al, cl */
    II(0x1018f73c, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f73e, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f740, 0x2)   __mov__(ah, cl);                          /* __mov__ ah, cl */
    II(0x1018f742, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f744, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f747, 0x2)   __mov__(al, cl);                          /* __mov__ al, cl */
    II(0x1018f749, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f74b, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f74e, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f750, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f752, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f754, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f757, 0x2)   __mov__(al, cl);                          /* __mov__ al, cl */
    II(0x1018f759, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f75b, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f75d, 0x2)   __mov__(ah, bh);                          /* __mov__ ah, bh */
    II(0x1018f75f, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f761, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f764, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f766, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f768, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f76b, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f76d, 0x2)   __mov__(ah, bh);                          /* __mov__ ah, bh */
    II(0x1018f76f, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f771, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f774, 0x2)   __mov__(al, bh);                          /* __mov__ al, bh */
    II(0x1018f776, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f778, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f77a, 0x2)   __mov__(ah, bh);                          /* __mov__ ah, bh */
    II(0x1018f77c, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f77e, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f781, 0x2)   __mov__(al, bh);                          /* __mov__ al, bh */
    II(0x1018f783, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f785, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f788, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f78a, 0x2)   __mov__(ah, bh);                          /* __mov__ ah, bh */
    II(0x1018f78c, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f78e, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f791, 0x2)   __mov__(al, bh);                          /* __mov__ al, bh */
    II(0x1018f793, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f795, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f797, 0x2)   __mov__(ah, bh);                          /* __mov__ ah, bh */
    II(0x1018f799, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f79b, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f79e, 0x2)   __mov__(al, bh);                          /* __mov__ al, bh */
    II(0x1018f7a0, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f7a2, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f7a5, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f7a7, 0x2)   __mov__(ah, bh);                          /* __mov__ ah, bh */
    II(0x1018f7a9, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f7ab, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f7ae, 0x2)   __mov__(al, bh);                          /* __mov__ al, bh */
    II(0x1018f7b0, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f7b2, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f7b4, 0x2)   __mov__(ah, bh);                          /* __mov__ ah, bh */
    II(0x1018f7b6, 0x2)   __mov__(al, ah);                          /* __mov__ al, ah */
    II(0x1018f7b8, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f7bb, 0x2)   __mov__(al, bh);                          /* __mov__ al, bh */
    II(0x1018f7bd, 0x2)   __mov__(ah, al);                          /* __mov__ ah, al */
    II(0x1018f7bf, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f7c2, 0x3)   add(esi, 0xc);                        /* add esi, 0xc */
    II(0x1018f7c5, 0x3)   sub(edi, memd_a32(ss, ebp - 0x10));   /* sub edi, [ebp-0x10] */
    II(0x1018f7c8, 0x1)   __retd__();                               /* ret  */
//    II(0x1018f7c9, 0x3)   /* Недостижимый код. */
l_0x1018f7cc:
    II(0x1018f7cc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1018f7ce, 0x6)   lea(ecx, 0x101bf510);                 /* lea ecx, [0x101bf510] */
    II(0x1018f7d4, 0x6)   lea(edx, 0x1018f89d);                 /* lea edx, [0x1018f89d] */
    II(0x1018f7da, 0x3)   mov(al, memb_a32(ds, esi + 0x4));     /* mov al, [esi+0x4] */
    II(0x1018f7dd, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f7e0, 0x2)   mov(memb_a32(ds, edx), bl);           /* mov [edx], bl */
    II(0x1018f7e2, 0x3)   mov(memb_a32(ds, edx + 0x2), bh);     /* mov [edx+0x2], bh */
    II(0x1018f7e5, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f7e8, 0x3)   mov(memb_a32(ds, edx + 0x7), bl);     /* mov [edx+0x7], bl */
    II(0x1018f7eb, 0x3)   mov(memb_a32(ds, edx + 0x9), bh);     /* mov [edx+0x9], bh */
    II(0x1018f7ee, 0x3)   mov(al, memb_a32(ds, esi + 0x5));     /* mov al, [esi+0x5] */
    II(0x1018f7f1, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f7f4, 0x3)   mov(memb_a32(ds, edx + 0x10), bl);    /* mov [edx+0x10], bl */
    II(0x1018f7f7, 0x3)   mov(memb_a32(ds, edx + 0x12), bh);    /* mov [edx+0x12], bh */
    II(0x1018f7fa, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f7fd, 0x3)   mov(memb_a32(ds, edx + 0x17), bl);    /* mov [edx+0x17], bl */
    II(0x1018f800, 0x3)   mov(memb_a32(ds, edx + 0x19), bh);    /* mov [edx+0x19], bh */
    II(0x1018f803, 0x3)   mov(al, memb_a32(ds, esi + 0x6));     /* mov al, [esi+0x6] */
    II(0x1018f806, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f809, 0x3)   mov(memb_a32(ds, edx + 0x25), bl);    /* mov [edx+0x25], bl */
    II(0x1018f80c, 0x3)   mov(memb_a32(ds, edx + 0x27), bh);    /* mov [edx+0x27], bh */
    II(0x1018f80f, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f812, 0x3)   mov(memb_a32(ds, edx + 0x2c), bl);    /* mov [edx+0x2c], bl */
    II(0x1018f815, 0x3)   mov(memb_a32(ds, edx + 0x2e), bh);    /* mov [edx+0x2e], bh */
    II(0x1018f818, 0x3)   mov(al, memb_a32(ds, esi + 0x7));     /* mov al, [esi+0x7] */
    II(0x1018f81b, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f81e, 0x3)   mov(memb_a32(ds, edx + 0x35), bl);    /* mov [edx+0x35], bl */
    II(0x1018f821, 0x3)   mov(memb_a32(ds, edx + 0x37), bh);    /* mov [edx+0x37], bh */
    II(0x1018f824, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f827, 0x3)   mov(memb_a32(ds, edx + 0x3c), bl);    /* mov [edx+0x3c], bl */
    II(0x1018f82a, 0x3)   mov(memb_a32(ds, edx + 0x3e), bh);    /* mov [edx+0x3e], bh */
    II(0x1018f82d, 0x3)   mov(al, memb_a32(ds, esi + 0x8));     /* mov al, [esi+0x8] */
    II(0x1018f830, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f833, 0x3)   mov(memb_a32(ds, edx + 0x4a), bl);    /* mov [edx+0x4a], bl */
    II(0x1018f836, 0x3)   mov(memb_a32(ds, edx + 0x4c), bh);    /* mov [edx+0x4c], bh */
    II(0x1018f839, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f83c, 0x3)   mov(memb_a32(ds, edx + 0x51), bl);    /* mov [edx+0x51], bl */
    II(0x1018f83f, 0x3)   mov(memb_a32(ds, edx + 0x53), bh);    /* mov [edx+0x53], bh */
    II(0x1018f842, 0x3)   mov(al, memb_a32(ds, esi + 0x9));     /* mov al, [esi+0x9] */
    II(0x1018f845, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f848, 0x3)   mov(memb_a32(ds, edx + 0x5a), bl);    /* mov [edx+0x5a], bl */
    II(0x1018f84b, 0x3)   mov(memb_a32(ds, edx + 0x5c), bh);    /* mov [edx+0x5c], bh */
    II(0x1018f84e, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f851, 0x3)   mov(memb_a32(ds, edx + 0x61), bl);    /* mov [edx+0x61], bl */
    II(0x1018f854, 0x3)   mov(memb_a32(ds, edx + 0x63), bh);    /* mov [edx+0x63], bh */
    II(0x1018f857, 0x3)   mov(al, memb_a32(ds, esi + 0xa));     /* mov al, [esi+0xa] */
    II(0x1018f85a, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f85d, 0x3)   mov(memb_a32(ds, edx + 0x6f), bl);    /* mov [edx+0x6f], bl */
    II(0x1018f860, 0x3)   mov(memb_a32(ds, edx + 0x71), bh);    /* mov [edx+0x71], bh */
    II(0x1018f863, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f866, 0x3)   mov(memb_a32(ds, edx + 0x76), bl);    /* mov [edx+0x76], bl */
    II(0x1018f869, 0x3)   mov(memb_a32(ds, edx + 0x78), bh);    /* mov [edx+0x78], bh */
    II(0x1018f86c, 0x3)   mov(al, memb_a32(ds, esi + 0xb));     /* mov al, [esi+0xb] */
    II(0x1018f86f, 0x3)   mov(ebx, memd_a32(ds, ecx + eax * 0x4)); /* mov ebx, [ecx+eax*4] */
    II(0x1018f872, 0x3)   mov(memb_a32(ds, edx + 0x7f), bl);    /* mov [edx+0x7f], bl */
    II(0x1018f875, 0x6)   mov(memb_a32(ds, edx + 0x81), bh);    /* mov [edx+0x81], bh */
    II(0x1018f87b, 0x3)   shr(ebx, 0x10);                       /* shr ebx, 0x10 */
    II(0x1018f87e, 0x6)   mov(memb_a32(ds, edx + 0x86), bl);    /* mov [edx+0x86], bl */
    II(0x1018f884, 0x6)   mov(memb_a32(ds, edx + 0x88), bh);    /* mov [edx+0x88], bh */
    II(0x1018f88a, 0x3)   mov(bx, memw_a32(ds, esi));           /* mov bx, [esi] */
    II(0x1018f88d, 0x4)   mov(cx, memw_a32(ds, esi + 0x2));     /* mov cx, [esi+0x2] */
    II(0x1018f891, 0x6)   mov(edx, memd_a32(ds, 0x10209cd0));   /* mov edx, [0x10209cd0] */
    II(0x1018f897, 0x2)   jmpd(0x1018f89c, 0x3);                /* jmp 0x1018f89c */
//    II(0x1018f899, 0x3)   /* Недостижимый код. */
l_0x1018f89c:
    II(0x1018f89c, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f89e, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8a0, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f8a3, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8a5, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8a7, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f8a9, 0x3)   __mov__(memd_a32(ds, edx + edi), eax);    /* __mov__ [edx+edi], eax */
    II(0x1018f8ac, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8ae, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8b0, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f8b3, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8b5, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8b7, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f8ba, 0x4)   mov(memd_a32(ds, edx + edi + 0x4), eax); /* __mov__ [edx+edi+0x4], eax */
    II(0x1018f8be, 0x3)   lea(edi, edi + edx * 0x2);            /* lea edi, [edi+edx*2] */
    II(0x1018f8c1, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8c3, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8c5, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f8c8, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8ca, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8cc, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f8ce, 0x3)   __mov__(memd_a32(ds, edx + edi), eax);    /* __mov__ [edx+edi], eax */
    II(0x1018f8d1, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8d3, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8d5, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f8d8, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8da, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8dc, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f8df, 0x4)   mov(memd_a32(ds, edx + edi + 0x4), eax); /* __mov__ [edx+edi+0x4], eax */
    II(0x1018f8e3, 0x3)   lea(edi, edi + edx * 0x2);            /* lea edi, [edi+edx*2] */
    II(0x1018f8e6, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8e8, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8ea, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f8ed, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8ef, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8f1, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f8f3, 0x3)   __mov__(memd_a32(ds, edx + edi), eax);    /* __mov__ [edx+edi], eax */
    II(0x1018f8f6, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8f8, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f8fa, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f8fd, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f8ff, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f901, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f904, 0x4)   mov(memd_a32(ds, edx + edi + 0x4), eax); /* __mov__ [edx+edi+0x4], eax */
    II(0x1018f908, 0x3)   lea(edi, edi + edx * 0x2);            /* lea edi, [edi+edx*2] */
    II(0x1018f90b, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f90d, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f90f, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f912, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f914, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f916, 0x2)   __mov__(memd_a32(ds, edi), eax);          /* __mov__ [edi], eax */
    II(0x1018f918, 0x3)   __mov__(memd_a32(ds, edx + edi), eax);    /* __mov__ [edx+edi], eax */
    II(0x1018f91b, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f91d, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f91f, 0x3)   shl(eax, 0x10);                       /* shl eax, 0x10 */
    II(0x1018f922, 0x2)   __mov__(al, bl);                          /* __mov__ al, bl */
    II(0x1018f924, 0x2)   __mov__(ah, bl);                          /* __mov__ ah, bl */
    II(0x1018f926, 0x3)   __mov__(memd_a32(ds, edi + 0x4), eax);    /* __mov__ [edi+0x4], eax */
    II(0x1018f929, 0x4)   mov(memd_a32(ds, edx + edi + 0x4), eax); /* __mov__ [edx+edi+0x4], eax */
    II(0x1018f92d, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018f92f, 0x3)   add(esi, 0xc);                        /* add esi, 0xc */
    II(0x1018f932, 0x3)   sub(edi, memd_a32(ss, ebp - 0x10));   /* sub edi, [ebp-0x10] */
    II(0x1018f935, 0x1)   __retd__();                               /* ret  */
FUNC_END
