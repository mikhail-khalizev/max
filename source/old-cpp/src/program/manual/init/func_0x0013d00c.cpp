FUNC_BEGIN(0x0013d00c, 0xeca6ae9dd31d3083, 0x10, ({0x66, 0x53, 0x67, 0xf, 0xb6, 0x5d, 0x20, 0x80, 0xfb, 0x4, 0xf, 0x87, 0x20, 0, 0x68, 0x68, 0x3e, 0x1f, 0xe8, 0x8b, 0xfe, 0x53, 0x16, 0x55, 0x90, 0xe, 0xe8, 0xd, 0xc8, 0x5d, 0x5b, 0x5b, 0xe8, 0xf7, 0xfe, 0x66, 0x5b, 0xb, 0xc0, 0xf, 0x85, 0x74, 0, 0xeb, 0x77, 0x90, 0x66, 0x5b, 0x2e, 0xff, 0x2e, 0x80, 0x86, 0x66, 0x53, 0x67, 0xf, 0xb6, 0x5d, 0x20, 0x80, 0xfb, 0x4, 0xf, 0x87, 0x20, 0, 0x68, 0x68, 0x3e, 0x1f, 0xe8, 0x56, 0xfe, 0x53, 0x16, 0x55, 0x90, 0xe, 0xe8, 0x48, 0xc8, 0x5d, 0x5b, 0x5b, 0xe8, 0xc2, 0xfe, 0x66, 0x5b, 0xb, 0xc0, 0xf, 0x85, 0x3f, 0, 0xeb, 0x42, 0x90, 0x66, 0x5b, 0x2e, 0xff, 0x2e, 0x84, 0x86, 0x66, 0x53, 0x67, 0xf, 0xb6, 0x5d, 0x20, 0x80, 0xfb, 0x1, 0xf, 0x87, 0x20, 0, 0x68, 0x68, 0x3e, 0x1f, 0xe8, 0x21, 0xfe, 0x53, 0x16, 0x55, 0x90, 0xe, 0xe8, 0x71, 0xc8, 0x5d, 0x5b, 0x5b, 0xe8, 0x8d, 0xfe, 0x66, 0x5b, 0xb, 0xc0, 0xf, 0x85, 0xa, 0, 0xeb, 0xd, 0x90, 0x66, 0x5b, 0x2e, 0xff, 0x2e, 0x88, 0x86, 0x67, 0x80, 0x4d, 0x2c, 0x1, 0x66, 0x8b, 0xe5, 0x1f, 0x7, 0x66, 0x61, 0x66, 0xcf}))
    II(0x0013d00c, 0x2)   pushd(ebx);                           /* push ebx */
    II(0x0013d00e, 0x5)   movzx(bx, memb_a32(ss, ebp + 0x20));  /* movzx bx, byte [ebp+0x20] */
    II(0x0013d013, 0x3)   cmp(bl, 0x4);                         /* cmp bl, 0x4 */
    II(0x0013d016, 0x4)   jaw(0x0013d03a, 0x20);                /* ja word 0x13d03a */
    II(0x0013d01a, 0x3)   pushw(0x3e68);                        /* push word 0x3e68 */
    II(0x0013d01d, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013d01e, 0x3)   callw(0x0013ceac, -0x175);            /* call 0x13ceac */
    II(0x0013d021, 0x1)   pushw(bx);                            /* push bx */
    II(0x0013d022, 0x1)   pushw(ss);                            /* push ss */
    II(0x0013d023, 0x1)   pushw(bp);                            /* push bp */
//    II(0x0013d024, 0x1)   nop();                                /* nop  */
    II(0x0013d025, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013d026, 0x3)   callw(0x00139836, -0x37f3);           /* call 0x139836 */
    II(0x0013d029, 0x1)   popw(bp);                             /* pop bp */
    II(0x0013d02a, 0x1)   popw(bx);                             /* pop bx */
    II(0x0013d02b, 0x1)   popw(bx);                             /* pop bx */
    II(0x0013d02c, 0x3)   callw(0x0013cf26, -0x109);            /* call 0x13cf26 */
    II(0x0013d02f, 0x2)   popd(ebx);                            /* pop ebx */
    II(0x0013d031, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013d033, 0x4)   jnzw(0x0013d0ab, 0x74);               /* jnz word 0x13d0ab */
    II(0x0013d037, 0x2)   jmpw(0x0013d0b0, 0x77);               /* jmp 0x13d0b0 */
//    II(0x0013d039, 0x1)   /* Недостижимый код. */
l_0x0013d03a:
    II(0x0013d03a, 0x2)   popd(ebx);                            /* pop ebx */
    II(0x0013d03c, 0x5)   jmpw_a16_far_ind(cs, -0x7980);        /* jmp word far [cs:0x8680] */
//    II(0x0013d041, 0x6a)  /* Недостижимый код. */
l_0x0013d0ab:
    II(0x0013d0ab, 0x5)   or_(memb_a32(ss, ebp + 0x2c), 0x1);   /* or byte [ebp+0x2c], 0x1 */
l_0x0013d0b0:
    II(0x0013d0b0, 0x3)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x0013d0b3, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013d0b4, 0x1)   popw(es);                             /* pop es */
    II(0x0013d0b5, 0x2)   popad();                              /* popad  */
    II(0x0013d0b7, 0x2)   iretd();                              /* iretd  */
FUNC_END

