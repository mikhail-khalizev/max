FUNC_BEGIN(0x00007bb9, 0xf4e4dfaad5b8a217, 0x10, ({0xc8, 0x14, 0, 0, 0x57, 0x56, 0xc7, 0x46, 0xf8, 0, 0, 0xc7, 0x46, 0xfa, 0x8, 0, 0x8b, 0x46, 0x4, 0xc7, 0x46, 0xfc, 0, 0, 0x89, 0x46, 0xfe, 0xc4, 0x5e, 0xfc, 0x26, 0x8b, 0x37, 0x89, 0x76, 0xf0, 0x83, 0xe6, 0xf8, 0x3b, 0x76, 0x8, 0x75, 0xf, 0x8a, 0x46, 0xf0, 0x32, 0x46, 0xa, 0x25, 0x7, 0, 0x33, 0x46, 0xa, 0x26, 0x89, 0x7, 0x89, 0x76, 0xf8, 0x89, 0x76, 0xf6, 0xc4, 0x5e, 0xf8, 0x26, 0x8a, 0x47, 0x5, 0x2a, 0xe4, 0x89, 0x46, 0xf2, 0x26, 0xc6, 0x47, 0x5, 0x92, 0x83, 0x46, 0xfc, 0x2, 0xc4, 0x5e, 0xfc, 0x26, 0x8b, 0x3f, 0x8d, 0x47, 0x2, 0x89, 0x46, 0xfc, 0xeb, 0x1f, 0xc4, 0x5e, 0xfc, 0x83, 0x46, 0xfc, 0x2, 0x26, 0x8b, 0x7, 0x8b, 0x56, 0xf6, 0x8e, 0xc2, 0x8b, 0xd8, 0x8b, 0x4e, 0x8, 0x26, 0x39, 0xf, 0x75, 0x6, 0x8b, 0x4e, 0xa, 0x26, 0x89, 0xf, 0x4f, 0x79, 0xde, 0x8a, 0x46, 0xf2, 0xc4, 0x5e, 0xf8, 0x26, 0x88, 0x47, 0x5, 0xf6, 0x46, 0xf0, 0x3, 0x74, 0x85, 0x83, 0x46, 0x4, 0x8, 0xf6, 0x46, 0xf0, 0x2, 0x75, 0x3, 0xe9, 0x6d, 0xff, 0x8b, 0x46, 0x8, 0x89, 0x46, 0xf8, 0xc4, 0x5e, 0xf8, 0x26, 0xc6, 0x47, 0x5, 0x80, 0x8b, 0x46, 0xa, 0xc4, 0x5e, 0xf8, 0x26, 0x89, 0x47, 0x6, 0x5e, 0x5f, 0xc9, 0xc3}))
    II(0x00007bb9, 0x4)   enterw(0x14, 0);                      /* enter 0x14, 0x0 */
    II(0x00007bbd, 0x1)   pushw(di);                            /* push di */
    II(0x00007bbe, 0x1)   pushw(si);                            /* push si */
    II(0x00007bbf, 0x5)   mov(memw_a16(ss, bp - 0x8), 0);       /* mov word [bp-0x8], 0x0 */
    II(0x00007bc4, 0x5)   mov(memw_a16(ss, bp - 0x6), 0x8);     /* mov word [bp-0x6], 0x8 */
l_0x00007bc9:
    II(0x00007bc9, 0x3)   mov(ax, memw_a16(ss, bp + 0x4));      /* mov ax, [bp+0x4] */
    II(0x00007bcc, 0x5)   mov(memw_a16(ss, bp - 0x4), 0);       /* mov word [bp-0x4], 0x0 */
    II(0x00007bd1, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
l_0x00007bd4:
    II(0x00007bd4, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00007bd7, 0x3)   mov(si, memw_a16(es, bx));            /* mov si, [es:bx] */
    II(0x00007bda, 0x3)   mov(memw_a16(ss, bp - 0x10), si);     /* mov [bp-0x10], si */
    II(0x00007bdd, 0x3)   and_(si, -0x8 /* 0xf8 */);            /* and si, 0xf8 */
    II(0x00007be0, 0x3)   cmp(si, memw_a16(ss, bp + 0x8));      /* cmp si, [bp+0x8] */
    II(0x00007be3, 0x2)   jnzw(0x00007bf4, 0xf);                /* jnz 0x7bf4 */
    II(0x00007be5, 0x3)   mov(al, memb_a16(ss, bp - 0x10));     /* mov al, [bp-0x10] */
    II(0x00007be8, 0x3)   xor_(al, memb_a16(ss, bp + 0xa));     /* xor al, [bp+0xa] */
    II(0x00007beb, 0x3)   and_(ax, 0x7);                        /* and ax, 0x7 */
    II(0x00007bee, 0x3)   xor_(ax, memw_a16(ss, bp + 0xa));     /* xor ax, [bp+0xa] */
    II(0x00007bf1, 0x3)   mov(memw_a16(es, bx), ax);            /* mov [es:bx], ax */
l_0x00007bf4:
    II(0x00007bf4, 0x3)   mov(memw_a16(ss, bp - 0x8), si);      /* mov [bp-0x8], si */
    II(0x00007bf7, 0x3)   mov(memw_a16(ss, bp - 0xa), si);      /* mov [bp-0xa], si */
    II(0x00007bfa, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00007bfd, 0x4)   mov(al, memb_a16(es, bx + 0x5));      /* mov al, [es:bx+0x5] */
    II(0x00007c01, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x00007c03, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x00007c06, 0x5)   mov(memb_a16(es, bx + 0x5), 0x92);    /* mov byte [es:bx+0x5], 0x92 */
    II(0x00007c0b, 0x4)   add(memw_a16(ss, bp - 0x4), 0x2);     /* add word [bp-0x4], 0x2 */
    II(0x00007c0f, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00007c12, 0x3)   mov(di, memw_a16(es, bx));            /* mov di, [es:bx] */
    II(0x00007c15, 0x3)   lea(ax, bx + 0x2);                    /* lea ax, [bx+0x2] */
    II(0x00007c18, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00007c1b, 0x2)   jmpw(0x00007c3c, 0x1f);               /* jmp 0x7c3c */
l_0x00007c1d:
    II(0x00007c1d, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00007c20, 0x4)   add(memw_a16(ss, bp - 0x4), 0x2);     /* add word [bp-0x4], 0x2 */
    II(0x00007c24, 0x3)   mov(ax, memw_a16(es, bx));            /* mov ax, [es:bx] */
    II(0x00007c27, 0x3)   mov(dx, memw_a16(ss, bp - 0xa));      /* mov dx, [bp-0xa] */
    II(0x00007c2a, 0x2)   mov(es, dx);                          /* mov es, dx */
    II(0x00007c2c, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00007c2e, 0x3)   mov(cx, memw_a16(ss, bp + 0x8));      /* mov cx, [bp+0x8] */
    II(0x00007c31, 0x3)   cmp(memw_a16(es, bx), cx);            /* cmp [es:bx], cx */
    II(0x00007c34, 0x2)   jnzw(0x00007c3c, 0x6);                /* jnz 0x7c3c */
    II(0x00007c36, 0x3)   mov(cx, memw_a16(ss, bp + 0xa));      /* mov cx, [bp+0xa] */
    II(0x00007c39, 0x3)   mov(memw_a16(es, bx), cx);            /* mov [es:bx], cx */
l_0x00007c3c:
    II(0x00007c3c, 0x1)   dec(di);                              /* dec di */
    II(0x00007c3d, 0x2)   jnsw(0x00007c1d, -0x22);              /* jns 0x7c1d */
    II(0x00007c3f, 0x3)   mov(al, memb_a16(ss, bp - 0xe));      /* mov al, [bp-0xe] */
    II(0x00007c42, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00007c45, 0x4)   mov(memb_a16(es, bx + 0x5), al);      /* mov [es:bx+0x5], al */
    II(0x00007c49, 0x4)   test(memb_a16(ss, bp - 0x10), 0x3);   /* test byte [bp-0x10], 0x3 */
    II(0x00007c4d, 0x2)   jzw(0x00007bd4, -0x7b);               /* jz 0x7bd4 */
    II(0x00007c4f, 0x4)   add(memw_a16(ss, bp + 0x4), 0x8);     /* add word [bp+0x4], 0x8 */
    II(0x00007c53, 0x4)   test(memb_a16(ss, bp - 0x10), 0x2);   /* test byte [bp-0x10], 0x2 */
    II(0x00007c57, 0x2)   jnzw(0x00007c5c, 0x3);                /* jnz 0x7c5c */
    II(0x00007c59, 0x3)   jmpw(0x00007bc9, -0x93);              /* jmp 0x7bc9 */
l_0x00007c5c:
    II(0x00007c5c, 0x3)   mov(ax, memw_a16(ss, bp + 0x8));      /* mov ax, [bp+0x8] */
    II(0x00007c5f, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00007c62, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00007c65, 0x5)   mov(memb_a16(es, bx + 0x5), 0x80);    /* mov byte [es:bx+0x5], 0x80 */
    II(0x00007c6a, 0x3)   mov(ax, memw_a16(ss, bp + 0xa));      /* mov ax, [bp+0xa] */
    II(0x00007c6d, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00007c70, 0x4)   mov(memw_a16(es, bx + 0x6), ax);      /* mov [es:bx+0x6], ax */
    II(0x00007c74, 0x1)   popw(si);                             /* pop si */
    II(0x00007c75, 0x1)   popw(di);                             /* pop di */
    II(0x00007c76, 0x1)   leavew();                             /* leave  */
    II(0x00007c77, 0x1)   retw();                               /* ret  */
FUNC_END

