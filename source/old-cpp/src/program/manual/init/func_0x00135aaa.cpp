FUNC_BEGIN(0x00135aaa, 0x8b12e90fe4838c8, 0x10, ({0xc8, 0x36, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0x6a, 0x3, 0x90, 0xe, 0xe8, 0xbd, 0x8c, 0x83, 0xc4, 0x2, 0x89, 0x46, 0xe4, 0x68, 0, 0x10, 0x90, 0xe, 0xe8, 0xdd, 0x8c, 0x83, 0xc4, 0x2, 0xa3, 0x80, 0x4f, 0x89, 0x16, 0x82, 0x4f, 0x8b, 0xc2, 0xb, 0x6, 0x80, 0x4f, 0x75, 0x1f, 0x1e, 0x68, 0x58, 0x3, 0x68, 0xa, 0x9, 0xe, 0xe8, 0xcc, 0x1a, 0x83, 0xc4, 0x6, 0xff, 0x76, 0xe4, 0x90, 0xe, 0xe8, 0x87, 0x8c, 0x83, 0xc4, 0x2, 0xb8, 0x1, 0, 0xe9, 0x58, 0x6, 0x83, 0x3e, 0x84, 0x9, 0, 0x74, 0x1f, 0x6a, 0x14, 0x90, 0xe, 0xe8, 0x9e, 0x8c, 0x83, 0xc4, 0x2, 0xa3, 0xc4, 0x4f, 0x89, 0x16, 0xc6, 0x4f, 0x8b, 0xc2, 0xb, 0x6, 0xc4, 0x4f, 0x75, 0x6, 0xc7, 0x6, 0x84, 0x9, 0, 0, 0xff, 0x76, 0xe4, 0x90, 0xe, 0xe8, 0x50, 0x8c, 0x83, 0xc4, 0x2, 0xa1, 0x1c, 0x20, 0x8b, 0x16, 0x1e, 0x20, 0xa3, 0xd0, 0x4f, 0x89, 0x16, 0xd2, 0x4f, 0xa0, 0x9d, 0x51, 0xc0, 0xe8, 0x2, 0x2a, 0xe4, 0x89, 0x46, 0xfa, 0xb, 0xc0, 0x75, 0x6, 0x40, 0x89, 0x46, 0xfa, 0xeb, 0xb, 0xf7, 0x6, 0x9c, 0x51, 0xff, 0x3, 0x74, 0x3, 0xff, 0x46, 0xfa, 0xff, 0x76, 0xfa, 0xe, 0xe8, 0x14, 0x19, 0x83, 0xc4, 0x2, 0xa3, 0xe4, 0x4f, 0x89, 0x16, 0xe6, 0x4f, 0x8b, 0xc2, 0xb, 0x6, 0xe4, 0x4f, 0x75, 0x14, 0x1e, 0x68, 0x64, 0x3, 0x68, 0xa, 0x9, 0xe, 0xe8, 0x35, 0x1a, 0x83, 0xc4, 0x6, 0xb8, 0x1, 0, 0xe9, 0xcc, 0x5, 0x83, 0x3e, 0xa0, 0x51, 0, 0x75, 0x1f, 0xe, 0xe8, 0x99, 0xf, 0xa3, 0x92, 0x9, 0x89, 0x16, 0x94, 0x9, 0xe, 0xe8, 0xac, 0xfa, 0xa1, 0xe4, 0x4f, 0x8b, 0x16, 0xe6, 0x4f, 0xa3, 0xe8, 0x4f, 0x89, 0x16, 0xea, 0x4f, 0xeb, 0x72, 0x68, 0, 0x20, 0xc4, 0x1e, 0x18, 0x20, 0x26, 0x8b, 0x47, 0x12, 0x2b, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x52, 0x50, 0x90, 0xe, 0xe8, 0x98, 0x8d, 0x83, 0xc4, 0x6, 0xa3, 0x92, 0x9, 0x89, 0x16, 0x94, 0x9, 0xff, 0x36, 0xe6, 0x4f, 0xff, 0x36, 0xe4, 0x4f, 0xe, 0xe8, 0x92, 0xfa, 0x83, 0xc4, 0x4, 0xa3, 0xe8, 0x4f, 0x89, 0x16, 0xea, 0x4f, 0xc7, 0x46, 0xec, 0, 0, 0xeb, 0x4, 0x90, 0xff, 0x46, 0xec, 0x81, 0x7e, 0xec, 0, 0x4, 0x73, 0x1c, 0x8b, 0x5e, 0xec, 0xc1, 0xe3, 0x2, 0xc4, 0x36, 0x92, 0x9, 0x26, 0x8b, 0, 0x26, 0x8b, 0x50, 0x2, 0x89, 0x87, 0x60, 0x3f, 0x89, 0x97, 0x62, 0x3f, 0xeb, 0xdb, 0x90, 0xa1, 0xe8, 0x4f, 0x8b, 0x16, 0xea, 0x4f, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xc7, 0x46, 0xca, 0xfc, 0x3, 0xc7, 0x46, 0xcc, 0, 0, 0xc7, 0x46, 0xec, 0, 0, 0xeb, 0x13, 0xff, 0x46, 0xec, 0x83, 0x46, 0xf6, 0x1, 0x83, 0x56, 0xf8, 0, 0x83, 0x46, 0xca, 0x1, 0x83, 0x56, 0xcc, 0, 0x8b, 0x46, 0xfa, 0x39, 0x46, 0xec, 0x73, 0x59, 0x8b, 0x46, 0xf6, 0x8b, 0x56, 0xf8, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x8b, 0xc8, 0x8b, 0x5e, 0xca, 0xc1, 0xe3, 0x2, 0xc4, 0x36, 0x92, 0x9, 0x26, 0x33, 0, 0x80, 0xe4, 0xf, 0x8b, 0xfa, 0x2b, 0xd2, 0x33, 0xc8, 0x33, 0xfa, 0x26, 0x89, 0x8, 0x26, 0x89, 0x78, 0x2, 0xc4, 0x36, 0x92, 0x9, 0x26, 0x80, 0x8, 0x1, 0xc4, 0x36, 0x92, 0x9, 0x26, 0x80, 0x8, 0x2, 0xc4, 0x36, 0x92, 0x9, 0x26, 0x80, 0x8, 0x4, 0xeb, 0x8c, 0x90, 0xe, 0xe8, 0xc8, 0x31, 0x8a, 0x66, 0xfa, 0xc0, 0xe4, 0x4, 0x2a, 0xc0, 0x50, 0xff, 0x36, 0xe6, 0x4f, 0xff, 0x36, 0xe4, 0x4f, 0x8b, 0xf0, 0x90, 0xe, 0xe8, 0x83, 0x8c, 0x83, 0xc4, 0x6, 0xa3, 0xec, 0x4f, 0x89, 0x16, 0xee, 0x4f, 0x56, 0x52, 0x50, 0x90, 0xe, 0xe8, 0xd7, 0x31, 0x83, 0xc4, 0x6, 0xa1, 0x9c, 0x51, 0x89, 0x46, 0xfa, 0xc7, 0x46, 0xd6, 0, 0, 0xc7, 0x46, 0xd8, 0, 0xff, 0x90, 0xe, 0xe8, 0x1b, 0x8b, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0xd0, 0xe6, 0x1a, 0xf6, 0xd1, 0xfa, 0xd1, 0xd8, 0xd1, 0xfa, 0xd1, 0xd8, 0x89, 0x46, 0xdc, 0x89, 0x56, 0xde, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0x29, 0x46, 0xdc, 0x19, 0x56, 0xde, 0xa1, 0x30, 0, 0x8b, 0x16, 0x32, 0, 0x8b, 0xe, 0x28, 0, 0x8b, 0x1e, 0x2a, 0, 0x29, 0x4e, 0xdc, 0x19, 0x5e, 0xde, 0x39, 0x56, 0xde, 0x72, 0xd, 0x77, 0x5, 0x39, 0x46, 0xdc, 0x76, 0x6, 0x89, 0x46, 0xdc, 0x89, 0x56, 0xde, 0x8b, 0x46, 0xdc, 0x8b, 0x56, 0xde, 0x39, 0x16, 0x36, 0, 0x72, 0x1a, 0x77, 0x6, 0x39, 0x6, 0x34, 0, 0x76, 0x12, 0x68, 0xe, 0x9, 0xe, 0xe8, 0x3b, 0x18, 0x83, 0xc4, 0x2, 0xb8, 0x1, 0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x24, 0xfc, 0x83, 0xe2, 0x3f, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x52, 0x50, 0xe, 0xe8, 0xc9, 0x4, 0x83, 0xc4, 0x4, 0xb, 0xc0, 0x74, 0x8, 0xb8, 0x1, 0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0xc7, 0x46, 0xe6, 0x1, 0, 0xeb, 0x4, 0x90, 0xff, 0x46, 0xe6, 0x8b, 0x46, 0xfa, 0x39, 0x46, 0xe6, 0x77, 0x6f, 0xe, 0xe8, 0x9d, 0x3, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xb, 0xd0, 0x75, 0x17, 0x1e, 0x68, 0x6e, 0x3, 0x68, 0xa, 0x9, 0xe, 0xe8, 0xe2, 0x17, 0x83, 0xc4, 0x6, 0xb8, 0x1, 0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x90, 0x8b, 0x5e, 0xe6, 0xc1, 0xe3, 0x2, 0xc4, 0x36, 0xec, 0x4f, 0x26, 0x8b, 0, 0x33, 0x46, 0xfc, 0x80, 0xe4, 0xf, 0x2b, 0xd2, 0x33, 0x46, 0xfc, 0x33, 0x56, 0xfe, 0x26, 0x89, 0, 0x26, 0x89, 0x50, 0x2, 0xc4, 0x36, 0xec, 0x4f, 0x26, 0x80, 0x8, 0x1, 0xc4, 0x36, 0xec, 0x4f, 0x26, 0x80, 0x8, 0x2, 0xc4, 0x36, 0xec, 0x4f, 0x26, 0x80, 0x8, 0x4, 0x90, 0xe, 0xe8, 0x7a, 0x30, 0x81, 0x46, 0xfc, 0, 0x10, 0x83, 0x56, 0xfe, 0, 0xeb, 0x86, 0x6a, 0xff, 0x68, 0, 0xff, 0x6a, 0, 0x90, 0xe, 0xe8, 0x36, 0x8b, 0x83, 0xc4, 0x6, 0x89, 0x46, 0xe8, 0x89, 0x56, 0xea, 0xa3, 0xf0, 0x4f, 0x89, 0x16, 0xf2, 0x4f, 0x68, 0x80, 0, 0x68, 0x92, 0, 0x8b, 0x46, 0xfa, 0x2b, 0xd2, 0x52, 0x50, 0x68, 0, 0xff, 0x52, 0xff, 0x76, 0xea, 0x8b, 0xf0, 0x8b, 0xfa, 0xe, 0xe8, 0xba, 0x3, 0x83, 0xc4, 0xe, 0x8b, 0xc6, 0x8b, 0xd7, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x52, 0x50, 0x57, 0x68, 0, 0x10, 0xff, 0x76, 0xea, 0x90, 0xe, 0xe8, 0xcf, 0x33, 0x83, 0xc4, 0xa, 0x57, 0x68, 0, 0x10, 0xa1, 0x34, 0, 0x8b, 0x16, 0x36, 0, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x89, 0x46, 0xf2, 0x89, 0x56, 0xf4, 0x52, 0x50, 0x90, 0xe, 0xe8, 0x24, 0x7f, 0xa3, 0xa6, 0, 0x89, 0x16, 0xa8, 0, 0x90, 0xe, 0xe8, 0xd3, 0x2f, 0xa1, 0xf2, 0x4f, 0xa3, 0xaa, 0, 0x50, 0xe8, 0xe0, 0x31, 0x83, 0xc4, 0x2, 0xa1, 0x1c, 0x20, 0x8b, 0x16, 0x1e, 0x20, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x52, 0x50, 0x90, 0xe, 0xe8, 0x37, 0x22, 0x83, 0xc4, 0x4, 0xb, 0xc0, 0x74, 0x8, 0xb8, 0x1, 0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x57, 0x57, 0x68, 0x58, 0x3e, 0x68, 0x20, 0x3c, 0x90, 0xe, 0xe8, 0xe1, 0x68, 0x83, 0xc4, 0x8, 0xa2, 0xa7, 0x51, 0x57, 0x57, 0x68, 0x58, 0x3e, 0x68, 0xa4, 0x45, 0x90, 0xe, 0xe8, 0xce, 0x68, 0x83, 0xc4, 0x8, 0xa2, 0xa6, 0x51, 0x57, 0x57, 0x68, 0x58, 0x3e, 0x68, 0x2, 0x46, 0x90, 0xe, 0xe8, 0xbb, 0x68, 0x83, 0xc4, 0x8, 0xa2, 0xb5, 0x51, 0xa1, 0x1c, 0x20, 0x8b, 0x16, 0x1e, 0x20, 0xa3, 0xc8, 0x1f, 0x89, 0x16, 0xca, 0x1f, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x5, 0xff, 0xff, 0x81, 0xd2, 0xff, 0xf, 0xa3, 0xd8, 0x4f, 0x89, 0x16, 0xda, 0x4f, 0x2b, 0xc0, 0x89, 0x46, 0xfe, 0x89, 0x46, 0xfc, 0xeb, 0x9, 0x90, 0x83, 0x46, 0xfc, 0x1, 0x83, 0x56, 0xfe, 0, 0xa1, 0x1c, 0x20, 0x8b, 0x16, 0x1e, 0x20, 0x39, 0x56, 0xfe, 0x77, 0x66, 0x72, 0x5, 0x39, 0x46, 0xfc, 0x73, 0x5f, 0x6a, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0x37, 0x32, 0x83, 0xc4, 0xa, 0x6a, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0x21, 0x32, 0x83, 0xc4, 0xa, 0x6a, 0, 0x6a, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0x5b, 0x32, 0x83, 0xc4, 0xc, 0x6a, 0, 0x6a, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xff, 0x36, 0xb6, 0x4f, 0xff, 0x36, 0xb4, 0x4f, 0xe8, 0x43, 0x32, 0x83, 0xc4, 0xc, 0xeb, 0x87, 0x90, 0x6a, 0x1, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x2d, 0x1, 0, 0x83, 0xda, 0, 0x52, 0x50, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0xd0, 0x31, 0x83, 0xc4, 0xa, 0xa1, 0x1c, 0x20, 0x8b, 0x16, 0x1e, 0x20, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xec, 0xf7, 0x6, 0x1c, 0x20, 0xff, 0x3, 0x74, 0x4, 0x40, 0x89, 0x46, 0xec, 0x83, 0x46, 0xec, 0x40, 0xa1, 0x8c, 0x4f, 0x8b, 0x16, 0x8e, 0x4f, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xc7, 0x46, 0xda, 0x40, 0, 0xeb, 0xc, 0xff, 0x46, 0xda, 0x81, 0x46, 0xf6, 0, 0x10, 0x83, 0x56, 0xf8, 0, 0x8b, 0x46, 0xda, 0x39, 0x46, 0xec, 0x76, 0x5a, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xe, 0xe8, 0x58, 0x1, 0x83, 0xc4, 0x4, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x8b, 0x5e, 0xda, 0xc1, 0xe3, 0x2, 0xc4, 0x36, 0x92, 0x9, 0x26, 0x8b, 0x8, 0x80, 0xe5, 0xf, 0x2b, 0xff, 0xb, 0xc1, 0x26, 0x89, 0, 0x26, 0x89, 0x50, 0x2, 0xc4, 0x36, 0x92, 0x9, 0x26, 0x80, 0x8, 0x1, 0xc4, 0x36, 0x92, 0x9, 0x26, 0x80, 0x8, 0x2, 0xc4, 0x36, 0x92, 0x9, 0x26, 0x80, 0x8, 0x4, 0xeb, 0x92, 0x90, 0xe, 0xe8, 0xd0, 0x2d, 0xa1, 0x24, 0, 0x8b, 0x16, 0x26, 0, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xa3, 0xa8, 0x1f, 0x89, 0x16, 0xaa, 0x1f, 0xa1, 0x24, 0, 0x8b, 0x16, 0x26, 0, 0x24, 0xfc, 0x83, 0xe2, 0x3f, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xa3, 0xc4, 0x1f, 0x89, 0x16, 0xc6, 0x1f, 0xa3, 0xb8, 0x1f, 0x89, 0x16, 0xba, 0x1f, 0xa3, 0xac, 0x1f, 0x89, 0x16, 0xae, 0x1f, 0xa3, 0xb4, 0x1f, 0x89, 0x16, 0xb6, 0x1f, 0xa1, 0xc0, 0x1f, 0x8b, 0x16, 0xc2, 0x1f, 0xa3, 0xb8, 0x1f, 0x89, 0x16, 0xba, 0x1f, 0xa3, 0xbc, 0x1f, 0x89, 0x16, 0xbe, 0x1f, 0x2d, 0xc, 0, 0x83, 0xda, 0, 0xa3, 0xb0, 0x1f, 0x89, 0x16, 0xb2, 0x1f, 0x68, 0, 0x10, 0x6a, 0x40, 0x6a, 0, 0x90, 0xe, 0xe8, 0x27, 0x88, 0x83, 0xc4, 0x6, 0xa3, 0xe8, 0x1f, 0x89, 0x16, 0xea, 0x1f, 0x2b, 0xc0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x00135aaa, 0x4)   enterw(0x36, 0);                      /* enter 0x36, 0x0 */
    II(0x00135aae, 0x1)   pushw(di);                            /* push di */
    II(0x00135aaf, 0x1)   pushw(si);                            /* push si */
    II(0x00135ab0, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135ab1, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00135ab4, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00135ab6, 0x2)   pushw(0x3);                           /* push 0x3 */
//    II(0x00135ab8, 0x1)   nop();                                /* nop  */
    II(0x00135ab9, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135aba, 0x3)   callw(0x0012e77a, -0x7343);           /* call 0x12e77a */
    II(0x00135abd, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135ac0, 0x3)   mov(memw_a16(ss, bp - 0x1c), ax);     /* mov [bp-0x1c], ax */
    II(0x00135ac3, 0x3)   pushw(0x1000);                        /* push word 0x1000 */
//    II(0x00135ac6, 0x1)   nop();                                /* nop  */
    II(0x00135ac7, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135ac8, 0x3)   callw(0x0012e7a8, -0x7323);           /* call 0x12e7a8 */
    II(0x00135acb, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135ace, 0x3)   mov(memw_a16(ds, 0x4f80), ax);        /* mov [0x4f80], ax */
    II(0x00135ad1, 0x4)   mov(memw_a16(ds, 0x4f82), dx);        /* mov [0x4f82], dx */
    II(0x00135ad5, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x00135ad7, 0x4)   or_(ax, memw_a16(ds, 0x4f80));        /* or ax, [0x4f80] */
    II(0x00135adb, 0x2)   jnzw(0x00135afc, 0x1f);               /* jnz 0x135afc */
    II(0x00135add, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135ade, 0x3)   pushw(0x358);                         /* push word 0x358 */
    II(0x00135ae1, 0x3)   pushw(0x90a);                         /* push word 0x90a */
    II(0x00135ae4, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135ae5, 0x3)   callw(0x001375b4, 0x1acc);            /* call 0x1375b4 */
    II(0x00135ae8, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00135aeb, 0x3)   pushw(memw_a16(ss, bp - 0x1c));       /* push word [bp-0x1c] */
//    II(0x00135aee, 0x1)   nop();                                /* nop  */
    II(0x00135aef, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135af0, 0x3)   callw(0x0012e77a, -0x7379);           /* call 0x12e77a */
    II(0x00135af3, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135af6, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135af9, 0x3)   jmpw(0x00136154, 0x658);              /* jmp 0x136154 */
l_0x00135afc:
    II(0x00135afc, 0x5)   cmp(memw_a16(ds, 0x984), 0);          /* cmp word [0x984], 0x0 */
    II(0x00135b01, 0x2)   jzw(0x00135b22, 0x1f);                /* jz 0x135b22 */
    II(0x00135b03, 0x2)   pushw(0x14);                          /* push 0x14 */
//    II(0x00135b05, 0x1)   nop();                                /* nop  */
    II(0x00135b06, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135b07, 0x3)   callw(0x0012e7a8, -0x7362);           /* call 0x12e7a8 */
    II(0x00135b0a, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135b0d, 0x3)   mov(memw_a16(ds, 0x4fc4), ax);        /* mov [0x4fc4], ax */
    II(0x00135b10, 0x4)   mov(memw_a16(ds, 0x4fc6), dx);        /* mov [0x4fc6], dx */
    II(0x00135b14, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x00135b16, 0x4)   or_(ax, memw_a16(ds, 0x4fc4));        /* or ax, [0x4fc4] */
    II(0x00135b1a, 0x2)   jnzw(0x00135b22, 0x6);                /* jnz 0x135b22 */
    II(0x00135b1c, 0x6)   mov(memw_a16(ds, 0x984), 0);          /* mov word [0x984], 0x0 */
l_0x00135b22:
    II(0x00135b22, 0x3)   pushw(memw_a16(ss, bp - 0x1c));       /* push word [bp-0x1c] */
//    II(0x00135b25, 0x1)   nop();                                /* nop  */
    II(0x00135b26, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135b27, 0x3)   callw(0x0012e77a, -0x73b0);           /* call 0x12e77a */
    II(0x00135b2a, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135b2d, 0x3)   mov(ax, memw_a16(ds, 0x201c));        /* mov ax, [0x201c] */
    II(0x00135b30, 0x4)   mov(dx, memw_a16(ds, 0x201e));        /* mov dx, [0x201e] */
    II(0x00135b34, 0x3)   mov(memw_a16(ds, 0x4fd0), ax);        /* mov [0x4fd0], ax */
    II(0x00135b37, 0x4)   mov(memw_a16(ds, 0x4fd2), dx);        /* mov [0x4fd2], dx */
    II(0x00135b3b, 0x3)   mov(al, memb_a16(ds, 0x519d));        /* mov al, [0x519d] */
    II(0x00135b3e, 0x3)   shr(al, 0x2);                         /* shr al, 0x2 */
    II(0x00135b41, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x00135b43, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x00135b46, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00135b48, 0x2)   jnzw(0x00135b50, 0x6);                /* jnz 0x135b50 */
    II(0x00135b4a, 0x1)   inc(ax);                              /* inc ax */
    II(0x00135b4b, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x00135b4e, 0x2)   jmpw(0x00135b5b, 0xb);                /* jmp 0x135b5b */
l_0x00135b50:
    II(0x00135b50, 0x6)   test(memw_a16(ds, 0x519c), 0x3ff);    /* test word [0x519c], 0x3ff */
    II(0x00135b56, 0x2)   jzw(0x00135b5b, 0x3);                 /* jz 0x135b5b */
    II(0x00135b58, 0x3)   inc(memw_a16(ss, bp - 0x6));          /* inc word [bp-0x6] */
l_0x00135b5b:
    II(0x00135b5b, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x00135b5e, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135b5f, 0x3)   callw(0x00137476, 0x1914);            /* call 0x137476 */
    II(0x00135b62, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135b65, 0x3)   mov(memw_a16(ds, 0x4fe4), ax);        /* mov [0x4fe4], ax */
    II(0x00135b68, 0x4)   mov(memw_a16(ds, 0x4fe6), dx);        /* mov [0x4fe6], dx */
    II(0x00135b6c, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x00135b6e, 0x4)   or_(ax, memw_a16(ds, 0x4fe4));        /* or ax, [0x4fe4] */
    II(0x00135b72, 0x2)   jnzw(0x00135b88, 0x14);               /* jnz 0x135b88 */
    II(0x00135b74, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135b75, 0x3)   pushw(0x364);                         /* push word 0x364 */
    II(0x00135b78, 0x3)   pushw(0x90a);                         /* push word 0x90a */
    II(0x00135b7b, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135b7c, 0x3)   callw(0x001375b4, 0x1a35);            /* call 0x1375b4 */
    II(0x00135b7f, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00135b82, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135b85, 0x3)   jmpw(0x00136154, 0x5cc);              /* jmp 0x136154 */
l_0x00135b88:
    II(0x00135b88, 0x5)   cmp(memw_a16(ds, 0x51a0), 0);         /* cmp word [0x51a0], 0x0 */
    II(0x00135b8d, 0x2)   jnzw(0x00135bae, 0x1f);               /* jnz 0x135bae */
    II(0x00135b8f, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135b90, 0x3)   callw(0x00136b2c, 0xf99);             /* call 0x136b2c */
    II(0x00135b93, 0x3)   mov(memw_a16(ds, 0x992), ax);         /* mov [0x992], ax */
    II(0x00135b96, 0x4)   mov(memw_a16(ds, 0x994), dx);         /* mov [0x994], dx */
    II(0x00135b9a, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135b9b, 0x3)   callw(0x0013564a, -0x554);            /* call 0x13564a */
    II(0x00135b9e, 0x3)   mov(ax, memw_a16(ds, 0x4fe4));        /* mov ax, [0x4fe4] */
    II(0x00135ba1, 0x4)   mov(dx, memw_a16(ds, 0x4fe6));        /* mov dx, [0x4fe6] */
    II(0x00135ba5, 0x3)   mov(memw_a16(ds, 0x4fe8), ax);        /* mov [0x4fe8], ax */
    II(0x00135ba8, 0x4)   mov(memw_a16(ds, 0x4fea), dx);        /* mov [0x4fea], dx */
    II(0x00135bac, 0x2)   jmpw(0x00135c20, 0x72);               /* jmp 0x135c20 */
l_0x00135bae:
    II(0x00135bae, 0x3)   pushw(0x2000);                        /* push word 0x2000 */
    II(0x00135bb1, 0x4)   les(bx, ds, 0x2018);                  /* les bx, [0x2018] */
    II(0x00135bb5, 0x4)   mov(ax, memw_a16(es, bx + 0x12));     /* mov ax, [es:bx+0x12] */
    II(0x00135bb9, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00135bbb, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135bbd, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135bbf, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135bc1, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135bc3, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135bc5, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135bc7, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135bc9, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135bcb, 0x1)   pushw(dx);                            /* push dx */
    II(0x00135bcc, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00135bcd, 0x1)   nop();                                /* nop  */
    II(0x00135bce, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135bcf, 0x3)   callw(0x0012e96a, -0x7268);           /* call 0x12e96a */
    II(0x00135bd2, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00135bd5, 0x3)   mov(memw_a16(ds, 0x992), ax);         /* mov [0x992], ax */
    II(0x00135bd8, 0x4)   mov(memw_a16(ds, 0x994), dx);         /* mov [0x994], dx */
    II(0x00135bdc, 0x4)   pushw(memw_a16(ds, 0x4fe6));          /* push word [0x4fe6] */
    II(0x00135be0, 0x4)   pushw(memw_a16(ds, 0x4fe4));          /* push word [0x4fe4] */
    II(0x00135be4, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135be5, 0x3)   callw(0x0013567a, -0x56e);            /* call 0x13567a */
    II(0x00135be8, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x00135beb, 0x3)   mov(memw_a16(ds, 0x4fe8), ax);        /* mov [0x4fe8], ax */
    II(0x00135bee, 0x4)   mov(memw_a16(ds, 0x4fea), dx);        /* mov [0x4fea], dx */
    II(0x00135bf2, 0x5)   mov(memw_a16(ss, bp - 0x14), 0);      /* mov word [bp-0x14], 0x0 */
    II(0x00135bf7, 0x2)   jmpw(0x00135bfd, 0x4);                /* jmp 0x135bfd */
//    II(0x00135bf9, 0x1)   /* Недостижимый код. */
l_0x00135bfa:
    II(0x00135bfa, 0x3)   inc(memw_a16(ss, bp - 0x14));         /* inc word [bp-0x14] */
l_0x00135bfd:
    II(0x00135bfd, 0x5)   cmp(memw_a16(ss, bp - 0x14), 0x400);  /* cmp word [bp-0x14], 0x400 */
    II(0x00135c02, 0x2)   jaew(0x00135c20, 0x1c);               /* jae 0x135c20 */
    II(0x00135c04, 0x3)   mov(bx, memw_a16(ss, bp - 0x14));     /* mov bx, [bp-0x14] */
    II(0x00135c07, 0x3)   shl(bx, 0x2);                         /* shl bx, 0x2 */
    II(0x00135c0a, 0x4)   les(si, ds, 0x992);                   /* les si, [0x992] */
    II(0x00135c0e, 0x3)   mov(ax, memw_a16(es, bx + si));       /* mov ax, [es:bx+si] */
    II(0x00135c11, 0x4)   mov(dx, memw_a16(es, bx + si + 0x2)); /* mov dx, [es:bx+si+0x2] */
    II(0x00135c15, 0x4)   mov(memw_a16(ds, bx + 0x3f60), ax);   /* mov [bx+0x3f60], ax */
    II(0x00135c19, 0x4)   mov(memw_a16(ds, bx + 0x3f62), dx);   /* mov [bx+0x3f62], dx */
    II(0x00135c1d, 0x2)   jmpw(0x00135bfa, -0x25);              /* jmp 0x135bfa */
//    II(0x00135c1f, 0x1)   /* Недостижимый код. */
l_0x00135c20:
    II(0x00135c20, 0x3)   mov(ax, memw_a16(ds, 0x4fe8));        /* mov ax, [0x4fe8] */
    II(0x00135c23, 0x4)   mov(dx, memw_a16(ds, 0x4fea));        /* mov dx, [0x4fea] */
    II(0x00135c27, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00135c29, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00135c2b, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00135c2d, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00135c2f, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00135c31, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00135c33, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00135c35, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00135c37, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00135c39, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00135c3b, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00135c3d, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00135c3f, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x00135c42, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x00135c45, 0x5)   mov(memw_a16(ss, bp - 0x36), 0x3fc);  /* mov word [bp-0x36], 0x3fc */
    II(0x00135c4a, 0x5)   mov(memw_a16(ss, bp - 0x34), 0);      /* mov word [bp-0x34], 0x0 */
    II(0x00135c4f, 0x5)   mov(memw_a16(ss, bp - 0x14), 0);      /* mov word [bp-0x14], 0x0 */
    II(0x00135c54, 0x2)   jmpw(0x00135c69, 0x13);               /* jmp 0x135c69 */
l_0x00135c56:
    II(0x00135c56, 0x3)   inc(memw_a16(ss, bp - 0x14));         /* inc word [bp-0x14] */
    II(0x00135c59, 0x4)   add(memw_a16(ss, bp - 0xa), 0x1);     /* add word [bp-0xa], 0x1 */
    II(0x00135c5d, 0x4)   adc(memw_a16(ss, bp - 0x8), 0);       /* adc word [bp-0x8], 0x0 */
    II(0x00135c61, 0x4)   add(memw_a16(ss, bp - 0x36), 0x1);    /* add word [bp-0x36], 0x1 */
    II(0x00135c65, 0x4)   adc(memw_a16(ss, bp - 0x34), 0);      /* adc word [bp-0x34], 0x0 */
l_0x00135c69:
    II(0x00135c69, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x00135c6c, 0x3)   cmp(memw_a16(ss, bp - 0x14), ax);     /* cmp [bp-0x14], ax */
    II(0x00135c6f, 0x2)   jaew(0x00135cca, 0x59);               /* jae 0x135cca */
    II(0x00135c71, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x00135c74, 0x3)   mov(dx, memw_a16(ss, bp - 0x8));      /* mov dx, [bp-0x8] */
    II(0x00135c77, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00135c79, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00135c7b, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00135c7d, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00135c7f, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135c81, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135c83, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135c85, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135c87, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135c89, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135c8b, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135c8d, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135c8f, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x00135c91, 0x3)   mov(bx, memw_a16(ss, bp - 0x36));     /* mov bx, [bp-0x36] */
    II(0x00135c94, 0x3)   shl(bx, 0x2);                         /* shl bx, 0x2 */
    II(0x00135c97, 0x4)   les(si, ds, 0x992);                   /* les si, [0x992] */
    II(0x00135c9b, 0x3)   xor_(ax, memw_a16(es, bx + si));      /* xor ax, [es:bx+si] */
    II(0x00135c9e, 0x3)   and_(ah, 0xf);                        /* and ah, 0xf */
    II(0x00135ca1, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x00135ca3, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00135ca5, 0x2)   xor_(cx, ax);                         /* xor cx, ax */
    II(0x00135ca7, 0x2)   xor_(di, dx);                         /* xor di, dx */
    II(0x00135ca9, 0x3)   mov(memw_a16(es, bx + si), cx);       /* mov [es:bx+si], cx */
    II(0x00135cac, 0x4)   mov(memw_a16(es, bx + si + 0x2), di); /* mov [es:bx+si+0x2], di */
    II(0x00135cb0, 0x4)   les(si, ds, 0x992);                   /* les si, [0x992] */
    II(0x00135cb4, 0x4)   or_(memb_a16(es, bx + si), 0x1);      /* or byte [es:bx+si], 0x1 */
    II(0x00135cb8, 0x4)   les(si, ds, 0x992);                   /* les si, [0x992] */
    II(0x00135cbc, 0x4)   or_(memb_a16(es, bx + si), 0x2);      /* or byte [es:bx+si], 0x2 */
    II(0x00135cc0, 0x4)   les(si, ds, 0x992);                   /* les si, [0x992] */
    II(0x00135cc4, 0x4)   or_(memb_a16(es, bx + si), 0x4);      /* or byte [es:bx+si], 0x4 */
    II(0x00135cc8, 0x2)   jmpw(0x00135c56, -0x74);              /* jmp 0x135c56 */
l_0x00135cca:
//    II(0x00135cca, 0x1)   nop();                                /* nop  */
    II(0x00135ccb, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135ccc, 0x3)   callw(0x00138e97, 0x31c8);            /* call 0x138e97 */
    II(0x00135ccf, 0x3)   mov(ah, memb_a16(ss, bp - 0x6));      /* mov ah, [bp-0x6] */
    II(0x00135cd2, 0x3)   shl(ah, 0x4);                         /* shl ah, 0x4 */
    II(0x00135cd5, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00135cd7, 0x1)   pushw(ax);                            /* push ax */
    II(0x00135cd8, 0x4)   pushw(memw_a16(ds, 0x4fe6));          /* push word [0x4fe6] */
    II(0x00135cdc, 0x4)   pushw(memw_a16(ds, 0x4fe4));          /* push word [0x4fe4] */
    II(0x00135ce0, 0x2)   mov(si, ax);                          /* mov si, ax */
//    II(0x00135ce2, 0x1)   nop();                                /* nop  */
    II(0x00135ce3, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135ce4, 0x3)   callw(0x0012e96a, -0x737d);           /* call 0x12e96a */
    II(0x00135ce7, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00135cea, 0x3)   mov(memw_a16(ds, 0x4fec), ax);        /* mov [0x4fec], ax */
    II(0x00135ced, 0x4)   mov(memw_a16(ds, 0x4fee), dx);        /* mov [0x4fee], dx */
    II(0x00135cf1, 0x1)   pushw(si);                            /* push si */
    II(0x00135cf2, 0x1)   pushw(dx);                            /* push dx */
    II(0x00135cf3, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00135cf4, 0x1)   nop();                                /* nop  */
    II(0x00135cf5, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135cf6, 0x3)   callw(0x00138ed0, 0x31d7);            /* call 0x138ed0 */
    II(0x00135cf9, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00135cfc, 0x3)   mov(ax, memw_a16(ds, 0x519c));        /* mov ax, [0x519c] */
    II(0x00135cff, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x00135d02, 0x5)   mov(memw_a16(ss, bp - 0x2a), 0);      /* mov word [bp-0x2a], 0x0 */
    II(0x00135d07, 0x5)   mov(memw_a16(ss, bp - 0x28), 0xff00); /* mov word [bp-0x28], 0xff00 */
//    II(0x00135d0c, 0x1)   nop();                                /* nop  */
    II(0x00135d0d, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135d0e, 0x3)   callw(0x0012e82c, -0x74e5);           /* call 0x12e82c */
    II(0x00135d11, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00135d13, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00135d15, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00135d17, 0x2)   shl(dh, 0x1);                         /* shl dh, 1 */
    II(0x00135d19, 0x2)   sbb(dh, dh);                          /* sbb dh, dh */
    II(0x00135d1b, 0x2)   sar(dx, 0x1);                         /* sar dx, 1 */
    II(0x00135d1d, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00135d1f, 0x2)   sar(dx, 0x1);                         /* sar dx, 1 */
    II(0x00135d21, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00135d23, 0x3)   mov(memw_a16(ss, bp - 0x24), ax);     /* mov [bp-0x24], ax */
    II(0x00135d26, 0x3)   mov(memw_a16(ss, bp - 0x22), dx);     /* mov [bp-0x22], dx */
    II(0x00135d29, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00135d2b, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00135d2d, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00135d2f, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00135d31, 0x3)   sub(memw_a16(ss, bp - 0x24), ax);     /* sub [bp-0x24], ax */
    II(0x00135d34, 0x3)   sbb(memw_a16(ss, bp - 0x22), dx);     /* sbb [bp-0x22], dx */
    II(0x00135d37, 0x3)   mov(ax, memw_a16(ds, 0x30));          /* mov ax, [0x30] */
    II(0x00135d3a, 0x4)   mov(dx, memw_a16(ds, 0x32));          /* mov dx, [0x32] */
    II(0x00135d3e, 0x4)   mov(cx, memw_a16(ds, 0x28));          /* mov cx, [0x28] */
    II(0x00135d42, 0x4)   mov(bx, memw_a16(ds, 0x2a));          /* mov bx, [0x2a] */
    II(0x00135d46, 0x3)   sub(memw_a16(ss, bp - 0x24), cx);     /* sub [bp-0x24], cx */
    II(0x00135d49, 0x3)   sbb(memw_a16(ss, bp - 0x22), bx);     /* sbb [bp-0x22], bx */
    II(0x00135d4c, 0x3)   cmp(memw_a16(ss, bp - 0x22), dx);     /* cmp [bp-0x22], dx */
    II(0x00135d4f, 0x2)   jbw(0x00135d5e, 0xd);                 /* jb 0x135d5e */
    II(0x00135d51, 0x2)   jaw(0x00135d58, 0x5);                 /* ja 0x135d58 */
    II(0x00135d53, 0x3)   cmp(memw_a16(ss, bp - 0x24), ax);     /* cmp [bp-0x24], ax */
    II(0x00135d56, 0x2)   jbew(0x00135d5e, 0x6);                /* jbe 0x135d5e */
l_0x00135d58:
    II(0x00135d58, 0x3)   mov(memw_a16(ss, bp - 0x24), ax);     /* mov [bp-0x24], ax */
    II(0x00135d5b, 0x3)   mov(memw_a16(ss, bp - 0x22), dx);     /* mov [bp-0x22], dx */
l_0x00135d5e:
    II(0x00135d5e, 0x3)   mov(ax, memw_a16(ss, bp - 0x24));     /* mov ax, [bp-0x24] */
    II(0x00135d61, 0x3)   mov(dx, memw_a16(ss, bp - 0x22));     /* mov dx, [bp-0x22] */
    II(0x00135d64, 0x4)   cmp(memw_a16(ds, 0x36), dx);          /* cmp [0x36], dx */
    II(0x00135d68, 0x2)   jbw(0x00135d84, 0x1a);                /* jb 0x135d84 */
    II(0x00135d6a, 0x2)   jaw(0x00135d72, 0x6);                 /* ja 0x135d72 */
    II(0x00135d6c, 0x4)   cmp(memw_a16(ds, 0x34), ax);          /* cmp [0x34], ax */
    II(0x00135d70, 0x2)   jbew(0x00135d84, 0x12);               /* jbe 0x135d84 */
l_0x00135d72:
    II(0x00135d72, 0x3)   pushw(0x90e);                         /* push word 0x90e */
    II(0x00135d75, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135d76, 0x3)   callw(0x001375b4, 0x183b);            /* call 0x1375b4 */
    II(0x00135d79, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135d7c, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135d7f, 0x1)   popw(ds);                             /* pop ds */
    II(0x00135d80, 0x1)   popw(si);                             /* pop si */
    II(0x00135d81, 0x1)   popw(di);                             /* pop di */
    II(0x00135d82, 0x1)   leavew();                             /* leave  */
    II(0x00135d83, 0x1)   retfw();                              /* retf  */
l_0x00135d84:
    II(0x00135d84, 0x2)   and_(al, 0xfc);                       /* and al, 0xfc */
    II(0x00135d86, 0x3)   and_(dx, 0x3f);                       /* and dx, 0x3f */
    II(0x00135d89, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00135d8b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00135d8d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00135d8f, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00135d91, 0x1)   pushw(dx);                            /* push dx */
    II(0x00135d92, 0x1)   pushw(ax);                            /* push ax */
    II(0x00135d93, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135d94, 0x3)   callw(0x00136260, 0x4c9);             /* call 0x136260 */
    II(0x00135d97, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x00135d9a, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00135d9c, 0x2)   jzw(0x00135da6, 0x8);                 /* jz 0x135da6 */
    II(0x00135d9e, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135da1, 0x1)   popw(ds);                             /* pop ds */
    II(0x00135da2, 0x1)   popw(si);                             /* pop si */
    II(0x00135da3, 0x1)   popw(di);                             /* pop di */
    II(0x00135da4, 0x1)   leavew();                             /* leave  */
    II(0x00135da5, 0x1)   retfw();                              /* retf  */
l_0x00135da6:
    II(0x00135da6, 0x5)   mov(memw_a16(ss, bp - 0x1a), 0x1);    /* mov word [bp-0x1a], 0x1 */
    II(0x00135dab, 0x2)   jmpw(0x00135db1, 0x4);                /* jmp 0x135db1 */
//    II(0x00135dad, 0x1)   /* Недостижимый код. */
l_0x00135dae:
    II(0x00135dae, 0x3)   inc(memw_a16(ss, bp - 0x1a));         /* inc word [bp-0x1a] */
l_0x00135db1:
    II(0x00135db1, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x00135db4, 0x3)   cmp(memw_a16(ss, bp - 0x1a), ax);     /* cmp [bp-0x1a], ax */
    II(0x00135db7, 0x2)   jaw(0x00135e28, 0x6f);                /* ja 0x135e28 */
    II(0x00135db9, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135dba, 0x3)   callw(0x0013615a, 0x39d);             /* call 0x13615a */
    II(0x00135dbd, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00135dc0, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x00135dc3, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x00135dc5, 0x2)   jnzw(0x00135dde, 0x17);               /* jnz 0x135dde */
    II(0x00135dc7, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135dc8, 0x3)   pushw(0x36e);                         /* push word 0x36e */
    II(0x00135dcb, 0x3)   pushw(0x90a);                         /* push word 0x90a */
    II(0x00135dce, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135dcf, 0x3)   callw(0x001375b4, 0x17e2);            /* call 0x1375b4 */
    II(0x00135dd2, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00135dd5, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135dd8, 0x1)   popw(ds);                             /* pop ds */
    II(0x00135dd9, 0x1)   popw(si);                             /* pop si */
    II(0x00135dda, 0x1)   popw(di);                             /* pop di */
    II(0x00135ddb, 0x1)   leavew();                             /* leave  */
    II(0x00135ddc, 0x1)   retfw();                              /* retf  */
//    II(0x00135ddd, 0x1)   /* Недостижимый код. */
l_0x00135dde:
    II(0x00135dde, 0x3)   mov(bx, memw_a16(ss, bp - 0x1a));     /* mov bx, [bp-0x1a] */
    II(0x00135de1, 0x3)   shl(bx, 0x2);                         /* shl bx, 0x2 */
    II(0x00135de4, 0x4)   les(si, ds, 0x4fec);                  /* les si, [0x4fec] */
    II(0x00135de8, 0x3)   mov(ax, memw_a16(es, bx + si));       /* mov ax, [es:bx+si] */
    II(0x00135deb, 0x3)   xor_(ax, memw_a16(ss, bp - 0x4));     /* xor ax, [bp-0x4] */
    II(0x00135dee, 0x3)   and_(ah, 0xf);                        /* and ah, 0xf */
    II(0x00135df1, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00135df3, 0x3)   xor_(ax, memw_a16(ss, bp - 0x4));     /* xor ax, [bp-0x4] */
    II(0x00135df6, 0x3)   xor_(dx, memw_a16(ss, bp - 0x2));     /* xor dx, [bp-0x2] */
    II(0x00135df9, 0x3)   mov(memw_a16(es, bx + si), ax);       /* mov [es:bx+si], ax */
    II(0x00135dfc, 0x4)   mov(memw_a16(es, bx + si + 0x2), dx); /* mov [es:bx+si+0x2], dx */
    II(0x00135e00, 0x4)   les(si, ds, 0x4fec);                  /* les si, [0x4fec] */
    II(0x00135e04, 0x4)   or_(memb_a16(es, bx + si), 0x1);      /* or byte [es:bx+si], 0x1 */
    II(0x00135e08, 0x4)   les(si, ds, 0x4fec);                  /* les si, [0x4fec] */
    II(0x00135e0c, 0x4)   or_(memb_a16(es, bx + si), 0x2);      /* or byte [es:bx+si], 0x2 */
    II(0x00135e10, 0x4)   les(si, ds, 0x4fec);                  /* les si, [0x4fec] */
    II(0x00135e14, 0x4)   or_(memb_a16(es, bx + si), 0x4);      /* or byte [es:bx+si], 0x4 */
//    II(0x00135e18, 0x1)   nop();                                /* nop  */
    II(0x00135e19, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135e1a, 0x3)   callw(0x00138e97, 0x307a);            /* call 0x138e97 */
    II(0x00135e1d, 0x5)   add(memw_a16(ss, bp - 0x4), 0x1000);  /* add word [bp-0x4], 0x1000 */
    II(0x00135e22, 0x4)   adc(memw_a16(ss, bp - 0x2), 0);       /* adc word [bp-0x2], 0x0 */
    II(0x00135e26, 0x2)   jmpw(0x00135dae, -0x7a);              /* jmp 0x135dae */
l_0x00135e28:
    II(0x00135e28, 0x2)   pushw(-0x1 /* 0xff */);               /* push 0xff */
    II(0x00135e2a, 0x3)   pushw(0xff00);                        /* push word 0xff00 */
    II(0x00135e2d, 0x2)   pushw(0);                             /* push 0x0 */
//    II(0x00135e2f, 0x1)   nop();                                /* nop  */
    II(0x00135e30, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135e31, 0x3)   callw(0x0012e96a, -0x74ca);           /* call 0x12e96a */
    II(0x00135e34, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00135e37, 0x3)   mov(memw_a16(ss, bp - 0x18), ax);     /* mov [bp-0x18], ax */
    II(0x00135e3a, 0x3)   mov(memw_a16(ss, bp - 0x16), dx);     /* mov [bp-0x16], dx */
    II(0x00135e3d, 0x3)   mov(memw_a16(ds, 0x4ff0), ax);        /* mov [0x4ff0], ax */
    II(0x00135e40, 0x4)   mov(memw_a16(ds, 0x4ff2), dx);        /* mov [0x4ff2], dx */
    II(0x00135e44, 0x3)   pushw(0x80);                          /* push word 0x80 */
    II(0x00135e47, 0x3)   pushw(0x92);                          /* push word 0x92 */
    II(0x00135e4a, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x00135e4d, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00135e4f, 0x1)   pushw(dx);                            /* push dx */
    II(0x00135e50, 0x1)   pushw(ax);                            /* push ax */
    II(0x00135e51, 0x3)   pushw(0xff00);                        /* push word 0xff00 */
    II(0x00135e54, 0x1)   pushw(dx);                            /* push dx */
    II(0x00135e55, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x00135e58, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x00135e5a, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x00135e5c, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135e5d, 0x3)   callw(0x0013621a, 0x3ba);             /* call 0x13621a */
    II(0x00135e60, 0x3)   add(sp, 0xe);                         /* add sp, 0xe */
    II(0x00135e63, 0x2)   mov(ax, si);                          /* mov ax, si */
    II(0x00135e65, 0x2)   mov(dx, di);                          /* mov dx, di */
    II(0x00135e67, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00135e69, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00135e6b, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00135e6d, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00135e6f, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135e71, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135e73, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135e75, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135e77, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135e79, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135e7b, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135e7d, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135e7f, 0x1)   pushw(dx);                            /* push dx */
    II(0x00135e80, 0x1)   pushw(ax);                            /* push ax */
    II(0x00135e81, 0x1)   pushw(di);                            /* push di */
    II(0x00135e82, 0x3)   pushw(0x1000);                        /* push word 0x1000 */
    II(0x00135e85, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
//    II(0x00135e88, 0x1)   nop();                                /* nop  */
    II(0x00135e89, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135e8a, 0x3)   callw(0x0013925c, 0x33cf);            /* call 0x13925c */
    II(0x00135e8d, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x00135e90, 0x1)   pushw(di);                            /* push di */
    II(0x00135e91, 0x3)   pushw(0x1000);                        /* push word 0x1000 */
    II(0x00135e94, 0x3)   mov(ax, memw_a16(ds, 0x34));          /* mov ax, [0x34] */
    II(0x00135e97, 0x4)   mov(dx, memw_a16(ds, 0x36));          /* mov dx, [0x36] */
    II(0x00135e9b, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00135e9d, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00135e9f, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00135ea1, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00135ea3, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135ea5, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135ea7, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135ea9, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135eab, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x00135eae, 0x3)   mov(memw_a16(ss, bp - 0xc), dx);      /* mov [bp-0xc], dx */
    II(0x00135eb1, 0x1)   pushw(dx);                            /* push dx */
    II(0x00135eb2, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00135eb3, 0x1)   nop();                                /* nop  */
    II(0x00135eb4, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135eb5, 0x3)   callw(0x0013dddc, 0x7f24);            /* call 0x13dddc */
    II(0x00135eb8, 0x3)   mov(memw_a16(ds, 0xa6), ax);          /* mov [0xa6], ax */
    II(0x00135ebb, 0x4)   mov(memw_a16(ds, 0xa8), dx);          /* mov [0xa8], dx */
//    II(0x00135ebf, 0x1)   nop();                                /* nop  */
    II(0x00135ec0, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135ec1, 0x3)   callw(0x00138e97, 0x2fd3);            /* call 0x138e97 */
    II(0x00135ec4, 0x3)   mov(ax, memw_a16(ds, 0x4ff2));        /* mov ax, [0x4ff2] */
    II(0x00135ec7, 0x3)   mov(memw_a16(ds, 0xaa), ax);          /* mov [0xaa], ax */
    II(0x00135eca, 0x1)   pushw(ax);                            /* push ax */
    II(0x00135ecb, 0x3)   callw(0x001390ae, 0x31e0);            /* call 0x1390ae */
    II(0x00135ece, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135ed1, 0x3)   mov(ax, memw_a16(ds, 0x201c));        /* mov ax, [0x201c] */
    II(0x00135ed4, 0x4)   mov(dx, memw_a16(ds, 0x201e));        /* mov dx, [0x201e] */
    II(0x00135ed8, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00135eda, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00135edc, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00135ede, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00135ee0, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135ee2, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135ee4, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135ee6, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135ee8, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135eea, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135eec, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135eee, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135ef0, 0x1)   pushw(dx);                            /* push dx */
    II(0x00135ef1, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00135ef2, 0x1)   nop();                                /* nop  */
    II(0x00135ef3, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135ef4, 0x3)   callw(0x0013812e, 0x2237);            /* call 0x13812e */
    II(0x00135ef7, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x00135efa, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00135efc, 0x2)   jzw(0x00135f06, 0x8);                 /* jz 0x135f06 */
    II(0x00135efe, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135f01, 0x1)   popw(ds);                             /* pop ds */
    II(0x00135f02, 0x1)   popw(si);                             /* pop si */
    II(0x00135f03, 0x1)   popw(di);                             /* pop di */
    II(0x00135f04, 0x1)   leavew();                             /* leave  */
    II(0x00135f05, 0x1)   retfw();                              /* retf  */
l_0x00135f06:
    II(0x00135f06, 0x1)   pushw(di);                            /* push di */
    II(0x00135f07, 0x1)   pushw(di);                            /* push di */
    II(0x00135f08, 0x3)   pushw(0x3e58);                        /* push word 0x3e58 */
    II(0x00135f0b, 0x3)   pushw(0x3c20);                        /* push word 0x3c20 */
//    II(0x00135f0e, 0x1)   nop();                                /* nop  */
    II(0x00135f0f, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135f10, 0x3)   callw(0x0013c7f4, 0x68e1);            /* call 0x13c7f4 */
    II(0x00135f13, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00135f16, 0x3)   mov(memb_a16(ds, 0x51a7), al);        /* mov [0x51a7], al */
    II(0x00135f19, 0x1)   pushw(di);                            /* push di */
    II(0x00135f1a, 0x1)   pushw(di);                            /* push di */
    II(0x00135f1b, 0x3)   pushw(0x3e58);                        /* push word 0x3e58 */
    II(0x00135f1e, 0x3)   pushw(0x45a4);                        /* push word 0x45a4 */
//    II(0x00135f21, 0x1)   nop();                                /* nop  */
    II(0x00135f22, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135f23, 0x3)   callw(0x0013c7f4, 0x68ce);            /* call 0x13c7f4 */
    II(0x00135f26, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00135f29, 0x3)   mov(memb_a16(ds, 0x51a6), al);        /* mov [0x51a6], al */
    II(0x00135f2c, 0x1)   pushw(di);                            /* push di */
    II(0x00135f2d, 0x1)   pushw(di);                            /* push di */
    II(0x00135f2e, 0x3)   pushw(0x3e58);                        /* push word 0x3e58 */
    II(0x00135f31, 0x3)   pushw(0x4602);                        /* push word 0x4602 */
//    II(0x00135f34, 0x1)   nop();                                /* nop  */
    II(0x00135f35, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135f36, 0x3)   callw(0x0013c7f4, 0x68bb);            /* call 0x13c7f4 */
    II(0x00135f39, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00135f3c, 0x3)   mov(memb_a16(ds, 0x51b5), al);        /* mov [0x51b5], al */
    II(0x00135f3f, 0x3)   mov(ax, memw_a16(ds, 0x201c));        /* mov ax, [0x201c] */
    II(0x00135f42, 0x4)   mov(dx, memw_a16(ds, 0x201e));        /* mov dx, [0x201e] */
    II(0x00135f46, 0x3)   mov(memw_a16(ds, 0x1fc8), ax);        /* mov [0x1fc8], ax */
    II(0x00135f49, 0x4)   mov(memw_a16(ds, 0x1fca), dx);        /* mov [0x1fca], dx */
    II(0x00135f4d, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00135f4f, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00135f51, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00135f53, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00135f55, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135f57, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135f59, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135f5b, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135f5d, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135f5f, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135f61, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135f63, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135f65, 0x3)   add(ax, 0xffff);                      /* add ax, 0xffff */
    II(0x00135f68, 0x4)   adc(dx, 0xfff);                       /* adc dx, 0xfff */
    II(0x00135f6c, 0x3)   mov(memw_a16(ds, 0x4fd8), ax);        /* mov [0x4fd8], ax */
    II(0x00135f6f, 0x4)   mov(memw_a16(ds, 0x4fda), dx);        /* mov [0x4fda], dx */
    II(0x00135f73, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x00135f75, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
    II(0x00135f78, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00135f7b, 0x2)   jmpw(0x00135f86, 0x9);                /* jmp 0x135f86 */
//    II(0x00135f7d, 0x1)   /* Недостижимый код. */
l_0x00135f7e:
    II(0x00135f7e, 0x4)   add(memw_a16(ss, bp - 0x4), 0x1);     /* add word [bp-0x4], 0x1 */
    II(0x00135f82, 0x4)   adc(memw_a16(ss, bp - 0x2), 0);       /* adc word [bp-0x2], 0x0 */
l_0x00135f86:
    II(0x00135f86, 0x3)   mov(ax, memw_a16(ds, 0x201c));        /* mov ax, [0x201c] */
    II(0x00135f89, 0x4)   mov(dx, memw_a16(ds, 0x201e));        /* mov dx, [0x201e] */
    II(0x00135f8d, 0x3)   cmp(memw_a16(ss, bp - 0x2), dx);      /* cmp [bp-0x2], dx */
    II(0x00135f90, 0x2)   jaw(0x00135ff8, 0x66);                /* ja 0x135ff8 */
    II(0x00135f92, 0x2)   jbw(0x00135f99, 0x5);                 /* jb 0x135f99 */
    II(0x00135f94, 0x3)   cmp(memw_a16(ss, bp - 0x4), ax);      /* cmp [bp-0x4], ax */
    II(0x00135f97, 0x2)   jaew(0x00135ff8, 0x5f);               /* jae 0x135ff8 */
l_0x00135f99:
    II(0x00135f99, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00135f9b, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00135f9e, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00135fa1, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x00135fa5, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x00135fa9, 0x3)   callw(0x001391e3, 0x3237);            /* call 0x1391e3 */
    II(0x00135fac, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x00135faf, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00135fb1, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00135fb4, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00135fb7, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x00135fbb, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x00135fbf, 0x3)   callw(0x001391e3, 0x3221);            /* call 0x1391e3 */
    II(0x00135fc2, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x00135fc5, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00135fc7, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00135fc9, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00135fcc, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00135fcf, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x00135fd3, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x00135fd7, 0x3)   callw(0x00139235, 0x325b);            /* call 0x139235 */
    II(0x00135fda, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00135fdd, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00135fdf, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00135fe1, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00135fe4, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00135fe7, 0x4)   pushw(memw_a16(ds, 0x4fb6));          /* push word [0x4fb6] */
    II(0x00135feb, 0x4)   pushw(memw_a16(ds, 0x4fb4));          /* push word [0x4fb4] */
    II(0x00135fef, 0x3)   callw(0x00139235, 0x3243);            /* call 0x139235 */
    II(0x00135ff2, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00135ff5, 0x2)   jmpw(0x00135f7e, -0x79);              /* jmp 0x135f7e */
//    II(0x00135ff7, 0x1)   /* Недостижимый код. */
l_0x00135ff8:
    II(0x00135ff8, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x00135ffa, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x00135ffd, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x00136000, 0x3)   sub(ax, 0x1);                         /* sub ax, 0x1 */
    II(0x00136003, 0x3)   sbb(dx, 0);                           /* sbb dx, 0x0 */
    II(0x00136006, 0x1)   pushw(dx);                            /* push dx */
    II(0x00136007, 0x1)   pushw(ax);                            /* push ax */
    II(0x00136008, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013600c, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x00136010, 0x3)   callw(0x001391e3, 0x31d0);            /* call 0x1391e3 */
    II(0x00136013, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x00136016, 0x3)   mov(ax, memw_a16(ds, 0x201c));        /* mov ax, [0x201c] */
    II(0x00136019, 0x4)   mov(dx, memw_a16(ds, 0x201e));        /* mov dx, [0x201e] */
    II(0x0013601d, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013601f, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00136021, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00136023, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00136025, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136027, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136029, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013602b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013602d, 0x3)   mov(memw_a16(ss, bp - 0x14), ax);     /* mov [bp-0x14], ax */
    II(0x00136030, 0x6)   test(memw_a16(ds, 0x201c), 0x3ff);    /* test word [0x201c], 0x3ff */
    II(0x00136036, 0x2)   jzw(0x0013603c, 0x4);                 /* jz 0x13603c */
    II(0x00136038, 0x1)   inc(ax);                              /* inc ax */
    II(0x00136039, 0x3)   mov(memw_a16(ss, bp - 0x14), ax);     /* mov [bp-0x14], ax */
l_0x0013603c:
    II(0x0013603c, 0x4)   add(memw_a16(ss, bp - 0x14), 0x40);   /* add word [bp-0x14], 0x40 */
    II(0x00136040, 0x3)   mov(ax, memw_a16(ds, 0x4f8c));        /* mov ax, [0x4f8c] */
    II(0x00136043, 0x4)   mov(dx, memw_a16(ds, 0x4f8e));        /* mov dx, [0x4f8e] */
    II(0x00136047, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0013604a, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0013604d, 0x5)   mov(memw_a16(ss, bp - 0x26), 0x40);   /* mov word [bp-0x26], 0x40 */
    II(0x00136052, 0x2)   jmpw(0x00136060, 0xc);                /* jmp 0x136060 */
l_0x00136054:
    II(0x00136054, 0x3)   inc(memw_a16(ss, bp - 0x26));         /* inc word [bp-0x26] */
    II(0x00136057, 0x5)   add(memw_a16(ss, bp - 0xa), 0x1000);  /* add word [bp-0xa], 0x1000 */
    II(0x0013605c, 0x4)   adc(memw_a16(ss, bp - 0x8), 0);       /* adc word [bp-0x8], 0x0 */
l_0x00136060:
    II(0x00136060, 0x3)   mov(ax, memw_a16(ss, bp - 0x26));     /* mov ax, [bp-0x26] */
    II(0x00136063, 0x3)   cmp(memw_a16(ss, bp - 0x14), ax);     /* cmp [bp-0x14], ax */
    II(0x00136066, 0x2)   jbew(0x001360c2, 0x5a);               /* jbe 0x1360c2 */
    II(0x00136068, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0013606b, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0013606e, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013606f, 0x3)   callw(0x001361ca, 0x158);             /* call 0x1361ca */
    II(0x00136072, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x00136075, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00136077, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00136079, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013607b, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013607d, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013607f, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00136081, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00136083, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00136085, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00136087, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00136089, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013608b, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013608d, 0x3)   mov(bx, memw_a16(ss, bp - 0x26));     /* mov bx, [bp-0x26] */
    II(0x00136090, 0x3)   shl(bx, 0x2);                         /* shl bx, 0x2 */
    II(0x00136093, 0x4)   les(si, ds, 0x992);                   /* les si, [0x992] */
    II(0x00136097, 0x3)   mov(cx, memw_a16(es, bx + si));       /* mov cx, [es:bx+si] */
    II(0x0013609a, 0x3)   and_(ch, 0xf);                        /* and ch, 0xf */
    II(0x0013609d, 0x2)   sub(di, di);                          /* sub di, di */
    II(0x0013609f, 0x2)   or_(ax, cx);                          /* or ax, cx */
    II(0x001360a1, 0x3)   mov(memw_a16(es, bx + si), ax);       /* mov [es:bx+si], ax */
    II(0x001360a4, 0x4)   mov(memw_a16(es, bx + si + 0x2), dx); /* mov [es:bx+si+0x2], dx */
    II(0x001360a8, 0x4)   les(si, ds, 0x992);                   /* les si, [0x992] */
    II(0x001360ac, 0x4)   or_(memb_a16(es, bx + si), 0x1);      /* or byte [es:bx+si], 0x1 */
    II(0x001360b0, 0x4)   les(si, ds, 0x992);                   /* les si, [0x992] */
    II(0x001360b4, 0x4)   or_(memb_a16(es, bx + si), 0x2);      /* or byte [es:bx+si], 0x2 */
    II(0x001360b8, 0x4)   les(si, ds, 0x992);                   /* les si, [0x992] */
    II(0x001360bc, 0x4)   or_(memb_a16(es, bx + si), 0x4);      /* or byte [es:bx+si], 0x4 */
    II(0x001360c0, 0x2)   jmpw(0x00136054, -0x6e);              /* jmp 0x136054 */
l_0x001360c2:
//    II(0x001360c2, 0x1)   nop();                                /* nop  */
    II(0x001360c3, 0x1)   pushw(cs);                            /* push cs */
    II(0x001360c4, 0x3)   callw(0x00138e97, 0x2dd0);            /* call 0x138e97 */
    II(0x001360c7, 0x3)   mov(ax, memw_a16(ds, 0x24));          /* mov ax, [0x24] */
    II(0x001360ca, 0x4)   mov(dx, memw_a16(ds, 0x26));          /* mov dx, [0x26] */
    II(0x001360ce, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x001360d0, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x001360d2, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x001360d4, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x001360d6, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x001360d8, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x001360da, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x001360dc, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x001360de, 0x3)   mov(memw_a16(ds, 0x1fa8), ax);        /* mov [0x1fa8], ax */
    II(0x001360e1, 0x4)   mov(memw_a16(ds, 0x1faa), dx);        /* mov [0x1faa], dx */
    II(0x001360e5, 0x3)   mov(ax, memw_a16(ds, 0x24));          /* mov ax, [0x24] */
    II(0x001360e8, 0x4)   mov(dx, memw_a16(ds, 0x26));          /* mov dx, [0x26] */
    II(0x001360ec, 0x2)   and_(al, 0xfc);                       /* and al, 0xfc */
    II(0x001360ee, 0x3)   and_(dx, 0x3f);                       /* and dx, 0x3f */
    II(0x001360f1, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x001360f3, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x001360f5, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x001360f7, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x001360f9, 0x3)   mov(memw_a16(ds, 0x1fc4), ax);        /* mov [0x1fc4], ax */
    II(0x001360fc, 0x4)   mov(memw_a16(ds, 0x1fc6), dx);        /* mov [0x1fc6], dx */
    II(0x00136100, 0x3)   mov(memw_a16(ds, 0x1fb8), ax);        /* mov [0x1fb8], ax */
    II(0x00136103, 0x4)   mov(memw_a16(ds, 0x1fba), dx);        /* mov [0x1fba], dx */
    II(0x00136107, 0x3)   mov(memw_a16(ds, 0x1fac), ax);        /* mov [0x1fac], ax */
    II(0x0013610a, 0x4)   mov(memw_a16(ds, 0x1fae), dx);        /* mov [0x1fae], dx */
    II(0x0013610e, 0x3)   mov(memw_a16(ds, 0x1fb4), ax);        /* mov [0x1fb4], ax */
    II(0x00136111, 0x4)   mov(memw_a16(ds, 0x1fb6), dx);        /* mov [0x1fb6], dx */
    II(0x00136115, 0x3)   mov(ax, memw_a16(ds, 0x1fc0));        /* mov ax, [0x1fc0] */
    II(0x00136118, 0x4)   mov(dx, memw_a16(ds, 0x1fc2));        /* mov dx, [0x1fc2] */
    II(0x0013611c, 0x3)   mov(memw_a16(ds, 0x1fb8), ax);        /* mov [0x1fb8], ax */
    II(0x0013611f, 0x4)   mov(memw_a16(ds, 0x1fba), dx);        /* mov [0x1fba], dx */
    II(0x00136123, 0x3)   mov(memw_a16(ds, 0x1fbc), ax);        /* mov [0x1fbc], ax */
    II(0x00136126, 0x4)   mov(memw_a16(ds, 0x1fbe), dx);        /* mov [0x1fbe], dx */
    II(0x0013612a, 0x3)   sub(ax, 0xc);                         /* sub ax, 0xc */
    II(0x0013612d, 0x3)   sbb(dx, 0);                           /* sbb dx, 0x0 */
    II(0x00136130, 0x3)   mov(memw_a16(ds, 0x1fb0), ax);        /* mov [0x1fb0], ax */
    II(0x00136133, 0x4)   mov(memw_a16(ds, 0x1fb2), dx);        /* mov [0x1fb2], dx */
    II(0x00136137, 0x3)   pushw(0x1000);                        /* push word 0x1000 */
    II(0x0013613a, 0x2)   pushw(0x40);                          /* push 0x40 */
    II(0x0013613c, 0x2)   pushw(0);                             /* push 0x0 */
//    II(0x0013613e, 0x1)   nop();                                /* nop  */
    II(0x0013613f, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136140, 0x3)   callw(0x0012e96a, -0x77d9);           /* call 0x12e96a */
    II(0x00136143, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00136146, 0x3)   mov(memw_a16(ds, 0x1fe8), ax);        /* mov [0x1fe8], ax */
    II(0x00136149, 0x4)   mov(memw_a16(ds, 0x1fea), dx);        /* mov [0x1fea], dx */
    II(0x0013614d, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013614f, 0x1)   popw(ds);                             /* pop ds */
    II(0x00136150, 0x1)   popw(si);                             /* pop si */
    II(0x00136151, 0x1)   popw(di);                             /* pop di */
    II(0x00136152, 0x1)   leavew();                             /* leave  */
    II(0x00136153, 0x1)   retfw();                              /* retf  */
l_0x00136154:
    II(0x00136154, 0x1)   popw(ds);                             /* pop ds */
    II(0x00136155, 0x1)   popw(si);                             /* pop si */
    II(0x00136156, 0x1)   popw(di);                             /* pop di */
    II(0x00136157, 0x1)   leavew();                             /* leave  */
    II(0x00136158, 0x1)   retfw();                              /* retf  */
FUNC_END

