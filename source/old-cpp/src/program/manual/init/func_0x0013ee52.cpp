FUNC_BEGIN(0x0013ee52, 0x5305190ff3422020, 0x10, ({0xc8, 0x4a, 0, 0, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xfa, 0, 0xd, 0xc7, 0x46, 0xf8, 0xff, 0xff, 0x8d, 0x46, 0xba, 0x89, 0x46, 0xe4, 0x8c, 0x56, 0xe6, 0x89, 0x46, 0xf0, 0x16, 0x6a, 0, 0x8d, 0x46, 0xec, 0x16, 0x50, 0x68, 0, 0xff, 0x90, 0xe, 0xe8, 0xbe, 0xfc, 0x83, 0xc4, 0xa, 0xb, 0xc0, 0x75, 0x3, 0xe9, 0x96, 0, 0x83, 0x7e, 0x6, 0, 0x74, 0x8, 0xc7, 0x46, 0xfe, 0x1, 0xff, 0xeb, 0x3c, 0x90, 0x8e, 0x6, 0xce, 0x1d, 0x26, 0xa1, 0x2c, 0x14, 0x89, 0x46, 0xfc, 0x8e, 0x6, 0xd0, 0x1d, 0x26, 0xa1, 0x2, 0, 0x89, 0x46, 0xfa, 0x8d, 0x46, 0xec, 0x16, 0x50, 0x2b, 0xc9, 0x89, 0x4e, 0xee, 0x89, 0x4e, 0xec, 0x89, 0x4e, 0xf8, 0x51, 0xb8, 0x5, 0x2, 0x89, 0x46, 0xfe, 0x50, 0x90, 0xe, 0xe8, 0x97, 0xfc, 0x83, 0xc4, 0x8, 0xc7, 0x46, 0xfe, 0, 0xff, 0xc7, 0x46, 0xfa, 0, 0x10, 0x8e, 0x6, 0xce, 0x1d, 0x26, 0xa1, 0x18, 0x14, 0x2b, 0xdb, 0x8e, 0xc0, 0x26, 0xf6, 0x47, 0x47, 0x4, 0x74, 0xb, 0x8b, 0x46, 0xdc, 0x89, 0x46, 0xf8, 0x8b, 0x46, 0xd8, 0xeb, 0x9, 0x8b, 0x46, 0xd8, 0x89, 0x46, 0xf8, 0x8b, 0x46, 0xd6, 0x89, 0x46, 0xfc, 0x8b, 0x46, 0xbc, 0x89, 0x46, 0xf2, 0x8b, 0x46, 0xc8, 0x89, 0x46, 0xf0, 0x53, 0x53, 0x8d, 0x46, 0xec, 0x16, 0x50, 0xff, 0x76, 0xfe, 0x90, 0xe, 0xe8, 0x21, 0xfc, 0x83, 0xc4, 0xa, 0x1f, 0xc9, 0xcb}))
    II(0x0013ee52, 0x4)   enterw(0x4a, 0);                      /* enter 0x4a, 0x0 */
    II(0x0013ee56, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013ee57, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013ee5a, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013ee5c, 0x5)   mov(memw_a16(ss, bp - 0x6), 0xd00);   /* mov word [bp-0x6], 0xd00 */
    II(0x0013ee61, 0x5)   mov(memw_a16(ss, bp - 0x8), 0xffff);  /* mov word [bp-0x8], 0xffff */
    II(0x0013ee66, 0x3)   lea(ax, bp - 0x46);                   /* lea ax, [bp-0x46] */
    II(0x0013ee69, 0x3)   mov(memw_a16(ss, bp - 0x1c), ax);     /* mov [bp-0x1c], ax */
    II(0x0013ee6c, 0x3)   mov(memw_a16(ss, bp - 0x1a), ss);     /* mov [bp-0x1a], ss */
    II(0x0013ee6f, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x0013ee72, 0x1)   pushw(ss);                            /* push ss */
    II(0x0013ee73, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013ee75, 0x3)   lea(ax, bp - 0x14);                   /* lea ax, [bp-0x14] */
    II(0x0013ee78, 0x1)   pushw(ss);                            /* push ss */
    II(0x0013ee79, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013ee7a, 0x3)   pushw(0xff00);                        /* push word 0xff00 */
//    II(0x0013ee7d, 0x1)   nop();                                /* nop  */
    II(0x0013ee7e, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013ee7f, 0x3)   callw(0x0013eb40, -0x342);            /* call 0x13eb40 */
    II(0x0013ee82, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013ee85, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013ee87, 0x2)   jnzw(0x0013ee8c, 0x3);                /* jnz 0x13ee8c */
    II(0x0013ee89, 0x3)   jmpw(0x0013ef22, 0x96);               /* jmp 0x13ef22 */
l_0x0013ee8c:
    II(0x0013ee8c, 0x4)   cmp(memw_a16(ss, bp + 0x6), 0);       /* cmp word [bp+0x6], 0x0 */
    II(0x0013ee90, 0x2)   jzw(0x0013ee9a, 0x8);                 /* jz 0x13ee9a */
    II(0x0013ee92, 0x5)   mov(memw_a16(ss, bp - 0x2), 0xff01);  /* mov word [bp-0x2], 0xff01 */
    II(0x0013ee97, 0x2)   jmpw(0x0013eed5, 0x3c);               /* jmp 0x13eed5 */
//    II(0x0013ee99, 0x1)   /* Недостижимый код. */
l_0x0013ee9a:
    II(0x0013ee9a, 0x4)   mov(es, memw_a16(ds, 0x1dce));        /* mov es, [0x1dce] */
    II(0x0013ee9e, 0x4)   mov(ax, memw_a16(es, 0x142c));        /* mov ax, [es:0x142c] */
    II(0x0013eea2, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013eea5, 0x4)   mov(es, memw_a16(ds, 0x1dd0));        /* mov es, [0x1dd0] */
    II(0x0013eea9, 0x4)   mov(ax, memw_a16(es, 0x2));           /* mov ax, [es:0x2] */
    II(0x0013eead, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0013eeb0, 0x3)   lea(ax, bp - 0x14);                   /* lea ax, [bp-0x14] */
    II(0x0013eeb3, 0x1)   pushw(ss);                            /* push ss */
    II(0x0013eeb4, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013eeb5, 0x2)   sub(cx, cx);                          /* sub cx, cx */
    II(0x0013eeb7, 0x3)   mov(memw_a16(ss, bp - 0x12), cx);     /* mov [bp-0x12], cx */
    II(0x0013eeba, 0x3)   mov(memw_a16(ss, bp - 0x14), cx);     /* mov [bp-0x14], cx */
    II(0x0013eebd, 0x3)   mov(memw_a16(ss, bp - 0x8), cx);      /* mov [bp-0x8], cx */
    II(0x0013eec0, 0x1)   pushw(cx);                            /* push cx */
    II(0x0013eec1, 0x3)   mov(ax, 0x205);                       /* mov ax, 0x205 */
    II(0x0013eec4, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
    II(0x0013eec7, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013eec8, 0x1)   nop();                                /* nop  */
    II(0x0013eec9, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013eeca, 0x3)   callw(0x0013eb64, -0x369);            /* call 0x13eb64 */
    II(0x0013eecd, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013eed0, 0x5)   mov(memw_a16(ss, bp - 0x2), 0xff00);  /* mov word [bp-0x2], 0xff00 */
l_0x0013eed5:
    II(0x0013eed5, 0x5)   mov(memw_a16(ss, bp - 0x6), 0x1000);  /* mov word [bp-0x6], 0x1000 */
    II(0x0013eeda, 0x4)   mov(es, memw_a16(ds, 0x1dce));        /* mov es, [0x1dce] */
    II(0x0013eede, 0x4)   mov(ax, memw_a16(es, 0x1418));        /* mov ax, [es:0x1418] */
    II(0x0013eee2, 0x2)   sub(bx, bx);                          /* sub bx, bx */
    II(0x0013eee4, 0x2)   mov(es, ax);                          /* mov es, ax */
    II(0x0013eee6, 0x5)   test(memb_a16(es, bx + 0x47), 0x4);   /* test byte [es:bx+0x47], 0x4 */
    II(0x0013eeeb, 0x2)   jzw(0x0013eef8, 0xb);                 /* jz 0x13eef8 */
    II(0x0013eeed, 0x3)   mov(ax, memw_a16(ss, bp - 0x24));     /* mov ax, [bp-0x24] */
    II(0x0013eef0, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0013eef3, 0x3)   mov(ax, memw_a16(ss, bp - 0x28));     /* mov ax, [bp-0x28] */
    II(0x0013eef6, 0x2)   jmpw(0x0013ef01, 0x9);                /* jmp 0x13ef01 */
l_0x0013eef8:
    II(0x0013eef8, 0x3)   mov(ax, memw_a16(ss, bp - 0x28));     /* mov ax, [bp-0x28] */
    II(0x0013eefb, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0013eefe, 0x3)   mov(ax, memw_a16(ss, bp - 0x2a));     /* mov ax, [bp-0x2a] */
l_0x0013ef01:
    II(0x0013ef01, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013ef04, 0x3)   mov(ax, memw_a16(ss, bp - 0x44));     /* mov ax, [bp-0x44] */
    II(0x0013ef07, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x0013ef0a, 0x3)   mov(ax, memw_a16(ss, bp - 0x38));     /* mov ax, [bp-0x38] */
    II(0x0013ef0d, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x0013ef10, 0x1)   pushw(bx);                            /* push bx */
    II(0x0013ef11, 0x1)   pushw(bx);                            /* push bx */
    II(0x0013ef12, 0x3)   lea(ax, bp - 0x14);                   /* lea ax, [bp-0x14] */
    II(0x0013ef15, 0x1)   pushw(ss);                            /* push ss */
    II(0x0013ef16, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013ef17, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
//    II(0x0013ef1a, 0x1)   nop();                                /* nop  */
    II(0x0013ef1b, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013ef1c, 0x3)   callw(0x0013eb40, -0x3df);            /* call 0x13eb40 */
    II(0x0013ef1f, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
l_0x0013ef22:
    II(0x0013ef22, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013ef23, 0x1)   leavew();                             /* leave  */
    II(0x0013ef24, 0x1)   retfw();                              /* retf  */
FUNC_END

