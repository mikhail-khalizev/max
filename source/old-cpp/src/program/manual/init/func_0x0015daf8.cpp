FUNC_BEGIN(0x0015daf8, 0x6d684c7ae5fdd17e, 0x10, ({0xc8, 0xc, 0, 0, 0x57, 0x56, 0x8e, 0x6, 0xc6, 0x3f, 0x26, 0xa1, 0x7c, 0x3b, 0xc7, 0x46, 0xf8, 0, 0, 0x89, 0x46, 0xfa, 0x80, 0x3e, 0x9e, 0x2b, 0, 0x74, 0x9, 0xb8, 0x1, 0, 0xe9, 0x58, 0x1, 0xff, 0x46, 0xf8, 0xc4, 0x5e, 0xf8, 0x26, 0x83, 0x3f, 0, 0x75, 0xf4, 0x8b, 0xc3, 0x40, 0x40, 0x89, 0x46, 0xfe, 0xc7, 0x46, 0xf8, 0, 0, 0x5, 0xa6, 0x4, 0x1e, 0x68, 0xe6, 0x2b, 0x2b, 0xd2, 0x52, 0x50, 0x8b, 0xf0, 0x8b, 0xfa, 0x90, 0xe, 0xe8, 0xe6, 0xf9, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0xb, 0xd0, 0x75, 0x3, 0xe9, 0x1a, 0x1, 0xff, 0x36, 0x9c, 0x2b, 0xff, 0x76, 0xf6, 0x50, 0x57, 0x56, 0x68, 0x92, 0, 0xe8, 0xb3, 0xf0, 0xff, 0x76, 0xf6, 0xff, 0x76, 0xf4, 0x57, 0x56, 0xe8, 0x2d, 0x20, 0xa1, 0x9c, 0x2b, 0xc4, 0x1e, 0x9a, 0x2b, 0x26, 0x89, 0x87, 0x44, 0x2, 0x2b, 0xc0, 0x26, 0x89, 0x47, 0x2, 0x26, 0x89, 0x7, 0x26, 0x89, 0x47, 0x6, 0x26, 0x89, 0x47, 0x4, 0x26, 0x89, 0x47, 0xa, 0x26, 0x89, 0x47, 0x8, 0x8d, 0x47, 0x18, 0x6, 0x50, 0xe8, 0x55, 0xfe, 0xc4, 0x1e, 0x9a, 0x2b, 0x26, 0x89, 0x47, 0xc, 0x26, 0x89, 0x57, 0xe, 0xc4, 0x1e, 0x9a, 0x2b, 0x2b, 0xc0, 0x26, 0x89, 0x47, 0x12, 0x26, 0x89, 0x47, 0x10, 0x26, 0xc7, 0x47, 0x1c, 0xa, 0, 0x26, 0x89, 0x47, 0x1e, 0xb8, 0x1, 0, 0x99, 0x26, 0x89, 0x47, 0x14, 0x26, 0x89, 0x57, 0x16, 0x26, 0x89, 0x47, 0x18, 0x26, 0x89, 0x57, 0x1a, 0x26, 0x89, 0x47, 0x20, 0x26, 0x89, 0x57, 0x22, 0x2b, 0xc0, 0x26, 0x89, 0x47, 0x24, 0x26, 0x89, 0x47, 0x26, 0x8b, 0x46, 0xf4, 0x8b, 0x56, 0xf6, 0x5, 0xa2, 0x2, 0x83, 0xd2, 0, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x2b, 0x6, 0xea, 0x19, 0x1b, 0x16, 0xec, 0x19, 0x26, 0x89, 0x47, 0x38, 0x26, 0x89, 0x57, 0x3a, 0x8b, 0x46, 0xfe, 0x5, 0x3, 0, 0x24, 0xfc, 0x2b, 0xd2, 0x1, 0x46, 0xf4, 0x11, 0x56, 0xf6, 0x8b, 0x46, 0xf4, 0x8b, 0x56, 0xf6, 0x2b, 0x6, 0xea, 0x19, 0x1b, 0x16, 0xec, 0x19, 0x26, 0x89, 0x47, 0x34, 0x26, 0x89, 0x57, 0x36, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0x8d, 0x87, 0xa2, 0x2, 0x6, 0x50, 0x90, 0xe, 0xe8, 0x1a, 0x33, 0x83, 0xc4, 0xa, 0x6a, 0x5a, 0x8e, 0x6, 0xc6, 0x3f, 0x26, 0xa1, 0x78, 0x3b, 0x2b, 0xc9, 0x50, 0x51, 0xa1, 0x9a, 0x2b, 0x8b, 0x16, 0x9c, 0x2b, 0x5, 0x48, 0x2, 0x52, 0x50, 0x90, 0xe, 0xe8, 0xf8, 0x32, 0x83, 0xc4, 0xa, 0xfe, 0x6, 0x9e, 0x2b, 0xe9, 0xa4, 0xfe, 0x2b, 0xc0, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0015daf8, 0x4)   enterw(0xc, 0);                       /* enter 0xc, 0x0 */
    II(0x0015dafc, 0x1)   pushw(di);                            /* push di */
    II(0x0015dafd, 0x1)   pushw(si);                            /* push si */
    II(0x0015dafe, 0x4)   mov(es, memw_a16(ds, 0x3fc6));        /* mov es, [0x3fc6] */
    II(0x0015db02, 0x4)   mov(ax, memw_a16(es, 0x3b7c));        /* mov ax, [es:0x3b7c] */
    II(0x0015db06, 0x5)   mov(memw_a16(ss, bp - 0x8), 0);       /* mov word [bp-0x8], 0x0 */
    II(0x0015db0b, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0015db0e, 0x5)   cmp(memb_a16(ds, 0x2b9e), 0);         /* cmp byte [0x2b9e], 0x0 */
    II(0x0015db13, 0x2)   jzw(0x0015db1e, 0x9);                 /* jz 0x15db1e */
l_0x0015db15:
    II(0x0015db15, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x0015db18, 0x3)   jmpw(0x0015dc73, 0x158);              /* jmp 0x15dc73 */
l_0x0015db1b:
    II(0x0015db1b, 0x3)   inc(memw_a16(ss, bp - 0x8));          /* inc word [bp-0x8] */
l_0x0015db1e:
    II(0x0015db1e, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x0015db21, 0x4)   cmp(memw_a16(es, bx), 0);             /* cmp word [es:bx], 0x0 */
    II(0x0015db25, 0x2)   jnzw(0x0015db1b, -0xc);               /* jnz 0x15db1b */
    II(0x0015db27, 0x2)   mov(ax, bx);                          /* mov ax, bx */
    II(0x0015db29, 0x1)   inc(ax);                              /* inc ax */
    II(0x0015db2a, 0x1)   inc(ax);                              /* inc ax */
    II(0x0015db2b, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
    II(0x0015db2e, 0x5)   mov(memw_a16(ss, bp - 0x8), 0);       /* mov word [bp-0x8], 0x0 */
    II(0x0015db33, 0x3)   add(ax, 0x4a6);                       /* add ax, 0x4a6 */
    II(0x0015db36, 0x1)   pushw(ds);                            /* push ds */
    II(0x0015db37, 0x3)   pushw(0x2be6);                        /* push word 0x2be6 */
    II(0x0015db3a, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x0015db3c, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015db3d, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015db3e, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0015db40, 0x2)   mov(di, dx);                          /* mov di, dx */
//    II(0x0015db42, 0x1)   nop();                                /* nop  */
    II(0x0015db43, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015db44, 0x3)   callw(0x0015d52d, -0x61a);            /* call 0x15d52d */
    II(0x0015db47, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0015db4a, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0015db4d, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0015db50, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0015db52, 0x2)   jnzw(0x0015db57, 0x3);                /* jnz 0x15db57 */
    II(0x0015db54, 0x3)   jmpw(0x0015dc71, 0x11a);              /* jmp 0x15dc71 */
l_0x0015db57:
    II(0x0015db57, 0x4)   pushw(memw_a16(ds, 0x2b9c));          /* push word [0x2b9c] */
    II(0x0015db5b, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0015db5e, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015db5f, 0x1)   pushw(di);                            /* push di */
    II(0x0015db60, 0x1)   pushw(si);                            /* push si */
    II(0x0015db61, 0x3)   pushw(0x92);                          /* push word 0x92 */
    II(0x0015db64, 0x3)   callw(0x0015cc1a, -0xf4d);            /* call 0x15cc1a */
    II(0x0015db67, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0015db6a, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0015db6d, 0x1)   pushw(di);                            /* push di */
    II(0x0015db6e, 0x1)   pushw(si);                            /* push si */
    II(0x0015db6f, 0x3)   callw(0x0015fb9f, 0x202d);            /* call 0x15fb9f */
    II(0x0015db72, 0x3)   mov(ax, memw_a16(ds, 0x2b9c));        /* mov ax, [0x2b9c] */
    II(0x0015db75, 0x4)   les(bx, ds, 0x2b9a);                  /* les bx, [0x2b9a] */
    II(0x0015db79, 0x5)   mov(memw_a16(es, bx + 0x244), ax);    /* mov [es:bx+0x244], ax */
    II(0x0015db7e, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0015db80, 0x4)   mov(memw_a16(es, bx + 0x2), ax);      /* mov [es:bx+0x2], ax */
    II(0x0015db84, 0x3)   mov(memw_a16(es, bx), ax);            /* mov [es:bx], ax */
    II(0x0015db87, 0x4)   mov(memw_a16(es, bx + 0x6), ax);      /* mov [es:bx+0x6], ax */
    II(0x0015db8b, 0x4)   mov(memw_a16(es, bx + 0x4), ax);      /* mov [es:bx+0x4], ax */
    II(0x0015db8f, 0x4)   mov(memw_a16(es, bx + 0xa), ax);      /* mov [es:bx+0xa], ax */
    II(0x0015db93, 0x4)   mov(memw_a16(es, bx + 0x8), ax);      /* mov [es:bx+0x8], ax */
    II(0x0015db97, 0x3)   lea(ax, bx + 0x18);                   /* lea ax, [bx+0x18] */
    II(0x0015db9a, 0x1)   pushw(es);                            /* push es */
    II(0x0015db9b, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015db9c, 0x3)   callw(0x0015d9f4, -0x1ab);            /* call 0x15d9f4 */
    II(0x0015db9f, 0x4)   les(bx, ds, 0x2b9a);                  /* les bx, [0x2b9a] */
    II(0x0015dba3, 0x4)   mov(memw_a16(es, bx + 0xc), ax);      /* mov [es:bx+0xc], ax */
    II(0x0015dba7, 0x4)   mov(memw_a16(es, bx + 0xe), dx);      /* mov [es:bx+0xe], dx */
    II(0x0015dbab, 0x4)   les(bx, ds, 0x2b9a);                  /* les bx, [0x2b9a] */
    II(0x0015dbaf, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0015dbb1, 0x4)   mov(memw_a16(es, bx + 0x12), ax);     /* mov [es:bx+0x12], ax */
    II(0x0015dbb5, 0x4)   mov(memw_a16(es, bx + 0x10), ax);     /* mov [es:bx+0x10], ax */
    II(0x0015dbb9, 0x6)   mov(memw_a16(es, bx + 0x1c), 0xa);    /* mov word [es:bx+0x1c], 0xa */
    II(0x0015dbbf, 0x4)   mov(memw_a16(es, bx + 0x1e), ax);     /* mov [es:bx+0x1e], ax */
    II(0x0015dbc3, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x0015dbc6, 0x1)   cwd();                                /* cwd  */
    II(0x0015dbc7, 0x4)   mov(memw_a16(es, bx + 0x14), ax);     /* mov [es:bx+0x14], ax */
    II(0x0015dbcb, 0x4)   mov(memw_a16(es, bx + 0x16), dx);     /* mov [es:bx+0x16], dx */
    II(0x0015dbcf, 0x4)   mov(memw_a16(es, bx + 0x18), ax);     /* mov [es:bx+0x18], ax */
    II(0x0015dbd3, 0x4)   mov(memw_a16(es, bx + 0x1a), dx);     /* mov [es:bx+0x1a], dx */
    II(0x0015dbd7, 0x4)   mov(memw_a16(es, bx + 0x20), ax);     /* mov [es:bx+0x20], ax */
    II(0x0015dbdb, 0x4)   mov(memw_a16(es, bx + 0x22), dx);     /* mov [es:bx+0x22], dx */
    II(0x0015dbdf, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0015dbe1, 0x4)   mov(memw_a16(es, bx + 0x24), ax);     /* mov [es:bx+0x24], ax */
    II(0x0015dbe5, 0x4)   mov(memw_a16(es, bx + 0x26), ax);     /* mov [es:bx+0x26], ax */
    II(0x0015dbe9, 0x3)   mov(ax, memw_a16(ss, bp - 0xc));      /* mov ax, [bp-0xc] */
    II(0x0015dbec, 0x3)   mov(dx, memw_a16(ss, bp - 0xa));      /* mov dx, [bp-0xa] */
    II(0x0015dbef, 0x3)   add(ax, 0x2a2);                       /* add ax, 0x2a2 */
    II(0x0015dbf2, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x0015dbf5, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0015dbf8, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0015dbfb, 0x4)   sub(ax, memw_a16(ds, 0x19ea));        /* sub ax, [0x19ea] */
    II(0x0015dbff, 0x4)   sbb(dx, memw_a16(ds, 0x19ec));        /* sbb dx, [0x19ec] */
    II(0x0015dc03, 0x4)   mov(memw_a16(es, bx + 0x38), ax);     /* mov [es:bx+0x38], ax */
    II(0x0015dc07, 0x4)   mov(memw_a16(es, bx + 0x3a), dx);     /* mov [es:bx+0x3a], dx */
    II(0x0015dc0b, 0x3)   mov(ax, memw_a16(ss, bp - 0x2));      /* mov ax, [bp-0x2] */
    II(0x0015dc0e, 0x3)   add(ax, 0x3);                         /* add ax, 0x3 */
    II(0x0015dc11, 0x2)   and_(al, 0xfc);                       /* and al, 0xfc */
    II(0x0015dc13, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x0015dc15, 0x3)   add(memw_a16(ss, bp - 0xc), ax);      /* add [bp-0xc], ax */
    II(0x0015dc18, 0x3)   adc(memw_a16(ss, bp - 0xa), dx);      /* adc [bp-0xa], dx */
    II(0x0015dc1b, 0x3)   mov(ax, memw_a16(ss, bp - 0xc));      /* mov ax, [bp-0xc] */
    II(0x0015dc1e, 0x3)   mov(dx, memw_a16(ss, bp - 0xa));      /* mov dx, [bp-0xa] */
    II(0x0015dc21, 0x4)   sub(ax, memw_a16(ds, 0x19ea));        /* sub ax, [0x19ea] */
    II(0x0015dc25, 0x4)   sbb(dx, memw_a16(ds, 0x19ec));        /* sbb dx, [0x19ec] */
    II(0x0015dc29, 0x4)   mov(memw_a16(es, bx + 0x34), ax);     /* mov [es:bx+0x34], ax */
    II(0x0015dc2d, 0x4)   mov(memw_a16(es, bx + 0x36), dx);     /* mov [es:bx+0x36], dx */
    II(0x0015dc31, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0015dc34, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0015dc37, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0015dc3a, 0x4)   lea(ax, bx + 0x2a2);                  /* lea ax, [bx+0x2a2] */
    II(0x0015dc3e, 0x1)   pushw(es);                            /* push es */
    II(0x0015dc3f, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0015dc40, 0x1)   nop();                                /* nop  */
    II(0x0015dc41, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015dc42, 0x3)   callw(0x00160f5f, 0x331a);            /* call 0x160f5f */
    II(0x0015dc45, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0015dc48, 0x2)   pushw(0x5a);                          /* push 0x5a */
    II(0x0015dc4a, 0x4)   mov(es, memw_a16(ds, 0x3fc6));        /* mov es, [0x3fc6] */
    II(0x0015dc4e, 0x4)   mov(ax, memw_a16(es, 0x3b78));        /* mov ax, [es:0x3b78] */
    II(0x0015dc52, 0x2)   sub(cx, cx);                          /* sub cx, cx */
    II(0x0015dc54, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015dc55, 0x1)   pushw(cx);                            /* push cx */
    II(0x0015dc56, 0x3)   mov(ax, memw_a16(ds, 0x2b9a));        /* mov ax, [0x2b9a] */
    II(0x0015dc59, 0x4)   mov(dx, memw_a16(ds, 0x2b9c));        /* mov dx, [0x2b9c] */
    II(0x0015dc5d, 0x3)   add(ax, 0x248);                       /* add ax, 0x248 */
    II(0x0015dc60, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015dc61, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0015dc62, 0x1)   nop();                                /* nop  */
    II(0x0015dc63, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015dc64, 0x3)   callw(0x00160f5f, 0x32f8);            /* call 0x160f5f */
    II(0x0015dc67, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0015dc6a, 0x4)   inc(memb_a16(ds, 0x2b9e));            /* inc byte [0x2b9e] */
    II(0x0015dc6e, 0x3)   jmpw(0x0015db15, -0x15c);             /* jmp 0x15db15 */
l_0x0015dc71:
    II(0x0015dc71, 0x2)   sub(ax, ax);                          /* sub ax, ax */
l_0x0015dc73:
    II(0x0015dc73, 0x1)   popw(si);                             /* pop si */
    II(0x0015dc74, 0x1)   popw(di);                             /* pop di */
    II(0x0015dc75, 0x1)   leavew();                             /* leave  */
    II(0x0015dc76, 0x1)   retfw();                              /* retf  */
FUNC_END

