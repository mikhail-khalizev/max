FUNC_BEGIN(0x0014b0d5, 0x769d15c56835732f, 0x10, ({0x55, 0x8b, 0xec, 0x8b, 0x6e, 0x4, 0x8b, 0x1e, 0x96, 0x9, 0x57, 0xe8, 0x3f, 0xfa, 0x5f, 0x73, 0x6, 0xe8, 0xaa, 0xf7, 0xe9, 0x7d, 0xff, 0xcc, 0x80, 0x7e, 0x16, 0, 0x74, 0xc, 0xc7, 0x46, 0x16, 0x1, 0, 0x80, 0x4e, 0x26, 0x1, 0xe9, 0x39, 0xf7, 0x8b, 0x3e, 0xa, 0, 0x57, 0x33, 0xc0, 0x8b, 0xe, 0xe, 0, 0xd1, 0xe9, 0xf3, 0xab, 0xe8, 0xe2, 0xf7, 0x5f, 0x81, 0xc7, 0x80, 0, 0x89, 0x7f, 0x10, 0x8b, 0x76, 0x10, 0x8e, 0x5e, 0x6, 0xb9, 0x7, 0, 0xf3, 0xa5, 0x26, 0x8b, 0x1e, 0xa, 0, 0x8d, 0xbf, 0x90, 0, 0x26, 0xc5, 0xb7, 0x86, 0, 0x8c, 0xd9, 0x41, 0xe2, 0x4, 0x6, 0x1f, 0x8b, 0xf7, 0xb9, 0x8, 0, 0xf3, 0xa5, 0x26, 0xc5, 0xb7, 0x8a, 0, 0x8c, 0xd9, 0x41, 0xe2, 0x4, 0x6, 0x1f, 0x8b, 0xf7, 0xb9, 0x8, 0, 0xf3, 0xa5, 0x57, 0x26, 0xc5, 0xb7, 0x82, 0, 0xba, 0x80, 0, 0x8c, 0xd9, 0xf, 0x3, 0xc9, 0x2b, 0xce, 0x3b, 0xca, 0x72, 0x2, 0x8b, 0xca, 0xf3, 0xa4, 0x5f, 0x81, 0xc7, 0x80, 0, 0x33, 0xc0, 0x26, 0x87, 0x87, 0x80, 0, 0x3d, 0x30, 0, 0x76, 0x2c, 0x8e, 0xd8, 0x33, 0xf6, 0xf, 0x3, 0xc8, 0x26, 0x8b, 0x16, 0xe, 0, 0x81, 0xea, 0x30, 0x1, 0x3b, 0xca, 0x72, 0x2, 0x8b, 0xca, 0xd1, 0xe9, 0xf3, 0xa5, 0x8b, 0xc3, 0xc1, 0xe8, 0x4, 0x26, 0x3, 0x6, 0xb4, 0x9, 0x5, 0x13, 0, 0x26, 0x89, 0x87, 0x80, 0, 0x6, 0x1f, 0x8b, 0x16, 0xb4, 0x9, 0x8d, 0xbf, 0x82, 0, 0x8d, 0x87, 0xb0, 0, 0xab, 0x8b, 0xc2, 0xab, 0x8d, 0x87, 0x90, 0, 0xab, 0x8b, 0xc2, 0xab, 0x8d, 0x87, 0xa0, 0, 0xab, 0x8b, 0xc2, 0xab, 0xfe, 0x6, 0x82, 0x11, 0x80, 0x3e, 0x2e, 0, 0, 0x75, 0x59, 0x50, 0x6, 0xb2, 0, 0x86, 0x16, 0x80, 0x9, 0xbb, 0xad, 0, 0xb4, 0x48, 0xcd, 0x21, 0x73, 0xa, 0xfe, 0xe, 0x82, 0x11, 0xb8, 0xff, 0xff, 0xe9, 0x48, 0xf6, 0xa3, 0x83, 0x11, 0x88, 0x16, 0x80, 0x9, 0x8e, 0xc0, 0x33, 0xff, 0xe, 0x68, 0xe7, 0x16, 0xff, 0x36, 0x26, 0xc, 0x68, 0x91, 0x75, 0xcb, 0xbf, 0, 0x4, 0xe, 0x68, 0xf6, 0x16, 0xff, 0x36, 0x26, 0xc, 0x68, 0x6, 0x76, 0xcb, 0x7, 0x1e, 0x8e, 0x1e, 0x32, 0xc, 0x66, 0x8b, 0x16, 0x66, 0x6d, 0x8b, 0xe, 0x6a, 0x6d, 0xb3, 0x21, 0xb8, 0x5, 0x2, 0xcd, 0x31, 0x1f, 0x58, 0x8b, 0x1e, 0x96, 0x9, 0x89, 0x47, 0x6, 0xe8, 0, 0xfb, 0xa1, 0x36, 0, 0x50, 0x86, 0xc4, 0xb4, 0x80, 0xa3, 0x35, 0, 0xe8, 0x4d, 0xf6, 0x58, 0x8a, 0x26, 0x35, 0, 0xa3, 0x36, 0, 0x80, 0x3e, 0x2e, 0, 0, 0x75, 0x27, 0x53, 0x8e, 0x6, 0x83, 0x11, 0xbf, 0, 0x4, 0xe, 0x68, 0x49, 0x17, 0xff, 0x36, 0x26, 0xc, 0x68, 0x39, 0x76, 0xcb, 0x33, 0xff, 0xe, 0x68, 0x57, 0x17, 0xff, 0x36, 0x26, 0xc, 0x68, 0xc6, 0x75, 0xcb, 0xb4, 0x49, 0xcd, 0x21, 0x5b, 0x1e, 0xb4, 0x1a, 0xc5, 0x16, 0xb0, 0x9, 0xe, 0xe8, 0xdf, 0xf0, 0x1f, 0xfe, 0xe, 0x82, 0x11, 0x8e, 0x6, 0x2a, 0xc, 0xa1, 0x2c, 0xc, 0x26, 0xa3, 0x2c, 0, 0xe9, 0xa3, 0xfd}))
    II(0x0014b0d5, 0x1)   pushw(bp);                            /* push bp */
    II(0x0014b0d6, 0x2)   mov(bp, sp);                          /* mov bp, sp */
    II(0x0014b0d8, 0x3)   mov(bp, memw_a16(ss, bp + 0x4));      /* mov bp, [bp+0x4] */
    II(0x0014b0db, 0x4)   mov(bx, memw_a16(ds, 0x996));         /* mov bx, [0x996] */
    II(0x0014b0df, 0x1)   pushw(di);                            /* push di */
    II(0x0014b0e0, 0x3)   callw(0x0014ab22, -0x5c1);            /* call 0x14ab22 */
    II(0x0014b0e3, 0x1)   popw(di);                             /* pop di */
    II(0x0014b0e4, 0x2)   jaew(0x0014b0ec, 0x6);                /* jae 0x14b0ec */
    II(0x0014b0e6, 0x3)   callw(0x0014a893, -0x856);            /* call 0x14a893 */
    II(0x0014b0e9, 0x3)   jmpw_func(0x0014b069, -0x83);         /* jmp 0x14b069 */
l_0x0014b0ec:
    II(0x0014b0ec, 0x1)   int3();                               /* int3  */
    II(0x0014b0ed, 0x4)   cmp(memb_a16(ss, bp + 0x16), 0);      /* cmp byte [bp+0x16], 0x0 */
    II(0x0014b0f1, 0x2)   jzw(0x0014b0ff, 0xc);                 /* jz 0x14b0ff */
    II(0x0014b0f3, 0x5)   mov(memw_a16(ss, bp + 0x16), 0x1);    /* mov word [bp+0x16], 0x1 */
    II(0x0014b0f8, 0x4)   or_(memb_a16(ss, bp + 0x26), 0x1);    /* or byte [bp+0x26], 0x1 */
    II(0x0014b0fc, 0x3)   jmpw_func(0x0014a838, -0x8c7);        /* jmp 0x14a838 */
l_0x0014b0ff:
    II(0x0014b0ff, 0x4)   mov(di, memw_a16(ds, 0xa));           /* mov di, [0xa] */
    II(0x0014b103, 0x1)   pushw(di);                            /* push di */
    II(0x0014b104, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
    II(0x0014b106, 0x4)   mov(cx, memw_a16(ds, 0xe));           /* mov cx, [0xe] */
    II(0x0014b10a, 0x2)   shr(cx, 0x1);                         /* shr cx, 1 */
    II(0x0014b10c, 0x2)   rep_a16 stosw_a16();                  /* rep stosw  */
    II(0x0014b10e, 0x3)   callw(0x0014a8f3, -0x81e);            /* call 0x14a8f3 */
    II(0x0014b111, 0x1)   popw(di);                             /* pop di */
    II(0x0014b112, 0x4)   add(di, 0x80);                        /* add di, 0x80 */
    II(0x0014b116, 0x3)   mov(memw_a16(ds, bx + 0x10), di);     /* mov [bx+0x10], di */
    II(0x0014b119, 0x3)   mov(si, memw_a16(ss, bp + 0x10));     /* mov si, [bp+0x10] */
    II(0x0014b11c, 0x3)   mov(ds, memw_a16(ss, bp + 0x6));      /* mov ds, [bp+0x6] */
    II(0x0014b11f, 0x3)   mov(cx, 0x7);                         /* mov cx, 0x7 */
    II(0x0014b122, 0x2)   rep_a16 movsw_a16();                  /* rep movsw  */
    II(0x0014b124, 0x5)   mov(bx, memw_a16(es, 0xa));           /* mov bx, [es:0xa] */
    II(0x0014b129, 0x4)   lea(di, bx + 0x90);                   /* lea di, [bx+0x90] */
    II(0x0014b12d, 0x5)   lds(si, es, bx + 0x86);               /* lds si, [es:bx+0x86] */
    II(0x0014b132, 0x2)   mov(cx, ds);                          /* mov cx, ds */
    II(0x0014b134, 0x1)   inc(cx);                              /* inc cx */
    II(0x0014b135, 0x2)   loopw_a16(0x0014b13b, 0x4);           /* loop 0x14b13b */
    II(0x0014b137, 0x1)   pushw(es);                            /* push es */
    II(0x0014b138, 0x1)   popw(ds);                             /* pop ds */
    II(0x0014b139, 0x2)   mov(si, di);                          /* mov si, di */
l_0x0014b13b:
    II(0x0014b13b, 0x3)   mov(cx, 0x8);                         /* mov cx, 0x8 */
    II(0x0014b13e, 0x2)   rep_a16 movsw_a16();                  /* rep movsw  */
    II(0x0014b140, 0x5)   lds(si, es, bx + 0x8a);               /* lds si, [es:bx+0x8a] */
    II(0x0014b145, 0x2)   mov(cx, ds);                          /* mov cx, ds */
    II(0x0014b147, 0x1)   inc(cx);                              /* inc cx */
    II(0x0014b148, 0x2)   loopw_a16(0x0014b14e, 0x4);           /* loop 0x14b14e */
    II(0x0014b14a, 0x1)   pushw(es);                            /* push es */
    II(0x0014b14b, 0x1)   popw(ds);                             /* pop ds */
    II(0x0014b14c, 0x2)   mov(si, di);                          /* mov si, di */
l_0x0014b14e:
    II(0x0014b14e, 0x3)   mov(cx, 0x8);                         /* mov cx, 0x8 */
    II(0x0014b151, 0x2)   rep_a16 movsw_a16();                  /* rep movsw  */
    II(0x0014b153, 0x1)   pushw(di);                            /* push di */
    II(0x0014b154, 0x5)   lds(si, es, bx + 0x82);               /* lds si, [es:bx+0x82] */
    II(0x0014b159, 0x3)   mov(dx, 0x80);                        /* mov dx, 0x80 */
    II(0x0014b15c, 0x2)   mov(cx, ds);                          /* mov cx, ds */
    II(0x0014b15e, 0x3)   lsl(cx, cx);                          /* lsl cx, cx */
    II(0x0014b161, 0x2)   sub(cx, si);                          /* sub cx, si */
    II(0x0014b163, 0x2)   cmp(cx, dx);                          /* cmp cx, dx */
    II(0x0014b165, 0x2)   jbw(0x0014b169, 0x2);                 /* jb 0x14b169 */
    II(0x0014b167, 0x2)   mov(cx, dx);                          /* mov cx, dx */
l_0x0014b169:
    II(0x0014b169, 0x2)   rep_a16 movsb_a16();                  /* rep movsb  */
    II(0x0014b16b, 0x1)   popw(di);                             /* pop di */
    II(0x0014b16c, 0x4)   add(di, 0x80);                        /* add di, 0x80 */
    II(0x0014b170, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
    II(0x0014b172, 0x5)   xchg(memw_a16(es, bx + 0x80), ax);    /* xchg [es:bx+0x80], ax */
    II(0x0014b177, 0x3)   cmp(ax, 0x30);                        /* cmp ax, 0x30 */
    II(0x0014b17a, 0x2)   jbew(0x0014b1a8, 0x2c);               /* jbe 0x14b1a8 */
    II(0x0014b17c, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0014b17e, 0x2)   xor_(si, si);                         /* xor si, si */
    II(0x0014b180, 0x3)   lsl(cx, ax);                          /* lsl cx, ax */
    II(0x0014b183, 0x5)   mov(dx, memw_a16(es, 0xe));           /* mov dx, [es:0xe] */
    II(0x0014b188, 0x4)   sub(dx, 0x130);                       /* sub dx, 0x130 */
    II(0x0014b18c, 0x2)   cmp(cx, dx);                          /* cmp cx, dx */
    II(0x0014b18e, 0x2)   jbw(0x0014b192, 0x2);                 /* jb 0x14b192 */
    II(0x0014b190, 0x2)   mov(cx, dx);                          /* mov cx, dx */
l_0x0014b192:
    II(0x0014b192, 0x2)   shr(cx, 0x1);                         /* shr cx, 1 */
    II(0x0014b194, 0x2)   rep_a16 movsw_a16();                  /* rep movsw  */
    II(0x0014b196, 0x2)   mov(ax, bx);                          /* mov ax, bx */
    II(0x0014b198, 0x3)   shr(ax, 0x4);                         /* shr ax, 0x4 */
    II(0x0014b19b, 0x5)   add(ax, memw_a16(es, 0x9b4));         /* add ax, [es:0x9b4] */
    II(0x0014b1a0, 0x3)   add(ax, 0x13);                        /* add ax, 0x13 */
    II(0x0014b1a3, 0x5)   mov(memw_a16(es, bx + 0x80), ax);     /* mov [es:bx+0x80], ax */
l_0x0014b1a8:
    II(0x0014b1a8, 0x1)   pushw(es);                            /* push es */
    II(0x0014b1a9, 0x1)   popw(ds);                             /* pop ds */
    II(0x0014b1aa, 0x4)   mov(dx, memw_a16(ds, 0x9b4));         /* mov dx, [0x9b4] */
    II(0x0014b1ae, 0x4)   lea(di, bx + 0x82);                   /* lea di, [bx+0x82] */
    II(0x0014b1b2, 0x4)   lea(ax, bx + 0xb0);                   /* lea ax, [bx+0xb0] */
    II(0x0014b1b6, 0x1)   stosw_a16();                          /* stosw  */
    II(0x0014b1b7, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0014b1b9, 0x1)   stosw_a16();                          /* stosw  */
    II(0x0014b1ba, 0x4)   lea(ax, bx + 0x90);                   /* lea ax, [bx+0x90] */
    II(0x0014b1be, 0x1)   stosw_a16();                          /* stosw  */
    II(0x0014b1bf, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0014b1c1, 0x1)   stosw_a16();                          /* stosw  */
    II(0x0014b1c2, 0x4)   lea(ax, bx + 0xa0);                   /* lea ax, [bx+0xa0] */
    II(0x0014b1c6, 0x1)   stosw_a16();                          /* stosw  */
    II(0x0014b1c7, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0014b1c9, 0x1)   stosw_a16();                          /* stosw  */
    II(0x0014b1ca, 0x4)   inc(memb_a16(ds, 0x1182));            /* inc byte [0x1182] */
    II(0x0014b1ce, 0x5)   cmp(memb_a16(ds, 0x2e), 0);           /* cmp byte [0x2e], 0x0 */
    II(0x0014b1d3, 0x2)   jnzw(0x0014b22e, 0x59);               /* jnz 0x14b22e */
    II(0x0014b1d5, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014b1d6, 0x1)   pushw(es);                            /* push es */
    II(0x0014b1d7, 0x2)   mov(dl, 0);                           /* mov dl, 0x0 */
    II(0x0014b1d9, 0x4)   xchg(memb_a16(ds, 0x980), dl);        /* xchg [0x980], dl */
    II(0x0014b1dd, 0x3)   mov(bx, 0xad);                        /* mov bx, 0xad */
    II(0x0014b1e0, 0x2)   mov(ah, 0x48);                        /* mov ah, 0x48 */
    II(0x0014b1e2, 0x2)   int_(0x21);                           /* int 0x21 */
    II(0x0014b1e4, 0x2)   jaew(0x0014b1f0, 0xa);                /* jae 0x14b1f0 */
    II(0x0014b1e6, 0x4)   dec(memb_a16(ds, 0x1182));            /* dec byte [0x1182] */
    II(0x0014b1ea, 0x3)   mov(ax, 0xffff);                      /* mov ax, 0xffff */
    II(0x0014b1ed, 0x3)   jmpw_func(0x0014a838, -0x9b8);        /* jmp 0x14a838 */
l_0x0014b1f0:
    II(0x0014b1f0, 0x3)   mov(memw_a16(ds, 0x1183), ax);        /* mov [0x1183], ax */
    II(0x0014b1f3, 0x4)   mov(memb_a16(ds, 0x980), dl);         /* mov [0x980], dl */
    II(0x0014b1f7, 0x2)   mov(es, ax);                          /* mov es, ax */
    II(0x0014b1f9, 0x2)   xor_(di, di);                         /* xor di, di */
    II(0x0014b1fb, 0x1)   pushw(cs);                            /* push cs */
    II(0x0014b1fc, 0x3)   pushw(0x16e7);                        /* push word 0x16e7 */
    II(0x0014b1ff, 0x4)   pushw(memw_a16(ds, 0xc26));           /* push word [0xc26] */
    II(0x0014b203, 0x3)   pushw(0x7591);                        /* push word 0x7591 */
    II(0x0014b206, 0x1)   retfw();                              /* retf  */
//    II(0x0014b207, 0x27)  /* Недостижимый код. */
l_0x0014b22e:
    II(0x0014b22e, 0x4)   mov(bx, memw_a16(ds, 0x996));         /* mov bx, [0x996] */
    II(0x0014b232, 0x3)   mov(memw_a16(ds, bx + 0x6), ax);      /* mov [bx+0x6], ax */
    II(0x0014b235, 0x3)   callw(0x0014ad38, -0x500);            /* call 0x14ad38 */
    II(0x0014b238, 0x3)   mov(ax, memw_a16(ds, 0x36));          /* mov ax, [0x36] */
    II(0x0014b23b, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014b23c, 0x2)   xchg(ah, al);                         /* xchg ah, al */
    II(0x0014b23e, 0x2)   mov(ah, 0x80);                        /* mov ah, 0x80 */
    II(0x0014b240, 0x3)   mov(memw_a16(ds, 0x35), ax);          /* mov [0x35], ax */
    II(0x0014b243, 0x3)   callw(0x0014a893, -0x9b3);            /* call 0x14a893 */
    II(0x0014b246, 0x1)   popw(ax);                             /* pop ax */
    II(0x0014b247, 0x4)   mov(ah, memb_a16(ds, 0x35));          /* mov ah, [0x35] */
    II(0x0014b24b, 0x3)   mov(memw_a16(ds, 0x36), ax);          /* mov [0x36], ax */
    II(0x0014b24e, 0x5)   cmp(memb_a16(ds, 0x2e), 0);           /* cmp byte [0x2e], 0x0 */
    II(0x0014b253, 0x2)   jnzw(0x0014b27c, 0x27);               /* jnz 0x14b27c */
    II(0x0014b255, 0x1)   pushw(bx);                            /* push bx */
    II(0x0014b256, 0x4)   mov(es, memw_a16(ds, 0x1183));        /* mov es, [0x1183] */
    II(0x0014b25a, 0x3)   mov(di, 0x400);                       /* mov di, 0x400 */
    II(0x0014b25d, 0x1)   pushw(cs);                            /* push cs */
    II(0x0014b25e, 0x3)   pushw(0x1749);                        /* push word 0x1749 */
    II(0x0014b261, 0x4)   pushw(memw_a16(ds, 0xc26));           /* push word [0xc26] */
    II(0x0014b265, 0x3)   pushw(0x7639);                        /* push word 0x7639 */
    II(0x0014b268, 0x1)   retfw();                              /* retf  */
//    II(0x0014b269, 0x13)  /* Недостижимый код. */
l_0x0014b27c:
    II(0x0014b27c, 0x1)   pushw(ds);                            /* push ds */
    II(0x0014b27d, 0x2)   mov(ah, 0x1a);                        /* mov ah, 0x1a */
    II(0x0014b27f, 0x4)   lds(dx, ds, 0x9b0);                   /* lds dx, [0x9b0] */
    II(0x0014b283, 0x1)   pushw(cs);                            /* push cs */
    II(0x0014b284, 0x3)   callw(0x0014a366, -0xf21);            /* call 0x14a366 */
    II(0x0014b287, 0x1)   popw(ds);                             /* pop ds */
    II(0x0014b288, 0x4)   dec(memb_a16(ds, 0x1182));            /* dec byte [0x1182] */
    II(0x0014b28c, 0x4)   mov(es, memw_a16(ds, 0xc2a));         /* mov es, [0xc2a] */
    II(0x0014b290, 0x3)   mov(ax, memw_a16(ds, 0xc2c));         /* mov ax, [0xc2c] */
    II(0x0014b293, 0x4)   mov(memw_a16(es, 0x2c), ax);          /* mov [es:0x2c], ax */
    II(0x0014b297, 0x3)   jmpw_func(0x0014b03d, -0x25d);        /* jmp 0x14b03d */
FUNC_END

