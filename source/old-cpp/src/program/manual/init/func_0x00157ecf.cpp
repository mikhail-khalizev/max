FUNC_BEGIN(0x00157ecf, 0xa04cef298958984e, 0x10, ({0xc8, 0, 0, 0, 0x57, 0x56, 0x8b, 0x46, 0x6, 0xe9, 0xd0, 0x1, 0x6a, 0x2, 0x1e, 0x68, 0x9c, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x36, 0xc4, 0x5e, 0x8, 0x26, 0x8b, 0x47, 0x32, 0x26, 0x8b, 0x57, 0x34, 0x5, 0x2, 0, 0x83, 0xd2, 0, 0x52, 0x50, 0x9a, 0x34, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0x6a, 0x2, 0x1e, 0x68, 0x9c, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x4, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x12, 0x26, 0xff, 0x77, 0x10, 0x9a, 0x66, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0xc4, 0x5e, 0x8, 0x26, 0x83, 0x47, 0x32, 0x4, 0x26, 0x83, 0x57, 0x34, 0, 0xe9, 0xa1, 0x1, 0x6a, 0x2, 0x1e, 0x68, 0x9c, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x4, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x12, 0x26, 0xff, 0x77, 0x10, 0x9a, 0x34, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0xc4, 0x5e, 0x8, 0x26, 0x8b, 0x47, 0x28, 0x29, 0x6, 0x9c, 0x48, 0x6a, 0x2, 0x1e, 0x68, 0x9c, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x4, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x12, 0x26, 0xff, 0x77, 0x10, 0x9a, 0x66, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0xc4, 0x5e, 0x8, 0x26, 0x83, 0x47, 0x32, 0x2, 0x26, 0x83, 0x57, 0x34, 0, 0xe9, 0x46, 0x1, 0x6a, 0x1, 0x1e, 0x68, 0x9f, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x36, 0xc4, 0x5e, 0x8, 0x26, 0x8b, 0x47, 0x32, 0x26, 0x8b, 0x57, 0x34, 0x5, 0x2, 0, 0x83, 0xd2, 0, 0x52, 0x50, 0x9a, 0x34, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0x6a, 0x1, 0x1e, 0x68, 0x9f, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x4, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x12, 0x26, 0xff, 0x77, 0x10, 0x9a, 0x66, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0xc4, 0x5e, 0x8, 0x26, 0x83, 0x47, 0x32, 0x3, 0x26, 0x83, 0x57, 0x34, 0, 0xe9, 0xee, 0, 0x6a, 0x1, 0x1e, 0x68, 0x9e, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x4, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x12, 0x26, 0xff, 0x77, 0x10, 0x9a, 0x34, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0x6a, 0x1, 0x1e, 0x68, 0x9f, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x36, 0xc4, 0x5e, 0x8, 0x26, 0x8b, 0x47, 0x32, 0x26, 0x8b, 0x57, 0x34, 0x5, 0x2, 0, 0x83, 0xd2, 0, 0x52, 0x50, 0x9a, 0x34, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0xa0, 0x9f, 0x48, 0x8, 0x6, 0x9e, 0x48, 0x6a, 0x1, 0x1e, 0x68, 0x9e, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x4, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x12, 0x26, 0xff, 0x77, 0x10, 0x9a, 0x66, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0xc4, 0x5e, 0x8, 0x26, 0x83, 0x47, 0x32, 0x3, 0x26, 0x83, 0x57, 0x34, 0, 0xe9, 0x6f, 0, 0xc4, 0x5e, 0x8, 0x26, 0x8b, 0x47, 0x28, 0xa3, 0x9c, 0x48, 0x6a, 0x2, 0x1e, 0x68, 0x9c, 0x48, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x4, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x12, 0x26, 0xff, 0x77, 0x10, 0x9a, 0x66, 0x15, 0x80, 0, 0x83, 0xc4, 0xc, 0xc4, 0x5e, 0x8, 0x26, 0x83, 0x47, 0x32, 0x2, 0x26, 0x83, 0x57, 0x34, 0, 0xe9, 0x35, 0, 0xb8, 0, 0, 0xe9, 0x35, 0, 0xe9, 0x2c, 0, 0xe9, 0x29, 0, 0x2d, 0x29, 0x4, 0x75, 0x3, 0xe9, 0x80, 0xfe, 0x2d, 0x60, 0, 0x75, 0x3, 0xe9, 0xaa, 0xff, 0x2d, 0x3d, 0, 0x75, 0x3, 0xe9, 0xcb, 0xfe, 0x48, 0x75, 0x3, 0xe9, 0x12, 0xfe, 0x2d, 0xb9, 0x7, 0x75, 0x3, 0xe9, 0x15, 0xff, 0xe9, 0xcb, 0xff, 0xb8, 0x1, 0, 0xe9, 0, 0, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x00157ecf, 0x4)   enterw(0, 0);                         /* enter 0x0, 0x0 */
    II(0x00157ed3, 0x1)   pushw(di);                            /* push di */
    II(0x00157ed4, 0x1)   pushw(si);                            /* push si */
    II(0x00157ed5, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00157ed8, 0x3)   jmpw(0x001580ab, 0x1d0);              /* jmp 0x1580ab */
l_0x00157edb:
    II(0x00157edb, 0x2)   pushw(0x2);                           /* push 0x2 */
    II(0x00157edd, 0x1)   pushw(ds);                            /* push ds */
    II(0x00157ede, 0x3)   pushw(0x489c);                        /* push word 0x489c */
    II(0x00157ee1, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157ee4, 0x4)   pushw(memw_a16(es, bx + 0x36));       /* push word [es:bx+0x36] */
    II(0x00157ee8, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157eeb, 0x4)   mov(ax, memw_a16(es, bx + 0x32));     /* mov ax, [es:bx+0x32] */
    II(0x00157eef, 0x4)   mov(dx, memw_a16(es, bx + 0x34));     /* mov dx, [es:bx+0x34] */
    II(0x00157ef3, 0x3)   add(ax, 0x2);                         /* add ax, 0x2 */
    II(0x00157ef6, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00157ef9, 0x1)   pushw(dx);                            /* push dx */
    II(0x00157efa, 0x1)   pushw(ax);                            /* push ax */
    II(0x00157efb, 0x5)   callw_far_abs(0x80, 0x1534);          /* call word 0x80:0x1534 */
    II(0x00157f00, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00157f03, 0x2)   pushw(0x2);                           /* push 0x2 */
    II(0x00157f05, 0x1)   pushw(ds);                            /* push ds */
    II(0x00157f06, 0x3)   pushw(0x489c);                        /* push word 0x489c */
    II(0x00157f09, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f0c, 0x4)   pushw(memw_a16(es, bx + 0x4));        /* push word [es:bx+0x4] */
    II(0x00157f10, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f13, 0x4)   pushw(memw_a16(es, bx + 0x12));       /* push word [es:bx+0x12] */
    II(0x00157f17, 0x4)   pushw(memw_a16(es, bx + 0x10));       /* push word [es:bx+0x10] */
    II(0x00157f1b, 0x5)   callw_far_abs(0x80, 0x1566);          /* call word 0x80:0x1566 */
    II(0x00157f20, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00157f23, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f26, 0x5)   add(memw_a16(es, bx + 0x32), 0x4);    /* add word [es:bx+0x32], 0x4 */
    II(0x00157f2b, 0x5)   adc(memw_a16(es, bx + 0x34), 0);      /* adc word [es:bx+0x34], 0x0 */
    II(0x00157f30, 0x3)   jmpw(0x001580d4, 0x1a1);              /* jmp 0x1580d4 */
l_0x00157f33:
    II(0x00157f33, 0x2)   pushw(0x2);                           /* push 0x2 */
    II(0x00157f35, 0x1)   pushw(ds);                            /* push ds */
    II(0x00157f36, 0x3)   pushw(0x489c);                        /* push word 0x489c */
    II(0x00157f39, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f3c, 0x4)   pushw(memw_a16(es, bx + 0x4));        /* push word [es:bx+0x4] */
    II(0x00157f40, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f43, 0x4)   pushw(memw_a16(es, bx + 0x12));       /* push word [es:bx+0x12] */
    II(0x00157f47, 0x4)   pushw(memw_a16(es, bx + 0x10));       /* push word [es:bx+0x10] */
    II(0x00157f4b, 0x5)   callw_far_abs(0x80, 0x1534);          /* call word 0x80:0x1534 */
    II(0x00157f50, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00157f53, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f56, 0x4)   mov(ax, memw_a16(es, bx + 0x28));     /* mov ax, [es:bx+0x28] */
    II(0x00157f5a, 0x4)   sub(memw_a16(ds, 0x489c), ax);        /* sub [0x489c], ax */
    II(0x00157f5e, 0x2)   pushw(0x2);                           /* push 0x2 */
    II(0x00157f60, 0x1)   pushw(ds);                            /* push ds */
    II(0x00157f61, 0x3)   pushw(0x489c);                        /* push word 0x489c */
    II(0x00157f64, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f67, 0x4)   pushw(memw_a16(es, bx + 0x4));        /* push word [es:bx+0x4] */
    II(0x00157f6b, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f6e, 0x4)   pushw(memw_a16(es, bx + 0x12));       /* push word [es:bx+0x12] */
    II(0x00157f72, 0x4)   pushw(memw_a16(es, bx + 0x10));       /* push word [es:bx+0x10] */
    II(0x00157f76, 0x5)   callw_far_abs(0x80, 0x1566);          /* call word 0x80:0x1566 */
    II(0x00157f7b, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00157f7e, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f81, 0x5)   add(memw_a16(es, bx + 0x32), 0x2);    /* add word [es:bx+0x32], 0x2 */
    II(0x00157f86, 0x5)   adc(memw_a16(es, bx + 0x34), 0);      /* adc word [es:bx+0x34], 0x0 */
    II(0x00157f8b, 0x3)   jmpw(0x001580d4, 0x146);              /* jmp 0x1580d4 */
l_0x00157f8e:
    II(0x00157f8e, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x00157f90, 0x1)   pushw(ds);                            /* push ds */
    II(0x00157f91, 0x3)   pushw(0x489f);                        /* push word 0x489f */
    II(0x00157f94, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f97, 0x4)   pushw(memw_a16(es, bx + 0x36));       /* push word [es:bx+0x36] */
    II(0x00157f9b, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157f9e, 0x4)   mov(ax, memw_a16(es, bx + 0x32));     /* mov ax, [es:bx+0x32] */
    II(0x00157fa2, 0x4)   mov(dx, memw_a16(es, bx + 0x34));     /* mov dx, [es:bx+0x34] */
    II(0x00157fa6, 0x3)   add(ax, 0x2);                         /* add ax, 0x2 */
    II(0x00157fa9, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00157fac, 0x1)   pushw(dx);                            /* push dx */
    II(0x00157fad, 0x1)   pushw(ax);                            /* push ax */
    II(0x00157fae, 0x5)   callw_far_abs(0x80, 0x1534);          /* call word 0x80:0x1534 */
    II(0x00157fb3, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00157fb6, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x00157fb8, 0x1)   pushw(ds);                            /* push ds */
    II(0x00157fb9, 0x3)   pushw(0x489f);                        /* push word 0x489f */
    II(0x00157fbc, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157fbf, 0x4)   pushw(memw_a16(es, bx + 0x4));        /* push word [es:bx+0x4] */
    II(0x00157fc3, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157fc6, 0x4)   pushw(memw_a16(es, bx + 0x12));       /* push word [es:bx+0x12] */
    II(0x00157fca, 0x4)   pushw(memw_a16(es, bx + 0x10));       /* push word [es:bx+0x10] */
    II(0x00157fce, 0x5)   callw_far_abs(0x80, 0x1566);          /* call word 0x80:0x1566 */
    II(0x00157fd3, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00157fd6, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157fd9, 0x5)   add(memw_a16(es, bx + 0x32), 0x3);    /* add word [es:bx+0x32], 0x3 */
    II(0x00157fde, 0x5)   adc(memw_a16(es, bx + 0x34), 0);      /* adc word [es:bx+0x34], 0x0 */
    II(0x00157fe3, 0x3)   jmpw(0x001580d4, 0xee);               /* jmp 0x1580d4 */
l_0x00157fe6:
    II(0x00157fe6, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x00157fe8, 0x1)   pushw(ds);                            /* push ds */
    II(0x00157fe9, 0x3)   pushw(0x489e);                        /* push word 0x489e */
    II(0x00157fec, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157fef, 0x4)   pushw(memw_a16(es, bx + 0x4));        /* push word [es:bx+0x4] */
    II(0x00157ff3, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00157ff6, 0x4)   pushw(memw_a16(es, bx + 0x12));       /* push word [es:bx+0x12] */
    II(0x00157ffa, 0x4)   pushw(memw_a16(es, bx + 0x10));       /* push word [es:bx+0x10] */
    II(0x00157ffe, 0x5)   callw_far_abs(0x80, 0x1534);          /* call word 0x80:0x1534 */
    II(0x00158003, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00158006, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x00158008, 0x1)   pushw(ds);                            /* push ds */
    II(0x00158009, 0x3)   pushw(0x489f);                        /* push word 0x489f */
    II(0x0015800c, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015800f, 0x4)   pushw(memw_a16(es, bx + 0x36));       /* push word [es:bx+0x36] */
    II(0x00158013, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158016, 0x4)   mov(ax, memw_a16(es, bx + 0x32));     /* mov ax, [es:bx+0x32] */
    II(0x0015801a, 0x4)   mov(dx, memw_a16(es, bx + 0x34));     /* mov dx, [es:bx+0x34] */
    II(0x0015801e, 0x3)   add(ax, 0x2);                         /* add ax, 0x2 */
    II(0x00158021, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00158024, 0x1)   pushw(dx);                            /* push dx */
    II(0x00158025, 0x1)   pushw(ax);                            /* push ax */
    II(0x00158026, 0x5)   callw_far_abs(0x80, 0x1534);          /* call word 0x80:0x1534 */
    II(0x0015802b, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0015802e, 0x3)   mov(al, memb_a16(ds, 0x489f));        /* mov al, [0x489f] */
    II(0x00158031, 0x4)   or_(memb_a16(ds, 0x489e), al);        /* or [0x489e], al */
    II(0x00158035, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x00158037, 0x1)   pushw(ds);                            /* push ds */
    II(0x00158038, 0x3)   pushw(0x489e);                        /* push word 0x489e */
    II(0x0015803b, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015803e, 0x4)   pushw(memw_a16(es, bx + 0x4));        /* push word [es:bx+0x4] */
    II(0x00158042, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158045, 0x4)   pushw(memw_a16(es, bx + 0x12));       /* push word [es:bx+0x12] */
    II(0x00158049, 0x4)   pushw(memw_a16(es, bx + 0x10));       /* push word [es:bx+0x10] */
    II(0x0015804d, 0x5)   callw_far_abs(0x80, 0x1566);          /* call word 0x80:0x1566 */
    II(0x00158052, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00158055, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158058, 0x5)   add(memw_a16(es, bx + 0x32), 0x3);    /* add word [es:bx+0x32], 0x3 */
    II(0x0015805d, 0x5)   adc(memw_a16(es, bx + 0x34), 0);      /* adc word [es:bx+0x34], 0x0 */
    II(0x00158062, 0x3)   jmpw(0x001580d4, 0x6f);               /* jmp 0x1580d4 */
l_0x00158065:
    II(0x00158065, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158068, 0x4)   mov(ax, memw_a16(es, bx + 0x28));     /* mov ax, [es:bx+0x28] */
    II(0x0015806c, 0x3)   mov(memw_a16(ds, 0x489c), ax);        /* mov [0x489c], ax */
    II(0x0015806f, 0x2)   pushw(0x2);                           /* push 0x2 */
    II(0x00158071, 0x1)   pushw(ds);                            /* push ds */
    II(0x00158072, 0x3)   pushw(0x489c);                        /* push word 0x489c */
    II(0x00158075, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158078, 0x4)   pushw(memw_a16(es, bx + 0x4));        /* push word [es:bx+0x4] */
    II(0x0015807c, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015807f, 0x4)   pushw(memw_a16(es, bx + 0x12));       /* push word [es:bx+0x12] */
    II(0x00158083, 0x4)   pushw(memw_a16(es, bx + 0x10));       /* push word [es:bx+0x10] */
    II(0x00158087, 0x5)   callw_far_abs(0x80, 0x1566);          /* call word 0x80:0x1566 */
    II(0x0015808c, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0015808f, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158092, 0x5)   add(memw_a16(es, bx + 0x32), 0x2);    /* add word [es:bx+0x32], 0x2 */
    II(0x00158097, 0x5)   adc(memw_a16(es, bx + 0x34), 0);      /* adc word [es:bx+0x34], 0x0 */
    II(0x0015809c, 0x3)   jmpw(0x001580d4, 0x35);               /* jmp 0x1580d4 */
l_0x0015809f:
    II(0x0015809f, 0x3)   mov(ax, 0);                           /* mov ax, 0x0 */
    II(0x001580a2, 0x3)   jmpw(0x001580da, 0x35);               /* jmp 0x1580da */
//    II(0x001580a5, 0x6)   /* Недостижимый код. */
l_0x001580ab:
    II(0x001580ab, 0x3)   sub(ax, 0x429);                       /* sub ax, 0x429 */
    II(0x001580ae, 0x2)   jnzw(0x001580b3, 0x3);                /* jnz 0x1580b3 */
    II(0x001580b0, 0x3)   jmpw(0x00157f33, -0x180);             /* jmp 0x157f33 */
l_0x001580b3:
    II(0x001580b3, 0x3)   sub(ax, 0x60);                        /* sub ax, 0x60 */
    II(0x001580b6, 0x2)   jnzw(0x001580bb, 0x3);                /* jnz 0x1580bb */
    II(0x001580b8, 0x3)   jmpw(0x00158065, -0x56);              /* jmp 0x158065 */
l_0x001580bb:
    II(0x001580bb, 0x3)   sub(ax, 0x3d);                        /* sub ax, 0x3d */
    II(0x001580be, 0x2)   jnzw(0x001580c3, 0x3);                /* jnz 0x1580c3 */
    II(0x001580c0, 0x3)   jmpw(0x00157f8e, -0x135);             /* jmp 0x157f8e */
l_0x001580c3:
    II(0x001580c3, 0x1)   dec(ax);                              /* dec ax */
    II(0x001580c4, 0x2)   jnzw(0x001580c9, 0x3);                /* jnz 0x1580c9 */
    II(0x001580c6, 0x3)   jmpw(0x00157edb, -0x1ee);             /* jmp 0x157edb */
l_0x001580c9:
    II(0x001580c9, 0x3)   sub(ax, 0x7b9);                       /* sub ax, 0x7b9 */
    II(0x001580cc, 0x2)   jnzw(0x001580d1, 0x3);                /* jnz 0x1580d1 */
    II(0x001580ce, 0x3)   jmpw(0x00157fe6, -0xeb);              /* jmp 0x157fe6 */
l_0x001580d1:
    II(0x001580d1, 0x3)   jmpw(0x0015809f, -0x35);              /* jmp 0x15809f */
l_0x001580d4:
    II(0x001580d4, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x001580d7, 0x3)   jmpw(0x001580da, 0);                  /* jmp 0x1580da */
l_0x001580da:
    II(0x001580da, 0x1)   popw(si);                             /* pop si */
    II(0x001580db, 0x1)   popw(di);                             /* pop di */
    II(0x001580dc, 0x1)   leavew();                             /* leave  */
    II(0x001580dd, 0x1)   retfw();                              /* retf  */
FUNC_END

