FUNC_BEGIN(0x00156bfe, 0x38556131564fd206, 0x10, ({0x8b, 0x46, 0x86, 0x89, 0x46, 0x90, 0x8a, 0x66, 0xfc, 0x2a, 0xc0, 0x89, 0x46, 0xcc, 0xc7, 0x46, 0xce, 0, 0, 0xff, 0x76, 0x94, 0xff, 0x76, 0x92, 0xff, 0x76, 0x82, 0x90, 0xe, 0xe8, 0x7d, 0xc, 0x83, 0xc4, 0x6, 0x89, 0x46, 0x8c, 0x89, 0x46, 0xa8, 0x2b, 0xc0, 0x89, 0x46, 0xc6, 0x89, 0x46, 0xc4, 0xa1, 0x98, 0x48, 0x2b, 0xd2, 0x3b, 0x56, 0x88, 0x76, 0x3, 0xe9, 0x34, 0, 0x73, 0x3, 0xe9, 0x8, 0, 0x3b, 0x46, 0x86, 0x72, 0x3, 0xe9, 0x27, 0, 0x83, 0x7e, 0x90, 0, 0x74, 0x3, 0xe9, 0x5, 0, 0x81, 0x6e, 0x90, 0, 0x2, 0xb8, 0x6, 0, 0x8b, 0x5e, 0x8c, 0xcd, 0x31, 0x3, 0x56, 0x86, 0x13, 0x4e, 0x88, 0x83, 0xf9, 0x10, 0x72, 0x6, 0xa1, 0x98, 0x48, 0x89, 0x46, 0x90, 0x8b, 0x46, 0x90, 0x89, 0x46, 0xc8, 0xc7, 0x46, 0xca, 0, 0, 0x8d, 0x46, 0xa4, 0x16, 0x50, 0xff, 0x76, 0x6, 0xe8, 0x3a, 0xf5}))
    II(0x00156bfe, 0x3)   mov(ax, memw_a16(ss, bp - 0x7a));     /* mov ax, [bp-0x7a] */
    II(0x00156c01, 0x3)   mov(memw_a16(ss, bp - 0x70), ax);     /* mov [bp-0x70], ax */
    II(0x00156c04, 0x3)   mov(ah, memb_a16(ss, bp - 0x4));      /* mov ah, [bp-0x4] */
    II(0x00156c07, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00156c09, 0x3)   mov(memw_a16(ss, bp - 0x34), ax);     /* mov [bp-0x34], ax */
    II(0x00156c0c, 0x5)   mov(memw_a16(ss, bp - 0x32), 0);      /* mov word [bp-0x32], 0x0 */
    II(0x00156c11, 0x3)   pushw(memw_a16(ss, bp - 0x6c));       /* push word [bp-0x6c] */
    II(0x00156c14, 0x3)   pushw(memw_a16(ss, bp - 0x6e));       /* push word [bp-0x6e] */
    II(0x00156c17, 0x3)   pushw(memw_a16(ss, bp - 0x7e));       /* push word [bp-0x7e] */
//    II(0x00156c1a, 0x1)   nop();                                /* nop  */
    II(0x00156c1b, 0x1)   pushw(cs);                            /* push cs */
    II(0x00156c1c, 0x3)   callw(0x0015789c, 0xc7d);             /* call 0x15789c */
    II(0x00156c1f, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00156c22, 0x3)   mov(memw_a16(ss, bp - 0x74), ax);     /* mov [bp-0x74], ax */
    II(0x00156c25, 0x3)   mov(memw_a16(ss, bp - 0x58), ax);     /* mov [bp-0x58], ax */
    II(0x00156c28, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x00156c2a, 0x3)   mov(memw_a16(ss, bp - 0x3a), ax);     /* mov [bp-0x3a], ax */
    II(0x00156c2d, 0x3)   mov(memw_a16(ss, bp - 0x3c), ax);     /* mov [bp-0x3c], ax */
    II(0x00156c30, 0x3)   mov(ax, memw_a16(ds, 0x4898));        /* mov ax, [0x4898] */
    II(0x00156c33, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00156c35, 0x3)   cmp(dx, memw_a16(ss, bp - 0x78));     /* cmp dx, [bp-0x78] */
    II(0x00156c38, 0x2)   jbew(0x00156c3d, 0x3);                /* jbe 0x156c3d */
    II(0x00156c3a, 0x3)   jmpw(0x00156c71, 0x34);               /* jmp 0x156c71 */
l_0x00156c3d:
    II(0x00156c3d, 0x2)   jaew(0x00156c42, 0x3);                /* jae 0x156c42 */
    II(0x00156c3f, 0x3)   jmpw(0x00156c4a, 0x8);                /* jmp 0x156c4a */
l_0x00156c42:
    II(0x00156c42, 0x3)   cmp(ax, memw_a16(ss, bp - 0x7a));     /* cmp ax, [bp-0x7a] */
    II(0x00156c45, 0x2)   jbw(0x00156c4a, 0x3);                 /* jb 0x156c4a */
    II(0x00156c47, 0x3)   jmpw(0x00156c71, 0x27);               /* jmp 0x156c71 */
l_0x00156c4a:
    II(0x00156c4a, 0x4)   cmp(memw_a16(ss, bp - 0x70), 0);      /* cmp word [bp-0x70], 0x0 */
    II(0x00156c4e, 0x2)   jzw(0x00156c53, 0x3);                 /* jz 0x156c53 */
    II(0x00156c50, 0x3)   jmpw(0x00156c58, 0x5);                /* jmp 0x156c58 */
l_0x00156c53:
    II(0x00156c53, 0x5)   sub(memw_a16(ss, bp - 0x70), 0x200);  /* sub word [bp-0x70], 0x200 */
l_0x00156c58:
    II(0x00156c58, 0x3)   mov(ax, 0x6);                         /* mov ax, 0x6 */
    II(0x00156c5b, 0x3)   mov(bx, memw_a16(ss, bp - 0x74));     /* mov bx, [bp-0x74] */
    II(0x00156c5e, 0x2)   int_(0x31);                           /* int 0x31 */
    II(0x00156c60, 0x3)   add(dx, memw_a16(ss, bp - 0x7a));     /* add dx, [bp-0x7a] */
    II(0x00156c63, 0x3)   adc(cx, memw_a16(ss, bp - 0x78));     /* adc cx, [bp-0x78] */
    II(0x00156c66, 0x3)   cmp(cx, 0x10);                        /* cmp cx, 0x10 */
    II(0x00156c69, 0x2)   jbw(0x00156c71, 0x6);                 /* jb 0x156c71 */
    II(0x00156c6b, 0x3)   mov(ax, memw_a16(ds, 0x4898));        /* mov ax, [0x4898] */
    II(0x00156c6e, 0x3)   mov(memw_a16(ss, bp - 0x70), ax);     /* mov [bp-0x70], ax */
l_0x00156c71:
    II(0x00156c71, 0x3)   mov(ax, memw_a16(ss, bp - 0x70));     /* mov ax, [bp-0x70] */
    II(0x00156c74, 0x3)   mov(memw_a16(ss, bp - 0x38), ax);     /* mov [bp-0x38], ax */
    II(0x00156c77, 0x5)   mov(memw_a16(ss, bp - 0x36), 0);      /* mov word [bp-0x36], 0x0 */
    II(0x00156c7c, 0x3)   lea(ax, bp - 0x5c);                   /* lea ax, [bp-0x5c] */
    II(0x00156c7f, 0x1)   pushw(ss);                            /* push ss */
    II(0x00156c80, 0x1)   pushw(ax);                            /* push ax */
    II(0x00156c81, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x00156c84, 0x3)   callw(0x001561c1, -0xac6);            /* call 0x1561c1 */
    II(0x00156c87, 0)     jmpd_func(0x00156c87, 0);             /* Принудительное завершение функции. */
FUNC_END

