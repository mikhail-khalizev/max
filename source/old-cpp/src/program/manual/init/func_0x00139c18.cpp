FUNC_BEGIN(0x00139c18, 0x97d9f82e29e70420, 0x10, ({0xc8, 0xc, 0, 0, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc4, 0x5e, 0x6, 0x26, 0x83, 0x7f, 0x8, 0, 0x74, 0x14, 0x26, 0xc7, 0x47, 0x20, 0x23, 0x80, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x1f, 0xc9, 0xcb, 0x26, 0x8b, 0x47, 0x4, 0x89, 0x46, 0xf4, 0x26, 0x8b, 0x57, 0x14, 0x2b, 0xc0, 0x26, 0x8b, 0x4f, 0x1c, 0x3, 0xc1, 0x83, 0xd2, 0, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xf7, 0xc1, 0xff, 0xf, 0x74, 0xc, 0x5, 0x1, 0, 0x83, 0xd2, 0, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x8d, 0x46, 0xfc, 0x16, 0x50, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xff, 0x76, 0xf4, 0xe, 0xe8, 0x5a, 0x22, 0x83, 0xc4, 0xa, 0x89, 0x46, 0xfa, 0xb, 0xc0, 0x74, 0x18, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x20, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x1f, 0xc9, 0xcb, 0x1f, 0xc9, 0xcb, 0x8b, 0x46, 0xfe, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x14, 0x26, 0xc7, 0x47, 0x16, 0, 0, 0x8b, 0x46, 0xfc, 0x26, 0x89, 0x47, 0x1c, 0x26, 0xc7, 0x47, 0x1e, 0, 0, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x1f, 0xc9, 0xcb}))
    II(0x00139c18, 0x4)   enterw(0xc, 0);                       /* enter 0xc, 0x0 */
    II(0x00139c1c, 0x1)   pushw(ds);                            /* push ds */
    II(0x00139c1d, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00139c20, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00139c22, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139c25, 0x5)   cmp(memw_a16(es, bx + 0x8), 0);       /* cmp word [es:bx+0x8], 0x0 */
    II(0x00139c2a, 0x2)   jzw(0x00139c40, 0x14);                /* jz 0x139c40 */
    II(0x00139c2c, 0x6)   mov(memw_a16(es, bx + 0x20), 0x8023); /* mov word [es:bx+0x20], 0x8023 */
    II(0x00139c32, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x00139c38, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x00139c3d, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139c3e, 0x1)   leavew();                             /* leave  */
    II(0x00139c3f, 0x1)   retfw();                              /* retf  */
l_0x00139c40:
    II(0x00139c40, 0x4)   mov(ax, memw_a16(es, bx + 0x4));      /* mov ax, [es:bx+0x4] */
    II(0x00139c44, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x00139c47, 0x4)   mov(dx, memw_a16(es, bx + 0x14));     /* mov dx, [es:bx+0x14] */
    II(0x00139c4b, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x00139c4d, 0x4)   mov(cx, memw_a16(es, bx + 0x1c));     /* mov cx, [es:bx+0x1c] */
    II(0x00139c51, 0x2)   add(ax, cx);                          /* add ax, cx */
    II(0x00139c53, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00139c56, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00139c58, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00139c5a, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00139c5c, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00139c5e, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139c60, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139c62, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139c64, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139c66, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139c68, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139c6a, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139c6c, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139c6e, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x00139c71, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x00139c74, 0x4)   test(cx, 0xfff);                      /* test cx, 0xfff */
    II(0x00139c78, 0x2)   jzw(0x00139c86, 0xc);                 /* jz 0x139c86 */
    II(0x00139c7a, 0x3)   add(ax, 0x1);                         /* add ax, 0x1 */
    II(0x00139c7d, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00139c80, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x00139c83, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
l_0x00139c86:
    II(0x00139c86, 0x3)   lea(ax, bp - 0x4);                    /* lea ax, [bp-0x4] */
    II(0x00139c89, 0x1)   pushw(ss);                            /* push ss */
    II(0x00139c8a, 0x1)   pushw(ax);                            /* push ax */
    II(0x00139c8b, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x00139c8e, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x00139c91, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x00139c94, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139c95, 0x3)   callw(0x0013bef2, 0x225a);            /* call 0x13bef2 */
    II(0x00139c98, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x00139c9b, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x00139c9e, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00139ca0, 0x2)   jzw(0x00139cba, 0x18);                /* jz 0x139cba */
    II(0x00139ca2, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139ca5, 0x4)   mov(memw_a16(es, bx + 0x20), ax);     /* mov [es:bx+0x20], ax */
    II(0x00139ca9, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x00139caf, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x00139cb4, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139cb5, 0x1)   leavew();                             /* leave  */
    II(0x00139cb6, 0x1)   retfw();                              /* retf  */
//    II(0x00139cb7, 0x3)   /* Недостижимый код. */
l_0x00139cba:
    II(0x00139cba, 0x3)   mov(ax, memw_a16(ss, bp - 0x2));      /* mov ax, [bp-0x2] */
    II(0x00139cbd, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139cc0, 0x4)   mov(memw_a16(es, bx + 0x14), ax);     /* mov [es:bx+0x14], ax */
    II(0x00139cc4, 0x6)   mov(memw_a16(es, bx + 0x16), 0);      /* mov word [es:bx+0x16], 0x0 */
    II(0x00139cca, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x00139ccd, 0x4)   mov(memw_a16(es, bx + 0x1c), ax);     /* mov [es:bx+0x1c], ax */
    II(0x00139cd1, 0x6)   mov(memw_a16(es, bx + 0x1e), 0);      /* mov word [es:bx+0x1e], 0x0 */
    II(0x00139cd7, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x00139cdc, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139cdd, 0x1)   leavew();                             /* leave  */
    II(0x00139cde, 0x1)   retfw();                              /* retf  */
FUNC_END

