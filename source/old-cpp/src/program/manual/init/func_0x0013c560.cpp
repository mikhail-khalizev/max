FUNC_BEGIN(0x0013c560, 0x7a012bb37fea4685, 0x10, ({0xc8, 0x10, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0x2b, 0xc0, 0x89, 0x46, 0xf6, 0x89, 0x46, 0xf4, 0xeb, 0x10, 0x83, 0x46, 0xf4, 0x1, 0x83, 0x56, 0xf6, 0, 0x83, 0x46, 0x6, 0x1, 0x83, 0x56, 0x8, 0, 0x8b, 0x46, 0xa, 0x8b, 0x56, 0xc, 0x39, 0x56, 0xf6, 0x76, 0x3, 0xe9, 0x14, 0x1, 0x72, 0x8, 0x39, 0x46, 0xf4, 0x72, 0x3, 0xe9, 0xa, 0x1, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0x59, 0xcc, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xf0, 0x89, 0x56, 0xf2, 0xf6, 0x46, 0xf0, 0x1, 0x74, 0x22, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x52, 0x50, 0x90, 0xe, 0xe8, 0x5d, 0xb9, 0x83, 0xc4, 0x4, 0x80, 0x66, 0xf0, 0xfe, 0x8b, 0x46, 0xf0, 0x80, 0xe4, 0xf, 0x89, 0x46, 0xf0, 0xc7, 0x46, 0xf2, 0, 0, 0x80, 0x66, 0xf1, 0xf1, 0x6a, 0, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0xda, 0xcb, 0x83, 0xc4, 0xa, 0x6a, 0, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0xc4, 0xcb, 0x83, 0xc4, 0xa, 0xa1, 0x1a, 0, 0xb, 0x6, 0x18, 0, 0x75, 0xf, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xeb, 0x3c, 0x90, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x5, 0, 0, 0x83, 0xd2, 0x1, 0x52, 0x50, 0x8b, 0xf0, 0x8b, 0xfa, 0xe8, 0xb7, 0xc8, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x3d, 0xff, 0xff, 0x75, 0x18, 0x81, 0xfa, 0xff, 0xf, 0x75, 0x12, 0x81, 0xcf, 0, 0x80, 0x57, 0x56, 0xe8, 0x9a, 0xc8, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x83, 0x7e, 0xf8, 0xff, 0x75, 0x6, 0x83, 0x7e, 0xfa, 0xff, 0x74, 0x24, 0xc7, 0x46, 0xfc, 0, 0, 0xc7, 0x46, 0xfe, 0, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xff, 0x36, 0xb6, 0x4f, 0xff, 0x36, 0xb4, 0x4f, 0xe8, 0x93, 0xcb, 0x83, 0xc4, 0xc, 0xe9, 0xce, 0xfe, 0xf, 0x20, 0xd8, 0xf, 0x22, 0xd8, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0013c560, 0x4)   enterw(0x10, 0);                      /* enter 0x10, 0x0 */
    II(0x0013c564, 0x1)   pushw(di);                            /* push di */
    II(0x0013c565, 0x1)   pushw(si);                            /* push si */
    II(0x0013c566, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013c567, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013c56a, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013c56c, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013c56e, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0013c571, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0013c574, 0x2)   jmpw(0x0013c586, 0x10);               /* jmp 0x13c586 */
l_0x0013c576:
    II(0x0013c576, 0x4)   add(memw_a16(ss, bp - 0xc), 0x1);     /* add word [bp-0xc], 0x1 */
    II(0x0013c57a, 0x4)   adc(memw_a16(ss, bp - 0xa), 0);       /* adc word [bp-0xa], 0x0 */
    II(0x0013c57e, 0x4)   add(memw_a16(ss, bp + 0x6), 0x1);     /* add word [bp+0x6], 0x1 */
    II(0x0013c582, 0x4)   adc(memw_a16(ss, bp + 0x8), 0);       /* adc word [bp+0x8], 0x0 */
l_0x0013c586:
    II(0x0013c586, 0x3)   mov(ax, memw_a16(ss, bp + 0xa));      /* mov ax, [bp+0xa] */
    II(0x0013c589, 0x3)   mov(dx, memw_a16(ss, bp + 0xc));      /* mov dx, [bp+0xc] */
    II(0x0013c58c, 0x3)   cmp(memw_a16(ss, bp - 0xa), dx);      /* cmp [bp-0xa], dx */
    II(0x0013c58f, 0x2)   jbew(0x0013c594, 0x3);                /* jbe 0x13c594 */
    II(0x0013c591, 0x3)   jmpw(0x0013c6a8, 0x114);              /* jmp 0x13c6a8 */
l_0x0013c594:
    II(0x0013c594, 0x2)   jbw(0x0013c59e, 0x8);                 /* jb 0x13c59e */
    II(0x0013c596, 0x3)   cmp(memw_a16(ss, bp - 0xc), ax);      /* cmp [bp-0xc], ax */
    II(0x0013c599, 0x2)   jbw(0x0013c59e, 0x3);                 /* jb 0x13c59e */
    II(0x0013c59b, 0x3)   jmpw(0x0013c6a8, 0x10a);              /* jmp 0x13c6a8 */
l_0x0013c59e:
    II(0x0013c59e, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0013c5a1, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0013c5a4, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x0013c5a8, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x0013c5ac, 0x3)   callw(0x00139208, -0x33a7);           /* call 0x139208 */
    II(0x0013c5af, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013c5b2, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x0013c5b5, 0x3)   mov(memw_a16(ss, bp - 0xe), dx);      /* mov [bp-0xe], dx */
    II(0x0013c5b8, 0x4)   test(memb_a16(ss, bp - 0x10), 0x1);   /* test byte [bp-0x10], 0x1 */
    II(0x0013c5bc, 0x2)   jzw(0x0013c5e0, 0x22);                /* jz 0x13c5e0 */
    II(0x0013c5be, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013c5c0, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013c5c2, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013c5c4, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013c5c6, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c5c8, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c5ca, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c5cc, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c5ce, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c5d0, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c5d2, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c5d4, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c5d6, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c5d7, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013c5d8, 0x1)   nop();                                /* nop  */
    II(0x0013c5d9, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013c5da, 0x3)   callw(0x00137f3a, -0x46a3);           /* call 0x137f3a */
    II(0x0013c5dd, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
l_0x0013c5e0:
    II(0x0013c5e0, 0x4)   and_(memb_a16(ss, bp - 0x10), -0x2 /* 0xfe */); /* and byte [bp-0x10], 0xfe */
    II(0x0013c5e4, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x0013c5e7, 0x3)   and_(ah, 0xf);                        /* and ah, 0xf */
    II(0x0013c5ea, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x0013c5ed, 0x5)   mov(memw_a16(ss, bp - 0xe), 0);       /* mov word [bp-0xe], 0x0 */
    II(0x0013c5f2, 0x4)   and_(memb_a16(ss, bp - 0xf), -0xf /* 0xf1 */); /* and byte [bp-0xf], 0xf1 */
    II(0x0013c5f6, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013c5f8, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0013c5fb, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0013c5fe, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013c602, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x0013c606, 0x3)   callw(0x001391e3, -0x3426);           /* call 0x1391e3 */
    II(0x0013c609, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013c60c, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013c60e, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0013c611, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0013c614, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013c618, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013c61c, 0x3)   callw(0x001391e3, -0x343c);           /* call 0x1391e3 */
    II(0x0013c61f, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013c622, 0x3)   mov(ax, memw_a16(ds, 0x1a));          /* mov ax, [0x1a] */
    II(0x0013c625, 0x4)   or_(ax, memw_a16(ds, 0x18));          /* or ax, [0x18] */
    II(0x0013c629, 0x2)   jnzw(0x0013c63a, 0xf);                /* jnz 0x13c63a */
    II(0x0013c62b, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x0013c62e, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x0013c631, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0013c634, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0013c637, 0x2)   jmpw(0x0013c675, 0x3c);               /* jmp 0x13c675 */
//    II(0x0013c639, 0x1)   /* Недостижимый код. */
l_0x0013c63a:
    II(0x0013c63a, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x0013c63d, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x0013c640, 0x3)   add(ax, 0);                           /* add ax, 0x0 */
    II(0x0013c643, 0x3)   adc(dx, 0x1);                         /* adc dx, 0x1 */
    II(0x0013c646, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c647, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c648, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0013c64a, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x0013c64c, 0x3)   callw(0x00138f06, -0x3749);           /* call 0x138f06 */
    II(0x0013c64f, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013c652, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0013c655, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0013c658, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x0013c65b, 0x2)   jnzw(0x0013c675, 0x18);               /* jnz 0x13c675 */
    II(0x0013c65d, 0x4)   cmp(dx, 0xfff);                       /* cmp dx, 0xfff */
    II(0x0013c661, 0x2)   jnzw(0x0013c675, 0x12);               /* jnz 0x13c675 */
    II(0x0013c663, 0x4)   or_(di, 0x8000);                      /* or di, 0x8000 */
    II(0x0013c667, 0x1)   pushw(di);                            /* push di */
    II(0x0013c668, 0x1)   pushw(si);                            /* push si */
    II(0x0013c669, 0x3)   callw(0x00138f06, -0x3766);           /* call 0x138f06 */
    II(0x0013c66c, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013c66f, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0013c672, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
l_0x0013c675:
    II(0x0013c675, 0x4)   cmp(memw_a16(ss, bp - 0x8), -0x1 /* 0xff */); /* cmp word [bp-0x8], 0xff */
    II(0x0013c679, 0x2)   jnzw(0x0013c681, 0x6);                /* jnz 0x13c681 */
    II(0x0013c67b, 0x4)   cmp(memw_a16(ss, bp - 0x6), -0x1 /* 0xff */); /* cmp word [bp-0x6], 0xff */
    II(0x0013c67f, 0x2)   jzw(0x0013c6a5, 0x24);                /* jz 0x13c6a5 */
l_0x0013c681:
    II(0x0013c681, 0x5)   mov(memw_a16(ss, bp - 0x4), 0);       /* mov word [bp-0x4], 0x0 */
    II(0x0013c686, 0x5)   mov(memw_a16(ss, bp - 0x2), 0);       /* mov word [bp-0x2], 0x0 */
    II(0x0013c68b, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0013c68e, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0013c691, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0013c694, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0013c697, 0x4)   pushw(memw_a16(ds, 0x4fb6));          /* push word [0x4fb6] */
    II(0x0013c69b, 0x4)   pushw(memw_a16(ds, 0x4fb4));          /* push word [0x4fb4] */
    II(0x0013c69f, 0x3)   callw(0x00139235, -0x346d);           /* call 0x139235 */
    II(0x0013c6a2, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
l_0x0013c6a5:
    II(0x0013c6a5, 0x3)   jmpw(0x0013c576, -0x132);             /* jmp 0x13c576 */
l_0x0013c6a8:
    II(0x0013c6a8, 0x3)   mov(eax, cr3);                        /* mov eax, cr3 */
//    II(0x0013c6ab, 0x3)   mov(cr3, eax);                        /* mov cr3, eax */
    II(0x0013c6ae, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013c6af, 0x1)   popw(si);                             /* pop si */
    II(0x0013c6b0, 0x1)   popw(di);                             /* pop di */
    II(0x0013c6b1, 0x1)   leavew();                             /* leave  */
    II(0x0013c6b2, 0x1)   retfw();                              /* retf  */
FUNC_END

