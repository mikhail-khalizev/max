FUNC_BEGIN(0x0000ae9b, 0xbe8e28f7675c1577, 0x10, ({0x59, 0x3, 0xc1, 0xc1, 0xe8, 0x4, 0x8c, 0xc2, 0x3, 0xc2, 0xa, 0xc0, 0xf, 0x84, 0x5, 0, 0x6a, 0x18, 0xe8, 0xed, 0xa9, 0xa3, 0xaa, 0, 0xa3, 0xf4, 0xd, 0x8e, 0xc0, 0x33, 0xff, 0x59, 0xd1, 0xe9, 0x33, 0xc0, 0xf3, 0xab}))
    II(0x0000ae9b, 0x1)   popw(cx);                             /* pop cx */
    II(0x0000ae9c, 0x2)   add(ax, cx);                          /* add ax, cx */
    II(0x0000ae9e, 0x3)   shr(ax, 0x4);                         /* shr ax, 0x4 */
    II(0x0000aea1, 0x2)   mov(dx, es);                          /* mov dx, es */
    II(0x0000aea3, 0x2)   add(ax, dx);                          /* add ax, dx */
    II(0x0000aea5, 0x2)   or_(al, al);                          /* or al, al */
    II(0x0000aea7, 0x4)   jzw(0x0000aeb0, 0x5);                 /* jz word 0xaeb0 */
    II(0x0000aeab, 0x2)   pushw(0x18);                          /* push 0x18 */
    II(0x0000aead, 0x3)   callw(0x0000589d, -0x5613);           /* call 0x589d */
l_0x0000aeb0:
    II(0x0000aeb0, 0x3)   mov(memw_a16(ds, 0xaa), ax);          /* mov [0xaa], ax */
    II(0x0000aeb3, 0x3)   mov(memw_a16(ds, 0xdf4), ax);         /* mov [0xdf4], ax */
    II(0x0000aeb6, 0x2)   mov(es, ax);                          /* mov es, ax */
    II(0x0000aeb8, 0x2)   xor_(di, di);                         /* xor di, di */
    II(0x0000aeba, 0x1)   popw(cx);                             /* pop cx */
    II(0x0000aebb, 0x2)   shr(cx, 0x1);                         /* shr cx, 1 */
    II(0x0000aebd, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
    II(0x0000aebf, 0x2)   rep_a16 stosw_a16();                  /* rep stosw  */
    II(0x0000aec1, 0)     jmpd_func(0x0000aec1, 0);             /* Принудительное завершение функции. */
FUNC_END

