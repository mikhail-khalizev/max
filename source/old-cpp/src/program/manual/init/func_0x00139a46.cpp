FUNC_BEGIN(0x00139a46, 0xc73fdcd466f035e5, 0x10, ({0xc8, 0x14, 0, 0, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x14, 0x26, 0x8b, 0x4f, 0x1c, 0x89, 0x4e, 0xec, 0x89, 0x46, 0xee, 0x83, 0x3e, 0x84, 0x9, 0, 0x74, 0x25, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0xc6, 0x7, 0x1, 0xa0, 0x30, 0x51, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0x88, 0x47, 0x1, 0x8b, 0x46, 0xec, 0x8b, 0x56, 0xee, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0x89, 0x47, 0x2, 0x26, 0x89, 0x57, 0x4, 0x8b, 0x46, 0xec, 0x8b, 0x56, 0xee, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xf7, 0x46, 0xec, 0xff, 0xf, 0x74, 0xc, 0x5, 0x1, 0, 0x83, 0xd2, 0, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x8d, 0x46, 0xf2, 0x16, 0x50, 0x8b, 0x46, 0xf8, 0x8b, 0x56, 0xfa, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x52, 0x50, 0xe, 0xe8, 0xdc, 0x21, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xf0, 0xb, 0xc0, 0x74, 0x18, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x20, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x1f, 0x5e, 0xc9, 0xcb, 0xeb, 0x3f, 0x8b, 0x46, 0xf4, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x14, 0x26, 0xc7, 0x47, 0x16, 0, 0, 0x8b, 0x46, 0xf2, 0x26, 0x89, 0x47, 0x1c, 0x26, 0xc7, 0x47, 0x1e, 0, 0, 0x8b, 0x46, 0xf6, 0xc1, 0xe8, 0x10, 0x26, 0x89, 0x47, 0x8, 0x26, 0xc7, 0x47, 0xa, 0, 0, 0x8b, 0x46, 0xf6, 0x26, 0x89, 0x47, 0x4, 0x26, 0xc7, 0x47, 0x6, 0, 0, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x1e, 0x68, 0x32, 0x13, 0x90, 0xe, 0xe8, 0xfd, 0x74, 0x83, 0xc4, 0xc, 0x83, 0x3e, 0x84, 0x9, 0, 0x74, 0x4b, 0x8b, 0x46, 0xf2, 0x8b, 0x56, 0xf4, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0x89, 0x47, 0x6, 0x26, 0x89, 0x57, 0x8, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x24, 0x26, 0x8b, 0x57, 0x26, 0xc4, 0x36, 0xc4, 0x4f, 0x26, 0x89, 0x44, 0xa, 0x26, 0x89, 0x54, 0xc, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x28, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0x89, 0x47, 0xe, 0xff, 0x36, 0x67, 0x51, 0xff, 0x36, 0xc6, 0x4f, 0xff, 0x36, 0xc4, 0x4f, 0x6a, 0x10, 0x90, 0xe, 0xe8, 0xbd, 0x6c, 0x1f, 0x5e, 0xc9, 0xcb}))
    II(0x00139a46, 0x4)   enterw(0x14, 0);                      /* enter 0x14, 0x0 */
    II(0x00139a4a, 0x1)   pushw(si);                            /* push si */
    II(0x00139a4b, 0x1)   pushw(ds);                            /* push ds */
    II(0x00139a4c, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00139a4f, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00139a51, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139a54, 0x4)   mov(ax, memw_a16(es, bx + 0x14));     /* mov ax, [es:bx+0x14] */
    II(0x00139a58, 0x4)   mov(cx, memw_a16(es, bx + 0x1c));     /* mov cx, [es:bx+0x1c] */
    II(0x00139a5c, 0x3)   mov(memw_a16(ss, bp - 0x14), cx);     /* mov [bp-0x14], cx */
    II(0x00139a5f, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x00139a62, 0x5)   cmp(memw_a16(ds, 0x984), 0);          /* cmp word [0x984], 0x0 */
    II(0x00139a67, 0x2)   jzw(0x00139a8e, 0x25);                /* jz 0x139a8e */
    II(0x00139a69, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x00139a6d, 0x4)   mov(memb_a16(es, bx), 0x1);           /* mov byte [es:bx], 0x1 */
    II(0x00139a71, 0x3)   mov(al, memb_a16(ds, 0x5130));        /* mov al, [0x5130] */
    II(0x00139a74, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x00139a78, 0x4)   mov(memb_a16(es, bx + 0x1), al);      /* mov [es:bx+0x1], al */
    II(0x00139a7c, 0x3)   mov(ax, memw_a16(ss, bp - 0x14));     /* mov ax, [bp-0x14] */
    II(0x00139a7f, 0x3)   mov(dx, memw_a16(ss, bp - 0x12));     /* mov dx, [bp-0x12] */
    II(0x00139a82, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x00139a86, 0x4)   mov(memw_a16(es, bx + 0x2), ax);      /* mov [es:bx+0x2], ax */
    II(0x00139a8a, 0x4)   mov(memw_a16(es, bx + 0x4), dx);      /* mov [es:bx+0x4], dx */
l_0x00139a8e:
    II(0x00139a8e, 0x3)   mov(ax, memw_a16(ss, bp - 0x14));     /* mov ax, [bp-0x14] */
    II(0x00139a91, 0x3)   mov(dx, memw_a16(ss, bp - 0x12));     /* mov dx, [bp-0x12] */
    II(0x00139a94, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00139a96, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00139a98, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00139a9a, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00139a9c, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139a9e, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139aa0, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139aa2, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139aa4, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139aa6, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139aa8, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139aaa, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139aac, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00139aaf, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x00139ab2, 0x5)   test(memw_a16(ss, bp - 0x14), 0xfff); /* test word [bp-0x14], 0xfff */
    II(0x00139ab7, 0x2)   jzw(0x00139ac5, 0xc);                 /* jz 0x139ac5 */
    II(0x00139ab9, 0x3)   add(ax, 0x1);                         /* add ax, 0x1 */
    II(0x00139abc, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00139abf, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00139ac2, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
l_0x00139ac5:
    II(0x00139ac5, 0x3)   lea(ax, bp - 0xe);                    /* lea ax, [bp-0xe] */
    II(0x00139ac8, 0x1)   pushw(ss);                            /* push ss */
    II(0x00139ac9, 0x1)   pushw(ax);                            /* push ax */
    II(0x00139aca, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x00139acd, 0x3)   mov(dx, memw_a16(ss, bp - 0x6));      /* mov dx, [bp-0x6] */
    II(0x00139ad0, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00139ad3, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x00139ad6, 0x1)   pushw(dx);                            /* push dx */
    II(0x00139ad7, 0x1)   pushw(ax);                            /* push ax */
    II(0x00139ad8, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139ad9, 0x3)   callw(0x0013bcb8, 0x21dc);            /* call 0x13bcb8 */
    II(0x00139adc, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00139adf, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x00139ae2, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00139ae4, 0x2)   jzw(0x00139afe, 0x18);                /* jz 0x139afe */
    II(0x00139ae6, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139ae9, 0x4)   mov(memw_a16(es, bx + 0x20), ax);     /* mov [es:bx+0x20], ax */
    II(0x00139aed, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x00139af3, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x00139af8, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139af9, 0x1)   popw(si);                             /* pop si */
    II(0x00139afa, 0x1)   leavew();                             /* leave  */
    II(0x00139afb, 0x1)   retfw();                              /* retf  */
//    II(0x00139afc, 0x2)   /* Недостижимый код. */
l_0x00139afe:
    II(0x00139afe, 0x3)   mov(ax, memw_a16(ss, bp - 0xc));      /* mov ax, [bp-0xc] */
    II(0x00139b01, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139b04, 0x4)   mov(memw_a16(es, bx + 0x14), ax);     /* mov [es:bx+0x14], ax */
    II(0x00139b08, 0x6)   mov(memw_a16(es, bx + 0x16), 0);      /* mov word [es:bx+0x16], 0x0 */
    II(0x00139b0e, 0x3)   mov(ax, memw_a16(ss, bp - 0xe));      /* mov ax, [bp-0xe] */
    II(0x00139b11, 0x4)   mov(memw_a16(es, bx + 0x1c), ax);     /* mov [es:bx+0x1c], ax */
    II(0x00139b15, 0x6)   mov(memw_a16(es, bx + 0x1e), 0);      /* mov word [es:bx+0x1e], 0x0 */
    II(0x00139b1b, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x00139b1e, 0x3)   shr(ax, 0x10);                        /* shr ax, 0x10 */
    II(0x00139b21, 0x4)   mov(memw_a16(es, bx + 0x8), ax);      /* mov [es:bx+0x8], ax */
    II(0x00139b25, 0x6)   mov(memw_a16(es, bx + 0xa), 0);       /* mov word [es:bx+0xa], 0x0 */
    II(0x00139b2b, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x00139b2e, 0x4)   mov(memw_a16(es, bx + 0x4), ax);      /* mov [es:bx+0x4], ax */
    II(0x00139b32, 0x6)   mov(memw_a16(es, bx + 0x6), 0);       /* mov word [es:bx+0x6], 0x0 */
    II(0x00139b38, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x00139b3d, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x00139b40, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x00139b43, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00139b46, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00139b49, 0x1)   pushw(ds);                            /* push ds */
    II(0x00139b4a, 0x3)   pushw(0x1332);                        /* push word 0x1332 */
//    II(0x00139b4d, 0x1)   nop();                                /* nop  */
    II(0x00139b4e, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139b4f, 0x3)   callw(0x0014104f, 0x74fd);            /* call 0x14104f */
    II(0x00139b52, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00139b55, 0x5)   cmp(memw_a16(ds, 0x984), 0);          /* cmp word [0x984], 0x0 */
    II(0x00139b5a, 0x2)   jzw(0x00139ba7, 0x4b);                /* jz 0x139ba7 */
    II(0x00139b5c, 0x3)   mov(ax, memw_a16(ss, bp - 0xe));      /* mov ax, [bp-0xe] */
    II(0x00139b5f, 0x3)   mov(dx, memw_a16(ss, bp - 0xc));      /* mov dx, [bp-0xc] */
    II(0x00139b62, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x00139b66, 0x4)   mov(memw_a16(es, bx + 0x6), ax);      /* mov [es:bx+0x6], ax */
    II(0x00139b6a, 0x4)   mov(memw_a16(es, bx + 0x8), dx);      /* mov [es:bx+0x8], dx */
    II(0x00139b6e, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139b71, 0x4)   mov(ax, memw_a16(es, bx + 0x24));     /* mov ax, [es:bx+0x24] */
    II(0x00139b75, 0x4)   mov(dx, memw_a16(es, bx + 0x26));     /* mov dx, [es:bx+0x26] */
    II(0x00139b79, 0x4)   les(si, ds, 0x4fc4);                  /* les si, [0x4fc4] */
    II(0x00139b7d, 0x4)   mov(memw_a16(es, si + 0xa), ax);      /* mov [es:si+0xa], ax */
    II(0x00139b81, 0x4)   mov(memw_a16(es, si + 0xc), dx);      /* mov [es:si+0xc], dx */
    II(0x00139b85, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139b88, 0x4)   mov(ax, memw_a16(es, bx + 0x28));     /* mov ax, [es:bx+0x28] */
    II(0x00139b8c, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x00139b90, 0x4)   mov(memw_a16(es, bx + 0xe), ax);      /* mov [es:bx+0xe], ax */
    II(0x00139b94, 0x4)   pushw(memw_a16(ds, 0x5167));          /* push word [0x5167] */
    II(0x00139b98, 0x4)   pushw(memw_a16(ds, 0x4fc6));          /* push word [0x4fc6] */
    II(0x00139b9c, 0x4)   pushw(memw_a16(ds, 0x4fc4));          /* push word [0x4fc4] */
    II(0x00139ba0, 0x2)   pushw(0x10);                          /* push 0x10 */
//    II(0x00139ba2, 0x1)   nop();                                /* nop  */
    II(0x00139ba3, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139ba4, 0x3)   callw(0x00140864, 0x6cbd);            /* call 0x140864 */
l_0x00139ba7:
    II(0x00139ba7, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139ba8, 0x1)   popw(si);                             /* pop si */
    II(0x00139ba9, 0x1)   leavew();                             /* leave  */
    II(0x00139baa, 0x1)   retfw();                              /* retf  */
FUNC_END

