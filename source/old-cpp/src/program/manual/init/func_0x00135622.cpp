FUNC_BEGIN(0x00135622, 0x9439e39ac8002eda, 0x10, ({0xc8, 0x4, 0, 0, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xfe, 0x8, 0, 0x8b, 0x46, 0x6, 0x89, 0x46, 0xfc, 0xc4, 0x5e, 0xfc, 0x26, 0x8a, 0x47, 0x5, 0x24, 0xf3, 0xc, 0x13, 0x26, 0x88, 0x47, 0x5, 0x1f, 0xc9, 0xcb}))
    II(0x00135622, 0x4)   enterw(0x4, 0);                       /* enter 0x4, 0x0 */
    II(0x00135626, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135627, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013562a, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013562c, 0x5)   mov(memw_a16(ss, bp - 0x2), 0x8);     /* mov word [bp-0x2], 0x8 */
    II(0x00135631, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00135634, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00135637, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x0013563a, 0x4)   mov(al, memb_a16(es, bx + 0x5));      /* mov al, [es:bx+0x5] */
    II(0x0013563e, 0x2)   and_(al, 0xf3);                       /* and al, 0xf3 */
    II(0x00135640, 0x2)   or_(al, 0x13);                        /* or al, 0x13 */
    II(0x00135642, 0x4)   mov(memb_a16(es, bx + 0x5), al);      /* mov [es:bx+0x5], al */
    II(0x00135646, 0x1)   popw(ds);                             /* pop ds */
    II(0x00135647, 0x1)   leavew();                             /* leave  */
    II(0x00135648, 0x1)   retfw();                              /* retf  */
FUNC_END

