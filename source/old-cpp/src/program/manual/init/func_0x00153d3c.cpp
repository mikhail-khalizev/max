FUNC_BEGIN(0x00153d3c, 0x8177d8513fe0a372, 0x10, ({0x51, 0x57, 0xf6, 0x47, 0x2, 0x1, 0x74, 0x66, 0xe8, 0xd5, 0, 0x8b, 0xfe, 0x8b, 0x4, 0xa8, 0x1, 0x74, 0x3, 0x2b, 0xc8, 0x49, 0x41, 0x41, 0x8b, 0x77, 0x4, 0xb, 0xf6, 0x74, 0x4f, 0x3, 0xce, 0x73, 0x9, 0x33, 0xc0, 0xba, 0xf0, 0xff, 0xe3, 0x33, 0xeb, 0x42, 0xb8, 0xa8, 0, 0x8e, 0xc0, 0x26, 0xa1, 0x64, 0x3f, 0x3d, 0, 0x20, 0x74, 0x16, 0xba, 0, 0x80, 0x3b, 0xd0, 0x72, 0x6, 0xd1, 0xea, 0x75, 0xf8, 0xeb, 0x22, 0x83, 0xfa, 0x8, 0x72, 0x1d, 0xd1, 0xe2, 0x8b, 0xc2, 0x48, 0x8b, 0xd0, 0x3, 0xc1, 0x73, 0x2, 0x33, 0xc0, 0xf7, 0xd2, 0x23, 0xc2, 0x52, 0xe8, 0x2e, 0, 0x5a, 0x73, 0xd, 0x83, 0xfa, 0xf0, 0x74, 0x5, 0xb8, 0x10, 0, 0xeb, 0xe2, 0xf9, 0xeb, 0x1b, 0x8b, 0xd0, 0x2b, 0x57, 0x4, 0x89, 0x47, 0x4, 0x89, 0x7f, 0x8, 0x8b, 0x77, 0xa, 0x4a, 0x89, 0x14, 0x42, 0x3, 0xf2, 0xc7, 0x4, 0xfe, 0xff, 0x89, 0x77, 0xa, 0x5f, 0x59, 0xc3}))
    II(0x00153d3c, 0x1)   pushw(cx);                            /* push cx */
    II(0x00153d3d, 0x1)   pushw(di);                            /* push di */
    II(0x00153d3e, 0x4)   test(memb_a16(ds, bx + 0x2), 0x1);    /* test byte [bx+0x2], 0x1 */
    II(0x00153d42, 0x2)   jzw(0x00153daa, 0x66);                /* jz 0x153daa */
    II(0x00153d44, 0x3)   callw(0x00153e1c, 0xd5);              /* call 0x153e1c */
    II(0x00153d47, 0x2)   mov(di, si);                          /* mov di, si */
    II(0x00153d49, 0x2)   mov(ax, memw_a16(ds, si));            /* mov ax, [si] */
    II(0x00153d4b, 0x2)   test(al, 0x1);                        /* test al, 0x1 */
    II(0x00153d4d, 0x2)   jzw(0x00153d52, 0x3);                 /* jz 0x153d52 */
    II(0x00153d4f, 0x2)   sub(cx, ax);                          /* sub cx, ax */
    II(0x00153d51, 0x1)   dec(cx);                              /* dec cx */
l_0x00153d52:
    II(0x00153d52, 0x1)   inc(cx);                              /* inc cx */
    II(0x00153d53, 0x1)   inc(cx);                              /* inc cx */
    II(0x00153d54, 0x3)   mov(si, memw_a16(ds, bx + 0x4));      /* mov si, [bx+0x4] */
    II(0x00153d57, 0x2)   or_(si, si);                          /* or si, si */
    II(0x00153d59, 0x2)   jzw(0x00153daa, 0x4f);                /* jz 0x153daa */
    II(0x00153d5b, 0x2)   add(cx, si);                          /* add cx, si */
    II(0x00153d5d, 0x2)   jaew(0x00153d68, 0x9);                /* jae 0x153d68 */
    II(0x00153d5f, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
    II(0x00153d61, 0x3)   mov(dx, 0xfff0);                      /* mov dx, 0xfff0 */
    II(0x00153d64, 0x2)   jcxzw(0x00153d99, 0x33);              /* jcxz 0x153d99 */
    II(0x00153d66, 0x2)   jmpw(0x00153daa, 0x42);               /* jmp 0x153daa */
l_0x00153d68:
    II(0x00153d68, 0x3)   mov(ax, 0xa8);                        /* mov ax, 0xa8 */
    II(0x00153d6b, 0x2)   mov(es, ax);                          /* mov es, ax */
    II(0x00153d6d, 0x4)   mov(ax, memw_a16(es, 0x3f64));        /* mov ax, [es:0x3f64] */
    II(0x00153d71, 0x3)   cmp(ax, 0x2000);                      /* cmp ax, 0x2000 */
    II(0x00153d74, 0x2)   jzw(0x00153d8c, 0x16);                /* jz 0x153d8c */
    II(0x00153d76, 0x3)   mov(dx, 0x8000);                      /* mov dx, 0x8000 */
l_0x00153d79:
    II(0x00153d79, 0x2)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x00153d7b, 0x2)   jbw(0x00153d83, 0x6);                 /* jb 0x153d83 */
    II(0x00153d7d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00153d7f, 0x2)   jnzw(0x00153d79, -0x8);               /* jnz 0x153d79 */
    II(0x00153d81, 0x2)   jmpw(0x00153da5, 0x22);               /* jmp 0x153da5 */
l_0x00153d83:
    II(0x00153d83, 0x3)   cmp(dx, 0x8);                         /* cmp dx, 0x8 */
    II(0x00153d86, 0x2)   jbw(0x00153da5, 0x1d);                /* jb 0x153da5 */
    II(0x00153d88, 0x2)   shl(dx, 0x1);                         /* shl dx, 1 */
    II(0x00153d8a, 0x2)   mov(ax, dx);                          /* mov ax, dx */
l_0x00153d8c:
    II(0x00153d8c, 0x1)   dec(ax);                              /* dec ax */
    II(0x00153d8d, 0x2)   mov(dx, ax);                          /* mov dx, ax */
    II(0x00153d8f, 0x2)   add(ax, cx);                          /* add ax, cx */
    II(0x00153d91, 0x2)   jaew(0x00153d95, 0x2);                /* jae 0x153d95 */
    II(0x00153d93, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
l_0x00153d95:
    II(0x00153d95, 0x2)   not_(dx);                             /* not dx */
    II(0x00153d97, 0x2)   and_(ax, dx);                         /* and ax, dx */
l_0x00153d99:
    II(0x00153d99, 0x1)   pushw(dx);                            /* push dx */
    II(0x00153d9a, 0x3)   callw(0x00153dcb, 0x2e);              /* call 0x153dcb */
    II(0x00153d9d, 0x1)   popw(dx);                             /* pop dx */
    II(0x00153d9e, 0x2)   jaew(0x00153dad, 0xd);                /* jae 0x153dad */
    II(0x00153da0, 0x3)   cmp(dx, -0x10 /* 0xf0 */);            /* cmp dx, 0xf0 */
    II(0x00153da3, 0x2)   jzw(0x00153daa, 0x5);                 /* jz 0x153daa */
l_0x00153da5:
    II(0x00153da5, 0x3)   mov(ax, 0x10);                        /* mov ax, 0x10 */
    II(0x00153da8, 0x2)   jmpw(0x00153d8c, -0x1e);              /* jmp 0x153d8c */
l_0x00153daa:
    II(0x00153daa, 0x1)   stc();                                /* stc  */
    II(0x00153dab, 0x2)   jmpw(0x00153dc8, 0x1b);               /* jmp 0x153dc8 */
l_0x00153dad:
    II(0x00153dad, 0x2)   mov(dx, ax);                          /* mov dx, ax */
    II(0x00153daf, 0x3)   sub(dx, memw_a16(ds, bx + 0x4));      /* sub dx, [bx+0x4] */
    II(0x00153db2, 0x3)   mov(memw_a16(ds, bx + 0x4), ax);      /* mov [bx+0x4], ax */
    II(0x00153db5, 0x3)   mov(memw_a16(ds, bx + 0x8), di);      /* mov [bx+0x8], di */
    II(0x00153db8, 0x3)   mov(si, memw_a16(ds, bx + 0xa));      /* mov si, [bx+0xa] */
    II(0x00153dbb, 0x1)   dec(dx);                              /* dec dx */
    II(0x00153dbc, 0x2)   mov(memw_a16(ds, si), dx);            /* mov [si], dx */
    II(0x00153dbe, 0x1)   inc(dx);                              /* inc dx */
    II(0x00153dbf, 0x2)   add(si, dx);                          /* add si, dx */
    II(0x00153dc1, 0x4)   mov(memw_a16(ds, si), 0xfffe);        /* mov word [si], 0xfffe */
    II(0x00153dc5, 0x3)   mov(memw_a16(ds, bx + 0xa), si);      /* mov [bx+0xa], si */
l_0x00153dc8:
    II(0x00153dc8, 0x1)   popw(di);                             /* pop di */
    II(0x00153dc9, 0x1)   popw(cx);                             /* pop cx */
    II(0x00153dca, 0x1)   retw();                               /* ret  */
FUNC_END

