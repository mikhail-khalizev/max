FUNC_BEGIN(0x00138440, 0xd2db3f0e65e513, 0x10, ({0xc8, 0x10, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xfe, 0, 0, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x52, 0x50, 0xe, 0xe8, 0x13, 0x5, 0x83, 0xc4, 0x4, 0xa1, 0x1a, 0, 0xb, 0x6, 0x18, 0, 0x75, 0x15, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x2d, 0, 0, 0x83, 0xda, 0x1, 0x89, 0x46, 0xf0, 0x89, 0x56, 0xf2, 0xeb, 0x46, 0x90, 0x83, 0x7e, 0x14, 0, 0x74, 0x28, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0xe8, 0x61, 0xa, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xf0, 0x89, 0x56, 0xf2, 0x3d, 0xff, 0xff, 0x75, 0xe, 0x3b, 0xd0, 0x75, 0xa, 0xe, 0xe8, 0x63, 0x6, 0x89, 0x46, 0xf0, 0x89, 0x56, 0xf2, 0xeb, 0x18, 0x90, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x80, 0xce, 0x80, 0x52, 0x50, 0xe8, 0x34, 0xa, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xf0, 0x89, 0x56, 0xf2, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xf0, 0xff, 0x36, 0xb6, 0x4f, 0xff, 0x36, 0xb4, 0x4f, 0xe8, 0x1c, 0xd, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x83, 0x7e, 0x14, 0, 0x75, 0x3, 0xe9, 0xa2, 0x1, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xf0, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0x1e, 0x68, 0x52, 0xa, 0x90, 0xe, 0xe8, 0x3c, 0x8b, 0x83, 0xc4, 0xc, 0x1e, 0xb9, 0, 0x4, 0xc4, 0x3e, 0x80, 0x4f, 0xc5, 0x36, 0xb8, 0x4f, 0x66, 0xf3, 0xa5, 0x1f, 0x80, 0x66, 0xfb, 0x7f, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x2d, 0, 0, 0x83, 0xda, 0x1, 0x52, 0x50, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0xc5, 0xc, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0xf6, 0x46, 0x16, 0x40, 0x75, 0x15, 0x8b, 0x46, 0xf8, 0x8b, 0x56, 0xfa, 0x2a, 0xf6, 0x3b, 0x46, 0x6, 0x75, 0x8, 0x3b, 0x56, 0x8, 0x75, 0x3, 0xe9, 0xf9, 0, 0xc4, 0x1e, 0xfc, 0x1e, 0x26, 0xfe, 0x7, 0xe, 0xe8, 0xf2, 0x7, 0xc7, 0x46, 0xfc, 0, 0, 0x8b, 0x46, 0xf0, 0x8b, 0x56, 0xf2, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xc4, 0x1e, 0x60, 0x1f, 0x26, 0x3b, 0x7, 0x75, 0x6, 0x26, 0x3b, 0x57, 0x2, 0x74, 0x1e, 0x52, 0x50, 0x6a, 0, 0xe, 0xe8, 0x40, 0x4, 0x83, 0xc4, 0x6, 0xb, 0xc0, 0x74, 0xf, 0x6a, 0, 0x6a, 0x1, 0x68, 0x22, 0x9, 0x90, 0xe, 0xe8, 0xf5, 0xef, 0x83, 0xc4, 0x6, 0x1e, 0x68, 0x65, 0xa, 0x90, 0xe, 0xe8, 0x84, 0x8a, 0x83, 0xc4, 0x4, 0xff, 0x36, 0x82, 0x4f, 0xff, 0x36, 0x80, 0x4f, 0xff, 0x76, 0xfc, 0xe, 0xe8, 0x6d, 0x4, 0x83, 0xc4, 0x6, 0x3d, 0, 0x10, 0x75, 0x4, 0xb, 0xd2, 0x74, 0xf, 0x6a, 0, 0x6a, 0x2, 0x68, 0x22, 0x9, 0x90, 0xe, 0xe8, 0xbf, 0xef, 0x83, 0xc4, 0x6, 0x8b, 0x46, 0xf0, 0x8b, 0x56, 0xf2, 0x5, 0x1, 0, 0x83, 0xd2, 0, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x8b, 0x5e, 0xfc, 0x8b, 0xcb, 0xd1, 0xe3, 0x3, 0xd9, 0xd1, 0xe3, 0xc4, 0x36, 0x60, 0x1f, 0x26, 0x89, 0, 0x26, 0x89, 0x50, 0x2, 0xc4, 0x1e, 0xfc, 0x1e, 0x26, 0xfe, 0xf, 0x80, 0x4e, 0xfb, 0x80, 0x8b, 0x46, 0xf8, 0x8b, 0x56, 0xfa, 0x33, 0x46, 0x6, 0x33, 0x56, 0x8, 0x2a, 0xf6, 0x31, 0x46, 0xf8, 0x31, 0x56, 0xfa, 0x1e, 0x68, 0x6d, 0xa, 0x90, 0xe, 0xe8, 0xf5, 0x89, 0x83, 0xc4, 0x4, 0xeb, 0x11, 0x90, 0x80, 0x4e, 0xfb, 0x80, 0x1e, 0x68, 0x75, 0xa, 0x90, 0xe, 0xe8, 0xe2, 0x89, 0x83, 0xc4, 0x4, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xf0, 0xff, 0x36, 0xb6, 0x4f, 0xff, 0x36, 0xb4, 0x4f, 0xe8, 0xae, 0xb, 0x83, 0xc4, 0xc, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xf0, 0x1e, 0x68, 0x81, 0xa, 0x90, 0xe, 0xe8, 0xb6, 0x89, 0x83, 0xc4, 0x8, 0xe9, 0xca, 0x1, 0x90, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xf0, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0x1e, 0x68, 0x84, 0xa, 0x90, 0xe, 0xe8, 0x9a, 0x89, 0x83, 0xc4, 0xc, 0x8b, 0x46, 0xf8, 0x8b, 0x56, 0xfa, 0x2a, 0xf6, 0x3b, 0x46, 0x6, 0x75, 0x5, 0x3b, 0x56, 0x8, 0x74, 0x1c, 0xc4, 0x3e, 0xb8, 0x4f, 0x33, 0xc0, 0xb9, 0, 0x4, 0x66, 0xf3, 0xab, 0x1e, 0x68, 0x97, 0xa, 0x90, 0xe, 0xe8, 0x70, 0x89, 0x83, 0xc4, 0x4, 0xe9, 0x84, 0x1, 0x90, 0xc4, 0x1e, 0xfc, 0x1e, 0x26, 0xfe, 0x7, 0xe, 0xe8, 0x73, 0x6, 0xc7, 0x46, 0xfc, 0, 0, 0x8b, 0x46, 0xf0, 0x8b, 0x56, 0xf2, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xc4, 0x1e, 0x60, 0x1f, 0x26, 0x3b, 0x7, 0x75, 0x6, 0x26, 0x3b, 0x57, 0x2, 0x74, 0x1e, 0x52, 0x50, 0x6a, 0, 0xe, 0xe8, 0xc1, 0x2, 0x83, 0xc4, 0x6, 0xb, 0xc0, 0x74, 0xf, 0x6a, 0, 0x6a, 0x1, 0x68, 0x26, 0x9, 0x90, 0xe, 0xe8, 0x76, 0xee, 0x83, 0xc4, 0x6, 0xff, 0x36, 0x82, 0x4f, 0xff, 0x36, 0x80, 0x4f, 0xff, 0x76, 0xfc, 0xe, 0xe8, 0x64, 0x3, 0x83, 0xc4, 0x6, 0x3d, 0, 0x10, 0x75, 0x4, 0xb, 0xd2, 0x74, 0xf, 0x6a, 0, 0x6a, 0x2, 0x68, 0x26, 0x9, 0x90, 0xe, 0xe8, 0x4c, 0xee, 0x83, 0xc4, 0x6, 0x8b, 0x46, 0xf0, 0x8b, 0x56, 0xf2, 0x5, 0x1, 0, 0x83, 0xd2, 0, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x8b, 0x5e, 0xfc, 0x8b, 0xcb, 0xd1, 0xe3, 0x3, 0xd9, 0xd1, 0xe3, 0xc4, 0x36, 0x60, 0x1f, 0x26, 0x89, 0, 0x26, 0x89, 0x50, 0x2, 0xc4, 0x1e, 0xfc, 0x1e, 0x26, 0xfe, 0xf, 0x1e, 0xb9, 0, 0x4, 0xc4, 0x3e, 0xb8, 0x4f, 0xc5, 0x36, 0x80, 0x4f, 0x66, 0xf3, 0xa5, 0x1f, 0x80, 0x66, 0xfb, 0x7f, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xf0, 0xff, 0x36, 0xb6, 0x4f, 0xff, 0x36, 0xb4, 0x4f, 0xe8, 0x5e, 0xa, 0x83, 0xc4, 0xc, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xf0, 0x1e, 0x68, 0xa2, 0xa, 0x90, 0xe, 0xe8, 0x66, 0x88, 0x83, 0xc4, 0x8, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x2d, 0, 0, 0x83, 0xda, 0x1, 0x52, 0x50, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0x8b, 0xf0, 0x8b, 0xfa, 0xe8, 0xff, 0x9, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x80, 0x66, 0xf4, 0xbf, 0x52, 0xff, 0x76, 0xf4, 0x57, 0x56, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0xe, 0xa, 0x83, 0xc4, 0xc, 0x83, 0x3e, 0x84, 0x9, 0, 0x74, 0x38, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0xc6, 0x7, 0x31, 0xa0, 0x30, 0x51, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0x88, 0x47, 0x1, 0x8b, 0x46, 0xf0, 0x8b, 0x56, 0xf2, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0x89, 0x47, 0x2, 0x26, 0x89, 0x57, 0x4, 0xff, 0x36, 0x67, 0x51, 0xff, 0x36, 0xc6, 0x4f, 0xff, 0x36, 0xc4, 0x4f, 0x6a, 0x4, 0x90, 0xe, 0xe8, 0xfb, 0x7f, 0xff, 0x76, 0xfc, 0x1e, 0x68, 0xac, 0xa, 0x90, 0xe, 0xe8, 0xda, 0x87, 0x83, 0xc4, 0x6, 0x2b, 0xc0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x00138440, 0x4)   enterw(0x10, 0);                      /* enter 0x10, 0x0 */
    II(0x00138444, 0x1)   pushw(di);                            /* push di */
    II(0x00138445, 0x1)   pushw(si);                            /* push si */
    II(0x00138446, 0x1)   pushw(ds);                            /* push ds */
    II(0x00138447, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013844a, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013844c, 0x5)   mov(memw_a16(ss, bp - 0x2), 0);       /* mov word [bp-0x2], 0x0 */
    II(0x00138451, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00138454, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x00138457, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00138459, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013845b, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013845d, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013845f, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138461, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138463, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138465, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138467, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138469, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013846b, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013846d, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013846f, 0x1)   pushw(dx);                            /* push dx */
    II(0x00138470, 0x1)   pushw(ax);                            /* push ax */
    II(0x00138471, 0x1)   pushw(cs);                            /* push cs */
    II(0x00138472, 0x3)   callw(0x00138988, 0x513);             /* call 0x138988 */
    II(0x00138475, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x00138478, 0x3)   mov(ax, memw_a16(ds, 0x1a));          /* mov ax, [0x1a] */
    II(0x0013847b, 0x4)   or_(ax, memw_a16(ds, 0x18));          /* or ax, [0x18] */
    II(0x0013847f, 0x2)   jnzw(0x00138496, 0x15);               /* jnz 0x138496 */
    II(0x00138481, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00138484, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x00138487, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x0013848a, 0x3)   sbb(dx, 0x1);                         /* sbb dx, 0x1 */
    II(0x0013848d, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x00138490, 0x3)   mov(memw_a16(ss, bp - 0xe), dx);      /* mov [bp-0xe], dx */
    II(0x00138493, 0x2)   jmpw(0x001384db, 0x46);               /* jmp 0x1384db */
//    II(0x00138495, 0x1)   /* Недостижимый код. */
l_0x00138496:
    II(0x00138496, 0x4)   cmp(memw_a16(ss, bp + 0x14), 0);      /* cmp word [bp+0x14], 0x0 */
    II(0x0013849a, 0x2)   jzw(0x001384c4, 0x28);                /* jz 0x1384c4 */
    II(0x0013849c, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0013849f, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x001384a2, 0x3)   callw(0x00138f06, 0xa61);             /* call 0x138f06 */
    II(0x001384a5, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001384a8, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x001384ab, 0x3)   mov(memw_a16(ss, bp - 0xe), dx);      /* mov [bp-0xe], dx */
    II(0x001384ae, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x001384b1, 0x2)   jnzw(0x001384c1, 0xe);                /* jnz 0x1384c1 */
    II(0x001384b3, 0x2)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x001384b5, 0x2)   jnzw(0x001384c1, 0xa);                /* jnz 0x1384c1 */
    II(0x001384b7, 0x1)   pushw(cs);                            /* push cs */
    II(0x001384b8, 0x3)   callw(0x00138b1e, 0x663);             /* call 0x138b1e */
    II(0x001384bb, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x001384be, 0x3)   mov(memw_a16(ss, bp - 0xe), dx);      /* mov [bp-0xe], dx */
l_0x001384c1:
    II(0x001384c1, 0x2)   jmpw(0x001384db, 0x18);               /* jmp 0x1384db */
//    II(0x001384c3, 0x1)   /* Недостижимый код. */
l_0x001384c4:
    II(0x001384c4, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x001384c7, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x001384ca, 0x3)   or_(dh, 0x80);                        /* or dh, 0x80 */
    II(0x001384cd, 0x1)   pushw(dx);                            /* push dx */
    II(0x001384ce, 0x1)   pushw(ax);                            /* push ax */
    II(0x001384cf, 0x3)   callw(0x00138f06, 0xa34);             /* call 0x138f06 */
    II(0x001384d2, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001384d5, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x001384d8, 0x3)   mov(memw_a16(ss, bp - 0xe), dx);      /* mov [bp-0xe], dx */
l_0x001384db:
    II(0x001384db, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x001384de, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x001384e1, 0x4)   pushw(memw_a16(ds, 0x4fb6));          /* push word [0x4fb6] */
    II(0x001384e5, 0x4)   pushw(memw_a16(ds, 0x4fb4));          /* push word [0x4fb4] */
    II(0x001384e9, 0x3)   callw(0x00139208, 0xd1c);             /* call 0x139208 */
    II(0x001384ec, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001384ef, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x001384f2, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x001384f5, 0x4)   cmp(memw_a16(ss, bp + 0x14), 0);      /* cmp word [bp+0x14], 0x0 */
    II(0x001384f9, 0x2)   jnzw(0x001384fe, 0x3);                /* jnz 0x1384fe */
    II(0x001384fb, 0x3)   jmpw(0x001386a0, 0x1a2);              /* jmp 0x1386a0 */
l_0x001384fe:
    II(0x001384fe, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x00138501, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x00138504, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x00138507, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0013850a, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013850b, 0x3)   pushw(0xa52);                         /* push word 0xa52 */
//    II(0x0013850e, 0x1)   nop();                                /* nop  */
    II(0x0013850f, 0x1)   pushw(cs);                            /* push cs */
    II(0x00138510, 0x3)   callw(0x0013104f, -0x74c4);           /* call 0x13104f */
    II(0x00138513, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x00138516, 0x1)   pushw(ds);                            /* push ds */
    II(0x00138517, 0x3)   mov(cx, 0x400);                       /* mov cx, 0x400 */
    II(0x0013851a, 0x4)   les(di, ds, 0x4f80);                  /* les di, [0x4f80] */
    II(0x0013851e, 0x4)   lds(si, ds, 0x4fb8);                  /* lds si, [0x4fb8] */
    II(0x00138522, 0x3)   rep_a16 movsd_a16();                  /* rep movsd  */
    II(0x00138525, 0x1)   popw(ds);                             /* pop ds */
    II(0x00138526, 0x4)   and_(memb_a16(ss, bp - 0x5), 0x7f);   /* and byte [bp-0x5], 0x7f */
    II(0x0013852a, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x0013852d, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x00138530, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x00138533, 0x3)   sbb(dx, 0x1);                         /* sbb dx, 0x1 */
    II(0x00138536, 0x1)   pushw(dx);                            /* push dx */
    II(0x00138537, 0x1)   pushw(ax);                            /* push ax */
    II(0x00138538, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x0013853c, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x00138540, 0x3)   callw(0x00139208, 0xcc5);             /* call 0x139208 */
    II(0x00138543, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00138546, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x00138549, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0013854c, 0x4)   test(memb_a16(ss, bp + 0x16), 0x40);  /* test byte [bp+0x16], 0x40 */
    II(0x00138550, 0x2)   jnzw(0x00138567, 0x15);               /* jnz 0x138567 */
    II(0x00138552, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x00138555, 0x3)   mov(dx, memw_a16(ss, bp - 0x6));      /* mov dx, [bp-0x6] */
    II(0x00138558, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013855a, 0x3)   cmp(ax, memw_a16(ss, bp + 0x6));      /* cmp ax, [bp+0x6] */
    II(0x0013855d, 0x2)   jnzw(0x00138567, 0x8);                /* jnz 0x138567 */
    II(0x0013855f, 0x3)   cmp(dx, memw_a16(ss, bp + 0x8));      /* cmp dx, [bp+0x8] */
    II(0x00138562, 0x2)   jnzw(0x00138567, 0x3);                /* jnz 0x138567 */
    II(0x00138564, 0x3)   jmpw(0x00138660, 0xf9);               /* jmp 0x138660 */
l_0x00138567:
    II(0x00138567, 0x4)   les(bx, ds, 0x1efc);                  /* les bx, [0x1efc] */
    II(0x0013856b, 0x3)   inc(memb_a16(es, bx));                /* inc byte [es:bx] */
    II(0x0013856e, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013856f, 0x3)   callw(0x00138d64, 0x7f2);             /* call 0x138d64 */
    II(0x00138572, 0x5)   mov(memw_a16(ss, bp - 0x4), 0);       /* mov word [bp-0x4], 0x0 */
    II(0x00138577, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x0013857a, 0x3)   mov(dx, memw_a16(ss, bp - 0xe));      /* mov dx, [bp-0xe] */
    II(0x0013857d, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x0013857f, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00138581, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00138583, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00138585, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138587, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138589, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013858b, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013858d, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013858f, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138591, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138593, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138595, 0x4)   les(bx, ds, 0x1f60);                  /* les bx, [0x1f60] */
    II(0x00138599, 0x3)   cmp(ax, memw_a16(es, bx));            /* cmp ax, [es:bx] */
    II(0x0013859c, 0x2)   jnzw(0x001385a4, 0x6);                /* jnz 0x1385a4 */
    II(0x0013859e, 0x4)   cmp(dx, memw_a16(es, bx + 0x2));      /* cmp dx, [es:bx+0x2] */
    II(0x001385a2, 0x2)   jzw(0x001385c2, 0x1e);                /* jz 0x1385c2 */
l_0x001385a4:
    II(0x001385a4, 0x1)   pushw(dx);                            /* push dx */
    II(0x001385a5, 0x1)   pushw(ax);                            /* push ax */
    II(0x001385a6, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x001385a8, 0x1)   pushw(cs);                            /* push cs */
    II(0x001385a9, 0x3)   callw(0x001389ec, 0x440);             /* call 0x1389ec */
    II(0x001385ac, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x001385af, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x001385b1, 0x2)   jzw(0x001385c2, 0xf);                 /* jz 0x1385c2 */
    II(0x001385b3, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x001385b5, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x001385b7, 0x3)   pushw(0x922);                         /* push word 0x922 */
//    II(0x001385ba, 0x1)   nop();                                /* nop  */
    II(0x001385bb, 0x1)   pushw(cs);                            /* push cs */
    II(0x001385bc, 0x3)   callw(0x001375b4, -0x100b);           /* call 0x1375b4 */
    II(0x001385bf, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
l_0x001385c2:
    II(0x001385c2, 0x1)   pushw(ds);                            /* push ds */
    II(0x001385c3, 0x3)   pushw(0xa65);                         /* push word 0xa65 */
//    II(0x001385c6, 0x1)   nop();                                /* nop  */
    II(0x001385c7, 0x1)   pushw(cs);                            /* push cs */
    II(0x001385c8, 0x3)   callw(0x0013104f, -0x757c);           /* call 0x13104f */
    II(0x001385cb, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001385ce, 0x4)   pushw(memw_a16(ds, 0x4f82));          /* push word [0x4f82] */
    II(0x001385d2, 0x4)   pushw(memw_a16(ds, 0x4f80));          /* push word [0x4f80] */
    II(0x001385d6, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x001385d9, 0x1)   pushw(cs);                            /* push cs */
    II(0x001385da, 0x3)   callw(0x00138a4a, 0x46d);             /* call 0x138a4a */
    II(0x001385dd, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x001385e0, 0x3)   cmp(ax, 0x1000);                      /* cmp ax, 0x1000 */
    II(0x001385e3, 0x2)   jnzw(0x001385e9, 0x4);                /* jnz 0x1385e9 */
    II(0x001385e5, 0x2)   or_(dx, dx);                          /* or dx, dx */
    II(0x001385e7, 0x2)   jzw(0x001385f8, 0xf);                 /* jz 0x1385f8 */
l_0x001385e9:
    II(0x001385e9, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x001385eb, 0x2)   pushw(0x2);                           /* push 0x2 */
    II(0x001385ed, 0x3)   pushw(0x922);                         /* push word 0x922 */
//    II(0x001385f0, 0x1)   nop();                                /* nop  */
    II(0x001385f1, 0x1)   pushw(cs);                            /* push cs */
    II(0x001385f2, 0x3)   callw(0x001375b4, -0x1041);           /* call 0x1375b4 */
    II(0x001385f5, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
l_0x001385f8:
    II(0x001385f8, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x001385fb, 0x3)   mov(dx, memw_a16(ss, bp - 0xe));      /* mov dx, [bp-0xe] */
    II(0x001385fe, 0x3)   add(ax, 0x1);                         /* add ax, 0x1 */
    II(0x00138601, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00138604, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00138606, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00138608, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013860a, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013860c, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013860e, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138610, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138612, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138614, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138616, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138618, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013861a, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013861c, 0x3)   mov(bx, memw_a16(ss, bp - 0x4));      /* mov bx, [bp-0x4] */
    II(0x0013861f, 0x2)   mov(cx, bx);                          /* mov cx, bx */
    II(0x00138621, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x00138623, 0x2)   add(bx, cx);                          /* add bx, cx */
    II(0x00138625, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x00138627, 0x4)   les(si, ds, 0x1f60);                  /* les si, [0x1f60] */
    II(0x0013862b, 0x3)   mov(memw_a16(es, bx + si), ax);       /* mov [es:bx+si], ax */
    II(0x0013862e, 0x4)   mov(memw_a16(es, bx + si + 0x2), dx); /* mov [es:bx+si+0x2], dx */
    II(0x00138632, 0x4)   les(bx, ds, 0x1efc);                  /* les bx, [0x1efc] */
    II(0x00138636, 0x3)   dec(memb_a16(es, bx));                /* dec byte [es:bx] */
    II(0x00138639, 0x4)   or_(memb_a16(ss, bp - 0x5), -0x80 /* 0x80 */); /* or byte [bp-0x5], 0x80 */
    II(0x0013863d, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x00138640, 0x3)   mov(dx, memw_a16(ss, bp - 0x6));      /* mov dx, [bp-0x6] */
    II(0x00138643, 0x3)   xor_(ax, memw_a16(ss, bp + 0x6));     /* xor ax, [bp+0x6] */
    II(0x00138646, 0x3)   xor_(dx, memw_a16(ss, bp + 0x8));     /* xor dx, [bp+0x8] */
    II(0x00138649, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013864b, 0x3)   xor_(memw_a16(ss, bp - 0x8), ax);     /* xor [bp-0x8], ax */
    II(0x0013864e, 0x3)   xor_(memw_a16(ss, bp - 0x6), dx);     /* xor [bp-0x6], dx */
    II(0x00138651, 0x1)   pushw(ds);                            /* push ds */
    II(0x00138652, 0x3)   pushw(0xa6d);                         /* push word 0xa6d */
//    II(0x00138655, 0x1)   nop();                                /* nop  */
    II(0x00138656, 0x1)   pushw(cs);                            /* push cs */
    II(0x00138657, 0x3)   callw(0x0013104f, -0x760b);           /* call 0x13104f */
    II(0x0013865a, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013865d, 0x2)   jmpw(0x00138670, 0x11);               /* jmp 0x138670 */
//    II(0x0013865f, 0x1)   /* Недостижимый код. */
l_0x00138660:
    II(0x00138660, 0x4)   or_(memb_a16(ss, bp - 0x5), -0x80 /* 0x80 */); /* or byte [bp-0x5], 0x80 */
    II(0x00138664, 0x1)   pushw(ds);                            /* push ds */
    II(0x00138665, 0x3)   pushw(0xa75);                         /* push word 0xa75 */
//    II(0x00138668, 0x1)   nop();                                /* nop  */
    II(0x00138669, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013866a, 0x3)   callw(0x0013104f, -0x761e);           /* call 0x13104f */
    II(0x0013866d, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
l_0x00138670:
    II(0x00138670, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x00138673, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x00138676, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x00138679, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x0013867c, 0x4)   pushw(memw_a16(ds, 0x4fb6));          /* push word [0x4fb6] */
    II(0x00138680, 0x4)   pushw(memw_a16(ds, 0x4fb4));          /* push word [0x4fb4] */
    II(0x00138684, 0x3)   callw(0x00139235, 0xbae);             /* call 0x139235 */
    II(0x00138687, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0013868a, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x0013868d, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x00138690, 0x1)   pushw(ds);                            /* push ds */
    II(0x00138691, 0x3)   pushw(0xa81);                         /* push word 0xa81 */
//    II(0x00138694, 0x1)   nop();                                /* nop  */
    II(0x00138695, 0x1)   pushw(cs);                            /* push cs */
    II(0x00138696, 0x3)   callw(0x0013104f, -0x764a);           /* call 0x13104f */
    II(0x00138699, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013869c, 0x3)   jmpw(0x00138869, 0x1ca);              /* jmp 0x138869 */
//    II(0x0013869f, 0x1)   /* Недостижимый код. */
l_0x001386a0:
    II(0x001386a0, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x001386a3, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x001386a6, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x001386a9, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x001386ac, 0x1)   pushw(ds);                            /* push ds */
    II(0x001386ad, 0x3)   pushw(0xa84);                         /* push word 0xa84 */
//    II(0x001386b0, 0x1)   nop();                                /* nop  */
    II(0x001386b1, 0x1)   pushw(cs);                            /* push cs */
    II(0x001386b2, 0x3)   callw(0x0013104f, -0x7666);           /* call 0x13104f */
    II(0x001386b5, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x001386b8, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x001386bb, 0x3)   mov(dx, memw_a16(ss, bp - 0x6));      /* mov dx, [bp-0x6] */
    II(0x001386be, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x001386c0, 0x3)   cmp(ax, memw_a16(ss, bp + 0x6));      /* cmp ax, [bp+0x6] */
    II(0x001386c3, 0x2)   jnzw(0x001386ca, 0x5);                /* jnz 0x1386ca */
    II(0x001386c5, 0x3)   cmp(dx, memw_a16(ss, bp + 0x8));      /* cmp dx, [bp+0x8] */
    II(0x001386c8, 0x2)   jzw(0x001386e6, 0x1c);                /* jz 0x1386e6 */
l_0x001386ca:
    II(0x001386ca, 0x4)   les(di, ds, 0x4fb8);                  /* les di, [0x4fb8] */
    II(0x001386ce, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
    II(0x001386d0, 0x3)   mov(cx, 0x400);                       /* mov cx, 0x400 */
    II(0x001386d3, 0x3)   rep_a16 stosd_a16();                  /* rep stosd  */
    II(0x001386d6, 0x1)   pushw(ds);                            /* push ds */
    II(0x001386d7, 0x3)   pushw(0xa97);                         /* push word 0xa97 */
//    II(0x001386da, 0x1)   nop();                                /* nop  */
    II(0x001386db, 0x1)   pushw(cs);                            /* push cs */
    II(0x001386dc, 0x3)   callw(0x0013104f, -0x7690);           /* call 0x13104f */
    II(0x001386df, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001386e2, 0x3)   jmpw(0x00138869, 0x184);              /* jmp 0x138869 */
//    II(0x001386e5, 0x1)   /* Недостижимый код. */
l_0x001386e6:
    II(0x001386e6, 0x4)   les(bx, ds, 0x1efc);                  /* les bx, [0x1efc] */
    II(0x001386ea, 0x3)   inc(memb_a16(es, bx));                /* inc byte [es:bx] */
    II(0x001386ed, 0x1)   pushw(cs);                            /* push cs */
    II(0x001386ee, 0x3)   callw(0x00138d64, 0x673);             /* call 0x138d64 */
    II(0x001386f1, 0x5)   mov(memw_a16(ss, bp - 0x4), 0);       /* mov word [bp-0x4], 0x0 */
    II(0x001386f6, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x001386f9, 0x3)   mov(dx, memw_a16(ss, bp - 0xe));      /* mov dx, [bp-0xe] */
    II(0x001386fc, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x001386fe, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00138700, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00138702, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00138704, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138706, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138708, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013870a, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013870c, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013870e, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138710, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138712, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138714, 0x4)   les(bx, ds, 0x1f60);                  /* les bx, [0x1f60] */
    II(0x00138718, 0x3)   cmp(ax, memw_a16(es, bx));            /* cmp ax, [es:bx] */
    II(0x0013871b, 0x2)   jnzw(0x00138723, 0x6);                /* jnz 0x138723 */
    II(0x0013871d, 0x4)   cmp(dx, memw_a16(es, bx + 0x2));      /* cmp dx, [es:bx+0x2] */
    II(0x00138721, 0x2)   jzw(0x00138741, 0x1e);                /* jz 0x138741 */
l_0x00138723:
    II(0x00138723, 0x1)   pushw(dx);                            /* push dx */
    II(0x00138724, 0x1)   pushw(ax);                            /* push ax */
    II(0x00138725, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00138727, 0x1)   pushw(cs);                            /* push cs */
    II(0x00138728, 0x3)   callw(0x001389ec, 0x2c1);             /* call 0x1389ec */
    II(0x0013872b, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0013872e, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00138730, 0x2)   jzw(0x00138741, 0xf);                 /* jz 0x138741 */
    II(0x00138732, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00138734, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x00138736, 0x3)   pushw(0x926);                         /* push word 0x926 */
//    II(0x00138739, 0x1)   nop();                                /* nop  */
    II(0x0013873a, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013873b, 0x3)   callw(0x001375b4, -0x118a);           /* call 0x1375b4 */
    II(0x0013873e, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
l_0x00138741:
    II(0x00138741, 0x4)   pushw(memw_a16(ds, 0x4f82));          /* push word [0x4f82] */
    II(0x00138745, 0x4)   pushw(memw_a16(ds, 0x4f80));          /* push word [0x4f80] */
    II(0x00138749, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0013874c, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013874d, 0x3)   callw(0x00138ab4, 0x364);             /* call 0x138ab4 */
    II(0x00138750, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00138753, 0x3)   cmp(ax, 0x1000);                      /* cmp ax, 0x1000 */
    II(0x00138756, 0x2)   jnzw(0x0013875c, 0x4);                /* jnz 0x13875c */
    II(0x00138758, 0x2)   or_(dx, dx);                          /* or dx, dx */
    II(0x0013875a, 0x2)   jzw(0x0013876b, 0xf);                 /* jz 0x13876b */
l_0x0013875c:
    II(0x0013875c, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013875e, 0x2)   pushw(0x2);                           /* push 0x2 */
    II(0x00138760, 0x3)   pushw(0x926);                         /* push word 0x926 */
//    II(0x00138763, 0x1)   nop();                                /* nop  */
    II(0x00138764, 0x1)   pushw(cs);                            /* push cs */
    II(0x00138765, 0x3)   callw(0x001375b4, -0x11b4);           /* call 0x1375b4 */
    II(0x00138768, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
l_0x0013876b:
    II(0x0013876b, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x0013876e, 0x3)   mov(dx, memw_a16(ss, bp - 0xe));      /* mov dx, [bp-0xe] */
    II(0x00138771, 0x3)   add(ax, 0x1);                         /* add ax, 0x1 */
    II(0x00138774, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00138777, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00138779, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013877b, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013877d, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013877f, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138781, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138783, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138785, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00138787, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00138789, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013878b, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013878d, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013878f, 0x3)   mov(bx, memw_a16(ss, bp - 0x4));      /* mov bx, [bp-0x4] */
    II(0x00138792, 0x2)   mov(cx, bx);                          /* mov cx, bx */
    II(0x00138794, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x00138796, 0x2)   add(bx, cx);                          /* add bx, cx */
    II(0x00138798, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x0013879a, 0x4)   les(si, ds, 0x1f60);                  /* les si, [0x1f60] */
    II(0x0013879e, 0x3)   mov(memw_a16(es, bx + si), ax);       /* mov [es:bx+si], ax */
    II(0x001387a1, 0x4)   mov(memw_a16(es, bx + si + 0x2), dx); /* mov [es:bx+si+0x2], dx */
    II(0x001387a5, 0x4)   les(bx, ds, 0x1efc);                  /* les bx, [0x1efc] */
    II(0x001387a9, 0x3)   dec(memb_a16(es, bx));                /* dec byte [es:bx] */
    II(0x001387ac, 0x1)   pushw(ds);                            /* push ds */
    II(0x001387ad, 0x3)   mov(cx, 0x400);                       /* mov cx, 0x400 */
    II(0x001387b0, 0x4)   les(di, ds, 0x4fb8);                  /* les di, [0x4fb8] */
    II(0x001387b4, 0x4)   lds(si, ds, 0x4f80);                  /* lds si, [0x4f80] */
    II(0x001387b8, 0x3)   rep_a16 movsd_a16();                  /* rep movsd  */
    II(0x001387bb, 0x1)   popw(ds);                             /* pop ds */
    II(0x001387bc, 0x4)   and_(memb_a16(ss, bp - 0x5), 0x7f);   /* and byte [bp-0x5], 0x7f */
    II(0x001387c0, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x001387c3, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x001387c6, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x001387c9, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x001387cc, 0x4)   pushw(memw_a16(ds, 0x4fb6));          /* push word [0x4fb6] */
    II(0x001387d0, 0x4)   pushw(memw_a16(ds, 0x4fb4));          /* push word [0x4fb4] */
    II(0x001387d4, 0x3)   callw(0x00139235, 0xa5e);             /* call 0x139235 */
    II(0x001387d7, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x001387da, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x001387dd, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x001387e0, 0x1)   pushw(ds);                            /* push ds */
    II(0x001387e1, 0x3)   pushw(0xaa2);                         /* push word 0xaa2 */
//    II(0x001387e4, 0x1)   nop();                                /* nop  */
    II(0x001387e5, 0x1)   pushw(cs);                            /* push cs */
    II(0x001387e6, 0x3)   callw(0x0013104f, -0x779a);           /* call 0x13104f */
    II(0x001387e9, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001387ec, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x001387ef, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x001387f2, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x001387f5, 0x3)   sbb(dx, 0x1);                         /* sbb dx, 0x1 */
    II(0x001387f8, 0x1)   pushw(dx);                            /* push dx */
    II(0x001387f9, 0x1)   pushw(ax);                            /* push ax */
    II(0x001387fa, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x001387fe, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x00138802, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x00138804, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x00138806, 0x3)   callw(0x00139208, 0x9ff);             /* call 0x139208 */
    II(0x00138809, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013880c, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0013880f, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x00138812, 0x4)   and_(memb_a16(ss, bp - 0xc), -0x41 /* 0xbf */); /* and byte [bp-0xc], 0xbf */
    II(0x00138816, 0x1)   pushw(dx);                            /* push dx */
    II(0x00138817, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0013881a, 0x1)   pushw(di);                            /* push di */
    II(0x0013881b, 0x1)   pushw(si);                            /* push si */
    II(0x0013881c, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x00138820, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x00138824, 0x3)   callw(0x00139235, 0xa0e);             /* call 0x139235 */
    II(0x00138827, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0013882a, 0x5)   cmp(memw_a16(ds, 0x984), 0);          /* cmp word [0x984], 0x0 */
    II(0x0013882f, 0x2)   jzw(0x00138869, 0x38);                /* jz 0x138869 */
    II(0x00138831, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x00138835, 0x4)   mov(memb_a16(es, bx), 0x31);          /* mov byte [es:bx], 0x31 */
    II(0x00138839, 0x3)   mov(al, memb_a16(ds, 0x5130));        /* mov al, [0x5130] */
    II(0x0013883c, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x00138840, 0x4)   mov(memb_a16(es, bx + 0x1), al);      /* mov [es:bx+0x1], al */
    II(0x00138844, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x00138847, 0x3)   mov(dx, memw_a16(ss, bp - 0xe));      /* mov dx, [bp-0xe] */
    II(0x0013884a, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x0013884e, 0x4)   mov(memw_a16(es, bx + 0x2), ax);      /* mov [es:bx+0x2], ax */
    II(0x00138852, 0x4)   mov(memw_a16(es, bx + 0x4), dx);      /* mov [es:bx+0x4], dx */
    II(0x00138856, 0x4)   pushw(memw_a16(ds, 0x5167));          /* push word [0x5167] */
    II(0x0013885a, 0x4)   pushw(memw_a16(ds, 0x4fc6));          /* push word [0x4fc6] */
    II(0x0013885e, 0x4)   pushw(memw_a16(ds, 0x4fc4));          /* push word [0x4fc4] */
    II(0x00138862, 0x2)   pushw(0x4);                           /* push 0x4 */
//    II(0x00138864, 0x1)   nop();                                /* nop  */
    II(0x00138865, 0x1)   pushw(cs);                            /* push cs */
    II(0x00138866, 0x3)   callw(0x00140864, 0x7ffb);            /* call 0x140864 */
l_0x00138869:
    II(0x00138869, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0013886c, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013886d, 0x3)   pushw(0xaac);                         /* push word 0xaac */
//    II(0x00138870, 0x1)   nop();                                /* nop  */
    II(0x00138871, 0x1)   pushw(cs);                            /* push cs */
    II(0x00138872, 0x3)   callw(0x0013104f, -0x7826);           /* call 0x13104f */
    II(0x00138875, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00138878, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013887a, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013887b, 0x1)   popw(si);                             /* pop si */
    II(0x0013887c, 0x1)   popw(di);                             /* pop di */
    II(0x0013887d, 0x1)   leavew();                             /* leave  */
    II(0x0013887e, 0x1)   retfw();                              /* retf  */
FUNC_END

