FUNC_BEGIN(0x0013c48e, 0xc90e6d0e2990870d, 0x10, ({0xc8, 0xc, 0, 0, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0x8b, 0x46, 0xa, 0x8b, 0x56, 0xc, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x2d, 0, 0, 0x83, 0xda, 0x1, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x2b, 0xc0, 0x89, 0x46, 0xfa, 0x89, 0x46, 0xf8, 0xeb, 0x10, 0x83, 0x46, 0xf8, 0x1, 0x83, 0x56, 0xfa, 0, 0x83, 0x46, 0xfc, 0x1, 0x83, 0x56, 0xfe, 0, 0x8b, 0x46, 0xe, 0x8b, 0x56, 0x10, 0x39, 0x56, 0xfa, 0x77, 0x75, 0x72, 0x5, 0x39, 0x46, 0xf8, 0x73, 0x6e, 0xff, 0x76, 0x6, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0xe1, 0xcc, 0x83, 0xc4, 0xa, 0xff, 0x76, 0x8, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0xca, 0xcc, 0x83, 0xc4, 0xa, 0x80, 0x66, 0xf4, 0xfe, 0x8b, 0x46, 0xf4, 0x80, 0xe4, 0xf, 0x2b, 0xd2, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x8a, 0x6e, 0x12, 0xd0, 0xe5, 0x32, 0xe5, 0x25, 0, 0xe, 0x31, 0x46, 0xf4, 0x31, 0x56, 0xf6, 0xff, 0x76, 0xf6, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0xe0, 0xcc, 0x83, 0xc4, 0xc, 0xe9, 0x71, 0xff, 0x90, 0x1f, 0xc9, 0xcb}))
    II(0x0013c48e, 0x4)   enterw(0xc, 0);                       /* enter 0xc, 0x0 */
    II(0x0013c492, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013c493, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013c496, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013c498, 0x3)   mov(ax, memw_a16(ss, bp + 0xa));      /* mov ax, [bp+0xa] */
    II(0x0013c49b, 0x3)   mov(dx, memw_a16(ss, bp + 0xc));      /* mov dx, [bp+0xc] */
    II(0x0013c49e, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013c4a0, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013c4a2, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013c4a4, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013c4a6, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c4a8, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c4aa, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c4ac, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c4ae, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c4b0, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c4b2, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c4b4, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c4b6, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x0013c4b9, 0x3)   sbb(dx, 0x1);                         /* sbb dx, 0x1 */
    II(0x0013c4bc, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013c4bf, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0013c4c2, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013c4c4, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0013c4c7, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0013c4ca, 0x2)   jmpw(0x0013c4dc, 0x10);               /* jmp 0x13c4dc */
l_0x0013c4cc:
    II(0x0013c4cc, 0x4)   add(memw_a16(ss, bp - 0x8), 0x1);     /* add word [bp-0x8], 0x1 */
    II(0x0013c4d0, 0x4)   adc(memw_a16(ss, bp - 0x6), 0);       /* adc word [bp-0x6], 0x0 */
    II(0x0013c4d4, 0x4)   add(memw_a16(ss, bp - 0x4), 0x1);     /* add word [bp-0x4], 0x1 */
    II(0x0013c4d8, 0x4)   adc(memw_a16(ss, bp - 0x2), 0);       /* adc word [bp-0x2], 0x0 */
l_0x0013c4dc:
    II(0x0013c4dc, 0x3)   mov(ax, memw_a16(ss, bp + 0xe));      /* mov ax, [bp+0xe] */
    II(0x0013c4df, 0x3)   mov(dx, memw_a16(ss, bp + 0x10));     /* mov dx, [bp+0x10] */
    II(0x0013c4e2, 0x3)   cmp(memw_a16(ss, bp - 0x6), dx);      /* cmp [bp-0x6], dx */
    II(0x0013c4e5, 0x2)   jaw(0x0013c55c, 0x75);                /* ja 0x13c55c */
    II(0x0013c4e7, 0x2)   jbw(0x0013c4ee, 0x5);                 /* jb 0x13c4ee */
    II(0x0013c4e9, 0x3)   cmp(memw_a16(ss, bp - 0x8), ax);      /* cmp [bp-0x8], ax */
    II(0x0013c4ec, 0x2)   jaew(0x0013c55c, 0x6e);               /* jae 0x13c55c */
l_0x0013c4ee:
    II(0x0013c4ee, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0013c4f1, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0013c4f4, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0013c4f7, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013c4fb, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x0013c4ff, 0x3)   callw(0x001391e3, -0x331f);           /* call 0x1391e3 */
    II(0x0013c502, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013c505, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0013c508, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0013c50b, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0013c50e, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013c512, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013c516, 0x3)   callw(0x001391e3, -0x3336);           /* call 0x1391e3 */
    II(0x0013c519, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013c51c, 0x4)   and_(memb_a16(ss, bp - 0xc), -0x2 /* 0xfe */); /* and byte [bp-0xc], 0xfe */
    II(0x0013c520, 0x3)   mov(ax, memw_a16(ss, bp - 0xc));      /* mov ax, [bp-0xc] */
    II(0x0013c523, 0x3)   and_(ah, 0xf);                        /* and ah, 0xf */
    II(0x0013c526, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x0013c528, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0013c52b, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0013c52e, 0x3)   mov(ch, memb_a16(ss, bp + 0x12));     /* mov ch, [bp+0x12] */
    II(0x0013c531, 0x2)   shl(ch, 0x1);                         /* shl ch, 1 */
    II(0x0013c533, 0x2)   xor_(ah, ch);                         /* xor ah, ch */
    II(0x0013c535, 0x3)   and_(ax, 0xe00);                      /* and ax, 0xe00 */
    II(0x0013c538, 0x3)   xor_(memw_a16(ss, bp - 0xc), ax);     /* xor [bp-0xc], ax */
    II(0x0013c53b, 0x3)   xor_(memw_a16(ss, bp - 0xa), dx);     /* xor [bp-0xa], dx */
    II(0x0013c53e, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0013c541, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0013c544, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0013c547, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0013c54a, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x0013c54e, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x0013c552, 0x3)   callw(0x00139235, -0x3320);           /* call 0x139235 */
    II(0x0013c555, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0013c558, 0x3)   jmpw(0x0013c4cc, -0x8f);              /* jmp 0x13c4cc */
//    II(0x0013c55b, 0x1)   /* Недостижимый код. */
l_0x0013c55c:
    II(0x0013c55c, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013c55d, 0x1)   leavew();                             /* leave  */
    II(0x0013c55e, 0x1)   retfw();                              /* retf  */
FUNC_END

