FUNC_BEGIN(0x0015874d, 0x6ccc1bde1d58517b, 0x10, ({0xc8, 0x6, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0xa8, 0, 0x8e, 0xd8, 0x8e, 0x6, 0xac, 0x3f, 0x26, 0x83, 0xe, 0x70, 0xa, 0x4, 0x80, 0x3e, 0xeb, 0x17, 0, 0x74, 0x3, 0xe9, 0x4e, 0, 0xc4, 0x5e, 0x8, 0x26, 0x83, 0x7f, 0x2c, 0xd, 0x74, 0x3, 0xe9, 0x41, 0, 0xfe, 0x6, 0xeb, 0x17, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0x90, 0xe, 0xe8, 0x55, 0xf9, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xfa, 0xfe, 0xe, 0xeb, 0x17, 0x83, 0x7e, 0xfa, 0, 0x75, 0x3, 0xe9, 0x1f, 0, 0x8e, 0x6, 0xb0, 0x3f, 0x26, 0x80, 0x3e, 0x84, 0xd, 0, 0x75, 0x3, 0xe9, 0xa, 0, 0x8e, 0x6, 0xac, 0x3f, 0x26, 0x83, 0x26, 0x70, 0xa, 0x3, 0xb8, 0, 0, 0xe9, 0xc, 0x1, 0x80, 0x3e, 0xeb, 0x17, 0, 0x74, 0x3, 0xe9, 0x41, 0, 0xfe, 0x6, 0xeb, 0x17, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0x90, 0xe, 0xe8, 0xa3, 0xfa, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xfa, 0xfe, 0xe, 0xeb, 0x17, 0x83, 0x7e, 0xfa, 0, 0x75, 0x3, 0xe9, 0x1f, 0, 0x8e, 0x6, 0xb0, 0x3f, 0x26, 0x80, 0x3e, 0x84, 0xd, 0, 0x75, 0x3, 0xe9, 0xa, 0, 0x8e, 0x6, 0xac, 0x3f, 0x26, 0x83, 0x26, 0x70, 0xa, 0x3, 0xb8, 0, 0, 0xe9, 0xc1, 0, 0x80, 0x3e, 0xeb, 0x17, 0, 0x75, 0x3, 0xe9, 0x3, 0, 0xe9, 0xa9, 0, 0xfe, 0x6, 0xeb, 0x17, 0xc4, 0x5e, 0x8, 0x26, 0x83, 0x7f, 0x2c, 0xe, 0x7f, 0x3, 0xe9, 0xb, 0, 0xc7, 0x46, 0xfc, 0xc2, 0x17, 0x8c, 0x5e, 0xfe, 0xe9, 0x18, 0, 0xc4, 0x5e, 0x8, 0x26, 0x8b, 0x5f, 0x2c, 0xc1, 0xe3, 0x2, 0x8b, 0x87, 0x6c, 0x16, 0x8b, 0x97, 0x6e, 0x16, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x34, 0x26, 0xff, 0x77, 0x32, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x36, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0x77, 0x2c, 0x1e, 0x68, 0xca, 0x17, 0x68, 0xd1, 0x7, 0xe8, 0xde, 0x87, 0x83, 0xc4, 0x12, 0xc4, 0x5e, 0x8, 0x26, 0x83, 0x7f, 0x2c, 0xc, 0x74, 0x3, 0xe9, 0x27, 0, 0x8e, 0x6, 0xb2, 0x3f, 0x26, 0xa1, 0x4e, 0xa, 0xc4, 0x5e, 0x8, 0x26, 0x89, 0x47, 0x2, 0x8e, 0x6, 0xb4, 0x3f, 0x26, 0xa1, 0x4a, 0xa, 0x26, 0x8b, 0x16, 0x4c, 0xa, 0xc4, 0x5e, 0x8, 0x26, 0x89, 0x47, 0x18, 0x26, 0x89, 0x57, 0x1a, 0x6a, 0x1, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0x90, 0xe, 0xe8, 0x43, 0xfd, 0x83, 0xc4, 0x6, 0xc6, 0x6, 0xeb, 0x17, 0, 0x68, 0xd1, 0x7, 0x9a, 0x9f, 0x34, 0x80, 0, 0x83, 0xc4, 0x2, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0015874d, 0x4)   enterw(0x6, 0);                       /* enter 0x6, 0x0 */
    II(0x00158751, 0x1)   pushw(di);                            /* push di */
    II(0x00158752, 0x1)   pushw(si);                            /* push si */
    II(0x00158753, 0x1)   pushw(ds);                            /* push ds */
    II(0x00158754, 0x3)   mov(ax, 0xa8);                        /* mov ax, 0xa8 */
    II(0x00158757, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00158759, 0x4)   mov(es, memw_a16(ds, 0x3fac));        /* mov es, [0x3fac] */
    II(0x0015875d, 0x6)   or_(memw_a16(es, 0xa70), 0x4);        /* or word [es:0xa70], 0x4 */
    II(0x00158763, 0x5)   cmp(memb_a16(ds, 0x17eb), 0);         /* cmp byte [0x17eb], 0x0 */
    II(0x00158768, 0x2)   jzw(0x0015876d, 0x3);                 /* jz 0x15876d */
    II(0x0015876a, 0x3)   jmpw(0x001587bb, 0x4e);               /* jmp 0x1587bb */
l_0x0015876d:
    II(0x0015876d, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158770, 0x5)   cmp(memw_a16(es, bx + 0x2c), 0xd);    /* cmp word [es:bx+0x2c], 0xd */
    II(0x00158775, 0x2)   jzw(0x0015877a, 0x3);                 /* jz 0x15877a */
    II(0x00158777, 0x3)   jmpw(0x001587bb, 0x41);               /* jmp 0x1587bb */
l_0x0015877a:
    II(0x0015877a, 0x4)   inc(memb_a16(ds, 0x17eb));            /* inc byte [0x17eb] */
    II(0x0015877e, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x00158781, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
//    II(0x00158784, 0x1)   nop();                                /* nop  */
    II(0x00158785, 0x1)   pushw(cs);                            /* push cs */
    II(0x00158786, 0x3)   callw(0x001580de, -0x6ab);            /* call 0x1580de */
    II(0x00158789, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0015878c, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0015878f, 0x4)   dec(memb_a16(ds, 0x17eb));            /* dec byte [0x17eb] */
    II(0x00158793, 0x4)   cmp(memw_a16(ss, bp - 0x6), 0);       /* cmp word [bp-0x6], 0x0 */
    II(0x00158797, 0x2)   jnzw(0x0015879c, 0x3);                /* jnz 0x15879c */
    II(0x00158799, 0x3)   jmpw(0x001587bb, 0x1f);               /* jmp 0x1587bb */
l_0x0015879c:
    II(0x0015879c, 0x4)   mov(es, memw_a16(ds, 0x3fb0));        /* mov es, [0x3fb0] */
    II(0x001587a0, 0x6)   cmp(memb_a16(es, 0xd84), 0);          /* cmp byte [es:0xd84], 0x0 */
    II(0x001587a6, 0x2)   jnzw(0x001587ab, 0x3);                /* jnz 0x1587ab */
    II(0x001587a8, 0x3)   jmpw(0x001587b5, 0xa);                /* jmp 0x1587b5 */
l_0x001587ab:
    II(0x001587ab, 0x4)   mov(es, memw_a16(ds, 0x3fac));        /* mov es, [0x3fac] */
    II(0x001587af, 0x6)   and_(memw_a16(es, 0xa70), 0x3);       /* and word [es:0xa70], 0x3 */
l_0x001587b5:
    II(0x001587b5, 0x3)   mov(ax, 0);                           /* mov ax, 0x0 */
    II(0x001587b8, 0x3)   jmpw(0x001588c7, 0x10c);              /* jmp 0x1588c7 */
l_0x001587bb:
    II(0x001587bb, 0x5)   cmp(memb_a16(ds, 0x17eb), 0);         /* cmp byte [0x17eb], 0x0 */
    II(0x001587c0, 0x2)   jzw(0x001587c5, 0x3);                 /* jz 0x1587c5 */
    II(0x001587c2, 0x3)   jmpw(0x00158806, 0x41);               /* jmp 0x158806 */
l_0x001587c5:
    II(0x001587c5, 0x4)   inc(memb_a16(ds, 0x17eb));            /* inc byte [0x17eb] */
    II(0x001587c9, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x001587cc, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
//    II(0x001587cf, 0x1)   nop();                                /* nop  */
    II(0x001587d0, 0x1)   pushw(cs);                            /* push cs */
    II(0x001587d1, 0x3)   callw(0x00158277, -0x55d);            /* call 0x158277 */
    II(0x001587d4, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001587d7, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x001587da, 0x4)   dec(memb_a16(ds, 0x17eb));            /* dec byte [0x17eb] */
    II(0x001587de, 0x4)   cmp(memw_a16(ss, bp - 0x6), 0);       /* cmp word [bp-0x6], 0x0 */
    II(0x001587e2, 0x2)   jnzw(0x001587e7, 0x3);                /* jnz 0x1587e7 */
    II(0x001587e4, 0x3)   jmpw(0x00158806, 0x1f);               /* jmp 0x158806 */
l_0x001587e7:
    II(0x001587e7, 0x4)   mov(es, memw_a16(ds, 0x3fb0));        /* mov es, [0x3fb0] */
    II(0x001587eb, 0x6)   cmp(memb_a16(es, 0xd84), 0);          /* cmp byte [es:0xd84], 0x0 */
    II(0x001587f1, 0x2)   jnzw(0x001587f6, 0x3);                /* jnz 0x1587f6 */
    II(0x001587f3, 0x3)   jmpw(0x00158800, 0xa);                /* jmp 0x158800 */
l_0x001587f6:
    II(0x001587f6, 0x4)   mov(es, memw_a16(ds, 0x3fac));        /* mov es, [0x3fac] */
    II(0x001587fa, 0x6)   and_(memw_a16(es, 0xa70), 0x3);       /* and word [es:0xa70], 0x3 */
l_0x00158800:
    II(0x00158800, 0x3)   mov(ax, 0);                           /* mov ax, 0x0 */
    II(0x00158803, 0x3)   jmpw(0x001588c7, 0xc1);               /* jmp 0x1588c7 */
l_0x00158806:
    II(0x00158806, 0x5)   cmp(memb_a16(ds, 0x17eb), 0);         /* cmp byte [0x17eb], 0x0 */
    II(0x0015880b, 0x2)   jnzw(0x00158810, 0x3);                /* jnz 0x158810 */
    II(0x0015880d, 0x3)   jmpw(0x00158813, 0x3);                /* jmp 0x158813 */
l_0x00158810:
    II(0x00158810, 0x3)   jmpw(0x001588bc, 0xa9);               /* jmp 0x1588bc */
l_0x00158813:
    II(0x00158813, 0x4)   inc(memb_a16(ds, 0x17eb));            /* inc byte [0x17eb] */
    II(0x00158817, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015881a, 0x5)   cmp(memw_a16(es, bx + 0x2c), 0xe);    /* cmp word [es:bx+0x2c], 0xe */
    II(0x0015881f, 0x2)   jgw(0x00158824, 0x3);                 /* jg 0x158824 */
    II(0x00158821, 0x3)   jmpw(0x0015882f, 0xb);                /* jmp 0x15882f */
l_0x00158824:
    II(0x00158824, 0x5)   mov(memw_a16(ss, bp - 0x4), 0x17c2);  /* mov word [bp-0x4], 0x17c2 */
    II(0x00158829, 0x3)   mov(memw_a16(ss, bp - 0x2), ds);      /* mov [bp-0x2], ds */
    II(0x0015882c, 0x3)   jmpw(0x00158847, 0x18);               /* jmp 0x158847 */
l_0x0015882f:
    II(0x0015882f, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158832, 0x4)   mov(bx, memw_a16(es, bx + 0x2c));     /* mov bx, [es:bx+0x2c] */
    II(0x00158836, 0x3)   shl(bx, 0x2);                         /* shl bx, 0x2 */
    II(0x00158839, 0x4)   mov(ax, memw_a16(ds, bx + 0x166c));   /* mov ax, [bx+0x166c] */
    II(0x0015883d, 0x4)   mov(dx, memw_a16(ds, bx + 0x166e));   /* mov dx, [bx+0x166e] */
    II(0x00158841, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00158844, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
l_0x00158847:
    II(0x00158847, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015884a, 0x4)   pushw(memw_a16(es, bx + 0x34));       /* push word [es:bx+0x34] */
    II(0x0015884e, 0x4)   pushw(memw_a16(es, bx + 0x32));       /* push word [es:bx+0x32] */
    II(0x00158852, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158855, 0x4)   pushw(memw_a16(es, bx + 0x36));       /* push word [es:bx+0x36] */
    II(0x00158859, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0015885c, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0015885f, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158862, 0x4)   pushw(memw_a16(es, bx + 0x2c));       /* push word [es:bx+0x2c] */
    II(0x00158866, 0x1)   pushw(ds);                            /* push ds */
    II(0x00158867, 0x3)   pushw(0x17ca);                        /* push word 0x17ca */
    II(0x0015886a, 0x3)   pushw(0x7d1);                         /* push word 0x7d1 */
    II(0x0015886d, 0x3)   callw(0x0015104e, -0x7822);           /* call 0x15104e */
    II(0x00158870, 0x3)   add(sp, 0x12);                        /* add sp, 0x12 */
    II(0x00158873, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x00158876, 0x5)   cmp(memw_a16(es, bx + 0x2c), 0xc);    /* cmp word [es:bx+0x2c], 0xc */
    II(0x0015887b, 0x2)   jzw(0x00158880, 0x3);                 /* jz 0x158880 */
    II(0x0015887d, 0x3)   jmpw(0x001588a7, 0x27);               /* jmp 0x1588a7 */
l_0x00158880:
    II(0x00158880, 0x4)   mov(es, memw_a16(ds, 0x3fb2));        /* mov es, [0x3fb2] */
    II(0x00158884, 0x4)   mov(ax, memw_a16(es, 0xa4e));         /* mov ax, [es:0xa4e] */
    II(0x00158888, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015888b, 0x4)   mov(memw_a16(es, bx + 0x2), ax);      /* mov [es:bx+0x2], ax */
    II(0x0015888f, 0x4)   mov(es, memw_a16(ds, 0x3fb4));        /* mov es, [0x3fb4] */
    II(0x00158893, 0x4)   mov(ax, memw_a16(es, 0xa4a));         /* mov ax, [es:0xa4a] */
    II(0x00158897, 0x5)   mov(dx, memw_a16(es, 0xa4c));         /* mov dx, [es:0xa4c] */
    II(0x0015889c, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015889f, 0x4)   mov(memw_a16(es, bx + 0x18), ax);     /* mov [es:bx+0x18], ax */
    II(0x001588a3, 0x4)   mov(memw_a16(es, bx + 0x1a), dx);     /* mov [es:bx+0x1a], dx */
l_0x001588a7:
    II(0x001588a7, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x001588a9, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x001588ac, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
//    II(0x001588af, 0x1)   nop();                                /* nop  */
    II(0x001588b0, 0x1)   pushw(cs);                            /* push cs */
    II(0x001588b1, 0x3)   callw(0x001585f7, -0x2bd);            /* call 0x1585f7 */
    II(0x001588b4, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x001588b7, 0x5)   mov(memb_a16(ds, 0x17eb), 0);         /* mov byte [0x17eb], 0x0 */
l_0x001588bc:
    II(0x001588bc, 0x3)   pushw(0x7d1);                         /* push word 0x7d1 */
    II(0x001588bf, 0x5)   callw_far_abs(0x80, 0x349f);          /* call word 0x80:0x349f */
    II(0x001588c4, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
l_0x001588c7:
    II(0x001588c7, 0x1)   popw(ds);                             /* pop ds */
    II(0x001588c8, 0x1)   popw(si);                             /* pop si */
    II(0x001588c9, 0x1)   popw(di);                             /* pop di */
    II(0x001588ca, 0x1)   leavew();                             /* leave  */
    II(0x001588cb, 0x1)   retfw();                              /* retf  */
FUNC_END

