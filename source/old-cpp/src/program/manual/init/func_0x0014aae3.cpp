FUNC_BEGIN(0x0014aae3, 0x781cffc21fa08e87, 0x10, ({0x80, 0x3e, 0x2e, 0, 0, 0x74, 0xeb, 0x6, 0xb8, 0x8, 0, 0x8e, 0xc0, 0x83, 0xe7, 0xf8, 0x26, 0x8b, 0x45, 0x2, 0x26, 0x8a, 0x4d, 0x4, 0x26, 0x8a, 0x6d, 0x7, 0x7}))
    II(0x0014aae3, 0x5)   cmp(memb_a16(ds, 0x2e), 0);           /* cmp byte [0x2e], 0x0 */
    II(0x0014aae8, 0x2)   jzw_func(0x0014aad5, -0x15);          /* jz 0x14aad5 */
    II(0x0014aaea, 0x1)   pushw(es);                            /* push es */
    II(0x0014aaeb, 0x3)   mov(ax, 0x8);                         /* mov ax, 0x8 */
    II(0x0014aaee, 0x2)   mov(es, ax);                          /* mov es, ax */
    II(0x0014aaf0, 0x3)   and_(di, -0x8 /* 0xf8 */);            /* and di, 0xf8 */
    II(0x0014aaf3, 0x4)   mov(ax, memw_a16(es, di + 0x2));      /* mov ax, [es:di+0x2] */
    II(0x0014aaf7, 0x4)   mov(cl, memb_a16(es, di + 0x4));      /* mov cl, [es:di+0x4] */
    II(0x0014aafb, 0x4)   mov(ch, memb_a16(es, di + 0x7));      /* mov ch, [es:di+0x7] */
    II(0x0014aaff, 0x1)   popw(es);                             /* pop es */
    II(0x0014ab00, 0)     jmpd_func(0x0014ab00, 0);             /* Принудительное завершение функции. */
FUNC_END

