FUNC_BEGIN(0x00135242, 0x9caee8a5d36c2783, 0x10, ({0xc8, 0x2a, 0, 0, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0x1e, 0x68, 0xa2, 0x2, 0x90, 0xe, 0xe8, 0x9b, 0x9b, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xb, 0xd0, 0x75, 0x6, 0xb8, 0x1, 0, 0xe9, 0x48, 0x2, 0x1e, 0x68, 0xab, 0x2, 0xff, 0x76, 0xfe, 0x50, 0x90, 0xe, 0xe8, 0xfb, 0x99, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xe0, 0x89, 0x56, 0xe2, 0xb, 0xd0, 0x74, 0x42, 0x1e, 0x68, 0xb9, 0x2, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0xdf, 0x99, 0x83, 0xc4, 0x8, 0xa3, 0xfc, 0x1e, 0x89, 0x16, 0xfe, 0x1e, 0x8b, 0xc2, 0xb, 0x6, 0xfc, 0x1e, 0x74, 0x21, 0x1e, 0x68, 0xc5, 0x2, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0xbe, 0x99, 0x83, 0xc4, 0x8, 0xa3, 0xc8, 0x4f, 0x89, 0x16, 0xca, 0x4f, 0x8b, 0xc2, 0xb, 0x6, 0xc8, 0x4f, 0x75, 0x10, 0x68, 0xf6, 0x8, 0xe, 0xe8, 0xe9, 0x22, 0x83, 0xc4, 0x2, 0xb8, 0x1, 0, 0xe9, 0xdc, 0x1, 0x1e, 0x68, 0xce, 0x2, 0x90, 0xe, 0xe8, 0x13, 0x9b, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xb, 0xd0, 0x75, 0x6, 0xb8, 0x1, 0, 0xe9, 0xc0, 0x1, 0x1e, 0x68, 0xde, 0x2, 0x1e, 0x68, 0xd9, 0x2, 0xe8, 0x6e, 0xa2, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xb, 0xd0, 0x74, 0x15, 0xff, 0x5e, 0xf8, 0x52, 0x50, 0x1e, 0x68, 0xe9, 0x2, 0xe8, 0x9f, 0xa3, 0xb, 0xc0, 0x7d, 0x5, 0xc6, 0x6, 0x5, 0, 0x1, 0x1e, 0x68, 0xf1, 0x2, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0x47, 0x99, 0x83, 0xc4, 0x8, 0xa3, 0xdc, 0x1f, 0x89, 0x16, 0xde, 0x1f, 0x8b, 0xc2, 0xb, 0x6, 0xdc, 0x1f, 0x74, 0xf, 0xff, 0x1e, 0xdc, 0x1f, 0xb, 0xc0, 0x74, 0x7, 0xb8, 0x1, 0, 0x1f, 0xc9, 0xcb, 0x90, 0x1e, 0x68, 0xf6, 0x2, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0x17, 0x99, 0x83, 0xc4, 0x8, 0xa3, 0xac, 0x4f, 0x89, 0x16, 0xae, 0x4f, 0x8b, 0xc2, 0xb, 0x6, 0xac, 0x4f, 0x75, 0x7, 0xb8, 0x1, 0, 0x1f, 0xc9, 0xcb, 0x90, 0x1e, 0x68, 0x6, 0x3, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0xef, 0x98, 0x83, 0xc4, 0x8, 0xa3, 0xb0, 0x4f, 0x89, 0x16, 0xb2, 0x4f, 0x8b, 0xc2, 0xb, 0x6, 0xb0, 0x4f, 0x75, 0x7, 0xb8, 0x1, 0, 0x1f, 0xc9, 0xcb, 0x90, 0x1e, 0x68, 0x14, 0x3, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0xc7, 0x98, 0x83, 0xc4, 0x8, 0xa3, 0x54, 0x1f, 0x89, 0x16, 0x56, 0x1f, 0x8b, 0xc2, 0xb, 0x6, 0x54, 0x1f, 0x75, 0x7, 0xb8, 0x1, 0, 0x1f, 0xc9, 0xcb, 0x90, 0x1e, 0x68, 0x1c, 0x3, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0x9f, 0x98, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xd6, 0x89, 0x56, 0xd8, 0xb, 0xd0, 0x74, 0x6c, 0x68, 0x58, 0x3e, 0x68, 0x8a, 0x46, 0x90, 0xe, 0xe8, 0x47, 0x92, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xda, 0x89, 0x56, 0xdc, 0x8b, 0xc2, 0xb, 0x46, 0xda, 0x74, 0x51, 0x8b, 0xc2, 0x89, 0x46, 0xde, 0x8b, 0x46, 0xe0, 0x8b, 0x56, 0xe2, 0xc4, 0x5e, 0xda, 0x26, 0x89, 0x7, 0x26, 0x89, 0x57, 0x2, 0xc7, 0x46, 0xda, 0x8e, 0x46, 0xc7, 0x46, 0xdc, 0x58, 0x3e, 0x8b, 0x46, 0xde, 0x89, 0x46, 0xdc, 0x8b, 0x46, 0xd6, 0x8b, 0x56, 0xd8, 0xc4, 0x5e, 0xda, 0x26, 0x89, 0x7, 0x26, 0x89, 0x57, 0x2, 0xff, 0x76, 0xdc, 0xff, 0x76, 0xda, 0x90, 0xe, 0xe8, 0x1f, 0x93, 0x83, 0xc4, 0x4, 0xc7, 0x6, 0xe0, 0x1f, 0x92, 0x46, 0xc7, 0x6, 0xe2, 0x1f, 0x58, 0x3e, 0xeb, 0xd, 0x8b, 0x46, 0xe0, 0x8b, 0x56, 0xe2, 0xa3, 0xe0, 0x1f, 0x89, 0x16, 0xe2, 0x1f, 0xe, 0xe8, 0xad, 0x1f, 0x2b, 0xc0, 0x89, 0x46, 0xe6, 0x89, 0x46, 0xe4, 0xc7, 0x46, 0xf6, 0, 0xff, 0xc7, 0x46, 0xf2, 0, 0xe, 0x8d, 0x46, 0xe4, 0x16, 0x50, 0x6a, 0xff, 0x90, 0xe, 0xe8, 0x74, 0x96, 0x83, 0xc4, 0x6, 0x8b, 0x5e, 0xf6, 0x8b, 0x4e, 0xf2, 0x8e, 0xc1, 0x89, 0x1e, 0x18, 0x20, 0x8c, 0x6, 0x1a, 0x20, 0x26, 0x8b, 0x47, 0x4, 0x26, 0x8b, 0x57, 0x6, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xa3, 0x8c, 0, 0x89, 0x16, 0x8e, 0, 0x2b, 0xc0, 0x1f, 0xc9, 0xcb, 0x1f, 0xc9, 0xcb}))
    II(0x00135242, 0x4)   enterw(0x2a, 0);                      /* enter 0x2a, 0x0 */
    II(0x00135246, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135247, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013524a, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013524c, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013524d, 0x3)   pushw(0x2a2);                         /* push word 0x2a2 */
//    II(0x00135250, 0x1)   nop();                                /* nop  */
    II(0x00135251, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135252, 0x3)   callw(0x0012edf0, -0x6465);           /* call 0x12edf0 */
    II(0x00135255, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x00135258, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013525b, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0013525e, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x00135260, 0x2)   jnzw(0x00135268, 0x6);                /* jnz 0x135268 */
    II(0x00135262, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135265, 0x3)   jmpw(0x001354b0, 0x248);              /* jmp 0x1354b0 */
l_0x00135268:
    II(0x00135268, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135269, 0x3)   pushw(0x2ab);                         /* push word 0x2ab */
    II(0x0013526c, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0013526f, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00135270, 0x1)   nop();                                /* nop  */
    II(0x00135271, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135272, 0x3)   callw(0x0012ec70, -0x6605);           /* call 0x12ec70 */
    II(0x00135275, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00135278, 0x3)   mov(memw_a16(ss, bp - 0x20), ax);     /* mov [bp-0x20], ax */
    II(0x0013527b, 0x3)   mov(memw_a16(ss, bp - 0x1e), dx);     /* mov [bp-0x1e], dx */
    II(0x0013527e, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x00135280, 0x2)   jzw(0x001352c4, 0x42);                /* jz 0x1352c4 */
    II(0x00135282, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135283, 0x3)   pushw(0x2b9);                         /* push word 0x2b9 */
    II(0x00135286, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00135289, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x0013528c, 0x1)   nop();                                /* nop  */
    II(0x0013528d, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013528e, 0x3)   callw(0x0012ec70, -0x6621);           /* call 0x12ec70 */
    II(0x00135291, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00135294, 0x3)   mov(memw_a16(ds, 0x1efc), ax);        /* mov [0x1efc], ax */
    II(0x00135297, 0x4)   mov(memw_a16(ds, 0x1efe), dx);        /* mov [0x1efe], dx */
    II(0x0013529b, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0013529d, 0x4)   or_(ax, memw_a16(ds, 0x1efc));        /* or ax, [0x1efc] */
    II(0x001352a1, 0x2)   jzw(0x001352c4, 0x21);                /* jz 0x1352c4 */
    II(0x001352a3, 0x1)   pushw(ds);                            /* push ds */
    II(0x001352a4, 0x3)   pushw(0x2c5);                         /* push word 0x2c5 */
    II(0x001352a7, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x001352aa, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x001352ad, 0x1)   nop();                                /* nop  */
    II(0x001352ae, 0x1)   pushw(cs);                            /* push cs */
    II(0x001352af, 0x3)   callw(0x0012ec70, -0x6642);           /* call 0x12ec70 */
    II(0x001352b2, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001352b5, 0x3)   mov(memw_a16(ds, 0x4fc8), ax);        /* mov [0x4fc8], ax */
    II(0x001352b8, 0x4)   mov(memw_a16(ds, 0x4fca), dx);        /* mov [0x4fca], dx */
    II(0x001352bc, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x001352be, 0x4)   or_(ax, memw_a16(ds, 0x4fc8));        /* or ax, [0x4fc8] */
    II(0x001352c2, 0x2)   jnzw(0x001352d4, 0x10);               /* jnz 0x1352d4 */
l_0x001352c4:
    II(0x001352c4, 0x3)   pushw(0x8f6);                         /* push word 0x8f6 */
    II(0x001352c7, 0x1)   pushw(cs);                            /* push cs */
    II(0x001352c8, 0x3)   callw(0x001375b4, 0x22e9);            /* call 0x1375b4 */
    II(0x001352cb, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x001352ce, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x001352d1, 0x3)   jmpw(0x001354b0, 0x1dc);              /* jmp 0x1354b0 */
l_0x001352d4:
    II(0x001352d4, 0x1)   pushw(ds);                            /* push ds */
    II(0x001352d5, 0x3)   pushw(0x2ce);                         /* push word 0x2ce */
//    II(0x001352d8, 0x1)   nop();                                /* nop  */
    II(0x001352d9, 0x1)   pushw(cs);                            /* push cs */
    II(0x001352da, 0x3)   callw(0x0012edf0, -0x64ed);           /* call 0x12edf0 */
    II(0x001352dd, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001352e0, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x001352e3, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x001352e6, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x001352e8, 0x2)   jnzw(0x001352f0, 0x6);                /* jnz 0x1352f0 */
    II(0x001352ea, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x001352ed, 0x3)   jmpw(0x001354b0, 0x1c0);              /* jmp 0x1354b0 */
l_0x001352f0:
    II(0x001352f0, 0x1)   pushw(ds);                            /* push ds */
    II(0x001352f1, 0x3)   pushw(0x2de);                         /* push word 0x2de */
    II(0x001352f4, 0x1)   pushw(ds);                            /* push ds */
    II(0x001352f5, 0x3)   pushw(0x2d9);                         /* push word 0x2d9 */
    II(0x001352f8, 0x3)   callw(0x0012f569, -0x5d92);           /* call 0x12f569 */
    II(0x001352fb, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x001352fe, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x00135301, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x00135303, 0x2)   jzw(0x0013531a, 0x15);                /* jz 0x13531a */
    II(0x00135305, 0x3)   callw_a16_far_ind(ss, bp - 0x8);      /* call word far [bp-0x8] */
    II(0x00135308, 0x1)   pushw(dx);                            /* push dx */
    II(0x00135309, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013530a, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013530b, 0x3)   pushw(0x2e9);                         /* push word 0x2e9 */
    II(0x0013530e, 0x3)   callw(0x0012f6b0, -0x5c61);           /* call 0x12f6b0 */
    II(0x00135311, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00135313, 0x2)   jgew(0x0013531a, 0x5);                /* jge 0x13531a */
    II(0x00135315, 0x5)   mov(memb_a16(ds, 0x5), 0x1);          /* mov byte [0x5], 0x1 */
l_0x0013531a:
    II(0x0013531a, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013531b, 0x3)   pushw(0x2f1);                         /* push word 0x2f1 */
    II(0x0013531e, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00135321, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x00135324, 0x1)   nop();                                /* nop  */
    II(0x00135325, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135326, 0x3)   callw(0x0012ec70, -0x66b9);           /* call 0x12ec70 */
    II(0x00135329, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013532c, 0x3)   mov(memw_a16(ds, 0x1fdc), ax);        /* mov [0x1fdc], ax */
    II(0x0013532f, 0x4)   mov(memw_a16(ds, 0x1fde), dx);        /* mov [0x1fde], dx */
    II(0x00135333, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x00135335, 0x4)   or_(ax, memw_a16(ds, 0x1fdc));        /* or ax, [0x1fdc] */
    II(0x00135339, 0x2)   jzw(0x0013534a, 0xf);                 /* jz 0x13534a */
    II(0x0013533b, 0x4)   callw_a16_far_ind(ds, 0x1fdc);        /* call word far [0x1fdc] */
    II(0x0013533f, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00135341, 0x2)   jzw(0x0013534a, 0x7);                 /* jz 0x13534a */
    II(0x00135343, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135346, 0x1)   popw(ds);                             /* pop ds */
    II(0x00135347, 0x1)   leavew();                             /* leave  */
    II(0x00135348, 0x1)   retfw();                              /* retf  */
//    II(0x00135349, 0x1)   /* Недостижимый код. */
l_0x0013534a:
    II(0x0013534a, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013534b, 0x3)   pushw(0x2f6);                         /* push word 0x2f6 */
    II(0x0013534e, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00135351, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x00135354, 0x1)   nop();                                /* nop  */
    II(0x00135355, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135356, 0x3)   callw(0x0012ec70, -0x66e9);           /* call 0x12ec70 */
    II(0x00135359, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013535c, 0x3)   mov(memw_a16(ds, 0x4fac), ax);        /* mov [0x4fac], ax */
    II(0x0013535f, 0x4)   mov(memw_a16(ds, 0x4fae), dx);        /* mov [0x4fae], dx */
    II(0x00135363, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x00135365, 0x4)   or_(ax, memw_a16(ds, 0x4fac));        /* or ax, [0x4fac] */
    II(0x00135369, 0x2)   jnzw(0x00135372, 0x7);                /* jnz 0x135372 */
    II(0x0013536b, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x0013536e, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013536f, 0x1)   leavew();                             /* leave  */
    II(0x00135370, 0x1)   retfw();                              /* retf  */
//    II(0x00135371, 0x1)   /* Недостижимый код. */
l_0x00135372:
    II(0x00135372, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135373, 0x3)   pushw(0x306);                         /* push word 0x306 */
    II(0x00135376, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00135379, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x0013537c, 0x1)   nop();                                /* nop  */
    II(0x0013537d, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013537e, 0x3)   callw(0x0012ec70, -0x6711);           /* call 0x12ec70 */
    II(0x00135381, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00135384, 0x3)   mov(memw_a16(ds, 0x4fb0), ax);        /* mov [0x4fb0], ax */
    II(0x00135387, 0x4)   mov(memw_a16(ds, 0x4fb2), dx);        /* mov [0x4fb2], dx */
    II(0x0013538b, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0013538d, 0x4)   or_(ax, memw_a16(ds, 0x4fb0));        /* or ax, [0x4fb0] */
    II(0x00135391, 0x2)   jnzw(0x0013539a, 0x7);                /* jnz 0x13539a */
    II(0x00135393, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135396, 0x1)   popw(ds);                             /* pop ds */
    II(0x00135397, 0x1)   leavew();                             /* leave  */
    II(0x00135398, 0x1)   retfw();                              /* retf  */
//    II(0x00135399, 0x1)   /* Недостижимый код. */
l_0x0013539a:
    II(0x0013539a, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013539b, 0x3)   pushw(0x314);                         /* push word 0x314 */
    II(0x0013539e, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x001353a1, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x001353a4, 0x1)   nop();                                /* nop  */
    II(0x001353a5, 0x1)   pushw(cs);                            /* push cs */
    II(0x001353a6, 0x3)   callw(0x0012ec70, -0x6739);           /* call 0x12ec70 */
    II(0x001353a9, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001353ac, 0x3)   mov(memw_a16(ds, 0x1f54), ax);        /* mov [0x1f54], ax */
    II(0x001353af, 0x4)   mov(memw_a16(ds, 0x1f56), dx);        /* mov [0x1f56], dx */
    II(0x001353b3, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x001353b5, 0x4)   or_(ax, memw_a16(ds, 0x1f54));        /* or ax, [0x1f54] */
    II(0x001353b9, 0x2)   jnzw(0x001353c2, 0x7);                /* jnz 0x1353c2 */
    II(0x001353bb, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x001353be, 0x1)   popw(ds);                             /* pop ds */
    II(0x001353bf, 0x1)   leavew();                             /* leave  */
    II(0x001353c0, 0x1)   retfw();                              /* retf  */
//    II(0x001353c1, 0x1)   /* Недостижимый код. */
l_0x001353c2:
    II(0x001353c2, 0x1)   pushw(ds);                            /* push ds */
    II(0x001353c3, 0x3)   pushw(0x31c);                         /* push word 0x31c */
    II(0x001353c6, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x001353c9, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x001353cc, 0x1)   nop();                                /* nop  */
    II(0x001353cd, 0x1)   pushw(cs);                            /* push cs */
    II(0x001353ce, 0x3)   callw(0x0012ec70, -0x6761);           /* call 0x12ec70 */
    II(0x001353d1, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001353d4, 0x3)   mov(memw_a16(ss, bp - 0x2a), ax);     /* mov [bp-0x2a], ax */
    II(0x001353d7, 0x3)   mov(memw_a16(ss, bp - 0x28), dx);     /* mov [bp-0x28], dx */
    II(0x001353da, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x001353dc, 0x2)   jzw(0x0013544a, 0x6c);                /* jz 0x13544a */
    II(0x001353de, 0x3)   pushw(0x3e58);                        /* push word 0x3e58 */
    II(0x001353e1, 0x3)   pushw(0x468a);                        /* push word 0x468a */
//    II(0x001353e4, 0x1)   nop();                                /* nop  */
    II(0x001353e5, 0x1)   pushw(cs);                            /* push cs */
    II(0x001353e6, 0x3)   callw(0x0012e630, -0x6db9);           /* call 0x12e630 */
    II(0x001353e9, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001353ec, 0x3)   mov(memw_a16(ss, bp - 0x26), ax);     /* mov [bp-0x26], ax */
    II(0x001353ef, 0x3)   mov(memw_a16(ss, bp - 0x24), dx);     /* mov [bp-0x24], dx */
    II(0x001353f2, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x001353f4, 0x3)   or_(ax, memw_a16(ss, bp - 0x26));     /* or ax, [bp-0x26] */
    II(0x001353f7, 0x2)   jzw(0x0013544a, 0x51);                /* jz 0x13544a */
    II(0x001353f9, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x001353fb, 0x3)   mov(memw_a16(ss, bp - 0x22), ax);     /* mov [bp-0x22], ax */
    II(0x001353fe, 0x3)   mov(ax, memw_a16(ss, bp - 0x20));     /* mov ax, [bp-0x20] */
    II(0x00135401, 0x3)   mov(dx, memw_a16(ss, bp - 0x1e));     /* mov dx, [bp-0x1e] */
    II(0x00135404, 0x3)   les(bx, ss, bp - 0x26);               /* les bx, [bp-0x26] */
    II(0x00135407, 0x3)   mov(memw_a16(es, bx), ax);            /* mov [es:bx], ax */
    II(0x0013540a, 0x4)   mov(memw_a16(es, bx + 0x2), dx);      /* mov [es:bx+0x2], dx */
    II(0x0013540e, 0x5)   mov(memw_a16(ss, bp - 0x26), 0x468e); /* mov word [bp-0x26], 0x468e */
    II(0x00135413, 0x5)   mov(memw_a16(ss, bp - 0x24), 0x3e58); /* mov word [bp-0x24], 0x3e58 */
    II(0x00135418, 0x3)   mov(ax, memw_a16(ss, bp - 0x22));     /* mov ax, [bp-0x22] */
    II(0x0013541b, 0x3)   mov(memw_a16(ss, bp - 0x24), ax);     /* mov [bp-0x24], ax */
    II(0x0013541e, 0x3)   mov(ax, memw_a16(ss, bp - 0x2a));     /* mov ax, [bp-0x2a] */
    II(0x00135421, 0x3)   mov(dx, memw_a16(ss, bp - 0x28));     /* mov dx, [bp-0x28] */
    II(0x00135424, 0x3)   les(bx, ss, bp - 0x26);               /* les bx, [bp-0x26] */
    II(0x00135427, 0x3)   mov(memw_a16(es, bx), ax);            /* mov [es:bx], ax */
    II(0x0013542a, 0x4)   mov(memw_a16(es, bx + 0x2), dx);      /* mov [es:bx+0x2], dx */
    II(0x0013542e, 0x3)   pushw(memw_a16(ss, bp - 0x24));       /* push word [bp-0x24] */
    II(0x00135431, 0x3)   pushw(memw_a16(ss, bp - 0x26));       /* push word [bp-0x26] */
//    II(0x00135434, 0x1)   nop();                                /* nop  */
    II(0x00135435, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135436, 0x3)   callw(0x0012e758, -0x6ce1);           /* call 0x12e758 */
    II(0x00135439, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013543c, 0x6)   mov(memw_a16(ds, 0x1fe0), 0x4692);    /* mov word [0x1fe0], 0x4692 */
    II(0x00135442, 0x6)   mov(memw_a16(ds, 0x1fe2), 0x3e58);    /* mov word [0x1fe2], 0x3e58 */
    II(0x00135448, 0x2)   jmpw(0x00135457, 0xd);                /* jmp 0x135457 */
l_0x0013544a:
    II(0x0013544a, 0x3)   mov(ax, memw_a16(ss, bp - 0x20));     /* mov ax, [bp-0x20] */
    II(0x0013544d, 0x3)   mov(dx, memw_a16(ss, bp - 0x1e));     /* mov dx, [bp-0x1e] */
    II(0x00135450, 0x3)   mov(memw_a16(ds, 0x1fe0), ax);        /* mov [0x1fe0], ax */
    II(0x00135453, 0x4)   mov(memw_a16(ds, 0x1fe2), dx);        /* mov [0x1fe2], dx */
l_0x00135457:
    II(0x00135457, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135458, 0x3)   callw(0x00137408, 0x1fad);            /* call 0x137408 */
    II(0x0013545b, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013545d, 0x3)   mov(memw_a16(ss, bp - 0x1a), ax);     /* mov [bp-0x1a], ax */
    II(0x00135460, 0x3)   mov(memw_a16(ss, bp - 0x1c), ax);     /* mov [bp-0x1c], ax */
    II(0x00135463, 0x5)   mov(memw_a16(ss, bp - 0xa), 0xff00);  /* mov word [bp-0xa], 0xff00 */
    II(0x00135468, 0x5)   mov(memw_a16(ss, bp - 0xe), 0xe00);   /* mov word [bp-0xe], 0xe00 */
    II(0x0013546d, 0x3)   lea(ax, bp - 0x1c);                   /* lea ax, [bp-0x1c] */
    II(0x00135470, 0x1)   pushw(ss);                            /* push ss */
    II(0x00135471, 0x1)   pushw(ax);                            /* push ax */
    II(0x00135472, 0x2)   pushw(-0x1 /* 0xff */);               /* push 0xff */
//    II(0x00135474, 0x1)   nop();                                /* nop  */
    II(0x00135475, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135476, 0x3)   callw(0x0012eaed, -0x698c);           /* call 0x12eaed */
    II(0x00135479, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0013547c, 0x3)   mov(bx, memw_a16(ss, bp - 0xa));      /* mov bx, [bp-0xa] */
    II(0x0013547f, 0x3)   mov(cx, memw_a16(ss, bp - 0xe));      /* mov cx, [bp-0xe] */
    II(0x00135482, 0x2)   mov(es, cx);                          /* mov es, cx */
    II(0x00135484, 0x4)   mov(memw_a16(ds, 0x2018), bx);        /* mov [0x2018], bx */
    II(0x00135488, 0x4)   mov(memw_a16(ds, 0x201a), es);        /* mov [0x201a], es */
    II(0x0013548c, 0x4)   mov(ax, memw_a16(es, bx + 0x4));      /* mov ax, [es:bx+0x4] */
    II(0x00135490, 0x4)   mov(dx, memw_a16(es, bx + 0x6));      /* mov dx, [es:bx+0x6] */
    II(0x00135494, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135496, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135498, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013549a, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013549c, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013549e, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x001354a0, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x001354a2, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x001354a4, 0x3)   mov(memw_a16(ds, 0x8c), ax);          /* mov [0x8c], ax */
    II(0x001354a7, 0x4)   mov(memw_a16(ds, 0x8e), dx);          /* mov [0x8e], dx */
    II(0x001354ab, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x001354ad, 0x1)   popw(ds);                             /* pop ds */
    II(0x001354ae, 0x1)   leavew();                             /* leave  */
    II(0x001354af, 0x1)   retfw();                              /* retf  */
l_0x001354b0:
    II(0x001354b0, 0x1)   popw(ds);                             /* pop ds */
    II(0x001354b1, 0x1)   leavew();                             /* leave  */
    II(0x001354b2, 0x1)   retfw();                              /* retf  */
FUNC_END

