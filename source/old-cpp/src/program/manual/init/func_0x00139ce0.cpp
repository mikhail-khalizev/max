FUNC_BEGIN(0x00139ce0, 0xac790091fd74160d, 0x10, ({0xc8, 0x24, 0, 0, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xec, 0, 0, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x1c, 0x26, 0x8b, 0x57, 0x1e, 0x8b, 0xc8, 0x8b, 0xda, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xe0, 0x89, 0x56, 0xe2, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xf7, 0xc1, 0xff, 0xf, 0x74, 0xc, 0x5, 0x1, 0, 0x83, 0xd2, 0, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x8b, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x16, 0x26, 0xb, 0x47, 0x14, 0x74, 0x3, 0xe9, 0x43, 0x1, 0x26, 0x8b, 0x47, 0x1a, 0x26, 0xb, 0x47, 0x18, 0x74, 0x3, 0xe9, 0xd0, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xe, 0xe8, 0x9c, 0x1e, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xee, 0x89, 0x56, 0xf0, 0x3d, 0xff, 0xff, 0x75, 0x7, 0x3b, 0xd0, 0x75, 0x3, 0xe9, 0x9d, 0, 0xe, 0xe8, 0x7b, 0x29, 0x89, 0x46, 0xfa, 0x3d, 0xff, 0xff, 0x75, 0x3, 0xe9, 0x8c, 0, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x5, 0, 0, 0x83, 0xd2, 0x1, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x6a, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x52, 0x50, 0xa0, 0xb5, 0x51, 0x2a, 0xe4, 0x50, 0xff, 0x76, 0xfa, 0xe, 0xe8, 0xcd, 0x26, 0x83, 0xc4, 0xe, 0x8b, 0x46, 0xf6, 0x8b, 0x56, 0xf8, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x14, 0x26, 0x89, 0x57, 0x16, 0x8b, 0x46, 0xfa, 0x26, 0x89, 0x47, 0x8, 0x26, 0xc7, 0x47, 0xa, 0, 0, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x29, 0x6, 0xc4, 0x1f, 0x19, 0x16, 0xc6, 0x1f, 0x29, 0x6, 0xac, 0x1f, 0x19, 0x16, 0xae, 0x1f, 0x83, 0x3e, 0xae, 0x1f, 0, 0x7d, 0x8, 0x2b, 0xc0, 0xa3, 0xae, 0x1f, 0xa3, 0xac, 0x1f, 0xeb, 0x14, 0xc4, 0x5e, 0x6, 0x26, 0xc7, 0x47, 0x20, 0x12, 0x80, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0xc4, 0x5e, 0x6, 0x26, 0x83, 0x7f, 0x18, 0x1, 0x75, 0x57, 0x26, 0x83, 0x7f, 0x1a, 0, 0x75, 0x50, 0x8d, 0x46, 0xf6, 0x16, 0x50, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xe, 0xe8, 0x76, 0x1e, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xec, 0xb, 0xc0, 0x74, 0x14, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x20, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0xeb, 0x23, 0x8b, 0x46, 0xf6, 0x8b, 0x56, 0xf8, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x14, 0x26, 0x89, 0x57, 0x16, 0x8b, 0x46, 0xfa, 0x26, 0x89, 0x47, 0x8, 0x26, 0xc7, 0x47, 0xa, 0, 0, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x1f, 0x5e, 0xc9, 0xcb, 0x90, 0x26, 0x81, 0x7f, 0x16, 0, 0x10, 0x72, 0x3e, 0x77, 0, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x26, 0x3, 0x47, 0x14, 0x26, 0x13, 0x57, 0x16, 0x8a, 0x2e, 0x9c, 0x51, 0xc0, 0xe5, 0x4, 0x2a, 0xc9, 0xbb, 0, 0x10, 0x3b, 0xd3, 0x72, 0x13, 0x77, 0x4, 0x3b, 0xc1, 0x76, 0xd, 0xc7, 0x46, 0xec, 0x12, 0x80, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x83, 0x7e, 0xec, 0, 0x74, 0x3, 0xe9, 0x82, 0, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x14, 0x26, 0x8b, 0x57, 0x16, 0x2d, 0, 0, 0x81, 0xda, 0, 0x10, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xe4, 0x89, 0x56, 0xe6, 0x89, 0x46, 0xf2, 0x89, 0x56, 0xf4, 0xeb, 0x8, 0x83, 0x46, 0xf2, 0x1, 0x83, 0x56, 0xf4, 0, 0x8b, 0x46, 0xe4, 0x8b, 0x56, 0xe6, 0x3, 0x46, 0xfc, 0x13, 0x56, 0xfe, 0x3b, 0x56, 0xf4, 0x72, 0x31, 0x77, 0x5, 0x3b, 0x46, 0xf2, 0x72, 0x2a, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xf2, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0x77, 0xf1, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x74, 0x10, 0xc7, 0x46, 0xec, 0x12, 0x80, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0xeb, 0x3, 0x90, 0xeb, 0xb6, 0x83, 0x7e, 0xec, 0, 0x74, 0x3, 0xe9, 0x67, 0x1, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x14, 0x26, 0x8b, 0x57, 0x16, 0x8b, 0xc8, 0x8b, 0xf2, 0x2d, 0, 0, 0x81, 0xda, 0, 0x10, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xe4, 0x89, 0x56, 0xe6, 0x81, 0xe1, 0, 0xf0, 0x89, 0x4e, 0xf6, 0x89, 0x76, 0xf8, 0xe, 0xe8, 0x3f, 0x27, 0x89, 0x46, 0xfa, 0x3d, 0xff, 0xff, 0x75, 0x3, 0xe9, 0xca, 0, 0x8b, 0x46, 0xf6, 0x8b, 0x56, 0xf8, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x14, 0x26, 0x89, 0x57, 0x16, 0x8b, 0x46, 0xfa, 0x26, 0x89, 0x47, 0x8, 0x26, 0xc7, 0x47, 0xa, 0, 0, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x26, 0x8b, 0x47, 0x1a, 0x26, 0xb, 0x47, 0x18, 0x75, 0x21, 0x6a, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xa0, 0xb5, 0x51, 0x2a, 0xe4, 0x50, 0xff, 0x76, 0xfa, 0xe, 0xe8, 0x8a, 0x24, 0x83, 0xc4, 0xe, 0xeb, 0x7d, 0x90, 0xa1, 0xc4, 0x1f, 0x8b, 0x16, 0xc6, 0x1f, 0x39, 0x56, 0xfe, 0x7c, 0xe, 0x7f, 0x5, 0x39, 0x46, 0xfc, 0x76, 0x7, 0xc7, 0x46, 0xec, 0x16, 0x80, 0xeb, 0x62, 0xa1, 0x1a, 0, 0xb, 0x6, 0x18, 0, 0x74, 0x59, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x2b, 0x6, 0xc4, 0x1f, 0x1b, 0x16, 0xc6, 0x1f, 0x2b, 0x6, 0xc0, 0x1f, 0x1b, 0x16, 0xc2, 0x1f, 0x3, 0x6, 0xb4, 0x1f, 0x13, 0x16, 0xb6, 0x1f, 0x5, 0x4, 0, 0x83, 0xd2, 0, 0x89, 0x46, 0xe8, 0x89, 0x56, 0xea, 0x8b, 0xe, 0x50, 0x1f, 0x8b, 0x1e, 0x52, 0x1f, 0x3b, 0xd3, 0x7c, 0x23, 0x7f, 0x4, 0x3b, 0xc1, 0x76, 0x1d, 0x2b, 0xc1, 0x1b, 0xd3, 0x89, 0x46, 0xdc, 0x89, 0x56, 0xde, 0x52, 0x50, 0x90, 0xe, 0xe8, 0x2c, 0xeb, 0x83, 0xc4, 0x4, 0xb, 0xc0, 0x75, 0x5, 0xc7, 0x46, 0xec, 0x14, 0x80, 0x83, 0x7e, 0xec, 0, 0x74, 0x1a, 0x8b, 0x46, 0xec, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x20, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x1f, 0x5e, 0xc9, 0xcb, 0x90, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x29, 0x6, 0xac, 0x1f, 0x19, 0x16, 0xae, 0x1f, 0x83, 0x3e, 0xae, 0x1f, 0, 0x7d, 0x8, 0x2b, 0xc0, 0xa3, 0xae, 0x1f, 0xa3, 0xac, 0x1f, 0x8b, 0x46, 0xfc, 0x29, 0x6, 0xc4, 0x1f, 0x19, 0x16, 0xc6, 0x1f, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x1f, 0x5e, 0xc9, 0xcb}))
    II(0x00139ce0, 0x4)   enterw(0x24, 0);                      /* enter 0x24, 0x0 */
    II(0x00139ce4, 0x1)   pushw(si);                            /* push si */
    II(0x00139ce5, 0x1)   pushw(ds);                            /* push ds */
    II(0x00139ce6, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00139ce9, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00139ceb, 0x5)   mov(memw_a16(ss, bp - 0x14), 0);      /* mov word [bp-0x14], 0x0 */
    II(0x00139cf0, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139cf3, 0x4)   mov(ax, memw_a16(es, bx + 0x1c));     /* mov ax, [es:bx+0x1c] */
    II(0x00139cf7, 0x4)   mov(dx, memw_a16(es, bx + 0x1e));     /* mov dx, [es:bx+0x1e] */
    II(0x00139cfb, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x00139cfd, 0x2)   mov(bx, dx);                          /* mov bx, dx */
    II(0x00139cff, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00139d01, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00139d03, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00139d05, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00139d07, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139d09, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139d0b, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139d0d, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139d0f, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139d11, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139d13, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139d15, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139d17, 0x3)   mov(memw_a16(ss, bp - 0x20), ax);     /* mov [bp-0x20], ax */
    II(0x00139d1a, 0x3)   mov(memw_a16(ss, bp - 0x1e), dx);     /* mov [bp-0x1e], dx */
    II(0x00139d1d, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00139d20, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x00139d23, 0x4)   test(cx, 0xfff);                      /* test cx, 0xfff */
    II(0x00139d27, 0x2)   jzw(0x00139d35, 0xc);                 /* jz 0x139d35 */
    II(0x00139d29, 0x3)   add(ax, 0x1);                         /* add ax, 0x1 */
    II(0x00139d2c, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00139d2f, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00139d32, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
l_0x00139d35:
    II(0x00139d35, 0x3)   mov(bx, memw_a16(ss, bp + 0x6));      /* mov bx, [bp+0x6] */
    II(0x00139d38, 0x4)   mov(ax, memw_a16(es, bx + 0x16));     /* mov ax, [es:bx+0x16] */
    II(0x00139d3c, 0x4)   or_(ax, memw_a16(es, bx + 0x14));     /* or ax, [es:bx+0x14] */
    II(0x00139d40, 0x2)   jzw(0x00139d45, 0x3);                 /* jz 0x139d45 */
    II(0x00139d42, 0x3)   jmpw(0x00139e88, 0x143);              /* jmp 0x139e88 */
l_0x00139d45:
    II(0x00139d45, 0x4)   mov(ax, memw_a16(es, bx + 0x1a));     /* mov ax, [es:bx+0x1a] */
    II(0x00139d49, 0x4)   or_(ax, memw_a16(es, bx + 0x18));     /* or ax, [es:bx+0x18] */
    II(0x00139d4d, 0x2)   jzw(0x00139d52, 0x3);                 /* jz 0x139d52 */
    II(0x00139d4f, 0x3)   jmpw(0x00139e22, 0xd0);               /* jmp 0x139e22 */
l_0x00139d52:
    II(0x00139d52, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00139d55, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00139d58, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139d59, 0x3)   callw(0x0013bbf8, 0x1e9c);            /* call 0x13bbf8 */
    II(0x00139d5c, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x00139d5f, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x00139d62, 0x3)   mov(memw_a16(ss, bp - 0x10), dx);     /* mov [bp-0x10], dx */
    II(0x00139d65, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x00139d68, 0x2)   jnzw(0x00139d71, 0x7);                /* jnz 0x139d71 */
    II(0x00139d6a, 0x2)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x00139d6c, 0x2)   jnzw(0x00139d71, 0x3);                /* jnz 0x139d71 */
    II(0x00139d6e, 0x3)   jmpw(0x00139e0e, 0x9d);               /* jmp 0x139e0e */
l_0x00139d71:
    II(0x00139d71, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139d72, 0x3)   callw(0x0013c6f0, 0x297b);            /* call 0x13c6f0 */
    II(0x00139d75, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x00139d78, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x00139d7b, 0x2)   jnzw(0x00139d80, 0x3);                /* jnz 0x139d80 */
    II(0x00139d7d, 0x3)   jmpw(0x00139e0c, 0x8c);               /* jmp 0x139e0c */
l_0x00139d80:
    II(0x00139d80, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x00139d83, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x00139d86, 0x3)   add(ax, 0);                           /* add ax, 0x0 */
    II(0x00139d89, 0x3)   adc(dx, 0x1);                         /* adc dx, 0x1 */
    II(0x00139d8c, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00139d8e, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00139d90, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00139d92, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00139d94, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00139d96, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00139d98, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00139d9a, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00139d9c, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00139d9e, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00139da0, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00139da2, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00139da4, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x00139da7, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x00139daa, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00139dac, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00139daf, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00139db2, 0x1)   pushw(dx);                            /* push dx */
    II(0x00139db3, 0x1)   pushw(ax);                            /* push ax */
    II(0x00139db4, 0x3)   mov(al, memb_a16(ds, 0x51b5));        /* mov al, [0x51b5] */
    II(0x00139db7, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x00139db9, 0x1)   pushw(ax);                            /* push ax */
    II(0x00139dba, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x00139dbd, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139dbe, 0x3)   callw(0x0013c48e, 0x26cd);            /* call 0x13c48e */
    II(0x00139dc1, 0x3)   add(sp, 0xe);                         /* add sp, 0xe */
    II(0x00139dc4, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x00139dc7, 0x3)   mov(dx, memw_a16(ss, bp - 0x8));      /* mov dx, [bp-0x8] */
    II(0x00139dca, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139dcd, 0x4)   mov(memw_a16(es, bx + 0x14), ax);     /* mov [es:bx+0x14], ax */
    II(0x00139dd1, 0x4)   mov(memw_a16(es, bx + 0x16), dx);     /* mov [es:bx+0x16], dx */
    II(0x00139dd5, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x00139dd8, 0x4)   mov(memw_a16(es, bx + 0x8), ax);      /* mov [es:bx+0x8], ax */
    II(0x00139ddc, 0x6)   mov(memw_a16(es, bx + 0xa), 0);       /* mov word [es:bx+0xa], 0x0 */
    II(0x00139de2, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x00139de7, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x00139dea, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x00139ded, 0x4)   sub(memw_a16(ds, 0x1fc4), ax);        /* sub [0x1fc4], ax */
    II(0x00139df1, 0x4)   sbb(memw_a16(ds, 0x1fc6), dx);        /* sbb [0x1fc6], dx */
    II(0x00139df5, 0x4)   sub(memw_a16(ds, 0x1fac), ax);        /* sub [0x1fac], ax */
    II(0x00139df9, 0x4)   sbb(memw_a16(ds, 0x1fae), dx);        /* sbb [0x1fae], dx */
    II(0x00139dfd, 0x5)   cmp(memw_a16(ds, 0x1fae), 0);         /* cmp word [0x1fae], 0x0 */
    II(0x00139e02, 0x2)   jgew(0x00139e0c, 0x8);                /* jge 0x139e0c */
    II(0x00139e04, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x00139e06, 0x3)   mov(memw_a16(ds, 0x1fae), ax);        /* mov [0x1fae], ax */
    II(0x00139e09, 0x3)   mov(memw_a16(ds, 0x1fac), ax);        /* mov [0x1fac], ax */
l_0x00139e0c:
    II(0x00139e0c, 0x2)   jmpw(0x00139e22, 0x14);               /* jmp 0x139e22 */
l_0x00139e0e:
    II(0x00139e0e, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139e11, 0x6)   mov(memw_a16(es, bx + 0x20), 0x8012); /* mov word [es:bx+0x20], 0x8012 */
    II(0x00139e17, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x00139e1d, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
l_0x00139e22:
    II(0x00139e22, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139e25, 0x5)   cmp(memw_a16(es, bx + 0x18), 0x1);    /* cmp word [es:bx+0x18], 0x1 */
    II(0x00139e2a, 0x2)   jnzw(0x00139e83, 0x57);               /* jnz 0x139e83 */
    II(0x00139e2c, 0x5)   cmp(memw_a16(es, bx + 0x1a), 0);      /* cmp word [es:bx+0x1a], 0x0 */
    II(0x00139e31, 0x2)   jnzw(0x00139e83, 0x50);               /* jnz 0x139e83 */
    II(0x00139e33, 0x3)   lea(ax, bp - 0xa);                    /* lea ax, [bp-0xa] */
    II(0x00139e36, 0x1)   pushw(ss);                            /* push ss */
    II(0x00139e37, 0x1)   pushw(ax);                            /* push ax */
    II(0x00139e38, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00139e3b, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00139e3e, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139e3f, 0x3)   callw(0x0013bcb8, 0x1e76);            /* call 0x13bcb8 */
    II(0x00139e42, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00139e45, 0x3)   mov(memw_a16(ss, bp - 0x14), ax);     /* mov [bp-0x14], ax */
    II(0x00139e48, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00139e4a, 0x2)   jzw(0x00139e60, 0x14);                /* jz 0x139e60 */
    II(0x00139e4c, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139e4f, 0x4)   mov(memw_a16(es, bx + 0x20), ax);     /* mov [es:bx+0x20], ax */
    II(0x00139e53, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x00139e59, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x00139e5e, 0x2)   jmpw(0x00139e83, 0x23);               /* jmp 0x139e83 */
l_0x00139e60:
    II(0x00139e60, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x00139e63, 0x3)   mov(dx, memw_a16(ss, bp - 0x8));      /* mov dx, [bp-0x8] */
    II(0x00139e66, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139e69, 0x4)   mov(memw_a16(es, bx + 0x14), ax);     /* mov [es:bx+0x14], ax */
    II(0x00139e6d, 0x4)   mov(memw_a16(es, bx + 0x16), dx);     /* mov [es:bx+0x16], dx */
    II(0x00139e71, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x00139e74, 0x4)   mov(memw_a16(es, bx + 0x8), ax);      /* mov [es:bx+0x8], ax */
    II(0x00139e78, 0x6)   mov(memw_a16(es, bx + 0xa), 0);       /* mov word [es:bx+0xa], 0x0 */
    II(0x00139e7e, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
l_0x00139e83:
    II(0x00139e83, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139e84, 0x1)   popw(si);                             /* pop si */
    II(0x00139e85, 0x1)   leavew();                             /* leave  */
    II(0x00139e86, 0x1)   retfw();                              /* retf  */
//    II(0x00139e87, 0x1)   /* Недостижимый код. */
l_0x00139e88:
    II(0x00139e88, 0x6)   cmp(memw_a16(es, bx + 0x16), 0x1000); /* cmp word [es:bx+0x16], 0x1000 */
    II(0x00139e8e, 0x2)   jbw(0x00139ece, 0x3e);                /* jb 0x139ece */
    II(0x00139e90, 0x2)   jaw(0x00139e92, 0);                   /* ja 0x139e92 */
l_0x00139e92:
    II(0x00139e92, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x00139e95, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x00139e98, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00139e9a, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00139e9c, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00139e9e, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00139ea0, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00139ea2, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00139ea4, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00139ea6, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00139ea8, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00139eaa, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00139eac, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00139eae, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00139eb0, 0x4)   add(ax, memw_a16(es, bx + 0x14));     /* add ax, [es:bx+0x14] */
    II(0x00139eb4, 0x4)   adc(dx, memw_a16(es, bx + 0x16));     /* adc dx, [es:bx+0x16] */
    II(0x00139eb8, 0x4)   mov(ch, memb_a16(ds, 0x519c));        /* mov ch, [0x519c] */
    II(0x00139ebc, 0x3)   shl(ch, 0x4);                         /* shl ch, 0x4 */
    II(0x00139ebf, 0x2)   sub(cl, cl);                          /* sub cl, cl */
    II(0x00139ec1, 0x3)   mov(bx, 0x1000);                      /* mov bx, 0x1000 */
    II(0x00139ec4, 0x2)   cmp(dx, bx);                          /* cmp dx, bx */
    II(0x00139ec6, 0x2)   jbw(0x00139edb, 0x13);                /* jb 0x139edb */
    II(0x00139ec8, 0x2)   jaw(0x00139ece, 0x4);                 /* ja 0x139ece */
    II(0x00139eca, 0x2)   cmp(ax, cx);                          /* cmp ax, cx */
    II(0x00139ecc, 0x2)   jbew(0x00139edb, 0xd);                /* jbe 0x139edb */
l_0x00139ece:
    II(0x00139ece, 0x5)   mov(memw_a16(ss, bp - 0x14), 0x8012); /* mov word [bp-0x14], 0x8012 */
    II(0x00139ed3, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139ed6, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
l_0x00139edb:
    II(0x00139edb, 0x4)   cmp(memw_a16(ss, bp - 0x14), 0);      /* cmp word [bp-0x14], 0x0 */
    II(0x00139edf, 0x2)   jzw(0x00139ee4, 0x3);                 /* jz 0x139ee4 */
    II(0x00139ee1, 0x3)   jmpw(0x00139f66, 0x82);               /* jmp 0x139f66 */
l_0x00139ee4:
    II(0x00139ee4, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139ee7, 0x4)   mov(ax, memw_a16(es, bx + 0x14));     /* mov ax, [es:bx+0x14] */
    II(0x00139eeb, 0x4)   mov(dx, memw_a16(es, bx + 0x16));     /* mov dx, [es:bx+0x16] */
    II(0x00139eef, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x00139ef2, 0x4)   sbb(dx, 0x1000);                      /* sbb dx, 0x1000 */
    II(0x00139ef6, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00139ef8, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00139efa, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00139efc, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00139efe, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139f00, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139f02, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139f04, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139f06, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139f08, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139f0a, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139f0c, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139f0e, 0x3)   mov(memw_a16(ss, bp - 0x1c), ax);     /* mov [bp-0x1c], ax */
    II(0x00139f11, 0x3)   mov(memw_a16(ss, bp - 0x1a), dx);     /* mov [bp-0x1a], dx */
    II(0x00139f14, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x00139f17, 0x3)   mov(memw_a16(ss, bp - 0xc), dx);      /* mov [bp-0xc], dx */
    II(0x00139f1a, 0x2)   jmpw(0x00139f24, 0x8);                /* jmp 0x139f24 */
l_0x00139f1c:
    II(0x00139f1c, 0x4)   add(memw_a16(ss, bp - 0xe), 0x1);     /* add word [bp-0xe], 0x1 */
    II(0x00139f20, 0x4)   adc(memw_a16(ss, bp - 0xc), 0);       /* adc word [bp-0xc], 0x0 */
l_0x00139f24:
    II(0x00139f24, 0x3)   mov(ax, memw_a16(ss, bp - 0x1c));     /* mov ax, [bp-0x1c] */
    II(0x00139f27, 0x3)   mov(dx, memw_a16(ss, bp - 0x1a));     /* mov dx, [bp-0x1a] */
    II(0x00139f2a, 0x3)   add(ax, memw_a16(ss, bp - 0x4));      /* add ax, [bp-0x4] */
    II(0x00139f2d, 0x3)   adc(dx, memw_a16(ss, bp - 0x2));      /* adc dx, [bp-0x2] */
    II(0x00139f30, 0x3)   cmp(dx, memw_a16(ss, bp - 0xc));      /* cmp dx, [bp-0xc] */
    II(0x00139f33, 0x2)   jbw(0x00139f66, 0x31);                /* jb 0x139f66 */
    II(0x00139f35, 0x2)   jaw(0x00139f3c, 0x5);                 /* ja 0x139f3c */
    II(0x00139f37, 0x3)   cmp(ax, memw_a16(ss, bp - 0xe));      /* cmp ax, [bp-0xe] */
    II(0x00139f3a, 0x2)   jbw(0x00139f66, 0x2a);                /* jb 0x139f66 */
l_0x00139f3c:
    II(0x00139f3c, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x00139f3f, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x00139f42, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x00139f46, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x00139f4a, 0x3)   callw(0x001390c4, -0xe89);            /* call 0x1390c4 */
    II(0x00139f4d, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00139f50, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00139f52, 0x2)   jzw(0x00139f64, 0x10);                /* jz 0x139f64 */
    II(0x00139f54, 0x5)   mov(memw_a16(ss, bp - 0x14), 0x8012); /* mov word [bp-0x14], 0x8012 */
    II(0x00139f59, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139f5c, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x00139f61, 0x2)   jmpw(0x00139f66, 0x3);                /* jmp 0x139f66 */
//    II(0x00139f63, 0x1)   /* Недостижимый код. */
l_0x00139f64:
    II(0x00139f64, 0x2)   jmpw(0x00139f1c, -0x4a);              /* jmp 0x139f1c */
l_0x00139f66:
    II(0x00139f66, 0x4)   cmp(memw_a16(ss, bp - 0x14), 0);      /* cmp word [bp-0x14], 0x0 */
    II(0x00139f6a, 0x2)   jzw(0x00139f6f, 0x3);                 /* jz 0x139f6f */
    II(0x00139f6c, 0x3)   jmpw(0x0013a0d6, 0x167);              /* jmp 0x13a0d6 */
l_0x00139f6f:
    II(0x00139f6f, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139f72, 0x4)   mov(ax, memw_a16(es, bx + 0x14));     /* mov ax, [es:bx+0x14] */
    II(0x00139f76, 0x4)   mov(dx, memw_a16(es, bx + 0x16));     /* mov dx, [es:bx+0x16] */
    II(0x00139f7a, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x00139f7c, 0x2)   mov(si, dx);                          /* mov si, dx */
    II(0x00139f7e, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x00139f81, 0x4)   sbb(dx, 0x1000);                      /* sbb dx, 0x1000 */
    II(0x00139f85, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00139f87, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00139f89, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00139f8b, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00139f8d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139f8f, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139f91, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139f93, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139f95, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139f97, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139f99, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00139f9b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00139f9d, 0x3)   mov(memw_a16(ss, bp - 0x1c), ax);     /* mov [bp-0x1c], ax */
    II(0x00139fa0, 0x3)   mov(memw_a16(ss, bp - 0x1a), dx);     /* mov [bp-0x1a], dx */
    II(0x00139fa3, 0x4)   and_(cx, 0xf000);                     /* and cx, 0xf000 */
    II(0x00139fa7, 0x3)   mov(memw_a16(ss, bp - 0xa), cx);      /* mov [bp-0xa], cx */
    II(0x00139faa, 0x3)   mov(memw_a16(ss, bp - 0x8), si);      /* mov [bp-0x8], si */
    II(0x00139fad, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139fae, 0x3)   callw(0x0013c6f0, 0x273f);            /* call 0x13c6f0 */
    II(0x00139fb1, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x00139fb4, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x00139fb7, 0x2)   jnzw(0x00139fbc, 0x3);                /* jnz 0x139fbc */
    II(0x00139fb9, 0x3)   jmpw(0x0013a086, 0xca);               /* jmp 0x13a086 */
l_0x00139fbc:
    II(0x00139fbc, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x00139fbf, 0x3)   mov(dx, memw_a16(ss, bp - 0x8));      /* mov dx, [bp-0x8] */
    II(0x00139fc2, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139fc5, 0x4)   mov(memw_a16(es, bx + 0x14), ax);     /* mov [es:bx+0x14], ax */
    II(0x00139fc9, 0x4)   mov(memw_a16(es, bx + 0x16), dx);     /* mov [es:bx+0x16], dx */
    II(0x00139fcd, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x00139fd0, 0x4)   mov(memw_a16(es, bx + 0x8), ax);      /* mov [es:bx+0x8], ax */
    II(0x00139fd4, 0x6)   mov(memw_a16(es, bx + 0xa), 0);       /* mov word [es:bx+0xa], 0x0 */
    II(0x00139fda, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x00139fdf, 0x4)   mov(ax, memw_a16(es, bx + 0x1a));     /* mov ax, [es:bx+0x1a] */
    II(0x00139fe3, 0x4)   or_(ax, memw_a16(es, bx + 0x18));     /* or ax, [es:bx+0x18] */
    II(0x00139fe7, 0x2)   jnzw(0x0013a00a, 0x21);               /* jnz 0x13a00a */
    II(0x00139fe9, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00139feb, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00139fee, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00139ff1, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x00139ff4, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x00139ff7, 0x3)   mov(al, memb_a16(ds, 0x51b5));        /* mov al, [0x51b5] */
    II(0x00139ffa, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x00139ffc, 0x1)   pushw(ax);                            /* push ax */
    II(0x00139ffd, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0013a000, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a001, 0x3)   callw(0x0013c48e, 0x248a);            /* call 0x13c48e */
    II(0x0013a004, 0x3)   add(sp, 0xe);                         /* add sp, 0xe */
    II(0x0013a007, 0x2)   jmpw(0x0013a086, 0x7d);               /* jmp 0x13a086 */
//    II(0x0013a009, 0x1)   /* Недостижимый код. */
l_0x0013a00a:
    II(0x0013a00a, 0x3)   mov(ax, memw_a16(ds, 0x1fc4));        /* mov ax, [0x1fc4] */
    II(0x0013a00d, 0x4)   mov(dx, memw_a16(ds, 0x1fc6));        /* mov dx, [0x1fc6] */
    II(0x0013a011, 0x3)   cmp(memw_a16(ss, bp - 0x2), dx);      /* cmp [bp-0x2], dx */
    II(0x0013a014, 0x2)   jlw(0x0013a024, 0xe);                 /* jl 0x13a024 */
    II(0x0013a016, 0x2)   jgw(0x0013a01d, 0x5);                 /* jg 0x13a01d */
    II(0x0013a018, 0x3)   cmp(memw_a16(ss, bp - 0x4), ax);      /* cmp [bp-0x4], ax */
    II(0x0013a01b, 0x2)   jbew(0x0013a024, 0x7);                /* jbe 0x13a024 */
l_0x0013a01d:
    II(0x0013a01d, 0x5)   mov(memw_a16(ss, bp - 0x14), 0x8016); /* mov word [bp-0x14], 0x8016 */
    II(0x0013a022, 0x2)   jmpw(0x0013a086, 0x62);               /* jmp 0x13a086 */
l_0x0013a024:
    II(0x0013a024, 0x3)   mov(ax, memw_a16(ds, 0x1a));          /* mov ax, [0x1a] */
    II(0x0013a027, 0x4)   or_(ax, memw_a16(ds, 0x18));          /* or ax, [0x18] */
    II(0x0013a02b, 0x2)   jzw(0x0013a086, 0x59);                /* jz 0x13a086 */
    II(0x0013a02d, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013a030, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013a033, 0x4)   sub(ax, memw_a16(ds, 0x1fc4));        /* sub ax, [0x1fc4] */
    II(0x0013a037, 0x4)   sbb(dx, memw_a16(ds, 0x1fc6));        /* sbb dx, [0x1fc6] */
    II(0x0013a03b, 0x4)   sub(ax, memw_a16(ds, 0x1fc0));        /* sub ax, [0x1fc0] */
    II(0x0013a03f, 0x4)   sbb(dx, memw_a16(ds, 0x1fc2));        /* sbb dx, [0x1fc2] */
    II(0x0013a043, 0x4)   add(ax, memw_a16(ds, 0x1fb4));        /* add ax, [0x1fb4] */
    II(0x0013a047, 0x4)   adc(dx, memw_a16(ds, 0x1fb6));        /* adc dx, [0x1fb6] */
    II(0x0013a04b, 0x3)   add(ax, 0x4);                         /* add ax, 0x4 */
    II(0x0013a04e, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x0013a051, 0x3)   mov(memw_a16(ss, bp - 0x18), ax);     /* mov [bp-0x18], ax */
    II(0x0013a054, 0x3)   mov(memw_a16(ss, bp - 0x16), dx);     /* mov [bp-0x16], dx */
    II(0x0013a057, 0x4)   mov(cx, memw_a16(ds, 0x1f50));        /* mov cx, [0x1f50] */
    II(0x0013a05b, 0x4)   mov(bx, memw_a16(ds, 0x1f52));        /* mov bx, [0x1f52] */
    II(0x0013a05f, 0x2)   cmp(dx, bx);                          /* cmp dx, bx */
    II(0x0013a061, 0x2)   jlw(0x0013a086, 0x23);                /* jl 0x13a086 */
    II(0x0013a063, 0x2)   jgw(0x0013a069, 0x4);                 /* jg 0x13a069 */
    II(0x0013a065, 0x2)   cmp(ax, cx);                          /* cmp ax, cx */
    II(0x0013a067, 0x2)   jbew(0x0013a086, 0x1d);               /* jbe 0x13a086 */
l_0x0013a069:
    II(0x0013a069, 0x2)   sub(ax, cx);                          /* sub ax, cx */
    II(0x0013a06b, 0x2)   sbb(dx, bx);                          /* sbb dx, bx */
    II(0x0013a06d, 0x3)   mov(memw_a16(ss, bp - 0x24), ax);     /* mov [bp-0x24], ax */
    II(0x0013a070, 0x3)   mov(memw_a16(ss, bp - 0x22), dx);     /* mov [bp-0x22], dx */
    II(0x0013a073, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013a074, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013a075, 0x1)   nop();                                /* nop  */
    II(0x0013a076, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a077, 0x3)   callw(0x00138ba6, -0x14d4);           /* call 0x138ba6 */
    II(0x0013a07a, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013a07d, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013a07f, 0x2)   jnzw(0x0013a086, 0x5);                /* jnz 0x13a086 */
    II(0x0013a081, 0x5)   mov(memw_a16(ss, bp - 0x14), 0x8014); /* mov word [bp-0x14], 0x8014 */
l_0x0013a086:
    II(0x0013a086, 0x4)   cmp(memw_a16(ss, bp - 0x14), 0);      /* cmp word [bp-0x14], 0x0 */
    II(0x0013a08a, 0x2)   jzw(0x0013a0a6, 0x1a);                /* jz 0x13a0a6 */
    II(0x0013a08c, 0x3)   mov(ax, memw_a16(ss, bp - 0x14));     /* mov ax, [bp-0x14] */
    II(0x0013a08f, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a092, 0x4)   mov(memw_a16(es, bx + 0x20), ax);     /* mov [es:bx+0x20], ax */
    II(0x0013a096, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x0013a09c, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x0013a0a1, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013a0a2, 0x1)   popw(si);                             /* pop si */
    II(0x0013a0a3, 0x1)   leavew();                             /* leave  */
    II(0x0013a0a4, 0x1)   retfw();                              /* retf  */
//    II(0x0013a0a5, 0x1)   /* Недостижимый код. */
l_0x0013a0a6:
    II(0x0013a0a6, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013a0a9, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013a0ac, 0x4)   sub(memw_a16(ds, 0x1fac), ax);        /* sub [0x1fac], ax */
    II(0x0013a0b0, 0x4)   sbb(memw_a16(ds, 0x1fae), dx);        /* sbb [0x1fae], dx */
    II(0x0013a0b4, 0x5)   cmp(memw_a16(ds, 0x1fae), 0);         /* cmp word [0x1fae], 0x0 */
    II(0x0013a0b9, 0x2)   jgew(0x0013a0c3, 0x8);                /* jge 0x13a0c3 */
    II(0x0013a0bb, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013a0bd, 0x3)   mov(memw_a16(ds, 0x1fae), ax);        /* mov [0x1fae], ax */
    II(0x0013a0c0, 0x3)   mov(memw_a16(ds, 0x1fac), ax);        /* mov [0x1fac], ax */
l_0x0013a0c3:
    II(0x0013a0c3, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013a0c6, 0x4)   sub(memw_a16(ds, 0x1fc4), ax);        /* sub [0x1fc4], ax */
    II(0x0013a0ca, 0x4)   sbb(memw_a16(ds, 0x1fc6), dx);        /* sbb [0x1fc6], dx */
    II(0x0013a0ce, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a0d1, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
l_0x0013a0d6:
    II(0x0013a0d6, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013a0d7, 0x1)   popw(si);                             /* pop si */
    II(0x0013a0d8, 0x1)   leavew();                             /* leave  */
    II(0x0013a0d9, 0x1)   retfw();                              /* retf  */
FUNC_END

