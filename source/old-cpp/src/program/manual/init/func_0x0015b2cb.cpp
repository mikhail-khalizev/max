FUNC_BEGIN(0x0015b2cb, 0x219a32b2539a0279, 0x10, ({0xc8, 0xde, 0, 0, 0x57, 0x56, 0xc4, 0x5e, 0x8, 0x26, 0x8b, 0x87, 0x2a, 0x1, 0x89, 0x86, 0x36, 0xff, 0x8b, 0x46, 0x4, 0x8b, 0x56, 0x6, 0x6, 0x1e, 0x8d, 0xbe, 0x38, 0xff, 0x8b, 0xf0, 0x16, 0x7, 0x8e, 0xda, 0xb9, 0x62, 0, 0xf3, 0xa5, 0x1f, 0x7, 0x26, 0x8b, 0x8f, 0xb6, 0, 0x26, 0x8b, 0xb7, 0xb8, 0, 0x1, 0x4e, 0xb8, 0x11, 0x76, 0xba, 0x8e, 0xc2, 0x8b, 0xd8, 0x26, 0x1, 0x8f, 0x80, 0, 0x26, 0x11, 0xb7, 0x82, 0, 0x8b, 0x46, 0xa0, 0x8b, 0x56, 0xa2, 0x2b, 0x86, 0x78, 0xff, 0x1b, 0x96, 0x7a, 0xff, 0x89, 0x86, 0x70, 0xff, 0x89, 0x96, 0x72, 0xff, 0x3, 0x46, 0xc4, 0x13, 0x56, 0xc6, 0x5, 0xc4, 0, 0x83, 0xd2, 0, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xc4, 0x5e, 0x8, 0x26, 0x89, 0x47, 0x5e, 0x26, 0x89, 0x57, 0x60, 0x6, 0x53, 0x6a, 0xfe, 0x6a, 0x1, 0x52, 0x50, 0xe8, 0x23, 0x16, 0x89, 0x86, 0x26, 0xff, 0x89, 0x96, 0x28, 0xff, 0xb, 0xd0, 0x75, 0x6, 0xb8, 0x1b, 0x5, 0xe9, 0x67, 0x2, 0x8b, 0x96, 0x28, 0xff, 0xc4, 0x5e, 0x8, 0x26, 0x89, 0x87, 0xba, 0, 0x26, 0x89, 0x97, 0xbc, 0, 0x52, 0x50, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xe8, 0x1f, 0x48, 0xb, 0xc0, 0x75, 0x6, 0xb8, 0x22, 0x5, 0xe9, 0x41, 0x2, 0xff, 0xb6, 0x36, 0xff, 0xff, 0xb6, 0x28, 0xff, 0xff, 0xb6, 0x26, 0xff, 0x6a, 0, 0x68, 0xc4, 0, 0x8b, 0x46, 0x8, 0x8b, 0x56, 0xa, 0x5, 0x1c, 0, 0x52, 0x50, 0x8b, 0xf0, 0x8b, 0xfa, 0xe8, 0xd5, 0xfe, 0x68, 0xc4, 0, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0x8e, 0xc7, 0x26, 0xff, 0x74, 0x2, 0x26, 0xff, 0x34, 0x90, 0xe, 0xe8, 0x9b, 0x5b, 0x83, 0xc4, 0xa, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0xb7, 0xb4, 0, 0x26, 0x8b, 0x47, 0x6e, 0x26, 0x8b, 0x57, 0x70, 0x3, 0x86, 0x78, 0xff, 0x13, 0x96, 0x7a, 0xff, 0x52, 0x50, 0x81, 0x86, 0x26, 0xff, 0xc4, 0, 0x83, 0x96, 0x28, 0xff, 0, 0x8b, 0x86, 0x26, 0xff, 0x8b, 0x96, 0x28, 0xff, 0x52, 0x50, 0xff, 0xb6, 0x72, 0xff, 0xff, 0xb6, 0x70, 0xff, 0xe8, 0xe2, 0x10, 0xff, 0xb6, 0x36, 0xff, 0xff, 0xb6, 0x28, 0xff, 0xff, 0xb6, 0x26, 0xff, 0x6a, 0, 0x6a, 0x18, 0xff, 0xb6, 0x7e, 0xff, 0xff, 0xb6, 0x7c, 0xff, 0x9a, 0x52, 0x42, 0x80, 0, 0x52, 0x50, 0x8b, 0x4e, 0x8, 0x8b, 0x5e, 0xa, 0x83, 0xc1, 0x3c, 0x53, 0x51, 0x8b, 0xf0, 0x8b, 0xfa, 0xe8, 0x50, 0xfe, 0xff, 0xb6, 0x36, 0xff, 0x3, 0xb6, 0x26, 0xff, 0x13, 0xbe, 0x28, 0xff, 0x89, 0xb6, 0x26, 0xff, 0x89, 0xbe, 0x28, 0xff, 0x57, 0x56, 0x8b, 0x46, 0x90, 0x8b, 0x56, 0x92, 0x2b, 0x46, 0x80, 0x1b, 0x56, 0x82, 0x52, 0x50, 0x8b, 0x4e, 0x8, 0x8b, 0x5e, 0xa, 0x83, 0xc1, 0x40, 0x53, 0x51, 0x8b, 0xf0, 0x8b, 0xfa, 0xe8, 0x1a, 0xfe, 0xff, 0xb6, 0x36, 0xff, 0x3, 0xb6, 0x26, 0xff, 0x13, 0xbe, 0x28, 0xff, 0x89, 0xb6, 0x26, 0xff, 0x89, 0xbe, 0x28, 0xff, 0x57, 0x56, 0x8b, 0x46, 0x94, 0x8b, 0x56, 0x96, 0x2b, 0x46, 0x90, 0x1b, 0x56, 0x92, 0x52, 0x50, 0x8b, 0x4e, 0x8, 0x8b, 0x5e, 0xa, 0x83, 0xc1, 0x20, 0x53, 0x51, 0x8b, 0xf0, 0x8b, 0xfa, 0xe8, 0xe4, 0xfd, 0x8b, 0x46, 0xa0, 0x8b, 0x56, 0xa2, 0x2b, 0x46, 0x94, 0x1b, 0x56, 0x96, 0x89, 0x86, 0x2a, 0xff, 0x89, 0x96, 0x2c, 0xff, 0xff, 0xb6, 0x36, 0xff, 0x3, 0xb6, 0x26, 0xff, 0x13, 0xbe, 0x28, 0xff, 0x89, 0xb6, 0x26, 0xff, 0x89, 0xbe, 0x28, 0xff, 0x57, 0x56, 0x52, 0x50, 0x8b, 0x4e, 0x8, 0x8b, 0x5e, 0xa, 0x83, 0xc1, 0x34, 0x53, 0x51, 0xe8, 0xaa, 0xfd, 0x3, 0xb6, 0x2a, 0xff, 0x13, 0xbe, 0x2c, 0xff, 0x89, 0xb6, 0x26, 0xff, 0x89, 0xbe, 0x28, 0xff, 0x8b, 0x46, 0xc6, 0xb, 0x46, 0xc4, 0x74, 0x39, 0xff, 0xb6, 0x36, 0xff, 0x57, 0x56, 0xff, 0x76, 0xc6, 0xff, 0x76, 0xc4, 0x8b, 0x46, 0x8, 0x8b, 0x56, 0xa, 0x5, 0x24, 0, 0x52, 0x50, 0xe8, 0x78, 0xfd, 0xc4, 0x5e, 0x8, 0x26, 0xff, 0xb7, 0xb4, 0, 0xff, 0x76, 0xc2, 0xff, 0x76, 0xc0, 0xff, 0xb6, 0x28, 0xff, 0xff, 0xb6, 0x26, 0xff, 0xff, 0x76, 0xc6, 0xff, 0x76, 0xc4, 0xe8, 0xba, 0xf, 0x80, 0x3e, 0xf4, 0x19, 0x1, 0x74, 0x3, 0xe9, 0x96, 0, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0x6a, 0xf9, 0x6a, 0x1, 0xb8, 0x28, 0, 0x99, 0x89, 0x86, 0x2a, 0xff, 0x89, 0x96, 0x2c, 0xff, 0x52, 0x50, 0xe8, 0x27, 0x14, 0x89, 0x86, 0x26, 0xff, 0x89, 0x96, 0x28, 0xff, 0xb, 0xd0, 0x75, 0x3, 0xe9, 0x1, 0xfe, 0xff, 0xb6, 0x28, 0xff, 0x50, 0xff, 0xb6, 0x2c, 0xff, 0xff, 0xb6, 0x2a, 0xff, 0xe8, 0x32, 0x46, 0xb, 0xc0, 0x75, 0x3, 0xe9, 0x10, 0xfe, 0xff, 0xb6, 0x36, 0xff, 0x6a, 0x1, 0xff, 0xb6, 0x28, 0xff, 0xff, 0xb6, 0x26, 0xff, 0xff, 0xb6, 0x2c, 0xff, 0xff, 0xb6, 0x2a, 0xff, 0xe8, 0xb9, 0x28, 0x8e, 0xc2, 0x8b, 0xd8, 0x8c, 0xc0, 0xc4, 0x76, 0x8, 0x26, 0x8b, 0x8c, 0xc4, 0, 0x26, 0x8b, 0x94, 0xc6, 0, 0x26, 0x89, 0x5c, 0x38, 0x26, 0x89, 0x44, 0x3a, 0x8e, 0xc0, 0x26, 0x89, 0xf, 0x26, 0x89, 0x57, 0x2, 0x8d, 0x47, 0x6, 0x6, 0x50, 0xe8, 0x25, 0x2d, 0xc4, 0x5e, 0x8, 0x26, 0x8b, 0x87, 0xb4, 0, 0x26, 0xc4, 0x5f, 0x38, 0x26, 0x89, 0x47, 0x4, 0x2b, 0xc0, 0x5e, 0x5f, 0xc9, 0xc2, 0x8, 0}))
    II(0x0015b2cb, 0x4)   enterw(0xde, 0);                      /* enter 0xde, 0x0 */
    II(0x0015b2cf, 0x1)   pushw(di);                            /* push di */
    II(0x0015b2d0, 0x1)   pushw(si);                            /* push si */
    II(0x0015b2d1, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015b2d4, 0x5)   mov(ax, memw_a16(es, bx + 0x12a));    /* mov ax, [es:bx+0x12a] */
    II(0x0015b2d9, 0x4)   mov(memw_a16(ss, bp - 0xca), ax);     /* mov [bp+0xff36], ax */
    II(0x0015b2dd, 0x3)   mov(ax, memw_a16(ss, bp + 0x4));      /* mov ax, [bp+0x4] */
    II(0x0015b2e0, 0x3)   mov(dx, memw_a16(ss, bp + 0x6));      /* mov dx, [bp+0x6] */
    II(0x0015b2e3, 0x1)   pushw(es);                            /* push es */
    II(0x0015b2e4, 0x1)   pushw(ds);                            /* push ds */
    II(0x0015b2e5, 0x4)   lea(di, bp - 0xc8);                   /* lea di, [bp+0xff38] */
    II(0x0015b2e9, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0015b2eb, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015b2ec, 0x1)   popw(es);                             /* pop es */
    II(0x0015b2ed, 0x2)   mov(ds, dx);                          /* mov ds, dx */
    II(0x0015b2ef, 0x3)   mov(cx, 0x62);                        /* mov cx, 0x62 */
    II(0x0015b2f2, 0x2)   rep_a16 movsw_a16();                  /* rep movsw  */
    II(0x0015b2f4, 0x1)   popw(ds);                             /* pop ds */
    II(0x0015b2f5, 0x1)   popw(es);                             /* pop es */
    II(0x0015b2f6, 0x5)   mov(cx, memw_a16(es, bx + 0xb6));     /* mov cx, [es:bx+0xb6] */
    II(0x0015b2fb, 0x5)   mov(si, memw_a16(es, bx + 0xb8));     /* mov si, [es:bx+0xb8] */
    II(0x0015b300, 0x3)   add(memw_a16(ss, bp - 0x48), cx);     /* add [bp-0x48], cx */
    II(0x0015b303, 0x3)   adc(memw_a16(ss, bp - 0x46), si);     /* adc [bp-0x46], si */
    II(0x0015b306, 0x2)   mov(es, dx);                          /* mov es, dx */
    II(0x0015b308, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x0015b30a, 0x5)   add(memw_a16(es, bx + 0x80), cx);     /* add [es:bx+0x80], cx */
    II(0x0015b30f, 0x5)   adc(memw_a16(es, bx + 0x82), si);     /* adc [es:bx+0x82], si */
    II(0x0015b314, 0x3)   mov(ax, memw_a16(ss, bp - 0x60));     /* mov ax, [bp-0x60] */
    II(0x0015b317, 0x3)   mov(dx, memw_a16(ss, bp - 0x5e));     /* mov dx, [bp-0x5e] */
    II(0x0015b31a, 0x4)   sub(ax, memw_a16(ss, bp - 0x88));     /* sub ax, [bp+0xff78] */
    II(0x0015b31e, 0x4)   sbb(dx, memw_a16(ss, bp - 0x86));     /* sbb dx, [bp+0xff7a] */
    II(0x0015b322, 0x4)   mov(memw_a16(ss, bp - 0x90), ax);     /* mov [bp+0xff70], ax */
    II(0x0015b326, 0x4)   mov(memw_a16(ss, bp - 0x8e), dx);     /* mov [bp+0xff72], dx */
    II(0x0015b32a, 0x3)   add(ax, memw_a16(ss, bp - 0x3c));     /* add ax, [bp-0x3c] */
    II(0x0015b32d, 0x3)   adc(dx, memw_a16(ss, bp - 0x3a));     /* adc dx, [bp-0x3a] */
    II(0x0015b330, 0x3)   add(ax, 0xc4);                        /* add ax, 0xc4 */
    II(0x0015b333, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x0015b336, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0015b339, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0015b33c, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015b33f, 0x4)   mov(memw_a16(es, bx + 0x5e), ax);     /* mov [es:bx+0x5e], ax */
    II(0x0015b343, 0x4)   mov(memw_a16(es, bx + 0x60), dx);     /* mov [es:bx+0x60], dx */
    II(0x0015b347, 0x1)   pushw(es);                            /* push es */
    II(0x0015b348, 0x1)   pushw(bx);                            /* push bx */
    II(0x0015b349, 0x2)   pushw(-0x2 /* 0xfe */);               /* push 0xfe */
    II(0x0015b34b, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x0015b34d, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b34e, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b34f, 0x3)   callw(0x0015c975, 0x1623);            /* call 0x15c975 */
    II(0x0015b352, 0x4)   mov(memw_a16(ss, bp - 0xda), ax);     /* mov [bp+0xff26], ax */
    II(0x0015b356, 0x4)   mov(memw_a16(ss, bp - 0xd8), dx);     /* mov [bp+0xff28], dx */
    II(0x0015b35a, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0015b35c, 0x2)   jnzw(0x0015b364, 0x6);                /* jnz 0x15b364 */
l_0x0015b35e:
    II(0x0015b35e, 0x3)   mov(ax, 0x51b);                       /* mov ax, 0x51b */
    II(0x0015b361, 0x3)   jmpw(0x0015b5cb, 0x267);              /* jmp 0x15b5cb */
l_0x0015b364:
    II(0x0015b364, 0x4)   mov(dx, memw_a16(ss, bp - 0xd8));     /* mov dx, [bp+0xff28] */
    II(0x0015b368, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015b36b, 0x5)   mov(memw_a16(es, bx + 0xba), ax);     /* mov [es:bx+0xba], ax */
    II(0x0015b370, 0x5)   mov(memw_a16(es, bx + 0xbc), dx);     /* mov [es:bx+0xbc], dx */
    II(0x0015b375, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b376, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b377, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0015b37a, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0015b37d, 0x3)   callw(0x0015fb9f, 0x481f);            /* call 0x15fb9f */
    II(0x0015b380, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0015b382, 0x2)   jnzw(0x0015b38a, 0x6);                /* jnz 0x15b38a */
l_0x0015b384:
    II(0x0015b384, 0x3)   mov(ax, 0x522);                       /* mov ax, 0x522 */
    II(0x0015b387, 0x3)   jmpw(0x0015b5cb, 0x241);              /* jmp 0x15b5cb */
l_0x0015b38a:
    II(0x0015b38a, 0x4)   pushw(memw_a16(ss, bp - 0xca));       /* push word [bp+0xff36] */
    II(0x0015b38e, 0x4)   pushw(memw_a16(ss, bp - 0xd8));       /* push word [bp+0xff28] */
    II(0x0015b392, 0x4)   pushw(memw_a16(ss, bp - 0xda));       /* push word [bp+0xff26] */
    II(0x0015b396, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0015b398, 0x3)   pushw(0xc4);                          /* push word 0xc4 */
    II(0x0015b39b, 0x3)   mov(ax, memw_a16(ss, bp + 0x8));      /* mov ax, [bp+0x8] */
    II(0x0015b39e, 0x3)   mov(dx, memw_a16(ss, bp + 0xa));      /* mov dx, [bp+0xa] */
    II(0x0015b3a1, 0x3)   add(ax, 0x1c);                        /* add ax, 0x1c */
    II(0x0015b3a4, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b3a5, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b3a6, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0015b3a8, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x0015b3aa, 0x3)   callw(0x0015b282, -0x12b);            /* call 0x15b282 */
    II(0x0015b3ad, 0x3)   pushw(0xc4);                          /* push word 0xc4 */
    II(0x0015b3b0, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0015b3b3, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0015b3b6, 0x2)   mov(es, di);                          /* mov es, di */
    II(0x0015b3b8, 0x4)   pushw(memw_a16(es, si + 0x2));        /* push word [es:si+0x2] */
    II(0x0015b3bc, 0x3)   pushw(memw_a16(es, si));              /* push word [es:si] */
//    II(0x0015b3bf, 0x1)   nop();                                /* nop  */
    II(0x0015b3c0, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015b3c1, 0x3)   callw(0x00160f5f, 0x5b9b);            /* call 0x160f5f */
    II(0x0015b3c4, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0015b3c7, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015b3ca, 0x5)   pushw(memw_a16(es, bx + 0xb4));       /* push word [es:bx+0xb4] */
    II(0x0015b3cf, 0x4)   mov(ax, memw_a16(es, bx + 0x6e));     /* mov ax, [es:bx+0x6e] */
    II(0x0015b3d3, 0x4)   mov(dx, memw_a16(es, bx + 0x70));     /* mov dx, [es:bx+0x70] */
    II(0x0015b3d7, 0x4)   add(ax, memw_a16(ss, bp - 0x88));     /* add ax, [bp+0xff78] */
    II(0x0015b3db, 0x4)   adc(dx, memw_a16(ss, bp - 0x86));     /* adc dx, [bp+0xff7a] */
    II(0x0015b3df, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b3e0, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b3e1, 0x6)   add(memw_a16(ss, bp - 0xda), 0xc4);   /* add word [bp+0xff26], 0xc4 */
    II(0x0015b3e7, 0x5)   adc(memw_a16(ss, bp - 0xd8), 0);      /* adc word [bp+0xff28], 0x0 */
    II(0x0015b3ec, 0x4)   mov(ax, memw_a16(ss, bp - 0xda));     /* mov ax, [bp+0xff26] */
    II(0x0015b3f0, 0x4)   mov(dx, memw_a16(ss, bp - 0xd8));     /* mov dx, [bp+0xff28] */
    II(0x0015b3f4, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b3f5, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b3f6, 0x4)   pushw(memw_a16(ss, bp - 0x8e));       /* push word [bp+0xff72] */
    II(0x0015b3fa, 0x4)   pushw(memw_a16(ss, bp - 0x90));       /* push word [bp+0xff70] */
    II(0x0015b3fe, 0x3)   callw(0x0015c4e3, 0x10e2);            /* call 0x15c4e3 */
    II(0x0015b401, 0x4)   pushw(memw_a16(ss, bp - 0xca));       /* push word [bp+0xff36] */
    II(0x0015b405, 0x4)   pushw(memw_a16(ss, bp - 0xd8));       /* push word [bp+0xff28] */
    II(0x0015b409, 0x4)   pushw(memw_a16(ss, bp - 0xda));       /* push word [bp+0xff26] */
    II(0x0015b40d, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0015b40f, 0x2)   pushw(0x18);                          /* push 0x18 */
    II(0x0015b411, 0x4)   pushw(memw_a16(ss, bp - 0x82));       /* push word [bp+0xff7e] */
    II(0x0015b415, 0x4)   pushw(memw_a16(ss, bp - 0x84));       /* push word [bp+0xff7c] */
    II(0x0015b419, 0x5)   callw_far_abs(0x80, 0x4252);          /* call word 0x80:0x4252 */
    II(0x0015b41e, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b41f, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b420, 0x3)   mov(cx, memw_a16(ss, bp + 0x8));      /* mov cx, [bp+0x8] */
    II(0x0015b423, 0x3)   mov(bx, memw_a16(ss, bp + 0xa));      /* mov bx, [bp+0xa] */
    II(0x0015b426, 0x3)   add(cx, 0x3c);                        /* add cx, 0x3c */
    II(0x0015b429, 0x1)   pushw(bx);                            /* push bx */
    II(0x0015b42a, 0x1)   pushw(cx);                            /* push cx */
    II(0x0015b42b, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0015b42d, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x0015b42f, 0x3)   callw(0x0015b282, -0x1b0);            /* call 0x15b282 */
    II(0x0015b432, 0x4)   pushw(memw_a16(ss, bp - 0xca));       /* push word [bp+0xff36] */
    II(0x0015b436, 0x4)   add(si, memw_a16(ss, bp - 0xda));     /* add si, [bp+0xff26] */
    II(0x0015b43a, 0x4)   adc(di, memw_a16(ss, bp - 0xd8));     /* adc di, [bp+0xff28] */
    II(0x0015b43e, 0x4)   mov(memw_a16(ss, bp - 0xda), si);     /* mov [bp+0xff26], si */
    II(0x0015b442, 0x4)   mov(memw_a16(ss, bp - 0xd8), di);     /* mov [bp+0xff28], di */
    II(0x0015b446, 0x1)   pushw(di);                            /* push di */
    II(0x0015b447, 0x1)   pushw(si);                            /* push si */
    II(0x0015b448, 0x3)   mov(ax, memw_a16(ss, bp - 0x70));     /* mov ax, [bp-0x70] */
    II(0x0015b44b, 0x3)   mov(dx, memw_a16(ss, bp - 0x6e));     /* mov dx, [bp-0x6e] */
    II(0x0015b44e, 0x3)   sub(ax, memw_a16(ss, bp - 0x80));     /* sub ax, [bp-0x80] */
    II(0x0015b451, 0x3)   sbb(dx, memw_a16(ss, bp - 0x7e));     /* sbb dx, [bp-0x7e] */
    II(0x0015b454, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b455, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b456, 0x3)   mov(cx, memw_a16(ss, bp + 0x8));      /* mov cx, [bp+0x8] */
    II(0x0015b459, 0x3)   mov(bx, memw_a16(ss, bp + 0xa));      /* mov bx, [bp+0xa] */
    II(0x0015b45c, 0x3)   add(cx, 0x40);                        /* add cx, 0x40 */
    II(0x0015b45f, 0x1)   pushw(bx);                            /* push bx */
    II(0x0015b460, 0x1)   pushw(cx);                            /* push cx */
    II(0x0015b461, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0015b463, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x0015b465, 0x3)   callw(0x0015b282, -0x1e6);            /* call 0x15b282 */
    II(0x0015b468, 0x4)   pushw(memw_a16(ss, bp - 0xca));       /* push word [bp+0xff36] */
    II(0x0015b46c, 0x4)   add(si, memw_a16(ss, bp - 0xda));     /* add si, [bp+0xff26] */
    II(0x0015b470, 0x4)   adc(di, memw_a16(ss, bp - 0xd8));     /* adc di, [bp+0xff28] */
    II(0x0015b474, 0x4)   mov(memw_a16(ss, bp - 0xda), si);     /* mov [bp+0xff26], si */
    II(0x0015b478, 0x4)   mov(memw_a16(ss, bp - 0xd8), di);     /* mov [bp+0xff28], di */
    II(0x0015b47c, 0x1)   pushw(di);                            /* push di */
    II(0x0015b47d, 0x1)   pushw(si);                            /* push si */
    II(0x0015b47e, 0x3)   mov(ax, memw_a16(ss, bp - 0x6c));     /* mov ax, [bp-0x6c] */
    II(0x0015b481, 0x3)   mov(dx, memw_a16(ss, bp - 0x6a));     /* mov dx, [bp-0x6a] */
    II(0x0015b484, 0x3)   sub(ax, memw_a16(ss, bp - 0x70));     /* sub ax, [bp-0x70] */
    II(0x0015b487, 0x3)   sbb(dx, memw_a16(ss, bp - 0x6e));     /* sbb dx, [bp-0x6e] */
    II(0x0015b48a, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b48b, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b48c, 0x3)   mov(cx, memw_a16(ss, bp + 0x8));      /* mov cx, [bp+0x8] */
    II(0x0015b48f, 0x3)   mov(bx, memw_a16(ss, bp + 0xa));      /* mov bx, [bp+0xa] */
    II(0x0015b492, 0x3)   add(cx, 0x20);                        /* add cx, 0x20 */
    II(0x0015b495, 0x1)   pushw(bx);                            /* push bx */
    II(0x0015b496, 0x1)   pushw(cx);                            /* push cx */
    II(0x0015b497, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0015b499, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x0015b49b, 0x3)   callw(0x0015b282, -0x21c);            /* call 0x15b282 */
    II(0x0015b49e, 0x3)   mov(ax, memw_a16(ss, bp - 0x60));     /* mov ax, [bp-0x60] */
    II(0x0015b4a1, 0x3)   mov(dx, memw_a16(ss, bp - 0x5e));     /* mov dx, [bp-0x5e] */
    II(0x0015b4a4, 0x3)   sub(ax, memw_a16(ss, bp - 0x6c));     /* sub ax, [bp-0x6c] */
    II(0x0015b4a7, 0x3)   sbb(dx, memw_a16(ss, bp - 0x6a));     /* sbb dx, [bp-0x6a] */
    II(0x0015b4aa, 0x4)   mov(memw_a16(ss, bp - 0xd6), ax);     /* mov [bp+0xff2a], ax */
    II(0x0015b4ae, 0x4)   mov(memw_a16(ss, bp - 0xd4), dx);     /* mov [bp+0xff2c], dx */
    II(0x0015b4b2, 0x4)   pushw(memw_a16(ss, bp - 0xca));       /* push word [bp+0xff36] */
    II(0x0015b4b6, 0x4)   add(si, memw_a16(ss, bp - 0xda));     /* add si, [bp+0xff26] */
    II(0x0015b4ba, 0x4)   adc(di, memw_a16(ss, bp - 0xd8));     /* adc di, [bp+0xff28] */
    II(0x0015b4be, 0x4)   mov(memw_a16(ss, bp - 0xda), si);     /* mov [bp+0xff26], si */
    II(0x0015b4c2, 0x4)   mov(memw_a16(ss, bp - 0xd8), di);     /* mov [bp+0xff28], di */
    II(0x0015b4c6, 0x1)   pushw(di);                            /* push di */
    II(0x0015b4c7, 0x1)   pushw(si);                            /* push si */
    II(0x0015b4c8, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b4c9, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b4ca, 0x3)   mov(cx, memw_a16(ss, bp + 0x8));      /* mov cx, [bp+0x8] */
    II(0x0015b4cd, 0x3)   mov(bx, memw_a16(ss, bp + 0xa));      /* mov bx, [bp+0xa] */
    II(0x0015b4d0, 0x3)   add(cx, 0x34);                        /* add cx, 0x34 */
    II(0x0015b4d3, 0x1)   pushw(bx);                            /* push bx */
    II(0x0015b4d4, 0x1)   pushw(cx);                            /* push cx */
    II(0x0015b4d5, 0x3)   callw(0x0015b282, -0x256);            /* call 0x15b282 */
    II(0x0015b4d8, 0x4)   add(si, memw_a16(ss, bp - 0xd6));     /* add si, [bp+0xff2a] */
    II(0x0015b4dc, 0x4)   adc(di, memw_a16(ss, bp - 0xd4));     /* adc di, [bp+0xff2c] */
    II(0x0015b4e0, 0x4)   mov(memw_a16(ss, bp - 0xda), si);     /* mov [bp+0xff26], si */
    II(0x0015b4e4, 0x4)   mov(memw_a16(ss, bp - 0xd8), di);     /* mov [bp+0xff28], di */
    II(0x0015b4e8, 0x3)   mov(ax, memw_a16(ss, bp - 0x3a));     /* mov ax, [bp-0x3a] */
    II(0x0015b4eb, 0x3)   or_(ax, memw_a16(ss, bp - 0x3c));     /* or ax, [bp-0x3c] */
    II(0x0015b4ee, 0x2)   jzw(0x0015b529, 0x39);                /* jz 0x15b529 */
    II(0x0015b4f0, 0x4)   pushw(memw_a16(ss, bp - 0xca));       /* push word [bp+0xff36] */
    II(0x0015b4f4, 0x1)   pushw(di);                            /* push di */
    II(0x0015b4f5, 0x1)   pushw(si);                            /* push si */
    II(0x0015b4f6, 0x3)   pushw(memw_a16(ss, bp - 0x3a));       /* push word [bp-0x3a] */
    II(0x0015b4f9, 0x3)   pushw(memw_a16(ss, bp - 0x3c));       /* push word [bp-0x3c] */
    II(0x0015b4fc, 0x3)   mov(ax, memw_a16(ss, bp + 0x8));      /* mov ax, [bp+0x8] */
    II(0x0015b4ff, 0x3)   mov(dx, memw_a16(ss, bp + 0xa));      /* mov dx, [bp+0xa] */
    II(0x0015b502, 0x3)   add(ax, 0x24);                        /* add ax, 0x24 */
    II(0x0015b505, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b506, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b507, 0x3)   callw(0x0015b282, -0x288);            /* call 0x15b282 */
    II(0x0015b50a, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015b50d, 0x5)   pushw(memw_a16(es, bx + 0xb4));       /* push word [es:bx+0xb4] */
    II(0x0015b512, 0x3)   pushw(memw_a16(ss, bp - 0x3e));       /* push word [bp-0x3e] */
    II(0x0015b515, 0x3)   pushw(memw_a16(ss, bp - 0x40));       /* push word [bp-0x40] */
    II(0x0015b518, 0x4)   pushw(memw_a16(ss, bp - 0xd8));       /* push word [bp+0xff28] */
    II(0x0015b51c, 0x4)   pushw(memw_a16(ss, bp - 0xda));       /* push word [bp+0xff26] */
    II(0x0015b520, 0x3)   pushw(memw_a16(ss, bp - 0x3a));       /* push word [bp-0x3a] */
    II(0x0015b523, 0x3)   pushw(memw_a16(ss, bp - 0x3c));       /* push word [bp-0x3c] */
    II(0x0015b526, 0x3)   callw(0x0015c4e3, 0xfba);             /* call 0x15c4e3 */
l_0x0015b529:
    II(0x0015b529, 0x5)   cmp(memb_a16(ds, 0x19f4), 0x1);       /* cmp byte [0x19f4], 0x1 */
    II(0x0015b52e, 0x2)   jzw(0x0015b533, 0x3);                 /* jz 0x15b533 */
    II(0x0015b530, 0x3)   jmpw(0x0015b5c9, 0x96);               /* jmp 0x15b5c9 */
l_0x0015b533:
    II(0x0015b533, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x0015b536, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0015b539, 0x2)   pushw(-0x7 /* 0xf9 */);               /* push 0xf9 */
    II(0x0015b53b, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x0015b53d, 0x3)   mov(ax, 0x28);                        /* mov ax, 0x28 */
    II(0x0015b540, 0x1)   cwd();                                /* cwd  */
    II(0x0015b541, 0x4)   mov(memw_a16(ss, bp - 0xd6), ax);     /* mov [bp+0xff2a], ax */
    II(0x0015b545, 0x4)   mov(memw_a16(ss, bp - 0xd4), dx);     /* mov [bp+0xff2c], dx */
    II(0x0015b549, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015b54a, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b54b, 0x3)   callw(0x0015c975, 0x1427);            /* call 0x15c975 */
    II(0x0015b54e, 0x4)   mov(memw_a16(ss, bp - 0xda), ax);     /* mov [bp+0xff26], ax */
    II(0x0015b552, 0x4)   mov(memw_a16(ss, bp - 0xd8), dx);     /* mov [bp+0xff28], dx */
    II(0x0015b556, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0015b558, 0x2)   jnzw(0x0015b55d, 0x3);                /* jnz 0x15b55d */
    II(0x0015b55a, 0x3)   jmpw(0x0015b35e, -0x1ff);             /* jmp 0x15b35e */
l_0x0015b55d:
    II(0x0015b55d, 0x4)   pushw(memw_a16(ss, bp - 0xd8));       /* push word [bp+0xff28] */
    II(0x0015b561, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b562, 0x4)   pushw(memw_a16(ss, bp - 0xd4));       /* push word [bp+0xff2c] */
    II(0x0015b566, 0x4)   pushw(memw_a16(ss, bp - 0xd6));       /* push word [bp+0xff2a] */
    II(0x0015b56a, 0x3)   callw(0x0015fb9f, 0x4632);            /* call 0x15fb9f */
    II(0x0015b56d, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0015b56f, 0x2)   jnzw(0x0015b574, 0x3);                /* jnz 0x15b574 */
    II(0x0015b571, 0x3)   jmpw(0x0015b384, -0x1f0);             /* jmp 0x15b384 */
l_0x0015b574:
    II(0x0015b574, 0x4)   pushw(memw_a16(ss, bp - 0xca));       /* push word [bp+0xff36] */
    II(0x0015b578, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x0015b57a, 0x4)   pushw(memw_a16(ss, bp - 0xd8));       /* push word [bp+0xff28] */
    II(0x0015b57e, 0x4)   pushw(memw_a16(ss, bp - 0xda));       /* push word [bp+0xff26] */
    II(0x0015b582, 0x4)   pushw(memw_a16(ss, bp - 0xd4));       /* push word [bp+0xff2c] */
    II(0x0015b586, 0x4)   pushw(memw_a16(ss, bp - 0xd6));       /* push word [bp+0xff2a] */
    II(0x0015b58a, 0x3)   callw(0x0015de46, 0x28b9);            /* call 0x15de46 */
    II(0x0015b58d, 0x2)   mov(es, dx);                          /* mov es, dx */
    II(0x0015b58f, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x0015b591, 0x2)   mov(ax, es);                          /* mov ax, es */
    II(0x0015b593, 0x3)   les(si, ss, bp + 0x8);                /* les si, [bp+0x8] */
    II(0x0015b596, 0x5)   mov(cx, memw_a16(es, si + 0xc4));     /* mov cx, [es:si+0xc4] */
    II(0x0015b59b, 0x5)   mov(dx, memw_a16(es, si + 0xc6));     /* mov dx, [es:si+0xc6] */
    II(0x0015b5a0, 0x4)   mov(memw_a16(es, si + 0x38), bx);     /* mov [es:si+0x38], bx */
    II(0x0015b5a4, 0x4)   mov(memw_a16(es, si + 0x3a), ax);     /* mov [es:si+0x3a], ax */
    II(0x0015b5a8, 0x2)   mov(es, ax);                          /* mov es, ax */
    II(0x0015b5aa, 0x3)   mov(memw_a16(es, bx), cx);            /* mov [es:bx], cx */
    II(0x0015b5ad, 0x4)   mov(memw_a16(es, bx + 0x2), dx);      /* mov [es:bx+0x2], dx */
    II(0x0015b5b1, 0x3)   lea(ax, bx + 0x6);                    /* lea ax, [bx+0x6] */
    II(0x0015b5b4, 0x1)   pushw(es);                            /* push es */
    II(0x0015b5b5, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015b5b6, 0x3)   callw(0x0015e2de, 0x2d25);            /* call 0x15e2de */
    II(0x0015b5b9, 0x3)   les(bx, ss, bp + 0x8);                /* les bx, [bp+0x8] */
    II(0x0015b5bc, 0x5)   mov(ax, memw_a16(es, bx + 0xb4));     /* mov ax, [es:bx+0xb4] */
    II(0x0015b5c1, 0x4)   les(bx, es, bx + 0x38);               /* les bx, [es:bx+0x38] */
    II(0x0015b5c5, 0x4)   mov(memw_a16(es, bx + 0x4), ax);      /* mov [es:bx+0x4], ax */
l_0x0015b5c9:
    II(0x0015b5c9, 0x2)   sub(ax, ax);                          /* sub ax, ax */
l_0x0015b5cb:
    II(0x0015b5cb, 0x1)   popw(si);                             /* pop si */
    II(0x0015b5cc, 0x1)   popw(di);                             /* pop di */
    II(0x0015b5cd, 0x1)   leavew();                             /* leave  */
    II(0x0015b5ce, 0x3)   retw(0x8);                            /* ret 0x8 */
FUNC_END

