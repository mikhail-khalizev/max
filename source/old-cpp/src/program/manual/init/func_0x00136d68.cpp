FUNC_BEGIN(0x00136d68, 0xe6dc8ad23539b9b, 0x10, ({0xc8, 0x80, 0, 0, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xa4, 0, 0, 0xc7, 0x6, 0xa6, 0x1e, 0, 0, 0x1e, 0x68, 0x49, 0x4, 0x90, 0xe, 0xe8, 0xa3, 0x8d, 0x89, 0x46, 0x82, 0x89, 0x56, 0x84, 0xb, 0xd0, 0x75, 0x1f, 0x8e, 0x6, 0xc8, 0x1d, 0x26, 0xf6, 0x6, 0x47, 0, 0x10, 0x74, 0xb, 0xc7, 0x46, 0x82, 0x51, 0x4, 0x8c, 0x5e, 0x84, 0xeb, 0x9, 0x90, 0xb8, 0x1, 0, 0x1f, 0x5e, 0xc9, 0xcb, 0x90, 0x8b, 0x46, 0x82, 0x8b, 0x56, 0x84, 0x89, 0x46, 0x9a, 0x89, 0x56, 0x9c, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0xff, 0x76, 0x9c, 0xff, 0x76, 0x9a, 0xe, 0xe8, 0xc3, 0x5, 0x83, 0xc4, 0x8, 0x89, 0x46, 0x9e, 0xb, 0xc0, 0x74, 0x35, 0x1, 0x46, 0x9a, 0xc7, 0x46, 0x9e, 0, 0, 0x8b, 0x76, 0x9e, 0x8a, 0x42, 0xa8, 0x98, 0x8b, 0xd8, 0xf6, 0x87, 0xa1, 0x1c, 0x8, 0x74, 0x5, 0xff, 0x46, 0x9e, 0xeb, 0xeb, 0x80, 0x7a, 0xa8, 0x40, 0x75, 0x10, 0x8d, 0x42, 0xa9, 0x16, 0x50, 0x68, 0, 0x40, 0x90, 0xe, 0xe8, 0x3, 0x99, 0x89, 0x46, 0xa4, 0xeb, 0xb2, 0x83, 0x7e, 0xa4, 0, 0x7f, 0xf, 0x1e, 0x68, 0x54, 0x4, 0x68, 0, 0x40, 0x90, 0xe, 0xe8, 0xec, 0x98, 0x89, 0x46, 0xa4, 0x83, 0x7e, 0xa4, 0, 0x7f, 0x3, 0xe9, 0xd1, 0x1, 0xff, 0x76, 0xa4, 0x6a, 0x50, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0xe, 0xe8, 0xb8, 0x7, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x75, 0x3, 0xe9, 0xae, 0x1, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0x90, 0xe, 0xe8, 0x8d, 0x9a, 0x8b, 0xf0, 0xc6, 0x42, 0xa8, 0, 0x80, 0x7e, 0xa8, 0x21, 0x75, 0x2, 0xeb, 0xd0, 0x8d, 0x46, 0xa8, 0x89, 0x46, 0xfc, 0x8c, 0x56, 0xfe, 0xeb, 0x4, 0x90, 0xff, 0x46, 0xfc, 0xc4, 0x5e, 0xfc, 0x26, 0x80, 0x3f, 0, 0x74, 0x10, 0x26, 0x8a, 0x7, 0x98, 0x8b, 0xd8, 0xf6, 0x87, 0xa1, 0x1c, 0x8, 0x74, 0x3, 0xeb, 0xe5, 0x90, 0x8b, 0x46, 0xfc, 0x8c, 0xc2, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xeb, 0x4, 0x90, 0xff, 0x46, 0xf8, 0xc4, 0x5e, 0xf8, 0x26, 0x80, 0x3f, 0, 0x74, 0x28, 0x26, 0x8a, 0x7, 0x8b, 0xc8, 0x98, 0x8b, 0xf0, 0xf6, 0x84, 0xa1, 0x1c, 0x8, 0x75, 0x19, 0x80, 0xf9, 0x3d, 0x74, 0x14, 0x80, 0xf9, 0x23, 0x74, 0xf, 0xf6, 0x84, 0xa1, 0x1c, 0x2, 0x74, 0x6, 0x26, 0x80, 0x2f, 0x20, 0xeb, 0, 0xeb, 0xcc, 0xeb, 0x3, 0xff, 0x46, 0xf8, 0xc4, 0x5e, 0xf8, 0x26, 0x80, 0x3f, 0, 0x74, 0x1c, 0x26, 0x8a, 0x7, 0x8b, 0xc8, 0x98, 0x8b, 0xd8, 0xf6, 0x87, 0xa1, 0x1c, 0x8, 0x75, 0xa, 0x80, 0xf9, 0x3d, 0x74, 0x5, 0x80, 0xf9, 0x23, 0x75, 0x3, 0xeb, 0xd9, 0x90, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x39, 0x46, 0xf8, 0x75, 0x9, 0x39, 0x56, 0xfa, 0x75, 0x4, 0xe9, 0x29, 0xff, 0x90, 0xc7, 0x46, 0x9e, 0xa, 0, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x1e, 0xff, 0xb7, 0x5c, 0x4, 0x8b, 0xf3, 0x90, 0xe, 0xe8, 0xc1, 0x99, 0x89, 0x46, 0x98, 0x50, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x1e, 0xff, 0xb4, 0x5c, 0x4, 0x90, 0xe, 0xe8, 0xd9, 0x96, 0x83, 0xc4, 0xa, 0xb, 0xc0, 0x74, 0xb, 0xff, 0x4e, 0x9e, 0x79, 0x4, 0xe9, 0xb1, 0, 0x90, 0xeb, 0xc9, 0x8b, 0x5e, 0x9e, 0x8a, 0x87, 0x72, 0x4, 0x98, 0xe9, 0x8d, 0, 0x90, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x8b, 0x87, 0x7e, 0x4, 0x89, 0x46, 0xfc, 0x8c, 0x5e, 0xfe, 0xc4, 0x5e, 0xf8, 0x26, 0x80, 0x3f, 0, 0x74, 0x30, 0x26, 0x8a, 0x7, 0x98, 0x8b, 0xd8, 0xf6, 0x87, 0xa1, 0x1c, 0x8, 0x75, 0x23, 0x89, 0x5e, 0x9e, 0xff, 0x46, 0xf8, 0xf6, 0x87, 0xa1, 0x1c, 0x2, 0x74, 0x8, 0x8a, 0x46, 0x9e, 0x2c, 0x20, 0xeb, 0x4, 0x90, 0x8a, 0x46, 0x9e, 0xc4, 0x5e, 0xfc, 0xff, 0x46, 0xfc, 0x26, 0x88, 0x7, 0xeb, 0xc7, 0xc4, 0x5e, 0xfc, 0x26, 0xc6, 0x7, 0, 0xeb, 0x51, 0x90, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0x90, 0xe, 0xe8, 0x52, 0x99, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x8b, 0x9f, 0x7e, 0x4, 0x89, 0x7, 0x89, 0x57, 0x2, 0xeb, 0x35, 0x90, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x8b, 0x9f, 0x7e, 0x4, 0xc6, 0x7, 0x1, 0xeb, 0x26, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x8b, 0x9f, 0x7e, 0x4, 0xc6, 0x7, 0, 0xeb, 0x18, 0xeb, 0x16, 0xb, 0xc0, 0x74, 0xec, 0x48, 0x74, 0xdb, 0x48, 0x74, 0xbc, 0x48, 0x74, 0xef, 0x48, 0x75, 0x3, 0xe9, 0x61, 0xff, 0xeb, 0x1, 0x90, 0xe9, 0x3b, 0xfe, 0x90, 0xff, 0x76, 0xa4, 0x90, 0xe, 0xe8, 0x6, 0x69, 0x83, 0xc4, 0x2, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0xff, 0x76, 0x84, 0xff, 0x76, 0x82, 0xe, 0xe8, 0x86, 0x3, 0x83, 0xc4, 0x8, 0x89, 0x46, 0x9e, 0xb, 0xc0, 0x75, 0x3, 0xe9, 0x2b, 0x2, 0x1, 0x46, 0x82, 0x8d, 0x46, 0xa8, 0x89, 0x46, 0xfc, 0x8c, 0x56, 0xfe, 0xeb, 0x4, 0x90, 0xff, 0x46, 0xfc, 0xc4, 0x5e, 0xfc, 0x26, 0x80, 0x3f, 0, 0x74, 0x10, 0x26, 0x8a, 0x7, 0x98, 0x8b, 0xd8, 0xf6, 0x87, 0xa1, 0x1c, 0x8, 0x74, 0x3, 0xeb, 0xe5, 0x90, 0x8b, 0x46, 0xfc, 0x8c, 0xc2, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xeb, 0x4, 0x90, 0xff, 0x46, 0xf8, 0xc4, 0x5e, 0xf8, 0x26, 0x80, 0x3f, 0, 0x74, 0x16, 0x26, 0x8a, 0x7, 0x8b, 0xc8, 0x98, 0x8b, 0xd8, 0xf6, 0x87, 0xa1, 0x1c, 0x8, 0x75, 0x7, 0x80, 0xf9, 0x23, 0x74, 0x2, 0xeb, 0xde, 0xeb, 0x3, 0xff, 0x46, 0xf8, 0xc4, 0x5e, 0xf8, 0x26, 0x80, 0x3f, 0, 0x74, 0x16, 0x26, 0x8a, 0x7, 0x8b, 0xc8, 0x98, 0x8b, 0xd8, 0xf6, 0x87, 0xa1, 0x1c, 0x8, 0x75, 0x5, 0x80, 0xf9, 0x23, 0x75, 0x2, 0xeb, 0xde, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x39, 0x46, 0xf8, 0x75, 0x9, 0x39, 0x56, 0xfa, 0x75, 0x4, 0xe9, 0x52, 0xff, 0x90, 0xc7, 0x46, 0x9e, 0xa, 0, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x1e, 0xff, 0xb7, 0x5c, 0x4, 0x8b, 0xf3, 0x90, 0xe, 0xe8, 0x19, 0x98, 0x89, 0x46, 0x98, 0x50, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x1e, 0xff, 0xb4, 0x5c, 0x4, 0x90, 0xe, 0xe8, 0x31, 0x95, 0x83, 0xc4, 0xa, 0xb, 0xc0, 0x74, 0x9, 0xff, 0x4e, 0x9e, 0x79, 0x2, 0xeb, 0x2, 0xeb, 0xcb, 0x8b, 0x5e, 0x9e, 0x8a, 0x87, 0x72, 0x4, 0x98, 0xe9, 0x37, 0x1, 0x90, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x8b, 0x87, 0x7e, 0x4, 0x89, 0x46, 0xfc, 0x8c, 0x5e, 0xfe, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0xff, 0x76, 0x84, 0xff, 0x76, 0x82, 0xe, 0xe8, 0x82, 0x2, 0x83, 0xc4, 0x8, 0x1, 0x46, 0x82, 0xc7, 0x46, 0xa6, 0, 0, 0xeb, 0x4, 0x90, 0xff, 0x46, 0xa6, 0x83, 0x7e, 0xa6, 0x3, 0x7d, 0x29, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0x90, 0xe, 0xe8, 0xaa, 0x97, 0xb, 0xc0, 0x74, 0x3, 0xeb, 0x19, 0x90, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0xff, 0x76, 0x84, 0xff, 0x76, 0x82, 0xe, 0xe8, 0x4b, 0x2, 0x83, 0xc4, 0x8, 0x1, 0x46, 0x82, 0xeb, 0xcf, 0x90, 0x8d, 0x46, 0xa8, 0x89, 0x46, 0xf8, 0x8c, 0x56, 0xfa, 0xc4, 0x5e, 0xf8, 0x26, 0x80, 0x3f, 0, 0x74, 0x30, 0x26, 0x8a, 0x7, 0x98, 0x8b, 0xd8, 0xf6, 0x87, 0xa1, 0x1c, 0x8, 0x75, 0x23, 0x89, 0x5e, 0x9e, 0xff, 0x46, 0xf8, 0xf6, 0x87, 0xa1, 0x1c, 0x2, 0x74, 0x8, 0x8a, 0x46, 0x9e, 0x2c, 0x20, 0xeb, 0x4, 0x90, 0x8a, 0x46, 0x9e, 0xc4, 0x5e, 0xfc, 0xff, 0x46, 0xfc, 0x26, 0x88, 0x7, 0xeb, 0xc7, 0xc4, 0x5e, 0xfc, 0x26, 0xc6, 0x7, 0, 0xe9, 0xa4, 0, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0xff, 0x76, 0x84, 0xff, 0x76, 0x82, 0xe, 0xe8, 0xe7, 0x1, 0x83, 0xc4, 0x8, 0x1, 0x46, 0x82, 0xc7, 0x46, 0xa6, 0, 0, 0xeb, 0x3, 0xff, 0x46, 0xa6, 0x83, 0x7e, 0xa6, 0x3, 0x7d, 0x29, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0x90, 0xe, 0xe8, 0x10, 0x97, 0xb, 0xc0, 0x74, 0x3, 0xeb, 0x19, 0x90, 0x8d, 0x46, 0xa8, 0x16, 0x50, 0xff, 0x76, 0x84, 0xff, 0x76, 0x82, 0xe, 0xe8, 0xb1, 0x1, 0x83, 0xc4, 0x8, 0x1, 0x46, 0x82, 0xeb, 0xcf, 0x90, 0x8d, 0x46, 0xa8, 0x89, 0x46, 0xf8, 0x8c, 0x56, 0xfa, 0x16, 0x50, 0x90, 0xe, 0xe8, 0x1, 0x97, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x8b, 0x9f, 0x7e, 0x4, 0x89, 0x7, 0x89, 0x57, 0x2, 0xeb, 0x36, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x8b, 0x9f, 0x7e, 0x4, 0xc6, 0x7, 0x1, 0xeb, 0x28, 0x8b, 0x5e, 0x9e, 0xd1, 0xe3, 0x8b, 0x9f, 0x7e, 0x4, 0xc6, 0x7, 0, 0xeb, 0x1a, 0xeb, 0x18, 0xb, 0xc0, 0x74, 0xec, 0x48, 0x74, 0xdb, 0x48, 0x75, 0x3, 0xe9, 0x67, 0xff, 0x48, 0x74, 0xec, 0x48, 0x75, 0x3, 0xe9, 0xb4, 0xfe, 0xeb, 0, 0xe9, 0xba, 0xfd, 0x90, 0x83, 0x3e, 0xa6, 0x1e, 0, 0x74, 0x5, 0x80, 0xe, 0xa2, 0x19, 0x1, 0x90, 0xe, 0xe8, 0xdb, 0x75, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0xd0, 0xe6, 0x1a, 0xf6, 0xd1, 0xfa, 0xd1, 0xd8, 0xd1, 0xfa, 0xd1, 0xd8, 0x3b, 0x16, 0x22, 0, 0x72, 0xf, 0x77, 0x6, 0x3b, 0x6, 0x20, 0, 0x76, 0x7, 0xb8, 0x2, 0, 0x1f, 0x5e, 0xc9, 0xcb, 0x83, 0x3e, 0x32, 0, 0x1, 0x7c, 0xe, 0x7f, 0, 0xc7, 0x6, 0x30, 0, 0xff, 0xff, 0xc7, 0x6, 0x32, 0, 0, 0, 0xa1, 0x30, 0, 0x8b, 0x16, 0x32, 0, 0x39, 0x16, 0x36, 0, 0x7c, 0x16, 0x7f, 0x6, 0x39, 0x6, 0x34, 0, 0x76, 0xe, 0xa1, 0x34, 0, 0x8b, 0x16, 0x36, 0, 0xa3, 0x30, 0, 0x89, 0x16, 0x32, 0, 0xe, 0xe8, 0xa4, 0x1, 0xa3, 0xa0, 0x51, 0x6a, 0, 0x6a, 0x4, 0xff, 0x36, 0x26, 0, 0xff, 0x36, 0x24, 0, 0x90, 0xe, 0xe8, 0x14, 0x6b, 0xa3, 0x1c, 0x20, 0x89, 0x16, 0x1e, 0x20, 0xc7, 0x6, 0xa4, 0x1f, 0, 0x10, 0xc7, 0x6, 0xa6, 0x1f, 0, 0, 0x5, 0x8, 0x8, 0x83, 0xd2, 0, 0xd1, 0xe0, 0xd1, 0xd2, 0xa3, 0xf4, 0x4f, 0x89, 0x16, 0xf6, 0x4f, 0x8b, 0xe, 0x1c, 0x20, 0x8b, 0x1e, 0x1e, 0x20, 0x83, 0xc1, 0x8, 0x83, 0xd3, 0, 0xd1, 0xe1, 0xd1, 0xd3, 0x3, 0xc1, 0x13, 0xd3, 0xa3, 0xb4, 0x4f, 0x89, 0x16, 0xb6, 0x4f, 0x8b, 0xe, 0x1c, 0x20, 0x8b, 0x1e, 0x1e, 0x20, 0x83, 0xc1, 0x4, 0x83, 0xd3, 0, 0xd1, 0xe1, 0xd1, 0xd3, 0xd1, 0xe1, 0xd1, 0xd3, 0x3, 0xc1, 0x13, 0xd3, 0xa3, 0x8c, 0x4f, 0x89, 0x16, 0x8e, 0x4f, 0xa9, 0xff, 0xf, 0x74, 0x10, 0x5, 0, 0x10, 0x83, 0xd2, 0, 0x25, 0, 0xf0, 0xa3, 0x8c, 0x4f, 0x89, 0x16, 0x8e, 0x4f, 0xa1, 0x1c, 0x20, 0x8b, 0x16, 0x1e, 0x20, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x3, 0x6, 0x8c, 0x4f, 0x13, 0x16, 0x8e, 0x4f, 0xa3, 0x90, 0x4f, 0x89, 0x16, 0x92, 0x4f, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xa3, 0x9c, 0x51, 0xf7, 0x6, 0x90, 0x4f, 0xff, 0xf, 0x74, 0x4, 0x40, 0xa3, 0x9c, 0x51, 0x2b, 0xc0, 0x1f, 0x5e, 0xc9, 0xcb}))
    II(0x00136d68, 0x4)   enterw(0x80, 0);                      /* enter 0x80, 0x0 */
    II(0x00136d6c, 0x1)   pushw(si);                            /* push si */
    II(0x00136d6d, 0x1)   pushw(ds);                            /* push ds */
    II(0x00136d6e, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00136d71, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00136d73, 0x5)   mov(memw_a16(ss, bp - 0x5c), 0);      /* mov word [bp-0x5c], 0x0 */
    II(0x00136d78, 0x6)   mov(memw_a16(ds, 0x1ea6), 0);         /* mov word [0x1ea6], 0x0 */
    II(0x00136d7e, 0x1)   pushw(ds);                            /* push ds */
    II(0x00136d7f, 0x3)   pushw(0x449);                         /* push word 0x449 */
//    II(0x00136d82, 0x1)   nop();                                /* nop  */
    II(0x00136d83, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136d84, 0x3)   callw(0x0012fb2a, -0x725d);           /* call 0x12fb2a */
    II(0x00136d87, 0x3)   mov(memw_a16(ss, bp - 0x7e), ax);     /* mov [bp-0x7e], ax */
    II(0x00136d8a, 0x3)   mov(memw_a16(ss, bp - 0x7c), dx);     /* mov [bp-0x7c], dx */
    II(0x00136d8d, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x00136d8f, 0x2)   jnzw(0x00136db0, 0x1f);               /* jnz 0x136db0 */
    II(0x00136d91, 0x4)   mov(es, memw_a16(ds, 0x1dc8));        /* mov es, [0x1dc8] */
    II(0x00136d95, 0x6)   test(memb_a16(es, 0x47), 0x10);       /* test byte [es:0x47], 0x10 */
    II(0x00136d9b, 0x2)   jzw(0x00136da8, 0xb);                 /* jz 0x136da8 */
    II(0x00136d9d, 0x5)   mov(memw_a16(ss, bp - 0x7e), 0x451);  /* mov word [bp-0x7e], 0x451 */
    II(0x00136da2, 0x3)   mov(memw_a16(ss, bp - 0x7c), ds);     /* mov [bp-0x7c], ds */
    II(0x00136da5, 0x2)   jmpw(0x00136db0, 0x9);                /* jmp 0x136db0 */
//    II(0x00136da7, 0x1)   /* Недостижимый код. */
l_0x00136da8:
    II(0x00136da8, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00136dab, 0x1)   popw(ds);                             /* pop ds */
    II(0x00136dac, 0x1)   popw(si);                             /* pop si */
    II(0x00136dad, 0x1)   leavew();                             /* leave  */
    II(0x00136dae, 0x1)   retfw();                              /* retf  */
//    II(0x00136daf, 0x1)   /* Недостижимый код. */
l_0x00136db0:
    II(0x00136db0, 0x3)   mov(ax, memw_a16(ss, bp - 0x7e));     /* mov ax, [bp-0x7e] */
    II(0x00136db3, 0x3)   mov(dx, memw_a16(ss, bp - 0x7c));     /* mov dx, [bp-0x7c] */
    II(0x00136db6, 0x3)   mov(memw_a16(ss, bp - 0x66), ax);     /* mov [bp-0x66], ax */
    II(0x00136db9, 0x3)   mov(memw_a16(ss, bp - 0x64), dx);     /* mov [bp-0x64], dx */
l_0x00136dbc:
    II(0x00136dbc, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x00136dbf, 0x1)   pushw(ss);                            /* push ss */
    II(0x00136dc0, 0x1)   pushw(ax);                            /* push ax */
    II(0x00136dc1, 0x3)   pushw(memw_a16(ss, bp - 0x64));       /* push word [bp-0x64] */
    II(0x00136dc4, 0x3)   pushw(memw_a16(ss, bp - 0x66));       /* push word [bp-0x66] */
    II(0x00136dc7, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136dc8, 0x3)   callw(0x0013738e, 0x5c3);             /* call 0x13738e */
    II(0x00136dcb, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00136dce, 0x3)   mov(memw_a16(ss, bp - 0x62), ax);     /* mov [bp-0x62], ax */
    II(0x00136dd1, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00136dd3, 0x2)   jzw(0x00136e0a, 0x35);                /* jz 0x136e0a */
    II(0x00136dd5, 0x3)   add(memw_a16(ss, bp - 0x66), ax);     /* add [bp-0x66], ax */
    II(0x00136dd8, 0x5)   mov(memw_a16(ss, bp - 0x62), 0);      /* mov word [bp-0x62], 0x0 */
l_0x00136ddd:
    II(0x00136ddd, 0x3)   mov(si, memw_a16(ss, bp - 0x62));     /* mov si, [bp-0x62] */
    II(0x00136de0, 0x3)   mov(al, memb_a16(ss, bp + si - 0x58)); /* mov al, [bp+si-0x58] */
    II(0x00136de3, 0x1)   cbw();                                /* cbw  */
    II(0x00136de4, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00136de6, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x8); /* test byte [bx+0x1ca1], 0x8 */
    II(0x00136deb, 0x2)   jzw(0x00136df2, 0x5);                 /* jz 0x136df2 */
    II(0x00136ded, 0x3)   inc(memw_a16(ss, bp - 0x62));         /* inc word [bp-0x62] */
    II(0x00136df0, 0x2)   jmpw(0x00136ddd, -0x15);              /* jmp 0x136ddd */
l_0x00136df2:
    II(0x00136df2, 0x4)   cmp(memb_a16(ss, bp + si - 0x58), 0x40); /* cmp byte [bp+si-0x58], 0x40 */
    II(0x00136df6, 0x2)   jnzw(0x00136e08, 0x10);               /* jnz 0x136e08 */
    II(0x00136df8, 0x3)   lea(ax, bp + si - 0x57);              /* lea ax, [bp+si-0x57] */
    II(0x00136dfb, 0x1)   pushw(ss);                            /* push ss */
    II(0x00136dfc, 0x1)   pushw(ax);                            /* push ax */
    II(0x00136dfd, 0x3)   pushw(0x4000);                        /* push word 0x4000 */
//    II(0x00136e00, 0x1)   nop();                                /* nop  */
    II(0x00136e01, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136e02, 0x3)   callw(0x00130708, -0x66fd);           /* call 0x130708 */
    II(0x00136e05, 0x3)   mov(memw_a16(ss, bp - 0x5c), ax);     /* mov [bp-0x5c], ax */
l_0x00136e08:
    II(0x00136e08, 0x2)   jmpw(0x00136dbc, -0x4e);              /* jmp 0x136dbc */
l_0x00136e0a:
    II(0x00136e0a, 0x4)   cmp(memw_a16(ss, bp - 0x5c), 0);      /* cmp word [bp-0x5c], 0x0 */
    II(0x00136e0e, 0x2)   jgw(0x00136e1f, 0xf);                 /* jg 0x136e1f */
    II(0x00136e10, 0x1)   pushw(ds);                            /* push ds */
    II(0x00136e11, 0x3)   pushw(0x454);                         /* push word 0x454 */
    II(0x00136e14, 0x3)   pushw(0x4000);                        /* push word 0x4000 */
//    II(0x00136e17, 0x1)   nop();                                /* nop  */
    II(0x00136e18, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136e19, 0x3)   callw(0x00130708, -0x6714);           /* call 0x130708 */
    II(0x00136e1c, 0x3)   mov(memw_a16(ss, bp - 0x5c), ax);     /* mov [bp-0x5c], ax */
l_0x00136e1f:
    II(0x00136e1f, 0x4)   cmp(memw_a16(ss, bp - 0x5c), 0);      /* cmp word [bp-0x5c], 0x0 */
    II(0x00136e23, 0x2)   jgw(0x00136e28, 0x3);                 /* jg 0x136e28 */
    II(0x00136e25, 0x3)   jmpw(0x00136ff9, 0x1d1);              /* jmp 0x136ff9 */
l_0x00136e28:
    II(0x00136e28, 0x3)   pushw(memw_a16(ss, bp - 0x5c));       /* push word [bp-0x5c] */
    II(0x00136e2b, 0x2)   pushw(0x50);                          /* push 0x50 */
    II(0x00136e2d, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x00136e30, 0x1)   pushw(ss);                            /* push ss */
    II(0x00136e31, 0x1)   pushw(ax);                            /* push ax */
    II(0x00136e32, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136e33, 0x3)   callw(0x001375ee, 0x7b8);             /* call 0x1375ee */
    II(0x00136e36, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00136e39, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00136e3b, 0x2)   jnzw(0x00136e40, 0x3);                /* jnz 0x136e40 */
    II(0x00136e3d, 0x3)   jmpw(0x00136fee, 0x1ae);              /* jmp 0x136fee */
l_0x00136e40:
    II(0x00136e40, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x00136e43, 0x1)   pushw(ss);                            /* push ss */
    II(0x00136e44, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00136e45, 0x1)   nop();                                /* nop  */
    II(0x00136e46, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136e47, 0x3)   callw(0x001308d7, -0x6573);           /* call 0x1308d7 */
    II(0x00136e4a, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x00136e4c, 0x4)   mov(memb_a16(ss, bp + si - 0x58), 0); /* mov byte [bp+si-0x58], 0x0 */
    II(0x00136e50, 0x4)   cmp(memb_a16(ss, bp - 0x58), 0x21);   /* cmp byte [bp-0x58], 0x21 */
    II(0x00136e54, 0x2)   jnzw(0x00136e58, 0x2);                /* jnz 0x136e58 */
    II(0x00136e56, 0x2)   jmpw(0x00136e28, -0x30);              /* jmp 0x136e28 */
l_0x00136e58:
    II(0x00136e58, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x00136e5b, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00136e5e, 0x3)   mov(memw_a16(ss, bp - 0x2), ss);      /* mov [bp-0x2], ss */
    II(0x00136e61, 0x2)   jmpw(0x00136e67, 0x4);                /* jmp 0x136e67 */
//    II(0x00136e63, 0x1)   /* Недостижимый код. */
l_0x00136e64:
    II(0x00136e64, 0x3)   inc(memw_a16(ss, bp - 0x4));          /* inc word [bp-0x4] */
l_0x00136e67:
    II(0x00136e67, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00136e6a, 0x4)   cmp(memb_a16(es, bx), 0);             /* cmp byte [es:bx], 0x0 */
    II(0x00136e6e, 0x2)   jzw(0x00136e80, 0x10);                /* jz 0x136e80 */
    II(0x00136e70, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x00136e73, 0x1)   cbw();                                /* cbw  */
    II(0x00136e74, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00136e76, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x8); /* test byte [bx+0x1ca1], 0x8 */
    II(0x00136e7b, 0x2)   jzw(0x00136e80, 0x3);                 /* jz 0x136e80 */
    II(0x00136e7d, 0x2)   jmpw(0x00136e64, -0x1b);              /* jmp 0x136e64 */
//    II(0x00136e7f, 0x1)   /* Недостижимый код. */
l_0x00136e80:
    II(0x00136e80, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x00136e83, 0x2)   mov(dx, es);                          /* mov dx, es */
    II(0x00136e85, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00136e88, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x00136e8b, 0x2)   jmpw(0x00136e91, 0x4);                /* jmp 0x136e91 */
//    II(0x00136e8d, 0x1)   /* Недостижимый код. */
l_0x00136e8e:
    II(0x00136e8e, 0x3)   inc(memw_a16(ss, bp - 0x8));          /* inc word [bp-0x8] */
l_0x00136e91:
    II(0x00136e91, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00136e94, 0x4)   cmp(memb_a16(es, bx), 0);             /* cmp byte [es:bx], 0x0 */
    II(0x00136e98, 0x2)   jzw(0x00136ec2, 0x28);                /* jz 0x136ec2 */
    II(0x00136e9a, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x00136e9d, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x00136e9f, 0x1)   cbw();                                /* cbw  */
    II(0x00136ea0, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x00136ea2, 0x5)   test(memb_a16(ds, si + 0x1ca1), 0x8); /* test byte [si+0x1ca1], 0x8 */
    II(0x00136ea7, 0x2)   jnzw(0x00136ec2, 0x19);               /* jnz 0x136ec2 */
    II(0x00136ea9, 0x3)   cmp(cl, 0x3d);                        /* cmp cl, 0x3d */
    II(0x00136eac, 0x2)   jzw(0x00136ec2, 0x14);                /* jz 0x136ec2 */
    II(0x00136eae, 0x3)   cmp(cl, 0x23);                        /* cmp cl, 0x23 */
    II(0x00136eb1, 0x2)   jzw(0x00136ec2, 0xf);                 /* jz 0x136ec2 */
    II(0x00136eb3, 0x5)   test(memb_a16(ds, si + 0x1ca1), 0x2); /* test byte [si+0x1ca1], 0x2 */
    II(0x00136eb8, 0x2)   jzw(0x00136ec0, 0x6);                 /* jz 0x136ec0 */
    II(0x00136eba, 0x4)   sub(memb_a16(es, bx), 0x20);          /* sub byte [es:bx], 0x20 */
    II(0x00136ebe, 0x2)   jmpw(0x00136ec0, 0);                  /* jmp 0x136ec0 */
l_0x00136ec0:
    II(0x00136ec0, 0x2)   jmpw(0x00136e8e, -0x34);              /* jmp 0x136e8e */
l_0x00136ec2:
    II(0x00136ec2, 0x2)   jmpw(0x00136ec7, 0x3);                /* jmp 0x136ec7 */
l_0x00136ec4:
    II(0x00136ec4, 0x3)   inc(memw_a16(ss, bp - 0x8));          /* inc word [bp-0x8] */
l_0x00136ec7:
    II(0x00136ec7, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00136eca, 0x4)   cmp(memb_a16(es, bx), 0);             /* cmp byte [es:bx], 0x0 */
    II(0x00136ece, 0x2)   jzw(0x00136eec, 0x1c);                /* jz 0x136eec */
    II(0x00136ed0, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x00136ed3, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x00136ed5, 0x1)   cbw();                                /* cbw  */
    II(0x00136ed6, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00136ed8, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x8); /* test byte [bx+0x1ca1], 0x8 */
    II(0x00136edd, 0x2)   jnzw(0x00136ee9, 0xa);                /* jnz 0x136ee9 */
    II(0x00136edf, 0x3)   cmp(cl, 0x3d);                        /* cmp cl, 0x3d */
    II(0x00136ee2, 0x2)   jzw(0x00136ee9, 0x5);                 /* jz 0x136ee9 */
    II(0x00136ee4, 0x3)   cmp(cl, 0x23);                        /* cmp cl, 0x23 */
    II(0x00136ee7, 0x2)   jnzw(0x00136eec, 0x3);                /* jnz 0x136eec */
l_0x00136ee9:
    II(0x00136ee9, 0x2)   jmpw(0x00136ec4, -0x27);              /* jmp 0x136ec4 */
//    II(0x00136eeb, 0x1)   /* Недостижимый код. */
l_0x00136eec:
    II(0x00136eec, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x00136eef, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x00136ef2, 0x3)   cmp(memw_a16(ss, bp - 0x8), ax);      /* cmp [bp-0x8], ax */
    II(0x00136ef5, 0x2)   jnzw(0x00136f00, 0x9);                /* jnz 0x136f00 */
    II(0x00136ef7, 0x3)   cmp(memw_a16(ss, bp - 0x6), dx);      /* cmp [bp-0x6], dx */
    II(0x00136efa, 0x2)   jnzw(0x00136f00, 0x4);                /* jnz 0x136f00 */
    II(0x00136efc, 0x3)   jmpw(0x00136e28, -0xd7);              /* jmp 0x136e28 */
//    II(0x00136eff, 0x1)   /* Недостижимый код. */
l_0x00136f00:
    II(0x00136f00, 0x5)   mov(memw_a16(ss, bp - 0x62), 0xa);    /* mov word [bp-0x62], 0xa */
l_0x00136f05:
    II(0x00136f05, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x00136f08, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x00136f0a, 0x1)   pushw(ds);                            /* push ds */
    II(0x00136f0b, 0x4)   pushw(memw_a16(ds, bx + 0x45c));      /* push word [bx+0x45c] */
    II(0x00136f0f, 0x2)   mov(si, bx);                          /* mov si, bx */
//    II(0x00136f11, 0x1)   nop();                                /* nop  */
    II(0x00136f12, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136f13, 0x3)   callw(0x001308d7, -0x663f);           /* call 0x1308d7 */
    II(0x00136f16, 0x3)   mov(memw_a16(ss, bp - 0x68), ax);     /* mov [bp-0x68], ax */
    II(0x00136f19, 0x1)   pushw(ax);                            /* push ax */
    II(0x00136f1a, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00136f1d, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00136f20, 0x1)   pushw(ds);                            /* push ds */
    II(0x00136f21, 0x4)   pushw(memw_a16(ds, si + 0x45c));      /* push word [si+0x45c] */
//    II(0x00136f25, 0x1)   nop();                                /* nop  */
    II(0x00136f26, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136f27, 0x3)   callw(0x00130603, -0x6927);           /* call 0x130603 */
    II(0x00136f2a, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x00136f2d, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00136f2f, 0x2)   jzw(0x00136f3c, 0xb);                 /* jz 0x136f3c */
    II(0x00136f31, 0x3)   dec(memw_a16(ss, bp - 0x62));         /* dec word [bp-0x62] */
    II(0x00136f34, 0x2)   jnsw(0x00136f3a, 0x4);                /* jns 0x136f3a */
    II(0x00136f36, 0x3)   jmpw(0x00136fea, 0xb1);               /* jmp 0x136fea */
//    II(0x00136f39, 0x1)   /* Недостижимый код. */
l_0x00136f3a:
    II(0x00136f3a, 0x2)   jmpw(0x00136f05, -0x37);              /* jmp 0x136f05 */
l_0x00136f3c:
    II(0x00136f3c, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x00136f3f, 0x4)   mov(al, memb_a16(ds, bx + 0x472));    /* mov al, [bx+0x472] */
    II(0x00136f43, 0x1)   cbw();                                /* cbw  */
    II(0x00136f44, 0x3)   jmpw(0x00136fd4, 0x8d);               /* jmp 0x136fd4 */
//    II(0x00136f47, 0x1)   /* Недостижимый код. */
l_0x00136f48:
    II(0x00136f48, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x00136f4b, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x00136f4d, 0x4)   mov(ax, memw_a16(ds, bx + 0x47e));    /* mov ax, [bx+0x47e] */
    II(0x00136f51, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00136f54, 0x3)   mov(memw_a16(ss, bp - 0x2), ds);      /* mov [bp-0x2], ds */
l_0x00136f57:
    II(0x00136f57, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00136f5a, 0x4)   cmp(memb_a16(es, bx), 0);             /* cmp byte [es:bx], 0x0 */
    II(0x00136f5e, 0x2)   jzw(0x00136f90, 0x30);                /* jz 0x136f90 */
    II(0x00136f60, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x00136f63, 0x1)   cbw();                                /* cbw  */
    II(0x00136f64, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00136f66, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x8); /* test byte [bx+0x1ca1], 0x8 */
    II(0x00136f6b, 0x2)   jnzw(0x00136f90, 0x23);               /* jnz 0x136f90 */
    II(0x00136f6d, 0x3)   mov(memw_a16(ss, bp - 0x62), bx);     /* mov [bp-0x62], bx */
    II(0x00136f70, 0x3)   inc(memw_a16(ss, bp - 0x8));          /* inc word [bp-0x8] */
    II(0x00136f73, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x2); /* test byte [bx+0x1ca1], 0x2 */
    II(0x00136f78, 0x2)   jzw(0x00136f82, 0x8);                 /* jz 0x136f82 */
    II(0x00136f7a, 0x3)   mov(al, memb_a16(ss, bp - 0x62));     /* mov al, [bp-0x62] */
    II(0x00136f7d, 0x2)   sub(al, 0x20);                        /* sub al, 0x20 */
    II(0x00136f7f, 0x2)   jmpw(0x00136f85, 0x4);                /* jmp 0x136f85 */
//    II(0x00136f81, 0x1)   /* Недостижимый код. */
l_0x00136f82:
    II(0x00136f82, 0x3)   mov(al, memb_a16(ss, bp - 0x62));     /* mov al, [bp-0x62] */
l_0x00136f85:
    II(0x00136f85, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00136f88, 0x3)   inc(memw_a16(ss, bp - 0x4));          /* inc word [bp-0x4] */
    II(0x00136f8b, 0x3)   mov(memb_a16(es, bx), al);            /* mov [es:bx], al */
    II(0x00136f8e, 0x2)   jmpw(0x00136f57, -0x39);              /* jmp 0x136f57 */
l_0x00136f90:
    II(0x00136f90, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00136f93, 0x4)   mov(memb_a16(es, bx), 0);             /* mov byte [es:bx], 0x0 */
    II(0x00136f97, 0x2)   jmpw(0x00136fea, 0x51);               /* jmp 0x136fea */
//    II(0x00136f99, 0x1)   /* Недостижимый код. */
l_0x00136f9a:
    II(0x00136f9a, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x00136f9d, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
//    II(0x00136fa0, 0x1)   nop();                                /* nop  */
    II(0x00136fa1, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136fa2, 0x3)   callw(0x001308f7, -0x66ae);           /* call 0x1308f7 */
    II(0x00136fa5, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x00136fa8, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x00136faa, 0x4)   mov(bx, memw_a16(ds, bx + 0x47e));    /* mov bx, [bx+0x47e] */
    II(0x00136fae, 0x2)   mov(memw_a16(ds, bx), ax);            /* mov [bx], ax */
    II(0x00136fb0, 0x3)   mov(memw_a16(ds, bx + 0x2), dx);      /* mov [bx+0x2], dx */
    II(0x00136fb3, 0x2)   jmpw(0x00136fea, 0x35);               /* jmp 0x136fea */
//    II(0x00136fb5, 0x1)   /* Недостижимый код. */
l_0x00136fb6:
    II(0x00136fb6, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x00136fb9, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x00136fbb, 0x4)   mov(bx, memw_a16(ds, bx + 0x47e));    /* mov bx, [bx+0x47e] */
    II(0x00136fbf, 0x3)   mov(memb_a16(ds, bx), 0x1);           /* mov byte [bx], 0x1 */
    II(0x00136fc2, 0x2)   jmpw(0x00136fea, 0x26);               /* jmp 0x136fea */
l_0x00136fc4:
    II(0x00136fc4, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x00136fc7, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x00136fc9, 0x4)   mov(bx, memw_a16(ds, bx + 0x47e));    /* mov bx, [bx+0x47e] */
    II(0x00136fcd, 0x3)   mov(memb_a16(ds, bx), 0);             /* mov byte [bx], 0x0 */
l_0x00136fd0:
    II(0x00136fd0, 0x2)   jmpw(0x00136fea, 0x18);               /* jmp 0x136fea */
//    II(0x00136fd2, 0x2)   /* Недостижимый код. */
l_0x00136fd4:
    II(0x00136fd4, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00136fd6, 0x2)   jzw(0x00136fc4, -0x14);               /* jz 0x136fc4 */
    II(0x00136fd8, 0x1)   dec(ax);                              /* dec ax */
    II(0x00136fd9, 0x2)   jzw(0x00136fb6, -0x25);               /* jz 0x136fb6 */
    II(0x00136fdb, 0x1)   dec(ax);                              /* dec ax */
    II(0x00136fdc, 0x2)   jzw(0x00136f9a, -0x44);               /* jz 0x136f9a */
    II(0x00136fde, 0x1)   dec(ax);                              /* dec ax */
    II(0x00136fdf, 0x2)   jzw(0x00136fd0, -0x11);               /* jz 0x136fd0 */
    II(0x00136fe1, 0x1)   dec(ax);                              /* dec ax */
    II(0x00136fe2, 0x2)   jnzw(0x00136fe7, 0x3);                /* jnz 0x136fe7 */
    II(0x00136fe4, 0x3)   jmpw(0x00136f48, -0x9f);              /* jmp 0x136f48 */
l_0x00136fe7:
    II(0x00136fe7, 0x2)   jmpw(0x00136fea, 0x1);                /* jmp 0x136fea */
//    II(0x00136fe9, 0x1)   /* Недостижимый код. */
l_0x00136fea:
    II(0x00136fea, 0x3)   jmpw(0x00136e28, -0x1c5);             /* jmp 0x136e28 */
//    II(0x00136fed, 0x1)   /* Недостижимый код. */
l_0x00136fee:
    II(0x00136fee, 0x3)   pushw(memw_a16(ss, bp - 0x5c));       /* push word [bp-0x5c] */
//    II(0x00136ff1, 0x1)   nop();                                /* nop  */
    II(0x00136ff2, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136ff3, 0x3)   callw(0x0013d8fc, 0x6906);            /* call 0x13d8fc */
    II(0x00136ff6, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
l_0x00136ff9:
    II(0x00136ff9, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x00136ffc, 0x1)   pushw(ss);                            /* push ss */
    II(0x00136ffd, 0x1)   pushw(ax);                            /* push ax */
    II(0x00136ffe, 0x3)   pushw(memw_a16(ss, bp - 0x7c));       /* push word [bp-0x7c] */
    II(0x00137001, 0x3)   pushw(memw_a16(ss, bp - 0x7e));       /* push word [bp-0x7e] */
    II(0x00137004, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137005, 0x3)   callw(0x0013738e, 0x386);             /* call 0x13738e */
    II(0x00137008, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013700b, 0x3)   mov(memw_a16(ss, bp - 0x62), ax);     /* mov [bp-0x62], ax */
    II(0x0013700e, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00137010, 0x2)   jnzw(0x00137015, 0x3);                /* jnz 0x137015 */
    II(0x00137012, 0x3)   jmpw(0x00137240, 0x22b);              /* jmp 0x137240 */
l_0x00137015:
    II(0x00137015, 0x3)   add(memw_a16(ss, bp - 0x7e), ax);     /* add [bp-0x7e], ax */
    II(0x00137018, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x0013701b, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013701e, 0x3)   mov(memw_a16(ss, bp - 0x2), ss);      /* mov [bp-0x2], ss */
    II(0x00137021, 0x2)   jmpw(0x00137027, 0x4);                /* jmp 0x137027 */
//    II(0x00137023, 0x1)   /* Недостижимый код. */
l_0x00137024:
    II(0x00137024, 0x3)   inc(memw_a16(ss, bp - 0x4));          /* inc word [bp-0x4] */
l_0x00137027:
    II(0x00137027, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x0013702a, 0x4)   cmp(memb_a16(es, bx), 0);             /* cmp byte [es:bx], 0x0 */
    II(0x0013702e, 0x2)   jzw(0x00137040, 0x10);                /* jz 0x137040 */
    II(0x00137030, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x00137033, 0x1)   cbw();                                /* cbw  */
    II(0x00137034, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00137036, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x8); /* test byte [bx+0x1ca1], 0x8 */
    II(0x0013703b, 0x2)   jzw(0x00137040, 0x3);                 /* jz 0x137040 */
    II(0x0013703d, 0x2)   jmpw(0x00137024, -0x1b);              /* jmp 0x137024 */
//    II(0x0013703f, 0x1)   /* Недостижимый код. */
l_0x00137040:
    II(0x00137040, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x00137043, 0x2)   mov(dx, es);                          /* mov dx, es */
    II(0x00137045, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00137048, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0013704b, 0x2)   jmpw(0x00137051, 0x4);                /* jmp 0x137051 */
//    II(0x0013704d, 0x1)   /* Недостижимый код. */
l_0x0013704e:
    II(0x0013704e, 0x3)   inc(memw_a16(ss, bp - 0x8));          /* inc word [bp-0x8] */
l_0x00137051:
    II(0x00137051, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00137054, 0x4)   cmp(memb_a16(es, bx), 0);             /* cmp byte [es:bx], 0x0 */
    II(0x00137058, 0x2)   jzw(0x00137070, 0x16);                /* jz 0x137070 */
    II(0x0013705a, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x0013705d, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x0013705f, 0x1)   cbw();                                /* cbw  */
    II(0x00137060, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00137062, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x8); /* test byte [bx+0x1ca1], 0x8 */
    II(0x00137067, 0x2)   jnzw(0x00137070, 0x7);                /* jnz 0x137070 */
    II(0x00137069, 0x3)   cmp(cl, 0x23);                        /* cmp cl, 0x23 */
    II(0x0013706c, 0x2)   jzw(0x00137070, 0x2);                 /* jz 0x137070 */
    II(0x0013706e, 0x2)   jmpw(0x0013704e, -0x22);              /* jmp 0x13704e */
l_0x00137070:
    II(0x00137070, 0x2)   jmpw(0x00137075, 0x3);                /* jmp 0x137075 */
l_0x00137072:
    II(0x00137072, 0x3)   inc(memw_a16(ss, bp - 0x8));          /* inc word [bp-0x8] */
l_0x00137075:
    II(0x00137075, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00137078, 0x4)   cmp(memb_a16(es, bx), 0);             /* cmp byte [es:bx], 0x0 */
    II(0x0013707c, 0x2)   jzw(0x00137094, 0x16);                /* jz 0x137094 */
    II(0x0013707e, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x00137081, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x00137083, 0x1)   cbw();                                /* cbw  */
    II(0x00137084, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00137086, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x8); /* test byte [bx+0x1ca1], 0x8 */
    II(0x0013708b, 0x2)   jnzw(0x00137092, 0x5);                /* jnz 0x137092 */
    II(0x0013708d, 0x3)   cmp(cl, 0x23);                        /* cmp cl, 0x23 */
    II(0x00137090, 0x2)   jnzw(0x00137094, 0x2);                /* jnz 0x137094 */
l_0x00137092:
    II(0x00137092, 0x2)   jmpw(0x00137072, -0x22);              /* jmp 0x137072 */
l_0x00137094:
    II(0x00137094, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x00137097, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013709a, 0x3)   cmp(memw_a16(ss, bp - 0x8), ax);      /* cmp [bp-0x8], ax */
    II(0x0013709d, 0x2)   jnzw(0x001370a8, 0x9);                /* jnz 0x1370a8 */
    II(0x0013709f, 0x3)   cmp(memw_a16(ss, bp - 0x6), dx);      /* cmp [bp-0x6], dx */
    II(0x001370a2, 0x2)   jnzw(0x001370a8, 0x4);                /* jnz 0x1370a8 */
    II(0x001370a4, 0x3)   jmpw(0x00136ff9, -0xae);              /* jmp 0x136ff9 */
//    II(0x001370a7, 0x1)   /* Недостижимый код. */
l_0x001370a8:
    II(0x001370a8, 0x5)   mov(memw_a16(ss, bp - 0x62), 0xa);    /* mov word [bp-0x62], 0xa */
l_0x001370ad:
    II(0x001370ad, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x001370b0, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x001370b2, 0x1)   pushw(ds);                            /* push ds */
    II(0x001370b3, 0x4)   pushw(memw_a16(ds, bx + 0x45c));      /* push word [bx+0x45c] */
    II(0x001370b7, 0x2)   mov(si, bx);                          /* mov si, bx */
//    II(0x001370b9, 0x1)   nop();                                /* nop  */
    II(0x001370ba, 0x1)   pushw(cs);                            /* push cs */
    II(0x001370bb, 0x3)   callw(0x001308d7, -0x67e7);           /* call 0x1308d7 */
    II(0x001370be, 0x3)   mov(memw_a16(ss, bp - 0x68), ax);     /* mov [bp-0x68], ax */
    II(0x001370c1, 0x1)   pushw(ax);                            /* push ax */
    II(0x001370c2, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x001370c5, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x001370c8, 0x1)   pushw(ds);                            /* push ds */
    II(0x001370c9, 0x4)   pushw(memw_a16(ds, si + 0x45c));      /* push word [si+0x45c] */
//    II(0x001370cd, 0x1)   nop();                                /* nop  */
    II(0x001370ce, 0x1)   pushw(cs);                            /* push cs */
    II(0x001370cf, 0x3)   callw(0x00130603, -0x6acf);           /* call 0x130603 */
    II(0x001370d2, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x001370d5, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x001370d7, 0x2)   jzw(0x001370e2, 0x9);                 /* jz 0x1370e2 */
    II(0x001370d9, 0x3)   dec(memw_a16(ss, bp - 0x62));         /* dec word [bp-0x62] */
    II(0x001370dc, 0x2)   jnsw(0x001370e0, 0x2);                /* jns 0x1370e0 */
    II(0x001370de, 0x2)   jmpw(0x001370e2, 0x2);                /* jmp 0x1370e2 */
l_0x001370e0:
    II(0x001370e0, 0x2)   jmpw(0x001370ad, -0x35);              /* jmp 0x1370ad */
l_0x001370e2:
    II(0x001370e2, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x001370e5, 0x4)   mov(al, memb_a16(ds, bx + 0x472));    /* mov al, [bx+0x472] */
    II(0x001370e9, 0x1)   cbw();                                /* cbw  */
    II(0x001370ea, 0x3)   jmpw(0x00137224, 0x137);              /* jmp 0x137224 */
//    II(0x001370ed, 0x1)   /* Недостижимый код. */
l_0x001370ee:
    II(0x001370ee, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x001370f1, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x001370f3, 0x4)   mov(ax, memw_a16(ds, bx + 0x47e));    /* mov ax, [bx+0x47e] */
    II(0x001370f7, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x001370fa, 0x3)   mov(memw_a16(ss, bp - 0x2), ds);      /* mov [bp-0x2], ds */
    II(0x001370fd, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x00137100, 0x1)   pushw(ss);                            /* push ss */
    II(0x00137101, 0x1)   pushw(ax);                            /* push ax */
    II(0x00137102, 0x3)   pushw(memw_a16(ss, bp - 0x7c));       /* push word [bp-0x7c] */
    II(0x00137105, 0x3)   pushw(memw_a16(ss, bp - 0x7e));       /* push word [bp-0x7e] */
    II(0x00137108, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137109, 0x3)   callw(0x0013738e, 0x282);             /* call 0x13738e */
    II(0x0013710c, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013710f, 0x3)   add(memw_a16(ss, bp - 0x7e), ax);     /* add [bp-0x7e], ax */
    II(0x00137112, 0x5)   mov(memw_a16(ss, bp - 0x5a), 0);      /* mov word [bp-0x5a], 0x0 */
    II(0x00137117, 0x2)   jmpw(0x0013711d, 0x4);                /* jmp 0x13711d */
//    II(0x00137119, 0x1)   /* Недостижимый код. */
l_0x0013711a:
    II(0x0013711a, 0x3)   inc(memw_a16(ss, bp - 0x5a));         /* inc word [bp-0x5a] */
l_0x0013711d:
    II(0x0013711d, 0x4)   cmp(memw_a16(ss, bp - 0x5a), 0x3);    /* cmp word [bp-0x5a], 0x3 */
    II(0x00137121, 0x2)   jgew(0x0013714c, 0x29);               /* jge 0x13714c */
    II(0x00137123, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x00137126, 0x1)   pushw(ss);                            /* push ss */
    II(0x00137127, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00137128, 0x1)   nop();                                /* nop  */
    II(0x00137129, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013712a, 0x3)   callw(0x001308d7, -0x6856);           /* call 0x1308d7 */
    II(0x0013712d, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013712f, 0x2)   jzw(0x00137134, 0x3);                 /* jz 0x137134 */
    II(0x00137131, 0x2)   jmpw(0x0013714c, 0x19);               /* jmp 0x13714c */
//    II(0x00137133, 0x1)   /* Недостижимый код. */
l_0x00137134:
    II(0x00137134, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x00137137, 0x1)   pushw(ss);                            /* push ss */
    II(0x00137138, 0x1)   pushw(ax);                            /* push ax */
    II(0x00137139, 0x3)   pushw(memw_a16(ss, bp - 0x7c));       /* push word [bp-0x7c] */
    II(0x0013713c, 0x3)   pushw(memw_a16(ss, bp - 0x7e));       /* push word [bp-0x7e] */
    II(0x0013713f, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137140, 0x3)   callw(0x0013738e, 0x24b);             /* call 0x13738e */
    II(0x00137143, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00137146, 0x3)   add(memw_a16(ss, bp - 0x7e), ax);     /* add [bp-0x7e], ax */
    II(0x00137149, 0x2)   jmpw(0x0013711a, -0x31);              /* jmp 0x13711a */
//    II(0x0013714b, 0x1)   /* Недостижимый код. */
l_0x0013714c:
    II(0x0013714c, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x0013714f, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00137152, 0x3)   mov(memw_a16(ss, bp - 0x6), ss);      /* mov [bp-0x6], ss */
l_0x00137155:
    II(0x00137155, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00137158, 0x4)   cmp(memb_a16(es, bx), 0);             /* cmp byte [es:bx], 0x0 */
    II(0x0013715c, 0x2)   jzw(0x0013718e, 0x30);                /* jz 0x13718e */
    II(0x0013715e, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x00137161, 0x1)   cbw();                                /* cbw  */
    II(0x00137162, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00137164, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x8); /* test byte [bx+0x1ca1], 0x8 */
    II(0x00137169, 0x2)   jnzw(0x0013718e, 0x23);               /* jnz 0x13718e */
    II(0x0013716b, 0x3)   mov(memw_a16(ss, bp - 0x62), bx);     /* mov [bp-0x62], bx */
    II(0x0013716e, 0x3)   inc(memw_a16(ss, bp - 0x8));          /* inc word [bp-0x8] */
    II(0x00137171, 0x5)   test(memb_a16(ds, bx + 0x1ca1), 0x2); /* test byte [bx+0x1ca1], 0x2 */
    II(0x00137176, 0x2)   jzw(0x00137180, 0x8);                 /* jz 0x137180 */
    II(0x00137178, 0x3)   mov(al, memb_a16(ss, bp - 0x62));     /* mov al, [bp-0x62] */
    II(0x0013717b, 0x2)   sub(al, 0x20);                        /* sub al, 0x20 */
    II(0x0013717d, 0x2)   jmpw(0x00137183, 0x4);                /* jmp 0x137183 */
//    II(0x0013717f, 0x1)   /* Недостижимый код. */
l_0x00137180:
    II(0x00137180, 0x3)   mov(al, memb_a16(ss, bp - 0x62));     /* mov al, [bp-0x62] */
l_0x00137183:
    II(0x00137183, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00137186, 0x3)   inc(memw_a16(ss, bp - 0x4));          /* inc word [bp-0x4] */
    II(0x00137189, 0x3)   mov(memb_a16(es, bx), al);            /* mov [es:bx], al */
    II(0x0013718c, 0x2)   jmpw(0x00137155, -0x39);              /* jmp 0x137155 */
l_0x0013718e:
    II(0x0013718e, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00137191, 0x4)   mov(memb_a16(es, bx), 0);             /* mov byte [es:bx], 0x0 */
    II(0x00137195, 0x3)   jmpw(0x0013723c, 0xa4);               /* jmp 0x13723c */
l_0x00137198:
    II(0x00137198, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x0013719b, 0x1)   pushw(ss);                            /* push ss */
    II(0x0013719c, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013719d, 0x3)   pushw(memw_a16(ss, bp - 0x7c));       /* push word [bp-0x7c] */
    II(0x001371a0, 0x3)   pushw(memw_a16(ss, bp - 0x7e));       /* push word [bp-0x7e] */
    II(0x001371a3, 0x1)   pushw(cs);                            /* push cs */
    II(0x001371a4, 0x3)   callw(0x0013738e, 0x1e7);             /* call 0x13738e */
    II(0x001371a7, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001371aa, 0x3)   add(memw_a16(ss, bp - 0x7e), ax);     /* add [bp-0x7e], ax */
    II(0x001371ad, 0x5)   mov(memw_a16(ss, bp - 0x5a), 0);      /* mov word [bp-0x5a], 0x0 */
    II(0x001371b2, 0x2)   jmpw(0x001371b7, 0x3);                /* jmp 0x1371b7 */
l_0x001371b4:
    II(0x001371b4, 0x3)   inc(memw_a16(ss, bp - 0x5a));         /* inc word [bp-0x5a] */
l_0x001371b7:
    II(0x001371b7, 0x4)   cmp(memw_a16(ss, bp - 0x5a), 0x3);    /* cmp word [bp-0x5a], 0x3 */
    II(0x001371bb, 0x2)   jgew(0x001371e6, 0x29);               /* jge 0x1371e6 */
    II(0x001371bd, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x001371c0, 0x1)   pushw(ss);                            /* push ss */
    II(0x001371c1, 0x1)   pushw(ax);                            /* push ax */
//    II(0x001371c2, 0x1)   nop();                                /* nop  */
    II(0x001371c3, 0x1)   pushw(cs);                            /* push cs */
    II(0x001371c4, 0x3)   callw(0x001308d7, -0x68f0);           /* call 0x1308d7 */
    II(0x001371c7, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x001371c9, 0x2)   jzw(0x001371ce, 0x3);                 /* jz 0x1371ce */
    II(0x001371cb, 0x2)   jmpw(0x001371e6, 0x19);               /* jmp 0x1371e6 */
//    II(0x001371cd, 0x1)   /* Недостижимый код. */
l_0x001371ce:
    II(0x001371ce, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x001371d1, 0x1)   pushw(ss);                            /* push ss */
    II(0x001371d2, 0x1)   pushw(ax);                            /* push ax */
    II(0x001371d3, 0x3)   pushw(memw_a16(ss, bp - 0x7c));       /* push word [bp-0x7c] */
    II(0x001371d6, 0x3)   pushw(memw_a16(ss, bp - 0x7e));       /* push word [bp-0x7e] */
    II(0x001371d9, 0x1)   pushw(cs);                            /* push cs */
    II(0x001371da, 0x3)   callw(0x0013738e, 0x1b1);             /* call 0x13738e */
    II(0x001371dd, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001371e0, 0x3)   add(memw_a16(ss, bp - 0x7e), ax);     /* add [bp-0x7e], ax */
    II(0x001371e3, 0x2)   jmpw(0x001371b4, -0x31);              /* jmp 0x1371b4 */
//    II(0x001371e5, 0x1)   /* Недостижимый код. */
l_0x001371e6:
    II(0x001371e6, 0x3)   lea(ax, bp - 0x58);                   /* lea ax, [bp-0x58] */
    II(0x001371e9, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x001371ec, 0x3)   mov(memw_a16(ss, bp - 0x6), ss);      /* mov [bp-0x6], ss */
    II(0x001371ef, 0x1)   pushw(ss);                            /* push ss */
    II(0x001371f0, 0x1)   pushw(ax);                            /* push ax */
//    II(0x001371f1, 0x1)   nop();                                /* nop  */
    II(0x001371f2, 0x1)   pushw(cs);                            /* push cs */
    II(0x001371f3, 0x3)   callw(0x001308f7, -0x68ff);           /* call 0x1308f7 */
    II(0x001371f6, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x001371f9, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x001371fb, 0x4)   mov(bx, memw_a16(ds, bx + 0x47e));    /* mov bx, [bx+0x47e] */
    II(0x001371ff, 0x2)   mov(memw_a16(ds, bx), ax);            /* mov [bx], ax */
    II(0x00137201, 0x3)   mov(memw_a16(ds, bx + 0x2), dx);      /* mov [bx+0x2], dx */
    II(0x00137204, 0x2)   jmpw(0x0013723c, 0x36);               /* jmp 0x13723c */
l_0x00137206:
    II(0x00137206, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x00137209, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x0013720b, 0x4)   mov(bx, memw_a16(ds, bx + 0x47e));    /* mov bx, [bx+0x47e] */
    II(0x0013720f, 0x3)   mov(memb_a16(ds, bx), 0x1);           /* mov byte [bx], 0x1 */
    II(0x00137212, 0x2)   jmpw(0x0013723c, 0x28);               /* jmp 0x13723c */
l_0x00137214:
    II(0x00137214, 0x3)   mov(bx, memw_a16(ss, bp - 0x62));     /* mov bx, [bp-0x62] */
    II(0x00137217, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x00137219, 0x4)   mov(bx, memw_a16(ds, bx + 0x47e));    /* mov bx, [bx+0x47e] */
    II(0x0013721d, 0x3)   mov(memb_a16(ds, bx), 0);             /* mov byte [bx], 0x0 */
l_0x00137220:
    II(0x00137220, 0x2)   jmpw(0x0013723c, 0x1a);               /* jmp 0x13723c */
//    II(0x00137222, 0x2)   /* Недостижимый код. */
l_0x00137224:
    II(0x00137224, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00137226, 0x2)   jzw(0x00137214, -0x14);               /* jz 0x137214 */
    II(0x00137228, 0x1)   dec(ax);                              /* dec ax */
    II(0x00137229, 0x2)   jzw(0x00137206, -0x25);               /* jz 0x137206 */
    II(0x0013722b, 0x1)   dec(ax);                              /* dec ax */
    II(0x0013722c, 0x2)   jnzw(0x00137231, 0x3);                /* jnz 0x137231 */
    II(0x0013722e, 0x3)   jmpw(0x00137198, -0x99);              /* jmp 0x137198 */
l_0x00137231:
    II(0x00137231, 0x1)   dec(ax);                              /* dec ax */
    II(0x00137232, 0x2)   jzw(0x00137220, -0x14);               /* jz 0x137220 */
    II(0x00137234, 0x1)   dec(ax);                              /* dec ax */
    II(0x00137235, 0x2)   jnzw(0x0013723a, 0x3);                /* jnz 0x13723a */
    II(0x00137237, 0x3)   jmpw(0x001370ee, -0x14c);             /* jmp 0x1370ee */
l_0x0013723a:
    II(0x0013723a, 0x2)   jmpw(0x0013723c, 0);                  /* jmp 0x13723c */
l_0x0013723c:
    II(0x0013723c, 0x3)   jmpw(0x00136ff9, -0x246);             /* jmp 0x136ff9 */
//    II(0x0013723f, 0x1)   /* Недостижимый код. */
l_0x00137240:
    II(0x00137240, 0x5)   cmp(memw_a16(ds, 0x1ea6), 0);         /* cmp word [0x1ea6], 0x0 */
    II(0x00137245, 0x2)   jzw(0x0013724c, 0x5);                 /* jz 0x13724c */
    II(0x00137247, 0x5)   or_(memb_a16(ds, 0x19a2), 0x1);       /* or byte [0x19a2], 0x1 */
l_0x0013724c:
//    II(0x0013724c, 0x1)   nop();                                /* nop  */
    II(0x0013724d, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013724e, 0x3)   callw(0x0013e82c, 0x75db);            /* call 0x13e82c */
    II(0x00137251, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00137253, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00137255, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00137257, 0x2)   shl(dh, 0x1);                         /* shl dh, 1 */
    II(0x00137259, 0x2)   sbb(dh, dh);                          /* sbb dh, dh */
    II(0x0013725b, 0x2)   sar(dx, 0x1);                         /* sar dx, 1 */
    II(0x0013725d, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013725f, 0x2)   sar(dx, 0x1);                         /* sar dx, 1 */
    II(0x00137261, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00137263, 0x4)   cmp(dx, memw_a16(ds, 0x22));          /* cmp dx, [0x22] */
    II(0x00137267, 0x2)   jbw(0x00137278, 0xf);                 /* jb 0x137278 */
    II(0x00137269, 0x2)   jaw(0x00137271, 0x6);                 /* ja 0x137271 */
    II(0x0013726b, 0x4)   cmp(ax, memw_a16(ds, 0x20));          /* cmp ax, [0x20] */
    II(0x0013726f, 0x2)   jbew(0x00137278, 0x7);                /* jbe 0x137278 */
l_0x00137271:
    II(0x00137271, 0x3)   mov(ax, 0x2);                         /* mov ax, 0x2 */
    II(0x00137274, 0x1)   popw(ds);                             /* pop ds */
    II(0x00137275, 0x1)   popw(si);                             /* pop si */
    II(0x00137276, 0x1)   leavew();                             /* leave  */
    II(0x00137277, 0x1)   retfw();                              /* retf  */
l_0x00137278:
    II(0x00137278, 0x5)   cmp(memw_a16(ds, 0x32), 0x1);         /* cmp word [0x32], 0x1 */
    II(0x0013727d, 0x2)   jlw(0x0013728d, 0xe);                 /* jl 0x13728d */
    II(0x0013727f, 0x2)   jgw(0x00137281, 0);                   /* jg 0x137281 */
l_0x00137281:
    II(0x00137281, 0x6)   mov(memw_a16(ds, 0x30), 0xffff);      /* mov word [0x30], 0xffff */
    II(0x00137287, 0x6)   mov(memw_a16(ds, 0x32), 0);           /* mov word [0x32], 0x0 */
l_0x0013728d:
    II(0x0013728d, 0x3)   mov(ax, memw_a16(ds, 0x30));          /* mov ax, [0x30] */
    II(0x00137290, 0x4)   mov(dx, memw_a16(ds, 0x32));          /* mov dx, [0x32] */
    II(0x00137294, 0x4)   cmp(memw_a16(ds, 0x36), dx);          /* cmp [0x36], dx */
    II(0x00137298, 0x2)   jlw(0x001372b0, 0x16);                /* jl 0x1372b0 */
    II(0x0013729a, 0x2)   jgw(0x001372a2, 0x6);                 /* jg 0x1372a2 */
    II(0x0013729c, 0x4)   cmp(memw_a16(ds, 0x34), ax);          /* cmp [0x34], ax */
    II(0x001372a0, 0x2)   jbew(0x001372b0, 0xe);                /* jbe 0x1372b0 */
l_0x001372a2:
    II(0x001372a2, 0x3)   mov(ax, memw_a16(ds, 0x34));          /* mov ax, [0x34] */
    II(0x001372a5, 0x4)   mov(dx, memw_a16(ds, 0x36));          /* mov dx, [0x36] */
    II(0x001372a9, 0x3)   mov(memw_a16(ds, 0x30), ax);          /* mov [0x30], ax */
    II(0x001372ac, 0x4)   mov(memw_a16(ds, 0x32), dx);          /* mov [0x32], dx */
l_0x001372b0:
    II(0x001372b0, 0x1)   pushw(cs);                            /* push cs */
    II(0x001372b1, 0x3)   callw(0x00137458, 0x1a4);             /* call 0x137458 */
    II(0x001372b4, 0x3)   mov(memw_a16(ds, 0x51a0), ax);        /* mov [0x51a0], ax */
    II(0x001372b7, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x001372b9, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x001372bb, 0x4)   pushw(memw_a16(ds, 0x26));            /* push word [0x26] */
    II(0x001372bf, 0x4)   pushw(memw_a16(ds, 0x24));            /* push word [0x24] */
//    II(0x001372c3, 0x1)   nop();                                /* nop  */
    II(0x001372c4, 0x1)   pushw(cs);                            /* push cs */
    II(0x001372c5, 0x3)   callw(0x0013dddc, 0x6b14);            /* call 0x13dddc */
    II(0x001372c8, 0x3)   mov(memw_a16(ds, 0x201c), ax);        /* mov [0x201c], ax */
    II(0x001372cb, 0x4)   mov(memw_a16(ds, 0x201e), dx);        /* mov [0x201e], dx */
    II(0x001372cf, 0x6)   mov(memw_a16(ds, 0x1fa4), 0x1000);    /* mov word [0x1fa4], 0x1000 */
    II(0x001372d5, 0x6)   mov(memw_a16(ds, 0x1fa6), 0);         /* mov word [0x1fa6], 0x0 */
    II(0x001372db, 0x3)   add(ax, 0x808);                       /* add ax, 0x808 */
    II(0x001372de, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x001372e1, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x001372e3, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x001372e5, 0x3)   mov(memw_a16(ds, 0x4ff4), ax);        /* mov [0x4ff4], ax */
    II(0x001372e8, 0x4)   mov(memw_a16(ds, 0x4ff6), dx);        /* mov [0x4ff6], dx */
    II(0x001372ec, 0x4)   mov(cx, memw_a16(ds, 0x201c));        /* mov cx, [0x201c] */
    II(0x001372f0, 0x4)   mov(bx, memw_a16(ds, 0x201e));        /* mov bx, [0x201e] */
    II(0x001372f4, 0x3)   add(cx, 0x8);                         /* add cx, 0x8 */
    II(0x001372f7, 0x3)   adc(bx, 0);                           /* adc bx, 0x0 */
    II(0x001372fa, 0x2)   shl(cx, 0x1);                         /* shl cx, 1 */
    II(0x001372fc, 0x2)   rcl(bx, 0x1);                         /* rcl bx, 1 */
    II(0x001372fe, 0x2)   add(ax, cx);                          /* add ax, cx */
    II(0x00137300, 0x2)   adc(dx, bx);                          /* adc dx, bx */
    II(0x00137302, 0x3)   mov(memw_a16(ds, 0x4fb4), ax);        /* mov [0x4fb4], ax */
    II(0x00137305, 0x4)   mov(memw_a16(ds, 0x4fb6), dx);        /* mov [0x4fb6], dx */
    II(0x00137309, 0x4)   mov(cx, memw_a16(ds, 0x201c));        /* mov cx, [0x201c] */
    II(0x0013730d, 0x4)   mov(bx, memw_a16(ds, 0x201e));        /* mov bx, [0x201e] */
    II(0x00137311, 0x3)   add(cx, 0x4);                         /* add cx, 0x4 */
    II(0x00137314, 0x3)   adc(bx, 0);                           /* adc bx, 0x0 */
    II(0x00137317, 0x2)   shl(cx, 0x1);                         /* shl cx, 1 */
    II(0x00137319, 0x2)   rcl(bx, 0x1);                         /* rcl bx, 1 */
    II(0x0013731b, 0x2)   shl(cx, 0x1);                         /* shl cx, 1 */
    II(0x0013731d, 0x2)   rcl(bx, 0x1);                         /* rcl bx, 1 */
    II(0x0013731f, 0x2)   add(ax, cx);                          /* add ax, cx */
    II(0x00137321, 0x2)   adc(dx, bx);                          /* adc dx, bx */
    II(0x00137323, 0x3)   mov(memw_a16(ds, 0x4f8c), ax);        /* mov [0x4f8c], ax */
    II(0x00137326, 0x4)   mov(memw_a16(ds, 0x4f8e), dx);        /* mov [0x4f8e], dx */
    II(0x0013732a, 0x3)   test(ax, 0xfff);                      /* test ax, 0xfff */
    II(0x0013732d, 0x2)   jzw(0x0013733f, 0x10);                /* jz 0x13733f */
    II(0x0013732f, 0x3)   add(ax, 0x1000);                      /* add ax, 0x1000 */
    II(0x00137332, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x00137335, 0x3)   and_(ax, 0xf000);                     /* and ax, 0xf000 */
    II(0x00137338, 0x3)   mov(memw_a16(ds, 0x4f8c), ax);        /* mov [0x4f8c], ax */
    II(0x0013733b, 0x4)   mov(memw_a16(ds, 0x4f8e), dx);        /* mov [0x4f8e], dx */
l_0x0013733f:
    II(0x0013733f, 0x3)   mov(ax, memw_a16(ds, 0x201c));        /* mov ax, [0x201c] */
    II(0x00137342, 0x4)   mov(dx, memw_a16(ds, 0x201e));        /* mov dx, [0x201e] */
    II(0x00137346, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00137348, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013734a, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013734c, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013734e, 0x4)   add(ax, memw_a16(ds, 0x4f8c));        /* add ax, [0x4f8c] */
    II(0x00137352, 0x4)   adc(dx, memw_a16(ds, 0x4f8e));        /* adc dx, [0x4f8e] */
    II(0x00137356, 0x3)   mov(memw_a16(ds, 0x4f90), ax);        /* mov [0x4f90], ax */
    II(0x00137359, 0x4)   mov(memw_a16(ds, 0x4f92), dx);        /* mov [0x4f92], dx */
    II(0x0013735d, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013735f, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00137361, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00137363, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00137365, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00137367, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00137369, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013736b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013736d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013736f, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00137371, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00137373, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00137375, 0x3)   mov(memw_a16(ds, 0x519c), ax);        /* mov [0x519c], ax */
    II(0x00137378, 0x6)   test(memw_a16(ds, 0x4f90), 0xfff);    /* test word [0x4f90], 0xfff */
    II(0x0013737e, 0x2)   jzw(0x00137384, 0x4);                 /* jz 0x137384 */
    II(0x00137380, 0x1)   inc(ax);                              /* inc ax */
    II(0x00137381, 0x3)   mov(memw_a16(ds, 0x519c), ax);        /* mov [0x519c], ax */
l_0x00137384:
    II(0x00137384, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x00137386, 0x1)   popw(ds);                             /* pop ds */
    II(0x00137387, 0x1)   popw(si);                             /* pop si */
    II(0x00137388, 0x1)   leavew();                             /* leave  */
    II(0x00137389, 0x1)   retfw();                              /* retf  */
FUNC_END

