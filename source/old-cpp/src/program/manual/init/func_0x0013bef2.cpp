FUNC_BEGIN(0x0013bef2, 0x985ecfc145375020, 0x10, ({0xc8, 0x2e, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0x2b, 0xc0, 0x89, 0x46, 0xf0, 0x89, 0x46, 0xee, 0x89, 0x46, 0xfe, 0x89, 0x46, 0xfc, 0xff, 0x76, 0x6, 0xe, 0xe8, 0x89, 0x8, 0x83, 0xc4, 0x2, 0x89, 0x46, 0xe2, 0x89, 0x56, 0xe4, 0x89, 0x46, 0xea, 0x89, 0x56, 0xec, 0x3d, 0xff, 0xff, 0x75, 0x7, 0x3b, 0xd0, 0x75, 0x3, 0xe9, 0x16, 0x5, 0x5, 0, 0, 0x83, 0xd2, 0x1, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xc4, 0x5e, 0xc, 0x26, 0x89, 0x7, 0x26, 0x89, 0x57, 0x2, 0x8b, 0x46, 0xea, 0x8b, 0x56, 0xec, 0x3, 0x46, 0x8, 0x13, 0x56, 0xa, 0x3b, 0x16, 0xd2, 0x4f, 0x72, 0x10, 0x77, 0x6, 0x3b, 0x6, 0xd0, 0x4f, 0x76, 0x8, 0xb8, 0x16, 0x80, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0xff, 0x76, 0xe4, 0xff, 0x76, 0xe2, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0x3b, 0xd1, 0x83, 0xc4, 0x8, 0x3b, 0x46, 0x6, 0x75, 0x13, 0x83, 0x46, 0xfc, 0x1, 0x83, 0x56, 0xfe, 0, 0x83, 0x46, 0xe2, 0x1, 0x83, 0x56, 0xe4, 0, 0xeb, 0xd5, 0x90, 0x8b, 0x46, 0x8, 0x8b, 0x56, 0xa, 0x39, 0x56, 0xfe, 0x72, 0x39, 0x77, 0x5, 0x39, 0x46, 0xfc, 0x76, 0x32, 0x8b, 0x4e, 0xfc, 0x8b, 0x5e, 0xfe, 0x2b, 0xc8, 0x1b, 0xda, 0x53, 0x51, 0x3, 0x46, 0xea, 0x13, 0x56, 0xec, 0x52, 0x50, 0x8b, 0xf1, 0x8b, 0xfb, 0xe, 0xe8, 0x8e, 0x5, 0x83, 0xc4, 0x8, 0x1, 0x36, 0xac, 0x1f, 0x11, 0x3e, 0xae, 0x1f, 0x2b, 0xc0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0xe9, 0x5b, 0x4, 0x90, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x89, 0x46, 0xee, 0x89, 0x56, 0xf0, 0xff, 0x76, 0xe4, 0xff, 0x76, 0xe2, 0x83, 0x46, 0xe2, 0x1, 0x83, 0x56, 0xe4, 0, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0xb7, 0xd0, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x75, 0x1c, 0x8b, 0x46, 0x8, 0x8b, 0x56, 0xa, 0x83, 0x46, 0xee, 0x1, 0x83, 0x56, 0xf0, 0, 0x39, 0x46, 0xee, 0x75, 0x7, 0x39, 0x56, 0xf0, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0xc4, 0x8b, 0x46, 0x8, 0x8b, 0x56, 0xa, 0x39, 0x46, 0xee, 0x74, 0x3, 0xe9, 0xa2, 0, 0x39, 0x56, 0xf0, 0x74, 0x3, 0xe9, 0x9a, 0, 0x6a, 0x1, 0x2b, 0x46, 0xfc, 0x1b, 0x56, 0xfe, 0x52, 0x50, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xc4, 0x5e, 0xc, 0x26, 0x3, 0x7, 0x26, 0x13, 0x57, 0x2, 0x52, 0x50, 0xa0, 0xa7, 0x51, 0x2a, 0xe4, 0x50, 0xff, 0x76, 0x6, 0xe, 0xe8, 0x7, 0x4, 0x83, 0xc4, 0xe, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x2b, 0x46, 0x8, 0x1b, 0x56, 0xa, 0x1, 0x6, 0xc4, 0x1f, 0x11, 0x16, 0xc6, 0x1f, 0x1, 0x6, 0xac, 0x1f, 0x11, 0x16, 0xae, 0x1f, 0x83, 0x3e, 0xae, 0x1f, 0, 0x7d, 0x8, 0x2b, 0xc0, 0xa3, 0xae, 0x1f, 0xa3, 0xac, 0x1f, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x2b, 0x46, 0x8, 0x1b, 0x56, 0xa, 0x1, 0x6, 0xbc, 0x1f, 0x11, 0x16, 0xbe, 0x1f, 0x83, 0x3e, 0xbe, 0x1f, 0, 0x7d, 0x8, 0x2b, 0xc0, 0xa3, 0xbe, 0x1f, 0xa3, 0xbc, 0x1f, 0x2b, 0xc0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x90, 0x2b, 0x46, 0xfc, 0x1b, 0x56, 0xfe, 0x3b, 0x16, 0xc6, 0x1f, 0x7c, 0x10, 0x7f, 0x6, 0x3b, 0x6, 0xc4, 0x1f, 0x76, 0x8, 0xb8, 0x16, 0x80, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0xa1, 0x1a, 0, 0xb, 0x6, 0x18, 0, 0x74, 0x5d, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x2b, 0x6, 0xc4, 0x1f, 0x1b, 0x16, 0xc6, 0x1f, 0x2b, 0x6, 0xc0, 0x1f, 0x1b, 0x16, 0xc2, 0x1f, 0x3, 0x6, 0xb4, 0x1f, 0x13, 0x16, 0xb6, 0x1f, 0x5, 0x4, 0, 0x83, 0xd2, 0, 0x89, 0x46, 0xe6, 0x89, 0x56, 0xe8, 0x8b, 0xe, 0x50, 0x1f, 0x8b, 0x1e, 0x52, 0x1f, 0x3b, 0xd3, 0x7c, 0x27, 0x7f, 0x4, 0x3b, 0xc1, 0x76, 0x21, 0x2b, 0xc1, 0x1b, 0xd3, 0x89, 0x46, 0xd6, 0x89, 0x56, 0xd8, 0x52, 0x50, 0x90, 0xe, 0xe8, 0x54, 0xca, 0x83, 0xc4, 0x4, 0xb, 0xc0, 0x75, 0x9, 0xb8, 0x14, 0x80, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x90, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0xe, 0xe8, 0x8c, 0xfa, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xe2, 0x89, 0x56, 0xe4, 0x3d, 0xff, 0xff, 0x75, 0x7, 0x3b, 0xd0, 0x75, 0x3, 0xe9, 0xbb, 0x2, 0x5, 0, 0, 0x83, 0xd2, 0x1, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xc4, 0x5e, 0xc, 0x26, 0x89, 0x7, 0x26, 0x89, 0x57, 0x2, 0x2b, 0xc0, 0x89, 0x46, 0xf0, 0x89, 0x46, 0xee, 0xeb, 0x9, 0x90, 0x83, 0x46, 0xee, 0x1, 0x83, 0x56, 0xf0, 0, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x39, 0x56, 0xf0, 0x76, 0x3, 0xe9, 0xce, 0x1, 0x72, 0x8, 0x39, 0x46, 0xee, 0x72, 0x3, 0xe9, 0xc4, 0x1, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x3, 0x46, 0xea, 0x13, 0x56, 0xec, 0x52, 0x50, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0x8b, 0xf0, 0x8b, 0xfa, 0xe8, 0xcd, 0xce, 0x83, 0xc4, 0x8, 0x50, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x3, 0x46, 0xe2, 0x13, 0x56, 0xe4, 0x52, 0x50, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0x89, 0x46, 0xd2, 0x89, 0x56, 0xd4, 0xe8, 0xc9, 0xcf, 0x83, 0xc4, 0xa, 0x57, 0x56, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0x9a, 0xce, 0x83, 0xc4, 0x8, 0x50, 0xff, 0x76, 0xd4, 0xff, 0x76, 0xd2, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0xa4, 0xcf, 0x83, 0xc4, 0xa, 0x57, 0x56, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0xb9, 0xcf, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xde, 0x89, 0x56, 0xe0, 0x52, 0x50, 0xff, 0x76, 0xd4, 0xff, 0x76, 0xd2, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0xca, 0xcf, 0x83, 0xc4, 0xc, 0x6a, 0, 0x57, 0x56, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0x66, 0xcf, 0x83, 0xc4, 0xa, 0x6a, 0, 0x57, 0x56, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0x54, 0xcf, 0x83, 0xc4, 0xa, 0xf6, 0x46, 0xde, 0x1, 0x74, 0x6a, 0xc7, 0x46, 0xfa, 0, 0, 0xeb, 0x4, 0x90, 0xff, 0x46, 0xfa, 0x8b, 0x46, 0xfa, 0x39, 0x6, 0x9e, 0x51, 0x76, 0x54, 0x8b, 0x46, 0xde, 0x8b, 0x56, 0xe0, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x8b, 0x5e, 0xfa, 0xc1, 0xe3, 0x2, 0xc4, 0x36, 0xa0, 0x4f, 0x26, 0x39, 0, 0x75, 0x25, 0x26, 0x39, 0x50, 0x2, 0x75, 0x1f, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x3, 0x46, 0xe2, 0x13, 0x56, 0xe4, 0x5, 0, 0, 0x83, 0xd2, 0x1, 0xc4, 0x36, 0xa4, 0x4f, 0x26, 0x89, 0, 0x26, 0x89, 0x50, 0x2, 0xeb, 0x2, 0xeb, 0xa0, 0xeb, 0x61, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x3, 0x46, 0xea, 0x13, 0x56, 0xec, 0x52, 0x50, 0xe8, 0xf3, 0xcb, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xda, 0x89, 0x56, 0xdc, 0x3d, 0xff, 0xff, 0x75, 0x4, 0xb, 0xd2, 0x74, 0x3e, 0x52, 0x50, 0xff, 0x36, 0xb6, 0x4f, 0xff, 0x36, 0xb4, 0x4f, 0xe8, 0xd6, 0xce, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xf2, 0x89, 0x56, 0xf4, 0x33, 0x46, 0xe2, 0x33, 0x56, 0xe4, 0x2a, 0xf6, 0x31, 0x46, 0xf2, 0x31, 0x56, 0xf4, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xdc, 0xff, 0x76, 0xda, 0xff, 0x36, 0xb6, 0x4f, 0xff, 0x36, 0xb4, 0x4f, 0xe8, 0xd5, 0xce, 0x83, 0xc4, 0xc, 0x80, 0x66, 0xde, 0xfe, 0x8b, 0x46, 0xde, 0x80, 0xe4, 0xf, 0x89, 0x46, 0xde, 0xc7, 0x46, 0xe0, 0, 0, 0x80, 0x66, 0xdf, 0xf1, 0xff, 0x76, 0xe0, 0xff, 0x76, 0xde, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x3, 0x46, 0xea, 0x13, 0x56, 0xec, 0x52, 0x50, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0x9d, 0xce, 0x83, 0xc4, 0xc, 0xe9, 0x1c, 0xfe, 0x90, 0xe, 0xe8, 0xf4, 0xca, 0x6a, 0x1, 0x8b, 0x46, 0x8, 0x8b, 0x56, 0xa, 0x2b, 0x46, 0xfc, 0x1b, 0x56, 0xfe, 0x52, 0x50, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x3, 0x46, 0xf6, 0x13, 0x56, 0xf8, 0x52, 0x50, 0xa0, 0xa7, 0x51, 0x2a, 0xe4, 0x50, 0xff, 0x76, 0x6, 0xe, 0xe8, 0xa8, 0, 0x83, 0xc4, 0xe, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x2b, 0x46, 0x8, 0x1b, 0x56, 0xa, 0x1, 0x6, 0xc4, 0x1f, 0x11, 0x16, 0xc6, 0x1f, 0x1, 0x6, 0xac, 0x1f, 0x11, 0x16, 0xae, 0x1f, 0x83, 0x3e, 0xae, 0x1f, 0, 0x7d, 0x8, 0x2b, 0xc0, 0xa3, 0xae, 0x1f, 0xa3, 0xac, 0x1f, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x2b, 0x46, 0x8, 0x1b, 0x56, 0xa, 0x1, 0x6, 0xbc, 0x1f, 0x11, 0x16, 0xbe, 0x1f, 0x83, 0x3e, 0xbe, 0x1f, 0, 0x7d, 0x8, 0x2b, 0xc0, 0xa3, 0xbe, 0x1f, 0xa3, 0xbc, 0x1f, 0x2b, 0xc0, 0xeb, 0xf, 0x90, 0xb8, 0x12, 0x80, 0xeb, 0x9, 0x90, 0xeb, 0x6, 0xb8, 0x23, 0x80, 0xeb, 0x1, 0x90, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0013bef2, 0x4)   enterw(0x2e, 0);                      /* enter 0x2e, 0x0 */
    II(0x0013bef6, 0x1)   pushw(di);                            /* push di */
    II(0x0013bef7, 0x1)   pushw(si);                            /* push si */
    II(0x0013bef8, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013bef9, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013befc, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013befe, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013bf00, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x0013bf03, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x0013bf06, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
    II(0x0013bf09, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013bf0c, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0013bf0f, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013bf10, 0x3)   callw(0x0013c79c, 0x889);             /* call 0x13c79c */
    II(0x0013bf13, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x0013bf16, 0x3)   mov(memw_a16(ss, bp - 0x1e), ax);     /* mov [bp-0x1e], ax */
    II(0x0013bf19, 0x3)   mov(memw_a16(ss, bp - 0x1c), dx);     /* mov [bp-0x1c], dx */
    II(0x0013bf1c, 0x3)   mov(memw_a16(ss, bp - 0x16), ax);     /* mov [bp-0x16], ax */
    II(0x0013bf1f, 0x3)   mov(memw_a16(ss, bp - 0x14), dx);     /* mov [bp-0x14], dx */
    II(0x0013bf22, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x0013bf25, 0x2)   jnzw(0x0013bf2e, 0x7);                /* jnz 0x13bf2e */
    II(0x0013bf27, 0x2)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x0013bf29, 0x2)   jnzw(0x0013bf2e, 0x3);                /* jnz 0x13bf2e */
    II(0x0013bf2b, 0x3)   jmpw(0x0013c444, 0x516);              /* jmp 0x13c444 */
l_0x0013bf2e:
    II(0x0013bf2e, 0x3)   add(ax, 0);                           /* add ax, 0x0 */
    II(0x0013bf31, 0x3)   adc(dx, 0x1);                         /* adc dx, 0x1 */
    II(0x0013bf34, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x0013bf36, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013bf38, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013bf3a, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013bf3c, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013bf3e, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013bf40, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013bf42, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013bf44, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013bf46, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013bf48, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013bf4a, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013bf4c, 0x3)   les(bx, ss, bp + 0xc);                /* les bx, [bp+0xc] */
    II(0x0013bf4f, 0x3)   mov(memw_a16(es, bx), ax);            /* mov [es:bx], ax */
    II(0x0013bf52, 0x4)   mov(memw_a16(es, bx + 0x2), dx);      /* mov [es:bx+0x2], dx */
    II(0x0013bf56, 0x3)   mov(ax, memw_a16(ss, bp - 0x16));     /* mov ax, [bp-0x16] */
    II(0x0013bf59, 0x3)   mov(dx, memw_a16(ss, bp - 0x14));     /* mov dx, [bp-0x14] */
    II(0x0013bf5c, 0x3)   add(ax, memw_a16(ss, bp + 0x8));      /* add ax, [bp+0x8] */
    II(0x0013bf5f, 0x3)   adc(dx, memw_a16(ss, bp + 0xa));      /* adc dx, [bp+0xa] */
    II(0x0013bf62, 0x4)   cmp(dx, memw_a16(ds, 0x4fd2));        /* cmp dx, [0x4fd2] */
    II(0x0013bf66, 0x2)   jbw(0x0013bf78, 0x10);                /* jb 0x13bf78 */
    II(0x0013bf68, 0x2)   jaw(0x0013bf70, 0x6);                 /* ja 0x13bf70 */
    II(0x0013bf6a, 0x4)   cmp(ax, memw_a16(ds, 0x4fd0));        /* cmp ax, [0x4fd0] */
    II(0x0013bf6e, 0x2)   jbew(0x0013bf78, 0x8);                /* jbe 0x13bf78 */
l_0x0013bf70:
    II(0x0013bf70, 0x3)   mov(ax, 0x8016);                      /* mov ax, 0x8016 */
    II(0x0013bf73, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013bf74, 0x1)   popw(si);                             /* pop si */
    II(0x0013bf75, 0x1)   popw(di);                             /* pop di */
    II(0x0013bf76, 0x1)   leavew();                             /* leave  */
    II(0x0013bf77, 0x1)   retfw();                              /* retf  */
l_0x0013bf78:
    II(0x0013bf78, 0x3)   pushw(memw_a16(ss, bp - 0x1c));       /* push word [bp-0x1c] */
    II(0x0013bf7b, 0x3)   pushw(memw_a16(ss, bp - 0x1e));       /* push word [bp-0x1e] */
    II(0x0013bf7e, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013bf82, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x0013bf86, 0x3)   callw(0x001390c4, -0x2ec5);           /* call 0x1390c4 */
    II(0x0013bf89, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013bf8c, 0x3)   cmp(ax, memw_a16(ss, bp + 0x6));      /* cmp ax, [bp+0x6] */
    II(0x0013bf8f, 0x2)   jnzw(0x0013bfa4, 0x13);               /* jnz 0x13bfa4 */
    II(0x0013bf91, 0x4)   add(memw_a16(ss, bp - 0x4), 0x1);     /* add word [bp-0x4], 0x1 */
    II(0x0013bf95, 0x4)   adc(memw_a16(ss, bp - 0x2), 0);       /* adc word [bp-0x2], 0x0 */
    II(0x0013bf99, 0x4)   add(memw_a16(ss, bp - 0x1e), 0x1);    /* add word [bp-0x1e], 0x1 */
    II(0x0013bf9d, 0x4)   adc(memw_a16(ss, bp - 0x1c), 0);      /* adc word [bp-0x1c], 0x0 */
    II(0x0013bfa1, 0x2)   jmpw(0x0013bf78, -0x2b);              /* jmp 0x13bf78 */
//    II(0x0013bfa3, 0x1)   /* Недостижимый код. */
l_0x0013bfa4:
    II(0x0013bfa4, 0x3)   mov(ax, memw_a16(ss, bp + 0x8));      /* mov ax, [bp+0x8] */
    II(0x0013bfa7, 0x3)   mov(dx, memw_a16(ss, bp + 0xa));      /* mov dx, [bp+0xa] */
    II(0x0013bfaa, 0x3)   cmp(memw_a16(ss, bp - 0x2), dx);      /* cmp [bp-0x2], dx */
    II(0x0013bfad, 0x2)   jbw(0x0013bfe8, 0x39);                /* jb 0x13bfe8 */
    II(0x0013bfaf, 0x2)   jaw(0x0013bfb6, 0x5);                 /* ja 0x13bfb6 */
    II(0x0013bfb1, 0x3)   cmp(memw_a16(ss, bp - 0x4), ax);      /* cmp [bp-0x4], ax */
    II(0x0013bfb4, 0x2)   jbew(0x0013bfe8, 0x32);               /* jbe 0x13bfe8 */
l_0x0013bfb6:
    II(0x0013bfb6, 0x3)   mov(cx, memw_a16(ss, bp - 0x4));      /* mov cx, [bp-0x4] */
    II(0x0013bfb9, 0x3)   mov(bx, memw_a16(ss, bp - 0x2));      /* mov bx, [bp-0x2] */
    II(0x0013bfbc, 0x2)   sub(cx, ax);                          /* sub cx, ax */
    II(0x0013bfbe, 0x2)   sbb(bx, dx);                          /* sbb bx, dx */
    II(0x0013bfc0, 0x1)   pushw(bx);                            /* push bx */
    II(0x0013bfc1, 0x1)   pushw(cx);                            /* push cx */
    II(0x0013bfc2, 0x3)   add(ax, memw_a16(ss, bp - 0x16));     /* add ax, [bp-0x16] */
    II(0x0013bfc5, 0x3)   adc(dx, memw_a16(ss, bp - 0x14));     /* adc dx, [bp-0x14] */
    II(0x0013bfc8, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013bfc9, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013bfca, 0x2)   mov(si, cx);                          /* mov si, cx */
    II(0x0013bfcc, 0x2)   mov(di, bx);                          /* mov di, bx */
    II(0x0013bfce, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013bfcf, 0x3)   callw(0x0013c560, 0x58e);             /* call 0x13c560 */
    II(0x0013bfd2, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013bfd5, 0x4)   add(memw_a16(ds, 0x1fac), si);        /* add [0x1fac], si */
    II(0x0013bfd9, 0x4)   adc(memw_a16(ds, 0x1fae), di);        /* adc [0x1fae], di */
    II(0x0013bfdd, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013bfdf, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013bfe0, 0x1)   popw(si);                             /* pop si */
    II(0x0013bfe1, 0x1)   popw(di);                             /* pop di */
    II(0x0013bfe2, 0x1)   leavew();                             /* leave  */
    II(0x0013bfe3, 0x1)   retfw();                              /* retf  */
//    II(0x0013bfe4, 0x4)   /* Недостижимый код. */
l_0x0013bfe8:
    II(0x0013bfe8, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013bfeb, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013bfee, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x0013bff1, 0x3)   mov(memw_a16(ss, bp - 0x10), dx);     /* mov [bp-0x10], dx */
l_0x0013bff4:
    II(0x0013bff4, 0x3)   pushw(memw_a16(ss, bp - 0x1c));       /* push word [bp-0x1c] */
    II(0x0013bff7, 0x3)   pushw(memw_a16(ss, bp - 0x1e));       /* push word [bp-0x1e] */
    II(0x0013bffa, 0x4)   add(memw_a16(ss, bp - 0x1e), 0x1);    /* add word [bp-0x1e], 0x1 */
    II(0x0013bffe, 0x4)   adc(memw_a16(ss, bp - 0x1c), 0);      /* adc word [bp-0x1c], 0x0 */
    II(0x0013c002, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013c006, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x0013c00a, 0x3)   callw(0x001390c4, -0x2f49);           /* call 0x1390c4 */
    II(0x0013c00d, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013c010, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013c012, 0x2)   jnzw(0x0013c030, 0x1c);               /* jnz 0x13c030 */
    II(0x0013c014, 0x3)   mov(ax, memw_a16(ss, bp + 0x8));      /* mov ax, [bp+0x8] */
    II(0x0013c017, 0x3)   mov(dx, memw_a16(ss, bp + 0xa));      /* mov dx, [bp+0xa] */
    II(0x0013c01a, 0x4)   add(memw_a16(ss, bp - 0x12), 0x1);    /* add word [bp-0x12], 0x1 */
    II(0x0013c01e, 0x4)   adc(memw_a16(ss, bp - 0x10), 0);      /* adc word [bp-0x10], 0x0 */
    II(0x0013c022, 0x3)   cmp(memw_a16(ss, bp - 0x12), ax);     /* cmp [bp-0x12], ax */
    II(0x0013c025, 0x2)   jnzw(0x0013c02e, 0x7);                /* jnz 0x13c02e */
    II(0x0013c027, 0x3)   cmp(memw_a16(ss, bp - 0x10), dx);     /* cmp [bp-0x10], dx */
    II(0x0013c02a, 0x2)   jnzw(0x0013c02e, 0x2);                /* jnz 0x13c02e */
    II(0x0013c02c, 0x2)   jmpw(0x0013c030, 0x2);                /* jmp 0x13c030 */
l_0x0013c02e:
    II(0x0013c02e, 0x2)   jmpw(0x0013bff4, -0x3c);              /* jmp 0x13bff4 */
l_0x0013c030:
    II(0x0013c030, 0x3)   mov(ax, memw_a16(ss, bp + 0x8));      /* mov ax, [bp+0x8] */
    II(0x0013c033, 0x3)   mov(dx, memw_a16(ss, bp + 0xa));      /* mov dx, [bp+0xa] */
    II(0x0013c036, 0x3)   cmp(memw_a16(ss, bp - 0x12), ax);     /* cmp [bp-0x12], ax */
    II(0x0013c039, 0x2)   jzw(0x0013c03e, 0x3);                 /* jz 0x13c03e */
    II(0x0013c03b, 0x3)   jmpw(0x0013c0e0, 0xa2);               /* jmp 0x13c0e0 */
l_0x0013c03e:
    II(0x0013c03e, 0x3)   cmp(memw_a16(ss, bp - 0x10), dx);     /* cmp [bp-0x10], dx */
    II(0x0013c041, 0x2)   jzw(0x0013c046, 0x3);                 /* jz 0x13c046 */
    II(0x0013c043, 0x3)   jmpw(0x0013c0e0, 0x9a);               /* jmp 0x13c0e0 */
l_0x0013c046:
    II(0x0013c046, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x0013c048, 0x3)   sub(ax, memw_a16(ss, bp - 0x4));      /* sub ax, [bp-0x4] */
    II(0x0013c04b, 0x3)   sbb(dx, memw_a16(ss, bp - 0x2));      /* sbb dx, [bp-0x2] */
    II(0x0013c04e, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c04f, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c050, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013c053, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013c056, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x0013c058, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013c05a, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013c05c, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013c05e, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c060, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c062, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c064, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c066, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c068, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c06a, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c06c, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c06e, 0x3)   les(bx, ss, bp + 0xc);                /* les bx, [bp+0xc] */
    II(0x0013c071, 0x3)   add(ax, memw_a16(es, bx));            /* add ax, [es:bx] */
    II(0x0013c074, 0x4)   adc(dx, memw_a16(es, bx + 0x2));      /* adc dx, [es:bx+0x2] */
    II(0x0013c078, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c079, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c07a, 0x3)   mov(al, memb_a16(ds, 0x51a7));        /* mov al, [0x51a7] */
    II(0x0013c07d, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0013c07f, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c080, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0013c083, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013c084, 0x3)   callw(0x0013c48e, 0x407);             /* call 0x13c48e */
    II(0x0013c087, 0x3)   add(sp, 0xe);                         /* add sp, 0xe */
    II(0x0013c08a, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013c08d, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013c090, 0x3)   sub(ax, memw_a16(ss, bp + 0x8));      /* sub ax, [bp+0x8] */
    II(0x0013c093, 0x3)   sbb(dx, memw_a16(ss, bp + 0xa));      /* sbb dx, [bp+0xa] */
    II(0x0013c096, 0x4)   add(memw_a16(ds, 0x1fc4), ax);        /* add [0x1fc4], ax */
    II(0x0013c09a, 0x4)   adc(memw_a16(ds, 0x1fc6), dx);        /* adc [0x1fc6], dx */
    II(0x0013c09e, 0x4)   add(memw_a16(ds, 0x1fac), ax);        /* add [0x1fac], ax */
    II(0x0013c0a2, 0x4)   adc(memw_a16(ds, 0x1fae), dx);        /* adc [0x1fae], dx */
    II(0x0013c0a6, 0x5)   cmp(memw_a16(ds, 0x1fae), 0);         /* cmp word [0x1fae], 0x0 */
    II(0x0013c0ab, 0x2)   jgew(0x0013c0b5, 0x8);                /* jge 0x13c0b5 */
    II(0x0013c0ad, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013c0af, 0x3)   mov(memw_a16(ds, 0x1fae), ax);        /* mov [0x1fae], ax */
    II(0x0013c0b2, 0x3)   mov(memw_a16(ds, 0x1fac), ax);        /* mov [0x1fac], ax */
l_0x0013c0b5:
    II(0x0013c0b5, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013c0b8, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013c0bb, 0x3)   sub(ax, memw_a16(ss, bp + 0x8));      /* sub ax, [bp+0x8] */
    II(0x0013c0be, 0x3)   sbb(dx, memw_a16(ss, bp + 0xa));      /* sbb dx, [bp+0xa] */
    II(0x0013c0c1, 0x4)   add(memw_a16(ds, 0x1fbc), ax);        /* add [0x1fbc], ax */
    II(0x0013c0c5, 0x4)   adc(memw_a16(ds, 0x1fbe), dx);        /* adc [0x1fbe], dx */
    II(0x0013c0c9, 0x5)   cmp(memw_a16(ds, 0x1fbe), 0);         /* cmp word [0x1fbe], 0x0 */
    II(0x0013c0ce, 0x2)   jgew(0x0013c0d8, 0x8);                /* jge 0x13c0d8 */
    II(0x0013c0d0, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013c0d2, 0x3)   mov(memw_a16(ds, 0x1fbe), ax);        /* mov [0x1fbe], ax */
    II(0x0013c0d5, 0x3)   mov(memw_a16(ds, 0x1fbc), ax);        /* mov [0x1fbc], ax */
l_0x0013c0d8:
    II(0x0013c0d8, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013c0da, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013c0db, 0x1)   popw(si);                             /* pop si */
    II(0x0013c0dc, 0x1)   popw(di);                             /* pop di */
    II(0x0013c0dd, 0x1)   leavew();                             /* leave  */
    II(0x0013c0de, 0x1)   retfw();                              /* retf  */
//    II(0x0013c0df, 0x1)   /* Недостижимый код. */
l_0x0013c0e0:
    II(0x0013c0e0, 0x3)   sub(ax, memw_a16(ss, bp - 0x4));      /* sub ax, [bp-0x4] */
    II(0x0013c0e3, 0x3)   sbb(dx, memw_a16(ss, bp - 0x2));      /* sbb dx, [bp-0x2] */
    II(0x0013c0e6, 0x4)   cmp(dx, memw_a16(ds, 0x1fc6));        /* cmp dx, [0x1fc6] */
    II(0x0013c0ea, 0x2)   jlw(0x0013c0fc, 0x10);                /* jl 0x13c0fc */
    II(0x0013c0ec, 0x2)   jgw(0x0013c0f4, 0x6);                 /* jg 0x13c0f4 */
    II(0x0013c0ee, 0x4)   cmp(ax, memw_a16(ds, 0x1fc4));        /* cmp ax, [0x1fc4] */
    II(0x0013c0f2, 0x2)   jbew(0x0013c0fc, 0x8);                /* jbe 0x13c0fc */
l_0x0013c0f4:
    II(0x0013c0f4, 0x3)   mov(ax, 0x8016);                      /* mov ax, 0x8016 */
    II(0x0013c0f7, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013c0f8, 0x1)   popw(si);                             /* pop si */
    II(0x0013c0f9, 0x1)   popw(di);                             /* pop di */
    II(0x0013c0fa, 0x1)   leavew();                             /* leave  */
    II(0x0013c0fb, 0x1)   retfw();                              /* retf  */
l_0x0013c0fc:
    II(0x0013c0fc, 0x3)   mov(ax, memw_a16(ds, 0x1a));          /* mov ax, [0x1a] */
    II(0x0013c0ff, 0x4)   or_(ax, memw_a16(ds, 0x18));          /* or ax, [0x18] */
    II(0x0013c103, 0x2)   jzw(0x0013c162, 0x5d);                /* jz 0x13c162 */
    II(0x0013c105, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013c108, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013c10b, 0x4)   sub(ax, memw_a16(ds, 0x1fc4));        /* sub ax, [0x1fc4] */
    II(0x0013c10f, 0x4)   sbb(dx, memw_a16(ds, 0x1fc6));        /* sbb dx, [0x1fc6] */
    II(0x0013c113, 0x4)   sub(ax, memw_a16(ds, 0x1fc0));        /* sub ax, [0x1fc0] */
    II(0x0013c117, 0x4)   sbb(dx, memw_a16(ds, 0x1fc2));        /* sbb dx, [0x1fc2] */
    II(0x0013c11b, 0x4)   add(ax, memw_a16(ds, 0x1fb4));        /* add ax, [0x1fb4] */
    II(0x0013c11f, 0x4)   adc(dx, memw_a16(ds, 0x1fb6));        /* adc dx, [0x1fb6] */
    II(0x0013c123, 0x3)   add(ax, 0x4);                         /* add ax, 0x4 */
    II(0x0013c126, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x0013c129, 0x3)   mov(memw_a16(ss, bp - 0x1a), ax);     /* mov [bp-0x1a], ax */
    II(0x0013c12c, 0x3)   mov(memw_a16(ss, bp - 0x18), dx);     /* mov [bp-0x18], dx */
    II(0x0013c12f, 0x4)   mov(cx, memw_a16(ds, 0x1f50));        /* mov cx, [0x1f50] */
    II(0x0013c133, 0x4)   mov(bx, memw_a16(ds, 0x1f52));        /* mov bx, [0x1f52] */
    II(0x0013c137, 0x2)   cmp(dx, bx);                          /* cmp dx, bx */
    II(0x0013c139, 0x2)   jlw(0x0013c162, 0x27);                /* jl 0x13c162 */
    II(0x0013c13b, 0x2)   jgw(0x0013c141, 0x4);                 /* jg 0x13c141 */
    II(0x0013c13d, 0x2)   cmp(ax, cx);                          /* cmp ax, cx */
    II(0x0013c13f, 0x2)   jbew(0x0013c162, 0x21);               /* jbe 0x13c162 */
l_0x0013c141:
    II(0x0013c141, 0x2)   sub(ax, cx);                          /* sub ax, cx */
    II(0x0013c143, 0x2)   sbb(dx, bx);                          /* sbb dx, bx */
    II(0x0013c145, 0x3)   mov(memw_a16(ss, bp - 0x2a), ax);     /* mov [bp-0x2a], ax */
    II(0x0013c148, 0x3)   mov(memw_a16(ss, bp - 0x28), dx);     /* mov [bp-0x28], dx */
    II(0x0013c14b, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c14c, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013c14d, 0x1)   nop();                                /* nop  */
    II(0x0013c14e, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013c14f, 0x3)   callw(0x00138ba6, -0x35ac);           /* call 0x138ba6 */
    II(0x0013c152, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013c155, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013c157, 0x2)   jnzw(0x0013c162, 0x9);                /* jnz 0x13c162 */
    II(0x0013c159, 0x3)   mov(ax, 0x8014);                      /* mov ax, 0x8014 */
    II(0x0013c15c, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013c15d, 0x1)   popw(si);                             /* pop si */
    II(0x0013c15e, 0x1)   popw(di);                             /* pop di */
    II(0x0013c15f, 0x1)   leavew();                             /* leave  */
    II(0x0013c160, 0x1)   retfw();                              /* retf  */
//    II(0x0013c161, 0x1)   /* Недостижимый код. */
l_0x0013c162:
    II(0x0013c162, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x0013c165, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0013c168, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013c169, 0x3)   callw(0x0013bbf8, -0x574);            /* call 0x13bbf8 */
    II(0x0013c16c, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013c16f, 0x3)   mov(memw_a16(ss, bp - 0x1e), ax);     /* mov [bp-0x1e], ax */
    II(0x0013c172, 0x3)   mov(memw_a16(ss, bp - 0x1c), dx);     /* mov [bp-0x1c], dx */
    II(0x0013c175, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x0013c178, 0x2)   jnzw(0x0013c181, 0x7);                /* jnz 0x13c181 */
    II(0x0013c17a, 0x2)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x0013c17c, 0x2)   jnzw(0x0013c181, 0x3);                /* jnz 0x13c181 */
    II(0x0013c17e, 0x3)   jmpw(0x0013c43c, 0x2bb);              /* jmp 0x13c43c */
l_0x0013c181:
    II(0x0013c181, 0x3)   add(ax, 0);                           /* add ax, 0x0 */
    II(0x0013c184, 0x3)   adc(dx, 0x1);                         /* adc dx, 0x1 */
    II(0x0013c187, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x0013c189, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013c18b, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013c18d, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013c18f, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c191, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c193, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c195, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c197, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c199, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c19b, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c19d, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c19f, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0013c1a2, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0013c1a5, 0x3)   les(bx, ss, bp + 0xc);                /* les bx, [bp+0xc] */
    II(0x0013c1a8, 0x3)   mov(memw_a16(es, bx), ax);            /* mov [es:bx], ax */
    II(0x0013c1ab, 0x4)   mov(memw_a16(es, bx + 0x2), dx);      /* mov [es:bx+0x2], dx */
    II(0x0013c1af, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013c1b1, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x0013c1b4, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x0013c1b7, 0x2)   jmpw(0x0013c1c2, 0x9);                /* jmp 0x13c1c2 */
//    II(0x0013c1b9, 0x1)   /* Недостижимый код. */
l_0x0013c1ba:
    II(0x0013c1ba, 0x4)   add(memw_a16(ss, bp - 0x12), 0x1);    /* add word [bp-0x12], 0x1 */
    II(0x0013c1be, 0x4)   adc(memw_a16(ss, bp - 0x10), 0);      /* adc word [bp-0x10], 0x0 */
l_0x0013c1c2:
    II(0x0013c1c2, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013c1c5, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013c1c8, 0x3)   cmp(memw_a16(ss, bp - 0x10), dx);     /* cmp [bp-0x10], dx */
    II(0x0013c1cb, 0x2)   jbew(0x0013c1d0, 0x3);                /* jbe 0x13c1d0 */
    II(0x0013c1cd, 0x3)   jmpw(0x0013c39e, 0x1ce);              /* jmp 0x13c39e */
l_0x0013c1d0:
    II(0x0013c1d0, 0x2)   jbw(0x0013c1da, 0x8);                 /* jb 0x13c1da */
    II(0x0013c1d2, 0x3)   cmp(memw_a16(ss, bp - 0x12), ax);     /* cmp [bp-0x12], ax */
    II(0x0013c1d5, 0x2)   jbw(0x0013c1da, 0x3);                 /* jb 0x13c1da */
    II(0x0013c1d7, 0x3)   jmpw(0x0013c39e, 0x1c4);              /* jmp 0x13c39e */
l_0x0013c1da:
    II(0x0013c1da, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013c1dd, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x0013c1e0, 0x3)   add(ax, memw_a16(ss, bp - 0x16));     /* add ax, [bp-0x16] */
    II(0x0013c1e3, 0x3)   adc(dx, memw_a16(ss, bp - 0x14));     /* adc dx, [bp-0x14] */
    II(0x0013c1e6, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c1e7, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c1e8, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013c1ec, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x0013c1f0, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0013c1f2, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x0013c1f4, 0x3)   callw(0x001390c4, -0x3133);           /* call 0x1390c4 */
    II(0x0013c1f7, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013c1fa, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c1fb, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013c1fe, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x0013c201, 0x3)   add(ax, memw_a16(ss, bp - 0x1e));     /* add ax, [bp-0x1e] */
    II(0x0013c204, 0x3)   adc(dx, memw_a16(ss, bp - 0x1c));     /* adc dx, [bp-0x1c] */
    II(0x0013c207, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c208, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c209, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013c20d, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x0013c211, 0x3)   mov(memw_a16(ss, bp - 0x2e), ax);     /* mov [bp-0x2e], ax */
    II(0x0013c214, 0x3)   mov(memw_a16(ss, bp - 0x2c), dx);     /* mov [bp-0x2c], dx */
    II(0x0013c217, 0x3)   callw(0x001391e3, -0x3037);           /* call 0x1391e3 */
    II(0x0013c21a, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013c21d, 0x1)   pushw(di);                            /* push di */
    II(0x0013c21e, 0x1)   pushw(si);                            /* push si */
    II(0x0013c21f, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013c223, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013c227, 0x3)   callw(0x001390c4, -0x3166);           /* call 0x1390c4 */
    II(0x0013c22a, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013c22d, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c22e, 0x3)   pushw(memw_a16(ss, bp - 0x2c));       /* push word [bp-0x2c] */
    II(0x0013c231, 0x3)   pushw(memw_a16(ss, bp - 0x2e));       /* push word [bp-0x2e] */
    II(0x0013c234, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013c238, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013c23c, 0x3)   callw(0x001391e3, -0x305c);           /* call 0x1391e3 */
    II(0x0013c23f, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013c242, 0x1)   pushw(di);                            /* push di */
    II(0x0013c243, 0x1)   pushw(si);                            /* push si */
    II(0x0013c244, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x0013c248, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x0013c24c, 0x3)   callw(0x00139208, -0x3047);           /* call 0x139208 */
    II(0x0013c24f, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013c252, 0x3)   mov(memw_a16(ss, bp - 0x22), ax);     /* mov [bp-0x22], ax */
    II(0x0013c255, 0x3)   mov(memw_a16(ss, bp - 0x20), dx);     /* mov [bp-0x20], dx */
    II(0x0013c258, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c259, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c25a, 0x3)   pushw(memw_a16(ss, bp - 0x2c));       /* push word [bp-0x2c] */
    II(0x0013c25d, 0x3)   pushw(memw_a16(ss, bp - 0x2e));       /* push word [bp-0x2e] */
    II(0x0013c260, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x0013c264, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x0013c268, 0x3)   callw(0x00139235, -0x3036);           /* call 0x139235 */
    II(0x0013c26b, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0013c26e, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013c270, 0x1)   pushw(di);                            /* push di */
    II(0x0013c271, 0x1)   pushw(si);                            /* push si */
    II(0x0013c272, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013c276, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x0013c27a, 0x3)   callw(0x001391e3, -0x309a);           /* call 0x1391e3 */
    II(0x0013c27d, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013c280, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013c282, 0x1)   pushw(di);                            /* push di */
    II(0x0013c283, 0x1)   pushw(si);                            /* push si */
    II(0x0013c284, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013c288, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013c28c, 0x3)   callw(0x001391e3, -0x30ac);           /* call 0x1391e3 */
    II(0x0013c28f, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013c292, 0x4)   test(memb_a16(ss, bp - 0x22), 0x1);   /* test byte [bp-0x22], 0x1 */
    II(0x0013c296, 0x2)   jzw(0x0013c302, 0x6a);                /* jz 0x13c302 */
    II(0x0013c298, 0x5)   mov(memw_a16(ss, bp - 0x6), 0);       /* mov word [bp-0x6], 0x0 */
    II(0x0013c29d, 0x2)   jmpw(0x0013c2a3, 0x4);                /* jmp 0x13c2a3 */
//    II(0x0013c29f, 0x1)   /* Недостижимый код. */
l_0x0013c2a0:
    II(0x0013c2a0, 0x3)   inc(memw_a16(ss, bp - 0x6));          /* inc word [bp-0x6] */
l_0x0013c2a3:
    II(0x0013c2a3, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x0013c2a6, 0x4)   cmp(memw_a16(ds, 0x519e), ax);        /* cmp [0x519e], ax */
    II(0x0013c2aa, 0x2)   jbew(0x0013c300, 0x54);               /* jbe 0x13c300 */
    II(0x0013c2ac, 0x3)   mov(ax, memw_a16(ss, bp - 0x22));     /* mov ax, [bp-0x22] */
    II(0x0013c2af, 0x3)   mov(dx, memw_a16(ss, bp - 0x20));     /* mov dx, [bp-0x20] */
    II(0x0013c2b2, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013c2b4, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013c2b6, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013c2b8, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013c2ba, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c2bc, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c2be, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c2c0, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c2c2, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c2c4, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c2c6, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013c2c8, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013c2ca, 0x3)   mov(bx, memw_a16(ss, bp - 0x6));      /* mov bx, [bp-0x6] */
    II(0x0013c2cd, 0x3)   shl(bx, 0x2);                         /* shl bx, 0x2 */
    II(0x0013c2d0, 0x4)   les(si, ds, 0x4fa0);                  /* les si, [0x4fa0] */
    II(0x0013c2d4, 0x3)   cmp(memw_a16(es, bx + si), ax);       /* cmp [es:bx+si], ax */
    II(0x0013c2d7, 0x2)   jnzw(0x0013c2fe, 0x25);               /* jnz 0x13c2fe */
    II(0x0013c2d9, 0x4)   cmp(memw_a16(es, bx + si + 0x2), dx); /* cmp [es:bx+si+0x2], dx */
    II(0x0013c2dd, 0x2)   jnzw(0x0013c2fe, 0x1f);               /* jnz 0x13c2fe */
    II(0x0013c2df, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013c2e2, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x0013c2e5, 0x3)   add(ax, memw_a16(ss, bp - 0x1e));     /* add ax, [bp-0x1e] */
    II(0x0013c2e8, 0x3)   adc(dx, memw_a16(ss, bp - 0x1c));     /* adc dx, [bp-0x1c] */
    II(0x0013c2eb, 0x3)   add(ax, 0);                           /* add ax, 0x0 */
    II(0x0013c2ee, 0x3)   adc(dx, 0x1);                         /* adc dx, 0x1 */
    II(0x0013c2f1, 0x4)   les(si, ds, 0x4fa4);                  /* les si, [0x4fa4] */
    II(0x0013c2f5, 0x3)   mov(memw_a16(es, bx + si), ax);       /* mov [es:bx+si], ax */
    II(0x0013c2f8, 0x4)   mov(memw_a16(es, bx + si + 0x2), dx); /* mov [es:bx+si+0x2], dx */
    II(0x0013c2fc, 0x2)   jmpw(0x0013c300, 0x2);                /* jmp 0x13c300 */
l_0x0013c2fe:
    II(0x0013c2fe, 0x2)   jmpw(0x0013c2a0, -0x60);              /* jmp 0x13c2a0 */
l_0x0013c300:
    II(0x0013c300, 0x2)   jmpw(0x0013c363, 0x61);               /* jmp 0x13c363 */
l_0x0013c302:
    II(0x0013c302, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013c305, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x0013c308, 0x3)   add(ax, memw_a16(ss, bp - 0x16));     /* add ax, [bp-0x16] */
    II(0x0013c30b, 0x3)   adc(dx, memw_a16(ss, bp - 0x14));     /* adc dx, [bp-0x14] */
    II(0x0013c30e, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c30f, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c310, 0x3)   callw(0x00138f06, -0x340d);           /* call 0x138f06 */
    II(0x0013c313, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013c316, 0x3)   mov(memw_a16(ss, bp - 0x26), ax);     /* mov [bp-0x26], ax */
    II(0x0013c319, 0x3)   mov(memw_a16(ss, bp - 0x24), dx);     /* mov [bp-0x24], dx */
    II(0x0013c31c, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x0013c31f, 0x2)   jnzw(0x0013c325, 0x4);                /* jnz 0x13c325 */
    II(0x0013c321, 0x2)   or_(dx, dx);                          /* or dx, dx */
    II(0x0013c323, 0x2)   jzw(0x0013c363, 0x3e);                /* jz 0x13c363 */
l_0x0013c325:
    II(0x0013c325, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c326, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c327, 0x4)   pushw(memw_a16(ds, 0x4fb6));          /* push word [0x4fb6] */
    II(0x0013c32b, 0x4)   pushw(memw_a16(ds, 0x4fb4));          /* push word [0x4fb4] */
    II(0x0013c32f, 0x3)   callw(0x00139208, -0x312a);           /* call 0x139208 */
    II(0x0013c332, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013c335, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x0013c338, 0x3)   mov(memw_a16(ss, bp - 0xc), dx);      /* mov [bp-0xc], dx */
    II(0x0013c33b, 0x3)   xor_(ax, memw_a16(ss, bp - 0x1e));    /* xor ax, [bp-0x1e] */
    II(0x0013c33e, 0x3)   xor_(dx, memw_a16(ss, bp - 0x1c));    /* xor dx, [bp-0x1c] */
    II(0x0013c341, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013c343, 0x3)   xor_(memw_a16(ss, bp - 0xe), ax);     /* xor [bp-0xe], ax */
    II(0x0013c346, 0x3)   xor_(memw_a16(ss, bp - 0xc), dx);     /* xor [bp-0xc], dx */
    II(0x0013c349, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0013c34c, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x0013c34f, 0x3)   pushw(memw_a16(ss, bp - 0x24));       /* push word [bp-0x24] */
    II(0x0013c352, 0x3)   pushw(memw_a16(ss, bp - 0x26));       /* push word [bp-0x26] */
    II(0x0013c355, 0x4)   pushw(memw_a16(ds, 0x4fb6));          /* push word [0x4fb6] */
    II(0x0013c359, 0x4)   pushw(memw_a16(ds, 0x4fb4));          /* push word [0x4fb4] */
    II(0x0013c35d, 0x3)   callw(0x00139235, -0x312b);           /* call 0x139235 */
    II(0x0013c360, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
l_0x0013c363:
    II(0x0013c363, 0x4)   and_(memb_a16(ss, bp - 0x22), -0x2 /* 0xfe */); /* and byte [bp-0x22], 0xfe */
    II(0x0013c367, 0x3)   mov(ax, memw_a16(ss, bp - 0x22));     /* mov ax, [bp-0x22] */
    II(0x0013c36a, 0x3)   and_(ah, 0xf);                        /* and ah, 0xf */
    II(0x0013c36d, 0x3)   mov(memw_a16(ss, bp - 0x22), ax);     /* mov [bp-0x22], ax */
    II(0x0013c370, 0x5)   mov(memw_a16(ss, bp - 0x20), 0);      /* mov word [bp-0x20], 0x0 */
    II(0x0013c375, 0x4)   and_(memb_a16(ss, bp - 0x21), -0xf /* 0xf1 */); /* and byte [bp-0x21], 0xf1 */
    II(0x0013c379, 0x3)   pushw(memw_a16(ss, bp - 0x20));       /* push word [bp-0x20] */
    II(0x0013c37c, 0x3)   pushw(memw_a16(ss, bp - 0x22));       /* push word [bp-0x22] */
    II(0x0013c37f, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013c382, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x0013c385, 0x3)   add(ax, memw_a16(ss, bp - 0x16));     /* add ax, [bp-0x16] */
    II(0x0013c388, 0x3)   adc(dx, memw_a16(ss, bp - 0x14));     /* adc dx, [bp-0x14] */
    II(0x0013c38b, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c38c, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c38d, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x0013c391, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x0013c395, 0x3)   callw(0x00139235, -0x3163);           /* call 0x139235 */
    II(0x0013c398, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0013c39b, 0x3)   jmpw(0x0013c1ba, -0x1e4);             /* jmp 0x13c1ba */
l_0x0013c39e:
//    II(0x0013c39e, 0x1)   nop();                                /* nop  */
    II(0x0013c39f, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013c3a0, 0x3)   callw(0x00138e97, -0x350c);           /* call 0x138e97 */
    II(0x0013c3a3, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x0013c3a5, 0x3)   mov(ax, memw_a16(ss, bp + 0x8));      /* mov ax, [bp+0x8] */
    II(0x0013c3a8, 0x3)   mov(dx, memw_a16(ss, bp + 0xa));      /* mov dx, [bp+0xa] */
    II(0x0013c3ab, 0x3)   sub(ax, memw_a16(ss, bp - 0x4));      /* sub ax, [bp-0x4] */
    II(0x0013c3ae, 0x3)   sbb(dx, memw_a16(ss, bp - 0x2));      /* sbb dx, [bp-0x2] */
    II(0x0013c3b1, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c3b2, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c3b3, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013c3b6, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013c3b9, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x0013c3bb, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013c3bd, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013c3bf, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013c3c1, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c3c3, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c3c5, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c3c7, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c3c9, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c3cb, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c3cd, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013c3cf, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013c3d1, 0x3)   add(ax, memw_a16(ss, bp - 0xa));      /* add ax, [bp-0xa] */
    II(0x0013c3d4, 0x3)   adc(dx, memw_a16(ss, bp - 0x8));      /* adc dx, [bp-0x8] */
    II(0x0013c3d7, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013c3d8, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c3d9, 0x3)   mov(al, memb_a16(ds, 0x51a7));        /* mov al, [0x51a7] */
    II(0x0013c3dc, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0013c3de, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013c3df, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0013c3e2, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013c3e3, 0x3)   callw(0x0013c48e, 0xa8);              /* call 0x13c48e */
    II(0x0013c3e6, 0x3)   add(sp, 0xe);                         /* add sp, 0xe */
    II(0x0013c3e9, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013c3ec, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013c3ef, 0x3)   sub(ax, memw_a16(ss, bp + 0x8));      /* sub ax, [bp+0x8] */
    II(0x0013c3f2, 0x3)   sbb(dx, memw_a16(ss, bp + 0xa));      /* sbb dx, [bp+0xa] */
    II(0x0013c3f5, 0x4)   add(memw_a16(ds, 0x1fc4), ax);        /* add [0x1fc4], ax */
    II(0x0013c3f9, 0x4)   adc(memw_a16(ds, 0x1fc6), dx);        /* adc [0x1fc6], dx */
    II(0x0013c3fd, 0x4)   add(memw_a16(ds, 0x1fac), ax);        /* add [0x1fac], ax */
    II(0x0013c401, 0x4)   adc(memw_a16(ds, 0x1fae), dx);        /* adc [0x1fae], dx */
    II(0x0013c405, 0x5)   cmp(memw_a16(ds, 0x1fae), 0);         /* cmp word [0x1fae], 0x0 */
    II(0x0013c40a, 0x2)   jgew(0x0013c414, 0x8);                /* jge 0x13c414 */
    II(0x0013c40c, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013c40e, 0x3)   mov(memw_a16(ds, 0x1fae), ax);        /* mov [0x1fae], ax */
    II(0x0013c411, 0x3)   mov(memw_a16(ds, 0x1fac), ax);        /* mov [0x1fac], ax */
l_0x0013c414:
    II(0x0013c414, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013c417, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013c41a, 0x3)   sub(ax, memw_a16(ss, bp + 0x8));      /* sub ax, [bp+0x8] */
    II(0x0013c41d, 0x3)   sbb(dx, memw_a16(ss, bp + 0xa));      /* sbb dx, [bp+0xa] */
    II(0x0013c420, 0x4)   add(memw_a16(ds, 0x1fbc), ax);        /* add [0x1fbc], ax */
    II(0x0013c424, 0x4)   adc(memw_a16(ds, 0x1fbe), dx);        /* adc [0x1fbe], dx */
    II(0x0013c428, 0x5)   cmp(memw_a16(ds, 0x1fbe), 0);         /* cmp word [0x1fbe], 0x0 */
    II(0x0013c42d, 0x2)   jgew(0x0013c437, 0x8);                /* jge 0x13c437 */
    II(0x0013c42f, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013c431, 0x3)   mov(memw_a16(ds, 0x1fbe), ax);        /* mov [0x1fbe], ax */
    II(0x0013c434, 0x3)   mov(memw_a16(ds, 0x1fbc), ax);        /* mov [0x1fbc], ax */
l_0x0013c437:
    II(0x0013c437, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013c439, 0x2)   jmpw(0x0013c44a, 0xf);                /* jmp 0x13c44a */
//    II(0x0013c43b, 0x1)   /* Недостижимый код. */
l_0x0013c43c:
    II(0x0013c43c, 0x3)   mov(ax, 0x8012);                      /* mov ax, 0x8012 */
    II(0x0013c43f, 0x2)   jmpw(0x0013c44a, 0x9);                /* jmp 0x13c44a */
//    II(0x0013c441, 0x3)   /* Недостижимый код. */
l_0x0013c444:
    II(0x0013c444, 0x3)   mov(ax, 0x8023);                      /* mov ax, 0x8023 */
    II(0x0013c447, 0x2)   jmpw(0x0013c44a, 0x1);                /* jmp 0x13c44a */
//    II(0x0013c449, 0x1)   /* Недостижимый код. */
l_0x0013c44a:
    II(0x0013c44a, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013c44b, 0x1)   popw(si);                             /* pop si */
    II(0x0013c44c, 0x1)   popw(di);                             /* pop di */
    II(0x0013c44d, 0x1)   leavew();                             /* leave  */
    II(0x0013c44e, 0x1)   retfw();                              /* retf  */
FUNC_END

