FUNC_BEGIN(0x0015e949, 0xc25c18099ed93af8, 0x10, ({0xc8, 0xe, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0xa8, 0, 0x8e, 0xd8, 0x8e, 0x6, 0xd2, 0x3f, 0x26, 0xa1, 0x78, 0x3b, 0xc7, 0x46, 0xf4, 0, 0, 0x89, 0x46, 0xf6, 0x1e, 0x68, 0x76, 0x2d, 0x1e, 0x68, 0x65, 0x2d, 0xe8, 0x3d, 0x13, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xb, 0xd0, 0x75, 0x3, 0xe9, 0x70, 0, 0xff, 0x5e, 0xf8, 0x89, 0x46, 0xf2, 0x3d, 0, 0, 0x75, 0x3, 0xe9, 0x62, 0, 0x8b, 0x5e, 0xf2, 0xc1, 0xe3, 0x2, 0xff, 0xb7, 0x8c, 0x2d, 0xff, 0xb7, 0x8a, 0x2d, 0x9a, 0xa0, 0x5b, 0x80, 0, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xb, 0xd0, 0x75, 0x3, 0xe9, 0x3f, 0, 0xff, 0x76, 0x10, 0xff, 0x76, 0xe, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0xa9, 0xfe, 0x83, 0xc4, 0x8, 0x3d, 0, 0, 0x74, 0x3, 0xe9, 0x23, 0, 0xff, 0x76, 0xc, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0xc4, 0x5e, 0xe, 0x26, 0xff, 0x5f, 0x1c, 0x83, 0xc4, 0x8, 0xb, 0xd0, 0x75, 0x3, 0xe9, 0x6, 0, 0xb8, 0, 0, 0xe9, 0x74, 0, 0xc4, 0x5e, 0xf4, 0x26, 0x8b, 0x47, 0x42, 0x26, 0x8b, 0x57, 0x44, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x8b, 0x46, 0xfe, 0xb, 0x46, 0xfc, 0x75, 0x3, 0xe9, 0x52, 0, 0xff, 0x76, 0x10, 0xff, 0x76, 0xe, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0x4e, 0xfe, 0x83, 0xc4, 0x8, 0x3d, 0, 0, 0x74, 0x3, 0xe9, 0x23, 0, 0xff, 0x76, 0xc, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0xc4, 0x5e, 0xe, 0x26, 0xff, 0x5f, 0x1c, 0x83, 0xc4, 0x8, 0xb, 0xd0, 0x75, 0x3, 0xe9, 0x6, 0, 0xb8, 0, 0, 0xe9, 0x19, 0, 0xc4, 0x5e, 0xfc, 0x26, 0x8b, 0x7, 0x26, 0x8b, 0x57, 0x2, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xe9, 0xa3, 0xff, 0xb8, 0x1, 0, 0xe9, 0, 0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0015e949, 0x4)   enterw(0xe, 0);                       /* enter 0xe, 0x0 */
    II(0x0015e94d, 0x1)   pushw(di);                            /* push di */
    II(0x0015e94e, 0x1)   pushw(si);                            /* push si */
    II(0x0015e94f, 0x1)   pushw(ds);                            /* push ds */
    II(0x0015e950, 0x3)   mov(ax, 0xa8);                        /* mov ax, 0xa8 */
    II(0x0015e953, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0015e955, 0x4)   mov(es, memw_a16(ds, 0x3fd2));        /* mov es, [0x3fd2] */
    II(0x0015e959, 0x4)   mov(ax, memw_a16(es, 0x3b78));        /* mov ax, [es:0x3b78] */
    II(0x0015e95d, 0x5)   mov(memw_a16(ss, bp - 0xc), 0);       /* mov word [bp-0xc], 0x0 */
    II(0x0015e962, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0015e965, 0x1)   pushw(ds);                            /* push ds */
    II(0x0015e966, 0x3)   pushw(0x2d76);                        /* push word 0x2d76 */
    II(0x0015e969, 0x1)   pushw(ds);                            /* push ds */
    II(0x0015e96a, 0x3)   pushw(0x2d65);                        /* push word 0x2d65 */
    II(0x0015e96d, 0x3)   callw(0x0015fcad, 0x133d);            /* call 0x15fcad */
    II(0x0015e970, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0015e973, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0015e976, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0015e978, 0x2)   jnzw(0x0015e97d, 0x3);                /* jnz 0x15e97d */
    II(0x0015e97a, 0x3)   jmpw(0x0015e9ed, 0x70);               /* jmp 0x15e9ed */
l_0x0015e97d:
    II(0x0015e97d, 0x3)   callw_a16_far_ind(ss, bp - 0x8);      /* call word far [bp-0x8] */
    II(0x0015e980, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x0015e983, 0x3)   cmp(ax, 0);                           /* cmp ax, 0x0 */
    II(0x0015e986, 0x2)   jnzw(0x0015e98b, 0x3);                /* jnz 0x15e98b */
    II(0x0015e988, 0x3)   jmpw(0x0015e9ed, 0x62);               /* jmp 0x15e9ed */
l_0x0015e98b:
    II(0x0015e98b, 0x3)   mov(bx, memw_a16(ss, bp - 0xe));      /* mov bx, [bp-0xe] */
    II(0x0015e98e, 0x3)   shl(bx, 0x2);                         /* shl bx, 0x2 */
    II(0x0015e991, 0x4)   pushw(memw_a16(ds, bx + 0x2d8c));     /* push word [bx+0x2d8c] */
    II(0x0015e995, 0x4)   pushw(memw_a16(ds, bx + 0x2d8a));     /* push word [bx+0x2d8a] */
    II(0x0015e999, 0x5)   callw_far_abs(0x80, 0x5ba0);          /* call word 0x80:0x5ba0 */
    II(0x0015e99e, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0015e9a1, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0015e9a4, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0015e9a7, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0015e9a9, 0x2)   jnzw(0x0015e9ae, 0x3);                /* jnz 0x15e9ae */
    II(0x0015e9ab, 0x3)   jmpw(0x0015e9ed, 0x3f);               /* jmp 0x15e9ed */
l_0x0015e9ae:
    II(0x0015e9ae, 0x3)   pushw(memw_a16(ss, bp + 0x10));       /* push word [bp+0x10] */
    II(0x0015e9b1, 0x3)   pushw(memw_a16(ss, bp + 0xe));        /* push word [bp+0xe] */
    II(0x0015e9b4, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0015e9b7, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x0015e9ba, 0x1)   nop();                                /* nop  */
    II(0x0015e9bb, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015e9bc, 0x3)   callw(0x0015e868, -0x157);            /* call 0x15e868 */
    II(0x0015e9bf, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0015e9c2, 0x3)   cmp(ax, 0);                           /* cmp ax, 0x0 */
    II(0x0015e9c5, 0x2)   jzw(0x0015e9ca, 0x3);                 /* jz 0x15e9ca */
    II(0x0015e9c7, 0x3)   jmpw(0x0015e9ed, 0x23);               /* jmp 0x15e9ed */
l_0x0015e9ca:
    II(0x0015e9ca, 0x3)   pushw(memw_a16(ss, bp + 0xc));        /* push word [bp+0xc] */
    II(0x0015e9cd, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x0015e9d0, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0015e9d3, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0015e9d6, 0x3)   les(bx, ss, bp + 0xe);                /* les bx, [bp+0xe] */
    II(0x0015e9d9, 0x4)   callw_a16_far_ind(es, bx + 0x1c);     /* call word far [es:bx+0x1c] */
    II(0x0015e9dd, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0015e9e0, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0015e9e2, 0x2)   jnzw(0x0015e9e7, 0x3);                /* jnz 0x15e9e7 */
    II(0x0015e9e4, 0x3)   jmpw(0x0015e9ed, 0x6);                /* jmp 0x15e9ed */
l_0x0015e9e7:
    II(0x0015e9e7, 0x3)   mov(ax, 0);                           /* mov ax, 0x0 */
    II(0x0015e9ea, 0x3)   jmpw(0x0015ea61, 0x74);               /* jmp 0x15ea61 */
l_0x0015e9ed:
    II(0x0015e9ed, 0x3)   les(bx, ss, bp - 0xc);                /* les bx, [bp-0xc] */
    II(0x0015e9f0, 0x4)   mov(ax, memw_a16(es, bx + 0x42));     /* mov ax, [es:bx+0x42] */
    II(0x0015e9f4, 0x4)   mov(dx, memw_a16(es, bx + 0x44));     /* mov dx, [es:bx+0x44] */
    II(0x0015e9f8, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0015e9fb, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
l_0x0015e9fe:
    II(0x0015e9fe, 0x3)   mov(ax, memw_a16(ss, bp - 0x2));      /* mov ax, [bp-0x2] */
    II(0x0015ea01, 0x3)   or_(ax, memw_a16(ss, bp - 0x4));      /* or ax, [bp-0x4] */
    II(0x0015ea04, 0x2)   jnzw(0x0015ea09, 0x3);                /* jnz 0x15ea09 */
    II(0x0015ea06, 0x3)   jmpw(0x0015ea5b, 0x52);               /* jmp 0x15ea5b */
l_0x0015ea09:
    II(0x0015ea09, 0x3)   pushw(memw_a16(ss, bp + 0x10));       /* push word [bp+0x10] */
    II(0x0015ea0c, 0x3)   pushw(memw_a16(ss, bp + 0xe));        /* push word [bp+0xe] */
    II(0x0015ea0f, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0015ea12, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x0015ea15, 0x1)   nop();                                /* nop  */
    II(0x0015ea16, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015ea17, 0x3)   callw(0x0015e868, -0x1b2);            /* call 0x15e868 */
    II(0x0015ea1a, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0015ea1d, 0x3)   cmp(ax, 0);                           /* cmp ax, 0x0 */
    II(0x0015ea20, 0x2)   jzw(0x0015ea25, 0x3);                 /* jz 0x15ea25 */
    II(0x0015ea22, 0x3)   jmpw(0x0015ea48, 0x23);               /* jmp 0x15ea48 */
l_0x0015ea25:
    II(0x0015ea25, 0x3)   pushw(memw_a16(ss, bp + 0xc));        /* push word [bp+0xc] */
    II(0x0015ea28, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x0015ea2b, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0015ea2e, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0015ea31, 0x3)   les(bx, ss, bp + 0xe);                /* les bx, [bp+0xe] */
    II(0x0015ea34, 0x4)   callw_a16_far_ind(es, bx + 0x1c);     /* call word far [es:bx+0x1c] */
    II(0x0015ea38, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0015ea3b, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0015ea3d, 0x2)   jnzw(0x0015ea42, 0x3);                /* jnz 0x15ea42 */
    II(0x0015ea3f, 0x3)   jmpw(0x0015ea48, 0x6);                /* jmp 0x15ea48 */
l_0x0015ea42:
    II(0x0015ea42, 0x3)   mov(ax, 0);                           /* mov ax, 0x0 */
    II(0x0015ea45, 0x3)   jmpw(0x0015ea61, 0x19);               /* jmp 0x15ea61 */
l_0x0015ea48:
    II(0x0015ea48, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x0015ea4b, 0x3)   mov(ax, memw_a16(es, bx));            /* mov ax, [es:bx] */
    II(0x0015ea4e, 0x4)   mov(dx, memw_a16(es, bx + 0x2));      /* mov dx, [es:bx+0x2] */
    II(0x0015ea52, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0015ea55, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0015ea58, 0x3)   jmpw(0x0015e9fe, -0x5d);              /* jmp 0x15e9fe */
l_0x0015ea5b:
    II(0x0015ea5b, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x0015ea5e, 0x3)   jmpw(0x0015ea61, 0);                  /* jmp 0x15ea61 */
l_0x0015ea61:
    II(0x0015ea61, 0x1)   popw(ds);                             /* pop ds */
    II(0x0015ea62, 0x1)   popw(si);                             /* pop si */
    II(0x0015ea63, 0x1)   popw(di);                             /* pop di */
    II(0x0015ea64, 0x1)   leavew();                             /* leave  */
    II(0x0015ea65, 0x1)   retfw();                              /* retf  */
FUNC_END

