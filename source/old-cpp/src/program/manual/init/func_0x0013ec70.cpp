FUNC_BEGIN(0x0013ec70, 0xd64c131db77eb93e, 0x10, ({0xc8, 0x6, 0, 0, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xfa, 0, 0, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0xc, 0x26, 0x8b, 0x57, 0xe, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xeb, 0x7, 0xff, 0x46, 0xfa, 0x83, 0x46, 0xfc, 0x8, 0x8b, 0x46, 0xfa, 0xc4, 0x5e, 0x6, 0x26, 0x39, 0x47, 0xa, 0x7e, 0x29, 0xc4, 0x5e, 0xfc, 0x26, 0xff, 0x77, 0x2, 0x26, 0xff, 0x37, 0xff, 0x76, 0xc, 0xff, 0x76, 0xa, 0xe, 0xe8, 0x6f, 0xff, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x74, 0xd2, 0xc4, 0x5e, 0xfc, 0x26, 0x8b, 0x47, 0x4, 0x26, 0x8b, 0x57, 0x6, 0x1f, 0xc9, 0xcb, 0xc7, 0x46, 0xfa, 0, 0, 0x26, 0x8b, 0x47, 0x12, 0x26, 0x8b, 0x57, 0x14, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xeb, 0x8, 0x90, 0xff, 0x46, 0xfa, 0x83, 0x46, 0xfc, 0x8, 0x8b, 0x46, 0xfa, 0xc4, 0x5e, 0x6, 0x26, 0x39, 0x47, 0x10, 0x7e, 0x1d, 0xc4, 0x5e, 0xfc, 0x26, 0xff, 0x77, 0x2, 0x26, 0xff, 0x37, 0xff, 0x76, 0xc, 0xff, 0x76, 0xa, 0xe, 0xe8, 0x1d, 0xff, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x74, 0xd2, 0xeb, 0xac, 0x2b, 0xc0, 0x99, 0x1f, 0xc9, 0xcb}))
    II(0x0013ec70, 0x4)   enterw(0x6, 0);                       /* enter 0x6, 0x0 */
    II(0x0013ec74, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013ec75, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013ec78, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013ec7a, 0x5)   mov(memw_a16(ss, bp - 0x6), 0);       /* mov word [bp-0x6], 0x0 */
    II(0x0013ec7f, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013ec82, 0x4)   mov(ax, memw_a16(es, bx + 0xc));      /* mov ax, [es:bx+0xc] */
    II(0x0013ec86, 0x4)   mov(dx, memw_a16(es, bx + 0xe));      /* mov dx, [es:bx+0xe] */
    II(0x0013ec8a, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013ec8d, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0013ec90, 0x2)   jmpw(0x0013ec99, 0x7);                /* jmp 0x13ec99 */
l_0x0013ec92:
    II(0x0013ec92, 0x3)   inc(memw_a16(ss, bp - 0x6));          /* inc word [bp-0x6] */
    II(0x0013ec95, 0x4)   add(memw_a16(ss, bp - 0x4), 0x8);     /* add word [bp-0x4], 0x8 */
l_0x0013ec99:
    II(0x0013ec99, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x0013ec9c, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013ec9f, 0x4)   cmp(memw_a16(es, bx + 0xa), ax);      /* cmp [es:bx+0xa], ax */
    II(0x0013eca3, 0x2)   jlew(0x0013ecce, 0x29);               /* jle 0x13ecce */
    II(0x0013eca5, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x0013eca8, 0x4)   pushw(memw_a16(es, bx + 0x2));        /* push word [es:bx+0x2] */
    II(0x0013ecac, 0x3)   pushw(memw_a16(es, bx));              /* push word [es:bx] */
    II(0x0013ecaf, 0x3)   pushw(memw_a16(ss, bp + 0xc));        /* push word [bp+0xc] */
    II(0x0013ecb2, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x0013ecb5, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013ecb6, 0x3)   callw(0x0013ec28, -0x91);             /* call 0x13ec28 */
    II(0x0013ecb9, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013ecbc, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013ecbe, 0x2)   jzw(0x0013ec92, -0x2e);               /* jz 0x13ec92 */
l_0x0013ecc0:
    II(0x0013ecc0, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x0013ecc3, 0x4)   mov(ax, memw_a16(es, bx + 0x4));      /* mov ax, [es:bx+0x4] */
    II(0x0013ecc7, 0x4)   mov(dx, memw_a16(es, bx + 0x6));      /* mov dx, [es:bx+0x6] */
    II(0x0013eccb, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013eccc, 0x1)   leavew();                             /* leave  */
    II(0x0013eccd, 0x1)   retfw();                              /* retf  */
l_0x0013ecce:
    II(0x0013ecce, 0x5)   mov(memw_a16(ss, bp - 0x6), 0);       /* mov word [bp-0x6], 0x0 */
    II(0x0013ecd3, 0x4)   mov(ax, memw_a16(es, bx + 0x12));     /* mov ax, [es:bx+0x12] */
    II(0x0013ecd7, 0x4)   mov(dx, memw_a16(es, bx + 0x14));     /* mov dx, [es:bx+0x14] */
    II(0x0013ecdb, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013ecde, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0013ece1, 0x2)   jmpw(0x0013eceb, 0x8);                /* jmp 0x13eceb */
//    II(0x0013ece3, 0x1)   /* Недостижимый код. */
l_0x0013ece4:
    II(0x0013ece4, 0x3)   inc(memw_a16(ss, bp - 0x6));          /* inc word [bp-0x6] */
    II(0x0013ece7, 0x4)   add(memw_a16(ss, bp - 0x4), 0x8);     /* add word [bp-0x4], 0x8 */
l_0x0013eceb:
    II(0x0013eceb, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x0013ecee, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013ecf1, 0x4)   cmp(memw_a16(es, bx + 0x10), ax);     /* cmp [es:bx+0x10], ax */
    II(0x0013ecf5, 0x2)   jlew(0x0013ed14, 0x1d);               /* jle 0x13ed14 */
    II(0x0013ecf7, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x0013ecfa, 0x4)   pushw(memw_a16(es, bx + 0x2));        /* push word [es:bx+0x2] */
    II(0x0013ecfe, 0x3)   pushw(memw_a16(es, bx));              /* push word [es:bx] */
    II(0x0013ed01, 0x3)   pushw(memw_a16(ss, bp + 0xc));        /* push word [bp+0xc] */
    II(0x0013ed04, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x0013ed07, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013ed08, 0x3)   callw(0x0013ec28, -0xe3);             /* call 0x13ec28 */
    II(0x0013ed0b, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013ed0e, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013ed10, 0x2)   jzw(0x0013ece4, -0x2e);               /* jz 0x13ece4 */
    II(0x0013ed12, 0x2)   jmpw(0x0013ecc0, -0x54);              /* jmp 0x13ecc0 */
l_0x0013ed14:
    II(0x0013ed14, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013ed16, 0x1)   cwd();                                /* cwd  */
    II(0x0013ed17, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013ed18, 0x1)   leavew();                             /* leave  */
    II(0x0013ed19, 0x1)   retfw();                              /* retf  */
FUNC_END

