FUNC_BEGIN(0x0014c85e, 0x7131bd8aaef701d6, 0x10, ({0xc8, 0x16, 0, 0, 0x57, 0x56, 0xc7, 0x6, 0x38, 0, 0, 0, 0xc4, 0x5e, 0x4, 0x26, 0xc7, 0x47, 0x16, 0x18, 0, 0x26, 0x80, 0x4f, 0x26, 0x1, 0x26, 0x8b, 0x7f, 0x10, 0xb, 0xff, 0x75, 0x1, 0x47, 0x8b, 0xc7, 0xc1, 0xe8, 0xc, 0x89, 0x46, 0xfa, 0xf7, 0xc7, 0xff, 0xf, 0x74, 0x4, 0x40, 0x89, 0x46, 0xfa, 0xc7, 0x46, 0xfe, 0x92, 0, 0xa0, 0x80, 0x9, 0x98, 0x48, 0x74, 0x4e, 0x48, 0x74, 0x5d, 0x48, 0x74, 0x39, 0x48, 0x75, 0x3, 0xe9, 0x93, 0, 0x48, 0x74, 0x5a, 0x6a, 0, 0x57, 0xe8, 0x27, 0xf5, 0x5b, 0x5b, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xb, 0xd0, 0x74, 0x1e, 0x8b, 0x46, 0xf8, 0xb, 0x46, 0xf6, 0x74, 0x3, 0xe9, 0xa3, 0, 0xc4, 0x5e, 0x4, 0x26, 0xc7, 0x47, 0x16, 0x8, 0, 0xa1, 0xfa, 0x11, 0x26, 0x89, 0x47, 0x10, 0xe9, 0xac, 0x1, 0xff, 0x76, 0x4, 0xe8, 0x74, 0xe7, 0x5b, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xeb, 0xd3, 0x53, 0xe8, 0x67, 0xe7, 0x5b, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x8b, 0xc2, 0xb, 0x46, 0xf6, 0x75, 0xc1, 0x6a, 0, 0x57, 0xe8, 0xd6, 0xf4, 0x5b, 0xeb, 0xdc, 0x83, 0x7e, 0xfa, 0x1, 0x75, 0x36, 0x8d, 0x45, 0x7, 0x8b, 0x5e, 0x4, 0x26, 0x89, 0x47, 0x10, 0x8b, 0x1e, 0x96, 0x9, 0x89, 0x47, 0x10, 0xff, 0x76, 0x4, 0xe8, 0x33, 0xe7, 0x5b, 0x8b, 0xf0, 0x8d, 0x44, 0x7, 0x24, 0xf8, 0x2b, 0xd2, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x56, 0x50, 0xe8, 0xa4, 0xb, 0x5b, 0x5b, 0xeb, 0x82, 0x83, 0x7e, 0xfa, 0x1, 0x74, 0x3, 0xe9, 0x43, 0x1, 0x83, 0xff, 0x7, 0x73, 0xe, 0xb8, 0x7, 0, 0x26, 0x89, 0x47, 0x10, 0x8b, 0x1e, 0x96, 0x9, 0x89, 0x47, 0x10, 0xff, 0x76, 0x4, 0xe8, 0xf8, 0xe6, 0x5b, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x80, 0x4e, 0xfe, 0x60, 0xe9, 0x52, 0xff, 0x8b, 0x76, 0x8, 0xb, 0xf6, 0x75, 0x50, 0x80, 0x3e, 0x80, 0x9, 0x4, 0x7c, 0x8, 0xff, 0x76, 0xf6, 0xe8, 0xb0, 0xfe, 0xeb, 0x6, 0xff, 0x76, 0xfa, 0xe8, 0x65, 0x13, 0x5b, 0x8b, 0xf0, 0xb, 0xf6, 0x75, 0x34, 0xf7, 0x46, 0xf8, 0xff, 0xff, 0x74, 0x10, 0x56, 0x57, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xe8, 0x6d, 0xf6, 0x83, 0xc4, 0x8, 0xeb, 0x11, 0x8b, 0x46, 0xf6, 0x8b, 0x1e, 0x96, 0x9, 0x89, 0x47, 0x6, 0xff, 0x76, 0x4, 0xe8, 0xf7, 0xe6, 0x5b, 0xc4, 0x5e, 0x4, 0x26, 0xc7, 0x47, 0x16, 0x1f, 0, 0xe9, 0xc5, 0, 0x89, 0x76, 0x8, 0xc4, 0x5e, 0x4, 0x26, 0x89, 0x77, 0x16, 0x26, 0x80, 0x67, 0x26, 0xfe, 0x81, 0xff, 0, 0x10, 0x72, 0x4, 0x2b, 0xf6, 0xeb, 0x5, 0x8b, 0xf7, 0xc1, 0xe6, 0x4, 0x4e, 0x89, 0x76, 0xf0, 0x8a, 0x46, 0xfe, 0x88, 0x46, 0xf4, 0xc6, 0x46, 0xf5, 0, 0xc7, 0x46, 0xf2, 0, 0, 0x8b, 0x46, 0xf6, 0xc1, 0xe0, 0x4, 0x89, 0x46, 0xec, 0x8b, 0x46, 0xf8, 0xc1, 0xe0, 0x4, 0x8b, 0x4e, 0xf6, 0xc1, 0xe9, 0xc, 0x3, 0xc1, 0x89, 0x46, 0xee, 0x8d, 0x46, 0xec, 0x50, 0xff, 0x76, 0x8, 0xe8, 0xe, 0x12, 0x5b, 0x5b, 0xb, 0xc0, 0x75, 0x7, 0x68, 0x1, 0x1, 0xe8, 0x9f, 0xf, 0x5b, 0xa0, 0x14, 0, 0x25, 0x60, 0, 0x89, 0x46, 0xfc, 0xb, 0xc0, 0x74, 0x18, 0x25, 0x20, 0, 0x3d, 0x1, 0, 0x1b, 0xc0, 0x50, 0x8d, 0x44, 0x1, 0x50, 0x6a, 0, 0xff, 0x76, 0x8, 0xe8, 0x8a, 0x10, 0x83, 0xc4, 0x8, 0x81, 0x46, 0xf6, 0, 0x10, 0x83, 0x56, 0xf8, 0, 0x8b, 0x5e, 0x8, 0xc1, 0xeb, 0x3, 0x3, 0x1e, 0xa0, 0xa, 0x8e, 0x6, 0xa2, 0xa, 0x26, 0xc6, 0x7, 0x3, 0x83, 0x46, 0x8, 0x8, 0x56, 0xe8, 0x88, 0x10, 0x5b, 0x2b, 0xf8, 0x74, 0x3, 0xe9, 0x5d, 0xff, 0x8b, 0x5e, 0x8, 0xc1, 0xeb, 0x3, 0x3, 0x1e, 0xa0, 0xa, 0x8e, 0x6, 0xa2, 0xa, 0x26, 0x80, 0x67, 0xff, 0xfd, 0x5e, 0x5f, 0xc9, 0xc3}))
    II(0x0014c85e, 0x4)   enterw(0x16, 0);                      /* enter 0x16, 0x0 */
    II(0x0014c862, 0x1)   pushw(di);                            /* push di */
    II(0x0014c863, 0x1)   pushw(si);                            /* push si */
    II(0x0014c864, 0x6)   mov(memw_a16(ds, 0x38), 0);           /* mov word [0x38], 0x0 */
    II(0x0014c86a, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014c86d, 0x6)   mov(memw_a16(es, bx + 0x16), 0x18);   /* mov word [es:bx+0x16], 0x18 */
    II(0x0014c873, 0x5)   or_(memb_a16(es, bx + 0x26), 0x1);    /* or byte [es:bx+0x26], 0x1 */
    II(0x0014c878, 0x4)   mov(di, memw_a16(es, bx + 0x10));     /* mov di, [es:bx+0x10] */
    II(0x0014c87c, 0x2)   or_(di, di);                          /* or di, di */
    II(0x0014c87e, 0x2)   jnzw(0x0014c881, 0x1);                /* jnz 0x14c881 */
    II(0x0014c880, 0x1)   inc(di);                              /* inc di */
l_0x0014c881:
    II(0x0014c881, 0x2)   mov(ax, di);                          /* mov ax, di */
    II(0x0014c883, 0x3)   shr(ax, 0xc);                         /* shr ax, 0xc */
    II(0x0014c886, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0014c889, 0x4)   test(di, 0xfff);                      /* test di, 0xfff */
    II(0x0014c88d, 0x2)   jzw(0x0014c893, 0x4);                 /* jz 0x14c893 */
    II(0x0014c88f, 0x1)   inc(ax);                              /* inc ax */
    II(0x0014c890, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
l_0x0014c893:
    II(0x0014c893, 0x5)   mov(memw_a16(ss, bp - 0x2), 0x92);    /* mov word [bp-0x2], 0x92 */
    II(0x0014c898, 0x3)   mov(al, memb_a16(ds, 0x980));         /* mov al, [0x980] */
    II(0x0014c89b, 0x1)   cbw();                                /* cbw  */
    II(0x0014c89c, 0x1)   dec(ax);                              /* dec ax */
    II(0x0014c89d, 0x2)   jzw(0x0014c8ed, 0x4e);                /* jz 0x14c8ed */
    II(0x0014c89f, 0x1)   dec(ax);                              /* dec ax */
    II(0x0014c8a0, 0x2)   jzw(0x0014c8ff, 0x5d);                /* jz 0x14c8ff */
    II(0x0014c8a2, 0x1)   dec(ax);                              /* dec ax */
    II(0x0014c8a3, 0x2)   jzw(0x0014c8de, 0x39);                /* jz 0x14c8de */
    II(0x0014c8a5, 0x1)   dec(ax);                              /* dec ax */
    II(0x0014c8a6, 0x2)   jnzw(0x0014c8ab, 0x3);                /* jnz 0x14c8ab */
    II(0x0014c8a8, 0x3)   jmpw(0x0014c93e, 0x93);               /* jmp 0x14c93e */
l_0x0014c8ab:
    II(0x0014c8ab, 0x1)   dec(ax);                              /* dec ax */
    II(0x0014c8ac, 0x2)   jzw(0x0014c908, 0x5a);                /* jz 0x14c908 */
    II(0x0014c8ae, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014c8b0, 0x1)   pushw(di);                            /* push di */
    II(0x0014c8b1, 0x3)   callw(0x0014bddb, -0xad9);            /* call 0x14bddb */
    II(0x0014c8b4, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c8b5, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c8b6, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014c8b9, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014c8bc, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0014c8be, 0x2)   jzw(0x0014c8de, 0x1e);                /* jz 0x14c8de */
l_0x0014c8c0:
    II(0x0014c8c0, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x0014c8c3, 0x3)   or_(ax, memw_a16(ss, bp - 0xa));      /* or ax, [bp-0xa] */
    II(0x0014c8c6, 0x2)   jzw(0x0014c8cb, 0x3);                 /* jz 0x14c8cb */
    II(0x0014c8c8, 0x3)   jmpw(0x0014c96e, 0xa3);               /* jmp 0x14c96e */
l_0x0014c8cb:
    II(0x0014c8cb, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014c8ce, 0x6)   mov(memw_a16(es, bx + 0x16), 0x8);    /* mov word [es:bx+0x16], 0x8 */
    II(0x0014c8d4, 0x3)   mov(ax, memw_a16(ds, 0x11fa));        /* mov ax, [0x11fa] */
    II(0x0014c8d7, 0x4)   mov(memw_a16(es, bx + 0x10), ax);     /* mov [es:bx+0x10], ax */
    II(0x0014c8db, 0x3)   jmpw(0x0014ca8a, 0x1ac);              /* jmp 0x14ca8a */
l_0x0014c8de:
    II(0x0014c8de, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014c8e1, 0x3)   callw(0x0014b058, -0x188c);           /* call 0x14b058 */
l_0x0014c8e4:
    II(0x0014c8e4, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c8e5, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014c8e8, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014c8eb, 0x2)   jmpw(0x0014c8c0, -0x2d);              /* jmp 0x14c8c0 */
l_0x0014c8ed:
    II(0x0014c8ed, 0x1)   pushw(bx);                            /* push bx */
    II(0x0014c8ee, 0x3)   callw(0x0014b058, -0x1899);           /* call 0x14b058 */
    II(0x0014c8f1, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c8f2, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014c8f5, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014c8f8, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0014c8fa, 0x3)   or_(ax, memw_a16(ss, bp - 0xa));      /* or ax, [bp-0xa] */
    II(0x0014c8fd, 0x2)   jnzw(0x0014c8c0, -0x3f);              /* jnz 0x14c8c0 */
l_0x0014c8ff:
    II(0x0014c8ff, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014c901, 0x1)   pushw(di);                            /* push di */
    II(0x0014c902, 0x3)   callw(0x0014bddb, -0xb2a);            /* call 0x14bddb */
    II(0x0014c905, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c906, 0x2)   jmpw(0x0014c8e4, -0x24);              /* jmp 0x14c8e4 */
l_0x0014c908:
    II(0x0014c908, 0x4)   cmp(memw_a16(ss, bp - 0x6), 0x1);     /* cmp word [bp-0x6], 0x1 */
    II(0x0014c90c, 0x2)   jnzw(0x0014c944, 0x36);               /* jnz 0x14c944 */
    II(0x0014c90e, 0x3)   lea(ax, di + 0x7);                    /* lea ax, [di+0x7] */
    II(0x0014c911, 0x3)   mov(bx, memw_a16(ss, bp + 0x4));      /* mov bx, [bp+0x4] */
    II(0x0014c914, 0x4)   mov(memw_a16(es, bx + 0x10), ax);     /* mov [es:bx+0x10], ax */
    II(0x0014c918, 0x4)   mov(bx, memw_a16(ds, 0x996));         /* mov bx, [0x996] */
    II(0x0014c91c, 0x3)   mov(memw_a16(ds, bx + 0x10), ax);     /* mov [bx+0x10], ax */
    II(0x0014c91f, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014c922, 0x3)   callw(0x0014b058, -0x18cd);           /* call 0x14b058 */
    II(0x0014c925, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c926, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0014c928, 0x3)   lea(ax, si + 0x7);                    /* lea ax, [si+0x7] */
    II(0x0014c92b, 0x2)   and_(al, 0xf8);                       /* and al, 0xf8 */
    II(0x0014c92d, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x0014c92f, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014c932, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014c935, 0x1)   pushw(si);                            /* push si */
    II(0x0014c936, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014c937, 0x3)   callw(0x0014d4de, 0xba4);             /* call 0x14d4de */
    II(0x0014c93a, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c93b, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c93c, 0x2)   jmpw(0x0014c8c0, -0x7e);              /* jmp 0x14c8c0 */
l_0x0014c93e:
    II(0x0014c93e, 0x4)   cmp(memw_a16(ss, bp - 0x6), 0x1);     /* cmp word [bp-0x6], 0x1 */
    II(0x0014c942, 0x2)   jzw(0x0014c947, 0x3);                 /* jz 0x14c947 */
l_0x0014c944:
    II(0x0014c944, 0x3)   jmpw(0x0014ca8a, 0x143);              /* jmp 0x14ca8a */
l_0x0014c947:
    II(0x0014c947, 0x3)   cmp(di, 0x7);                         /* cmp di, 0x7 */
    II(0x0014c94a, 0x2)   jaew(0x0014c95a, 0xe);                /* jae 0x14c95a */
    II(0x0014c94c, 0x3)   mov(ax, 0x7);                         /* mov ax, 0x7 */
    II(0x0014c94f, 0x4)   mov(memw_a16(es, bx + 0x10), ax);     /* mov [es:bx+0x10], ax */
    II(0x0014c953, 0x4)   mov(bx, memw_a16(ds, 0x996));         /* mov bx, [0x996] */
    II(0x0014c957, 0x3)   mov(memw_a16(ds, bx + 0x10), ax);     /* mov [bx+0x10], ax */
l_0x0014c95a:
    II(0x0014c95a, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014c95d, 0x3)   callw(0x0014b058, -0x1908);           /* call 0x14b058 */
    II(0x0014c960, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c961, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014c964, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014c967, 0x4)   or_(memb_a16(ss, bp - 0x2), 0x60);    /* or byte [bp-0x2], 0x60 */
    II(0x0014c96b, 0x3)   jmpw(0x0014c8c0, -0xae);              /* jmp 0x14c8c0 */
l_0x0014c96e:
    II(0x0014c96e, 0x3)   mov(si, memw_a16(ss, bp + 0x8));      /* mov si, [bp+0x8] */
    II(0x0014c971, 0x2)   or_(si, si);                          /* or si, si */
    II(0x0014c973, 0x2)   jnzw(0x0014c9c5, 0x50);               /* jnz 0x14c9c5 */
    II(0x0014c975, 0x5)   cmp(memb_a16(ds, 0x980), 0x4);        /* cmp byte [0x980], 0x4 */
    II(0x0014c97a, 0x2)   jlw(0x0014c984, 0x8);                 /* jl 0x14c984 */
    II(0x0014c97c, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0014c97f, 0x3)   callw(0x0014c832, -0x150);            /* call 0x14c832 */
    II(0x0014c982, 0x2)   jmpw(0x0014c98a, 0x6);                /* jmp 0x14c98a */
l_0x0014c984:
    II(0x0014c984, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0014c987, 0x3)   callw(0x0014dcef, 0x1365);            /* call 0x14dcef */
l_0x0014c98a:
    II(0x0014c98a, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014c98b, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0014c98d, 0x2)   or_(si, si);                          /* or si, si */
    II(0x0014c98f, 0x2)   jnzw(0x0014c9c5, 0x34);               /* jnz 0x14c9c5 */
    II(0x0014c991, 0x5)   test(memw_a16(ss, bp - 0x8), 0xffff); /* test word [bp-0x8], 0xffff */
    II(0x0014c996, 0x2)   jzw(0x0014c9a8, 0x10);                /* jz 0x14c9a8 */
    II(0x0014c998, 0x1)   pushw(si);                            /* push si */
    II(0x0014c999, 0x1)   pushw(di);                            /* push di */
    II(0x0014c99a, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0014c99d, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0014c9a0, 0x3)   callw(0x0014c010, -0x993);            /* call 0x14c010 */
    II(0x0014c9a3, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0014c9a6, 0x2)   jmpw(0x0014c9b9, 0x11);               /* jmp 0x14c9b9 */
l_0x0014c9a8:
    II(0x0014c9a8, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x0014c9ab, 0x4)   mov(bx, memw_a16(ds, 0x996));         /* mov bx, [0x996] */
    II(0x0014c9af, 0x3)   mov(memw_a16(ds, bx + 0x6), ax);      /* mov [bx+0x6], ax */
    II(0x0014c9b2, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014c9b5, 0x3)   callw(0x0014b0af, -0x1909);           /* call 0x14b0af */
    II(0x0014c9b8, 0x1)   popw(bx);                             /* pop bx */
l_0x0014c9b9:
    II(0x0014c9b9, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014c9bc, 0x6)   mov(memw_a16(es, bx + 0x16), 0x1f);   /* mov word [es:bx+0x16], 0x1f */
    II(0x0014c9c2, 0x3)   jmpw(0x0014ca8a, 0xc5);               /* jmp 0x14ca8a */
l_0x0014c9c5:
    II(0x0014c9c5, 0x3)   mov(memw_a16(ss, bp + 0x8), si);      /* mov [bp+0x8], si */
    II(0x0014c9c8, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014c9cb, 0x4)   mov(memw_a16(es, bx + 0x16), si);     /* mov [es:bx+0x16], si */
    II(0x0014c9cf, 0x5)   and_(memb_a16(es, bx + 0x26), -0x2 /* 0xfe */); /* and byte [es:bx+0x26], 0xfe */
l_0x0014c9d4:
    II(0x0014c9d4, 0x4)   cmp(di, 0x1000);                      /* cmp di, 0x1000 */
    II(0x0014c9d8, 0x2)   jbw(0x0014c9de, 0x4);                 /* jb 0x14c9de */
    II(0x0014c9da, 0x2)   sub(si, si);                          /* sub si, si */
    II(0x0014c9dc, 0x2)   jmpw(0x0014c9e3, 0x5);                /* jmp 0x14c9e3 */
l_0x0014c9de:
    II(0x0014c9de, 0x2)   mov(si, di);                          /* mov si, di */
    II(0x0014c9e0, 0x3)   shl(si, 0x4);                         /* shl si, 0x4 */
l_0x0014c9e3:
    II(0x0014c9e3, 0x1)   dec(si);                              /* dec si */
    II(0x0014c9e4, 0x3)   mov(memw_a16(ss, bp - 0x10), si);     /* mov [bp-0x10], si */
    II(0x0014c9e7, 0x3)   mov(al, memb_a16(ss, bp - 0x2));      /* mov al, [bp-0x2] */
    II(0x0014c9ea, 0x3)   mov(memb_a16(ss, bp - 0xc), al);      /* mov [bp-0xc], al */
    II(0x0014c9ed, 0x4)   mov(memb_a16(ss, bp - 0xb), 0);       /* mov byte [bp-0xb], 0x0 */
    II(0x0014c9f1, 0x5)   mov(memw_a16(ss, bp - 0xe), 0);       /* mov word [bp-0xe], 0x0 */
    II(0x0014c9f6, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x0014c9f9, 0x3)   shl(ax, 0x4);                         /* shl ax, 0x4 */
    II(0x0014c9fc, 0x3)   mov(memw_a16(ss, bp - 0x14), ax);     /* mov [bp-0x14], ax */
    II(0x0014c9ff, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x0014ca02, 0x3)   shl(ax, 0x4);                         /* shl ax, 0x4 */
    II(0x0014ca05, 0x3)   mov(cx, memw_a16(ss, bp - 0xa));      /* mov cx, [bp-0xa] */
    II(0x0014ca08, 0x3)   shr(cx, 0xc);                         /* shr cx, 0xc */
    II(0x0014ca0b, 0x2)   add(ax, cx);                          /* add ax, cx */
    II(0x0014ca0d, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x0014ca10, 0x3)   lea(ax, bp - 0x14);                   /* lea ax, [bp-0x14] */
    II(0x0014ca13, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014ca14, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0014ca17, 0x3)   callw(0x0014dc28, 0x120e);            /* call 0x14dc28 */
    II(0x0014ca1a, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014ca1b, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014ca1c, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0014ca1e, 0x2)   jnzw(0x0014ca27, 0x7);                /* jnz 0x14ca27 */
    II(0x0014ca20, 0x3)   pushw(0x101);                         /* push word 0x101 */
    II(0x0014ca23, 0x3)   callw(0x0014d9c5, 0xf9f);             /* call 0x14d9c5 */
    II(0x0014ca26, 0x1)   popw(bx);                             /* pop bx */
l_0x0014ca27:
    II(0x0014ca27, 0x3)   mov(al, memb_a16(ds, 0x14));          /* mov al, [0x14] */
    II(0x0014ca2a, 0x3)   and_(ax, 0x60);                       /* and ax, 0x60 */
    II(0x0014ca2d, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0014ca30, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0014ca32, 0x2)   jzw(0x0014ca4c, 0x18);                /* jz 0x14ca4c */
    II(0x0014ca34, 0x3)   and_(ax, 0x20);                       /* and ax, 0x20 */
    II(0x0014ca37, 0x3)   cmp(ax, 0x1);                         /* cmp ax, 0x1 */
    II(0x0014ca3a, 0x2)   sbb(ax, ax);                          /* sbb ax, ax */
    II(0x0014ca3c, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014ca3d, 0x3)   lea(ax, si + 0x1);                    /* lea ax, [si+0x1] */
    II(0x0014ca40, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014ca41, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014ca43, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0014ca46, 0x3)   callw(0x0014dad3, 0x108a);            /* call 0x14dad3 */
    II(0x0014ca49, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
l_0x0014ca4c:
    II(0x0014ca4c, 0x5)   add(memw_a16(ss, bp - 0xa), 0x1000);  /* add word [bp-0xa], 0x1000 */
    II(0x0014ca51, 0x4)   adc(memw_a16(ss, bp - 0x8), 0);       /* adc word [bp-0x8], 0x0 */
    II(0x0014ca55, 0x3)   mov(bx, memw_a16(ss, bp + 0x8));      /* mov bx, [bp+0x8] */
    II(0x0014ca58, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014ca5b, 0x4)   add(bx, memw_a16(ds, 0xaa0));         /* add bx, [0xaa0] */
    II(0x0014ca5f, 0x4)   mov(es, memw_a16(ds, 0xaa2));         /* mov es, [0xaa2] */
    II(0x0014ca63, 0x4)   mov(memb_a16(es, bx), 0x3);           /* mov byte [es:bx], 0x3 */
    II(0x0014ca67, 0x4)   add(memw_a16(ss, bp + 0x8), 0x8);     /* add word [bp+0x8], 0x8 */
    II(0x0014ca6b, 0x1)   pushw(si);                            /* push si */
    II(0x0014ca6c, 0x3)   callw(0x0014daf7, 0x1088);            /* call 0x14daf7 */
    II(0x0014ca6f, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014ca70, 0x2)   sub(di, ax);                          /* sub di, ax */
    II(0x0014ca72, 0x2)   jzw(0x0014ca77, 0x3);                 /* jz 0x14ca77 */
    II(0x0014ca74, 0x3)   jmpw(0x0014c9d4, -0xa3);              /* jmp 0x14c9d4 */
l_0x0014ca77:
    II(0x0014ca77, 0x3)   mov(bx, memw_a16(ss, bp + 0x8));      /* mov bx, [bp+0x8] */
    II(0x0014ca7a, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014ca7d, 0x4)   add(bx, memw_a16(ds, 0xaa0));         /* add bx, [0xaa0] */
    II(0x0014ca81, 0x4)   mov(es, memw_a16(ds, 0xaa2));         /* mov es, [0xaa2] */
    II(0x0014ca85, 0x5)   and_(memb_a16(es, bx - 0x1), -0x3 /* 0xfd */); /* and byte [es:bx-0x1], 0xfd */
l_0x0014ca8a:
    II(0x0014ca8a, 0x1)   popw(si);                             /* pop si */
    II(0x0014ca8b, 0x1)   popw(di);                             /* pop di */
    II(0x0014ca8c, 0x1)   leavew();                             /* leave  */
    II(0x0014ca8d, 0x1)   retw();                               /* ret  */
FUNC_END

