FUNC_BEGIN(0x0013ac34, 0xcf98169cc1a713ad, 0x10, ({0xc8, 0x24, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x8, 0x26, 0x8b, 0x4f, 0x4, 0x8b, 0xd0, 0x89, 0x4e, 0xe0, 0x89, 0x56, 0xe2, 0x26, 0x8b, 0x47, 0x14, 0x2b, 0xf6, 0x26, 0x3, 0x77, 0x1c, 0x15, 0, 0, 0x89, 0x76, 0xf8, 0x89, 0x46, 0xfa, 0x89, 0x76, 0xdc, 0x89, 0x46, 0xde, 0x81, 0xe6, 0, 0xf0, 0x8b, 0x5e, 0xdc, 0x8b, 0xf8, 0x2b, 0xde, 0x1b, 0xf8, 0x3, 0xcb, 0x13, 0xd7, 0x89, 0x4e, 0xe6, 0x89, 0x56, 0xe8, 0x8b, 0xc1, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xf7, 0xc1, 0xff, 0xf, 0x74, 0xc, 0x5, 0x1, 0, 0x83, 0xd2, 0, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0x52, 0x50, 0x1e, 0x68, 0x6b, 0x13, 0x90, 0xe, 0xe8, 0x89, 0x63, 0x83, 0xc4, 0xc, 0xa1, 0xb0, 0x1f, 0x8b, 0x16, 0xb2, 0x1f, 0x2b, 0x46, 0xfc, 0x1b, 0x56, 0xfe, 0xb, 0xd2, 0x7d, 0x1a, 0xc4, 0x5e, 0x6, 0x26, 0xc7, 0x47, 0x20, 0x13, 0x80, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x90, 0x81, 0x7e, 0xfa, 0, 0x10, 0x72, 0x1c, 0x77, 0, 0x8b, 0x46, 0xf8, 0x8b, 0x56, 0xfa, 0x3, 0x46, 0xe0, 0x13, 0x56, 0xe2, 0x3b, 0x16, 0xda, 0x4f, 0x72, 0xd, 0x77, 0x6, 0x3b, 0x6, 0xd8, 0x4f, 0x76, 0x5, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x8b, 0x46, 0xf8, 0x8b, 0x56, 0xfa, 0x2d, 0, 0, 0x81, 0xda, 0, 0x10, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xea, 0x89, 0x56, 0xec, 0x2b, 0xc0, 0x89, 0x46, 0xe8, 0x89, 0x46, 0xe6, 0xeb, 0x11, 0x90, 0x83, 0x46, 0xe6, 0x1, 0x83, 0x56, 0xe8, 0, 0x83, 0x46, 0xea, 0x1, 0x83, 0x56, 0xec, 0, 0x8b, 0x46, 0xe6, 0x8b, 0x56, 0xe8, 0x39, 0x56, 0xfe, 0x73, 0x3, 0xe9, 0xc8, 0x1, 0x77, 0x8, 0x39, 0x46, 0xfc, 0x77, 0x3, 0xe9, 0xbe, 0x1, 0x8b, 0x46, 0xea, 0x8b, 0x56, 0xec, 0x5, 0, 0, 0x83, 0xd2, 0x1, 0x89, 0x46, 0xee, 0x89, 0x56, 0xf0, 0xff, 0x76, 0xec, 0xff, 0x76, 0xea, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0x27, 0xe3, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x75, 0x3, 0xe9, 0x7f, 0x1, 0xff, 0x76, 0xec, 0xff, 0x76, 0xea, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0x50, 0xe4, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0xf6, 0x46, 0xf4, 0x1, 0x74, 0x21, 0xff, 0x76, 0xf0, 0xff, 0x76, 0xee, 0x90, 0xe, 0xe8, 0x48, 0xe2, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xe4, 0xc4, 0x1e, 0x9c, 0x4f, 0x8b, 0xf0, 0x26, 0xf6, 0, 0x80, 0x74, 0x4, 0xe9, 0x32, 0x1, 0x90, 0x90, 0xe, 0xe8, 0x21, 0xcb, 0x89, 0x46, 0xe4, 0x3d, 0xff, 0xff, 0x75, 0x25, 0x1e, 0x68, 0x83, 0x13, 0x90, 0xe, 0xe8, 0x51, 0x62, 0x83, 0xc4, 0x4, 0xc4, 0x5e, 0x6, 0x26, 0xc7, 0x47, 0x20, 0x13, 0x80, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0xff, 0x76, 0xec, 0xff, 0x76, 0xea, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0xdd, 0xe3, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0xf6, 0x46, 0xf4, 0x1, 0x75, 0x2a, 0x6a, 0, 0xff, 0x76, 0xe4, 0xff, 0x76, 0xf0, 0xff, 0x76, 0xee, 0x90, 0xe, 0xe8, 0x62, 0xcf, 0x83, 0xc4, 0x8, 0xff, 0x76, 0xf6, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xf0, 0xff, 0x76, 0xee, 0x90, 0xe, 0xe8, 0x9e, 0xce, 0x83, 0xc4, 0x8, 0xe9, 0xb5, 0, 0xff, 0x76, 0xf0, 0xff, 0x76, 0xee, 0x90, 0xe, 0xe8, 0xab, 0xe1, 0x83, 0xc4, 0x4, 0x89, 0x46, 0xf2, 0x6a, 0, 0x50, 0xa1, 0xd8, 0x4f, 0x8b, 0x16, 0xda, 0x4f, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x52, 0x50, 0x90, 0xe, 0xe8, 0xe, 0xcf, 0x83, 0xc4, 0x8, 0x6a, 0, 0xff, 0x76, 0xe4, 0xff, 0x76, 0xf0, 0xff, 0x76, 0xee, 0x90, 0xe, 0xe8, 0xfb, 0xce, 0x83, 0xc4, 0x8, 0xa1, 0xd8, 0x4f, 0x8b, 0x16, 0xda, 0x4f, 0x25, 0, 0xf0, 0x52, 0x50, 0x90, 0xe, 0xe8, 0xc3, 0xda, 0x83, 0xc4, 0x4, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x52, 0x50, 0xff, 0x36, 0xea, 0x1f, 0x90, 0xe, 0xe8, 0xcb, 0xda, 0x83, 0xc4, 0x6, 0x1e, 0x6, 0xb9, 0, 0x4, 0xc4, 0x3e, 0xe8, 0x1f, 0xc5, 0x36, 0xb8, 0x4f, 0x66, 0xf3, 0xa5, 0x7, 0x1f, 0x8b, 0x5e, 0xf2, 0xc1, 0xe3, 0x2, 0xc4, 0x36, 0xa4, 0x4f, 0x2b, 0xc0, 0x26, 0x89, 0x40, 0x2, 0x26, 0x89, 0, 0xff, 0x76, 0xe4, 0x90, 0xe, 0xe8, 0x77, 0xcf, 0x83, 0xc4, 0x2, 0xeb, 0xe, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x90, 0xe9, 0x1b, 0xfe, 0x90, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0013ac34, 0x4)   enterw(0x24, 0);                      /* enter 0x24, 0x0 */
    II(0x0013ac38, 0x1)   pushw(di);                            /* push di */
    II(0x0013ac39, 0x1)   pushw(si);                            /* push si */
    II(0x0013ac3a, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013ac3b, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013ac3e, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013ac40, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013ac43, 0x4)   mov(ax, memw_a16(es, bx + 0x8));      /* mov ax, [es:bx+0x8] */
    II(0x0013ac47, 0x4)   mov(cx, memw_a16(es, bx + 0x4));      /* mov cx, [es:bx+0x4] */
    II(0x0013ac4b, 0x2)   mov(dx, ax);                          /* mov dx, ax */
    II(0x0013ac4d, 0x3)   mov(memw_a16(ss, bp - 0x20), cx);     /* mov [bp-0x20], cx */
    II(0x0013ac50, 0x3)   mov(memw_a16(ss, bp - 0x1e), dx);     /* mov [bp-0x1e], dx */
    II(0x0013ac53, 0x4)   mov(ax, memw_a16(es, bx + 0x14));     /* mov ax, [es:bx+0x14] */
    II(0x0013ac57, 0x2)   sub(si, si);                          /* sub si, si */
    II(0x0013ac59, 0x4)   add(si, memw_a16(es, bx + 0x1c));     /* add si, [es:bx+0x1c] */
    II(0x0013ac5d, 0x3)   adc(ax, 0);                           /* adc ax, 0x0 */
    II(0x0013ac60, 0x3)   mov(memw_a16(ss, bp - 0x8), si);      /* mov [bp-0x8], si */
    II(0x0013ac63, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0013ac66, 0x3)   mov(memw_a16(ss, bp - 0x24), si);     /* mov [bp-0x24], si */
    II(0x0013ac69, 0x3)   mov(memw_a16(ss, bp - 0x22), ax);     /* mov [bp-0x22], ax */
    II(0x0013ac6c, 0x4)   and_(si, 0xf000);                     /* and si, 0xf000 */
    II(0x0013ac70, 0x3)   mov(bx, memw_a16(ss, bp - 0x24));     /* mov bx, [bp-0x24] */
    II(0x0013ac73, 0x2)   mov(di, ax);                          /* mov di, ax */
    II(0x0013ac75, 0x2)   sub(bx, si);                          /* sub bx, si */
    II(0x0013ac77, 0x2)   sbb(di, ax);                          /* sbb di, ax */
    II(0x0013ac79, 0x2)   add(cx, bx);                          /* add cx, bx */
    II(0x0013ac7b, 0x2)   adc(dx, di);                          /* adc dx, di */
    II(0x0013ac7d, 0x3)   mov(memw_a16(ss, bp - 0x1a), cx);     /* mov [bp-0x1a], cx */
    II(0x0013ac80, 0x3)   mov(memw_a16(ss, bp - 0x18), dx);     /* mov [bp-0x18], dx */
    II(0x0013ac83, 0x2)   mov(ax, cx);                          /* mov ax, cx */
    II(0x0013ac85, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013ac87, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013ac89, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013ac8b, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013ac8d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ac8f, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ac91, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ac93, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ac95, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ac97, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ac99, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ac9b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ac9d, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013aca0, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0013aca3, 0x4)   test(cx, 0xfff);                      /* test cx, 0xfff */
    II(0x0013aca7, 0x2)   jzw(0x0013acb5, 0xc);                 /* jz 0x13acb5 */
    II(0x0013aca9, 0x3)   add(ax, 0x1);                         /* add ax, 0x1 */
    II(0x0013acac, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x0013acaf, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013acb2, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
l_0x0013acb5:
    II(0x0013acb5, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0013acb8, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0013acbb, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013acbc, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013acbd, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013acbe, 0x3)   pushw(0x136b);                        /* push word 0x136b */
//    II(0x0013acc1, 0x1)   nop();                                /* nop  */
    II(0x0013acc2, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013acc3, 0x3)   callw(0x0014104f, 0x6389);            /* call 0x14104f */
    II(0x0013acc6, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0013acc9, 0x3)   mov(ax, memw_a16(ds, 0x1fb0));        /* mov ax, [0x1fb0] */
    II(0x0013accc, 0x4)   mov(dx, memw_a16(ds, 0x1fb2));        /* mov dx, [0x1fb2] */
    II(0x0013acd0, 0x3)   sub(ax, memw_a16(ss, bp - 0x4));      /* sub ax, [bp-0x4] */
    II(0x0013acd3, 0x3)   sbb(dx, memw_a16(ss, bp - 0x2));      /* sbb dx, [bp-0x2] */
    II(0x0013acd6, 0x2)   or_(dx, dx);                          /* or dx, dx */
    II(0x0013acd8, 0x2)   jgew(0x0013acf4, 0x1a);               /* jge 0x13acf4 */
    II(0x0013acda, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013acdd, 0x6)   mov(memw_a16(es, bx + 0x20), 0x8013); /* mov word [es:bx+0x20], 0x8013 */
    II(0x0013ace3, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x0013ace9, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x0013acee, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013acef, 0x1)   popw(si);                             /* pop si */
    II(0x0013acf0, 0x1)   popw(di);                             /* pop di */
    II(0x0013acf1, 0x1)   leavew();                             /* leave  */
    II(0x0013acf2, 0x1)   retfw();                              /* retf  */
//    II(0x0013acf3, 0x1)   /* Недостижимый код. */
l_0x0013acf4:
    II(0x0013acf4, 0x5)   cmp(memw_a16(ss, bp - 0x6), 0x1000);  /* cmp word [bp-0x6], 0x1000 */
    II(0x0013acf9, 0x2)   jbw(0x0013ad17, 0x1c);                /* jb 0x13ad17 */
    II(0x0013acfb, 0x2)   jaw(0x0013acfd, 0);                   /* ja 0x13acfd */
l_0x0013acfd:
    II(0x0013acfd, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x0013ad00, 0x3)   mov(dx, memw_a16(ss, bp - 0x6));      /* mov dx, [bp-0x6] */
    II(0x0013ad03, 0x3)   add(ax, memw_a16(ss, bp - 0x20));     /* add ax, [bp-0x20] */
    II(0x0013ad06, 0x3)   adc(dx, memw_a16(ss, bp - 0x1e));     /* adc dx, [bp-0x1e] */
    II(0x0013ad09, 0x4)   cmp(dx, memw_a16(ds, 0x4fda));        /* cmp dx, [0x4fda] */
    II(0x0013ad0d, 0x2)   jbw(0x0013ad1c, 0xd);                 /* jb 0x13ad1c */
    II(0x0013ad0f, 0x2)   jaw(0x0013ad17, 0x6);                 /* ja 0x13ad17 */
    II(0x0013ad11, 0x4)   cmp(ax, memw_a16(ds, 0x4fd8));        /* cmp ax, [0x4fd8] */
    II(0x0013ad15, 0x2)   jbew(0x0013ad1c, 0x5);                /* jbe 0x13ad1c */
l_0x0013ad17:
    II(0x0013ad17, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013ad18, 0x1)   popw(si);                             /* pop si */
    II(0x0013ad19, 0x1)   popw(di);                             /* pop di */
    II(0x0013ad1a, 0x1)   leavew();                             /* leave  */
    II(0x0013ad1b, 0x1)   retfw();                              /* retf  */
l_0x0013ad1c:
    II(0x0013ad1c, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x0013ad1f, 0x3)   mov(dx, memw_a16(ss, bp - 0x6));      /* mov dx, [bp-0x6] */
    II(0x0013ad22, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x0013ad25, 0x4)   sbb(dx, 0x1000);                      /* sbb dx, 0x1000 */
    II(0x0013ad29, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013ad2b, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013ad2d, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013ad2f, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013ad31, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ad33, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ad35, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ad37, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ad39, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ad3b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ad3d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ad3f, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ad41, 0x3)   mov(memw_a16(ss, bp - 0x16), ax);     /* mov [bp-0x16], ax */
    II(0x0013ad44, 0x3)   mov(memw_a16(ss, bp - 0x14), dx);     /* mov [bp-0x14], dx */
    II(0x0013ad47, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013ad49, 0x3)   mov(memw_a16(ss, bp - 0x18), ax);     /* mov [bp-0x18], ax */
    II(0x0013ad4c, 0x3)   mov(memw_a16(ss, bp - 0x1a), ax);     /* mov [bp-0x1a], ax */
    II(0x0013ad4f, 0x2)   jmpw(0x0013ad62, 0x11);               /* jmp 0x13ad62 */
//    II(0x0013ad51, 0x1)   /* Недостижимый код. */
l_0x0013ad52:
    II(0x0013ad52, 0x4)   add(memw_a16(ss, bp - 0x1a), 0x1);    /* add word [bp-0x1a], 0x1 */
    II(0x0013ad56, 0x4)   adc(memw_a16(ss, bp - 0x18), 0);      /* adc word [bp-0x18], 0x0 */
    II(0x0013ad5a, 0x4)   add(memw_a16(ss, bp - 0x16), 0x1);    /* add word [bp-0x16], 0x1 */
    II(0x0013ad5e, 0x4)   adc(memw_a16(ss, bp - 0x14), 0);      /* adc word [bp-0x14], 0x0 */
l_0x0013ad62:
    II(0x0013ad62, 0x3)   mov(ax, memw_a16(ss, bp - 0x1a));     /* mov ax, [bp-0x1a] */
    II(0x0013ad65, 0x3)   mov(dx, memw_a16(ss, bp - 0x18));     /* mov dx, [bp-0x18] */
    II(0x0013ad68, 0x3)   cmp(memw_a16(ss, bp - 0x2), dx);      /* cmp [bp-0x2], dx */
    II(0x0013ad6b, 0x2)   jaew(0x0013ad70, 0x3);                /* jae 0x13ad70 */
    II(0x0013ad6d, 0x3)   jmpw(0x0013af38, 0x1c8);              /* jmp 0x13af38 */
l_0x0013ad70:
    II(0x0013ad70, 0x2)   jaw(0x0013ad7a, 0x8);                 /* ja 0x13ad7a */
    II(0x0013ad72, 0x3)   cmp(memw_a16(ss, bp - 0x4), ax);      /* cmp [bp-0x4], ax */
    II(0x0013ad75, 0x2)   jaw(0x0013ad7a, 0x3);                 /* ja 0x13ad7a */
    II(0x0013ad77, 0x3)   jmpw(0x0013af38, 0x1be);              /* jmp 0x13af38 */
l_0x0013ad7a:
    II(0x0013ad7a, 0x3)   mov(ax, memw_a16(ss, bp - 0x16));     /* mov ax, [bp-0x16] */
    II(0x0013ad7d, 0x3)   mov(dx, memw_a16(ss, bp - 0x14));     /* mov dx, [bp-0x14] */
    II(0x0013ad80, 0x3)   add(ax, 0);                           /* add ax, 0x0 */
    II(0x0013ad83, 0x3)   adc(dx, 0x1);                         /* adc dx, 0x1 */
    II(0x0013ad86, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x0013ad89, 0x3)   mov(memw_a16(ss, bp - 0x10), dx);     /* mov [bp-0x10], dx */
    II(0x0013ad8c, 0x3)   pushw(memw_a16(ss, bp - 0x14));       /* push word [bp-0x14] */
    II(0x0013ad8f, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0013ad92, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013ad96, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x0013ad9a, 0x3)   callw(0x001390c4, -0x1cd9);           /* call 0x1390c4 */
    II(0x0013ad9d, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013ada0, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013ada2, 0x2)   jnzw(0x0013ada7, 0x3);                /* jnz 0x13ada7 */
    II(0x0013ada4, 0x3)   jmpw(0x0013af26, 0x17f);              /* jmp 0x13af26 */
l_0x0013ada7:
    II(0x0013ada7, 0x3)   pushw(memw_a16(ss, bp - 0x14));       /* push word [bp-0x14] */
    II(0x0013adaa, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0013adad, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x0013adb1, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x0013adb5, 0x3)   callw(0x00139208, -0x1bb0);           /* call 0x139208 */
    II(0x0013adb8, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013adbb, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0013adbe, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0013adc1, 0x4)   test(memb_a16(ss, bp - 0xc), 0x1);    /* test byte [bp-0xc], 0x1 */
    II(0x0013adc5, 0x2)   jzw(0x0013ade8, 0x21);                /* jz 0x13ade8 */
    II(0x0013adc7, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x0013adca, 0x3)   pushw(memw_a16(ss, bp - 0x12));       /* push word [bp-0x12] */
//    II(0x0013adcd, 0x1)   nop();                                /* nop  */
    II(0x0013adce, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013adcf, 0x3)   callw(0x0013901a, -0x1db8);           /* call 0x13901a */
    II(0x0013add2, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013add5, 0x3)   mov(memw_a16(ss, bp - 0x1c), ax);     /* mov [bp-0x1c], ax */
    II(0x0013add8, 0x4)   les(bx, ds, 0x4f9c);                  /* les bx, [0x4f9c] */
    II(0x0013addc, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0013adde, 0x4)   test(memb_a16(es, bx + si), 0x80);    /* test byte [es:bx+si], 0x80 */
    II(0x0013ade2, 0x2)   jzw(0x0013ade8, 0x4);                 /* jz 0x13ade8 */
    II(0x0013ade4, 0x3)   jmpw(0x0013af19, 0x132);              /* jmp 0x13af19 */
//    II(0x0013ade7, 0x1)   /* Недостижимый код. */
l_0x0013ade8:
//    II(0x0013ade8, 0x1)   nop();                                /* nop  */
    II(0x0013ade9, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013adea, 0x3)   callw(0x0013790e, -0x34df);           /* call 0x13790e */
    II(0x0013aded, 0x3)   mov(memw_a16(ss, bp - 0x1c), ax);     /* mov [bp-0x1c], ax */
    II(0x0013adf0, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x0013adf3, 0x2)   jnzw(0x0013ae1a, 0x25);               /* jnz 0x13ae1a */
    II(0x0013adf5, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013adf6, 0x3)   pushw(0x1383);                        /* push word 0x1383 */
//    II(0x0013adf9, 0x1)   nop();                                /* nop  */
    II(0x0013adfa, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013adfb, 0x3)   callw(0x0014104f, 0x6251);            /* call 0x14104f */
    II(0x0013adfe, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013ae01, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013ae04, 0x6)   mov(memw_a16(es, bx + 0x20), 0x8013); /* mov word [es:bx+0x20], 0x8013 */
    II(0x0013ae0a, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x0013ae10, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x0013ae15, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013ae16, 0x1)   popw(si);                             /* pop si */
    II(0x0013ae17, 0x1)   popw(di);                             /* pop di */
    II(0x0013ae18, 0x1)   leavew();                             /* leave  */
    II(0x0013ae19, 0x1)   retfw();                              /* retf  */
l_0x0013ae1a:
    II(0x0013ae1a, 0x3)   pushw(memw_a16(ss, bp - 0x14));       /* push word [bp-0x14] */
    II(0x0013ae1d, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0013ae20, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x0013ae24, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x0013ae28, 0x3)   callw(0x00139208, -0x1c23);           /* call 0x139208 */
    II(0x0013ae2b, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013ae2e, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0013ae31, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0013ae34, 0x4)   test(memb_a16(ss, bp - 0xc), 0x1);    /* test byte [bp-0xc], 0x1 */
    II(0x0013ae38, 0x2)   jnzw(0x0013ae64, 0x2a);               /* jnz 0x13ae64 */
    II(0x0013ae3a, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013ae3c, 0x3)   pushw(memw_a16(ss, bp - 0x1c));       /* push word [bp-0x1c] */
    II(0x0013ae3f, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x0013ae42, 0x3)   pushw(memw_a16(ss, bp - 0x12));       /* push word [bp-0x12] */
//    II(0x0013ae45, 0x1)   nop();                                /* nop  */
    II(0x0013ae46, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013ae47, 0x3)   callw(0x00137dac, -0x309e);           /* call 0x137dac */
    II(0x0013ae4a, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013ae4d, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0013ae50, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0013ae53, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x0013ae56, 0x3)   pushw(memw_a16(ss, bp - 0x12));       /* push word [bp-0x12] */
//    II(0x0013ae59, 0x1)   nop();                                /* nop  */
    II(0x0013ae5a, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013ae5b, 0x3)   callw(0x00137cfc, -0x3162);           /* call 0x137cfc */
    II(0x0013ae5e, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013ae61, 0x3)   jmpw(0x0013af19, 0xb5);               /* jmp 0x13af19 */
l_0x0013ae64:
    II(0x0013ae64, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x0013ae67, 0x3)   pushw(memw_a16(ss, bp - 0x12));       /* push word [bp-0x12] */
//    II(0x0013ae6a, 0x1)   nop();                                /* nop  */
    II(0x0013ae6b, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013ae6c, 0x3)   callw(0x0013901a, -0x1e55);           /* call 0x13901a */
    II(0x0013ae6f, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013ae72, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x0013ae75, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013ae77, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013ae78, 0x3)   mov(ax, memw_a16(ds, 0x4fd8));        /* mov ax, [0x4fd8] */
    II(0x0013ae7b, 0x4)   mov(dx, memw_a16(ds, 0x4fda));        /* mov dx, [0x4fda] */
    II(0x0013ae7f, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013ae81, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013ae83, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013ae85, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013ae87, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ae89, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ae8b, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ae8d, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ae8f, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ae91, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ae93, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013ae95, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013ae97, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013ae98, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013ae99, 0x1)   nop();                                /* nop  */
    II(0x0013ae9a, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013ae9b, 0x3)   callw(0x00137dac, -0x30f2);           /* call 0x137dac */
    II(0x0013ae9e, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013aea1, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013aea3, 0x3)   pushw(memw_a16(ss, bp - 0x1c));       /* push word [bp-0x1c] */
    II(0x0013aea6, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x0013aea9, 0x3)   pushw(memw_a16(ss, bp - 0x12));       /* push word [bp-0x12] */
//    II(0x0013aeac, 0x1)   nop();                                /* nop  */
    II(0x0013aead, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013aeae, 0x3)   callw(0x00137dac, -0x3105);           /* call 0x137dac */
    II(0x0013aeb1, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013aeb4, 0x3)   mov(ax, memw_a16(ds, 0x4fd8));        /* mov ax, [0x4fd8] */
    II(0x0013aeb7, 0x4)   mov(dx, memw_a16(ds, 0x4fda));        /* mov dx, [0x4fda] */
    II(0x0013aebb, 0x3)   and_(ax, 0xf000);                     /* and ax, 0xf000 */
    II(0x0013aebe, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013aebf, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013aec0, 0x1)   nop();                                /* nop  */
    II(0x0013aec1, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013aec2, 0x3)   callw(0x00138988, -0x253d);           /* call 0x138988 */
    II(0x0013aec5, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013aec8, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013aecb, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x0013aece, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x0013aed0, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013aed2, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013aed4, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013aed6, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013aed8, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013aeda, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013aedc, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013aede, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013aee0, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013aee2, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013aee4, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013aee6, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013aee7, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013aee8, 0x4)   pushw(memw_a16(ds, 0x1fea));          /* push word [0x1fea] */
//    II(0x0013aeec, 0x1)   nop();                                /* nop  */
    II(0x0013aeed, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013aeee, 0x3)   callw(0x001389bc, -0x2535);           /* call 0x1389bc */
    II(0x0013aef1, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0013aef4, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013aef5, 0x1)   pushw(es);                            /* push es */
    II(0x0013aef6, 0x3)   mov(cx, 0x400);                       /* mov cx, 0x400 */
    II(0x0013aef9, 0x4)   les(di, ds, 0x1fe8);                  /* les di, [0x1fe8] */
    II(0x0013aefd, 0x4)   lds(si, ds, 0x4fb8);                  /* lds si, [0x4fb8] */
    II(0x0013af01, 0x3)   rep_a16 movsd_a16();                  /* rep movsd  */
    II(0x0013af04, 0x1)   popw(es);                             /* pop es */
    II(0x0013af05, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013af06, 0x3)   mov(bx, memw_a16(ss, bp - 0xe));      /* mov bx, [bp-0xe] */
    II(0x0013af09, 0x3)   shl(bx, 0x2);                         /* shl bx, 0x2 */
    II(0x0013af0c, 0x4)   les(si, ds, 0x4fa4);                  /* les si, [0x4fa4] */
    II(0x0013af10, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013af12, 0x4)   mov(memw_a16(es, bx + si + 0x2), ax); /* mov [es:bx+si+0x2], ax */
    II(0x0013af16, 0x3)   mov(memw_a16(es, bx + si), ax);       /* mov [es:bx+si], ax */
l_0x0013af19:
    II(0x0013af19, 0x3)   pushw(memw_a16(ss, bp - 0x1c));       /* push word [bp-0x1c] */
//    II(0x0013af1c, 0x1)   nop();                                /* nop  */
    II(0x0013af1d, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013af1e, 0x3)   callw(0x00137e98, -0x3089);           /* call 0x137e98 */
    II(0x0013af21, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x0013af24, 0x2)   jmpw(0x0013af34, 0xe);                /* jmp 0x13af34 */
l_0x0013af26:
    II(0x0013af26, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013af29, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x0013af2e, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013af2f, 0x1)   popw(si);                             /* pop si */
    II(0x0013af30, 0x1)   popw(di);                             /* pop di */
    II(0x0013af31, 0x1)   leavew();                             /* leave  */
    II(0x0013af32, 0x1)   retfw();                              /* retf  */
//    II(0x0013af33, 0x1)   /* Недостижимый код. */
l_0x0013af34:
    II(0x0013af34, 0x3)   jmpw(0x0013ad52, -0x1e5);             /* jmp 0x13ad52 */
//    II(0x0013af37, 0x1)   /* Недостижимый код. */
l_0x0013af38:
    II(0x0013af38, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013af3b, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x0013af40, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013af41, 0x1)   popw(si);                             /* pop si */
    II(0x0013af42, 0x1)   popw(di);                             /* pop di */
    II(0x0013af43, 0x1)   leavew();                             /* leave  */
    II(0x0013af44, 0x1)   retfw();                              /* retf  */
FUNC_END

