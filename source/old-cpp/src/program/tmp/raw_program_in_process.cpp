#include "dos/dma.hpp"
#include "x86/instructions.hpp"
#include "program/raw_program.hpp"


namespace raw_program {

using namespace x86;
using namespace dos;


FUNC_INFO_V3(0x1016d2cc, 0x343c37cc5998ccae, 0x20, {0x53, 0x51, 0x52, 0x56, 0x57, 0xb9, 0, 0x3, 0, 0, 0xbf, 0xc0, 0xde, 0x1b, 0x10, 0xbb, 0, 0x1, 0, 0, 0x89, 0xc6, 0xba, 0x1, 0, 0, 0, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0xb8, 0x20, 0x4, 0x1d, 0x10, 0xe8, 0xdf, 0x8a, 0xff, 0xff, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x1016d2cc, 0x20);        // eax - pallete
    II(0x1016d2cc, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x1016d2cd, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x1016d2ce, 0x1)     pushd(edx);                         /* push edx */
    II(0x1016d2cf, 0x1)     pushd(esi);                         /* push esi */
    II(0x1016d2d0, 0x1)     pushd(edi);                         /* push edi */
    II(0x1016d2d1, 0x5)     mov(ecx, 0x300);                    /* mov ecx, 0x300 */
    II(0x1016d2d6, 0x5)     mov(edi, 0x101bdec0);               /* mov edi, 0x101bdec0 */     // copy pallete to this array.
    II(0x1016d2db, 0x5)     mov(ebx, 0x100);                    /* mov ebx, 0x100 */
    II(0x1016d2e0, 0x2)     mov(esi, eax);                      /* mov esi, eax */
    II(0x1016d2e2, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x1016d2e7, 0x1)     pushd(edi);                         /* push edi */
    II(0x1016d2e8, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x1016d2ea, 0x3)     shr(ecx, 0x2);                      /* shr ecx, 0x2 */
    II(0x1016d2ed, 0x2)     repne_a32 movsd_a32();              /* repne movsd  */
    II(0x1016d2ef, 0x2)     mov(cl, al);                        /* mov cl, al */
    II(0x1016d2f1, 0x3)     and_(cl, 0x3);                      /* and cl, 0x3 */
    II(0x1016d2f4, 0x2)     repne_a32 movsb_a32();              /* repne movsb  */
    II(0x1016d2f6, 0x1)     popd(edi);                          /* pop edi */
    II(0x1016d2f7, 0x5)     mov(eax, 0x101d0420);               /* mov eax, 0x101d0420 */
    II(0x1016d2fc, 0x5)     calld(sys_memset, -0x7521);            /* call 0x10165de0 */
    II(0x1016d301, 0x1)     popd(edi);                          /* pop edi */
    II(0x1016d302, 0x1)     popd(esi);                          /* pop esi */
    II(0x1016d303, 0x1)     popd(edx);                          /* pop edx */
    II(0x1016d304, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1016d305, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x1016d306, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V2(0x10187204, func_0x10187204, 0x20, {0x55, 0x89, 0xe5, 0x83, 0xec, 0x10, 0xdc, 0x15, 0xa0, 0xe8, 0x1b, 0x10, 0x9b, 0xdd, 0x7d, 0xf0, 0x9b, 0x8a, 0x65, 0xf1, 0x9e, 0x76, 0x18, 0x3c, 0x7, 0x74, 0xe, 0xdd, 0x5d, 0xf0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xe8, 0xea, 0xac, 0xff, 0xff, 0xb0, 0x1, 0x89, 0xec, 0x5d, 0xc3, 0xdc, 0x15, 0xa8, 0xe8, 0x1b, 0x10, 0x9b, 0xdd, 0x7d, 0xf0, 0x9b, 0x8a, 0x65, 0xf1, 0x9e, 0x77, 0x4, 0xd9, 0xee, 0xeb, 0x14, 0xd9, 0xea, 0xde, 0xc9, 0xd9, 0xc0, 0xd9, 0xfc, 0xd9, 0xc9, 0xd8, 0xe1, 0xd9, 0xf0, 0xd9, 0xe8, 0xde, 0xc1, 0xd9, 0xfd, 0xdd, 0xd9, 0xb0, 0, 0x89, 0xec, 0x5d, 0xc3})
void func_0x10187204()
{
    FUNC_START_V2(0x10187204, 0x20);
    II(0x10187204, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x10187205, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x10187207, 0x3)    sub(esp, 0x10);                        /* sub esp, 0x10 */
    II(0x1018720a, 0x6)    fcom(memq_a32(ds, 0x101be8a0));        /* fcom qword [0x101be8a0] */
    II(0x10187210, 0x1)    wait();                                /* wait  */
    II(0x10187211, 0x3)    fnstsw(memw_a32(ss, ebp - 0x10));      /* fnstsw word [ebp-0x10] */
    II(0x10187214, 0x1)    wait();                                /* wait  */
    II(0x10187215, 0x3)    mov(ah, memb_a32(ss, ebp - 0xf));      /* mov ah, [ebp-0xf] */
    II(0x10187218, 0x1)    sahf();                                /* sahf  */
    II(0x10187219, 0x2)    jbed(0x10187233, 0x18);                /* jbe 0x10187233 */
    II(0x1018721b, 0x2)    cmp(al, 0x7);                          /* cmp al, 0x7 */
    II(0x1018721d, 0x2)    jzd(0x1018722d, 0xe);                  /* jz 0x1018722d */
    II(0x1018721f, 0x3)    fstp(memq_a32(ss, ebp - 0x10));        /* fstp qword [ebp-0x10] */
    II(0x10187222, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
    II(0x10187225, 0x3)    mov(memd_a32(ss, ebp - 0x4), edx);     /* mov [ebp-0x4], edx */
    II(0x10187228, 0x5)    calld(0x10181f17, -0x5316);            /* call 0x10181f17 */
l_0x1018722d:
    II(0x1018722d, 0x2)    mov(al, 0x1);                          /* mov al, 0x1 */
    II(0x1018722f, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x10187231, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x10187232, 0x1)    retd();                                /* ret  */
l_0x10187233:
    II(0x10187233, 0x6)    fcom(memq_a32(ds, 0x101be8a8));        /* fcom qword [0x101be8a8] */
    II(0x10187239, 0x1)    wait();                                /* wait  */
    II(0x1018723a, 0x3)    fnstsw(memw_a32(ss, ebp - 0x10));      /* fnstsw word [ebp-0x10] */
    II(0x1018723d, 0x1)    wait();                                /* wait  */
    II(0x1018723e, 0x3)    mov(ah, memb_a32(ss, ebp - 0xf));      /* mov ah, [ebp-0xf] */
    II(0x10187241, 0x1)    sahf();                                /* sahf  */
    II(0x10187242, 0x2)    jad(0x10187248, 0x4);                  /* ja 0x10187248 */
    II(0x10187244, 0x2)    fldz();                                /* fldz  */
    II(0x10187246, 0x2)    jmpd(0x1018725c, 0x14);                /* jmp 0x1018725c */
l_0x10187248:
    II(0x10187248, 0x2)    fldl2e();                              /* fldl2e  */
    II(0x1018724a, 0x2)    fmulp(0x1 /* st1 */, 0 /* st0 */);     /* fmulp st1, st0 */
    II(0x1018724c, 0x2)    fld(0 /* st0 */, 0 /* st0 */);         /* fld st0, st0 */
    II(0x1018724e, 0x2)    frndint();                             /* frndint  */
    II(0x10187250, 0x2)    fxch(0 /* st0 */, 0x1 /* st1 */);      /* fxch st0, st1 */
    II(0x10187252, 0x2)    fsub(0 /* st0 */, 0x1 /* st1 */);      /* fsub st0, st1 */
    II(0x10187254, 0x2)    // invalid();                             /* invalid  */
    II(0x10187256, 0x2)    fld1();                                /* fld1  */
    II(0x10187258, 0x2)    faddp(0x1 /* st1 */, 0 /* st0 */);     /* faddp st1, st0 */
    II(0x1018725a, 0x2)    fscale();                              /* fscale  */
l_0x1018725c:
    II(0x1018725c, 0x2)    fstp(0x1 /* st1 */);                   /* fstp st1 */
    II(0x1018725e, 0x2)    mov(al, 0);                            /* mov al, 0x0 */
    II(0x10187260, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x10187262, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x10187263, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V3(0x1013b9e0, 0xc3abf1f3b447bf38, 0x20, {0x68, 0x28, 0, 0, 0, 0xe8, 0x68, 0xa3, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x37, 0, 0, 0, 0xba, 0x60, 0xcc, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd, 0x3a, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0x38, 0, 0x74, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xf0, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x1013b9e0, 0x20);
    II(0x1013b9e0, 0x5)     pushd(0x28);                        /* push dword 0x28 */
    II(0x1013b9e5, 0x5)     calld(sys_check_available_stack_size, 0x2a368); /* call 0x10165d52 */
    II(0x1013b9ea, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x1013b9eb, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x1013b9ec, 0x1)     pushd(esi);                         /* push esi */
    II(0x1013b9ed, 0x1)     pushd(edi);                         /* push edi */
    II(0x1013b9ee, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x1013b9ef, 0x2)     mov(ebp, esp);                      /* mov ebp, esp */
    II(0x1013b9f1, 0x6)     sub(esp, 0x10);                     /* sub esp, 0x10 */
    II(0x1013b9f7, 0x3)     mov(memd_a32(ss, ebp - 0x8), eax);  /* mov [ebp-0x8], eax */
    II(0x1013b9fa, 0x3)     mov(memd_a32(ss, ebp - 0x4), edx);  /* mov [ebp-0x4], edx */
    II(0x1013b9fd, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x1013ba00, 0x5)     calld(0x1013ba3c, 0x37);            /* call 0x1013ba3c */
    II(0x1013ba05, 0x5)     mov(edx, 0x101acc60);               /* mov edx, 0x101acc60 */ /* "rb" */
    II(0x1013ba0a, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x1013ba0d, 0x5)     calld(my_fopen, -0x4c5f3);           /* call 0x100ef41f */          // SAVE1.DMO
    II(0x1013ba12, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x1013ba14, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x1013ba17, 0x2)     mov(memd_a32(ds, eax), edx);        /* mov [eax], edx */
    II(0x1013ba19, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x1013ba1c, 0x3)     cmp(memd_a32(ds, eax), 0);          /* cmp dword [eax], 0x0 */
    II(0x1013ba1f, 0x2)     jzd(0x1013ba27, 0x6);               /* jz 0x1013ba27 */
    II(0x1013ba21, 0x4)     mov(memb_a32(ss, ebp - 0xc), 0x1);  /* mov byte [ebp-0xc], 0x1 */
    II(0x1013ba25, 0x2)     jmpd(0x1013ba2b, 0x4);              /* jmp 0x1013ba2b */
l_0x1013ba27:
    II(0x1013ba27, 0x4)     mov(memb_a32(ss, ebp - 0xc), 0);    /* mov byte [ebp-0xc], 0x0 */
l_0x1013ba2b:
    II(0x1013ba2b, 0x3)     mov(al, memb_a32(ss, ebp - 0xc));   /* mov al, [ebp-0xc] */
    II(0x1013ba2e, 0x3)     mov(memb_a32(ss, ebp - 0x10), al);  /* mov [ebp-0x10], al */
    II(0x1013ba31, 0x3)     mov(al, memb_a32(ss, ebp - 0x10));  /* mov al, [ebp-0x10] */
    II(0x1013ba34, 0x2)     mov(esp, ebp);                      /* mov esp, ebp */
    II(0x1013ba36, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x1013ba37, 0x1)     popd(edi);                          /* pop edi */
    II(0x1013ba38, 0x1)     popd(esi);                          /* pop esi */
    II(0x1013ba39, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1013ba3a, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x1013ba3b, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V2(0x100d68a3, func_0x100d68a3, 0x20, {0x68, 0x34, 0x3, 0, 0, 0xe8, 0xa5, 0xf4, 0x8, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0x3, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x13, 0x98, 0x5f, 0x1b, 0x10, 0xf, 0xbe, 0x45, 0xfc, 0xe8, 0x68, 0x1f, 0x1, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0xc7, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0xc, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x12, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0x10, 0x8d, 0x95, 0xe4, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0xb7, 0xdc, 0x5, 0, 0x8b, 0x85, 0xe8, 0xfc, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0x8, 0x8b, 0x85, 0xea, 0xfc, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0xa, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x8, 0x8b, 0x45, 0xf0, 0x2b, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x29, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x3, 0x10, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x4, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0xc, 0x8b, 0x45, 0xf0, 0x2b, 0x50, 0x4, 0x89, 0xd0, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x8, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x89, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x8b, 0x55, 0xf0, 0x3, 0x42, 0x4, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0x6, 0x8b, 0x45, 0xf4, 0x89, 0x85, 0xe0, 0xfc, 0xff, 0xff, 0x8b, 0x85, 0xe0, 0xfc, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3})
void func_0x100d68a3() // input   bl - index in array   edx - s16 val   eax - ptr
{
    FUNC_START_V2(0x100d68a3, 0x20);
    II(0x100d68a3, 0x5)    pushd(0x334);                          /* push dword 0x334 */
    II(0x100d68a8, 0x5)    calld(sys_check_available_stack_size, 0x8f4a5);            /* call sys_check_available_stack_size */
    II(0x100d68ad, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x100d68ae, 0x1)    pushd(esi);                            /* push esi */
    II(0x100d68af, 0x1)    pushd(edi);                            /* push edi */
    II(0x100d68b0, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x100d68b1, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x100d68b3, 0x6)    sub(esp, 0x320);                       /* sub esp, 0x320 */
    II(0x100d68b9, 0x3)    mov(memd_a32(ss, ebp - 0xc), eax);     /* mov [ebp-0xc], eax */
    II(0x100d68bc, 0x3)    mov(memd_a32(ss, ebp - 0x8), edx);     /* mov [ebp-0x8], edx */
    II(0x100d68bf, 0x3)    mov(memb_a32(ss, ebp - 0x4), bl);      /* mov [ebp-0x4], bl */
    II(0x100d68c2, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x100d68c5, 0x7)    mov(memd_a32(ds, eax + 0x13), 0x101b5f98); /* mov dword [eax+0x13], 0x101b5f98 */
    II(0x100d68cc, 0x4)    movsx(eax, memb_a32(ss, ebp - 0x4));   /* movsx eax, byte [ebp-0x4] */
    II(0x100d68d0, 0x5)    calld(0x100e883d, 0x11f68);            /* call 0x100e883d */             // get ptr of array[bl]
    II(0x100d68d5, 0x3)    mov(memd_a32(ss, ebp - 0x10), eax);    /* mov [ebp-0x10], eax */
    II(0x100d68d8, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x100d68db, 0x6)    mov(memd_a32(ds, eax), 0);             /* mov dword [eax], 0x0 */
    II(0x100d68e1, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x100d68e4, 0x7)    mov(memd_a32(ds, eax + 0xc), 0);       /* mov dword [eax+0xc], 0x0 */
    II(0x100d68eb, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x100d68ee, 0x4)    mov(memb_a32(ds, eax + 0x12), 0);      /* mov byte [eax+0x12], 0x0 */
    II(0x100d68f2, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100d68f5, 0x3)    mov(edx, memd_a32(ss, ebp - 0xc));     /* mov edx, [ebp-0xc] */
    II(0x100d68f8, 0x4)    mov(memw_a32(ds, edx + 0x10), ax);     /* mov [edx+0x10], ax */
    II(0x100d68fc, 0x6)    lea(edx, ebp - 0x31c);                 /* lea edx, [ebp+0xfffffce4] */   // ptr of buf read size 0x309
    II(0x100d6902, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x8));   /* movsx eax, word [ebp-0x8] */
    II(0x100d6906, 0x5)    calld(0x101345c2, 0x5dcb7);            /* call 0x101345c2 */             // read from file to ptr
    II(0x100d690b, 0x6)    mov(eax, memd_a32(ss, ebp - 0x318));   /* mov eax, [ebp+0xfffffce8] */
    II(0x100d6911, 0x3)    mov(edx, memd_a32(ss, ebp - 0xc));     /* mov edx, [ebp-0xc] */
    II(0x100d6914, 0x4)    mov(memw_a32(ds, edx + 0x8), ax);      /* mov [edx+0x8], ax */
    II(0x100d6918, 0x6)    mov(eax, memd_a32(ss, ebp - 0x316));   /* mov eax, [ebp+0xfffffcea] */
    II(0x100d691e, 0x3)    mov(edx, memd_a32(ss, ebp - 0xc));     /* mov edx, [ebp-0xc] */
    II(0x100d6921, 0x4)    mov(memw_a32(ds, edx + 0xa), ax);      /* mov [edx+0xa], ax */
    II(0x100d6925, 0x3)    mov(edx, memd_a32(ss, ebp - 0x10));    /* mov edx, [ebp-0x10] */
    II(0x100d6928, 0x3)    mov(edx, memd_a32(ds, edx + 0x8));     /* mov edx, [edx+0x8] */
    II(0x100d692b, 0x3)    mov(eax, memd_a32(ss, ebp - 0x10));    /* mov eax, [ebp-0x10] */
    II(0x100d692e, 0x2)    sub(edx, memd_a32(ds, eax));           /* sub edx, [eax] */
    II(0x100d6930, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x100d6933, 0x3)    mov(eax, memd_a32(ds, eax + 0x6));     /* mov eax, [eax+0x6] */
    II(0x100d6936, 0x3)    sar(eax, 0x10);                        /* sar eax, 0x10 */
    II(0x100d6939, 0x2)    sub(edx, eax);                         /* sub edx, eax */
    II(0x100d693b, 0x2)    mov(eax, edx);                         /* mov eax, edx */
    II(0x100d693d, 0x3)    sar(edx, 0x1f);                        /* sar edx, 0x1f */
    II(0x100d6940, 0x2)    sub(eax, edx);                         /* sub eax, edx */
    II(0x100d6942, 0x2)    sar(eax, 0x1);                         /* sar eax, 1 */
    II(0x100d6944, 0x2)    mov(edx, eax);                         /* mov edx, eax */
    II(0x100d6946, 0x3)    mov(eax, memd_a32(ss, ebp - 0x10));    /* mov eax, [ebp-0x10] */
    II(0x100d6949, 0x2)    add(edx, memd_a32(ds, eax));           /* add edx, [eax] */
    II(0x100d694b, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x100d694e, 0x4)    mov(memw_a32(ds, eax + 0x4), dx);      /* mov [eax+0x4], dx */
    II(0x100d6952, 0x3)    mov(edx, memd_a32(ss, ebp - 0x10));    /* mov edx, [ebp-0x10] */
    II(0x100d6955, 0x3)    mov(edx, memd_a32(ds, edx + 0xc));     /* mov edx, [edx+0xc] */
    II(0x100d6958, 0x3)    mov(eax, memd_a32(ss, ebp - 0x10));    /* mov eax, [ebp-0x10] */
    II(0x100d695b, 0x3)    sub(edx, memd_a32(ds, eax + 0x4));     /* sub edx, [eax+0x4] */
    II(0x100d695e, 0x2)    mov(eax, edx);                         /* mov eax, edx */
    II(0x100d6960, 0x3)    mov(edx, memd_a32(ss, ebp - 0xc));     /* mov edx, [ebp-0xc] */
    II(0x100d6963, 0x3)    mov(edx, memd_a32(ds, edx + 0x8));     /* mov edx, [edx+0x8] */
    II(0x100d6966, 0x3)    sar(edx, 0x10);                        /* sar edx, 0x10 */
    II(0x100d6969, 0x2)    sub(eax, edx);                         /* sub eax, edx */
    II(0x100d696b, 0x2)    mov(edx, eax);                         /* mov edx, eax */
    II(0x100d696d, 0x2)    mov(eax, edx);                         /* mov eax, edx */
    II(0x100d696f, 0x3)    sar(edx, 0x1f);                        /* sar edx, 0x1f */
    II(0x100d6972, 0x2)    sub(eax, edx);                         /* sub eax, edx */
    II(0x100d6974, 0x2)    sar(eax, 0x1);                         /* sar eax, 1 */
    II(0x100d6976, 0x3)    mov(edx, memd_a32(ss, ebp - 0x10));    /* mov edx, [ebp-0x10] */
    II(0x100d6979, 0x3)    add(eax, memd_a32(ds, edx + 0x4));     /* add eax, [edx+0x4] */
    II(0x100d697c, 0x3)    mov(edx, memd_a32(ss, ebp - 0xc));     /* mov edx, [ebp-0xc] */
    II(0x100d697f, 0x4)    mov(memw_a32(ds, edx + 0x6), ax);      /* mov [edx+0x6], ax */
    II(0x100d6983, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x100d6986, 0x6)    mov(memd_a32(ss, ebp - 0x320), eax);   /* mov [ebp+0xfffffce0], eax */
    II(0x100d698c, 0x6)    mov(eax, memd_a32(ss, ebp - 0x320));   /* mov eax, [ebp+0xfffffce0] */
    II(0x100d6992, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x100d6994, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x100d6995, 0x1)    popd(edi);                             /* pop edi */
    II(0x100d6996, 0x1)    popd(esi);                             /* pop esi */
    II(0x100d6997, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x100d6998, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V3(0x10111b8c, 0xf705c2c81ba27ee7, 0x20, {0x68, 0x10, 0x1, 0, 0, 0xe8, 0xbc, 0x41, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xe4, 0, 0, 0, 0x89, 0x45, 0xfc, 0xff, 0x35, 0x40, 0xd4, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xb8, 0x7, 0x47, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0xd0, 0x50, 0xe8, 0x40, 0x43, 0x5, 0, 0x83, 0xc4, 0x10, 0xba, 0x11, 0x47, 0x1a, 0x10, 0x8d, 0x45, 0xd0, 0xe8, 0x4e, 0xd8, 0xfd, 0xff, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x75, 0xc, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0xe9, 0xe, 0x2, 0, 0, 0x8b, 0x45, 0xcc, 0xe8, 0x7b, 0x4, 0x6, 0, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xe4, 0x43, 0xf6, 0xff, 0x89, 0x45, 0xe8, 0xb8, 0x46, 0, 0, 0, 0xe8, 0xd7, 0x43, 0xf6, 0xff, 0x89, 0x45, 0xec, 0xb8, 0x47, 0, 0, 0, 0xe8, 0xca, 0x43, 0xf6, 0xff, 0x89, 0x45, 0xf0, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xbd, 0x43, 0xf6, 0xff, 0x89, 0x45, 0xf4, 0xb8, 0x48, 0, 0, 0, 0xe8, 0xb0, 0x43, 0xf6, 0xff, 0x89, 0x45, 0xf8, 0xb8, 0x4d, 0, 0, 0, 0xe8, 0xa3, 0x43, 0xf6, 0xff, 0x89, 0x45, 0xe4, 0xb8, 0x4e, 0, 0, 0, 0xe8, 0x96, 0x43, 0xf6, 0xff, 0x89, 0x45, 0xc4, 0xb8, 0x4f, 0, 0, 0, 0xe8, 0x89, 0x43, 0xf6, 0xff, 0x89, 0x45, 0xc0, 0xb8, 0x50, 0, 0, 0, 0xe8, 0x7c, 0x43, 0xf6, 0xff, 0x89, 0x45, 0xbc, 0xb9, 0x1e, 0, 0, 0, 0x8d, 0x5d, 0x9c, 0xba, 0x32, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x7, 0x46, 0xff, 0xff, 0xb9, 0x1e, 0, 0, 0, 0x8d, 0x9d, 0x7c, 0xff, 0xff, 0xff, 0xba, 0x63, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0xed, 0x45, 0xff, 0xff, 0xb9, 0x1e, 0, 0, 0, 0x8d, 0x9d, 0x5c, 0xff, 0xff, 0xff, 0xba, 0x64, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0xd3, 0x45, 0xff, 0xff, 0xb9, 0x1e, 0, 0, 0, 0x8d, 0x9d, 0x3c, 0xff, 0xff, 0xff, 0xba, 0x65, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0xb9, 0x45, 0xff, 0xff, 0xb9, 0x1e, 0, 0, 0, 0x8d, 0x9d, 0x1c, 0xff, 0xff, 0xff, 0xba, 0x66, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x9f, 0x45, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x3d, 0, 0, 0, 0xe8, 0xc, 0x8e, 0xfb, 0xff, 0xba, 0x5, 0, 0, 0, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0xfd, 0x8d, 0xfb, 0xff, 0xb8, 0xa, 0, 0, 0, 0xe8, 0xb1, 0xd3, 0xfe, 0xff, 0xf, 0xbf, 0x55, 0xe8, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xe5, 0x8d, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xec, 0xb8, 0x46, 0, 0, 0, 0xe8, 0xd7, 0x8d, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xf0, 0xb8, 0x47, 0, 0, 0, 0xe8, 0xc9, 0x8d, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xf4, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xbb, 0x8d, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xf8, 0xb8, 0x48, 0, 0, 0, 0xe8, 0xad, 0x8d, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xe4, 0xb8, 0x4d, 0, 0, 0, 0xe8, 0x9f, 0x8d, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xc4, 0xb8, 0x4e, 0, 0, 0, 0xe8, 0x91, 0x8d, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xc0, 0xb8, 0x4f, 0, 0, 0, 0xe8, 0x83, 0x8d, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xbc, 0xb8, 0x50, 0, 0, 0, 0xe8, 0x75, 0x8d, 0xfb, 0xff, 0x8d, 0x5d, 0x9c, 0xba, 0x32, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x6c, 0x44, 0xff, 0xff, 0x8d, 0x9d, 0x7c, 0xff, 0xff, 0xff, 0xba, 0x63, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x57, 0x44, 0xff, 0xff, 0x8d, 0x9d, 0x5c, 0xff, 0xff, 0xff, 0xba, 0x64, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x42, 0x44, 0xff, 0xff, 0x8d, 0x9d, 0x3c, 0xff, 0xff, 0xff, 0xba, 0x65, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x2d, 0x44, 0xff, 0xff, 0x8d, 0x9d, 0x1c, 0xff, 0xff, 0xff, 0xba, 0x66, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x18, 0x44, 0xff, 0xff, 0xc7, 0x45, 0xc8, 0x1, 0, 0, 0, 0x8b, 0x45, 0xc8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x10111b8c, 0x20);
    II(0x10111b8c, 0x5)     pushd(0x110);                       /* push dword 0x110 */
    II(0x10111b91, 0x5)     calld(sys_check_available_stack_size, 0x541bc); /* call 0x10165d52 */
    II(0x10111b96, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x10111b97, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x10111b98, 0x1)     pushd(edx);                         /* push edx */
    II(0x10111b99, 0x1)     pushd(esi);                         /* push esi */
    II(0x10111b9a, 0x1)     pushd(edi);                         /* push edi */
    II(0x10111b9b, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x10111b9c, 0x2)     mov(ebp, esp);                      /* mov ebp, esp */
    II(0x10111b9e, 0x6)     sub(esp, 0xe4);                     /* sub esp, 0xe4 */
    II(0x10111ba4, 0x3)     mov(memd_a32(ss, ebp - 0x4), eax);  /* mov [ebp-0x4], eax */
    II(0x10111ba7, 0x6)     pushd(memd_a32(ds, 0x101bd440));    /* push dword [0x101bd440] */
    II(0x10111bad, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x4)); /* movsx eax, word [ebp-0x4] */
    II(0x10111bb1, 0x1)     pushd(eax);                         /* push eax */
    II(0x10111bb2, 0x5)     mov(eax, 0x101a4707);               /* mov eax, 0x101a4707 */ /* "save%i.%s" */
    II(0x10111bb7, 0x1)     pushd(eax);                         /* push eax */
    II(0x10111bb8, 0x3)     lea(eax, ebp - 0x30);               /* lea eax, [ebp-0x30] */
    II(0x10111bbb, 0x1)     pushd(eax);                         /* push eax */
    II(0x10111bbc, 0x5)     calld(sys_sprintf, 0x54340);           /* call 0x10165f01 */
    II(0x10111bc1, 0x3)     add(esp, 0x10);                     /* add esp, 0x10 */
    II(0x10111bc4, 0x5)     mov(edx, 0x101a4711);               /* mov edx, 0x101a4711 */ /* "rb" */
    II(0x10111bc9, 0x3)     lea(eax, ebp - 0x30);               /* lea eax, [ebp-0x30] */
    II(0x10111bcc, 0x5)     calld(my_fopen, -0x227b2);           /* call 0x100ef41f */             // SAVE1.DMO
    II(0x10111bd1, 0x3)     mov(memd_a32(ss, ebp - 0x34), eax); /* mov [ebp-0x34], eax */
    II(0x10111bd4, 0x4)     cmp(memd_a32(ss, ebp - 0x34), 0);   /* cmp dword [ebp-0x34], 0x0 */
    II(0x10111bd8, 0x2)     jnzd(0x10111be6, 0xc);              /* jnz 0x10111be6 */
    II(0x10111bda, 0x7)     mov(memd_a32(ss, ebp - 0x38), 0);   /* mov dword [ebp-0x38], 0x0 */
    II(0x10111be1, 0x5)     jmpd(0x10111df4, 0x20e);            /* jmp 0x10111df4 */
l_0x10111be6:
    II(0x10111be6, 0x3)     mov(eax, memd_a32(ss, ebp - 0x34)); /* mov eax, [ebp-0x34] */
    II(0x10111be9, 0x5)     calld(sys_fclose, 0x6047b);            /* call 0x10172069 */             // Эм... и тут же его закрываем??? Проверка наличия файла?
    II(0x10111bee, 0x5)     mov(eax, 0x4c);                     /* mov eax, 0x4c */
    II(0x10111bf3, 0x5)     calld(0x10075fdc, -0x9bc1c);        /* call 0x10075fdc */
    II(0x10111bf8, 0x3)     mov(memd_a32(ss, ebp - 0x18), eax); /* mov [ebp-0x18], eax */
    II(0x10111bfb, 0x5)     mov(eax, 0x46);                     /* mov eax, 0x46 */
    II(0x10111c00, 0x5)     calld(0x10075fdc, -0x9bc29);        /* call 0x10075fdc */
    II(0x10111c05, 0x3)     mov(memd_a32(ss, ebp - 0x14), eax); /* mov [ebp-0x14], eax */
    II(0x10111c08, 0x5)     mov(eax, 0x47);                     /* mov eax, 0x47 */
    II(0x10111c0d, 0x5)     calld(0x10075fdc, -0x9bc36);        /* call 0x10075fdc */
    II(0x10111c12, 0x3)     mov(memd_a32(ss, ebp - 0x10), eax); /* mov [ebp-0x10], eax */
    II(0x10111c15, 0x5)     mov(eax, 0x49);                     /* mov eax, 0x49 */
    II(0x10111c1a, 0x5)     calld(0x10075fdc, -0x9bc43);        /* call 0x10075fdc */
    II(0x10111c1f, 0x3)     mov(memd_a32(ss, ebp - 0xc), eax);  /* mov [ebp-0xc], eax */
    II(0x10111c22, 0x5)     mov(eax, 0x48);                     /* mov eax, 0x48 */
    II(0x10111c27, 0x5)     calld(0x10075fdc, -0x9bc50);        /* call 0x10075fdc */
    II(0x10111c2c, 0x3)     mov(memd_a32(ss, ebp - 0x8), eax);  /* mov [ebp-0x8], eax */
    II(0x10111c2f, 0x5)     mov(eax, 0x4d);                     /* mov eax, 0x4d */
    II(0x10111c34, 0x5)     calld(0x10075fdc, -0x9bc5d);        /* call 0x10075fdc */
    II(0x10111c39, 0x3)     mov(memd_a32(ss, ebp - 0x1c), eax); /* mov [ebp-0x1c], eax */
    II(0x10111c3c, 0x5)     mov(eax, 0x4e);                     /* mov eax, 0x4e */
    II(0x10111c41, 0x5)     calld(0x10075fdc, -0x9bc6a);        /* call 0x10075fdc */
    II(0x10111c46, 0x3)     mov(memd_a32(ss, ebp - 0x3c), eax); /* mov [ebp-0x3c], eax */
    II(0x10111c49, 0x5)     mov(eax, 0x4f);                     /* mov eax, 0x4f */
    II(0x10111c4e, 0x5)     calld(0x10075fdc, -0x9bc77);        /* call 0x10075fdc */
    II(0x10111c53, 0x3)     mov(memd_a32(ss, ebp - 0x40), eax); /* mov [ebp-0x40], eax */
    II(0x10111c56, 0x5)     mov(eax, 0x50);                     /* mov eax, 0x50 */
    II(0x10111c5b, 0x5)     calld(0x10075fdc, -0x9bc84);        /* call 0x10075fdc */
    II(0x10111c60, 0x3)     mov(memd_a32(ss, ebp - 0x44), eax); /* mov [ebp-0x44], eax */
    II(0x10111c63, 0x5)     mov(ecx, 0x1e);                     /* mov ecx, 0x1e */
    II(0x10111c68, 0x3)     lea(ebx, ebp - 0x64);               /* lea ebx, [ebp-0x64] */
    II(0x10111c6b, 0x5)     mov(edx, 0x32);                     /* mov edx, 0x32 */
    II(0x10111c70, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111c75, 0x5)     calld(0x10106281, -0xb9f9);         /* call 0x10106281 */
    II(0x10111c7a, 0x5)     mov(ecx, 0x1e);                     /* mov ecx, 0x1e */
    II(0x10111c7f, 0x6)     lea(ebx, ebp - 0x84);               /* lea ebx, [ebp+0xffffff7c] */
    II(0x10111c85, 0x5)     mov(edx, 0x63);                     /* mov edx, 0x63 */
    II(0x10111c8a, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111c8f, 0x5)     calld(0x10106281, -0xba13);         /* call 0x10106281 */
    II(0x10111c94, 0x5)     mov(ecx, 0x1e);                     /* mov ecx, 0x1e */
    II(0x10111c99, 0x6)     lea(ebx, ebp - 0xa4);               /* lea ebx, [ebp+0xffffff5c] */
    II(0x10111c9f, 0x5)     mov(edx, 0x64);                     /* mov edx, 0x64 */
    II(0x10111ca4, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111ca9, 0x5)     calld(0x10106281, -0xba2d);         /* call 0x10106281 */
    II(0x10111cae, 0x5)     mov(ecx, 0x1e);                     /* mov ecx, 0x1e */
    II(0x10111cb3, 0x6)     lea(ebx, ebp - 0xc4);               /* lea ebx, [ebp+0xffffff3c] */
    II(0x10111cb9, 0x5)     mov(edx, 0x65);                     /* mov edx, 0x65 */
    II(0x10111cbe, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111cc3, 0x5)     calld(0x10106281, -0xba47);         /* call 0x10106281 */
    II(0x10111cc8, 0x5)     mov(ecx, 0x1e);                     /* mov ecx, 0x1e */
    II(0x10111ccd, 0x6)     lea(ebx, ebp - 0xe4);               /* lea ebx, [ebp+0xffffff1c] */
    II(0x10111cd3, 0x5)     mov(edx, 0x66);                     /* mov edx, 0x66 */
    II(0x10111cd8, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111cdd, 0x5)     calld(0x10106281, -0xba61);         /* call 0x10106281 */
    II(0x10111ce2, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x4)); /* movsx edx, word [ebp-0x4] */
    II(0x10111ce6, 0x5)     mov(eax, 0x3d);                     /* mov eax, 0x3d */
    II(0x10111ceb, 0x5)     calld(0x100caafc, -0x471f4);        /* call 0x100caafc */
    II(0x10111cf0, 0x5)     mov(edx, 0x5);                      /* mov edx, 0x5 */
    II(0x10111cf5, 0x5)     mov(eax, 0x3e);                     /* mov eax, 0x3e */
    II(0x10111cfa, 0x5)     calld(0x100caafc, -0x47203);        /* call 0x100caafc */
    II(0x10111cff, 0x5)     mov(eax, 0xa);                      /* mov eax, 0xa */
    II(0x10111d04, 0x5)     calld(0x100ff0ba, -0x12c4f);        /* call 0x100ff0ba */
    II(0x10111d09, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10111d0d, 0x5)     mov(eax, 0x4c);                     /* mov eax, 0x4c */
    II(0x10111d12, 0x5)     calld(0x100caafc, -0x4721b);        /* call 0x100caafc */
    II(0x10111d17, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10111d1b, 0x5)     mov(eax, 0x46);                     /* mov eax, 0x46 */
    II(0x10111d20, 0x5)     calld(0x100caafc, -0x47229);        /* call 0x100caafc */
    II(0x10111d25, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10111d29, 0x5)     mov(eax, 0x47);                     /* mov eax, 0x47 */
    II(0x10111d2e, 0x5)     calld(0x100caafc, -0x47237);        /* call 0x100caafc */
    II(0x10111d33, 0x4)     movsx(edx, memw_a32(ss, ebp - 0xc)); /* movsx edx, word [ebp-0xc] */
    II(0x10111d37, 0x5)     mov(eax, 0x49);                     /* mov eax, 0x49 */
    II(0x10111d3c, 0x5)     calld(0x100caafc, -0x47245);        /* call 0x100caafc */
    II(0x10111d41, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x8)); /* movsx edx, word [ebp-0x8] */
    II(0x10111d45, 0x5)     mov(eax, 0x48);                     /* mov eax, 0x48 */
    II(0x10111d4a, 0x5)     calld(0x100caafc, -0x47253);        /* call 0x100caafc */
    II(0x10111d4f, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10111d53, 0x5)     mov(eax, 0x4d);                     /* mov eax, 0x4d */
    II(0x10111d58, 0x5)     calld(0x100caafc, -0x47261);        /* call 0x100caafc */
    II(0x10111d5d, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x10111d61, 0x5)     mov(eax, 0x4e);                     /* mov eax, 0x4e */
    II(0x10111d66, 0x5)     calld(0x100caafc, -0x4726f);        /* call 0x100caafc */
    II(0x10111d6b, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x10111d6f, 0x5)     mov(eax, 0x4f);                     /* mov eax, 0x4f */
    II(0x10111d74, 0x5)     calld(0x100caafc, -0x4727d);        /* call 0x100caafc */
    II(0x10111d79, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x44)); /* movsx edx, word [ebp-0x44] */
    II(0x10111d7d, 0x5)     mov(eax, 0x50);                     /* mov eax, 0x50 */
    II(0x10111d82, 0x5)     calld(0x100caafc, -0x4728b);        /* call 0x100caafc */
    II(0x10111d87, 0x3)     lea(ebx, ebp - 0x64);               /* lea ebx, [ebp-0x64] */
    II(0x10111d8a, 0x5)     mov(edx, 0x32);                     /* mov edx, 0x32 */
    II(0x10111d8f, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111d94, 0x5)     calld(0x10106205, -0xbb94);         /* call 0x10106205 */
    II(0x10111d99, 0x6)     lea(ebx, ebp - 0x84);               /* lea ebx, [ebp+0xffffff7c] */
    II(0x10111d9f, 0x5)     mov(edx, 0x63);                     /* mov edx, 0x63 */
    II(0x10111da4, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111da9, 0x5)     calld(0x10106205, -0xbba9);         /* call 0x10106205 */
    II(0x10111dae, 0x6)     lea(ebx, ebp - 0xa4);               /* lea ebx, [ebp+0xffffff5c] */
    II(0x10111db4, 0x5)     mov(edx, 0x64);                     /* mov edx, 0x64 */
    II(0x10111db9, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111dbe, 0x5)     calld(0x10106205, -0xbbbe);         /* call 0x10106205 */
    II(0x10111dc3, 0x6)     lea(ebx, ebp - 0xc4);               /* lea ebx, [ebp+0xffffff3c] */
    II(0x10111dc9, 0x5)     mov(edx, 0x65);                     /* mov edx, 0x65 */
    II(0x10111dce, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111dd3, 0x5)     calld(0x10106205, -0xbbd3);         /* call 0x10106205 */
    II(0x10111dd8, 0x6)     lea(ebx, ebp - 0xe4);               /* lea ebx, [ebp+0xffffff1c] */
    II(0x10111dde, 0x5)     mov(edx, 0x66);                     /* mov edx, 0x66 */
    II(0x10111de3, 0x5)     mov(eax, 0x101c39c8);               /* mov eax, 0x101c39c8 */
    II(0x10111de8, 0x5)     calld(0x10106205, -0xbbe8);         /* call 0x10106205 */
    II(0x10111ded, 0x7)     mov(memd_a32(ss, ebp - 0x38), 0x1); /* mov dword [ebp-0x38], 0x1 */
l_0x10111df4:
    II(0x10111df4, 0x3)     mov(eax, memd_a32(ss, ebp - 0x38)); /* mov eax, [ebp-0x38] */
    II(0x10111df7, 0x2)     mov(esp, ebp);                      /* mov esp, ebp */
    II(0x10111df9, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x10111dfa, 0x1)     popd(edi);                          /* pop edi */
    II(0x10111dfb, 0x1)     popd(esi);                          /* pop esi */
    II(0x10111dfc, 0x1)     popd(edx);                          /* pop edx */
    II(0x10111dfd, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10111dfe, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10111dff, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x10133cdc, 0x9a8de204df8bb5c8, 0x20, {0x68, 0xb0, 0, 0, 0, 0xe8, 0x6c, 0x20, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x94, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x61, 0x7, 0, 0, 0xe8, 0xea, 0x4, 0, 0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0xf, 0x84, 0xc1, 0x2, 0, 0, 0xb8, 0x61, 0x7, 0, 0, 0xe8, 0x26, 0x6, 0, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xf4, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0x83, 0x7d, 0xf8, 0x5d, 0xf, 0x8d, 0x95, 0x2, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x55, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xe8, 0x8a, 0x12, 0x88, 0x54, 0x28, 0x84, 0xf, 0xbf, 0x45, 0xe8, 0x8a, 0x44, 0x28, 0x84, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xd, 0x75, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x4d, 0xe8, 0x83, 0x45, 0xf0, 0xff, 0x83, 0x7d, 0xf0, 0, 0x74, 0x15, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x98, 0x8a, 0x44, 0x28, 0x84, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xa, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0xb5, 0xf, 0xbf, 0x45, 0xe8, 0xc6, 0x44, 0x28, 0x84, 0, 0x80, 0x7d, 0x84, 0x3b, 0x74, 0xa, 0x31, 0xc0, 0x8a, 0x45, 0x84, 0x83, 0xf8, 0xa, 0x75, 0x5, 0xe9, 0x20, 0x2, 0, 0, 0xb8, 0x24, 0, 0, 0, 0xe8, 0x54, 0x20, 0x3, 0, 0x89, 0x45, 0x80, 0x8b, 0x45, 0x80, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x7c, 0xff, 0xff, 0xff, 0, 0x74, 0x1c, 0x8b, 0x45, 0x80, 0xe8, 0x3c, 0xf7, 0x2, 0, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x74, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x6, 0x2a, 0xf4, 0xff, 0xc7, 0x85, 0x6c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0x49, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x11, 0x29, 0xf4, 0xff, 0x66, 0x89, 0x50, 0x8, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0x2a, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xf2, 0x28, 0xf4, 0xff, 0x66, 0x89, 0x50, 0xa, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0xb, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xd3, 0x28, 0xf4, 0xff, 0x66, 0x89, 0x50, 0xc, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0xec, 0xfd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xb4, 0x28, 0xf4, 0xff, 0x66, 0x89, 0x50, 0xe, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0xcd, 0xfd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x95, 0x28, 0xf4, 0xff, 0x88, 0x50, 0x16, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0xaf, 0xfd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x77, 0x28, 0xf4, 0xff, 0x66, 0x89, 0x50, 0x10, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0x90, 0xfd, 0xff, 0xff, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0x82, 0xfd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x4a, 0x28, 0xf4, 0xff, 0x66, 0x89, 0x50, 0x12, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0x63, 0xfd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x2b, 0x28, 0xf4, 0xff, 0x66, 0x89, 0x50, 0x14, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0x44, 0xfd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xc, 0x28, 0xf4, 0xff, 0x66, 0x89, 0x50, 0x17, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0x25, 0xfd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xed, 0x27, 0xf4, 0xff, 0x66, 0x89, 0x50, 0x19, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0x6, 0xfd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xce, 0x27, 0xf4, 0xff, 0x66, 0x89, 0x50, 0x1b, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x84, 0xe8, 0xe7, 0xfc, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xaf, 0x27, 0xf4, 0xff, 0x66, 0x89, 0x50, 0x1d, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xa0, 0x27, 0xf4, 0xff, 0x66, 0xc7, 0x40, 0x1f, 0, 0, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xeb, 0x27, 0xf4, 0xff, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xb5, 0x25, 0, 0, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x2a, 0x1f, 0xf4, 0xff, 0xe9, 0x61, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xec, 0xe8, 0x95, 0x1f, 0x3, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x10133cdc, 0x20);
    II(0x10133cdc, 0x5)     pushd(0xb0);                        /* push dword 0xb0 */
    II(0x10133ce1, 0x5)     calld(sys_check_available_stack_size, 0x3206c); /* call 0x10165d52 */
    II(0x10133ce6, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x10133ce7, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x10133ce8, 0x1)     pushd(edx);                         /* push edx */
    II(0x10133ce9, 0x1)     pushd(esi);                         /* push esi */
    II(0x10133cea, 0x1)     pushd(edi);                         /* push edi */
    II(0x10133ceb, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x10133cec, 0x2)     mov(ebp, esp);                      /* mov ebp, esp */
    II(0x10133cee, 0x6)     sub(esp, 0x94);                     /* sub esp, 0x94 */
    II(0x10133cf4, 0x3)     mov(memd_a32(ss, ebp - 0x4), eax);  /* mov [ebp-0x4], eax */
    II(0x10133cf7, 0x5)     mov(eax, 0x761);                    /* mov eax, 0x761 */
    II(0x10133cfc, 0x5)     calld(get_res_data_by_id_malloc, 0x4ea); /* call 0x101341eb */      // ";Attribute Table\r\n; "...
    II(0x10133d01, 0x3)     mov(memd_a32(ss, ebp - 0x14), eax); /* mov [ebp-0x14], eax */
    II(0x10133d04, 0x4)     cmp(memd_a32(ss, ebp - 0x14), 0);   /* cmp dword [ebp-0x14], 0x0 */
    II(0x10133d08, 0x6)     jzd(0x10133fcf, 0x2c1);             /* jz dword 0x10133fcf */
    II(0x10133d0e, 0x5)     mov(eax, 0x761);                    /* mov eax, 0x761 */
    II(0x10133d13, 0x5)     calld(0x1013433e, 0x626);           /* call 0x1013433e */
    II(0x10133d18, 0x3)     mov(memd_a32(ss, ebp - 0x10), eax); /* mov [ebp-0x10], eax */
    II(0x10133d1b, 0x3)     mov(eax, memd_a32(ss, ebp - 0x14)); /* mov eax, [ebp-0x14] */
    II(0x10133d1e, 0x3)     mov(memd_a32(ss, ebp - 0xc), eax);  /* mov [ebp-0xc], eax */
    II(0x10133d21, 0x7)     mov(memd_a32(ss, ebp - 0x8), 0);    /* mov dword [ebp-0x8], 0x0 */
l_0x10133d28:
    II(0x10133d28, 0x4)     cmp(memd_a32(ss, ebp - 0x8), 0x5d); /* cmp dword [ebp-0x8], 0x5d */
    II(0x10133d2c, 0x6)     jged(0x10133fc7, 0x295);            /* jge dword 0x10133fc7 */
    II(0x10133d32, 0x7)     mov(memd_a32(ss, ebp - 0x18), 0);   /* mov dword [ebp-0x18], 0x0 */
l_0x10133d39:
    II(0x10133d39, 0x3)     mov(edx, memd_a32(ss, ebp - 0xc));  /* mov edx, [ebp-0xc] */
    II(0x10133d3c, 0x3)     inc(memd_a32(ss, ebp - 0xc));       /* inc dword [ebp-0xc] */
    II(0x10133d3f, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10133d43, 0x2)     mov(dl, memb_a32(ds, edx));         /* mov dl, [edx] */
    II(0x10133d45, 0x4)     mov(memb_a32(ds, eax + ebp - 0x7c), dl); /* mov [eax+ebp-0x7c], dl */
    II(0x10133d49, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10133d4d, 0x4)     mov(al, memb_a32(ds, eax + ebp - 0x7c)); /* mov al, [eax+ebp-0x7c] */
    II(0x10133d51, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10133d56, 0x3)     cmp(eax, 0xd);                      /* cmp eax, 0xd */
    II(0x10133d59, 0x2)     jnzd(0x10133d61, 0x6);              /* jnz 0x10133d61 */
    II(0x10133d5b, 0x3)     mov(eax, memd_a32(ss, ebp - 0x18)); /* mov eax, [ebp-0x18] */
    II(0x10133d5e, 0x3)     dec(memd_a32(ss, ebp - 0x18));      /* dec dword [ebp-0x18] */
l_0x10133d61:
    II(0x10133d61, 0x4)     add(memd_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* add dword [ebp-0x10], 0xff */
    II(0x10133d65, 0x4)     cmp(memd_a32(ss, ebp - 0x10), 0);   /* cmp dword [ebp-0x10], 0x0 */
    II(0x10133d69, 0x2)     jzd(0x10133d80, 0x15);              /* jz 0x10133d80 */
    II(0x10133d6b, 0x3)     mov(eax, memd_a32(ss, ebp - 0x18)); /* mov eax, [ebp-0x18] */
    II(0x10133d6e, 0x3)     inc(memd_a32(ss, ebp - 0x18));      /* inc dword [ebp-0x18] */
    II(0x10133d71, 0x1)     cwde();                             /* cwde  */
    II(0x10133d72, 0x4)     mov(al, memb_a32(ds, eax + ebp - 0x7c)); /* mov al, [eax+ebp-0x7c] */
    II(0x10133d76, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10133d7b, 0x3)     cmp(eax, 0xa);                      /* cmp eax, 0xa */
    II(0x10133d7e, 0x2)     jnzd(0x10133d82, 0x2);              /* jnz 0x10133d82 */
l_0x10133d80:
    II(0x10133d80, 0x2)     jmpd(0x10133d84, 0x2);              /* jmp 0x10133d84 */
l_0x10133d82:
    II(0x10133d82, 0x2)     jmpd(0x10133d39, -0x4b);            /* jmp 0x10133d39 */
l_0x10133d84:
    II(0x10133d84, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10133d88, 0x5)     mov(memb_a32(ds, eax + ebp - 0x7c), 0); /* mov byte [eax+ebp-0x7c], 0x0 */
    II(0x10133d8d, 0x4)     cmp(memb_a32(ss, ebp - 0x7c), 0x3b); /* cmp byte [ebp-0x7c], 0x3b */
    II(0x10133d91, 0x2)     jzd(0x10133d9d, 0xa);               /* jz 0x10133d9d */
    II(0x10133d93, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10133d95, 0x3)     mov(al, memb_a32(ss, ebp - 0x7c));  /* mov al, [ebp-0x7c] */
    II(0x10133d98, 0x3)     cmp(eax, 0xa);                      /* cmp eax, 0xa */
    II(0x10133d9b, 0x2)     jnzd(0x10133da2, 0x5);              /* jnz 0x10133da2 */
l_0x10133d9d:
    II(0x10133d9d, 0x5)     jmpd(0x10133fc2, 0x220);            /* jmp 0x10133fc2 */
l_0x10133da2:
    II(0x10133da2, 0x5)     mov(eax, 0x24);                     /* mov eax, 0x24 */
    II(0x10133da7, 0x5)     calld(sys_malloc_v2, 0x32054);        /* call 0x10165e00 */
    II(0x10133dac, 0x3)     mov(memd_a32(ss, ebp - 0x80), eax); /* mov [ebp-0x80], eax */
    II(0x10133daf, 0x3)     mov(eax, memd_a32(ss, ebp - 0x80)); /* mov eax, [ebp-0x80] */
    II(0x10133db2, 0x6)     mov(memd_a32(ss, ebp - 0x84), eax); /* mov [ebp+0xffffff7c], eax */
    II(0x10133db8, 0x7)     cmp(memd_a32(ss, ebp - 0x84), 0);   /* cmp dword [ebp+0xffffff7c], 0x0 */
    II(0x10133dbf, 0x2)     jzd(0x10133ddd, 0x1c);              /* jz 0x10133ddd */
    II(0x10133dc1, 0x3)     mov(eax, memd_a32(ss, ebp - 0x80)); /* mov eax, [ebp-0x80] */
    II(0x10133dc4, 0x5)     calld(0x10163505, 0x2f73c);         /* call 0x10163505 */
    II(0x10133dc9, 0x6)     mov(memd_a32(ss, ebp - 0x88), eax); /* mov [ebp+0xffffff78], eax */
    II(0x10133dcf, 0x6)     mov(eax, memd_a32(ss, ebp - 0x88)); /* mov eax, [ebp+0xffffff78] */
    II(0x10133dd5, 0x6)     mov(memd_a32(ss, ebp - 0x8c), eax); /* mov [ebp+0xffffff74], eax */
    II(0x10133ddb, 0x2)     jmpd(0x10133de9, 0xc);              /* jmp 0x10133de9 */
l_0x10133ddd:
    II(0x10133ddd, 0x6)     mov(eax, memd_a32(ss, ebp - 0x84)); /* mov eax, [ebp+0xffffff7c] */
    II(0x10133de3, 0x6)     mov(memd_a32(ss, ebp - 0x8c), eax); /* mov [ebp+0xffffff74], eax */
l_0x10133de9:
    II(0x10133de9, 0x6)     mov(edx, memd_a32(ss, ebp - 0x8c)); /* mov edx, [ebp+0xffffff74] */
    II(0x10133def, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133df5, 0x5)     calld(0x10076800, -0xbd5fa);        /* call 0x10076800 */
    II(0x10133dfa, 0xa)     mov(memd_a32(ss, ebp - 0x94), 0);   /* mov dword [ebp+0xffffff6c], 0x0 */
    II(0x10133e04, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133e0a, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133e0d, 0x5)     calld(0x10133c5b, -0x1b7);          /* call 0x10133c5b */
    II(0x10133e12, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133e14, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133e1a, 0x5)     calld(0x10076730, -0xbd6ef);        /* call 0x10076730 */
    II(0x10133e1f, 0x4)     mov(memw_a32(ds, eax + 0x8), dx);   /* mov [eax+0x8], dx */
    II(0x10133e23, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133e29, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133e2c, 0x5)     calld(0x10133c5b, -0x1d6);          /* call 0x10133c5b */
    II(0x10133e31, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133e33, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133e39, 0x5)     calld(0x10076730, -0xbd70e);        /* call 0x10076730 */
    II(0x10133e3e, 0x4)     mov(memw_a32(ds, eax + 0xa), dx);   /* mov [eax+0xa], dx */
    II(0x10133e42, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133e48, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133e4b, 0x5)     calld(0x10133c5b, -0x1f5);          /* call 0x10133c5b */
    II(0x10133e50, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133e52, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133e58, 0x5)     calld(0x10076730, -0xbd72d);        /* call 0x10076730 */
    II(0x10133e5d, 0x4)     mov(memw_a32(ds, eax + 0xc), dx);   /* mov [eax+0xc], dx */
    II(0x10133e61, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133e67, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133e6a, 0x5)     calld(0x10133c5b, -0x214);          /* call 0x10133c5b */
    II(0x10133e6f, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133e71, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133e77, 0x5)     calld(0x10076730, -0xbd74c);        /* call 0x10076730 */
    II(0x10133e7c, 0x4)     mov(memw_a32(ds, eax + 0xe), dx);   /* mov [eax+0xe], dx */
    II(0x10133e80, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133e86, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133e89, 0x5)     calld(0x10133c5b, -0x233);          /* call 0x10133c5b */
    II(0x10133e8e, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133e90, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133e96, 0x5)     calld(0x10076730, -0xbd76b);        /* call 0x10076730 */
    II(0x10133e9b, 0x3)     mov(memb_a32(ds, eax + 0x16), dl);  /* mov [eax+0x16], dl */
    II(0x10133e9e, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133ea4, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133ea7, 0x5)     calld(0x10133c5b, -0x251);          /* call 0x10133c5b */
    II(0x10133eac, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133eae, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133eb4, 0x5)     calld(0x10076730, -0xbd789);        /* call 0x10076730 */
    II(0x10133eb9, 0x4)     mov(memw_a32(ds, eax + 0x10), dx);  /* mov [eax+0x10], dx */
    II(0x10133ebd, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133ec3, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133ec6, 0x5)     calld(0x10133c5b, -0x270);          /* call 0x10133c5b */
    II(0x10133ecb, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133ed1, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133ed4, 0x5)     calld(0x10133c5b, -0x27e);          /* call 0x10133c5b */
    II(0x10133ed9, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133edb, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133ee1, 0x5)     calld(0x10076730, -0xbd7b6);        /* call 0x10076730 */
    II(0x10133ee6, 0x4)     mov(memw_a32(ds, eax + 0x12), dx);  /* mov [eax+0x12], dx */
    II(0x10133eea, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133ef0, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133ef3, 0x5)     calld(0x10133c5b, -0x29d);          /* call 0x10133c5b */
    II(0x10133ef8, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133efa, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133f00, 0x5)     calld(0x10076730, -0xbd7d5);        /* call 0x10076730 */
    II(0x10133f05, 0x4)     mov(memw_a32(ds, eax + 0x14), dx);  /* mov [eax+0x14], dx */
    II(0x10133f09, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133f0f, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133f12, 0x5)     calld(0x10133c5b, -0x2bc);          /* call 0x10133c5b */
    II(0x10133f17, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133f19, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133f1f, 0x5)     calld(0x10076730, -0xbd7f4);        /* call 0x10076730 */
    II(0x10133f24, 0x4)     mov(memw_a32(ds, eax + 0x17), dx);  /* mov [eax+0x17], dx */
    II(0x10133f28, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133f2e, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133f31, 0x5)     calld(0x10133c5b, -0x2db);          /* call 0x10133c5b */
    II(0x10133f36, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133f38, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133f3e, 0x5)     calld(0x10076730, -0xbd813);        /* call 0x10076730 */
    II(0x10133f43, 0x4)     mov(memw_a32(ds, eax + 0x19), dx);  /* mov [eax+0x19], dx */
    II(0x10133f47, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133f4d, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133f50, 0x5)     calld(0x10133c5b, -0x2fa);          /* call 0x10133c5b */
    II(0x10133f55, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133f57, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133f5d, 0x5)     calld(0x10076730, -0xbd832);        /* call 0x10076730 */
    II(0x10133f62, 0x4)     mov(memw_a32(ds, eax + 0x1b), dx);  /* mov [eax+0x1b], dx */
    II(0x10133f66, 0x6)     lea(edx, ebp - 0x94);               /* lea edx, [ebp+0xffffff6c] */
    II(0x10133f6c, 0x3)     lea(eax, ebp - 0x7c);               /* lea eax, [ebp-0x7c] */
    II(0x10133f6f, 0x5)     calld(0x10133c5b, -0x319);          /* call 0x10133c5b */
    II(0x10133f74, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10133f76, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133f7c, 0x5)     calld(0x10076730, -0xbd851);        /* call 0x10076730 */
    II(0x10133f81, 0x4)     mov(memw_a32(ds, eax + 0x1d), dx);  /* mov [eax+0x1d], dx */
    II(0x10133f85, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133f8b, 0x5)     calld(0x10076730, -0xbd860);        /* call 0x10076730 */
    II(0x10133f90, 0x6)     mov(memw_a32(ds, eax + 0x1f), 0);   /* mov word [eax+0x1f], 0x0 */
    II(0x10133f96, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133f9c, 0x5)     calld(0x1007678c, -0xbd815);        /* call 0x1007678c */
    II(0x10133fa1, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */
    II(0x10133fa3, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x8)); /* movsx edx, word [ebp-0x8] */
    II(0x10133fa7, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x10133faa, 0x5)     calld(0x10136564, 0x25b5);          /* call 0x10136564 */
    II(0x10133faf, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10133fb2, 0x3)     inc(memd_a32(ss, ebp - 0x8));       /* inc dword [ebp-0x8] */
    II(0x10133fb5, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10133fb7, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x10133fbd, 0x5)     calld(0x10075eec, -0xbe0d6);        /* call 0x10075eec */
l_0x10133fc2:
    II(0x10133fc2, 0x5)     jmpd(0x10133d28, -0x29f);           /* jmp 0x10133d28 */
l_0x10133fc7:
    II(0x10133fc7, 0x3)     mov(eax, memd_a32(ss, ebp - 0x14)); /* mov eax, [ebp-0x14] */
    II(0x10133fca, 0x5)     calld(sys_free_v2, 0x31f95);             /* call 0x10165f64 */
l_0x10133fcf:
    II(0x10133fcf, 0x2)     mov(esp, ebp);                      /* mov esp, ebp */
    II(0x10133fd1, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x10133fd2, 0x1)     popd(edi);                          /* pop edi */
    II(0x10133fd3, 0x1)     popd(esi);                          /* pop esi */
    II(0x10133fd4, 0x1)     popd(edx);                          /* pop edx */
    II(0x10133fd5, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10133fd6, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10133fd7, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V2(0x10076338, func_0x10076338, 0x20, {0x68, 0x24, 0, 0, 0, 0xe8, 0x10, 0xfa, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xfd, 0x7, 0, 0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
void func_0x10076338()
{
    FUNC_START_V2(0x10076338, 0x20);
    II(0x10076338, 0x5)    pushd(0x24);                           /* push dword 0x24 */
    II(0x1007633d, 0x5)    calld(sys_check_available_stack_size, 0xefa10);            /* call sys_check_available_stack_size */
    II(0x10076342, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x10076343, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x10076344, 0x1)    pushd(edx);                            /* push edx */
    II(0x10076345, 0x1)    pushd(esi);                            /* push esi */
    II(0x10076346, 0x1)    pushd(edi);                            /* push edi */
    II(0x10076347, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x10076348, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x1007634a, 0x6)    sub(esp, 0x8);                         /* sub esp, 0x8 */
    II(0x10076350, 0x3)    mov(memd_a32(ss, ebp - 0x4), eax);     /* mov [ebp-0x4], eax */
//    II(0x10076353, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x10076356, 0x5)    calld(0x10076b58, 0x7fd);              /* call 0x10076b58 */     // get u32 value  *(eax+2)
    II(0x1007635b, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
//    II(0x1007635e, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x10076361, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x10076363, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x10076364, 0x1)    popd(edi);                             /* pop edi */
    II(0x10076365, 0x1)    popd(esi);                             /* pop esi */
    II(0x10076366, 0x1)    popd(edx);                             /* pop edx */
    II(0x10076367, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x10076368, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x10076369, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x100764b8, func_0x100764b8, 0x20, {0x68, 0x28, 0, 0, 0, 0xe8, 0x90, 0xf8, 0xe, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x34, 0x8, 0, 0, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
void func_0x100764b8()
{
    FUNC_START_V2(0x100764b8, 0x20);
    II(0x100764b8, 0x5)    pushd(0x28);                           /* push dword 0x28 */
    II(0x100764bd, 0x5)    calld(sys_check_available_stack_size, 0xef890);            /* call sys_check_available_stack_size */
    II(0x100764c2, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x100764c3, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x100764c4, 0x1)    pushd(esi);                            /* push esi */
    II(0x100764c5, 0x1)    pushd(edi);                            /* push edi */
    II(0x100764c6, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x100764c7, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x100764c9, 0x6)    sub(esp, 0x10);                        /* sub esp, 0x10 */
    II(0x100764cf, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
    II(0x100764d2, 0x3)    mov(memd_a32(ss, ebp - 0x4), edx);     /* mov [ebp-0x4], edx */
//    II(0x100764d5, 0x3)    mov(edx, memd_a32(ss, ebp - 0x4));     /* mov edx, [ebp-0x4] */
//    II(0x100764d8, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100764db, 0x5)    calld(0x10076d14, 0x834);              /* call 0x10076d14 */    // if (eax != NULL) (u16 *eax) ++;
    II(0x100764e0, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
    II(0x100764e3, 0x3)    lea(eax, ebp - 0x8);                   /* lea eax, [ebp-0x8] */
    II(0x100764e6, 0x3)    mov(memd_a32(ss, ebp - 0xc), eax);     /* mov [ebp-0xc], eax */
    II(0x100764e9, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100764ec, 0x3)    mov(memd_a32(ss, ebp - 0x10), eax);    /* mov [ebp-0x10], eax */
//    II(0x100764ef, 0x3)    mov(eax, memd_a32(ss, ebp - 0x10));    /* mov eax, [ebp-0x10] */
    II(0x100764f2, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x100764f4, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x100764f5, 0x1)    popd(edi);                             /* pop edi */
    II(0x100764f6, 0x1)    popd(esi);                             /* pop esi */
    II(0x100764f7, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x100764f8, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x100764f9, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x10076b58, func_0x10076b58, 0x20, {0x68, 0x24, 0, 0, 0, 0xe8, 0xf0, 0xf1, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2, 0xe8, 0xea, 0, 0, 0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
void func_0x10076b58()
{
    FUNC_START_V2(0x10076b58, 0x20);
    II(0x10076b58, 0x5)    pushd(0x24);                           /* push dword 0x24 */
    II(0x10076b5d, 0x5)    calld(sys_check_available_stack_size, 0xef1f0);            /* call sys_check_available_stack_size */
    II(0x10076b62, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x10076b63, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x10076b64, 0x1)    pushd(edx);                            /* push edx */
    II(0x10076b65, 0x1)    pushd(esi);                            /* push esi */
    II(0x10076b66, 0x1)    pushd(edi);                            /* push edi */
    II(0x10076b67, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x10076b68, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x10076b6a, 0x6)    sub(esp, 0x8);                         /* sub esp, 0x8 */
    II(0x10076b70, 0x3)    mov(memd_a32(ss, ebp - 0x4), eax);     /* mov [ebp-0x4], eax */
//    II(0x10076b73, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x10076b76, 0x3)    add(eax, 0x2);                         /* add eax, 0x2 */
    II(0x10076b79, 0x5)    calld(0x10076c68, 0xea);               /* call 0x10076c68 */    // get u32 value *eax
    II(0x10076b7e, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
//    II(0x10076b81, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x10076b84, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x10076b86, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x10076b87, 0x1)    popd(edi);                             /* pop edi */
    II(0x10076b88, 0x1)    popd(esi);                             /* pop esi */
    II(0x10076b89, 0x1)    popd(edx);                             /* pop edx */
    II(0x10076b8a, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x10076b8b, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x10076b8c, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x10076c68, func_0x10076c68, 0x20, {0x68, 0x24, 0, 0, 0, 0xe8, 0xe0, 0xf0, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
void func_0x10076c68()  // Вернуть u32 в eax  по адресу eax
{
    FUNC_START_V2(0x10076c68, 0x20);
    II(0x10076c68, 0x5)    pushd(0x24);                           /* push dword 0x24 */
    II(0x10076c6d, 0x5)    calld(sys_check_available_stack_size, 0xef0e0);            /* call sys_check_available_stack_size */
    II(0x10076c72, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x10076c73, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x10076c74, 0x1)    pushd(edx);                            /* push edx */
    II(0x10076c75, 0x1)    pushd(esi);                            /* push esi */
    II(0x10076c76, 0x1)    pushd(edi);                            /* push edi */
    II(0x10076c77, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x10076c78, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x10076c7a, 0x6)    sub(esp, 0x8);                         /* sub esp, 0x8 */
    II(0x10076c80, 0x3)    mov(memd_a32(ss, ebp - 0x4), eax);     /* mov [ebp-0x4], eax */
//    II(0x10076c83, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x10076c86, 0x2)    mov(eax, memd_a32(ds, eax));           /* mov eax, [eax] */
    II(0x10076c88, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
//    II(0x10076c8b, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x10076c8e, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x10076c90, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x10076c91, 0x1)    popd(edi);                             /* pop edi */
    II(0x10076c92, 0x1)    popd(esi);                             /* pop esi */
    II(0x10076c93, 0x1)    popd(edx);                             /* pop edx */
    II(0x10076c94, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x10076c95, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x10076c96, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x10076d14, func_0x10076d14, 0x20, {0x68, 0x28, 0, 0, 0, 0xe8, 0x34, 0xf0, 0xe, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x87, 0x3e, 0xc, 0, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
void func_0x10076d14()
{
    FUNC_START_V2(0x10076d14, 0x20);
    II(0x10076d14, 0x5)    pushd(0x28);                           /* push dword 0x28 */
    II(0x10076d19, 0x5)    calld(sys_check_available_stack_size, 0xef034);            /* call sys_check_available_stack_size */
    II(0x10076d1e, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x10076d1f, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x10076d20, 0x1)    pushd(esi);                            /* push esi */
    II(0x10076d21, 0x1)    pushd(edi);                            /* push edi */
    II(0x10076d22, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x10076d23, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x10076d25, 0x6)    sub(esp, 0x10);                        /* sub esp, 0x10 */
    II(0x10076d2b, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
    II(0x10076d2e, 0x3)    mov(memd_a32(ss, ebp - 0x4), edx);     /* mov [ebp-0x4], edx */
//    II(0x10076d31, 0x3)    mov(edx, memd_a32(ss, ebp - 0x4));     /* mov edx, [ebp-0x4] */
//    II(0x10076d34, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x10076d37, 0x5)    calld(0x1013abc3, 0xc3e87);            /* call 0x1013abc3 */     // if (eax != NULL) (u16 *eax) ++;
    II(0x10076d3c, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
    II(0x10076d3f, 0x3)    lea(eax, ebp - 0x8);                   /* lea eax, [ebp-0x8] */
    II(0x10076d42, 0x3)    mov(memd_a32(ss, ebp - 0xc), eax);     /* mov [ebp-0xc], eax */
    II(0x10076d45, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x10076d48, 0x3)    mov(memd_a32(ss, ebp - 0x10), eax);    /* mov [ebp-0x10], eax */
//    II(0x10076d4b, 0x3)    mov(eax, memd_a32(ss, ebp - 0x10));    /* mov eax, [ebp-0x10] */
    II(0x10076d4e, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x10076d50, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x10076d51, 0x1)    popd(edi);                             /* pop edi */
    II(0x10076d52, 0x1)    popd(esi);                             /* pop esi */
    II(0x10076d53, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x10076d54, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x10076d55, 0x1)    retd();                                /* ret  */
}

//FUNC_INFO_V2(0x10169ecc, func_0x10169ecc, 0x20, {0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x83, 0xec, 0x2c, 0xbd, 0xff, 0xff, 0xff, 0xff, 0xb9, 0xb, 0, 0, 0, 0x89, 0xe7, 0xbe, 0xa0, 0x9e, 0x16, 0x10, 0x31, 0xd2, 0x31, 0xdb, 0xf3, 0xa5, 0x89, 0xd0, 0xe8, 0x79, 0, 0, 0, 0x83, 0xf8, 0xff, 0x75, 0xa, 0x31, 0xc9, 0x89, 0x8b, 0xe4, 0xf6, 0x1c, 0x10, 0xeb, 0x7, 0x83, 0xfd, 0xff, 0x75, 0x2, 0x89, 0xd5, 0x42, 0x83, 0xc3, 0x14, 0x83, 0xfa, 0xa, 0x7c, 0xda, 0x83, 0xfd, 0xff, 0x75, 0x4, 0x89, 0xe8, 0xeb, 0x15, 0x89, 0xe0, 0xe8, 0xce, 0x1, 0, 0, 0x83, 0xf8, 0xff, 0x74, 0x9, 0x89, 0xe8, 0xe8, 0x1e, 0x3, 0, 0, 0x31, 0xc0, 0x83, 0xc4, 0x2c, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
//void func_0x10169ecc()
//{
//    FUNC_START_V2(0x10169ecc, 0x20);
//    II(0x10169ecc, 0x1)    pushd(ebx);                            /* push ebx */
//    II(0x10169ecd, 0x1)    pushd(ecx);                            /* push ecx */
//    II(0x10169ece, 0x1)    pushd(edx);                            /* push edx */
//    II(0x10169ecf, 0x1)    pushd(esi);                            /* push esi */
//    II(0x10169ed0, 0x1)    pushd(edi);                            /* push edi */
//    II(0x10169ed1, 0x1)    pushd(ebp);                            /* push ebp */
//    II(0x10169ed2, 0x3)    sub(esp, 0x2c);                        /* sub esp, 0x2c */
//    II(0x10169ed5, 0x5)    mov(ebp, 0xffffffff);                  /* mov ebp, 0xffffffff */
//    II(0x10169eda, 0x5)    mov(ecx, 0xb);                         /* mov ecx, 0xb */
//    II(0x10169edf, 0x2)    mov(edi, esp);                         /* mov edi, esp */
//    II(0x10169ee1, 0x5)    mov(esi, 0x10169ea0);                  /* mov esi, 0x10169ea0 */
//    II(0x10169ee6, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
//    II(0x10169ee8, 0x2)    xor_(ebx, ebx);                        /* xor ebx, ebx */
//    II(0x10169eea, 0x2)    rep_a32 movsd_a32();                   /* rep movsd  */
//l_0x10169eec:    // load 10 fonts
//    II(0x10169eec, 0x2)    mov(eax, edx);                         /* mov eax, edx */
//    II(0x10169eee, 0x5)    calld(0x10169f6c, 0x79);               /* call 0x10169f6c */
//    II(0x10169ef3, 0x3)    cmp(eax, -0x1);                        /* cmp eax, 0xff */
//    II(0x10169ef6, 0x2)    jnzd(0x10169f02, 0xa);                 /* jnz 0x10169f02 */
//    II(0x10169ef8, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */
//    II(0x10169efa, 0x6)    mov(memd_a32(ds, ebx + 0x101cf6e4), ecx); /* mov [ebx+0x101cf6e4], ecx */
//    II(0x10169f00, 0x2)    jmpd(0x10169f09, 0x7);                 /* jmp 0x10169f09 */
//l_0x10169f02:
//    II(0x10169f02, 0x3)    cmp(ebp, -0x1);                        /* cmp ebp, 0xff */
//    II(0x10169f05, 0x2)    jnzd(0x10169f09, 0x2);                 /* jnz 0x10169f09 */
//    II(0x10169f07, 0x2)    mov(ebp, edx);                         /* mov ebp, edx */
//l_0x10169f09:
//    II(0x10169f09, 0x1)    inc(edx);                              /* inc edx */
//    II(0x10169f0a, 0x3)    add(ebx, 0x14);                        /* add ebx, 0x14 */
//    II(0x10169f0d, 0x3)    cmp(edx, 0xa);                         /* cmp edx, 0xa */
//    II(0x10169f10, 0x2)    jld(0x10169eec, -0x26);                /* jl 0x10169eec */
//    II(0x10169f12, 0x3)    cmp(ebp, -0x1);                        /* cmp ebp, 0xff */
//    II(0x10169f15, 0x2)    jnzd(0x10169f1b, 0x4);                 /* jnz 0x10169f1b */
//    II(0x10169f17, 0x2)    mov(eax, ebp);                         /* mov eax, ebp */
//    II(0x10169f19, 0x2)    jmpd(0x10169f30, 0x15);                /* jmp 0x10169f30 */
//l_0x10169f1b:
//    II(0x10169f1b, 0x2)    mov(eax, esp);                         /* mov eax, esp */
//    II(0x10169f1d, 0x5)    calld(0x1016a0f0, 0x1ce);              /* call 0x1016a0f0 */
//    II(0x10169f22, 0x3)    cmp(eax, -0x1 /* 0xff */);             /* cmp eax, 0xff */
//    II(0x10169f25, 0x2)    jzd(0x10169f30, 0x9);                  /* jz 0x10169f30 */
//    II(0x10169f27, 0x2)    mov(eax, ebp);                         /* mov eax, ebp */
//    II(0x10169f29, 0x5)    calld(0x1016a24c, 0x31e);              /* call 0x1016a24c */
//    II(0x10169f2e, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
//l_0x10169f30:
//    II(0x10169f30, 0x3)    add(esp, 0x2c);                        /* add esp, 0x2c */
//    II(0x10169f33, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x10169f34, 0x1)    popd(edi);                             /* pop edi */
//    II(0x10169f35, 0x1)    popd(esi);                             /* pop esi */
//    II(0x10169f36, 0x1)    popd(edx);                             /* pop edx */
//    II(0x10169f37, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x10169f38, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x10169f39, 0x1)    retd();                                /* ret  */
//}

//FUNC_INFO_V2(0x10169f6c, func_0x10169f6c, 0x20, {0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x83, 0xec, 0x10, 0x89, 0xc7, 0x50, 0x68, 0xe4, 0x2d, 0x1b, 0x10, 0x8d, 0x44, 0x24, 0x8, 0x50, 0xe8, 0x7a, 0xbf, 0xff, 0xff, 0x83, 0xc4, 0xc, 0xba, 0xf0, 0x2d, 0x1b, 0x10, 0x89, 0xe0, 0xe8, 0x2e, 0x48, 0, 0, 0x89, 0xc6, 0x85, 0xc0, 0x75, 0xa, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x3e, 0x1, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x89, 0xf8, 0xc1, 0xe7, 0x2, 0xba, 0x14, 0, 0, 0, 0x1, 0xc7, 0xb8, 0xe4, 0xf6, 0x1c, 0x10, 0xc1, 0xe7, 0x2, 0x89, 0xf1, 0x1, 0xf8, 0xe8, 0xa4, 0x4a, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x16, 0x89, 0xf0, 0xe8, 0xa4, 0x6f, 0, 0, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3, 0x8b, 0x87, 0xe4, 0xf6, 0x1c, 0x10, 0xc1, 0xe0, 0x3, 0xe8, 0xff, 0x82, 0x1, 0, 0x89, 0x87, 0xf0, 0xf6, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x16, 0x89, 0xf0, 0xe8, 0x76, 0x6f, 0, 0, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3, 0xba, 0x8, 0, 0, 0, 0x89, 0xf1, 0x8b, 0x9f, 0xe4, 0xf6, 0x1c, 0x10, 0xe8, 0x49, 0x4a, 0, 0, 0x8b, 0x97, 0xe4, 0xf6, 0x1c, 0x10, 0x39, 0xd0, 0x74, 0x1a, 0x8b, 0x87, 0xf0, 0xf6, 0x1c, 0x10, 0xe8, 0x1c, 0x84, 0x1, 0, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3, 0x8d, 0x42, 0xff, 0x8b, 0x9f, 0xf0, 0xf6, 0x1c, 0x10, 0xc1, 0xe0, 0x3, 0x1, 0xd8, 0x8b, 0x18, 0x83, 0xc3, 0x7, 0x8b, 0x8f, 0xe8, 0xf6, 0x1c, 0x10, 0xc1, 0xfb, 0x3, 0xf, 0xaf, 0xd9, 0x8b, 0x68, 0x4, 0x1, 0xdd, 0x89, 0xe8, 0xe8, 0x7e, 0x82, 0x1, 0, 0x89, 0x87, 0xf4, 0xf6, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x21, 0x89, 0xf0, 0xe8, 0xf5, 0x6e, 0, 0, 0x8b, 0x87, 0xf0, 0xf6, 0x1c, 0x10, 0xe8, 0xc6, 0x83, 0x1, 0, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3, 0xba, 0x1, 0, 0, 0, 0x89, 0xf1, 0x89, 0xeb, 0xe8, 0xc1, 0x49, 0, 0, 0x39, 0xe8, 0x74, 0x2c, 0x89, 0xf0, 0xe8, 0xc2, 0x6e, 0, 0, 0x8b, 0x87, 0xf0, 0xf6, 0x1c, 0x10, 0xe8, 0x93, 0x83, 0x1, 0, 0x8b, 0x87, 0xf4, 0xf6, 0x1c, 0x10, 0xe8, 0x88, 0x83, 0x1, 0, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3, 0x89, 0xf0, 0xe8, 0x96, 0x6e, 0, 0, 0x31, 0xc0, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
//void func_0x10169f6c()
//{
//    FUNC_START_V2(0x10169f6c, 0x20);    // Load font. eax - num font.
//    II(0x10169f6c, 0x1)    pushd(ebx);                            /* push ebx */
//    II(0x10169f6d, 0x1)    pushd(ecx);                            /* push ecx */
//    II(0x10169f6e, 0x1)    pushd(edx);                            /* push edx */
//    II(0x10169f6f, 0x1)    pushd(esi);                            /* push esi */
//    II(0x10169f70, 0x1)    pushd(edi);                            /* push edi */
//    II(0x10169f71, 0x1)    pushd(ebp);                            /* push ebp */
//    II(0x10169f72, 0x3)    sub(esp, 0x10);                        /* sub esp, 0x10 */
//    II(0x10169f75, 0x2)    mov(edi, eax);                         /* mov edi, eax */
//    II(0x10169f77, 0x1)    pushd(eax);                            /* push eax */                // num font
//    II(0x10169f78, 0x5)    pushd(0x101b2de4);                     /* push dword 0x101b2de4 */    // static char * fmt = "font%d.fon";
//    II(0x10169f7d, 0x4)    lea(eax, esp + 0x8);                   /* lea eax, [esp+0x8] */
//    II(0x10169f81, 0x1)    pushd(eax);                            /* push eax */                // str
//    II(0x10169f82, 0x5)    calld(call_sprintf, -0x4086);          /* call call_sprintf */        // sprintf(str, fnt, num);
//    II(0x10169f87, 0x3)    add(esp, 0xc);                         /* add esp, 0xc */
//    II(0x10169f8a, 0x5)    mov(edx, 0x101b2df0);                  /* mov edx, 0x101b2df0 */    // "rb"
//    II(0x10169f8f, 0x2)    mov(eax, esp);                         /* mov eax, esp */
//    II(0x10169f91, 0x5)    calld(sys_fopen_ex, 0x482e);             /* call sys_fopen_ex */        // fopen, eax - char* - "font1.fon", edx - "rb"
//    II(0x10169f96, 0x2)    mov(esi, eax);                         /* mov esi, eax */
//    II(0x10169f98, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x10169f9a, 0x2)    jnzd(0x10169fa6, 0xa);                 /* jnz 0x10169fa6 */
//    II(0x10169f9c, 0x5)    mov(eax, 0xffffffff);                  /* mov eax, 0xffffffff */
//    II(0x10169fa1, 0x5)    jmpd(0x1016a0e4, 0x13e);               /* jmp 0x1016a0e4 */
//l_0x10169fa6:
//    II(0x10169fa6, 0x5)    mov(ebx, 0x1);                         /* mov ebx, 0x1 */
//    II(0x10169fab, 0x2)    mov(eax, edi);                         /* mov eax, edi */
//    II(0x10169fad, 0x3)    shl(edi, 0x2);                         /* shl edi, 0x2 */
//    II(0x10169fb0, 0x5)    mov(edx, 0x14);                        /* mov edx, 0x14 */
//    II(0x10169fb5, 0x2)    add(edi, eax);                         /* add edi, eax */
//    II(0x10169fb7, 0x5)    mov(eax, 0x101cf6e4);                  /* mov eax, 0x101cf6e4 */    // char buf[???]; ? 20 bytes per font?
//    II(0x10169fbc, 0x3)    shl(edi, 0x2);                         /* shl edi, 0x2 */        // edi = 20 * num_font
//    II(0x10169fbf, 0x2)    mov(ecx, esi);                         /* mov ecx, esi */
//    II(0x10169fc1, 0x2)    add(eax, edi);                         /* add eax, edi */
//    II(0x10169fc3, 0x5)    calld(sys_fread_ex, 0x4aa4);             /* call sys_fread_ex */        // read 20 bytes
//    II(0x10169fc8, 0x3)    cmp(eax, 0x1);                         /* cmp eax, 0x1 */
//    II(0x10169fcb, 0x2)    jzd(0x10169fe3, 0x16);                 /* jz 0x10169fe3 */        // if all right goto.
//    II(0x10169fcd, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x10169fcf, 0x5)    calld(sys_fclose_ex, 0x6fa4);             /* call sys_fclose_ex */
//    II(0x10169fd4, 0x5)    mov(eax, 0xffffffff);                  /* mov eax, 0xffffffff */
//    II(0x10169fd9, 0x3)    add(esp, 0x10);                        /* add esp, 0x10 */
//    II(0x10169fdc, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x10169fdd, 0x1)    popd(edi);                             /* pop edi */
//    II(0x10169fde, 0x1)    popd(esi);                             /* pop esi */
//    II(0x10169fdf, 0x1)    popd(edx);                             /* pop edx */
//    II(0x10169fe0, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x10169fe1, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x10169fe2, 0x1)    retd();                                /* ret  */
//l_0x10169fe3:
//    II(0x10169fe3, 0x6)    mov(eax, memd_a32(ds, edi + 0x101cf6e4)); /* mov eax, [edi+0x101cf6e4] */
//    II(0x10169fe9, 0x3)    shl(eax, 0x3);                         /* shl eax, 0x3 */    // * 8
//    II(0x10169fec, 0x5)    calld(call_my_malloc, 0x182ff);            /* call call_my_malloc */
//    II(0x10169ff1, 0x6)    mov(memd_a32(ds, edi + 0x101cf6f0), eax); /* mov [edi+0x101cf6f0], eax */    // +0xc
//    II(0x10169ff7, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x10169ff9, 0x2)    jnzd(0x1016a011, 0x16);                /* jnz 0x1016a011 */
//    II(0x10169ffb, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x10169ffd, 0x5)    calld(sys_fclose_ex, 0x6f76);             /* call sys_fclose_ex */
//    II(0x1016a002, 0x5)    mov(eax, 0xffffffff);                  /* mov eax, 0xffffffff */
//    II(0x1016a007, 0x3)    add(esp, 0x10);                        /* add esp, 0x10 */
//    II(0x1016a00a, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016a00b, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016a00c, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016a00d, 0x1)    popd(edx);                             /* pop edx */
//    II(0x1016a00e, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016a00f, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016a010, 0x1)    retd();                                /* ret  */
//l_0x1016a011:
//    II(0x1016a011, 0x5)    mov(edx, 0x8);                         /* mov edx, 0x8 */
//    II(0x1016a016, 0x2)    mov(ecx, esi);                         /* mov ecx, esi */
//    II(0x1016a018, 0x6)    mov(ebx, memd_a32(ds, edi + 0x101cf6e4)); /* mov ebx, [edi+0x101cf6e4] */
//    II(0x1016a01e, 0x5)    calld(sys_fread_ex, 0x4a49);             /* call sys_fread_ex */    // read 8 * 0x100 in malloc space
//    II(0x1016a023, 0x6)    mov(edx, memd_a32(ds, edi + 0x101cf6e4)); /* mov edx, [edi+0x101cf6e4] */
//    II(0x1016a029, 0x2)    cmp(eax, edx);                         /* cmp eax, edx */
//    II(0x1016a02b, 0x2)    jzd(0x1016a047, 0x1a);                 /* jz 0x1016a047 */
//    II(0x1016a02d, 0x6)    mov(eax, memd_a32(ds, edi + 0x101cf6f0)); /* mov eax, [edi+0x101cf6f0] */    // +0xc
//    II(0x1016a033, 0x5)    calld(call_my_free, 0x1841c);            /* call call_my_free */    // free
//    II(0x1016a038, 0x5)    mov(eax, 0xffffffff);                  /* mov eax, 0xffffffff */
//    II(0x1016a03d, 0x3)    add(esp, 0x10);                        /* add esp, 0x10 */
//    II(0x1016a040, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016a041, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016a042, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016a043, 0x1)    popd(edx);                             /* pop edx */
//    II(0x1016a044, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016a045, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016a046, 0x1)    retd();                                /* ret  */
//l_0x1016a047:
//    II(0x1016a047, 0x3)    lea(eax, edx - 0x1);                   /* lea eax, [edx-0x1] */
//    II(0x1016a04a, 0x6)    mov(ebx, memd_a32(ds, edi + 0x101cf6f0)); /* mov ebx, [edi+0x101cf6f0] */    // +0xc
//    II(0x1016a050, 0x3)    shl(eax, 0x3);                         /* shl eax, 0x3 */
//    II(0x1016a053, 0x2)    add(eax, ebx);                         /* add eax, ebx */
//    II(0x1016a055, 0x2)    mov(ebx, memd_a32(ds, eax));           /* mov ebx, [eax] */
//    II(0x1016a057, 0x3)    add(ebx, 0x7);                         /* add ebx, 0x7 */
//    II(0x1016a05a, 0x6)    mov(ecx, memd_a32(ds, edi + 0x101cf6e8)); /* mov ecx, [edi+0x101cf6e8] */    // +0x4
//    II(0x1016a060, 0x3)    sar(ebx, 0x3);                         /* sar ebx, 0x3 */
//    II(0x1016a063, 0x3)    imul(ebx, ecx);                        /* imul ebx, ecx */
//    II(0x1016a066, 0x3)    mov(ebp, memd_a32(ds, eax + 0x4));     /* mov ebp, [eax+0x4] */
//    II(0x1016a069, 0x2)    add(ebp, ebx);                         /* add ebp, ebx */
//    II(0x1016a06b, 0x2)    mov(eax, ebp);                         /* mov eax, ebp */
//    II(0x1016a06d, 0x5)    calld(call_my_malloc, 0x1827e);            /* call call_my_malloc */
//    II(0x1016a072, 0x6)    mov(memd_a32(ds, edi + 0x101cf6f4), eax); /* mov [edi+0x101cf6f4], eax */    // +0x10
//    II(0x1016a078, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016a07a, 0x2)    jnzd(0x1016a09d, 0x21);                /* jnz 0x1016a09d */
//    II(0x1016a07c, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x1016a07e, 0x5)    calld(sys_fclose_ex, 0x6ef5);             /* call sys_fclose_ex */    // close
//    II(0x1016a083, 0x6)    mov(eax, memd_a32(ds, edi + 0x101cf6f0)); /* mov eax, [edi+0x101cf6f0] */
//    II(0x1016a089, 0x5)    calld(call_my_free, 0x183c6);            /* call call_my_free */
//    II(0x1016a08e, 0x5)    mov(eax, 0xffffffff);                  /* mov eax, 0xffffffff */
//    II(0x1016a093, 0x3)    add(esp, 0x10);                        /* add esp, 0x10 */
//    II(0x1016a096, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016a097, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016a098, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016a099, 0x1)    popd(edx);                             /* pop edx */
//    II(0x1016a09a, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016a09b, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016a09c, 0x1)    retd();                                /* ret  */
//l_0x1016a09d:
//    II(0x1016a09d, 0x5)    mov(edx, 0x1);                         /* mov edx, 0x1 */
//    II(0x1016a0a2, 0x2)    mov(ecx, esi);                         /* mov ecx, esi */
//    II(0x1016a0a4, 0x2)    mov(ebx, ebp);                         /* mov ebx, ebp */
//    II(0x1016a0a6, 0x5)    calld(sys_fread_ex, 0x49c1);             /* call sys_fread_ex */
//    II(0x1016a0ab, 0x2)    cmp(eax, ebp);                         /* cmp eax, ebp */
//    II(0x1016a0ad, 0x2)    jzd(0x1016a0db, 0x2c);                 /* jz 0x1016a0db */
//    II(0x1016a0af, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x1016a0b1, 0x5)    calld(sys_fclose_ex, 0x6ec2);             /* call sys_fclose_ex */    // close
//    II(0x1016a0b6, 0x6)    mov(eax, memd_a32(ds, edi + 0x101cf6f0)); /* mov eax, [edi+0x101cf6f0] */
//    II(0x1016a0bc, 0x5)    calld(call_my_free, 0x18393);            /* call call_my_free */
//    II(0x1016a0c1, 0x6)    mov(eax, memd_a32(ds, edi + 0x101cf6f4)); /* mov eax, [edi+0x101cf6f4] */
//    II(0x1016a0c7, 0x5)    calld(call_my_free, 0x18388);            /* call call_my_free */
//    II(0x1016a0cc, 0x5)    mov(eax, 0xffffffff);                  /* mov eax, 0xffffffff */
//    II(0x1016a0d1, 0x3)    add(esp, 0x10);                        /* add esp, 0x10 */
//    II(0x1016a0d4, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016a0d5, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016a0d6, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016a0d7, 0x1)    popd(edx);                             /* pop edx */
//    II(0x1016a0d8, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016a0d9, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016a0da, 0x1)    retd();                                /* ret  */
//l_0x1016a0db:
//    II(0x1016a0db, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x1016a0dd, 0x5)    calld(sys_fclose_ex, 0x6e96);             /* call sys_fclose_ex */
//    II(0x1016a0e2, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
//l_0x1016a0e4:
//    II(0x1016a0e4, 0x3)    add(esp, 0x10);                        /* add esp, 0x10 */
//    II(0x1016a0e7, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016a0e8, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016a0e9, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016a0ea, 0x1)    popd(edx);                             /* pop edx */
//    II(0x1016a0eb, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016a0ec, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016a0ed, 0x1)    retd();                                /* ret  */
//}

FUNC_INFO_V2(0x1016ad78, func_0x1016ad78, 0x20, {0x56, 0x57, 0x55, 0x83, 0xec, 0xc, 0x89, 0xc6, 0x89, 0x14, 0x24, 0x89, 0x5c, 0x24, 0x8, 0x89, 0x4c, 0x24, 0x4, 0x31, 0xed, 0x85, 0xdb, 0x7e, 0x3f, 0x8b, 0xc, 0x24, 0x8b, 0x44, 0x24, 0x1c, 0x89, 0xf7, 0x88, 0xc2, 0x86, 0xc4, 0x88, 0xd0, 0x89, 0xc2, 0xc1, 0xe0, 0x10, 0x9, 0xd0, 0x89, 0xcb, 0x83, 0xe3, 0x3, 0xc1, 0xe9, 0x2, 0x85, 0xc9, 0x74, 0x2, 0xf3, 0xab, 0xf7, 0xc3, 0x3, 0, 0, 0, 0x74, 0x4, 0x89, 0xd9, 0xf3, 0xaa, 0x45, 0x8b, 0x5c, 0x24, 0x4, 0x8b, 0x4c, 0x24, 0x8, 0x1, 0xde, 0x39, 0xcd, 0x7c, 0xc1, 0x83, 0xc4, 0xc, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0})
void func_0x1016ad78()
{
    FUNC_START_V2(0x1016ad78, 0x20);    // like memset, eax - ptr, edx - bytes, ebx * edx - total len
    II(0x1016ad78, 0x1)    pushd(esi);                            /* push esi */
    II(0x1016ad79, 0x1)    pushd(edi);                            /* push edi */
    II(0x1016ad7a, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x1016ad7b, 0x3)    sub(esp, 0xc);                         /* sub esp, 0xc */
    II(0x1016ad7e, 0x2)    mov(esi, eax);                         /* mov esi, eax */
    II(0x1016ad80, 0x3)    mov(memd_a32(ss, esp), edx);           /* mov [esp], edx */
    II(0x1016ad83, 0x4)    mov(memd_a32(ss, esp + 0x8), ebx);     /* mov [esp+0x8], ebx */
    II(0x1016ad87, 0x4)    mov(memd_a32(ss, esp + 0x4), ecx);     /* mov [esp+0x4], ecx */
    II(0x1016ad8b, 0x2)    xor_(ebp, ebp);                        /* xor ebp, ebp */
    II(0x1016ad8d, 0x2)    test(ebx, ebx);                        /* test ebx, ebx */
    II(0x1016ad8f, 0x2)    jled(0x1016add0, 0x3f);                /* jle 0x1016add0 */
l_0x1016ad91:
    II(0x1016ad91, 0x3)    mov(ecx, memd_a32(ss, esp));           /* mov ecx, [esp] */
    II(0x1016ad94, 0x4)    mov(eax, memd_a32(ss, esp + 0x1c));    /* mov eax, [esp+0x1c] */    // push перед этой функции.
    II(0x1016ad98, 0x2)    mov(edi, esi);                         /* mov edi, esi */
    II(0x1016ad9a, 0x2)    mov(dl, al);                           /* mov dl, al */
    II(0x1016ad9c, 0x2)    xchg(ah, al);                          /* xchg ah, al */
    II(0x1016ad9e, 0x2)    mov(al, dl);                           /* mov al, dl */
    II(0x1016ada0, 0x2)    mov(edx, eax);                         /* mov edx, eax */
    II(0x1016ada2, 0x3)    shl(eax, 0x10);                        /* shl eax, 0x10 */
    II(0x1016ada5, 0x2)    or_(eax, edx);                         /* or eax, edx */
    II(0x1016ada7, 0x2)    mov(ebx, ecx);                         /* mov ebx, ecx */
    II(0x1016ada9, 0x3)    and_(ebx, 0x3);                        /* and ebx, 0x3 */
    II(0x1016adac, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
    II(0x1016adaf, 0x2)    test(ecx, ecx);                        /* test ecx, ecx */
    II(0x1016adb1, 0x2)    jzd(0x1016adb5, 0x2);                  /* jz 0x1016adb5 */
    II(0x1016adb3, 0x2)    rep_a32 stosd_a32();                   /* rep stosd  */
l_0x1016adb5:
    II(0x1016adb5, 0x6)    test(ebx, 0x3);                        /* test ebx, 0x3 */
    II(0x1016adbb, 0x2)    jzd(0x1016adc1, 0x4);                  /* jz 0x1016adc1 */
    II(0x1016adbd, 0x2)    mov(ecx, ebx);                         /* mov ecx, ebx */
    II(0x1016adbf, 0x2)    rep_a32 stosb_a32();                   /* rep stosb  */
l_0x1016adc1:
    II(0x1016adc1, 0x1)    inc(ebp);                              /* inc ebp */
    II(0x1016adc2, 0x4)    mov(ebx, memd_a32(ss, esp + 0x4));     /* mov ebx, [esp+0x4] */
    II(0x1016adc6, 0x4)    mov(ecx, memd_a32(ss, esp + 0x8));     /* mov ecx, [esp+0x8] */
    II(0x1016adca, 0x2)    add(esi, ebx);                         /* add esi, ebx */
    II(0x1016adcc, 0x2)    cmp(ebp, ecx);                         /* cmp ebp, ecx */
    II(0x1016adce, 0x2)    jld(0x1016ad91, -0x3f);                /* jl 0x1016ad91 */
l_0x1016add0:
    II(0x1016add0, 0x3)    add(esp, 0xc);                         /* add esp, 0xc */
    II(0x1016add3, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x1016add4, 0x1)    popd(edi);                             /* pop edi */
    II(0x1016add5, 0x1)    popd(esi);                             /* pop esi */
    II(0x1016add6, 0x3)    retd(0x4);                             /* ret 0x4 */
}

FUNC_INFO_V3(0x10194540, 0x6d37b55dc4cc0a02, 0x20, {0x55, 0x89, 0xe5, 0x53, 0x51, 0x83, 0xec, 0x2c, 0x89, 0x45, 0xf4, 0x89, 0xd1, 0x8d, 0x45, 0xe8, 0xbb, 0xc, 0, 0, 0, 0x31, 0xd2, 0xe8, 0x84, 0x18, 0xfd, 0xff, 0xba, 0, 0x3, 0, 0, 0x8a, 0x45, 0xf4, 0x30, 0xe4, 0x31, 0xdb, 0x66, 0x89, 0x55, 0xcc, 0x88, 0x45, 0xd0, 0x88, 0x65, 0xd1, 0x66, 0x89, 0x5d, 0xd4, 0x8c, 0xda, 0x89, 0xc8, 0x8d, 0x5d, 0xcc, 0xb8, 0x31, 0, 0, 0, 0x66, 0x89, 0x55, 0xe8, 0x89, 0x4d, 0xe0, 0x8d, 0x55, 0xcc, 0x8d, 0x4d, 0xe8, 0xe8, 0x8f, 0x80, 0xfd, 0xff, 0x83, 0x7d, 0xe4, 0, 0xf, 0x94, 0xc0, 0x25, 0xff, 0, 0, 0, 0x8d, 0x65, 0xf8, 0x59, 0x5b, 0x5d, 0xc3})
{
    FUNC_START_V2(0x10194540, 0x20);
    II(0x10194540, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x10194541, 0x2)     mov(ebp, esp);                      /* mov ebp, esp */
    II(0x10194543, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x10194544, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x10194545, 0x3)     sub(esp, 0x2c);                     /* sub esp, 0x2c */
    II(0x10194548, 0x3)     mov(memd_a32(ss, ebp - 0xc), eax);  /* mov [ebp-0xc], eax */
    II(0x1019454b, 0x2)     mov(ecx, edx);                      /* mov ecx, edx */
    II(0x1019454d, 0x3)     lea(eax, ebp - 0x18);               /* lea eax, [ebp-0x18] */
    II(0x10194550, 0x5)     mov(ebx, 0xc);                      /* mov ebx, 0xc */
    II(0x10194555, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10194557, 0x5)     calld(sys_memset, -0x2e77c);           /* call 0x10165de0 */
    II(0x1019455c, 0x5)     mov(edx, 0x300);                    /* mov edx, 0x300 */
    II(0x10194561, 0x3)     mov(al, memb_a32(ss, ebp - 0xc));   /* mov al, [ebp-0xc] */
    II(0x10194564, 0x2)     xor_(ah, ah);                       /* xor ah, ah */
    II(0x10194566, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */
    II(0x10194568, 0x4)     mov(memw_a32(ss, ebp - 0x34), dx);  /* mov [ebp-0x34], dx */
    II(0x1019456c, 0x3)     mov(memb_a32(ss, ebp - 0x30), al);  /* mov [ebp-0x30], al */
    II(0x1019456f, 0x3)     mov(memb_a32(ss, ebp - 0x2f), ah);  /* mov [ebp-0x2f], ah */
    II(0x10194572, 0x4)     mov(memw_a32(ss, ebp - 0x2c), bx);  /* mov [ebp-0x2c], bx */
    II(0x10194576, 0x2)     mov(edx, ds);                       /* mov edx, ds */
    II(0x10194578, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x1019457a, 0x3)     lea(ebx, ebp - 0x34);               /* lea ebx, [ebp-0x34] */
    II(0x1019457d, 0x5)     mov(eax, 0x31);                     /* mov eax, 0x31 */
    II(0x10194582, 0x4)     mov(memw_a32(ss, ebp - 0x18), dx);  /* mov [ebp-0x18], dx */
    II(0x10194586, 0x3)     mov(memd_a32(ss, ebp - 0x20), ecx); /* mov [ebp-0x20], ecx */
    II(0x10194589, 0x3)     lea(edx, ebp - 0x34);               /* lea edx, [ebp-0x34] */
    II(0x1019458c, 0x3)     lea(ecx, ebp - 0x18);               /* lea ecx, [ebp-0x18] */
    II(0x1019458f, 0x5)     calld(0x1016c623, -0x27f71);        /* call 0x1016c623 */              // set_cpu_window
    II(0x10194594, 0x4)     cmp(memd_a32(ss, ebp - 0x1c), 0);   /* cmp dword [ebp-0x1c], 0x0 */
    II(0x10194598, 0x3)     setz(al);                           /* setz al */
    II(0x1019459b, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x101945a0, 0x3)     lea(esp, ebp - 0x8);                /* lea esp, [ebp-0x8] */
    II(0x101945a3, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x101945a4, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x101945a5, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x101945a6, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V2(0x1016c4a0, func_0x1016c4a0, 0x20, {0x55, 0x89, 0xe5, 0xd9, 0xe4, 0x83, 0xec, 0x18, 0x9b, 0xdd, 0x7d, 0xf8, 0xdd, 0x55, 0xe8, 0x8a, 0x65, 0xf9, 0x9e, 0x75, 0x1a, 0xb0, 0, 0xdd, 0xd8, 0xdd, 0x5d, 0xf0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xe8, 0xa9, 0xac, 0x1, 0, 0x83, 0xec, 0x8, 0xe9, 0xf9, 0, 0, 0, 0xd9, 0xc1, 0xd9, 0xfc, 0xd8, 0xda, 0x9b, 0xdd, 0x7d, 0xfa, 0x9b, 0x8a, 0x65, 0xfb, 0x73, 0x3b, 0xb0, 0x1, 0x9e, 0x75, 0xd3, 0x66, 0xb8, 0x2, 0, 0x66, 0x89, 0x45, 0xfc, 0xdf, 0x45, 0xfc, 0xd9, 0xc2, 0xd9, 0xf8, 0x9b, 0xdd, 0x7d, 0xfc, 0x9b, 0x8a, 0x65, 0xfd, 0x9e, 0xb4, 0, 0x7a, 0x11, 0xd9, 0xe4, 0x9b, 0xdd, 0x7d, 0xfc, 0x9b, 0x8a, 0x65, 0xfd, 0x9e, 0xb4, 0, 0x74, 0x2, 0xb4, 0x1, 0x88, 0x65, 0xf9, 0xdd, 0xd8, 0xdd, 0xd8, 0xeb, 0x8, 0x9e, 0x74, 0x5, 0xe9, 0x87, 0, 0, 0, 0xd9, 0xc1, 0xdd, 0x5d, 0xf0, 0x9b, 0x66, 0x8b, 0x45, 0xf6, 0x66, 0x25, 0xf0, 0x7f, 0x66, 0x2d, 0xf0, 0x3f, 0x66, 0x3d, 0, 0x1, 0x73, 0x6f, 0xd9, 0xc1, 0xdb, 0x5d, 0xfc, 0x9b, 0x66, 0x8b, 0x45, 0xfe, 0x66, 0x9, 0xc0, 0x75, 0xb, 0x66, 0x8b, 0x45, 0xfc, 0xe8, 0x81, 0, 0, 0, 0xeb, 0x2b, 0x66, 0x40, 0x75, 0x51, 0x66, 0xb, 0x45, 0xfc, 0x74, 0x4b, 0x66, 0xf7, 0xd8, 0xe8, 0x6d, 0, 0, 0, 0xd9, 0xe8, 0xf6, 0x5, 0x9c, 0xe8, 0x1b, 0x10, 0x1, 0x75, 0x4, 0xde, 0xf1, 0xeb, 0xa, 0xb8, 0xf, 0, 0, 0, 0xe8, 0x8, 0xae, 0x1, 0, 0xdd, 0x55, 0xf8, 0x9b, 0x66, 0x8b, 0x45, 0xf8, 0x66, 0xb, 0x45, 0xfa, 0x66, 0xb, 0x45, 0xfc, 0x75, 0x14, 0x66, 0x8b, 0x45, 0xfe, 0x66, 0xd1, 0xe0, 0x66, 0x3d, 0xe0, 0xff, 0x75, 0x7, 0xb0, 0x2, 0xe9, 0x12, 0xff, 0xff, 0xff, 0xdd, 0xd9, 0xeb, 0x1f, 0xd9, 0xed, 0xd8, 0xca, 0xd9, 0xc9, 0xd9, 0xe1, 0xd9, 0xf1, 0xb0, 0x7, 0xe8, 0x4a, 0xac, 0x1, 0, 0x3c, 0, 0x75, 0xe0, 0x8a, 0x65, 0xf9, 0x9e, 0x73, 0x2, 0xd9, 0xe0, 0xdd, 0xd9, 0xdd, 0x5d, 0xf8, 0xdd, 0x45, 0xf8, 0x9b, 0x89, 0xec, 0x5d, 0xc3})
void func_0x1016c4a0()
{
    FUNC_START_V2(0x1016c4a0, 0x20);
    II(0x1016c4a0, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x1016c4a1, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x1016c4a3, 0x2)    ftst();                                /* ftst  */
    II(0x1016c4a5, 0x3)    sub(esp, 0x18);                        /* sub esp, 0x18 */
    II(0x1016c4a8, 0x1)    wait();                                /* wait  */
    II(0x1016c4a9, 0x3)    fnstsw(memw_a32(ss, ebp - 0x8));       /* fnstsw word [ebp-0x8] */
    II(0x1016c4ac, 0x3)    fst(memq_a32(ss, ebp - 0x18));         /* fst qword [ebp-0x18] */
    II(0x1016c4af, 0x3)    mov(ah, memb_a32(ss, ebp - 0x7));      /* mov ah, [ebp-0x7] */
    II(0x1016c4b2, 0x1)    sahf();                                /* sahf  */
    II(0x1016c4b3, 0x2)    jnzd(0x1016c4cf, 0x1a);                /* jnz 0x1016c4cf */
    II(0x1016c4b5, 0x2)    mov(al, 0);                            /* mov al, 0x0 */
l_0x1016c4b7:
    II(0x1016c4b7, 0x2)    fstp(0 /* st0 */);                     /* fstp st0 */
    II(0x1016c4b9, 0x3)    fstp(memq_a32(ss, ebp - 0x10));        /* fstp qword [ebp-0x10] */
    II(0x1016c4bc, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
    II(0x1016c4bf, 0x3)    mov(memd_a32(ss, ebp - 0x4), edx);     /* mov [ebp-0x4], edx */
    II(0x1016c4c2, 0x5)    calld(0x10187170, 0x1aca9);            /* call 0x10187170 */
    II(0x1016c4c7, 0x3)    sub(esp, 0x8);                         /* sub esp, 0x8 */
    II(0x1016c4ca, 0x5)    jmpd(0x1016c5c8, 0xf9);                /* jmp 0x1016c5c8 */
l_0x1016c4cf:
    II(0x1016c4cf, 0x2)    fld(0 /* st0 */, 0x1 /* st1 */);       /* fld st0, st1 */
    II(0x1016c4d1, 0x2)    frndint();                             /* frndint  */
    II(0x1016c4d3, 0x2)    fcomp(0 /* st0 */, 0x2 /* st2 */);     /* fcomp st0, st2 */
    II(0x1016c4d5, 0x1)    wait();                                /* wait  */
    II(0x1016c4d6, 0x3)    fnstsw(memw_a32(ss, ebp - 0x6));       /* fnstsw word [ebp-0x6] */
    II(0x1016c4d9, 0x1)    wait();                                /* wait  */
    II(0x1016c4da, 0x3)    mov(ah, memb_a32(ss, ebp - 0x5));      /* mov ah, [ebp-0x5] */
    II(0x1016c4dd, 0x2)    jaed(0x1016c51a, 0x3b);                /* jae 0x1016c51a */
    II(0x1016c4df, 0x2)    mov(al, 0x1);                          /* mov al, 0x1 */
    II(0x1016c4e1, 0x1)    sahf();                                /* sahf  */
    II(0x1016c4e2, 0x2)    jnzd(0x1016c4b7, -0x2d);               /* jnz 0x1016c4b7 */
    II(0x1016c4e4, 0x4)    mov(ax, 0x2);                          /* mov ax, 0x2 */
    II(0x1016c4e8, 0x4)    mov(memw_a32(ss, ebp - 0x4), ax);      /* mov [ebp-0x4], ax */
    II(0x1016c4ec, 0x3)    fild(memw_a32(ss, ebp - 0x4));         /* fild word [ebp-0x4] */
    II(0x1016c4ef, 0x2)    fld(0 /* st0 */, 0x2 /* st2 */);       /* fld st0, st2 */
    II(0x1016c4f1, 0x2)    fprem();                               /* fprem  */
    II(0x1016c4f3, 0x1)    wait();                                /* wait  */
    II(0x1016c4f4, 0x3)    fnstsw(memw_a32(ss, ebp - 0x4));       /* fnstsw word [ebp-0x4] */
    II(0x1016c4f7, 0x1)    wait();                                /* wait  */
    II(0x1016c4f8, 0x3)    mov(ah, memb_a32(ss, ebp - 0x3));      /* mov ah, [ebp-0x3] */
    II(0x1016c4fb, 0x1)    sahf();                                /* sahf  */
    II(0x1016c4fc, 0x2)    mov(ah, 0);                            /* mov ah, 0x0 */
    II(0x1016c4fe, 0x2)    jpd(0x1016c511, 0x11);                 /* jp 0x1016c511 */
    II(0x1016c500, 0x2)    ftst();                                /* ftst  */
    II(0x1016c502, 0x1)    wait();                                /* wait  */
    II(0x1016c503, 0x3)    fnstsw(memw_a32(ss, ebp - 0x4));       /* fnstsw word [ebp-0x4] */
    II(0x1016c506, 0x1)    wait();                                /* wait  */
    II(0x1016c507, 0x3)    mov(ah, memb_a32(ss, ebp - 0x3));      /* mov ah, [ebp-0x3] */
    II(0x1016c50a, 0x1)    sahf();                                /* sahf  */
    II(0x1016c50b, 0x2)    mov(ah, 0);                            /* mov ah, 0x0 */
    II(0x1016c50d, 0x2)    jzd(0x1016c511, 0x2);                  /* jz 0x1016c511 */
    II(0x1016c50f, 0x2)    mov(ah, 0x1);                          /* mov ah, 0x1 */
l_0x1016c511:
    II(0x1016c511, 0x3)    mov(memb_a32(ss, ebp - 0x7), ah);      /* mov [ebp-0x7], ah */
    II(0x1016c514, 0x2)    fstp(0 /* st0 */);                     /* fstp st0 */
    II(0x1016c516, 0x2)    fstp(0 /* st0 */);                     /* fstp st0 */
    II(0x1016c518, 0x2)    jmpd(0x1016c522, 0x8);                 /* jmp 0x1016c522 */
l_0x1016c51a:
    II(0x1016c51a, 0x1)    sahf();                                /* sahf  */
    II(0x1016c51b, 0x2)    jzd(0x1016c522, 0x5);                  /* jz 0x1016c522 */
    II(0x1016c51d, 0x5)    jmpd(0x1016c5a9, 0x87);                /* jmp 0x1016c5a9 */
l_0x1016c522:
    II(0x1016c522, 0x2)    fld(0 /* st0 */, 0x1 /* st1 */);       /* fld st0, st1 */
    II(0x1016c524, 0x3)    fstp(memq_a32(ss, ebp - 0x10));        /* fstp qword [ebp-0x10] */
    II(0x1016c527, 0x1)    wait();                                /* wait  */
    II(0x1016c528, 0x4)    mov(ax, memw_a32(ss, ebp - 0xa));      /* mov ax, [ebp-0xa] */
    II(0x1016c52c, 0x4)    and_(ax, 0x7ff0);                      /* and ax, 0x7ff0 */
    II(0x1016c530, 0x4)    sub(ax, 0x3ff0);                       /* sub ax, 0x3ff0 */
    II(0x1016c534, 0x4)    cmp(ax, 0x100);                        /* cmp ax, 0x100 */
    II(0x1016c538, 0x2)    jaed(0x1016c5a9, 0x6f);                /* jae 0x1016c5a9 */
    II(0x1016c53a, 0x2)    fld(0 /* st0 */, 0x1 /* st1 */);       /* fld st0, st1 */
    II(0x1016c53c, 0x3)    fistp(memd_a32(ss, ebp - 0x4));        /* fistp dword [ebp-0x4] */
    II(0x1016c53f, 0x1)    wait();                                /* wait  */
    II(0x1016c540, 0x4)    mov(ax, memw_a32(ss, ebp - 0x2));      /* mov ax, [ebp-0x2] */
    II(0x1016c544, 0x3)    or_(ax, ax);                           /* or ax, ax */
    II(0x1016c547, 0x2)    jnzd(0x1016c554, 0xb);                 /* jnz 0x1016c554 */
    II(0x1016c549, 0x4)    mov(ax, memw_a32(ss, ebp - 0x4));      /* mov ax, [ebp-0x4] */
    II(0x1016c54d, 0x5)    calld(0x1016c5d3, 0x81);               /* call 0x1016c5d3 */
    II(0x1016c552, 0x2)    jmpd(0x1016c57f, 0x2b);                /* jmp 0x1016c57f */
l_0x1016c554:
    II(0x1016c554, 0x2)    inc(ax);                               /* inc ax */
    II(0x1016c556, 0x2)    jnzd(0x1016c5a9, 0x51);                /* jnz 0x1016c5a9 */
    II(0x1016c558, 0x4)    or_(ax, memw_a32(ss, ebp - 0x4));      /* or ax, [ebp-0x4] */
    II(0x1016c55c, 0x2)    jzd(0x1016c5a9, 0x4b);                 /* jz 0x1016c5a9 */
    II(0x1016c55e, 0x3)    neg(ax);                               /* neg ax */
    II(0x1016c561, 0x5)    calld(0x1016c5d3, 0x6d);               /* call 0x1016c5d3 */
    II(0x1016c566, 0x2)    fld1();                                /* fld1  */
    II(0x1016c568, 0x7)    test(memb_a32(ds, 0x101be89c), 0x1);   /* test byte [0x101be89c], 0x1 */
    II(0x1016c56f, 0x2)    jnzd(0x1016c575, 0x4);                 /* jnz 0x1016c575 */
    II(0x1016c571, 0x2)    fdivrp(0x1 /* st1 */, 0 /* st0 */);    /* fdivrp st1, st0 */
    II(0x1016c573, 0x2)    jmpd(0x1016c57f, 0xa);                 /* jmp 0x1016c57f */
l_0x1016c575:
    II(0x1016c575, 0x5)    mov(eax, 0xf);                         /* mov eax, 0xf */
    II(0x1016c57a, 0x5)    calld(0x10187387, 0x1ae08);            /* call 0x10187387 */
l_0x1016c57f:
    II(0x1016c57f, 0x3)    fst(memq_a32(ss, ebp - 0x8));          /* fst qword [ebp-0x8] */
    II(0x1016c582, 0x1)    wait();                                /* wait  */
    II(0x1016c583, 0x4)    mov(ax, memw_a32(ss, ebp - 0x8));      /* mov ax, [ebp-0x8] */
    II(0x1016c587, 0x4)    or_(ax, memw_a32(ss, ebp - 0x6));      /* or ax, [ebp-0x6] */
    II(0x1016c58b, 0x4)    or_(ax, memw_a32(ss, ebp - 0x4));      /* or ax, [ebp-0x4] */
    II(0x1016c58f, 0x2)    jnzd(0x1016c5a5, 0x14);                /* jnz 0x1016c5a5 */
    II(0x1016c591, 0x4)    mov(ax, memw_a32(ss, ebp - 0x2));      /* mov ax, [ebp-0x2] */
    II(0x1016c595, 0x3)    shl(ax, 0x1);                          /* shl ax, 1 */
    II(0x1016c598, 0x4)    cmp(ax, 0xffe0);                       /* cmp ax, 0xffe0 */
    II(0x1016c59c, 0x2)    jnzd(0x1016c5a5, 0x7);                 /* jnz 0x1016c5a5 */
l_0x1016c59e:
    II(0x1016c59e, 0x2)    mov(al, 0x2);                          /* mov al, 0x2 */
    II(0x1016c5a0, 0x5)    jmpd(0x1016c4b7, -0xee);               /* jmp 0x1016c4b7 */
l_0x1016c5a5:
    II(0x1016c5a5, 0x2)    fstp(0x1 /* st1 */);                   /* fstp st1 */
    II(0x1016c5a7, 0x2)    jmpd(0x1016c5c8, 0x1f);                /* jmp 0x1016c5c8 */
l_0x1016c5a9:
    II(0x1016c5a9, 0x2)    fldln2();                              /* fldln2  */
    II(0x1016c5ab, 0x2)    fmul(0 /* st0 */, 0x2 /* st2 */);      /* fmul st0, st2 */
    II(0x1016c5ad, 0x2)    fxch(0 /* st0 */, 0x1 /* st1 */);      /* fxch st0, st1 */
    II(0x1016c5af, 0x2)    // invalid();                             /* invalid  */
    II(0x1016c5b1, 0x2)    fyl2x();                               /* fyl2x  */
    II(0x1016c5b3, 0x2)    mov(al, 0x7);                          /* mov al, 0x7 */
    II(0x1016c5b5, 0x5)    calld(0x10187204, 0x1ac4a);            /* call 0x10187204 */
    II(0x1016c5ba, 0x2)    cmp(al, 0);                            /* cmp al, 0x0 */
    II(0x1016c5bc, 0x2)    jnzd(0x1016c59e, -0x20);               /* jnz 0x1016c59e */
    II(0x1016c5be, 0x3)    mov(ah, memb_a32(ss, ebp - 0x7));      /* mov ah, [ebp-0x7] */
    II(0x1016c5c1, 0x1)    sahf();                                /* sahf  */
    II(0x1016c5c2, 0x2)    jaed(0x1016c5c6, 0x2);                 /* jae 0x1016c5c6 */
    II(0x1016c5c4, 0x2)    fchs();                                /* fchs  */
l_0x1016c5c6:
    II(0x1016c5c6, 0x2)    fstp(0x1 /* st1 */);                   /* fstp st1 */
l_0x1016c5c8:
    II(0x1016c5c8, 0x3)    fstp(memq_a32(ss, ebp - 0x8));         /* fstp qword [ebp-0x8] */
    II(0x1016c5cb, 0x3)    fld(memq_a32(ss, ebp - 0x8));          /* fld qword [ebp-0x8] */
    II(0x1016c5ce, 0x1)    wait();                                /* wait  */
    II(0x1016c5cf, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x1016c5d1, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x1016c5d2, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(sys_applay_pallete, func_applay_pallete, 0x20, {0x53, 0x51, 0x52, 0x56, 0x81, 0xec, 0, 0x3, 0, 0, 0x31, 0xdb, 0x31, 0xc9, 0x8a, 0x8, 0x8a, 0x89, 0xe0, 0xff, 0x1c, 0x10, 0x88, 0xc, 0x1c, 0x43, 0x8a, 0x8, 0x40, 0x88, 0x8b, 0xdf, 0xfc, 0x1c, 0x10, 0x81, 0xfb, 0, 0x3, 0, 0, 0x7c, 0xe1, 0x89, 0xe1, 0x31, 0xdb, 0xbe, 0xc9, 0x3, 0, 0, 0xba, 0xc8, 0x3, 0, 0, 0x88, 0xd8, 0xee, 0x89, 0xf2, 0x8a, 0x1, 0xee, 0x8a, 0x41, 0x1, 0x83, 0xc1, 0x3, 0xee, 0x8a, 0x41, 0xff, 0x43, 0xee, 0x81, 0xfb, 0, 0x1, 0, 0, 0x7c, 0xdf, 0x81, 0xc4, 0, 0x3, 0, 0, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
void func_applay_pallete() // eax - ptr to 0x300 size array.
{
    FUNC_START_V2(sys_applay_pallete, 0x20);
    II(sys_applay_pallete, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x1016cbbd, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x1016cbbe, 0x1)    pushd(edx);                            /* push edx */
    II(0x1016cbbf, 0x1)    pushd(esi);                            /* push esi */
    II(0x1016cbc0, 0x6)    sub(esp, 0x300);                       /* sub esp, 0x300 */
    II(0x1016cbc6, 0x2)    xor_(ebx, ebx);                        /* xor ebx, ebx */
l_0x1016cbc8:
    II(0x1016cbc8, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */                   // cycle begin, 0x300 iterators
    II(0x1016cbca, 0x2)    mov(cl, memb_a32(ds, eax));            /* mov cl, [eax] */
    II(0x1016cbcc, 0x6)    mov(cl, memb_a32(ds, ecx + 0x101cffe0)); /* mov cl, [ecx+0x101cffe0] */     // числа от 0 до 0x3f, потом 0.
    II(0x1016cbd2, 0x3)    mov(memb_a32(ss, esp + ebx), cl);      /* mov [esp+ebx], cl */              // save in local array.
    II(0x1016cbd5, 0x1)    inc(ebx);                              /* inc ebx */
    II(0x1016cbd6, 0x2)    mov(cl, memb_a32(ds, eax));            /* mov cl, [eax] */
    II(0x1016cbd8, 0x1)    inc(eax);                              /* inc eax */
    II(0x1016cbd9, 0x6)    mov(memb_a32(ds, ebx + 0x101cfcdf), cl); /* mov [ebx+0x101cfcdf], cl */
    II(0x1016cbdf, 0x6)    cmp(ebx, 0x300);                       /* cmp ebx, 0x300 */
    II(0x1016cbe5, 0x2)    jld(0x1016cbc8, -0x1f);                /* jl 0x1016cbc8 */                  // cycle end
    II(0x1016cbe7, 0x2)    mov(ecx, esp);                         /* mov ecx, esp */
    II(0x1016cbe9, 0x2)    xor_(ebx, ebx);                        /* xor ebx, ebx */
    II(0x1016cbeb, 0x5)    mov(esi, 0x3c9);                       /* mov esi, 0x3c9 */
l_0x1016cbf0:
    II(0x1016cbf0, 0x5)    mov(edx, 0x3c8);                       /* mov edx, 0x3c8 */                 // cycle begin, 0x100 iterators - write pallete to video card
    II(0x1016cbf5, 0x2)    mov(al, bl);                           /* mov al, bl */
    II(0x1016cbf7, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1016cbf8, 0x2)    mov(edx, esi);                         /* mov edx, esi */
    II(0x1016cbfa, 0x2)    mov(al, memb_a32(ds, ecx));            /* mov al, [ecx] */
    II(0x1016cbfc, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1016cbfd, 0x3)    mov(al, memb_a32(ds, ecx + 0x1));      /* mov al, [ecx+0x1] */
    II(0x1016cc00, 0x3)    add(ecx, 0x3);                         /* add ecx, 0x3 */
    II(0x1016cc03, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1016cc04, 0x3)    mov(al, memb_a32(ds, ecx - 0x1));      /* mov al, [ecx-0x1] */
    II(0x1016cc07, 0x1)    inc(ebx);                              /* inc ebx */
    II(0x1016cc08, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1016cc09, 0x6)    cmp(ebx, 0x100);                       /* cmp ebx, 0x100 */
    II(0x1016cc0f, 0x2)    jld(0x1016cbf0, -0x21);                /* jl 0x1016cbf0 */                   // cycle end
    II(0x1016cc11, 0x6)    add(esp, 0x300);                       /* add esp, 0x300 */
    II(0x1016cc17, 0x1)    popd(esi);                             /* pop esi */
    II(0x1016cc18, 0x1)    popd(edx);                             /* pop edx */
    II(0x1016cc19, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x1016cc1a, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x1016cc1b, 0x1)    retd();                                /* ret  */
}

//FUNC_INFO_V2(0x10168624, func_0x10168624, 0x20, {0x53, 0x51, 0x56, 0x83, 0xec, 0x4, 0x89, 0xc6, 0x89, 0xd1, 0xbb, 0x4, 0, 0, 0, 0x89, 0xe0, 0x31, 0xd2, 0xe8, 0xa4, 0xd7, 0xff, 0xff, 0xf6, 0xc1, 0x1, 0x74, 0x6, 0xc6, 0x4, 0x24, 0x77, 0xeb, 0x19, 0xf6, 0xc1, 0x10, 0x74, 0x10, 0xc6, 0x4, 0x24, 0x61, 0xf6, 0xc5, 0x1, 0x74, 0x17, 0xc6, 0x44, 0x24, 0x1, 0x74, 0xeb, 0x1a, 0xc6, 0x4, 0x24, 0x72, 0xf6, 0xc5, 0x1, 0x74, 0x7, 0xc6, 0x44, 0x24, 0x1, 0x74, 0xeb, 0xa, 0xf6, 0xc5, 0x2, 0x74, 0x5, 0xc6, 0x44, 0x24, 0x1, 0x62, 0x89, 0xe2, 0x89, 0xf0, 0xe8, 0x45, 0x61, 0, 0, 0x85, 0xc0, 0x75, 0x5, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x83, 0xc4, 0x4, 0x5e, 0x59, 0x5b, 0xc3})
//void func_0x10168624()
//{
//    FUNC_START_V2(0x10168624, 0x20);
//    II(0x10168624, 0x1)    pushd(ebx);                            /* push ebx */
//    II(0x10168625, 0x1)    pushd(ecx);                            /* push ecx */
//    II(0x10168626, 0x1)    pushd(esi);                            /* push esi */
//    II(0x10168627, 0x3)    sub(esp, 0x4);                         /* sub esp, 0x4 */
//    II(0x1016862a, 0x2)    mov(esi, eax);                         /* mov esi, eax */
//    II(0x1016862c, 0x2)    mov(ecx, edx);                         /* mov ecx, edx */
//    II(0x1016862e, 0x5)    mov(ebx, 0x4);                         /* mov ebx, 0x4 */
//    II(0x10168633, 0x2)    mov(eax, esp);                         /* mov eax, esp */
//    II(0x10168635, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
//    II(0x10168637, 0x5)    calld(call_memset, -0x285c);            /* call 0x10165de0 */
//    II(0x1016863c, 0x3)    test(cl, 0x1);                         /* test cl, 0x1 */
//    II(0x1016863f, 0x2)    jzd(0x10168647, 0x6);                  /* jz 0x10168647 */
//    II(0x10168641, 0x4)    mov(memb_a32(ss, esp), 0x77);          /* mov byte [esp], 0x77 */
//    II(0x10168645, 0x2)    jmpd(0x10168660, 0x19);                /* jmp 0x10168660 */
//l_0x10168647:
//    II(0x10168647, 0x3)    test(cl, 0x10);                        /* test cl, 0x10 */
//    II(0x1016864a, 0x2)    jzd(0x1016865c, 0x10);                 /* jz 0x1016865c */
//    II(0x1016864c, 0x4)    mov(memb_a32(ss, esp), 0x61);          /* mov byte [esp], 0x61 */
//    II(0x10168650, 0x3)    test(ch, 0x1);                         /* test ch, 0x1 */
//    II(0x10168653, 0x2)    jzd(0x1016866c, 0x17);                 /* jz 0x1016866c */
//    II(0x10168655, 0x5)    mov(memb_a32(ss, esp + 0x1), 0x74);    /* mov byte [esp+0x1], 0x74 */
//    II(0x1016865a, 0x2)    jmpd(0x10168676, 0x1a);                /* jmp 0x10168676 */
//l_0x1016865c:
//    II(0x1016865c, 0x4)    mov(memb_a32(ss, esp), 0x72);          /* mov byte [esp], 0x72 */
//l_0x10168660:
//    II(0x10168660, 0x3)    test(ch, 0x1);                         /* test ch, 0x1 */
//    II(0x10168663, 0x2)    jzd(0x1016866c, 0x7);                  /* jz 0x1016866c */
//    II(0x10168665, 0x5)    mov(memb_a32(ss, esp + 0x1), 0x74);    /* mov byte [esp+0x1], 0x74 */
//    II(0x1016866a, 0x2)    jmpd(0x10168676, 0xa);                 /* jmp 0x10168676 */
//l_0x1016866c:
//    II(0x1016866c, 0x3)    test(ch, 0x2);                         /* test ch, 0x2 */
//    II(0x1016866f, 0x2)    jzd(0x10168676, 0x5);                  /* jz 0x10168676 */
//    II(0x10168671, 0x5)    mov(memb_a32(ss, esp + 0x1), 0x62);    /* mov byte [esp+0x1], 0x62 */
//l_0x10168676:
//    II(0x10168676, 0x2)    mov(edx, esp);                         /* mov edx, esp */
//    II(0x10168678, 0x2)    mov(eax, esi);                         /* mov eax, esi */        // "color.pal"
//    II(0x1016867a, 0x5)    calld(sys_fopen_ex, 0x6145);             /* call sys_fopen_ex */
//    II(0x1016867f, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x10168681, 0x2)    jnzd(0x10168688, 0x5);                 /* jnz 0x10168688 */
//    II(0x10168683, 0x5)    mov(eax, 0xffffffff);                  /* mov eax, 0xffffffff */
//l_0x10168688:
//    II(0x10168688, 0x3)    add(esp, 0x4);                         /* add esp, 0x4 */
//    II(0x1016868b, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016868c, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016868d, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016868e, 0x1)    retd();                                /* ret  */
//}

//FUNC_INFO_V2(call_strcat, func_call_strcat, 0x20, {0x51, 0x56, 0x57, 0x89, 0xd6, 0x89, 0xc7, 0x6, 0x1e, 0x7, 0x57, 0x2b, 0xc9, 0x49, 0xb0, 0, 0xf2, 0xae, 0x4f, 0x8a, 0x6, 0x88, 0x7, 0x3c, 0, 0x74, 0x10, 0x8a, 0x46, 0x1, 0x83, 0xc6, 0x2, 0x88, 0x47, 0x1, 0x83, 0xc7, 0x2, 0x3c, 0, 0x75, 0xe8, 0x5f, 0x7, 0x89, 0xf8, 0x5f, 0x5e, 0x59, 0xc3})
//void func_call_strcat()  // input eax - dst, edx - src
//{
//    FUNC_START_V2(call_strcat, 0x20);
//    II(call_strcat, 0x1)    pushd(ecx);                            /* push ecx */
//    II(0x10165f32, 0x1)    pushd(esi);                            /* push esi */
//    II(0x10165f33, 0x1)    pushd(edi);                            /* push edi */
//    II(0x10165f34, 0x2)    mov(esi, edx);                         /* mov esi, edx */
//    II(0x10165f36, 0x2)    mov(edi, eax);                         /* mov edi, eax */
//    II(0x10165f38, 0x1)    pushd(es);                             /* push es */
//    II(0x10165f39, 0x1)    pushd(ds);                             /* push ds */
//    II(0x10165f3a, 0x1)    popd(es);                              /* pop es */
//    II(0x10165f3b, 0x1)    pushd(edi);                            /* push edi */
//    II(0x10165f3c, 0x2)    sub(ecx, ecx);                         /* sub ecx, ecx */
//    II(0x10165f3e, 0x1)    dec(ecx);                              /* dec ecx */
//    II(0x10165f3f, 0x2)    mov(al, 0);                            /* mov al, 0x0 */
//    II(0x10165f41, 0x2)    repne_a32 scasb_a32();                 /* repne scasb  */
//    II(0x10165f43, 0x1)    dec(edi);                              /* dec edi */
//l_0x10165f44:
//    II(0x10165f44, 0x2)    mov(al, memb_a32(ds, esi));            /* mov al, [esi] */
//    II(0x10165f46, 0x2)    mov(memb_a32(ds, edi), al);            /* mov [edi], al */
//    II(0x10165f48, 0x2)    cmp(al, 0);                            /* cmp al, 0x0 */
//    II(0x10165f4a, 0x2)    jzd(0x10165f5c, 0x10);                 /* jz 0x10165f5c */
//    II(0x10165f4c, 0x3)    mov(al, memb_a32(ds, esi + 0x1));      /* mov al, [esi+0x1] */
//    II(0x10165f4f, 0x3)    add(esi, 0x2);                         /* add esi, 0x2 */
//    II(0x10165f52, 0x3)    mov(memb_a32(ds, edi + 0x1), al);      /* mov [edi+0x1], al */
//    II(0x10165f55, 0x3)    add(edi, 0x2);                         /* add edi, 0x2 */
//    II(0x10165f58, 0x2)    cmp(al, 0);                            /* cmp al, 0x0 */
//    II(0x10165f5a, 0x2)    jnzd(0x10165f44, -0x18);               /* jnz 0x10165f44 */
//l_0x10165f5c:
//    II(0x10165f5c, 0x1)    popd(edi);                             /* pop edi */
//    II(0x10165f5d, 0x1)    popd(es);                              /* pop es */
//    II(0x10165f5e, 0x2)    mov(eax, edi);                         /* mov eax, edi */
//    II(0x10165f60, 0x1)    popd(edi);                             /* pop edi */
//    II(0x10165f61, 0x1)    popd(esi);                             /* pop esi */
//    II(0x10165f62, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x10165f63, 0x1)    retd();                                /* ret  */
//}

FUNC_INFO_V3(sys_strncmp, 0x9dead3f70da0bfe6, 0x20, {0x51, 0x85, 0xdb, 0x75, 0x4, 0x31, 0xc0, 0x59, 0xc3, 0x8a, 0x8, 0x8a, 0x2a, 0x38, 0xe9, 0x74, 0xe, 0x31, 0xdb, 0x31, 0xc0, 0x88, 0xcb, 0x88, 0xe8, 0x29, 0xc3, 0x89, 0xd8, 0x59, 0xc3, 0x80, 0x38, 0, 0x74, 0xe1, 0x40, 0x42, 0x4b, 0xeb, 0xd8})
{
    FUNC_START_V2(sys_strncmp, 0x20);   // edx, eax - ptr,  ebx - size
    II(sys_strncmp, 0x1)       pushd(ecx);                         /* push ecx */
l_0x1017915d:
    II(0x1017915d, 0x2)     test(ebx, ebx);                     /* test ebx, ebx */
    II(0x1017915f, 0x2)     jnzd(0x10179165, 0x4);              /* jnz 0x10179165 */
l_0x10179161:
    II(0x10179161, 0x2)     xor_(eax, eax);                     /* xor eax, eax */      // return 0 - equal
    II(0x10179163, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10179164, 0x1)     retd();                             /* ret  */
l_0x10179165:
    II(0x10179165, 0x2)     mov(cl, memb_a32(ds, eax));         /* mov cl, [eax] */
    II(0x10179167, 0x2)     mov(ch, memb_a32(ds, edx));         /* mov ch, [edx] */
    II(0x10179169, 0x2)     cmp(cl, ch);                        /* cmp cl, ch */
    II(0x1017916b, 0x2)     jzd(0x1017917b, 0xe);               /* jz 0x1017917b */
    II(0x1017916d, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */
    II(0x1017916f, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10179171, 0x2)     mov(bl, cl);                        /* mov bl, cl */
    II(0x10179173, 0x2)     mov(al, ch);                        /* mov al, ch */
    II(0x10179175, 0x2)     sub(ebx, eax);                      /* sub ebx, eax */
    II(0x10179177, 0x2)     mov(eax, ebx);                      /* mov eax, ebx */
    II(0x10179179, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1017917a, 0x1)     retd();                             /* ret  */
l_0x1017917b:
    II(0x1017917b, 0x3)     cmp(memb_a32(ds, eax), 0);          /* cmp byte [eax], 0x0 */
    II(0x1017917e, 0x2)     jzd(0x10179161, -0x1f);             /* jz 0x10179161 */
    II(0x10179180, 0x1)     inc(eax);                           /* inc eax */
    II(0x10179181, 0x1)     inc(edx);                           /* inc edx */
    II(0x10179182, 0x1)     dec(ebx);                           /* dec ebx */
    II(0x10179183, 0x2)     jmpd(0x1017915d, -0x28);            /* jmp 0x1017915d */
}

//FUNC_INFO_V2(call_strcasecmp, func_call_strcasecmp, 0x20, {0x53, 0x51, 0x89, 0xc3, 0x8a, 0x3, 0x31, 0xc9, 0x8a, 0x22, 0x88, 0xc1, 0x83, 0xf9, 0x41, 0x7c, 0x7, 0x83, 0xf9, 0x5a, 0x7f, 0x2, 0x4, 0x20, 0x31, 0xc9, 0x88, 0xe1, 0x83, 0xf9, 0x41, 0x7c, 0x8, 0x83, 0xf9, 0x5a, 0x7f, 0x3, 0x80, 0xc4, 0x20, 0x38, 0xe0, 0x75, 0x8, 0x84, 0xe4, 0x74, 0x4, 0x43, 0x42, 0xeb, 0xcf, 0x31, 0xd2, 0x88, 0xc2, 0x88, 0xe0, 0x25, 0xff, 0, 0, 0, 0x29, 0xc2, 0x89, 0xd0, 0x59, 0x5b, 0xc3})
//void func_call_strcasecmp() // input  eax edx,   output eax
//{
//    FUNC_START_V2(call_strcasecmp, 0x20);
//    II(call_strcasecmp, 0x1)    pushd(ebx);                            /* push ebx */
//    II(0x10166131, 0x1)    pushd(ecx);                            /* push ecx */
//    II(0x10166132, 0x2)    mov(ebx, eax);                         /* mov ebx, eax */
//l_0x10166134:
//    II(0x10166134, 0x2)    mov(al, memb_a32(ds, ebx));            /* mov al, [ebx] */
//    II(0x10166136, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */
//    II(0x10166138, 0x2)    mov(ah, memb_a32(ds, edx));            /* mov ah, [edx] */
//    II(0x1016613a, 0x2)    mov(cl, al);                           /* mov cl, al */
//    II(0x1016613c, 0x3)    cmp(ecx, 0x41);                        /* cmp ecx, 0x41 */  // 'A'
//    II(0x1016613f, 0x2)    jld(0x10166148, 0x7);                  /* jl 0x10166148 */
//    II(0x10166141, 0x3)    cmp(ecx, 0x5a);                        /* cmp ecx, 0x5a */  // 'Z'
//    II(0x10166144, 0x2)    jgd(0x10166148, 0x2);                  /* jg 0x10166148 */
//    II(0x10166146, 0x2)    add(al, 0x20);                         /* add al, 0x20 */   // to lower case
//l_0x10166148:
//    II(0x10166148, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */
//    II(0x1016614a, 0x2)    mov(cl, ah);                           /* mov cl, ah */
//    II(0x1016614c, 0x3)    cmp(ecx, 0x41);                        /* cmp ecx, 0x41 */
//    II(0x1016614f, 0x2)    jld(0x10166159, 0x8);                  /* jl 0x10166159 */
//    II(0x10166151, 0x3)    cmp(ecx, 0x5a);                        /* cmp ecx, 0x5a */
//    II(0x10166154, 0x2)    jgd(0x10166159, 0x3);                  /* jg 0x10166159 */
//    II(0x10166156, 0x3)    add(ah, 0x20);                         /* add ah, 0x20 */
//l_0x10166159:
//    II(0x10166159, 0x2)    cmp(al, ah);                           /* cmp al, ah */
//    II(0x1016615b, 0x2)    jnzd(0x10166165, 0x8);                 /* jnz 0x10166165 */
//    II(0x1016615d, 0x2)    test(ah, ah);                          /* test ah, ah */
//    II(0x1016615f, 0x2)    jzd(0x10166165, 0x4);                  /* jz 0x10166165 */
//    II(0x10166161, 0x1)    inc(ebx);                              /* inc ebx */
//    II(0x10166162, 0x1)    inc(edx);                              /* inc edx */
//    II(0x10166163, 0x2)    jmpd(0x10166134, -0x31);               /* jmp 0x10166134 */
//l_0x10166165:
//    II(0x10166165, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
//    II(0x10166167, 0x2)    mov(dl, al);                           /* mov dl, al */
//    II(0x10166169, 0x2)    mov(al, ah);                           /* mov al, ah */
//    II(0x1016616b, 0x5)    and_(eax, 0xff);                       /* and eax, 0xff */
//    II(0x10166170, 0x2)    sub(edx, eax);                         /* sub edx, eax */
//    II(0x10166172, 0x2)    mov(eax, edx);                         /* mov eax, edx */
//    II(0x10166174, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x10166175, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x10166176, 0x1)    retd();                                /* ret  */
//}

FUNC_INFO_V3(0x1013468c, 0x8efec278d71ef807, 0x20, {0x68, 0x30, 0, 0, 0, 0xe8, 0xbc, 0x16, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0xb8, 0, 0x15, 0, 0, 0xe8, 0x62, 0x19, 0x3, 0, 0xa3, 0x58, 0x94, 0x1c, 0x10, 0x83, 0x3d, 0x58, 0x94, 0x1c, 0x10, 0, 0x75, 0xc, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xe9, 0x9f, 0x2, 0, 0, 0xa1, 0x58, 0x94, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0x30, 0xc0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0xa3, 0xa0, 0x70, 0x1c, 0x10, 0xa1, 0xa0, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xa4, 0x70, 0x1c, 0x10, 0xa1, 0xa4, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xa8, 0x70, 0x1c, 0x10, 0xa1, 0xa8, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xac, 0x70, 0x1c, 0x10, 0xa1, 0xac, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xb0, 0x70, 0x1c, 0x10, 0xa1, 0xb0, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xb4, 0x70, 0x1c, 0x10, 0xa1, 0xb4, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xb8, 0x70, 0x1c, 0x10, 0xa1, 0xb8, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xbc, 0x70, 0x1c, 0x10, 0xa1, 0xbc, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xc4, 0x70, 0x1c, 0x10, 0xa1, 0xc4, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xc0, 0x70, 0x1c, 0x10, 0xa1, 0xc0, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xc8, 0x70, 0x1c, 0x10, 0xa1, 0xc8, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xcc, 0x70, 0x1c, 0x10, 0xa1, 0xcc, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0x5c, 0x94, 0x1c, 0x10, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x3d, 0, 0x1, 0, 0, 0x7d, 0x50, 0xf, 0xbf, 0x55, 0xfc, 0xa1, 0xb0, 0x70, 0x1c, 0x10, 0x1, 0xc2, 0x8a, 0x45, 0xfc, 0x88, 0x2, 0xf, 0xbf, 0x5d, 0xfc, 0xa1, 0xac, 0x70, 0x1c, 0x10, 0x1, 0xc3, 0x8a, 0x2, 0x88, 0x3, 0xf, 0xbf, 0x55, 0xfc, 0xa1, 0xa8, 0x70, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0x13, 0x88, 0x10, 0xf, 0xbf, 0x5d, 0xfc, 0x8b, 0x15, 0xa4, 0x70, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0, 0x88, 0x2, 0xf, 0xbf, 0x45, 0xfc, 0x8b, 0x1d, 0xa0, 0x70, 0x1c, 0x10, 0x1, 0xd8, 0x8a, 0x12, 0x88, 0x10, 0xeb, 0x9f, 0x66, 0xc7, 0x45, 0xfc, 0, 0, 0xc7, 0x45, 0xf8, 0x20, 0, 0, 0, 0xeb, 0xd, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x45, 0xfc, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x18, 0xf, 0x8d, 0xa7, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x8, 0x75, 0x4, 0x83, 0x45, 0xf8, 0x8, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0x98, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x1d, 0xa0, 0x70, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0x80, 0xf0, 0xb4, 0x1b, 0x10, 0x88, 0x2, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xf8, 0x8b, 0x1d, 0xa4, 0x70, 0x1c, 0x10, 0x1, 0xd8, 0x8a, 0x92, 0xf8, 0xb4, 0x1b, 0x10, 0x88, 0x10, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0x98, 0xf, 0xbf, 0x5d, 0xf8, 0x8b, 0x15, 0xa8, 0x70, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0x80, 0, 0xb5, 0x1b, 0x10, 0x88, 0x2, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0x98, 0xf, 0xbf, 0x5d, 0xf8, 0x8b, 0x15, 0xac, 0x70, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0x80, 0x8, 0xb5, 0x1b, 0x10, 0x88, 0x2, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xf8, 0x8b, 0x1d, 0xb0, 0x70, 0x1c, 0x10, 0x1, 0xd8, 0x8a, 0x92, 0x10, 0xb5, 0x1b, 0x10, 0x88, 0x10, 0xe9, 0x3f, 0xff, 0xff, 0xff, 0xa1, 0x5c, 0x94, 0x1c, 0x10, 0x5, 0, 0x7, 0, 0, 0x89, 0x45, 0xf4, 0x66, 0xc7, 0x45, 0xfc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x3d, 0, 0x1, 0, 0, 0x7d, 0xd, 0x8b, 0x55, 0xf4, 0xff, 0x45, 0xf4, 0x8a, 0x45, 0xfc, 0x88, 0x2, 0xeb, 0xe1, 0x66, 0xc7, 0x5, 0xb4, 0x61, 0x1c, 0x10, 0, 0x20, 0xa1, 0xa0, 0x70, 0x1c, 0x10, 0xa3, 0xb6, 0x61, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xb0, 0x64, 0x1c, 0x10, 0, 0x10, 0xa1, 0xa4, 0x70, 0x1c, 0x10, 0xa3, 0xb2, 0x64, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xac, 0x67, 0x1c, 0x10, 0, 0x8, 0xa1, 0xa8, 0x70, 0x1c, 0x10, 0xa3, 0xae, 0x67, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xa8, 0x6a, 0x1c, 0x10, 0, 0x4, 0xa1, 0xac, 0x70, 0x1c, 0x10, 0xa3, 0xaa, 0x6a, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xa4, 0x6d, 0x1c, 0x10, 0, 0x80, 0xa1, 0xb0, 0x70, 0x1c, 0x10, 0xa3, 0xa6, 0x6d, 0x1c, 0x10, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x1013468c, 0x20);
    II(0x1013468c, 0x5)     pushd(0x30);                        /* push dword 0x30 */
    II(0x10134691, 0x5)     calld(sys_check_available_stack_size, 0x316bc); /* call 0x10165d52 */
    II(0x10134696, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x10134697, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x10134698, 0x1)     pushd(edx);                         /* push edx */
    II(0x10134699, 0x1)     pushd(esi);                         /* push esi */
    II(0x1013469a, 0x1)     pushd(edi);                         /* push edi */
    II(0x1013469b, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x1013469c, 0x2)     mov(ebp, esp);                      /* mov ebp, esp */
    II(0x1013469e, 0x6)     sub(esp, 0x14);                     /* sub esp, 0x14 */
    II(0x101346a4, 0x5)     mov(eax, 0x1500);                   /* mov eax, 0x1500 */
    II(0x101346a9, 0x5)     calld(sys_malloc_v2_ref, 0x31962);    /* call 0x10166010 */
    II(0x101346ae, 0x5)     mov(memd_a32(ds, 0x101c9458), eax); /* mov [0x101c9458], eax */           // malloc 0x1500
    II(0x101346b3, 0x7)     cmp(memd_a32(ds, 0x101c9458), 0);   /* cmp dword [0x101c9458], 0x0 */
    II(0x101346ba, 0x2)     jnzd(0x101346c8, 0xc);              /* jnz 0x101346c8 */
       II(0x101346bc, 0x7)     mov(memd_a32(ss, ebp - 0x14), 0);   /* mov dword [ebp-0x14], 0x0 */
       II(0x101346c3, 0x5)     jmpd(0x10134967, 0x29f);            /* jmp 0x10134967 */                  // return 0; - fail
l_0x101346c8:
    II(0x101346c8, 0x5)     mov(eax, memd_a32(ds, 0x101c9458)); /* mov eax, [0x101c9458] */
    II(0x101346cd, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x101346d2, 0x2)     xor_(al, al);                       /* xor al, al */
    II(0x101346d4, 0x3)     mov(memd_a32(ss, ebp - 0x10), eax); /* mov [ebp-0x10], eax */
    II(0x101346d7, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x101346da, 0x5)     mov(memd_a32(ds, 0x101c70a0), eax); /* mov [0x101c70a0], eax */
    II(0x101346df, 0x5)     mov(eax, memd_a32(ds, 0x101c70a0)); /* mov eax, [0x101c70a0] */
    II(0x101346e4, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x101346e9, 0x5)     mov(memd_a32(ds, 0x101c70a4), eax); /* mov [0x101c70a4], eax */
    II(0x101346ee, 0x5)     mov(eax, memd_a32(ds, 0x101c70a4)); /* mov eax, [0x101c70a4] */
    II(0x101346f3, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x101346f8, 0x5)     mov(memd_a32(ds, 0x101c70a8), eax); /* mov [0x101c70a8], eax */
    II(0x101346fd, 0x5)     mov(eax, memd_a32(ds, 0x101c70a8)); /* mov eax, [0x101c70a8] */
    II(0x10134702, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x10134707, 0x5)     mov(memd_a32(ds, 0x101c70ac), eax); /* mov [0x101c70ac], eax */
    II(0x1013470c, 0x5)     mov(eax, memd_a32(ds, 0x101c70ac)); /* mov eax, [0x101c70ac] */
    II(0x10134711, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x10134716, 0x5)     mov(memd_a32(ds, 0x101c70b0), eax); /* mov [0x101c70b0], eax */
    II(0x1013471b, 0x5)     mov(eax, memd_a32(ds, 0x101c70b0)); /* mov eax, [0x101c70b0] */
    II(0x10134720, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x10134725, 0x5)     mov(memd_a32(ds, 0x101c70b4), eax); /* mov [0x101c70b4], eax */
    II(0x1013472a, 0x5)     mov(eax, memd_a32(ds, 0x101c70b4)); /* mov eax, [0x101c70b4] */
    II(0x1013472f, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x10134734, 0x5)     mov(memd_a32(ds, 0x101c70b8), eax); /* mov [0x101c70b8], eax */
    II(0x10134739, 0x5)     mov(eax, memd_a32(ds, 0x101c70b8)); /* mov eax, [0x101c70b8] */
    II(0x1013473e, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x10134743, 0x5)     mov(memd_a32(ds, 0x101c70bc), eax); /* mov [0x101c70bc], eax */
    II(0x10134748, 0x5)     mov(eax, memd_a32(ds, 0x101c70bc)); /* mov eax, [0x101c70bc] */
    II(0x1013474d, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x10134752, 0x5)     mov(memd_a32(ds, 0x101c70c4), eax); /* mov [0x101c70c4], eax */
    II(0x10134757, 0x5)     mov(eax, memd_a32(ds, 0x101c70c4)); /* mov eax, [0x101c70c4] */
    II(0x1013475c, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x10134761, 0x5)     mov(memd_a32(ds, 0x101c70c0), eax); /* mov [0x101c70c0], eax */
    II(0x10134766, 0x5)     mov(eax, memd_a32(ds, 0x101c70c0)); /* mov eax, [0x101c70c0] */
    II(0x1013476b, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x10134770, 0x5)     mov(memd_a32(ds, 0x101c70c8), eax); /* mov [0x101c70c8], eax */
    II(0x10134775, 0x5)     mov(eax, memd_a32(ds, 0x101c70c8)); /* mov eax, [0x101c70c8] */
    II(0x1013477a, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x1013477f, 0x5)     mov(memd_a32(ds, 0x101c70cc), eax); /* mov [0x101c70cc], eax */
    II(0x10134784, 0x5)     mov(eax, memd_a32(ds, 0x101c70cc)); /* mov eax, [0x101c70cc] */
    II(0x10134789, 0x5)     add(eax, 0x100);                    /* add eax, 0x100 */
    II(0x1013478e, 0x5)     mov(memd_a32(ds, 0x101c945c), eax); /* mov [0x101c945c], eax */
    II(0x10134793, 0x7)     mov(memd_a32(ss, ebp - 0x4), 0);    /* mov dword [ebp-0x4], 0x0 */        // for (i = 0; i < 0x100; i++)   where i - memw_a32(ss, ebp - 0x4)
    II(0x1013479a, 0x2)     jmpd(0x101347a2, 0x6);              /* jmp 0x101347a2 */
l_0x1013479c:
    II(0x1013479c, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x1013479f, 0x3)     inc(memd_a32(ss, ebp - 0x4));       /* inc dword [ebp-0x4] */
l_0x101347a2:
    II(0x101347a2, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x4)); /* movsx eax, word [ebp-0x4] */
    II(0x101347a6, 0x5)     cmp(eax, 0x100);                    /* cmp eax, 0x100 */
    II(0x101347ab, 0x2)     jged(0x101347fd, 0x50);             /* jge 0x101347fd */
    II(0x101347ad, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x4)); /* movsx edx, word [ebp-0x4] */
    II(0x101347b1, 0x5)     mov(eax, memd_a32(ds, 0x101c70b0)); /* mov eax, [0x101c70b0] */           // fill  bytes 0, 1, ...
    II(0x101347b6, 0x2)     add(edx, eax);                      /* add edx, eax */
    II(0x101347b8, 0x3)     mov(al, memb_a32(ss, ebp - 0x4));   /* mov al, [ebp-0x4] */
    II(0x101347bb, 0x2)     mov(memb_a32(ds, edx), al);         /* mov [edx], al */
    II(0x101347bd, 0x4)     movsx(ebx, memw_a32(ss, ebp - 0x4)); /* movsx ebx, word [ebp-0x4] */
    II(0x101347c1, 0x5)     mov(eax, memd_a32(ds, 0x101c70ac)); /* mov eax, [0x101c70ac] */           // fill  bytes 0, 1, ...
    II(0x101347c6, 0x2)     add(ebx, eax);                      /* add ebx, eax */
    II(0x101347c8, 0x2)     mov(al, memb_a32(ds, edx));         /* mov al, [edx] */
    II(0x101347ca, 0x2)     mov(memb_a32(ds, ebx), al);         /* mov [ebx], al */
    II(0x101347cc, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x4)); /* movsx edx, word [ebp-0x4] */
    II(0x101347d0, 0x5)     mov(eax, memd_a32(ds, 0x101c70a8)); /* mov eax, [0x101c70a8] */           // ...
    II(0x101347d5, 0x2)     add(eax, edx);                      /* add eax, edx */
    II(0x101347d7, 0x2)     mov(dl, memb_a32(ds, ebx));         /* mov dl, [ebx] */
    II(0x101347d9, 0x2)     mov(memb_a32(ds, eax), dl);         /* mov [eax], dl */
    II(0x101347db, 0x4)     movsx(ebx, memw_a32(ss, ebp - 0x4)); /* movsx ebx, word [ebp-0x4] */
    II(0x101347df, 0x6)     mov(edx, memd_a32(ds, 0x101c70a4)); /* mov edx, [0x101c70a4] */
    II(0x101347e5, 0x2)     add(edx, ebx);                      /* add edx, ebx */
    II(0x101347e7, 0x2)     mov(al, memb_a32(ds, eax));         /* mov al, [eax] */
    II(0x101347e9, 0x2)     mov(memb_a32(ds, edx), al);         /* mov [edx], al */
    II(0x101347eb, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x4)); /* movsx eax, word [ebp-0x4] */
    II(0x101347ef, 0x6)     mov(ebx, memd_a32(ds, 0x101c70a0)); /* mov ebx, [0x101c70a0] */
    II(0x101347f5, 0x2)     add(eax, ebx);                      /* add eax, ebx */
    II(0x101347f7, 0x2)     mov(dl, memb_a32(ds, edx));         /* mov dl, [edx] */
    II(0x101347f9, 0x2)     mov(memb_a32(ds, eax), dl);         /* mov [eax], dl */
    II(0x101347fb, 0x2)     jmpd(0x1013479c, -0x61);            /* jmp 0x1013479c */                  // } /. for ./
l_0x101347fd:
    II(0x101347fd, 0x6)     mov(memw_a32(ss, ebp - 0x4), 0);    /* mov word [ebp-0x4], 0x0 */         // for (i = 0, j = 0x20; i < 0x18; i++, j++)
    II(0x10134803, 0x7)     mov(memd_a32(ss, ebp - 0x8), 0x20); /* mov dword [ebp-0x8], 0x20 */       // Думаю, тут что-то, связанное с символами.
    II(0x1013480a, 0x2)     jmpd(0x10134819, 0xd);              /* jmp 0x10134819 */
l_0x1013480c:
    II(0x1013480c, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x1013480f, 0x4)     inc(memw_a32(ss, ebp - 0x4));       /* inc word [ebp-0x4] */
    II(0x10134813, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10134816, 0x3)     inc(memd_a32(ss, ebp - 0x8));       /* inc dword [ebp-0x8] */
l_0x10134819:
    II(0x10134819, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x4)); /* movsx eax, word [ebp-0x4] */
    II(0x1013481d, 0x3)     cmp(eax, 0x18);                     /* cmp eax, 0x18 */
    II(0x10134820, 0x6)     jged(0x101348cd, 0xa7);             /* jge dword 0x101348cd */
    II(0x10134826, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x4)); /* movsx eax, word [ebp-0x4] */
    II(0x1013482a, 0x3)     cmp(eax, 0x8);                      /* cmp eax, 0x8 */
    II(0x1013482d, 0x2)     jnzd(0x10134833, 0x4);              /* jnz 0x10134833 */
    II(0x1013482f, 0x4)     add(memd_a32(ss, ebp - 0x8), 0x8);  /* add dword [ebp-0x8], 0x8 */
l_0x10134833:
    II(0x10134833, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x10134836, 0x5)     and_(eax, 0x7);                     /* and eax, 0x7 */
    II(0x1013483b, 0x1)     cwde();                             /* cwde  */
    II(0x1013483c, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x8)); /* movsx edx, word [ebp-0x8] */
    II(0x10134840, 0x6)     mov(ebx, memd_a32(ds, 0x101c70a0)); /* mov ebx, [0x101c70a0] */
    II(0x10134846, 0x2)     add(edx, ebx);                      /* add edx, ebx */
    II(0x10134848, 0x6)     mov(al, memb_a32(ds, eax + 0x101bb4f0)); /* mov al, [eax+0x101bb4f0] */         // "89:;<=>?"
    II(0x1013484e, 0x2)     mov(memb_a32(ds, edx), al);         /* mov [edx], al */
    II(0x10134850, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x10134853, 0x5)     and_(eax, 0x7);                     /* and eax, 0x7 */
    II(0x10134858, 0x3)     movsx(edx, ax);                     /* movsx edx, ax */
    II(0x1013485b, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x8)); /* movsx eax, word [ebp-0x8] */
    II(0x1013485f, 0x6)     mov(ebx, memd_a32(ds, 0x101c70a4)); /* mov ebx, [0x101c70a4] */
    II(0x10134865, 0x2)     add(eax, ebx);                      /* add eax, ebx */
    II(0x10134867, 0x6)     mov(dl, memb_a32(ds, edx + 0x101bb4f8)); /* mov dl, [edx+0x101bb4f8] */         // " !"#$%&'"
    II(0x1013486d, 0x2)     mov(memb_a32(ds, eax), dl);         /* mov [eax], dl */
    II(0x1013486f, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x10134872, 0x5)     and_(eax, 0x7);                     /* and eax, 0x7 */
    II(0x10134877, 0x1)     cwde();                             /* cwde  */
    II(0x10134878, 0x4)     movsx(ebx, memw_a32(ss, ebp - 0x8)); /* movsx ebx, word [ebp-0x8] */
    II(0x1013487c, 0x6)     mov(edx, memd_a32(ds, 0x101c70a8)); /* mov edx, [0x101c70a8] */
    II(0x10134882, 0x2)     add(edx, ebx);                      /* add edx, ebx */
    II(0x10134884, 0x6)     mov(al, memb_a32(ds, eax + 0x101bb500)); /* mov al, [eax+0x101bb500] */          // "01234567"
    II(0x1013488a, 0x2)     mov(memb_a32(ds, edx), al);         /* mov [edx], al */
    II(0x1013488c, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x1013488f, 0x5)     and_(eax, 0x7);                     /* and eax, 0x7 */
    II(0x10134894, 0x1)     cwde();                             /* cwde  */
    II(0x10134895, 0x4)     movsx(ebx, memw_a32(ss, ebp - 0x8)); /* movsx ebx, word [ebp-0x8] */
    II(0x10134899, 0x6)     mov(edx, memd_a32(ds, 0x101c70ac)); /* mov edx, [0x101c70ac] */
    II(0x1013489f, 0x2)     add(edx, ebx);                      /* add edx, ebx */
    II(0x101348a1, 0x6)     mov(al, memb_a32(ds, eax + 0x101bb508)); /* mov al, [eax+0x101bb508] */
    II(0x101348a7, 0x2)     mov(memb_a32(ds, edx), al);         /* mov [edx], al */
    II(0x101348a9, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x101348ac, 0x5)     and_(eax, 0x7);                     /* and eax, 0x7 */
    II(0x101348b1, 0x3)     movsx(edx, ax);                     /* movsx edx, ax */
    II(0x101348b4, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x8)); /* movsx eax, word [ebp-0x8] */
    II(0x101348b8, 0x6)     mov(ebx, memd_a32(ds, 0x101c70b0)); /* mov ebx, [0x101c70b0] */
    II(0x101348be, 0x2)     add(eax, ebx);                      /* add eax, ebx */
    II(0x101348c0, 0x6)     mov(dl, memb_a32(ds, edx + 0x101bb510)); /* mov dl, [edx+0x101bb510] */
    II(0x101348c6, 0x2)     mov(memb_a32(ds, eax), dl);         /* mov [eax], dl */
    II(0x101348c8, 0x5)     jmpd(0x1013480c, -0xc1);            /* jmp 0x1013480c */                           // } /. for ./
l_0x101348cd:
    II(0x101348cd, 0x5)     mov(eax, memd_a32(ds, 0x101c945c)); /* mov eax, [0x101c945c] */
    II(0x101348d2, 0x5)     add(eax, 0x700);                    /* add eax, 0x700 */
    II(0x101348d7, 0x3)     mov(memd_a32(ss, ebp - 0xc), eax);  /* mov [ebp-0xc], eax */
    II(0x101348da, 0x6)     mov(memw_a32(ss, ebp - 0x4), 0);    /* mov word [ebp-0x4], 0x0 */                  // for (i = 0; i < 0x100; i++)
    II(0x101348e0, 0x2)     jmpd(0x101348e9, 0x7);              /* jmp 0x101348e9 */
l_0x101348e2:
    II(0x101348e2, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4));  /* mov eax, [ebp-0x4] */
    II(0x101348e5, 0x4)     inc(memw_a32(ss, ebp - 0x4));       /* inc word [ebp-0x4] */
l_0x101348e9:
    II(0x101348e9, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x4)); /* movsx eax, word [ebp-0x4] */
    II(0x101348ed, 0x5)     cmp(eax, 0x100);                    /* cmp eax, 0x100 */
    II(0x101348f2, 0x2)     jged(0x10134901, 0xd);              /* jge 0x10134901 */
    II(0x101348f4, 0x3)     mov(edx, memd_a32(ss, ebp - 0xc));  /* mov edx, [ebp-0xc] */
    II(0x101348f7, 0x3)     inc(memd_a32(ss, ebp - 0xc));       /* inc dword [ebp-0xc] */
    II(0x101348fa, 0x3)     mov(al, memb_a32(ss, ebp - 0x4));   /* mov al, [ebp-0x4] */                        // fill  memd_a32(ds, 0x101c945c)  0, 1, ...
    II(0x101348fd, 0x2)     mov(memb_a32(ds, edx), al);         /* mov [edx], al */
    II(0x101348ff, 0x2)     jmpd(0x101348e2, -0x1f);            /* jmp 0x101348e2 */                           // } /. for ./
l_0x10134901:
    II(0x10134901, 0x9)     mov(memw_a32(ds, 0x101c61b4), 0x2000); /* mov word [0x101c61b4], 0x2000 */
    II(0x1013490a, 0x5)     mov(eax, memd_a32(ds, 0x101c70a0)); /* mov eax, [0x101c70a0] */
    II(0x1013490f, 0x5)     mov(memd_a32(ds, 0x101c61b6), eax); /* mov [0x101c61b6], eax */
    II(0x10134914, 0x9)     mov(memw_a32(ds, 0x101c64b0), 0x1000); /* mov word [0x101c64b0], 0x1000 */
    II(0x1013491d, 0x5)     mov(eax, memd_a32(ds, 0x101c70a4)); /* mov eax, [0x101c70a4] */
    II(0x10134922, 0x5)     mov(memd_a32(ds, 0x101c64b2), eax); /* mov [0x101c64b2], eax */
    II(0x10134927, 0x9)     mov(memw_a32(ds, 0x101c67ac), 0x800); /* mov word [0x101c67ac], 0x800 */
    II(0x10134930, 0x5)     mov(eax, memd_a32(ds, 0x101c70a8)); /* mov eax, [0x101c70a8] */
    II(0x10134935, 0x5)     mov(memd_a32(ds, 0x101c67ae), eax); /* mov [0x101c67ae], eax */
    II(0x1013493a, 0x9)     mov(memw_a32(ds, 0x101c6aa8), 0x400); /* mov word [0x101c6aa8], 0x400 */
    II(0x10134943, 0x5)     mov(eax, memd_a32(ds, 0x101c70ac)); /* mov eax, [0x101c70ac] */
    II(0x10134948, 0x5)     mov(memd_a32(ds, 0x101c6aaa), eax); /* mov [0x101c6aaa], eax */
    II(0x1013494d, 0x9)     mov(memw_a32(ds, 0x101c6da4), 0x8000); /* mov word [0x101c6da4], 0x8000 */
    II(0x10134956, 0x5)     mov(eax, memd_a32(ds, 0x101c70b0)); /* mov eax, [0x101c70b0] */
    II(0x1013495b, 0x5)     mov(memd_a32(ds, 0x101c6da6), eax); /* mov [0x101c6da6], eax */
    II(0x10134960, 0x7)     mov(memd_a32(ss, ebp - 0x14), 0x1); /* mov dword [ebp-0x14], 0x1 */
l_0x10134967:
    II(0x10134967, 0x3)     mov(eax, memd_a32(ss, ebp - 0x14)); /* mov eax, [ebp-0x14] */
    II(0x1013496a, 0x2)     mov(esp, ebp);                      /* mov esp, ebp */
    II(0x1013496c, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x1013496d, 0x1)     popd(edi);                          /* pop edi */
    II(0x1013496e, 0x1)     popd(esi);                          /* pop esi */
    II(0x1013496f, 0x1)     popd(edx);                          /* pop edx */
    II(0x10134970, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10134971, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10134972, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V2(0x1012124a, func_0x1012124a, 0x20, {0x68, 0x28, 0, 0, 0, 0xe8, 0xfe, 0x4a, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x1e, 0xf, 0x8d, 0x1f, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0xe4, 0xaf, 0x1b, 0x10, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x41, 0x2d, 0x1, 0, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x16, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x8, 0x89, 0x82, 0x9e, 0x53, 0x1c, 0x10, 0x83, 0x7d, 0xf4, 0, 0xf, 0x84, 0xe1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x16, 0x89, 0x90, 0x8c, 0x53, 0x1c, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x16, 0x89, 0x90, 0x90, 0x53, 0x1c, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x2, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x16, 0x89, 0x90, 0x94, 0x53, 0x1c, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x4, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x16, 0x89, 0x90, 0x98, 0x53, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x16, 0x66, 0xc7, 0x80, 0x9c, 0x53, 0x1c, 0x10, 0x1, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x16, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x16, 0x8b, 0x92, 0x8c, 0x53, 0x1c, 0x10, 0x1, 0xd2, 0x3b, 0x90, 0x90, 0x53, 0x1c, 0x10, 0x7d, 0x5f, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x16, 0xf, 0xbf, 0x5d, 0xf8, 0x6b, 0xdb, 0x16, 0x8b, 0x92, 0x90, 0x53, 0x1c, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xbb, 0x8c, 0x53, 0x1c, 0x10, 0x89, 0xc2, 0x89, 0xd3, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x16, 0x66, 0x89, 0x9a, 0x9c, 0x53, 0x1c, 0x10, 0xf, 0xbf, 0x5d, 0xf8, 0x6b, 0xdb, 0x16, 0xf, 0xbf, 0x55, 0xf8, 0x6b, 0xd2, 0x16, 0x8b, 0x8a, 0x9a, 0x53, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x8b, 0x83, 0x90, 0x53, 0x1c, 0x10, 0x8b, 0x93, 0x90, 0x53, 0x1c, 0x10, 0xc1, 0xfa, 0x1f, 0xf7, 0xf9, 0x89, 0x83, 0x90, 0x53, 0x1c, 0x10, 0xe9, 0xce, 0xfe, 0xff, 0xff, 0xc6, 0x5, 0x20, 0x56, 0x1c, 0x10, 0x1e, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
void func_0x1012124a()
{
    FUNC_START_V2(0x1012124a, 0x20);
    II(0x1012124a, 0x5)    pushd(0x28);                           /* push dword 0x28 */
    II(0x1012124f, 0x5)    calld(sys_check_available_stack_size, 0x44afe);            /* call sys_check_available_stack_size */
    II(0x10121254, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x10121255, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x10121256, 0x1)    pushd(edx);                            /* push edx */
    II(0x10121257, 0x1)    pushd(esi);                            /* push esi */
    II(0x10121258, 0x1)    pushd(edi);                            /* push edi */
    II(0x10121259, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x1012125a, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x1012125c, 0x6)    sub(esp, 0xc);                         /* sub esp, 0xc */
    II(0x10121262, 0x7)    mov(memd_a32(ss, ebp - 0x8), 0);       /* mov dword [ebp-0x8], 0x0 */   // for (i = 0; i < 0x1e; i++)
    II(0x10121269, 0x2)    jmpd(0x10121271, 0x6);                 /* jmp 0x10121271 */
l_0x1012126b:
    II(0x1012126b, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x1012126e, 0x3)    inc(memd_a32(ss, ebp - 0x8));          /* inc dword [ebp-0x8] */
l_0x10121271:
    II(0x10121271, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x8));   /* movsx eax, word [ebp-0x8] */
    II(0x10121275, 0x3)    cmp(eax, 0x1e);                        /* cmp eax, 0x1e */
    II(0x10121278, 0x6)    jged(0x1012139d, 0x11f);               /* jge dword 0x1012139d */

    II(0x1012127e, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x8));   /* movsx eax, word [ebp-0x8] */
    II(0x10121282, 0x2)    add(eax, eax);                         /* add eax, eax */
    II(0x10121284, 0x7)    mov(ax, memw_a32(ds, eax + 0x101bafe4)); /* mov ax, [eax+0x101bafe4] */        // arr of some res id - s16
    II(0x1012128b, 0x3)    mov(memd_a32(ss, ebp - 0x4), eax);     /* mov [ebp-0x4], eax */

    II(0x1012128e, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x4));   /* movsx eax, word [ebp-0x4] */
    II(0x10121292, 0x5)    calld(get_res_data_by_id, 0x12d41);    /* call get_res_data_by_id */
    II(0x10121297, 0x3)    mov(memd_a32(ss, ebp - 0xc), eax);     /* mov [ebp-0xc], eax */

    II(0x1012129a, 0x4)    movsx(edx, memw_a32(ss, ebp - 0x8));   /* movsx edx, word [ebp-0x8] */
    II(0x1012129e, 0x3)    imul(edx, edx, 0x16);                  /* imul edx, edx, 0x16 */
    II(0x101212a1, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x101212a4, 0x3)    add(eax, 0x8);                         /* add eax, 0x8 */
    II(0x101212a7, 0x6)    mov(memd_a32(ds, edx + 0x101c538c + 18), eax); /* mov [edx+0x101c538c + 18], eax */      // arr of 0x16 byte item,     u32 = ptr_of_res + 0x8

    II(0x101212ad, 0x4)    cmp(memd_a32(ss, ebp - 0xc), 0);       /* cmp dword [ebp-0xc], 0x0 */
    II(0x101212b1, 0x6)    jzd(0x10121398, 0xe1);                 /* jz dword 0x10121398 */               // if (ptr_of_res == NULL) continue;

    II(0x101212b7, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x101212ba, 0x3)    movsx(edx, memw_a32(ds, eax));         /* movsx edx, word [eax] */
    II(0x101212bd, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x8));   /* movsx eax, word [ebp-0x8] */
    II(0x101212c1, 0x3)    imul(eax, eax, 0x16);                  /* imul eax, eax, 0x16 */
    II(0x101212c4, 0x6)    mov(memd_a32(ds, eax + 0x101c538c), edx); /* mov [eax+0x101c538c], edx */      // = s16 - first of res data.

    II(0x101212ca, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x101212cd, 0x2)    mov(edx, memd_a32(ds, eax));           /* mov edx, [eax] */
    II(0x101212cf, 0x3)    sar(edx, 0x10);                        /* sar edx, 0x10 */
    II(0x101212d2, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x8));   /* movsx eax, word [ebp-0x8] */
    II(0x101212d6, 0x3)    imul(eax, eax, 0x16);                  /* imul eax, eax, 0x16 */
    II(0x101212d9, 0x6)    mov(memd_a32(ds, eax + 0x101c538c + 4), edx); /* mov [eax+0x101c538c + 4], edx */      // = s16 - offset +2 of res data

    II(0x101212df, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x101212e2, 0x3)    mov(edx, memd_a32(ds, eax + 0x2));     /* mov edx, [eax+0x2] */
    II(0x101212e5, 0x3)    sar(edx, 0x10);                        /* sar edx, 0x10 */
    II(0x101212e8, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x8));   /* movsx eax, word [ebp-0x8] */
    II(0x101212ec, 0x3)    imul(eax, eax, 0x16);                  /* imul eax, eax, 0x16 */
    II(0x101212ef, 0x6)    mov(memd_a32(ds, eax + 0x101c538c + 8), edx); /* mov [eax+0x101c538c + 8], edx */      // = s16 - offset +4 of res data

    II(0x101212f5, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x101212f8, 0x3)    mov(edx, memd_a32(ds, eax + 0x4));     /* mov edx, [eax+0x4] */
    II(0x101212fb, 0x3)    sar(edx, 0x10);                        /* sar edx, 0x10 */
    II(0x101212fe, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x8));   /* movsx eax, word [ebp-0x8] */
    II(0x10121302, 0x3)    imul(eax, eax, 0x16);                  /* imul eax, eax, 0x16 */
    II(0x10121305, 0x6)    mov(memd_a32(ds, eax + 0x101c538c + 12), edx); /* mov [eax+0x101c538c + 12], edx */      // = s16 - offset +6 of res data

    II(0x1012130b, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x8));   /* movsx eax, word [ebp-0x8] */
    II(0x1012130f, 0x3)    imul(eax, eax, 0x16);                  /* imul eax, eax, 0x16 */
    II(0x10121312, 0x9)    mov(memw_a32(ds, eax + 0x101c538c + 16), 0x1); /* mov word [eax+0x101c538c + 16], 0x1 */

    II(0x1012131b, 0x4)    movsx(eax, memw_a32(ss, ebp - 0x8));   /* movsx eax, word [ebp-0x8] */
    II(0x1012131f, 0x3)    imul(eax, eax, 0x16);                  /* imul eax, eax, 0x16 */
    II(0x10121322, 0x4)    movsx(edx, memw_a32(ss, ebp - 0x8));   /* movsx edx, word [ebp-0x8] */
    II(0x10121326, 0x3)    imul(edx, edx, 0x16);                  /* imul edx, edx, 0x16 */
    II(0x10121329, 0x6)    mov(edx, memd_a32(ds, edx + 0x101c538c)); /* mov edx, [edx+0x101c538c] */
    II(0x1012132f, 0x2)    add(edx, edx);                         /* add edx, edx */
    II(0x10121331, 0x6)    cmp(edx, memd_a32(ds, eax + 0x101c538c + 4)); /* cmp edx, [eax+0x101c538c + 4] */
    II(0x10121337, 0x2)    jged(0x10121398, 0x5f);                /* jge 0x10121398 */                 // continue

    II(0x10121339, 0x4)    movsx(edx, memw_a32(ss, ebp - 0x8));   /* movsx edx, word [ebp-0x8] */
    II(0x1012133d, 0x3)    imul(edx, edx, 0x16);                  /* imul edx, edx, 0x16 */
    II(0x10121340, 0x4)    movsx(ebx, memw_a32(ss, ebp - 0x8));   /* movsx ebx, word [ebp-0x8] */
    II(0x10121344, 0x3)    imul(ebx, ebx, 0x16);                  /* imul ebx, ebx, 0x16 */
    II(0x10121347, 0x6)    mov(edx, memd_a32(ds, edx + 0x101c538c + 4)); /* mov edx, [edx+0x101c538c + 4] */
    II(0x1012134d, 0x2)    mov(eax, edx);                         /* mov eax, edx */
    II(0x1012134f, 0x3)    sar(edx, 0x1f);                        /* sar edx, 0x1f */
    II(0x10121352, 0x6)    idiv(memd_a32(ds, ebx + 0x101c538c));  /* idiv dword [ebx+0x101c538c] */
    II(0x10121358, 0x2)    mov(edx, eax);                         /* mov edx, eax */
    II(0x1012135a, 0x2)    mov(ebx, edx);                         /* mov ebx, edx */
    II(0x1012135c, 0x4)    movsx(edx, memw_a32(ss, ebp - 0x8));   /* movsx edx, word [ebp-0x8] */
    II(0x10121360, 0x3)    imul(edx, edx, 0x16);                  /* imul edx, edx, 0x16 */
    II(0x10121363, 0x7)    mov(memw_a32(ds, edx + 0x101c538c + 16), bx); /* mov [edx+0x101c538c + 16], bx */
    II(0x1012136a, 0x4)    movsx(ebx, memw_a32(ss, ebp - 0x8));   /* movsx ebx, word [ebp-0x8] */
    II(0x1012136e, 0x3)    imul(ebx, ebx, 0x16);                  /* imul ebx, ebx, 0x16 */
    II(0x10121371, 0x4)    movsx(edx, memw_a32(ss, ebp - 0x8));   /* movsx edx, word [ebp-0x8] */
    II(0x10121375, 0x3)    imul(edx, edx, 0x16);                  /* imul edx, edx, 0x16 */
    II(0x10121378, 0x6)    mov(ecx, memd_a32(ds, edx + 0x101c539a)); /* mov ecx, [edx+0x101c539a] */
    II(0x1012137e, 0x3)    sar(ecx, 0x10);                        /* sar ecx, 0x10 */
    II(0x10121381, 0x6)    mov(eax, memd_a32(ds, ebx + 0x101c538c + 4)); /* mov eax, [ebx+0x101c538c + 4] */
    II(0x10121387, 0x6)    mov(edx, memd_a32(ds, ebx + 0x101c538c + 4)); /* mov edx, [ebx+0x101c538c + 4] */
    II(0x1012138d, 0x3)    sar(edx, 0x1f);                        /* sar edx, 0x1f */
    II(0x10121390, 0x2)    idiv(ecx);                             /* idiv ecx */
    II(0x10121392, 0x6)    mov(memd_a32(ds, ebx + 0x101c538c + 4), eax); /* mov [ebx+0x101c538c + 4], eax */
l_0x10121398:
    II(0x10121398, 0x5)    jmpd(0x1012126b, -0x132);              /* jmp 0x1012126b */                      // } /. for ./
l_0x1012139d:
    II(0x1012139d, 0x7)    mov(memb_a32(ds, 0x101c5620), 0x1e);   /* mov byte [0x101c5620], 0x1e */
    II(0x101213a4, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x101213a6, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x101213a7, 0x1)    popd(edi);                             /* pop edi */
    II(0x101213a8, 0x1)    popd(esi);                             /* pop esi */
    II(0x101213a9, 0x1)    popd(edx);                             /* pop edx */
    II(0x101213aa, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x101213ab, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x101213ac, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x100e90e1, func_0x100e90e1, 0x20, {0x68, 0x20, 0, 0, 0, 0xe8, 0x67, 0xcc, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x27, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2b, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2f, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x4, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0xe8, 0xa0, 0xae, 0x4, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0x6, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xf8, 0x89, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0xc, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0xc, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0xe, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0xe, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x10, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x12, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x12, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x14, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x14, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x17, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x17, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x15, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x15, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1b, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x1b, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x1f, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x23, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x23, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x16, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x16, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
void func_0x100e90e1()  // eax - ptr of 0x33 size item, edx - ptr of 0x2b size item.   Convert from edx to eax?
{
    FUNC_START_V2(0x100e90e1, 0x20);
    II(0x100e90e1, 0x5)    pushd(0x20);                           /* push dword 0x20 */
    II(0x100e90e6, 0x5)    calld(sys_check_available_stack_size, 0x7cc67);            /* call sys_check_available_stack_size */
    II(0x100e90eb, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x100e90ec, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x100e90ed, 0x1)    pushd(esi);                            /* push esi */
    II(0x100e90ee, 0x1)    pushd(edi);                            /* push edi */
    II(0x100e90ef, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x100e90f0, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x100e90f2, 0x6)    sub(esp, 0x8);                         /* sub esp, 0x8 */

    II(0x100e90f8, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
    II(0x100e90fb, 0x3)    mov(memd_a32(ss, ebp - 0x4), edx);     /* mov [ebp-0x4], edx */

//    II(0x100e90fe, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e9101, 0x7)    mov(memd_a32(ds, eax + 0x27), 0);      /* mov dword [eax+0x27], 0x0 */

//    II(0x100e9108, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e910b, 0x7)    mov(memd_a32(ds, eax + 0x2b), 0);      /* mov dword [eax+0x2b], 0x0 */

//    II(0x100e9112, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e9115, 0x7)    mov(memd_a32(ds, eax + 0x2f), 0);      /* mov dword [eax+0x2f], 0x0 */

    II(0x100e911c, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e911f, 0x4)    mov(dx, memw_a32(ds, eax + 0x4));      /* mov dx, [eax+0x4] */    // id ?
    II(0x100e9123, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e9126, 0x4)    mov(memw_a32(ds, eax + 0x4), dx);      /* mov [eax+0x4], dx */    // save id ?

//    II(0x100e912a, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e912d, 0x3)    mov(eax, memd_a32(ds, eax + 0x2));     /* mov eax, [eax+0x2] */
    II(0x100e9130, 0x3)    sar(eax, 0x10);                        /* sar eax, 0x10 */
    II(0x100e9133, 0x5)    calld(get_res_data_by_id, 0x4aea0);            /* call get_res_data_by_id */
    II(0x100e9138, 0x2)    mov(edx, eax);                         /* mov edx, eax */

    II(0x100e913a, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e913d, 0x3)    mov(memd_a32(ds, eax + 0x6), edx);     /* mov [eax+0x6], edx */

    II(0x100e9140, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e9143, 0x2)    mov(edx, memd_a32(ds, eax));           /* mov edx, [eax] */
    II(0x100e9145, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e9148, 0x2)    mov(memd_a32(ds, eax), edx);           /* mov [eax], edx */

    II(0x100e914a, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e914d, 0x4)    mov(dx, memw_a32(ds, eax + 0xa));      /* mov dx, [eax+0xa] */
    II(0x100e9151, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e9154, 0x4)    mov(memw_a32(ds, eax + 0xa), dx);      /* mov [eax+0xa], dx */

    II(0x100e9158, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e915b, 0x4)    mov(dx, memw_a32(ds, eax + 0xc));      /* mov dx, [eax+0xc] */
    II(0x100e915f, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e9162, 0x4)    mov(memw_a32(ds, eax + 0xc), dx);      /* mov [eax+0xc], dx */

    II(0x100e9166, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e9169, 0x4)    mov(dx, memw_a32(ds, eax + 0xe));      /* mov dx, [eax+0xe] */
    II(0x100e916d, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x100e9170, 0x4)    mov(memw_a32(ds, eax + 0xe), dx);      /* mov [eax+0xe], dx */

    II(0x100e9174, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e9177, 0x4)    mov(ax, memw_a32(ds, eax + 0x10));     /* mov ax, [eax+0x10] */
    II(0x100e917b, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x100e917e, 0x4)    mov(memw_a32(ds, edx + 0x10), ax);     /* mov [edx+0x10], ax */

    II(0x100e9182, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e9185, 0x4)    mov(ax, memw_a32(ds, eax + 0x12));     /* mov ax, [eax+0x12] */
    II(0x100e9189, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x100e918c, 0x4)    mov(memw_a32(ds, edx + 0x12), ax);     /* mov [edx+0x12], ax */

    II(0x100e9190, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e9193, 0x3)    mov(al, memb_a32(ds, eax + 0x14));     /* mov al, [eax+0x14] */
    II(0x100e9196, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x100e9199, 0x3)    mov(memb_a32(ds, edx + 0x14), al);     /* mov [edx+0x14], al */

    II(0x100e919c, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e919f, 0x3)    mov(eax, memd_a32(ds, eax + 0x17));    /* mov eax, [eax+0x17] */
    II(0x100e91a2, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x100e91a5, 0x3)    mov(memd_a32(ds, edx + 0x17), eax);    /* mov [edx+0x17], eax */

    II(0x100e91a8, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e91ab, 0x3)    mov(al, memb_a32(ds, eax + 0x15));     /* mov al, [eax+0x15] */
    II(0x100e91ae, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x100e91b1, 0x3)    mov(memb_a32(ds, edx + 0x15), al);     /* mov [edx+0x15], al */

    II(0x100e91b4, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e91b7, 0x3)    mov(eax, memd_a32(ds, eax + 0x1b));    /* mov eax, [eax+0x1b] */
    II(0x100e91ba, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x100e91bd, 0x3)    mov(memd_a32(ds, edx + 0x1b), eax);    /* mov [edx+0x1b], eax */

    II(0x100e91c0, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e91c3, 0x3)    mov(eax, memd_a32(ds, eax + 0x1f));    /* mov eax, [eax+0x1f] */
    II(0x100e91c6, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x100e91c9, 0x3)    mov(memd_a32(ds, edx + 0x1f), eax);    /* mov [edx+0x1f], eax */

    II(0x100e91cc, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e91cf, 0x3)    mov(eax, memd_a32(ds, eax + 0x23));    /* mov eax, [eax+0x23] */
    II(0x100e91d2, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x100e91d5, 0x3)    mov(memd_a32(ds, edx + 0x23), eax);    /* mov [edx+0x23], eax */

    II(0x100e91d8, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x100e91db, 0x3)    mov(al, memb_a32(ds, eax + 0x16));     /* mov al, [eax+0x16] */
    II(0x100e91de, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x100e91e1, 0x3)    mov(memb_a32(ds, edx + 0x16), al);     /* mov [edx+0x16], al */

    II(0x100e91e4, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x100e91e6, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x100e91e7, 0x1)    popd(edi);                             /* pop edi */
    II(0x100e91e8, 0x1)    popd(esi);                             /* pop esi */
    II(0x100e91e9, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x100e91ea, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x100e91eb, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x1013ad71, func_0x1013ad71, 0x20, {0x68, 0x2c, 0, 0, 0, 0xe8, 0xd7, 0xaf, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x75, 0x1a, 0x8b, 0x45, 0xf8, 0x83, 0x38, 0, 0x74, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x8a, 0x45, 0xf0, 0x88, 0x45, 0xf4, 0xeb, 0x18, 0x8b, 0x45, 0xf8, 0x83, 0x38, 0, 0x75, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
void func_0x1013ad71()  // input eax, edx    return bool al
{
    FUNC_START_V2(0x1013ad71, 0x20);
    II(0x1013ad71, 0x5)    pushd(0x2c);                           /* push dword 0x2c */
    II(0x1013ad76, 0x5)    calld(sys_check_available_stack_size, 0x2afd7);            /* call sys_check_available_stack_size */
    II(0x1013ad7b, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x1013ad7c, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x1013ad7d, 0x1)    pushd(esi);                            /* push esi */
    II(0x1013ad7e, 0x1)    pushd(edi);                            /* push edi */
    II(0x1013ad7f, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x1013ad80, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x1013ad82, 0x6)    sub(esp, 0x14);                        /* sub esp, 0x14 */
    II(0x1013ad88, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
    II(0x1013ad8b, 0x3)    mov(memd_a32(ss, ebp - 0x4), edx);     /* mov [ebp-0x4], edx */
    II(0x1013ad8e, 0x4)    cmp(memd_a32(ss, ebp - 0x4), 0);       /* cmp dword [ebp-0x4], 0x0 */
    II(0x1013ad92, 0x2)    jnzd(0x1013adae, 0x1a);                /* jnz 0x1013adae */
    II(0x1013ad94, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x1013ad97, 0x3)    cmp(memd_a32(ds, eax), 0);             /* cmp dword [eax], 0x0 */
    II(0x1013ad9a, 0x2)    jzd(0x1013ada2, 0x6);                  /* jz 0x1013ada2 */
    II(0x1013ad9c, 0x4)    mov(memb_a32(ss, ebp - 0x10), 0x1);    /* mov byte [ebp-0x10], 0x1 */
    II(0x1013ada0, 0x2)    jmpd(0x1013ada6, 0x4);                 /* jmp 0x1013ada6 */
l_0x1013ada2:
    II(0x1013ada2, 0x4)    mov(memb_a32(ss, ebp - 0x10), 0);      /* mov byte [ebp-0x10], 0x0 */
l_0x1013ada6:
    II(0x1013ada6, 0x3)    mov(al, memb_a32(ss, ebp - 0x10));     /* mov al, [ebp-0x10] */
    II(0x1013ada9, 0x3)    mov(memb_a32(ss, ebp - 0xc), al);      /* mov [ebp-0xc], al */
    II(0x1013adac, 0x2)    jmpd(0x1013adc6, 0x18);                /* jmp 0x1013adc6 */
l_0x1013adae:
    II(0x1013adae, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x1013adb1, 0x3)    cmp(memd_a32(ds, eax), 0);             /* cmp dword [eax], 0x0 */
    II(0x1013adb4, 0x2)    jnzd(0x1013adbc, 0x6);                 /* jnz 0x1013adbc */
    II(0x1013adb6, 0x4)    mov(memb_a32(ss, ebp - 0x14), 0x1);    /* mov byte [ebp-0x14], 0x1 */
    II(0x1013adba, 0x2)    jmpd(0x1013adc0, 0x4);                 /* jmp 0x1013adc0 */
l_0x1013adbc:
    II(0x1013adbc, 0x4)    mov(memb_a32(ss, ebp - 0x14), 0);      /* mov byte [ebp-0x14], 0x0 */
l_0x1013adc0:
    II(0x1013adc0, 0x3)    mov(al, memb_a32(ss, ebp - 0x14));     /* mov al, [ebp-0x14] */
    II(0x1013adc3, 0x3)    mov(memb_a32(ss, ebp - 0xc), al);      /* mov [ebp-0xc], al */
l_0x1013adc6:
    II(0x1013adc6, 0x3)    mov(al, memb_a32(ss, ebp - 0xc));      /* mov al, [ebp-0xc] */
    II(0x1013adc9, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x1013adcb, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x1013adcc, 0x1)    popd(edi);                             /* pop edi */
    II(0x1013adcd, 0x1)    popd(esi);                             /* pop esi */
    II(0x1013adce, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x1013adcf, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x1013add0, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x1028948f, func_0x1028948f, 0x20, {0xc6, 0x5, 0x63, 0x1, 0, 0, 0x1, 0x8b, 0xc7, 0xc1, 0xe8, 0x10, 0x66, 0xa3, 0x57, 0x1, 0, 0, 0x66, 0x89, 0x3d, 0x59, 0x1, 0, 0, 0x51, 0xb1, 0xc, 0x66, 0xd3, 0xe0, 0x66, 0x50, 0x66, 0x8b, 0xc7, 0xb1, 0x4, 0x66, 0xd3, 0xe8, 0x66, 0x8b, 0xc8, 0x66, 0x58, 0x66, 0x3, 0xc1, 0x59, 0x66, 0x89, 0xd, 0x65, 0x1, 0, 0, 0x66, 0x2b, 0xd, 0x55, 0x1, 0, 0, 0x66, 0x89, 0xd, 0x5d, 0x1, 0, 0, 0xb0, 0x50, 0x8a, 0x1d, 0x79, 0x1, 0, 0, 0xa, 0xc3, 0x8a, 0x1d, 0x53, 0x1, 0, 0, 0xa, 0xc3, 0x66, 0x8b, 0x15, 0x75, 0x1, 0, 0, 0xee, 0x66, 0x8b, 0x15, 0x39, 0x1, 0, 0, 0xa0, 0x57, 0x1, 0, 0, 0xee, 0x66, 0xba, 0xc, 0, 0xb0, 0, 0xee, 0x66, 0x8b, 0x15, 0x3b, 0x1, 0, 0, 0x66, 0xa1, 0x59, 0x1, 0, 0, 0x66, 0x83, 0x3d, 0x37, 0x1, 0, 0, 0x3, 0xf, 0x8e, 0x17, 0, 0, 0, 0x66, 0xd1, 0xe8, 0x66, 0x8b, 0x1d, 0x57, 0x1, 0, 0, 0x66, 0xd1, 0xeb, 0xf, 0x83, 0x4, 0, 0, 0, 0x66, 0x5, 0, 0x80, 0xee, 0x8a, 0xc4, 0xee, 0x66, 0x8b, 0x15, 0x73, 0x1, 0, 0, 0xb0, 0, 0xee, 0x66, 0x8b, 0x15, 0x5f, 0x1, 0, 0, 0xa0, 0x37, 0x1, 0, 0, 0x3c, 0x3, 0xf, 0x8e, 0xf, 0, 0, 0, 0x66, 0xa1, 0x5d, 0x1, 0, 0, 0x66, 0xd1, 0xe8, 0x66, 0xa3, 0x5d, 0x1, 0, 0, 0x66, 0xa1, 0x5d, 0x1, 0, 0, 0xee, 0x8a, 0xc4, 0xee, 0xe8, 0x8c, 0x1, 0, 0, 0x66, 0x8b, 0x15, 0x77, 0x1, 0, 0, 0xa0, 0x79, 0x1, 0, 0, 0xee, 0x66, 0x8b, 0x15, 0x35, 0x1, 0, 0, 0x66, 0x83, 0xc2, 0xe, 0xec, 0xe8, 0x54, 0, 0, 0, 0x66, 0x8b, 0x15, 0x35, 0x1, 0, 0, 0x66, 0x83, 0xc2, 0xc, 0x66, 0xb8, 0xb4, 0, 0xee, 0xe8, 0x3f, 0, 0, 0, 0xb0, 0x30, 0xee, 0xe8, 0x37, 0, 0, 0, 0x66, 0xa1, 0x5d, 0x1, 0, 0, 0xee, 0xe8, 0x2b, 0, 0, 0, 0x86, 0xe0, 0xee, 0xc3})
void func_0x1028948f()
{
    FUNC_START_V2(0x1028948f, 0x20);
    II(0x1028948f, 0x7)    mov(memb_a32(ds, 0x163), 0x1);         /* mov byte [0x163], 0x1 */
    II(0x10289496, 0x2)    mov(eax, edi);                         /* mov eax, edi */
    II(0x10289498, 0x3)    shr(eax, 0x10);                        /* shr eax, 0x10 */
    II(0x1028949b, 0x6)    mov(memw_a32(ds, 0x157), ax);          /* mov [0x157], ax */
    II(0x102894a1, 0x7)    mov(memw_a32(ds, 0x159), di);          /* mov [0x159], di */
    II(0x102894a8, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x102894a9, 0x2)    mov(cl, 0xc);                          /* mov cl, 0xc */
    II(0x102894ab, 0x3)    shl(ax, cl);                           /* shl ax, cl */
    II(0x102894ae, 0x2)    pushw(ax);                             /* push ax */
    II(0x102894b0, 0x3)    mov(ax, di);                           /* mov ax, di */
    II(0x102894b3, 0x2)    mov(cl, 0x4);                          /* mov cl, 0x4 */
    II(0x102894b5, 0x3)    shr(ax, cl);                           /* shr ax, cl */
    II(0x102894b8, 0x3)    mov(cx, ax);                           /* mov cx, ax */
    II(0x102894bb, 0x2)    popw(ax);                              /* pop ax */
    II(0x102894bd, 0x3)    add(ax, cx);                           /* add ax, cx */
    II(0x102894c0, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x102894c1, 0x7)    mov(memw_a32(ds, 0x165), cx);          /* mov [0x165], cx */
    II(0x102894c8, 0x7)    sub(cx, memw_a32(ds, 0x155));          /* sub cx, [0x155] */
    II(0x102894cf, 0x7)    mov(memw_a32(ds, 0x15d), cx);          /* mov [0x15d], cx */
    II(0x102894d6, 0x2)    mov(al, 0x50);                         /* mov al, 0x50 */
    II(0x102894d8, 0x6)    mov(bl, memb_a32(ds, 0x179));          /* mov bl, [0x179] */
    II(0x102894de, 0x2)    or_(al, bl);                           /* or al, bl */
    II(0x102894e0, 0x6)    mov(bl, memb_a32(ds, 0x153));          /* mov bl, [0x153] */
    II(0x102894e6, 0x2)    or_(al, bl);                           /* or al, bl */
    II(0x102894e8, 0x7)    mov(dx, memw_a32(ds, 0x175));          /* mov dx, [0x175] */
    II(0x102894ef, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x102894f0, 0x7)    mov(dx, memw_a32(ds, 0x139));          /* mov dx, [0x139] */
    II(0x102894f7, 0x5)    mov(al, memb_a32(ds, 0x157));          /* mov al, [0x157] */
    II(0x102894fc, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x102894fd, 0x4)    mov(dx, 0xc);                          /* mov dx, 0xc */
    II(0x10289501, 0x2)    mov(al, 0);                            /* mov al, 0x0 */
    II(0x10289503, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x10289504, 0x7)    mov(dx, memw_a32(ds, 0x13b));          /* mov dx, [0x13b] */
    II(0x1028950b, 0x6)    mov(ax, memw_a32(ds, 0x159));          /* mov ax, [0x159] */
    II(0x10289511, 0x8)    cmp(memw_a32(ds, 0x137), 0x3);         /* cmp word [0x137], 0x3 */
    II(0x10289519, 0x6)    jled(0x10289536, 0x17);                /* jle dword 0x10289536 */
    II(0x1028951f, 0x3)    shr(ax, 0x1);                          /* shr ax, 1 */
    II(0x10289522, 0x7)    mov(bx, memw_a32(ds, 0x157));          /* mov bx, [0x157] */
    II(0x10289529, 0x3)    shr(bx, 0x1);                          /* shr bx, 1 */
    II(0x1028952c, 0x6)    jaed(0x10289536, 0x4);                 /* jae dword 0x10289536 */
    II(0x10289532, 0x4)    add(ax, 0x8000);                       /* add ax, 0x8000 */
l_0x10289536:
    II(0x10289536, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x10289537, 0x2)    mov(al, ah);                           /* mov al, ah */
    II(0x10289539, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1028953a, 0x7)    mov(dx, memw_a32(ds, 0x173));          /* mov dx, [0x173] */
    II(0x10289541, 0x2)    mov(al, 0);                            /* mov al, 0x0 */
    II(0x10289543, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x10289544, 0x7)    mov(dx, memw_a32(ds, 0x15f));          /* mov dx, [0x15f] */
    II(0x1028954b, 0x5)    mov(al, memb_a32(ds, 0x137));          /* mov al, [0x137] */
    II(0x10289550, 0x2)    cmp(al, 0x3);                          /* cmp al, 0x3 */
    II(0x10289552, 0x6)    jled(0x10289567, 0xf);                 /* jle dword 0x10289567 */
    II(0x10289558, 0x6)    mov(ax, memw_a32(ds, 0x15d));          /* mov ax, [0x15d] */
    II(0x1028955e, 0x3)    shr(ax, 0x1);                          /* shr ax, 1 */
    II(0x10289561, 0x6)    mov(memw_a32(ds, 0x15d), ax);          /* mov [0x15d], ax */
l_0x10289567:
    II(0x10289567, 0x6)    mov(ax, memw_a32(ds, 0x15d));          /* mov ax, [0x15d] */
    II(0x1028956d, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1028956e, 0x2)    mov(al, ah);                           /* mov al, ah */
    II(0x10289570, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x10289571, 0x5)    calld(0x10289702, 0x18c);              /* call 0x10289702 */
    II(0x10289576, 0x7)    mov(dx, memw_a32(ds, 0x177));          /* mov dx, [0x177] */
    II(0x1028957d, 0x5)    mov(al, memb_a32(ds, 0x179));          /* mov al, [0x179] */
    II(0x10289582, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x10289583, 0x7)    mov(dx, memw_a32(ds, 0x135));          /* mov dx, [0x135] */
    II(0x1028958a, 0x4)    add(dx, 0xe);                          /* add dx, 0xe */
    II(0x1028958e, 0x1)    inb(al, dx);                           /* in al, dx */
    II(0x1028958f, 0x5)    calld(0x102895e8, 0x54);               /* call 0x102895e8 */
    II(0x10289594, 0x7)    mov(dx, memw_a32(ds, 0x135));          /* mov dx, [0x135] */
    II(0x1028959b, 0x4)    add(dx, 0xc);                          /* add dx, 0xc */
    II(0x1028959f, 0x4)    mov(ax, 0xb4);                         /* mov ax, 0xb4 */
    II(0x102895a3, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x102895a4, 0x5)    calld(0x102895e8, 0x3f);               /* call 0x102895e8 */
    II(0x102895a9, 0x2)    mov(al, 0x30);                         /* mov al, 0x30 */
    II(0x102895ab, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x102895ac, 0x5)    calld(0x102895e8, 0x37);               /* call 0x102895e8 */
    II(0x102895b1, 0x6)    mov(ax, memw_a32(ds, 0x15d));          /* mov ax, [0x15d] */
    II(0x102895b7, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x102895b8, 0x5)    calld(0x102895e8, 0x2b);               /* call 0x102895e8 */
    II(0x102895bd, 0x2)    xchg(al, ah);                          /* xchg al, ah */
    II(0x102895bf, 0x1)    outb(dx, al);                          /* out dx, al */        // Запуск воспроизведение звука через DMA.
    II(0x102895c0, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x1028b52e, func_0x1028b52e, 0x20, {0x1e, 0x6, 0xf, 0xa0, 0xf, 0xa8, 0x60, 0x66, 0xb8, 0xe8, 0x2, 0x66, 0x8e, 0xd8, 0x83, 0x3d, 0x6a, 0x13, 0, 0, 0, 0xf, 0x85, 0xa8, 0x5, 0, 0, 0xff, 0x5, 0x6a, 0x13, 0, 0, 0x66, 0x8c, 0x5, 0x9e, 0x13, 0, 0, 0x1e, 0x6, 0x56, 0x57, 0x55, 0x1e, 0xf, 0xa1, 0x33, 0xff, 0xbe, 0xd0, 0x3, 0, 0, 0xbb, 0x28, 0x12, 0, 0, 0xc7, 0x5, 0xa8, 0x12, 0, 0, 0, 0, 0, 0, 0xb9, 0x20, 0, 0, 0, 0x66, 0xf7, 0x46, 0x30, 0, 0x80, 0x74, 0x13, 0x66, 0xf7, 0x46, 0x30, 0, 0x10, 0x75, 0xb, 0x89, 0x33, 0x83, 0xc3, 0x4, 0xff, 0x5, 0xa8, 0x12, 0, 0, 0x83, 0xc6, 0x6c, 0x49, 0x75, 0xdf, 0x33, 0xc0, 0xba, 0xc, 0, 0, 0, 0x32, 0xc0, 0xee, 0xeb, 0, 0xf, 0xb7, 0x15, 0xbe, 0x14, 0, 0, 0xec, 0xeb, 0, 0x86, 0xc4, 0xec, 0xeb, 0, 0x86, 0xc4, 0x40, 0x83, 0xfa, 0x7, 0x76, 0x2, 0x3, 0xc0, 0x3b, 0x5, 0x66, 0x13, 0, 0, 0x76, 0x21, 0x33, 0xc0, 0xba, 0xc, 0, 0, 0, 0xee, 0xeb, 0, 0xa1, 0x66, 0x13, 0, 0, 0x48, 0xf, 0xb7, 0x15, 0xbe, 0x14, 0, 0, 0xee, 0xeb, 0, 0x86, 0xc4, 0xee, 0xeb, 0, 0x86, 0xc4, 0x8b, 0x1d, 0x66, 0x13, 0, 0, 0x2b, 0xd8, 0x81, 0xe3, 0xfc, 0xff, 0, 0, 0xb, 0xdb, 0x75, 0x3, 0x83, 0xc3, 0x20, 0x89, 0x1d, 0x30, 0x13, 0, 0, 0x2b, 0x1d, 0x54, 0x13, 0, 0, 0xf, 0x83, 0x12, 0, 0, 0, 0x8b, 0x1d, 0x66, 0x13, 0, 0, 0x2b, 0x1d, 0x54, 0x13, 0, 0, 0x3, 0x1d, 0x30, 0x13, 0, 0, 0x89, 0x1d, 0x38, 0x13, 0, 0, 0x89, 0x1d, 0x3c, 0x13, 0, 0, 0xc1, 0xeb, 0x3, 0x81, 0xe3, 0xfc, 0xff, 0, 0, 0x1, 0x1d, 0x3c, 0x13, 0, 0, 0xa1, 0x30, 0x13, 0, 0, 0x5, 0, 0x4, 0, 0, 0x3b, 0x5, 0x66, 0x13, 0, 0, 0x76, 0x6, 0x2b, 0x5, 0x66, 0x13, 0, 0, 0xa3, 0x5e, 0x13, 0, 0, 0x83, 0x3d, 0x2c, 0x13, 0, 0, 0, 0xf, 0x84, 0x99, 0, 0, 0, 0xa1, 0x38, 0x13, 0, 0, 0xbb, 0xac, 0x12, 0, 0, 0x8b, 0xd, 0x2c, 0x13, 0, 0, 0x8b, 0x33, 0x66, 0x29, 0x46, 0x24, 0x73, 0x77, 0x66, 0xc7, 0x46, 0x24, 0, 0, 0x66, 0x81, 0x66, 0x30, 0xff, 0x6f, 0x83, 0x7e, 0x3c, 0, 0x74, 0x4b, 0x66, 0xf7, 0x46, 0x30, 0x2, 0, 0x75, 0x43, 0x60, 0xf, 0xa8, 0x6, 0x1e, 0x66, 0x8e, 0x5, 0x9e, 0x13, 0, 0, 0x1e, 0xf, 0xa9, 0x65, 0x66, 0x8e, 0x1d, 0x6e, 0x13, 0, 0, 0x8b, 0xc6, 0x2d, 0xd0, 0x3, 0, 0, 0x33, 0xd2, 0x66, 0xbb, 0x6c, 0, 0x66, 0xf7, 0xf3, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0x65, 0xf, 0xb7, 0x5, 0x88, 0x13, 0, 0, 0x50, 0x65, 0xff, 0x5e, 0x3c, 0x83, 0xc4, 0xc, 0x1f, 0x7, 0xf, 0xa9, 0x61, 0x6, 0x51, 0x56, 0x1e, 0x7, 0x8b, 0xf3, 0x8b, 0xfb, 0x83, 0xc6, 0x4, 0xfc, 0xf3, 0xa5, 0x5e, 0x59, 0x7, 0xff, 0xd, 0x2c, 0x13, 0, 0, 0xeb, 0x3, 0x83, 0xc3, 0x4, 0x49, 0xf, 0x85, 0x77, 0xff, 0xff, 0xff, 0x66, 0x8e, 0x5, 0x5c, 0x13, 0, 0, 0x33, 0xff, 0x33, 0xc9, 0x8b, 0x3d, 0x54, 0x13, 0, 0, 0x33, 0xc0, 0x8b, 0xd, 0x30, 0x13, 0, 0, 0x2b, 0xcf, 0x72, 0x14, 0x8b, 0xd9, 0xc1, 0xe9, 0x2, 0xfc, 0xf3, 0xab, 0x8b, 0xcb, 0x83, 0xe1, 0x3, 0xf3, 0xaa, 0xeb, 0x30, 0x90, 0x90, 0x90, 0x8b, 0xd, 0x66, 0x13, 0, 0, 0x2b, 0xcf, 0x8b, 0xd9, 0xc1, 0xe9, 0x2, 0xfc, 0xf3, 0xab, 0x8b, 0xcb, 0x83, 0xe1, 0x3, 0xf3, 0xaa, 0x33, 0xff, 0x8b, 0xd, 0x30, 0x13, 0, 0, 0x8b, 0xd9, 0xc1, 0xe9, 0x2, 0xf3, 0xab, 0x8b, 0xcb, 0x83, 0xe1, 0x3, 0xf3, 0xaa, 0x83, 0x3d, 0xa8, 0x12, 0, 0, 0, 0xf, 0x84, 0x72, 0x3, 0, 0, 0x66, 0x8e, 0x5, 0x5c, 0x13, 0, 0, 0xbb, 0x28, 0x12, 0, 0, 0x89, 0x1d, 0x62, 0x13, 0, 0, 0x8b, 0x33, 0xf, 0xb7, 0x46, 0x30, 0x25, 0xb0, 0x7, 0, 0, 0xc1, 0xe0, 0x5, 0xa, 0x46, 0x36, 0xc7, 0x5, 0xa4, 0x13, 0, 0, 0, 0, 0, 0, 0xc7, 0x5, 0xa0, 0x13, 0, 0, 0, 0, 0, 0, 0xbf, 0xa8, 0x13, 0, 0, 0xb9, 0x1f, 0, 0, 0, 0x83, 0x3f, 0, 0x74, 0x10, 0x39, 0x7, 0x74, 0x14, 0x83, 0xc7, 0x4, 0xff, 0x5, 0xa4, 0x13, 0, 0, 0x49, 0x75, 0xeb, 0x89, 0x7, 0xff, 0x5, 0xa0, 0x13, 0, 0, 0xba, 0x4, 0x21, 0, 0, 0xa1, 0xa4, 0x13, 0, 0, 0xbb, 0, 0x2, 0, 0, 0x87, 0xca, 0x66, 0xf7, 0xe3, 0x87, 0xca, 0x3, 0xd0, 0x89, 0x15, 0x74, 0x13, 0, 0, 0x83, 0x3d, 0xa0, 0x13, 0, 0, 0, 0x74, 0xa, 0xe8, 0x5, 0x5, 0, 0, 0xe8, 0x27, 0x8, 0, 0, 0x66, 0xf7, 0x46, 0x30, 0, 0x20, 0x74, 0xf, 0x66, 0x81, 0x66, 0x30, 0xff, 0xdf, 0xa1, 0x5e, 0x13, 0, 0, 0x66, 0x89, 0x46, 0x3a, 0xf, 0xb7, 0x46, 0x3a, 0x8b, 0xf8, 0x8b, 0x15, 0x3c, 0x13, 0, 0, 0x89, 0x15, 0x40, 0x13, 0, 0, 0xc7, 0x5, 0x48, 0x13, 0, 0, 0, 0, 0, 0, 0x3, 0x5, 0x3c, 0x13, 0, 0, 0x3b, 0x5, 0x66, 0x13, 0, 0, 0xf, 0x86, 0x15, 0, 0, 0, 0x8b, 0x15, 0x66, 0x13, 0, 0, 0x2b, 0xc2, 0xa3, 0x48, 0x13, 0, 0, 0x2b, 0xd7, 0x89, 0x15, 0x40, 0x13, 0, 0, 0x66, 0x83, 0x7e, 0x1e, 0, 0x75, 0x62, 0xf, 0xb7, 0x5e, 0x1c, 0x66, 0x83, 0x7e, 0x36, 0x3, 0x74, 0x2, 0x3, 0xdb, 0x66, 0xf7, 0x46, 0x30, 0x20, 0, 0x74, 0x2, 0xd1, 0xe3, 0x66, 0xf7, 0x46, 0x30, 0, 0x4, 0x74, 0x15, 0x52, 0x50, 0x8b, 0xc3, 0x8b, 0x5e, 0x44, 0x8b, 0xd0, 0xc1, 0xea, 0x10, 0xc1, 0xe0, 0x10, 0xf7, 0xf3, 0x8b, 0xd8, 0x58, 0x5a, 0x3b, 0x1d, 0x3c, 0x13, 0, 0, 0x73, 0x26, 0x3b, 0x1d, 0x40, 0x13, 0, 0, 0x77, 0x12, 0xc7, 0x5, 0x48, 0x13, 0, 0, 0, 0, 0, 0, 0x89, 0x1d, 0x40, 0x13, 0, 0, 0xeb, 0xc, 0x2b, 0x1d, 0x40, 0x13, 0, 0, 0x89, 0x1d, 0x48, 0x13, 0, 0, 0x8b, 0x1d, 0x54, 0x13, 0, 0, 0x2b, 0xdf, 0x73, 0xe, 0x8b, 0x1d, 0x66, 0x13, 0, 0, 0x2b, 0xdf, 0x3, 0x1d, 0x54, 0x13, 0, 0, 0xa1, 0x40, 0x13, 0, 0, 0x3, 0x5, 0x48, 0x13, 0, 0, 0x3b, 0xd8, 0x72, 0xb3, 0x8b, 0x15, 0x74, 0x13, 0, 0, 0xff, 0xd2, 0x66, 0x89, 0x7e, 0x3a, 0xf, 0xb7, 0x46, 0x1c, 0xf, 0xb7, 0x56, 0x1e, 0x8b, 0xd, 0x40, 0x13, 0, 0, 0x3, 0xd, 0x48, 0x13, 0, 0, 0x66, 0xf7, 0x46, 0x30, 0x20, 0, 0x74, 0x2, 0xd1, 0xe9, 0x66, 0x83, 0x7e, 0x36, 0x3, 0x74, 0x2, 0xd1, 0xe9, 0x66, 0xf7, 0x46, 0x30, 0, 0x4, 0x74, 0x1c, 0x52, 0x50, 0x8b, 0x5e, 0x44, 0xf, 0xb7, 0xc1, 0xc1, 0xe0, 0x10, 0xf7, 0xe3, 0x66, 0x8b, 0xca, 0xc1, 0xe8, 0x10, 0x66, 0x1, 0x46, 0x6a, 0x83, 0xd1, 0, 0x58, 0x5a, 0x1, 0x4e, 0x4c, 0x66, 0x2b, 0xc1, 0x66, 0x83, 0xda, 0, 0x66, 0x89, 0x46, 0x1c, 0x66, 0x89, 0x56, 0x1e, 0x66, 0x2d, 0x4, 0, 0x66, 0x83, 0xda, 0, 0x66, 0xf7, 0x46, 0x30, 0, 0x4, 0x74, 0x2, 0x33, 0xc9, 0x1, 0x4e, 0x8, 0x66, 0xb, 0xd2, 0xf, 0x89, 0x55, 0x1, 0, 0, 0x66, 0xf7, 0x46, 0x30, 0, 0x40, 0xf, 0x84, 0xa3, 0, 0, 0, 0x66, 0x83, 0x7e, 0x38, 0, 0xf, 0x84, 0x98, 0, 0, 0, 0x66, 0x83, 0x7e, 0x38, 0xff, 0x74, 0x5, 0x66, 0x83, 0x6e, 0x38, 0x1, 0x66, 0xf7, 0x46, 0x30, 0x40, 0, 0x74, 0x1d, 0x66, 0x83, 0x7e, 0x38, 0, 0x74, 0xe, 0x8b, 0x46, 0x10, 0x89, 0x46, 0x8, 0x8b, 0x46, 0x20, 0x89, 0x46, 0x1c, 0xeb, 0x13, 0x8b, 0x46, 0x2c, 0x89, 0x46, 0x1c, 0xeb, 0xb, 0x8b, 0x6, 0x89, 0x46, 0x8, 0x8b, 0x46, 0x18, 0x89, 0x46, 0x1c, 0x83, 0x7e, 0x3c, 0, 0x74, 0x4b, 0x66, 0xf7, 0x46, 0x30, 0x4, 0, 0x75, 0x43, 0x60, 0xf, 0xa8, 0x6, 0x1e, 0x66, 0x8e, 0x5, 0x9e, 0x13, 0, 0, 0x1e, 0xf, 0xa9, 0x65, 0x66, 0x8e, 0x1d, 0x6e, 0x13, 0, 0, 0x8b, 0xc6, 0x2d, 0xd0, 0x3, 0, 0, 0x33, 0xd2, 0x66, 0xbb, 0x6c, 0, 0x66, 0xf7, 0xf3, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x65, 0xf, 0xb7, 0x5, 0x88, 0x13, 0, 0, 0x50, 0x65, 0xff, 0x5e, 0x3c, 0x83, 0xc4, 0xc, 0x1f, 0x7, 0xf, 0xa9, 0x61, 0x8b, 0x1d, 0x62, 0x13, 0, 0, 0xe9, 0x5d, 0xfd, 0xff, 0xff, 0x83, 0x7e, 0x3c, 0, 0x74, 0x4b, 0x66, 0xf7, 0x46, 0x30, 0x8, 0, 0x75, 0x43, 0x60, 0xf, 0xa8, 0x6, 0x1e, 0x66, 0x8e, 0x5, 0x9e, 0x13, 0, 0, 0x1e, 0xf, 0xa9, 0x65, 0x66, 0x8e, 0x1d, 0x6e, 0x13, 0, 0, 0x8b, 0xc6, 0x2d, 0xd0, 0x3, 0, 0, 0x33, 0xd2, 0x66, 0xbb, 0x6c, 0, 0x66, 0xf7, 0xf3, 0x50, 0xb8, 0, 0, 0, 0, 0x50, 0x65, 0xf, 0xb7, 0x5, 0x88, 0x13, 0, 0, 0x50, 0x65, 0xff, 0x5e, 0x3c, 0x83, 0xc4, 0xc, 0x1f, 0x7, 0xf, 0xa9, 0x61, 0x66, 0xf7, 0x46, 0x30, 0, 0x8, 0x74, 0x11, 0x66, 0x81, 0x66, 0x30, 0xff, 0xf7, 0x8b, 0x1d, 0x62, 0x13, 0, 0, 0xe9, 0xf3, 0xfc, 0xff, 0xff, 0x66, 0x81, 0x4e, 0x30, 0, 0x10, 0x8b, 0x1d, 0x2c, 0x13, 0, 0, 0xc1, 0xe3, 0x2, 0x81, 0xc3, 0xac, 0x12, 0, 0, 0x89, 0x33, 0xff, 0x5, 0x2c, 0x13, 0, 0, 0xf, 0xb7, 0x46, 0x3a, 0x2b, 0x5, 0x30, 0x13, 0, 0, 0x73, 0xf, 0xa1, 0x66, 0x13, 0, 0, 0x2b, 0x5, 0x30, 0x13, 0, 0, 0x66, 0x3, 0x46, 0x3a, 0x66, 0x89, 0x46, 0x24, 0x8b, 0x1d, 0x62, 0x13, 0, 0, 0x83, 0xc3, 0x4, 0xff, 0xd, 0xa8, 0x12, 0, 0, 0x83, 0x3d, 0xa8, 0x12, 0, 0, 0, 0x74, 0x5, 0xe9, 0x9a, 0xfc, 0xff, 0xff, 0xa1, 0x30, 0x13, 0, 0, 0xa3, 0x54, 0x13, 0, 0, 0x5d, 0x5f, 0x5e, 0x7, 0x1f, 0xff, 0xd, 0x6a, 0x13, 0, 0, 0x61, 0xf, 0xa9, 0xf, 0xa1, 0x7, 0x1f, 0xcb})
void func_0x1028b52e()
{
    FUNC_START_V2(0x1028b52e, 0x20);
    II(0x1028b52e, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028b52f, 0x1)    pushd(es);                             /* push es */
    II(0x1028b530, 0x2)    pushd(fs);                             /* push fs */
    II(0x1028b532, 0x2)    pushd(gs);                             /* push gs */
    II(0x1028b534, 0x1)    pushad();                              /* pushad  */
    II(0x1028b535, 0x4)    mov(ax, 0x2e8);                        /* mov ax, 0x2e8 */
    II(0x1028b539, 0x3)    mov(ds, ax);                           /* mov ds, ax */
    II(0x1028b53c, 0x7)    cmp(memd_a32(ds, 0x136a), 0);          /* cmp dword [0x136a], 0x0 */
    II(0x1028b543, 0x6)    jnzd(0x1028baf1, 0x5a8);               /* jnz dword 0x1028baf1 */
    II(0x1028b549, 0x6)    inc(memd_a32(ds, 0x136a));             /* inc dword [0x136a] */
    II(0x1028b54f, 0x7)    mov(memw_a32(ds, 0x139e), es);         /* mov [0x139e], es */
    II(0x1028b556, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028b557, 0x1)    pushd(es);                             /* push es */
    II(0x1028b558, 0x1)    pushd(esi);                            /* push esi */
    II(0x1028b559, 0x1)    pushd(edi);                            /* push edi */
    II(0x1028b55a, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x1028b55b, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028b55c, 0x2)    popd(fs);                              /* pop fs */
    II(0x1028b55e, 0x2)    xor_(edi, edi);                        /* xor edi, edi */
    II(0x1028b560, 0x5)    mov(esi, 0x3d0);                       /* mov esi, 0x3d0 */
    II(0x1028b565, 0x5)    mov(ebx, 0x1228);                      /* mov ebx, 0x1228 */
    II(0x1028b56a, 0xa)    mov(memd_a32(ds, 0x12a8), 0);          /* mov dword [0x12a8], 0x0 */
    II(0x1028b574, 0x5)    mov(ecx, 0x20);                        /* mov ecx, 0x20 */
l_0x1028b579:
    II(0x1028b579, 0x6)    test(memw_a32(ds, esi + 0x30), 0x8000); /* test word [esi+0x30], 0x8000 */
    II(0x1028b57f, 0x2)    jzd(0x1028b594, 0x13);                 /* jz 0x1028b594 */
    II(0x1028b581, 0x6)    test(memw_a32(ds, esi + 0x30), 0x1000); /* test word [esi+0x30], 0x1000 */
    II(0x1028b587, 0x2)    jnzd(0x1028b594, 0xb);                 /* jnz 0x1028b594 */
    II(0x1028b589, 0x2)    mov(memd_a32(ds, ebx), esi);           /* mov [ebx], esi */
    II(0x1028b58b, 0x3)    add(ebx, 0x4);                         /* add ebx, 0x4 */
    II(0x1028b58e, 0x6)    inc(memd_a32(ds, 0x12a8));             /* inc dword [0x12a8] */
l_0x1028b594:
    II(0x1028b594, 0x3)    add(esi, 0x6c);                        /* add esi, 0x6c */
    II(0x1028b597, 0x1)    dec(ecx);                              /* dec ecx */
    II(0x1028b598, 0x2)    jnzd(0x1028b579, -0x21);               /* jnz 0x1028b579 */
    II(0x1028b59a, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
    II(0x1028b59c, 0x5)    mov(edx, 0xc);                         /* mov edx, 0xc */
    II(0x1028b5a1, 0x2)    xor_(al, al);                          /* xor al, al */
    II(0x1028b5a3, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1028b5a4, 0x2)                                           /* jmp 0x1028b5a6 */
    II(0x1028b5a6, 0x7)    movzx(edx, memw_a32(ds, 0x14be));      /* movzx edx, word [0x14be] */
    II(0x1028b5ad, 0x1)    inb(al, dx);                           /* in al, dx */            // read curcnt_low
    II(0x1028b5ae, 0x2)                                           /* jmp 0x1028b5b0 */
    II(0x1028b5b0, 0x2)    xchg(ah, al);                          /* xchg ah, al */
    II(0x1028b5b2, 0x1)    inb(al, dx);                           /* in al, dx */            // read curcnt_high
    II(0x1028b5b3, 0x2)                                           /* jmp 0x1028b5b5 */
    II(0x1028b5b5, 0x2)    xchg(ah, al);                          /* xchg ah, al */
    II(0x1028b5b7, 0x1)    inc(eax);                              /* inc eax */
    II(0x1028b5b8, 0x3)    cmp(edx, 0x7);                         /* cmp edx, 0x7 */
    II(0x1028b5bb, 0x2)    jbed(0x1028b5bf, 0x2);                 /* jbe 0x1028b5bf */
    II(0x1028b5bd, 0x2)    add(eax, eax);                         /* add eax, eax */
l_0x1028b5bf:
    II(0x1028b5bf, 0x6)    cmp(eax, memd_a32(ds, 0x1366));        /* cmp eax, [0x1366] */
    II(0x1028b5c5, 0x2)    jbed(0x1028b5e8, 0x21);                /* jbe 0x1028b5e8 */
    II(0x1028b5c7, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
    II(0x1028b5c9, 0x5)    mov(edx, 0xc);                         /* mov edx, 0xc */
    II(0x1028b5ce, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1028b5cf, 0x2)                                           /* jmp 0x1028b5d1 */
    II(0x1028b5d1, 0x5)    mov(eax, memd_a32(ds, 0x1366));        /* mov eax, [0x1366] */
    II(0x1028b5d6, 0x1)    dec(eax);                              /* dec eax */
    II(0x1028b5d7, 0x7)    movzx(edx, memw_a32(ds, 0x14be));      /* movzx edx, word [0x14be] */
    II(0x1028b5de, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1028b5df, 0x2)                                           /* jmp 0x1028b5e1 */
    II(0x1028b5e1, 0x2)    xchg(ah, al);                          /* xchg ah, al */
    II(0x1028b5e3, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x1028b5e4, 0x2)                                           /* jmp 0x1028b5e6 */
    II(0x1028b5e6, 0x2)    xchg(ah, al);                          /* xchg ah, al */
l_0x1028b5e8:
    II(0x1028b5e8, 0x6)    mov(ebx, memd_a32(ds, 0x1366));        /* mov ebx, [0x1366] */
    II(0x1028b5ee, 0x2)    sub(ebx, eax);                         /* sub ebx, eax */
    II(0x1028b5f0, 0x6)    and_(ebx, 0xfffc);                     /* and ebx, 0xfffc */
    II(0x1028b5f6, 0x2)    or_(ebx, ebx);                         /* or ebx, ebx */
    II(0x1028b5f8, 0x2)    jnzd(0x1028b5fd, 0x3);                 /* jnz 0x1028b5fd */
    II(0x1028b5fa, 0x3)    add(ebx, 0x20);                        /* add ebx, 0x20 */
l_0x1028b5fd:
    II(0x1028b5fd, 0x6)    mov(memd_a32(ds, 0x1330), ebx);        /* mov [0x1330], ebx */
    II(0x1028b603, 0x6)    sub(ebx, memd_a32(ds, 0x1354));        /* sub ebx, [0x1354] */
    II(0x1028b609, 0x6)    jaed(0x1028b621, 0x12);                /* jae dword 0x1028b621 */
    II(0x1028b60f, 0x6)    mov(ebx, memd_a32(ds, 0x1366));        /* mov ebx, [0x1366] */
    II(0x1028b615, 0x6)    sub(ebx, memd_a32(ds, 0x1354));        /* sub ebx, [0x1354] */
    II(0x1028b61b, 0x6)    add(ebx, memd_a32(ds, 0x1330));        /* add ebx, [0x1330] */
l_0x1028b621:
    II(0x1028b621, 0x6)    mov(memd_a32(ds, 0x1338), ebx);        /* mov [0x1338], ebx */
    II(0x1028b627, 0x6)    mov(memd_a32(ds, 0x133c), ebx);        /* mov [0x133c], ebx */
    II(0x1028b62d, 0x3)    shr(ebx, 0x3);                         /* shr ebx, 0x3 */
    II(0x1028b630, 0x6)    and_(ebx, 0xfffc);                     /* and ebx, 0xfffc */
    II(0x1028b636, 0x6)    add(memd_a32(ds, 0x133c), ebx);        /* add [0x133c], ebx */
    II(0x1028b63c, 0x5)    mov(eax, memd_a32(ds, 0x1330));        /* mov eax, [0x1330] */
    II(0x1028b641, 0x5)    add(eax, 0x400);                       /* add eax, 0x400 */
    II(0x1028b646, 0x6)    cmp(eax, memd_a32(ds, 0x1366));        /* cmp eax, [0x1366] */
    II(0x1028b64c, 0x2)    jbed(0x1028b654, 0x6);                 /* jbe 0x1028b654 */
    II(0x1028b64e, 0x6)    sub(eax, memd_a32(ds, 0x1366));        /* sub eax, [0x1366] */
l_0x1028b654:
    II(0x1028b654, 0x5)    mov(memd_a32(ds, 0x135e), eax);        /* mov [0x135e], eax */
    II(0x1028b659, 0x7)    cmp(memd_a32(ds, 0x132c), 0);          /* cmp dword [0x132c], 0x0 */
    II(0x1028b660, 0x6)    jzd(0x1028b6ff, 0x99);                 /* jz dword 0x1028b6ff */
    II(0x1028b666, 0x5)    mov(eax, memd_a32(ds, 0x1338));        /* mov eax, [0x1338] */
    II(0x1028b66b, 0x5)    mov(ebx, 0x12ac);                      /* mov ebx, 0x12ac */
    II(0x1028b670, 0x6)    mov(ecx, memd_a32(ds, 0x132c));        /* mov ecx, [0x132c] */
l_0x1028b676:
    II(0x1028b676, 0x2)    mov(esi, memd_a32(ds, ebx));           /* mov esi, [ebx] */
    II(0x1028b678, 0x4)    sub(memw_a32(ds, esi + 0x24), ax);     /* sub [esi+0x24], ax */
    II(0x1028b67c, 0x2)    jaed(0x1028b6f5, 0x77);                /* jae 0x1028b6f5 */
    II(0x1028b67e, 0x6)    mov(memw_a32(ds, esi + 0x24), 0);      /* mov word [esi+0x24], 0x0 */
    II(0x1028b684, 0x6)    and_(memw_a32(ds, esi + 0x30), 0x6fff); /* and word [esi+0x30], 0x6fff */
    II(0x1028b68a, 0x4)    cmp(memd_a32(ds, esi + 0x3c), 0);      /* cmp dword [esi+0x3c], 0x0 */
    II(0x1028b68e, 0x2)    jzd(0x1028b6db, 0x4b);                 /* jz 0x1028b6db */
    II(0x1028b690, 0x6)    test(memw_a32(ds, esi + 0x30), 0x2);   /* test word [esi+0x30], 0x2 */
    II(0x1028b696, 0x2)    jnzd(0x1028b6db, 0x43);                /* jnz 0x1028b6db */
    II(0x1028b698, 0x1)    pushad();                              /* pushad  */
    II(0x1028b699, 0x2)    pushd(gs);                             /* push gs */
    II(0x1028b69b, 0x1)    pushd(es);                             /* push es */
    II(0x1028b69c, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028b69d, 0x7)    mov(es, memw_a32(ds, 0x139e));         /* mov es, [0x139e] */
    II(0x1028b6a4, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028b6a5, 0x2)    popd(gs);                              /* pop gs */
    II(0x1028b6a7, 0x8)    mov(ds, memw_a32(gs, 0x136e));         /* mov ds, [gs:0x136e] */
    II(0x1028b6af, 0x2)    mov(eax, esi);                         /* mov eax, esi */
    II(0x1028b6b1, 0x5)    sub(eax, 0x3d0);                       /* sub eax, 0x3d0 */
    II(0x1028b6b6, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
    II(0x1028b6b8, 0x4)    mov(bx, 0x6c);                         /* mov bx, 0x6c */
    II(0x1028b6bc, 0x3)    div(bx);                               /* div bx */
    II(0x1028b6bf, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028b6c0, 0x5)    mov(eax, 0x2);                         /* mov eax, 0x2 */
    II(0x1028b6c5, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028b6c6, 0x8)    movzx(eax, memw_a32(gs, 0x1388));      /* movzx eax, word [gs:0x1388] */
    II(0x1028b6ce, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028b6cf, 0x4)    calld_a32_far_ind(gs, esi + 0x3c);     /* call dword far [gs:esi+0x3c] */
    II(0x1028b6d3, 0x3)    add(esp, 0xc);                         /* add esp, 0xc */
    II(0x1028b6d6, 0x1)    popd(ds);                              /* pop ds */
    II(0x1028b6d7, 0x1)    popd(es);                              /* pop es */
    II(0x1028b6d8, 0x2)    popd(gs);                              /* pop gs */
    II(0x1028b6da, 0x1)    popad();                               /* popad  */
l_0x1028b6db:
    II(0x1028b6db, 0x1)    pushd(es);                             /* push es */
    II(0x1028b6dc, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x1028b6dd, 0x1)    pushd(esi);                            /* push esi */
    II(0x1028b6de, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028b6df, 0x1)    popd(es);                              /* pop es */
    II(0x1028b6e0, 0x2)    mov(esi, ebx);                         /* mov esi, ebx */
    II(0x1028b6e2, 0x2)    mov(edi, ebx);                         /* mov edi, ebx */
    II(0x1028b6e4, 0x3)    add(esi, 0x4);                         /* add esi, 0x4 */
    II(0x1028b6e7, 0x1)    cld();                                 /* cld  */
    II(0x1028b6e8, 0x2)    rep_a32 movsd_a32();                   /* rep movsd  */
    II(0x1028b6ea, 0x1)    popd(esi);                             /* pop esi */
    II(0x1028b6eb, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x1028b6ec, 0x1)    popd(es);                              /* pop es */
    II(0x1028b6ed, 0x6)    dec(memd_a32(ds, 0x132c));             /* dec dword [0x132c] */
    II(0x1028b6f3, 0x2)    jmpd(0x1028b6f8, 0x3);                 /* jmp 0x1028b6f8 */
l_0x1028b6f5:
    II(0x1028b6f5, 0x3)    add(ebx, 0x4);                         /* add ebx, 0x4 */
l_0x1028b6f8:
    II(0x1028b6f8, 0x1)    dec(ecx);                              /* dec ecx */
    II(0x1028b6f9, 0x6)    jnzd(0x1028b676, -0x89);               /* jnz dword 0x1028b676 */
l_0x1028b6ff:
    II(0x1028b6ff, 0x7)    mov(es, memw_a32(ds, 0x135c));         /* mov es, [0x135c] */
    II(0x1028b706, 0x2)    xor_(edi, edi);                        /* xor edi, edi */
    II(0x1028b708, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */
    II(0x1028b70a, 0x6)    mov(edi, memd_a32(ds, 0x1354));        /* mov edi, [0x1354] */
    II(0x1028b710, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
    II(0x1028b712, 0x6)    mov(ecx, memd_a32(ds, 0x1330));        /* mov ecx, [0x1330] */
    II(0x1028b718, 0x2)    sub(ecx, edi);                         /* sub ecx, edi */
    II(0x1028b71a, 0x2)    jbd(0x1028b730, 0x14);                 /* jb 0x1028b730 */
    II(0x1028b71c, 0x2)    mov(ebx, ecx);                         /* mov ebx, ecx */
    II(0x1028b71e, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
    II(0x1028b721, 0x1)    cld();                                 /* cld  */
    II(0x1028b722, 0x2)    rep_a32 stosd_a32();                   /* rep stosd  */
    II(0x1028b724, 0x2)    mov(ecx, ebx);                         /* mov ecx, ebx */
    II(0x1028b726, 0x3)    and_(ecx, 0x3);                        /* and ecx, 0x3 */
    II(0x1028b729, 0x2)    rep_a32 stosb_a32();                   /* rep stosb  */
    II(0x1028b72b, 0x2)    jmpd(0x1028b75d, 0x30);                /* jmp 0x1028b75d */
    II(0x1028b72d, 0x1)                                           /* nop  */
    II(0x1028b72e, 0x1)                                           /* nop  */
    II(0x1028b72f, 0x1)                                           /* nop  */
l_0x1028b730:
    II(0x1028b730, 0x6)    mov(ecx, memd_a32(ds, 0x1366));        /* mov ecx, [0x1366] */
    II(0x1028b736, 0x2)    sub(ecx, edi);                         /* sub ecx, edi */
    II(0x1028b738, 0x2)    mov(ebx, ecx);                         /* mov ebx, ecx */
    II(0x1028b73a, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
    II(0x1028b73d, 0x1)    cld();                                 /* cld  */
    II(0x1028b73e, 0x2)    rep_a32 stosd_a32();                   /* rep stosd  */
    II(0x1028b740, 0x2)    mov(ecx, ebx);                         /* mov ecx, ebx */
    II(0x1028b742, 0x3)    and_(ecx, 0x3);                        /* and ecx, 0x3 */
    II(0x1028b745, 0x2)    rep_a32 stosb_a32();                   /* rep stosb  */
    II(0x1028b747, 0x2)    xor_(edi, edi);                        /* xor edi, edi */
    II(0x1028b749, 0x6)    mov(ecx, memd_a32(ds, 0x1330));        /* mov ecx, [0x1330] */
    II(0x1028b74f, 0x2)    mov(ebx, ecx);                         /* mov ebx, ecx */
    II(0x1028b751, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
    II(0x1028b754, 0x2)    rep_a32 stosd_a32();                   /* rep stosd  */
    II(0x1028b756, 0x2)    mov(ecx, ebx);                         /* mov ecx, ebx */
    II(0x1028b758, 0x3)    and_(ecx, 0x3);                        /* and ecx, 0x3 */
    II(0x1028b75b, 0x2)    rep_a32 stosb_a32();                   /* rep stosb  */
l_0x1028b75d:
    II(0x1028b75d, 0x7)    cmp(memd_a32(ds, 0x12a8), 0);          /* cmp dword [0x12a8], 0x0 */
    II(0x1028b764, 0x6)    jzd(0x1028badc, 0x372);                /* jz dword 0x1028badc */
    II(0x1028b76a, 0x7)    mov(es, memw_a32(ds, 0x135c));         /* mov es, [0x135c] */
    II(0x1028b771, 0x5)    mov(ebx, 0x1228);                      /* mov ebx, 0x1228 */
l_0x1028b776:
    II(0x1028b776, 0x6)    mov(memd_a32(ds, 0x1362), ebx);        /* mov [0x1362], ebx */
    II(0x1028b77c, 0x2)    mov(esi, memd_a32(ds, ebx));           /* mov esi, [ebx] */
    II(0x1028b77e, 0x4)    movzx(eax, memw_a32(ds, esi + 0x30));  /* movzx eax, word [esi+0x30] */
    II(0x1028b782, 0x5)    and_(eax, 0x7b0);                      /* and eax, 0x7b0 */
    II(0x1028b787, 0x3)    shl(eax, 0x5);                         /* shl eax, 0x5 */
    II(0x1028b78a, 0x3)    or_(al, memb_a32(ds, esi + 0x36));     /* or al, [esi+0x36] */
    II(0x1028b78d, 0xa)    mov(memd_a32(ds, 0x13a4), 0);          /* mov dword [0x13a4], 0x0 */
    II(0x1028b797, 0xa)    mov(memd_a32(ds, 0x13a0), 0);          /* mov dword [0x13a0], 0x0 */
    II(0x1028b7a1, 0x5)    mov(edi, 0x13a8);                      /* mov edi, 0x13a8 */
    II(0x1028b7a6, 0x5)    mov(ecx, 0x1f);                        /* mov ecx, 0x1f */
l_0x1028b7ab:
    II(0x1028b7ab, 0x3)    cmp(memd_a32(ds, edi), 0);             /* cmp dword [edi], 0x0 */
    II(0x1028b7ae, 0x2)    jzd(0x1028b7c0, 0x10);                 /* jz 0x1028b7c0 */
    II(0x1028b7b0, 0x2)    cmp(memd_a32(ds, edi), eax);           /* cmp [edi], eax */
    II(0x1028b7b2, 0x2)    jzd(0x1028b7c8, 0x14);                 /* jz 0x1028b7c8 */
    II(0x1028b7b4, 0x3)    add(edi, 0x4);                         /* add edi, 0x4 */
    II(0x1028b7b7, 0x6)    inc(memd_a32(ds, 0x13a4));             /* inc dword [0x13a4] */
    II(0x1028b7bd, 0x1)    dec(ecx);                              /* dec ecx */
    II(0x1028b7be, 0x2)    jnzd(0x1028b7ab, -0x15);               /* jnz 0x1028b7ab */
l_0x1028b7c0:
    II(0x1028b7c0, 0x2)    mov(memd_a32(ds, edi), eax);           /* mov [edi], eax */
    II(0x1028b7c2, 0x6)    inc(memd_a32(ds, 0x13a0));             /* inc dword [0x13a0] */
l_0x1028b7c8:
    II(0x1028b7c8, 0x5)    mov(edx, 0x2104);                      /* mov edx, 0x2104 */
    II(0x1028b7cd, 0x5)    mov(eax, memd_a32(ds, 0x13a4));        /* mov eax, [0x13a4] */
    II(0x1028b7d2, 0x5)    mov(ebx, 0x200);                       /* mov ebx, 0x200 */
    II(0x1028b7d7, 0x2)    xchg(edx, ecx);                        /* xchg edx, ecx */
    II(0x1028b7d9, 0x3)    mul(bx);                               /* mul bx */
    II(0x1028b7dc, 0x2)    xchg(edx, ecx);                        /* xchg edx, ecx */
    II(0x1028b7de, 0x2)    add(edx, eax);                         /* add edx, eax */
    II(0x1028b7e0, 0x6)    mov(memd_a32(ds, 0x1374), edx);        /* mov [0x1374], edx */
    II(0x1028b7e6, 0x7)    cmp(memd_a32(ds, 0x13a0), 0);          /* cmp dword [0x13a0], 0x0 */
    II(0x1028b7ed, 0x2)    jzd(0x1028b7f9, 0xa);                  /* jz 0x1028b7f9 */
    II(0x1028b7ef, 0x5)    calld(0x1028bcf9, 0x505);              /* call 0x1028bcf9 */
    II(0x1028b7f4, 0x5)    calld(0x1028c020, 0x827);              /* call 0x1028c020 */
l_0x1028b7f9:
    II(0x1028b7f9, 0x6)    test(memw_a32(ds, esi + 0x30), 0x2000); /* test word [esi+0x30], 0x2000 */
    II(0x1028b7ff, 0x2)    jzd(0x1028b810, 0xf);                  /* jz 0x1028b810 */
    II(0x1028b801, 0x6)    and_(memw_a32(ds, esi + 0x30), 0xdfff); /* and word [esi+0x30], 0xdfff */
    II(0x1028b807, 0x5)    mov(eax, memd_a32(ds, 0x135e));        /* mov eax, [0x135e] */
    II(0x1028b80c, 0x4)    mov(memw_a32(ds, esi + 0x3a), ax);     /* mov [esi+0x3a], ax */
l_0x1028b810:
    II(0x1028b810, 0x4)    movzx(eax, memw_a32(ds, esi + 0x3a));  /* movzx eax, word [esi+0x3a] */
    II(0x1028b814, 0x2)    mov(edi, eax);                         /* mov edi, eax */
    II(0x1028b816, 0x6)    mov(edx, memd_a32(ds, 0x133c));        /* mov edx, [0x133c] */
    II(0x1028b81c, 0x6)    mov(memd_a32(ds, 0x1340), edx);        /* mov [0x1340], edx */
    II(0x1028b822, 0xa)    mov(memd_a32(ds, 0x1348), 0);          /* mov dword [0x1348], 0x0 */
    II(0x1028b82c, 0x6)    add(eax, memd_a32(ds, 0x133c));        /* add eax, [0x133c] */
    II(0x1028b832, 0x6)    cmp(eax, memd_a32(ds, 0x1366));        /* cmp eax, [0x1366] */
    II(0x1028b838, 0x6)    jbed(0x1028b853, 0x15);                /* jbe dword 0x1028b853 */
    II(0x1028b83e, 0x6)    mov(edx, memd_a32(ds, 0x1366));        /* mov edx, [0x1366] */
    II(0x1028b844, 0x2)    sub(eax, edx);                         /* sub eax, edx */
    II(0x1028b846, 0x5)    mov(memd_a32(ds, 0x1348), eax);        /* mov [0x1348], eax */
    II(0x1028b84b, 0x2)    sub(edx, edi);                         /* sub edx, edi */
    II(0x1028b84d, 0x6)    mov(memd_a32(ds, 0x1340), edx);        /* mov [0x1340], edx */
l_0x1028b853:
    II(0x1028b853, 0x5)    cmp(memw_a32(ds, esi + 0x1e), 0);      /* cmp word [esi+0x1e], 0x0 */
    II(0x1028b858, 0x2)    jnzd(0x1028b8bc, 0x62);                /* jnz 0x1028b8bc */
    II(0x1028b85a, 0x4)    movzx(ebx, memw_a32(ds, esi + 0x1c));  /* movzx ebx, word [esi+0x1c] */
    II(0x1028b85e, 0x5)    cmp(memw_a32(ds, esi + 0x36), 0x3);    /* cmp word [esi+0x36], 0x3 */
    II(0x1028b863, 0x2)    jzd(0x1028b867, 0x2);                  /* jz 0x1028b867 */
    II(0x1028b865, 0x2)    add(ebx, ebx);                         /* add ebx, ebx */
l_0x1028b867:
    II(0x1028b867, 0x6)    test(memw_a32(ds, esi + 0x30), 0x20);  /* test word [esi+0x30], 0x20 */
    II(0x1028b86d, 0x2)    jzd(0x1028b871, 0x2);                  /* jz 0x1028b871 */
    II(0x1028b86f, 0x2)    shl(ebx, 0x1);                         /* shl ebx, 1 */
l_0x1028b871:
    II(0x1028b871, 0x6)    test(memw_a32(ds, esi + 0x30), 0x400); /* test word [esi+0x30], 0x400 */
    II(0x1028b877, 0x2)    jzd(0x1028b88e, 0x15);                 /* jz 0x1028b88e */
    II(0x1028b879, 0x1)    pushd(edx);                            /* push edx */
    II(0x1028b87a, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028b87b, 0x2)    mov(eax, ebx);                         /* mov eax, ebx */
    II(0x1028b87d, 0x3)    mov(ebx, memd_a32(ds, esi + 0x44));    /* mov ebx, [esi+0x44] */
    II(0x1028b880, 0x2)    mov(edx, eax);                         /* mov edx, eax */
    II(0x1028b882, 0x3)    shr(edx, 0x10);                        /* shr edx, 0x10 */
    II(0x1028b885, 0x3)    shl(eax, 0x10);                        /* shl eax, 0x10 */
    II(0x1028b888, 0x2)    div(ebx);                              /* div ebx */
    II(0x1028b88a, 0x2)    mov(ebx, eax);                         /* mov ebx, eax */
    II(0x1028b88c, 0x1)    popd(eax);                             /* pop eax */
    II(0x1028b88d, 0x1)    popd(edx);                             /* pop edx */
l_0x1028b88e:
    II(0x1028b88e, 0x6)    cmp(ebx, memd_a32(ds, 0x133c));        /* cmp ebx, [0x133c] */
    II(0x1028b894, 0x2)    jaed(0x1028b8bc, 0x26);                /* jae 0x1028b8bc */
l_0x1028b896:
    II(0x1028b896, 0x6)    cmp(ebx, memd_a32(ds, 0x1340));        /* cmp ebx, [0x1340] */
    II(0x1028b89c, 0x2)    jad(0x1028b8b0, 0x12);                 /* ja 0x1028b8b0 */
    II(0x1028b89e, 0xa)    mov(memd_a32(ds, 0x1348), 0);          /* mov dword [0x1348], 0x0 */
    II(0x1028b8a8, 0x6)    mov(memd_a32(ds, 0x1340), ebx);        /* mov [0x1340], ebx */
    II(0x1028b8ae, 0x2)    jmpd(0x1028b8bc, 0xc);                 /* jmp 0x1028b8bc */
l_0x1028b8b0:
    II(0x1028b8b0, 0x6)    sub(ebx, memd_a32(ds, 0x1340));        /* sub ebx, [0x1340] */
    II(0x1028b8b6, 0x6)    mov(memd_a32(ds, 0x1348), ebx);        /* mov [0x1348], ebx */
l_0x1028b8bc:
    II(0x1028b8bc, 0x6)    mov(ebx, memd_a32(ds, 0x1354));        /* mov ebx, [0x1354] */
    II(0x1028b8c2, 0x2)    sub(ebx, edi);                         /* sub ebx, edi */
    II(0x1028b8c4, 0x2)    jaed(0x1028b8d4, 0xe);                 /* jae 0x1028b8d4 */
    II(0x1028b8c6, 0x6)    mov(ebx, memd_a32(ds, 0x1366));        /* mov ebx, [0x1366] */
    II(0x1028b8cc, 0x2)    sub(ebx, edi);                         /* sub ebx, edi */
    II(0x1028b8ce, 0x6)    add(ebx, memd_a32(ds, 0x1354));        /* add ebx, [0x1354] */
l_0x1028b8d4:
    II(0x1028b8d4, 0x5)    mov(eax, memd_a32(ds, 0x1340));        /* mov eax, [0x1340] */
    II(0x1028b8d9, 0x6)    add(eax, memd_a32(ds, 0x1348));        /* add eax, [0x1348] */
    II(0x1028b8df, 0x2)    cmp(ebx, eax);                         /* cmp ebx, eax */
    II(0x1028b8e1, 0x2)    jbd(0x1028b896, -0x4d);                /* jb 0x1028b896 */
    II(0x1028b8e3, 0x6)    mov(edx, memd_a32(ds, 0x1374));        /* mov edx, [0x1374] */
    II(0x1028b8e9, 0x2)    calld_abs(edx);                        /* call edx */
    II(0x1028b8eb, 0x4)    mov(memw_a32(ds, esi + 0x3a), di);     /* mov [esi+0x3a], di */
    II(0x1028b8ef, 0x4)    movzx(eax, memw_a32(ds, esi + 0x1c));  /* movzx eax, word [esi+0x1c] */
    II(0x1028b8f3, 0x4)    movzx(edx, memw_a32(ds, esi + 0x1e));  /* movzx edx, word [esi+0x1e] */
    II(0x1028b8f7, 0x6)    mov(ecx, memd_a32(ds, 0x1340));        /* mov ecx, [0x1340] */
    II(0x1028b8fd, 0x6)    add(ecx, memd_a32(ds, 0x1348));        /* add ecx, [0x1348] */
    II(0x1028b903, 0x6)    test(memw_a32(ds, esi + 0x30), 0x20);  /* test word [esi+0x30], 0x20 */
    II(0x1028b909, 0x2)    jzd(0x1028b90d, 0x2);                  /* jz 0x1028b90d */
    II(0x1028b90b, 0x2)    shr(ecx, 0x1);                         /* shr ecx, 1 */
l_0x1028b90d:
    II(0x1028b90d, 0x5)    cmp(memw_a32(ds, esi + 0x36), 0x3);    /* cmp word [esi+0x36], 0x3 */
    II(0x1028b912, 0x2)    jzd(0x1028b916, 0x2);                  /* jz 0x1028b916 */
    II(0x1028b914, 0x2)    shr(ecx, 0x1);                         /* shr ecx, 1 */
l_0x1028b916:
    II(0x1028b916, 0x6)    test(memw_a32(ds, esi + 0x30), 0x400); /* test word [esi+0x30], 0x400 */
    II(0x1028b91c, 0x2)    jzd(0x1028b93a, 0x1c);                 /* jz 0x1028b93a */
    II(0x1028b91e, 0x1)    pushd(edx);                            /* push edx */
    II(0x1028b91f, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028b920, 0x3)    mov(ebx, memd_a32(ds, esi + 0x44));    /* mov ebx, [esi+0x44] */
    II(0x1028b923, 0x3)    movzx(eax, cx);                        /* movzx eax, cx */
    II(0x1028b926, 0x3)    shl(eax, 0x10);                        /* shl eax, 0x10 */
    II(0x1028b929, 0x2)    mul(ebx);                              /* mul ebx */
    II(0x1028b92b, 0x3)    mov(cx, dx);                           /* mov cx, dx */
    II(0x1028b92e, 0x3)    shr(eax, 0x10);                        /* shr eax, 0x10 */
    II(0x1028b931, 0x4)    add(memw_a32(ds, esi + 0x6a), ax);     /* add [esi+0x6a], ax */
    II(0x1028b935, 0x3)    adc(ecx, 0);                           /* adc ecx, 0x0 */
    II(0x1028b938, 0x1)    popd(eax);                             /* pop eax */
    II(0x1028b939, 0x1)    popd(edx);                             /* pop edx */
l_0x1028b93a:
    II(0x1028b93a, 0x3)    add(memd_a32(ds, esi + 0x4c), ecx);    /* add [esi+0x4c], ecx */
    II(0x1028b93d, 0x3)    sub(ax, cx);                           /* sub ax, cx */
    II(0x1028b940, 0x4)    sbb(dx, 0);                            /* sbb dx, 0x0 */
    II(0x1028b944, 0x4)    mov(memw_a32(ds, esi + 0x1c), ax);     /* mov [esi+0x1c], ax */
    II(0x1028b948, 0x4)    mov(memw_a32(ds, esi + 0x1e), dx);     /* mov [esi+0x1e], dx */
    II(0x1028b94c, 0x4)    sub(ax, 0x4);                          /* sub ax, 0x4 */
    II(0x1028b950, 0x4)    sbb(dx, 0);                            /* sbb dx, 0x0 */
    II(0x1028b954, 0x6)    test(memw_a32(ds, esi + 0x30), 0x400); /* test word [esi+0x30], 0x400 */
    II(0x1028b95a, 0x2)    jzd(0x1028b95e, 0x2);                  /* jz 0x1028b95e */
    II(0x1028b95c, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */
l_0x1028b95e:
    II(0x1028b95e, 0x3)    add(memd_a32(ds, esi + 0x8), ecx);     /* add [esi+0x8], ecx */
    II(0x1028b961, 0x3)    or_(dx, dx);                           /* or dx, dx */
    II(0x1028b964, 0x6)    jnsd(0x1028babf, 0x155);               /* jns dword 0x1028babf */
    II(0x1028b96a, 0x6)    test(memw_a32(ds, esi + 0x30), 0x4000); /* test word [esi+0x30], 0x4000 */
    II(0x1028b970, 0x6)    jzd(0x1028ba19, 0xa3);                 /* jz dword 0x1028ba19 */
    II(0x1028b976, 0x5)    cmp(memw_a32(ds, esi + 0x38), 0);      /* cmp word [esi+0x38], 0x0 */
    II(0x1028b97b, 0x6)    jzd(0x1028ba19, 0x98);                 /* jz dword 0x1028ba19 */
    II(0x1028b981, 0x5)    cmp(memw_a32(ds, esi + 0x38), -0x1 /* 0xff */); /* cmp word [esi+0x38], 0xff */
    II(0x1028b986, 0x2)    jzd(0x1028b98d, 0x5);                  /* jz 0x1028b98d */
    II(0x1028b988, 0x5)    sub(memw_a32(ds, esi + 0x38), 0x1);    /* sub word [esi+0x38], 0x1 */
l_0x1028b98d:
    II(0x1028b98d, 0x6)    test(memw_a32(ds, esi + 0x30), 0x40);  /* test word [esi+0x30], 0x40 */
    II(0x1028b993, 0x2)    jzd(0x1028b9b2, 0x1d);                 /* jz 0x1028b9b2 */
    II(0x1028b995, 0x5)    cmp(memw_a32(ds, esi + 0x38), 0);      /* cmp word [esi+0x38], 0x0 */
    II(0x1028b99a, 0x2)    jzd(0x1028b9aa, 0xe);                  /* jz 0x1028b9aa */
    II(0x1028b99c, 0x3)    mov(eax, memd_a32(ds, esi + 0x10));    /* mov eax, [esi+0x10] */
    II(0x1028b99f, 0x3)    mov(memd_a32(ds, esi + 0x8), eax);     /* mov [esi+0x8], eax */
    II(0x1028b9a2, 0x3)    mov(eax, memd_a32(ds, esi + 0x20));    /* mov eax, [esi+0x20] */
    II(0x1028b9a5, 0x3)    mov(memd_a32(ds, esi + 0x1c), eax);    /* mov [esi+0x1c], eax */
    II(0x1028b9a8, 0x2)    jmpd(0x1028b9bd, 0x13);                /* jmp 0x1028b9bd */
l_0x1028b9aa:
    II(0x1028b9aa, 0x3)    mov(eax, memd_a32(ds, esi + 0x2c));    /* mov eax, [esi+0x2c] */
    II(0x1028b9ad, 0x3)    mov(memd_a32(ds, esi + 0x1c), eax);    /* mov [esi+0x1c], eax */
    II(0x1028b9b0, 0x2)    jmpd(0x1028b9bd, 0xb);                 /* jmp 0x1028b9bd */
l_0x1028b9b2:
    II(0x1028b9b2, 0x2)    mov(eax, memd_a32(ds, esi));           /* mov eax, [esi] */
    II(0x1028b9b4, 0x3)    mov(memd_a32(ds, esi + 0x8), eax);     /* mov [esi+0x8], eax */
    II(0x1028b9b7, 0x3)    mov(eax, memd_a32(ds, esi + 0x18));    /* mov eax, [esi+0x18] */
    II(0x1028b9ba, 0x3)    mov(memd_a32(ds, esi + 0x1c), eax);    /* mov [esi+0x1c], eax */
l_0x1028b9bd:
    II(0x1028b9bd, 0x4)    cmp(memd_a32(ds, esi + 0x3c), 0);      /* cmp dword [esi+0x3c], 0x0 */
    II(0x1028b9c1, 0x2)    jzd(0x1028ba0e, 0x4b);                 /* jz 0x1028ba0e */
    II(0x1028b9c3, 0x6)    test(memw_a32(ds, esi + 0x30), 0x4);   /* test word [esi+0x30], 0x4 */
    II(0x1028b9c9, 0x2)    jnzd(0x1028ba0e, 0x43);                /* jnz 0x1028ba0e */
    II(0x1028b9cb, 0x1)    pushad();                              /* pushad  */
    II(0x1028b9cc, 0x2)    pushd(gs);                             /* push gs */
    II(0x1028b9ce, 0x1)    pushd(es);                             /* push es */
    II(0x1028b9cf, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028b9d0, 0x7)    mov(es, memw_a32(ds, 0x139e));         /* mov es, [0x139e] */
    II(0x1028b9d7, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028b9d8, 0x2)    popd(gs);                              /* pop gs */
    II(0x1028b9da, 0x8)    mov(ds, memw_a32(gs, 0x136e));         /* mov ds, [gs:0x136e] */
    II(0x1028b9e2, 0x2)    mov(eax, esi);                         /* mov eax, esi */
    II(0x1028b9e4, 0x5)    sub(eax, 0x3d0);                       /* sub eax, 0x3d0 */
    II(0x1028b9e9, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
    II(0x1028b9eb, 0x4)    mov(bx, 0x6c);                         /* mov bx, 0x6c */
    II(0x1028b9ef, 0x3)    div(bx);                               /* div bx */
    II(0x1028b9f2, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028b9f3, 0x5)    mov(eax, 0x1);                         /* mov eax, 0x1 */
    II(0x1028b9f8, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028b9f9, 0x8)    movzx(eax, memw_a32(gs, 0x1388));      /* movzx eax, word [gs:0x1388] */
    II(0x1028ba01, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028ba02, 0x4)    calld_a32_far_ind(gs, esi + 0x3c);     /* call dword far [gs:esi+0x3c] */
    II(0x1028ba06, 0x3)    add(esp, 0xc);                         /* add esp, 0xc */
    II(0x1028ba09, 0x1)    popd(ds);                              /* pop ds */
    II(0x1028ba0a, 0x1)    popd(es);                              /* pop es */
    II(0x1028ba0b, 0x2)    popd(gs);                              /* pop gs */
    II(0x1028ba0d, 0x1)    popad();                               /* popad  */
l_0x1028ba0e:
    II(0x1028ba0e, 0x6)    mov(ebx, memd_a32(ds, 0x1362));        /* mov ebx, [0x1362] */
    II(0x1028ba14, 0x5)    jmpd(0x1028b776, -0x2a3);              /* jmp 0x1028b776 */
l_0x1028ba19:
    II(0x1028ba19, 0x4)    cmp(memd_a32(ds, esi + 0x3c), 0);      /* cmp dword [esi+0x3c], 0x0 */
    II(0x1028ba1d, 0x2)    jzd(0x1028ba6a, 0x4b);                 /* jz 0x1028ba6a */
    II(0x1028ba1f, 0x6)    test(memw_a32(ds, esi + 0x30), 0x8);   /* test word [esi+0x30], 0x8 */
    II(0x1028ba25, 0x2)    jnzd(0x1028ba6a, 0x43);                /* jnz 0x1028ba6a */
    II(0x1028ba27, 0x1)    pushad();                              /* pushad  */
    II(0x1028ba28, 0x2)    pushd(gs);                             /* push gs */
    II(0x1028ba2a, 0x1)    pushd(es);                             /* push es */
    II(0x1028ba2b, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028ba2c, 0x7)    mov(es, memw_a32(ds, 0x139e));         /* mov es, [0x139e] */
    II(0x1028ba33, 0x1)    pushd(ds);                             /* push ds */
    II(0x1028ba34, 0x2)    popd(gs);                              /* pop gs */
    II(0x1028ba36, 0x8)    mov(ds, memw_a32(gs, 0x136e));         /* mov ds, [gs:0x136e] */
    II(0x1028ba3e, 0x2)    mov(eax, esi);                         /* mov eax, esi */
    II(0x1028ba40, 0x5)    sub(eax, 0x3d0);                       /* sub eax, 0x3d0 */
    II(0x1028ba45, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
    II(0x1028ba47, 0x4)    mov(bx, 0x6c);                         /* mov bx, 0x6c */
    II(0x1028ba4b, 0x3)    div(bx);                               /* div bx */
    II(0x1028ba4e, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028ba4f, 0x5)    mov(eax, 0);                           /* mov eax, 0x0 */
    II(0x1028ba54, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028ba55, 0x8)    movzx(eax, memw_a32(gs, 0x1388));      /* movzx eax, word [gs:0x1388] */
    II(0x1028ba5d, 0x1)    pushd(eax);                            /* push eax */
    II(0x1028ba5e, 0x4)    calld_a32_far_ind(gs, esi + 0x3c);     /* call dword far [gs:esi+0x3c] */
    II(0x1028ba62, 0x3)    add(esp, 0xc);                         /* add esp, 0xc */
    II(0x1028ba65, 0x1)    popd(ds);                              /* pop ds */
    II(0x1028ba66, 0x1)    popd(es);                              /* pop es */
    II(0x1028ba67, 0x2)    popd(gs);                              /* pop gs */
    II(0x1028ba69, 0x1)    popad();                               /* popad  */
l_0x1028ba6a:
    II(0x1028ba6a, 0x6)    test(memw_a32(ds, esi + 0x30), 0x800); /* test word [esi+0x30], 0x800 */
    II(0x1028ba70, 0x2)    jzd(0x1028ba83, 0x11);                 /* jz 0x1028ba83 */
    II(0x1028ba72, 0x6)    and_(memw_a32(ds, esi + 0x30), 0xf7ff); /* and word [esi+0x30], 0xf7ff */
    II(0x1028ba78, 0x6)    mov(ebx, memd_a32(ds, 0x1362));        /* mov ebx, [0x1362] */
    II(0x1028ba7e, 0x5)    jmpd(0x1028b776, -0x30d);              /* jmp 0x1028b776 */
l_0x1028ba83:
    II(0x1028ba83, 0x6)    or_(memw_a32(ds, esi + 0x30), 0x1000); /* or word [esi+0x30], 0x1000 */
    II(0x1028ba89, 0x6)    mov(ebx, memd_a32(ds, 0x132c));        /* mov ebx, [0x132c] */
    II(0x1028ba8f, 0x3)    shl(ebx, 0x2);                         /* shl ebx, 0x2 */
    II(0x1028ba92, 0x6)    add(ebx, 0x12ac);                      /* add ebx, 0x12ac */
    II(0x1028ba98, 0x2)    mov(memd_a32(ds, ebx), esi);           /* mov [ebx], esi */
    II(0x1028ba9a, 0x6)    inc(memd_a32(ds, 0x132c));             /* inc dword [0x132c] */
    II(0x1028baa0, 0x4)    movzx(eax, memw_a32(ds, esi + 0x3a));  /* movzx eax, word [esi+0x3a] */
    II(0x1028baa4, 0x6)    sub(eax, memd_a32(ds, 0x1330));        /* sub eax, [0x1330] */
    II(0x1028baaa, 0x2)    jaed(0x1028babb, 0xf);                 /* jae 0x1028babb */
    II(0x1028baac, 0x5)    mov(eax, memd_a32(ds, 0x1366));        /* mov eax, [0x1366] */
    II(0x1028bab1, 0x6)    sub(eax, memd_a32(ds, 0x1330));        /* sub eax, [0x1330] */
    II(0x1028bab7, 0x4)    add(ax, memw_a32(ds, esi + 0x3a));     /* add ax, [esi+0x3a] */
l_0x1028babb:
    II(0x1028babb, 0x4)    mov(memw_a32(ds, esi + 0x24), ax);     /* mov [esi+0x24], ax */
l_0x1028babf:
    II(0x1028babf, 0x6)    mov(ebx, memd_a32(ds, 0x1362));        /* mov ebx, [0x1362] */
    II(0x1028bac5, 0x3)    add(ebx, 0x4);                         /* add ebx, 0x4 */
    II(0x1028bac8, 0x6)    dec(memd_a32(ds, 0x12a8));             /* dec dword [0x12a8] */
    II(0x1028bace, 0x7)    cmp(memd_a32(ds, 0x12a8), 0);          /* cmp dword [0x12a8], 0x0 */
    II(0x1028bad5, 0x2)    jzd(0x1028badc, 0x5);                  /* jz 0x1028badc */
    II(0x1028bad7, 0x5)    jmpd(0x1028b776, -0x366);              /* jmp 0x1028b776 */
l_0x1028badc:
    II(0x1028badc, 0x5)    mov(eax, memd_a32(ds, 0x1330));        /* mov eax, [0x1330] */
    II(0x1028bae1, 0x5)    mov(memd_a32(ds, 0x1354), eax);        /* mov [0x1354], eax */
    II(0x1028bae6, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x1028bae7, 0x1)    popd(edi);                             /* pop edi */
    II(0x1028bae8, 0x1)    popd(esi);                             /* pop esi */
    II(0x1028bae9, 0x1)    popd(es);                              /* pop es */
    II(0x1028baea, 0x1)    popd(ds);                              /* pop ds */
    II(0x1028baeb, 0x6)    dec(memd_a32(ds, 0x136a));             /* dec dword [0x136a] */
l_0x1028baf1:
    II(0x1028baf1, 0x1)    popad();                               /* popad  */
    II(0x1028baf2, 0x2)    popd(gs);                              /* pop gs */
    II(0x1028baf4, 0x2)    popd(fs);                              /* pop fs */
    II(0x1028baf6, 0x1)    popd(es);                              /* pop es */
    II(0x1028baf7, 0x1)    popd(ds);                              /* pop ds */
    II(0x1028baf8, 0x1)    retfd();                               /* retf  */
}

FUNC_INFO_V2(0x10172d9c, func_0x10172d9c, 0x20, {0x60, 0x1e, 0x6, 0xf, 0xa0, 0xf, 0xa8, 0x89, 0xe5, 0xfc, 0xe8, 0x25, 0x9c, 0xff, 0xff, 0xba, 0x60, 0, 0, 0, 0x29, 0xc0, 0xec, 0x8b, 0x1d, 0xe4, 0xe1, 0x1b, 0x10, 0x89, 0xc2, 0x85, 0xdb, 0x75, 0x33, 0x83, 0x3d, 0x5c, 0xe8, 0x1b, 0x10, 0x1, 0xf, 0x94, 0xc0, 0x25, 0xff, 0, 0, 0, 0x74, 0x1a, 0xf6, 0x5, 0x68, 0xe8, 0x1b, 0x10, 0x1, 0x74, 0x19, 0xc7, 0x5, 0x6c, 0xe8, 0x1b, 0x10, 0x2, 0, 0, 0, 0xe8, 0xfc, 0x34, 0x1, 0, 0x31, 0xc0, 0x66, 0x89, 0xd0, 0xe8, 0x12, 0, 0, 0, 0xb0, 0x20, 0xba, 0x20, 0, 0, 0, 0xee, 0xf, 0xa9, 0xf, 0xa1, 0x7, 0x1f, 0x61, 0xcf})
void func_0x10172d9c()
{
    FUNC_START_V2(0x10172d9c, 0x20);
    II(0x10172d9c, 0x1)    pushad();                              /* pushad  */
    II(0x10172d9d, 0x1)    pushd(ds);                             /* push ds */
    II(0x10172d9e, 0x1)    pushd(es);                             /* push es */
    II(0x10172d9f, 0x2)    pushd(fs);                             /* push fs */
    II(0x10172da1, 0x2)    pushd(gs);                             /* push gs */
    II(0x10172da3, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x10172da5, 0x1)    cld();                                 /* cld  */
    II(0x10172da6, 0x5)    calld(0x1016c9d0, -0x63db);            /* call 0x1016c9d0 */
    II(0x10172dab, 0x5)    mov(edx, 0x60);                        /* mov edx, 0x60 */
    II(0x10172db0, 0x2)    sub(eax, eax);                         /* sub eax, eax */
    II(0x10172db2, 0x1)    inb(al, dx);                           /* in al, dx */        // Чтение клавиши клавиатуры?
    II(0x10172db3, 0x6)    mov(ebx, memd_a32(ds, 0x101be1e4));    /* mov ebx, [0x101be1e4] */
    II(0x10172db9, 0x2)    mov(edx, eax);                         /* mov edx, eax */
    II(0x10172dbb, 0x2)    test(ebx, ebx);                        /* test ebx, ebx */
    II(0x10172dbd, 0x2)    jnzd(0x10172df2, 0x33);                /* jnz 0x10172df2 */
    II(0x10172dbf, 0x7)    cmp(memd_a32(ds, 0x101be85c), 0x1);    /* cmp dword [0x101be85c], 0x1 */
    II(0x10172dc6, 0x3)    setz(al);                              /* setz al */
    II(0x10172dc9, 0x5)    and_(eax, 0xff);                       /* and eax, 0xff */
    II(0x10172dce, 0x2)    jzd(0x10172dea, 0x1a);                 /* jz 0x10172dea */
    II(0x10172dd0, 0x7)    test(memb_a32(ds, 0x101be868), 0x1);   /* test byte [0x101be868], 0x1 */
    II(0x10172dd7, 0x2)    jzd(0x10172df2, 0x19);                 /* jz 0x10172df2 */
    II(0x10172dd9, 0xa)    mov(memd_a32(ds, 0x101be86c), 0x2);    /* mov dword [0x101be86c], 0x2 */
    II(0x10172de3, 0x5)    calld(0x101862e4, 0x134fc);            /* call 0x101862e4 */
    II(0x10172de8, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
l_0x10172dea:
    II(0x10172dea, 0x3)    mov(ax, dx);                           /* mov ax, dx */
    II(0x10172ded, 0x5)    calld(0x10172e04, 0x12);               /* call 0x10172e04 */
l_0x10172df2:
    II(0x10172df2, 0x2)    mov(al, 0x20);                         /* mov al, 0x20 */
    II(0x10172df4, 0x5)    mov(edx, 0x20);                        /* mov edx, 0x20 */
    II(0x10172df9, 0x1)    outb(dx, al);                          /* out dx, al */
    II(0x10172dfa, 0x2)    popd(gs);                              /* pop gs */
    II(0x10172dfc, 0x2)    popd(fs);                              /* pop fs */
    II(0x10172dfe, 0x1)    popd(es);                              /* pop es */
    II(0x10172dff, 0x1)    popd(ds);                              /* pop ds */
    II(0x10172e00, 0x1)    popad();                               /* popad  */
    II(0x10172e01, 0x1)    iretd();                               /* iretd  */
}

FUNC_INFO_V2(0x10165e4b, func_0x10165e4b, 0x20, {0x51, 0x56, 0x57, 0x89, 0xd9, 0x89, 0xd6, 0x89, 0xc7, 0x6, 0x8c, 0xd8, 0x8e, 0xc0, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0x7, 0x89, 0xf8, 0x5f, 0x5e, 0x59, 0xc3})
void func_0x10165e4b() // memcpy. input ebx - count, edx - src, edi - dst
{
    FUNC_START_V2(0x10165e4b, 0x20);
    II(0x10165e4b, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x10165e4c, 0x1)    pushd(esi);                            /* push esi */
    II(0x10165e4d, 0x1)    pushd(edi);                            /* push edi */
    II(0x10165e4e, 0x2)    mov(ecx, ebx);                         /* mov ecx, ebx */
    II(0x10165e50, 0x2)    mov(esi, edx);                         /* mov esi, edx */
    II(0x10165e52, 0x2)    mov(edi, eax);                         /* mov edi, eax */
    II(0x10165e54, 0x1)    pushd(es);                             /* push es */
    II(0x10165e55, 0x2)    mov(eax, ds);                          /* mov eax, ds */
    II(0x10165e57, 0x2)    mov(es, eax);                          /* mov es, eax */
    II(0x10165e59, 0x1)    pushd(edi);                            /* push edi */
    II(0x10165e5a, 0x2)    mov(eax, ecx);                         /* mov eax, ecx */
    II(0x10165e5c, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
    II(0x10165e5f, 0x2)    repne_a32 movsd_a32();                 /* repne movsd  */
    II(0x10165e61, 0x2)    mov(cl, al);                           /* mov cl, al */
    II(0x10165e63, 0x3)    and_(cl, 0x3);                         /* and cl, 0x3 */
    II(0x10165e66, 0x2)    repne_a32 movsb_a32();                 /* repne movsb  */
    II(0x10165e68, 0x1)    popd(edi);                             /* pop edi */
    II(0x10165e69, 0x1)    popd(es);                              /* pop es */
    II(0x10165e6a, 0x2)    mov(eax, edi);                         /* mov eax, edi */
    II(0x10165e6c, 0x1)    popd(edi);                             /* pop edi */
    II(0x10165e6d, 0x1)    popd(esi);                             /* pop esi */
    II(0x10165e6e, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x10165e6f, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x1018cda8, func_0x1018cda8, 0x20, {0x55, 0x8b, 0xec, 0x83, 0xc4, 0xfc, 0x51, 0x33, 0xc9, 0x8a, 0xcb, 0xa, 0xff, 0x75, 0xc, 0x52, 0x51, 0xe8, 0xc2, 0xfb, 0xff, 0xff, 0x83, 0xc4, 0x8, 0xeb, 0x1c, 0x80, 0xff, 0x1, 0x75, 0x12, 0x8d, 0x45, 0xfc, 0x50, 0x51, 0xe8, 0x2e, 0xfc, 0xff, 0xff, 0x83, 0xc4, 0x8, 0x8b, 0x55, 0xfc, 0xeb, 0x5, 0xb8, 0, 0, 0, 0, 0xb, 0xc0, 0x74, 0x7, 0xb8, 0x4f, 0, 0, 0, 0xeb, 0x5, 0xb8, 0x4f, 0x1, 0, 0, 0x59, 0xc9, 0xc3})
void func_0x1018cda8()
{
    FUNC_START_V2(0x1018cda8, 0x20);    // int33 - set VGA bank?
    II(0x1018cda8, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x1018cda9, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x1018cdab, 0x3)    add(esp, -0x4 /* 0xfc */);             /* add esp, 0xfc */
    II(0x1018cdae, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x1018cdaf, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */
    II(0x1018cdb1, 0x2)    mov(cl, bl);                           /* mov cl, bl */
    II(0x1018cdb3, 0x2)    or_(bh, bh);                           /* or bh, bh */
    II(0x1018cdb5, 0x2)    jnzd(0x1018cdc3, 0xc);                 /* jnz 0x1018cdc3 */
    II(0x1018cdb7, 0x1)    pushd(edx);                            /* push edx */
    II(0x1018cdb8, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x1018cdb9, 0x5)    calld(0x1018c980, -0x43e);             /* call 0x1018c980 */
    II(0x1018cdbe, 0x3)    add(esp, 0x8);                         /* add esp, 0x8 */
    II(0x1018cdc1, 0x2)    jmpd(0x1018cddf, 0x1c);                /* jmp 0x1018cddf */
l_0x1018cdc3:
    II(0x1018cdc3, 0x3)    cmp(bh, 0x1);                          /* cmp bh, 0x1 */
    II(0x1018cdc6, 0x2)    jnzd(0x1018cdda, 0x12);                /* jnz 0x1018cdda */
    II(0x1018cdc8, 0x3)    lea(eax, ebp - 0x4);                   /* lea eax, [ebp-0x4] */
    II(0x1018cdcb, 0x1)    pushd(eax);                            /* push eax */
    II(0x1018cdcc, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x1018cdcd, 0x5)    calld(0x1018ca00, -0x3d2);             /* call 0x1018ca00 */
    II(0x1018cdd2, 0x3)    add(esp, 0x8);                         /* add esp, 0x8 */
    II(0x1018cdd5, 0x3)    mov(edx, memd_a32(ss, ebp - 0x4));     /* mov edx, [ebp-0x4] */
    II(0x1018cdd8, 0x2)    jmpd(0x1018cddf, 0x5);                 /* jmp 0x1018cddf */
l_0x1018cdda:
    II(0x1018cdda, 0x5)    mov(eax, 0);                           /* mov eax, 0x0 */
l_0x1018cddf:
    II(0x1018cddf, 0x2)    or_(eax, eax);                         /* or eax, eax */
    II(0x1018cde1, 0x2)    jzd(0x1018cdea, 0x7);                  /* jz 0x1018cdea */
    II(0x1018cde3, 0x5)    mov(eax, 0x4f);                        /* mov eax, 0x4f */
    II(0x1018cde8, 0x2)    jmpd(0x1018cdef, 0x5);                 /* jmp 0x1018cdef */
l_0x1018cdea:
    II(0x1018cdea, 0x5)    mov(eax, 0x14f);                       /* mov eax, 0x14f */
l_0x1018cdef:
    II(0x1018cdef, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x1018cdf0, 0x1)    leaved();                              /* leave  */
    II(0x1018cdf1, 0x1)    retd();                                /* ret  */
}

//FUNC_INFO_V2(0x10165d65, func_0x10165d65, 0x20, {0x39, 0xe0, 0x73, 0xd, 0x29, 0xe0, 0xf7, 0xd8, 0x3b, 0x5, 0x70, 0xe5, 0x1b, 0x10, 0x76, 0x1, 0xc3, 0x66, 0x8c, 0xd0, 0x66, 0x3b, 0x5, 0x94, 0xdd, 0x1b, 0x10, 0x74, 0x1, 0xc3, 0xb8, 0x96, 0xdd, 0x1b, 0x10, 0xba, 0x1, 0, 0, 0, 0xe8, 0x70, 0xb2, 0x1, 0})
//void func_0x10165d65()
//{
//    FUNC_START_V2(0x10165d65, 0x20); // проверка, достаточно ли места в стеке?
//    II(0x10165d65, 0x2)    cmp(eax, esp);                    /* cmp eax, esp */
//    II(0x10165d67, 0x2)    jaed(0x10165d76, 0xd);            /* jae 0x10165d76 */
//    II(0x10165d69, 0x2)    sub(eax, esp);                    /* sub eax, esp */
//    II(0x10165d6b, 0x2)    neg(eax);                         /* neg eax */            // eax = esp - eax
//    II(0x10165d6d, 0x6)    cmp(eax, memd_a32(ds, 0x101be570)); /* cmp eax, [0x101be570] */
//    II(0x10165d73, 0x2)    jbed(0x10165d76, 0x1);            /* jbe 0x10165d76 */
//    II(0x10165d75, 0x1)    retd();                           /* ret  */
//l_0x10165d76:
//    II(0x10165d76, 0x3)    mov(ax, ss);                      /* mov ax, ss */
//    II(0x10165d79, 0x7)    cmp(ax, memw_a32(ds, 0x101bdd94)); /* cmp ax, [0x101bdd94] */
//    II(0x10165d80, 0x2)    jzd(0x10165d83, 0x1);             /* jz 0x10165d83 */
//    II(0x10165d82, 0x1)    retd();                           /* ret  */
//l_0x10165d83:
//    II(0x10165d83, 0x5)    mov(eax, 0x101bdd96);             /* mov eax, 0x101bdd96 */
//    II(0x10165d88, 0x5)    mov(edx, 0x1);                    /* mov edx, 0x1 */
//    II(0x10165d8d, 0x5)    calld(0x10181002, 0x1b270);       /* call 0x10181002 */
//
//    II(call_assert_, 0) jmpd_func(call_assert_, 0);
//}

FUNC_INFO_V2(sys_check_available_stack_size, func_0x10165d52, 0x20, {0x87, 0x44, 0x24, 0x4, 0xe8, 0xa, 0, 0, 0, 0x8b, 0x44, 0x24, 0x4, 0xc2, 0x4, 0})
void func_0x10165d52() // check_stack?
{
    FUNC_START_V2(0x10165d52, 0x20);
    II(0x10165d52, 0x4)    xchg(memd_a32(ss, esp + 0x4), eax); /* xchg [esp+0x4], eax */
    II(0x10165d56, 0x5)    calld(0x10165d65, 0xa);           /* call 0x10165d65 */
    II(0x10165d5b, 0x4)    mov(eax, memd_a32(ss, esp + 0x4)); /* mov eax, [esp+0x4] */
    II(0x10165d5f, 0x3)    retd(0x4);                        /* ret 0x4 */
}

FUNC_INFO_V2(0x10165de0, func_0x10165de0, 0x20, {0x50, 0x51, 0x88, 0xd6, 0xc1, 0xe2, 0x8, 0x88, 0xf2, 0xc1, 0xe2, 0x8, 0x88, 0xf2, 0x89, 0xd9, 0xe8, 0x4b, 0xb2, 0x1, 0, 0x59, 0x58, 0xc3})
void func_0x10165de0()
{
    FUNC_START_V2(0x10165de0, 0x20);    // memset  eax - ptr, ebx - bytes, dl - value
    II(0x10165de0, 0x1)    pushd(eax);                       /* push eax */
    II(0x10165de1, 0x1)    pushd(ecx);                       /* push ecx */
    II(0x10165de2, 0x2)    mov(dh, dl);                      /* mov dh, dl */
    II(0x10165de4, 0x3)    shl(edx, 0x8);                    /* shl edx, 0x8 */
    II(0x10165de7, 0x2)    mov(dl, dh);                      /* mov dl, dh */
    II(0x10165de9, 0x3)    shl(edx, 0x8);                    /* shl edx, 0x8 */
    II(0x10165dec, 0x2)    mov(dl, dh);                      /* mov dl, dh */        // Итого: edx = {dl, dl, dl, dl}.
    II(0x10165dee, 0x2)    mov(ecx, ebx);                    /* mov ecx, ebx */
    II(0x10165df0, 0x5)    calld(0x10181040, 0x1b24b);       /* call 0x10181040 */
    II(0x10165df5, 0x1)    popd(ecx);                        /* pop ecx */
    II(0x10165df6, 0x1)    popd(eax);                        /* pop eax */
    II(0x10165df7, 0x1)    retd();                           /* ret  */
}

FUNC_INFO_V2(0x10181040, func_0x10181040, 0x20, {0x9, 0xc9, 0x74, 0x2c, 0x38, 0x10, 0xa8, 0x3, 0x74, 0x9, 0x88, 0x10, 0x40, 0xc1, 0xca, 0x8, 0x49, 0x75, 0xf3, 0x51, 0xc1, 0xe9, 0x2, 0xe8, 0x1b, 0, 0, 0, 0x59, 0x83, 0xe1, 0x3, 0x74, 0xe, 0x88, 0x10, 0x49, 0x74, 0x9, 0x88, 0x70, 0x1, 0x49, 0x74, 0x3, 0x88, 0x50, 0x2, 0xc3})
void func_0x10181040()
{
    FUNC_START_V2(0x10181040, 0x20);    // ~wmemset  eax - ptr, ecx - bytes, edx = {dx, dx} - value
    II(0x10181040, 0x2)    or_(ecx, ecx);                    /* or ecx, ecx */
    II(0x10181042, 0x2)    jzd(0x10181070, 0x2c);            /* jz 0x10181070 */
    II(0x10181044, 0x2)    cmp(memb_a32(ds, eax), dl);       /* cmp [eax], dl */
l_0x10181046:
    II(0x10181046, 0x2)    test(al, 0x3);                    /* test al, 0x3 */
    II(0x10181048, 0x2)    jzd(0x10181053, 0x9);             /* jz 0x10181053 */
    II(0x1018104a, 0x2)    mov(memb_a32(ds, eax), dl);       /* mov [eax], dl */
    II(0x1018104c, 0x1)    inc(eax);                         /* inc eax */
    II(0x1018104d, 0x3)    ror(edx, 0x8);                    /* ror edx, 0x8 */
    II(0x10181050, 0x1)    dec(ecx);                         /* dec ecx */
    II(0x10181051, 0x2)    jnzd(0x10181046, -0xd);           /* jnz 0x10181046 */
l_0x10181053:
    II(0x10181053, 0x1)    pushd(ecx);                       /* push ecx */
    II(0x10181054, 0x3)    shr(ecx, 0x2);                    /* shr ecx, 0x2 */
    II(0x10181057, 0x5)    calld(0x10181077, 0x1b);          /* call 0x10181077 */
    II(0x1018105c, 0x1)    popd(ecx);                        /* pop ecx */
    II(0x1018105d, 0x3)    and_(ecx, 0x3);                   /* and ecx, 0x3 */
    II(0x10181060, 0x2)    jzd(0x10181070, 0xe);             /* jz 0x10181070 */
    II(0x10181062, 0x2)    mov(memb_a32(ds, eax), dl);       /* mov [eax], dl */
    II(0x10181064, 0x1)    dec(ecx);                         /* dec ecx */
    II(0x10181065, 0x2)    jzd(0x10181070, 0x9);             /* jz 0x10181070 */
    II(0x10181067, 0x3)    mov(memb_a32(ds, eax + 0x1), dh); /* mov [eax+0x1], dh */
    II(0x1018106a, 0x1)    dec(ecx);                         /* dec ecx */
    II(0x1018106b, 0x2)    jzd(0x10181070, 0x3);             /* jz 0x10181070 */
    II(0x1018106d, 0x3)    mov(memb_a32(ds, eax + 0x2), dl); /* mov [eax+0x2], dl */
l_0x10181070:
    II(0x10181070, 0x1)    retd();                           /* ret  */
}

FUNC_INFO_V2(0x10181077, func_0x10181077, 0x20, {0x9, 0xc9, 0x74, 0x67, 0xa8, 0x1f, 0x74, 0x8, 0x89, 0x10, 0x8d, 0x40, 0x4, 0x49, 0x75, 0xf4, 0x51, 0xc1, 0xe9, 0x2, 0x74, 0x3a, 0x49, 0x74, 0x29, 0x89, 0x10, 0x89, 0x50, 0x4, 0x49, 0x89, 0x50, 0x8, 0x89, 0x50, 0xc, 0x74, 0x18, 0x38, 0x50, 0x20, 0x89, 0x50, 0x10, 0x89, 0x50, 0x14, 0x49, 0x89, 0x50, 0x18, 0x89, 0x50, 0x1c, 0x8d, 0x40, 0x20, 0x75, 0xdd, 0x8d, 0x40, 0xf0, 0x8d, 0x40, 0x10, 0x89, 0x10, 0x89, 0x50, 0x4, 0x89, 0x50, 0x8, 0x89, 0x50, 0xc, 0x8d, 0x40, 0x10, 0x59, 0x83, 0xe1, 0x3, 0x74, 0x15, 0x89, 0x10, 0x8d, 0x40, 0x4, 0x49, 0x74, 0xd, 0x89, 0x10, 0x8d, 0x40, 0x4, 0x49, 0x74, 0x5, 0x89, 0x10, 0x8d, 0x40, 0x4, 0xc3})
void func_0x10181077()
{
    FUNC_START_V2(0x10181077, 0x20);    // ~dmemset        eax - ptr, ecx - in 4 bytes unit, edx - value.
    II(0x10181077, 0x2)    or_(ecx, ecx);                    /* or ecx, ecx */
    II(0x10181079, 0x2)    jzd(0x101810e2, 0x67);            /* jz 0x101810e2 */
l_0x1018107b:
    II(0x1018107b, 0x2)    test(al, 0x1f);                   /* test al, 0x1f */
    II(0x1018107d, 0x2)    jzd(0x10181087, 0x8);             /* jz 0x10181087 */
    II(0x1018107f, 0x2)    mov(memd_a32(ds, eax), edx);      /* mov [eax], edx */
    II(0x10181081, 0x3)    lea(eax, eax + 0x4);              /* lea eax, [eax+0x4] */
    II(0x10181084, 0x1)    dec(ecx);                         /* dec ecx */
    II(0x10181085, 0x2)    jnzd(0x1018107b, -0xc);           /* jnz 0x1018107b */
l_0x10181087:
    II(0x10181087, 0x1)    pushd(ecx);                       /* push ecx */
    II(0x10181088, 0x3)    shr(ecx, 0x2);                    /* shr ecx, 0x2 */
    II(0x1018108b, 0x2)    jzd(0x101810c7, 0x3a);            /* jz 0x101810c7 */
    II(0x1018108d, 0x1)    dec(ecx);                         /* dec ecx */
    II(0x1018108e, 0x2)    jzd(0x101810b9, 0x29);            /* jz 0x101810b9 */
l_0x10181090:
    II(0x10181090, 0x2)    mov(memd_a32(ds, eax), edx);      /* mov [eax], edx */
    II(0x10181092, 0x3)    mov(memd_a32(ds, eax + 0x4), edx); /* mov [eax+0x4], edx */
    II(0x10181095, 0x1)    dec(ecx);                         /* dec ecx */
    II(0x10181096, 0x3)    mov(memd_a32(ds, eax + 0x8), edx); /* mov [eax+0x8], edx */
    II(0x10181099, 0x3)    mov(memd_a32(ds, eax + 0xc), edx); /* mov [eax+0xc], edx */
    II(0x1018109c, 0x2)    jzd(0x101810b6, 0x18);            /* jz 0x101810b6 */
    II(0x1018109e, 0x3)    cmp(memb_a32(ds, eax + 0x20), dl); /* cmp [eax+0x20], dl */
    II(0x101810a1, 0x3)    mov(memd_a32(ds, eax + 0x10), edx); /* mov [eax+0x10], edx */
    II(0x101810a4, 0x3)    mov(memd_a32(ds, eax + 0x14), edx); /* mov [eax+0x14], edx */
    II(0x101810a7, 0x1)    dec(ecx);                         /* dec ecx */
    II(0x101810a8, 0x3)    mov(memd_a32(ds, eax + 0x18), edx); /* mov [eax+0x18], edx */
    II(0x101810ab, 0x3)    mov(memd_a32(ds, eax + 0x1c), edx); /* mov [eax+0x1c], edx */
    II(0x101810ae, 0x3)    lea(eax, eax + 0x20);             /* lea eax, [eax+0x20] */
    II(0x101810b1, 0x2)    jnzd(0x10181090, -0x23);          /* jnz 0x10181090 */
    II(0x101810b3, 0x3)    lea(eax, eax - 0x10);             /* lea eax, [eax-0x10] */
l_0x101810b6:
    II(0x101810b6, 0x3)    lea(eax, eax + 0x10);             /* lea eax, [eax+0x10] */
l_0x101810b9:
    II(0x101810b9, 0x2)    mov(memd_a32(ds, eax), edx);      /* mov [eax], edx */
    II(0x101810bb, 0x3)    mov(memd_a32(ds, eax + 0x4), edx); /* mov [eax+0x4], edx */
    II(0x101810be, 0x3)    mov(memd_a32(ds, eax + 0x8), edx); /* mov [eax+0x8], edx */
    II(0x101810c1, 0x3)    mov(memd_a32(ds, eax + 0xc), edx); /* mov [eax+0xc], edx */
    II(0x101810c4, 0x3)    lea(eax, eax + 0x10);             /* lea eax, [eax+0x10] */
l_0x101810c7:
    II(0x101810c7, 0x1)    popd(ecx);                        /* pop ecx */
    II(0x101810c8, 0x3)    and_(ecx, 0x3);                   /* and ecx, 0x3 */
    II(0x101810cb, 0x2)    jzd(0x101810e2, 0x15);            /* jz 0x101810e2 */
    II(0x101810cd, 0x2)    mov(memd_a32(ds, eax), edx);      /* mov [eax], edx */
    II(0x101810cf, 0x3)    lea(eax, eax + 0x4);              /* lea eax, [eax+0x4] */
    II(0x101810d2, 0x1)    dec(ecx);                         /* dec ecx */
    II(0x101810d3, 0x2)    jzd(0x101810e2, 0xd);             /* jz 0x101810e2 */
    II(0x101810d5, 0x2)    mov(memd_a32(ds, eax), edx);      /* mov [eax], edx */
    II(0x101810d7, 0x3)    lea(eax, eax + 0x4);              /* lea eax, [eax+0x4] */
    II(0x101810da, 0x1)    dec(ecx);                         /* dec ecx */
    II(0x101810db, 0x2)    jzd(0x101810e2, 0x5);             /* jz 0x101810e2 */
    II(0x101810dd, 0x2)    mov(memd_a32(ds, eax), edx);      /* mov [eax], edx */
    II(0x101810df, 0x3)    lea(eax, eax + 0x4);              /* lea eax, [eax+0x4] */
l_0x101810e2:
    II(0x101810e2, 0x1)    retd();                           /* ret  */
}

FUNC_INFO_V2(0x1013ae28, func_0x1013ae28, 0x20, {0x68, 0x20, 0, 0, 0, 0xe8, 0x20, 0xaf, 0x2, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x74, 0x6, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
void func_0x1013ae28() // if (eax != NULL) (u16 *eax) ++;
{
    FUNC_START_V2(0x1013ae28, 0x20);
    II(0x1013ae28, 0x5)    pushd(0x20);                      /* push dword 0x20 */
    II(0x1013ae2d, 0x5)    calld(sys_check_available_stack_size, 0x2af20);       /* call sys_check_available_stack_size */
    II(0x1013ae32, 0x1)    pushd(ebx);                       /* push ebx */
    II(0x1013ae33, 0x1)    pushd(ecx);                       /* push ecx */
    II(0x1013ae34, 0x1)    pushd(edx);                       /* push edx */
    II(0x1013ae35, 0x1)    pushd(esi);                       /* push esi */
    II(0x1013ae36, 0x1)    pushd(edi);                       /* push edi */
    II(0x1013ae37, 0x1)    pushd(ebp);                       /* push ebp */
    II(0x1013ae38, 0x2)    mov(ebp, esp);                    /* mov ebp, esp */
    II(0x1013ae3a, 0x6)    sub(esp, 0x4);                    /* sub esp, 0x4 */
    II(0x1013ae40, 0x3)    mov(memd_a32(ss, ebp - 0x4), eax); /* mov [ebp-0x4], eax */
    II(0x1013ae43, 0x4)    cmp(memd_a32(ss, ebp - 0x4), 0);  /* cmp dword [ebp-0x4], 0x0 */
    II(0x1013ae47, 0x2)    jzd(0x1013ae4f, 0x6);             /* jz 0x1013ae4f */
    II(0x1013ae49, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4)); /* mov eax, [ebp-0x4] */
    II(0x1013ae4c, 0x3)    inc(memw_a32(ds, eax));           /* inc word [eax] */
l_0x1013ae4f:
    II(0x1013ae4f, 0x2)    mov(esp, ebp);                    /* mov esp, ebp */
    II(0x1013ae51, 0x1)    popd(ebp);                        /* pop ebp */
    II(0x1013ae52, 0x1)    popd(edi);                        /* pop edi */
    II(0x1013ae53, 0x1)    popd(esi);                        /* pop esi */
    II(0x1013ae54, 0x1)    popd(edx);                        /* pop edx */
    II(0x1013ae55, 0x1)    popd(ecx);                        /* pop ecx */
    II(0x1013ae56, 0x1)    popd(ebx);                        /* pop ebx */
    II(0x1013ae57, 0x1)    retd();                           /* ret  */
}

FUNC_INFO_V2(0x1013abc3, func_0x1013abc3, 0x20, {0x68, 0x24, 0, 0, 0, 0xe8, 0x85, 0xb1, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf8, 0x89, 0x2, 0x8b, 0x45, 0xf8, 0x8b, 0, 0xe8, 0x36, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
void func_0x1013abc3()
{
    FUNC_START_V2(0x1013abc3, 0x20);
    II(0x1013abc3, 0x5)    pushd(0x24);                           /* push dword 0x24 */
    II(0x1013abc8, 0x5)    calld(sys_check_available_stack_size, 0x2b185);            /* call sys_check_available_stack_size */
    II(0x1013abcd, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x1013abce, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x1013abcf, 0x1)    pushd(esi);                            /* push esi */
    II(0x1013abd0, 0x1)    pushd(edi);                            /* push edi */
    II(0x1013abd1, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x1013abd2, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x1013abd4, 0x6)    sub(esp, 0xc);                         /* sub esp, 0xc */
    II(0x1013abda, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
    II(0x1013abdd, 0x3)    mov(memd_a32(ss, ebp - 0x4), edx);     /* mov [ebp-0x4], edx */
    II(0x1013abe0, 0x3)    mov(eax, memd_a32(ss, ebp - 0x4));     /* mov eax, [ebp-0x4] */
    II(0x1013abe3, 0x3)    mov(edx, memd_a32(ss, ebp - 0x8));     /* mov edx, [ebp-0x8] */
    II(0x1013abe6, 0x2)    mov(memd_a32(ds, edx), eax);           /* mov [edx], eax */
    II(0x1013abe8, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x1013abeb, 0x2)    mov(eax, memd_a32(ds, eax));           /* mov eax, [eax] */
    II(0x1013abed, 0x5)    calld(0x1013ae28, 0x236);              /* call 0x1013ae28 */     // // if (eax != NULL) (u16 *eax) ++;
    II(0x1013abf2, 0x3)    mov(eax, memd_a32(ss, ebp - 0x8));     /* mov eax, [ebp-0x8] */
    II(0x1013abf5, 0x3)    mov(memd_a32(ss, ebp - 0xc), eax);     /* mov [ebp-0xc], eax */
//    II(0x1013abf8, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x1013abfb, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x1013abfd, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x1013abfe, 0x1)    popd(edi);                             /* pop edi */
    II(0x1013abff, 0x1)    popd(esi);                             /* pop esi */
    II(0x1013ac00, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x1013ac01, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x1013ac02, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x100e883d, func_0x100e883d, 0x20, {0x68, 0x34, 0, 0, 0, 0xe8, 0xb, 0xd5, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x88, 0x45, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x85, 0xc0, 0x7d, 0x9, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x1c, 0x80, 0x7d, 0xfc, 0x3b, 0x7d, 0x9, 0xc7, 0x45, 0xf4, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xf8, 0x83, 0x7d, 0xf8, 0, 0x74, 0x13, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0x1a, 0xba, 0x60, 0x7f, 0x1b, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
void func_0x100e883d() // input  al - s8   output ptr in eax:    if (0 <= al && al < 0x3b) { return 0x101b7f60 + 0x1a * al } else return NULL;   - index in array?
{
    FUNC_START_V2(0x100e883d, 0x20);
    II(0x100e883d, 0x5)    pushd(0x34);                           /* push dword 0x34 */
    II(0x100e8842, 0x5)    calld(sys_check_available_stack_size, 0x7d50b);            /* call sys_check_available_stack_size */
    II(0x100e8847, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x100e8848, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x100e8849, 0x1)    pushd(edx);                            /* push edx */
    II(0x100e884a, 0x1)    pushd(esi);                            /* push esi */
    II(0x100e884b, 0x1)    pushd(edi);                            /* push edi */
    II(0x100e884c, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x100e884d, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x100e884f, 0x6)    sub(esp, 0x18);                        /* sub esp, 0x18 */
    II(0x100e8855, 0x3)    mov(memb_a32(ss, ebp - 0x4), al);      /* mov [ebp-0x4], al */
    II(0x100e8858, 0x4)    movsx(eax, memb_a32(ss, ebp - 0x4));   /* movsx eax, byte [ebp-0x4] */
    II(0x100e885c, 0x2)    test(eax, eax);                        /* test eax, eax */
    II(0x100e885e, 0x2)    jged(0x100e8869, 0x9);                 /* jge 0x100e8869 */
    II(0x100e8860, 0x7)    mov(memd_a32(ss, ebp - 0x8), 0);       /* mov dword [ebp-0x8], 0x0 */
    II(0x100e8867, 0x2)    jmpd(0x100e8885, 0x1c);                /* jmp 0x100e8885 */
l_0x100e8869:
    II(0x100e8869, 0x4)    cmp(memb_a32(ss, ebp - 0x4), 0x3b);    /* cmp byte [ebp-0x4], 0x3b */
    II(0x100e886d, 0x2)    jged(0x100e8878, 0x9);                 /* jge 0x100e8878 */
    II(0x100e886f, 0x7)    mov(memd_a32(ss, ebp - 0xc), 0x1);     /* mov dword [ebp-0xc], 0x1 */
    II(0x100e8876, 0x2)    jmpd(0x100e887f, 0x7);                 /* jmp 0x100e887f */
l_0x100e8878:
    II(0x100e8878, 0x7)    mov(memd_a32(ss, ebp - 0xc), 0);       /* mov dword [ebp-0xc], 0x0 */
l_0x100e887f:
    II(0x100e887f, 0x3)    mov(eax, memd_a32(ss, ebp - 0xc));     /* mov eax, [ebp-0xc] */
    II(0x100e8882, 0x3)    mov(memd_a32(ss, ebp - 0x8), eax);     /* mov [ebp-0x8], eax */
l_0x100e8885:
    II(0x100e8885, 0x4)    cmp(memd_a32(ss, ebp - 0x8), 0);       /* cmp dword [ebp-0x8], 0x0 */
    II(0x100e8889, 0x2)    jzd(0x100e889e, 0x13);                 /* jz 0x100e889e */
    II(0x100e888b, 0x4)    movsx(eax, memb_a32(ss, ebp - 0x4));   /* movsx eax, byte [ebp-0x4] */
    II(0x100e888f, 0x3)    imul(eax, eax, 0x1a);                  /* imul eax, eax, 0x1a */
    II(0x100e8892, 0x5)    mov(edx, 0x101b7f60);                  /* mov edx, 0x101b7f60 */
    II(0x100e8897, 0x2)    add(edx, eax);                         /* add edx, eax */
    II(0x100e8899, 0x3)    mov(memd_a32(ss, ebp - 0x10), edx);    /* mov [ebp-0x10], edx */
    II(0x100e889c, 0x2)    jmpd(0x100e88a5, 0x7);                 /* jmp 0x100e88a5 */
l_0x100e889e:
    II(0x100e889e, 0x7)    mov(memd_a32(ss, ebp - 0x10), 0);      /* mov dword [ebp-0x10], 0x0 */
l_0x100e88a5:
    II(0x100e88a5, 0x3)    mov(eax, memd_a32(ss, ebp - 0x10));    /* mov eax, [ebp-0x10] */
    II(0x100e88a8, 0x3)    mov(memd_a32(ss, ebp - 0x14), eax);    /* mov [ebp-0x14], eax */
//    II(0x100e88ab, 0x3)    mov(eax, memd_a32(ss, ebp - 0x14));    /* mov eax, [ebp-0x14] */
    II(0x100e88ae, 0x3)    mov(memd_a32(ss, ebp - 0x18), eax);    /* mov [ebp-0x18], eax */
//    II(0x100e88b1, 0x3)    mov(eax, memd_a32(ss, ebp - 0x18));    /* mov eax, [ebp-0x18] */
    II(0x100e88b4, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x100e88b6, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x100e88b7, 0x1)    popd(edi);                             /* pop edi */
    II(0x100e88b8, 0x1)    popd(esi);                             /* pop esi */
    II(0x100e88b9, 0x1)    popd(edx);                             /* pop edx */
    II(0x100e88ba, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x100e88bb, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x100e88bc, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x1016c606, func_0x1016c606, 0x20, {0x51, 0x56, 0x83, 0xec, 0xc, 0x89, 0xc6, 0x89, 0xe0, 0x89, 0xe1, 0xe8, 0x76, 0xb3, 0x1, 0, 0x89, 0xf0, 0xe8, 0x6, 0, 0, 0, 0x83, 0xc4, 0xc, 0x5e, 0x59, 0xc3})
void func_0x1016c606()
{
    FUNC_START_V2(0x1016c606, 0x20);
    II(0x1016c606, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x1016c607, 0x1)    pushd(esi);                            /* push esi */
    II(0x1016c608, 0x3)    sub(esp, 0xc);                         /* sub esp, 0xc */
    II(0x1016c60b, 0x2)    mov(esi, eax);                         /* mov esi, eax */
    II(0x1016c60d, 0x2)    mov(eax, esp);                         /* mov eax, esp */
    II(0x1016c60f, 0x2)    mov(ecx, esp);                         /* mov ecx, esp */
    II(0x1016c611, 0x5)    calld(0x1018798c, 0x1b376);            /* call 0x1018798c */    // save registers in stack
    II(0x1016c616, 0x2)    mov(eax, esi);                         /* mov eax, esi */
    II(0x1016c618, 0x5)    calld(0x1016c623, 0x6);                /* call 0x1016c623 */
    II(0x1016c61d, 0x3)    add(esp, 0xc);                         /* add esp, 0xc */
    II(0x1016c620, 0x1)    popd(esi);                             /* pop esi */
    II(0x1016c621, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x1016c622, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x101879ec, func_0x101879ec, 0x20, {0x8d, 0x34, 0x76, 0x2e, 0x8d, 0x86, 0x92, 0x7a, 0x18, 0x10, 0x50, 0x8e, 0x3, 0x66, 0x8b, 0x6b, 0x6, 0x8b, 0x7, 0x8b, 0x5f, 0x4, 0x8b, 0x4f, 0x8, 0x8b, 0x57, 0xc, 0x8b, 0x77, 0x10, 0x8b, 0x7f, 0x14, 0x8e, 0xdd, 0xc3})
void func_0x101879ec()
{
    FUNC_START_V2(0x101879ec, 0x20);
    II(0x101879ec, 0x3)    lea(esi, esi + esi * 0x2);             /* lea esi, [esi+esi*2] */
    II(0x101879ef, 0x7)    lea(eax, esi + 0x10187a92);            /* lea eax, [cs:esi+0x10187a92] */
    II(0x101879f6, 0x1)    pushd(eax);                            /* push eax */
    II(0x101879f7, 0x2)    mov(es, memd_a32(ds, ebx));            /* mov es, [ebx] */
    II(0x101879f9, 0x4)    mov(bp, memw_a32(ds, ebx + 0x6));      /* mov bp, [ebx+0x6] */
    II(0x101879fd, 0x2)    mov(eax, memd_a32(ds, edi));           /* mov eax, [edi] */
    II(0x101879ff, 0x3)    mov(ebx, memd_a32(ds, edi + 0x4));     /* mov ebx, [edi+0x4] */
    II(0x10187a02, 0x3)    mov(ecx, memd_a32(ds, edi + 0x8));     /* mov ecx, [edi+0x8] */
    II(0x10187a05, 0x3)    mov(edx, memd_a32(ds, edi + 0xc));     /* mov edx, [edi+0xc] */
    II(0x10187a08, 0x3)    mov(esi, memd_a32(ds, edi + 0x10));    /* mov esi, [edi+0x10] */
    II(0x10187a0b, 0x3)    mov(edi, memd_a32(ds, edi + 0x14));    /* mov edi, [edi+0x14] */
    II(0x10187a0e, 0x2)    mov(ds, ebp);                          /* mov ds, ebp */
    II(0x10187a10, 0x1)    retd();                                /* ret  */    // goto 0x10187b2b - int 33  and  retd
}

FUNC_INFO_V2(0x10187b25, func_0x10187b25, 0x20, {0xcd, 0x31, 0xc3})
void func_0x10187b25()
{
    FUNC_START_V2(0x10187b25, 0x20);
    II(0x10187b25, 0x2)    int_(0x31);                            /* int 0x31 */        // int 10, vesa call, set_cpu_window
    II(0x10187b27, 0x1)    retd();                                /* ret  */
}

FUNC_INFO_V2(0x10106e86, func_0x10106e86, 0x20, {0x68, 0x20, 0, 0, 0, 0xe8, 0xc2, 0xee, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0xe8, 0x4d, 0x55, 0x6, 0, 0x89, 0x45, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x75, 0xa, 0xb8, 0x2, 0, 0, 0, 0xe8, 0xea, 0x84, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
void func_0x10106e86()
{
    FUNC_START_V2(0x10106e86, 0x20);
    II(0x10106e86, 0x5)    pushd(0x20);                           /* push dword 0x20 */
    II(0x10106e8b, 0x5)    calld(sys_check_available_stack_size, 0x5eec2);            /* call sys_check_available_stack_size */
    II(0x10106e90, 0x1)    pushd(ebx);                            /* push ebx */
    II(0x10106e91, 0x1)    pushd(ecx);                            /* push ecx */
    II(0x10106e92, 0x1)    pushd(edx);                            /* push edx */
    II(0x10106e93, 0x1)    pushd(esi);                            /* push esi */
    II(0x10106e94, 0x1)    pushd(edi);                            /* push edi */
    II(0x10106e95, 0x1)    pushd(ebp);                            /* push ebp */
    II(0x10106e96, 0x2)    mov(ebp, esp);                         /* mov ebp, esp */
    II(0x10106e98, 0x6)    sub(esp, 0x4);                         /* sub esp, 0x4 */
    II(0x10106e9e, 0x5)    calld(0x1016c3f0, 0x6554d);            /* call 0x1016c3f0 */
    II(0x10106ea3, 0x3)    mov(memd_a32(ss, ebp - 0x4), eax);     /* mov [ebp-0x4], eax */
    II(0x10106ea6, 0x4)    cmp(memd_a32(ss, ebp - 0x4), 0);       /* cmp dword [ebp-0x4], 0x0 */
    II(0x10106eaa, 0x2)    jnzd(0x10106eb6, 0xa);                 /* jnz 0x10106eb6 */
    II(0x10106eac, 0x5)    mov(eax, 0x2);                         /* mov eax, 0x2 */        // str id 2.
    II(0x10106eb1, 0x5)    calld(0x100ef3a0, -0x17b16);           /* call 0x100ef3a0 */    // fail with? str id
l_0x10106eb6:
    II(0x10106eb6, 0x2)    mov(esp, ebp);                         /* mov esp, ebp */
    II(0x10106eb8, 0x1)    popd(ebp);                             /* pop ebp */
    II(0x10106eb9, 0x1)    popd(edi);                             /* pop edi */
    II(0x10106eba, 0x1)    popd(esi);                             /* pop esi */
    II(0x10106ebb, 0x1)    popd(edx);                             /* pop edx */
    II(0x10106ebc, 0x1)    popd(ecx);                             /* pop ecx */
    II(0x10106ebd, 0x1)    popd(ebx);                             /* pop ebx */
    II(0x10106ebe, 0x1)    retd();                                /* ret  */
}

} /* namespace raw_program */
