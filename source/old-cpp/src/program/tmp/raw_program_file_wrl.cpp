#include "x86/instructions.hpp"
#include "program/raw_program.hpp"


namespace raw_program {

using namespace x86;
using namespace dos;

/* struct of wrl:
 *
 * 3 bytes
 * s16 1  ?
 * s16 0x70   width?
 * s16 0x70   height?
 * 0x3100 bytes
 * 2 * w * h  bytes
 * s16 0x151
 * (prev s16) * 0xc bytes
 * 0x300 bytes - pallete, 8bit color.   But used only  0xc0 .. 0x1e0?
 */


FUNC_INFO_V3(0x101351c1, 0x30e71d68f56bc69c, 0x20, {0x68, 0, 0x1, 0, 0, 0xe8, 0x87, 0xb, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xd8, 0, 0, 0, 0x88, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x55, 0xfc, 0xb8, 0x45, 0, 0, 0, 0xe8, 0x11, 0x59, 0xf9, 0xff, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0x1a, 0xdc, 0xfc, 0xff, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x10, 0xdc, 0xfc, 0xff, 0xb8, 0x90, 0x81, 0x1c, 0x10, 0xe8, 0x6, 0xdc, 0xfc, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xfc, 0xdb, 0xfc, 0xff, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xf2, 0xdb, 0xfc, 0xff, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0xca, 0xed, 0xfc, 0xff, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0xda, 0xe5, 0xfc, 0xff, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xf3, 0x13, 0xf4, 0xff, 0x83, 0x3d, 0x50, 0x94, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x50, 0x94, 0x1c, 0x10, 0xe8, 0x14, 0xd, 0x3, 0, 0x83, 0x3d, 0x4c, 0x94, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x4c, 0x94, 0x1c, 0x10, 0xe8, 0x1, 0xd, 0x3, 0, 0x83, 0x3d, 0x54, 0x94, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x54, 0x94, 0x1c, 0x10, 0xe8, 0xee, 0xc, 0x3, 0, 0x83, 0x3d, 0x1c, 0x81, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x1c, 0x81, 0x1c, 0x10, 0xe8, 0xdb, 0xc, 0x3, 0, 0xc7, 0x5, 0x50, 0x94, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0x4c, 0x94, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0x54, 0x94, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0x1c, 0x81, 0x1c, 0x10, 0, 0, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x56, 0x7e, 0, 0, 0xe8, 0x7c, 0, 0xfa, 0xff, 0x98, 0x50, 0xe8, 0x99, 0, 0xfa, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x80, 0x2, 0, 0, 0x31, 0xc0, 0xe8, 0x60, 0x35, 0xfb, 0xff, 0x89, 0xc2, 0xb8, 0xbe, 0x6, 0, 0, 0xe8, 0x68, 0x39, 0xfb, 0xff, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x7, 0x75, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0xe8, 0x80, 0xc7, 0xfb, 0xff, 0x31, 0xc0, 0xe8, 0x30, 0x35, 0xfb, 0xff, 0x8b, 0x40, 0x12, 0xe8, 0x6f, 0x21, 0x3, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x5, 0x6e, 0x7, 0, 0, 0x98, 0xe8, 0xc6, 0xee, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x75, 0xa, 0xb8, 0x6, 0, 0, 0, 0xe8, 0x68, 0xa0, 0xfb, 0xff, 0xba, 0x10, 0x8a, 0x1a, 0x10, 0x8b, 0x45, 0xf4, 0xe8, 0xda, 0xa0, 0xfb, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0xe8, 0x71, 0x5d, 0x3, 0, 0x83, 0x7d, 0xf0, 0, 0x75, 0xa, 0xb8, 0x10, 0, 0, 0, 0xe8, 0x40, 0xa0, 0xfb, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x80, 0x4d, 0xe8, 0x1, 0xba, 0x13, 0x8a, 0x1a, 0x10, 0x8d, 0x45, 0xb0, 0xe8, 0x23, 0x14, 0, 0, 0x89, 0x45, 0xac, 0x80, 0x65, 0xe8, 0xfe, 0x8b, 0x4d, 0xf0, 0xbb, 0x5, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xa4, 0xe8, 0xfb, 0xa0, 0xfb, 0xff, 0x83, 0xf8, 0x5, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xfd, 0x9f, 0xfb, 0xff, 0xf, 0xbf, 0x45, 0xa7, 0xc1, 0xe0, 0x2, 0x89, 0x45, 0xa0, 0x8b, 0x4d, 0xf0, 0x8b, 0x5d, 0xa0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xcc, 0xa0, 0xfb, 0xff, 0x3b, 0x45, 0xa0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xce, 0x9f, 0xfb, 0xff, 0xc7, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x1, 0, 0, 0, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x48, 0x69, 0xc0, 0, 0x31, 0, 0, 0x89, 0x45, 0xa0, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0x58, 0xa0, 0xfb, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0, 0x31, 0, 0, 0xba, 0x1, 0, 0, 0, 0xa1, 0xe0, 0x70, 0x1c, 0x10, 0xe8, 0x7b, 0xa0, 0xfb, 0xff, 0x3d, 0, 0x31, 0, 0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0x7b, 0x9f, 0xfb, 0xff, 0xbb, 0, 0x31, 0, 0, 0x8b, 0x15, 0xe0, 0x70, 0x1c, 0x10, 0xa1, 0xe8, 0x70, 0x1c, 0x10, 0xe8, 0x11, 0xa, 0x3, 0, 0x8b, 0x45, 0xf0, 0xe8, 0x5, 0xd3, 0x3, 0, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x72, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x70, 0xff, 0xff, 0xff, 0xf, 0xaf, 0xc2, 0x1, 0xc0, 0x89, 0x45, 0xa0, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0xe7, 0x9f, 0xfb, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0x2, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0x9, 0xa0, 0xfb, 0xff, 0x83, 0xf8, 0x2, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xb, 0x9f, 0xfb, 0xff, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0xc, 0x89, 0x45, 0xa0, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0xa3, 0x9f, 0xfb, 0xff, 0xb8, 0, 0x3, 0, 0, 0xe8, 0x54, 0xb, 0x3, 0, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0, 0x3, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0xb5, 0x9f, 0xfb, 0xff, 0x3d, 0, 0x3, 0, 0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xb5, 0x9e, 0xfb, 0xff, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3d, 0xe0, 0x1, 0, 0, 0x7d, 0x2c, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xc1, 0xf8, 0x2, 0x88, 0xc3, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x88, 0x18, 0xeb, 0xba, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0xe8, 0x75, 0x76, 0x3, 0, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0xe8, 0x7b, 0x7d, 0x3, 0, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0x8, 0xa, 0x3, 0, 0x31, 0xdb, 0x8b, 0x95, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0xe8, 0xe9, 0x9e, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xa7, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x29, 0xc2, 0x89, 0xd0, 0x69, 0xc0, 0, 0x31, 0, 0, 0x89, 0x45, 0xa0, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x83, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x66, 0x83, 0xbd, 0x64, 0xff, 0xff, 0xff, 0, 0x74, 0x32, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x94, 0x28, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0x6e, 0xff, 0xff, 0xff, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc2, 0x1, 0xc0, 0x1, 0x45, 0xa0, 0xeb, 0xbd, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0x72, 0x9e, 0xfb, 0xff, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x48, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x66, 0x8b, 0x84, 0x28, 0x70, 0xff, 0xff, 0xff, 0x66, 0xa3, 0x72, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x66, 0x8b, 0x84, 0x28, 0x72, 0xff, 0xff, 0xff, 0x66, 0xa3, 0x74, 0x81, 0x1c, 0x10, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xa0, 0x8b, 0x45, 0xa0, 0x1, 0xc0, 0xe8, 0xcf, 0x9, 0x3, 0, 0xa3, 0x50, 0x94, 0x1c, 0x10, 0x83, 0x3d, 0x50, 0x94, 0x1c, 0x10, 0, 0x75, 0xa, 0xb8, 0x3, 0, 0, 0, 0xe8, 0x47, 0x9d, 0xfb, 0xff, 0xd1, 0x65, 0xa0, 0xc7, 0x85, 0x5c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x8b, 0x45, 0xa0, 0xc1, 0xf8, 0x2, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0xa1, 0x50, 0x94, 0x1c, 0x10, 0x89, 0x85, 0x54, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x3b, 0x45, 0xa0, 0xf, 0x84, 0x7a, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x2b, 0x95, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0xe8, 0xe4, 0x40, 0xf5, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x4d, 0xf0, 0x8b, 0x9d, 0x58, 0xff, 0xff, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x85, 0x54, 0xff, 0xff, 0xff, 0x3, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0xca, 0x9d, 0xfb, 0xff, 0x3b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xc9, 0x9c, 0xfb, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x1, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x6b, 0x95, 0x5c, 0xff, 0xff, 0xff, 0x14, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x7d, 0xa0, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xb0, 0xe8, 0xe8, 0x12, 0, 0, 0xe9, 0x77, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xa0, 0, 0, 0, 0, 0x8b, 0x45, 0xa7, 0x2b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x8d, 0x64, 0xff, 0xff, 0xff, 0x66, 0x83, 0xbd, 0x64, 0xff, 0xff, 0xff, 0xff, 0x74, 0x44, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x1, 0xd0, 0xc1, 0xe0, 0x2, 0x8b, 0x9c, 0x28, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x1, 0xd0, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0x6e, 0xff, 0xff, 0xff, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc3, 0x1, 0xc0, 0x1, 0x45, 0xa0, 0xeb, 0xac, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0xd5, 0x9c, 0xfb, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0x2, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0xb8, 0x6e, 0x94, 0x1c, 0x10, 0xe8, 0xf8, 0x9c, 0xfb, 0xff, 0x83, 0xf8, 0x2, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xfa, 0x9b, 0xfb, 0xff, 0x8d, 0x55, 0xb0, 0x8b, 0x45, 0xf0, 0xe8, 0x1d, 0xf8, 0xff, 0xff, 0x84, 0xc0, 0x75, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xe1, 0x9b, 0xfb, 0xff, 0xc7, 0x45, 0xec, 0x46, 0, 0, 0, 0xb8, 0, 0x3, 0, 0, 0xe8, 0x40, 0x8, 0x3, 0, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0, 0x3, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0xa1, 0x9c, 0xfb, 0xff, 0x3d, 0, 0x3, 0, 0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xa1, 0x9b, 0xfb, 0xff, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3d, 0xe0, 0x1, 0, 0, 0x7d, 0x2c, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xc1, 0xf8, 0x2, 0x88, 0xc3, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x88, 0x18, 0xeb, 0xba, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0xe8, 0x61, 0x73, 0x3, 0, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0xe8, 0x67, 0x7a, 0x3, 0, 0x83, 0x45, 0xec, 0x3, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xb0, 0xe8, 0x74, 0x11, 0, 0, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0xe4, 0x6, 0x3, 0, 0xa1, 0x58, 0xd3, 0x1b, 0x10, 0x89, 0x85, 0x4c, 0xff, 0xff, 0xff, 0xa1, 0x6c, 0x94, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x78, 0x7, 0x3, 0, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xc2, 0xe8, 0x59, 0x7, 0x3, 0, 0xa3, 0x54, 0x94, 0x1c, 0x10, 0x8b, 0x4d, 0xf0, 0x8b, 0x1d, 0x6c, 0x94, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0xba, 0x1, 0, 0, 0, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0xb7, 0x9b, 0xfb, 0xff, 0x8b, 0x15, 0x6c, 0x94, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x39, 0xd0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xb1, 0x9a, 0xfb, 0xff, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x6e, 0x94, 0x1c, 0x10, 0x7d, 0x2c, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0x3, 0x95, 0x50, 0xff, 0xff, 0xff, 0x8a, 0x84, 0x28, 0x4c, 0xff, 0xff, 0xff, 0x88, 0x2, 0xeb, 0xb9, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0x39, 0xc2, 0x7d, 0x2f, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x8b, 0x15, 0x50, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0, 0x3, 0x85, 0x50, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x9d, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x54, 0x94, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0, 0x88, 0x2, 0xeb, 0xa6, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0xb1, 0x5, 0x3, 0, 0x8b, 0x45, 0xf0, 0xe8, 0xae, 0xc6, 0x3, 0, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc2, 0x1, 0xc0, 0xe8, 0x3a, 0x6, 0x3, 0, 0xa3, 0x1c, 0x81, 0x1c, 0x10, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0x39, 0xc2, 0x7d, 0x19, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0x1c, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0xc7, 0, 0, 0, 0xeb, 0xbc, 0x83, 0x45, 0xec, 0x3, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xb0, 0xe8, 0xae, 0xf, 0, 0, 0x8b, 0xd, 0xb4, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0xc1, 0xf2, 0xff, 0xff, 0x8b, 0xd, 0xb8, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0xba, 0x3f, 0, 0, 0, 0x31, 0xc0, 0xe8, 0xad, 0xf2, 0xff, 0xff, 0x8b, 0xd, 0xbc, 0x70, 0x1c, 0x10, 0xbb, 0x3f, 0, 0, 0, 0x31, 0xd2, 0x31, 0xc0, 0xe8, 0x99, 0xf2, 0xff, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x5, 0x6e, 0x7, 0, 0, 0x89, 0x85, 0x48, 0xff, 0xff, 0xff, 0xe9, 0x21, 0x1, 0, 0})
{
    FUNC_START_V2(0x101351c1, 0x20);
    II(0x101351c1, 0x5)     pushd(0x100);                       /* push dword 0x100 */
    II(0x101351c6, 0x5)     calld(sys_check_available_stack_size, 0x30b87); /* call 0x10165d52 */
    II(0x101351cb, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x101351cc, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x101351cd, 0x1)     pushd(edx);                         /* push edx */
    II(0x101351ce, 0x1)     pushd(esi);                         /* push esi */
    II(0x101351cf, 0x1)     pushd(edi);                         /* push edi */
    II(0x101351d0, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x101351d1, 0x2)     mov(ebp, esp);                      /* mov ebp, esp */
    II(0x101351d3, 0x6)     sub(esp, 0xd8);                     /* sub esp, 0xd8 */
    II(0x101351d9, 0x3)     mov(memb_a32(ss, ebp - 0x4), al);   /* mov [ebp-0x4], al */
    II(0x101351dc, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x101351de, 0x3)     mov(dl, memb_a32(ss, ebp - 0x4));   /* mov dl, [ebp-0x4] */
    II(0x101351e1, 0x5)     mov(eax, 0x45);                     /* mov eax, 0x45 */
    II(0x101351e6, 0x5)     calld(0x100caafc, -0x6a6ef);        /* call 0x100caafc */
    II(0x101351eb, 0x5)     mov(eax, 0x101c8178);               /* mov eax, 0x101c8178 */
    II(0x101351f0, 0x5)     calld(0x10102e0f, -0x323e6);        /* call 0x10102e0f */
    II(0x101351f5, 0x5)     mov(eax, 0x101c8184);               /* mov eax, 0x101c8184 */
    II(0x101351fa, 0x5)     calld(0x10102e0f, -0x323f0);        /* call 0x10102e0f */
    II(0x101351ff, 0x5)     mov(eax, 0x101c8190);               /* mov eax, 0x101c8190 */
    II(0x10135204, 0x5)     calld(0x10102e0f, -0x323fa);        /* call 0x10102e0f */
    II(0x10135209, 0x5)     mov(eax, 0x101c819c);               /* mov eax, 0x101c819c */
    II(0x1013520e, 0x5)     calld(0x10102e0f, -0x32404);        /* call 0x10102e0f */
    II(0x10135213, 0x5)     mov(eax, 0x101c81a8);               /* mov eax, 0x101c81a8 */
    II(0x10135218, 0x5)     calld(0x10102e0f, -0x3240e);        /* call 0x10102e0f */
    II(0x1013521d, 0x5)     mov(eax, 0x101c39c0);               /* mov eax, 0x101c39c0 */
    II(0x10135222, 0x5)     calld(0x10103ff1, -0x31236);        /* call 0x10103ff1 */
    II(0x10135227, 0x5)     mov(eax, 0x101c39b8);               /* mov eax, 0x101c39b8 */
    II(0x1013522c, 0x5)     calld(0x1010380b, -0x31a26);        /* call 0x1010380b */
    II(0x10135231, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10135233, 0x5)     mov(eax, 0x101c37bc);               /* mov eax, 0x101c37bc */
    II(0x10135238, 0x5)     calld(0x10076630, -0xbec0d);        /* call 0x10076630 */
    II(0x1013523d, 0x7)     cmp(memd_a32(ds, 0x101c9450), 0);   /* cmp dword [0x101c9450], 0x0 */
    II(0x10135244, 0x2)     jzd(0x10135250, 0xa);               /* jz 0x10135250 */
    II(0x10135246, 0x5)     mov(eax, memd_a32(ds, 0x101c9450)); /* mov eax, [0x101c9450] */
    II(0x1013524b, 0x5)     calld(sys_free_v2, 0x30d14);             /* call 0x10165f64 */
l_0x10135250:
    II(0x10135250, 0x7)     cmp(memd_a32(ds, 0x101c944c), 0);   /* cmp dword [0x101c944c], 0x0 */
    II(0x10135257, 0x2)     jzd(0x10135263, 0xa);               /* jz 0x10135263 */
    II(0x10135259, 0x5)     mov(eax, memd_a32(ds, 0x101c944c)); /* mov eax, [0x101c944c] */
    II(0x1013525e, 0x5)     calld(sys_free_v2, 0x30d01);             /* call 0x10165f64 */
l_0x10135263:
    II(0x10135263, 0x7)     cmp(memd_a32(ds, 0x101c9454), 0);   /* cmp dword [0x101c9454], 0x0 */
    II(0x1013526a, 0x2)     jzd(0x10135276, 0xa);               /* jz 0x10135276 */
    II(0x1013526c, 0x5)     mov(eax, memd_a32(ds, 0x101c9454)); /* mov eax, [0x101c9454] */
    II(0x10135271, 0x5)     calld(sys_free_v2, 0x30cee);             /* call 0x10165f64 */
l_0x10135276:
    II(0x10135276, 0x7)     cmp(memd_a32(ds, 0x101c811c), 0);   /* cmp dword [0x101c811c], 0x0 */
    II(0x1013527d, 0x2)     jzd(0x10135289, 0xa);               /* jz 0x10135289 */
    II(0x1013527f, 0x5)     mov(eax, memd_a32(ds, 0x101c811c)); /* mov eax, [0x101c811c] */
    II(0x10135284, 0x5)     calld(sys_free_v2, 0x30cdb);             /* call 0x10165f64 */
l_0x10135289:
    II(0x10135289, 0xa)     mov(memd_a32(ds, 0x101c9450), 0);   /* mov dword [0x101c9450], 0x0 */
    II(0x10135293, 0xa)     mov(memd_a32(ds, 0x101c944c), 0);   /* mov dword [0x101c944c], 0x0 */
    II(0x1013529d, 0xa)     mov(memd_a32(ds, 0x101c9454), 0);   /* mov dword [0x101c9454], 0x0 */
    II(0x101352a7, 0xa)     mov(memd_a32(ds, 0x101c811c), 0);   /* mov dword [0x101c811c], 0x0 */
    II(0x101352b1, 0x5)     mov(eax, 0x101c7278);               /* mov eax, 0x101c7278 */
    II(0x101352b6, 0x5)     calld(0x1013d111, 0x7e56);          /* call 0x1013d111 */
    II(0x101352bb, 0x5)     calld(0x100d533c, -0x5ff84);        /* call 0x100d533c */
    II(0x101352c0, 0x1)     cwde();                             /* cwde  */
    II(0x101352c1, 0x1)     pushd(eax);                         /* push eax */
    II(0x101352c2, 0x5)     calld(0x100d5360, -0x5ff67);        /* call 0x100d5360 */
    II(0x101352c7, 0x1)     cwde();                             /* cwde  */
    II(0x101352c8, 0x1)     pushd(eax);                         /* push eax */
    II(0x101352c9, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x101352cb, 0x1)     pushd(eax);                         /* push eax */
    II(0x101352cc, 0x5)     mov(ecx, 0x1);                      /* mov ecx, 0x1 */
    II(0x101352d1, 0x5)     mov(ebx, 0x280);                    /* mov ebx, 0x280 */
    II(0x101352d6, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x101352d8, 0x5)     calld(0x100e883d, -0x4caa0);        /* call 0x100e883d */
    II(0x101352dd, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x101352df, 0x5)     mov(eax, 0x6be);                    /* mov eax, 0x6be */
    II(0x101352e4, 0x5)     calld(0x100e8c51, -0x4c698);        /* call 0x100e8c51 */
    II(0x101352e9, 0x7)     cmp(memb_a32(ds, 0x101c391e), 0x7); /* cmp byte [0x101c391e], 0x7 */
    II(0x101352f0, 0x2)     jnzd(0x101352f8, 0x6);              /* jnz 0x101352f8 */
    II(0x101352f2, 0x4)     mov(memb_a32(ss, ebp - 0x8), 0x1);  /* mov byte [ebp-0x8], 0x1 */
    II(0x101352f6, 0x2)     jmpd(0x101352fc, 0x4);              /* jmp 0x101352fc */
l_0x101352f8:
    II(0x101352f8, 0x4)     mov(memb_a32(ss, ebp - 0x8), 0);    /* mov byte [ebp-0x8], 0x0 */
l_0x101352fc:
    II(0x101352fc, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x101352fe, 0x3)     mov(al, memb_a32(ss, ebp - 0x8));   /* mov al, [ebp-0x8] */
    II(0x10135301, 0x5)     calld(0x100f1a86, -0x43880);        /* call 0x100f1a86 */
    II(0x10135306, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10135308, 0x5)     calld(0x100e883d, -0x4cad0);        /* call 0x100e883d */
    II(0x1013530d, 0x3)     mov(eax, memd_a32(ds, eax + 0x12)); /* mov eax, [eax+0x12] */
    II(0x10135310, 0x5)     calld(0x10167484, 0x3216f);         /* call 0x10167484 */
    II(0x10135315, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10135317, 0x3)     mov(al, memb_a32(ss, ebp - 0x4));   /* mov al, [ebp-0x4] */
    II(0x1013531a, 0x5)     add(eax, 0x76e);                    /* add eax, 0x76e */
    II(0x1013531f, 0x1)     cwde();                             /* cwde  */
    II(0x10135320, 0x5)     calld(get_res_data_by_id_malloc, -0x113a); /* call 0x101341eb */              // "snow_1.wrl"
    II(0x10135325, 0x3)     mov(memd_a32(ss, ebp - 0xc), eax);  /* mov [ebp-0xc], eax */
    II(0x10135328, 0x4)     cmp(memd_a32(ss, ebp - 0xc), 0);    /* cmp dword [ebp-0xc], 0x0 */
    II(0x1013532c, 0x2)     jnzd(0x10135338, 0xa);              /* jnz 0x10135338 */
       II(0x1013532e, 0x5)     mov(eax, 0x6);                      /* mov eax, 0x6 */
       II(0x10135333, 0x5)     calld(0x100ef3a0, -0x45f98);        /* call 0x100ef3a0 */
l_0x10135338:
    II(0x10135338, 0x5)     mov(edx, 0x101a8a10);               /* mov edx, 0x101a8a10 */ /* "rb" */
    II(0x1013533d, 0x3)     mov(eax, memd_a32(ss, ebp - 0xc));  /* mov eax, [ebp-0xc] */
    II(0x10135340, 0x5)     calld(my_fopen, -0x45f26);           /* call 0x100ef41f */                     // SNOW_1.WRL  Карты планеты?
    II(0x10135345, 0x3)     mov(memd_a32(ss, ebp - 0x10), eax); /* mov [ebp-0x10], eax */                 // memd_a32(ss, ebp - 0x10) - FILE *  of it.
    II(0x10135348, 0x3)     mov(eax, memd_a32(ss, ebp - 0xc));  /* mov eax, [ebp-0xc] */
    II(0x1013534b, 0x5)     calld(sys_free, 0x35d71);              /* call 0x1016b0c1 */
    II(0x10135350, 0x4)     cmp(memd_a32(ss, ebp - 0x10), 0);   /* cmp dword [ebp-0x10], 0x0 */
    II(0x10135354, 0x2)     jnzd(0x10135360, 0xa);              /* jnz 0x10135360 */
       II(0x10135356, 0x5)     mov(eax, 0x10);                     /* mov eax, 0x10 */
       II(0x1013535b, 0x5)     calld(0x100ef3a0, -0x45fc0);        /* call 0x100ef3a0 */
l_0x10135360:
    II(0x10135360, 0x7)     mov(memd_a32(ss, ebp - 0x14), 0);   /* mov dword [ebp-0x14], 0x0 */
    II(0x10135367, 0x4)     or_(memb_a32(ss, ebp - 0x18), 0x1); /* or byte [ebp-0x18], 0x1 */
    II(0x1013536b, 0x5)     mov(edx, 0x101a8a13);               /* mov edx, 0x101a8a13 */ /* "Scanning planet surface..." */
    II(0x10135370, 0x3)     lea(eax, ebp - 0x50);               /* lea eax, [ebp-0x50] */
    II(0x10135373, 0x5)     calld(0x1013679b, 0x1423);          /* call 0x1013679b */                           // constructor ?
    II(0x10135378, 0x3)     mov(memd_a32(ss, ebp - 0x54), eax); /* mov [ebp-0x54], eax */
    II(0x1013537b, 0x4)     and_(memb_a32(ss, ebp - 0x18), -0x2 /* 0xfe */); /* and byte [ebp-0x18], 0xfe */
    II(0x1013537f, 0x3)     mov(ecx, memd_a32(ss, ebp - 0x10)); /* mov ecx, [ebp-0x10] */                       // FILE *
    II(0x10135382, 0x5)     mov(ebx, 0x5);                      /* mov ebx, 0x5 */                              // size
    II(0x10135387, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x1013538c, 0x3)     lea(eax, ebp - 0x5c);               /* lea eax, [ebp-0x5c] */                       // buf
    II(0x1013538f, 0x5)     calld(my_fread, -0x45f05);           /* call 0x100ef48f */                           // first 5 bytes read.
    II(0x10135394, 0x3)     cmp(eax, 0x5);                      /* cmp eax, 0x5 */
    II(0x10135397, 0x2)     jzd(0x101353a3, 0xa);               /* jz 0x101353a3 */
       II(0x10135399, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x1013539e, 0x5)     calld(0x100ef3a0, -0x46003);        /* call 0x100ef3a0 */
l_0x101353a3:
    II(0x101353a3, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x59)); /* movsx eax, word [ebp-0x59] */               // eax <- offset +3, word signed.
    II(0x101353a7, 0x3)     shl(eax, 0x2);                      /* shl eax, 0x2 */
    II(0x101353aa, 0x3)     mov(memd_a32(ss, ebp - 0x60), eax); /* mov [ebp-0x60], eax */
    II(0x101353ad, 0x3)     mov(ecx, memd_a32(ss, ebp - 0x10)); /* mov ecx, [ebp-0x10] */
    II(0x101353b0, 0x3)     mov(ebx, memd_a32(ss, ebp - 0x60)); /* mov ebx, [ebp-0x60] */
    II(0x101353b3, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x101353b8, 0x6)     lea(eax, ebp - 0x90);               /* lea eax, [ebp+0xffffff70] */
    II(0x101353be, 0x5)     calld(my_fread, -0x45f34);           /* call 0x100ef48f */                            // read 4 byte in my case
    II(0x101353c3, 0x3)     cmp(eax, memd_a32(ss, ebp - 0x60)); /* cmp eax, [ebp-0x60] */
    II(0x101353c6, 0x2)     jzd(0x101353d2, 0xa);               /* jz 0x101353d2 */
       II(0x101353c8, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x101353cd, 0x5)     calld(0x100ef3a0, -0x46032);        /* call 0x100ef3a0 */
l_0x101353d2:
    II(0x101353d2, 0xa)     mov(memd_a32(ss, ebp - 0x94), 0x1); /* mov dword [ebp+0xffffff6c], 0x1 */
    II(0x101353dc, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x101353e3, 0x1)     dec(eax);                           /* dec eax */
    II(0x101353e4, 0x6)     imul(eax, eax, 0x3100);             /* imul eax, eax, 0x3100 */                      // always 0 ???
    II(0x101353ea, 0x3)     mov(memd_a32(ss, ebp - 0x60), eax); /* mov [ebp-0x60], eax */
    II(0x101353ed, 0x5)     mov(ebx, 0x1);                      /* mov ebx, 0x1 */                               // SEEK_CUR
    II(0x101353f2, 0x3)     mov(edx, memd_a32(ss, ebp - 0x60)); /* mov edx, [ebp-0x60] */
    II(0x101353f5, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x101353f8, 0x5)     calld(my_fseek, -0x45fa8);            /* call 0x100ef455 */                            // seek to +0.
    II(0x101353fd, 0x3)     mov(ecx, memd_a32(ss, ebp - 0x10)); /* mov ecx, [ebp-0x10] */
    II(0x10135400, 0x5)     mov(ebx, 0x3100);                   /* mov ebx, 0x3100 */
    II(0x10135405, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x1013540a, 0x5)     mov(eax, memd_a32(ds, 0x101c70e0)); /* mov eax, [0x101c70e0] */
    II(0x1013540f, 0x5)     calld(my_fread, -0x45f85);           /* call 0x100ef48f */
    II(0x10135414, 0x5)     cmp(eax, 0x3100);                   /* cmp eax, 0x3100 */
    II(0x10135419, 0x2)     jzd(0x10135425, 0xa);               /* jz 0x10135425 */
       II(0x1013541b, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x10135420, 0x5)     calld(0x100ef3a0, -0x46085);        /* call 0x100ef3a0 */
l_0x10135425:
    II(0x10135425, 0x5)     mov(ebx, 0x3100);                   /* mov ebx, 0x3100 */                        // size
    II(0x1013542a, 0x6)     mov(edx, memd_a32(ds, 0x101c70e0)); /* mov edx, [0x101c70e0] */                  // src
    II(0x10135430, 0x5)     mov(eax, memd_a32(ds, 0x101c70e8)); /* mov eax, [0x101c70e8] */                  // dst
    II(0x10135435, 0x5)     calld(sys_memcpy, 0x30a11);            /* call 0x10165e4b */
    II(0x1013543a, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x1013543d, 0x5)     calld(0x10172747, 0x3d305);         /* call 0x10172747 */                        // get position in FILE *   0x3109
    II(0x10135442, 0x6)     mov(memd_a32(ss, ebp - 0x98), eax); /* mov [ebp+0xffffff68], eax */
    II(0x10135448, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x8e)); /* movsx eax, word [ebp+0xffffff72] */     // width?   0x70
    II(0x1013544f, 0x7)     movsx(edx, memw_a32(ss, ebp - 0x90)); /* movsx edx, word [ebp+0xffffff70] */     // height?  0x70
    II(0x10135456, 0x3)     imul(eax, edx);                     /* imul eax, edx */
    II(0x10135459, 0x2)     add(eax, eax);                      /* add eax, eax */
    II(0x1013545b, 0x3)     mov(memd_a32(ss, ebp - 0x60), eax); /* mov [ebp-0x60], eax */                    // 2 * w * h
    II(0x1013545e, 0x5)     mov(ebx, 0x1);                      /* mov ebx, 0x1 */                           // SEEK_CUR
    II(0x10135463, 0x3)     mov(edx, memd_a32(ss, ebp - 0x60)); /* mov edx, [ebp-0x60] */
    II(0x10135466, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x10135469, 0x5)     calld(my_fseek, -0x46019);            /* call 0x100ef455 */                        // return offset in edx - 0x9309
    II(0x1013546e, 0x3)     mov(ecx, memd_a32(ss, ebp - 0x10)); /* mov ecx, [ebp-0x10] */
    II(0x10135471, 0x5)     mov(ebx, 0x2);                      /* mov ebx, 0x2 */
    II(0x10135476, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x1013547b, 0x6)     lea(eax, ebp - 0x9c);               /* lea eax, [ebp+0xffffff64] */
    II(0x10135481, 0x5)     calld(my_fread, -0x45ff7);           /* call 0x100ef48f */                        // offset 0x9309,    read 2 bytes - s16 - 0x151
    II(0x10135486, 0x3)     cmp(eax, 0x2);                      /* cmp eax, 0x2 */
    II(0x10135489, 0x2)     jzd(0x10135495, 0xa);               /* jz 0x10135495 */
       II(0x1013548b, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x10135490, 0x5)     calld(0x100ef3a0, -0x460f5);        /* call 0x100ef3a0 */
l_0x10135495:
    II(0x10135495, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013549c, 0x3)     shl(eax, 0xc);                      /* shl eax, 0xc */
    II(0x1013549f, 0x3)     mov(memd_a32(ss, ebp - 0x60), eax); /* mov [ebp-0x60], eax */
    II(0x101354a2, 0x5)     mov(ebx, 0x1);                      /* mov ebx, 0x1 */                           // SEEK_CUR
    II(0x101354a7, 0x3)     mov(edx, memd_a32(ss, ebp - 0x60)); /* mov edx, [ebp-0x60] */                    // 0x151000
    II(0x101354aa, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x101354ad, 0x5)     calld(my_fseek, -0x4605d);            /* call 0x100ef455 */
    II(0x101354b2, 0x5)     mov(eax, 0x300);                    /* mov eax, 0x300 */
    II(0x101354b7, 0x5)     calld(sys_malloc_v2_ref, 0x30b54);    /* call 0x10166010 */
    II(0x101354bc, 0x6)     mov(memd_a32(ss, ebp - 0xa0), eax); /* mov [ebp+0xffffff60], eax */
    II(0x101354c2, 0x3)     mov(ecx, memd_a32(ss, ebp - 0x10)); /* mov ecx, [ebp-0x10] */
    II(0x101354c5, 0x5)     mov(ebx, 0x300);                    /* mov ebx, 0x300 */
    II(0x101354ca, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x101354cf, 0x6)     mov(eax, memd_a32(ss, ebp - 0xa0)); /* mov eax, [ebp+0xffffff60] */
    II(0x101354d5, 0x5)     calld(my_fread, -0x4604b);           /* call 0x100ef48f */                        // read 0x300.  - pallete 8-bit color
    II(0x101354da, 0x5)     cmp(eax, 0x300);                    /* cmp eax, 0x300 */
    II(0x101354df, 0x2)     jzd(0x101354eb, 0xa);               /* jz 0x101354eb */
       II(0x101354e1, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x101354e6, 0x5)     calld(0x100ef3a0, -0x4614b);        /* call 0x100ef3a0 */
l_0x101354eb:
    II(0x101354eb, 0xa)     mov(memd_a32(ss, ebp - 0x9c), 0xc0); /* mov dword [ebp+0xffffff64], 0xc0 */      // for (s16 i = 0xc0; i < 0x1e0; i++)
    II(0x101354f5, 0x2)     jmpd(0x10135503, 0xc);              /* jmp 0x10135503 */
l_0x101354f7:
    II(0x101354f7, 0x6)     mov(eax, memd_a32(ss, ebp - 0x9c)); /* mov eax, [ebp+0xffffff64] */
    II(0x101354fd, 0x6)     inc(memd_a32(ss, ebp - 0x9c));      /* inc dword [ebp+0xffffff64] */
l_0x10135503:
    II(0x10135503, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013550a, 0x5)     cmp(eax, 0x1e0);                    /* cmp eax, 0x1e0 */
    II(0x1013550f, 0x2)     jged(0x1013553d, 0x2c);             /* jge 0x1013553d */
    II(0x10135511, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135518, 0x6)     add(eax, memd_a32(ss, ebp - 0xa0)); /* add eax, [ebp+0xffffff60] */
    II(0x1013551e, 0x2)     mov(al, memb_a32(ds, eax));         /* mov al, [eax] */
    II(0x10135520, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10135525, 0x3)     sar(eax, 0x2);                      /* sar eax, 0x2 */
    II(0x10135528, 0x2)     mov(bl, al);                        /* mov bl, al */
    II(0x1013552a, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135531, 0x6)     mov(edx, memd_a32(ds, ptr_to_pallete)); /* mov edx, [0x101c9464] */                 // byte arr: unknow[i] = last_readed[i] >> 2; - pallete 6-bit color
    II(0x10135537, 0x2)     add(eax, edx);                      /* add eax, edx */
    II(0x10135539, 0x2)     mov(memb_a32(ds, eax), bl);         /* mov [eax], bl */
    II(0x1013553b, 0x2)     jmpd(0x101354f7, -0x46);            /* jmp 0x101354f7 */                            // } /. for ./
l_0x1013553d:
    II(0x1013553d, 0x5)     mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10135542, 0x5)     calld(sys_applay_pallete, 0x37675);     /* call 0x1016cbbc */
    II(0x10135547, 0x5)     mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x1013554c, 0x5)     calld(0x1016d2cc, 0x37d7b);         /* call 0x1016d2cc */
    II(0x10135551, 0x6)     mov(eax, memd_a32(ss, ebp - 0xa0)); /* mov eax, [ebp+0xffffff60] */
    II(0x10135557, 0x5)     calld(sys_free_v2, 0x30a08);             /* call 0x10165f64 */
    II(0x1013555c, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */                              // SEEK_SET
    II(0x1013555e, 0x6)     mov(edx, memd_a32(ss, ebp - 0x98)); /* mov edx, [ebp+0xffffff68] */                 // 0x3109
    II(0x10135564, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x10135567, 0x5)     calld(my_fseek, -0x46117);            /* call 0x100ef455 */
    II(0x1013556c, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x59)); /* movsx edx, word [ebp-0x59] */              // 0x1
    II(0x10135570, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */        // 0x1
    II(0x10135577, 0x2)     sub(edx, eax);                      /* sub edx, eax */
    II(0x10135579, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x1013557b, 0x6)     imul(eax, eax, 0x3100);             /* imul eax, eax, 0x3100 */
    II(0x10135581, 0x3)     mov(memd_a32(ss, ebp - 0x60), eax); /* mov [ebp-0x60], eax */
    II(0x10135584, 0x6)     mov(eax, memd_a32(ss, ebp - 0x94)); /* mov eax, [ebp+0xffffff6c] */
    II(0x1013558a, 0x6)     mov(memd_a32(ss, ebp - 0x9c), eax); /* mov [ebp+0xffffff64], eax */
l_0x10135590:
    II(0x10135590, 0x7)     add(memd_a32(ss, ebp - 0x9c), -0x1 /* 0xff */); /* add dword [ebp+0xffffff64], 0xff */
    II(0x10135597, 0x8)     cmp(memw_a32(ss, ebp - 0x9c), 0);   /* cmp word [ebp+0xffffff64], 0x0 */
    II(0x1013559f, 0x2)     jzd(0x101355d3, 0x32);              /* jz 0x101355d3 */
    II(0x101355a1, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x101355a8, 0x3)     shl(eax, 0x2);                      /* shl eax, 0x2 */
    II(0x101355ab, 0x7)     mov(edx, memd_a32(ds, eax + ebp - 0x90)); /* mov edx, [eax+ebp+0xffffff70] */
    II(0x101355b2, 0x3)     sar(edx, 0x10);                     /* sar edx, 0x10 */
    II(0x101355b5, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x101355bc, 0x3)     shl(eax, 0x2);                      /* shl eax, 0x2 */
    II(0x101355bf, 0x7)     mov(eax, memd_a32(ds, eax + ebp - 0x92)); /* mov eax, [eax+ebp+0xffffff6e] */
    II(0x101355c6, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x101355c9, 0x3)     imul(eax, edx);                     /* imul eax, edx */
    II(0x101355cc, 0x2)     add(eax, eax);                      /* add eax, eax */
    II(0x101355ce, 0x3)     add(memd_a32(ss, ebp - 0x60), eax); /* add [ebp-0x60], eax */
    II(0x101355d1, 0x2)     jmpd(0x10135590, -0x43);            /* jmp 0x10135590 */
l_0x101355d3:
    II(0x101355d3, 0x5)     mov(ebx, 0x1);                      /* mov ebx, 0x1 */                         // SEEK_CUR
    II(0x101355d8, 0x3)     mov(edx, memd_a32(ss, ebp - 0x60)); /* mov edx, [ebp-0x60] */                  // +0
    II(0x101355db, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x101355de, 0x5)     calld(my_fseek, -0x4618e);            /* call 0x100ef455 */
    II(0x101355e3, 0x6)     mov(eax, memd_a32(ss, ebp - 0x94)); /* mov eax, [ebp+0xffffff6c] */
    II(0x101355e9, 0x1)     dec(eax);                           /* dec eax */
    II(0x101355ea, 0x6)     mov(memd_a32(ss, ebp - 0x9c), eax); /* mov [ebp+0xffffff64], eax */            // 0
    II(0x101355f0, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x101355f7, 0x3)     shl(eax, 0x2);                      /* shl eax, 0x2 */
    II(0x101355fa, 0x8)     mov(ax, memw_a32(ds, eax + ebp - 0x90)); /* mov ax, [eax+ebp+0xffffff70] */
    II(0x10135602, 0x6)     mov(memw_a32(ds, 0x101c8172), ax);  /* mov [0x101c8172], ax */                 // 0
    II(0x10135608, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */   // always 0 ?
    II(0x1013560f, 0x3)     shl(eax, 0x2);                      /* shl eax, 0x2 */
    II(0x10135612, 0x8)     mov(ax, memw_a32(ds, eax + ebp - 0x8e)); /* mov ax, [eax+ebp+0xffffff72] */
    II(0x1013561a, 0x6)     mov(memw_a32(ds, 0x101c8174), ax);  /* mov [0x101c8174], ax */                 // 0x70 - width ?
    II(0x10135620, 0x6)     mov(edx, memd_a32(ds, 0x101c8170)); /* mov edx, [0x101c8170] */                // 0x700000
    II(0x10135626, 0x3)     sar(edx, 0x10);                     /* sar edx, 0x10 */
    II(0x10135629, 0x5)     mov(eax, memd_a32(ds, 0x101c8172)); /* mov eax, [0x101c8172] */                // 0x700070
    II(0x1013562e, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x10135631, 0x3)     imul(edx, eax);                     /* imul edx, eax */
    II(0x10135634, 0x3)     mov(memd_a32(ss, ebp - 0x60), edx); /* mov [ebp-0x60], edx */                  // 0x3100 = 0x70 * 0x70
    II(0x10135637, 0x3)     mov(eax, memd_a32(ss, ebp - 0x60)); /* mov eax, [ebp-0x60] */
    II(0x1013563a, 0x2)     add(eax, eax);                      /* add eax, eax */
    II(0x1013563c, 0x5)     calld(sys_malloc_v2_ref, 0x309cf);    /* call 0x10166010 */
    II(0x10135641, 0x5)     mov(memd_a32(ds, 0x101c9450), eax); /* mov [0x101c9450], eax */
    II(0x10135646, 0x7)     cmp(memd_a32(ds, 0x101c9450), 0);   /* cmp dword [0x101c9450], 0x0 */
    II(0x1013564d, 0x2)     jnzd(0x10135659, 0xa);              /* jnz 0x10135659 */
       II(0x1013564f, 0x5)     mov(eax, 0x3);                      /* mov eax, 0x3 */
       II(0x10135654, 0x5)     calld(0x100ef3a0, -0x462b9);        /* call 0x100ef3a0 */
l_0x10135659:
    II(0x10135659, 0x3)     shl(memd_a32(ss, ebp - 0x60), 0x1); /* shl dword [ebp-0x60], 1 */
    II(0x1013565c, 0xa)     mov(memd_a32(ss, ebp - 0xa4), 0);   /* mov dword [ebp+0xffffff5c], 0x0 */
    II(0x10135666, 0x3)     mov(eax, memd_a32(ss, ebp - 0x60)); /* mov eax, [ebp-0x60] */
    II(0x10135669, 0x3)     sar(eax, 0x2);                      /* sar eax, 0x2 */
    II(0x1013566c, 0x6)     mov(memd_a32(ss, ebp - 0xa8), eax); /* mov [ebp+0xffffff58], eax */
    II(0x10135672, 0x5)     mov(eax, memd_a32(ds, 0x101c9450)); /* mov eax, [0x101c9450] */
    II(0x10135677, 0x6)     mov(memd_a32(ss, ebp - 0xac), eax); /* mov [ebp+0xffffff54], eax */
l_0x1013567d:
    II(0x1013567d, 0x6)     mov(eax, memd_a32(ss, ebp - 0xa4)); /* mov eax, [ebp+0xffffff5c] */
    II(0x10135683, 0x3)     cmp(eax, memd_a32(ss, ebp - 0x60)); /* cmp eax, [ebp-0x60] */
    II(0x10135686, 0x6)     jzd(0x10135706, 0x7a);              /* jz dword 0x10135706 */
    II(0x1013568c, 0x3)     mov(edx, memd_a32(ss, ebp - 0x60)); /* mov edx, [ebp-0x60] */                // 0x6200
    II(0x1013568f, 0x6)     sub(edx, memd_a32(ss, ebp - 0xa4)); /* sub edx, [ebp+0xffffff5c] */          // - 0x0
    II(0x10135695, 0x6)     mov(eax, memd_a32(ss, ebp - 0xa8)); /* mov eax, [ebp+0xffffff58] */          // 0x1880
    II(0x1013569b, 0x5)     calld(my_min, -0xabf1c);               /* call 0x10089784 */
    II(0x101356a0, 0x6)     mov(memd_a32(ss, ebp - 0xa8), eax); /* mov [ebp+0xffffff58], eax */
    II(0x101356a6, 0x3)     mov(ecx, memd_a32(ss, ebp - 0x10)); /* mov ecx, [ebp-0x10] */                // FILE *
    II(0x101356a9, 0x6)     mov(ebx, memd_a32(ss, ebp - 0xa8)); /* mov ebx, [ebp+0xffffff58] */          // size in bytes
    II(0x101356af, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x101356b4, 0x6)     mov(eax, memd_a32(ss, ebp - 0xac)); /* mov eax, [ebp+0xffffff54] */          // eax - ptr - memd_a32(ds, 0x101c9450)
    II(0x101356ba, 0x6)     add(eax, memd_a32(ss, ebp - 0xa4)); /* add eax, [ebp+0xffffff5c] */
    II(0x101356c0, 0x5)     calld(my_fread, -0x46236);           /* call 0x100ef48f */
    II(0x101356c5, 0x6)     cmp(eax, memd_a32(ss, ebp - 0xa8)); /* cmp eax, [ebp+0xffffff58] */
    II(0x101356cb, 0x2)     jzd(0x101356d7, 0xa);               /* jz 0x101356d7 */
       II(0x101356cd, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x101356d2, 0x5)     calld(0x100ef3a0, -0x46337);        /* call 0x100ef3a0 */
l_0x101356d7:
    II(0x101356d7, 0x6)     mov(eax, memd_a32(ss, ebp - 0xa8)); /* mov eax, [ebp+0xffffff58] */
    II(0x101356dd, 0x6)     add(memd_a32(ss, ebp - 0xa4), eax); /* add [ebp+0xffffff5c], eax */
    II(0x101356e3, 0x7)     imul(edx, memd_a32(ss, ebp - 0xa4), 0x14); /* imul edx, [ebp+0xffffff5c], 0x14 */
    II(0x101356ea, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x101356ec, 0x3)     sar(edx, 0x1f);                     /* sar edx, 0x1f */
    II(0x101356ef, 0x3)     idiv(memd_a32(ss, ebp - 0x60));     /* idiv dword [ebp-0x60] */
    II(0x101356f2, 0x3)     mov(memd_a32(ss, ebp - 0x14), eax); /* mov [ebp-0x14], eax */
    II(0x101356f5, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x101356f9, 0x3)     lea(eax, ebp - 0x50);               /* lea eax, [ebp-0x50] */                // ptr to struct ?
    II(0x101356fc, 0x5)     calld(0x101369e9, 0x12e8);          /* call 0x101369e9 */
    II(0x10135701, 0x5)     jmpd(0x1013567d, -0x89);            /* jmp 0x1013567d */
l_0x10135706:
    II(0x10135706, 0x7)     mov(memd_a32(ss, ebp - 0x60), 0);   /* mov dword [ebp-0x60], 0x0 */
    II(0x1013570d, 0x3)     mov(eax, memd_a32(ss, ebp - 0x59)); /* mov eax, [ebp-0x59] */
    II(0x10135710, 0x6)     sub(eax, memd_a32(ss, ebp - 0x94)); /* sub eax, [ebp+0xffffff6c] */
    II(0x10135716, 0x6)     mov(memd_a32(ss, ebp - 0x9c), eax); /* mov [ebp+0xffffff64], eax */
l_0x1013571c:
    II(0x1013571c, 0x6)     dec(memd_a32(ss, ebp - 0x9c));      /* dec dword [ebp+0xffffff64] */
    II(0x10135722, 0x8)     cmp(memw_a32(ss, ebp - 0x9c), -0x1 /* 0xff */); /* cmp word [ebp+0xffffff64], 0xff */
    II(0x1013572a, 0x2)     jzd(0x10135770, 0x44);              /* jz 0x10135770 */
    II(0x1013572c, 0x7)     movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135733, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x1013573a, 0x2)     add(eax, edx);                      /* add eax, edx */
    II(0x1013573c, 0x3)     shl(eax, 0x2);                      /* shl eax, 0x2 */
    II(0x1013573f, 0x7)     mov(ebx, memd_a32(ds, eax + ebp - 0x90)); /* mov ebx, [eax+ebp+0xffffff70] */
    II(0x10135746, 0x3)     sar(ebx, 0x10);                     /* sar ebx, 0x10 */
    II(0x10135749, 0x7)     movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135750, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x10135757, 0x2)     add(eax, edx);                      /* add eax, edx */
    II(0x10135759, 0x3)     shl(eax, 0x2);                      /* shl eax, 0x2 */
    II(0x1013575c, 0x7)     mov(eax, memd_a32(ds, eax + ebp - 0x92)); /* mov eax, [eax+ebp+0xffffff6e] */
    II(0x10135763, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x10135766, 0x3)     imul(eax, ebx);                     /* imul eax, ebx */
    II(0x10135769, 0x2)     add(eax, eax);                      /* add eax, eax */
    II(0x1013576b, 0x3)     add(memd_a32(ss, ebp - 0x60), eax); /* add [ebp-0x60], eax */
    II(0x1013576e, 0x2)     jmpd(0x1013571c, -0x54);            /* jmp 0x1013571c */
l_0x10135770:
    II(0x10135770, 0x5)     mov(ebx, 0x1);                      /* mov ebx, 0x1 */
    II(0x10135775, 0x3)     mov(edx, memd_a32(ss, ebp - 0x60)); /* mov edx, [ebp-0x60] */
    II(0x10135778, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x1013577b, 0x5)     calld(my_fseek, -0x4632b);            /* call 0x100ef455 */
    II(0x10135780, 0x3)     mov(ecx, memd_a32(ss, ebp - 0x10)); /* mov ecx, [ebp-0x10] */
    II(0x10135783, 0x5)     mov(ebx, 0x2);                      /* mov ebx, 0x2 */
    II(0x10135788, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x1013578d, 0x5)     mov(eax, 0x101c946e);               /* mov eax, 0x101c946e */
    II(0x10135792, 0x5)     calld(my_fread, -0x46308);           /* call 0x100ef48f */
    II(0x10135797, 0x3)     cmp(eax, 0x2);                      /* cmp eax, 0x2 */
    II(0x1013579a, 0x2)     jzd(0x101357a6, 0xa);               /* jz 0x101357a6 */
       II(0x1013579c, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x101357a1, 0x5)     calld(0x100ef3a0, -0x46406);        /* call 0x100ef3a0 */
l_0x101357a6:
    II(0x101357a6, 0x3)     lea(edx, ebp - 0x50);               /* lea edx, [ebp-0x50] */
    II(0x101357a9, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x101357ac, 0x5)     calld(0x10134fce, -0x7e3);          /* call 0x10134fce */
    II(0x101357b1, 0x2)     test(al, al);                       /* test al, al */
    II(0x101357b3, 0x2)     jnzd(0x101357bf, 0xa);              /* jnz 0x101357bf */
       II(0x101357b5, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x101357ba, 0x5)     calld(0x100ef3a0, -0x4641f);        /* call 0x100ef3a0 */
l_0x101357bf:
    II(0x101357bf, 0x7)     mov(memd_a32(ss, ebp - 0x14), 0x46); /* mov dword [ebp-0x14], 0x46 */
    II(0x101357c6, 0x5)     mov(eax, 0x300);                    /* mov eax, 0x300 */
    II(0x101357cb, 0x5)     calld(sys_malloc_v2_ref, 0x30840);    /* call 0x10166010 */
    II(0x101357d0, 0x6)     mov(memd_a32(ss, ebp - 0xb0), eax); /* mov [ebp+0xffffff50], eax */
    II(0x101357d6, 0x3)     mov(ecx, memd_a32(ss, ebp - 0x10)); /* mov ecx, [ebp-0x10] */
    II(0x101357d9, 0x5)     mov(ebx, 0x300);                    /* mov ebx, 0x300 */
    II(0x101357de, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x101357e3, 0x6)     mov(eax, memd_a32(ss, ebp - 0xb0)); /* mov eax, [ebp+0xffffff50] */
    II(0x101357e9, 0x5)     calld(my_fread, -0x4635f);           /* call 0x100ef48f */
    II(0x101357ee, 0x5)     cmp(eax, 0x300);                    /* cmp eax, 0x300 */
    II(0x101357f3, 0x2)     jzd(0x101357ff, 0xa);               /* jz 0x101357ff */
       II(0x101357f5, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x101357fa, 0x5)     calld(0x100ef3a0, -0x4645f);        /* call 0x100ef3a0 */
l_0x101357ff:
    II(0x101357ff, 0xa)     mov(memd_a32(ss, ebp - 0x9c), 0xc0); /* mov dword [ebp+0xffffff64], 0xc0 */
    II(0x10135809, 0x2)     jmpd(0x10135817, 0xc);              /* jmp 0x10135817 */
l_0x1013580b:
    II(0x1013580b, 0x6)     mov(eax, memd_a32(ss, ebp - 0x9c)); /* mov eax, [ebp+0xffffff64] */
    II(0x10135811, 0x6)     inc(memd_a32(ss, ebp - 0x9c));      /* inc dword [ebp+0xffffff64] */
l_0x10135817:
    II(0x10135817, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013581e, 0x5)     cmp(eax, 0x1e0);                    /* cmp eax, 0x1e0 */
    II(0x10135823, 0x2)     jged(0x10135851, 0x2c);             /* jge 0x10135851 */
    II(0x10135825, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013582c, 0x6)     add(eax, memd_a32(ss, ebp - 0xb0)); /* add eax, [ebp+0xffffff50] */
    II(0x10135832, 0x2)     mov(al, memb_a32(ds, eax));         /* mov al, [eax] */
    II(0x10135834, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10135839, 0x3)     sar(eax, 0x2);                      /* sar eax, 0x2 */
    II(0x1013583c, 0x2)     mov(bl, al);                        /* mov bl, al */
    II(0x1013583e, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135845, 0x6)     mov(edx, memd_a32(ds, ptr_to_pallete)); /* mov edx, [0x101c9464] */
    II(0x1013584b, 0x2)     add(eax, edx);                      /* add eax, edx */
    II(0x1013584d, 0x2)     mov(memb_a32(ds, eax), bl);         /* mov [eax], bl */
    II(0x1013584f, 0x2)     jmpd(0x1013580b, -0x46);            /* jmp 0x1013580b */
l_0x10135851:
    II(0x10135851, 0x5)     mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10135856, 0x5)     calld(sys_applay_pallete, 0x37361);     /* call 0x1016cbbc */
    II(0x1013585b, 0x5)     mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10135860, 0x5)     calld(0x1016d2cc, 0x37a67);         /* call 0x1016d2cc */
    II(0x10135865, 0x4)     add(memd_a32(ss, ebp - 0x14), 0x3); /* add dword [ebp-0x14], 0x3 */
    II(0x10135869, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1013586d, 0x3)     lea(eax, ebp - 0x50);               /* lea eax, [ebp-0x50] */
    II(0x10135870, 0x5)     calld(0x101369e9, 0x1174);          /* call 0x101369e9 */
    II(0x10135875, 0x6)     mov(eax, memd_a32(ss, ebp - 0xb0)); /* mov eax, [ebp+0xffffff50] */
    II(0x1013587b, 0x5)     calld(sys_free_v2, 0x306e4);             /* call 0x10165f64 */
    II(0x10135880, 0x5)     mov(eax, memd_a32(ds, 0x101bd358)); /* mov eax, [0x101bd358] */
    II(0x10135885, 0x6)     mov(memd_a32(ss, ebp - 0xb4), eax); /* mov [ebp+0xffffff4c], eax */
    II(0x1013588b, 0x5)     mov(eax, memd_a32(ds, 0x101c946c)); /* mov eax, [0x101c946c] */
    II(0x10135890, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x10135893, 0x5)     calld(sys_malloc_v2_ref, 0x30778);    /* call 0x10166010 */
    II(0x10135898, 0x6)     mov(memd_a32(ss, ebp - 0xb0), eax); /* mov [ebp+0xffffff50], eax */
    II(0x1013589e, 0x5)     mov(eax, memd_a32(ds, 0x101c8170)); /* mov eax, [0x101c8170] */
    II(0x101358a3, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x101358a6, 0x6)     mov(edx, memd_a32(ds, 0x101c8172)); /* mov edx, [0x101c8172] */
    II(0x101358ac, 0x3)     sar(edx, 0x10);                     /* sar edx, 0x10 */
    II(0x101358af, 0x3)     imul(eax, edx);                     /* imul eax, edx */
    II(0x101358b2, 0x5)     calld(sys_malloc_v2_ref, 0x30759);    /* call 0x10166010 */
    II(0x101358b7, 0x5)     mov(memd_a32(ds, 0x101c9454), eax); /* mov [0x101c9454], eax */
    II(0x101358bc, 0x3)     mov(ecx, memd_a32(ss, ebp - 0x10)); /* mov ecx, [ebp-0x10] */
    II(0x101358bf, 0x6)     mov(ebx, memd_a32(ds, 0x101c946c)); /* mov ebx, [0x101c946c] */
    II(0x101358c5, 0x3)     sar(ebx, 0x10);                     /* sar ebx, 0x10 */
    II(0x101358c8, 0x5)     mov(edx, 0x1);                      /* mov edx, 0x1 */
    II(0x101358cd, 0x6)     mov(eax, memd_a32(ss, ebp - 0xb0)); /* mov eax, [ebp+0xffffff50] */
    II(0x101358d3, 0x5)     calld(my_fread, -0x46449);           /* call 0x100ef48f */
    II(0x101358d8, 0x6)     mov(edx, memd_a32(ds, 0x101c946c)); /* mov edx, [0x101c946c] */
    II(0x101358de, 0x3)     sar(edx, 0x10);                     /* sar edx, 0x10 */
    II(0x101358e1, 0x2)     cmp(eax, edx);                      /* cmp eax, edx */
    II(0x101358e3, 0x2)     jzd(0x101358ef, 0xa);               /* jz 0x101358ef */
       II(0x101358e5, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
       II(0x101358ea, 0x5)     calld(0x100ef3a0, -0x4654f);        /* call 0x100ef3a0 */
l_0x101358ef:
    II(0x101358ef, 0xa)     mov(memd_a32(ss, ebp - 0x9c), 0);   /* mov dword [ebp+0xffffff64], 0x0 */
    II(0x101358f9, 0x2)     jmpd(0x10135907, 0xc);              /* jmp 0x10135907 */
l_0x101358fb:
    II(0x101358fb, 0x6)     mov(eax, memd_a32(ss, ebp - 0x9c)); /* mov eax, [ebp+0xffffff64] */
    II(0x10135901, 0x6)     inc(memd_a32(ss, ebp - 0x9c));      /* inc dword [ebp+0xffffff64] */
l_0x10135907:
    II(0x10135907, 0x6)     mov(eax, memd_a32(ss, ebp - 0x9c)); /* mov eax, [ebp+0xffffff64] */
    II(0x1013590d, 0x7)     cmp(ax, memw_a32(ds, 0x101c946e));  /* cmp ax, [0x101c946e] */
    II(0x10135914, 0x2)     jged(0x10135942, 0x2c);             /* jge 0x10135942 */
    II(0x10135916, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013591d, 0x6)     add(eax, memd_a32(ss, ebp - 0xb0)); /* add eax, [ebp+0xffffff50] */
    II(0x10135923, 0x2)     mov(al, memb_a32(ds, eax));         /* mov al, [eax] */
    II(0x10135925, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x1013592a, 0x7)     movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135931, 0x6)     add(edx, memd_a32(ss, ebp - 0xb0)); /* add edx, [ebp+0xffffff50] */
    II(0x10135937, 0x7)     mov(al, memb_a32(ds, eax + ebp - 0xb4)); /* mov al, [eax+ebp+0xffffff4c] */
    II(0x1013593e, 0x2)     mov(memb_a32(ds, edx), al);         /* mov [edx], al */
    II(0x10135940, 0x2)     jmpd(0x101358fb, -0x47);            /* jmp 0x101358fb */
l_0x10135942:
    II(0x10135942, 0xa)     mov(memd_a32(ss, ebp - 0x9c), 0);   /* mov dword [ebp+0xffffff64], 0x0 */
    II(0x1013594c, 0x2)     jmpd(0x1013595a, 0xc);              /* jmp 0x1013595a */
l_0x1013594e:
    II(0x1013594e, 0x6)     mov(eax, memd_a32(ss, ebp - 0x9c)); /* mov eax, [ebp+0xffffff64] */
    II(0x10135954, 0x6)     inc(memd_a32(ss, ebp - 0x9c));      /* inc dword [ebp+0xffffff64] */
l_0x1013595a:
    II(0x1013595a, 0x6)     mov(edx, memd_a32(ds, 0x101c8170)); /* mov edx, [0x101c8170] */
    II(0x10135960, 0x3)     sar(edx, 0x10);                     /* sar edx, 0x10 */
    II(0x10135963, 0x5)     mov(eax, memd_a32(ds, 0x101c8172)); /* mov eax, [0x101c8172] */
    II(0x10135968, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x1013596b, 0x3)     imul(eax, edx);                     /* imul eax, edx */
    II(0x1013596e, 0x7)     movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135975, 0x2)     cmp(edx, eax);                      /* cmp edx, eax */
    II(0x10135977, 0x2)     jged(0x101359a8, 0x2f);             /* jge 0x101359a8 */
    II(0x10135979, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135980, 0x2)     add(eax, eax);                      /* add eax, eax */
    II(0x10135982, 0x6)     mov(edx, memd_a32(ds, 0x101c9450)); /* mov edx, [0x101c9450] */
    II(0x10135988, 0x2)     add(eax, edx);                      /* add eax, edx */
    II(0x1013598a, 0x3)     movsx(eax, memw_a32(ds, eax));      /* movsx eax, word [eax] */
    II(0x1013598d, 0x6)     add(eax, memd_a32(ss, ebp - 0xb0)); /* add eax, [ebp+0xffffff50] */
    II(0x10135993, 0x7)     movsx(ebx, memw_a32(ss, ebp - 0x9c)); /* movsx ebx, word [ebp+0xffffff64] */
    II(0x1013599a, 0x6)     mov(edx, memd_a32(ds, 0x101c9454)); /* mov edx, [0x101c9454] */
    II(0x101359a0, 0x2)     add(edx, ebx);                      /* add edx, ebx */
    II(0x101359a2, 0x2)     mov(al, memb_a32(ds, eax));         /* mov al, [eax] */
    II(0x101359a4, 0x2)     mov(memb_a32(ds, edx), al);         /* mov [edx], al */
    II(0x101359a6, 0x2)     jmpd(0x1013594e, -0x5a);            /* jmp 0x1013594e */
l_0x101359a8:
    II(0x101359a8, 0x6)     mov(eax, memd_a32(ss, ebp - 0xb0)); /* mov eax, [ebp+0xffffff50] */
    II(0x101359ae, 0x5)     calld(sys_free_v2, 0x305b1);             /* call 0x10165f64 */
    II(0x101359b3, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x101359b6, 0x5)     calld(sys_fclose, 0x3c6ae);            /* call 0x10172069 */
    II(0x101359bb, 0x6)     mov(edx, memd_a32(ds, 0x101c8170)); /* mov edx, [0x101c8170] */
    II(0x101359c1, 0x3)     sar(edx, 0x10);                     /* sar edx, 0x10 */
    II(0x101359c4, 0x5)     mov(eax, memd_a32(ds, 0x101c8172)); /* mov eax, [0x101c8172] */
    II(0x101359c9, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x101359cc, 0x3)     imul(eax, edx);                     /* imul eax, edx */
    II(0x101359cf, 0x2)     add(eax, eax);                      /* add eax, eax */
    II(0x101359d1, 0x5)     calld(sys_malloc_v2_ref, 0x3063a);    /* call 0x10166010 */
    II(0x101359d6, 0x5)     mov(memd_a32(ds, 0x101c811c), eax); /* mov [0x101c811c], eax */
    II(0x101359db, 0xa)     mov(memd_a32(ss, ebp - 0x9c), 0);   /* mov dword [ebp+0xffffff64], 0x0 */
    II(0x101359e5, 0x2)     jmpd(0x101359f3, 0xc);              /* jmp 0x101359f3 */
l_0x101359e7:
    II(0x101359e7, 0x6)     mov(eax, memd_a32(ss, ebp - 0x9c)); /* mov eax, [ebp+0xffffff64] */
    II(0x101359ed, 0x6)     inc(memd_a32(ss, ebp - 0x9c));      /* inc dword [ebp+0xffffff64] */
l_0x101359f3:
    II(0x101359f3, 0x6)     mov(edx, memd_a32(ds, 0x101c8170)); /* mov edx, [0x101c8170] */
    II(0x101359f9, 0x3)     sar(edx, 0x10);                     /* sar edx, 0x10 */
    II(0x101359fc, 0x5)     mov(eax, memd_a32(ds, 0x101c8172)); /* mov eax, [0x101c8172] */
    II(0x10135a01, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x10135a04, 0x3)     imul(eax, edx);                     /* imul eax, edx */
    II(0x10135a07, 0x7)     movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135a0e, 0x2)     cmp(edx, eax);                      /* cmp edx, eax */
    II(0x10135a10, 0x2)     jged(0x10135a2b, 0x19);             /* jge 0x10135a2b */
    II(0x10135a12, 0x7)     movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135a19, 0x2)     add(eax, eax);                      /* add eax, eax */
    II(0x10135a1b, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10135a1d, 0x5)     mov(eax, memd_a32(ds, 0x101c811c)); /* mov eax, [0x101c811c] */
    II(0x10135a22, 0x2)     add(eax, edx);                      /* add eax, edx */
    II(0x10135a24, 0x5)     mov(memw_a32(ds, eax), 0);          /* mov word [eax], 0x0 */
    II(0x10135a29, 0x2)     jmpd(0x101359e7, -0x44);            /* jmp 0x101359e7 */
l_0x10135a2b:
    II(0x10135a2b, 0x4)     add(memd_a32(ss, ebp - 0x14), 0x3); /* add dword [ebp-0x14], 0x3 */
    II(0x10135a2f, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10135a33, 0x3)     lea(eax, ebp - 0x50);               /* lea eax, [ebp-0x50] */
    II(0x10135a36, 0x5)     calld(0x101369e9, 0xfae);           /* call 0x101369e9 */
    II(0x10135a3b, 0x6)     mov(ecx, memd_a32(ds, 0x101c70b4)); /* mov ecx, [0x101c70b4] */
    II(0x10135a41, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */
    II(0x10135a43, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10135a45, 0x5)     mov(eax, 0x3f);                     /* mov eax, 0x3f */
    II(0x10135a4a, 0x5)     calld(0x10134d10, -0xd3f);          /* call 0x10134d10 */
    II(0x10135a4f, 0x6)     mov(ecx, memd_a32(ds, 0x101c70b8)); /* mov ecx, [0x101c70b8] */
    II(0x10135a55, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */
    II(0x10135a57, 0x5)     mov(edx, 0x3f);                     /* mov edx, 0x3f */
    II(0x10135a5c, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10135a5e, 0x5)     calld(0x10134d10, -0xd53);          /* call 0x10134d10 */
    II(0x10135a63, 0x6)     mov(ecx, memd_a32(ds, 0x101c70bc)); /* mov ecx, [0x101c70bc] */
    II(0x10135a69, 0x5)     mov(ebx, 0x3f);                     /* mov ebx, 0x3f */
    II(0x10135a6e, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10135a70, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10135a72, 0x5)     calld(0x10134d10, -0xd67);          /* call 0x10134d10 */
    II(0x10135a77, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10135a79, 0x3)     mov(al, memb_a32(ss, ebp - 0x4));   /* mov al, [ebp-0x4] */
    II(0x10135a7c, 0x5)     add(eax, 0x76e);                    /* add eax, 0x76e */
    II(0x10135a81, 0x6)     mov(memd_a32(ss, ebp - 0xb8), eax); /* mov [ebp+0xffffff48], eax */
    II(0x10135a87, 0x5)     jmpd_func(0x10135bad, 0x121);       /* jmp 0x10135bad */
}

FUNC_INFO_V3(0x101369e9, 0x31fca44cec98630f, 0x20, {0x68, 0x40, 0, 0, 0, 0xe8, 0x5f, 0xf3, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xe8, 0x18, 0x5, 0xfa, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xf0, 0xff, 0x52, 0x8, 0x6b, 0x55, 0xfc, 0x70, 0xbb, 0x4b, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0x70, 0x7e, 0x7, 0xc7, 0x45, 0xf4, 0x70, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0x6b, 0xd0, 0x15, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2d, 0x1, 0xd0, 0x83, 0xc0, 0x25, 0x50, 0x6a, 0x70, 0x8b, 0x45, 0xf4, 0x50, 0x6a, 0x70, 0xff, 0x35, 0xe0, 0x70, 0x1c, 0x10, 0xe8, 0x3d, 0x41, 0x3, 0, 0x83, 0xc4, 0x18, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x29, 0xe8, 0x15, 0xa, 0x3, 0, 0xe8, 0xc0, 0x47, 0x3, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x101369e9, 0x20);      // input eax - ptr, edx - s16.
    II(0x101369e9, 0x5)     pushd(0x40);                        /* push dword 0x40 */
    II(0x101369ee, 0x5)     calld(sys_check_available_stack_size, 0x2f35f); /* call 0x10165d52 */
    II(0x101369f3, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x101369f4, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x101369f5, 0x1)     pushd(esi);                         /* push esi */
    II(0x101369f6, 0x1)     pushd(edi);                         /* push edi */
    II(0x101369f7, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x101369f8, 0x2)     mov(ebp, esp);                      /* mov ebp, esp */
    II(0x101369fa, 0x6)     sub(esp, 0x10);                     /* sub esp, 0x10 */
    II(0x10136a00, 0x3)     mov(memd_a32(ss, ebp - 0x8), eax);  /* mov [ebp-0x8], eax */
    II(0x10136a03, 0x3)     mov(memd_a32(ss, ebp - 0x4), edx);  /* mov [ebp-0x4], edx */
    II(0x10136a06, 0x4)     movsx(edx, memw_a32(ss, ebp - 0x4)); /* movsx edx, word [ebp-0x4] */
    II(0x10136a0a, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136a0d, 0x3)     mov(eax, memd_a32(ds, eax + 0x31)); /* mov eax, [eax+0x31] */
    II(0x10136a10, 0x5)     calld(0x100d6f2d, -0x5fae8);        /* call 0x100d6f2d */
    II(0x10136a15, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136a18, 0x3)     mov(eax, memd_a32(ds, eax + 0x31)); /* mov eax, [eax+0x31] */
    II(0x10136a1b, 0x3)     mov(memd_a32(ss, ebp - 0x10), eax); /* mov [ebp-0x10], eax */
    II(0x10136a1e, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x10136a21, 0x3)     mov(edx, memd_a32(ds, eax + 0x27)); /* mov edx, [eax+0x27] */
    II(0x10136a24, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x10136a27, 0x3)     calld_abs(memd_a32(ds, edx + 0x8)); /* call dword near [edx+0x8] */
    II(0x10136a2a, 0x4)     imul(edx, memd_a32(ss, ebp - 0x4), 0x70); /* imul edx, [ebp-0x4], 0x70 */
    II(0x10136a2e, 0x5)     mov(ebx, 0x4b);                     /* mov ebx, 0x4b */
    II(0x10136a33, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x10136a35, 0x3)     sar(edx, 0x1f);                     /* sar edx, 0x1f */
    II(0x10136a38, 0x2)     idiv(ebx);                          /* idiv ebx */
    II(0x10136a3a, 0x3)     mov(memd_a32(ss, ebp - 0xc), eax);  /* mov [ebp-0xc], eax */
    II(0x10136a3d, 0x4)     cmp(memd_a32(ss, ebp - 0xc), 0x70); /* cmp dword [ebp-0xc], 0x70 */
    II(0x10136a41, 0x2)     jled(0x10136a4a, 0x7);              /* jle 0x10136a4a */
    II(0x10136a43, 0x7)     mov(memd_a32(ss, ebp - 0xc), 0x70); /* mov dword [ebp-0xc], 0x70 */
l_0x10136a4a:
    II(0x10136a4a, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136a4d, 0x3)     mov(eax, memd_a32(ds, eax + 0x25)); /* mov eax, [eax+0x25] */
    II(0x10136a50, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x10136a53, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136a54, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136a57, 0x3)     mov(eax, memd_a32(ds, eax + 0x25)); /* mov eax, [eax+0x25] */
    II(0x10136a5a, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x10136a5d, 0x3)     imul(edx, eax, 0x15);               /* imul edx, eax, 0x15 */
    II(0x10136a60, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136a63, 0x3)     mov(eax, memd_a32(ds, eax + 0x2d)); /* mov eax, [eax+0x2d] */
    II(0x10136a66, 0x2)     add(eax, edx);                      /* add eax, edx */
    II(0x10136a68, 0x3)     add(eax, 0x25);                     /* add eax, 0x25 */
    II(0x10136a6b, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136a6c, 0x2)     pushd(0x70);                        /* push 0x70 */
    II(0x10136a6e, 0x3)     mov(eax, memd_a32(ss, ebp - 0xc));  /* mov eax, [ebp-0xc] */
    II(0x10136a71, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136a72, 0x2)     pushd(0x70);                        /* push 0x70 */
    II(0x10136a74, 0x6)     pushd(memd_a32(ds, 0x101c70e0));    /* push dword [0x101c70e0] */
    II(0x10136a7a, 0x5)     calld(0x1016abbc, 0x3413d);         /* call 0x1016abbc */
    II(0x10136a7f, 0x3)     add(esp, 0x18);                     /* add esp, 0x18 */
    II(0x10136a82, 0x3)     mov(edx, memd_a32(ss, ebp - 0x8));  /* mov edx, [ebp-0x8] */
    II(0x10136a85, 0x3)     add(edx, 0x17);                     /* add edx, 0x17 */
    II(0x10136a88, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136a8b, 0x3)     mov(eax, memd_a32(ds, eax + 0x29)); /* mov eax, [eax+0x29] */
    II(0x10136a8e, 0x5)     calld(0x101674a8, 0x30a15);         /* call 0x101674a8 */
    II(0x10136a93, 0x5)     calld(0x1016b258, 0x347c0);         /* call 0x1016b258 */
    II(0x10136a98, 0x2)     mov(esp, ebp);                      /* mov esp, ebp */
    II(0x10136a9a, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x10136a9b, 0x1)     popd(edi);                          /* pop edi */
    II(0x10136a9c, 0x1)     popd(esi);                          /* pop esi */
    II(0x10136a9d, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10136a9e, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10136a9f, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x1013679b, 0x347ca244120befc6, 0x20, {0x68, 0x7c, 0, 0, 0, 0xe8, 0xad, 0xf5, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xbb, 0x26, 0, 0, 0, 0xba, 0xe5, 0x6, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xd9, 0, 0xfa, 0xff, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x13, 0x7c, 0x6e, 0x1b, 0x10, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x65, 0x3a, 0x3, 0, 0xe8, 0x38, 0xf9, 0xf9, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xe7, 0x2, 0xfa, 0xff, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0xe8, 0xb, 0x2, 0xfa, 0xff, 0xba, 0x78, 0x36, 0x1c, 0x10, 0x8d, 0x45, 0xf4, 0xe8, 0x65, 0xe5, 0xf9, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1e, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x25, 0xc1, 0xf8, 0x10, 0x50, 0xb9, 0x8c, 0, 0, 0, 0x31, 0xdb, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x58, 0x43, 0xfb, 0xff, 0xb8, 0x2f, 0, 0, 0, 0xe8, 0xb1, 0xf5, 0x2, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x5c, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0x6a, 0, 0x6a, 0, 0x6a, 0, 0xb8, 0x1e, 0x2, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xc7, 0x48, 0xf5, 0xff, 0x89, 0xc6, 0xb8, 0xc0, 0, 0, 0, 0x50, 0xb9, 0xab, 0, 0, 0, 0xbb, 0xaf, 0, 0, 0, 0xba, 0xe, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xa8, 0x48, 0xf5, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xe4, 0x89, 0xf1, 0xe8, 0x57, 0xe, 0xfa, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xf0, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x31, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x4, 0xba, 0x64, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xe8, 0x9d, 0x6, 0xfa, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xe8, 0x32, 0x6, 0xfa, 0xff, 0xba, 0x24, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xe8, 0xd1, 0xa1, 0xfa, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xec, 0xff, 0x52, 0x8, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x29, 0xe8, 0x77, 0xb, 0x3, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x1013679b, 0x20);      // input eax - ptr,  edx - char *.
    II(0x1013679b, 0x5)     pushd(0x7c);                        /* push dword 0x7c */
    II(0x101367a0, 0x5)     calld(sys_check_available_stack_size, 0x2f5ad); /* call 0x10165d52 */
    II(0x101367a5, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x101367a6, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x101367a7, 0x1)     pushd(esi);                         /* push esi */
    II(0x101367a8, 0x1)     pushd(edi);                         /* push edi */
    II(0x101367a9, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x101367aa, 0x2)     mov(ebp, esp);                      /* mov ebp, esp */
    II(0x101367ac, 0x6)     sub(esp, 0x4c);                     /* sub esp, 0x4c */
    II(0x101367b2, 0x3)     mov(memd_a32(ss, ebp - 0x8), eax);  /* mov [ebp-0x8], eax */
    II(0x101367b5, 0x3)     mov(memd_a32(ss, ebp - 0x4), edx);  /* mov [ebp-0x4], edx */
    II(0x101367b8, 0x5)     mov(ebx, 0x26);                     /* mov ebx, 0x26 */
    II(0x101367bd, 0x5)     mov(edx, 0x6e5);                    /* mov edx, 0x6e5 */
    II(0x101367c2, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x101367c5, 0x5)     calld(0x100d68a3, -0x5ff27);        /* call 0x100d68a3 */
    II(0x101367ca, 0x3)     mov(memd_a32(ss, ebp - 0x8), eax);  /* mov [ebp-0x8], eax */
    II(0x101367cd, 0x3)     lea(eax, ebp - 0x8);                /* lea eax, [ebp-0x8] */
    II(0x101367d0, 0x3)     mov(memd_a32(ss, ebp - 0x28), eax); /* mov [ebp-0x28], eax */
    II(0x101367d3, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x101367d6, 0x7)     mov(memd_a32(ds, eax + 0x13), 0x101b6e7c); /* mov dword [eax+0x13], 0x101b6e7c */
    II(0x101367dd, 0x5)     mov(eax, 0x5);                      /* mov eax, 0x5 */
    II(0x101367e2, 0x5)     calld(0x1016a24c, 0x33a65);         /* call 0x1016a24c */
    II(0x101367e7, 0x5)     calld(0x100d6124, -0x606c8);        /* call 0x100d6124 */
    II(0x101367ec, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x101367ee, 0x2)     mov(dl, al);                        /* mov dl, al */
    II(0x101367f0, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x101367f3, 0x5)     calld(0x100d6adf, -0x5fd19);        /* call 0x100d6adf */
    II(0x101367f8, 0x3)     mov(edx, memd_a32(ss, ebp - 0x8));  /* mov edx, [ebp-0x8] */
    II(0x101367fb, 0x3)     add(edx, 0x17);                     /* add edx, 0x17 */
    II(0x101367fe, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136801, 0x5)     calld(0x100d6a11, -0x5fdf5);        /* call 0x100d6a11 */
    II(0x10136806, 0x5)     mov(edx, 0x101c3678);               /* mov edx, 0x101c3678 */
    II(0x1013680b, 0x3)     lea(eax, ebp - 0xc);                /* lea eax, [ebp-0xc] */
    II(0x1013680e, 0x5)     calld(0x100d4d78, -0x61a9b);        /* call 0x100d4d78 */
    II(0x10136813, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136814, 0x5)     mov(eax, 0x1);                      /* mov eax, 0x1 */
    II(0x10136819, 0x1)     pushd(eax);                         /* push eax */
    II(0x1013681a, 0x5)     mov(eax, 0x1);                      /* mov eax, 0x1 */
    II(0x1013681f, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136820, 0x5)     mov(eax, 0x1e);                     /* mov eax, 0x1e */
    II(0x10136825, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136826, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136829, 0x3)     mov(eax, memd_a32(ds, eax + 0x25)); /* mov eax, [eax+0x25] */
    II(0x1013682c, 0x3)     sar(eax, 0x10);                     /* sar eax, 0x10 */
    II(0x1013682f, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136830, 0x5)     mov(ecx, 0x8c);                     /* mov ecx, 0x8c */
    II(0x10136835, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */
    II(0x10136837, 0x3)     mov(edx, memd_a32(ss, ebp - 0x4));  /* mov edx, [ebp-0x4] */
    II(0x1013683a, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x1013683d, 0x3)     add(eax, 0x17);                     /* add eax, 0x17 */
    II(0x10136840, 0x5)     calld(0x100eab9d, -0x4bca8);        /* call 0x100eab9d */
    II(0x10136845, 0x5)     mov(eax, 0x2f);                     /* mov eax, 0x2f */
    II(0x1013684a, 0x5)     calld(sys_malloc_v2, 0x2f5b1);        /* call 0x10165e00 */
    II(0x1013684f, 0x3)     mov(memd_a32(ss, ebp - 0x1c), eax); /* mov [ebp-0x1c], eax */
    II(0x10136852, 0x3)     mov(eax, memd_a32(ss, ebp - 0x1c)); /* mov eax, [ebp-0x1c] */
    II(0x10136855, 0x3)     mov(memd_a32(ss, ebp - 0x20), eax); /* mov [ebp-0x20], eax */
    II(0x10136858, 0x4)     cmp(memd_a32(ss, ebp - 0x20), 0);   /* cmp dword [ebp-0x20], 0x0 */
    II(0x1013685c, 0x2)     jzd(0x101368ba, 0x5c);              /* jz 0x101368ba */
    II(0x1013685e, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10136860, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136861, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10136863, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136864, 0x2)     pushd(0);                           /* push 0x0 */
    II(0x10136866, 0x2)     pushd(0);                           /* push 0x0 */
    II(0x10136868, 0x2)     pushd(0);                           /* push 0x0 */
    II(0x1013686a, 0x5)     mov(eax, 0x21e);                    /* mov eax, 0x21e */
    II(0x1013686f, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136870, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10136872, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136873, 0x2)     xor_(ecx, ecx);                     /* xor ecx, ecx */
    II(0x10136875, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */
    II(0x10136877, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10136879, 0x3)     lea(eax, ebp - 0x38);               /* lea eax, [ebp-0x38] */
    II(0x1013687c, 0x5)     calld(0x1008b148, -0xab739);        /* call 0x1008b148 */
    II(0x10136881, 0x2)     mov(esi, eax);                      /* mov esi, eax */
    II(0x10136883, 0x5)     mov(eax, 0xc0);                     /* mov eax, 0xc0 */
    II(0x10136888, 0x1)     pushd(eax);                         /* push eax */
    II(0x10136889, 0x5)     mov(ecx, 0xab);                     /* mov ecx, 0xab */
    II(0x1013688e, 0x5)     mov(ebx, 0xaf);                     /* mov ebx, 0xaf */
    II(0x10136893, 0x5)     mov(edx, 0xe);                      /* mov edx, 0xe */
    II(0x10136898, 0x3)     lea(eax, ebp - 0x48);               /* lea eax, [ebp-0x48] */
    II(0x1013689b, 0x5)     calld(0x1008b148, -0xab758);        /* call 0x1008b148 */
    II(0x101368a0, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */
    II(0x101368a2, 0x3)     mov(edx, memd_a32(ss, ebp - 0x8));  /* mov edx, [ebp-0x8] */
    II(0x101368a5, 0x3)     mov(eax, memd_a32(ss, ebp - 0x1c)); /* mov eax, [ebp-0x1c] */
    II(0x101368a8, 0x2)     mov(ecx, esi);                      /* mov ecx, esi */
    II(0x101368aa, 0x5)     calld(0x100d7706, -0x5f1a9);        /* call 0x100d7706 */
    II(0x101368af, 0x3)     mov(memd_a32(ss, ebp - 0x24), eax); /* mov [ebp-0x24], eax */
    II(0x101368b2, 0x3)     mov(eax, memd_a32(ss, ebp - 0x24)); /* mov eax, [ebp-0x24] */
    II(0x101368b5, 0x3)     mov(memd_a32(ss, ebp - 0x10), eax); /* mov [ebp-0x10], eax */
    II(0x101368b8, 0x2)     jmpd(0x101368c0, 0x6);              /* jmp 0x101368c0 */
l_0x101368ba:
    II(0x101368ba, 0x3)     mov(eax, memd_a32(ss, ebp - 0x20)); /* mov eax, [ebp-0x20] */
    II(0x101368bd, 0x3)     mov(memd_a32(ss, ebp - 0x10), eax); /* mov [ebp-0x10], eax */
l_0x101368c0:
    II(0x101368c0, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x101368c3, 0x3)     mov(edx, memd_a32(ss, ebp - 0x8));  /* mov edx, [ebp-0x8] */
    II(0x101368c6, 0x3)     mov(memd_a32(ds, edx + 0x31), eax); /* mov [edx+0x31], eax */
    II(0x101368c9, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x101368cc, 0x3)     mov(eax, memd_a32(ds, eax + 0x31)); /* mov eax, [eax+0x31] */
    II(0x101368cf, 0x3)     mov(memd_a32(ss, ebp - 0x18), eax); /* mov [ebp-0x18], eax */
    II(0x101368d2, 0x3)     mov(eax, memd_a32(ss, ebp - 0x18)); /* mov eax, [ebp-0x18] */
    II(0x101368d5, 0x3)     mov(edx, memd_a32(ds, eax + 0x27)); /* mov edx, [eax+0x27] */
    II(0x101368d8, 0x3)     mov(eax, memd_a32(ss, ebp - 0x18)); /* mov eax, [ebp-0x18] */
    II(0x101368db, 0x3)     calld_abs(memd_a32(ds, edx + 0x4)); /* call dword near [edx+0x4] */
    II(0x101368de, 0x5)     mov(edx, 0x64);                     /* mov edx, 0x64 */
    II(0x101368e3, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x101368e6, 0x3)     mov(eax, memd_a32(ds, eax + 0x31)); /* mov eax, [eax+0x31] */
    II(0x101368e9, 0x5)     calld(0x100d6f8b, -0x5f963);        /* call 0x100d6f8b */
    II(0x101368ee, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x101368f0, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x101368f3, 0x3)     mov(eax, memd_a32(ds, eax + 0x31)); /* mov eax, [eax+0x31] */
    II(0x101368f6, 0x5)     calld(0x100d6f2d, -0x5f9ce);        /* call 0x100d6f2d */
    II(0x101368fb, 0x5)     mov(edx, 0x224);                    /* mov edx, 0x224 */
    II(0x10136900, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136903, 0x3)     mov(eax, memd_a32(ds, eax + 0x31)); /* mov eax, [eax+0x31] */
    II(0x10136906, 0x5)     calld(0x100e0adc, -0x55e2f);        /* call 0x100e0adc */
    II(0x1013690b, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x1013690e, 0x3)     mov(eax, memd_a32(ds, eax + 0x31)); /* mov eax, [eax+0x31] */
    II(0x10136911, 0x3)     mov(memd_a32(ss, ebp - 0x14), eax); /* mov [ebp-0x14], eax */
    II(0x10136914, 0x3)     mov(eax, memd_a32(ss, ebp - 0x14)); /* mov eax, [ebp-0x14] */
    II(0x10136917, 0x3)     mov(edx, memd_a32(ds, eax + 0x27)); /* mov edx, [eax+0x27] */
    II(0x1013691a, 0x3)     mov(eax, memd_a32(ss, ebp - 0x14)); /* mov eax, [ebp-0x14] */
    II(0x1013691d, 0x3)     calld_abs(memd_a32(ds, edx + 0x8)); /* call dword near [edx+0x8] */
    II(0x10136920, 0x3)     mov(edx, memd_a32(ss, ebp - 0x8));  /* mov edx, [ebp-0x8] */
    II(0x10136923, 0x3)     add(edx, 0x17);                     /* add edx, 0x17 */
    II(0x10136926, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136929, 0x3)     mov(eax, memd_a32(ds, eax + 0x29)); /* mov eax, [eax+0x29] */
    II(0x1013692c, 0x5)     calld(0x101674a8, 0x30b77);         /* call 0x101674a8 */
    II(0x10136931, 0x3)     mov(eax, memd_a32(ss, ebp - 0x8));  /* mov eax, [ebp-0x8] */
    II(0x10136934, 0x3)     mov(memd_a32(ss, ebp - 0x4c), eax); /* mov [ebp-0x4c], eax */
    II(0x10136937, 0x3)     mov(eax, memd_a32(ss, ebp - 0x4c)); /* mov eax, [ebp-0x4c] */
    II(0x1013693a, 0x2)     mov(esp, ebp);                      /* mov esp, ebp */
    II(0x1013693c, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x1013693d, 0x1)     popd(edi);                          /* pop edi */
    II(0x1013693e, 0x1)     popd(esi);                          /* pop esi */
    II(0x1013693f, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10136940, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10136941, 0x1)     retd();                             /* ret  */
}

} /* namespace raw_program */
