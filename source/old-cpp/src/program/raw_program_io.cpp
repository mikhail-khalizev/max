#include "dos/dma.hpp"
#include "x86/instructions.hpp"
#include "program/raw_program.hpp"


namespace raw_program {

using namespace x86;
using namespace dos;


/*
 * memd_a32(ds, 0x101c0a24) - ptr_of_fd_table, 4 bytes per entry
 *
 * {
 *     uint16_t flags;
 *     ??
 * }
 */

/* char * arr_of_str[]; // 0x101b868c
 *
 * [2] 0x101a203e, "\nNo mouse driver found.\n\n"
 *
 *
 * struct FILE
 * {
 *  0x0  : u32 unknown ptr
 *  0x4  : u32 len
 *  0x8  : u32 ptr
 *  0xc  : u8 flags ?
 *  0xd  : u8 flags ?
 *  0x10 : u32 fd
 *
 * }
 *
     * struct
     * {
     *        0x0-0x3: position of write (in ptr). at output set at ptr.
     *        0x4-0x7: len of buf. at output set to 0
     *        0x8-0xb: ptr of buf
     *        0xc-0xd: flag
     *        0x10-0x13: fd
     *        0x14-0x17 - size of buf
     * }
 * */


FUNC_INFO_V3(0x101946fa, 0xbb0a4df7908f5d31, 0x20, {0x53, 0x80, 0xce, 0x40, 0x89, 0xd3, 0x89, 0xc2, 0xa1, 0x24, 0xa, 0x1c, 0x10, 0xc1, 0xe2, 0x2, 0x89, 0x1c, 0x2, 0x5b, 0xc3})
{
    FUNC_START_V2(0x101946fa, 0x20);   // save (edx | 0x40) in fd_table[eax]
    II(0x101946fa, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x101946fb, 0x3)     or_(dh, 0x40);                      /* or dh, 0x40 */
    II(0x101946fe, 0x2)     mov(ebx, edx);                      /* mov ebx, edx */
    II(0x10194700, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10194702, 0x5)     mov(eax, memd_a32(ds, ptr_of_fd_table_)); /* mov eax, [0x101c0a24] */
    II(0x10194707, 0x3)     shl(edx, 0x2);                      /* shl edx, 0x2 */
    II(0x1019470a, 0x3)     mov(memd_a32(ds, edx + eax), ebx);  /* mov [edx+eax], ebx */
    II(0x1019470d, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x1019470e, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x101946a5, 0x254501b1e9bc1dc0, 0x20, {0x53, 0x51, 0x52, 0x89, 0xc2, 0x3b, 0x5, 0xd0, 0x9, 0x1c, 0x10, 0x72, 0x6, 0x31, 0xc0, 0x5a, 0x59, 0x5b, 0xc3, 0x83, 0xf8, 0x5, 0x7f, 0x31, 0x89, 0xc3, 0xa1, 0x24, 0xa, 0x1c, 0x10, 0xc1, 0xe3, 0x2, 0x1, 0xd8, 0x8a, 0x48, 0x1, 0xf6, 0xc1, 0x40, 0x75, 0x1d, 0x88, 0xcd, 0x80, 0xcd, 0x40, 0x88, 0x68, 0x1, 0x89, 0xd0, 0xe8, 0x9e, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x74, 0xa, 0xa1, 0x24, 0xa, 0x1c, 0x10, 0x80, 0x4c, 0x3, 0x1, 0x20, 0xa1, 0x24, 0xa, 0x1c, 0x10, 0x8b, 0x4, 0x90, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x101946a5, 0x20);
    II(0x101946a5, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x101946a6, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x101946a7, 0x1)     pushd(edx);                         /* push edx */
    II(0x101946a8, 0x2)     mov(edx, eax);                      /* mov edx, eax */                  // edx = eax = fd
    II(0x101946aa, 0x6)     cmp(eax, memd_a32(ds, 0x101c09d0)); /* cmp eax, [0x101c09d0] */
    II(0x101946b0, 0x2)     jbd(0x101946b8, 0x6);               /* jb 0x101946b8 */
    II(0x101946b2, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x101946b4, 0x1)     popd(edx);                          /* pop edx */
    II(0x101946b5, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x101946b6, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x101946b7, 0x1)     retd();                             /* ret  */
l_0x101946b8:
    II(0x101946b8, 0x3)     cmp(eax, 0x5);                      /* cmp eax, 0x5 */
    II(0x101946bb, 0x2)     jgd(0x101946ee, 0x31);              /* jg 0x101946ee */
    II(0x101946bd, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */                   // ebx = fd
    II(0x101946bf, 0x5)     mov(eax, memd_a32(ds, ptr_of_fd_table_)); /* mov eax, [0x101c0a24] */
    II(0x101946c4, 0x3)     shl(ebx, 0x2);                      /* shl ebx, 0x2 */                   // ebx = fb * 4
    II(0x101946c7, 0x2)     add(eax, ebx);                      /* add eax, ebx */                   // eax = & ptr_of_fd_table[fd]
    II(0x101946c9, 0x3)     mov(cl, memb_a32(ds, eax + 0x1));   /* mov cl, [eax+0x1] */
    II(0x101946cc, 0x3)     test(cl, 0x40);                     /* test cl, 0x40 */
    II(0x101946cf, 0x2)     jnzd(0x101946ee, 0x1d);             /* jnz 0x101946ee */
    II(0x101946d1, 0x2)     mov(ch, cl);                        /* mov ch, cl */
    II(0x101946d3, 0x3)     or_(ch, 0x40);                      /* or ch, 0x40 */
    II(0x101946d6, 0x3)     mov(memb_a32(ds, eax + 0x1), ch);   /* mov [eax+0x1], ch */
    II(0x101946d9, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x101946db, 0x5)     calld(0x1019467e, -0x62);           /* call 0x1019467e */
    II(0x101946e0, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x101946e2, 0x2)     jzd(0x101946ee, 0xa);               /* jz 0x101946ee */
    II(0x101946e4, 0x5)     mov(eax, memd_a32(ds, ptr_of_fd_table_)); /* mov eax, [0x101c0a24] */
    II(0x101946e9, 0x5)     or_(memb_a32(ds, ebx + eax + 0x1), 0x20); /* or byte [ebx+eax+0x1], 0x20 */
l_0x101946ee:
    II(0x101946ee, 0x5)     mov(eax, memd_a32(ds, ptr_of_fd_table_)); /* mov eax, [0x101c0a24] */
    II(0x101946f3, 0x3)     mov(eax, memd_a32(ds, eax + edx * 0x4)); /* mov eax, [eax+edx*4] */
    II(0x101946f6, 0x1)     popd(edx);                          /* pop edx */
    II(0x101946f7, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x101946f8, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x101946f9, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x1018d72e, 0x3ed53c5e0577ba9d, 0x20, {0x51, 0x56, 0x57, 0x55, 0x83, 0xec, 0x4, 0x89, 0xc6, 0x89, 0xd5, 0x89, 0xdf, 0xe8, 0x65, 0x6f, 0, 0, 0xa8, 0x80, 0x74, 0x2f, 0xb0, 0x2, 0x89, 0xf3, 0x31, 0xd2, 0xb4, 0x42, 0x89, 0xd1, 0xc1, 0xe9, 0x10, 0xcd, 0x21, 0x66, 0xd1, 0xd2, 0x66, 0xd1, 0xca, 0xc1, 0xe2, 0x10, 0x66, 0x89, 0xc2, 0x89, 0x14, 0x24, 0x85, 0xd2, 0x7d, 0xd, 0x31, 0xc0, 0x66, 0x8b, 0x4, 0x24, 0xe8, 0x46, 0x4, 0, 0, 0xeb, 0x27, 0x89, 0xf9, 0x89, 0xea, 0x89, 0xf3, 0xb4, 0x40, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0x89, 0x4, 0x24, 0x89, 0xc2, 0x85, 0xc0, 0x7c, 0xdc, 0x39, 0xf8, 0x74, 0xa, 0xb8, 0xc, 0, 0, 0, 0xe8, 0x27, 0xfc, 0xff, 0xff, 0x89, 0xd0, 0x83, 0xc4, 0x4, 0x5d, 0x5f, 0x5e, 0x59, 0xc3})
{
    FUNC_START_V2(0x1018d72e, 0x20);  // write. eax - fd, ebx - len, edx - ptr
    II(0x1018d72e, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x1018d72f, 0x1)     pushd(esi);                         /* push esi */
    II(0x1018d730, 0x1)     pushd(edi);                         /* push edi */
    II(0x1018d731, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x1018d732, 0x3)     sub(esp, 0x4);                      /* sub esp, 0x4 */
    II(0x1018d735, 0x2)     mov(esi, eax);                      /* mov esi, eax */       // esi = fd
    II(0x1018d737, 0x2)     mov(ebp, edx);                      /* mov ebp, edx */       // ebp = ptr
    II(0x1018d739, 0x2)     mov(edi, ebx);                      /* mov edi, ebx */       // edi = len
    II(0x1018d73b, 0x5)     calld(0x101946a5, 0x6f65);          /* call 0x101946a5 */    // eax = fd_table[fd]
    II(0x1018d740, 0x2)     test(al, 0x80);                     /* test al, 0x80 */
    II(0x1018d742, 0x2)     jzd(0x1018d773, 0x2f);              /* jz 0x1018d773 */
    II(0x1018d744, 0x2)     mov(al, 0x2);                       /* mov al, 0x2 */
    II(0x1018d746, 0x2)     mov(ebx, esi);                      /* mov ebx, esi */
    II(0x1018d748, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x1018d74a, 0x2)     mov(ah, 0x42);                      /* mov ah, 0x42 */
    II(0x1018d74c, 0x2)     mov(ecx, edx);                      /* mov ecx, edx */
    II(0x1018d74e, 0x3)     shr(ecx, 0x10);                     /* shr ecx, 0x10 */
    II(0x1018d751, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1018d753, 0x3)     rcl(dx, 0x1);                       /* rcl dx, 1 */
    II(0x1018d756, 0x3)     ror(dx, 0x1);                       /* ror dx, 1 */
    II(0x1018d759, 0x3)     shl(edx, 0x10);                     /* shl edx, 0x10 */
    II(0x1018d75c, 0x3)     mov(dx, ax);                        /* mov dx, ax */
    II(0x1018d75f, 0x3)     mov(memd_a32(ss, esp), edx);        /* mov [esp], edx */
    II(0x1018d762, 0x2)     test(edx, edx);                     /* test edx, edx */
    II(0x1018d764, 0x2)     jged(0x1018d773, 0xd);              /* jge 0x1018d773 */
l_0x1018d766:
    II(0x1018d766, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x1018d768, 0x4)     mov(ax, memw_a32(ss, esp));         /* mov ax, [esp] */
    II(0x1018d76c, 0x5)     calld(0x1018dbb7, 0x446);           /* call 0x1018dbb7 */
    II(0x1018d771, 0x2)     jmpd(0x1018d79a, 0x27);             /* jmp 0x1018d79a */
l_0x1018d773:
    II(0x1018d773, 0x2)     mov(ecx, edi);                      /* mov ecx, edi */       // len
    II(0x1018d775, 0x2)     mov(edx, ebp);                      /* mov edx, ebp */       // ptr
    II(0x1018d777, 0x2)     mov(ebx, esi);                      /* mov ebx, esi */       // fd
    II(0x1018d779, 0x2)     mov(ah, 0x40);                      /* mov ah, 0x40 */       // syscall write
    II(0x1018d77b, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1018d77d, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1018d77f, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1018d781, 0x3)     mov(memd_a32(ss, esp), eax);        /* mov [esp], eax */
    II(0x1018d784, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x1018d786, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1018d788, 0x2)     jld(0x1018d766, -0x24);             /* jl 0x1018d766 */
    II(0x1018d78a, 0x2)     cmp(eax, edi);                      /* cmp eax, edi */
    II(0x1018d78c, 0x2)     jzd(0x1018d798, 0xa);               /* jz 0x1018d798 */
    II(0x1018d78e, 0x5)     mov(eax, 0xc);                      /* mov eax, 0xc */
    II(0x1018d793, 0x5)     calld(0x1018d3bf, -0x3d9);          /* call 0x1018d3bf */
l_0x1018d798:
    II(0x1018d798, 0x2)     mov(eax, edx);                      /* mov eax, edx */
l_0x1018d79a:
    II(0x1018d79a, 0x3)     add(esp, 0x4);                      /* add esp, 0x4 */
    II(0x1018d79d, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x1018d79e, 0x1)     popd(edi);                          /* pop edi */
    II(0x1018d79f, 0x1)     popd(esi);                          /* pop esi */
    II(0x1018d7a0, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1018d7a1, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x1018d5d9, 0x5eebc107afc88b8e, 0x20, {0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xc1, 0x8a, 0x60, 0xd, 0x31, 0xed, 0xf6, 0xc4, 0x10, 0xf, 0x84, 0x76, 0, 0, 0, 0x8a, 0x79, 0xd, 0x80, 0xe7, 0xef, 0x8a, 0x41, 0xc, 0x88, 0x79, 0xd, 0xa8, 0x2, 0xf, 0x84, 0x9a, 0, 0, 0, 0x8b, 0x59, 0x8, 0x85, 0xdb, 0xf, 0x84, 0x8f, 0, 0, 0, 0x89, 0xdf, 0x8b, 0x71, 0x4, 0x85, 0xf6, 0xf, 0x84, 0x82, 0, 0, 0, 0x85, 0xed, 0xf, 0x85, 0x7a, 0, 0, 0, 0x89, 0xf3, 0x89, 0xfa, 0x8b, 0x41, 0x10, 0xe8, 0xff, 0, 0, 0, 0x89, 0xc2, 0x83, 0xf8, 0xff, 0x75, 0xd, 0x8a, 0x59, 0xc, 0x80, 0xcb, 0x20, 0x89, 0xc5, 0x88, 0x59, 0xc, 0xeb, 0x1c, 0x85, 0xc0, 0x75, 0x18, 0xb8, 0xc, 0, 0, 0, 0xe8, 0x6e, 0xfd, 0xff, 0xff, 0x8a, 0x61, 0xc, 0x80, 0xcc, 0x20, 0xbd, 0xff, 0xff, 0xff, 0xff, 0x88, 0x61, 0xc, 0x1, 0xd7, 0x29, 0xd6, 0xeb, 0xae, 0x83, 0x79, 0x8, 0, 0x74, 0x32, 0x80, 0x61, 0xc, 0xef, 0xf6, 0x41, 0xd, 0x20, 0x75, 0x28, 0x8b, 0x41, 0x4, 0x85, 0xc0, 0x74, 0x11, 0x89, 0xc2, 0xbb, 0x1, 0, 0, 0, 0xf7, 0xda, 0x8b, 0x41, 0x10, 0xe8, 0xa, 0xfb, 0xfe, 0xff, 0x83, 0xf8, 0xff, 0x75, 0xb, 0x8a, 0x59, 0xc, 0x80, 0xcb, 0x20, 0x89, 0xc5, 0x88, 0x59, 0xc, 0x8b, 0x41, 0x8, 0xc7, 0x41, 0x4, 0, 0, 0, 0, 0x89, 0x1, 0x89, 0xe8, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x1018d5d9, 0x20);   // write_all_from_buffer ? eax - FILE *
    II(0x1018d5d9, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x1018d5da, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x1018d5db, 0x1)     pushd(edx);                         /* push edx */
    II(0x1018d5dc, 0x1)     pushd(esi);                         /* push esi */
    II(0x1018d5dd, 0x1)     pushd(edi);                         /* push edi */
    II(0x1018d5de, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x1018d5df, 0x2)     mov(ecx, eax);                      /* mov ecx, eax */
    II(0x1018d5e1, 0x3)     mov(ah, memb_a32(ds, eax + 0xd));   /* mov ah, [eax+0xd] */
    II(0x1018d5e4, 0x2)     xor_(ebp, ebp);                     /* xor ebp, ebp */
    II(0x1018d5e6, 0x3)     test(ah, 0x10);                     /* test ah, 0x10 */
    II(0x1018d5e9, 0x6)     jzd(0x1018d665, 0x76);              /* jz dword 0x1018d665 */
    II(0x1018d5ef, 0x3)     mov(bh, memb_a32(ds, ecx + 0xd));   /* mov bh, [ecx+0xd] */
    II(0x1018d5f2, 0x3)     and_(bh, 0xef);                     /* and bh, 0xef */
    II(0x1018d5f5, 0x3)     mov(al, memb_a32(ds, ecx + 0xc));   /* mov al, [ecx+0xc] */
    II(0x1018d5f8, 0x3)     mov(memb_a32(ds, ecx + 0xd), bh);   /* mov [ecx+0xd], bh */
    II(0x1018d5fb, 0x2)     test(al, 0x2);                      /* test al, 0x2 */
    II(0x1018d5fd, 0x6)     jzd(0x1018d69d, 0x9a);              /* jz dword 0x1018d69d */
    II(0x1018d603, 0x3)     mov(ebx, memd_a32(ds, ecx + 0x8));  /* mov ebx, [ecx+0x8] */
    II(0x1018d606, 0x2)     test(ebx, ebx);                     /* test ebx, ebx */
    II(0x1018d608, 0x6)     jzd(0x1018d69d, 0x8f);              /* jz dword 0x1018d69d */
    II(0x1018d60e, 0x2)     mov(edi, ebx);                      /* mov edi, ebx */
    II(0x1018d610, 0x3)     mov(esi, memd_a32(ds, ecx + 0x4));  /* mov esi, [ecx+0x4] */
l_0x1018d613:
    II(0x1018d613, 0x2)     test(esi, esi);                     /* test esi, esi */
    II(0x1018d615, 0x6)     jzd(0x1018d69d, 0x82);              /* jz dword 0x1018d69d */       // if all write -> goto ret
    II(0x1018d61b, 0x2)     test(ebp, ebp);                     /* test ebp, ebp */
    II(0x1018d61d, 0x6)     jnzd(0x1018d69d, 0x7a);             /* jnz dword 0x1018d69d */
    II(0x1018d623, 0x2)     mov(ebx, esi);                      /* mov ebx, esi */              // len
    II(0x1018d625, 0x2)     mov(edx, edi);                      /* mov edx, edi */              // ptr
    II(0x1018d627, 0x3)     mov(eax, memd_a32(ds, ecx + 0x10)); /* mov eax, [ecx+0x10] */       // fd
    II(0x1018d62a, 0x5)     calld(0x1018d72e, 0xff);            /* call 0x1018d72e */           // write
    II(0x1018d62f, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x1018d631, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x1018d634, 0x2)     jnzd(0x1018d643, 0xd);              /* jnz 0x1018d643 */            // ret != -1 -> jmp
    II(0x1018d636, 0x3)     mov(bl, memb_a32(ds, ecx + 0xc));   /* mov bl, [ecx+0xc] */
    II(0x1018d639, 0x3)     or_(bl, 0x20);                      /* or bl, 0x20 */
    II(0x1018d63c, 0x2)     mov(ebp, eax);                      /* mov ebp, eax */
    II(0x1018d63e, 0x3)     mov(memb_a32(ds, ecx + 0xc), bl);   /* mov [ecx+0xc], bl */
    II(0x1018d641, 0x2)     jmpd(0x1018d65f, 0x1c);             /* jmp 0x1018d65f */
l_0x1018d643:
    II(0x1018d643, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1018d645, 0x2)     jnzd(0x1018d65f, 0x18);             /* jnz 0x1018d65f */             // ret != 0 -> jmp
    II(0x1018d647, 0x5)     mov(eax, 0xc);                      /* mov eax, 0xc */
    II(0x1018d64c, 0x5)     calld(0x1018d3bf, -0x292);          /* call 0x1018d3bf */
    II(0x1018d651, 0x3)     mov(ah, memb_a32(ds, ecx + 0xc));   /* mov ah, [ecx+0xc] */
    II(0x1018d654, 0x3)     or_(ah, 0x20);                      /* or ah, 0x20 */
    II(0x1018d657, 0x5)     mov(ebp, 0xffffffff);               /* mov ebp, 0xffffffff */
    II(0x1018d65c, 0x3)     mov(memb_a32(ds, ecx + 0xc), ah);   /* mov [ecx+0xc], ah */
l_0x1018d65f:
    II(0x1018d65f, 0x2)     add(edi, edx);                      /* add edi, edx */
    II(0x1018d661, 0x2)     sub(esi, edx);                      /* sub esi, edx */
    II(0x1018d663, 0x2)     jmpd(0x1018d613, -0x52);            /* jmp 0x1018d613 */
l_0x1018d665:
    II(0x1018d665, 0x4)     cmp(memd_a32(ds, ecx + 0x8), 0);    /* cmp dword [ecx+0x8], 0x0 */
    II(0x1018d669, 0x2)     jzd(0x1018d69d, 0x32);              /* jz 0x1018d69d */
    II(0x1018d66b, 0x4)     and_(memb_a32(ds, ecx + 0xc), -0x11 /* 0xef */); /* and byte [ecx+0xc], 0xef */
    II(0x1018d66f, 0x4)     test(memb_a32(ds, ecx + 0xd), 0x20); /* test byte [ecx+0xd], 0x20 */
    II(0x1018d673, 0x2)     jnzd(0x1018d69d, 0x28);             /* jnz 0x1018d69d */
    II(0x1018d675, 0x3)     mov(eax, memd_a32(ds, ecx + 0x4));  /* mov eax, [ecx+0x4] */
    II(0x1018d678, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1018d67a, 0x2)     jzd(0x1018d68d, 0x11);              /* jz 0x1018d68d */
    II(0x1018d67c, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x1018d67e, 0x5)     mov(ebx, 0x1);                      /* mov ebx, 0x1 */
    II(0x1018d683, 0x2)     neg(edx);                           /* neg edx */
    II(0x1018d685, 0x3)     mov(eax, memd_a32(ds, ecx + 0x10)); /* mov eax, [ecx+0x10] */
    II(0x1018d688, 0x5)     calld(sys_lseek, -0x104f6);            /* call 0x1017d197 */
l_0x1018d68d:
    II(0x1018d68d, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x1018d690, 0x2)     jnzd(0x1018d69d, 0xb);              /* jnz 0x1018d69d */
    II(0x1018d692, 0x3)     mov(bl, memb_a32(ds, ecx + 0xc));   /* mov bl, [ecx+0xc] */
    II(0x1018d695, 0x3)     or_(bl, 0x20);                      /* or bl, 0x20 */
    II(0x1018d698, 0x2)     mov(ebp, eax);                      /* mov ebp, eax */
    II(0x1018d69a, 0x3)     mov(memb_a32(ds, ecx + 0xc), bl);   /* mov [ecx+0xc], bl */
l_0x1018d69d:
    II(0x1018d69d, 0x3)     mov(eax, memd_a32(ds, ecx + 0x8));  /* mov eax, [ecx+0x8] */
    II(0x1018d6a0, 0x7)     mov(memd_a32(ds, ecx + 0x4), 0);    /* mov dword [ecx+0x4], 0x0 */
    II(0x1018d6a7, 0x2)     mov(memd_a32(ds, ecx), eax);        /* mov [ecx], eax */
    II(0x1018d6a9, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
    II(0x1018d6ab, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x1018d6ac, 0x1)     popd(edi);                          /* pop edi */
    II(0x1018d6ad, 0x1)     popd(esi);                          /* pop esi */
    II(0x1018d6ae, 0x1)     popd(edx);                          /* pop edx */
    II(0x1018d6af, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1018d6b0, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x1018d6b1, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x101729f1, 0x420268d7ac3c2427, 0x20, {0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xc3, 0xf6, 0x42, 0xc, 0x2, 0x75, 0x18, 0xb8, 0x4, 0, 0, 0, 0xe8, 0xb7, 0xa9, 0x1, 0, 0x80, 0x4a, 0xc, 0x20, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x79, 0, 0, 0, 0x83, 0x7a, 0x8, 0, 0x75, 0x7, 0x89, 0xd0, 0xe8, 0xcb, 0xa9, 0x1, 0, 0xb9, 0, 0x4, 0, 0, 0x83, 0xfb, 0xa, 0x75, 0x33, 0x8a, 0x42, 0xc, 0xb9, 0, 0x6, 0, 0, 0xa8, 0x40, 0x75, 0x27, 0x80, 0x4a, 0xd, 0x10, 0x8b, 0x2, 0xc6, 0, 0xd, 0x8b, 0x32, 0x46, 0x8b, 0x7a, 0x4, 0x89, 0x32, 0x47, 0x8b, 0x6a, 0x14, 0x89, 0x7a, 0x4, 0x39, 0xef, 0x75, 0xb, 0x89, 0xd0, 0xe8, 0x7d, 0xab, 0x1, 0, 0x85, 0xc0, 0x75, 0xac, 0x80, 0x4a, 0xd, 0x10, 0x8b, 0x2, 0x88, 0x18, 0x8b, 0x2, 0x40, 0x8b, 0x72, 0x4, 0x89, 0x2, 0x46, 0x8b, 0x7a, 0xc, 0x89, 0x72, 0x4, 0x85, 0xf9, 0x75, 0x5, 0x3b, 0x72, 0x14, 0x75, 0xb, 0x89, 0xd0, 0xe8, 0x52, 0xab, 0x1, 0, 0x85, 0xc0, 0x75, 0x81, 0x31, 0xc0, 0x88, 0xd8, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x101729f1, 0x20);    // write byte, buffered before.  edx - FILE *, eax - byte to write.
    II(0x101729f1, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x101729f2, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x101729f3, 0x1)     pushd(esi);                         /* push esi */
    II(0x101729f4, 0x1)     pushd(edi);                         /* push edi */
    II(0x101729f5, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x101729f6, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */
    II(0x101729f8, 0x4)     test(memb_a32(ds, edx + 0xc), 0x2); /* test byte [edx+0xc], 0x2 */
    II(0x101729fc, 0x2)     jnzd(0x10172a16, 0x18);             /* jnz 0x10172a16 */
    II(0x101729fe, 0x5)     mov(eax, 0x4);                      /* mov eax, 0x4 */
    II(0x10172a03, 0x5)     calld(0x1018d3bf, 0x1a9b7);         /* call 0x1018d3bf */
    II(0x10172a08, 0x4)     or_(memb_a32(ds, edx + 0xc), 0x20); /* or byte [edx+0xc], 0x20 */
l_0x10172a0c:
    II(0x10172a0c, 0x5)     mov(eax, 0xffffffff);               /* mov eax, 0xffffffff */
    II(0x10172a11, 0x5)     jmpd(0x10172a8f, 0x79);             /* jmp 0x10172a8f */
l_0x10172a16:
    II(0x10172a16, 0x4)     cmp(memd_a32(ds, edx + 0x8), 0);    /* cmp dword [edx+0x8], 0x0 */    // ptr of buf
    II(0x10172a1a, 0x2)     jnzd(0x10172a23, 0x7);              /* jnz 0x10172a23 */
    II(0x10172a1c, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x10172a1e, 0x5)     calld(0x1018d3ee, 0x1a9cb);         /* call 0x1018d3ee */
l_0x10172a23:
    II(0x10172a23, 0x5)     mov(ecx, 0x400);                    /* mov ecx, 0x400 */
    II(0x10172a28, 0x3)     cmp(ebx, 0xa);                      /* cmp ebx, 0xa */                 // 0xa - '\n'
    II(0x10172a2b, 0x2)     jnzd(0x10172a60, 0x33);             /* jnz 0x10172a60 */
    II(0x10172a2d, 0x3)     mov(al, memb_a32(ds, edx + 0xc));   /* mov al, [edx+0xc] */
    II(0x10172a30, 0x5)     mov(ecx, 0x600);                    /* mov ecx, 0x600 */
    II(0x10172a35, 0x2)     test(al, 0x40);                     /* test al, 0x40 */
    II(0x10172a37, 0x2)     jnzd(0x10172a60, 0x27);             /* jnz 0x10172a60 */
    II(0x10172a39, 0x4)     or_(memb_a32(ds, edx + 0xd), 0x10); /* or byte [edx+0xd], 0x10 */
    II(0x10172a3d, 0x2)     mov(eax, memd_a32(ds, edx));        /* mov eax, [edx] */
    II(0x10172a3f, 0x3)     mov(memb_a32(ds, eax), 0xd);        /* mov byte [eax], 0xd */           // write '\r'?
    II(0x10172a42, 0x2)     mov(esi, memd_a32(ds, edx));        /* mov esi, [edx] */
    II(0x10172a44, 0x1)     inc(esi);                           /* inc esi */
    II(0x10172a45, 0x3)     mov(edi, memd_a32(ds, edx + 0x4));  /* mov edi, [edx+0x4] */
    II(0x10172a48, 0x2)     mov(memd_a32(ds, edx), esi);        /* mov [edx], esi */
    II(0x10172a4a, 0x1)     inc(edi);                           /* inc edi */
    II(0x10172a4b, 0x3)     mov(ebp, memd_a32(ds, edx + 0x14)); /* mov ebp, [edx+0x14] */
    II(0x10172a4e, 0x3)     mov(memd_a32(ds, edx + 0x4), edi);  /* mov [edx+0x4], edi */
    II(0x10172a51, 0x2)     cmp(edi, ebp);                      /* cmp edi, ebp */
    II(0x10172a53, 0x2)     jnzd(0x10172a60, 0xb);              /* jnz 0x10172a60 */
    II(0x10172a55, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x10172a57, 0x5)     calld(0x1018d5d9, 0x1ab7d);         /* call 0x1018d5d9 */
    II(0x10172a5c, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x10172a5e, 0x2)     jnzd(0x10172a0c, -0x54);            /* jnz 0x10172a0c */
l_0x10172a60:
    II(0x10172a60, 0x4)     or_(memb_a32(ds, edx + 0xd), 0x10); /* or byte [edx+0xd], 0x10 */
    II(0x10172a64, 0x2)     mov(eax, memd_a32(ds, edx));        /* mov eax, [edx] */
    II(0x10172a66, 0x2)     mov(memb_a32(ds, eax), bl);         /* mov [eax], bl */
    II(0x10172a68, 0x2)     mov(eax, memd_a32(ds, edx));        /* mov eax, [edx] */
    II(0x10172a6a, 0x1)     inc(eax);                           /* inc eax */
    II(0x10172a6b, 0x3)     mov(esi, memd_a32(ds, edx + 0x4));  /* mov esi, [edx+0x4] */
    II(0x10172a6e, 0x2)     mov(memd_a32(ds, edx), eax);        /* mov [edx], eax */
    II(0x10172a70, 0x1)     inc(esi);                           /* inc esi */
    II(0x10172a71, 0x3)     mov(edi, memd_a32(ds, edx + 0xc));  /* mov edi, [edx+0xc] */
    II(0x10172a74, 0x3)     mov(memd_a32(ds, edx + 0x4), esi);  /* mov [edx+0x4], esi */
    II(0x10172a77, 0x2)     test(ecx, edi);                     /* test ecx, edi */
    II(0x10172a79, 0x2)     jnzd(0x10172a80, 0x5);              /* jnz 0x10172a80 */
    II(0x10172a7b, 0x3)     cmp(esi, memd_a32(ds, edx + 0x14)); /* cmp esi, [edx+0x14] */      // if free space in buffer availabe, return.
    II(0x10172a7e, 0x2)     jnzd(0x10172a8b, 0xb);              /* jnz 0x10172a8b */
l_0x10172a80:
    II(0x10172a80, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x10172a82, 0x5)     calld(0x1018d5d9, 0x1ab52);         /* call 0x1018d5d9 */          // write all  from struct eax
    II(0x10172a87, 0x2)     test(eax, eax);                     /* test eax, eax */            // eax = 0 if all right
    II(0x10172a89, 0x2)     jnzd(0x10172a0c, -0x7f);            /* jnz 0x10172a0c */
l_0x10172a8b:
    II(0x10172a8b, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10172a8d, 0x2)     mov(al, bl);                        /* mov al, bl */
l_0x10172a8f:
    II(0x10172a8f, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x10172a90, 0x1)     popd(edi);                          /* pop edi */
    II(0x10172a91, 0x1)     popd(esi);                          /* pop esi */
    II(0x10172a92, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10172a93, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10172a94, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x101817c1, 0xfac5f33e19a65ad6, 0x20, {0x56, 0x57, 0x6, 0x55, 0x83, 0xec, 0xc, 0x89, 0xc7, 0x89, 0xde, 0x89, 0x4c, 0x24, 0x4, 0x89, 0xd0, 0xc7, 0x4, 0x24, 0x1, 0, 0, 0, 0x8c, 0xda, 0x89, 0xf9, 0x8e, 0xc2, 0x8a, 0x53, 0x15, 0xc7, 0x43, 0xc, 0, 0, 0, 0, 0x80, 0xfa, 0x69, 0x72, 0x1c, 0xf, 0x86, 0x67, 0, 0, 0, 0x80, 0xfa, 0x75, 0x72, 0xc, 0x76, 0x1d, 0x80, 0xfa, 0x78, 0x74, 0x18, 0xe9, 0x60, 0, 0, 0, 0x80, 0xfa, 0x6f, 0xeb, 0xf4, 0x80, 0xfa, 0x58, 0x72, 0x56, 0x76, 0x7, 0x80, 0xfa, 0x64, 0x74, 0x45, 0xeb, 0x4d, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x20, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0xc, 0x8b, 0x10, 0x83, 0xc2, 0x4, 0x89, 0x10, 0x8b, 0x6a, 0xfc, 0xeb, 0x25, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x10, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0xd, 0x8b, 0x28, 0x83, 0xc5, 0x4, 0x89, 0x28, 0xf, 0xb7, 0x6d, 0xfc, 0xeb, 0xa, 0x8b, 0x18, 0x83, 0xc3, 0x4, 0x89, 0x18, 0x8b, 0x6b, 0xfc, 0x80, 0x66, 0x14, 0xf9, 0x83, 0x7e, 0x8, 0xff, 0x74, 0x4, 0xc6, 0x46, 0x16, 0x20, 0x8a, 0x56, 0x15, 0xbb, 0xa, 0, 0, 0, 0x80, 0xfa, 0x65, 0x72, 0x60, 0xf, 0x86, 0xda, 0, 0, 0, 0x80, 0xfa, 0x6f, 0x72, 0x3c, 0xf, 0x86, 0xe5, 0, 0, 0, 0x80, 0xfa, 0x73, 0x72, 0x23, 0xf, 0x86, 0x6f, 0x1, 0, 0, 0x80, 0xfa, 0x75, 0xf, 0x82, 0x38, 0x3, 0, 0, 0xf, 0x86, 0x4c, 0x2, 0, 0, 0x80, 0xfa, 0x78, 0xf, 0x84, 0x20, 0x2, 0, 0, 0xe9, 0x24, 0x3, 0, 0, 0x80, 0xfa, 0x70, 0xf, 0x84, 0x58, 0x2, 0, 0, 0xe9, 0x16, 0x3, 0, 0, 0x80, 0xfa, 0x67, 0x72, 0x62, 0xf, 0x86, 0x8e, 0, 0, 0, 0x80, 0xfa, 0x69, 0xf, 0x84, 0xdf, 0, 0, 0, 0xe9, 0xfd, 0x2, 0, 0, 0x80, 0xfa, 0x50, 0x72, 0x33, 0xf, 0x86, 0x2f, 0x2, 0, 0, 0x80, 0xfa, 0x58, 0x72, 0x1a, 0xf, 0x86, 0xde, 0x1, 0, 0, 0x80, 0xfa, 0x63, 0xf, 0x82, 0xde, 0x2, 0, 0, 0xf, 0x86, 0xac, 0x2, 0, 0, 0xe9, 0xb0, 0, 0, 0, 0x80, 0xfa, 0x53, 0xf, 0x84, 0xf8, 0, 0, 0, 0xe9, 0xc5, 0x2, 0, 0, 0x80, 0xfa, 0x46, 0x72, 0xc, 0x76, 0xf, 0x80, 0xfa, 0x47, 0x74, 0x3c, 0xe9, 0xb4, 0x2, 0, 0, 0x80, 0xfa, 0x45, 0xeb, 0xf4, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x10, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0x24, 0x8b, 0x18, 0x83, 0xc3, 0x4, 0x89, 0x18, 0x89, 0xf8, 0x8b, 0x53, 0xfc, 0x89, 0xf3, 0xe8, 0x84, 0xfd, 0xff, 0xff, 0xbb, 0xff, 0xff, 0xff, 0xff, 0x8c, 0xd8, 0x8c, 0xda, 0x8e, 0xc0, 0x89, 0xf8, 0x89, 0xf9, 0xeb, 0x50, 0x89, 0xf3, 0x89, 0xc2, 0x89, 0xf8, 0xe8, 0x5d, 0xfe, 0xff, 0xff, 0xbb, 0xff, 0xff, 0xff, 0xff, 0x8e, 0xc2, 0x89, 0xc1, 0xeb, 0x3a, 0x8a, 0x46, 0x14, 0xbb, 0x8, 0, 0, 0, 0x24, 0x1, 0x25, 0xff, 0, 0, 0, 0x74, 0x4, 0xc6, 0x7, 0x30, 0x47, 0x89, 0xfa, 0x89, 0xe8, 0xe8, 0x85, 0x42, 0x1, 0, 0x83, 0x7e, 0x8, 0, 0x75, 0xd, 0x31, 0xc0, 0x8a, 0x7, 0x83, 0xf8, 0x30, 0x75, 0x4, 0x26, 0xc6, 0x1, 0, 0xbb, 0xff, 0xff, 0xff, 0xff, 0x8c, 0xc2, 0x89, 0xc8, 0xe8, 0x79, 0xfc, 0xff, 0xff, 0xe9, 0x4c, 0x2, 0, 0, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x20, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0x13, 0x8b, 0x10, 0x83, 0xc2, 0x4, 0x89, 0x10, 0x8b, 0x42, 0xfc, 0x89, 0xfa, 0xe8, 0x40, 0x42, 0x1, 0, 0xeb, 0xb9, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x10, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0xf, 0x8b, 0x28, 0x83, 0xc5, 0x4, 0x89, 0x28, 0x89, 0xfa, 0xf, 0xbf, 0x45, 0xfc, 0xeb, 0xdc, 0x8b, 0x10, 0x83, 0xc2, 0x4, 0x89, 0x10, 0x8b, 0x42, 0xfc, 0x89, 0xfa, 0xe8, 0xfd, 0x79, 0xff, 0xff, 0xeb, 0x89, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x80, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0x23, 0x8b, 0x38, 0x83, 0xc7, 0x8, 0x89, 0x38, 0x8b, 0x4f, 0xf8, 0x66, 0x8b, 0x57, 0xfc, 0x85, 0xc9, 0x75, 0x5, 0x66, 0x85, 0xd2, 0x74, 0x4, 0x8e, 0xc2, 0xeb, 0x3e, 0x8c, 0xd8, 0x8b, 0x4c, 0x24, 0x4, 0xeb, 0x34, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x40, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0x12, 0x8b, 0x8, 0x83, 0xc1, 0x4, 0x89, 0x8, 0x8b, 0x49, 0xfc, 0x85, 0xc9, 0x74, 0xdc, 0x8c, 0xd8, 0xeb, 0x14, 0x8b, 0x18, 0x83, 0xc3, 0x4, 0x89, 0x18, 0x8b, 0x4b, 0xfc, 0x85, 0xc9, 0x75, 0xee, 0x8c, 0xd8, 0x8b, 0x4c, 0x24, 0x4, 0x8e, 0xc0, 0x8a, 0x5e, 0x14, 0x31, 0xed, 0x31, 0xc0, 0x80, 0xe3, 0xf9, 0x89, 0x2c, 0x24, 0x8a, 0x46, 0x15, 0x88, 0x5e, 0x14, 0x83, 0xf8, 0x53, 0x75, 0x22, 0x88, 0xd8, 0x24, 0x20, 0x25, 0xff, 0, 0, 0, 0x74, 0xe, 0x31, 0xc0, 0x66, 0x26, 0x8b, 0x1, 0x83, 0xc1, 0x2, 0xe9, 0x63, 0x1, 0, 0, 0x26, 0x8a, 0x1, 0x41, 0xe9, 0x5a, 0x1, 0, 0, 0x88, 0xd8, 0x24, 0x20, 0x25, 0xff, 0, 0, 0, 0x74, 0x11, 0x8c, 0xc2, 0x89, 0xc8, 0x8b, 0x5e, 0x8, 0xe8, 0x8f, 0xfb, 0xff, 0xff, 0xe9, 0x3e, 0x1, 0, 0, 0x8c, 0xc2, 0x89, 0xc8, 0x8b, 0x5e, 0x8, 0xe9, 0xdc, 0xfe, 0xff, 0xff, 0x8a, 0x46, 0x14, 0x24, 0x1, 0x25, 0xff, 0, 0, 0, 0x74, 0x12, 0x85, 0xed, 0x74, 0xe, 0xc6, 0x46, 0x17, 0x30, 0x8a, 0x46, 0x15, 0xc6, 0x46, 0x19, 0, 0x88, 0x46, 0x18, 0xbb, 0x10, 0, 0, 0, 0x89, 0xfa, 0x89, 0xe8, 0xe8, 0xcf, 0x40, 0x1, 0, 0x31, 0xc0, 0x8a, 0x46, 0x15, 0x83, 0xf8, 0x58, 0xf, 0x85, 0x86, 0xfe, 0xff, 0xff, 0x89, 0xf8, 0xe8, 0xa3, 0x1, 0, 0, 0xe9, 0x7a, 0xfe, 0xff, 0xff, 0x83, 0x7e, 0x4, 0, 0x75, 0x1e, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x80, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0x9, 0xc7, 0x46, 0x4, 0xd, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x46, 0x4, 0x8, 0, 0, 0, 0x80, 0x66, 0x14, 0xf9, 0x8b, 0x18, 0x83, 0xc3, 0x4, 0x89, 0x18, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x80, 0x88, 0x54, 0x24, 0x8, 0x31, 0xd2, 0x8a, 0x54, 0x24, 0x8, 0x8b, 0x6b, 0xfc, 0x85, 0xd2, 0x74, 0x29, 0x83, 0xc3, 0x4, 0x89, 0x18, 0x89, 0xfa, 0x8b, 0x43, 0xfc, 0xbb, 0x4, 0, 0, 0, 0x25, 0xff, 0xff, 0, 0, 0xe8, 0xfc, 0xfa, 0xff, 0xff, 0xbb, 0x8, 0, 0, 0, 0x8d, 0x57, 0x5, 0x89, 0xe8, 0xc6, 0x47, 0x4, 0x3a, 0xeb, 0x9, 0xbb, 0x8, 0, 0, 0, 0x89, 0xfa, 0x89, 0xe8, 0xe8, 0xde, 0xfa, 0xff, 0xff, 0x31, 0xc0, 0x8a, 0x46, 0x15, 0x83, 0xf8, 0x50, 0xf, 0x85, 0x2, 0xfe, 0xff, 0xff, 0x89, 0xf8, 0xe8, 0xc, 0x1, 0, 0, 0xe9, 0xf6, 0xfd, 0xff, 0xff, 0x8b, 0x28, 0x83, 0xc5, 0x4, 0x89, 0x28, 0x8a, 0x45, 0xfc, 0xc6, 0x47, 0x1, 0, 0x88, 0x7, 0xc7, 0x46, 0x8, 0x1, 0, 0, 0, 0x8a, 0x76, 0x14, 0x31, 0xc0, 0x80, 0xe6, 0xf9, 0x89, 0x4, 0x24, 0xb8, 0x1, 0, 0, 0, 0x88, 0x76, 0x14, 0xeb, 0x29, 0xc7, 0x46, 0x4, 0, 0, 0, 0, 0x8a, 0x46, 0x15, 0xc6, 0x47, 0x1, 0, 0x88, 0x7, 0xc7, 0x46, 0x8, 0x1, 0, 0, 0, 0x8a, 0x46, 0x14, 0x31, 0xff, 0x24, 0xf9, 0x89, 0x3c, 0x24, 0x88, 0x46, 0x14, 0xb8, 0x1, 0, 0, 0, 0x83, 0x3c, 0x24, 0, 0x74, 0x4f, 0x31, 0xd2, 0x26, 0x8a, 0x11, 0x83, 0xfa, 0x2d, 0x75, 0x8, 0x41, 0xc6, 0x46, 0x17, 0x2d, 0x48, 0xeb, 0x26, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x2, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0x6, 0xc6, 0x46, 0x17, 0x20, 0xeb, 0x12, 0x8a, 0x56, 0x14, 0x80, 0xe2, 0x4, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0x8, 0xc6, 0x46, 0x17, 0x2b, 0xc6, 0x46, 0x18, 0, 0x8b, 0x56, 0x8, 0x39, 0xd0, 0x7e, 0x5, 0x89, 0x46, 0x8, 0xeb, 0x7, 0x89, 0xd3, 0x29, 0xc3, 0x89, 0x5e, 0xc, 0x31, 0xd2, 0x8a, 0x56, 0x16, 0x83, 0xfa, 0x2a, 0x75, 0xd, 0x8a, 0x56, 0x14, 0xc6, 0x46, 0x17, 0, 0x80, 0xe2, 0xf9, 0x88, 0x56, 0x14, 0x8b, 0x5e, 0x8, 0x83, 0xfb, 0xff, 0x74, 0x4, 0x39, 0xd8, 0x7d, 0xd, 0x31, 0xd2, 0x8a, 0x56, 0x15, 0x83, 0xfa, 0x63, 0x74, 0x3, 0x89, 0x46, 0x8, 0xbb, 0xff, 0xff, 0xff, 0xff, 0x8d, 0x46, 0x17, 0x8c, 0xda, 0xe8, 0x94, 0xf9, 0xff, 0xff, 0x8b, 0x6e, 0x8, 0x8b, 0x56, 0xc, 0x1, 0xe8, 0x8b, 0x5e, 0x4, 0x1, 0xd0, 0x8c, 0xc2, 0x29, 0xc3, 0x89, 0xc8, 0x89, 0x5e, 0x4, 0x83, 0xc4, 0xc, 0x5d, 0x7, 0x5f, 0x5e, 0xc3})
{
    FUNC_START_V2(0x101817c1, 0x20);
    II(0x101817c1, 0x1)     pushd(esi);                         /* push esi */
    II(0x101817c2, 0x1)     pushd(edi);                         /* push edi */
    II(0x101817c3, 0x1)     pushd(es);                          /* push es */
    II(0x101817c4, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x101817c5, 0x3)     sub(esp, 0xc);                      /* sub esp, 0xc */
    II(0x101817c8, 0x2)     mov(edi, eax);                      /* mov edi, eax */
    II(0x101817ca, 0x2)     mov(esi, ebx);                      /* mov esi, ebx */
    II(0x101817cc, 0x4)     mov(memd_a32(ss, esp + 0x4), ecx);  /* mov [esp+0x4], ecx */
    II(0x101817d0, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x101817d2, 0x7)     mov(memd_a32(ss, esp), 0x1);        /* mov dword [esp], 0x1 */
    II(0x101817d9, 0x2)     mov(edx, ds);                       /* mov edx, ds */
    II(0x101817db, 0x2)     mov(ecx, edi);                      /* mov ecx, edi */
    II(0x101817dd, 0x2)     mov(es, edx);                       /* mov es, edx */
    II(0x101817df, 0x3)     mov(dl, memb_a32(ds, ebx + 0x15));  /* mov dl, [ebx+0x15] */
    II(0x101817e2, 0x7)     mov(memd_a32(ds, ebx + 0xc), 0);    /* mov dword [ebx+0xc], 0x0 */
    II(0x101817e9, 0x3)     cmp(dl, 0x69);                      /* cmp dl, 0x69 */
    II(0x101817ec, 0x2)     jbd(0x1018180a, 0x1c);              /* jb 0x1018180a */
    II(0x101817ee, 0x6)     jbed(0x1018185b, 0x67);             /* jbe dword 0x1018185b */
    II(0x101817f4, 0x3)     cmp(dl, 0x75);                      /* cmp dl, 0x75 */
    II(0x101817f7, 0x2)     jbd(0x10181805, 0xc);               /* jb 0x10181805 */
    II(0x101817f9, 0x2)     jbed(0x10181818, 0x1d);             /* jbe 0x10181818 */
    II(0x101817fb, 0x3)     cmp(dl, 0x78);                      /* cmp dl, 0x78 */
l_0x101817fe:
    II(0x101817fe, 0x2)     jzd(0x10181818, 0x18);              /* jz 0x10181818 */
    II(0x10181800, 0x5)     jmpd(0x10181865, 0x60);             /* jmp 0x10181865 */
l_0x10181805:
    II(0x10181805, 0x3)     cmp(dl, 0x6f);                      /* cmp dl, 0x6f */
    II(0x10181808, 0x2)     jmpd(0x101817fe, -0xc);             /* jmp 0x101817fe */
l_0x1018180a:
    II(0x1018180a, 0x3)     cmp(dl, 0x58);                      /* cmp dl, 0x58 */
    II(0x1018180d, 0x2)     jbd(0x10181865, 0x56);              /* jb 0x10181865 */
    II(0x1018180f, 0x2)     jbed(0x10181818, 0x7);              /* jbe 0x10181818 */
    II(0x10181811, 0x3)     cmp(dl, 0x64);                      /* cmp dl, 0x64 */
    II(0x10181814, 0x2)     jzd(0x1018185b, 0x45);              /* jz 0x1018185b */
    II(0x10181816, 0x2)     jmpd(0x10181865, 0x4d);             /* jmp 0x10181865 */
l_0x10181818:
    II(0x10181818, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x1018181b, 0x3)     and_(dl, 0x20);                     /* and dl, 0x20 */
    II(0x1018181e, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x10181824, 0x2)     jzd(0x10181832, 0xc);               /* jz 0x10181832 */
    II(0x10181826, 0x2)     mov(edx, memd_a32(ds, eax));        /* mov edx, [eax] */
    II(0x10181828, 0x3)     add(edx, 0x4);                      /* add edx, 0x4 */
    II(0x1018182b, 0x2)     mov(memd_a32(ds, eax), edx);        /* mov [eax], edx */
    II(0x1018182d, 0x3)     mov(ebp, memd_a32(ds, edx - 0x4));  /* mov ebp, [edx-0x4] */
    II(0x10181830, 0x2)     jmpd(0x10181857, 0x25);             /* jmp 0x10181857 */
l_0x10181832:
    II(0x10181832, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x10181835, 0x3)     and_(dl, 0x10);                     /* and dl, 0x10 */
    II(0x10181838, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x1018183e, 0x2)     jzd(0x1018184d, 0xd);               /* jz 0x1018184d */
    II(0x10181840, 0x2)     mov(ebp, memd_a32(ds, eax));        /* mov ebp, [eax] */
    II(0x10181842, 0x3)     add(ebp, 0x4);                      /* add ebp, 0x4 */
    II(0x10181845, 0x2)     mov(memd_a32(ds, eax), ebp);        /* mov [eax], ebp */
    II(0x10181847, 0x4)     movzx(ebp, memw_a32(ss, ebp - 0x4)); /* movzx ebp, word [ebp-0x4] */
    II(0x1018184b, 0x2)     jmpd(0x10181857, 0xa);              /* jmp 0x10181857 */
l_0x1018184d:
    II(0x1018184d, 0x2)     mov(ebx, memd_a32(ds, eax));        /* mov ebx, [eax] */
    II(0x1018184f, 0x3)     add(ebx, 0x4);                      /* add ebx, 0x4 */
    II(0x10181852, 0x2)     mov(memd_a32(ds, eax), ebx);        /* mov [eax], ebx */
    II(0x10181854, 0x3)     mov(ebp, memd_a32(ds, ebx - 0x4));  /* mov ebp, [ebx-0x4] */
l_0x10181857:
    II(0x10181857, 0x4)     and_(memb_a32(ds, esi + 0x14), -0x7 /* 0xf9 */); /* and byte [esi+0x14], 0xf9 */
l_0x1018185b:
    II(0x1018185b, 0x4)     cmp(memd_a32(ds, esi + 0x8), -0x1 /* 0xff */); /* cmp dword [esi+0x8], 0xff */
    II(0x1018185f, 0x2)     jzd(0x10181865, 0x4);               /* jz 0x10181865 */
    II(0x10181861, 0x4)     mov(memb_a32(ds, esi + 0x16), 0x20); /* mov byte [esi+0x16], 0x20 */
l_0x10181865:
    II(0x10181865, 0x3)     mov(dl, memb_a32(ds, esi + 0x15));  /* mov dl, [esi+0x15] */
    II(0x10181868, 0x5)     mov(ebx, 0xa);                      /* mov ebx, 0xa */
    II(0x1018186d, 0x3)     cmp(dl, 0x65);                      /* cmp dl, 0x65 */
    II(0x10181870, 0x2)     jbd(0x101818d2, 0x60);              /* jb 0x101818d2 */
    II(0x10181872, 0x6)     jbed(0x10181952, 0xda);             /* jbe dword 0x10181952 */
    II(0x10181878, 0x3)     cmp(dl, 0x6f);                      /* cmp dl, 0x6f */
    II(0x1018187b, 0x2)     jbd(0x101818b9, 0x3c);              /* jb 0x101818b9 */
    II(0x1018187d, 0x6)     jbed(0x10181968, 0xe5);             /* jbe dword 0x10181968 */
    II(0x10181883, 0x3)     cmp(dl, 0x73);                      /* cmp dl, 0x73 */
    II(0x10181886, 0x2)     jbd(0x101818ab, 0x23);              /* jb 0x101818ab */
    II(0x10181888, 0x6)     jbed(0x101819fd, 0x16f);            /* jbe dword 0x101819fd */
    II(0x1018188e, 0x3)     cmp(dl, 0x75);                      /* cmp dl, 0x75 */
    II(0x10181891, 0x6)     jbd(0x10181bcf, 0x338);             /* jb dword 0x10181bcf */
    II(0x10181897, 0x6)     jbed(0x10181ae9, 0x24c);            /* jbe dword 0x10181ae9 */
    II(0x1018189d, 0x3)     cmp(dl, 0x78);                      /* cmp dl, 0x78 */
    II(0x101818a0, 0x6)     jzd(0x10181ac6, 0x220);             /* jz dword 0x10181ac6 */
    II(0x101818a6, 0x5)     jmpd(0x10181bcf, 0x324);            /* jmp 0x10181bcf */
l_0x101818ab:
    II(0x101818ab, 0x3)     cmp(dl, 0x70);                      /* cmp dl, 0x70 */
    II(0x101818ae, 0x6)     jzd(0x10181b0c, 0x258);             /* jz dword 0x10181b0c */
    II(0x101818b4, 0x5)     jmpd(0x10181bcf, 0x316);            /* jmp 0x10181bcf */
l_0x101818b9:
    II(0x101818b9, 0x3)     cmp(dl, 0x67);                      /* cmp dl, 0x67 */
    II(0x101818bc, 0x2)     jbd(0x10181920, 0x62);              /* jb 0x10181920 */
    II(0x101818be, 0x6)     jbed(0x10181952, 0x8e);             /* jbe dword 0x10181952 */
    II(0x101818c4, 0x3)     cmp(dl, 0x69);                      /* cmp dl, 0x69 */
    II(0x101818c7, 0x6)     jzd(0x101819ac, 0xdf);              /* jz dword 0x101819ac */
    II(0x101818cd, 0x5)     jmpd(0x10181bcf, 0x2fd);            /* jmp 0x10181bcf */
l_0x101818d2:
    II(0x101818d2, 0x3)     cmp(dl, 0x50);                      /* cmp dl, 0x50 */
    II(0x101818d5, 0x2)     jbd(0x1018190a, 0x33);              /* jb 0x1018190a */
    II(0x101818d7, 0x6)     jbed(0x10181b0c, 0x22f);            /* jbe dword 0x10181b0c */
    II(0x101818dd, 0x3)     cmp(dl, 0x58);                      /* cmp dl, 0x58 */
    II(0x101818e0, 0x2)     jbd(0x101818fc, 0x1a);              /* jb 0x101818fc */
    II(0x101818e2, 0x6)     jbed(0x10181ac6, 0x1de);            /* jbe dword 0x10181ac6 */
    II(0x101818e8, 0x3)     cmp(dl, 0x63);                      /* cmp dl, 0x63 */
    II(0x101818eb, 0x6)     jbd(0x10181bcf, 0x2de);             /* jb dword 0x10181bcf */
    II(0x101818f1, 0x6)     jbed(0x10181ba3, 0x2ac);            /* jbe dword 0x10181ba3 */
    II(0x101818f7, 0x5)     jmpd(0x101819ac, 0xb0);             /* jmp 0x101819ac */
l_0x101818fc:
    II(0x101818fc, 0x3)     cmp(dl, 0x53);                      /* cmp dl, 0x53 */
    II(0x101818ff, 0x6)     jzd(0x101819fd, 0xf8);              /* jz dword 0x101819fd */
    II(0x10181905, 0x5)     jmpd(0x10181bcf, 0x2c5);            /* jmp 0x10181bcf */
l_0x1018190a:
    II(0x1018190a, 0x3)     cmp(dl, 0x46);                      /* cmp dl, 0x46 */
    II(0x1018190d, 0x2)     jbd(0x1018191b, 0xc);               /* jb 0x1018191b */
    II(0x1018190f, 0x2)     jbed(0x10181920, 0xf);              /* jbe 0x10181920 */
    II(0x10181911, 0x3)     cmp(dl, 0x47);                      /* cmp dl, 0x47 */
l_0x10181914:
    II(0x10181914, 0x2)     jzd(0x10181952, 0x3c);              /* jz 0x10181952 */
    II(0x10181916, 0x5)     jmpd(0x10181bcf, 0x2b4);            /* jmp 0x10181bcf */
l_0x1018191b:
    II(0x1018191b, 0x3)     cmp(dl, 0x45);                      /* cmp dl, 0x45 */
    II(0x1018191e, 0x2)     jmpd(0x10181914, -0xc);             /* jmp 0x10181914 */
l_0x10181920:
    II(0x10181920, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x10181923, 0x3)     and_(dl, 0x10);                     /* and dl, 0x10 */
    II(0x10181926, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x1018192c, 0x2)     jzd(0x10181952, 0x24);              /* jz 0x10181952 */
    II(0x1018192e, 0x2)     mov(ebx, memd_a32(ds, eax));        /* mov ebx, [eax] */
    II(0x10181930, 0x3)     add(ebx, 0x4);                      /* add ebx, 0x4 */
    II(0x10181933, 0x2)     mov(memd_a32(ds, eax), ebx);        /* mov [eax], ebx */
    II(0x10181935, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x10181937, 0x3)     mov(edx, memd_a32(ds, ebx - 0x4));  /* mov edx, [ebx-0x4] */
    II(0x1018193a, 0x2)     mov(ebx, esi);                      /* mov ebx, esi */
    II(0x1018193c, 0x5)     calld(0x101816c5, -0x27c);          /* call 0x101816c5 */
    II(0x10181941, 0x5)     mov(ebx, 0xffffffff);               /* mov ebx, 0xffffffff */
    II(0x10181946, 0x2)     mov(eax, ds);                       /* mov eax, ds */
    II(0x10181948, 0x2)     mov(edx, ds);                       /* mov edx, ds */
    II(0x1018194a, 0x2)     mov(es, eax);                       /* mov es, eax */
    II(0x1018194c, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x1018194e, 0x2)     mov(ecx, edi);                      /* mov ecx, edi */
    II(0x10181950, 0x2)     jmpd(0x101819a2, 0x50);             /* jmp 0x101819a2 */
l_0x10181952:
    II(0x10181952, 0x2)     mov(ebx, esi);                      /* mov ebx, esi */
    II(0x10181954, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10181956, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x10181958, 0x5)     calld(0x101817ba, -0x1a3);          /* call 0x101817ba */
    II(0x1018195d, 0x5)     mov(ebx, 0xffffffff);               /* mov ebx, 0xffffffff */
    II(0x10181962, 0x2)     mov(es, edx);                       /* mov es, edx */
    II(0x10181964, 0x2)     mov(ecx, eax);                      /* mov ecx, eax */
    II(0x10181966, 0x2)     jmpd(0x101819a2, 0x3a);             /* jmp 0x101819a2 */
l_0x10181968:
    II(0x10181968, 0x3)     mov(al, memb_a32(ds, esi + 0x14));  /* mov al, [esi+0x14] */
    II(0x1018196b, 0x5)     mov(ebx, 0x8);                      /* mov ebx, 0x8 */
    II(0x10181970, 0x2)     and_(al, 0x1);                      /* and al, 0x1 */
    II(0x10181972, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10181977, 0x2)     jzd(0x1018197d, 0x4);               /* jz 0x1018197d */
    II(0x10181979, 0x3)     mov(memb_a32(ds, edi), 0x30);       /* mov byte [edi], 0x30 */
    II(0x1018197c, 0x1)     inc(edi);                           /* inc edi */
l_0x1018197d:
    II(0x1018197d, 0x2)     mov(edx, edi);                      /* mov edx, edi */
    II(0x1018197f, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
    II(0x10181981, 0x5)     calld(0x10195c0b, 0x14285);         /* call 0x10195c0b */
l_0x10181986:
    II(0x10181986, 0x4)     cmp(memd_a32(ds, esi + 0x8), 0);    /* cmp dword [esi+0x8], 0x0 */
    II(0x1018198a, 0x2)     jnzd(0x10181999, 0xd);              /* jnz 0x10181999 */
    II(0x1018198c, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x1018198e, 0x2)     mov(al, memb_a32(ds, edi));         /* mov al, [edi] */
    II(0x10181990, 0x3)     cmp(eax, 0x30);                     /* cmp eax, 0x30 */
    II(0x10181993, 0x2)     jnzd(0x10181999, 0x4);              /* jnz 0x10181999 */
    II(0x10181995, 0x4)     mov(memb_a32(es, ecx), 0);          /* mov byte [es:ecx], 0x0 */
l_0x10181999:
    II(0x10181999, 0x5)     mov(ebx, 0xffffffff);               /* mov ebx, 0xffffffff */
    II(0x1018199e, 0x2)     mov(edx, es);                       /* mov edx, es */
    II(0x101819a0, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
l_0x101819a2:
    II(0x101819a2, 0x5)     calld(0x10181620, -0x387);          /* call 0x10181620 */
    II(0x101819a7, 0x5)     jmpd(0x10181bf8, 0x24c);            /* jmp 0x10181bf8 */
l_0x101819ac:
    II(0x101819ac, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x101819af, 0x3)     and_(dl, 0x20);                     /* and dl, 0x20 */
    II(0x101819b2, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x101819b8, 0x2)     jzd(0x101819cd, 0x13);              /* jz 0x101819cd */
    II(0x101819ba, 0x2)     mov(edx, memd_a32(ds, eax));        /* mov edx, [eax] */
    II(0x101819bc, 0x3)     add(edx, 0x4);                      /* add edx, 0x4 */
    II(0x101819bf, 0x2)     mov(memd_a32(ds, eax), edx);        /* mov [eax], edx */
    II(0x101819c1, 0x3)     mov(eax, memd_a32(ds, edx - 0x4));  /* mov eax, [edx-0x4] */
    II(0x101819c4, 0x2)     mov(edx, edi);                      /* mov edx, edi */
l_0x101819c6:
    II(0x101819c6, 0x5)     calld(0x10195c0b, 0x14240);         /* call 0x10195c0b */
    II(0x101819cb, 0x2)     jmpd(0x10181986, -0x47);            /* jmp 0x10181986 */
l_0x101819cd:
    II(0x101819cd, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x101819d0, 0x3)     and_(dl, 0x10);                     /* and dl, 0x10 */
    II(0x101819d3, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x101819d9, 0x2)     jzd(0x101819ea, 0xf);               /* jz 0x101819ea */
    II(0x101819db, 0x2)     mov(ebp, memd_a32(ds, eax));        /* mov ebp, [eax] */
    II(0x101819dd, 0x3)     add(ebp, 0x4);                      /* add ebp, 0x4 */
    II(0x101819e0, 0x2)     mov(memd_a32(ds, eax), ebp);        /* mov [eax], ebp */
    II(0x101819e2, 0x2)     mov(edx, edi);                      /* mov edx, edi */
    II(0x101819e4, 0x4)     movsx(eax, memw_a32(ss, ebp - 0x4)); /* movsx eax, word [ebp-0x4] */
    II(0x101819e8, 0x2)     jmpd(0x101819c6, -0x24);            /* jmp 0x101819c6 */
l_0x101819ea:
    II(0x101819ea, 0x2)     mov(edx, memd_a32(ds, eax));        /* mov edx, [eax] */
    II(0x101819ec, 0x3)     add(edx, 0x4);                      /* add edx, 0x4 */
    II(0x101819ef, 0x2)     mov(memd_a32(ds, eax), edx);        /* mov [eax], edx */
    II(0x101819f1, 0x3)     mov(eax, memd_a32(ds, edx - 0x4));  /* mov eax, [edx-0x4] */
    II(0x101819f4, 0x2)     mov(edx, edi);                      /* mov edx, edi */
    II(0x101819f6, 0x5)     calld(0x101793f8, -0x8603);         /* call 0x101793f8 */
    II(0x101819fb, 0x2)     jmpd(0x10181986, -0x77);            /* jmp 0x10181986 */
l_0x101819fd:
    II(0x101819fd, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x10181a00, 0x3)     and_(dl, 0x80);                     /* and dl, 0x80 */
    II(0x10181a03, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x10181a09, 0x2)     jzd(0x10181a2e, 0x23);              /* jz 0x10181a2e */
    II(0x10181a0b, 0x2)     mov(edi, memd_a32(ds, eax));        /* mov edi, [eax] */
    II(0x10181a0d, 0x3)     add(edi, 0x8);                      /* add edi, 0x8 */
    II(0x10181a10, 0x2)     mov(memd_a32(ds, eax), edi);        /* mov [eax], edi */
    II(0x10181a12, 0x3)     mov(ecx, memd_a32(ds, edi - 0x8));  /* mov ecx, [edi-0x8] */
    II(0x10181a15, 0x4)     mov(dx, memw_a32(ds, edi - 0x4));   /* mov dx, [edi-0x4] */
    II(0x10181a19, 0x2)     test(ecx, ecx);                     /* test ecx, ecx */
    II(0x10181a1b, 0x2)     jnzd(0x10181a22, 0x5);              /* jnz 0x10181a22 */
    II(0x10181a1d, 0x3)     test(dx, dx);                       /* test dx, dx */
    II(0x10181a20, 0x2)     jzd(0x10181a26, 0x4);               /* jz 0x10181a26 */
l_0x10181a22:
    II(0x10181a22, 0x2)     mov(es, edx);                       /* mov es, edx */
    II(0x10181a24, 0x2)     jmpd(0x10181a64, 0x3e);             /* jmp 0x10181a64 */
l_0x10181a26:
    II(0x10181a26, 0x2)     mov(eax, ds);                       /* mov eax, ds */
    II(0x10181a28, 0x4)     mov(ecx, memd_a32(ss, esp + 0x4));  /* mov ecx, [esp+0x4] */
    II(0x10181a2c, 0x2)     jmpd(0x10181a62, 0x34);             /* jmp 0x10181a62 */
l_0x10181a2e:
    II(0x10181a2e, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x10181a31, 0x3)     and_(dl, 0x40);                     /* and dl, 0x40 */
    II(0x10181a34, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x10181a3a, 0x2)     jzd(0x10181a4e, 0x12);              /* jz 0x10181a4e */
    II(0x10181a3c, 0x2)     mov(ecx, memd_a32(ds, eax));        /* mov ecx, [eax] */
    II(0x10181a3e, 0x3)     add(ecx, 0x4);                      /* add ecx, 0x4 */
    II(0x10181a41, 0x2)     mov(memd_a32(ds, eax), ecx);        /* mov [eax], ecx */
    II(0x10181a43, 0x3)     mov(ecx, memd_a32(ds, ecx - 0x4));  /* mov ecx, [ecx-0x4] */
    II(0x10181a46, 0x2)     test(ecx, ecx);                     /* test ecx, ecx */
    II(0x10181a48, 0x2)     jzd(0x10181a26, -0x24);             /* jz 0x10181a26 */
l_0x10181a4a:
    II(0x10181a4a, 0x2)     mov(eax, ds);                       /* mov eax, ds */
    II(0x10181a4c, 0x2)     jmpd(0x10181a62, 0x14);             /* jmp 0x10181a62 */
l_0x10181a4e:
    II(0x10181a4e, 0x2)     mov(ebx, memd_a32(ds, eax));        /* mov ebx, [eax] */
    II(0x10181a50, 0x3)     add(ebx, 0x4);                      /* add ebx, 0x4 */
    II(0x10181a53, 0x2)     mov(memd_a32(ds, eax), ebx);        /* mov [eax], ebx */
    II(0x10181a55, 0x3)     mov(ecx, memd_a32(ds, ebx - 0x4));  /* mov ecx, [ebx-0x4] */     // string to write.
    II(0x10181a58, 0x2)     test(ecx, ecx);                     /* test ecx, ecx */
    II(0x10181a5a, 0x2)     jnzd(0x10181a4a, -0x12);            /* jnz 0x10181a4a */
    II(0x10181a5c, 0x2)     mov(eax, ds);                       /* mov eax, ds */
    II(0x10181a5e, 0x4)     mov(ecx, memd_a32(ss, esp + 0x4));  /* mov ecx, [esp+0x4] */
l_0x10181a62:
    II(0x10181a62, 0x2)     mov(es, eax);                       /* mov es, eax */
l_0x10181a64:
    II(0x10181a64, 0x3)     mov(bl, memb_a32(ds, esi + 0x14));  /* mov bl, [esi+0x14] */
    II(0x10181a67, 0x2)     xor_(ebp, ebp);                     /* xor ebp, ebp */
    II(0x10181a69, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10181a6b, 0x3)     and_(bl, 0xf9);                     /* and bl, 0xf9 */
    II(0x10181a6e, 0x3)     mov(memd_a32(ss, esp), ebp);        /* mov [esp], ebp */
    II(0x10181a71, 0x3)     mov(al, memb_a32(ds, esi + 0x15));  /* mov al, [esi+0x15] */
    II(0x10181a74, 0x3)     mov(memb_a32(ds, esi + 0x14), bl);  /* mov [esi+0x14], bl */
    II(0x10181a77, 0x3)     cmp(eax, 0x53);                     /* cmp eax, 0x53 */
    II(0x10181a7a, 0x2)     jnzd(0x10181a9e, 0x22);             /* jnz 0x10181a9e */
    II(0x10181a7c, 0x2)     mov(al, bl);                        /* mov al, bl */
    II(0x10181a7e, 0x2)     and_(al, 0x20);                     /* and al, 0x20 */
    II(0x10181a80, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10181a85, 0x2)     jzd(0x10181a95, 0xe);               /* jz 0x10181a95 */
    II(0x10181a87, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10181a89, 0x4)     mov(ax, memw_a32(es, ecx));         /* mov ax, [es:ecx] */
    II(0x10181a8d, 0x3)     add(ecx, 0x2);                      /* add ecx, 0x2 */
    II(0x10181a90, 0x5)     jmpd(0x10181bf8, 0x163);            /* jmp 0x10181bf8 */
l_0x10181a95:
    II(0x10181a95, 0x3)     mov(al, memb_a32(es, ecx));         /* mov al, [es:ecx] */
    II(0x10181a98, 0x1)     inc(ecx);                           /* inc ecx */
    II(0x10181a99, 0x5)     jmpd(0x10181bf8, 0x15a);            /* jmp 0x10181bf8 */
l_0x10181a9e:
    II(0x10181a9e, 0x2)     mov(al, bl);                        /* mov al, bl */
    II(0x10181aa0, 0x2)     and_(al, 0x20);                     /* and al, 0x20 */
    II(0x10181aa2, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10181aa7, 0x2)     jzd(0x10181aba, 0x11);              /* jz 0x10181aba */
    II(0x10181aa9, 0x2)     mov(edx, es);                       /* mov edx, es */
    II(0x10181aab, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x10181aad, 0x3)     mov(ebx, memd_a32(ds, esi + 0x8));  /* mov ebx, [esi+0x8] */
    II(0x10181ab0, 0x5)     calld(0x10181644, -0x471);          /* call 0x10181644 */
    II(0x10181ab5, 0x5)     jmpd(0x10181bf8, 0x13e);            /* jmp 0x10181bf8 */
l_0x10181aba:
    II(0x10181aba, 0x2)     mov(edx, es);                       /* mov edx, es */
    II(0x10181abc, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x10181abe, 0x3)     mov(ebx, memd_a32(ds, esi + 0x8));  /* mov ebx, [esi+0x8] */
    II(0x10181ac1, 0x5)     jmpd(0x101819a2, -0x124);           /* jmp 0x101819a2 */
l_0x10181ac6:
    II(0x10181ac6, 0x3)     mov(al, memb_a32(ds, esi + 0x14));  /* mov al, [esi+0x14] */
    II(0x10181ac9, 0x2)     and_(al, 0x1);                      /* and al, 0x1 */
    II(0x10181acb, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10181ad0, 0x2)     jzd(0x10181ae4, 0x12);              /* jz 0x10181ae4 */
    II(0x10181ad2, 0x2)     test(ebp, ebp);                     /* test ebp, ebp */
    II(0x10181ad4, 0x2)     jzd(0x10181ae4, 0xe);               /* jz 0x10181ae4 */
    II(0x10181ad6, 0x4)     mov(memb_a32(ds, esi + 0x17), 0x30); /* mov byte [esi+0x17], 0x30 */
    II(0x10181ada, 0x3)     mov(al, memb_a32(ds, esi + 0x15));  /* mov al, [esi+0x15] */
    II(0x10181add, 0x4)     mov(memb_a32(ds, esi + 0x19), 0);   /* mov byte [esi+0x19], 0x0 */
    II(0x10181ae1, 0x3)     mov(memb_a32(ds, esi + 0x18), al);  /* mov [esi+0x18], al */
l_0x10181ae4:
    II(0x10181ae4, 0x5)     mov(ebx, 0x10);                     /* mov ebx, 0x10 */
l_0x10181ae9:
    II(0x10181ae9, 0x2)     mov(edx, edi);                      /* mov edx, edi */
    II(0x10181aeb, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
    II(0x10181aed, 0x5)     calld(0x10195bc1, 0x140cf);         /* call 0x10195bc1 */
    II(0x10181af2, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10181af4, 0x3)     mov(al, memb_a32(ds, esi + 0x15));  /* mov al, [esi+0x15] */
    II(0x10181af7, 0x3)     cmp(eax, 0x58);                     /* cmp eax, 0x58 */
    II(0x10181afa, 0x6)     jnzd(0x10181986, -0x17a);           /* jnz dword 0x10181986 */
    II(0x10181b00, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x10181b02, 0x5)     calld(0x10181caa, 0x1a3);           /* call 0x10181caa */
    II(0x10181b07, 0x5)     jmpd(0x10181986, -0x186);           /* jmp 0x10181986 */
l_0x10181b0c:
    II(0x10181b0c, 0x4)     cmp(memd_a32(ds, esi + 0x4), 0);    /* cmp dword [esi+0x4], 0x0 */
    II(0x10181b10, 0x2)     jnzd(0x10181b30, 0x1e);             /* jnz 0x10181b30 */
    II(0x10181b12, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x10181b15, 0x3)     and_(dl, 0x80);                     /* and dl, 0x80 */
    II(0x10181b18, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x10181b1e, 0x2)     jzd(0x10181b29, 0x9);               /* jz 0x10181b29 */
    II(0x10181b20, 0x7)     mov(memd_a32(ds, esi + 0x4), 0xd);  /* mov dword [esi+0x4], 0xd */
    II(0x10181b27, 0x2)     jmpd(0x10181b30, 0x7);              /* jmp 0x10181b30 */
l_0x10181b29:
    II(0x10181b29, 0x7)     mov(memd_a32(ds, esi + 0x4), 0x8);  /* mov dword [esi+0x4], 0x8 */
l_0x10181b30:
    II(0x10181b30, 0x4)     and_(memb_a32(ds, esi + 0x14), -0x7 /* 0xf9 */); /* and byte [esi+0x14], 0xf9 */
    II(0x10181b34, 0x2)     mov(ebx, memd_a32(ds, eax));        /* mov ebx, [eax] */
    II(0x10181b36, 0x3)     add(ebx, 0x4);                      /* add ebx, 0x4 */
    II(0x10181b39, 0x2)     mov(memd_a32(ds, eax), ebx);        /* mov [eax], ebx */
    II(0x10181b3b, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x10181b3e, 0x3)     and_(dl, 0x80);                     /* and dl, 0x80 */
    II(0x10181b41, 0x4)     mov(memb_a32(ss, esp + 0x8), dl);   /* mov [esp+0x8], dl */
    II(0x10181b45, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10181b47, 0x4)     mov(dl, memb_a32(ss, esp + 0x8));   /* mov dl, [esp+0x8] */
    II(0x10181b4b, 0x3)     mov(ebp, memd_a32(ds, ebx - 0x4));  /* mov ebp, [ebx-0x4] */
    II(0x10181b4e, 0x2)     test(edx, edx);                     /* test edx, edx */
    II(0x10181b50, 0x2)     jzd(0x10181b7b, 0x29);              /* jz 0x10181b7b */
    II(0x10181b52, 0x3)     add(ebx, 0x4);                      /* add ebx, 0x4 */
    II(0x10181b55, 0x2)     mov(memd_a32(ds, eax), ebx);        /* mov [eax], ebx */
    II(0x10181b57, 0x2)     mov(edx, edi);                      /* mov edx, edi */
    II(0x10181b59, 0x3)     mov(eax, memd_a32(ds, ebx - 0x4));  /* mov eax, [ebx-0x4] */
    II(0x10181b5c, 0x5)     mov(ebx, 0x4);                      /* mov ebx, 0x4 */
    II(0x10181b61, 0x5)     and_(eax, 0xffff);                  /* and eax, 0xffff */
    II(0x10181b66, 0x5)     calld(0x10181667, -0x504);          /* call 0x10181667 */
    II(0x10181b6b, 0x5)     mov(ebx, 0x8);                      /* mov ebx, 0x8 */
    II(0x10181b70, 0x3)     lea(edx, edi + 0x5);                /* lea edx, [edi+0x5] */
    II(0x10181b73, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
    II(0x10181b75, 0x4)     mov(memb_a32(ds, edi + 0x4), 0x3a); /* mov byte [edi+0x4], 0x3a */
    II(0x10181b79, 0x2)     jmpd(0x10181b84, 0x9);              /* jmp 0x10181b84 */
l_0x10181b7b:
    II(0x10181b7b, 0x5)     mov(ebx, 0x8);                      /* mov ebx, 0x8 */
    II(0x10181b80, 0x2)     mov(edx, edi);                      /* mov edx, edi */
    II(0x10181b82, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
l_0x10181b84:
    II(0x10181b84, 0x5)     calld(0x10181667, -0x522);          /* call 0x10181667 */
    II(0x10181b89, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10181b8b, 0x3)     mov(al, memb_a32(ds, esi + 0x15));  /* mov al, [esi+0x15] */
    II(0x10181b8e, 0x3)     cmp(eax, 0x50);                     /* cmp eax, 0x50 */
    II(0x10181b91, 0x6)     jnzd(0x10181999, -0x1fe);           /* jnz dword 0x10181999 */
    II(0x10181b97, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x10181b99, 0x5)     calld(0x10181caa, 0x10c);           /* call 0x10181caa */
    II(0x10181b9e, 0x5)     jmpd(0x10181999, -0x20a);           /* jmp 0x10181999 */
l_0x10181ba3:
    II(0x10181ba3, 0x2)     mov(ebp, memd_a32(ds, eax));        /* mov ebp, [eax] */
    II(0x10181ba5, 0x3)     add(ebp, 0x4);                      /* add ebp, 0x4 */
    II(0x10181ba8, 0x2)     mov(memd_a32(ds, eax), ebp);        /* mov [eax], ebp */
    II(0x10181baa, 0x3)     mov(al, memb_a32(ss, ebp - 0x4));   /* mov al, [ebp-0x4] */
    II(0x10181bad, 0x4)     mov(memb_a32(ds, edi + 0x1), 0);    /* mov byte [edi+0x1], 0x0 */
    II(0x10181bb1, 0x2)     mov(memb_a32(ds, edi), al);         /* mov [edi], al */
    II(0x10181bb3, 0x7)     mov(memd_a32(ds, esi + 0x8), 0x1);  /* mov dword [esi+0x8], 0x1 */
    II(0x10181bba, 0x3)     mov(dh, memb_a32(ds, esi + 0x14));  /* mov dh, [esi+0x14] */
    II(0x10181bbd, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10181bbf, 0x3)     and_(dh, 0xf9);                     /* and dh, 0xf9 */
    II(0x10181bc2, 0x3)     mov(memd_a32(ss, esp), eax);        /* mov [esp], eax */
    II(0x10181bc5, 0x5)     mov(eax, 0x1);                      /* mov eax, 0x1 */
    II(0x10181bca, 0x3)     mov(memb_a32(ds, esi + 0x14), dh);  /* mov [esi+0x14], dh */
    II(0x10181bcd, 0x2)     jmpd(0x10181bf8, 0x29);             /* jmp 0x10181bf8 */
l_0x10181bcf:
    II(0x10181bcf, 0x7)     mov(memd_a32(ds, esi + 0x4), 0);    /* mov dword [esi+0x4], 0x0 */
    II(0x10181bd6, 0x3)     mov(al, memb_a32(ds, esi + 0x15));  /* mov al, [esi+0x15] */
    II(0x10181bd9, 0x4)     mov(memb_a32(ds, edi + 0x1), 0);    /* mov byte [edi+0x1], 0x0 */
    II(0x10181bdd, 0x2)     mov(memb_a32(ds, edi), al);         /* mov [edi], al */
    II(0x10181bdf, 0x7)     mov(memd_a32(ds, esi + 0x8), 0x1);  /* mov dword [esi+0x8], 0x1 */
    II(0x10181be6, 0x3)     mov(al, memb_a32(ds, esi + 0x14));  /* mov al, [esi+0x14] */
    II(0x10181be9, 0x2)     xor_(edi, edi);                     /* xor edi, edi */
    II(0x10181beb, 0x2)     and_(al, 0xf9);                     /* and al, 0xf9 */
    II(0x10181bed, 0x3)     mov(memd_a32(ss, esp), edi);        /* mov [esp], edi */
    II(0x10181bf0, 0x3)     mov(memb_a32(ds, esi + 0x14), al);  /* mov [esi+0x14], al */
    II(0x10181bf3, 0x5)     mov(eax, 0x1);                      /* mov eax, 0x1 */
l_0x10181bf8:
    II(0x10181bf8, 0x4)     cmp(memd_a32(ss, esp), 0);          /* cmp dword [esp], 0x0 */
    II(0x10181bfc, 0x2)     jzd(0x10181c4d, 0x4f);              /* jz 0x10181c4d */
    II(0x10181bfe, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10181c00, 0x3)     mov(dl, memb_a32(es, ecx));         /* mov dl, [es:ecx] */
    II(0x10181c03, 0x3)     cmp(edx, 0x2d);                     /* cmp edx, 0x2d */
    II(0x10181c06, 0x2)     jnzd(0x10181c10, 0x8);              /* jnz 0x10181c10 */
    II(0x10181c08, 0x1)     inc(ecx);                           /* inc ecx */
    II(0x10181c09, 0x4)     mov(memb_a32(ds, esi + 0x17), 0x2d); /* mov byte [esi+0x17], 0x2d */
    II(0x10181c0d, 0x1)     dec(eax);                           /* dec eax */
    II(0x10181c0e, 0x2)     jmpd(0x10181c36, 0x26);             /* jmp 0x10181c36 */
l_0x10181c10:
    II(0x10181c10, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x10181c13, 0x3)     and_(dl, 0x2);                      /* and dl, 0x2 */
    II(0x10181c16, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x10181c1c, 0x2)     jzd(0x10181c24, 0x6);               /* jz 0x10181c24 */
    II(0x10181c1e, 0x4)     mov(memb_a32(ds, esi + 0x17), 0x20); /* mov byte [esi+0x17], 0x20 */
    II(0x10181c22, 0x2)     jmpd(0x10181c36, 0x12);             /* jmp 0x10181c36 */
l_0x10181c24:
    II(0x10181c24, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x10181c27, 0x3)     and_(dl, 0x4);                      /* and dl, 0x4 */
    II(0x10181c2a, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x10181c30, 0x2)     jzd(0x10181c3a, 0x8);               /* jz 0x10181c3a */
    II(0x10181c32, 0x4)     mov(memb_a32(ds, esi + 0x17), 0x2b); /* mov byte [esi+0x17], 0x2b */
l_0x10181c36:
    II(0x10181c36, 0x4)     mov(memb_a32(ds, esi + 0x18), 0);   /* mov byte [esi+0x18], 0x0 */
l_0x10181c3a:
    II(0x10181c3a, 0x3)     mov(edx, memd_a32(ds, esi + 0x8));  /* mov edx, [esi+0x8] */
    II(0x10181c3d, 0x2)     cmp(eax, edx);                      /* cmp eax, edx */
    II(0x10181c3f, 0x2)     jled(0x10181c46, 0x5);              /* jle 0x10181c46 */
    II(0x10181c41, 0x3)     mov(memd_a32(ds, esi + 0x8), eax);  /* mov [esi+0x8], eax */
    II(0x10181c44, 0x2)     jmpd(0x10181c4d, 0x7);              /* jmp 0x10181c4d */
l_0x10181c46:
    II(0x10181c46, 0x2)     mov(ebx, edx);                      /* mov ebx, edx */
    II(0x10181c48, 0x2)     sub(ebx, eax);                      /* sub ebx, eax */
    II(0x10181c4a, 0x3)     mov(memd_a32(ds, esi + 0xc), ebx);  /* mov [esi+0xc], ebx */
l_0x10181c4d:
    II(0x10181c4d, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10181c4f, 0x3)     mov(dl, memb_a32(ds, esi + 0x16));  /* mov dl, [esi+0x16] */
    II(0x10181c52, 0x3)     cmp(edx, 0x2a);                     /* cmp edx, 0x2a */
    II(0x10181c55, 0x2)     jnzd(0x10181c64, 0xd);              /* jnz 0x10181c64 */
    II(0x10181c57, 0x3)     mov(dl, memb_a32(ds, esi + 0x14));  /* mov dl, [esi+0x14] */
    II(0x10181c5a, 0x4)     mov(memb_a32(ds, esi + 0x17), 0);   /* mov byte [esi+0x17], 0x0 */
    II(0x10181c5e, 0x3)     and_(dl, 0xf9);                     /* and dl, 0xf9 */
    II(0x10181c61, 0x3)     mov(memb_a32(ds, esi + 0x14), dl);  /* mov [esi+0x14], dl */
l_0x10181c64:
    II(0x10181c64, 0x3)     mov(ebx, memd_a32(ds, esi + 0x8));  /* mov ebx, [esi+0x8] */
    II(0x10181c67, 0x3)     cmp(ebx, -0x1 /* 0xff */);          /* cmp ebx, 0xff */
    II(0x10181c6a, 0x2)     jzd(0x10181c70, 0x4);               /* jz 0x10181c70 */
    II(0x10181c6c, 0x2)     cmp(eax, ebx);                      /* cmp eax, ebx */
    II(0x10181c6e, 0x2)     jged(0x10181c7d, 0xd);              /* jge 0x10181c7d */
l_0x10181c70:
    II(0x10181c70, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10181c72, 0x3)     mov(dl, memb_a32(ds, esi + 0x15));  /* mov dl, [esi+0x15] */
    II(0x10181c75, 0x3)     cmp(edx, 0x63);                     /* cmp edx, 0x63 */
    II(0x10181c78, 0x2)     jzd(0x10181c7d, 0x3);               /* jz 0x10181c7d */
    II(0x10181c7a, 0x3)     mov(memd_a32(ds, esi + 0x8), eax);  /* mov [esi+0x8], eax */
l_0x10181c7d:
    II(0x10181c7d, 0x5)     mov(ebx, 0xffffffff);               /* mov ebx, 0xffffffff */
    II(0x10181c82, 0x3)     lea(eax, esi + 0x17);               /* lea eax, [esi+0x17] */
    II(0x10181c85, 0x2)     mov(edx, ds);                       /* mov edx, ds */
    II(0x10181c87, 0x5)     calld(0x10181620, -0x66c);          /* call 0x10181620 */
    II(0x10181c8c, 0x3)     mov(ebp, memd_a32(ds, esi + 0x8));  /* mov ebp, [esi+0x8] */
    II(0x10181c8f, 0x3)     mov(edx, memd_a32(ds, esi + 0xc));  /* mov edx, [esi+0xc] */
    II(0x10181c92, 0x2)     add(eax, ebp);                      /* add eax, ebp */
    II(0x10181c94, 0x3)     mov(ebx, memd_a32(ds, esi + 0x4));  /* mov ebx, [esi+0x4] */
    II(0x10181c97, 0x2)     add(eax, edx);                      /* add eax, edx */
    II(0x10181c99, 0x2)     mov(edx, es);                       /* mov edx, es */
    II(0x10181c9b, 0x2)     sub(ebx, eax);                      /* sub ebx, eax */
    II(0x10181c9d, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x10181c9f, 0x3)     mov(memd_a32(ds, esi + 0x4), ebx);  /* mov [esi+0x4], ebx */
    II(0x10181ca2, 0x3)     add(esp, 0xc);                      /* add esp, 0xc */
    II(0x10181ca5, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x10181ca6, 0x1)     popd(es);                           /* pop es */
    II(0x10181ca7, 0x1)     popd(edi);                          /* pop edi */
    II(0x10181ca8, 0x1)     popd(esi);                          /* pop esi */
    II(0x10181ca9, 0x1)     retd();                             /* ret  */
}

//FUNC_INFO_V2(0x10165eee, func_0x10165eee, 0x20, {0x53, 0x51, 0x89, 0xd3, 0x8b, 0x10, 0x8d, 0x4a, 0x1, 0x89, 0x8, 0x88, 0x1a, 0xff, 0x40, 0x10, 0x59, 0x5b, 0xc3})
//void func_0x10165eee()
//{
//    FUNC_START_V2(0x10165eee, 0x20);    // for  internal realization of printf, sprintf, etc.  func of write byte in sprintf?
//    II(0x10165eee, 0x1)    pushd(ebx);                            /* push ebx */
//    II(0x10165eef, 0x1)    pushd(ecx);                            /* push ecx */
//    II(0x10165ef0, 0x2)    mov(ebx, edx);                         /* mov ebx, edx */
//    II(0x10165ef2, 0x2)    mov(edx, memd_a32(ds, eax));           /* mov edx, [eax] */
//    II(0x10165ef4, 0x3)    lea(ecx, edx + 0x1);                   /* lea ecx, [edx+0x1] */
//    II(0x10165ef7, 0x2)    mov(memd_a32(ds, eax), ecx);           /* mov [eax], ecx */
//    II(0x10165ef9, 0x2)    mov(memb_a32(ds, edx), bl);            /* mov [edx], bl */
//    II(0x10165efb, 0x3)    inc(memd_a32(ds, eax + 0x10));         /* inc dword [eax+0x10] */
//    II(0x10165efe, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x10165eff, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x10165f00, 0x1)    retd();                                /* ret  */
//}

//FUNC_INFO_V2(0x10187d92, func_0x10187d92, 0x20, {0x53, 0x89, 0xc3, 0x89, 0xd0, 0x8b, 0x13, 0xe8, 0x53, 0xac, 0xfe, 0xff, 0xff, 0x43, 0x10, 0x5b, 0xc3})
//void func_0x10187d92()
//{
//    FUNC_START_V2(0x10187d92, 0x20);    // for  internal realization of printf, sprintf, etc.  func of write byte in printf?
//    II(0x10187d92, 0x1)    pushd(ebx);                            /* push ebx */
//    II(0x10187d93, 0x2)    mov(ebx, eax);                         /* mov ebx, eax */
//    II(0x10187d95, 0x2)    mov(eax, edx);                         /* mov eax, edx */
//    II(0x10187d97, 0x2)    mov(edx, memd_a32(ds, ebx));           /* mov edx, [ebx] */
//    II(0x10187d99, 0x5)    calld(0x101729f1, -0x153ad);           /* call 0x101729f1 */    // write byte  edx - ptr of struct, eax - byte to write.
//    II(0x10187d9e, 0x3)    inc(memd_a32(ds, ebx + 0x10));         /* inc dword [ebx+0x10] */
//    II(0x10187da1, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x10187da2, 0x1)    retd();                                /* ret  */
//}

FUNC_INFO_V3(0x101810e4, 0x470a53010c1fec69, 0x20, {0x56, 0x57, 0x6, 0x55, 0x81, 0xec, 0x24, 0x1, 0, 0, 0x89, 0xde, 0x89, 0x8c, 0x24, 0x1c, 0x1, 0, 0, 0x30, 0xdb, 0x89, 0x84, 0x24, 0, 0x1, 0, 0, 0x88, 0x9c, 0x24, 0x20, 0x1, 0, 0, 0x88, 0x9c, 0x24, 0x14, 0x1, 0, 0, 0x31, 0xdb, 0x89, 0xd7, 0x89, 0x9c, 0x24, 0x10, 0x1, 0, 0, 0xbd, 0x4, 0, 0, 0, 0xe9, 0x93, 0, 0, 0, 0x8d, 0x9c, 0x24, 0, 0x1, 0, 0, 0x89, 0xf2, 0xe8, 0x52, 0x3, 0, 0, 0x89, 0xc7, 0x8a, 0, 0x47, 0x88, 0x84, 0x24, 0x15, 0x1, 0, 0, 0x84, 0xc0, 0xf, 0x84, 0x2c, 0x3, 0, 0, 0x31, 0xc0, 0x8a, 0x84, 0x24, 0x15, 0x1, 0, 0, 0x83, 0xf8, 0x6e, 0xf, 0x85, 0x29, 0x1, 0, 0, 0x8a, 0x84, 0x24, 0x14, 0x1, 0, 0, 0x31, 0xd2, 0x24, 0x20, 0x88, 0xc2, 0x8a, 0x84, 0x24, 0x14, 0x1, 0, 0, 0x24, 0x40, 0x8a, 0xa4, 0x24, 0x14, 0x1, 0, 0, 0x80, 0xe4, 0x80, 0x85, 0xd2, 0xf, 0x84, 0x6e, 0, 0, 0, 0x31, 0xd2, 0x88, 0xe2, 0x85, 0xd2, 0x74, 0x16, 0x8b, 0xe, 0x83, 0xc1, 0x8, 0x89, 0xe, 0xc4, 0x51, 0xf8, 0x8b, 0x84, 0x24, 0x10, 0x1, 0, 0, 0x26, 0x89, 0x2, 0xeb, 0x19, 0x25, 0xff, 0, 0, 0, 0x74, 0x3e, 0x8b, 0x1e, 0x1, 0xeb, 0x89, 0x1e, 0x8b, 0x53, 0xfc, 0x8b, 0x84, 0x24, 0x10, 0x1, 0, 0, 0x89, 0x2, 0x8a, 0xf, 0x84, 0xc9, 0xf, 0x84, 0xb1, 0x2, 0, 0, 0x31, 0xd2, 0x88, 0xca, 0x8d, 0x47, 0x1, 0x83, 0xfa, 0x25, 0xf, 0x84, 0x53, 0xff, 0xff, 0xff, 0x89, 0xc7, 0x8d, 0x84, 0x24, 0, 0x1, 0, 0, 0xff, 0x94, 0x24, 0x1c, 0x1, 0, 0, 0xeb, 0xd4, 0x8b, 0x16, 0x1, 0xea, 0x89, 0x16, 0x8b, 0x52, 0xfc, 0xeb, 0xc0, 0x8a, 0x94, 0x24, 0x14, 0x1, 0, 0, 0x80, 0xe2, 0x10, 0x81, 0xe2, 0xff, 0, 0, 0, 0x74, 0x49, 0x31, 0xd2, 0x88, 0xe2, 0x85, 0xd2, 0x74, 0x17, 0x8b, 0x6, 0x83, 0xc0, 0x8, 0x89, 0x6, 0xc4, 0x50, 0xf8, 0x8b, 0x84, 0x24, 0x10, 0x1, 0, 0, 0x66, 0x26, 0x89, 0x2, 0xeb, 0x98, 0x25, 0xff, 0, 0, 0, 0x74, 0x18, 0x8b, 0xe, 0x1, 0xe9, 0x89, 0xe, 0x8b, 0x51, 0xfc, 0x8b, 0x84, 0x24, 0x10, 0x1, 0, 0, 0x66, 0x89, 0x2, 0xe9, 0x79, 0xff, 0xff, 0xff, 0x8b, 0x1e, 0x1, 0xeb, 0x89, 0x1e, 0x8b, 0x53, 0xfc, 0xeb, 0xe6, 0x88, 0xe2, 0x85, 0xd2, 0x74, 0xf, 0x8b, 0x16, 0x83, 0xc2, 0x8, 0x89, 0x16, 0xc4, 0x52, 0xf8, 0xe9, 0x34, 0xff, 0xff, 0xff, 0x25, 0xff, 0, 0, 0, 0x74, 0xe, 0x8b, 0x6, 0x1, 0xe8, 0x89, 0x6, 0x8b, 0x50, 0xfc, 0xe9, 0x3b, 0xff, 0xff, 0xff, 0x8b, 0xe, 0x1, 0xe9, 0x89, 0xe, 0x8b, 0x51, 0xfc, 0xe9, 0x2d, 0xff, 0xff, 0xff, 0x8d, 0x8c, 0x24, 0x20, 0x1, 0, 0, 0x8d, 0x9c, 0x24, 0, 0x1, 0, 0, 0x89, 0xe0, 0x89, 0xf2, 0xe8, 0x2a, 0x5, 0, 0, 0x89, 0xc3, 0x8a, 0x84, 0x24, 0x14, 0x1, 0, 0, 0x8e, 0xc2, 0x24, 0x8, 0x25, 0xff, 0, 0, 0, 0x75, 0x38, 0x8a, 0x84, 0x24, 0x16, 0x1, 0, 0, 0x83, 0xf8, 0x20, 0x75, 0x2c, 0x8b, 0x84, 0x24, 0x4, 0x1, 0, 0, 0x48, 0x89, 0x84, 0x24, 0x4, 0x1, 0, 0, 0x85, 0xc0, 0x7c, 0x19, 0x31, 0xd2, 0x8d, 0x84, 0x24, 0, 0x1, 0, 0, 0x8a, 0x94, 0x24, 0x16, 0x1, 0, 0, 0xff, 0x94, 0x24, 0x1c, 0x1, 0, 0, 0xeb, 0xd4, 0x8d, 0x8c, 0x24, 0x17, 0x1, 0, 0, 0x8a, 0x1, 0x84, 0xc0, 0x74, 0x15, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x84, 0x24, 0, 0x1, 0, 0, 0x41, 0xff, 0x94, 0x24, 0x1c, 0x1, 0, 0, 0xeb, 0xe5, 0x8b, 0x84, 0x24, 0xc, 0x1, 0, 0, 0x8d, 0x48, 0xff, 0x89, 0x8c, 0x24, 0xc, 0x1, 0, 0, 0x85, 0xc0, 0x74, 0x15, 0xba, 0x30, 0, 0, 0, 0x8d, 0x84, 0x24, 0, 0x1, 0, 0, 0xff, 0x94, 0x24, 0x1c, 0x1, 0, 0, 0xeb, 0xd6, 0x8a, 0x84, 0x24, 0x14, 0x1, 0, 0, 0x24, 0x8, 0x25, 0xff, 0, 0, 0, 0x75, 0x38, 0x8a, 0x84, 0x24, 0x16, 0x1, 0, 0, 0x83, 0xf8, 0x20, 0x74, 0x2c, 0x8b, 0x84, 0x24, 0x4, 0x1, 0, 0, 0x48, 0x89, 0x84, 0x24, 0x4, 0x1, 0, 0, 0x85, 0xc0, 0x7c, 0x19, 0x31, 0xd2, 0x8d, 0x84, 0x24, 0, 0x1, 0, 0, 0x8a, 0x94, 0x24, 0x16, 0x1, 0, 0, 0xff, 0x94, 0x24, 0x1c, 0x1, 0, 0, 0xeb, 0xd4, 0x31, 0xc0, 0x8a, 0x84, 0x24, 0x15, 0x1, 0, 0, 0x83, 0xf8, 0x73, 0x74, 0x5, 0x83, 0xf8, 0x53, 0x75, 0x6c, 0x8a, 0x84, 0x24, 0x14, 0x1, 0, 0, 0x24, 0x20, 0x25, 0xff, 0, 0, 0, 0x74, 0x31, 0x8b, 0x84, 0x24, 0x8, 0x1, 0, 0, 0x8d, 0x48, 0xff, 0x89, 0x8c, 0x24, 0x8, 0x1, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0x6e, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x84, 0x24, 0, 0x1, 0, 0, 0x26, 0x8a, 0x13, 0xff, 0x94, 0x24, 0x1c, 0x1, 0, 0, 0x83, 0xc3, 0x2, 0xeb, 0xcf, 0x8b, 0x84, 0x24, 0x8, 0x1, 0, 0, 0x8d, 0x50, 0xff, 0x89, 0x94, 0x24, 0x8, 0x1, 0, 0, 0x85, 0xc0, 0x74, 0x41, 0x31, 0xd2, 0x8d, 0x84, 0x24, 0, 0x1, 0, 0, 0x26, 0x8a, 0x13, 0xff, 0x94, 0x24, 0x1c, 0x1, 0, 0, 0x43, 0xeb, 0xd5, 0x8b, 0x84, 0x24, 0x8, 0x1, 0, 0, 0x8d, 0x48, 0xff, 0x89, 0x8c, 0x24, 0x8, 0x1, 0, 0, 0x85, 0xc0, 0x74, 0x16, 0x31, 0xd2, 0x8d, 0x84, 0x24, 0, 0x1, 0, 0, 0x26, 0x8a, 0x13, 0xff, 0x94, 0x24, 0x1c, 0x1, 0, 0, 0x43, 0xeb, 0xd5, 0x8a, 0x84, 0x24, 0x14, 0x1, 0, 0, 0x24, 0x8, 0x25, 0xff, 0, 0, 0, 0xf, 0x84, 0x81, 0xfd, 0xff, 0xff, 0x83, 0xbc, 0x24, 0x4, 0x1, 0, 0, 0, 0xf, 0x8e, 0x73, 0xfd, 0xff, 0xff, 0x8b, 0x84, 0x24, 0x4, 0x1, 0, 0, 0x8d, 0x50, 0xff, 0x89, 0x94, 0x24, 0x4, 0x1, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0x5a, 0xfd, 0xff, 0xff, 0xba, 0x20, 0, 0, 0, 0x8d, 0x84, 0x24, 0, 0x1, 0, 0, 0xff, 0x94, 0x24, 0x1c, 0x1, 0, 0, 0xeb, 0xd2, 0x8b, 0x84, 0x24, 0x10, 0x1, 0, 0, 0x81, 0xc4, 0x24, 0x1, 0, 0, 0x5d, 0x7, 0x5f, 0x5e, 0xc3})
{
    FUNC_START_V2(0x101810e4, 0x20);     // internal realization of printf, sprintf, etc.   ebx - 0x1020f0b0 ptr of ptr of (char*). [0x1020f0b0] = 0x1020f0c4,  char* - [0x1020f0c4]
    II(0x101810e4, 0x1)     pushd(esi);                         /* push esi */
    II(0x101810e5, 0x1)     pushd(edi);                         /* push edi */
    II(0x101810e6, 0x1)     pushd(es);                          /* push es */
    II(0x101810e7, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x101810e8, 0x6)     sub(esp, 0x124);                    /* sub esp, 0x124 */
    II(0x101810ee, 0x2)     mov(esi, ebx);                      /* mov esi, ebx */              // esi - ebx
    II(0x101810f0, 0x7)     mov(memd_a32(ss, esp + 0x11c), ecx); /* mov [esp+0x11c], ecx */     // addr func of write byte   0x10187d92
    II(0x101810f7, 0x2)     xor_(bl, bl);                       /* xor bl, bl */
    II(0x101810f9, 0x7)     mov(memd_a32(ss, esp + 0x100), eax); /* mov [esp+0x100], eax */     // ptr of struct    0x101be5ba
    II(0x10181100, 0x7)     mov(memb_a32(ss, esp + 0x120), bl); /* mov [esp+0x120], bl */
    II(0x10181107, 0x7)     mov(memb_a32(ss, esp + 0x114), bl); /* mov [esp+0x114], bl */
    II(0x1018110e, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */
    II(0x10181110, 0x2)     mov(edi, edx);                      /* mov edi, edx */
    II(0x10181112, 0x7)     mov(memd_a32(ss, esp + 0x110), ebx); /* mov [esp+0x110], ebx */     // = 0
    II(0x10181119, 0x5)     mov(ebp, 0x4);                      /* mov ebp, 0x4 */
    II(0x1018111e, 0x5)     jmpd(0x101811b6, 0x93);             /* jmp 0x101811b6 */
l_0x10181123:
    II(0x10181123, 0x7)     lea(ebx, esp + 0x100);              /* lea ebx, [esp+0x100] */
    II(0x1018112a, 0x2)     mov(edx, esi);                      /* mov edx, esi */
    II(0x1018112c, 0x5)     calld(0x10181483, 0x352);           /* call 0x10181483 */
    II(0x10181131, 0x2)     mov(edi, eax);                      /* mov edi, eax */
    II(0x10181133, 0x2)     mov(al, memb_a32(ds, eax));         /* mov al, [eax] */
    II(0x10181135, 0x1)     inc(edi);                           /* inc edi */
    II(0x10181136, 0x7)     mov(memb_a32(ss, esp + 0x115), al); /* mov [esp+0x115], al */
    II(0x1018113d, 0x2)     test(al, al);                       /* test al, al */
    II(0x1018113f, 0x6)     jzd(0x10181471, 0x32c);             /* jz dword 0x10181471 */
    II(0x10181145, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10181147, 0x7)     mov(al, memb_a32(ss, esp + 0x115)); /* mov al, [esp+0x115] */
    II(0x1018114e, 0x3)     cmp(eax, 0x6e);                     /* cmp eax, 0x6e */
    II(0x10181151, 0x6)     jnzd(0x10181280, 0x129);            /* jnz dword 0x10181280 */
    II(0x10181157, 0x7)     mov(al, memb_a32(ss, esp + 0x114)); /* mov al, [esp+0x114] */
    II(0x1018115e, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10181160, 0x2)     and_(al, 0x20);                     /* and al, 0x20 */
    II(0x10181162, 0x2)     mov(dl, al);                        /* mov dl, al */
    II(0x10181164, 0x7)     mov(al, memb_a32(ss, esp + 0x114)); /* mov al, [esp+0x114] */
    II(0x1018116b, 0x2)     and_(al, 0x40);                     /* and al, 0x40 */
    II(0x1018116d, 0x7)     mov(ah, memb_a32(ss, esp + 0x114)); /* mov ah, [esp+0x114] */
    II(0x10181174, 0x3)     and_(ah, 0x80);                     /* and ah, 0x80 */
    II(0x10181177, 0x2)     test(edx, edx);                     /* test edx, edx */
    II(0x10181179, 0x6)     jzd(0x101811ed, 0x6e);              /* jz dword 0x101811ed */
    II(0x1018117f, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10181181, 0x2)     mov(dl, ah);                        /* mov dl, ah */
    II(0x10181183, 0x2)     test(edx, edx);                     /* test edx, edx */
    II(0x10181185, 0x2)     jzd(0x1018119d, 0x16);              /* jz 0x1018119d */
    II(0x10181187, 0x2)     mov(ecx, memd_a32(ds, esi));        /* mov ecx, [esi] */
    II(0x10181189, 0x3)     add(ecx, 0x8);                      /* add ecx, 0x8 */
    II(0x1018118c, 0x2)     mov(memd_a32(ds, esi), ecx);        /* mov [esi], ecx */
    II(0x1018118e, 0x3)     les(edx, ds, ecx - 0x8);            /* les edx, [ecx-0x8] */
l_0x10181191:
    II(0x10181191, 0x7)     mov(eax, memd_a32(ss, esp + 0x110)); /* mov eax, [esp+0x110] */
    II(0x10181198, 0x3)     mov(memd_a32(es, edx), eax);        /* mov [es:edx], eax */
    II(0x1018119b, 0x2)     jmpd(0x101811b6, 0x19);             /* jmp 0x101811b6 */
l_0x1018119d:
    II(0x1018119d, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x101811a2, 0x2)     jzd(0x101811e2, 0x3e);              /* jz 0x101811e2 */
    II(0x101811a4, 0x2)     mov(ebx, memd_a32(ds, esi));        /* mov ebx, [esi] */
    II(0x101811a6, 0x2)     add(ebx, ebp);                      /* add ebx, ebp */
    II(0x101811a8, 0x2)     mov(memd_a32(ds, esi), ebx);        /* mov [esi], ebx */
    II(0x101811aa, 0x3)     mov(edx, memd_a32(ds, ebx - 0x4));  /* mov edx, [ebx-0x4] */
l_0x101811ad:
    II(0x101811ad, 0x7)     mov(eax, memd_a32(ss, esp + 0x110)); /* mov eax, [esp+0x110] */
    II(0x101811b4, 0x2)     mov(memd_a32(ds, edx), eax);        /* mov [edx], eax */
l_0x101811b6:
    II(0x101811b6, 0x2)     mov(cl, memb_a32(ds, edi));         /* mov cl, [edi] */
    II(0x101811b8, 0x2)     test(cl, cl);                       /* test cl, cl */
    II(0x101811ba, 0x6)     jzd(0x10181471, 0x2b1);             /* jz dword 0x10181471 */
    II(0x101811c0, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x101811c2, 0x2)     mov(dl, cl);                        /* mov dl, cl */
    II(0x101811c4, 0x3)     lea(eax, edi + 0x1);                /* lea eax, [edi+0x1] */
    II(0x101811c7, 0x3)     cmp(edx, 0x25);                     /* cmp edx, 0x25 */
    II(0x101811ca, 0x6)     jzd(0x10181123, -0xad);             /* jz dword 0x10181123 */
    II(0x101811d0, 0x2)     mov(edi, eax);                      /* mov edi, eax */
    II(0x101811d2, 0x7)     lea(eax, esp + 0x100);              /* lea eax, [esp+0x100] */
    II(0x101811d9, 0x7)     calld_abs(memd_a32(ss, esp + 0x11c)); /* call dword near [esp+0x11c] */
    II(0x101811e0, 0x2)     jmpd(0x101811b6, -0x2c);            /* jmp 0x101811b6 */
l_0x101811e2:
    II(0x101811e2, 0x2)     mov(edx, memd_a32(ds, esi));        /* mov edx, [esi] */
    II(0x101811e4, 0x2)     add(edx, ebp);                      /* add edx, ebp */
    II(0x101811e6, 0x2)     mov(memd_a32(ds, esi), edx);        /* mov [esi], edx */
    II(0x101811e8, 0x3)     mov(edx, memd_a32(ds, edx - 0x4));  /* mov edx, [edx-0x4] */
    II(0x101811eb, 0x2)     jmpd(0x101811ad, -0x40);            /* jmp 0x101811ad */
l_0x101811ed:
    II(0x101811ed, 0x7)     mov(dl, memb_a32(ss, esp + 0x114)); /* mov dl, [esp+0x114] */
    II(0x101811f4, 0x3)     and_(dl, 0x10);                     /* and dl, 0x10 */
    II(0x101811f7, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x101811fd, 0x2)     jzd(0x10181248, 0x49);              /* jz 0x10181248 */
    II(0x101811ff, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10181201, 0x2)     mov(dl, ah);                        /* mov dl, ah */
    II(0x10181203, 0x2)     test(edx, edx);                     /* test edx, edx */
    II(0x10181205, 0x2)     jzd(0x1018121e, 0x17);              /* jz 0x1018121e */
    II(0x10181207, 0x2)     mov(eax, memd_a32(ds, esi));        /* mov eax, [esi] */
    II(0x10181209, 0x3)     add(eax, 0x8);                      /* add eax, 0x8 */
    II(0x1018120c, 0x2)     mov(memd_a32(ds, esi), eax);        /* mov [esi], eax */
    II(0x1018120e, 0x3)     les(edx, ds, eax - 0x8);            /* les edx, [eax-0x8] */
    II(0x10181211, 0x7)     mov(eax, memd_a32(ss, esp + 0x110)); /* mov eax, [esp+0x110] */
    II(0x10181218, 0x4)     mov(memw_a32(es, edx), ax);         /* mov [es:edx], ax */
    II(0x1018121c, 0x2)     jmpd(0x101811b6, -0x68);            /* jmp 0x101811b6 */
l_0x1018121e:
    II(0x1018121e, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10181223, 0x2)     jzd(0x1018123d, 0x18);              /* jz 0x1018123d */
    II(0x10181225, 0x2)     mov(ecx, memd_a32(ds, esi));        /* mov ecx, [esi] */
    II(0x10181227, 0x2)     add(ecx, ebp);                      /* add ecx, ebp */
    II(0x10181229, 0x2)     mov(memd_a32(ds, esi), ecx);        /* mov [esi], ecx */
    II(0x1018122b, 0x3)     mov(edx, memd_a32(ds, ecx - 0x4));  /* mov edx, [ecx-0x4] */
l_0x1018122e:
    II(0x1018122e, 0x7)     mov(eax, memd_a32(ss, esp + 0x110)); /* mov eax, [esp+0x110] */
    II(0x10181235, 0x3)     mov(memw_a32(ds, edx), ax);         /* mov [edx], ax */
    II(0x10181238, 0x5)     jmpd(0x101811b6, -0x87);            /* jmp 0x101811b6 */
l_0x1018123d:
    II(0x1018123d, 0x2)     mov(ebx, memd_a32(ds, esi));        /* mov ebx, [esi] */
    II(0x1018123f, 0x2)     add(ebx, ebp);                      /* add ebx, ebp */
    II(0x10181241, 0x2)     mov(memd_a32(ds, esi), ebx);        /* mov [esi], ebx */
    II(0x10181243, 0x3)     mov(edx, memd_a32(ds, ebx - 0x4));  /* mov edx, [ebx-0x4] */
    II(0x10181246, 0x2)     jmpd(0x1018122e, -0x1a);            /* jmp 0x1018122e */
l_0x10181248:
    II(0x10181248, 0x2)     mov(dl, ah);                        /* mov dl, ah */
    II(0x1018124a, 0x2)     test(edx, edx);                     /* test edx, edx */
    II(0x1018124c, 0x2)     jzd(0x1018125d, 0xf);               /* jz 0x1018125d */
    II(0x1018124e, 0x2)     mov(edx, memd_a32(ds, esi));        /* mov edx, [esi] */
    II(0x10181250, 0x3)     add(edx, 0x8);                      /* add edx, 0x8 */
    II(0x10181253, 0x2)     mov(memd_a32(ds, esi), edx);        /* mov [esi], edx */
    II(0x10181255, 0x3)     les(edx, ds, edx - 0x8);            /* les edx, [edx-0x8] */
    II(0x10181258, 0x5)     jmpd(0x10181191, -0xcc);            /* jmp 0x10181191 */
l_0x1018125d:
    II(0x1018125d, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10181262, 0x2)     jzd(0x10181272, 0xe);               /* jz 0x10181272 */
    II(0x10181264, 0x2)     mov(eax, memd_a32(ds, esi));        /* mov eax, [esi] */
    II(0x10181266, 0x2)     add(eax, ebp);                      /* add eax, ebp */
    II(0x10181268, 0x2)     mov(memd_a32(ds, esi), eax);        /* mov [esi], eax */
    II(0x1018126a, 0x3)     mov(edx, memd_a32(ds, eax - 0x4));  /* mov edx, [eax-0x4] */
    II(0x1018126d, 0x5)     jmpd(0x101811ad, -0xc5);            /* jmp 0x101811ad */
l_0x10181272:
    II(0x10181272, 0x2)     mov(ecx, memd_a32(ds, esi));        /* mov ecx, [esi] */
    II(0x10181274, 0x2)     add(ecx, ebp);                      /* add ecx, ebp */
    II(0x10181276, 0x2)     mov(memd_a32(ds, esi), ecx);        /* mov [esi], ecx */
    II(0x10181278, 0x3)     mov(edx, memd_a32(ds, ecx - 0x4));  /* mov edx, [ecx-0x4] */
    II(0x1018127b, 0x5)     jmpd(0x101811ad, -0xd3);            /* jmp 0x101811ad */
l_0x10181280:
    II(0x10181280, 0x7)     lea(ecx, esp + 0x120);              /* lea ecx, [esp+0x120] */
    II(0x10181287, 0x7)     lea(ebx, esp + 0x100);              /* lea ebx, [esp+0x100] */
    II(0x1018128e, 0x2)     mov(eax, esp);                      /* mov eax, esp */
    II(0x10181290, 0x2)     mov(edx, esi);                      /* mov edx, esi */
    II(0x10181292, 0x5)     calld(0x101817c1, 0x52a);           /* call 0x101817c1 */
    II(0x10181297, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */
    II(0x10181299, 0x7)     mov(al, memb_a32(ss, esp + 0x114)); /* mov al, [esp+0x114] */
    II(0x101812a0, 0x2)     mov(es, edx);                       /* mov es, edx */
    II(0x101812a2, 0x2)     and_(al, 0x8);                      /* and al, 0x8 */
    II(0x101812a4, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x101812a9, 0x2)     jnzd(0x101812e3, 0x38);             /* jnz 0x101812e3 */
    II(0x101812ab, 0x7)     mov(al, memb_a32(ss, esp + 0x116)); /* mov al, [esp+0x116] */
    II(0x101812b2, 0x3)     cmp(eax, 0x20);                     /* cmp eax, 0x20 */
    II(0x101812b5, 0x2)     jnzd(0x101812e3, 0x2c);             /* jnz 0x101812e3 */
l_0x101812b7:
    II(0x101812b7, 0x7)     mov(eax, memd_a32(ss, esp + 0x104)); /* mov eax, [esp+0x104] */
    II(0x101812be, 0x1)     dec(eax);                           /* dec eax */
    II(0x101812bf, 0x7)     mov(memd_a32(ss, esp + 0x104), eax); /* mov [esp+0x104], eax */
    II(0x101812c6, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x101812c8, 0x2)     jld(0x101812e3, 0x19);              /* jl 0x101812e3 */
    II(0x101812ca, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x101812cc, 0x7)     lea(eax, esp + 0x100);              /* lea eax, [esp+0x100] */
    II(0x101812d3, 0x7)     mov(dl, memb_a32(ss, esp + 0x116)); /* mov dl, [esp+0x116] */
    II(0x101812da, 0x7)     calld_abs(memd_a32(ss, esp + 0x11c)); /* call dword near [esp+0x11c] */
    II(0x101812e1, 0x2)     jmpd(0x101812b7, -0x2c);            /* jmp 0x101812b7 */
l_0x101812e3:
    II(0x101812e3, 0x7)     lea(ecx, esp + 0x117);              /* lea ecx, [esp+0x117] */
l_0x101812ea:
    II(0x101812ea, 0x2)     mov(al, memb_a32(ds, ecx));         /* mov al, [ecx] */
    II(0x101812ec, 0x2)     test(al, al);                       /* test al, al */
    II(0x101812ee, 0x2)     jzd(0x10181305, 0x15);              /* jz 0x10181305 */
    II(0x101812f0, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x101812f2, 0x2)     mov(dl, al);                        /* mov dl, al */
    II(0x101812f4, 0x7)     lea(eax, esp + 0x100);              /* lea eax, [esp+0x100] */
    II(0x101812fb, 0x1)     inc(ecx);                           /* inc ecx */
    II(0x101812fc, 0x7)     calld_abs(memd_a32(ss, esp + 0x11c)); /* call dword near [esp+0x11c] */
    II(0x10181303, 0x2)     jmpd(0x101812ea, -0x1b);            /* jmp 0x101812ea */
l_0x10181305:
    II(0x10181305, 0x7)     mov(eax, memd_a32(ss, esp + 0x10c)); /* mov eax, [esp+0x10c] */
    II(0x1018130c, 0x3)     lea(ecx, eax - 0x1);                /* lea ecx, [eax-0x1] */
    II(0x1018130f, 0x7)     mov(memd_a32(ss, esp + 0x10c), ecx); /* mov [esp+0x10c], ecx */
    II(0x10181316, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x10181318, 0x2)     jzd(0x1018132f, 0x15);              /* jz 0x1018132f */
    II(0x1018131a, 0x5)     mov(edx, 0x30);                     /* mov edx, 0x30 */
    II(0x1018131f, 0x7)     lea(eax, esp + 0x100);              /* lea eax, [esp+0x100] */
    II(0x10181326, 0x7)     calld_abs(memd_a32(ss, esp + 0x11c)); /* call dword near [esp+0x11c] */
    II(0x1018132d, 0x2)     jmpd(0x10181305, -0x2a);            /* jmp 0x10181305 */
l_0x1018132f:
    II(0x1018132f, 0x7)     mov(al, memb_a32(ss, esp + 0x114)); /* mov al, [esp+0x114] */
    II(0x10181336, 0x2)     and_(al, 0x8);                      /* and al, 0x8 */
    II(0x10181338, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x1018133d, 0x2)     jnzd(0x10181377, 0x38);             /* jnz 0x10181377 */
    II(0x1018133f, 0x7)     mov(al, memb_a32(ss, esp + 0x116)); /* mov al, [esp+0x116] */
    II(0x10181346, 0x3)     cmp(eax, 0x20);                     /* cmp eax, 0x20 */
    II(0x10181349, 0x2)     jzd(0x10181377, 0x2c);              /* jz 0x10181377 */
l_0x1018134b:
    II(0x1018134b, 0x7)     mov(eax, memd_a32(ss, esp + 0x104)); /* mov eax, [esp+0x104] */
    II(0x10181352, 0x1)     dec(eax);                           /* dec eax */
    II(0x10181353, 0x7)     mov(memd_a32(ss, esp + 0x104), eax); /* mov [esp+0x104], eax */
    II(0x1018135a, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1018135c, 0x2)     jld(0x10181377, 0x19);              /* jl 0x10181377 */
    II(0x1018135e, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10181360, 0x7)     lea(eax, esp + 0x100);              /* lea eax, [esp+0x100] */
    II(0x10181367, 0x7)     mov(dl, memb_a32(ss, esp + 0x116)); /* mov dl, [esp+0x116] */
    II(0x1018136e, 0x7)     calld_abs(memd_a32(ss, esp + 0x11c)); /* call dword near [esp+0x11c] */
    II(0x10181375, 0x2)     jmpd(0x1018134b, -0x2c);            /* jmp 0x1018134b */
l_0x10181377:
    II(0x10181377, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10181379, 0x7)     mov(al, memb_a32(ss, esp + 0x115)); /* mov al, [esp+0x115] */
    II(0x10181380, 0x3)     cmp(eax, 0x73);                     /* cmp eax, 0x73 */
    II(0x10181383, 0x2)     jzd(0x1018138a, 0x5);               /* jz 0x1018138a */
    II(0x10181385, 0x3)     cmp(eax, 0x53);                     /* cmp eax, 0x53 */
    II(0x10181388, 0x2)     jnzd(0x101813f6, 0x6c);             /* jnz 0x101813f6 */
l_0x1018138a:
    II(0x1018138a, 0x7)     mov(al, memb_a32(ss, esp + 0x114)); /* mov al, [esp+0x114] */
    II(0x10181391, 0x2)     and_(al, 0x20);                     /* and al, 0x20 */
    II(0x10181393, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10181398, 0x2)     jzd(0x101813cb, 0x31);              /* jz 0x101813cb */
l_0x1018139a:
    II(0x1018139a, 0x7)     mov(eax, memd_a32(ss, esp + 0x108)); /* mov eax, [esp+0x108] */
    II(0x101813a1, 0x3)     lea(ecx, eax - 0x1);                /* lea ecx, [eax-0x1] */
    II(0x101813a4, 0x7)     mov(memd_a32(ss, esp + 0x108), ecx); /* mov [esp+0x108], ecx */
    II(0x101813ab, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x101813ad, 0x6)     jzd(0x10181421, 0x6e);              /* jz dword 0x10181421 */
    II(0x101813b3, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x101813b5, 0x7)     lea(eax, esp + 0x100);              /* lea eax, [esp+0x100] */
    II(0x101813bc, 0x3)     mov(dl, memb_a32(es, ebx));         /* mov dl, [es:ebx] */
    II(0x101813bf, 0x7)     calld_abs(memd_a32(ss, esp + 0x11c)); /* call dword near [esp+0x11c] */
    II(0x101813c6, 0x3)     add(ebx, 0x2);                      /* add ebx, 0x2 */
    II(0x101813c9, 0x2)     jmpd(0x1018139a, -0x31);            /* jmp 0x1018139a */
l_0x101813cb:
    II(0x101813cb, 0x7)     mov(eax, memd_a32(ss, esp + 0x108)); /* mov eax, [esp+0x108] */             // len of orig buffer,   ebx - 0x101a203e
    II(0x101813d2, 0x3)     lea(edx, eax - 0x1);                /* lea edx, [eax-0x1] */
    II(0x101813d5, 0x7)     mov(memd_a32(ss, esp + 0x108), edx); /* mov [esp+0x108], edx */
    II(0x101813dc, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x101813de, 0x2)     jzd(0x10181421, 0x41);              /* jz 0x10181421 */
    II(0x101813e0, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x101813e2, 0x7)     lea(eax, esp + 0x100);              /* lea eax, [esp+0x100] */              // ptr of (0:ptr of struct, 0x10 count buffer in struct)
    II(0x101813e9, 0x3)     mov(dl, memb_a32(es, ebx));         /* mov dl, [es:ebx] */                  // byte to write
    II(0x101813ec, 0x7)     calld_abs(memd_a32(ss, esp + 0x11c)); /* call dword near [esp+0x11c] */     // write byte  func_0x10187d92
    II(0x101813f3, 0x1)     inc(ebx);                           /* inc ebx */
    II(0x101813f4, 0x2)     jmpd(0x101813cb, -0x2b);            /* jmp 0x101813cb */
l_0x101813f6:
    II(0x101813f6, 0x7)     mov(eax, memd_a32(ss, esp + 0x108)); /* mov eax, [esp+0x108] */
    II(0x101813fd, 0x3)     lea(ecx, eax - 0x1);                /* lea ecx, [eax-0x1] */
    II(0x10181400, 0x7)     mov(memd_a32(ss, esp + 0x108), ecx); /* mov [esp+0x108], ecx */
    II(0x10181407, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x10181409, 0x2)     jzd(0x10181421, 0x16);              /* jz 0x10181421 */
    II(0x1018140b, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x1018140d, 0x7)     lea(eax, esp + 0x100);              /* lea eax, [esp+0x100] */
    II(0x10181414, 0x3)     mov(dl, memb_a32(es, ebx));         /* mov dl, [es:ebx] */
    II(0x10181417, 0x7)     calld_abs(memd_a32(ss, esp + 0x11c)); /* call dword near [esp+0x11c] */
    II(0x1018141e, 0x1)     inc(ebx);                           /* inc ebx */
    II(0x1018141f, 0x2)     jmpd(0x101813f6, -0x2b);            /* jmp 0x101813f6 */
l_0x10181421:
    II(0x10181421, 0x7)     mov(al, memb_a32(ss, esp + 0x114)); /* mov al, [esp+0x114] */
    II(0x10181428, 0x2)     and_(al, 0x8);                      /* and al, 0x8 */
    II(0x1018142a, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x1018142f, 0x6)     jzd(0x101811b6, -0x27f);            /* jz dword 0x101811b6 */
    II(0x10181435, 0x8)     cmp(memd_a32(ss, esp + 0x104), 0);  /* cmp dword [esp+0x104], 0x0 */
    II(0x1018143d, 0x6)     jled(0x101811b6, -0x28d);           /* jle dword 0x101811b6 */
l_0x10181443:
    II(0x10181443, 0x7)     mov(eax, memd_a32(ss, esp + 0x104)); /* mov eax, [esp+0x104] */
    II(0x1018144a, 0x3)     lea(edx, eax - 0x1);                /* lea edx, [eax-0x1] */
    II(0x1018144d, 0x7)     mov(memd_a32(ss, esp + 0x104), edx); /* mov [esp+0x104], edx */
    II(0x10181454, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x10181456, 0x6)     jzd(0x101811b6, -0x2a6);            /* jz dword 0x101811b6 */
    II(0x1018145c, 0x5)     mov(edx, 0x20);                     /* mov edx, 0x20 */
    II(0x10181461, 0x7)     lea(eax, esp + 0x100);              /* lea eax, [esp+0x100] */
    II(0x10181468, 0x7)     calld_abs(memd_a32(ss, esp + 0x11c)); /* call dword near [esp+0x11c] */
    II(0x1018146f, 0x2)     jmpd(0x10181443, -0x2e);            /* jmp 0x10181443 */
l_0x10181471:
    II(0x10181471, 0x7)     mov(eax, memd_a32(ss, esp + 0x110)); /* mov eax, [esp+0x110] */
    II(0x10181478, 0x6)     add(esp, 0x124);                    /* add esp, 0x124 */
    II(0x1018147e, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x1018147f, 0x1)     popd(es);                           /* pop es */
    II(0x10181480, 0x1)     popd(edi);                          /* pop edi */
    II(0x10181481, 0x1)     popd(esi);                          /* pop esi */
    II(0x10181482, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(sys_sprintf, 0xc61c04ec1628b5a, 0x20, {0x53, 0x51, 0x52, 0x83, 0xec, 0x4, 0x8d, 0x44, 0x24, 0x1c, 0xb9, 0xee, 0x5e, 0x16, 0x10, 0x89, 0xe3, 0x8b, 0x54, 0x24, 0x18, 0x89, 0x4, 0x24, 0x8b, 0x44, 0x24, 0x14, 0xe8, 0xc2, 0xb1, 0x1, 0, 0x8b, 0x54, 0x24, 0x14, 0xc6, 0x4, 0x2, 0, 0x83, 0xc4, 0x4, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(sys_sprintf, 0x20);
    II(sys_sprintf, 0x1)       pushd(ebx);                         /* push ebx */
    II(0x10165f02, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x10165f03, 0x1)     pushd(edx);                         /* push edx */
    II(0x10165f04, 0x3)     sub(esp, 0x4);                      /* sub esp, 0x4 */
    II(0x10165f07, 0x4)     lea(eax, esp + 0x1c);               /* lea eax, [esp+0x1c] */
    II(0x10165f0b, 0x5)     mov(ecx, 0x10165eee);               /* mov ecx, 0x10165eee */
    II(0x10165f10, 0x2)     mov(ebx, esp);                      /* mov ebx, esp */
    II(0x10165f12, 0x4)     mov(edx, memd_a32(ss, esp + 0x18)); /* mov edx, [esp+0x18] */
    II(0x10165f16, 0x3)     mov(memd_a32(ss, esp), eax);        /* mov [esp], eax */
    II(0x10165f19, 0x4)     mov(eax, memd_a32(ss, esp + 0x14)); /* mov eax, [esp+0x14] */
    II(0x10165f1d, 0x5)     calld(0x101810e4, 0x1b1c2);         /* call 0x101810e4 */
    II(0x10165f22, 0x4)     mov(edx, memd_a32(ss, esp + 0x14)); /* mov edx, [esp+0x14] */
    II(0x10165f26, 0x4)     mov(memb_a32(ds, edx + eax), 0);    /* mov byte [edx+eax], 0x0 */
    II(0x10165f2a, 0x3)     add(esp, 0x4);                      /* add esp, 0x4 */
    II(0x10165f2d, 0x1)     popd(edx);                          /* pop edx */
    II(0x10165f2e, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10165f2f, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10165f30, 0x1)     retd();                             /* ret  */
}

//FUNC_INFO_V2(0x1016e7c4, func_0x1016e7c4, 0x20, {0x53, 0x51, 0x56, 0x57, 0x55, 0x81, 0xec, 0xa4, 0, 0, 0, 0x89, 0xc5, 0x89, 0x94, 0x24, 0xa0, 0, 0, 0, 0x8b, 0x15, 0xc0, 0xe1, 0x1b, 0x10, 0x85, 0xd2, 0xf, 0x84, 0x75, 0x2, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0x6d, 0x2, 0, 0, 0x83, 0xbc, 0x24, 0xa0, 0, 0, 0, 0, 0xf, 0x84, 0x5f, 0x2, 0, 0, 0x83, 0x7a, 0x3c, 0xa, 0xf, 0x8d, 0x55, 0x2, 0, 0, 0x8b, 0x94, 0x24, 0xa0, 0, 0, 0, 0xbb, 0xff, 0xff, 0xff, 0xff, 0xb9, 0x1, 0, 0, 0, 0x80, 0x3a, 0, 0x74, 0x35, 0x8a, 0x2, 0x3c, 0x62, 0x72, 0xe, 0x76, 0x1f, 0x3c, 0x72, 0x72, 0x21, 0x76, 0x12, 0x3c, 0x77, 0x74, 0x19, 0xeb, 0x19, 0x3c, 0x2b, 0x72, 0x15, 0x76, 0x11, 0x3c, 0x61, 0x74, 0xd, 0xeb, 0xd, 0xbb, 0x1, 0, 0, 0, 0xeb, 0x6, 0x31, 0xc9, 0xeb, 0x2, 0x31, 0xdb, 0x8a, 0x62, 0x1, 0x42, 0x84, 0xe4, 0x75, 0xcb, 0x83, 0xfb, 0xff, 0xf, 0x84, 0x1, 0x2, 0, 0, 0xbe, 0x1, 0, 0, 0, 0x39, 0xf1, 0xf, 0x94, 0xc0, 0x31, 0xc9, 0x88, 0xc1, 0x8a, 0x55, 0, 0x1, 0xf1, 0x80, 0xfa, 0x40, 0x75, 0x20, 0x89, 0xe7, 0x1, 0xee, 0x57, 0x8a, 0x6, 0x88, 0x7, 0x3c, 0, 0x74, 0x10, 0x8a, 0x46, 0x1, 0x83, 0xc6, 0x2, 0x88, 0x47, 0x1, 0x83, 0xc7, 0x2, 0x3c, 0, 0x75, 0xe8, 0x5f, 0x31, 0xf6, 0xa1, 0xc0, 0xe1, 0x1b, 0x10, 0x8b, 0x78, 0xc, 0x85, 0xff, 0x74, 0x3d, 0x85, 0xf6, 0x74, 0x14, 0x55, 0x57, 0x68, 0xd0, 0x2e, 0x1b, 0x10, 0x8d, 0x44, 0x24, 0xc, 0x50, 0xe8, 0x4e, 0x76, 0xff, 0xff, 0x83, 0xc4, 0x10, 0x8b, 0x94, 0x24, 0xa0, 0, 0, 0, 0x89, 0xe0, 0xe8, 0xb6, 0x3a, 0, 0, 0x85, 0xc0, 0x74, 0x13, 0x80, 0xc9, 0x4, 0x31, 0xdb, 0x31, 0xd2, 0xe8, 0x84, 0x24, 0, 0, 0x89, 0xc3, 0xe9, 0x82, 0x1, 0, 0, 0x85, 0xdb, 0xf, 0x84, 0x78, 0x1, 0, 0, 0xa1, 0xc0, 0xe1, 0x1b, 0x10, 0x83, 0x38, 0, 0xf, 0x84, 0x6a, 0x1, 0, 0, 0x85, 0xf6, 0x74, 0x17, 0x55, 0x8b, 0x70, 0x8, 0x56, 0x68, 0xd0, 0x2e, 0x1b, 0x10, 0x8d, 0x44, 0x24, 0xc, 0x50, 0xe8, 0xf8, 0x75, 0xff, 0xff, 0x83, 0xc4, 0x10, 0x89, 0xe0, 0x8d, 0x94, 0x24, 0x90, 0, 0, 0, 0xe8, 0x28, 0xaa, 0, 0, 0x89, 0xe0, 0xe8, 0x7, 0x27, 0, 0, 0x83, 0xf8, 0xff, 0xf, 0x84, 0x31, 0x1, 0, 0, 0xa1, 0xc0, 0xe1, 0x1b, 0x10, 0x8b, 0x78, 0x4, 0x85, 0xff, 0xf, 0x84, 0x21, 0x1, 0, 0, 0x8b, 0x94, 0x24, 0x94, 0, 0, 0, 0x89, 0xf8, 0x31, 0xdb, 0xe8, 0x26, 0x3b, 0, 0, 0x85, 0xc0, 0xf, 0x85, 0x9, 0x1, 0, 0, 0x83, 0xbc, 0x24, 0x90, 0, 0, 0, 0, 0x75, 0xb, 0xc7, 0x84, 0x24, 0x90, 0, 0, 0, 0x10, 0, 0, 0, 0x8b, 0x84, 0x24, 0x90, 0, 0, 0, 0x25, 0xf0, 0, 0, 0, 0x83, 0xf8, 0x20, 0x72, 0x10, 0x76, 0x72, 0x83, 0xf8, 0x40, 0xf, 0x84, 0x92, 0, 0, 0, 0xe9, 0xd3, 0, 0, 0, 0x83, 0xf8, 0x10, 0xf, 0x85, 0xca, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x84, 0x24, 0x98, 0, 0, 0, 0x89, 0x1d, 0xc4, 0xe1, 0x1b, 0x10, 0xff, 0x15, 0xc8, 0xe1, 0x1b, 0x10, 0x89, 0xc5, 0x85, 0xc0, 0xf, 0x84, 0xa8, 0, 0, 0, 0xa1, 0xc0, 0xe1, 0x1b, 0x10, 0x8b, 0x9c, 0x24, 0x9c, 0, 0, 0, 0x89, 0xea, 0x8b, 0x40, 0x4, 0x80, 0xc9, 0x18, 0xe8, 0x84, 0x95, 0x1, 0, 0x8b, 0x9c, 0x24, 0x98, 0, 0, 0, 0x89, 0xea, 0x31, 0xc0, 0xe8, 0x7c, 0x23, 0, 0, 0x89, 0xc3, 0x89, 0xd8, 0x81, 0xc4, 0xa4, 0, 0, 0, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3, 0x8b, 0x9c, 0x24, 0x98, 0, 0, 0, 0xa1, 0xc0, 0xe1, 0x1b, 0x10, 0x80, 0xc9, 0x28, 0x31, 0xd2, 0x8b, 0x40, 0x4, 0xe8, 0x53, 0x23, 0, 0, 0x89, 0xc3, 0x89, 0xd8, 0x81, 0xc4, 0xa4, 0, 0, 0, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3, 0xba, 0x1, 0, 0, 0, 0xb8, 0, 0x40, 0, 0, 0x89, 0x15, 0xc4, 0xe1, 0x1b, 0x10, 0xff, 0x15, 0xc8, 0xe1, 0x1b, 0x10, 0x85, 0xc0, 0x74, 0x2c, 0x8b, 0x35, 0xc0, 0xe1, 0x1b, 0x10, 0x8b, 0x9c, 0x24, 0x98, 0, 0, 0, 0x80, 0xc9, 0x48, 0x8b, 0x76, 0x4, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0xd, 0x23, 0, 0, 0x89, 0xc3, 0x89, 0xd8, 0x81, 0xc4, 0xa4, 0, 0, 0, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3, 0x31, 0xdb, 0x89, 0xd8, 0x81, 0xc4, 0xa4, 0, 0, 0, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
//void func_0x1016e7c4()
//{
//    FUNC_START_V2(0x1016e7c4, 0x20);    // Похожа на fopen но не она. Используется только для "font*.fon" и "color.pal".    eax - char * path, edx - char * mode
//    II(0x1016e7c4, 0x1)    pushd(ebx);                            /* push ebx */
//    II(0x1016e7c5, 0x1)    pushd(ecx);                            /* push ecx */
//    II(0x1016e7c6, 0x1)    pushd(esi);                            /* push esi */
//    II(0x1016e7c7, 0x1)    pushd(edi);                            /* push edi */
//    II(0x1016e7c8, 0x1)    pushd(ebp);                            /* push ebp */
//    II(0x1016e7c9, 0x6)    sub(esp, 0xa4);                        /* sub esp, 0xa4 */
//    II(0x1016e7cf, 0x2)    mov(ebp, eax);                         /* mov ebp, eax */
//    II(0x1016e7d1, 0x7)    mov(memd_a32(ss, esp + 0xa0), edx);    /* mov [esp+0xa0], edx */
//    II(0x1016e7d8, 0x6)    mov(edx, memd_a32(ds, 0x101be1c0));    /* mov edx, [0x101be1c0] */    // В 0x101be1c0 указатель на какую-то внутреннюю структуру?
//    II(0x1016e7de, 0x2)    test(edx, edx);                        /* test edx, edx */
//    II(0x1016e7e0, 0x6)    jzd(0x1016ea5b, 0x275);                /* jz dword 0x1016ea5b */
//    II(0x1016e7e6, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016e7e8, 0x6)    jzd(0x1016ea5b, 0x26d);                /* jz dword 0x1016ea5b */
//    II(0x1016e7ee, 0x8)    cmp(memd_a32(ss, esp + 0xa0), 0);      /* cmp dword [esp+0xa0], 0x0 */
//    II(0x1016e7f6, 0x6)    jzd(0x1016ea5b, 0x25f);                /* jz dword 0x1016ea5b */
//    II(0x1016e7fc, 0x4)    cmp(memd_a32(ds, edx + 0x3c), 0xa);    /* cmp dword [edx+0x3c], 0xa */
//    II(0x1016e800, 0x6)    jged(0x1016ea5b, 0x255);               /* jge dword 0x1016ea5b */
//    II(0x1016e806, 0x7)    mov(edx, memd_a32(ss, esp + 0xa0));    /* mov edx, [esp+0xa0] */
//    II(0x1016e80d, 0x5)    mov(ebx, 0xffffffff);                  /* mov ebx, 0xffffffff */
//    II(0x1016e812, 0x5)    mov(ecx, 0x1);                         /* mov ecx, 0x1 */
//
//    II(0x1016e817, 0x3)    cmp(memb_a32(ds, edx), 0);             /* cmp byte [edx], 0x0 */    // Начало разбора mode.
//    II(0x1016e81a, 0x2)    jzd(0x1016e851, 0x35);                 /* jz 0x1016e851 */
//l_0x1016e81c:
//    II(0x1016e81c, 0x2)    mov(al, memb_a32(ds, edx));            /* mov al, [edx] */
//    II(0x1016e81e, 0x2)    cmp(al, 0x62);                         /* cmp al, 0x62 */        // 'b'
//    II(0x1016e820, 0x2)    jbd(0x1016e830, 0xe);                  /* jb 0x1016e830 */
//    II(0x1016e822, 0x2)    jbed(0x1016e843, 0x1f);                /* jbe 0x1016e843 */
//    II(0x1016e824, 0x2)    cmp(al, 0x72);                         /* cmp al, 0x72 */        // 'r'
//    II(0x1016e826, 0x2)    jbd(0x1016e849, 0x21);                 /* jb 0x1016e849 */
//    II(0x1016e828, 0x2)    jbed(0x1016e83c, 0x12);                /* jbe 0x1016e83c */
//    II(0x1016e82a, 0x2)    cmp(al, 0x77);                         /* cmp al, 0x77 */        // 'w'
//    II(0x1016e82c, 0x2)    jzd(0x1016e847, 0x19);                 /* jz 0x1016e847 */
//    II(0x1016e82e, 0x2)    jmpd(0x1016e849, 0x19);                /* jmp 0x1016e849 */
//l_0x1016e830:
//    II(0x1016e830, 0x2)    cmp(al, 0x2b);                         /* cmp al, 0x2b */        // '+'
//    II(0x1016e832, 0x2)    jbd(0x1016e849, 0x15);                 /* jb 0x1016e849 */
//    II(0x1016e834, 0x2)    jbed(0x1016e847, 0x11);                /* jbe 0x1016e847 */
//    II(0x1016e836, 0x2)    cmp(al, 0x61);                         /* cmp al, 0x61 */        // 'a'
//    II(0x1016e838, 0x2)    jzd(0x1016e847, 0xd);                  /* jz 0x1016e847 */
//    II(0x1016e83a, 0x2)    jmpd(0x1016e849, 0xd);                 /* jmp 0x1016e849 */
//l_0x1016e83c:
//    II(0x1016e83c, 0x5)    mov(ebx, 0x1);                         /* mov ebx, 0x1 */
//    II(0x1016e841, 0x2)    jmpd(0x1016e849, 0x6);                 /* jmp 0x1016e849 */
//l_0x1016e843:
//    II(0x1016e843, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */
//    II(0x1016e845, 0x2)    jmpd(0x1016e849, 0x2);                 /* jmp 0x1016e849 */
//l_0x1016e847:
//    II(0x1016e847, 0x2)    xor_(ebx, ebx);                        /* xor ebx, ebx */
//l_0x1016e849:
//    II(0x1016e849, 0x3)    mov(ah, memb_a32(ds, edx + 0x1));      /* mov ah, [edx+0x1] */
//    II(0x1016e84c, 0x1)    inc(edx);                              /* inc edx */
//    II(0x1016e84d, 0x2)    test(ah, ah);                          /* test ah, ah */
//    II(0x1016e84f, 0x2)    jnzd(0x1016e81c, -0x35);               /* jnz 0x1016e81c */
//
//l_0x1016e851:
//    II(0x1016e851, 0x3)    cmp(ebx, -0x1);                        /* cmp ebx, 0xff */
//    II(0x1016e854, 0x6)    jzd(0x1016ea5b, 0x201);                /* jz dword 0x1016ea5b */
//    II(0x1016e85a, 0x5)    mov(esi, 0x1);                         /* mov esi, 0x1 */
//    II(0x1016e85f, 0x2)    cmp(ecx, esi);                         /* cmp ecx, esi */
//    II(0x1016e861, 0x3)    setz(al);                              /* setz al */
//    II(0x1016e864, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */
//    II(0x1016e866, 0x2)    mov(cl, al);                           /* mov cl, al */
//    II(0x1016e868, 0x3)    mov(dl, memb_a32(ss, ebp + 0));        /* mov dl, [ebp+0x0] */
//    II(0x1016e86b, 0x2)    add(ecx, esi);                         /* add ecx, esi */
//    II(0x1016e86d, 0x3)    cmp(dl, 0x40);                         /* cmp dl, 0x40 */
//    II(0x1016e870, 0x2)    jnzd(0x1016e892, 0x20);                /* jnz 0x1016e892 */
//    II(0x1016e872, 0x2)    mov(edi, esp);                         /* mov edi, esp */
//    II(0x1016e874, 0x2)    add(esi, ebp);                         /* add esi, ebp */
//    II(0x1016e876, 0x1)    pushd(edi);                            /* push edi */
//l_0x1016e877:
//    II(0x1016e877, 0x2)    mov(al, memb_a32(ds, esi));            /* mov al, [esi] */
//    II(0x1016e879, 0x2)    mov(memb_a32(ds, edi), al);            /* mov [edi], al */
//    II(0x1016e87b, 0x2)    cmp(al, 0);                            /* cmp al, 0x0 */
//    II(0x1016e87d, 0x2)    jzd(0x1016e88f, 0x10);                 /* jz 0x1016e88f */
//    II(0x1016e87f, 0x3)    mov(al, memb_a32(ds, esi + 0x1));      /* mov al, [esi+0x1] */
//    II(0x1016e882, 0x3)    add(esi, 0x2);                         /* add esi, 0x2 */
//    II(0x1016e885, 0x3)    mov(memb_a32(ds, edi + 0x1), al);      /* mov [edi+0x1], al */
//    II(0x1016e888, 0x3)    add(edi, 0x2);                         /* add edi, 0x2 */
//    II(0x1016e88b, 0x2)    cmp(al, 0);                            /* cmp al, 0x0 */
//    II(0x1016e88d, 0x2)    jnzd(0x1016e877, -0x18);               /* jnz 0x1016e877 */
//l_0x1016e88f:
//    II(0x1016e88f, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016e890, 0x2)    xor_(esi, esi);                        /* xor esi, esi */
//l_0x1016e892:
//    II(0x1016e892, 0x5)    mov(eax, memd_a32(ds, 0x101be1c0));    /* mov eax, [0x101be1c0] */    // 0x10210c18
//    II(0x1016e897, 0x3)    mov(edi, memd_a32(ds, eax + 0xc));     /* mov edi, [eax+0xc] */
//    II(0x1016e89a, 0x2)    test(edi, edi);                        /* test edi, edi */
//    II(0x1016e89c, 0x2)    jzd(0x1016e8db, 0x3d);                 /* jz 0x1016e8db */
//    II(0x1016e89e, 0x2)    test(esi, esi);                        /* test esi, esi */
//    II(0x1016e8a0, 0x2)    jzd(0x1016e8b6, 0x14);                 /* jz 0x1016e8b6 */
//    II(0x1016e8a2, 0x1)    pushd(ebp);                            /* push ebp */                // "font0.fon" - file_name from input
//    II(0x1016e8a3, 0x1)    pushd(edi);                            /* push edi */                // "" - ?
//    II(0x1016e8a4, 0x5)    pushd(0x101b2ed0);                     /* push dword 0x101b2ed0 */    // "%s%s"
//    II(0x1016e8a9, 0x4)    lea(eax, esp + 0xc);                   /* lea eax, [esp+0xc] */
//    II(0x1016e8ad, 0x1)    pushd(eax);                            /* push eax */
//    II(0x1016e8ae, 0x5)    calld(call_sprintf, -0x89b2);          /* call 0x10165f01 */
//    II(0x1016e8b3, 0x3)    add(esp, 0x10);                        /* add esp, 0x10 */
//l_0x1016e8b6:
//    II(0x1016e8b6, 0x7)    mov(edx, memd_a32(ss, esp + 0xa0));    /* mov edx, [esp+0xa0] */
//    II(0x1016e8bd, 0x2)    mov(eax, esp);                         /* mov eax, esp */
//    II(0x1016e8bf, 0x5)    calld(fopen, 0x3ab6);             /* call fopen */    // fopen
//    II(0x1016e8c4, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016e8c6, 0x2)    jzd(0x1016e8db, 0x13);                 /* jz 0x1016e8db */
//    II(0x1016e8c8, 0x3)    or_(cl, 0x4);                          /* or cl, 0x4 */
//    II(0x1016e8cb, 0x2)    xor_(ebx, ebx);                        /* xor ebx, ebx */
//    II(0x1016e8cd, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
//    II(0x1016e8cf, 0x5)    calld(0x10170d58, 0x2484);             /* call 0x10170d58 */    // ? after: eax, ecx: 0x10210c58, edx: 0x10210c18
//    II(0x1016e8d4, 0x2)    mov(ebx, eax);                         /* mov ebx, eax */
//    II(0x1016e8d6, 0x5)    jmpd(0x1016ea5d, 0x182);               /* jmp 0x1016ea5d */
//l_0x1016e8db:
//    II(0x1016e8db, 0x2)    test(ebx, ebx);                        /* test ebx, ebx */
//    II(0x1016e8dd, 0x6)    jzd(0x1016ea5b, 0x178);                /* jz dword 0x1016ea5b */
//    II(0x1016e8e3, 0x5)    mov(eax, memd_a32(ds, 0x101be1c0));    /* mov eax, [0x101be1c0] */
//    II(0x1016e8e8, 0x3)    cmp(memd_a32(ds, eax), 0);             /* cmp dword [eax], 0x0 */
//    II(0x1016e8eb, 0x6)    jzd(0x1016ea5b, 0x16a);                /* jz dword 0x1016ea5b */
//    II(0x1016e8f1, 0x2)    test(esi, esi);                        /* test esi, esi */
//    II(0x1016e8f3, 0x2)    jzd(0x1016e90c, 0x17);                 /* jz 0x1016e90c */
//    II(0x1016e8f5, 0x1)    pushd(ebp);                            /* push ebp */
//    II(0x1016e8f6, 0x3)    mov(esi, memd_a32(ds, eax + 0x8));     /* mov esi, [eax+0x8] */
//    II(0x1016e8f9, 0x1)    pushd(esi);                            /* push esi */
//    II(0x1016e8fa, 0x5)    pushd(0x101b2ed0);                     /* push dword 0x101b2ed0 */    // "%s%s"
//    II(0x1016e8ff, 0x4)    lea(eax, esp + 0xc);                   /* lea eax, [esp+0xc] */
//    II(0x1016e903, 0x1)    pushd(eax);                            /* push eax */
//    II(0x1016e904, 0x5)    calld(call_sprintf, -0x8a08);          /* call 0x10165f01 */
//    II(0x1016e909, 0x3)    add(esp, 0x10);                        /* add esp, 0x10 */
//l_0x1016e90c:
//    II(0x1016e90c, 0x2)    mov(eax, esp);                         /* mov eax, esp */
//    II(0x1016e90e, 0x7)    lea(edx, esp + 0x90);                  /* lea edx, [esp+0x90] */
//    II(0x1016e915, 0x5)    calld(0x10179342, 0xaa28);             /* call 0x10179342 */
//    II(0x1016e91a, 0x2)    mov(eax, esp);                         /* mov eax, esp */
//    II(0x1016e91c, 0x5)    calld(0x10171028, 0x2707);             /* call 0x10171028 */
//    II(0x1016e921, 0x3)    cmp(eax, -0x1 /* 0xff */);             /* cmp eax, 0xff */
//    II(0x1016e924, 0x6)    jzd(0x1016ea5b, 0x131);                /* jz dword 0x1016ea5b */
//    II(0x1016e92a, 0x5)    mov(eax, memd_a32(ds, 0x101be1c0));    /* mov eax, [0x101be1c0] */
//    II(0x1016e92f, 0x3)    mov(edi, memd_a32(ds, eax + 0x4));     /* mov edi, [eax+0x4] */
//    II(0x1016e932, 0x2)    test(edi, edi);                        /* test edi, edi */
//    II(0x1016e934, 0x6)    jzd(0x1016ea5b, 0x121);                /* jz dword 0x1016ea5b */
//    II(0x1016e93a, 0x7)    mov(edx, memd_a32(ss, esp + 0x94));    /* mov edx, [esp+0x94] */
//    II(0x1016e941, 0x2)    mov(eax, edi);                         /* mov eax, edi */
//    II(0x1016e943, 0x2)    xor_(ebx, ebx);                        /* xor ebx, ebx */
//    II(0x1016e945, 0x5)    calld(call_fseek_2, 0x3b26);             /* call call_fseek_2 */
//    II(0x1016e94a, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016e94c, 0x6)    jnzd(0x1016ea5b, 0x109);               /* jnz dword 0x1016ea5b */
//    II(0x1016e952, 0x8)    cmp(memd_a32(ss, esp + 0x90), 0);      /* cmp dword [esp+0x90], 0x0 */
//    II(0x1016e95a, 0x2)    jnzd(0x1016e967, 0xb);                 /* jnz 0x1016e967 */
//    II(0x1016e95c, 0xb)    mov(memd_a32(ss, esp + 0x90), 0x10);   /* mov dword [esp+0x90], 0x10 */
//l_0x1016e967:
//    II(0x1016e967, 0x7)    mov(eax, memd_a32(ss, esp + 0x90));    /* mov eax, [esp+0x90] */
//    II(0x1016e96e, 0x5)    and_(eax, 0xf0);                       /* and eax, 0xf0 */
//    II(0x1016e973, 0x3)    cmp(eax, 0x20);                        /* cmp eax, 0x20 */
//    II(0x1016e976, 0x2)    jbd(0x1016e988, 0x10);                 /* jb 0x1016e988 */
//    II(0x1016e978, 0x2)    jbed(0x1016e9ec, 0x72);                /* jbe 0x1016e9ec */
//    II(0x1016e97a, 0x3)    cmp(eax, 0x40);                        /* cmp eax, 0x40 */
//    II(0x1016e97d, 0x6)    jzd(0x1016ea15, 0x92);                 /* jz dword 0x1016ea15 */
//    II(0x1016e983, 0x5)    jmpd(0x1016ea5b, 0xd3);                /* jmp 0x1016ea5b */
//l_0x1016e988:
//    II(0x1016e988, 0x3)    cmp(eax, 0x10);                        /* cmp eax, 0x10 */
//    II(0x1016e98b, 0x6)    jnzd(0x1016ea5b, 0xca);                /* jnz dword 0x1016ea5b */
//    II(0x1016e991, 0x5)    mov(ebx, 0x1);                         /* mov ebx, 0x1 */
//    II(0x1016e996, 0x7)    mov(eax, memd_a32(ss, esp + 0x98));    /* mov eax, [esp+0x98] */
//    II(0x1016e99d, 0x6)    mov(memd_a32(ds, 0x101be1c4), ebx);    /* mov [0x101be1c4], ebx */
//    II(0x1016e9a3, 0x6)    calld_abs(memd_a32(ds, 0x101be1c8));   /* call dword near [0x101be1c8] */
//    II(0x1016e9a9, 0x2)    mov(ebp, eax);                         /* mov ebp, eax */
//    II(0x1016e9ab, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016e9ad, 0x6)    jzd(0x1016ea5b, 0xa8);                 /* jz dword 0x1016ea5b */
//    II(0x1016e9b3, 0x5)    mov(eax, memd_a32(ds, 0x101be1c0));    /* mov eax, [0x101be1c0] */
//    II(0x1016e9b8, 0x7)    mov(ebx, memd_a32(ss, esp + 0x9c));    /* mov ebx, [esp+0x9c] */
//    II(0x1016e9bf, 0x2)    mov(edx, ebp);                         /* mov edx, ebp */
//    II(0x1016e9c1, 0x3)    mov(eax, memd_a32(ds, eax + 0x4));     /* mov eax, [eax+0x4] */
//    II(0x1016e9c4, 0x3)    or_(cl, 0x18);                         /* or cl, 0x18 */
//    II(0x1016e9c7, 0x5)    calld(0x10187f50, 0x19584);            /* call 0x10187f50 */
//    II(0x1016e9cc, 0x7)    mov(ebx, memd_a32(ss, esp + 0x98));    /* mov ebx, [esp+0x98] */
//    II(0x1016e9d3, 0x2)    mov(edx, ebp);                         /* mov edx, ebp */
//    II(0x1016e9d5, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
//    II(0x1016e9d7, 0x5)    calld(0x10170d58, 0x237c);             /* call 0x10170d58 */
//    II(0x1016e9dc, 0x2)    mov(ebx, eax);                         /* mov ebx, eax */
////    II(0x1016e9de, 0x2)    mov(eax, ebx);                         /* mov eax, ebx */
//    II(0x1016e9e0, 0x6)    add(esp, 0xa4);                        /* add esp, 0xa4 */
//    II(0x1016e9e6, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016e9e7, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016e9e8, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016e9e9, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016e9ea, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016e9eb, 0x1)    retd();                                /* ret  */
//l_0x1016e9ec:
//    II(0x1016e9ec, 0x7)    mov(ebx, memd_a32(ss, esp + 0x98));    /* mov ebx, [esp+0x98] */
//    II(0x1016e9f3, 0x5)    mov(eax, memd_a32(ds, 0x101be1c0));    /* mov eax, [0x101be1c0] */
//    II(0x1016e9f8, 0x3)    or_(cl, 0x28);                         /* or cl, 0x28 */
//    II(0x1016e9fb, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
//    II(0x1016e9fd, 0x3)    mov(eax, memd_a32(ds, eax + 0x4));     /* mov eax, [eax+0x4] */
//    II(0x1016ea00, 0x5)    calld(0x10170d58, 0x2353);             /* call 0x10170d58 */
//    II(0x1016ea05, 0x2)    mov(ebx, eax);                         /* mov ebx, eax */
////    II(0x1016ea07, 0x2)    mov(eax, ebx);                         /* mov eax, ebx */
//    II(0x1016ea09, 0x6)    add(esp, 0xa4);                        /* add esp, 0xa4 */
//    II(0x1016ea0f, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016ea10, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ea11, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016ea12, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016ea13, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016ea14, 0x1)    retd();                                /* ret  */
//l_0x1016ea15:
//    II(0x1016ea15, 0x5)    mov(edx, 0x1);                         /* mov edx, 0x1 */
//    II(0x1016ea1a, 0x5)    mov(eax, 0x4000);                      /* mov eax, 0x4000 */
//    II(0x1016ea1f, 0x6)    mov(memd_a32(ds, 0x101be1c4), edx);    /* mov [0x101be1c4], edx */
//    II(0x1016ea25, 0x6)    calld_abs(memd_a32(ds, 0x101be1c8));   /* call dword near [0x101be1c8] */
//    II(0x1016ea2b, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016ea2d, 0x2)    jzd(0x1016ea5b, 0x2c);                 /* jz 0x1016ea5b */
//    II(0x1016ea2f, 0x6)    mov(esi, memd_a32(ds, 0x101be1c0));    /* mov esi, [0x101be1c0] */
//    II(0x1016ea35, 0x7)    mov(ebx, memd_a32(ss, esp + 0x98));    /* mov ebx, [esp+0x98] */
//    II(0x1016ea3c, 0x3)    or_(cl, 0x48);                         /* or cl, 0x48 */
//    II(0x1016ea3f, 0x3)    mov(esi, memd_a32(ds, esi + 0x4));     /* mov esi, [esi+0x4] */
//    II(0x1016ea42, 0x2)    mov(edx, eax);                         /* mov edx, eax */
//    II(0x1016ea44, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x1016ea46, 0x5)    calld(0x10170d58, 0x230d);             /* call 0x10170d58 */
//    II(0x1016ea4b, 0x2)    mov(ebx, eax);                         /* mov ebx, eax */
////    II(0x1016ea4d, 0x2)    mov(eax, ebx);                         /* mov eax, ebx */
//    II(0x1016ea4f, 0x6)    add(esp, 0xa4);                        /* add esp, 0xa4 */
//    II(0x1016ea55, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016ea56, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ea57, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016ea58, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016ea59, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016ea5a, 0x1)    retd();                                /* ret  */
//l_0x1016ea5b:
//    II(0x1016ea5b, 0x2)    xor_(ebx, ebx);                        /* xor ebx, ebx */
//l_0x1016ea5d:
//    II(0x1016ea5d, 0x2)    mov(eax, ebx);                         /* mov eax, ebx */
//    II(0x1016ea5f, 0x6)    add(esp, 0xa4);                        /* add esp, 0xa4 */
//    II(0x1016ea65, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016ea66, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ea67, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016ea68, 0x1)    popd(ecx);                             /* pop ecx */
//    II(0x1016ea69, 0x1)    popd(ebx);                             /* pop ebx */
//    II(0x1016ea6a, 0x1)    retd();                                /* ret  */
//}

FUNC_INFO_V3(0x10172341, 0x7c8e28651082acd6, 0x20, {0x51, 0x56, 0x57, 0x89, 0xc6, 0x89, 0xd9, 0x89, 0xd0, 0xe8, 0x5d, 0xfe, 0xff, 0xff, 0x89, 0xc3, 0x85, 0xc0, 0x74, 0x21, 0x31, 0xc0, 0xe8, 0x7a, 0xb1, 0x1, 0, 0x89, 0xc7, 0x85, 0xc0, 0x74, 0x12, 0x50, 0x8a, 0x12, 0x81, 0xe2, 0xff, 0, 0, 0, 0x89, 0xf0, 0xe8, 0xb, 0xff, 0xff, 0xff, 0x89, 0xc7, 0x89, 0xf8, 0x5f, 0x5e, 0x59, 0xc3})
{
    FUNC_START_V2(0x10172341, 0x20);    // internal fopen.  eax - path, edx - mode "rb"
    II(0x10172341, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x10172342, 0x1)     pushd(esi);                         /* push esi */
    II(0x10172343, 0x1)     pushd(edi);                         /* push edi */
    II(0x10172344, 0x2)     mov(esi, eax);                      /* mov esi, eax */
    II(0x10172346, 0x2)     mov(ecx, ebx);                      /* mov ecx, ebx */
    II(0x10172348, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x1017234a, 0x5)     calld(0x101721ac, -0x1a3);          /* call 0x101721ac */
    II(0x1017234f, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */
    II(0x10172351, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x10172353, 0x2)     jzd(0x10172376, 0x21);              /* jz 0x10172376 */
    II(0x10172355, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10172357, 0x5)     calld(0x1018d4d6, 0x1b17a);         /* call 0x1018d4d6 */
    II(0x1017235c, 0x2)     mov(edi, eax);                      /* mov edi, eax */
    II(0x1017235e, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x10172360, 0x2)     jzd(0x10172374, 0x12);              /* jz 0x10172374 */
    II(0x10172362, 0x1)     pushd(eax);                         /* push eax */
    II(0x10172363, 0x2)     mov(dl, memb_a32(ds, edx));         /* mov dl, [edx] */
    II(0x10172365, 0x6)     and_(edx, 0xff);                    /* and edx, 0xff */
    II(0x1017236b, 0x2)     mov(eax, esi);                      /* mov eax, esi */
    II(0x1017236d, 0x5)     calld(0x1017227d, -0xf5);           /* call 0x1017227d */
    II(0x10172372, 0x2)     mov(edi, eax);                      /* mov edi, eax */
l_0x10172374:
    II(0x10172374, 0x2)     mov(eax, edi);                      /* mov eax, edi */
l_0x10172376:
    II(0x10172376, 0x1)     popd(edi);                          /* pop edi */
    II(0x10172377, 0x1)     popd(esi);                          /* pop esi */
    II(0x10172378, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10172379, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(sys_fopen, 0xa6bb39cb928d2c75, 0x20, {0x53, 0x31, 0xdb, 0xe8, 0xbf, 0xff, 0xff, 0xff, 0x5b, 0xc3})
{
    FUNC_START_V2(sys_fopen, 0x20);     // fopen. in  eax - path, edx - mode "rb";   out  eax - FILE*?
    II(sys_fopen, 0x1)         pushd(ebx);                         /* push ebx */
    II(0x1017237b, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */
    II(0x1017237d, 0x5)     calld(0x10172341, -0x41);           /* call 0x10172341 */
    II(0x10172382, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10172383, 0x1)     retd();                             /* ret  */
}

//FUNC_INFO_V2(0x1016ea6c, func_0x1016ea6c, 0x20, {0x56, 0x57, 0x55, 0x83, 0xec, 0x1c, 0x89, 0xc7, 0x89, 0x54, 0x24, 0x4, 0x89, 0x1c, 0x24, 0x89, 0xcd, 0x31, 0xd2, 0x89, 0x54, 0x24, 0xc, 0x85, 0xc9, 0xf, 0x84, 0xa1, 0, 0, 0, 0xf6, 0x41, 0x4, 0x4, 0xf, 0x84, 0xbf, 0, 0, 0, 0x83, 0x3d, 0xdc, 0xe1, 0x1b, 0x10, 0, 0xf, 0x84, 0x95, 0, 0, 0, 0x89, 0xfe, 0x8b, 0x7c, 0x24, 0x4, 0xf, 0xaf, 0xfb, 0xa1, 0xd8, 0xe1, 0x1b, 0x10, 0x2b, 0x5, 0xd4, 0xe1, 0x1b, 0x10, 0x39, 0xc7, 0x7c, 0x35, 0xba, 0x1, 0, 0, 0, 0x89, 0xc3, 0x8b, 0x4d, 0xc, 0x89, 0xf0, 0xe8, 0xa1, 0x3a, 0, 0, 0x8b, 0x4c, 0x24, 0xc, 0x1, 0xc6, 0x29, 0xc7, 0x1, 0xc1, 0x31, 0xc0, 0xa3, 0xd4, 0xe1, 0x1b, 0x10, 0xff, 0x15, 0xdc, 0xe1, 0x1b, 0x10, 0xa1, 0xd8, 0xe1, 0x1b, 0x10, 0x89, 0x4c, 0x24, 0xc, 0x39, 0xc7, 0x7d, 0xcb, 0x85, 0xff, 0x74, 0x29, 0xba, 0x1, 0, 0, 0, 0x89, 0xfb, 0x89, 0xf0, 0x8b, 0x4d, 0xc, 0xe8, 0x68, 0x3a, 0, 0, 0x8b, 0x54, 0x24, 0xc, 0x8b, 0x1d, 0xd4, 0xe1, 0x1b, 0x10, 0x1, 0xc2, 0x1, 0xfb, 0x89, 0x54, 0x24, 0xc, 0x89, 0x1d, 0xd4, 0xe1, 0x1b, 0x10, 0x8b, 0x44, 0x24, 0xc, 0x8b, 0x4c, 0x24, 0x4, 0x31, 0xd2, 0xf7, 0xf1, 0x89, 0x44, 0x24, 0xc, 0x8b, 0x44, 0x24, 0xc, 0x83, 0xc4, 0x1c, 0x5d, 0x5f, 0x5e, 0xc3, 0x8b, 0x54, 0x24, 0x4, 0x89, 0xf8, 0x8b, 0x49, 0xc, 0xe8, 0x27, 0x3a, 0, 0, 0x89, 0x44, 0x24, 0xc, 0x8b, 0x44, 0x24, 0xc, 0x83, 0xc4, 0x1c, 0x5d, 0x5f, 0x5e, 0xc3, 0x85, 0xff, 0x74, 0xd4, 0x8b, 0x41, 0x4, 0x25, 0xf0, 0, 0, 0, 0x83, 0xf8, 0x20, 0x72, 0x1a, 0xf, 0x86, 0x37, 0x1, 0, 0, 0x83, 0xf8, 0x40, 0xf, 0x84, 0x7c, 0x2, 0, 0, 0x8b, 0x44, 0x24, 0xc, 0x83, 0xc4, 0x1c, 0x5d, 0x5f, 0x5e, 0xc3, 0x83, 0xf8, 0x10, 0x75, 0xa8, 0x8b, 0x59, 0x10, 0x85, 0xdb, 0x76, 0xa1, 0x8b, 0x4c, 0x24, 0x4, 0x89, 0xd8, 0xf7, 0xf1, 0x8b, 0x34, 0x24, 0x89, 0x44, 0x24, 0xc, 0x39, 0xf0, 0x76, 0x4, 0x89, 0x74, 0x24, 0xc, 0x8b, 0x44, 0x24, 0xc, 0x85, 0xc0, 0x76, 0x82, 0xf, 0xaf, 0x44, 0x24, 0x4, 0x8b, 0x1d, 0xdc, 0xe1, 0x1b, 0x10, 0x89, 0x44, 0x24, 0x8, 0x85, 0xdb, 0xf, 0x84, 0xad, 0, 0, 0, 0x8b, 0x15, 0xd8, 0xe1, 0x1b, 0x10, 0x89, 0xfb, 0x2b, 0x15, 0xd4, 0xe1, 0x1b, 0x10, 0x39, 0xc2, 0x77, 0x4a, 0x89, 0xd1, 0x89, 0xdf, 0x8b, 0x75, 0x20, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0x8b, 0x7c, 0x24, 0x8, 0x8b, 0x4d, 0x20, 0x8b, 0x75, 0x10, 0x31, 0xc0, 0x1, 0xd3, 0xa3, 0xd4, 0xe1, 0x1b, 0x10, 0x1, 0xd1, 0x29, 0xd6, 0x89, 0x4d, 0x20, 0x29, 0xd7, 0x89, 0x75, 0x10, 0xff, 0x15, 0xdc, 0xe1, 0x1b, 0x10, 0x8b, 0x15, 0xd8, 0xe1, 0x1b, 0x10, 0x89, 0x7c, 0x24, 0x8, 0x39, 0xfa, 0x76, 0xb6, 0x83, 0x7c, 0x24, 0x8, 0, 0xf, 0x84, 0x4, 0xff, 0xff, 0xff, 0x8b, 0x4c, 0x24, 0x8, 0x89, 0xdf, 0x8b, 0x75, 0x20, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0x8b, 0x44, 0x24, 0x8, 0x8b, 0x1d, 0xd4, 0xe1, 0x1b, 0x10, 0x8b, 0x7d, 0x20, 0x8b, 0x55, 0x10, 0x1, 0xc7, 0x29, 0xc2, 0x1, 0xc3, 0x89, 0x7d, 0x20, 0x89, 0x1d, 0xd4, 0xe1, 0x1b, 0x10, 0x89, 0x55, 0x10, 0x8b, 0x44, 0x24, 0xc, 0x83, 0xc4, 0x1c, 0x5d, 0x5f, 0x5e, 0xc3, 0x89, 0xc1, 0x8b, 0x75, 0x20, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0x8b, 0x44, 0x24, 0x8, 0x8b, 0x4d, 0x20, 0x8b, 0x75, 0x10, 0x1, 0xc1, 0x29, 0xc6, 0x89, 0x4d, 0x20, 0x89, 0x75, 0x10, 0x8b, 0x44, 0x24, 0xc, 0x83, 0xc4, 0x1c, 0x5d, 0x5f, 0x5e, 0xc3, 0x8b, 0x41, 0x10, 0x85, 0xc0, 0xf, 0x86, 0x7f, 0xfe, 0xff, 0xff, 0xf7, 0x74, 0x24, 0x4, 0x8b, 0xc, 0x24, 0x89, 0x44, 0x24, 0xc, 0x39, 0xc8, 0x76, 0x4, 0x89, 0x4c, 0x24, 0xc, 0x8b, 0x74, 0x24, 0xc, 0x85, 0xf6, 0xf, 0x86, 0x60, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0, 0x8b, 0x55, 0x18, 0x31, 0xdb, 0x8b, 0x40, 0x4, 0xe8, 0x94, 0x37, 0, 0, 0x85, 0xc0, 0xf, 0x85, 0x48, 0xfe, 0xff, 0xff, 0x83, 0x3d, 0xdc, 0xe1, 0x1b, 0x10, 0, 0xf, 0x84, 0xbe, 0, 0, 0, 0x8b, 0x4, 0x24, 0x89, 0xfe, 0x8b, 0x7c, 0x24, 0x4, 0xf, 0xaf, 0xf8, 0x8b, 0x15, 0xd4, 0xe1, 0x1b, 0x10, 0xa1, 0xd8, 0xe1, 0x1b, 0x10, 0x29, 0xd0, 0x39, 0xc7, 0x7c, 0x39, 0xba, 0x1, 0, 0, 0, 0x8b, 0x4d, 0, 0x89, 0xc3, 0x89, 0xf0, 0x8b, 0x49, 0x4, 0xe8, 0x4a, 0x38, 0, 0, 0x8b, 0x54, 0x24, 0xc, 0x1, 0xc6, 0x31, 0xdb, 0x29, 0xc7, 0x89, 0x1d, 0xd4, 0xe1, 0x1b, 0x10, 0x1, 0xc2, 0xff, 0x15, 0xdc, 0xe1, 0x1b, 0x10, 0xa1, 0xd8, 0xe1, 0x1b, 0x10, 0x89, 0x54, 0x24, 0xc, 0x39, 0xc7, 0x7d, 0xc7, 0x85, 0xff, 0x74, 0x2c, 0xba, 0x1, 0, 0, 0, 0x8b, 0x4d, 0, 0x89, 0xfb, 0x89, 0xf0, 0x8b, 0x49, 0x4, 0xe8, 0xd, 0x38, 0, 0, 0x8b, 0x4c, 0x24, 0xc, 0x8b, 0x35, 0xd4, 0xe1, 0x1b, 0x10, 0x1, 0xc1, 0x1, 0xfe, 0x89, 0x4c, 0x24, 0xc, 0x89, 0x35, 0xd4, 0xe1, 0x1b, 0x10, 0x8b, 0x45, 0, 0x8b, 0x40, 0x4, 0x8b, 0x7c, 0x24, 0x4, 0xe8, 0xc1, 0x39, 0, 0, 0x89, 0x45, 0x18, 0x8b, 0x44, 0x24, 0xc, 0xf, 0xaf, 0xc7, 0x8b, 0x55, 0x10, 0x29, 0xc2, 0x8b, 0x44, 0x24, 0xc, 0x89, 0x55, 0x10, 0x31, 0xd2, 0xf7, 0xf7, 0x89, 0x44, 0x24, 0xc, 0x8b, 0x44, 0x24, 0xc, 0x83, 0xc4, 0x1c, 0x5d, 0x5f, 0x5e, 0xc3, 0x8b, 0x54, 0x24, 0x4, 0x8b, 0x4d, 0, 0x89, 0xf3, 0x89, 0xf8, 0x8b, 0x49, 0x4, 0xe8, 0xaa, 0x37, 0, 0, 0x8b, 0x5c, 0x24, 0x4, 0x89, 0xc2, 0xf, 0xaf, 0xd3, 0x89, 0x44, 0x24, 0xc, 0x8b, 0x45, 0, 0x8b, 0x40, 0x4, 0xe8, 0x6d, 0x39, 0, 0, 0x8b, 0x4d, 0x10, 0x89, 0x45, 0x18, 0x29, 0xd1, 0x89, 0x4d, 0x10, 0x8b, 0x44, 0x24, 0xc, 0x83, 0xc4, 0x1c, 0x5d, 0x5f, 0x5e, 0xc3, 0x8b, 0x59, 0x10, 0x85, 0xdb, 0xf, 0x86, 0x31, 0xfd, 0xff, 0xff, 0x8b, 0x4c, 0x24, 0x4, 0x89, 0xd8, 0xf7, 0xf1, 0x8b, 0x34, 0x24, 0x89, 0x44, 0x24, 0xc, 0x39, 0xf0, 0x76, 0x4, 0x89, 0x74, 0x24, 0xc, 0x8b, 0x44, 0x24, 0xc, 0x85, 0xc0, 0xf, 0x86, 0xe, 0xfd, 0xff, 0xff, 0x8b, 0x4c, 0x24, 0x4, 0x89, 0xc2, 0xf, 0xaf, 0xd1, 0x8b, 0x35, 0xdc, 0xe1, 0x1b, 0x10, 0x89, 0xfb, 0x85, 0xf6, 0xf, 0x84, 0x48, 0x1, 0, 0, 0x8b, 0x35, 0xd8, 0xe1, 0x1b, 0x10, 0x2b, 0x35, 0xd4, 0xe1, 0x1b, 0x10, 0x39, 0xf2, 0xf, 0x82, 0x8c, 0, 0, 0, 0x89, 0xe8, 0xe8, 0x6a, 0x23, 0, 0, 0x8b, 0x45, 0x1c, 0x8b, 0x4d, 0x20, 0x5, 0, 0x40, 0, 0, 0x29, 0xc8, 0x39, 0xc6, 0x73, 0x6, 0x89, 0x74, 0x24, 0x14, 0xeb, 0x4, 0x89, 0x44, 0x24, 0x14, 0x8b, 0x4c, 0x24, 0x14, 0x89, 0xdf, 0x8b, 0x75, 0x20, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0x8b, 0x44, 0x24, 0x14, 0x8b, 0x3d, 0xd8, 0xe1, 0x1b, 0x10, 0x8b, 0x75, 0x20, 0x8b, 0x4d, 0x10, 0x1, 0xc6, 0x1, 0xc3, 0x29, 0xc2, 0x89, 0x75, 0x20, 0x8b, 0x35, 0xd4, 0xe1, 0x1b, 0x10, 0x29, 0xc1, 0x1, 0xc6, 0x89, 0x4d, 0x10, 0x89, 0x35, 0xd4, 0xe1, 0x1b, 0x10, 0x39, 0xfe, 0x72, 0xd, 0x31, 0xc0, 0xa3, 0xd4, 0xe1, 0x1b, 0x10, 0xff, 0x15, 0xdc, 0xe1, 0x1b, 0x10, 0x8b, 0x35, 0xd8, 0xe1, 0x1b, 0x10, 0x2b, 0x35, 0xd4, 0xe1, 0x1b, 0x10, 0x39, 0xf2, 0xf, 0x83, 0x74, 0xff, 0xff, 0xff, 0x85, 0xd2, 0xf, 0x84, 0x4d, 0xfc, 0xff, 0xff, 0x85, 0xd2, 0xf, 0x84, 0x45, 0xfc, 0xff, 0xff, 0x89, 0xe8, 0xe8, 0xce, 0x22, 0, 0, 0x8b, 0x45, 0x1c, 0x8b, 0x4d, 0x20, 0x5, 0, 0x40, 0, 0, 0x29, 0xc8, 0x39, 0xc2, 0x73, 0x6, 0x89, 0x54, 0x24, 0x18, 0xeb, 0x4, 0x89, 0x44, 0x24, 0x18, 0x8b, 0x4c, 0x24, 0x18, 0x89, 0xdf, 0x8b, 0x75, 0x20, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0x8b, 0x44, 0x24, 0x18, 0x8b, 0xd, 0xd4, 0xe1, 0x1b, 0x10, 0x8b, 0x75, 0x20, 0x8b, 0x7d, 0x10, 0x1, 0xc6, 0x1, 0xc3, 0x1, 0xc1, 0x29, 0xc2, 0x29, 0xc7, 0x89, 0x75, 0x20, 0x89, 0xd, 0xd4, 0xe1, 0x1b, 0x10, 0x89, 0x7d, 0x10, 0xeb, 0x95, 0x89, 0x44, 0x24, 0x10, 0x8b, 0x4c, 0x24, 0x10, 0x89, 0xdf, 0x8b, 0x75, 0x20, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0x8b, 0x44, 0x24, 0x10, 0x8b, 0x7d, 0x20, 0x8b, 0x75, 0x10, 0x1, 0xc7, 0x1, 0xc3, 0x29, 0xc6, 0x89, 0x7d, 0x20, 0x29, 0xc2, 0x89, 0x75, 0x10, 0x85, 0xd2, 0xf, 0x84, 0xa5, 0xfb, 0xff, 0xff, 0x89, 0xe8, 0xe8, 0x2e, 0x22, 0, 0, 0x8b, 0x45, 0x1c, 0x8b, 0x75, 0x20, 0x5, 0, 0x40, 0, 0, 0x29, 0xf0, 0x39, 0xc2, 0x73, 0xab, 0x89, 0x54, 0x24, 0x10, 0xeb, 0xa9})
//void func_0x1016ea6c()
//{
//    FUNC_START_V2(0x1016ea6c, 0x20);    // Похожа на fread но не она.  ebx * edx - count of readed bytes,  ecx - FILE*???, eax - ptr
//    II(0x1016ea6c, 0x1)    pushd(esi);                            /* push esi */
//    II(0x1016ea6d, 0x1)    pushd(edi);                            /* push edi */
//    II(0x1016ea6e, 0x1)    pushd(ebp);                            /* push ebp */
//    II(0x1016ea6f, 0x3)    sub(esp, 0x1c);                        /* sub esp, 0x1c */
//    II(0x1016ea72, 0x2)    mov(edi, eax);                         /* mov edi, eax */
//    II(0x1016ea74, 0x4)    mov(memd_a32(ss, esp + 0x4), edx);     /* mov [esp+0x4], edx */
//    II(0x1016ea78, 0x3)    mov(memd_a32(ss, esp), ebx);           /* mov [esp], ebx */
//    II(0x1016ea7b, 0x2)    mov(ebp, ecx);                         /* mov ebp, ecx */
//    II(0x1016ea7d, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
//    II(0x1016ea7f, 0x4)    mov(memd_a32(ss, esp + 0xc), edx);     /* mov [esp+0xc], edx */
//    II(0x1016ea83, 0x2)    test(ecx, ecx);                        /* test ecx, ecx */
//    II(0x1016ea85, 0x6)    jzd(0x1016eb2c, 0xa1);                 /* jz dword 0x1016eb2c */
//    II(0x1016ea8b, 0x4)    test(memb_a32(ds, ecx + 0x4), 0x4);    /* test byte [ecx+0x4], 0x4 */
//    II(0x1016ea8f, 0x6)    jzd(0x1016eb54, 0xbf);                 /* jz dword 0x1016eb54 */
//    II(0x1016ea95, 0x7)    cmp(memd_a32(ds, 0x101be1dc), 0);      /* cmp dword [0x101be1dc], 0x0 */
//    II(0x1016ea9c, 0x6)    jzd(0x1016eb37, 0x95);                 /* jz dword 0x1016eb37 */
//    II(0x1016eaa2, 0x2)    mov(esi, edi);                         /* mov esi, edi */
//    II(0x1016eaa4, 0x4)    mov(edi, memd_a32(ss, esp + 0x4));     /* mov edi, [esp+0x4] */
//    II(0x1016eaa8, 0x3)    imul(edi, ebx);                        /* imul edi, ebx */
//    II(0x1016eaab, 0x5)    mov(eax, memd_a32(ds, 0x101be1d8));    /* mov eax, [0x101be1d8] */
//    II(0x1016eab0, 0x6)    sub(eax, memd_a32(ds, 0x101be1d4));    /* sub eax, [0x101be1d4] */
//    II(0x1016eab6, 0x2)    cmp(edi, eax);                         /* cmp edi, eax */
//    II(0x1016eab8, 0x2)    jld(0x1016eaef, 0x35);                 /* jl 0x1016eaef */
//l_0x1016eaba:
//    II(0x1016eaba, 0x5)    mov(edx, 0x1);                         /* mov edx, 0x1 */
//    II(0x1016eabf, 0x2)    mov(ebx, eax);                         /* mov ebx, eax */
//    II(0x1016eac1, 0x3)    mov(ecx, memd_a32(ss, ebp + 0xc));     /* mov ecx, [ebp+0xc] */
//    II(0x1016eac4, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x1016eac6, 0x5)    calld(fread, 0x3aa1);             /* call fread */    // fread.
//    II(0x1016eacb, 0x4)    mov(ecx, memd_a32(ss, esp + 0xc));     /* mov ecx, [esp+0xc] */
//    II(0x1016eacf, 0x2)    add(esi, eax);                         /* add esi, eax */
//    II(0x1016ead1, 0x2)    sub(edi, eax);                         /* sub edi, eax */
//    II(0x1016ead3, 0x2)    add(ecx, eax);                         /* add ecx, eax */
//    II(0x1016ead5, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
//    II(0x1016ead7, 0x5)    mov(memd_a32(ds, 0x101be1d4), eax);    /* mov [0x101be1d4], eax */
//    II(0x1016eadc, 0x6)    calld_abs(memd_a32(ds, 0x101be1dc));   /* call dword near [0x101be1dc] */
//    II(0x1016eae2, 0x5)    mov(eax, memd_a32(ds, 0x101be1d8));    /* mov eax, [0x101be1d8] */
//    II(0x1016eae7, 0x4)    mov(memd_a32(ss, esp + 0xc), ecx);     /* mov [esp+0xc], ecx */
//    II(0x1016eaeb, 0x2)    cmp(edi, eax);                         /* cmp edi, eax */
//    II(0x1016eaed, 0x2)    jged(0x1016eaba, -0x35);               /* jge 0x1016eaba */
//l_0x1016eaef:
//    II(0x1016eaef, 0x2)    test(edi, edi);                        /* test edi, edi */
//    II(0x1016eaf1, 0x2)    jzd(0x1016eb1c, 0x29);                 /* jz 0x1016eb1c */
//    II(0x1016eaf3, 0x5)    mov(edx, 0x1);                         /* mov edx, 0x1 */
//    II(0x1016eaf8, 0x2)    mov(ebx, edi);                         /* mov ebx, edi */
//    II(0x1016eafa, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x1016eafc, 0x3)    mov(ecx, memd_a32(ss, ebp + 0xc));     /* mov ecx, [ebp+0xc] */
//    II(0x1016eaff, 0x5)    calld(fread, 0x3a68);             /* call fread */        // fread.
//    II(0x1016eb04, 0x4)    mov(edx, memd_a32(ss, esp + 0xc));     /* mov edx, [esp+0xc] */
//    II(0x1016eb08, 0x6)    mov(ebx, memd_a32(ds, 0x101be1d4));    /* mov ebx, [0x101be1d4] */
//    II(0x1016eb0e, 0x2)    add(edx, eax);                         /* add edx, eax */
//    II(0x1016eb10, 0x2)    add(ebx, edi);                         /* add ebx, edi */
//    II(0x1016eb12, 0x4)    mov(memd_a32(ss, esp + 0xc), edx);     /* mov [esp+0xc], edx */
//    II(0x1016eb16, 0x6)    mov(memd_a32(ds, 0x101be1d4), ebx);    /* mov [0x101be1d4], ebx */
//l_0x1016eb1c:
//    II(0x1016eb1c, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016eb20, 0x4)    mov(ecx, memd_a32(ss, esp + 0x4));     /* mov ecx, [esp+0x4] */
//    II(0x1016eb24, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
//    II(0x1016eb26, 0x2)    div(ecx);                              /* div ecx */
//    II(0x1016eb28, 0x4)    mov(memd_a32(ss, esp + 0xc), eax);     /* mov [esp+0xc], eax */
//l_0x1016eb2c:
//    II(0x1016eb2c, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016eb30, 0x3)    add(esp, 0x1c);                        /* add esp, 0x1c */
//    II(0x1016eb33, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016eb34, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016eb35, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016eb36, 0x1)    retd();                                /* ret  */
//l_0x1016eb37:
//    II(0x1016eb37, 0x4)    mov(edx, memd_a32(ss, esp + 0x4));     /* mov edx, [esp+0x4] */
//    II(0x1016eb3b, 0x2)    mov(eax, edi);                         /* mov eax, edi */
//    II(0x1016eb3d, 0x3)    mov(ecx, memd_a32(ds, ecx + 0xc));     /* mov ecx, [ecx+0xc] */
//    II(0x1016eb40, 0x5)    calld(fread, 0x3a27);             /* call fread */    // fread.
//    II(0x1016eb45, 0x4)    mov(memd_a32(ss, esp + 0xc), eax);     /* mov [esp+0xc], eax */
////    II(0x1016eb49, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016eb4d, 0x3)    add(esp, 0x1c);                        /* add esp, 0x1c */
//    II(0x1016eb50, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016eb51, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016eb52, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016eb53, 0x1)    retd();                                /* ret  */
//l_0x1016eb54:
//    II(0x1016eb54, 0x2)    test(edi, edi);                        /* test edi, edi */
//    II(0x1016eb56, 0x2)    jzd(0x1016eb2c, -0x2c);                /* jz 0x1016eb2c */
//    II(0x1016eb58, 0x3)    mov(eax, memd_a32(ds, ecx + 0x4));     /* mov eax, [ecx+0x4] */
//    II(0x1016eb5b, 0x5)    and_(eax, 0xf0);                       /* and eax, 0xf0 */
//    II(0x1016eb60, 0x3)    cmp(eax, 0x20);                        /* cmp eax, 0x20 */
//    II(0x1016eb63, 0x2)    jbd(0x1016eb7f, 0x1a);                 /* jb 0x1016eb7f */
//    II(0x1016eb65, 0x6)    jbed(0x1016eca2, 0x137);               /* jbe dword 0x1016eca2 */
//    II(0x1016eb6b, 0x3)    cmp(eax, 0x40);                        /* cmp eax, 0x40 */
//    II(0x1016eb6e, 0x6)    jzd(0x1016edf0, 0x27c);                /* jz dword 0x1016edf0 */
//    II(0x1016eb74, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016eb78, 0x3)    add(esp, 0x1c);                        /* add esp, 0x1c */
//    II(0x1016eb7b, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016eb7c, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016eb7d, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016eb7e, 0x1)    retd();                                /* ret  */
//l_0x1016eb7f:
//    II(0x1016eb7f, 0x3)    cmp(eax, 0x10);                        /* cmp eax, 0x10 */
//    II(0x1016eb82, 0x2)    jnzd(0x1016eb2c, -0x58);               /* jnz 0x1016eb2c */
//    II(0x1016eb84, 0x3)    mov(ebx, memd_a32(ds, ecx + 0x10));    /* mov ebx, [ecx+0x10] */
//    II(0x1016eb87, 0x2)    test(ebx, ebx);                        /* test ebx, ebx */
//    II(0x1016eb89, 0x2)    jbed(0x1016eb2c, -0x5f);               /* jbe 0x1016eb2c */
//    II(0x1016eb8b, 0x4)    mov(ecx, memd_a32(ss, esp + 0x4));     /* mov ecx, [esp+0x4] */
//    II(0x1016eb8f, 0x2)    mov(eax, ebx);                         /* mov eax, ebx */
//    II(0x1016eb91, 0x2)    div(ecx);                              /* div ecx */
//    II(0x1016eb93, 0x3)    mov(esi, memd_a32(ss, esp));           /* mov esi, [esp] */
//    II(0x1016eb96, 0x4)    mov(memd_a32(ss, esp + 0xc), eax);     /* mov [esp+0xc], eax */
//    II(0x1016eb9a, 0x2)    cmp(eax, esi);                         /* cmp eax, esi */
//    II(0x1016eb9c, 0x2)    jbed(0x1016eba2, 0x4);                 /* jbe 0x1016eba2 */
//    II(0x1016eb9e, 0x4)    mov(memd_a32(ss, esp + 0xc), esi);     /* mov [esp+0xc], esi */
//l_0x1016eba2:
//    II(0x1016eba2, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016eba6, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016eba8, 0x2)    jbed(0x1016eb2c, -0x7e);               /* jbe 0x1016eb2c */
//    II(0x1016ebaa, 0x5)    imul(eax, memd_a32(ss, esp + 0x4));    /* imul eax, [esp+0x4] */
//    II(0x1016ebaf, 0x6)    mov(ebx, memd_a32(ds, 0x101be1dc));    /* mov ebx, [0x101be1dc] */
//    II(0x1016ebb5, 0x4)    mov(memd_a32(ss, esp + 0x8), eax);     /* mov [esp+0x8], eax */
//    II(0x1016ebb9, 0x2)    test(ebx, ebx);                        /* test ebx, ebx */
//    II(0x1016ebbb, 0x6)    jzd(0x1016ec6e, 0xad);                 /* jz dword 0x1016ec6e */
//    II(0x1016ebc1, 0x6)    mov(edx, memd_a32(ds, 0x101be1d8));    /* mov edx, [0x101be1d8] */
//    II(0x1016ebc7, 0x2)    mov(ebx, edi);                         /* mov ebx, edi */
//    II(0x1016ebc9, 0x6)    sub(edx, memd_a32(ds, 0x101be1d4));    /* sub edx, [0x101be1d4] */
//    II(0x1016ebcf, 0x2)    cmp(edx, eax);                         /* cmp edx, eax */
//    II(0x1016ebd1, 0x2)    jad(0x1016ec1d, 0x4a);                 /* ja 0x1016ec1d */
//l_0x1016ebd3:
//    II(0x1016ebd3, 0x2)    mov(ecx, edx);                         /* mov ecx, edx */
//    II(0x1016ebd5, 0x2)    mov(edi, ebx);                         /* mov edi, ebx */
//    II(0x1016ebd7, 0x3)    mov(esi, memd_a32(ss, ebp + 0x20));    /* mov esi, [ebp+0x20] */
//    II(0x1016ebda, 0x1)    pushd(edi);                            /* push edi */
//    II(0x1016ebdb, 0x2)    mov(eax, ecx);                         /* mov eax, ecx */
//    II(0x1016ebdd, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
//    II(0x1016ebe0, 0x2)    repne_a32 movsd_a32();                 /* repne movsd  */
//    II(0x1016ebe2, 0x2)    mov(cl, al);                           /* mov cl, al */
//    II(0x1016ebe4, 0x3)    and_(cl, 0x3);                         /* and cl, 0x3 */
//    II(0x1016ebe7, 0x2)    repne_a32 movsb_a32();                 /* repne movsb  */
//    II(0x1016ebe9, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ebea, 0x4)    mov(edi, memd_a32(ss, esp + 0x8));     /* mov edi, [esp+0x8] */
//    II(0x1016ebee, 0x3)    mov(ecx, memd_a32(ss, ebp + 0x20));    /* mov ecx, [ebp+0x20] */
//    II(0x1016ebf1, 0x3)    mov(esi, memd_a32(ss, ebp + 0x10));    /* mov esi, [ebp+0x10] */
//    II(0x1016ebf4, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
//    II(0x1016ebf6, 0x2)    add(ebx, edx);                         /* add ebx, edx */
//    II(0x1016ebf8, 0x5)    mov(memd_a32(ds, 0x101be1d4), eax);    /* mov [0x101be1d4], eax */
//    II(0x1016ebfd, 0x2)    add(ecx, edx);                         /* add ecx, edx */
//    II(0x1016ebff, 0x2)    sub(esi, edx);                         /* sub esi, edx */
//    II(0x1016ec01, 0x3)    mov(memd_a32(ss, ebp + 0x20), ecx);    /* mov [ebp+0x20], ecx */
//    II(0x1016ec04, 0x2)    sub(edi, edx);                         /* sub edi, edx */
//    II(0x1016ec06, 0x3)    mov(memd_a32(ss, ebp + 0x10), esi);    /* mov [ebp+0x10], esi */
//    II(0x1016ec09, 0x6)    calld_abs(memd_a32(ds, 0x101be1dc));   /* call dword near [0x101be1dc] */
//    II(0x1016ec0f, 0x6)    mov(edx, memd_a32(ds, 0x101be1d8));    /* mov edx, [0x101be1d8] */
//    II(0x1016ec15, 0x4)    mov(memd_a32(ss, esp + 0x8), edi);     /* mov [esp+0x8], edi */
//    II(0x1016ec19, 0x2)    cmp(edx, edi);                         /* cmp edx, edi */
//    II(0x1016ec1b, 0x2)    jbed(0x1016ebd3, -0x4a);               /* jbe 0x1016ebd3 */
//l_0x1016ec1d:
//    II(0x1016ec1d, 0x5)    cmp(memd_a32(ss, esp + 0x8), 0);       /* cmp dword [esp+0x8], 0x0 */
//    II(0x1016ec22, 0x6)    jzd(0x1016eb2c, -0xfc);                /* jz dword 0x1016eb2c */
//    II(0x1016ec28, 0x4)    mov(ecx, memd_a32(ss, esp + 0x8));     /* mov ecx, [esp+0x8] */
//    II(0x1016ec2c, 0x2)    mov(edi, ebx);                         /* mov edi, ebx */
//    II(0x1016ec2e, 0x3)    mov(esi, memd_a32(ss, ebp + 0x20));    /* mov esi, [ebp+0x20] */
//    II(0x1016ec31, 0x1)    pushd(edi);                            /* push edi */
//    II(0x1016ec32, 0x2)    mov(eax, ecx);                         /* mov eax, ecx */
//    II(0x1016ec34, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
//    II(0x1016ec37, 0x2)    repne_a32 movsd_a32();                 /* repne movsd  */
//    II(0x1016ec39, 0x2)    mov(cl, al);                           /* mov cl, al */
//    II(0x1016ec3b, 0x3)    and_(cl, 0x3);                         /* and cl, 0x3 */
//    II(0x1016ec3e, 0x2)    repne_a32 movsb_a32();                 /* repne movsb  */
//    II(0x1016ec40, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ec41, 0x4)    mov(eax, memd_a32(ss, esp + 0x8));     /* mov eax, [esp+0x8] */
//    II(0x1016ec45, 0x6)    mov(ebx, memd_a32(ds, 0x101be1d4));    /* mov ebx, [0x101be1d4] */
//    II(0x1016ec4b, 0x3)    mov(edi, memd_a32(ss, ebp + 0x20));    /* mov edi, [ebp+0x20] */
//    II(0x1016ec4e, 0x3)    mov(edx, memd_a32(ss, ebp + 0x10));    /* mov edx, [ebp+0x10] */
//    II(0x1016ec51, 0x2)    add(edi, eax);                         /* add edi, eax */
//    II(0x1016ec53, 0x2)    sub(edx, eax);                         /* sub edx, eax */
//    II(0x1016ec55, 0x2)    add(ebx, eax);                         /* add ebx, eax */
//    II(0x1016ec57, 0x3)    mov(memd_a32(ss, ebp + 0x20), edi);    /* mov [ebp+0x20], edi */
//    II(0x1016ec5a, 0x6)    mov(memd_a32(ds, 0x101be1d4), ebx);    /* mov [0x101be1d4], ebx */
//    II(0x1016ec60, 0x3)    mov(memd_a32(ss, ebp + 0x10), edx);    /* mov [ebp+0x10], edx */
//    II(0x1016ec63, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016ec67, 0x3)    add(esp, 0x1c);                        /* add esp, 0x1c */
//    II(0x1016ec6a, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016ec6b, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ec6c, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016ec6d, 0x1)    retd();                                /* ret  */
//l_0x1016ec6e:
//    II(0x1016ec6e, 0x2)    mov(ecx, eax);                         /* mov ecx, eax */
//    II(0x1016ec70, 0x3)    mov(esi, memd_a32(ss, ebp + 0x20));    /* mov esi, [ebp+0x20] */
//    II(0x1016ec73, 0x1)    pushd(edi);                            /* push edi */
//    II(0x1016ec74, 0x2)    mov(eax, ecx);                         /* mov eax, ecx */
//    II(0x1016ec76, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
//    II(0x1016ec79, 0x2)    repne_a32 movsd_a32();                 /* repne movsd  */
//    II(0x1016ec7b, 0x2)    mov(cl, al);                           /* mov cl, al */
//    II(0x1016ec7d, 0x3)    and_(cl, 0x3);                         /* and cl, 0x3 */
//    II(0x1016ec80, 0x2)    repne_a32 movsb_a32();                 /* repne movsb  */
//    II(0x1016ec82, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ec83, 0x4)    mov(eax, memd_a32(ss, esp + 0x8));     /* mov eax, [esp+0x8] */
//    II(0x1016ec87, 0x3)    mov(ecx, memd_a32(ss, ebp + 0x20));    /* mov ecx, [ebp+0x20] */
//    II(0x1016ec8a, 0x3)    mov(esi, memd_a32(ss, ebp + 0x10));    /* mov esi, [ebp+0x10] */
//    II(0x1016ec8d, 0x2)    add(ecx, eax);                         /* add ecx, eax */
//    II(0x1016ec8f, 0x2)    sub(esi, eax);                         /* sub esi, eax */
//    II(0x1016ec91, 0x3)    mov(memd_a32(ss, ebp + 0x20), ecx);    /* mov [ebp+0x20], ecx */
//    II(0x1016ec94, 0x3)    mov(memd_a32(ss, ebp + 0x10), esi);    /* mov [ebp+0x10], esi */
//    II(0x1016ec97, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016ec9b, 0x3)    add(esp, 0x1c);                        /* add esp, 0x1c */
//    II(0x1016ec9e, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016ec9f, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016eca0, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016eca1, 0x1)    retd();                                /* ret  */
//l_0x1016eca2:
//    II(0x1016eca2, 0x3)    mov(eax, memd_a32(ds, ecx + 0x10));    /* mov eax, [ecx+0x10] */
//    II(0x1016eca5, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016eca7, 0x6)    jbed(0x1016eb2c, -0x181);              /* jbe dword 0x1016eb2c */
//    II(0x1016ecad, 0x4)    div(memd_a32(ss, esp + 0x4));          /* div dword [esp+0x4] */
//    II(0x1016ecb1, 0x3)    mov(ecx, memd_a32(ss, esp));           /* mov ecx, [esp] */
//    II(0x1016ecb4, 0x4)    mov(memd_a32(ss, esp + 0xc), eax);     /* mov [esp+0xc], eax */
//    II(0x1016ecb8, 0x2)    cmp(eax, ecx);                         /* cmp eax, ecx */
//    II(0x1016ecba, 0x2)    jbed(0x1016ecc0, 0x4);                 /* jbe 0x1016ecc0 */
//    II(0x1016ecbc, 0x4)    mov(memd_a32(ss, esp + 0xc), ecx);     /* mov [esp+0xc], ecx */
//l_0x1016ecc0:
//    II(0x1016ecc0, 0x4)    mov(esi, memd_a32(ss, esp + 0xc));     /* mov esi, [esp+0xc] */
//    II(0x1016ecc4, 0x2)    test(esi, esi);                        /* test esi, esi */
//    II(0x1016ecc6, 0x6)    jbed(0x1016eb2c, -0x1a0);              /* jbe dword 0x1016eb2c */
//    II(0x1016eccc, 0x3)    mov(eax, memd_a32(ss, ebp + 0));       /* mov eax, [ebp+0x0] */
//    II(0x1016eccf, 0x3)    mov(edx, memd_a32(ss, ebp + 0x18));    /* mov edx, [ebp+0x18] */
//    II(0x1016ecd2, 0x2)    xor_(ebx, ebx);                        /* xor ebx, ebx */
//    II(0x1016ecd4, 0x3)    mov(eax, memd_a32(ds, eax + 0x4));     /* mov eax, [eax+0x4] */
//    II(0x1016ecd7, 0x5)    calld(call_fseek_2, 0x3794);             /* call call_fseek_2 */
//    II(0x1016ecdc, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016ecde, 0x6)    jnzd(0x1016eb2c, -0x1b8);              /* jnz dword 0x1016eb2c */
//    II(0x1016ece4, 0x7)    cmp(memd_a32(ds, 0x101be1dc), 0);      /* cmp dword [0x101be1dc], 0x0 */
//    II(0x1016eceb, 0x6)    jzd(0x1016edaf, 0xbe);                 /* jz dword 0x1016edaf */
//    II(0x1016ecf1, 0x3)    mov(eax, memd_a32(ss, esp));           /* mov eax, [esp] */
//    II(0x1016ecf4, 0x2)    mov(esi, edi);                         /* mov esi, edi */
//    II(0x1016ecf6, 0x4)    mov(edi, memd_a32(ss, esp + 0x4));     /* mov edi, [esp+0x4] */
//    II(0x1016ecfa, 0x3)    imul(edi, eax);                        /* imul edi, eax */
//    II(0x1016ecfd, 0x6)    mov(edx, memd_a32(ds, 0x101be1d4));    /* mov edx, [0x101be1d4] */
//    II(0x1016ed03, 0x5)    mov(eax, memd_a32(ds, 0x101be1d8));    /* mov eax, [0x101be1d8] */
//    II(0x1016ed08, 0x2)    sub(eax, edx);                         /* sub eax, edx */
//    II(0x1016ed0a, 0x2)    cmp(edi, eax);                         /* cmp edi, eax */
//    II(0x1016ed0c, 0x2)    jld(0x1016ed47, 0x39);                 /* jl 0x1016ed47 */
//l_0x1016ed0e:
//    II(0x1016ed0e, 0x5)    mov(edx, 0x1);                         /* mov edx, 0x1 */
//    II(0x1016ed13, 0x3)    mov(ecx, memd_a32(ss, ebp + 0));       /* mov ecx, [ebp+0x0] */
//    II(0x1016ed16, 0x2)    mov(ebx, eax);                         /* mov ebx, eax */
//    II(0x1016ed18, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x1016ed1a, 0x3)    mov(ecx, memd_a32(ds, ecx + 0x4));     /* mov ecx, [ecx+0x4] */
//    II(0x1016ed1d, 0x5)    calld(fread, 0x384a);             /* call fread */    // fread.
//    II(0x1016ed22, 0x4)    mov(edx, memd_a32(ss, esp + 0xc));     /* mov edx, [esp+0xc] */
//    II(0x1016ed26, 0x2)    add(esi, eax);                         /* add esi, eax */
//    II(0x1016ed28, 0x2)    xor_(ebx, ebx);                        /* xor ebx, ebx */
//    II(0x1016ed2a, 0x2)    sub(edi, eax);                         /* sub edi, eax */
//    II(0x1016ed2c, 0x6)    mov(memd_a32(ds, 0x101be1d4), ebx);    /* mov [0x101be1d4], ebx */
//    II(0x1016ed32, 0x2)    add(edx, eax);                         /* add edx, eax */
//    II(0x1016ed34, 0x6)    calld_abs(memd_a32(ds, 0x101be1dc));   /* call dword near [0x101be1dc] */
//    II(0x1016ed3a, 0x5)    mov(eax, memd_a32(ds, 0x101be1d8));    /* mov eax, [0x101be1d8] */
//    II(0x1016ed3f, 0x4)    mov(memd_a32(ss, esp + 0xc), edx);     /* mov [esp+0xc], edx */
//    II(0x1016ed43, 0x2)    cmp(edi, eax);                         /* cmp edi, eax */
//    II(0x1016ed45, 0x2)    jged(0x1016ed0e, -0x39);               /* jge 0x1016ed0e */
//l_0x1016ed47:
//    II(0x1016ed47, 0x2)    test(edi, edi);                        /* test edi, edi */
//    II(0x1016ed49, 0x2)    jzd(0x1016ed77, 0x2c);                 /* jz 0x1016ed77 */
//    II(0x1016ed4b, 0x5)    mov(edx, 0x1);                         /* mov edx, 0x1 */
//    II(0x1016ed50, 0x3)    mov(ecx, memd_a32(ss, ebp + 0));       /* mov ecx, [ebp+0x0] */
//    II(0x1016ed53, 0x2)    mov(ebx, edi);                         /* mov ebx, edi */
//    II(0x1016ed55, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x1016ed57, 0x3)    mov(ecx, memd_a32(ds, ecx + 0x4));     /* mov ecx, [ecx+0x4] */
//    II(0x1016ed5a, 0x5)    calld(fread, 0x380d);             /* call fread */        // fread.
//    II(0x1016ed5f, 0x4)    mov(ecx, memd_a32(ss, esp + 0xc));     /* mov ecx, [esp+0xc] */
//    II(0x1016ed63, 0x6)    mov(esi, memd_a32(ds, 0x101be1d4));    /* mov esi, [0x101be1d4] */
//    II(0x1016ed69, 0x2)    add(ecx, eax);                         /* add ecx, eax */
//    II(0x1016ed6b, 0x2)    add(esi, edi);                         /* add esi, edi */
//    II(0x1016ed6d, 0x4)    mov(memd_a32(ss, esp + 0xc), ecx);     /* mov [esp+0xc], ecx */
//    II(0x1016ed71, 0x6)    mov(memd_a32(ds, 0x101be1d4), esi);    /* mov [0x101be1d4], esi */
//l_0x1016ed77:
//    II(0x1016ed77, 0x3)    mov(eax, memd_a32(ss, ebp + 0));       /* mov eax, [ebp+0x0] */
//    II(0x1016ed7a, 0x3)    mov(eax, memd_a32(ds, eax + 0x4));     /* mov eax, [eax+0x4] */
//    II(0x1016ed7d, 0x4)    mov(edi, memd_a32(ss, esp + 0x4));     /* mov edi, [esp+0x4] */
//    II(0x1016ed81, 0x5)    calld(0x10172747, 0x39c1);             /* call 0x10172747 */
//    II(0x1016ed86, 0x3)    mov(memd_a32(ss, ebp + 0x18), eax);    /* mov [ebp+0x18], eax */
//    II(0x1016ed89, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016ed8d, 0x3)    imul(eax, edi);                        /* imul eax, edi */
//    II(0x1016ed90, 0x3)    mov(edx, memd_a32(ss, ebp + 0x10));    /* mov edx, [ebp+0x10] */
//    II(0x1016ed93, 0x2)    sub(edx, eax);                         /* sub edx, eax */
//    II(0x1016ed95, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016ed99, 0x3)    mov(memd_a32(ss, ebp + 0x10), edx);    /* mov [ebp+0x10], edx */
//    II(0x1016ed9c, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
//    II(0x1016ed9e, 0x2)    div(edi);                              /* div edi */
//    II(0x1016eda0, 0x4)    mov(memd_a32(ss, esp + 0xc), eax);     /* mov [esp+0xc], eax */
//    II(0x1016eda4, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016eda8, 0x3)    add(esp, 0x1c);                        /* add esp, 0x1c */
//    II(0x1016edab, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016edac, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016edad, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016edae, 0x1)    retd();                                /* ret  */
//l_0x1016edaf:
//    II(0x1016edaf, 0x4)    mov(edx, memd_a32(ss, esp + 0x4));     /* mov edx, [esp+0x4] */
//    II(0x1016edb3, 0x3)    mov(ecx, memd_a32(ss, ebp + 0));       /* mov ecx, [ebp+0x0] */
//    II(0x1016edb6, 0x2)    mov(ebx, esi);                         /* mov ebx, esi */
//    II(0x1016edb8, 0x2)    mov(eax, edi);                         /* mov eax, edi */
//    II(0x1016edba, 0x3)    mov(ecx, memd_a32(ds, ecx + 0x4));     /* mov ecx, [ecx+0x4] */
//    II(0x1016edbd, 0x5)    calld(fread, 0x37aa);             /* call fread */        // fread
//    II(0x1016edc2, 0x4)    mov(ebx, memd_a32(ss, esp + 0x4));     /* mov ebx, [esp+0x4] */
//    II(0x1016edc6, 0x2)    mov(edx, eax);                         /* mov edx, eax */
//    II(0x1016edc8, 0x3)    imul(edx, ebx);                        /* imul edx, ebx */
//    II(0x1016edcb, 0x4)    mov(memd_a32(ss, esp + 0xc), eax);     /* mov [esp+0xc], eax */
//    II(0x1016edcf, 0x3)    mov(eax, memd_a32(ss, ebp + 0));       /* mov eax, [ebp+0x0] */
//    II(0x1016edd2, 0x3)    mov(eax, memd_a32(ds, eax + 0x4));     /* mov eax, [eax+0x4] */
//    II(0x1016edd5, 0x5)    calld(0x10172747, 0x396d);             /* call 0x10172747 */
//    II(0x1016edda, 0x3)    mov(ecx, memd_a32(ss, ebp + 0x10));    /* mov ecx, [ebp+0x10] */
//    II(0x1016eddd, 0x3)    mov(memd_a32(ss, ebp + 0x18), eax);    /* mov [ebp+0x18], eax */
//    II(0x1016ede0, 0x2)    sub(ecx, edx);                         /* sub ecx, edx */
//    II(0x1016ede2, 0x3)    mov(memd_a32(ss, ebp + 0x10), ecx);    /* mov [ebp+0x10], ecx */
//    II(0x1016ede5, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016ede9, 0x3)    add(esp, 0x1c);                        /* add esp, 0x1c */
//    II(0x1016edec, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x1016eded, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016edee, 0x1)    popd(esi);                             /* pop esi */
//    II(0x1016edef, 0x1)    retd();                                /* ret  */
//l_0x1016edf0:
//    II(0x1016edf0, 0x3)    mov(ebx, memd_a32(ds, ecx + 0x10));    /* mov ebx, [ecx+0x10] */
//    II(0x1016edf3, 0x2)    test(ebx, ebx);                        /* test ebx, ebx */
//    II(0x1016edf5, 0x6)    jbed(0x1016eb2c, -0x2cf);              /* jbe dword 0x1016eb2c */
//    II(0x1016edfb, 0x4)    mov(ecx, memd_a32(ss, esp + 0x4));     /* mov ecx, [esp+0x4] */
//    II(0x1016edff, 0x2)    mov(eax, ebx);                         /* mov eax, ebx */
//    II(0x1016ee01, 0x2)    div(ecx);                              /* div ecx */
//    II(0x1016ee03, 0x3)    mov(esi, memd_a32(ss, esp));           /* mov esi, [esp] */
//    II(0x1016ee06, 0x4)    mov(memd_a32(ss, esp + 0xc), eax);     /* mov [esp+0xc], eax */
//    II(0x1016ee0a, 0x2)    cmp(eax, esi);                         /* cmp eax, esi */
//    II(0x1016ee0c, 0x2)    jbed(0x1016ee12, 0x4);                 /* jbe 0x1016ee12 */
//    II(0x1016ee0e, 0x4)    mov(memd_a32(ss, esp + 0xc), esi);     /* mov [esp+0xc], esi */
//l_0x1016ee12:
//    II(0x1016ee12, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x1016ee16, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x1016ee18, 0x6)    jbed(0x1016eb2c, -0x2f2);              /* jbe dword 0x1016eb2c */
//    II(0x1016ee1e, 0x4)    mov(ecx, memd_a32(ss, esp + 0x4));     /* mov ecx, [esp+0x4] */
//    II(0x1016ee22, 0x2)    mov(edx, eax);                         /* mov edx, eax */
//    II(0x1016ee24, 0x3)    imul(edx, ecx);                        /* imul edx, ecx */
//    II(0x1016ee27, 0x6)    mov(esi, memd_a32(ds, 0x101be1dc));    /* mov esi, [0x101be1dc] */
//    II(0x1016ee2d, 0x2)    mov(ebx, edi);                         /* mov ebx, edi */
//    II(0x1016ee2f, 0x2)    test(esi, esi);                        /* test esi, esi */
//    II(0x1016ee31, 0x6)    jzd(0x1016ef7f, 0x148);                /* jz dword 0x1016ef7f */
//    II(0x1016ee37, 0x6)    mov(esi, memd_a32(ds, 0x101be1d8));    /* mov esi, [0x101be1d8] */
//    II(0x1016ee3d, 0x6)    sub(esi, memd_a32(ds, 0x101be1d4));    /* sub esi, [0x101be1d4] */
//    II(0x1016ee43, 0x2)    cmp(edx, esi);                         /* cmp edx, esi */
//    II(0x1016ee45, 0x6)    jbd(0x1016eed7, 0x8c);                 /* jb dword 0x1016eed7 */
//l_0x1016ee4b:
//    II(0x1016ee4b, 0x2)    mov(eax, ebp);                         /* mov eax, ebp */
//    II(0x1016ee4d, 0x5)    calld(0x101711bc, 0x236a);             /* call 0x101711bc */
//    II(0x1016ee52, 0x3)    mov(eax, memd_a32(ss, ebp + 0x1c));    /* mov eax, [ebp+0x1c] */
//    II(0x1016ee55, 0x3)    mov(ecx, memd_a32(ss, ebp + 0x20));    /* mov ecx, [ebp+0x20] */
//    II(0x1016ee58, 0x5)    add(eax, 0x4000);                      /* add eax, 0x4000 */
//    II(0x1016ee5d, 0x2)    sub(eax, ecx);                         /* sub eax, ecx */
//    II(0x1016ee5f, 0x2)    cmp(esi, eax);                         /* cmp esi, eax */
//    II(0x1016ee61, 0x2)    jaed(0x1016ee69, 0x6);                 /* jae 0x1016ee69 */
//    II(0x1016ee63, 0x4)    mov(memd_a32(ss, esp + 0x14), esi);    /* mov [esp+0x14], esi */
//    II(0x1016ee67, 0x2)    jmpd(0x1016ee6d, 0x4);                 /* jmp 0x1016ee6d */
//l_0x1016ee69:
//    II(0x1016ee69, 0x4)    mov(memd_a32(ss, esp + 0x14), eax);    /* mov [esp+0x14], eax */
//l_0x1016ee6d:
//    II(0x1016ee6d, 0x4)    mov(ecx, memd_a32(ss, esp + 0x14));    /* mov ecx, [esp+0x14] */
//    II(0x1016ee71, 0x2)    mov(edi, ebx);                         /* mov edi, ebx */
//    II(0x1016ee73, 0x3)    mov(esi, memd_a32(ss, ebp + 0x20));    /* mov esi, [ebp+0x20] */
//    II(0x1016ee76, 0x1)    pushd(edi);                            /* push edi */
//    II(0x1016ee77, 0x2)    mov(eax, ecx);                         /* mov eax, ecx */
//    II(0x1016ee79, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
//    II(0x1016ee7c, 0x2)    repne_a32 movsd_a32();                 /* repne movsd  */
//    II(0x1016ee7e, 0x2)    mov(cl, al);                           /* mov cl, al */
//    II(0x1016ee80, 0x3)    and_(cl, 0x3);                         /* and cl, 0x3 */
//    II(0x1016ee83, 0x2)    repne_a32 movsb_a32();                 /* repne movsb  */
//    II(0x1016ee85, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ee86, 0x4)    mov(eax, memd_a32(ss, esp + 0x14));    /* mov eax, [esp+0x14] */
//    II(0x1016ee8a, 0x6)    mov(edi, memd_a32(ds, 0x101be1d8));    /* mov edi, [0x101be1d8] */
//    II(0x1016ee90, 0x3)    mov(esi, memd_a32(ss, ebp + 0x20));    /* mov esi, [ebp+0x20] */
//    II(0x1016ee93, 0x3)    mov(ecx, memd_a32(ss, ebp + 0x10));    /* mov ecx, [ebp+0x10] */
//    II(0x1016ee96, 0x2)    add(esi, eax);                         /* add esi, eax */
//    II(0x1016ee98, 0x2)    add(ebx, eax);                         /* add ebx, eax */
//    II(0x1016ee9a, 0x2)    sub(edx, eax);                         /* sub edx, eax */
//    II(0x1016ee9c, 0x3)    mov(memd_a32(ss, ebp + 0x20), esi);    /* mov [ebp+0x20], esi */
//    II(0x1016ee9f, 0x6)    mov(esi, memd_a32(ds, 0x101be1d4));    /* mov esi, [0x101be1d4] */
//    II(0x1016eea5, 0x2)    sub(ecx, eax);                         /* sub ecx, eax */
//    II(0x1016eea7, 0x2)    add(esi, eax);                         /* add esi, eax */
//    II(0x1016eea9, 0x3)    mov(memd_a32(ss, ebp + 0x10), ecx);    /* mov [ebp+0x10], ecx */
//    II(0x1016eeac, 0x6)    mov(memd_a32(ds, 0x101be1d4), esi);    /* mov [0x101be1d4], esi */
//    II(0x1016eeb2, 0x2)    cmp(esi, edi);                         /* cmp esi, edi */
//    II(0x1016eeb4, 0x2)    jbd(0x1016eec3, 0xd);                  /* jb 0x1016eec3 */
//    II(0x1016eeb6, 0x2)    xor_(eax, eax);                        /* xor eax, eax */
//    II(0x1016eeb8, 0x5)    mov(memd_a32(ds, 0x101be1d4), eax);    /* mov [0x101be1d4], eax */
//    II(0x1016eebd, 0x6)    calld_abs(memd_a32(ds, 0x101be1dc));   /* call dword near [0x101be1dc] */
//l_0x1016eec3:
//    II(0x1016eec3, 0x6)    mov(esi, memd_a32(ds, 0x101be1d8));    /* mov esi, [0x101be1d8] */
//    II(0x1016eec9, 0x6)    sub(esi, memd_a32(ds, 0x101be1d4));    /* sub esi, [0x101be1d4] */
//    II(0x1016eecf, 0x2)    cmp(edx, esi);                         /* cmp edx, esi */
//    II(0x1016eed1, 0x6)    jaed(0x1016ee4b, -0x8c);               /* jae dword 0x1016ee4b */
//l_0x1016eed7:
//    II(0x1016eed7, 0x2)    test(edx, edx);                        /* test edx, edx */
//    II(0x1016eed9, 0x6)    jzd(0x1016eb2c, -0x3b3);               /* jz dword 0x1016eb2c */
//l_0x1016eedf:
//    II(0x1016eedf, 0x2)    test(edx, edx);                        /* test edx, edx */
//    II(0x1016eee1, 0x6)    jzd(0x1016eb2c, -0x3bb);               /* jz dword 0x1016eb2c */
//    II(0x1016eee7, 0x2)    mov(eax, ebp);                         /* mov eax, ebp */
//    II(0x1016eee9, 0x5)    calld(0x101711bc, 0x22ce);             /* call 0x101711bc */
//    II(0x1016eeee, 0x3)    mov(eax, memd_a32(ss, ebp + 0x1c));    /* mov eax, [ebp+0x1c] */
//    II(0x1016eef1, 0x3)    mov(ecx, memd_a32(ss, ebp + 0x20));    /* mov ecx, [ebp+0x20] */
//    II(0x1016eef4, 0x5)    add(eax, 0x4000);                      /* add eax, 0x4000 */
//    II(0x1016eef9, 0x2)    sub(eax, ecx);                         /* sub eax, ecx */
//    II(0x1016eefb, 0x2)    cmp(edx, eax);                         /* cmp edx, eax */
//    II(0x1016eefd, 0x2)    jaed(0x1016ef05, 0x6);                 /* jae 0x1016ef05 */
//    II(0x1016eeff, 0x4)    mov(memd_a32(ss, esp + 0x18), edx);    /* mov [esp+0x18], edx */
//    II(0x1016ef03, 0x2)    jmpd(0x1016ef09, 0x4);                 /* jmp 0x1016ef09 */
//l_0x1016ef05:
//    II(0x1016ef05, 0x4)    mov(memd_a32(ss, esp + 0x18), eax);    /* mov [esp+0x18], eax */
//l_0x1016ef09:
//    II(0x1016ef09, 0x4)    mov(ecx, memd_a32(ss, esp + 0x18));    /* mov ecx, [esp+0x18] */
//    II(0x1016ef0d, 0x2)    mov(edi, ebx);                         /* mov edi, ebx */
//    II(0x1016ef0f, 0x3)    mov(esi, memd_a32(ss, ebp + 0x20));    /* mov esi, [ebp+0x20] */
//    II(0x1016ef12, 0x1)    pushd(edi);                            /* push edi */
//    II(0x1016ef13, 0x2)    mov(eax, ecx);                         /* mov eax, ecx */
//    II(0x1016ef15, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
//    II(0x1016ef18, 0x2)    repne_a32 movsd_a32();                 /* repne movsd  */
//    II(0x1016ef1a, 0x2)    mov(cl, al);                           /* mov cl, al */
//    II(0x1016ef1c, 0x3)    and_(cl, 0x3);                         /* and cl, 0x3 */
//    II(0x1016ef1f, 0x2)    repne_a32 movsb_a32();                 /* repne movsb  */
//    II(0x1016ef21, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ef22, 0x4)    mov(eax, memd_a32(ss, esp + 0x18));    /* mov eax, [esp+0x18] */
//    II(0x1016ef26, 0x6)    mov(ecx, memd_a32(ds, 0x101be1d4));    /* mov ecx, [0x101be1d4] */
//    II(0x1016ef2c, 0x3)    mov(esi, memd_a32(ss, ebp + 0x20));    /* mov esi, [ebp+0x20] */
//    II(0x1016ef2f, 0x3)    mov(edi, memd_a32(ss, ebp + 0x10));    /* mov edi, [ebp+0x10] */
//    II(0x1016ef32, 0x2)    add(esi, eax);                         /* add esi, eax */
//    II(0x1016ef34, 0x2)    add(ebx, eax);                         /* add ebx, eax */
//    II(0x1016ef36, 0x2)    add(ecx, eax);                         /* add ecx, eax */
//    II(0x1016ef38, 0x2)    sub(edx, eax);                         /* sub edx, eax */
//    II(0x1016ef3a, 0x2)    sub(edi, eax);                         /* sub edi, eax */
//    II(0x1016ef3c, 0x3)    mov(memd_a32(ss, ebp + 0x20), esi);    /* mov [ebp+0x20], esi */
//    II(0x1016ef3f, 0x6)    mov(memd_a32(ds, 0x101be1d4), ecx);    /* mov [0x101be1d4], ecx */
//    II(0x1016ef45, 0x3)    mov(memd_a32(ss, ebp + 0x10), edi);    /* mov [ebp+0x10], edi */
//    II(0x1016ef48, 0x2)    jmpd(0x1016eedf, -0x6b);               /* jmp 0x1016eedf */
//l_0x1016ef4a:
//    II(0x1016ef4a, 0x4)    mov(memd_a32(ss, esp + 0x10), eax);    /* mov [esp+0x10], eax */
//l_0x1016ef4e:
//    II(0x1016ef4e, 0x4)    mov(ecx, memd_a32(ss, esp + 0x10));    /* mov ecx, [esp+0x10] */
//    II(0x1016ef52, 0x2)    mov(edi, ebx);                         /* mov edi, ebx */
//    II(0x1016ef54, 0x3)    mov(esi, memd_a32(ss, ebp + 0x20));    /* mov esi, [ebp+0x20] */
//    II(0x1016ef57, 0x1)    pushd(edi);                            /* push edi */
//    II(0x1016ef58, 0x2)    mov(eax, ecx);                         /* mov eax, ecx */
//    II(0x1016ef5a, 0x3)    shr(ecx, 0x2);                         /* shr ecx, 0x2 */
//    II(0x1016ef5d, 0x2)    repne_a32 movsd_a32();                 /* repne movsd  */
//    II(0x1016ef5f, 0x2)    mov(cl, al);                           /* mov cl, al */
//    II(0x1016ef61, 0x3)    and_(cl, 0x3);                         /* and cl, 0x3 */
//    II(0x1016ef64, 0x2)    repne_a32 movsb_a32();                 /* repne movsb  */
//    II(0x1016ef66, 0x1)    popd(edi);                             /* pop edi */
//    II(0x1016ef67, 0x4)    mov(eax, memd_a32(ss, esp + 0x10));    /* mov eax, [esp+0x10] */
//    II(0x1016ef6b, 0x3)    mov(edi, memd_a32(ss, ebp + 0x20));    /* mov edi, [ebp+0x20] */
//    II(0x1016ef6e, 0x3)    mov(esi, memd_a32(ss, ebp + 0x10));    /* mov esi, [ebp+0x10] */
//    II(0x1016ef71, 0x2)    add(edi, eax);                         /* add edi, eax */
//    II(0x1016ef73, 0x2)    add(ebx, eax);                         /* add ebx, eax */
//    II(0x1016ef75, 0x2)    sub(esi, eax);                         /* sub esi, eax */
//    II(0x1016ef77, 0x3)    mov(memd_a32(ss, ebp + 0x20), edi);    /* mov [ebp+0x20], edi */
//    II(0x1016ef7a, 0x2)    sub(edx, eax);                         /* sub edx, eax */
//    II(0x1016ef7c, 0x3)    mov(memd_a32(ss, ebp + 0x10), esi);    /* mov [ebp+0x10], esi */
//l_0x1016ef7f:
//    II(0x1016ef7f, 0x2)    test(edx, edx);                        /* test edx, edx */
//    II(0x1016ef81, 0x6)    jzd(0x1016eb2c, -0x45b);               /* jz dword 0x1016eb2c */
//    II(0x1016ef87, 0x2)    mov(eax, ebp);                         /* mov eax, ebp */
//    II(0x1016ef89, 0x5)    calld(0x101711bc, 0x222e);             /* call 0x101711bc */
//    II(0x1016ef8e, 0x3)    mov(eax, memd_a32(ss, ebp + 0x1c));    /* mov eax, [ebp+0x1c] */
//    II(0x1016ef91, 0x3)    mov(esi, memd_a32(ss, ebp + 0x20));    /* mov esi, [ebp+0x20] */
//    II(0x1016ef94, 0x5)    add(eax, 0x4000);                      /* add eax, 0x4000 */
//    II(0x1016ef99, 0x2)    sub(eax, esi);                         /* sub eax, esi */
//    II(0x1016ef9b, 0x2)    cmp(edx, eax);                         /* cmp edx, eax */
//    II(0x1016ef9d, 0x2)    jaed(0x1016ef4a, -0x55);               /* jae 0x1016ef4a */
//    II(0x1016ef9f, 0x4)    mov(memd_a32(ss, esp + 0x10), edx);    /* mov [esp+0x10], edx */
//    II(0x1016efa3, 0x2)    jmpd(0x1016ef4e, -0x57);               /* jmp 0x1016ef4e */
//}

FUNC_INFO_V3(sys_fread, 0x54e466f9f4e4b770, 0x20, {0x56, 0x57, 0x55, 0x83, 0xec, 0x8, 0x50, 0x52, 0x89, 0xcd, 0xf6, 0x41, 0xc, 0x1, 0x75, 0x1a, 0xb8, 0x4, 0, 0, 0, 0xe8, 0x39, 0xae, 0x1, 0, 0x8a, 0x71, 0xc, 0x80, 0xce, 0x20, 0x31, 0xc0, 0x88, 0x71, 0xc, 0xe9, 0xaa, 0x1, 0, 0, 0xf, 0xaf, 0xda, 0x85, 0xdb, 0x75, 0x7, 0x89, 0xd8, 0xe9, 0x9c, 0x1, 0, 0, 0x83, 0x79, 0x8, 0, 0x75, 0x7, 0x89, 0xe8, 0xe8, 0x3d, 0xae, 0x1, 0, 0x31, 0xf6, 0x8a, 0x55, 0xc, 0x89, 0x74, 0x24, 0x8, 0xf6, 0xc2, 0x40, 0xf, 0x84, 0xfe, 0, 0, 0, 0x89, 0x5c, 0x24, 0xc, 0x8b, 0x55, 0x4, 0x85, 0xd2, 0x74, 0x54, 0x8b, 0x5c, 0x24, 0xc, 0x39, 0xda, 0x76, 0x2, 0x89, 0xda, 0x8b, 0x7c, 0x24, 0x4, 0x89, 0xd1, 0x8b, 0x75, 0, 0x8b, 0x5c, 0x24, 0x8, 0x6, 0x8c, 0xd8, 0x8e, 0xc0, 0x57, 0x89, 0xc8, 0xc1, 0xe9, 0x2, 0xf2, 0xa5, 0x8a, 0xc8, 0x80, 0xe1, 0x3, 0xf2, 0xa4, 0x5f, 0x7, 0x8b, 0x44, 0x24, 0xc, 0x8b, 0x4d, 0, 0x8d, 0x34, 0x17, 0x1, 0xd3, 0x89, 0x74, 0x24, 0x4, 0x89, 0x5c, 0x24, 0x8, 0x8b, 0x7d, 0x4, 0x1, 0xd1, 0x29, 0xd0, 0x29, 0xd7, 0x89, 0x4d, 0, 0x89, 0x44, 0x24, 0xc, 0x89, 0x7d, 0x4, 0x8b, 0x4c, 0x24, 0xc, 0x85, 0xc9, 0xf, 0x84, 0x7, 0x1, 0, 0, 0x3b, 0x4d, 0x14, 0x73, 0xa, 0xf6, 0x45, 0xd, 0x4, 0xf, 0x84, 0x70, 0, 0, 0, 0xc7, 0x45, 0x4, 0, 0, 0, 0, 0x8b, 0x5c, 0x24, 0xc, 0x8b, 0x45, 0x8, 0x8a, 0x4d, 0xd, 0x89, 0x45, 0, 0xf6, 0xc1, 0x4, 0x75, 0xd, 0x81, 0xfb, 0, 0x2, 0, 0, 0x76, 0x5, 0x30, 0xdb, 0x80, 0xe7, 0xfe, 0x8b, 0x54, 0x24, 0x4, 0x8b, 0x45, 0x10, 0xe8, 0x47, 0xae, 0x1, 0, 0x83, 0xf8, 0xff, 0x75, 0x9, 0x80, 0x4d, 0xc, 0x20, 0xe9, 0xb8, 0, 0, 0, 0x85, 0xc0, 0x75, 0x9, 0x80, 0x4d, 0xc, 0x10, 0xe9, 0xab, 0, 0, 0, 0x8b, 0x54, 0x24, 0x4, 0x8b, 0x5c, 0x24, 0xc, 0x8b, 0x4c, 0x24, 0x8, 0x1, 0xc2, 0x29, 0xc3, 0x1, 0xc1, 0x89, 0x54, 0x24, 0x4, 0x89, 0x5c, 0x24, 0xc, 0x89, 0x4c, 0x24, 0x8, 0xe9, 0x1a, 0xff, 0xff, 0xff, 0x89, 0xe8, 0xe8, 0x9, 0xf9, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x84, 0x79, 0, 0, 0, 0xe9, 0x6, 0xff, 0xff, 0xff, 0x8b, 0x54, 0x24, 0x4, 0x1, 0xd3, 0x83, 0x7d, 0x4, 0, 0x75, 0xb, 0x89, 0xe8, 0xe8, 0xe9, 0xf8, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x5d, 0x8b, 0x4d, 0x4, 0x8b, 0x45, 0, 0x49, 0x8d, 0x70, 0x1, 0x89, 0x4d, 0x4, 0x89, 0x75, 0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xd, 0x75, 0x28, 0x83, 0x7d, 0x4, 0, 0x75, 0xb, 0x89, 0xe8, 0xe8, 0xbc, 0xf8, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x30, 0x8b, 0x7d, 0x4, 0x8b, 0x45, 0, 0x4f, 0x8d, 0x70, 0x1, 0x89, 0x7d, 0x4, 0x89, 0x75, 0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1a, 0xf, 0x84, 0x5c, 0xff, 0xff, 0xff, 0x88, 0x2, 0x8b, 0x44, 0x24, 0x8, 0x40, 0x42, 0x89, 0x44, 0x24, 0x8, 0x39, 0xda, 0x75, 0x92, 0x8b, 0x44, 0x24, 0x8, 0x8b, 0x34, 0x24, 0x31, 0xd2, 0xf7, 0xf6, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0xc3})
{
    FUNC_START_V2(sys_fread, 0x20);   // fread.        ecx - FILE*, eax - ptr_buf_ret, ebx * edx - count of read;    return eax
    II(sys_fread, 0x1)         pushd(esi);                         /* push esi */
    II(0x1017256d, 0x1)     pushd(edi);                         /* push edi */
    II(0x1017256e, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x1017256f, 0x3)     sub(esp, 0x8);                      /* sub esp, 0x8 */
    II(0x10172572, 0x1)     pushd(eax);                         /* push eax */
    II(0x10172573, 0x1)     pushd(edx);                         /* push edx */
    II(0x10172574, 0x2)     mov(ebp, ecx);                      /* mov ebp, ecx */
    II(0x10172576, 0x4)     test(memb_a32(ds, ecx + 0xc), 0x1); /* test byte [ecx+0xc], 0x1 */
    II(0x1017257a, 0x2)     jnzd(0x10172596, 0x1a);             /* jnz 0x10172596 */
    II(0x1017257c, 0x5)     mov(eax, 0x4);                      /* mov eax, 0x4 */
    II(0x10172581, 0x5)     calld(0x1018d3bf, 0x1ae39);         /* call 0x1018d3bf */
    II(0x10172586, 0x3)     mov(dh, memb_a32(ds, ecx + 0xc));   /* mov dh, [ecx+0xc] */
    II(0x10172589, 0x3)     or_(dh, 0x20);                      /* or dh, 0x20 */
    II(0x1017258c, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x1017258e, 0x3)     mov(memb_a32(ds, ecx + 0xc), dh);   /* mov [ecx+0xc], dh */
    II(0x10172591, 0x5)     jmpd(0x10172740, 0x1aa);            /* jmp 0x10172740 */
l_0x10172596:
    II(0x10172596, 0x3)     imul(ebx, edx);                     /* imul ebx, edx */
    II(0x10172599, 0x2)     test(ebx, ebx);                     /* test ebx, ebx */
    II(0x1017259b, 0x2)     jnzd(0x101725a4, 0x7);              /* jnz 0x101725a4 */
    II(0x1017259d, 0x2)     mov(eax, ebx);                      /* mov eax, ebx */
    II(0x1017259f, 0x5)     jmpd(0x10172740, 0x19c);            /* jmp 0x10172740 */
l_0x101725a4:
    II(0x101725a4, 0x4)     cmp(memd_a32(ds, ecx + 0x8), 0);    /* cmp dword [ecx+0x8], 0x0 */
    II(0x101725a8, 0x2)     jnzd(0x101725b1, 0x7);              /* jnz 0x101725b1 */
    II(0x101725aa, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
    II(0x101725ac, 0x5)     calld(0x1018d3ee, 0x1ae3d);         /* call 0x1018d3ee */
l_0x101725b1:
    II(0x101725b1, 0x2)     xor_(esi, esi);                     /* xor esi, esi */
    II(0x101725b3, 0x3)     mov(dl, memb_a32(ss, ebp + 0xc));   /* mov dl, [ebp+0xc] */
    II(0x101725b6, 0x4)     mov(memd_a32(ss, esp + 0x8), esi);  /* mov [esp+0x8], esi */
    II(0x101725ba, 0x3)     test(dl, 0x40);                     /* test dl, 0x40 */
    II(0x101725bd, 0x6)     jzd(0x101726c1, 0xfe);              /* jz dword 0x101726c1 */
    II(0x101725c3, 0x4)     mov(memd_a32(ss, esp + 0xc), ebx);  /* mov [esp+0xc], ebx */
l_0x101725c7:
    II(0x101725c7, 0x3)     mov(edx, memd_a32(ss, ebp + 0x4));  /* mov edx, [ebp+0x4] */      // left size data in buf
    II(0x101725ca, 0x2)     test(edx, edx);                     /* test edx, edx */
    II(0x101725cc, 0x2)     jzd(0x10172622, 0x54);              /* jz 0x10172622 */
    II(0x101725ce, 0x4)     mov(ebx, memd_a32(ss, esp + 0xc));  /* mov ebx, [esp+0xc] */
    II(0x101725d2, 0x2)     cmp(edx, ebx);                      /* cmp edx, ebx */
    II(0x101725d4, 0x2)     jbed(0x101725d8, 0x2);              /* jbe 0x101725d8 */
    II(0x101725d6, 0x2)     mov(edx, ebx);                      /* mov edx, ebx */
l_0x101725d8:
    II(0x101725d8, 0x4)     mov(edi, memd_a32(ss, esp + 0x4));  /* mov edi, [esp+0x4] */
    II(0x101725dc, 0x2)     mov(ecx, edx);                      /* mov ecx, edx */
    II(0x101725de, 0x3)     mov(esi, memd_a32(ss, ebp + 0));    /* mov esi, [ebp+0x0] */      // ptr of data in buf
    II(0x101725e1, 0x4)     mov(ebx, memd_a32(ss, esp + 0x8));  /* mov ebx, [esp+0x8] */
    II(0x101725e5, 0x1)     pushd(es);                          /* push es */
    II(0x101725e6, 0x2)     mov(eax, ds);                       /* mov eax, ds */
    II(0x101725e8, 0x2)     mov(es, eax);                       /* mov es, eax */
    II(0x101725ea, 0x1)     pushd(edi);                         /* push edi */
    II(0x101725eb, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x101725ed, 0x3)     shr(ecx, 0x2);                      /* shr ecx, 0x2 */
    II(0x101725f0, 0x2)     repne_a32 movsd_a32();              /* repne movsd  */            // copy to edi
    II(0x101725f2, 0x2)     mov(cl, al);                        /* mov cl, al */
    II(0x101725f4, 0x3)     and_(cl, 0x3);                      /* and cl, 0x3 */
    II(0x101725f7, 0x2)     repne_a32 movsb_a32();              /* repne movsb  */
    II(0x101725f9, 0x1)     popd(edi);                          /* pop edi */
    II(0x101725fa, 0x1)     popd(es);                           /* pop es */
    II(0x101725fb, 0x4)     mov(eax, memd_a32(ss, esp + 0xc));  /* mov eax, [esp+0xc] */
    II(0x101725ff, 0x3)     mov(ecx, memd_a32(ss, ebp + 0));    /* mov ecx, [ebp+0x0] */
    II(0x10172602, 0x3)     lea(esi, edi + edx);                /* lea esi, [edi+edx] */      // end of copy
    II(0x10172605, 0x2)     add(ebx, edx);                      /* add ebx, edx */
    II(0x10172607, 0x4)     mov(memd_a32(ss, esp + 0x4), esi);  /* mov [esp+0x4], esi */
    II(0x1017260b, 0x4)     mov(memd_a32(ss, esp + 0x8), ebx);  /* mov [esp+0x8], ebx */
    II(0x1017260f, 0x3)     mov(edi, memd_a32(ss, ebp + 0x4));  /* mov edi, [ebp+0x4] */      // left size
    II(0x10172612, 0x2)     add(ecx, edx);                      /* add ecx, edx */
    II(0x10172614, 0x2)     sub(eax, edx);                      /* sub eax, edx */
    II(0x10172616, 0x2)     sub(edi, edx);                      /* sub edi, edx */
    II(0x10172618, 0x3)     mov(memd_a32(ss, ebp + 0), ecx);    /* mov [ebp+0x0], ecx */      // end of ptr after copy
    II(0x1017261b, 0x4)     mov(memd_a32(ss, esp + 0xc), eax);  /* mov [esp+0xc], eax */
    II(0x1017261f, 0x3)     mov(memd_a32(ss, ebp + 0x4), edi);  /* mov [ebp+0x4], edi */      // left size of data in buf
l_0x10172622:
    II(0x10172622, 0x4)     mov(ecx, memd_a32(ss, esp + 0xc));  /* mov ecx, [esp+0xc] */
    II(0x10172626, 0x2)     test(ecx, ecx);                     /* test ecx, ecx */
    II(0x10172628, 0x6)     jzd(0x10172735, 0x107);             /* jz dword 0x10172735 */
    II(0x1017262e, 0x3)     cmp(ecx, memd_a32(ss, ebp + 0x14)); /* cmp ecx, [ebp+0x14] */
    II(0x10172631, 0x2)     jaed(0x1017263d, 0xa);              /* jae 0x1017263d */
    II(0x10172633, 0x4)     test(memb_a32(ss, ebp + 0xd), 0x4); /* test byte [ebp+0xd], 0x4 */
    II(0x10172637, 0x6)     jzd(0x101726ad, 0x70);              /* jz dword 0x101726ad */
l_0x1017263d:
    II(0x1017263d, 0x7)     mov(memd_a32(ss, ebp + 0x4), 0);    /* mov dword [ebp+0x4], 0x0 */
    II(0x10172644, 0x4)     mov(ebx, memd_a32(ss, esp + 0xc));  /* mov ebx, [esp+0xc] */
    II(0x10172648, 0x3)     mov(eax, memd_a32(ss, ebp + 0x8));  /* mov eax, [ebp+0x8] */
    II(0x1017264b, 0x3)     mov(cl, memb_a32(ss, ebp + 0xd));   /* mov cl, [ebp+0xd] */
    II(0x1017264e, 0x3)     mov(memd_a32(ss, ebp + 0), eax);    /* mov [ebp+0x0], eax */
    II(0x10172651, 0x3)     test(cl, 0x4);                      /* test cl, 0x4 */
    II(0x10172654, 0x2)     jnzd(0x10172663, 0xd);              /* jnz 0x10172663 */
    II(0x10172656, 0x6)     cmp(ebx, 0x200);                    /* cmp ebx, 0x200 */
    II(0x1017265c, 0x2)     jbed(0x10172663, 0x5);              /* jbe 0x10172663 */
    II(0x1017265e, 0x2)     xor_(bl, bl);                       /* xor bl, bl */
    II(0x10172660, 0x3)     and_(bh, 0xfe);                     /* and bh, 0xfe */
l_0x10172663:
    II(0x10172663, 0x4)     mov(edx, memd_a32(ss, esp + 0x4));  /* mov edx, [esp+0x4] */
    II(0x10172667, 0x3)     mov(eax, memd_a32(ss, ebp + 0x10)); /* mov eax, [ebp+0x10] */
    II(0x1017266a, 0x5)     calld(0x1018d4b6, 0x1ae47);         /* call 0x1018d4b6 */
    II(0x1017266f, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x10172672, 0x2)     jnzd(0x1017267d, 0x9);              /* jnz 0x1017267d */
    II(0x10172674, 0x4)     or_(memb_a32(ss, ebp + 0xc), 0x20); /* or byte [ebp+0xc], 0x20 */
    II(0x10172678, 0x5)     jmpd(0x10172735, 0xb8);             /* jmp 0x10172735 */
l_0x1017267d:
    II(0x1017267d, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017267f, 0x2)     jnzd(0x1017268a, 0x9);              /* jnz 0x1017268a */
l_0x10172681:
    II(0x10172681, 0x4)     or_(memb_a32(ss, ebp + 0xc), 0x10); /* or byte [ebp+0xc], 0x10 */
    II(0x10172685, 0x5)     jmpd(0x10172735, 0xab);             /* jmp 0x10172735 */
l_0x1017268a:
    II(0x1017268a, 0x4)     mov(edx, memd_a32(ss, esp + 0x4));  /* mov edx, [esp+0x4] */
    II(0x1017268e, 0x4)     mov(ebx, memd_a32(ss, esp + 0xc));  /* mov ebx, [esp+0xc] */
    II(0x10172692, 0x4)     mov(ecx, memd_a32(ss, esp + 0x8));  /* mov ecx, [esp+0x8] */
    II(0x10172696, 0x2)     add(edx, eax);                      /* add edx, eax */
    II(0x10172698, 0x2)     sub(ebx, eax);                      /* sub ebx, eax */
    II(0x1017269a, 0x2)     add(ecx, eax);                      /* add ecx, eax */
    II(0x1017269c, 0x4)     mov(memd_a32(ss, esp + 0x4), edx);  /* mov [esp+0x4], edx */
    II(0x101726a0, 0x4)     mov(memd_a32(ss, esp + 0xc), ebx);  /* mov [esp+0xc], ebx */
    II(0x101726a4, 0x4)     mov(memd_a32(ss, esp + 0x8), ecx);  /* mov [esp+0x8], ecx */
    II(0x101726a8, 0x5)     jmpd(0x101725c7, -0xe6);            /* jmp 0x101725c7 */
l_0x101726ad:
    II(0x101726ad, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
    II(0x101726af, 0x5)     calld(0x10171fbd, -0x6f7);          /* call 0x10171fbd */         // dos read?
    II(0x101726b4, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x101726b6, 0x6)     jzd(0x10172735, 0x79);              /* jz dword 0x10172735 */
    II(0x101726bc, 0x5)     jmpd(0x101725c7, -0xfa);            /* jmp 0x101725c7 */
l_0x101726c1:
    II(0x101726c1, 0x4)     mov(edx, memd_a32(ss, esp + 0x4));  /* mov edx, [esp+0x4] */
    II(0x101726c5, 0x2)     add(ebx, edx);                      /* add ebx, edx */
l_0x101726c7:
    II(0x101726c7, 0x4)     cmp(memd_a32(ss, ebp + 0x4), 0);    /* cmp dword [ebp+0x4], 0x0 */
    II(0x101726cb, 0x2)     jnzd(0x101726d8, 0xb);              /* jnz 0x101726d8 */
    II(0x101726cd, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
    II(0x101726cf, 0x5)     calld(0x10171fbd, -0x717);          /* call 0x10171fbd */
    II(0x101726d4, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x101726d6, 0x2)     jzd(0x10172735, 0x5d);              /* jz 0x10172735 */
l_0x101726d8:
    II(0x101726d8, 0x3)     mov(ecx, memd_a32(ss, ebp + 0x4));  /* mov ecx, [ebp+0x4] */
    II(0x101726db, 0x3)     mov(eax, memd_a32(ss, ebp + 0));    /* mov eax, [ebp+0x0] */
    II(0x101726de, 0x1)     dec(ecx);                           /* dec ecx */
    II(0x101726df, 0x3)     lea(esi, eax + 0x1);                /* lea esi, [eax+0x1] */
    II(0x101726e2, 0x3)     mov(memd_a32(ss, ebp + 0x4), ecx);  /* mov [ebp+0x4], ecx */
    II(0x101726e5, 0x3)     mov(memd_a32(ss, ebp + 0), esi);    /* mov [ebp+0x0], esi */
    II(0x101726e8, 0x2)     mov(al, memb_a32(ds, eax));         /* mov al, [eax] */
    II(0x101726ea, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x101726ef, 0x3)     cmp(eax, 0xd);                      /* cmp eax, 0xd */
    II(0x101726f2, 0x2)     jnzd(0x1017271c, 0x28);             /* jnz 0x1017271c */
    II(0x101726f4, 0x4)     cmp(memd_a32(ss, ebp + 0x4), 0);    /* cmp dword [ebp+0x4], 0x0 */
    II(0x101726f8, 0x2)     jnzd(0x10172705, 0xb);              /* jnz 0x10172705 */
    II(0x101726fa, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
    II(0x101726fc, 0x5)     calld(0x10171fbd, -0x744);          /* call 0x10171fbd */
    II(0x10172701, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x10172703, 0x2)     jzd(0x10172735, 0x30);              /* jz 0x10172735 */
l_0x10172705:
    II(0x10172705, 0x3)     mov(edi, memd_a32(ss, ebp + 0x4));  /* mov edi, [ebp+0x4] */
    II(0x10172708, 0x3)     mov(eax, memd_a32(ss, ebp + 0));    /* mov eax, [ebp+0x0] */
    II(0x1017270b, 0x1)     dec(edi);                           /* dec edi */
    II(0x1017270c, 0x3)     lea(esi, eax + 0x1);                /* lea esi, [eax+0x1] */
    II(0x1017270f, 0x3)     mov(memd_a32(ss, ebp + 0x4), edi);  /* mov [ebp+0x4], edi */
    II(0x10172712, 0x3)     mov(memd_a32(ss, ebp + 0), esi);    /* mov [ebp+0x0], esi */
    II(0x10172715, 0x2)     mov(al, memb_a32(ds, eax));         /* mov al, [eax] */
    II(0x10172717, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
l_0x1017271c:
    II(0x1017271c, 0x3)     cmp(eax, 0x1a);                     /* cmp eax, 0x1a */
    II(0x1017271f, 0x6)     jzd(0x10172681, -0xa4);             /* jz dword 0x10172681 */
    II(0x10172725, 0x2)     mov(memb_a32(ds, edx), al);         /* mov [edx], al */
    II(0x10172727, 0x4)     mov(eax, memd_a32(ss, esp + 0x8));  /* mov eax, [esp+0x8] */
    II(0x1017272b, 0x1)     inc(eax);                           /* inc eax */
    II(0x1017272c, 0x1)     inc(edx);                           /* inc edx */
    II(0x1017272d, 0x4)     mov(memd_a32(ss, esp + 0x8), eax);  /* mov [esp+0x8], eax */
    II(0x10172731, 0x2)     cmp(edx, ebx);                      /* cmp edx, ebx */
    II(0x10172733, 0x2)     jnzd(0x101726c7, -0x6e);            /* jnz 0x101726c7 */
l_0x10172735:
    II(0x10172735, 0x4)     mov(eax, memd_a32(ss, esp + 0x8));  /* mov eax, [esp+0x8] */
    II(0x10172739, 0x3)     mov(esi, memd_a32(ss, esp));        /* mov esi, [esp] */
    II(0x1017273c, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x1017273e, 0x2)     div(esi);                           /* div esi */
l_0x10172740:
    II(0x10172740, 0x3)     add(esp, 0x10);                     /* add esp, 0x10 */
    II(0x10172743, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x10172744, 0x1)     popd(edi);                          /* pop edi */
    II(0x10172745, 0x1)     popd(esi);                          /* pop esi */
    II(0x10172746, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x10171fbd, 0xb5eb8209d1fb2ba7, 0x20, {0x53, 0x51, 0x52, 0x56, 0x89, 0xc1, 0x83, 0x78, 0x8, 0, 0x75, 0x5, 0xe8, 0x20, 0xb4, 0x1, 0, 0x8a, 0x61, 0xd, 0xf6, 0xc4, 0x20, 0x74, 0xf, 0xf6, 0xc4, 0x6, 0x74, 0xa, 0xb8, 0, 0x20, 0, 0, 0xe8, 0x85, 0xb4, 0x1, 0, 0x8b, 0x51, 0x8, 0x89, 0x11, 0x8a, 0x71, 0xc, 0x8b, 0x41, 0xc, 0x80, 0xe6, 0xfb, 0x25, 0, 0x24, 0, 0, 0x88, 0x71, 0xc, 0x3d, 0, 0x24, 0, 0, 0x75, 0x23, 0x8b, 0x59, 0x10, 0x85, 0xdb, 0x75, 0x1c, 0x89, 0x59, 0x4, 0xe8, 0x88, 0xb4, 0x1, 0, 0x89, 0xc2, 0x83, 0xf8, 0xff, 0x74, 0x2a, 0x8b, 0x1, 0x88, 0x10, 0xc7, 0x41, 0x4, 0x1, 0, 0, 0, 0xeb, 0x1d, 0xf6, 0x41, 0xd, 0x4, 0x74, 0x7, 0xbb, 0x1, 0, 0, 0, 0xeb, 0x3, 0x8b, 0x59, 0x14, 0x8b, 0x11, 0x8b, 0x41, 0x10, 0xe8, 0x77, 0xb4, 0x1, 0, 0x89, 0x41, 0x4, 0x8b, 0x71, 0x4, 0x85, 0xf6, 0x7f, 0x18, 0x75, 0x6, 0x80, 0x49, 0xc, 0x10, 0xeb, 0x10, 0x8a, 0x79, 0xc, 0xc7, 0x41, 0x4, 0, 0, 0, 0, 0x80, 0xcf, 0x20, 0x88, 0x79, 0xc, 0x8b, 0x41, 0x4, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x10171fbd, 0x20);
    II(0x10171fbd, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x10171fbe, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x10171fbf, 0x1)     pushd(edx);                         /* push edx */
    II(0x10171fc0, 0x1)     pushd(esi);                         /* push esi */
    II(0x10171fc1, 0x2)     mov(ecx, eax);                      /* mov ecx, eax */
    II(0x10171fc3, 0x4)     cmp(memd_a32(ds, eax + 0x8), 0);    /* cmp dword [eax+0x8], 0x0 */
    II(0x10171fc7, 0x2)     jnzd(0x10171fce, 0x5);              /* jnz 0x10171fce */
    II(0x10171fc9, 0x5)     calld(0x1018d3ee, 0x1b420);         /* call 0x1018d3ee */
l_0x10171fce:
    II(0x10171fce, 0x3)     mov(ah, memb_a32(ds, ecx + 0xd));   /* mov ah, [ecx+0xd] */
    II(0x10171fd1, 0x3)     test(ah, 0x20);                     /* test ah, 0x20 */
    II(0x10171fd4, 0x2)     jzd(0x10171fe5, 0xf);               /* jz 0x10171fe5 */
    II(0x10171fd6, 0x3)     test(ah, 0x6);                      /* test ah, 0x6 */
    II(0x10171fd9, 0x2)     jzd(0x10171fe5, 0xa);               /* jz 0x10171fe5 */
    II(0x10171fdb, 0x5)     mov(eax, 0x2000);                   /* mov eax, 0x2000 */
    II(0x10171fe0, 0x5)     calld(0x1018d46a, 0x1b485);         /* call 0x1018d46a */
l_0x10171fe5:
    II(0x10171fe5, 0x3)     mov(edx, memd_a32(ds, ecx + 0x8));  /* mov edx, [ecx+0x8] */
    II(0x10171fe8, 0x2)     mov(memd_a32(ds, ecx), edx);        /* mov [ecx], edx */
    II(0x10171fea, 0x3)     mov(dh, memb_a32(ds, ecx + 0xc));   /* mov dh, [ecx+0xc] */
    II(0x10171fed, 0x3)     mov(eax, memd_a32(ds, ecx + 0xc));  /* mov eax, [ecx+0xc] */
    II(0x10171ff0, 0x3)     and_(dh, 0xfb);                     /* and dh, 0xfb */
    II(0x10171ff3, 0x5)     and_(eax, 0x2400);                  /* and eax, 0x2400 */
    II(0x10171ff8, 0x3)     mov(memb_a32(ds, ecx + 0xc), dh);   /* mov [ecx+0xc], dh */
    II(0x10171ffb, 0x5)     cmp(eax, 0x2400);                   /* cmp eax, 0x2400 */
    II(0x10172000, 0x2)     jnzd(0x10172025, 0x23);             /* jnz 0x10172025 */
    II(0x10172002, 0x3)     mov(ebx, memd_a32(ds, ecx + 0x10)); /* mov ebx, [ecx+0x10] */
    II(0x10172005, 0x2)     test(ebx, ebx);                     /* test ebx, ebx */
    II(0x10172007, 0x2)     jnzd(0x10172025, 0x1c);             /* jnz 0x10172025 */
    II(0x10172009, 0x3)     mov(memd_a32(ds, ecx + 0x4), ebx);  /* mov [ecx+0x4], ebx */
    II(0x1017200c, 0x5)     calld(0x1018d499, 0x1b488);         /* call 0x1018d499 */
    II(0x10172011, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10172013, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x10172016, 0x2)     jzd(0x10172042, 0x2a);              /* jz 0x10172042 */
    II(0x10172018, 0x2)     mov(eax, memd_a32(ds, ecx));        /* mov eax, [ecx] */
    II(0x1017201a, 0x2)     mov(memb_a32(ds, eax), dl);         /* mov [eax], dl */
    II(0x1017201c, 0x7)     mov(memd_a32(ds, ecx + 0x4), 0x1);  /* mov dword [ecx+0x4], 0x1 */
    II(0x10172023, 0x2)     jmpd(0x10172042, 0x1d);             /* jmp 0x10172042 */
l_0x10172025:
    II(0x10172025, 0x4)     test(memb_a32(ds, ecx + 0xd), 0x4); /* test byte [ecx+0xd], 0x4 */
    II(0x10172029, 0x2)     jzd(0x10172032, 0x7);               /* jz 0x10172032 */
    II(0x1017202b, 0x5)     mov(ebx, 0x1);                      /* mov ebx, 0x1 */
    II(0x10172030, 0x2)     jmpd(0x10172035, 0x3);              /* jmp 0x10172035 */
l_0x10172032:
    II(0x10172032, 0x3)     mov(ebx, memd_a32(ds, ecx + 0x14)); /* mov ebx, [ecx+0x14] */     // buf_size, 0x1000
l_0x10172035:
    II(0x10172035, 0x2)     mov(edx, memd_a32(ds, ecx));        /* mov edx, [ecx] */          // char * data_readed, 0x10215038
    II(0x10172037, 0x3)     mov(eax, memd_a32(ds, ecx + 0x10)); /* mov eax, [ecx+0x10] */     // fd
    II(0x1017203a, 0x5)     calld(0x1018d4b6, 0x1b477);         /* call 0x1018d4b6 */         // dos read.
    II(0x1017203f, 0x3)     mov(memd_a32(ds, ecx + 0x4), eax);  /* mov [ecx+0x4], eax */      // readed_size
l_0x10172042:
    II(0x10172042, 0x3)     mov(esi, memd_a32(ds, ecx + 0x4));  /* mov esi, [ecx+0x4] */
    II(0x10172045, 0x2)     test(esi, esi);                     /* test esi, esi */
    II(0x10172047, 0x2)     jgd(0x10172061, 0x18);              /* jg 0x10172061 */
    II(0x10172049, 0x2)     jnzd(0x10172051, 0x6);              /* jnz 0x10172051 */
    II(0x1017204b, 0x4)     or_(memb_a32(ds, ecx + 0xc), 0x10); /* or byte [ecx+0xc], 0x10 */
    II(0x1017204f, 0x2)     jmpd(0x10172061, 0x10);             /* jmp 0x10172061 */
l_0x10172051:
    II(0x10172051, 0x3)     mov(bh, memb_a32(ds, ecx + 0xc));   /* mov bh, [ecx+0xc] */
    II(0x10172054, 0x7)     mov(memd_a32(ds, ecx + 0x4), 0);    /* mov dword [ecx+0x4], 0x0 */
    II(0x1017205b, 0x3)     or_(bh, 0x20);                      /* or bh, 0x20 */
    II(0x1017205e, 0x3)     mov(memb_a32(ds, ecx + 0xc), bh);   /* mov [ecx+0xc], bh */
l_0x10172061:
    II(0x10172061, 0x3)     mov(eax, memd_a32(ds, ecx + 0x4));  /* mov eax, [ecx+0x4] */
    II(0x10172064, 0x1)     popd(esi);                          /* pop esi */
    II(0x10172065, 0x1)     popd(edx);                          /* pop edx */
    II(0x10172066, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10172067, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10172068, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x1018d4b6, 0x24e3ae3e87785536, 0x20, {0x51, 0x89, 0xd9, 0x89, 0xc3, 0xb4, 0x3f, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0x89, 0xc2, 0x85, 0xc0, 0x7d, 0xa, 0x31, 0xc0, 0x66, 0x89, 0xd0, 0xe8, 0xe4, 0x6, 0, 0, 0x59, 0xc3})
{
    FUNC_START_V2(0x1018d4b6, 0x20);
    II(0x1018d4b6, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x1018d4b7, 0x2)     mov(ecx, ebx);                      /* mov ecx, ebx */
    II(0x1018d4b9, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */
    II(0x1018d4bb, 0x2)     mov(ah, 0x3f);                      /* mov ah, 0x3f */   // read, ecx - count, edx - char *, ebx - fd.
    II(0x1018d4bd, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1018d4bf, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1018d4c1, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1018d4c3, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x1018d4c5, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1018d4c7, 0x2)     jged(0x1018d4d3, 0xa);              /* jge 0x1018d4d3 */
    II(0x1018d4c9, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x1018d4cb, 0x3)     mov(ax, dx);                        /* mov ax, dx */
    II(0x1018d4ce, 0x5)     calld(0x1018dbb7, 0x6e4);           /* call 0x1018dbb7 */
l_0x1018d4d3:
    II(0x1018d4d3, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1018d4d4, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(sys_fclose_ex, 0x2fe54569f6d471d3, 0x20, {0x53, 0x51, 0x52, 0x89, 0xc1, 0x85, 0xc0, 0x74, 0x57, 0xf6, 0x40, 0x4, 0x4, 0x74, 0xa, 0x8b, 0x41, 0xc, 0xe8, 0xda, 0x10, 0, 0, 0xeb, 0x2a, 0x8b, 0x41, 0x4, 0x25, 0xf0, 0, 0, 0, 0x83, 0xf8, 0x20, 0x72, 0x9, 0x76, 0x1b, 0x83, 0xf8, 0x40, 0x74, 0x7, 0xeb, 0x14, 0x83, 0xf8, 0x10, 0x75, 0xf, 0x8b, 0x51, 0x1c, 0x85, 0xd2, 0x74, 0x8, 0x89, 0xd0, 0xff, 0x15, 0xd0, 0xe1, 0x1b, 0x10, 0x8b, 0x1, 0x8b, 0x58, 0x3c, 0x4b, 0x31, 0xd2, 0x89, 0x58, 0x3c, 0xbb, 0x24, 0, 0, 0, 0x89, 0xc8, 0xe8, 0xe, 0x4e, 0xff, 0xff, 0x31, 0xc0, 0x5a, 0x59, 0x5b, 0xc3, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(sys_fclose_ex, 0x20);       // Похожа на fclose но не она.
    II(sys_fclose_ex, 0x1)      pushd(ebx);                         /* push ebx */
    II(0x10170f79, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x10170f7a, 0x1)     pushd(edx);                         /* push edx */
    II(0x10170f7b, 0x2)     mov(ecx, eax);                      /* mov ecx, eax */
    II(0x10170f7d, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x10170f7f, 0x2)     jzd(0x10170fd8, 0x57);              /* jz 0x10170fd8 */
    II(0x10170f81, 0x4)     test(memb_a32(ds, eax + 0x4), 0x4); /* test byte [eax+0x4], 0x4 */
    II(0x10170f85, 0x2)     jzd(0x10170f91, 0xa);               /* jz 0x10170f91 */
    II(0x10170f87, 0x3)     mov(eax, memd_a32(ds, ecx + 0xc));  /* mov eax, [ecx+0xc] */
    II(0x10170f8a, 0x5)     calld(sys_fclose, 0x10da);             /* call 0x10172069 */
    II(0x10170f8f, 0x2)     jmpd(0x10170fbb, 0x2a);             /* jmp 0x10170fbb */
l_0x10170f91:
    II(0x10170f91, 0x3)     mov(eax, memd_a32(ds, ecx + 0x4));  /* mov eax, [ecx+0x4] */
    II(0x10170f94, 0x5)     and_(eax, 0xf0);                    /* and eax, 0xf0 */
    II(0x10170f99, 0x3)     cmp(eax, 0x20);                     /* cmp eax, 0x20 */
    II(0x10170f9c, 0x2)     jbd(0x10170fa7, 0x9);               /* jb 0x10170fa7 */
    II(0x10170f9e, 0x2)     jbed(0x10170fbb, 0x1b);             /* jbe 0x10170fbb */
    II(0x10170fa0, 0x3)     cmp(eax, 0x40);                     /* cmp eax, 0x40 */
    II(0x10170fa3, 0x2)     jzd(0x10170fac, 0x7);               /* jz 0x10170fac */
    II(0x10170fa5, 0x2)     jmpd(0x10170fbb, 0x14);             /* jmp 0x10170fbb */
l_0x10170fa7:
    II(0x10170fa7, 0x3)     cmp(eax, 0x10);                     /* cmp eax, 0x10 */
    II(0x10170faa, 0x2)     jnzd(0x10170fbb, 0xf);              /* jnz 0x10170fbb */
l_0x10170fac:
    II(0x10170fac, 0x3)     mov(edx, memd_a32(ds, ecx + 0x1c)); /* mov edx, [ecx+0x1c] */
    II(0x10170faf, 0x2)     test(edx, edx);                     /* test edx, edx */
    II(0x10170fb1, 0x2)     jzd(0x10170fbb, 0x8);               /* jz 0x10170fbb */
    II(0x10170fb3, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x10170fb5, 0x6)     calld_abs(memd_a32(ds, 0x101be1d0)); /* call dword near [0x101be1d0] */
l_0x10170fbb:
    II(0x10170fbb, 0x2)     mov(eax, memd_a32(ds, ecx));        /* mov eax, [ecx] */
    II(0x10170fbd, 0x3)     mov(ebx, memd_a32(ds, eax + 0x3c)); /* mov ebx, [eax+0x3c] */
    II(0x10170fc0, 0x1)     dec(ebx);                           /* dec ebx */
    II(0x10170fc1, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10170fc3, 0x3)     mov(memd_a32(ds, eax + 0x3c), ebx); /* mov [eax+0x3c], ebx */
    II(0x10170fc6, 0x5)     mov(ebx, 0x24);                     /* mov ebx, 0x24 */
    II(0x10170fcb, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x10170fcd, 0x5)     calld(sys_memset, -0xb1f2);            /* call 0x10165de0 */
    II(0x10170fd2, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10170fd4, 0x1)     popd(edx);                          /* pop edx */
    II(0x10170fd5, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10170fd6, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10170fd7, 0x1)     retd();                             /* ret  */
l_0x10170fd8:
    II(0x10170fd8, 0x5)     mov(eax, 0xffffffff);               /* mov eax, 0xffffffff */
    II(0x10170fdd, 0x1)     popd(edx);                          /* pop edx */
    II(0x10170fde, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10170fdf, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10170fe0, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x10172096, 0xdb2266a7ebd77841, 0x20, {0x53, 0x89, 0xc3, 0xe8, 0x7e, 0, 0, 0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd5, 0xb4, 0x1, 0, 0x89, 0xd0, 0x5b, 0xc3})
{
    FUNC_START_V2(0x10172096, 0x20);
    II(0x10172096, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x10172097, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */
    II(0x10172099, 0x5)     calld(0x1017211c, 0x7e);            /* call 0x1017211c */
    II(0x1017209e, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x101720a0, 0x2)     mov(eax, ebx);                      /* mov eax, ebx */
    II(0x101720a2, 0x5)     calld(0x1018d57c, 0x1b4d5);         /* call 0x1018d57c */
    II(0x101720a7, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x101720a9, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x101720aa, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x1017211c, 0x9449d8c152e3da33, 0x20, {0x53, 0x51, 0x56, 0x57, 0x55, 0x83, 0xec, 0x10, 0x89, 0xc1, 0x89, 0xd7, 0x83, 0x78, 0xc, 0, 0x75, 0xa, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x6b, 0, 0, 0, 0x8a, 0x60, 0xd, 0x31, 0xf6, 0xf6, 0xc4, 0x10, 0x74, 0x9, 0x89, 0xc8, 0xe8, 0x90, 0xb4, 0x1, 0, 0x89, 0xc6, 0x89, 0xc8, 0xe8, 0xf5, 0x5, 0, 0, 0x83, 0xf8, 0xff, 0x74, 0xe, 0x89, 0xc2, 0x8b, 0x69, 0x10, 0x31, 0xdb, 0x89, 0xe8, 0xe8, 0x32, 0xb0, 0, 0, 0x85, 0xff, 0x74, 0xa, 0x8b, 0x41, 0x10, 0xe8, 0x41, 0xb5, 0x1, 0, 0x9, 0xc6, 0xf6, 0x41, 0xc, 0x8, 0x74, 0xf, 0x8b, 0x41, 0x8, 0xe8, 0x40, 0x8f, 0xff, 0xff, 0xc7, 0x41, 0x8, 0, 0, 0, 0, 0xf6, 0x41, 0xd, 0x8, 0x74, 0x13, 0x31, 0xd2, 0x89, 0xe0, 0x8a, 0x51, 0x19, 0xe8, 0x1d, 0xff, 0xff, 0xff, 0x89, 0xe0, 0xe8, 0x46, 0xb5, 0x1, 0, 0x89, 0xf0, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x1017211c, 0x20);
    II(0x1017211c, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x1017211d, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x1017211e, 0x1)     pushd(esi);                         /* push esi */
    II(0x1017211f, 0x1)     pushd(edi);                         /* push edi */
    II(0x10172120, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x10172121, 0x3)     sub(esp, 0x10);                     /* sub esp, 0x10 */
    II(0x10172124, 0x2)     mov(ecx, eax);                      /* mov ecx, eax */
    II(0x10172126, 0x2)     mov(edi, edx);                      /* mov edi, edx */
    II(0x10172128, 0x4)     cmp(memd_a32(ds, eax + 0xc), 0);    /* cmp dword [eax+0xc], 0x0 */
    II(0x1017212c, 0x2)     jnzd(0x10172138, 0xa);              /* jnz 0x10172138 */
    II(0x1017212e, 0x5)     mov(eax, 0xffffffff);               /* mov eax, 0xffffffff */
    II(0x10172133, 0x5)     jmpd(0x101721a3, 0x6b);             /* jmp 0x101721a3 */
l_0x10172138:
    II(0x10172138, 0x3)     mov(ah, memb_a32(ds, eax + 0xd));   /* mov ah, [eax+0xd] */
    II(0x1017213b, 0x2)     xor_(esi, esi);                     /* xor esi, esi */
    II(0x1017213d, 0x3)     test(ah, 0x10);                     /* test ah, 0x10 */
    II(0x10172140, 0x2)     jzd(0x1017214b, 0x9);               /* jz 0x1017214b */
    II(0x10172142, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x10172144, 0x5)     calld(0x1018d5d9, 0x1b490);         /* call 0x1018d5d9 */
    II(0x10172149, 0x2)     mov(esi, eax);                      /* mov esi, eax */
l_0x1017214b:
    II(0x1017214b, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x1017214d, 0x5)     calld(0x10172747, 0x5f5);           /* call 0x10172747 */
    II(0x10172152, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x10172155, 0x2)     jzd(0x10172165, 0xe);               /* jz 0x10172165 */
    II(0x10172157, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x10172159, 0x3)     mov(ebp, memd_a32(ds, ecx + 0x10)); /* mov ebp, [ecx+0x10] */
    II(0x1017215c, 0x2)     xor_(ebx, ebx);                     /* xor ebx, ebx */
    II(0x1017215e, 0x2)     mov(eax, ebp);                      /* mov eax, ebp */
    II(0x10172160, 0x5)     calld(sys_lseek, 0xb032);              /* call 0x1017d197 */
l_0x10172165:
    II(0x10172165, 0x2)     test(edi, edi);                     /* test edi, edi */
    II(0x10172167, 0x2)     jzd(0x10172173, 0xa);               /* jz 0x10172173 */
    II(0x10172169, 0x3)     mov(eax, memd_a32(ds, ecx + 0x10)); /* mov eax, [ecx+0x10] */
    II(0x1017216c, 0x5)     calld(0x1018d6b2, 0x1b541);         /* call 0x1018d6b2 */           // dos close eax
    II(0x10172171, 0x2)     or_(esi, eax);                      /* or esi, eax */
l_0x10172173:
    II(0x10172173, 0x4)     test(memb_a32(ds, ecx + 0xc), 0x8); /* test byte [ecx+0xc], 0x8 */
    II(0x10172177, 0x2)     jzd(0x10172188, 0xf);               /* jz 0x10172188 */
    II(0x10172179, 0x3)     mov(eax, memd_a32(ds, ecx + 0x8));  /* mov eax, [ecx+0x8] */
    II(0x1017217c, 0x5)     calld(sys_free, -0x70c0);              /* call 0x1016b0c1 */
    II(0x10172181, 0x7)     mov(memd_a32(ds, ecx + 0x8), 0);    /* mov dword [ecx+0x8], 0x0 */
l_0x10172188:
    II(0x10172188, 0x4)     test(memb_a32(ds, ecx + 0xd), 0x8); /* test byte [ecx+0xd], 0x8 */
    II(0x1017218c, 0x2)     jzd(0x101721a1, 0x13);              /* jz 0x101721a1 */
    II(0x1017218e, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x10172190, 0x2)     mov(eax, esp);                      /* mov eax, esp */
    II(0x10172192, 0x3)     mov(dl, memb_a32(ds, ecx + 0x19));  /* mov dl, [ecx+0x19] */
    II(0x10172195, 0x5)     calld(0x101720b7, -0xe3);           /* call 0x101720b7 */
    II(0x1017219a, 0x2)     mov(eax, esp);                      /* mov eax, esp */
    II(0x1017219c, 0x5)     calld(0x1018d6e7, 0x1b546);         /* call 0x1018d6e7 */
l_0x101721a1:
    II(0x101721a1, 0x2)     mov(eax, esi);                      /* mov eax, esi */
l_0x101721a3:
    II(0x101721a3, 0x3)     add(esp, 0x10);                     /* add esp, 0x10 */
    II(0x101721a6, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x101721a7, 0x1)     popd(edi);                          /* pop edi */
    II(0x101721a8, 0x1)     popd(esi);                          /* pop esi */
    II(0x101721a9, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x101721aa, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x101721ab, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x1017227d, 0x97a30527670967d8, 0x20, {0x56, 0x89, 0xc6, 0x88, 0xd0, 0x89, 0xca, 0x8b, 0x4c, 0x24, 0x8, 0x80, 0x61, 0xc, 0xfc, 0x9, 0x59, 0xc, 0x25, 0xff, 0, 0, 0, 0xe8, 0x51, 0xec, 0, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x72, 0x75, 0x1d, 0x31, 0xc0, 0xf6, 0xc3, 0x2, 0x74, 0x5, 0xb8, 0x2, 0, 0, 0, 0xf6, 0xc3, 0x40, 0x74, 0x5, 0x80, 0xcc, 0x2, 0xeb, 0x3, 0x80, 0xcc, 0x1, 0x6a, 0, 0xeb, 0x2b, 0xf6, 0xc3, 0x1, 0xf, 0x95, 0xc0, 0x25, 0xff, 0, 0, 0, 0x83, 0xc0, 0x21, 0xf6, 0xc3, 0x80, 0x74, 0x4, 0xc, 0x10, 0xeb, 0x2, 0xc, 0x40, 0xf6, 0xc3, 0x40, 0x74, 0x5, 0x80, 0xcc, 0x2, 0xeb, 0x3, 0x80, 0xcc, 0x1, 0x68, 0x80, 0x1, 0, 0, 0x52, 0x50, 0x56, 0xe8, 0x56, 0xac, 0, 0, 0x83, 0xc4, 0x10, 0x89, 0x41, 0x10, 0x83, 0x79, 0x10, 0xff, 0x75, 0xd, 0x89, 0xc8, 0xe8, 0x76, 0xb2, 0x1, 0, 0x31, 0xc0, 0x5e, 0xc2, 0x4, 0, 0xc7, 0x41, 0x4, 0, 0, 0, 0, 0xc7, 0x41, 0x8, 0, 0, 0, 0, 0xc7, 0x41, 0x14, 0, 0, 0, 0, 0xf6, 0xc3, 0x80, 0x74, 0xe, 0xbb, 0x2, 0, 0, 0, 0x89, 0xc8, 0x31, 0xd2, 0xe8, 0x3c, 0x1, 0, 0, 0x89, 0xc8, 0xe8, 0xb1, 0xb3, 0x1, 0, 0x89, 0xc8, 0x5e, 0xc2, 0x4, 0})
{
    FUNC_START_V2(0x1017227d, 0x20);
    II(0x1017227d, 0x1)     pushd(esi);                         /* push esi */
    II(0x1017227e, 0x2)     mov(esi, eax);                      /* mov esi, eax */
    II(0x10172280, 0x2)     mov(al, dl);                        /* mov al, dl */
    II(0x10172282, 0x2)     mov(edx, ecx);                      /* mov edx, ecx */
    II(0x10172284, 0x4)     mov(ecx, memd_a32(ss, esp + 0x8));  /* mov ecx, [esp+0x8] */
    II(0x10172288, 0x4)     and_(memb_a32(ds, ecx + 0xc), -0x4 /* 0xfc */); /* and byte [ecx+0xc], 0xfc */
    II(0x1017228c, 0x3)     or_(memd_a32(ds, ecx + 0xc), ebx);  /* or [ecx+0xc], ebx */
    II(0x1017228f, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x10172294, 0x5)     calld(0x10180eea, 0xec51);          /* call 0x10180eea */
    II(0x10172299, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x1017229e, 0x3)     cmp(eax, 0x72);                     /* cmp eax, 0x72 */
    II(0x101722a1, 0x2)     jnzd(0x101722c0, 0x1d);             /* jnz 0x101722c0 */
    II(0x101722a3, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x101722a5, 0x3)     test(bl, 0x2);                      /* test bl, 0x2 */
    II(0x101722a8, 0x2)     jzd(0x101722af, 0x5);               /* jz 0x101722af */
    II(0x101722aa, 0x5)     mov(eax, 0x2);                      /* mov eax, 0x2 */
l_0x101722af:
    II(0x101722af, 0x3)     test(bl, 0x40);                     /* test bl, 0x40 */
    II(0x101722b2, 0x2)     jzd(0x101722b9, 0x5);               /* jz 0x101722b9 */
    II(0x101722b4, 0x3)     or_(ah, 0x2);                       /* or ah, 0x2 */
    II(0x101722b7, 0x2)     jmpd(0x101722bc, 0x3);              /* jmp 0x101722bc */
l_0x101722b9:
    II(0x101722b9, 0x3)     or_(ah, 0x1);                       /* or ah, 0x1 */
l_0x101722bc:
    II(0x101722bc, 0x2)     pushd(0);                           /* push 0x0 */
    II(0x101722be, 0x2)     jmpd(0x101722eb, 0x2b);             /* jmp 0x101722eb */
l_0x101722c0:
    II(0x101722c0, 0x3)     test(bl, 0x1);                      /* test bl, 0x1 */
    II(0x101722c3, 0x3)     setnz(al);                          /* setnz al */
    II(0x101722c6, 0x5)     and_(eax, 0xff);                    /* and eax, 0xff */
    II(0x101722cb, 0x3)     add(eax, 0x21);                     /* add eax, 0x21 */
    II(0x101722ce, 0x3)     test(bl, 0x80);                     /* test bl, 0x80 */
    II(0x101722d1, 0x2)     jzd(0x101722d7, 0x4);               /* jz 0x101722d7 */
    II(0x101722d3, 0x2)     or_(al, 0x10);                      /* or al, 0x10 */
    II(0x101722d5, 0x2)     jmpd(0x101722d9, 0x2);              /* jmp 0x101722d9 */
l_0x101722d7:
    II(0x101722d7, 0x2)     or_(al, 0x40);                      /* or al, 0x40 */
l_0x101722d9:
    II(0x101722d9, 0x3)     test(bl, 0x40);                     /* test bl, 0x40 */
    II(0x101722dc, 0x2)     jzd(0x101722e3, 0x5);               /* jz 0x101722e3 */
    II(0x101722de, 0x3)     or_(ah, 0x2);                       /* or ah, 0x2 */
    II(0x101722e1, 0x2)     jmpd(0x101722e6, 0x3);              /* jmp 0x101722e6 */
l_0x101722e3:
    II(0x101722e3, 0x3)     or_(ah, 0x1);                       /* or ah, 0x1 */
l_0x101722e6:
    II(0x101722e6, 0x5)     pushd(0x180);                       /* push dword 0x180 */
l_0x101722eb:
    II(0x101722eb, 0x1)     pushd(edx);                         /* push edx */             // unknow flag
    II(0x101722ec, 0x1)     pushd(eax);                         /* push eax */             // flag
    II(0x101722ed, 0x1)     pushd(esi);                         /* push esi */             // path
    II(0x101722ee, 0x5)     calld(0x1017cf49, 0xac56);          /* call 0x1017cf49 */      // dos open, eax - fd, ebx ?
    II(0x101722f3, 0x3)     add(esp, 0x10);                     /* add esp, 0x10 */
    II(0x101722f6, 0x3)     mov(memd_a32(ds, ecx + 0x10), eax); /* mov [ecx+0x10], eax */
    II(0x101722f9, 0x4)     cmp(memd_a32(ds, ecx + 0x10), -0x1 /* 0xff */); /* cmp dword [ecx+0x10], 0xff */
    II(0x101722fd, 0x2)     jnzd(0x1017230c, 0xd);              /* jnz 0x1017230c */
    II(0x101722ff, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x10172301, 0x5)     calld(0x1018d57c, 0x1b276);         /* call 0x1018d57c */
    II(0x10172306, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x10172308, 0x1)     popd(esi);                          /* pop esi */
    II(0x10172309, 0x3)     retd(0x4);                          /* ret 0x4 */
l_0x1017230c:
    II(0x1017230c, 0x7)     mov(memd_a32(ds, ecx + 0x4), 0);    /* mov dword [ecx+0x4], 0x0 */
    II(0x10172313, 0x7)     mov(memd_a32(ds, ecx + 0x8), 0);    /* mov dword [ecx+0x8], 0x0 */
    II(0x1017231a, 0x7)     mov(memd_a32(ds, ecx + 0x14), 0);   /* mov dword [ecx+0x14], 0x0 */
    II(0x10172321, 0x3)     test(bl, 0x80);                     /* test bl, 0x80 */
    II(0x10172324, 0x2)     jzd(0x10172334, 0xe);               /* jz 0x10172334 */
    II(0x10172326, 0x5)     mov(ebx, 0x2);                      /* mov ebx, 0x2 */
    II(0x1017232b, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x1017232d, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x1017232f, 0x5)     calld(sys_fseek, 0x13c);              /* call 0x10172470 */
l_0x10172334:
    II(0x10172334, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x10172336, 0x5)     calld(0x1018d6ec, 0x1b3b1);         /* call 0x1018d6ec */
    II(0x1017233b, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x1017233d, 0x1)     popd(esi);                          /* pop esi */
    II(0x1017233e, 0x3)     retd(0x4);                          /* ret 0x4 */
}

FUNC_INFO_V3(0x1017cf49, 0x8740907726e15a9b, 0x20, {0x53, 0x51, 0x52, 0x56, 0x57, 0x83, 0xec, 0xc, 0x8b, 0x74, 0x24, 0x24, 0xf, 0xb6, 0x3e, 0x83, 0xff, 0x20, 0x75, 0x3, 0x46, 0xeb, 0xf5, 0x8b, 0x44, 0x24, 0x28, 0x25, 0x83, 0, 0, 0, 0x89, 0x44, 0x24, 0x4, 0x8a, 0x44, 0x24, 0x4, 0x8a, 0x64, 0x24, 0x2c, 0x89, 0xf2, 0x8, 0xe0, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xb4, 0x3d, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0x89, 0x4, 0x24, 0x85, 0xc0, 0x7c, 0x6, 0x31, 0xff, 0x66, 0x8b, 0x3c, 0x24, 0x8a, 0x54, 0x24, 0x28, 0xf6, 0xc2, 0x3, 0xf, 0x84, 0x76, 0, 0, 0, 0x83, 0xff, 0xff, 0xf, 0x84, 0x6d, 0, 0, 0, 0x89, 0xf8, 0xe8, 0xce, 0x76, 0x1, 0, 0x85, 0xc0, 0x75, 0x62, 0xf6, 0x44, 0x24, 0x29, 0x4, 0x74, 0x23, 0xf6, 0xc2, 0x20, 0x74, 0x1e, 0x89, 0xfb, 0xb4, 0x3e, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xeb, 0x3, 0x1, 0, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x4b, 0x1, 0, 0, 0xf6, 0x44, 0x24, 0x28, 0x40, 0x74, 0x31, 0x8d, 0x54, 0x24, 0x8, 0x89, 0xfb, 0x31, 0xc9, 0xb4, 0x40, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0x89, 0x4, 0x24, 0x85, 0xc0, 0x7d, 0x1a, 0x89, 0xfb, 0xb4, 0x3e, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0x31, 0xc0, 0x66, 0x8b, 0x4, 0x24, 0xe8, 0xa6, 0xb, 0x1, 0, 0xe9, 0x13, 0x1, 0, 0, 0x83, 0xff, 0xff, 0xf, 0x85, 0x99, 0, 0, 0, 0xf6, 0x44, 0x24, 0x28, 0x20, 0x74, 0xe0, 0x31, 0xc0, 0x66, 0x8b, 0x4, 0x24, 0x83, 0xf8, 0x2, 0x75, 0xd5, 0x8d, 0x44, 0x24, 0x30, 0x83, 0xc0, 0x4, 0x8b, 0x40, 0xfc, 0x85, 0xc0, 0x75, 0x5, 0xb8, 0x80, 0x1, 0, 0, 0x8b, 0x15, 0xcc, 0x9, 0x1c, 0x10, 0xf7, 0xd2, 0x21, 0xd0, 0x31, 0xc9, 0xa8, 0x80, 0x75, 0x5, 0xb9, 0x1, 0, 0, 0, 0x81, 0xe1, 0xff, 0, 0, 0, 0x89, 0xf2, 0xb4, 0x3c, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0x89, 0x4, 0x24, 0x85, 0xc0, 0x7c, 0x96, 0x31, 0xff, 0x8b, 0x54, 0x24, 0x2c, 0x66, 0x8b, 0x3c, 0x24, 0x85, 0xd2, 0x74, 0x3a, 0x89, 0xfb, 0xb4, 0x3e, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0x89, 0x4, 0x24, 0x85, 0xc0, 0xf, 0x8c, 0x73, 0xff, 0xff, 0xff, 0x8a, 0x44, 0x24, 0x4, 0x8a, 0x6c, 0x24, 0x2c, 0x89, 0xf2, 0x8, 0xe8, 0xb4, 0x3d, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0x89, 0x4, 0x24, 0x85, 0xc0, 0xf, 0x8c, 0x54, 0xff, 0xff, 0xff, 0x31, 0xff, 0x66, 0x8b, 0x3c, 0x24, 0x89, 0xf8, 0xe8, 0xe6, 0x75, 0x1, 0, 0x24, 0x3c, 0x89, 0xc2, 0x89, 0xf8, 0xe8, 0xb4, 0x75, 0x1, 0, 0x85, 0xc0, 0x74, 0x3, 0x80, 0xce, 0x20, 0x80, 0x64, 0x24, 0x4, 0x7f, 0x83, 0x7c, 0x24, 0x4, 0x2, 0x75, 0x3, 0x80, 0xca, 0x3, 0x83, 0x7c, 0x24, 0x4, 0, 0x75, 0x3, 0x80, 0xca, 0x1, 0x83, 0x7c, 0x24, 0x4, 0x1, 0x75, 0x3, 0x80, 0xca, 0x2, 0xf6, 0x44, 0x24, 0x28, 0x10, 0x74, 0x3, 0x80, 0xca, 0x80, 0x89, 0xd0, 0x8a, 0x5c, 0x24, 0x29, 0xc, 0x40, 0xf6, 0xc3, 0x3, 0x74, 0x7, 0xf6, 0xc3, 0x2, 0x74, 0x10, 0xeb, 0xc, 0x81, 0x3d, 0xa9, 0xe7, 0x1b, 0x10, 0, 0x2, 0, 0, 0x75, 0x2, 0x89, 0xc2, 0x89, 0xf8, 0xe8, 0xd3, 0x75, 0x1, 0, 0x89, 0xf8, 0x83, 0xc4, 0xc, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x1017cf49, 0x20);      // dos open file: pushd(), pushd(flags), pushd(char * path)
    II(0x1017cf49, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x1017cf4a, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x1017cf4b, 0x1)     pushd(edx);                         /* push edx */
    II(0x1017cf4c, 0x1)     pushd(esi);                         /* push esi */
    II(0x1017cf4d, 0x1)     pushd(edi);                         /* push edi */
    II(0x1017cf4e, 0x3)     sub(esp, 0xc);                      /* sub esp, 0xc */
    II(0x1017cf51, 0x4)     mov(esi, memd_a32(ss, esp + 0x24)); /* mov esi, [esp+0x24] */     // esi <- char * path;
l_0x1017cf55:
    II(0x1017cf55, 0x3)     movzx(edi, memb_a32(ds, esi));      /* movzx edi, byte [esi] */
    II(0x1017cf58, 0x3)     cmp(edi, 0x20);                     /* cmp edi, 0x20 */
    II(0x1017cf5b, 0x2)     jnzd(0x1017cf60, 0x3);              /* jnz 0x1017cf60 */
    II(0x1017cf5d, 0x1)     inc(esi);                           /* inc esi */
    II(0x1017cf5e, 0x2)     jmpd(0x1017cf55, -0xb);             /* jmp 0x1017cf55 */
l_0x1017cf60:
    II(0x1017cf60, 0x4)     mov(eax, memd_a32(ss, esp + 0x28)); /* mov eax, [esp+0x28] */
    II(0x1017cf64, 0x5)     and_(eax, 0x83);                    /* and eax, 0x83 */
    II(0x1017cf69, 0x4)     mov(memd_a32(ss, esp + 0x4), eax);  /* mov [esp+0x4], eax */
    II(0x1017cf6d, 0x4)     mov(al, memb_a32(ss, esp + 0x4));   /* mov al, [esp+0x4] */
    II(0x1017cf71, 0x4)     mov(ah, memb_a32(ss, esp + 0x2c));  /* mov ah, [esp+0x2c] */
    II(0x1017cf75, 0x2)     mov(edx, esi);                      /* mov edx, esi */
    II(0x1017cf77, 0x2)     or_(al, ah);                        /* or al, ah */
    II(0x1017cf79, 0x5)     mov(edi, 0xffffffff);               /* mov edi, 0xffffffff */
    II(0x1017cf7e, 0x2)     mov(ah, 0x3d);                      /* mov ah, 0x3d */            // open file, edx - path, al flag.
    II(0x1017cf80, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1017cf82, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1017cf84, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1017cf86, 0x3)     mov(memd_a32(ss, esp), eax);        /* mov [esp], eax */
    II(0x1017cf89, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017cf8b, 0x2)     jld(0x1017cf93, 0x6);               /* jl 0x1017cf93 */
    II(0x1017cf8d, 0x2)     xor_(edi, edi);                     /* xor edi, edi */
    II(0x1017cf8f, 0x4)     mov(di, memw_a32(ss, esp));         /* mov di, [esp] */
l_0x1017cf93:
    II(0x1017cf93, 0x4)     mov(dl, memb_a32(ss, esp + 0x28));  /* mov dl, [esp+0x28] */
    II(0x1017cf97, 0x3)     test(dl, 0x3);                      /* test dl, 0x3 */
    II(0x1017cf9a, 0x6)     jzd(0x1017d016, 0x76);              /* jz dword 0x1017d016 */
    II(0x1017cfa0, 0x3)     cmp(edi, -0x1 /* 0xff */);          /* cmp edi, 0xff */
    II(0x1017cfa3, 0x6)     jzd(0x1017d016, 0x6d);              /* jz dword 0x1017d016 */
    II(0x1017cfa9, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x1017cfab, 0x5)     calld(0x1019467e, 0x176ce);         /* call 0x1019467e */
    II(0x1017cfb0, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017cfb2, 0x2)     jnzd(0x1017d016, 0x62);             /* jnz 0x1017d016 */
    II(0x1017cfb4, 0x5)     test(memb_a32(ss, esp + 0x29), 0x4); /* test byte [esp+0x29], 0x4 */
    II(0x1017cfb9, 0x2)     jzd(0x1017cfde, 0x23);              /* jz 0x1017cfde */
    II(0x1017cfbb, 0x3)     test(dl, 0x20);                     /* test dl, 0x20 */
    II(0x1017cfbe, 0x2)     jzd(0x1017cfde, 0x1e);              /* jz 0x1017cfde */
    II(0x1017cfc0, 0x2)     mov(ebx, edi);                      /* mov ebx, edi */
    II(0x1017cfc2, 0x2)     mov(ah, 0x3e);                      /* mov ah, 0x3e */
    II(0x1017cfc4, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1017cfc6, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1017cfc8, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1017cfca, 0x5)     mov(eax, 0x7);                      /* mov eax, 0x7 */
    II(0x1017cfcf, 0x5)     calld(0x1018d3bf, 0x103eb);         /* call 0x1018d3bf */
    II(0x1017cfd4, 0x5)     mov(eax, 0xffffffff);               /* mov eax, 0xffffffff */
    II(0x1017cfd9, 0x5)     jmpd(0x1017d129, 0x14b);            /* jmp 0x1017d129 */
l_0x1017cfde:
    II(0x1017cfde, 0x5)     test(memb_a32(ss, esp + 0x28), 0x40); /* test byte [esp+0x28], 0x40 */
    II(0x1017cfe3, 0x2)     jzd(0x1017d016, 0x31);              /* jz 0x1017d016 */
    II(0x1017cfe5, 0x4)     lea(edx, esp + 0x8);                /* lea edx, [esp+0x8] */
    II(0x1017cfe9, 0x2)     mov(ebx, edi);                      /* mov ebx, edi */
    II(0x1017cfeb, 0x2)     xor_(ecx, ecx);                     /* xor ecx, ecx */
    II(0x1017cfed, 0x2)     mov(ah, 0x40);                      /* mov ah, 0x40 */
    II(0x1017cfef, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1017cff1, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1017cff3, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1017cff5, 0x3)     mov(memd_a32(ss, esp), eax);        /* mov [esp], eax */
    II(0x1017cff8, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017cffa, 0x2)     jged(0x1017d016, 0x1a);             /* jge 0x1017d016 */
    II(0x1017cffc, 0x2)     mov(ebx, edi);                      /* mov ebx, edi */
    II(0x1017cffe, 0x2)     mov(ah, 0x3e);                      /* mov ah, 0x3e */
    II(0x1017d000, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1017d002, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1017d004, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
l_0x1017d006:
    II(0x1017d006, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x1017d008, 0x4)     mov(ax, memw_a32(ss, esp));         /* mov ax, [esp] */
    II(0x1017d00c, 0x5)     calld(0x1018dbb7, 0x10ba6);         /* call 0x1018dbb7 */
    II(0x1017d011, 0x5)     jmpd(0x1017d129, 0x113);            /* jmp 0x1017d129 */
l_0x1017d016:
    II(0x1017d016, 0x3)     cmp(edi, -0x1 /* 0xff */);          /* cmp edi, 0xff */
    II(0x1017d019, 0x6)     jnzd(0x1017d0b8, 0x99);             /* jnz dword 0x1017d0b8 */
    II(0x1017d01f, 0x5)     test(memb_a32(ss, esp + 0x28), 0x20); /* test byte [esp+0x28], 0x20 */
    II(0x1017d024, 0x2)     jzd(0x1017d006, -0x20);             /* jz 0x1017d006 */
    II(0x1017d026, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x1017d028, 0x4)     mov(ax, memw_a32(ss, esp));         /* mov ax, [esp] */
    II(0x1017d02c, 0x3)     cmp(eax, 0x2);                      /* cmp eax, 0x2 */
    II(0x1017d02f, 0x2)     jnzd(0x1017d006, -0x2b);            /* jnz 0x1017d006 */
    II(0x1017d031, 0x4)     lea(eax, esp + 0x30);               /* lea eax, [esp+0x30] */
    II(0x1017d035, 0x3)     add(eax, 0x4);                      /* add eax, 0x4 */
    II(0x1017d038, 0x3)     mov(eax, memd_a32(ds, eax - 0x4));  /* mov eax, [eax-0x4] */
    II(0x1017d03b, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017d03d, 0x2)     jnzd(0x1017d044, 0x5);              /* jnz 0x1017d044 */
    II(0x1017d03f, 0x5)     mov(eax, 0x180);                    /* mov eax, 0x180 */
l_0x1017d044:
    II(0x1017d044, 0x6)     mov(edx, memd_a32(ds, 0x101c09cc)); /* mov edx, [0x101c09cc] */
    II(0x1017d04a, 0x2)     not_(edx);                          /* not edx */
    II(0x1017d04c, 0x2)     and_(eax, edx);                     /* and eax, edx */
    II(0x1017d04e, 0x2)     xor_(ecx, ecx);                     /* xor ecx, ecx */
    II(0x1017d050, 0x2)     test(al, 0x80);                     /* test al, 0x80 */
    II(0x1017d052, 0x2)     jnzd(0x1017d059, 0x5);              /* jnz 0x1017d059 */
    II(0x1017d054, 0x5)     mov(ecx, 0x1);                      /* mov ecx, 0x1 */
l_0x1017d059:
    II(0x1017d059, 0x6)     and_(ecx, 0xff);                    /* and ecx, 0xff */
    II(0x1017d05f, 0x2)     mov(edx, esi);                      /* mov edx, esi */
    II(0x1017d061, 0x2)     mov(ah, 0x3c);                      /* mov ah, 0x3c */
    II(0x1017d063, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1017d065, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1017d067, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1017d069, 0x3)     mov(memd_a32(ss, esp), eax);        /* mov [esp], eax */
    II(0x1017d06c, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017d06e, 0x2)     jld(0x1017d006, -0x6a);             /* jl 0x1017d006 */
    II(0x1017d070, 0x2)     xor_(edi, edi);                     /* xor edi, edi */
    II(0x1017d072, 0x4)     mov(edx, memd_a32(ss, esp + 0x2c)); /* mov edx, [esp+0x2c] */
    II(0x1017d076, 0x4)     mov(di, memw_a32(ss, esp));         /* mov di, [esp] */
    II(0x1017d07a, 0x2)     test(edx, edx);                     /* test edx, edx */
    II(0x1017d07c, 0x2)     jzd(0x1017d0b8, 0x3a);              /* jz 0x1017d0b8 */
    II(0x1017d07e, 0x2)     mov(ebx, edi);                      /* mov ebx, edi */
    II(0x1017d080, 0x2)     mov(ah, 0x3e);                      /* mov ah, 0x3e */
    II(0x1017d082, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1017d084, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1017d086, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1017d088, 0x3)     mov(memd_a32(ss, esp), eax);        /* mov [esp], eax */
    II(0x1017d08b, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017d08d, 0x6)     jld(0x1017d006, -0x8d);             /* jl dword 0x1017d006 */
    II(0x1017d093, 0x4)     mov(al, memb_a32(ss, esp + 0x4));   /* mov al, [esp+0x4] */
    II(0x1017d097, 0x4)     mov(ch, memb_a32(ss, esp + 0x2c));  /* mov ch, [esp+0x2c] */
    II(0x1017d09b, 0x2)     mov(edx, esi);                      /* mov edx, esi */
    II(0x1017d09d, 0x2)     or_(al, ch);                        /* or al, ch */
    II(0x1017d09f, 0x2)     mov(ah, 0x3d);                      /* mov ah, 0x3d */
    II(0x1017d0a1, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1017d0a3, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1017d0a5, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1017d0a7, 0x3)     mov(memd_a32(ss, esp), eax);        /* mov [esp], eax */
    II(0x1017d0aa, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017d0ac, 0x6)     jld(0x1017d006, -0xac);             /* jl dword 0x1017d006 */
    II(0x1017d0b2, 0x2)     xor_(edi, edi);                     /* xor edi, edi */
    II(0x1017d0b4, 0x4)     mov(di, memw_a32(ss, esp));         /* mov di, [esp] */
l_0x1017d0b8:
    II(0x1017d0b8, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x1017d0ba, 0x5)     calld(0x101946a5, 0x175e6);         /* call 0x101946a5 */      // Смысл не понятен.
    II(0x1017d0bf, 0x2)     and_(al, 0x3c);                     /* and al, 0x3c */         // Похоже проверка файл ли это.
    II(0x1017d0c1, 0x2)     mov(edx, eax);                      /* mov edx, eax */         // Если файл, то eax = 0.
    II(0x1017d0c3, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x1017d0c5, 0x5)     calld(0x1019467e, 0x175b4);         /* call 0x1019467e */
    II(0x1017d0ca, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017d0cc, 0x2)     jzd(0x1017d0d1, 0x3);               /* jz 0x1017d0d1 */
    II(0x1017d0ce, 0x3)     or_(dh, 0x20);                      /* or dh, 0x20 */
l_0x1017d0d1:
    II(0x1017d0d1, 0x5)     and_(memb_a32(ss, esp + 0x4), 0x7f); /* and byte [esp+0x4], 0x7f */
    II(0x1017d0d6, 0x5)     cmp(memd_a32(ss, esp + 0x4), 0x2);  /* cmp dword [esp+0x4], 0x2 */
    II(0x1017d0db, 0x2)     jnzd(0x1017d0e0, 0x3);              /* jnz 0x1017d0e0 */
    II(0x1017d0dd, 0x3)     or_(dl, 0x3);                       /* or dl, 0x3 */
l_0x1017d0e0:
    II(0x1017d0e0, 0x5)     cmp(memd_a32(ss, esp + 0x4), 0);    /* cmp dword [esp+0x4], 0x0 */
    II(0x1017d0e5, 0x2)     jnzd(0x1017d0ea, 0x3);              /* jnz 0x1017d0ea */
    II(0x1017d0e7, 0x3)     or_(dl, 0x1);                       /* or dl, 0x1 */
l_0x1017d0ea:
    II(0x1017d0ea, 0x5)     cmp(memd_a32(ss, esp + 0x4), 0x1);  /* cmp dword [esp+0x4], 0x1 */
    II(0x1017d0ef, 0x2)     jnzd(0x1017d0f4, 0x3);              /* jnz 0x1017d0f4 */
    II(0x1017d0f1, 0x3)     or_(dl, 0x2);                       /* or dl, 0x2 */
l_0x1017d0f4:
    II(0x1017d0f4, 0x5)     test(memb_a32(ss, esp + 0x28), 0x10); /* test byte [esp+0x28], 0x10 */
    II(0x1017d0f9, 0x2)     jzd(0x1017d0fe, 0x3);               /* jz 0x1017d0fe */
    II(0x1017d0fb, 0x3)     or_(dl, 0x80);                      /* or dl, 0x80 */
l_0x1017d0fe:
    II(0x1017d0fe, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x1017d100, 0x4)     mov(bl, memb_a32(ss, esp + 0x29));  /* mov bl, [esp+0x29] */
    II(0x1017d104, 0x2)     or_(al, 0x40);                      /* or al, 0x40 */
    II(0x1017d106, 0x3)     test(bl, 0x3);                      /* test bl, 0x3 */
    II(0x1017d109, 0x2)     jzd(0x1017d112, 0x7);               /* jz 0x1017d112 */
    II(0x1017d10b, 0x3)     test(bl, 0x2);                      /* test bl, 0x2 */
    II(0x1017d10e, 0x2)     jzd(0x1017d120, 0x10);              /* jz 0x1017d120 */
    II(0x1017d110, 0x2)     jmpd(0x1017d11e, 0xc);              /* jmp 0x1017d11e */
l_0x1017d112:
    II(0x1017d112, 0xa)     cmp(memd_a32(ds, 0x101be7a9), 0x200); /* cmp dword [0x101be7a9], 0x200 */
    II(0x1017d11c, 0x2)     jnzd(0x1017d120, 0x2);              /* jnz 0x1017d120 */
l_0x1017d11e:
    II(0x1017d11e, 0x2)     mov(edx, eax);                      /* mov edx, eax */
l_0x1017d120:
    II(0x1017d120, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x1017d122, 0x5)     calld(0x101946fa, 0x175d3);         /* call 0x101946fa */
    II(0x1017d127, 0x2)     mov(eax, edi);                      /* mov eax, edi */
l_0x1017d129:
    II(0x1017d129, 0x3)     add(esp, 0xc);                      /* add esp, 0xc */
    II(0x1017d12c, 0x1)     popd(edi);                          /* pop edi */
    II(0x1017d12d, 0x1)     popd(esi);                          /* pop esi */
    II(0x1017d12e, 0x1)     popd(edx);                          /* pop edx */
    II(0x1017d12f, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1017d130, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x1017d131, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x1018d6b2, 0x521ccdfaf9cce144, 0x20, {0x53, 0x51, 0x52, 0x89, 0xc1, 0x89, 0xc3, 0xb4, 0x3e, 0xcd, 0x21, 0xd1, 0xd0, 0xd1, 0xc8, 0x85, 0xc0, 0x7c, 0xf, 0x89, 0xc8, 0x31, 0xd2, 0xe8, 0x2c, 0x70, 0, 0, 0x31, 0xc0, 0x5a, 0x59, 0x5b, 0xc3, 0xb8, 0x4, 0, 0, 0, 0xe8, 0xe1, 0xfc, 0xff, 0xff, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x5a, 0x59, 0x5b, 0xc3})
{
    FUNC_START_V2(0x1018d6b2, 0x20);
    II(0x1018d6b2, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x1018d6b3, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x1018d6b4, 0x1)     pushd(edx);                         /* push edx */
    II(0x1018d6b5, 0x2)     mov(ecx, eax);                      /* mov ecx, eax */
    II(0x1018d6b7, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */   // fd
    II(0x1018d6b9, 0x2)     mov(ah, 0x3e);                      /* mov ah, 0x3e */   // close
    II(0x1018d6bb, 0x2)     int_(0x21);                         /* int 0x21 */
    II(0x1018d6bd, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1018d6bf, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1018d6c1, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1018d6c3, 0x2)     jld(0x1018d6d4, 0xf);               /* jl 0x1018d6d4 */
    II(0x1018d6c5, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x1018d6c7, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x1018d6c9, 0x5)     calld(0x101946fa, 0x702c);          /* call 0x101946fa */
    II(0x1018d6ce, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x1018d6d0, 0x1)     popd(edx);                          /* pop edx */
    II(0x1018d6d1, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1018d6d2, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x1018d6d3, 0x1)     retd();                             /* ret  */
l_0x1018d6d4:
    II(0x1018d6d4, 0x5)     mov(eax, 0x4);                      /* mov eax, 0x4 */
    II(0x1018d6d9, 0x5)     calld(0x1018d3bf, -0x31f);          /* call 0x1018d3bf */
    II(0x1018d6de, 0x5)     mov(eax, 0xffffffff);               /* mov eax, 0xffffffff */
    II(0x1018d6e3, 0x1)     popd(edx);                          /* pop edx */
    II(0x1018d6e4, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1018d6e5, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x1018d6e6, 0x1)     retd();                             /* ret  */
}

//FUNC_INFO_V2(0x10170d58, func_0x10170d58, 0x20, {0x56, 0x57, 0x55, 0x83, 0xec, 0x10, 0x89, 0xc6, 0x89, 0xd7, 0x89, 0xdd, 0x89, 0x4c, 0x24, 0xc, 0xa1, 0xc0, 0xe1, 0x1b, 0x10, 0x8b, 0x50, 0x3c, 0x31, 0xc9, 0x83, 0xfa, 0xa, 0xf, 0x8d, 0xc0, 0x1, 0, 0, 0x89, 0xe0, 0xe8, 0x62, 0x2, 0, 0, 0x85, 0xc0, 0xf, 0x85, 0xb1, 0x1, 0, 0, 0x8b, 0x14, 0x24, 0x8d, 0x4, 0xd5, 0, 0, 0, 0, 0x8b, 0x1d, 0xc0, 0xe1, 0x1b, 0x10, 0x1, 0xd0, 0x83, 0xc3, 0x40, 0xc1, 0xe0, 0x2, 0x31, 0xd2, 0x1, 0xd8, 0xbb, 0x24, 0, 0, 0, 0xe8, 0x30, 0x50, 0xff, 0xff, 0x8b, 0x4, 0x24, 0x89, 0x44, 0x24, 0x4, 0x8b, 0x5c, 0x24, 0x4, 0xc1, 0xe0, 0x3, 0x1, 0xd8, 0x8b, 0x15, 0xc0, 0xe1, 0x1b, 0x10, 0x89, 0x54, 0x82, 0x40, 0x8d, 0x42, 0x40, 0x89, 0x44, 0x24, 0x8, 0x8b, 0x4, 0x24, 0x89, 0x44, 0x24, 0x4, 0x8b, 0x5c, 0x24, 0x4, 0xc1, 0xe0, 0x3, 0x1, 0xd8, 0xc1, 0xe0, 0x2, 0x8a, 0x5c, 0x24, 0xc, 0x1, 0xd0, 0xf6, 0xc3, 0x4, 0x74, 0x1d, 0x89, 0x70, 0x4c, 0x8b, 0x14, 0x24, 0x8d, 0x4, 0xd5, 0, 0, 0, 0, 0x1, 0xd0, 0x8b, 0x4c, 0x24, 0x8, 0xc1, 0xe0, 0x2, 0x1, 0xc1, 0xe9, 0x2f, 0x1, 0, 0, 0x89, 0x68, 0x4c, 0x8b, 0x4, 0x24, 0x89, 0x44, 0x24, 0x4, 0x8b, 0x5c, 0x24, 0x4, 0xc1, 0xe0, 0x3, 0x1, 0xd8, 0x89, 0x6c, 0x82, 0x50, 0x8b, 0x44, 0x24, 0xc, 0x25, 0xf0, 0, 0, 0, 0x83, 0xf8, 0x20, 0x72, 0x10, 0x76, 0x51, 0x83, 0xf8, 0x40, 0xf, 0x84, 0x88, 0, 0, 0, 0xe9, 0xfa, 0, 0, 0, 0x83, 0xf8, 0x10, 0xf, 0x85, 0xf1, 0, 0, 0, 0x8b, 0xc, 0x24, 0x8d, 0x4, 0xcd, 0, 0, 0, 0, 0x1, 0xc8, 0x89, 0x7c, 0x82, 0x5c, 0x8b, 0xc, 0x24, 0x8d, 0x4, 0xcd, 0, 0, 0, 0, 0x1, 0xc8, 0x89, 0x7c, 0x82, 0x60, 0x8b, 0x14, 0x24, 0x8d, 0x4, 0xd5, 0, 0, 0, 0, 0x1, 0xd0, 0x8b, 0x4c, 0x24, 0x8, 0xc1, 0xe0, 0x2, 0x1, 0xc1, 0xe9, 0xb7, 0, 0, 0, 0x89, 0xf0, 0xe8, 0xbc, 0x18, 0, 0, 0x8b, 0xc, 0x24, 0x89, 0xc2, 0x8d, 0x4, 0xcd, 0, 0, 0, 0, 0x8b, 0x1d, 0xc0, 0xe1, 0x1b, 0x10, 0x1, 0xc8, 0x89, 0x54, 0x83, 0x54, 0x89, 0xf0, 0xe8, 0x9d, 0x18, 0, 0, 0x8b, 0xc, 0x24, 0x89, 0xc6, 0x8d, 0x4, 0xcd, 0, 0, 0, 0, 0x8b, 0x15, 0xc0, 0xe1, 0x1b, 0x10, 0x1, 0xc8, 0x89, 0x74, 0x82, 0x58, 0xeb, 0x62, 0x89, 0xf0, 0xe8, 0x7c, 0x18, 0, 0, 0x8b, 0x14, 0x24, 0x89, 0xc1, 0x8d, 0x4, 0xd5, 0, 0, 0, 0, 0x8b, 0x1d, 0xc0, 0xe1, 0x1b, 0x10, 0x1, 0xd0, 0x89, 0x4c, 0x83, 0x54, 0x89, 0xf0, 0xe8, 0x5d, 0x18, 0, 0, 0x8b, 0xc, 0x24, 0x8d, 0x34, 0xcd, 0, 0, 0, 0, 0x8b, 0x15, 0xc0, 0xe1, 0x1b, 0x10, 0x1, 0xce, 0x89, 0x44, 0xb2, 0x58, 0x8b, 0x4, 0x24, 0x8d, 0x34, 0xc5, 0, 0, 0, 0, 0x1, 0xc6, 0x89, 0x7c, 0xb2, 0x5c, 0x8b, 0x4, 0x24, 0x8d, 0x34, 0xc5, 0, 0, 0, 0, 0x1, 0xc6, 0x81, 0xc7, 0, 0x40, 0, 0, 0x89, 0x7c, 0xb2, 0x60, 0x8b, 0xc, 0x24, 0x8d, 0x4, 0xcd, 0, 0, 0, 0, 0x1, 0xc8, 0x83, 0xc2, 0x40, 0xc1, 0xe0, 0x2, 0x8d, 0xc, 0x2, 0x85, 0xc9, 0x74, 0x2e, 0x8b, 0x34, 0x24, 0x8d, 0x4, 0xf5, 0, 0, 0, 0, 0x8b, 0x15, 0xc0, 0xe1, 0x1b, 0x10, 0x1, 0xf0, 0x8b, 0x5c, 0x24, 0xc, 0x89, 0x5c, 0x82, 0x44, 0x8b, 0x34, 0x24, 0x8d, 0x4, 0xf5, 0, 0, 0, 0, 0x1, 0xf0, 0xc6, 0x44, 0x82, 0x48, 0x1, 0xff, 0x42, 0x3c, 0x89, 0xc8, 0x83, 0xc4, 0x10, 0x5d, 0x5f, 0x5e, 0xc3})
//void func_0x10170d58()
//{
//    FUNC_START_V2(0x10170d58, 0x20);
//    II(0x10170d58, 0x1)    pushd(esi);                            /* push esi */
//    II(0x10170d59, 0x1)    pushd(edi);                            /* push edi */
//    II(0x10170d5a, 0x1)    pushd(ebp);                            /* push ebp */
//    II(0x10170d5b, 0x3)    sub(esp, 0x10);                        /* sub esp, 0x10 */
//    II(0x10170d5e, 0x2)    mov(esi, eax);                         /* mov esi, eax */
//    II(0x10170d60, 0x2)    mov(edi, edx);                         /* mov edi, edx */
//    II(0x10170d62, 0x2)    mov(ebp, ebx);                         /* mov ebp, ebx */
//    II(0x10170d64, 0x4)    mov(memd_a32(ss, esp + 0xc), ecx);     /* mov [esp+0xc], ecx */
//    II(0x10170d68, 0x5)    mov(eax, memd_a32(ds, 0x101be1c0));    /* mov eax, [0x101be1c0] */
//    II(0x10170d6d, 0x3)    mov(edx, memd_a32(ds, eax + 0x3c));    /* mov edx, [eax+0x3c] */
//    II(0x10170d70, 0x2)    xor_(ecx, ecx);                        /* xor ecx, ecx */
//    II(0x10170d72, 0x3)    cmp(edx, 0xa);                         /* cmp edx, 0xa */
//    II(0x10170d75, 0x6)    jged(0x10170f3b, 0x1c0);               /* jge dword 0x10170f3b */
//    II(0x10170d7b, 0x2)    mov(eax, esp);                         /* mov eax, esp */
//    II(0x10170d7d, 0x5)    calld(0x10170fe4, 0x262);              /* call 0x10170fe4 */
//    II(0x10170d82, 0x2)    test(eax, eax);                        /* test eax, eax */
//    II(0x10170d84, 0x6)    jnzd(0x10170f3b, 0x1b1);               /* jnz dword 0x10170f3b */
//    II(0x10170d8a, 0x3)    mov(edx, memd_a32(ss, esp));           /* mov edx, [esp] */
//    II(0x10170d8d, 0x7)    lea(eax, edx * 0x8 + 0);               /* lea eax, [edx*8+0x0] */
//    II(0x10170d94, 0x6)    mov(ebx, memd_a32(ds, 0x101be1c0));    /* mov ebx, [0x101be1c0] */
//    II(0x10170d9a, 0x2)    add(eax, edx);                         /* add eax, edx */
//    II(0x10170d9c, 0x3)    add(ebx, 0x40);                        /* add ebx, 0x40 */    // Первые 0x40 байт  технические?
//    II(0x10170d9f, 0x3)    shl(eax, 0x2);                         /* shl eax, 0x2 */
//    II(0x10170da2, 0x2)    xor_(edx, edx);                        /* xor edx, edx */
//    II(0x10170da4, 0x2)    add(eax, ebx);                         /* add eax, ebx */
//    II(0x10170da6, 0x5)    mov(ebx, 0x24);                        /* mov ebx, 0x24 */
//    II(0x10170dab, 0x5)    calld(call_memset, -0xafd0);            /* call 0x10165de0 */    // Обнуляем возвращаемую FILE.
//    II(0x10170db0, 0x3)    mov(eax, memd_a32(ss, esp));           /* mov eax, [esp] */
//    II(0x10170db3, 0x4)    mov(memd_a32(ss, esp + 0x4), eax);     /* mov [esp+0x4], eax */
//    II(0x10170db7, 0x4)    mov(ebx, memd_a32(ss, esp + 0x4));     /* mov ebx, [esp+0x4] */
//    II(0x10170dbb, 0x3)    shl(eax, 0x3);                         /* shl eax, 0x3 */
//    II(0x10170dbe, 0x2)    add(eax, ebx);                         /* add eax, ebx */
//    II(0x10170dc0, 0x6)    mov(edx, memd_a32(ds, 0x101be1c0));    /* mov edx, [0x101be1c0] */
//    II(0x10170dc6, 0x4)    mov(memd_a32(ds, edx + eax * 0x4 + 0x40), edx); /* mov [edx+eax*4+0x40], edx */
//    II(0x10170dca, 0x3)    lea(eax, edx + 0x40);                  /* lea eax, [edx+0x40] */
//    II(0x10170dcd, 0x4)    mov(memd_a32(ss, esp + 0x8), eax);     /* mov [esp+0x8], eax */
//    II(0x10170dd1, 0x3)    mov(eax, memd_a32(ss, esp));           /* mov eax, [esp] */
//    II(0x10170dd4, 0x4)    mov(memd_a32(ss, esp + 0x4), eax);     /* mov [esp+0x4], eax */
//    II(0x10170dd8, 0x4)    mov(ebx, memd_a32(ss, esp + 0x4));     /* mov ebx, [esp+0x4] */
//    II(0x10170ddc, 0x3)    shl(eax, 0x3);                         /* shl eax, 0x3 */
//    II(0x10170ddf, 0x2)    add(eax, ebx);                         /* add eax, ebx */
//    II(0x10170de1, 0x3)    shl(eax, 0x2);                         /* shl eax, 0x2 */
//    II(0x10170de4, 0x4)    mov(bl, memb_a32(ss, esp + 0xc));      /* mov bl, [esp+0xc] */
//    II(0x10170de8, 0x2)    add(eax, edx);                         /* add eax, edx */
//    II(0x10170dea, 0x3)    test(bl, 0x4);                         /* test bl, 0x4 */
//    II(0x10170ded, 0x2)    jzd(0x10170e0c, 0x1d);                 /* jz 0x10170e0c */
//    II(0x10170def, 0x3)    mov(memd_a32(ds, eax + 0x4c), esi);    /* mov [eax+0x4c], esi */
//    II(0x10170df2, 0x3)    mov(edx, memd_a32(ss, esp));           /* mov edx, [esp] */
//    II(0x10170df5, 0x7)    lea(eax, edx * 0x8 + 0);               /* lea eax, [edx*8+0x0] */
//    II(0x10170dfc, 0x2)    add(eax, edx);                         /* add eax, edx */
//    II(0x10170dfe, 0x4)    mov(ecx, memd_a32(ss, esp + 0x8));     /* mov ecx, [esp+0x8] */
//    II(0x10170e02, 0x3)    shl(eax, 0x2);                         /* shl eax, 0x2 */
//    II(0x10170e05, 0x2)    add(ecx, eax);                         /* add ecx, eax */
//    II(0x10170e07, 0x5)    jmpd(0x10170f3b, 0x12f);               /* jmp 0x10170f3b */
//l_0x10170e0c:
//    II(0x10170e0c, 0x3)    mov(memd_a32(ds, eax + 0x4c), ebp);    /* mov [eax+0x4c], ebp */
//    II(0x10170e0f, 0x3)    mov(eax, memd_a32(ss, esp));           /* mov eax, [esp] */
//    II(0x10170e12, 0x4)    mov(memd_a32(ss, esp + 0x4), eax);     /* mov [esp+0x4], eax */
//    II(0x10170e16, 0x4)    mov(ebx, memd_a32(ss, esp + 0x4));     /* mov ebx, [esp+0x4] */
//    II(0x10170e1a, 0x3)    shl(eax, 0x3);                         /* shl eax, 0x3 */
//    II(0x10170e1d, 0x2)    add(eax, ebx);                         /* add eax, ebx */
//    II(0x10170e1f, 0x4)    mov(memd_a32(ds, edx + eax * 0x4 + 0x50), ebp); /* mov [edx+eax*4+0x50], ebp */
//    II(0x10170e23, 0x4)    mov(eax, memd_a32(ss, esp + 0xc));     /* mov eax, [esp+0xc] */
//    II(0x10170e27, 0x5)    and_(eax, 0xf0);                       /* and eax, 0xf0 */
//    II(0x10170e2c, 0x3)    cmp(eax, 0x20);                        /* cmp eax, 0x20 */
//    II(0x10170e2f, 0x2)    jbd(0x10170e41, 0x10);                 /* jb 0x10170e41 */
//    II(0x10170e31, 0x2)    jbed(0x10170e84, 0x51);                /* jbe 0x10170e84 */
//    II(0x10170e33, 0x3)    cmp(eax, 0x40);                        /* cmp eax, 0x40 */
//    II(0x10170e36, 0x6)    jzd(0x10170ec4, 0x88);                 /* jz dword 0x10170ec4 */
//    II(0x10170e3c, 0x5)    jmpd(0x10170f3b, 0xfa);                /* jmp 0x10170f3b */
//l_0x10170e41:
//    II(0x10170e41, 0x3)    cmp(eax, 0x10);                        /* cmp eax, 0x10 */
//    II(0x10170e44, 0x6)    jnzd(0x10170f3b, 0xf1);                /* jnz dword 0x10170f3b */
//    II(0x10170e4a, 0x3)    mov(ecx, memd_a32(ss, esp));           /* mov ecx, [esp] */
//    II(0x10170e4d, 0x7)    lea(eax, ecx * 0x8 + 0);               /* lea eax, [ecx*8+0x0] */
//    II(0x10170e54, 0x2)    add(eax, ecx);                         /* add eax, ecx */
//    II(0x10170e56, 0x4)    mov(memd_a32(ds, edx + eax * 0x4 + 0x5c), edi); /* mov [edx+eax*4+0x5c], edi */
//    II(0x10170e5a, 0x3)    mov(ecx, memd_a32(ss, esp));           /* mov ecx, [esp] */
//    II(0x10170e5d, 0x7)    lea(eax, ecx * 0x8 + 0);               /* lea eax, [ecx*8+0x0] */
//    II(0x10170e64, 0x2)    add(eax, ecx);                         /* add eax, ecx */
//    II(0x10170e66, 0x4)    mov(memd_a32(ds, edx + eax * 0x4 + 0x60), edi); /* mov [edx+eax*4+0x60], edi */
//    II(0x10170e6a, 0x3)    mov(edx, memd_a32(ss, esp));           /* mov edx, [esp] */
//    II(0x10170e6d, 0x7)    lea(eax, edx * 0x8 + 0);               /* lea eax, [edx*8+0x0] */
//    II(0x10170e74, 0x2)    add(eax, edx);                         /* add eax, edx */
//    II(0x10170e76, 0x4)    mov(ecx, memd_a32(ss, esp + 0x8));     /* mov ecx, [esp+0x8] */
//    II(0x10170e7a, 0x3)    shl(eax, 0x2);                         /* shl eax, 0x2 */
//    II(0x10170e7d, 0x2)    add(ecx, eax);                         /* add ecx, eax */
//    II(0x10170e7f, 0x5)    jmpd(0x10170f3b, 0xb7);                /* jmp 0x10170f3b */
//l_0x10170e84:
//    II(0x10170e84, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x10170e86, 0x5)    calld(0x10172747, 0x18bc);             /* call 0x10172747 */
//    II(0x10170e8b, 0x3)    mov(ecx, memd_a32(ss, esp));           /* mov ecx, [esp] */
//    II(0x10170e8e, 0x2)    mov(edx, eax);                         /* mov edx, eax */
//    II(0x10170e90, 0x7)    lea(eax, ecx * 0x8 + 0);               /* lea eax, [ecx*8+0x0] */
//    II(0x10170e97, 0x6)    mov(ebx, memd_a32(ds, 0x101be1c0));    /* mov ebx, [0x101be1c0] */
//    II(0x10170e9d, 0x2)    add(eax, ecx);                         /* add eax, ecx */
//    II(0x10170e9f, 0x4)    mov(memd_a32(ds, ebx + eax * 0x4 + 0x54), edx); /* mov [ebx+eax*4+0x54], edx */
//    II(0x10170ea3, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x10170ea5, 0x5)    calld(0x10172747, 0x189d);             /* call 0x10172747 */
//    II(0x10170eaa, 0x3)    mov(ecx, memd_a32(ss, esp));           /* mov ecx, [esp] */
//    II(0x10170ead, 0x2)    mov(esi, eax);                         /* mov esi, eax */
//    II(0x10170eaf, 0x7)    lea(eax, ecx * 0x8 + 0);               /* lea eax, [ecx*8+0x0] */
//    II(0x10170eb6, 0x6)    mov(edx, memd_a32(ds, 0x101be1c0));    /* mov edx, [0x101be1c0] */
//    II(0x10170ebc, 0x2)    add(eax, ecx);                         /* add eax, ecx */
//    II(0x10170ebe, 0x4)    mov(memd_a32(ds, edx + eax * 0x4 + 0x58), esi); /* mov [edx+eax*4+0x58], esi */
//    II(0x10170ec2, 0x2)    jmpd(0x10170f26, 0x62);                /* jmp 0x10170f26 */
//l_0x10170ec4:
//    II(0x10170ec4, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x10170ec6, 0x5)    calld(0x10172747, 0x187c);             /* call 0x10172747 */
//    II(0x10170ecb, 0x3)    mov(edx, memd_a32(ss, esp));           /* mov edx, [esp] */
//    II(0x10170ece, 0x2)    mov(ecx, eax);                         /* mov ecx, eax */
//    II(0x10170ed0, 0x7)    lea(eax, edx * 0x8 + 0);               /* lea eax, [edx*8+0x0] */
//    II(0x10170ed7, 0x6)    mov(ebx, memd_a32(ds, 0x101be1c0));    /* mov ebx, [0x101be1c0] */
//    II(0x10170edd, 0x2)    add(eax, edx);                         /* add eax, edx */
//    II(0x10170edf, 0x4)    mov(memd_a32(ds, ebx + eax * 0x4 + 0x54), ecx); /* mov [ebx+eax*4+0x54], ecx */
//    II(0x10170ee3, 0x2)    mov(eax, esi);                         /* mov eax, esi */
//    II(0x10170ee5, 0x5)    calld(0x10172747, 0x185d);             /* call 0x10172747 */
//    II(0x10170eea, 0x3)    mov(ecx, memd_a32(ss, esp));           /* mov ecx, [esp] */
//    II(0x10170eed, 0x7)    lea(esi, ecx * 0x8 + 0);               /* lea esi, [ecx*8+0x0] */
//    II(0x10170ef4, 0x6)    mov(edx, memd_a32(ds, 0x101be1c0));    /* mov edx, [0x101be1c0] */
//    II(0x10170efa, 0x2)    add(esi, ecx);                         /* add esi, ecx */
//    II(0x10170efc, 0x4)    mov(memd_a32(ds, edx + esi * 0x4 + 0x58), eax); /* mov [edx+esi*4+0x58], eax */
//    II(0x10170f00, 0x3)    mov(eax, memd_a32(ss, esp));           /* mov eax, [esp] */
//    II(0x10170f03, 0x7)    lea(esi, eax * 0x8 + 0);               /* lea esi, [eax*8+0x0] */
//    II(0x10170f0a, 0x2)    add(esi, eax);                         /* add esi, eax */
//    II(0x10170f0c, 0x4)    mov(memd_a32(ds, edx + esi * 0x4 + 0x5c), edi); /* mov [edx+esi*4+0x5c], edi */
//    II(0x10170f10, 0x3)    mov(eax, memd_a32(ss, esp));           /* mov eax, [esp] */
//    II(0x10170f13, 0x7)    lea(esi, eax * 0x8 + 0);               /* lea esi, [eax*8+0x0] */
//    II(0x10170f1a, 0x2)    add(esi, eax);                         /* add esi, eax */
//    II(0x10170f1c, 0x6)    add(edi, 0x4000);                      /* add edi, 0x4000 */
//    II(0x10170f22, 0x4)    mov(memd_a32(ds, edx + esi * 0x4 + 0x60), edi); /* mov [edx+esi*4+0x60], edi */
//l_0x10170f26:
//    II(0x10170f26, 0x3)    mov(ecx, memd_a32(ss, esp));           /* mov ecx, [esp] */
//    II(0x10170f29, 0x7)    lea(eax, ecx * 0x8 + 0);               /* lea eax, [ecx*8+0x0] */
//    II(0x10170f30, 0x2)    add(eax, ecx);                         /* add eax, ecx */
//    II(0x10170f32, 0x3)    add(edx, 0x40);                        /* add edx, 0x40 */
//    II(0x10170f35, 0x3)    shl(eax, 0x2);                         /* shl eax, 0x2 */
//    II(0x10170f38, 0x3)    lea(ecx, edx + eax);                   /* lea ecx, [edx+eax] */
//l_0x10170f3b:
//    II(0x10170f3b, 0x2)    test(ecx, ecx);                        /* test ecx, ecx */
//    II(0x10170f3d, 0x2)    jzd(0x10170f6d, 0x2e);                 /* jz 0x10170f6d */
//    II(0x10170f3f, 0x3)    mov(esi, memd_a32(ss, esp));           /* mov esi, [esp] */
//    II(0x10170f42, 0x7)    lea(eax, esi * 0x8 + 0);               /* lea eax, [esi*8+0x0] */
//    II(0x10170f49, 0x6)    mov(edx, memd_a32(ds, 0x101be1c0));    /* mov edx, [0x101be1c0] */
//    II(0x10170f4f, 0x2)    add(eax, esi);                         /* add eax, esi */
//    II(0x10170f51, 0x4)    mov(ebx, memd_a32(ss, esp + 0xc));     /* mov ebx, [esp+0xc] */
//    II(0x10170f55, 0x4)    mov(memd_a32(ds, edx + eax * 0x4 + 0x44), ebx); /* mov [edx+eax*4+0x44], ebx */
//    II(0x10170f59, 0x3)    mov(esi, memd_a32(ss, esp));           /* mov esi, [esp] */
//    II(0x10170f5c, 0x7)    lea(eax, esi * 0x8 + 0);               /* lea eax, [esi*8+0x0] */
//    II(0x10170f63, 0x2)    add(eax, esi);                         /* add eax, esi */
//    II(0x10170f65, 0x5)    mov(memb_a32(ds, edx + eax * 0x4 + 0x48), 0x1); /* mov byte [edx+eax*4+0x48], 0x1 */
//    II(0x10170f6a, 0x3)    inc(memd_a32(ds, edx + 0x3c));         /* inc dword [edx+0x3c] */
//l_0x10170f6d:
//    II(0x10170f6d, 0x2)    mov(eax, ecx);                         /* mov eax, ecx */
//    II(0x10170f6f, 0x3)    add(esp, 0x10);                        /* add esp, 0x10 */
//    II(0x10170f72, 0x1)    popd(ebp);                             /* pop ebp */
//    II(0x10170f73, 0x1)    popd(edi);                             /* pop edi */
//    II(0x10170f74, 0x1)    popd(esi);                             /* pop esi */
//    II(0x10170f75, 0x1)    retd();                                /* ret  */
//}

FUNC_INFO_V3(0x10172747, 0xb23a5a51fb18d602, 0x20, {0x53, 0x52, 0x89, 0xc2, 0x8b, 0x40, 0x10, 0xe8, 0xca, 0xaf, 0x1, 0, 0x89, 0xc3, 0x83, 0xf8, 0xff, 0x74, 0x2a, 0xf6, 0x42, 0xc, 0x80, 0x74, 0xd, 0xf6, 0x42, 0xd, 0x10, 0x74, 0x7, 0x89, 0xd0, 0xe8, 0xf3, 0x49, 0x1, 0, 0x83, 0x7a, 0x4, 0, 0x74, 0x11, 0xf6, 0x42, 0xd, 0x10, 0x74, 0x8, 0x3, 0x5a, 0x4, 0x89, 0xd8, 0x5a, 0x5b, 0xc3, 0x2b, 0x5a, 0x4, 0x89, 0xd8, 0x5a, 0x5b, 0xc3})
{
    FUNC_START_V2(0x10172747, 0x20);       // get position in FILE *
    II(0x10172747, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x10172748, 0x1)     pushd(edx);                         /* push edx */
    II(0x10172749, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x1017274b, 0x3)     mov(eax, memd_a32(ds, eax + 0x10)); /* mov eax, [eax+0x10] */
    II(0x1017274e, 0x5)     calld(0x1018d71d, 0x1afca);         /* call 0x1018d71d */       // get position in file
    II(0x10172753, 0x2)     mov(ebx, eax);                      /* mov ebx, eax */
    II(0x10172755, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x10172758, 0x2)     jzd(0x10172784, 0x2a);              /* jz 0x10172784 */
    II(0x1017275a, 0x4)     test(memb_a32(ds, edx + 0xc), 0x80); /* test byte [edx+0xc], 0x80 */
    II(0x1017275e, 0x2)     jzd(0x1017276d, 0xd);               /* jz 0x1017276d */
    II(0x10172760, 0x4)     test(memb_a32(ds, edx + 0xd), 0x10); /* test byte [edx+0xd], 0x10 */
    II(0x10172764, 0x2)     jzd(0x1017276d, 0x7);               /* jz 0x1017276d */
    II(0x10172766, 0x2)     mov(eax, edx);                      /* mov eax, edx */
    II(0x10172768, 0x5)     calld(0x10187160, 0x149f3);         /* call 0x10187160 */
l_0x1017276d:
    II(0x1017276d, 0x4)     cmp(memd_a32(ds, edx + 0x4), 0);    /* cmp dword [edx+0x4], 0x0 */
    II(0x10172771, 0x2)     jzd(0x10172784, 0x11);              /* jz 0x10172784 */
    II(0x10172773, 0x4)     test(memb_a32(ds, edx + 0xd), 0x10); /* test byte [edx+0xd], 0x10 */
    II(0x10172777, 0x2)     jzd(0x10172781, 0x8);               /* jz 0x10172781 */
    II(0x10172779, 0x3)     add(ebx, memd_a32(ds, edx + 0x4));  /* add ebx, [edx+0x4] */
    II(0x1017277c, 0x2)     mov(eax, ebx);                      /* mov eax, ebx */
    II(0x1017277e, 0x1)     popd(edx);                          /* pop edx */
    II(0x1017277f, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10172780, 0x1)     retd();                             /* ret  */
l_0x10172781:
    II(0x10172781, 0x3)     sub(ebx, memd_a32(ds, edx + 0x4));  /* sub ebx, [edx+0x4] */
l_0x10172784:
    II(0x10172784, 0x2)     mov(eax, ebx);                      /* mov eax, ebx */
    II(0x10172786, 0x1)     popd(edx);                          /* pop edx */
    II(0x10172787, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x10172788, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(0x1018d71d, 0x92c98cecefd194ef, 0x20, {0x53, 0x52, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0xe8, 0x6c, 0xfa, 0xfe, 0xff, 0x5a, 0x5b, 0xc3})
{
    FUNC_START_V2(0x1018d71d, 0x20);    // lseek to +0. Видимо необходима для получения текущей позиции в файле.
    II(0x1018d71d, 0x1)     pushd(ebx);                         /* push ebx */
    II(0x1018d71e, 0x1)     pushd(edx);                         /* push edx */
    II(0x1018d71f, 0x5)     mov(ebx, 0x1);                      /* mov ebx, 0x1 */
    II(0x1018d724, 0x2)     xor_(edx, edx);                     /* xor edx, edx */
    II(0x1018d726, 0x5)     calld(sys_lseek, -0x10594);            /* call 0x1017d197 */
    II(0x1018d72b, 0x1)     popd(edx);                          /* pop edx */
    II(0x1018d72c, 0x1)     popd(ebx);                          /* pop ebx */
    II(0x1018d72d, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(sys_lseek, 0x99aaa67b7a104ca6, 0x20, {0x51, 0x57, 0x83, 0xec, 0x4, 0x89, 0xc1, 0x89, 0xe7, 0x88, 0xd8, 0x89, 0xcb, 0xb4, 0x42, 0x89, 0xd1, 0xc1, 0xe9, 0x10, 0xcd, 0x21, 0x66, 0x36, 0x89, 0x7, 0x66, 0x36, 0x89, 0x57, 0x2, 0xd1, 0xd0, 0xd1, 0xc8, 0x89, 0xc2, 0x85, 0xc0, 0x7d, 0x11, 0x31, 0xc0, 0x66, 0x89, 0xd0, 0xe8, 0xed, 0x9, 0x1, 0, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x3, 0x8b, 0x4, 0x24, 0x83, 0xc4, 0x4, 0x5f, 0x59, 0xc3})
{
    FUNC_START_V2(sys_lseek, 0x20);        // lseek   eax - fd, bl - where, edx - value
    II(sys_lseek, 0x1)         pushd(ecx);                         /* push ecx */
    II(0x1017d198, 0x1)     pushd(edi);                         /* push edi */
    II(0x1017d199, 0x3)     sub(esp, 0x4);                      /* sub esp, 0x4 */
    II(0x1017d19c, 0x2)     mov(ecx, eax);                      /* mov ecx, eax */
    II(0x1017d19e, 0x2)     mov(edi, esp);                      /* mov edi, esp */
    II(0x1017d1a0, 0x2)     mov(al, bl);                        /* mov al, bl */
    II(0x1017d1a2, 0x2)     mov(ebx, ecx);                      /* mov ebx, ecx */
    II(0x1017d1a4, 0x2)     mov(ah, 0x42);                      /* mov ah, 0x42 */
    II(0x1017d1a6, 0x2)     mov(ecx, edx);                      /* mov ecx, edx */
    II(0x1017d1a8, 0x3)     shr(ecx, 0x10);                     /* shr ecx, 0x10 */
    II(0x1017d1ab, 0x2)     int_(0x21);                         /* int 0x21 */              // bx - fd, al - where, {cx, dx} - value
    II(0x1017d1ad, 0x4)     mov(memw_a32(ss, edi), ax);         /* mov [ss:edi], ax */
    II(0x1017d1b1, 0x5)     mov(memw_a32(ss, edi + 0x2), dx);   /* mov [ss:edi+0x2], dx */
    II(0x1017d1b6, 0x2)     rcl(eax, 0x1);                      /* rcl eax, 1 */
    II(0x1017d1b8, 0x2)     ror(eax, 0x1);                      /* ror eax, 1 */
    II(0x1017d1ba, 0x2)     mov(edx, eax);                      /* mov edx, eax */
    II(0x1017d1bc, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017d1be, 0x2)     jged(0x1017d1d1, 0x11);             /* jge 0x1017d1d1 */
    II(0x1017d1c0, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
    II(0x1017d1c2, 0x3)     mov(ax, dx);                        /* mov ax, dx */
    II(0x1017d1c5, 0x5)     calld(0x1018dbb7, 0x109ed);         /* call 0x1018dbb7 */
    II(0x1017d1ca, 0x5)     mov(eax, 0xffffffff);               /* mov eax, 0xffffffff */
    II(0x1017d1cf, 0x2)     jmpd(0x1017d1d4, 0x3);              /* jmp 0x1017d1d4 */
l_0x1017d1d1:
    II(0x1017d1d1, 0x3)     mov(eax, memd_a32(ss, esp));        /* mov eax, [esp] */
l_0x1017d1d4:
    II(0x1017d1d4, 0x3)     add(esp, 0x4);                      /* add esp, 0x4 */
    II(0x1017d1d7, 0x1)     popd(edi);                          /* pop edi */
    II(0x1017d1d8, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1017d1d9, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(my_fseek, 0x6bb258e2c9b2b999, 0x20, {0x68, 0x24, 0, 0, 0, 0xe8, 0xf3, 0x68, 0x7, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xee, 0x2f, 0x8, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3})
{
    FUNC_START_V2(my_fseek, 0x20);    //  eax - FILE *  edx - offset   ebx - whence
    II(my_fseek, 0x5)         pushd(0x24);                        /* push dword 0x24 */
    II(0x100ef45a, 0x5)     calld(sys_check_available_stack_size, 0x768f3); /* call 0x10165d52 */
    II(0x100ef45f, 0x1)     pushd(ecx);                         /* push ecx */
    II(0x100ef460, 0x1)     pushd(esi);                         /* push esi */
    II(0x100ef461, 0x1)     pushd(edi);                         /* push edi */
    II(0x100ef462, 0x1)     pushd(ebp);                         /* push ebp */
    II(0x100ef463, 0x2)     mov(ebp, esp);                      /* mov ebp, esp */
    II(0x100ef465, 0x6)     sub(esp, 0x10);                     /* sub esp, 0x10 */
    II(0x100ef46b, 0x3)     mov(memd_a32(ss, ebp - 0xc), eax);  /* mov [ebp-0xc], eax */
    II(0x100ef46e, 0x3)     mov(memd_a32(ss, ebp - 0x8), edx);  /* mov [ebp-0x8], edx */
    II(0x100ef471, 0x3)     mov(memd_a32(ss, ebp - 0x4), ebx);  /* mov [ebp-0x4], ebx */
//    II(0x100ef474, 0x3)     mov(ebx, memd_a32(ss, ebp - 0x4));  /* mov ebx, [ebp-0x4] */
//    II(0x100ef477, 0x3)     mov(edx, memd_a32(ss, ebp - 0x8));  /* mov edx, [ebp-0x8] */
//    II(0x100ef47a, 0x3)     mov(eax, memd_a32(ss, ebp - 0xc));  /* mov eax, [ebp-0xc] */
    II(0x100ef47d, 0x5)     calld(sys_fseek, 0x82fee);            /* call 0x10172470 */
    II(0x100ef482, 0x3)     mov(memd_a32(ss, ebp - 0x10), eax); /* mov [ebp-0x10], eax */
//    II(0x100ef485, 0x3)     mov(eax, memd_a32(ss, ebp - 0x10)); /* mov eax, [ebp-0x10] */
    II(0x100ef488, 0x2)     mov(esp, ebp);                      /* mov esp, ebp */
    II(0x100ef48a, 0x1)     popd(ebp);                          /* pop ebp */
    II(0x100ef48b, 0x1)     popd(edi);                          /* pop edi */
    II(0x100ef48c, 0x1)     popd(esi);                          /* pop esi */
    II(0x100ef48d, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x100ef48e, 0x1)     retd();                             /* ret  */
}

FUNC_INFO_V3(sys_fseek, 0x1d612294a697c925, 0x20, {0x51, 0x56, 0x57, 0x89, 0xc1, 0x89, 0xd6, 0xf6, 0x40, 0xc, 0x6, 0x74, 0x5b, 0xf6, 0x41, 0xd, 0x10, 0x74, 0x26, 0x89, 0xc8, 0xe8, 0x4f, 0xb1, 0x1, 0, 0x85, 0xc0, 0x74, 0x2f, 0x85, 0xdb, 0x75, 0xe, 0x85, 0xf6, 0x7d, 0xa, 0xb8, 0x9, 0, 0, 0, 0xe8, 0x1f, 0xaf, 0x1, 0, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x5f, 0x5e, 0x59, 0xc3, 0x83, 0xfb, 0x1, 0x75, 0x3, 0x2b, 0x71, 0x4, 0x8b, 0x41, 0x8, 0xc7, 0x41, 0x4, 0, 0, 0, 0, 0x89, 0x1, 0x80, 0x61, 0xc, 0xeb, 0x89, 0xf2, 0x8b, 0x41, 0x10, 0xe8, 0xcc, 0xac, 0, 0, 0x83, 0xf8, 0xff, 0xf, 0x85, 0x92, 0, 0, 0, 0x5f, 0x5e, 0x59, 0xc3, 0x83, 0xfb, 0x1, 0x72, 0x9, 0x76, 0xd, 0x83, 0xfb, 0x2, 0x74, 0x5e, 0xeb, 0xb0, 0x85, 0xdb, 0x74, 0x27, 0xeb, 0xaa, 0x89, 0xca, 0x89, 0xf0, 0x8b, 0x79, 0x4, 0xe8, 0x36, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x6a, 0x89, 0xf2, 0x8b, 0x41, 0x10, 0x29, 0xfa, 0xe8, 0x8f, 0xac, 0, 0, 0x83, 0xf8, 0xff, 0x75, 0x59, 0x5f, 0x5e, 0x59, 0xc3, 0x8b, 0x41, 0x10, 0xe8, 0x4, 0xb2, 0x1, 0, 0x8b, 0x51, 0x4, 0x89, 0xf7, 0x29, 0xd0, 0x29, 0xc7, 0x89, 0xca, 0x89, 0xf8, 0xe8, 0x3, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x37, 0x89, 0xf2, 0x8b, 0x41, 0x10, 0xe8, 0x5e, 0xac, 0, 0, 0x83, 0xf8, 0xff, 0x75, 0x28, 0x5f, 0x5e, 0x59, 0xc3, 0x8b, 0x41, 0x8, 0x8a, 0x51, 0xc, 0x89, 0x1, 0x80, 0xe2, 0xef, 0x8b, 0x41, 0x10, 0x88, 0x51, 0xc, 0x89, 0xf2, 0xc7, 0x41, 0x4, 0, 0, 0, 0, 0xe8, 0x36, 0xac, 0, 0, 0x83, 0xf8, 0xff, 0x74, 0x2, 0x31, 0xc0, 0x5f, 0x5e, 0x59, 0xc3})
{
    FUNC_START_V2(sys_fseek, 0x20);      // eax - FILE *  edx - offset   ebx - whence
    II(sys_fseek, 0x1)        pushd(ecx);                         /* push ecx */
    II(0x10172471, 0x1)     pushd(esi);                         /* push esi */
    II(0x10172472, 0x1)     pushd(edi);                         /* push edi */
    II(0x10172473, 0x2)     mov(ecx, eax);                      /* mov ecx, eax */
    II(0x10172475, 0x2)     mov(esi, edx);                      /* mov esi, edx */
    II(0x10172477, 0x4)     test(memb_a32(ds, eax + 0xc), 0x6); /* test byte [eax+0xc], 0x6 */
    II(0x1017247b, 0x2)     jzd(0x101724d8, 0x5b);              /* jz 0x101724d8 */
    II(0x1017247d, 0x4)     test(memb_a32(ds, ecx + 0xd), 0x10); /* test byte [ecx+0xd], 0x10 */
    II(0x10172481, 0x2)     jzd(0x101724a9, 0x26);              /* jz 0x101724a9 */
    II(0x10172483, 0x2)     mov(eax, ecx);                      /* mov eax, ecx */
    II(0x10172485, 0x5)     calld(0x1018d5d9, 0x1b14f);         /* call 0x1018d5d9 */    // write all  from struct eax ?
    II(0x1017248a, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017248c, 0x2)     jzd(0x101724bd, 0x2f);              /* jz 0x101724bd */
    II(0x1017248e, 0x2)     test(ebx, ebx);                     /* test ebx, ebx */
    II(0x10172490, 0x2)     jnzd(0x101724a0, 0xe);              /* jnz 0x101724a0 */
    II(0x10172492, 0x2)     test(esi, esi);                     /* test esi, esi */
    II(0x10172494, 0x2)     jged(0x101724a0, 0xa);              /* jge 0x101724a0 */
l_0x10172496:
    II(0x10172496, 0x5)     mov(eax, 0x9);                      /* mov eax, 0x9 */
    II(0x1017249b, 0x5)     calld(0x1018d3bf, 0x1af1f);         /* call 0x1018d3bf */
l_0x101724a0:
    II(0x101724a0, 0x5)     mov(eax, 0xffffffff);               /* mov eax, 0xffffffff */
    II(0x101724a5, 0x1)     popd(edi);                          /* pop edi */
    II(0x101724a6, 0x1)     popd(esi);                          /* pop esi */
    II(0x101724a7, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x101724a8, 0x1)     retd();                             /* ret  */
l_0x101724a9:
    II(0x101724a9, 0x3)     cmp(ebx, 0x1);                      /* cmp ebx, 0x1 */
    II(0x101724ac, 0x2)     jnzd(0x101724b1, 0x3);              /* jnz 0x101724b1 */
    II(0x101724ae, 0x3)     sub(esi, memd_a32(ds, ecx + 0x4));  /* sub esi, [ecx+0x4] */
l_0x101724b1:
    II(0x101724b1, 0x3)     mov(eax, memd_a32(ds, ecx + 0x8));  /* mov eax, [ecx+0x8] */
    II(0x101724b4, 0x7)     mov(memd_a32(ds, ecx + 0x4), 0);    /* mov dword [ecx+0x4], 0x0 */
    II(0x101724bb, 0x2)     mov(memd_a32(ds, ecx), eax);        /* mov [ecx], eax */
l_0x101724bd:
    II(0x101724bd, 0x4)     and_(memb_a32(ds, ecx + 0xc), -0x15 /* 0xeb */); /* and byte [ecx+0xc], 0xeb */
    II(0x101724c1, 0x2)     mov(edx, esi);                      /* mov edx, esi */
    II(0x101724c3, 0x3)     mov(eax, memd_a32(ds, ecx + 0x10)); /* mov eax, [ecx+0x10] */
    II(0x101724c6, 0x5)     calld(sys_lseek, 0xaccc);              /* call 0x1017d197 */
    II(0x101724cb, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x101724ce, 0x6)     jnzd(0x10172566, 0x92);             /* jnz dword 0x10172566 */
    II(0x101724d4, 0x1)     popd(edi);                          /* pop edi */
    II(0x101724d5, 0x1)     popd(esi);                          /* pop esi */
    II(0x101724d6, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x101724d7, 0x1)     retd();                             /* ret  */
l_0x101724d8:
    II(0x101724d8, 0x3)     cmp(ebx, 0x1);                      /* cmp ebx, 0x1 */
    II(0x101724db, 0x2)     jbd(0x101724e6, 0x9);               /* jb 0x101724e6 */
    II(0x101724dd, 0x2)     jbed(0x101724ec, 0xd);              /* jbe 0x101724ec */
    II(0x101724df, 0x3)     cmp(ebx, 0x2);                      /* cmp ebx, 0x2 */
    II(0x101724e2, 0x2)     jzd(0x10172542, 0x5e);              /* jz 0x10172542 */
    II(0x101724e4, 0x2)     jmpd(0x10172496, -0x50);            /* jmp 0x10172496 */
l_0x101724e6:
    II(0x101724e6, 0x2)     test(ebx, ebx);                     /* test ebx, ebx */
    II(0x101724e8, 0x2)     jzd(0x10172511, 0x27);              /* jz 0x10172511 */
    II(0x101724ea, 0x2)     jmpd(0x10172496, -0x56);            /* jmp 0x10172496 */
l_0x101724ec:
    II(0x101724ec, 0x2)     mov(edx, ecx);                      /* mov edx, ecx */
    II(0x101724ee, 0x2)     mov(eax, esi);                      /* mov eax, esi */
    II(0x101724f0, 0x3)     mov(edi, memd_a32(ds, ecx + 0x4));  /* mov edi, [ecx+0x4] */
    II(0x101724f3, 0x5)     calld(0x1017242e, -0xca);           /* call 0x1017242e */
    II(0x101724f8, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x101724fa, 0x2)     jzd(0x10172566, 0x6a);              /* jz 0x10172566 */
    II(0x101724fc, 0x2)     mov(edx, esi);                      /* mov edx, esi */
    II(0x101724fe, 0x3)     mov(eax, memd_a32(ds, ecx + 0x10)); /* mov eax, [ecx+0x10] */
    II(0x10172501, 0x2)     sub(edx, edi);                      /* sub edx, edi */
    II(0x10172503, 0x5)     calld(sys_lseek, 0xac8f);              /* call 0x1017d197 */
    II(0x10172508, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x1017250b, 0x2)     jnzd(0x10172566, 0x59);             /* jnz 0x10172566 */
    II(0x1017250d, 0x1)     popd(edi);                          /* pop edi */
    II(0x1017250e, 0x1)     popd(esi);                          /* pop esi */
    II(0x1017250f, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10172510, 0x1)     retd();                             /* ret  */
l_0x10172511:
    II(0x10172511, 0x3)     mov(eax, memd_a32(ds, ecx + 0x10)); /* mov eax, [ecx+0x10] */
    II(0x10172514, 0x5)     calld(0x1018d71d, 0x1b204);         /* call 0x1018d71d */
    II(0x10172519, 0x3)     mov(edx, memd_a32(ds, ecx + 0x4));  /* mov edx, [ecx+0x4] */
    II(0x1017251c, 0x2)     mov(edi, esi);                      /* mov edi, esi */
    II(0x1017251e, 0x2)     sub(eax, edx);                      /* sub eax, edx */
    II(0x10172520, 0x2)     sub(edi, eax);                      /* sub edi, eax */
    II(0x10172522, 0x2)     mov(edx, ecx);                      /* mov edx, ecx */
    II(0x10172524, 0x2)     mov(eax, edi);                      /* mov eax, edi */
    II(0x10172526, 0x5)     calld(0x1017242e, -0xfd);           /* call 0x1017242e */
    II(0x1017252b, 0x2)     test(eax, eax);                     /* test eax, eax */
    II(0x1017252d, 0x2)     jzd(0x10172566, 0x37);              /* jz 0x10172566 */
    II(0x1017252f, 0x2)     mov(edx, esi);                      /* mov edx, esi */
    II(0x10172531, 0x3)     mov(eax, memd_a32(ds, ecx + 0x10)); /* mov eax, [ecx+0x10] */
    II(0x10172534, 0x5)     calld(sys_lseek, 0xac5e);              /* call 0x1017d197 */
    II(0x10172539, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x1017253c, 0x2)     jnzd(0x10172566, 0x28);             /* jnz 0x10172566 */
    II(0x1017253e, 0x1)     popd(edi);                          /* pop edi */
    II(0x1017253f, 0x1)     popd(esi);                          /* pop esi */
    II(0x10172540, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x10172541, 0x1)     retd();                             /* ret  */
l_0x10172542:
    II(0x10172542, 0x3)     mov(eax, memd_a32(ds, ecx + 0x8));  /* mov eax, [ecx+0x8] */
    II(0x10172545, 0x3)     mov(dl, memb_a32(ds, ecx + 0xc));   /* mov dl, [ecx+0xc] */
    II(0x10172548, 0x2)     mov(memd_a32(ds, ecx), eax);        /* mov [ecx], eax */
    II(0x1017254a, 0x3)     and_(dl, 0xef);                     /* and dl, 0xef */
    II(0x1017254d, 0x3)     mov(eax, memd_a32(ds, ecx + 0x10)); /* mov eax, [ecx+0x10] */
    II(0x10172550, 0x3)     mov(memb_a32(ds, ecx + 0xc), dl);   /* mov [ecx+0xc], dl */
    II(0x10172553, 0x2)     mov(edx, esi);                      /* mov edx, esi */
    II(0x10172555, 0x7)     mov(memd_a32(ds, ecx + 0x4), 0);    /* mov dword [ecx+0x4], 0x0 */
    II(0x1017255c, 0x5)     calld(sys_lseek, 0xac36);              /* call 0x1017d197 */
    II(0x10172561, 0x3)     cmp(eax, -0x1 /* 0xff */);          /* cmp eax, 0xff */
    II(0x10172564, 0x2)     jzd(0x10172568, 0x2);               /* jz 0x10172568 */
l_0x10172566:
    II(0x10172566, 0x2)     xor_(eax, eax);                     /* xor eax, eax */
l_0x10172568:
    II(0x10172568, 0x1)     popd(edi);                          /* pop edi */
    II(0x10172569, 0x1)     popd(esi);                          /* pop esi */
    II(0x1017256a, 0x1)     popd(ecx);                          /* pop ecx */
    II(0x1017256b, 0x1)     retd();                             /* ret  */
}

} /* namespace raw_program */
