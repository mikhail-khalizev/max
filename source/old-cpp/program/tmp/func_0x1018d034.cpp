/*
 * memd_a32(ss, ebp + 0x8) - img_ptr?
 * memd_a32(ss, ebp + 0xc) -  640 - width?
 *
 * memd_a32(ss, ebp + 0x1c) - 640
 * memd_a32(ss, ebp + 0x20) - 137 - кол-во каких-то линий.
 *
 * memd_a32(ss, ebp - 0x10) - 640 ?
 */

FUNC_BEGIN(0x1018d034, 0x781d6c77e96aaadf, 0x20, ({0x55, 0x8b, 0xec, 0x83, 0xc4, 0xec, 0x50, 0x53, 0x51, 0x52, 0x56, 0x57, 0x8b, 0x45, 0x1c, 0xc1, 0xe8, 0x2, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xc, 0x2b, 0x45, 0x1c, 0x89, 0x45, 0xf4, 0xa1, 0xf8, 0x88, 0x20, 0x10, 0x89, 0x45, 0xf0, 0x2b, 0x45, 0x1c, 0x89, 0x45, 0xec, 0x8b, 0x45, 0x18, 0xf7, 0x65, 0xc, 0x3, 0x45, 0x14, 0x1, 0x45, 0x8, 0x83, 0x3d, 0xfc, 0x88, 0x20, 0x10, 0, 0x75, 0x2e, 0x8b, 0x3d, 0x18, 0x89, 0x20, 0x10, 0x8b, 0x45, 0x28, 0xf7, 0x65, 0xf0, 0x3, 0x45, 0x24, 0x3, 0xf8, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xec, 0x8b, 0x75, 0x8, 0x8b, 0x5d, 0x20, 0x8b, 0x4d, 0xf8, 0xf3, 0xa5, 0x3, 0xf0, 0x3, 0xfa, 0x4b, 0x75, 0xf4, 0xe9, 0xb9, 0, 0, 0, 0x8b, 0x75, 0x8, 0x8b, 0x45, 0xf0, 0xf7, 0x65, 0x28, 0x3, 0x45, 0x24, 0xba, 0, 0, 0, 0, 0xf7, 0x35, 0x8, 0x89, 0x20, 0x10, 0x89, 0x45, 0xfc, 0x8b, 0xfa, 0x3, 0x3d, 0x18, 0x89, 0x20, 0x10, 0xb7, 0, 0x8a, 0x1d, 0, 0x89, 0x20, 0x10, 0x8b, 0x55, 0xfc, 0xff, 0x15, 0xfc, 0x88, 0x20, 0x10, 0xa1, 0x10, 0x89, 0x20, 0x10, 0x2b, 0xc7, 0x3, 0x45, 0xf0, 0x2b, 0x45, 0x1c, 0xba, 0, 0, 0, 0, 0xf7, 0x75, 0xf0, 0x39, 0x45, 0x20, 0x73, 0x3, 0x8b, 0x45, 0x20, 0xb, 0xc0, 0x74, 0x15, 0x29, 0x45, 0x20, 0x8b, 0x5d, 0xf4, 0x8b, 0x55, 0xec, 0x8b, 0x4d, 0xf8, 0xf3, 0xa5, 0x3, 0xf3, 0x3, 0xfa, 0x48, 0x75, 0xf4, 0xb, 0x45, 0x20, 0x74, 0x4b, 0x8b, 0xd, 0x10, 0x89, 0x20, 0x10, 0x2b, 0xcf, 0xc1, 0xf9, 0x2, 0x79, 0x5, 0xb9, 0, 0, 0, 0, 0x51, 0xf3, 0xa5, 0xa1, 0xf0, 0x88, 0x20, 0x10, 0x1, 0x45, 0xfc, 0x2b, 0x3d, 0x14, 0x89, 0x20, 0x10, 0xb7, 0, 0x8a, 0x1d, 0, 0x89, 0x20, 0x10, 0x8b, 0x55, 0xfc, 0xff, 0x15, 0xfc, 0x88, 0x20, 0x10, 0x58, 0x8b, 0x4d, 0xf8, 0x2b, 0xc8, 0xf3, 0xa5, 0x3, 0x75, 0xf4, 0x3, 0x7d, 0xec, 0xff, 0x4d, 0x20, 0xf, 0x85, 0x7a, 0xff, 0xff, 0xff, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0x58, 0xc9, 0xc3}))
    II(0x1018d034, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1018d035, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1018d037, 0x3)   add(esp, -0x14 /* 0xec */);           /* add esp, 0xec */
    II(0x1018d03a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1018d03b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1018d03c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1018d03d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1018d03e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1018d03f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1018d040, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x1018d043, 0x3)   shr(eax, 0x2);                        /* shr eax, 0x2 */
    II(0x1018d046, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1018d049, 0x3)   mov(eax, memd_a32(ss, ebp + 0xc));    /* mov eax, [ebp+0xc] */
    II(0x1018d04c, 0x3)   sub(eax, memd_a32(ss, ebp + 0x1c));   /* sub eax, [ebp+0x1c] */
    II(0x1018d04f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1018d052, 0x5)   mov(eax, memd_a32(ds, 0x102088f8));   /* mov eax, [0x102088f8] */
    II(0x1018d057, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1018d05a, 0x3)   sub(eax, memd_a32(ss, ebp + 0x1c));   /* sub eax, [ebp+0x1c] */
    II(0x1018d05d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1018d060, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x1018d063, 0x3)   mul(memd_a32(ss, ebp + 0xc));         /* mul dword [ebp+0xc] */
    II(0x1018d066, 0x3)   add(eax, memd_a32(ss, ebp + 0x14));   /* add eax, [ebp+0x14] */
    II(0x1018d069, 0x3)   add(memd_a32(ss, ebp + 0x8), eax);    /* add [ebp+0x8], eax */
    II(0x1018d06c, 0x7)   cmp(memd_a32(ds, 0x102088fc), 0);     /* cmp dword [0x102088fc], 0x0 */
    II(0x1018d073, 0x2)   jnzd(0x1018d0a3, 0x2e);               /* jnz 0x1018d0a3 */
    II(0x1018d075, 0x6)   mov(edi, memd_a32(ds, 0x10208918));   /* mov edi, [0x10208918] */
    II(0x1018d07b, 0x3)   mov(eax, memd_a32(ss, ebp + 0x28));   /* mov eax, [ebp+0x28] */
    II(0x1018d07e, 0x3)   mul(memd_a32(ss, ebp - 0x10));        /* mul dword [ebp-0x10] */
    II(0x1018d081, 0x3)   add(eax, memd_a32(ss, ebp + 0x24));   /* add eax, [ebp+0x24] */
    II(0x1018d084, 0x2)   add(edi, eax);                        /* add edi, eax */
    II(0x1018d086, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1018d089, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x1018d08c, 0x3)   mov(esi, memd_a32(ss, ebp + 0x8));    /* mov esi, [ebp+0x8] */
    II(0x1018d08f, 0x3)   mov(ebx, memd_a32(ss, ebp + 0x20));   /* mov ebx, [ebp+0x20] */
l_0x1018d092:
    II(0x1018d092, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x1018d095, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */
    II(0x1018d097, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x1018d099, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018d09b, 0x1)   dec(ebx);                             /* dec ebx */
    II(0x1018d09c, 0x2)   jnzd(0x1018d092, -0xc);               /* jnz 0x1018d092 */
    II(0x1018d09e, 0x5)   jmpd(0x1018d15c, 0xb9);               /* jmp 0x1018d15c */
l_0x1018d0a3:
    II(0x1018d0a3, 0x3)   mov(esi, memd_a32(ss, ebp + 0x8));    /* mov esi, [ebp+0x8] */
    II(0x1018d0a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1018d0a9, 0x3)   mul(memd_a32(ss, ebp + 0x28));        /* mul dword [ebp+0x28] */
    II(0x1018d0ac, 0x3)   add(eax, memd_a32(ss, ebp + 0x24));   /* add eax, [ebp+0x24] */
    II(0x1018d0af, 0x5)   mov(edx, 0);                          /* mov edx, 0x0 */
    II(0x1018d0b4, 0x6)   div(memd_a32(ds, 0x10208908));        /* div dword [0x10208908] */  // 0x10000
    II(0x1018d0ba, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1018d0bd, 0x2)   mov(edi, edx);                        /* mov edi, edx */
    II(0x1018d0bf, 0x6)   add(edi, memd_a32(ds, 0x10208918));   /* add edi, [0x10208918] */   // 0xa0000
    II(0x1018d0c5, 0x2)   mov(bh, 0);                           /* mov bh, 0x0 */
    II(0x1018d0c7, 0x6)   mov(bl, memb_a32(ds, 0x10208900));    /* mov bl, [0x10208900] */
    II(0x1018d0cd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1018d0d0, 0x6)   calld_abs(memd_a32(ds, 0x102088fc));  /* call dword near [0x102088fc] */ /* Вызов '0x1018cda8'. */
l_0x1018d0d6:
    II(0x1018d0d6, 0x5)   mov(eax, memd_a32(ds, 0x10208910));   /* mov eax, [0x10208910] */  // 0xb0000
    II(0x1018d0db, 0x2)   sub(eax, edi);                        /* sub eax, edi */           // eax - кол-во оставшихся байт в видео памяти.
    II(0x1018d0dd, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1018d0e0, 0x3)   sub(eax, memd_a32(ss, ebp + 0x1c));   /* sub eax, [ebp+0x1c] */
    II(0x1018d0e3, 0x5)   mov(edx, 0);                          /* mov edx, 0x0 */
    II(0x1018d0e8, 0x3)   div(memd_a32(ss, ebp - 0x10));        /* div dword [ebp-0x10] */
    II(0x1018d0eb, 0x3)   cmp(memd_a32(ss, ebp + 0x20), eax);   /* cmp [ebp+0x20], eax */
    II(0x1018d0ee, 0x2)   jaed(0x1018d0f3, 0x3);                /* jae 0x1018d0f3 */
    II(0x1018d0f0, 0x3)   mov(eax, memd_a32(ss, ebp + 0x20));   /* mov eax, [ebp+0x20] */
l_0x1018d0f3:
    II(0x1018d0f3, 0x2)   or_(eax, eax);                        /* or eax, eax */
    II(0x1018d0f5, 0x2)   jzd(0x1018d10c, 0x15);                /* jz 0x1018d10c */
    II(0x1018d0f7, 0x3)   sub(memd_a32(ss, ebp + 0x20), eax);   /* sub [ebp+0x20], eax */
    II(0x1018d0fa, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x1018d0fd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
l_0x1018d100:
    II(0x1018d100, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x1018d103, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */              // Копирование в видео память линии 640x1.
    II(0x1018d105, 0x2)   add(esi, ebx);                        /* add esi, ebx */
    II(0x1018d107, 0x2)   add(edi, edx);                        /* add edi, edx */
    II(0x1018d109, 0x1)   dec(eax);                             /* dec eax */
    II(0x1018d10a, 0x2)   jnzd(0x1018d100, -0xc);               /* jnz 0x1018d100 */
l_0x1018d10c:
    II(0x1018d10c, 0x3)   or_(eax, memd_a32(ss, ebp + 0x20));   /* or eax, [ebp+0x20] */
    II(0x1018d10f, 0x2)   jzd(0x1018d15c, 0x4b);                /* jz 0x1018d15c */
    II(0x1018d111, 0x6)   mov(ecx, memd_a32(ds, 0x10208910));   /* mov ecx, [0x10208910] */   // 0xb0000
    II(0x1018d117, 0x2)   sub(ecx, edi);                        /* sub ecx, edi */            // ecx - Оствшееся место в видео памяти.
    II(0x1018d119, 0x3)   sar(ecx, 0x2);                        /* sar ecx, 0x2 */
    II(0x1018d11c, 0x2)   jnsd(0x1018d123, 0x5);                /* jns 0x1018d123 */
    II(0x1018d11e, 0x5)   mov(ecx, 0);                          /* mov ecx, 0x0 */
l_0x1018d123:
    II(0x1018d123, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1018d124, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */              // Копирование начала линии в оставшуюся часть видео памяти.
    II(0x1018d126, 0x5)   mov(eax, memd_a32(ds, 0x102088f0));   /* mov eax, [0x102088f0] */
    II(0x1018d12b, 0x3)   add(memd_a32(ss, ebp - 0x4), eax);    /* add [ebp-0x4], eax */
    II(0x1018d12e, 0x6)   sub(edi, memd_a32(ds, 0x10208914));   /* sub edi, [0x10208914] */   // 0x10000
    II(0x1018d134, 0x2)   mov(bh, 0);                           /* mov bh, 0x0 */
    II(0x1018d136, 0x6)   mov(bl, memb_a32(ds, 0x10208900));    /* mov bl, [0x10208900] */
    II(0x1018d13c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */      // Номер банка видео памяти.
    II(0x1018d13f, 0x6)   calld_abs(memd_a32(ds, 0x102088fc));  /* call dword near [0x102088fc] */ /* Вызов '0x1018cda8'. */  // int33 - SetCPUWindow?
    II(0x1018d145, 0x1)   popd(eax);                            /* pop eax */
    II(0x1018d146, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x1018d149, 0x2)   sub(ecx, eax);                        /* sub ecx, eax */
    II(0x1018d14b, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */              // Копирование конца линии в начало видео памяти.
    II(0x1018d14d, 0x3)   add(esi, memd_a32(ss, ebp - 0xc));    /* add esi, [ebp-0xc] */
    II(0x1018d150, 0x3)   add(edi, memd_a32(ss, ebp - 0x14));   /* add edi, [ebp-0x14] */
    II(0x1018d153, 0x3)   dec(memd_a32(ss, ebp + 0x20));        /* dec dword [ebp+0x20] */
    II(0x1018d156, 0x6)   jnzd(0x1018d0d6, -0x86);              /* jnz dword 0x1018d0d6 */
l_0x1018d15c:
    II(0x1018d15c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1018d15d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1018d15e, 0x1)   popd(edx);                            /* pop edx */
    II(0x1018d15f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1018d160, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1018d161, 0x1)   popd(eax);                            /* pop eax */
    II(0x1018d162, 0x1)   leaved();                             /* leave */
    II(0x1018d163, 0x1)   retd();                               /* ret */
FUNC_END

