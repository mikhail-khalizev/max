FUNC_BEGIN(0x10112c46, 0x275b6caa2a371f9a, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x2, 0x31, 0x5, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xfc, 0x66, 0xa1, 0xb4, 0x9d, 0x1b, 0x10, 0x5, 0x5, 0, 0, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0xf, 0xaf, 0x45, 0xfc, 0x66, 0x8b, 0x15, 0xb8, 0x9d, 0x1b, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe8, 0x66, 0xa1, 0xbc, 0x9d, 0x1b, 0x10, 0x2b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0xe8, 0x83, 0x26, 0xfc, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc0, 0x8a, 0x45, 0x10, 0x50, 0x6a, 0x2, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xf, 0xbf, 0x4d, 0xec, 0x8b, 0x5d, 0xf4, 0x8b, 0x45, 0xf0, 0x8b, 0, 0x8b, 0x50, 0xe, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0, 0x8b, 0x40, 0x16, 0xe8, 0x10, 0x6e, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x10112c46, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x10112c4b, 0x5)   calld(sys_check_available_stack_size, 0x53102); /* call 0x10165d52 */
    II(0x10112c50, 0x1)   pushd(esi);                           /* push esi */
    II(0x10112c51, 0x1)   pushd(edi);                           /* push edi */
    II(0x10112c52, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10112c53, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10112c55, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10112c5b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10112c5e, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10112c61, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x10112c64, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x10112c67, 0x6)   mov(ax, memw_a32(ds, 0x101b9db4));    /* mov ax, [0x101b9db4] */
    II(0x10112c6d, 0x5)   add(eax, 0x5);                        /* add eax, 0x5 */
    II(0x10112c72, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10112c75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10112c78, 0x4)   imul(eax, memd_a32(ss, ebp - 0x4));   /* imul eax, [ebp-0x4] */
    II(0x10112c7c, 0x7)   mov(dx, memw_a32(ds, 0x101b9db8));    /* mov dx, [0x101b9db8] */
    II(0x10112c83, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10112c85, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x10112c88, 0x6)   mov(ax, memw_a32(ds, 0x101b9dbc));    /* mov ax, [0x101b9dbc] */
    II(0x10112c8e, 0x3)   sub(eax, memd_a32(ss, ebp - 0x14));   /* sub eax, [ebp-0x14] */
    II(0x10112c91, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10112c94, 0x5)   calld(0x100d531c, -0x3d97d);          /* call 0x100d531c */
    II(0x10112c99, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10112c9e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10112c9f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10112ca1, 0x3)   mov(al, memb_a32(ss, ebp + 0x10));    /* mov al, [ebp+0x10] */
    II(0x10112ca4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10112ca5, 0x2)   pushd(0x2);                           /* push 0x2 */
    II(0x10112ca7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10112cab, 0x1)   pushd(eax);                           /* push eax */
    II(0x10112cac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10112cb0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10112cb1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10112cb5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10112cb6, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x14)); /* movsx ecx, word [ebp-0x14] */
    II(0x10112cba, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x10112cbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10112cc0, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10112cc2, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x10112cc5, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10112cc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10112ccb, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10112ccd, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10112cd0, 0x5)   calld(0x100e9ae5, -0x291f0);          /* call 0x100e9ae5 */
    II(0x10112cd5, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10112cd7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10112cd8, 0x1)   popd(edi);                            /* pop edi */
    II(0x10112cd9, 0x1)   popd(esi);                            /* pop esi */
    II(0x10112cda, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

