FUNC_BEGIN(0x1010ee3c, 0xe51b131939ed7689, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xc, 0x6f, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xeb, 0xb3, 0x5, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x2, 0x7f, 0x5a, 0x8b, 0x45, 0xfc, 0xff, 0x30, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xf8, 0x6b, 0xdb, 0x14, 0x8b, 0x9b, 0x3c, 0xab, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x14, 0x8b, 0x90, 0x38, 0xab, 0x1b, 0x10, 0xb8, 0x2b, 0x2, 0, 0, 0xe8, 0x4d, 0xa0, 0xfd, 0xff, 0xe8, 0x6f, 0x64, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0xa2, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x14, 0xba, 0x38, 0xab, 0x1b, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x34, 0x9b, 0xff, 0xff, 0xeb, 0x97, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x14, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0x72, 0xc7, 0x45, 0xf8, 0x3, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x6, 0x7f, 0x5a, 0x8b, 0x45, 0xfc, 0xff, 0x30, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xf8, 0x6b, 0xdb, 0x14, 0x8b, 0x9b, 0x3c, 0xab, 0x1b, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x14, 0x8b, 0x90, 0x38, 0xab, 0x1b, 0x10, 0xb8, 0x2b, 0x2, 0, 0, 0xe8, 0xcb, 0x9f, 0xfd, 0xff, 0xe8, 0xed, 0x63, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0xa2, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x14, 0xba, 0x38, 0xab, 0x1b, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0xb2, 0x9a, 0xff, 0xff, 0xeb, 0x97, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x47, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x95, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x12, 0xe8, 0xe, 0x85, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010ee3c, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1010ee41, 0x5)   calld(sys_check_available_stack_size, 0x56f0c); /* call 0x10165d52 */
    II(0x1010ee46, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010ee47, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010ee48, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010ee49, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010ee4a, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010ee4b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010ee4c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010ee4e, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x1010ee54, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010ee57, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1010ee5c, 0x5)   calld(/* sys */ 0x1016a24c, 0x5b3eb); /* call 0x1016a24c */
    II(0x1010ee61, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1010ee68, 0x2)   jmpd(0x1010ee70, 0x6);                /* jmp 0x1010ee70 */
l_0x1010ee6a:
    II(0x1010ee6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010ee6d, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x1010ee70:
    II(0x1010ee70, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010ee74, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1010ee77, 0x2)   jgd(0x1010eed3, 0x5a);                /* jg 0x1010eed3 */
    II(0x1010ee79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ee7c, 0x2)   pushd(memd_a32(ds, eax));             /* push dword [eax] */
    II(0x1010ee7e, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010ee80, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x1010ee84, 0x3)   imul(ebx, ebx, 0x14);                 /* imul ebx, ebx, 0x14 */
    II(0x1010ee87, 0x6)   mov(ebx, memd_a32(ds, ebx + 0x101bab3c)); /* mov ebx, [ebx+0x101bab3c] */
    II(0x1010ee8d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010ee91, 0x3)   imul(eax, eax, 0x14);                 /* imul eax, eax, 0x14 */
    II(0x1010ee94, 0x6)   mov(edx, memd_a32(ds, eax + 0x101bab38)); /* mov edx, [eax+0x101bab38] */
    II(0x1010ee9a, 0x5)   mov(eax, 0x22b);                      /* mov eax, 0x22b */
    II(0x1010ee9f, 0x5)   calld(0x100e8ef1, -0x25fb3);          /* call 0x100e8ef1 */
    II(0x1010eea4, 0x5)   calld(0x10115318, 0x646f);            /* call 0x10115318 */
    II(0x1010eea9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010eeae, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010eeaf, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010eeb4, 0x5)   mov(ebx, 0xa2);                       /* mov ebx, 0xa2 */
    II(0x1010eeb9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010eebd, 0x3)   imul(eax, eax, 0x14);                 /* imul eax, eax, 0x14 */
    II(0x1010eec0, 0x5)   mov(edx, 0x101bab38);                 /* mov edx, 0x101bab38 */
    II(0x1010eec5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010eec7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010eeca, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010eecc, 0x5)   calld(0x10108a05, -0x64cc);           /* call 0x10108a05 */
    II(0x1010eed1, 0x2)   jmpd(0x1010ee6a, -0x69);              /* jmp 0x1010ee6a */
l_0x1010eed3:
    II(0x1010eed3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010eed6, 0x3)   mov(al, memb_a32(ds, eax + 0x14));    /* mov al, [eax+0x14] */
    II(0x1010eed9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010eede, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1010eee1, 0x2)   jnzd(0x1010ef55, 0x72);               /* jnz 0x1010ef55 */
    II(0x1010eee3, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x3);    /* mov dword [ebp-0x8], 0x3 */
    II(0x1010eeea, 0x2)   jmpd(0x1010eef2, 0x6);                /* jmp 0x1010eef2 */
l_0x1010eeec:
    II(0x1010eeec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010eeef, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x1010eef2:
    II(0x1010eef2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010eef6, 0x3)   cmp(eax, 0x6);                        /* cmp eax, 0x6 */
    II(0x1010eef9, 0x2)   jgd(0x1010ef55, 0x5a);                /* jg 0x1010ef55 */
    II(0x1010eefb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010eefe, 0x2)   pushd(memd_a32(ds, eax));             /* push dword [eax] */
    II(0x1010ef00, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010ef02, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x1010ef06, 0x3)   imul(ebx, ebx, 0x14);                 /* imul ebx, ebx, 0x14 */
    II(0x1010ef09, 0x6)   mov(ebx, memd_a32(ds, ebx + 0x101bab3c)); /* mov ebx, [ebx+0x101bab3c] */
    II(0x1010ef0f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010ef13, 0x3)   imul(eax, eax, 0x14);                 /* imul eax, eax, 0x14 */
    II(0x1010ef16, 0x6)   mov(edx, memd_a32(ds, eax + 0x101bab38)); /* mov edx, [eax+0x101bab38] */
    II(0x1010ef1c, 0x5)   mov(eax, 0x22b);                      /* mov eax, 0x22b */
    II(0x1010ef21, 0x5)   calld(0x100e8ef1, -0x26035);          /* call 0x100e8ef1 */
    II(0x1010ef26, 0x5)   calld(0x10115318, 0x63ed);            /* call 0x10115318 */
    II(0x1010ef2b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010ef30, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010ef31, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010ef36, 0x5)   mov(ebx, 0xa2);                       /* mov ebx, 0xa2 */
    II(0x1010ef3b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010ef3f, 0x3)   imul(eax, eax, 0x14);                 /* imul eax, eax, 0x14 */
    II(0x1010ef42, 0x5)   mov(edx, 0x101bab38);                 /* mov edx, 0x101bab38 */
    II(0x1010ef47, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010ef49, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ef4c, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010ef4e, 0x5)   calld(0x10108a05, -0x654e);           /* call 0x10108a05 */
    II(0x1010ef53, 0x2)   jmpd(0x1010eeec, -0x69);              /* jmp 0x1010eeec */
l_0x1010ef55:
    II(0x1010ef55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ef58, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010ef5a, 0x5)   calld(0x1010eda6, -0x1b9);            /* call 0x1010eda6 */
    II(0x1010ef5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ef62, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010ef64, 0x5)   calld(0x1010edfe, -0x16b);            /* call 0x1010edfe */
    II(0x1010ef69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ef6c, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010ef6e, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1010ef71, 0x5)   calld(sys_display_draw_0, 0x5850e);   /* call 0x10167484 */
    II(0x1010ef76, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010ef78, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010ef79, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010ef7a, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010ef7b, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010ef7c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010ef7d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010ef7e, 0x1)   retd();                               /* ret */
FUNC_END

