FUNC_BEGIN(0x1013c388, 0x62a423a711d11926, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xc0, 0x99, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x37, 0xe7, 0xff, 0xff, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x6, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6, 0xe8, 0x6a, 0xff, 0xff, 0xff, 0x83, 0xe8, 0x6, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0xe, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0xe, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x12, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0x12, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0x20, 0x6f, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1013c388, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1013c38d, 0x5)   calld(sys_check_available_stack_size, 0x299c0); /* call 0x10165d52 */
    II(0x1013c392, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013c393, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013c394, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013c395, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013c396, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013c397, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013c399, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1013c39f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1013c3a2, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1013c3a5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x1013c3a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013c3ab, 0x5)   calld(0x1013aae7, -0x18c9);           /* call 0x1013aae7 */
    II(0x1013c3b0, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1013c3b3, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1013c3b6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1013c3b9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1013c3bc, 0x3)   add(edx, 0x6);                        /* add edx, 0x6 */
    II(0x1013c3bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013c3c2, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1013c3c5, 0x5)   calld(0x1013c334, -0x96);             /* call 0x1013c334 */
    II(0x1013c3ca, 0x3)   sub(eax, 0x6);                        /* sub eax, 0x6 */
    II(0x1013c3cd, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1013c3d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013c3d3, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x1013c3d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013c3d9, 0x3)   mov(memd_a32(ds, eax + 0xe), edx);    /* mov [eax+0xe], edx */
    II(0x1013c3dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013c3df, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x1013c3e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013c3e5, 0x3)   mov(memd_a32(ds, eax + 0x12), edx);   /* mov [eax+0x12], edx */
    II(0x1013c3e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013c3eb, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b6f20); /* mov dword [eax+0x2], 0x101b6f20 */
    II(0x1013c3f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013c3f5, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1013c3f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013c3fb, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013c3fd, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013c3fe, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013c3ff, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013c400, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013c401, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013c402, 0x1)   retd();                               /* ret */
FUNC_END

