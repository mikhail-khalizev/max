FUNC_BEGIN(0x100ad86c, 0x63d66cdb44205c4f, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0xdc, 0x84, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xb8, 0x20, 0, 0, 0, 0xe8, 0x6d, 0x85, 0xb, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x32, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x22, 0x8d, 0x45, 0xe8, 0xe8, 0xb4, 0x85, 0xfc, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x11, 0x8d, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0xe8, 0x22, 0xe6, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xd8, 0xe8, 0xb8, 0xd7, 0xfd, 0xff, 0x89, 0x45, 0xd4, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x15, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xdc, 0xe8, 0x59, 0xff, 0x6, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x16, 0xc1, 0xfa, 0x18, 0x8b, 0x45, 0xdc, 0xe8, 0xec, 0xfe, 0x6, 0, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xdc, 0xe8, 0xc8, 0xff, 0x6, 0, 0xb8, 0x1f, 0, 0, 0, 0xe8, 0xd5, 0x84, 0xb, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x24, 0xb8, 0x95, 0xd9, 0xa, 0x10, 0x50, 0xb9, 0xcd, 0xd9, 0xa, 0x10, 0x8b, 0x5d, 0xdc, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xd0, 0xe8, 0x1f, 0xe1, 0xff, 0xff, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc4, 0x8b, 0x55, 0xc4, 0x8d, 0x45, 0xd8, 0xe8, 0x75, 0xd6, 0xfd, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0xd, 0xd6, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xcd, 0x73, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xef, 0xb1, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ad86c, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x100ad871, 0x5)   calld(sys_check_available_stack_size, 0xb84dc); /* call 0x10165d52 */
    II(0x100ad876, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ad877, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ad878, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ad879, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ad87a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ad87b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ad87d, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x100ad883, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ad886, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100ad889, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100ad88e, 0x5)   calld(sys_new, 0xb856d);              /* call 0x10165e00 */
    II(0x100ad893, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100ad896, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ad899, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100ad89c, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100ad8a0, 0x2)   jzd(0x100ad8d4, 0x32);                /* jz 0x100ad8d4 */
    II(0x100ad8a2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ad8a5, 0x3)   add(edx, 0x22);                       /* add edx, 0x22 */
    II(0x100ad8a8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ad8ab, 0x5)   calld(0x10075e64, -0x37a4c);          /* call 0x10075e64 */
    II(0x100ad8b0, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100ad8b2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ad8b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad8b7, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad8ba, 0x5)   calld(0x100765d0, -0x372ef);          /* call 0x100765d0 */
    II(0x100ad8bf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ad8c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ad8c4, 0x5)   calld(0x100abeeb, -0x19de);           /* call 0x100abeeb */
    II(0x100ad8c9, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100ad8cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ad8cf, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100ad8d2, 0x2)   jmpd(0x100ad8da, 0x6);                /* jmp 0x100ad8da */
l_0x100ad8d4:
    II(0x100ad8d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ad8d7, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100ad8da:
    II(0x100ad8da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100ad8dd, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100ad8e0, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100ad8e4, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ad8e7, 0x5)   calld(my_ctor_0x101b3b58, -0x22848);  /* call 0x1008b0a4 */
    II(0x100ad8ec, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100ad8ef, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100ad8f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad8f6, 0x3)   mov(edx, memd_a32(ds, eax + 0x15));   /* mov edx, [eax+0x15] */
    II(0x100ad8f9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ad8fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ad8ff, 0x5)   calld(0x1011d85d, 0x6ff59);           /* call 0x1011d85d */
    II(0x100ad904, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad907, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x100ad90a, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x100ad90d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ad910, 0x5)   calld(0x1011d801, 0x6feec);           /* call 0x1011d801 */
    II(0x100ad915, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100ad919, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ad91c, 0x5)   calld(0x1011d8e9, 0x6ffc8);           /* call 0x1011d8e9 */
    II(0x100ad921, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x100ad926, 0x5)   calld(sys_new, 0xb84d5);              /* call 0x10165e00 */
    II(0x100ad92b, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100ad92e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ad931, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100ad934, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100ad938, 0x2)   jzd(0x100ad95e, 0x24);                /* jz 0x100ad95e */
    II(0x100ad93a, 0x5)   mov(eax, 0x100ad995);                 /* mov eax, 0x100ad995 */
    II(0x100ad93f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ad940, 0x5)   mov(ecx, 0x100ad9cd);                 /* mov ecx, 0x100ad9cd */
    II(0x100ad945, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x24));   /* mov ebx, [ebp-0x24] */
    II(0x100ad948, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100ad94b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ad94e, 0x5)   calld(0x100aba72, -0x1ee1);           /* call 0x100aba72 */
    II(0x100ad953, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100ad956, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100ad959, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100ad95c, 0x2)   jmpd(0x100ad964, 0x6);                /* jmp 0x100ad964 */
l_0x100ad95e:
    II(0x100ad95e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100ad961, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
l_0x100ad964:
    II(0x100ad964, 0x3)   mov(edx, memd_a32(ss, ebp - 0x3c));   /* mov edx, [ebp-0x3c] */
    II(0x100ad967, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ad96a, 0x5)   calld(0x1008afe4, -0x2298b);          /* call 0x1008afe4 */
    II(0x100ad96f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ad972, 0x5)   calld(0x1008af84, -0x229f3);          /* call 0x1008af84 */
    II(0x100ad977, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ad979, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100ad97e, 0x5)   calld(0x100a4d50, -0x8c33);           /* call 0x100a4d50 */
    II(0x100ad983, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ad985, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100ad988, 0x5)   calld(0x10088b7c, -0x24e11);          /* call 0x10088b7c */
    II(0x100ad98d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ad98f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ad990, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ad991, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ad992, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ad993, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ad994, 0x1)   retd();                               /* ret */
FUNC_END

