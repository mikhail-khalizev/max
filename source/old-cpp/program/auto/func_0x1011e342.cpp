FUNC_BEGIN(0x1011e342, 0xfa364a8bf03e96d5, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x6, 0x7a, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xf0, 0xe8, 0xd6, 0x25, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x16, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe8, 0xe8, 0xb6, 0xde, 0xff, 0xff, 0xe8, 0xd3, 0x7b, 0x4, 0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x1a, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe0, 0xe8, 0x83, 0xde, 0xff, 0xff, 0xe8, 0xa0, 0x7b, 0x4, 0, 0x89, 0x45, 0xe4, 0xeb, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x16, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x1a, 0, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0xb6, 0x9b, 0xf9, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0x22, 0x9b, 0xf9, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xff, 0x53, 0xc, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x56, 0x8f, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011e342, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x1011e347, 0x5)   calld(sys_check_available_stack_size, 0x47a06); /* call 0x10165d52 */
    II(0x1011e34c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011e34d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011e34e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011e34f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011e350, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011e351, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011e353, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1011e359, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011e35c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1011e35f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011e362, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011e365, 0x5)   calld(0x10120940, 0x25d6);            /* call 0x10120940 */
    II(0x1011e36a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e36d, 0x4)   cmp(memd_a32(ds, eax + 0x16), 0);     /* cmp dword [eax+0x16], 0x0 */
    II(0x1011e371, 0x2)   jzd(0x1011e39d, 0x2a);                /* jz 0x1011e39d */
    II(0x1011e373, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e376, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011e379, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011e37c, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x1011e380, 0x2)   jzd(0x1011e396, 0x14);                /* jz 0x1011e396 */
    II(0x1011e382, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011e384, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1011e387, 0x5)   calld(my_dtor_d7, -0x214a);           /* call 0x1011c242 */
    II(0x1011e38c, 0x5)   calld(sys_delete, 0x47bd3);           /* call 0x10165f64 */
    II(0x1011e391, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011e394, 0x2)   jmpd(0x1011e39d, 0x7);                /* jmp 0x1011e39d */
l_0x1011e396:
    II(0x1011e396, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x1011e39d:
    II(0x1011e39d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e3a0, 0x4)   cmp(memd_a32(ds, eax + 0x1a), 0);     /* cmp dword [eax+0x1a], 0x0 */
    II(0x1011e3a4, 0x2)   jzd(0x1011e3d0, 0x2a);                /* jz 0x1011e3d0 */
    II(0x1011e3a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e3a9, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x1011e3ac, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1011e3af, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x1011e3b3, 0x2)   jzd(0x1011e3c9, 0x14);                /* jz 0x1011e3c9 */
    II(0x1011e3b5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011e3b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1011e3ba, 0x5)   calld(my_dtor_d7, -0x217d);           /* call 0x1011c242 */
    II(0x1011e3bf, 0x5)   calld(sys_delete, 0x47ba0);           /* call 0x10165f64 */
    II(0x1011e3c4, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1011e3c7, 0x2)   jmpd(0x1011e3d0, 0x7);                /* jmp 0x1011e3d0 */
l_0x1011e3c9:
    II(0x1011e3c9, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x1011e3d0:
    II(0x1011e3d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e3d3, 0x7)   mov(memd_a32(ds, eax + 0x16), 0);     /* mov dword [eax+0x16], 0x0 */
    II(0x1011e3da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e3dd, 0x7)   mov(memd_a32(ds, eax + 0x1a), 0);     /* mov dword [eax+0x1a], 0x0 */
    II(0x1011e3e4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011e3e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011e3e9, 0x5)   calld(0x100b7fa4, -0x6644a);          /* call 0x100b7fa4 */
    II(0x1011e3ee, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011e3f1, 0x5)   calld(0x100b7f18, -0x664de);          /* call 0x100b7f18 */
    II(0x1011e3f6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x1011e3f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011e3fc, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1011e3ff, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x1011e402, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011e405, 0x3)   calld_abs(memd_a32(ds, ebx + 0xc));   /* call dword near [ebx+0xc] */
    II(0x1011e408, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011e40a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011e40d, 0x5)   calld(0x100b7368, -0x670aa);          /* call 0x100b7368 */
    II(0x1011e412, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011e414, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011e415, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011e416, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011e417, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011e418, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011e419, 0x1)   retd();                               /* ret */
FUNC_END

