FUNC_BEGIN(0x101351c1, 0x7614ad936e44cdf7, 0x20, ({0x68, 0, 0x1, 0, 0, 0xe8, 0x87, 0xb, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xd8, 0, 0, 0, 0x88, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x55, 0xfc, 0xb8, 0x45, 0, 0, 0, 0xe8, 0x11, 0x59, 0xf9, 0xff, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0x1a, 0xdc, 0xfc, 0xff, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x10, 0xdc, 0xfc, 0xff, 0xb8, 0x90, 0x81, 0x1c, 0x10, 0xe8, 0x6, 0xdc, 0xfc, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xfc, 0xdb, 0xfc, 0xff, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xf2, 0xdb, 0xfc, 0xff, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0xca, 0xed, 0xfc, 0xff, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0xda, 0xe5, 0xfc, 0xff, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xf3, 0x13, 0xf4, 0xff, 0x83, 0x3d, 0x50, 0x94, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x50, 0x94, 0x1c, 0x10, 0xe8, 0x14, 0xd, 0x3, 0, 0x83, 0x3d, 0x4c, 0x94, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x4c, 0x94, 0x1c, 0x10, 0xe8, 0x1, 0xd, 0x3, 0, 0x83, 0x3d, 0x54, 0x94, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x54, 0x94, 0x1c, 0x10, 0xe8, 0xee, 0xc, 0x3, 0, 0x83, 0x3d, 0x1c, 0x81, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x1c, 0x81, 0x1c, 0x10, 0xe8, 0xdb, 0xc, 0x3, 0, 0xc7, 0x5, 0x50, 0x94, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0x4c, 0x94, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0x54, 0x94, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0x1c, 0x81, 0x1c, 0x10, 0, 0, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x56, 0x7e, 0, 0, 0xe8, 0x7c, 0, 0xfa, 0xff, 0x98, 0x50, 0xe8, 0x99, 0, 0xfa, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x80, 0x2, 0, 0, 0x31, 0xc0, 0xe8, 0x60, 0x35, 0xfb, 0xff, 0x89, 0xc2, 0xb8, 0xbe, 0x6, 0, 0, 0xe8, 0x68, 0x39, 0xfb, 0xff, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x7, 0x75, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0xe8, 0x80, 0xc7, 0xfb, 0xff, 0x31, 0xc0, 0xe8, 0x30, 0x35, 0xfb, 0xff, 0x8b, 0x40, 0x12, 0xe8, 0x6f, 0x21, 0x3, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x5, 0x6e, 0x7, 0, 0, 0x98, 0xe8, 0xc6, 0xee, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x75, 0xa, 0xb8, 0x6, 0, 0, 0, 0xe8, 0x68, 0xa0, 0xfb, 0xff, 0xba, 0x10, 0x8a, 0x1a, 0x10, 0x8b, 0x45, 0xf4, 0xe8, 0xda, 0xa0, 0xfb, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0xe8, 0x71, 0x5d, 0x3, 0, 0x83, 0x7d, 0xf0, 0, 0x75, 0xa, 0xb8, 0x10, 0, 0, 0, 0xe8, 0x40, 0xa0, 0xfb, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x80, 0x4d, 0xe8, 0x1, 0xba, 0x13, 0x8a, 0x1a, 0x10, 0x8d, 0x45, 0xb0, 0xe8, 0x23, 0x14, 0, 0, 0x89, 0x45, 0xac, 0x80, 0x65, 0xe8, 0xfe, 0x8b, 0x4d, 0xf0, 0xbb, 0x5, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xa4, 0xe8, 0xfb, 0xa0, 0xfb, 0xff, 0x83, 0xf8, 0x5, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xfd, 0x9f, 0xfb, 0xff, 0xf, 0xbf, 0x45, 0xa7, 0xc1, 0xe0, 0x2, 0x89, 0x45, 0xa0, 0x8b, 0x4d, 0xf0, 0x8b, 0x5d, 0xa0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xcc, 0xa0, 0xfb, 0xff, 0x3b, 0x45, 0xa0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xce, 0x9f, 0xfb, 0xff, 0xc7, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x1, 0, 0, 0, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x48, 0x69, 0xc0, 0, 0x31, 0, 0, 0x89, 0x45, 0xa0, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0x58, 0xa0, 0xfb, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0, 0x31, 0, 0, 0xba, 0x1, 0, 0, 0, 0xa1, 0xe0, 0x70, 0x1c, 0x10, 0xe8, 0x7b, 0xa0, 0xfb, 0xff, 0x3d, 0, 0x31, 0, 0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0x7b, 0x9f, 0xfb, 0xff, 0xbb, 0, 0x31, 0, 0, 0x8b, 0x15, 0xe0, 0x70, 0x1c, 0x10, 0xa1, 0xe8, 0x70, 0x1c, 0x10, 0xe8, 0x11, 0xa, 0x3, 0, 0x8b, 0x45, 0xf0, 0xe8, 0x5, 0xd3, 0x3, 0, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x72, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x70, 0xff, 0xff, 0xff, 0xf, 0xaf, 0xc2, 0x1, 0xc0, 0x89, 0x45, 0xa0, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0xe7, 0x9f, 0xfb, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0x2, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0x9, 0xa0, 0xfb, 0xff, 0x83, 0xf8, 0x2, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xb, 0x9f, 0xfb, 0xff, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0xc, 0x89, 0x45, 0xa0, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0xa3, 0x9f, 0xfb, 0xff, 0xb8, 0, 0x3, 0, 0, 0xe8, 0x54, 0xb, 0x3, 0, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0, 0x3, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0xb5, 0x9f, 0xfb, 0xff, 0x3d, 0, 0x3, 0, 0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xb5, 0x9e, 0xfb, 0xff, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3d, 0xe0, 0x1, 0, 0, 0x7d, 0x2c, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xc1, 0xf8, 0x2, 0x88, 0xc3, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x88, 0x18, 0xeb, 0xba, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0xe8, 0x75, 0x76, 0x3, 0, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0xe8, 0x7b, 0x7d, 0x3, 0, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0x8, 0xa, 0x3, 0, 0x31, 0xdb, 0x8b, 0x95, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0xe8, 0xe9, 0x9e, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0xa7, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x29, 0xc2, 0x89, 0xd0, 0x69, 0xc0, 0, 0x31, 0, 0, 0x89, 0x45, 0xa0, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x83, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x66, 0x83, 0xbd, 0x64, 0xff, 0xff, 0xff, 0, 0x74, 0x32, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x94, 0x28, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0x6e, 0xff, 0xff, 0xff, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc2, 0x1, 0xc0, 0x1, 0x45, 0xa0, 0xeb, 0xbd, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0x72, 0x9e, 0xfb, 0xff, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x48, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x66, 0x8b, 0x84, 0x28, 0x70, 0xff, 0xff, 0xff, 0x66, 0xa3, 0x72, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x66, 0x8b, 0x84, 0x28, 0x72, 0xff, 0xff, 0xff, 0x66, 0xa3, 0x74, 0x81, 0x1c, 0x10, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xa0, 0x8b, 0x45, 0xa0, 0x1, 0xc0, 0xe8, 0xcf, 0x9, 0x3, 0, 0xa3, 0x50, 0x94, 0x1c, 0x10, 0x83, 0x3d, 0x50, 0x94, 0x1c, 0x10, 0, 0x75, 0xa, 0xb8, 0x3, 0, 0, 0, 0xe8, 0x47, 0x9d, 0xfb, 0xff, 0xd1, 0x65, 0xa0, 0xc7, 0x85, 0x5c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x8b, 0x45, 0xa0, 0xc1, 0xf8, 0x2, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0xa1, 0x50, 0x94, 0x1c, 0x10, 0x89, 0x85, 0x54, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x3b, 0x45, 0xa0, 0xf, 0x84, 0x7a, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x2b, 0x95, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0xe8, 0xe4, 0x40, 0xf5, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x4d, 0xf0, 0x8b, 0x9d, 0x58, 0xff, 0xff, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x85, 0x54, 0xff, 0xff, 0xff, 0x3, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0xca, 0x9d, 0xfb, 0xff, 0x3b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xc9, 0x9c, 0xfb, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x1, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x6b, 0x95, 0x5c, 0xff, 0xff, 0xff, 0x14, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x7d, 0xa0, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xb0, 0xe8, 0xe8, 0x12, 0, 0, 0xe9, 0x77, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xa0, 0, 0, 0, 0, 0x8b, 0x45, 0xa7, 0x2b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x8d, 0x64, 0xff, 0xff, 0xff, 0x66, 0x83, 0xbd, 0x64, 0xff, 0xff, 0xff, 0xff, 0x74, 0x44, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x1, 0xd0, 0xc1, 0xe0, 0x2, 0x8b, 0x9c, 0x28, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x1, 0xd0, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0x6e, 0xff, 0xff, 0xff, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc3, 0x1, 0xc0, 0x1, 0x45, 0xa0, 0xeb, 0xac, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xf0, 0xe8, 0xd5, 0x9c, 0xfb, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0x2, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0xb8, 0x6e, 0x94, 0x1c, 0x10, 0xe8, 0xf8, 0x9c, 0xfb, 0xff, 0x83, 0xf8, 0x2, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xfa, 0x9b, 0xfb, 0xff, 0x8d, 0x55, 0xb0, 0x8b, 0x45, 0xf0, 0xe8, 0x1d, 0xf8, 0xff, 0xff, 0x84, 0xc0, 0x75, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xe1, 0x9b, 0xfb, 0xff, 0xc7, 0x45, 0xec, 0x46, 0, 0, 0, 0xb8, 0, 0x3, 0, 0, 0xe8, 0x40, 0x8, 0x3, 0, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8b, 0x4d, 0xf0, 0xbb, 0, 0x3, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0xa1, 0x9c, 0xfb, 0xff, 0x3d, 0, 0x3, 0, 0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xa1, 0x9b, 0xfb, 0xff, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3d, 0xe0, 0x1, 0, 0, 0x7d, 0x2c, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xc1, 0xf8, 0x2, 0x88, 0xc3, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x88, 0x18, 0xeb, 0xba, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0xe8, 0x61, 0x73, 0x3, 0, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0xe8, 0x67, 0x7a, 0x3, 0, 0x83, 0x45, 0xec, 0x3, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xb0, 0xe8, 0x74, 0x11, 0, 0, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0xe4, 0x6, 0x3, 0, 0xa1, 0x58, 0xd3, 0x1b, 0x10, 0x89, 0x85, 0x4c, 0xff, 0xff, 0xff, 0xa1, 0x6c, 0x94, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x78, 0x7, 0x3, 0, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xc2, 0xe8, 0x59, 0x7, 0x3, 0, 0xa3, 0x54, 0x94, 0x1c, 0x10, 0x8b, 0x4d, 0xf0, 0x8b, 0x1d, 0x6c, 0x94, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0xba, 0x1, 0, 0, 0, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0xb7, 0x9b, 0xfb, 0xff, 0x8b, 0x15, 0x6c, 0x94, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x39, 0xd0, 0x74, 0xa, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xb1, 0x9a, 0xfb, 0xff, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x6e, 0x94, 0x1c, 0x10, 0x7d, 0x2c, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0x3, 0x95, 0x50, 0xff, 0xff, 0xff, 0x8a, 0x84, 0x28, 0x4c, 0xff, 0xff, 0xff, 0x88, 0x2, 0xeb, 0xb9, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0x39, 0xc2, 0x7d, 0x2f, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x8b, 0x15, 0x50, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0, 0x3, 0x85, 0x50, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x9d, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x54, 0x94, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0, 0x88, 0x2, 0xeb, 0xa6, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0xb1, 0x5, 0x3, 0, 0x8b, 0x45, 0xf0, 0xe8, 0xae, 0xc6, 0x3, 0, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc2, 0x1, 0xc0, 0xe8, 0x3a, 0x6, 0x3, 0, 0xa3, 0x1c, 0x81, 0x1c, 0x10, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0xff, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0x39, 0xc2, 0x7d, 0x19, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0x1c, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0xc7, 0, 0, 0, 0xeb, 0xbc, 0x83, 0x45, 0xec, 0x3, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xb0, 0xe8, 0xae, 0xf, 0, 0, 0x8b, 0xd, 0xb4, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0xc1, 0xf2, 0xff, 0xff, 0x8b, 0xd, 0xb8, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0xba, 0x3f, 0, 0, 0, 0x31, 0xc0, 0xe8, 0xad, 0xf2, 0xff, 0xff, 0x8b, 0xd, 0xbc, 0x70, 0x1c, 0x10, 0xbb, 0x3f, 0, 0, 0, 0x31, 0xd2, 0x31, 0xc0, 0xe8, 0x99, 0xf2, 0xff, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x5, 0x6e, 0x7, 0, 0, 0x89, 0x85, 0x48, 0xff, 0xff, 0xff, 0xe9, 0x21, 0x1, 0, 0, 0x8b, 0xd, 0xc0, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0xb9, 0xf3, 0xff, 0xff, 0x8b, 0xd, 0xc8, 0x70, 0x1c, 0x10, 0xbb, 0x3f, 0, 0, 0, 0x31, 0xd2, 0x31, 0xc0, 0xe8, 0xa5, 0xf3, 0xff, 0xff, 0x8b, 0xd, 0xc4, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0xba, 0x3f, 0, 0, 0, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0x8e, 0xf3, 0xff, 0xff, 0xe9, 0x31, 0x1, 0, 0, 0x8b, 0xd, 0xc0, 0x70, 0x1c, 0x10, 0xbb, 0x3f, 0, 0, 0, 0xba, 0x3f, 0, 0, 0, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0x6f, 0xf3, 0xff, 0xff, 0x8b, 0xd, 0xc8, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0xba, 0x3f, 0, 0, 0, 0x31, 0xc0, 0xe8, 0x5b, 0xf3, 0xff, 0xff, 0x8b, 0xd, 0xc4, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0xba, 0x3f, 0, 0, 0, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0x44, 0xf3, 0xff, 0xff, 0xe9, 0xe7, 0, 0, 0, 0x8b, 0xd, 0xc0, 0x70, 0x1c, 0x10, 0xbb, 0x3f, 0, 0, 0, 0xba, 0x3f, 0, 0, 0, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0x25, 0xf3, 0xff, 0xff, 0x8b, 0xd, 0xc8, 0x70, 0x1c, 0x10, 0xbb, 0x1f, 0, 0, 0, 0x31, 0xd2, 0x31, 0xc0, 0xe8, 0x11, 0xf3, 0xff, 0xff, 0x8b, 0xd, 0xc4, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0xba, 0x3f, 0, 0, 0, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0xfa, 0xf2, 0xff, 0xff, 0xe9, 0x9d, 0, 0, 0, 0x8b, 0xd, 0xc0, 0x70, 0x1c, 0x10, 0xbb, 0x3f, 0, 0, 0, 0xba, 0x3f, 0, 0, 0, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0xdb, 0xf2, 0xff, 0xff, 0x8b, 0xd, 0xc8, 0x70, 0x1c, 0x10, 0xbb, 0x1f, 0, 0, 0, 0x31, 0xd2, 0x31, 0xc0, 0xe8, 0xc7, 0xf2, 0xff, 0xff, 0x8b, 0xd, 0xc4, 0x70, 0x1c, 0x10, 0x31, 0xdb, 0xba, 0x3f, 0, 0, 0, 0xb8, 0x3f, 0, 0, 0, 0xe8, 0xb0, 0xf2, 0xff, 0xff, 0xeb, 0x56, 0xeb, 0x54, 0x81, 0xbd, 0x48, 0xff, 0xff, 0xff, 0x74, 0x7, 0, 0, 0x72, 0x36, 0x81, 0xbd, 0x48, 0xff, 0xff, 0xff, 0x79, 0x7, 0, 0, 0xf, 0x86, 0x7, 0xff, 0xff, 0xff, 0x81, 0xbd, 0x48, 0xff, 0xff, 0xff, 0x7f, 0x7, 0, 0, 0xf, 0x86, 0x41, 0xff, 0xff, 0xff, 0x81, 0xbd, 0x48, 0xff, 0xff, 0xff, 0x85, 0x7, 0, 0, 0xf, 0x86, 0x7b, 0xff, 0xff, 0xff, 0xeb, 0xc0, 0xeb, 0xbe, 0xeb, 0xbc, 0x81, 0xbd, 0x48, 0xff, 0xff, 0xff, 0x6e, 0x7, 0, 0, 0xf, 0x83, 0x8d, 0xfe, 0xff, 0xff, 0xeb, 0xaa, 0xa1, 0xcc, 0x70, 0x1c, 0x10, 0x89, 0x85, 0x44, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0x7, 0x83, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3d, 0, 0x3, 0, 0, 0xf, 0x8d, 0xee, 0, 0, 0, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xc2, 0x31, 0xc0, 0x8a, 0x2, 0x89, 0x85, 0x40, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xc2, 0x31, 0xc0, 0x8a, 0x42, 0x1, 0x89, 0x85, 0x3c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xc2, 0x31, 0xc0, 0x8a, 0x42, 0x2, 0x89, 0x85, 0x38, 0xff, 0xff, 0xff, 0xba, 0x7, 0, 0, 0, 0xf, 0xbf, 0x85, 0x40, 0xff, 0xff, 0xff, 0xe8, 0xef, 0x11, 0xf4, 0xff, 0x6b, 0xd0, 0x1f, 0xbb, 0x3f, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x85, 0x40, 0xff, 0xff, 0xff, 0xba, 0x7, 0, 0, 0, 0xf, 0xbf, 0x85, 0x3c, 0xff, 0xff, 0xff, 0xe8, 0xc9, 0x11, 0xf4, 0xff, 0x6b, 0xd0, 0x1f, 0xbb, 0x3f, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x85, 0x3c, 0xff, 0xff, 0xff, 0xba, 0x7, 0, 0, 0, 0xf, 0xbf, 0x85, 0x38, 0xff, 0xff, 0xff, 0xe8, 0xa3, 0x11, 0xf4, 0xff, 0x6b, 0xd0, 0x1f, 0xbb, 0x3f, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x85, 0x38, 0xff, 0xff, 0xff, 0x31, 0xc9, 0xf, 0xbf, 0x9d, 0x38, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x3c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x40, 0xff, 0xff, 0xff, 0xe8, 0x7e, 0xdd, 0xff, 0xff, 0x88, 0xc2, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0xff, 0x85, 0x44, 0xff, 0xff, 0xff, 0x88, 0x10, 0xe9, 0xf9, 0xfe, 0xff, 0xff, 0x83, 0x45, 0xec, 0x3, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xb0, 0xe8, 0xba, 0xc, 0, 0, 0xa1, 0x5c, 0x94, 0x1c, 0x10, 0x89, 0x85, 0x44, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x64, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0x7, 0x83, 0x85, 0x64, 0xff, 0xff, 0xff, 0x20, 0xf, 0xbf, 0x85, 0x64, 0xff, 0xff, 0xff, 0x3d, 0xe0, 0, 0, 0, 0xf, 0x8d, 0x1a, 0x1, 0, 0, 0xc7, 0x85, 0x34, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0x7, 0x83, 0x85, 0x34, 0xff, 0xff, 0xff, 0x3, 0xf, 0xbf, 0x85, 0x34, 0xff, 0xff, 0xff, 0x3d, 0, 0x3, 0, 0, 0xf, 0x8d, 0xe0, 0, 0, 0, 0xf, 0xbf, 0x85, 0x34, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0xf, 0xaf, 0xd0, 0xbb, 0xe0, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x85, 0x30, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x34, 0xff, 0xff, 0xff, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xc2, 0x31, 0xc0, 0x8a, 0x42, 0x1, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0xf, 0xaf, 0xd0, 0xbb, 0xe0, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x85, 0x2c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x34, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0x40, 0x2, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x95, 0x64, 0xff, 0xff, 0xff, 0xf, 0xaf, 0xd0, 0xbb, 0xe0, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x85, 0x28, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x34, 0xff, 0xff, 0xff, 0x83, 0xf8, 0x5d, 0x75, 0x11, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0xff, 0x85, 0x44, 0xff, 0xff, 0xff, 0xc6, 0, 0x1f, 0xeb, 0x2a, 0x31, 0xc9, 0xf, 0xbf, 0x9d, 0x28, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x2c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x30, 0xff, 0xff, 0xff, 0xe8, 0x37, 0xdc, 0xff, 0xff, 0x8b, 0x95, 0x44, 0xff, 0xff, 0xff, 0xff, 0x85, 0x44, 0xff, 0xff, 0xff, 0x88, 0x2, 0xe9, 0x7, 0xff, 0xff, 0xff, 0x83, 0x45, 0xec, 0x3, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xb0, 0xe8, 0x75, 0xb, 0, 0, 0xe9, 0xcd, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0xbf, 0xa, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101351c1, 0x5)   pushd(0x100);                         /* push dword 0x100 */
    II(0x101351c6, 0x5)   calld(sys_check_available_stack_size, 0x30b87); /* call 0x10165d52 */
    II(0x101351cb, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101351cc, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101351cd, 0x1)   pushd(edx);                           /* push edx */
    II(0x101351ce, 0x1)   pushd(esi);                           /* push esi */
    II(0x101351cf, 0x1)   pushd(edi);                           /* push edi */
    II(0x101351d0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101351d1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101351d3, 0x6)   sub(esp, 0xd8);                       /* sub esp, 0xd8 */
    II(0x101351d9, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x101351dc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101351de, 0x3)   mov(dl, memb_a32(ss, ebp - 0x4));     /* mov dl, [ebp-0x4] */
    II(0x101351e1, 0x5)   mov(eax, 0x45);                       /* mov eax, 0x45 */
    II(0x101351e6, 0x5)   calld(0x100caafc, -0x6a6ef);          /* call 0x100caafc */
    II(0x101351eb, 0x5)   mov(eax, 0x101c8178);                 /* mov eax, 0x101c8178 */
    II(0x101351f0, 0x5)   calld(0x10102e0f, -0x323e6);          /* call 0x10102e0f */
    II(0x101351f5, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x101351fa, 0x5)   calld(0x10102e0f, -0x323f0);          /* call 0x10102e0f */
    II(0x101351ff, 0x5)   mov(eax, 0x101c8190);                 /* mov eax, 0x101c8190 */
    II(0x10135204, 0x5)   calld(0x10102e0f, -0x323fa);          /* call 0x10102e0f */
    II(0x10135209, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1013520e, 0x5)   calld(0x10102e0f, -0x32404);          /* call 0x10102e0f */
    II(0x10135213, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x10135218, 0x5)   calld(0x10102e0f, -0x3240e);          /* call 0x10102e0f */
    II(0x1013521d, 0x5)   mov(eax, 0x101c39c0);                 /* mov eax, 0x101c39c0 */
    II(0x10135222, 0x5)   calld(0x10103ff1, -0x31236);          /* call 0x10103ff1 */
    II(0x10135227, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x1013522c, 0x5)   calld(0x1010380b, -0x31a26);          /* call 0x1010380b */
    II(0x10135231, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10135233, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x10135238, 0x5)   calld(0x10076630, -0xbec0d);          /* call 0x10076630 */
    II(0x1013523d, 0x7)   cmp(memd_a32(ds, 0x101c9450), 0);     /* cmp dword [0x101c9450], 0x0 */
    II(0x10135244, 0x2)   jzd(0x10135250, 0xa);                 /* jz 0x10135250 */
    II(0x10135246, 0x5)   mov(eax, memd_a32(ds, 0x101c9450));   /* mov eax, [0x101c9450] */
    II(0x1013524b, 0x5)   calld(sys_delete, 0x30d14);           /* call 0x10165f64 */
l_0x10135250:
    II(0x10135250, 0x7)   cmp(memd_a32(ds, 0x101c944c), 0);     /* cmp dword [0x101c944c], 0x0 */
    II(0x10135257, 0x2)   jzd(0x10135263, 0xa);                 /* jz 0x10135263 */
    II(0x10135259, 0x5)   mov(eax, memd_a32(ds, 0x101c944c));   /* mov eax, [0x101c944c] */
    II(0x1013525e, 0x5)   calld(sys_delete, 0x30d01);           /* call 0x10165f64 */
l_0x10135263:
    II(0x10135263, 0x7)   cmp(memd_a32(ds, 0x101c9454), 0);     /* cmp dword [0x101c9454], 0x0 */
    II(0x1013526a, 0x2)   jzd(0x10135276, 0xa);                 /* jz 0x10135276 */
    II(0x1013526c, 0x5)   mov(eax, memd_a32(ds, 0x101c9454));   /* mov eax, [0x101c9454] */
    II(0x10135271, 0x5)   calld(sys_delete, 0x30cee);           /* call 0x10165f64 */
l_0x10135276:
    II(0x10135276, 0x7)   cmp(memd_a32(ds, 0x101c811c), 0);     /* cmp dword [0x101c811c], 0x0 */
    II(0x1013527d, 0x2)   jzd(0x10135289, 0xa);                 /* jz 0x10135289 */
    II(0x1013527f, 0x5)   mov(eax, memd_a32(ds, 0x101c811c));   /* mov eax, [0x101c811c] */
    II(0x10135284, 0x5)   calld(sys_delete, 0x30cdb);           /* call 0x10165f64 */
l_0x10135289:
    II(0x10135289, 0xa)   mov(memd_a32(ds, 0x101c9450), 0);     /* mov dword [0x101c9450], 0x0 */
    II(0x10135293, 0xa)   mov(memd_a32(ds, 0x101c944c), 0);     /* mov dword [0x101c944c], 0x0 */
    II(0x1013529d, 0xa)   mov(memd_a32(ds, 0x101c9454), 0);     /* mov dword [0x101c9454], 0x0 */
    II(0x101352a7, 0xa)   mov(memd_a32(ds, 0x101c811c), 0);     /* mov dword [0x101c811c], 0x0 */
    II(0x101352b1, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x101352b6, 0x5)   calld(0x1013d111, 0x7e56);            /* call 0x1013d111 */
    II(0x101352bb, 0x5)   calld(0x100d533c, -0x5ff84);          /* call 0x100d533c */
    II(0x101352c0, 0x1)   cwde();                               /* cwde */
    II(0x101352c1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101352c2, 0x5)   calld(0x100d5360, -0x5ff67);          /* call 0x100d5360 */
    II(0x101352c7, 0x1)   cwde();                               /* cwde */
    II(0x101352c8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101352c9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101352cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101352cc, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x101352d1, 0x5)   mov(ebx, 0x280);                      /* mov ebx, 0x280 */
    II(0x101352d6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101352d8, 0x5)   calld(0x100e883d, -0x4caa0);          /* call 0x100e883d */
    II(0x101352dd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101352df, 0x5)   mov(eax, 0x6be);                      /* mov eax, 0x6be */
    II(0x101352e4, 0x5)   calld(0x100e8c51, -0x4c698);          /* call 0x100e8c51 */
    II(0x101352e9, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x7);   /* cmp byte [0x101c391e], 0x7 */
    II(0x101352f0, 0x2)   jnzd(0x101352f8, 0x6);                /* jnz 0x101352f8 */
    II(0x101352f2, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x101352f6, 0x2)   jmpd(0x101352fc, 0x4);                /* jmp 0x101352fc */
l_0x101352f8:
    II(0x101352f8, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x101352fc:
    II(0x101352fc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101352fe, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10135301, 0x5)   calld(0x100f1a86, -0x43880);          /* call 0x100f1a86 */
    II(0x10135306, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135308, 0x5)   calld(0x100e883d, -0x4cad0);          /* call 0x100e883d */
    II(0x1013530d, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10135310, 0x5)   calld(sys_display_draw_0, 0x3216f);   /* call 0x10167484 */
    II(0x10135315, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135317, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1013531a, 0x5)   add(eax, 0x76e);                      /* add eax, 0x76e */
    II(0x1013531f, 0x1)   cwde();                               /* cwde */
    II(0x10135320, 0x5)   calld(my_get_res_data_by_id_malloc, -0x113a); /* call 0x101341eb */
    II(0x10135325, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10135328, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1013532c, 0x2)   jnzd(0x10135338, 0xa);                /* jnz 0x10135338 */
    II(0x1013532e, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x10135333, 0x5)   calld(0x100ef3a0, -0x45f98);          /* call 0x100ef3a0 */
l_0x10135338:
    II(0x10135338, 0x5)   mov(edx, 0x101a8a10);                 /* mov edx, 0x101a8a10 */ /* "rb" */
    II(0x1013533d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10135340, 0x5)   calld(my_fopen, -0x45f26);            /* call 0x100ef41f */
    II(0x10135345, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10135348, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013534b, 0x5)   calld(sys_free, 0x35d71);             /* call 0x1016b0c1 */
    II(0x10135350, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x10135354, 0x2)   jnzd(0x10135360, 0xa);                /* jnz 0x10135360 */
    II(0x10135356, 0x5)   mov(eax, 0x10);                       /* mov eax, 0x10 */
    II(0x1013535b, 0x5)   calld(0x100ef3a0, -0x45fc0);          /* call 0x100ef3a0 */
l_0x10135360:
    II(0x10135360, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10135367, 0x4)   or_(memb_a32(ss, ebp - 0x18), 0x1);   /* or byte [ebp-0x18], 0x1 */
    II(0x1013536b, 0x5)   mov(edx, 0x101a8a13);                 /* mov edx, 0x101a8a13 */ /* "Scanning planet surface..." */
    II(0x10135370, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x10135373, 0x5)   calld(0x1013679b, 0x1423);            /* call 0x1013679b */
    II(0x10135378, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x1013537b, 0x4)   and_(memb_a32(ss, ebp - 0x18), -0x2 /* 0xfe */); /* and byte [ebp-0x18], 0xfe */
    II(0x1013537f, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x10));   /* mov ecx, [ebp-0x10] */
    II(0x10135382, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x10135387, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1013538c, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x1013538f, 0x5)   calld(my_fread, -0x45f05);            /* call 0x100ef48f */
    II(0x10135394, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x10135397, 0x2)   jzd(0x101353a3, 0xa);                 /* jz 0x101353a3 */
    II(0x10135399, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x1013539e, 0x5)   calld(0x100ef3a0, -0x46003);          /* call 0x100ef3a0 */
l_0x101353a3:
    II(0x101353a3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x59)); /* movsx eax, word [ebp-0x59] */
    II(0x101353a7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101353aa, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x101353ad, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x10));   /* mov ecx, [ebp-0x10] */
    II(0x101353b0, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x60));   /* mov ebx, [ebp-0x60] */
    II(0x101353b3, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101353b8, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x101353be, 0x5)   calld(my_fread, -0x45f34);            /* call 0x100ef48f */
    II(0x101353c3, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x60));   /* cmp eax, [ebp-0x60] */
    II(0x101353c6, 0x2)   jzd(0x101353d2, 0xa);                 /* jz 0x101353d2 */
    II(0x101353c8, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x101353cd, 0x5)   calld(0x100ef3a0, -0x46032);          /* call 0x100ef3a0 */
l_0x101353d2:
    II(0x101353d2, 0xa)   mov(memd_a32(ss, ebp - 0x94), 0x1);   /* mov dword [ebp+0xffffff6c], 0x1 */
    II(0x101353dc, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x101353e3, 0x1)   dec(eax);                             /* dec eax */
    II(0x101353e4, 0x6)   imul(eax, eax, 0x3100);               /* imul eax, eax, 0x3100 */
    II(0x101353ea, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x101353ed, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101353f2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x60));   /* mov edx, [ebp-0x60] */
    II(0x101353f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101353f8, 0x5)   calld(my_fseek, -0x45fa8);            /* call 0x100ef455 */
    II(0x101353fd, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x10));   /* mov ecx, [ebp-0x10] */
    II(0x10135400, 0x5)   mov(ebx, 0x3100);                     /* mov ebx, 0x3100 */
    II(0x10135405, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1013540a, 0x5)   mov(eax, memd_a32(ds, 0x101c70e0));   /* mov eax, [0x101c70e0] */
    II(0x1013540f, 0x5)   calld(my_fread, -0x45f85);            /* call 0x100ef48f */
    II(0x10135414, 0x5)   cmp(eax, 0x3100);                     /* cmp eax, 0x3100 */
    II(0x10135419, 0x2)   jzd(0x10135425, 0xa);                 /* jz 0x10135425 */
    II(0x1013541b, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x10135420, 0x5)   calld(0x100ef3a0, -0x46085);          /* call 0x100ef3a0 */
l_0x10135425:
    II(0x10135425, 0x5)   mov(ebx, 0x3100);                     /* mov ebx, 0x3100 */
    II(0x1013542a, 0x6)   mov(edx, memd_a32(ds, 0x101c70e0));   /* mov edx, [0x101c70e0] */
    II(0x10135430, 0x5)   mov(eax, memd_a32(ds, 0x101c70e8));   /* mov eax, [0x101c70e8] */
    II(0x10135435, 0x5)   calld(sys_memcpy, 0x30a11);           /* call 0x10165e4b */
    II(0x1013543a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013543d, 0x5)   calld(sys_ftell, 0x3d305);            /* call 0x10172747 */
    II(0x10135442, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
    II(0x10135448, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x8e)); /* movsx eax, word [ebp+0xffffff72] */
    II(0x1013544f, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x90)); /* movsx edx, word [ebp+0xffffff70] */
    II(0x10135456, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10135459, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1013545b, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x1013545e, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10135463, 0x3)   mov(edx, memd_a32(ss, ebp - 0x60));   /* mov edx, [ebp-0x60] */
    II(0x10135466, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10135469, 0x5)   calld(my_fseek, -0x46019);            /* call 0x100ef455 */
    II(0x1013546e, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x10));   /* mov ecx, [ebp-0x10] */
    II(0x10135471, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x10135476, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1013547b, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x10135481, 0x5)   calld(my_fread, -0x45ff7);            /* call 0x100ef48f */
    II(0x10135486, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x10135489, 0x2)   jzd(0x10135495, 0xa);                 /* jz 0x10135495 */
    II(0x1013548b, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x10135490, 0x5)   calld(0x100ef3a0, -0x460f5);          /* call 0x100ef3a0 */
l_0x10135495:
    II(0x10135495, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013549c, 0x3)   shl(eax, 0xc);                        /* shl eax, 0xc */
    II(0x1013549f, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x101354a2, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101354a7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x60));   /* mov edx, [ebp-0x60] */
    II(0x101354aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101354ad, 0x5)   calld(my_fseek, -0x4605d);            /* call 0x100ef455 */
    II(0x101354b2, 0x5)   mov(eax, 0x300);                      /* mov eax, 0x300 */
    II(0x101354b7, 0x5)   calld(sys_new_arr, 0x30b54);          /* call 0x10166010 */
    II(0x101354bc, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
    II(0x101354c2, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x10));   /* mov ecx, [ebp-0x10] */
    II(0x101354c5, 0x5)   mov(ebx, 0x300);                      /* mov ebx, 0x300 */
    II(0x101354ca, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
//    II(0x101354cf, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x101354d5, 0x5)   calld(my_fread, -0x4604b);            /* call 0x100ef48f */
    II(0x101354da, 0x5)   cmp(eax, 0x300);                      /* cmp eax, 0x300 */
    II(0x101354df, 0x2)   jzd(0x101354eb, 0xa);                 /* jz 0x101354eb */
    II(0x101354e1, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x101354e6, 0x5)   calld(0x100ef3a0, -0x4614b);          /* call 0x100ef3a0 */
l_0x101354eb:
    II(0x101354eb, 0xa)   mov(memd_a32(ss, ebp - 0x9c), 0xc0);  /* mov dword [ebp+0xffffff64], 0xc0 */
    II(0x101354f5, 0x2)   jmpd(0x10135503, 0xc);                /* jmp 0x10135503 */
l_0x101354f7:
    II(0x101354f7, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x101354fd, 0x6)   inc(memd_a32(ss, ebp - 0x9c));        /* inc dword [ebp+0xffffff64] */
l_0x10135503:
    II(0x10135503, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013550a, 0x5)   cmp(eax, 0x1e0);                      /* cmp eax, 0x1e0 */
    II(0x1013550f, 0x2)   jged(0x1013553d, 0x2c);               /* jge 0x1013553d */
    II(0x10135511, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135518, 0x6)   add(eax, memd_a32(ss, ebp - 0xa0));   /* add eax, [ebp+0xffffff60] */
    II(0x1013551e, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10135520, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10135525, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x10135528, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1013552a, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135531, 0x6)   mov(edx, memd_a32(ds, ptr_to_pallete)); /* mov edx, [0x101c9464] */
    II(0x10135537, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10135539, 0x2)   mov(memb_a32(ds, eax), bl);           /* mov [eax], bl */
    II(0x1013553b, 0x2)   jmpd(0x101354f7, -0x46);              /* jmp 0x101354f7 */
l_0x1013553d:
    II(0x1013553d, 0x5)   mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10135542, 0x5)   calld(sys_display_applay_palette, 0x37675); /* call 0x1016cbbc */
    II(0x10135547, 0x5)   mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x1013554c, 0x5)   calld(/* sys */ 0x1016d2cc, 0x37d7b); /* call 0x1016d2cc */
    II(0x10135551, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x10135557, 0x5)   calld(sys_delete, 0x30a08);           /* call 0x10165f64 */
    II(0x1013555c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1013555e, 0x6)   mov(edx, memd_a32(ss, ebp - 0x98));   /* mov edx, [ebp+0xffffff68] */
    II(0x10135564, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10135567, 0x5)   calld(my_fseek, -0x46117);            /* call 0x100ef455 */
    II(0x1013556c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x59)); /* movsx edx, word [ebp-0x59] */
    II(0x10135570, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x10135577, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10135579, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013557b, 0x6)   imul(eax, eax, 0x3100);               /* imul eax, eax, 0x3100 */
    II(0x10135581, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x10135584, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x1013558a, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
l_0x10135590:
    II(0x10135590, 0x7)   add(memd_a32(ss, ebp - 0x9c), -0x1 /* 0xff */); /* add dword [ebp+0xffffff64], 0xff */
    II(0x10135597, 0x8)   cmp(memw_a32(ss, ebp - 0x9c), 0);     /* cmp word [ebp+0xffffff64], 0x0 */
    II(0x1013559f, 0x2)   jzd(0x101355d3, 0x32);                /* jz 0x101355d3 */
    II(0x101355a1, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x101355a8, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101355ab, 0x7)   mov(edx, memd_a32(ds, eax + ebp - 0x90)); /* mov edx, [eax+ebp+0xffffff70] */
    II(0x101355b2, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101355b5, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x101355bc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101355bf, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x92)); /* mov eax, [eax+ebp+0xffffff6e] */
    II(0x101355c6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101355c9, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x101355cc, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101355ce, 0x3)   add(memd_a32(ss, ebp - 0x60), eax);   /* add [ebp-0x60], eax */
    II(0x101355d1, 0x2)   jmpd(0x10135590, -0x43);              /* jmp 0x10135590 */
l_0x101355d3:
    II(0x101355d3, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101355d8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x60));   /* mov edx, [ebp-0x60] */
    II(0x101355db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101355de, 0x5)   calld(my_fseek, -0x4618e);            /* call 0x100ef455 */
    II(0x101355e3, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x101355e9, 0x1)   dec(eax);                             /* dec eax */
    II(0x101355ea, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
    II(0x101355f0, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x101355f7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101355fa, 0x8)   mov(ax, memw_a32(ds, eax + ebp - 0x90)); /* mov ax, [eax+ebp+0xffffff70] */
    II(0x10135602, 0x6)   mov(memw_a32(ds, 0x101c8172), ax);    /* mov [0x101c8172], ax */
    II(0x10135608, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013560f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10135612, 0x8)   mov(ax, memw_a32(ds, eax + ebp - 0x8e)); /* mov ax, [eax+ebp+0xffffff72] */
    II(0x1013561a, 0x6)   mov(memw_a32(ds, 0x101c8174), ax);    /* mov [0x101c8174], ax */
    II(0x10135620, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x10135626, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10135629, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x1013562e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10135631, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10135634, 0x3)   mov(memd_a32(ss, ebp - 0x60), edx);   /* mov [ebp-0x60], edx */
    II(0x10135637, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1013563a, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1013563c, 0x5)   calld(sys_new_arr, 0x309cf);          /* call 0x10166010 */
    II(0x10135641, 0x5)   mov(memd_a32(ds, 0x101c9450), eax);   /* mov [0x101c9450], eax */
    II(0x10135646, 0x7)   cmp(memd_a32(ds, 0x101c9450), 0);     /* cmp dword [0x101c9450], 0x0 */
    II(0x1013564d, 0x2)   jnzd(0x10135659, 0xa);                /* jnz 0x10135659 */
    II(0x1013564f, 0x5)   mov(eax, 0x3);                        /* mov eax, 0x3 */
    II(0x10135654, 0x5)   calld(0x100ef3a0, -0x462b9);          /* call 0x100ef3a0 */
l_0x10135659:
    II(0x10135659, 0x3)   shl(memd_a32(ss, ebp - 0x60), 0x1);   /* shl dword [ebp-0x60], 1 */
    II(0x1013565c, 0xa)   mov(memd_a32(ss, ebp - 0xa4), 0);     /* mov dword [ebp+0xffffff5c], 0x0 */
    II(0x10135666, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x10135669, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x1013566c, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x10135672, 0x5)   mov(eax, memd_a32(ds, 0x101c9450));   /* mov eax, [0x101c9450] */
    II(0x10135677, 0x6)   mov(memd_a32(ss, ebp - 0xac), eax);   /* mov [ebp+0xffffff54], eax */
l_0x1013567d:
    II(0x1013567d, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x10135683, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x60));   /* cmp eax, [ebp-0x60] */
    II(0x10135686, 0x6)   jzd(0x10135706, 0x7a);                /* jz dword 0x10135706 */
    II(0x1013568c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x60));   /* mov edx, [ebp-0x60] */
    II(0x1013568f, 0x6)   sub(edx, memd_a32(ss, ebp - 0xa4));   /* sub edx, [ebp+0xffffff5c] */
    II(0x10135695, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x1013569b, 0x5)   calld(my_min, -0xabf1c);              /* call 0x10089784 */
    II(0x101356a0, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x101356a6, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x10));   /* mov ecx, [ebp-0x10] */
    II(0x101356a9, 0x6)   mov(ebx, memd_a32(ss, ebp - 0xa8));   /* mov ebx, [ebp+0xffffff58] */
    II(0x101356af, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101356b4, 0x6)   mov(eax, memd_a32(ss, ebp - 0xac));   /* mov eax, [ebp+0xffffff54] */
    II(0x101356ba, 0x6)   add(eax, memd_a32(ss, ebp - 0xa4));   /* add eax, [ebp+0xffffff5c] */
    II(0x101356c0, 0x5)   calld(my_fread, -0x46236);            /* call 0x100ef48f */
    II(0x101356c5, 0x6)   cmp(eax, memd_a32(ss, ebp - 0xa8));   /* cmp eax, [ebp+0xffffff58] */
    II(0x101356cb, 0x2)   jzd(0x101356d7, 0xa);                 /* jz 0x101356d7 */
    II(0x101356cd, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x101356d2, 0x5)   calld(0x100ef3a0, -0x46337);          /* call 0x100ef3a0 */
l_0x101356d7:
    II(0x101356d7, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x101356dd, 0x6)   add(memd_a32(ss, ebp - 0xa4), eax);   /* add [ebp+0xffffff5c], eax */
    II(0x101356e3, 0x7)   imul(edx, memd_a32(ss, ebp - 0xa4), 0x14); /* imul edx, [ebp+0xffffff5c], 0x14 */
    II(0x101356ea, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101356ec, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101356ef, 0x3)   idiv(memd_a32(ss, ebp - 0x60));       /* idiv dword [ebp-0x60] */
    II(0x101356f2, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101356f5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x101356f9, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x101356fc, 0x5)   calld(0x101369e9, 0x12e8);            /* call 0x101369e9 */
    II(0x10135701, 0x5)   jmpd(0x1013567d, -0x89);              /* jmp 0x1013567d */
l_0x10135706:
    II(0x10135706, 0x7)   mov(memd_a32(ss, ebp - 0x60), 0);     /* mov dword [ebp-0x60], 0x0 */
    II(0x1013570d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x59));   /* mov eax, [ebp-0x59] */
    II(0x10135710, 0x6)   sub(eax, memd_a32(ss, ebp - 0x94));   /* sub eax, [ebp+0xffffff6c] */
    II(0x10135716, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
l_0x1013571c:
    II(0x1013571c, 0x6)   dec(memd_a32(ss, ebp - 0x9c));        /* dec dword [ebp+0xffffff64] */
    II(0x10135722, 0x8)   cmp(memw_a32(ss, ebp - 0x9c), -0x1 /* 0xff */); /* cmp word [ebp+0xffffff64], 0xff */
    II(0x1013572a, 0x2)   jzd(0x10135770, 0x44);                /* jz 0x10135770 */
    II(0x1013572c, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135733, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x1013573a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013573c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1013573f, 0x7)   mov(ebx, memd_a32(ds, eax + ebp - 0x90)); /* mov ebx, [eax+ebp+0xffffff70] */
    II(0x10135746, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10135749, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135750, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x10135757, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10135759, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1013575c, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x92)); /* mov eax, [eax+ebp+0xffffff6e] */
    II(0x10135763, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10135766, 0x3)   imul(eax, ebx);                       /* imul eax, ebx */
    II(0x10135769, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1013576b, 0x3)   add(memd_a32(ss, ebp - 0x60), eax);   /* add [ebp-0x60], eax */
    II(0x1013576e, 0x2)   jmpd(0x1013571c, -0x54);              /* jmp 0x1013571c */
l_0x10135770:
    II(0x10135770, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10135775, 0x3)   mov(edx, memd_a32(ss, ebp - 0x60));   /* mov edx, [ebp-0x60] */
    II(0x10135778, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013577b, 0x5)   calld(my_fseek, -0x4632b);            /* call 0x100ef455 */
    II(0x10135780, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x10));   /* mov ecx, [ebp-0x10] */
    II(0x10135783, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x10135788, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1013578d, 0x5)   mov(eax, 0x101c946e);                 /* mov eax, 0x101c946e */
    II(0x10135792, 0x5)   calld(my_fread, -0x46308);            /* call 0x100ef48f */
    II(0x10135797, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1013579a, 0x2)   jzd(0x101357a6, 0xa);                 /* jz 0x101357a6 */
    II(0x1013579c, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x101357a1, 0x5)   calld(0x100ef3a0, -0x46406);          /* call 0x100ef3a0 */
l_0x101357a6:
    II(0x101357a6, 0x3)   lea(edx, ebp - 0x50);                 /* lea edx, [ebp-0x50] */
    II(0x101357a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101357ac, 0x5)   calld(0x10134fce, -0x7e3);            /* call 0x10134fce */
    II(0x101357b1, 0x2)   test(al, al);                         /* test al, al */
    II(0x101357b3, 0x2)   jnzd(0x101357bf, 0xa);                /* jnz 0x101357bf */
    II(0x101357b5, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x101357ba, 0x5)   calld(0x100ef3a0, -0x4641f);          /* call 0x100ef3a0 */
l_0x101357bf:
    II(0x101357bf, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x46);  /* mov dword [ebp-0x14], 0x46 */
    II(0x101357c6, 0x5)   mov(eax, 0x300);                      /* mov eax, 0x300 */
    II(0x101357cb, 0x5)   calld(sys_new_arr, 0x30840);          /* call 0x10166010 */
    II(0x101357d0, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
    II(0x101357d6, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x10));   /* mov ecx, [ebp-0x10] */
    II(0x101357d9, 0x5)   mov(ebx, 0x300);                      /* mov ebx, 0x300 */
    II(0x101357de, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
//    II(0x101357e3, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb0));   /* mov eax, [ebp+0xffffff50] */
    II(0x101357e9, 0x5)   calld(my_fread, -0x4635f);            /* call 0x100ef48f */
    II(0x101357ee, 0x5)   cmp(eax, 0x300);                      /* cmp eax, 0x300 */
    II(0x101357f3, 0x2)   jzd(0x101357ff, 0xa);                 /* jz 0x101357ff */
    II(0x101357f5, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x101357fa, 0x5)   calld(0x100ef3a0, -0x4645f);          /* call 0x100ef3a0 */
l_0x101357ff:
    II(0x101357ff, 0xa)   mov(memd_a32(ss, ebp - 0x9c), 0xc0);  /* mov dword [ebp+0xffffff64], 0xc0 */
    II(0x10135809, 0x2)   jmpd(0x10135817, 0xc);                /* jmp 0x10135817 */
l_0x1013580b:
    II(0x1013580b, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x10135811, 0x6)   inc(memd_a32(ss, ebp - 0x9c));        /* inc dword [ebp+0xffffff64] */
l_0x10135817:
    II(0x10135817, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013581e, 0x5)   cmp(eax, 0x1e0);                      /* cmp eax, 0x1e0 */
    II(0x10135823, 0x2)   jged(0x10135851, 0x2c);               /* jge 0x10135851 */
    II(0x10135825, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013582c, 0x6)   add(eax, memd_a32(ss, ebp - 0xb0));   /* add eax, [ebp+0xffffff50] */
    II(0x10135832, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10135834, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10135839, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x1013583c, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1013583e, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135845, 0x6)   mov(edx, memd_a32(ds, ptr_to_pallete)); /* mov edx, [0x101c9464] */
    II(0x1013584b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013584d, 0x2)   mov(memb_a32(ds, eax), bl);           /* mov [eax], bl */
    II(0x1013584f, 0x2)   jmpd(0x1013580b, -0x46);              /* jmp 0x1013580b */
l_0x10135851:
    II(0x10135851, 0x5)   mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10135856, 0x5)   calld(sys_display_applay_palette, 0x37361); /* call 0x1016cbbc */
    II(0x1013585b, 0x5)   mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10135860, 0x5)   calld(/* sys */ 0x1016d2cc, 0x37a67); /* call 0x1016d2cc */
    II(0x10135865, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x3);   /* add dword [ebp-0x14], 0x3 */
    II(0x10135869, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1013586d, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x10135870, 0x5)   calld(0x101369e9, 0x1174);            /* call 0x101369e9 */
    II(0x10135875, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb0));   /* mov eax, [ebp+0xffffff50] */
    II(0x1013587b, 0x5)   calld(sys_delete, 0x306e4);           /* call 0x10165f64 */
    II(0x10135880, 0x5)   mov(eax, memd_a32(ds, 0x101bd358));   /* mov eax, [0x101bd358] */
    II(0x10135885, 0x6)   mov(memd_a32(ss, ebp - 0xb4), eax);   /* mov [ebp+0xffffff4c], eax */
    II(0x1013588b, 0x5)   mov(eax, memd_a32(ds, 0x101c946c));   /* mov eax, [0x101c946c] */
    II(0x10135890, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10135893, 0x5)   calld(sys_new_arr, 0x30778);          /* call 0x10166010 */
    II(0x10135898, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
    II(0x1013589e, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x101358a3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101358a6, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x101358ac, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101358af, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x101358b2, 0x5)   calld(sys_new_arr, 0x30759);          /* call 0x10166010 */
    II(0x101358b7, 0x5)   mov(memd_a32(ds, 0x101c9454), eax);   /* mov [0x101c9454], eax */
    II(0x101358bc, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x10));   /* mov ecx, [ebp-0x10] */
    II(0x101358bf, 0x6)   mov(ebx, memd_a32(ds, 0x101c946c));   /* mov ebx, [0x101c946c] */
    II(0x101358c5, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101358c8, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101358cd, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb0));   /* mov eax, [ebp+0xffffff50] */
    II(0x101358d3, 0x5)   calld(my_fread, -0x46449);            /* call 0x100ef48f */
    II(0x101358d8, 0x6)   mov(edx, memd_a32(ds, 0x101c946c));   /* mov edx, [0x101c946c] */
    II(0x101358de, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101358e1, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x101358e3, 0x2)   jzd(0x101358ef, 0xa);                 /* jz 0x101358ef */
    II(0x101358e5, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x101358ea, 0x5)   calld(0x100ef3a0, -0x4654f);          /* call 0x100ef3a0 */
l_0x101358ef:
    II(0x101358ef, 0xa)   mov(memd_a32(ss, ebp - 0x9c), 0);     /* mov dword [ebp+0xffffff64], 0x0 */
    II(0x101358f9, 0x2)   jmpd(0x10135907, 0xc);                /* jmp 0x10135907 */
l_0x101358fb:
    II(0x101358fb, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x10135901, 0x6)   inc(memd_a32(ss, ebp - 0x9c));        /* inc dword [ebp+0xffffff64] */
l_0x10135907:
    II(0x10135907, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x1013590d, 0x7)   cmp(ax, memw_a32(ds, 0x101c946e));    /* cmp ax, [0x101c946e] */
    II(0x10135914, 0x2)   jged(0x10135942, 0x2c);               /* jge 0x10135942 */
    II(0x10135916, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x1013591d, 0x6)   add(eax, memd_a32(ss, ebp - 0xb0));   /* add eax, [ebp+0xffffff50] */
    II(0x10135923, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10135925, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1013592a, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135931, 0x6)   add(edx, memd_a32(ss, ebp - 0xb0));   /* add edx, [ebp+0xffffff50] */
    II(0x10135937, 0x7)   mov(al, memb_a32(ds, eax + ebp - 0xb4)); /* mov al, [eax+ebp+0xffffff4c] */
    II(0x1013593e, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x10135940, 0x2)   jmpd(0x101358fb, -0x47);              /* jmp 0x101358fb */
l_0x10135942:
    II(0x10135942, 0xa)   mov(memd_a32(ss, ebp - 0x9c), 0);     /* mov dword [ebp+0xffffff64], 0x0 */
    II(0x1013594c, 0x2)   jmpd(0x1013595a, 0xc);                /* jmp 0x1013595a */
l_0x1013594e:
    II(0x1013594e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x10135954, 0x6)   inc(memd_a32(ss, ebp - 0x9c));        /* inc dword [ebp+0xffffff64] */
l_0x1013595a:
    II(0x1013595a, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x10135960, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10135963, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x10135968, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013596b, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1013596e, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135975, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10135977, 0x2)   jged(0x101359a8, 0x2f);               /* jge 0x101359a8 */
    II(0x10135979, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135980, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10135982, 0x6)   mov(edx, memd_a32(ds, 0x101c9450));   /* mov edx, [0x101c9450] */
    II(0x10135988, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013598a, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1013598d, 0x6)   add(eax, memd_a32(ss, ebp - 0xb0));   /* add eax, [ebp+0xffffff50] */
    II(0x10135993, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0x9c)); /* movsx ebx, word [ebp+0xffffff64] */
    II(0x1013599a, 0x6)   mov(edx, memd_a32(ds, 0x101c9454));   /* mov edx, [0x101c9454] */
    II(0x101359a0, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x101359a2, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x101359a4, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x101359a6, 0x2)   jmpd(0x1013594e, -0x5a);              /* jmp 0x1013594e */
l_0x101359a8:
    II(0x101359a8, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb0));   /* mov eax, [ebp+0xffffff50] */
    II(0x101359ae, 0x5)   calld(sys_delete, 0x305b1);           /* call 0x10165f64 */
    II(0x101359b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101359b6, 0x5)   calld(sys_fclose, 0x3c6ae);           /* call 0x10172069 */
    II(0x101359bb, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x101359c1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101359c4, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x101359c9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101359cc, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x101359cf, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101359d1, 0x5)   calld(sys_new_arr, 0x3063a);          /* call 0x10166010 */
    II(0x101359d6, 0x5)   mov(memd_a32(ds, 0x101c811c), eax);   /* mov [0x101c811c], eax */
    II(0x101359db, 0xa)   mov(memd_a32(ss, ebp - 0x9c), 0);     /* mov dword [ebp+0xffffff64], 0x0 */
    II(0x101359e5, 0x2)   jmpd(0x101359f3, 0xc);                /* jmp 0x101359f3 */
l_0x101359e7:
    II(0x101359e7, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x101359ed, 0x6)   inc(memd_a32(ss, ebp - 0x9c));        /* inc dword [ebp+0xffffff64] */
l_0x101359f3:
    II(0x101359f3, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x101359f9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101359fc, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x10135a01, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10135a04, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10135a07, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135a0e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10135a10, 0x2)   jged(0x10135a2b, 0x19);               /* jge 0x10135a2b */
    II(0x10135a12, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135a19, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10135a1b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10135a1d, 0x5)   mov(eax, memd_a32(ds, 0x101c811c));   /* mov eax, [0x101c811c] */
    II(0x10135a22, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10135a24, 0x5)   mov(memw_a32(ds, eax), 0);            /* mov word [eax], 0x0 */
    II(0x10135a29, 0x2)   jmpd(0x101359e7, -0x44);              /* jmp 0x101359e7 */
l_0x10135a2b:
    II(0x10135a2b, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x3);   /* add dword [ebp-0x14], 0x3 */
    II(0x10135a2f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10135a33, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x10135a36, 0x5)   calld(0x101369e9, 0xfae);             /* call 0x101369e9 */
    II(0x10135a3b, 0x6)   mov(ecx, memd_a32(ds, 0x101c70b4));   /* mov ecx, [0x101c70b4] */
    II(0x10135a41, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10135a43, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10135a45, 0x5)   mov(eax, 0x3f);                       /* mov eax, 0x3f */
    II(0x10135a4a, 0x5)   calld(0x10134d10, -0xd3f);            /* call 0x10134d10 */
    II(0x10135a4f, 0x6)   mov(ecx, memd_a32(ds, 0x101c70b8));   /* mov ecx, [0x101c70b8] */
    II(0x10135a55, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10135a57, 0x5)   mov(edx, 0x3f);                       /* mov edx, 0x3f */
    II(0x10135a5c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135a5e, 0x5)   calld(0x10134d10, -0xd53);            /* call 0x10134d10 */
    II(0x10135a63, 0x6)   mov(ecx, memd_a32(ds, 0x101c70bc));   /* mov ecx, [0x101c70bc] */
    II(0x10135a69, 0x5)   mov(ebx, 0x3f);                       /* mov ebx, 0x3f */
    II(0x10135a6e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10135a70, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135a72, 0x5)   calld(0x10134d10, -0xd67);            /* call 0x10134d10 */
    II(0x10135a77, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135a79, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10135a7c, 0x5)   add(eax, 0x76e);                      /* add eax, 0x76e */
    II(0x10135a81, 0x6)   mov(memd_a32(ss, ebp - 0xb8), eax);   /* mov [ebp+0xffffff48], eax */
    II(0x10135a87, 0x5)   jmpd(0x10135bad, 0x121);              /* jmp 0x10135bad */
l_0x10135a8c:
    II(0x10135a8c, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c0));   /* mov ecx, [0x101c70c0] */
    II(0x10135a92, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10135a94, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10135a96, 0x5)   mov(eax, 0x3f);                       /* mov eax, 0x3f */
    II(0x10135a9b, 0x5)   calld(0x10134e59, -0xc47);            /* call 0x10134e59 */
    II(0x10135aa0, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c8));   /* mov ecx, [0x101c70c8] */
    II(0x10135aa6, 0x5)   mov(ebx, 0x3f);                       /* mov ebx, 0x3f */
    II(0x10135aab, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10135aad, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135aaf, 0x5)   calld(0x10134e59, -0xc5b);            /* call 0x10134e59 */
    II(0x10135ab4, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c4));   /* mov ecx, [0x101c70c4] */
    II(0x10135aba, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10135abc, 0x5)   mov(edx, 0x3f);                       /* mov edx, 0x3f */
    II(0x10135ac1, 0x5)   mov(eax, 0x3f);                       /* mov eax, 0x3f */
    II(0x10135ac6, 0x5)   calld(0x10134e59, -0xc72);            /* call 0x10134e59 */
    II(0x10135acb, 0x5)   jmpd(0x10135c01, 0x131);              /* jmp 0x10135c01 */
l_0x10135ad0:
    II(0x10135ad0, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c0));   /* mov ecx, [0x101c70c0] */
    II(0x10135ad6, 0x5)   mov(ebx, 0x3f);                       /* mov ebx, 0x3f */
    II(0x10135adb, 0x5)   mov(edx, 0x3f);                       /* mov edx, 0x3f */
    II(0x10135ae0, 0x5)   mov(eax, 0x3f);                       /* mov eax, 0x3f */
    II(0x10135ae5, 0x5)   calld(0x10134e59, -0xc91);            /* call 0x10134e59 */
    II(0x10135aea, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c8));   /* mov ecx, [0x101c70c8] */
    II(0x10135af0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10135af2, 0x5)   mov(edx, 0x3f);                       /* mov edx, 0x3f */
    II(0x10135af7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135af9, 0x5)   calld(0x10134e59, -0xca5);            /* call 0x10134e59 */
    II(0x10135afe, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c4));   /* mov ecx, [0x101c70c4] */
    II(0x10135b04, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10135b06, 0x5)   mov(edx, 0x3f);                       /* mov edx, 0x3f */
    II(0x10135b0b, 0x5)   mov(eax, 0x3f);                       /* mov eax, 0x3f */
    II(0x10135b10, 0x5)   calld(0x10134e59, -0xcbc);            /* call 0x10134e59 */
    II(0x10135b15, 0x5)   jmpd(0x10135c01, 0xe7);               /* jmp 0x10135c01 */
l_0x10135b1a:
    II(0x10135b1a, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c0));   /* mov ecx, [0x101c70c0] */
    II(0x10135b20, 0x5)   mov(ebx, 0x3f);                       /* mov ebx, 0x3f */
    II(0x10135b25, 0x5)   mov(edx, 0x3f);                       /* mov edx, 0x3f */
    II(0x10135b2a, 0x5)   mov(eax, 0x3f);                       /* mov eax, 0x3f */
    II(0x10135b2f, 0x5)   calld(0x10134e59, -0xcdb);            /* call 0x10134e59 */
    II(0x10135b34, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c8));   /* mov ecx, [0x101c70c8] */
    II(0x10135b3a, 0x5)   mov(ebx, 0x1f);                       /* mov ebx, 0x1f */
    II(0x10135b3f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10135b41, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135b43, 0x5)   calld(0x10134e59, -0xcef);            /* call 0x10134e59 */
    II(0x10135b48, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c4));   /* mov ecx, [0x101c70c4] */
    II(0x10135b4e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10135b50, 0x5)   mov(edx, 0x3f);                       /* mov edx, 0x3f */
    II(0x10135b55, 0x5)   mov(eax, 0x3f);                       /* mov eax, 0x3f */
    II(0x10135b5a, 0x5)   calld(0x10134e59, -0xd06);            /* call 0x10134e59 */
    II(0x10135b5f, 0x5)   jmpd(0x10135c01, 0x9d);               /* jmp 0x10135c01 */
l_0x10135b64:
    II(0x10135b64, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c0));   /* mov ecx, [0x101c70c0] */
    II(0x10135b6a, 0x5)   mov(ebx, 0x3f);                       /* mov ebx, 0x3f */
    II(0x10135b6f, 0x5)   mov(edx, 0x3f);                       /* mov edx, 0x3f */
    II(0x10135b74, 0x5)   mov(eax, 0x3f);                       /* mov eax, 0x3f */
    II(0x10135b79, 0x5)   calld(0x10134e59, -0xd25);            /* call 0x10134e59 */
    II(0x10135b7e, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c8));   /* mov ecx, [0x101c70c8] */
    II(0x10135b84, 0x5)   mov(ebx, 0x1f);                       /* mov ebx, 0x1f */
    II(0x10135b89, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10135b8b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135b8d, 0x5)   calld(0x10134e59, -0xd39);            /* call 0x10134e59 */
    II(0x10135b92, 0x6)   mov(ecx, memd_a32(ds, 0x101c70c4));   /* mov ecx, [0x101c70c4] */
    II(0x10135b98, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10135b9a, 0x5)   mov(edx, 0x3f);                       /* mov edx, 0x3f */
    II(0x10135b9f, 0x5)   mov(eax, 0x3f);                       /* mov eax, 0x3f */
    II(0x10135ba4, 0x5)   calld(0x10134e59, -0xd50);            /* call 0x10134e59 */
    II(0x10135ba9, 0x2)   jmpd(0x10135c01, 0x56);               /* jmp 0x10135c01 */
l_0x10135bab:
    II(0x10135bab, 0x2)   jmpd(0x10135c01, 0x54);               /* jmp 0x10135c01 */
l_0x10135bad:
    II(0x10135bad, 0xa)   cmp(memd_a32(ss, ebp - 0xb8), 0x774); /* cmp dword [ebp+0xffffff48], 0x774 */
    II(0x10135bb7, 0x2)   jbd(0x10135bef, 0x36);                /* jb 0x10135bef */
    II(0x10135bb9, 0xa)   cmp(memd_a32(ss, ebp - 0xb8), 0x779); /* cmp dword [ebp+0xffffff48], 0x779 */
    II(0x10135bc3, 0x6)   jbed(0x10135ad0, -0xf9);              /* jbe dword 0x10135ad0 */
    II(0x10135bc9, 0xa)   cmp(memd_a32(ss, ebp - 0xb8), 0x77f); /* cmp dword [ebp+0xffffff48], 0x77f */
    II(0x10135bd3, 0x6)   jbed(0x10135b1a, -0xbf);              /* jbe dword 0x10135b1a */
    II(0x10135bd9, 0xa)   cmp(memd_a32(ss, ebp - 0xb8), 0x785); /* cmp dword [ebp+0xffffff48], 0x785 */
    II(0x10135be3, 0x6)   jbed(0x10135b64, -0x85);              /* jbe dword 0x10135b64 */
    II(0x10135be9, 0x2)   jmpd(0x10135bab, -0x40);              /* jmp 0x10135bab */
//  II(0x10135beb, 0x4)   /* Недостижимый код. */
l_0x10135bef:
    II(0x10135bef, 0xa)   cmp(memd_a32(ss, ebp - 0xb8), 0x76e); /* cmp dword [ebp+0xffffff48], 0x76e */
    II(0x10135bf9, 0x6)   jaed(0x10135a8c, -0x173);             /* jae dword 0x10135a8c */
    II(0x10135bff, 0x2)   jmpd(0x10135bab, -0x56);              /* jmp 0x10135bab */
l_0x10135c01:
    II(0x10135c01, 0x5)   mov(eax, memd_a32(ds, 0x101c70cc));   /* mov eax, [0x101c70cc] */
    II(0x10135c06, 0x6)   mov(memd_a32(ss, ebp - 0xbc), eax);   /* mov [ebp+0xffffff44], eax */
    II(0x10135c0c, 0xa)   mov(memd_a32(ss, ebp - 0x9c), 0);     /* mov dword [ebp+0xffffff64], 0x0 */
    II(0x10135c16, 0x2)   jmpd(0x10135c1f, 0x7);                /* jmp 0x10135c1f */
l_0x10135c18:
    II(0x10135c18, 0x7)   add(memd_a32(ss, ebp - 0x9c), 0x3);   /* add dword [ebp+0xffffff64], 0x3 */
l_0x10135c1f:
    II(0x10135c1f, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135c26, 0x5)   cmp(eax, 0x300);                      /* cmp eax, 0x300 */
    II(0x10135c2b, 0x6)   jged(0x10135d1f, 0xee);               /* jge dword 0x10135d1f */
    II(0x10135c31, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135c38, 0x5)   mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10135c3d, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10135c3f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135c41, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x10135c43, 0x6)   mov(memd_a32(ss, ebp - 0xc0), eax);   /* mov [ebp+0xffffff40], eax */
    II(0x10135c49, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135c50, 0x6)   mov(edx, memd_a32(ds, ptr_to_pallete)); /* mov edx, [0x101c9464] */
    II(0x10135c56, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10135c58, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135c5a, 0x3)   mov(al, memb_a32(ds, edx + 0x1));     /* mov al, [edx+0x1] */
    II(0x10135c5d, 0x6)   mov(memd_a32(ss, ebp - 0xc4), eax);   /* mov [ebp+0xffffff3c], eax */
    II(0x10135c63, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135c6a, 0x5)   mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10135c6f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10135c71, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135c73, 0x3)   mov(al, memb_a32(ds, edx + 0x2));     /* mov al, [edx+0x2] */
    II(0x10135c76, 0x6)   mov(memd_a32(ss, ebp - 0xc8), eax);   /* mov [ebp+0xffffff38], eax */
    II(0x10135c7c, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x10135c81, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xc0)); /* movsx eax, word [ebp+0xffffff40] */
    II(0x10135c88, 0x5)   calld(0x10076e7c, -0xbee11);          /* call 0x10076e7c */
    II(0x10135c8d, 0x3)   imul(edx, eax, 0x1f);                 /* imul edx, eax, 0x1f */
    II(0x10135c90, 0x5)   mov(ebx, 0x3f);                       /* mov ebx, 0x3f */
    II(0x10135c95, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10135c97, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10135c9a, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10135c9c, 0x6)   mov(memd_a32(ss, ebp - 0xc0), eax);   /* mov [ebp+0xffffff40], eax */
    II(0x10135ca2, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x10135ca7, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xc4)); /* movsx eax, word [ebp+0xffffff3c] */
    II(0x10135cae, 0x5)   calld(0x10076e7c, -0xbee37);          /* call 0x10076e7c */
    II(0x10135cb3, 0x3)   imul(edx, eax, 0x1f);                 /* imul edx, eax, 0x1f */
    II(0x10135cb6, 0x5)   mov(ebx, 0x3f);                       /* mov ebx, 0x3f */
    II(0x10135cbb, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10135cbd, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10135cc0, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10135cc2, 0x6)   mov(memd_a32(ss, ebp - 0xc4), eax);   /* mov [ebp+0xffffff3c], eax */
    II(0x10135cc8, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x10135ccd, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xc8)); /* movsx eax, word [ebp+0xffffff38] */
    II(0x10135cd4, 0x5)   calld(0x10076e7c, -0xbee5d);          /* call 0x10076e7c */
    II(0x10135cd9, 0x3)   imul(edx, eax, 0x1f);                 /* imul edx, eax, 0x1f */
    II(0x10135cdc, 0x5)   mov(ebx, 0x3f);                       /* mov ebx, 0x3f */
    II(0x10135ce1, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10135ce3, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10135ce6, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10135ce8, 0x6)   mov(memd_a32(ss, ebp - 0xc8), eax);   /* mov [ebp+0xffffff38], eax */
    II(0x10135cee, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10135cf0, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0xc8)); /* movsx ebx, word [ebp+0xffffff38] */
    II(0x10135cf7, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xc4)); /* movsx edx, word [ebp+0xffffff3c] */
    II(0x10135cfe, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xc0)); /* movsx eax, word [ebp+0xffffff40] */
    II(0x10135d05, 0x5)   calld(0x10133a88, -0x2282);           /* call 0x10133a88 */
    II(0x10135d0a, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10135d0c, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x10135d12, 0x6)   inc(memd_a32(ss, ebp - 0xbc));        /* inc dword [ebp+0xffffff44] */
    II(0x10135d18, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x10135d1a, 0x5)   jmpd(0x10135c18, -0x107);             /* jmp 0x10135c18 */
l_0x10135d1f:
    II(0x10135d1f, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x3);   /* add dword [ebp-0x14], 0x3 */
    II(0x10135d23, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10135d27, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x10135d2a, 0x5)   calld(0x101369e9, 0xcba);             /* call 0x101369e9 */
    II(0x10135d2f, 0x5)   mov(eax, memd_a32(ds, 0x101c945c));   /* mov eax, [0x101c945c] */
    II(0x10135d34, 0x6)   mov(memd_a32(ss, ebp - 0xbc), eax);   /* mov [ebp+0xffffff44], eax */
    II(0x10135d3a, 0xa)   mov(memd_a32(ss, ebp - 0x9c), 0);     /* mov dword [ebp+0xffffff64], 0x0 */
    II(0x10135d44, 0x2)   jmpd(0x10135d4d, 0x7);                /* jmp 0x10135d4d */
l_0x10135d46:
    II(0x10135d46, 0x7)   add(memd_a32(ss, ebp - 0x9c), 0x20);  /* add dword [ebp+0xffffff64], 0x20 */
l_0x10135d4d:
    II(0x10135d4d, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x9c)); /* movsx eax, word [ebp+0xffffff64] */
    II(0x10135d54, 0x5)   cmp(eax, 0xe0);                       /* cmp eax, 0xe0 */
    II(0x10135d59, 0x6)   jged(0x10135e79, 0x11a);              /* jge dword 0x10135e79 */
    II(0x10135d5f, 0xa)   mov(memd_a32(ss, ebp - 0xcc), 0);     /* mov dword [ebp+0xffffff34], 0x0 */
    II(0x10135d69, 0x2)   jmpd(0x10135d72, 0x7);                /* jmp 0x10135d72 */
l_0x10135d6b:
    II(0x10135d6b, 0x7)   add(memd_a32(ss, ebp - 0xcc), 0x3);   /* add dword [ebp+0xffffff34], 0x3 */
l_0x10135d72:
    II(0x10135d72, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xcc)); /* movsx eax, word [ebp+0xffffff34] */
    II(0x10135d79, 0x5)   cmp(eax, 0x300);                      /* cmp eax, 0x300 */
    II(0x10135d7e, 0x6)   jged(0x10135e64, 0xe0);               /* jge dword 0x10135e64 */
    II(0x10135d84, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xcc)); /* movsx eax, word [ebp+0xffffff34] */
    II(0x10135d8b, 0x6)   mov(edx, memd_a32(ds, ptr_to_pallete)); /* mov edx, [0x101c9464] */
    II(0x10135d91, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10135d93, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10135d95, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10135d9a, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135da1, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10135da4, 0x5)   mov(ebx, 0xe0);                       /* mov ebx, 0xe0 */
    II(0x10135da9, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10135dab, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10135dae, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10135db0, 0x6)   mov(memd_a32(ss, ebp - 0xd0), eax);   /* mov [ebp+0xffffff30], eax */
    II(0x10135db6, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xcc)); /* movsx edx, word [ebp+0xffffff34] */
    II(0x10135dbd, 0x5)   mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10135dc2, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10135dc4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10135dc6, 0x3)   mov(al, memb_a32(ds, edx + 0x1));     /* mov al, [edx+0x1] */
    II(0x10135dc9, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135dd0, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10135dd3, 0x5)   mov(ebx, 0xe0);                       /* mov ebx, 0xe0 */
    II(0x10135dd8, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10135dda, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10135ddd, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10135ddf, 0x6)   mov(memd_a32(ss, ebp - 0xd4), eax);   /* mov [ebp+0xffffff2c], eax */
    II(0x10135de5, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xcc)); /* movsx eax, word [ebp+0xffffff34] */
    II(0x10135dec, 0x6)   mov(edx, memd_a32(ds, ptr_to_pallete)); /* mov edx, [0x101c9464] */
    II(0x10135df2, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10135df4, 0x3)   mov(al, memb_a32(ds, eax + 0x2));     /* mov al, [eax+0x2] */
    II(0x10135df7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10135dfc, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x9c)); /* movsx edx, word [ebp+0xffffff64] */
    II(0x10135e03, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10135e06, 0x5)   mov(ebx, 0xe0);                       /* mov ebx, 0xe0 */
    II(0x10135e0b, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10135e0d, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10135e10, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10135e12, 0x6)   mov(memd_a32(ss, ebp - 0xd8), eax);   /* mov [ebp+0xffffff28], eax */
    II(0x10135e18, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xcc)); /* movsx eax, word [ebp+0xffffff34] */
    II(0x10135e1f, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x10135e22, 0x2)   jnzd(0x10135e35, 0x11);               /* jnz 0x10135e35 */
    II(0x10135e24, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x10135e2a, 0x6)   inc(memd_a32(ss, ebp - 0xbc));        /* inc dword [ebp+0xffffff44] */
    II(0x10135e30, 0x3)   mov(memb_a32(ds, eax), 0x1f);         /* mov byte [eax], 0x1f */
    II(0x10135e33, 0x2)   jmpd(0x10135e5f, 0x2a);               /* jmp 0x10135e5f */
l_0x10135e35:
    II(0x10135e35, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10135e37, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0xd8)); /* movsx ebx, word [ebp+0xffffff28] */
    II(0x10135e3e, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xd4)); /* movsx edx, word [ebp+0xffffff2c] */
    II(0x10135e45, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xd0)); /* movsx eax, word [ebp+0xffffff30] */
    II(0x10135e4c, 0x5)   calld(0x10133a88, -0x23c9);           /* call 0x10133a88 */
    II(0x10135e51, 0x6)   mov(edx, memd_a32(ss, ebp - 0xbc));   /* mov edx, [ebp+0xffffff44] */
    II(0x10135e57, 0x6)   inc(memd_a32(ss, ebp - 0xbc));        /* inc dword [ebp+0xffffff44] */
    II(0x10135e5d, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
l_0x10135e5f:
    II(0x10135e5f, 0x5)   jmpd(0x10135d6b, -0xf9);              /* jmp 0x10135d6b */
l_0x10135e64:
    II(0x10135e64, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x3);   /* add dword [ebp-0x14], 0x3 */
    II(0x10135e68, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10135e6c, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x10135e6f, 0x5)   calld(0x101369e9, 0xb75);             /* call 0x101369e9 */
    II(0x10135e74, 0x5)   jmpd(0x10135d46, -0x133);             /* jmp 0x10135d46 */
l_0x10135e79:
    II(0x10135e79, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10135e7b, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x10135e7e, 0x5)   calld(0x10136942, 0xabf);             /* call 0x10136942 */
    II(0x10135e83, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10135e85, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10135e86, 0x1)   popd(edi);                            /* pop edi */
    II(0x10135e87, 0x1)   popd(esi);                            /* pop esi */
    II(0x10135e88, 0x1)   popd(edx);                            /* pop edx */
    II(0x10135e89, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10135e8a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10135e8b, 0x1)   retd();                               /* ret */
FUNC_END

