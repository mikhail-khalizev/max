FUNC_BEGIN(0x101185f1, 0xf4025c561edda1dc, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x57, 0xd7, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe5, 0xca, 0xf5, 0xff, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x14, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x16, 0x75, 0x26, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0x42, 0xb4, 0xf5, 0xff, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x21, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0x24, 0x23, 0xf7, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0xd, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0xc1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0xa, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x1b, 0x74, 0x5, 0xe9, 0xa5, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0x91, 0xdb, 0xf5, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0xe8, 0x21, 0xae, 0xf5, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x50, 0x19, 0x74, 0x34, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0xcc, 0x22, 0xf7, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0xd, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xb1, 0xe6, 0xf5, 0xff, 0x84, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xf4, 0xe8, 0x44, 0x6f, 0xfe, 0xff, 0xeb, 0x4d, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x88, 0xe6, 0xf5, 0xff, 0x84, 0xc0, 0x74, 0x2e, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x7e, 0xe3, 0xf5, 0xff, 0x8b, 0x8, 0x8b, 0x5d, 0xfc, 0xba, 0x1, 0, 0, 0, 0xb8, 0x63, 0x7c, 0x1a, 0x10, 0xe8, 0x1e, 0xd4, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101185f1, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x101185f6, 0x5)   calld(sys_check_available_stack_size, 0x4d757); /* call 0x10165d52 */
    II(0x101185fb, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101185fc, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101185fd, 0x1)   pushd(edx);                           /* push edx */
    II(0x101185fe, 0x1)   pushd(esi);                           /* push esi */
    II(0x101185ff, 0x1)   pushd(edi);                           /* push edi */
    II(0x10118600, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10118601, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10118603, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10118609, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1011860c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011860f, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10118612, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10118615, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10118618, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1011861b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011861e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10118621, 0x5)   calld(0x1007510b, -0xa351b);          /* call 0x1007510b */
    II(0x10118626, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10118629, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1011862d, 0x2)   jnzd(0x10118638, 0x9);                /* jnz 0x10118638 */
    II(0x1011862f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10118633, 0x5)   jmpd(0x1011874c, 0x114);              /* jmp 0x1011874c */
l_0x10118638:
    II(0x10118638, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011863b, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x16);   /* cmp word [eax+0x8], 0x16 */
    II(0x10118640, 0x2)   jnzd(0x10118668, 0x26);               /* jnz 0x10118668 */
    II(0x10118642, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10118645, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10118648, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1011864a, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1011864d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10118650, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x10118653, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10118656, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10118659, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1011865c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011865f, 0x5)   calld(0x10073aa6, -0xa4bbe);          /* call 0x10073aa6 */
    II(0x10118664, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10118666, 0x2)   jzd(0x1011866a, 0x2);                 /* jz 0x1011866a */
l_0x10118668:
    II(0x10118668, 0x2)   jmpd(0x1011868b, 0x21);               /* jmp 0x1011868b */
l_0x1011866a:
    II(0x1011866a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011866c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011866f, 0x5)   calld(0x1008a998, -0x8dcdc);          /* call 0x1008a998 */
    II(0x10118674, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10118677, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0xd);   /* mov byte [eax+0x3d], 0xd */
    II(0x1011867b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011867e, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0);     /* mov byte [eax+0x3e], 0x0 */
    II(0x10118682, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10118686, 0x5)   jmpd(0x1011874c, 0xc1);               /* jmp 0x1011874c */
l_0x1011868b:
    II(0x1011868b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011868e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xa);    /* cmp word [eax+0x8], 0xa */
    II(0x10118693, 0x2)   jnzd(0x1011869e, 0x9);                /* jnz 0x1011869e */
    II(0x10118695, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10118698, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x1011869c, 0x2)   jzd(0x101186a3, 0x5);                 /* jz 0x101186a3 */
l_0x1011869e:
    II(0x1011869e, 0x5)   jmpd(0x10118748, 0xa5);               /* jmp 0x10118748 */
l_0x101186a3:
    II(0x101186a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101186a6, 0x5)   calld(0x1007623c, -0xa246f);          /* call 0x1007623c */
    II(0x101186ab, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101186ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101186b1, 0x5)   calld(0x100734d7, -0xa51df);          /* call 0x100734d7 */
    II(0x101186b6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101186b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101186bb, 0x4)   cmp(dx, memw_a32(ds, eax + 0x19));    /* cmp dx, [eax+0x19] */
    II(0x101186bf, 0x2)   jzd(0x101186f5, 0x34);                /* jz 0x101186f5 */
    II(0x101186c1, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101186c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101186c7, 0x5)   calld(0x1008a998, -0x8dd34);          /* call 0x1008a998 */
    II(0x101186cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101186cf, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0xd);   /* mov byte [eax+0x3d], 0xd */
    II(0x101186d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101186d6, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0);     /* mov byte [eax+0x3e], 0x0 */
    II(0x101186da, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x101186df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101186e2, 0x5)   calld(0x10076d98, -0xa194f);          /* call 0x10076d98 */
    II(0x101186e7, 0x2)   test(al, al);                         /* test al, al */
    II(0x101186e9, 0x2)   jzd(0x101186f3, 0x8);                 /* jz 0x101186f3 */
    II(0x101186eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101186ee, 0x5)   calld(0x100ff637, -0x190bc);          /* call 0x100ff637 */
l_0x101186f3:
    II(0x101186f3, 0x2)   jmpd(0x10118742, 0x4d);               /* jmp 0x10118742 */
l_0x101186f5:
    II(0x101186f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101186f8, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x101186fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101186ff, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x10118703, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x10118708, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011870b, 0x5)   calld(0x10076d98, -0xa1978);          /* call 0x10076d98 */
    II(0x10118710, 0x2)   test(al, al);                         /* test al, al */
    II(0x10118712, 0x2)   jzd(0x10118742, 0x2e);                /* jz 0x10118742 */
    II(0x10118714, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10118717, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1011871a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011871d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10118720, 0x3)   mov(edx, memd_a32(ds, edx + 0x18));   /* mov edx, [edx+0x18] */
    II(0x10118723, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10118726, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10118729, 0x5)   calld(0x10076aac, -0xa1c82);          /* call 0x10076aac */
    II(0x1011872e, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x10118730, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x10118733, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10118738, 0x5)   mov(eax, 0x101a7c63);                 /* mov eax, 0x101a7c63 */ /* "Unable to move unit into holding area." */
    II(0x1011873d, 0x5)   calld(0x10115b60, -0x2be2);           /* call 0x10115b60 */
l_0x10118742:
    II(0x10118742, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10118746, 0x2)   jmpd(0x1011874c, 0x4);                /* jmp 0x1011874c */
l_0x10118748:
    II(0x10118748, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x1011874c:
    II(0x1011874c, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1011874f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10118751, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10118752, 0x1)   popd(edi);                            /* pop edi */
    II(0x10118753, 0x1)   popd(esi);                            /* pop esi */
    II(0x10118754, 0x1)   popd(edx);                            /* pop edx */
    II(0x10118755, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10118756, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10118757, 0x1)   retd();                               /* ret */
FUNC_END

