FUNC_BEGIN(0x1007cfc2, 0xaa7dc72d7c2d2d49, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x86, 0x8d, 0xe, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7e, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0x3a, 0x8b, 0x45, 0xf8, 0xe8, 0x32, 0x92, 0xff, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x23, 0x7e, 0x6, 0x83, 0x45, 0xec, 0x38, 0xeb, 0x21, 0x8b, 0x45, 0xf8, 0xe8, 0x19, 0x92, 0xff, 0xff, 0x8b, 0x50, 0xc, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x3, 0x1b, 0xc2, 0xc1, 0xf8, 0x3, 0xc1, 0xe0, 0x3, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x2c, 0x90, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x81, 0x45, 0xec, 0x80, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x4, 0x83, 0x45, 0xec, 0x8, 0x83, 0x7d, 0xf4, 0, 0xf, 0x84, 0xbf, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x29, 0xa8, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x3a, 0xbb, 0x19, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xca, 0xf6, 0xd, 0, 0xf, 0xbf, 0xd0, 0xbb, 0xd, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xec, 0x1, 0xc2, 0x89, 0x55, 0xec, 0x8b, 0x55, 0xf8, 0xf6, 0x42, 0x13, 0x2, 0x75, 0x4, 0x83, 0x45, 0xec, 0x40, 0xe9, 0x76, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x7c, 0xfc, 0xff, 0xff, 0x1, 0x45, 0xec, 0x8b, 0x45, 0xf4, 0x31, 0xc9, 0x8a, 0x48, 0x50, 0x31, 0xdb, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x34, 0x1, 0xe, 0, 0x98, 0xf, 0xaf, 0xc8, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x39, 0xc1, 0x7c, 0x40, 0x83, 0x45, 0xec, 0x40, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x3f, 0x74, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x28, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x3a, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x5, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x75, 0x4, 0x83, 0x45, 0xec, 0x38, 0xb8, 0xff, 0, 0, 0, 0x2b, 0x45, 0xec, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1007cfc2, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1007cfc7, 0x5)   calld(sys_check_available_stack_size, 0xe8d86); /* call 0x10165d52 */
    II(0x1007cfcc, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007cfcd, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007cfce, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007cfcf, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007cfd0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007cfd2, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1007cfd8, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1007cfdb, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1007cfde, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x1007cfe1, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1007cfe8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007cfeb, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x1007cfee, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007cff3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007cff5, 0x2)   jled(0x1007d000, 0x9);                /* jle 0x1007d000 */
    II(0x1007cff7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007cffa, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x1007cffe, 0x2)   jnzd(0x1007d002, 0x2);                /* jnz 0x1007d002 */
l_0x1007d000:
    II(0x1007d000, 0x2)   jmpd(0x1007d03c, 0x3a);               /* jmp 0x1007d03c */
l_0x1007d002:
    II(0x1007d002, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d005, 0x5)   calld(0x1007623c, -0x6dce);           /* call 0x1007623c */
    II(0x1007d00a, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x1007d00d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007d010, 0x3)   cmp(eax, 0x23);                       /* cmp eax, 0x23 */
    II(0x1007d013, 0x2)   jled(0x1007d01b, 0x6);                /* jle 0x1007d01b */
    II(0x1007d015, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x38);  /* add dword [ebp-0x14], 0x38 */
    II(0x1007d019, 0x2)   jmpd(0x1007d03c, 0x21);               /* jmp 0x1007d03c */
l_0x1007d01b:
    II(0x1007d01b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d01e, 0x5)   calld(0x1007623c, -0x6de7);           /* call 0x1007623c */
    II(0x1007d023, 0x3)   mov(edx, memd_a32(ds, eax + 0xc));    /* mov edx, [eax+0xc] */
    II(0x1007d026, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007d029, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007d02b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007d02e, 0x3)   shl(edx, 0x3);                        /* shl edx, 0x3 */
    II(0x1007d031, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x1007d033, 0x3)   sar(eax, 0x3);                        /* sar eax, 0x3 */
    II(0x1007d036, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x1007d039, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x1007d03c:
    II(0x1007d03c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1007d040, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d043, 0x5)   calld(0x10076074, -0x6fd4);           /* call 0x10076074 */
    II(0x1007d048, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007d04a, 0x2)   jzd(0x1007d053, 0x7);                 /* jz 0x1007d053 */
    II(0x1007d04c, 0x7)   add(memd_a32(ss, ebp - 0x14), 0x80);  /* add dword [ebp-0x14], 0x80 */
l_0x1007d053:
    II(0x1007d053, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d056, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1007d059, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007d05e, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1007d061, 0x2)   jnzd(0x1007d067, 0x4);                /* jnz 0x1007d067 */
    II(0x1007d063, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x8);   /* add dword [ebp-0x14], 0x8 */
l_0x1007d067:
    II(0x1007d067, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1007d06b, 0x6)   jzd(0x1007d130, 0xbf);                /* jz dword 0x1007d130 */
    II(0x1007d071, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007d074, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007d077, 0x5)   calld(0x100778a5, -0x57d7);           /* call 0x100778a5 */
    II(0x1007d07c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007d07e, 0x2)   jzd(0x1007d0ba, 0x3a);                /* jz 0x1007d0ba */
    II(0x1007d080, 0x5)   mov(ebx, 0x19);                       /* mov ebx, 0x19 */
    II(0x1007d085, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007d088, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007d08b, 0x5)   calld(0x1015c75a, 0xdf6ca);           /* call 0x1015c75a */
    II(0x1007d090, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007d093, 0x5)   mov(ebx, 0xd);                        /* mov ebx, 0xd */
    II(0x1007d098, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007d09a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007d09d, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1007d09f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1007d0a3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1007d0a5, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x1007d0a8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007d0ab, 0x4)   test(memb_a32(ds, edx + 0x13), 0x2);  /* test byte [edx+0x13], 0x2 */
    II(0x1007d0af, 0x2)   jnzd(0x1007d0b5, 0x4);                /* jnz 0x1007d0b5 */
    II(0x1007d0b1, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x40);  /* add dword [ebp-0x14], 0x40 */
l_0x1007d0b5:
    II(0x1007d0b5, 0x5)   jmpd(0x1007d130, 0x76);               /* jmp 0x1007d130 */
l_0x1007d0ba:
    II(0x1007d0ba, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007d0bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007d0c0, 0x5)   calld(0x1007cd41, -0x384);            /* call 0x1007cd41 */
    II(0x1007d0c5, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
    II(0x1007d0c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007d0cb, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1007d0cd, 0x3)   mov(cl, memb_a32(ds, eax + 0x50));    /* mov cl, [eax+0x50] */
    II(0x1007d0d0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1007d0d2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007d0d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007d0d8, 0x5)   calld(0x1015d211, 0xe0134);           /* call 0x1015d211 */
    II(0x1007d0dd, 0x1)   cwde();                               /* cwde */
    II(0x1007d0de, 0x3)   imul(ecx, eax);                       /* imul ecx, eax */
    II(0x1007d0e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d0e4, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x1007d0e7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007d0ec, 0x2)   cmp(ecx, eax);                        /* cmp ecx, eax */
    II(0x1007d0ee, 0x2)   jld(0x1007d130, 0x40);                /* jl 0x1007d130 */
    II(0x1007d0f0, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x40);  /* add dword [ebp-0x14], 0x40 */
    II(0x1007d0f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d0f7, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3f);   /* cmp word [eax+0x8], 0x3f */
    II(0x1007d0fc, 0x2)   jzd(0x1007d108, 0xa);                 /* jz 0x1007d108 */
    II(0x1007d0fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d101, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x1007d106, 0x2)   jnzd(0x1007d10a, 0x2);                /* jnz 0x1007d10a */
l_0x1007d108:
    II(0x1007d108, 0x2)   jmpd(0x1007d114, 0xa);                /* jmp 0x1007d114 */
l_0x1007d10a:
    II(0x1007d10a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d10d, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3a);   /* cmp word [eax+0x8], 0x3a */
    II(0x1007d112, 0x2)   jnzd(0x1007d116, 0x2);                /* jnz 0x1007d116 */
l_0x1007d114:
    II(0x1007d114, 0x2)   jmpd(0x1007d120, 0xa);                /* jmp 0x1007d120 */
l_0x1007d116:
    II(0x1007d116, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d119, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x5);    /* cmp word [eax+0x8], 0x5 */
    II(0x1007d11e, 0x2)   jnzd(0x1007d122, 0x2);                /* jnz 0x1007d122 */
l_0x1007d120:
    II(0x1007d120, 0x2)   jmpd(0x1007d12c, 0xa);                /* jmp 0x1007d12c */
l_0x1007d122:
    II(0x1007d122, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007d125, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x1007d12a, 0x2)   jnzd(0x1007d130, 0x4);                /* jnz 0x1007d130 */
l_0x1007d12c:
    II(0x1007d12c, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x38);  /* add dword [ebp-0x14], 0x38 */
l_0x1007d130:
    II(0x1007d130, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x1007d135, 0x3)   sub(eax, memd_a32(ss, ebp - 0x14));   /* sub eax, [ebp-0x14] */
    II(0x1007d138, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1007d13b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007d13e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007d140, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007d141, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007d142, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007d143, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007d144, 0x1)   retd();                               /* ret */
FUNC_END

