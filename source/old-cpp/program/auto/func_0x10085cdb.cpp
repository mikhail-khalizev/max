FUNC_BEGIN(0x10085cdb, 0x3e45bc2c12e30e5e, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x6d, 0, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x7, 0x40, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0xd9, 0x3e, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xc2, 0xf0, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x15, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0xa9, 0x8, 0xff, 0xff, 0xe8, 0x51, 0xcc, 0x1, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xc2, 0xe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x31, 0x50, 0xb, 0, 0x84, 0xc0, 0x74, 0x23, 0x8d, 0x45, 0xf4, 0xe8, 0x80, 0x3d, 0, 0, 0xe8, 0xcb, 0x5b, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x10, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xe1, 0x32, 0, 0, 0xeb, 0x4c, 0xeb, 0xc7, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2e, 0xe8, 0xfd, 0x4f, 0xb, 0, 0x84, 0xc0, 0x74, 0x1f, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2e, 0xe8, 0xed, 0x3b, 0, 0, 0xe8, 0xc5, 0x18, 0, 0, 0x88, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xaf, 0x32, 0, 0, 0xeb, 0x1a, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x9f, 0x32, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x93, 0x32, 0, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10085cdb, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10085ce0, 0x5)   calld(sys_check_available_stack_size, 0xe006d); /* call 0x10165d52 */
    II(0x10085ce5, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10085ce6, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10085ce7, 0x1)   pushd(edx);                           /* push edx */
    II(0x10085ce8, 0x1)   pushd(esi);                           /* push esi */
    II(0x10085ce9, 0x1)   pushd(edi);                           /* push edi */
    II(0x10085cea, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10085ceb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10085ced, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x10085cf3, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10085cf6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10085cf9, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10085cfc, 0x5)   calld(0x10089d08, 0x4007);            /* call 0x10089d08 */
    II(0x10085d01, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10085d03, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10085d06, 0x5)   calld(0x10089be4, 0x3ed9);            /* call 0x10089be4 */
    II(0x10085d0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10085d0e, 0x5)   calld(0x10084dd5, -0xf3e);            /* call 0x10084dd5 */
    II(0x10085d13, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10085d15, 0x2)   jzd(0x10085d2c, 0x15);                /* jz 0x10085d2c */
    II(0x10085d17, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10085d1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10085d1f, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10085d22, 0x5)   calld(0x100765d0, -0xf757);           /* call 0x100765d0 */
    II(0x10085d27, 0x5)   calld(0x100a297d, 0x1cc51);           /* call 0x100a297d */
l_0x10085d2c:
    II(0x10085d2c, 0x2)   jmpd(0x10085d36, 0x8);                /* jmp 0x10085d36 */
l_0x10085d2e:
    II(0x10085d2e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10085d31, 0x5)   calld(0x10076bf8, -0xf13e);           /* call 0x10076bf8 */
l_0x10085d36:
    II(0x10085d36, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085d38, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10085d3b, 0x5)   calld(0x1013ad71, 0xb5031);           /* call 0x1013ad71 */
    II(0x10085d40, 0x2)   test(al, al);                         /* test al, al */
    II(0x10085d42, 0x2)   jzd(0x10085d67, 0x23);                /* jz 0x10085d67 */
    II(0x10085d44, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10085d47, 0x5)   calld(0x10089acc, 0x3d80);            /* call 0x10089acc */
    II(0x10085d4c, 0x5)   calld(0x1007b91c, -0xa435);           /* call 0x1007b91c */
    II(0x10085d51, 0x2)   test(al, al);                         /* test al, al */
    II(0x10085d53, 0x2)   jzd(0x10085d65, 0x10);                /* jz 0x10085d65 */
    II(0x10085d55, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10085d59, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085d5b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10085d5e, 0x5)   calld(0x10089044, 0x32e1);            /* call 0x10089044 */
    II(0x10085d63, 0x2)   jmpd(0x10085db1, 0x4c);               /* jmp 0x10085db1 */
l_0x10085d65:
    II(0x10085d65, 0x2)   jmpd(0x10085d2e, -0x39);              /* jmp 0x10085d2e */
l_0x10085d67:
    II(0x10085d67, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085d69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10085d6c, 0x3)   add(eax, 0x2e);                       /* add eax, 0x2e */
    II(0x10085d6f, 0x5)   calld(0x1013ad71, 0xb4ffd);           /* call 0x1013ad71 */
    II(0x10085d74, 0x2)   test(al, al);                         /* test al, al */
    II(0x10085d76, 0x2)   jzd(0x10085d97, 0x1f);                /* jz 0x10085d97 */
    II(0x10085d78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10085d7b, 0x3)   add(eax, 0x2e);                       /* add eax, 0x2e */
    II(0x10085d7e, 0x5)   calld(0x10089970, 0x3bed);            /* call 0x10089970 */
    II(0x10085d83, 0x5)   calld(0x1008764d, 0x18c5);            /* call 0x1008764d */
    II(0x10085d88, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10085d8b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085d8d, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10085d90, 0x5)   calld(0x10089044, 0x32af);            /* call 0x10089044 */
    II(0x10085d95, 0x2)   jmpd(0x10085db1, 0x1a);               /* jmp 0x10085db1 */
l_0x10085d97:
    II(0x10085d97, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10085d9b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10085d9d, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10085da0, 0x5)   calld(0x10089044, 0x329f);            /* call 0x10089044 */
    II(0x10085da5, 0x2)   jmpd(0x10085db1, 0xa);                /* jmp 0x10085db1 */
//  II(0x10085da7, 0xa)   /* Недостижимый код. */
l_0x10085db1:
    II(0x10085db1, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10085db4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10085db6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10085db7, 0x1)   popd(edi);                            /* pop edi */
    II(0x10085db8, 0x1)   popd(esi);                            /* pop esi */
    II(0x10085db9, 0x1)   popd(edx);                            /* pop edx */
    II(0x10085dba, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10085dbb, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10085dbc, 0x1)   retd();                               /* ret */
FUNC_END

