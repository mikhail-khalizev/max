FUNC_BEGIN(my_dtor_d4, 0x4e1a768da39fdcb9, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xdb, 0xd8, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe8, 0xe8, 0x95, 0x60, 0xff, 0xff, 0xe8, 0xbc, 0xda, 0x8, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xa, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0xe8, 0x6b, 0x60, 0xff, 0xff, 0xe8, 0x92, 0xda, 0x8, 0, 0x89, 0x45, 0xf4, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d846d, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100d8472, 0x5)   calld(sys_check_available_stack_size, 0x8d8db); /* call 0x10165d52 */
    II(0x100d8477, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d8478, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d8479, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d847a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d847b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d847c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d847e, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100d8484, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d8487, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100d848a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d848d, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d8490, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100d8493, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100d8497, 0x2)   jzd(0x100d84ad, 0x14);                /* jz 0x100d84ad */
    II(0x100d8499, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d849b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d849e, 0x5)   calld(my_dtor_d2, -0x9f6b);           /* call 0x100ce538 */
    II(0x100d84a3, 0x5)   calld(sys_delete, 0x8dabc);           /* call 0x10165f64 */
    II(0x100d84a8, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d84ab, 0x2)   jmpd(0x100d84b4, 0x7);                /* jmp 0x100d84b4 */
l_0x100d84ad:
    II(0x100d84ad, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x100d84b4:
    II(0x100d84b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d84b7, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x100d84ba, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100d84bd, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100d84c1, 0x2)   jzd(0x100d84d7, 0x14);                /* jz 0x100d84d7 */
    II(0x100d84c3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d84c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d84c8, 0x5)   calld(my_dtor_d2, -0x9f95);           /* call 0x100ce538 */
    II(0x100d84cd, 0x5)   calld(sys_delete, 0x8da92);           /* call 0x10165f64 */
    II(0x100d84d2, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d84d5, 0x2)   jmpd(0x100d84de, 0x7);                /* jmp 0x100d84de */
l_0x100d84d7:
    II(0x100d84d7, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
l_0x100d84de:
    II(0x100d84de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d84e1, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100d84e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d84e7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d84e9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d84ea, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d84eb, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d84ec, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d84ed, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d84ee, 0x1)   retd();                               /* ret */
FUNC_END

