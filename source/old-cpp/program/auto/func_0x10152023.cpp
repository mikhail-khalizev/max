FUNC_BEGIN(0x10152023, 0x8c895f8ef784c6e7, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x25, 0x3d, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x70, 0xe8, 0xc0, 0x8c, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x1a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0xb, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x48, 0x52, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x4b, 0x8d, 0x45, 0xe8, 0xe8, 0x3a, 0, 0xf2, 0xff, 0x8d, 0x45, 0xdc, 0xe8, 0x32, 0, 0xf2, 0xff, 0x8d, 0x5d, 0xdc, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x70, 0xe8, 0x84, 0x32, 0, 0, 0xe8, 0x81, 0x15, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xea, 0x85, 0xc0, 0x7e, 0x1d, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xc9, 0x31, 0xdb, 0xba, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x70, 0xe8, 0x5f, 0x32, 0, 0, 0xe8, 0xe2, 0x59, 0xf8, 0xff, 0x80, 0x7d, 0xf4, 0, 0x74, 0x3c, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xcb, 0x4c, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x17, 0xb9, 0x1, 0, 0, 0, 0xbb, 0xf, 0, 0, 0, 0x8b, 0x55, 0xf8, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xd8, 0xb4, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0x3d, 0x46, 0xf2, 0xff, 0x8a, 0x50, 0x1b, 0x8b, 0x45, 0xfc, 0x88, 0x50, 0x54, 0x8b, 0x45, 0xf8, 0xe8, 0x87, 0xcf, 0xff, 0xff, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x87, 0x4c, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x30, 0xe8, 0xfa, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10152023, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x10152028, 0x5)   calld(sys_check_available_stack_size, 0x13d25); /* call 0x10165d52 */
    II(0x1015202d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015202e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015202f, 0x1)   pushd(esi);                           /* push esi */
    II(0x10152030, 0x1)   pushd(edi);                           /* push edi */
    II(0x10152031, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10152032, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10152034, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1015203a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1015203d, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10152040, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x10152044, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10152046, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10152049, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1015204c, 0x5)   calld(0x1013ad11, -0x17340);          /* call 0x1013ad11 */
    II(0x10152051, 0x2)   test(al, al);                         /* test al, al */
    II(0x10152053, 0x2)   jzd(0x1015206f, 0x1a);                /* jz 0x1015206f */
    II(0x10152055, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10152058, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x1015205b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015205e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10152060, 0x2)   jled(0x1015206d, 0xb);                /* jle 0x1015206d */
    II(0x10152062, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10152065, 0x4)   dec(memw_a32(ds, eax + 0x52));        /* dec word [eax+0x52] */
    II(0x10152069, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x1015206d:
    II(0x1015206d, 0x2)   jmpd(0x101520ba, 0x4b);               /* jmp 0x101520ba */
l_0x1015206f:
    II(0x1015206f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10152072, 0x5)   calld(0x100720b1, -0xdffc6);          /* call 0x100720b1 */
    II(0x10152077, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1015207a, 0x5)   calld(0x100720b1, -0xdffce);          /* call 0x100720b1 */
    II(0x1015207f, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x10152082, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10152085, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10152088, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x1015208b, 0x5)   calld(0x10155314, 0x3284);            /* call 0x10155314 */
    II(0x10152090, 0x5)   calld(0x10143616, -0xea7f);           /* call 0x10143616 */
    II(0x10152095, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x16)); /* movsx eax, word [ebp-0x16] */
    II(0x10152099, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015209b, 0x2)   jled(0x101520ba, 0x1d);               /* jle 0x101520ba */
    II(0x1015209d, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x101520a1, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101520a3, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101520a5, 0x5)   mov(edx, 0xffffffff);                 /* mov edx, 0xffffffff */
    II(0x101520aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101520ad, 0x3)   add(eax, 0x70);                       /* add eax, 0x70 */
    II(0x101520b0, 0x5)   calld(0x10155314, 0x325f);            /* call 0x10155314 */
    II(0x101520b5, 0x5)   calld(0x100d7a9c, -0x7a61e);          /* call 0x100d7a9c */
l_0x101520ba:
    II(0x101520ba, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x101520be, 0x2)   jzd(0x101520fc, 0x3c);                /* jz 0x101520fc */
    II(0x101520c0, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x101520c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101520c8, 0x5)   calld(0x10076d98, -0xdb335);          /* call 0x10076d98 */
    II(0x101520cd, 0x2)   test(al, al);                         /* test al, al */
    II(0x101520cf, 0x2)   jzd(0x101520e8, 0x17);                /* jz 0x101520e8 */
    II(0x101520d1, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x101520d6, 0x5)   mov(ebx, 0xf);                        /* mov ebx, 0xf */
    II(0x101520db, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101520de, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x101520e3, 0x5)   calld(0x1013d5c0, -0x14b28);          /* call 0x1013d5c0 */
l_0x101520e8:
    II(0x101520e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101520eb, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x101520ee, 0x5)   calld(0x10076730, -0xdb9c3);          /* call 0x10076730 */
    II(0x101520f3, 0x3)   mov(dl, memb_a32(ds, eax + 0x1b));    /* mov dl, [eax+0x1b] */
    II(0x101520f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101520f9, 0x3)   mov(memb_a32(ds, eax + 0x54), dl);    /* mov [eax+0x54], dl */
l_0x101520fc:
    II(0x101520fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101520ff, 0x5)   calld(0x1014f08b, -0x3079);           /* call 0x1014f08b */
    II(0x10152104, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x10152109, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015210c, 0x5)   calld(0x10076d98, -0xdb379);          /* call 0x10076d98 */
    II(0x10152111, 0x2)   test(al, al);                         /* test al, al */
    II(0x10152113, 0x2)   jzd(0x1015211d, 0x8);                 /* jz 0x1015211d */
    II(0x10152115, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10152118, 0x5)   calld(0x1010094d, -0x517d0);          /* call 0x1010094d */
l_0x1015211d:
    II(0x1015211d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015211f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10152120, 0x1)   popd(edi);                            /* pop edi */
    II(0x10152121, 0x1)   popd(esi);                            /* pop esi */
    II(0x10152122, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10152123, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10152124, 0x1)   retd();                               /* ret */
FUNC_END

