FUNC_BEGIN(0x100c83dd, 0x479a1ac6bc0bac72, 0x20, ({0x68, 0x80, 0, 0, 0, 0xe8, 0x6b, 0xd9, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x60, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x69, 0xff, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x35, 0x3, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0xd9, 0x37, 0xfc, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf8, 0xfe, 0x8d, 0x7d, 0xdc, 0x8b, 0x75, 0xfc, 0x8d, 0x76, 0xb, 0xa5, 0xa5, 0xa5, 0xa5, 0x8d, 0x45, 0xd8, 0xe8, 0xc0, 0xe6, 0xfa, 0xff, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xc8, 0xe8, 0x2c, 0x1c, 0, 0, 0x89, 0x45, 0xc4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x55, 0xdc, 0x83, 0xea, 0x6, 0x31, 0xc0, 0xe8, 0x2c, 0xea, 0xfa, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x55, 0xe0, 0x83, 0xea, 0x6, 0x31, 0xc0, 0xe8, 0x1c, 0xea, 0xfa, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x55, 0xe4, 0x83, 0xc2, 0x6, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xe, 0x13, 0xfc, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x55, 0xe8, 0x83, 0xc2, 0x6, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xf8, 0x12, 0xfc, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xdc, 0x66, 0x89, 0x45, 0xd8, 0xeb, 0x7, 0x8b, 0x45, 0xd8, 0x66, 0xff, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x3b, 0x45, 0xe4, 0xf, 0x8d, 0x81, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x66, 0x89, 0x45, 0xda, 0xeb, 0x7, 0x8b, 0x45, 0xda, 0x66, 0xff, 0x45, 0xda, 0xf, 0xbf, 0x45, 0xda, 0x3b, 0x45, 0xe8, 0x7d, 0x63, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x31, 0xd2, 0x8a, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x5, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x17, 0xf, 0xbf, 0x5d, 0xda, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xf0, 0xe8, 0x29, 0x22, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0x7f, 0xeb, 0x20, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xc8, 0xe8, 0x53, 0x25, 0xfe, 0xff, 0xf, 0xbf, 0x5d, 0xda, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xf0, 0xe8, 0x7, 0x22, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0, 0xeb, 0x8d, 0xe9, 0x6b, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc0, 0xe8, 0xbb, 0xe5, 0xfa, 0xff, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0xf5, 0x2b, 0xfc, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x25, 0x2f, 0xfc, 0xff, 0x98, 0x85, 0xc0, 0xf, 0x8e, 0xbe, 0x1, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0x14, 0x2f, 0xfc, 0xff, 0x48, 0x89, 0x45, 0xac, 0xf, 0xbf, 0x55, 0xac, 0x8d, 0x45, 0xc8, 0xe8, 0xac, 0x24, 0xfe, 0xff, 0x8d, 0x5d, 0xd8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xbc, 0x5, 0xfc, 0xff, 0xf, 0xbf, 0x55, 0xac, 0x8d, 0x45, 0xc8, 0xe8, 0x80, 0x55, 0, 0, 0xf, 0xbf, 0x5d, 0xda, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xf0, 0xe8, 0x84, 0x21, 0xfc, 0xff, 0x1, 0xd8, 0x8a, 0, 0xc, 0x1, 0x30, 0xe4, 0x66, 0x89, 0x45, 0xa8, 0xf, 0xbf, 0x5d, 0xda, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xf0, 0xe8, 0x68, 0x21, 0xfc, 0xff, 0x8d, 0x14, 0x18, 0x8a, 0x45, 0xa8, 0x88, 0x2, 0xc7, 0x45, 0xa4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xa4, 0xff, 0x45, 0xa4, 0xf, 0xbf, 0x45, 0xa4, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0x39, 0x1, 0, 0, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xc0, 0xe8, 0x55, 0x5, 0xfc, 0xff, 0xf, 0xbf, 0x45, 0xa4, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xc0, 0xe8, 0x9f, 0x2b, 0xfc, 0xff, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0xb0, 0xe8, 0xbe, 0xfc, 0x3, 0, 0x84, 0xc0, 0xf, 0x84, 0, 0x1, 0, 0, 0x66, 0xf7, 0x45, 0xa4, 0x1, 0, 0x74, 0xd, 0x8b, 0x45, 0xa8, 0x5, 0x6, 0, 0, 0, 0x89, 0x45, 0xa0, 0xeb, 0xb, 0x8b, 0x45, 0xa8, 0x5, 0x4, 0, 0, 0, 0x89, 0x45, 0xa0, 0xf, 0xbf, 0x45, 0xa0, 0x83, 0xf8, 0x18, 0x7f, 0x21, 0xf, 0xbf, 0x5d, 0xc2, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x45, 0xf0, 0xe8, 0xd7, 0x20, 0xfc, 0xff, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xa0, 0x39, 0xc2, 0x7c, 0x5, 0xe9, 0xb1, 0, 0, 0, 0xf, 0xbf, 0x55, 0xc0, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc2, 0x8b, 0, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x7c, 0x2a, 0xf, 0xbf, 0x45, 0xc0, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xc2, 0x8b, 0, 0x1, 0xd0, 0x31, 0xd2, 0x8a, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x5, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x16, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0, 0x1d, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xd5, 0x35, 0xfc, 0xff, 0xeb, 0x71, 0x81, 0x65, 0xa0, 0xfe, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xc2, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x45, 0xf0, 0xe8, 0x45, 0x20, 0xfc, 0xff, 0x1, 0xd8, 0xf6, 0, 0x1, 0x74, 0x9, 0xf, 0xbf, 0x45, 0xa0, 0x83, 0xf8, 0x14, 0x7e, 0x2, 0xeb, 0xb, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0xc8, 0xe8, 0x64, 0x23, 0xfe, 0xff, 0xf, 0xbf, 0x5d, 0xc2, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x45, 0xf0, 0xe8, 0x18, 0x20, 0xfc, 0xff, 0x8d, 0x14, 0x18, 0x8a, 0x45, 0xa0, 0x88, 0x2, 0xe9, 0xb4, 0xfe, 0xff, 0xff, 0xe9, 0x31, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x6, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x8d, 0x1c, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x62, 0x35, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100c83dd, 0x5)   pushd(0x80);                          /* push dword 0x80 */
    II(0x100c83e2, 0x5)   calld(sys_check_available_stack_size, 0x9d96b); /* call 0x10165d52 */
    II(0x100c83e7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100c83e8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c83e9, 0x1)   pushd(edx);                           /* push edx */
    II(0x100c83ea, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c83eb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c83ec, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c83ed, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c83ef, 0x6)   sub(esp, 0x60);                       /* sub esp, 0x60 */
    II(0x100c83f5, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100c83f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c83fb, 0x5)   calld(0x100c8369, -0x97);             /* call 0x100c8369 */
    II(0x100c8400, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c8402, 0x6)   jzd(0x100c873d, 0x335);               /* jz dword 0x100c873d */
    II(0x100c8408, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100c840c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c840f, 0x5)   calld(0x1008bbed, -0x3c827);          /* call 0x1008bbed */
    II(0x100c8414, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c8417, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100c841b, 0x3)   lea(edi, ebp - 0x24);                 /* lea edi, [ebp-0x24] */
    II(0x100c841e, 0x3)   mov(esi, memd_a32(ss, ebp - 0x4));    /* mov esi, [ebp-0x4] */
    II(0x100c8421, 0x3)   lea(esi, esi + 0xb);                  /* lea esi, [esi+0xb] */
    II(0x100c8424, 0x1)   movsd_a32();                          /* movsd */
    II(0x100c8425, 0x1)   movsd_a32();                          /* movsd */
    II(0x100c8426, 0x1)   movsd_a32();                          /* movsd */
    II(0x100c8427, 0x1)   movsd_a32();                          /* movsd */
    II(0x100c8428, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100c842b, 0x5)   calld(my_ctor_0x101b4184, -0x51940);  /* call 0x10076af0 */
    II(0x100c8430, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100c8434, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c8437, 0x5)   calld(0x100ca068, 0x1c2c);            /* call 0x100ca068 */
    II(0x100c843c, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100c843f, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100c8443, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100c8446, 0x3)   sub(edx, 0x6);                        /* sub edx, 0x6 */
    II(0x100c8449, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c844b, 0x5)   calld(0x10076e7c, -0x515d4);          /* call 0x10076e7c */
    II(0x100c8450, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100c8453, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x100c8456, 0x3)   sub(edx, 0x6);                        /* sub edx, 0x6 */
    II(0x100c8459, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c845b, 0x5)   calld(0x10076e7c, -0x515e4);          /* call 0x10076e7c */
    II(0x100c8460, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100c8463, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1c));   /* mov edx, [ebp-0x1c] */
    II(0x100c8466, 0x3)   add(edx, 0x6);                        /* add edx, 0x6 */
    II(0x100c8469, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100c846e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c8471, 0x5)   calld(my_min, -0x3ecf2);              /* call 0x10089784 */
    II(0x100c8476, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100c8479, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x100c847c, 0x3)   add(edx, 0x6);                        /* add edx, 0x6 */
    II(0x100c847f, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100c8484, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c8487, 0x5)   calld(my_min, -0x3ed08);              /* call 0x10089784 */
    II(0x100c848c, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100c848f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100c8492, 0x4)   mov(memw_a32(ss, ebp - 0x28), ax);    /* mov [ebp-0x28], ax */
    II(0x100c8496, 0x2)   jmpd(0x100c849f, 0x7);                /* jmp 0x100c849f */
l_0x100c8498:
    II(0x100c8498, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100c849b, 0x4)   inc(memw_a32(ss, ebp - 0x28));        /* inc word [ebp-0x28] */
l_0x100c849f:
    II(0x100c849f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c84a3, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x1c));   /* cmp eax, [ebp-0x1c] */
    II(0x100c84a6, 0x6)   jged(0x100c852d, 0x81);               /* jge dword 0x100c852d */
    II(0x100c84ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100c84af, 0x4)   mov(memw_a32(ss, ebp - 0x26), ax);    /* mov [ebp-0x26], ax */
    II(0x100c84b3, 0x2)   jmpd(0x100c84bc, 0x7);                /* jmp 0x100c84bc */
l_0x100c84b5:
    II(0x100c84b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x26));   /* mov eax, [ebp-0x26] */
    II(0x100c84b8, 0x4)   inc(memw_a32(ss, ebp - 0x26));        /* inc word [ebp-0x26] */
l_0x100c84bc:
    II(0x100c84bc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x26)); /* movsx eax, word [ebp-0x26] */
    II(0x100c84c0, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x18));   /* cmp eax, [ebp-0x18] */
    II(0x100c84c3, 0x2)   jged(0x100c8528, 0x63);               /* jge 0x100c8528 */
    II(0x100c84c5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100c84c9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c84cc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c84ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c84d1, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x100c84d4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c84d6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100c84da, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c84dc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c84de, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c84e0, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x100c84e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c84e5, 0x3)   mov(eax, memd_a32(ds, eax + 0x5));    /* mov eax, [eax+0x5] */
    II(0x100c84e8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c84eb, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c84ed, 0x2)   jzd(0x100c8506, 0x17);                /* jz 0x100c8506 */
    II(0x100c84ef, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x26)); /* movsx ebx, word [ebp-0x26] */
    II(0x100c84f3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c84f7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c84fa, 0x5)   calld(0x1008a728, -0x3ddd7);          /* call 0x1008a728 */
    II(0x100c84ff, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c8501, 0x3)   mov(memb_a32(ds, eax), 0x7f);         /* mov byte [eax], 0x7f */
    II(0x100c8504, 0x2)   jmpd(0x100c8526, 0x20);               /* jmp 0x100c8526 */
l_0x100c8506:
    II(0x100c8506, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100c8509, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c850c, 0x5)   calld(0x100aaa64, -0x1daad);          /* call 0x100aaa64 */
    II(0x100c8511, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x26)); /* movsx ebx, word [ebp-0x26] */
    II(0x100c8515, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c8519, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c851c, 0x5)   calld(0x1008a728, -0x3ddf9);          /* call 0x1008a728 */
    II(0x100c8521, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c8523, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100c8526:
    II(0x100c8526, 0x2)   jmpd(0x100c84b5, -0x73);              /* jmp 0x100c84b5 */
l_0x100c8528:
    II(0x100c8528, 0x5)   jmpd(0x100c8498, -0x95);              /* jmp 0x100c8498 */
l_0x100c852d:
    II(0x100c852d, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100c8530, 0x5)   calld(my_ctor_0x101b4184, -0x51a45);  /* call 0x10076af0 */
    II(0x100c8535, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100c853a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c853d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c853e, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100c8544, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100c8547, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c8549, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c854b, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100c854e, 0x5)   calld(0x1008b148, -0x3d40b);          /* call 0x1008b148 */
l_0x100c8553:
    II(0x100c8553, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c8556, 0x5)   calld(my_3_get_count, -0x3d0db);      /* call 0x1008b480 */
    II(0x100c855b, 0x1)   cwde();                               /* cwde */
    II(0x100c855c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c855e, 0x6)   jled(0x100c8722, 0x1be);              /* jle dword 0x100c8722 */
    II(0x100c8564, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c8567, 0x5)   calld(my_3_get_count, -0x3d0ec);      /* call 0x1008b480 */
    II(0x100c856c, 0x1)   dec(eax);                             /* dec eax */
    II(0x100c856d, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100c8570, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x54)); /* movsx edx, word [ebp-0x54] */
    II(0x100c8574, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c8577, 0x5)   calld(0x100aaa28, -0x1db54);          /* call 0x100aaa28 */
    II(0x100c857c, 0x3)   lea(ebx, ebp - 0x28);                 /* lea ebx, [ebp-0x28] */
    II(0x100c857f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c8581, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c8583, 0x5)   calld(0x10088b44, -0x3fa44);          /* call 0x10088b44 */
    II(0x100c8588, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x54)); /* movsx edx, word [ebp-0x54] */
    II(0x100c858c, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c858f, 0x5)   calld(0x100cdb14, 0x5580);            /* call 0x100cdb14 */
    II(0x100c8594, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x26)); /* movsx ebx, word [ebp-0x26] */
    II(0x100c8598, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c859c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c859f, 0x5)   calld(0x1008a728, -0x3de7c);          /* call 0x1008a728 */
    II(0x100c85a4, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c85a6, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100c85a8, 0x2)   or_(al, 0x1);                         /* or al, 0x1 */
    II(0x100c85aa, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100c85ac, 0x4)   mov(memw_a32(ss, ebp - 0x58), ax);    /* mov [ebp-0x58], ax */
    II(0x100c85b0, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x26)); /* movsx ebx, word [ebp-0x26] */
    II(0x100c85b4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c85b8, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c85bb, 0x5)   calld(0x1008a728, -0x3de98);          /* call 0x1008a728 */
    II(0x100c85c0, 0x3)   lea(edx, eax + ebx);                  /* lea edx, [eax+ebx] */
    II(0x100c85c3, 0x3)   mov(al, memb_a32(ss, ebp - 0x58));    /* mov al, [ebp-0x58] */
    II(0x100c85c6, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x100c85c8, 0x7)   mov(memd_a32(ss, ebp - 0x5c), 0);     /* mov dword [ebp-0x5c], 0x0 */
    II(0x100c85cf, 0x2)   jmpd(0x100c85d7, 0x6);                /* jmp 0x100c85d7 */
l_0x100c85d1:
    II(0x100c85d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100c85d4, 0x3)   inc(memd_a32(ss, ebp - 0x5c));        /* inc dword [ebp-0x5c] */
l_0x100c85d7:
    II(0x100c85d7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x100c85db, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100c85de, 0x6)   jged(0x100c871d, 0x139);              /* jge dword 0x100c871d */
    II(0x100c85e4, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100c85e7, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100c85ea, 0x5)   calld(0x10088b44, -0x3faab);          /* call 0x10088b44 */
    II(0x100c85ef, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x100c85f3, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c85f6, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x100c85fb, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c85fd, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100c8600, 0x5)   calld(0x1008b1a4, -0x3d461);          /* call 0x1008b1a4 */
    II(0x100c8605, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x100c8608, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100c860b, 0x5)   calld(0x101082ce, 0x3fcbe);           /* call 0x101082ce */
    II(0x100c8610, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c8612, 0x6)   jzd(0x100c8718, 0x100);               /* jz dword 0x100c8718 */
    II(0x100c8618, 0x6)   test(memw_a32(ss, ebp - 0x5c), 0x1);  /* test word [ebp-0x5c], 0x1 */
    II(0x100c861e, 0x2)   jzd(0x100c862d, 0xd);                 /* jz 0x100c862d */
    II(0x100c8620, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100c8623, 0x5)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100c8628, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100c862b, 0x2)   jmpd(0x100c8638, 0xb);                /* jmp 0x100c8638 */
l_0x100c862d:
    II(0x100c862d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100c8630, 0x5)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100c8635, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
l_0x100c8638:
    II(0x100c8638, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x60)); /* movsx eax, word [ebp-0x60] */
    II(0x100c863c, 0x3)   cmp(eax, 0x18);                       /* cmp eax, 0x18 */
    II(0x100c863f, 0x2)   jgd(0x100c8662, 0x21);                /* jg 0x100c8662 */
    II(0x100c8641, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x3e)); /* movsx ebx, word [ebp-0x3e] */
    II(0x100c8645, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100c8649, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c864c, 0x5)   calld(0x1008a728, -0x3df29);          /* call 0x1008a728 */
    II(0x100c8651, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c8653, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100c8655, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c865a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x100c865e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c8660, 0x2)   jld(0x100c8667, 0x5);                 /* jl 0x100c8667 */
l_0x100c8662:
    II(0x100c8662, 0x5)   jmpd(0x100c8718, 0xb1);               /* jmp 0x100c8718 */
l_0x100c8667:
    II(0x100c8667, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100c866b, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c866e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c8671, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x100c8674, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c8676, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3e)); /* movsx edx, word [ebp-0x3e] */
    II(0x100c867a, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c867c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c867e, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100c8680, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c8685, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100c8688, 0x2)   jld(0x100c86b4, 0x2a);                /* jl 0x100c86b4 */
    II(0x100c868a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x40)); /* movsx eax, word [ebp-0x40] */
    II(0x100c868e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c8691, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c8693, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c8696, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x100c8699, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c869b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3e)); /* movsx edx, word [ebp-0x3e] */
    II(0x100c869f, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c86a1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c86a3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c86a5, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x100c86a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c86aa, 0x3)   mov(eax, memd_a32(ds, eax + 0x5));    /* mov eax, [eax+0x5] */
    II(0x100c86ad, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c86b0, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c86b2, 0x2)   jnzd(0x100c86b6, 0x2);                /* jnz 0x100c86b6 */
l_0x100c86b4:
    II(0x100c86b4, 0x2)   jmpd(0x100c86cc, 0x16);               /* jmp 0x100c86cc */
l_0x100c86b6:
    II(0x100c86b6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c86b8, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c86bb, 0x5)   calld(0x100aa3c0, -0x1e300);          /* call 0x100aa3c0 */
    II(0x100c86c0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c86c2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c86c5, 0x5)   calld(0x1008bc9f, -0x3ca2b);          /* call 0x1008bc9f */
    II(0x100c86ca, 0x2)   jmpd(0x100c873d, 0x71);               /* jmp 0x100c873d */
l_0x100c86cc:
    II(0x100c86cc, 0x7)   and_(memd_a32(ss, ebp - 0x60), 0xfe); /* and dword [ebp-0x60], 0xfe */
    II(0x100c86d3, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x3e)); /* movsx ebx, word [ebp-0x3e] */
    II(0x100c86d7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100c86db, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c86de, 0x5)   calld(0x1008a728, -0x3dfbb);          /* call 0x1008a728 */
    II(0x100c86e3, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c86e5, 0x3)   test(memb_a32(ds, eax), 0x1);         /* test byte [eax], 0x1 */
    II(0x100c86e8, 0x2)   jzd(0x100c86f3, 0x9);                 /* jz 0x100c86f3 */
    II(0x100c86ea, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x60)); /* movsx eax, word [ebp-0x60] */
    II(0x100c86ee, 0x3)   cmp(eax, 0x14);                       /* cmp eax, 0x14 */
    II(0x100c86f1, 0x2)   jled(0x100c86f5, 0x2);                /* jle 0x100c86f5 */
l_0x100c86f3:
    II(0x100c86f3, 0x2)   jmpd(0x100c8700, 0xb);                /* jmp 0x100c8700 */
l_0x100c86f5:
    II(0x100c86f5, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x100c86f8, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c86fb, 0x5)   calld(0x100aaa64, -0x1dc9c);          /* call 0x100aaa64 */
l_0x100c8700:
    II(0x100c8700, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x3e)); /* movsx ebx, word [ebp-0x3e] */
    II(0x100c8704, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100c8708, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c870b, 0x5)   calld(0x1008a728, -0x3dfe8);          /* call 0x1008a728 */
    II(0x100c8710, 0x3)   lea(edx, eax + ebx);                  /* lea edx, [eax+ebx] */
    II(0x100c8713, 0x3)   mov(al, memb_a32(ss, ebp - 0x60));    /* mov al, [ebp-0x60] */
    II(0x100c8716, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
l_0x100c8718:
    II(0x100c8718, 0x5)   jmpd(0x100c85d1, -0x14c);             /* jmp 0x100c85d1 */
l_0x100c871d:
    II(0x100c871d, 0x5)   jmpd(0x100c8553, -0x1cf);             /* jmp 0x100c8553 */
l_0x100c8722:
    II(0x100c8722, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c8725, 0x4)   mov(memb_a32(ds, eax + 0x6), 0x1);    /* mov byte [eax+0x6], 0x1 */
    II(0x100c8729, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c872b, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c872e, 0x5)   calld(0x100aa3c0, -0x1e373);          /* call 0x100aa3c0 */
    II(0x100c8733, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c8735, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c8738, 0x5)   calld(0x1008bc9f, -0x3ca9e);          /* call 0x1008bc9f */
l_0x100c873d:
    II(0x100c873d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c873f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c8740, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c8741, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c8742, 0x1)   popd(edx);                            /* pop edx */
    II(0x100c8743, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c8744, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100c8745, 0x1)   retd();                               /* ret */
FUNC_END

