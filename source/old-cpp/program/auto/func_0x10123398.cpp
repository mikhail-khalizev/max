FUNC_BEGIN(0x10123398, 0xfb78fd545044898c, 0x20, ({0x68, 0x18, 0, 0, 0, 0xe8, 0xb0, 0x29, 0x4, 0, 0x53, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x8b, 0x45, 0x14, 0xc6, 0x40, 0x4, 0, 0xf, 0xbf, 0x45, 0x18, 0xe8, 0x80, 0xf, 0x1, 0, 0x89, 0xc2, 0x8b, 0x45, 0x14, 0x89, 0x90, 0x88, 0, 0, 0, 0x8b, 0x45, 0x14, 0x8b, 0x90, 0x88, 0, 0, 0, 0x8b, 0x45, 0x14, 0x89, 0x90, 0x8c, 0, 0, 0, 0xf, 0xbf, 0x45, 0x18, 0xe8, 0x7, 0xe, 0x1, 0, 0x89, 0xc2, 0x8b, 0x45, 0x14, 0x89, 0x90, 0x84, 0, 0, 0, 0x8b, 0x45, 0x14, 0x83, 0xb8, 0x84, 0, 0, 0, 0, 0x75, 0x9, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xeb, 0x61, 0x8b, 0x45, 0x14, 0x8b, 0x90, 0x84, 0, 0, 0, 0x8b, 0x45, 0x14, 0x89, 0x90, 0x90, 0, 0, 0, 0x8b, 0x45, 0x14, 0xc7, 0x80, 0x94, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0x14, 0xc7, 0x80, 0xa0, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0x14, 0xc7, 0x80, 0xa4, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0x14, 0xc7, 0x80, 0x9c, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0x14, 0xc7, 0x80, 0xa8, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0x14, 0x80, 0x60, 0x1, 0x7f, 0xc7, 0x45, 0xfc, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5b, 0xc3}))
    II(0x10123398, 0x5)   pushd(0x18);                          /* push dword 0x18 */
    II(0x1012339d, 0x5)   calld(sys_check_available_stack_size, 0x429b0); /* call 0x10165d52 */
    II(0x101233a2, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101233a3, 0x1)   pushd(esi);                           /* push esi */
    II(0x101233a4, 0x1)   pushd(edi);                           /* push edi */
    II(0x101233a5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101233a6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101233a8, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x101233ae, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101233b1, 0x4)   mov(memb_a32(ds, eax + 0x4), 0);      /* mov byte [eax+0x4], 0x0 */
    II(0x101233b5, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x101233b9, 0x5)   calld(0x1013433e, 0x10f80);           /* call 0x1013433e */
    II(0x101233be, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101233c0, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101233c3, 0x6)   mov(memd_a32(ds, eax + 0x88), edx);   /* mov [eax+0x88], edx */
    II(0x101233c9, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101233cc, 0x6)   mov(edx, memd_a32(ds, eax + 0x88));   /* mov edx, [eax+0x88] */
//    II(0x101233d2, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101233d5, 0x6)   mov(memd_a32(ds, eax + 0x8c), edx);   /* mov [eax+0x8c], edx */
    II(0x101233db, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x101233df, 0x5)   calld(my_get_res_data_by_id_malloc, 0x10e07); /* call 0x101341eb */
    II(0x101233e4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101233e6, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101233e9, 0x6)   mov(memd_a32(ds, eax + 0x84), edx);   /* mov [eax+0x84], edx */
    II(0x101233ef, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x101233f2, 0x7)   cmp(memd_a32(ds, eax + 0x84), 0);     /* cmp dword [eax+0x84], 0x0 */
    II(0x101233f9, 0x2)   jnzd(0x10123404, 0x9);                /* jnz 0x10123404 */
    II(0x101233fb, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
    II(0x10123402, 0x2)   jmpd(0x10123465, 0x61);               /* jmp 0x10123465 */
l_0x10123404:
    II(0x10123404, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10123407, 0x6)   mov(edx, memd_a32(ds, eax + 0x84));   /* mov edx, [eax+0x84] */
//    II(0x1012340d, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10123410, 0x6)   mov(memd_a32(ds, eax + 0x90), edx);   /* mov [eax+0x90], edx */
    II(0x10123416, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10123419, 0xa)   mov(memd_a32(ds, eax + 0x94), 0);     /* mov dword [eax+0x94], 0x0 */
    II(0x10123423, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10123426, 0xa)   mov(memd_a32(ds, eax + 0xa0), 0);     /* mov dword [eax+0xa0], 0x0 */
    II(0x10123430, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10123433, 0xa)   mov(memd_a32(ds, eax + 0xa4), 0);     /* mov dword [eax+0xa4], 0x0 */
    II(0x1012343d, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10123440, 0xa)   mov(memd_a32(ds, eax + 0x9c), 0);     /* mov dword [eax+0x9c], 0x0 */
    II(0x1012344a, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1012344d, 0xa)   mov(memd_a32(ds, eax + 0xa8), 0);     /* mov dword [eax+0xa8], 0x0 */
    II(0x10123457, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1012345a, 0x4)   and_(memb_a32(ds, eax + 0x1), 0x7f);  /* and byte [eax+0x1], 0x7f */
    II(0x1012345e, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x1);    /* mov dword [ebp-0x4], 0x1 */
l_0x10123465:
    II(0x10123465, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10123468, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012346a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012346b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012346c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012346d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012346e, 0x1)   retd();                               /* ret */
FUNC_END

