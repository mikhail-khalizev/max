FUNC_BEGIN(0x1015e7ed, 0x8dd8c2a491b24025, 0x20, ({0x68, 0xcc, 0x1, 0, 0, 0xe8, 0x5b, 0x75, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xa0, 0x1, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xca, 0x59, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xdf, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xfc, 0x78, 0xf1, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x80, 0x7e, 0xf1, 0xff, 0x8d, 0x45, 0xf8, 0xe8, 0x40, 0x7d, 0xf1, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xd0, 0x33, 0xb8, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0x39, 0xc1, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x45, 0x3e, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x24, 0x8b, 0x45, 0xfc, 0xe8, 0x39, 0x3e, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x48, 0x2, 0x8d, 0x45, 0xf8, 0xe8, 0x4c, 0x7d, 0xf1, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xff, 0x51, 0x60, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfc, 0x84, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0x4d, 0x8d, 0x45, 0xf8, 0xe8, 0xcc, 0x7c, 0xf1, 0xff, 0x8a, 0x40, 0x27, 0x25, 0xff, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf4, 0xff, 0x70, 0x17, 0xb8, 0x64, 0x28, 0x1b, 0x10, 0x50, 0x8d, 0x85, 0x60, 0xfe, 0xff, 0xff, 0x50, 0xe8, 0x38, 0x76, 0, 0, 0x83, 0xc4, 0x10, 0xe8, 0x2f, 0xc1, 0xf6, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x44, 0xc1, 0xf6, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x85, 0x60, 0xfe, 0xff, 0xff, 0xe8, 0x36, 0x74, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x35, 0x76, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015e7ed, 0x5)   pushd(0x1cc);                         /* push dword 0x1cc */
    II(0x1015e7f2, 0x5)   calld(sys_check_available_stack_size, 0x755b); /* call 0x10165d52 */
    II(0x1015e7f7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015e7f8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015e7f9, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015e7fa, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015e7fb, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015e7fc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015e7fd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015e7ff, 0x6)   sub(esp, 0x1a0);                      /* sub esp, 0x1a0 */
    II(0x1015e805, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015e808, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e80b, 0x5)   calld(0x101541da, -0xa636);           /* call 0x101541da */
    II(0x1015e810, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015e812, 0x6)   jzd(0x1015e8f7, 0xdf);                /* jz dword 0x1015e8f7 */
    II(0x1015e818, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e81b, 0x5)   calld(0x1007611c, -0xe8704);          /* call 0x1007611c */
    II(0x1015e820, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x1015e823, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015e825, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015e827, 0x5)   calld(0x100766ac, -0xe8180);          /* call 0x100766ac */
    II(0x1015e82c, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015e82f, 0x5)   calld(0x10076574, -0xe82c0);          /* call 0x10076574 */
    II(0x1015e834, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1015e837, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015e83a, 0x3)   imul(edx, eax, 0x33);                 /* imul edx, eax, 0x33 */
    II(0x1015e83d, 0x5)   mov(eax, 0x101c81c0);                 /* mov eax, 0x101c81c0 */
    II(0x1015e842, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1015e844, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015e847, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e84a, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1015e84e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e851, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1015e855, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e857, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e85a, 0x5)   calld(0x1008a998, -0xd3ec7);          /* call 0x1008a998 */
    II(0x1015e85f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e862, 0x5)   calld(0x101526ac, -0xc1bb);           /* call 0x101526ac */
    II(0x1015e867, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015e869, 0x2)   jzd(0x1015e88f, 0x24);                /* jz 0x1015e88f */
    II(0x1015e86b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e86e, 0x5)   calld(0x101526ac, -0xc1c7);           /* call 0x101526ac */
    II(0x1015e873, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1015e876, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015e879, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x1015e87c, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015e87f, 0x5)   calld(0x100765d0, -0xe82b4);          /* call 0x100765d0 */
    II(0x1015e884, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1015e886, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015e889, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015e88c, 0x3)   calld_abs(memd_a32(ds, ecx + 0x60));  /* call dword near [ecx+0x60] */
l_0x1015e88f:
    II(0x1015e88f, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1015e894, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e897, 0x5)   calld(0x10076d98, -0xe7b04);          /* call 0x10076d98 */
    II(0x1015e89c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015e89e, 0x2)   jzd(0x1015e8ed, 0x4d);                /* jz 0x1015e8ed */
    II(0x1015e8a0, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015e8a3, 0x5)   calld(0x10076574, -0xe8334);          /* call 0x10076574 */
    II(0x1015e8a8, 0x3)   mov(al, memb_a32(ds, eax + 0x27));    /* mov al, [eax+0x27] */
    II(0x1015e8ab, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e8b0, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015e8b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015e8b4, 0x3)   pushd(memd_a32(ds, eax + 0x17));      /* push dword [eax+0x17] */
    II(0x1015e8b7, 0x5)   mov(eax, 0x101b2864);                 /* mov eax, 0x101b2864 */ /* "%s %i has been loaded\ninto air transport." */
    II(0x1015e8bc, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015e8bd, 0x6)   lea(eax, ebp - 0x1a0);                /* lea eax, [ebp+0xfffffe60] */
    II(0x1015e8c3, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015e8c4, 0x5)   calld(sys_sprintf, 0x7638);           /* call 0x10165f01 */
    II(0x1015e8c9, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x1015e8cc, 0x5)   calld(0x100caa00, -0x93ed1);          /* call 0x100caa00 */
    II(0x1015e8d1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e8d6, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015e8d7, 0x5)   calld(0x100caa20, -0x93ebc);          /* call 0x100caa20 */
    II(0x1015e8dc, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1015e8de, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015e8e0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e8e2, 0x6)   lea(eax, ebp - 0x1a0);                /* lea eax, [ebp+0xfffffe60] */
    II(0x1015e8e8, 0x5)   calld(0x10115d23, -0x48bca);          /* call 0x10115d23 */
l_0x1015e8ed:
    II(0x1015e8ed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e8ef, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1015e8f2, 0x5)   calld(0x10075f2c, -0xe89cb);          /* call 0x10075f2c */
l_0x1015e8f7:
    II(0x1015e8f7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015e8f9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015e8fa, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015e8fb, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015e8fc, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015e8fd, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015e8fe, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015e8ff, 0x1)   retd();                               /* ret */
FUNC_END

