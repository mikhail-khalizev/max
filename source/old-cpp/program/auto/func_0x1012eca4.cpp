FUNC_BEGIN(0x1012eca4, 0x300fd4af06cc5b7b, 0x20, ({0x68, 0x94, 0, 0, 0, 0xe8, 0xa4, 0x70, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x78, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xc0, 0xa, 0xba, 0xbc, 0x52, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x97, 0x8f, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x8d, 0x2e, 0, 0, 0xc6, 0x45, 0xf8, 0x1, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x89, 0xc2, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x89, 0xc3, 0x83, 0xc2, 0x1f, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0xe8, 0x1a, 0xc6, 0, 0, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x37, 0xb5, 0x3, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xd9, 0x7e, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x48, 0xc0, 0, 0, 0x84, 0xc0, 0xf, 0x84, 0x7f, 0x2, 0, 0, 0x8d, 0x4d, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x16, 0x62, 0xfa, 0xff, 0x83, 0xe8, 0x5f, 0xf, 0xbf, 0xd8, 0xba, 0x64, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xcf, 0x8f, 0xfe, 0xff, 0xe8, 0x7a, 0x2d, 0, 0, 0xe8, 0x3e, 0xa9, 0xfb, 0xff, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0xf, 0x84, 0x3f, 0x2, 0, 0, 0x80, 0x7d, 0xf8, 0, 0x75, 0x69, 0xe8, 0x35, 0x2c, 0, 0, 0x98, 0x89, 0x45, 0xe0, 0xb8, 0xe, 0, 0, 0, 0xe8, 0x7b, 0x70, 0x3, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x26, 0xba, 0xeb, 0x87, 0x1a, 0x10, 0x8d, 0x45, 0xd4, 0xe8, 0x9a, 0x2c, 0x1, 0, 0x31, 0xd2, 0x8b, 0x4d, 0xdc, 0x89, 0xc3, 0x89, 0xc8, 0xe8, 0x67, 0x29, 0, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xcc, 0x8b, 0x55, 0xcc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0x8b, 0x5d, 0xe0, 0xe8, 0xef, 0x2a, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x4f, 0x2d, 0x1, 0, 0xc6, 0x45, 0xf8, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xf0, 0x29, 0xd0, 0x89, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xf4, 0x39, 0xc2, 0x7d, 0x74, 0xe8, 0x9c, 0x2b, 0, 0, 0x98, 0x89, 0x45, 0xc8, 0xb8, 0xe, 0, 0, 0, 0xe8, 0xe2, 0x6f, 0x3, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xc0, 0, 0x74, 0x2c, 0xba, 0xec, 0x87, 0x1a, 0x10, 0x8d, 0x45, 0xbc, 0xe8, 0x1, 0x2c, 0x1, 0, 0x89, 0xc3, 0x8d, 0x45, 0xe8, 0xe8, 0xf4, 0x2c, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xc4, 0xe8, 0xc8, 0x28, 0, 0, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xb4, 0xeb, 0x6, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xb4, 0x8b, 0x55, 0xb4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0x8b, 0x5d, 0xc8, 0xe8, 0x50, 0x2a, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0xb0, 0x2c, 0x1, 0, 0xe9, 0x69, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xf0, 0x7d, 0x64, 0xe8, 0x10, 0x2b, 0, 0, 0x98, 0x89, 0x45, 0xb0, 0xb8, 0xe, 0, 0, 0, 0xe8, 0x56, 0x6f, 0x3, 0, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x89, 0x45, 0xa8, 0x83, 0x7d, 0xa8, 0, 0x74, 0x29, 0xf, 0xbf, 0x5d, 0xf4, 0xc1, 0xe3, 0x2, 0x3, 0x5d, 0xe4, 0x8d, 0x45, 0xe8, 0xe8, 0x6d, 0x2c, 0, 0, 0x8b, 0x4d, 0xac, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x3f, 0x28, 0, 0, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa4, 0x89, 0x45, 0xa0, 0xeb, 0x6, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xa0, 0x8b, 0x55, 0xa0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0x8b, 0x5d, 0xb0, 0xe8, 0xc7, 0x29, 0, 0, 0xeb, 0x8d, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xf0, 0x29, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xf0, 0x1, 0xd0, 0x89, 0x45, 0xf4, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0x71, 0xe8, 0x7f, 0x2a, 0, 0, 0x98, 0x89, 0x45, 0x9c, 0xb8, 0xe, 0, 0, 0, 0xe8, 0xc5, 0x6e, 0x3, 0, 0x89, 0x45, 0x98, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x94, 0x83, 0x7d, 0x94, 0, 0x74, 0x2c, 0xba, 0xed, 0x87, 0x1a, 0x10, 0x8d, 0x45, 0x90, 0xe8, 0xe4, 0x2a, 0x1, 0, 0x89, 0xc3, 0x8d, 0x45, 0xe8, 0xe8, 0xd7, 0x2b, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0x98, 0xe8, 0xab, 0x27, 0, 0, 0x89, 0x45, 0x8c, 0x8b, 0x45, 0x8c, 0x89, 0x45, 0x88, 0xeb, 0x6, 0x8b, 0x45, 0x94, 0x89, 0x45, 0x88, 0x8b, 0x55, 0x88, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0x8b, 0x5d, 0x9c, 0xe8, 0x33, 0x29, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0x90, 0xe8, 0x93, 0x2b, 0x1, 0, 0xeb, 0x80, 0xba, 0x10, 0x5c, 0x1b, 0x10, 0x8b, 0x45, 0xe4, 0xe8, 0x12, 0x70, 0x3, 0, 0xe8, 0x2d, 0x70, 0x3, 0, 0xe9, 0x67, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0xe8, 0x1d, 0xc5, 0xf7, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x58, 0x3e, 0x8b, 0x45, 0xfc, 0x29, 0xda, 0x66, 0x89, 0x50, 0x34, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x32, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x9, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x34, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x36, 0xe8, 0x4c, 0x2c, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x92, 0x8b, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1012eca4, 0x5)   pushd(0x94);                          /* push dword 0x94 */
    II(0x1012eca9, 0x5)   calld(sys_check_available_stack_size, 0x370a4); /* call 0x10165d52 */
    II(0x1012ecae, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012ecaf, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012ecb0, 0x1)   pushd(edx);                           /* push edx */
    II(0x1012ecb1, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012ecb2, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012ecb3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012ecb4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012ecb6, 0x6)   sub(esp, 0x78);                       /* sub esp, 0x78 */
    II(0x1012ecbc, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1012ecbf, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012ecc1, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1012ecc6, 0x3)   imul(eax, eax, 0xa);                  /* imul eax, eax, 0xa */
    II(0x1012ecc9, 0x5)   mov(edx, 0x101c52bc);                 /* mov edx, 0x101c52bc */
    II(0x1012ecce, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012ecd0, 0x5)   calld(0x10117c6c, -0x17069);          /* call 0x10117c6c */
    II(0x1012ecd5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012ecd7, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012ecda, 0x5)   calld(0x10131b6c, 0x2e8d);            /* call 0x10131b6c */
    II(0x1012ecdf, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1012ece3, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x1012ece9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012eceb, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x1012ecf1, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1012ecf3, 0x3)   add(edx, 0x1f);                       /* add edx, 0x1f */
    II(0x1012ecf6, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012ecf8, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012ecfb, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012ecfd, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1012ed00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ed03, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012ed06, 0x5)   calld(0x1013b325, 0xc61a);            /* call 0x1013b325 */
    II(0x1012ed0b, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1012ed10, 0x5)   calld(/* sys */ 0x1016a24c, 0x3b537); /* call 0x1016a24c */
    II(0x1012ed15, 0x2)   jmpd(0x1012ed1f, 0x8);                /* jmp 0x1012ed1f */
l_0x1012ed17:
    II(0x1012ed17, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012ed1a, 0x5)   calld(0x10076bf8, -0xb8127);          /* call 0x10076bf8 */
l_0x1012ed1f:
    II(0x1012ed1f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012ed21, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012ed24, 0x5)   calld(0x1013ad71, 0xc048);            /* call 0x1013ad71 */
    II(0x1012ed29, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012ed2b, 0x6)   jzd(0x1012efb0, 0x27f);               /* jz dword 0x1012efb0 */
    II(0x1012ed31, 0x3)   lea(ecx, ebp - 0x10);                 /* lea ecx, [ebp-0x10] */
    II(0x1012ed34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ed37, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012ed3d, 0x5)   calld(0x100d4f58, -0x59dea);          /* call 0x100d4f58 */
    II(0x1012ed42, 0x3)   sub(eax, 0x5f);                       /* sub eax, 0x5f */
    II(0x1012ed45, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1012ed48, 0x5)   mov(edx, 0x64);                       /* mov edx, 0x64 */
    II(0x1012ed4d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012ed50, 0x5)   calld(0x10117d24, -0x17031);          /* call 0x10117d24 */
    II(0x1012ed55, 0x5)   calld(0x10131ad4, 0x2d7a);            /* call 0x10131ad4 */
    II(0x1012ed5a, 0x5)   calld(0x100e969d, -0x456c2);          /* call 0x100e969d */
    II(0x1012ed5f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1012ed62, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1012ed66, 0x6)   jzd(0x1012efab, 0x23f);               /* jz dword 0x1012efab */
    II(0x1012ed6c, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1012ed70, 0x2)   jnzd(0x1012eddb, 0x69);               /* jnz 0x1012eddb */
    II(0x1012ed72, 0x5)   calld(0x101319ac, 0x2c35);            /* call 0x101319ac */
    II(0x1012ed77, 0x1)   cwde();                               /* cwde */
    II(0x1012ed78, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1012ed7b, 0x5)   mov(eax, 0xe);                        /* mov eax, 0xe */
    II(0x1012ed80, 0x5)   calld(sys_new, 0x3707b);              /* call 0x10165e00 */
    II(0x1012ed85, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x1012ed88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1012ed8b, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1012ed8e, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x1012ed92, 0x2)   jzd(0x1012edba, 0x26);                /* jz 0x1012edba */
    II(0x1012ed94, 0x5)   mov(edx, 0x101a87eb);                 /* mov edx, 0x101a87eb */ /* "" */
    II(0x1012ed99, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1012ed9c, 0x5)   calld(my_string_ctor_char_ptr, 0x12c9a); /* call 0x10141a3b */
    II(0x1012eda1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012eda3, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x24));   /* mov ecx, [ebp-0x24] */
    II(0x1012eda6, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1012eda8, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1012edaa, 0x5)   calld(0x10131716, 0x2967);            /* call 0x10131716 */
    II(0x1012edaf, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x1012edb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1012edb5, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1012edb8, 0x2)   jmpd(0x1012edc0, 0x6);                /* jmp 0x1012edc0 */
l_0x1012edba:
    II(0x1012edba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1012edbd, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x1012edc0:
    II(0x1012edc0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x1012edc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012edc6, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012edc9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x20));   /* mov ebx, [ebp-0x20] */
    II(0x1012edcc, 0x5)   calld(0x101318c0, 0x2aef);            /* call 0x101318c0 */
    II(0x1012edd1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012edd3, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1012edd6, 0x5)   calld(my_string_dtor, 0x12d4f);       /* call 0x10141b2a */
l_0x1012eddb:
    II(0x1012eddb, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1012eddf, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1012ede6, 0x2)   jmpd(0x1012edee, 0x6);                /* jmp 0x1012edee */
l_0x1012ede8:
    II(0x1012ede8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012edeb, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1012edee:
    II(0x1012edee, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012edf2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1012edf6, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012edf8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
//    II(0x1012edfa, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012edfc, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012edff, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012ee01, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012ee03, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1012ee07, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012ee09, 0x2)   jged(0x1012ee7f, 0x74);               /* jge 0x1012ee7f */
    II(0x1012ee0b, 0x5)   calld(0x101319ac, 0x2b9c);            /* call 0x101319ac */
    II(0x1012ee10, 0x1)   cwde();                               /* cwde */
    II(0x1012ee11, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1012ee14, 0x5)   mov(eax, 0xe);                        /* mov eax, 0xe */
    II(0x1012ee19, 0x5)   calld(sys_new, 0x36fe2);              /* call 0x10165e00 */
    II(0x1012ee1e, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x1012ee21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1012ee24, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1012ee27, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x1012ee2b, 0x2)   jzd(0x1012ee59, 0x2c);                /* jz 0x1012ee59 */
    II(0x1012ee2d, 0x5)   mov(edx, 0x101a87ec);                 /* mov edx, 0x101a87ec */ /* "" */
    II(0x1012ee32, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1012ee35, 0x5)   calld(my_string_ctor_char_ptr, 0x12c01); /* call 0x10141a3b */
    II(0x1012ee3a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1012ee3c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012ee3f, 0x5)   calld(0x10131b38, 0x2cf4);            /* call 0x10131b38 */
    II(0x1012ee44, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012ee46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1012ee49, 0x5)   calld(0x10131716, 0x28c8);            /* call 0x10131716 */
    II(0x1012ee4e, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x1012ee51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1012ee54, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x1012ee57, 0x2)   jmpd(0x1012ee5f, 0x6);                /* jmp 0x1012ee5f */
l_0x1012ee59:
    II(0x1012ee59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1012ee5c, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
l_0x1012ee5f:
    II(0x1012ee5f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4c));   /* mov edx, [ebp-0x4c] */
    II(0x1012ee62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ee65, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012ee68, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x38));   /* mov ebx, [ebp-0x38] */
    II(0x1012ee6b, 0x5)   calld(0x101318c0, 0x2a50);            /* call 0x101318c0 */
    II(0x1012ee70, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012ee72, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1012ee75, 0x5)   calld(my_string_dtor, 0x12cb0);       /* call 0x10141b2a */
    II(0x1012ee7a, 0x5)   jmpd(0x1012ede8, -0x97);              /* jmp 0x1012ede8 */
l_0x1012ee7f:
    II(0x1012ee7f, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1012ee86, 0x2)   jmpd(0x1012ee8e, 0x6);                /* jmp 0x1012ee8e */
l_0x1012ee88:
    II(0x1012ee88, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012ee8b, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1012ee8e:
    II(0x1012ee8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012ee91, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x1012ee95, 0x2)   jged(0x1012eefb, 0x64);               /* jge 0x1012eefb */
    II(0x1012ee97, 0x5)   calld(0x101319ac, 0x2b10);            /* call 0x101319ac */
    II(0x1012ee9c, 0x1)   cwde();                               /* cwde */
    II(0x1012ee9d, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1012eea0, 0x5)   mov(eax, 0xe);                        /* mov eax, 0xe */
    II(0x1012eea5, 0x5)   calld(sys_new, 0x36f56);              /* call 0x10165e00 */
    II(0x1012eeaa, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x1012eead, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x1012eeb0, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x1012eeb3, 0x4)   cmp(memd_a32(ss, ebp - 0x58), 0);     /* cmp dword [ebp-0x58], 0x0 */
    II(0x1012eeb7, 0x2)   jzd(0x1012eee2, 0x29);                /* jz 0x1012eee2 */
    II(0x1012eeb9, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1012eebd, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x1012eec0, 0x3)   add(ebx, memd_a32(ss, ebp - 0x1c));   /* add ebx, [ebp-0x1c] */
    II(0x1012eec3, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012eec6, 0x5)   calld(0x10131b38, 0x2c6d);            /* call 0x10131b38 */
    II(0x1012eecb, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x54));   /* mov ecx, [ebp-0x54] */
    II(0x1012eece, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012eed0, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1012eed2, 0x5)   calld(0x10131716, 0x283f);            /* call 0x10131716 */
    II(0x1012eed7, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
//    II(0x1012eeda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x1012eedd, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x1012eee0, 0x2)   jmpd(0x1012eee8, 0x6);                /* jmp 0x1012eee8 */
l_0x1012eee2:
    II(0x1012eee2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x1012eee5, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
l_0x1012eee8:
    II(0x1012eee8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x60));   /* mov edx, [ebp-0x60] */
    II(0x1012eeeb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012eeee, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012eef1, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x50));   /* mov ebx, [ebp-0x50] */
    II(0x1012eef4, 0x5)   calld(0x101318c0, 0x29c7);            /* call 0x101318c0 */
    II(0x1012eef9, 0x2)   jmpd(0x1012ee88, -0x73);              /* jmp 0x1012ee88 */
l_0x1012eefb:
    II(0x1012eefb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012eeff, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012ef03, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1012ef05, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012ef07, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012ef0a, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012ef0c, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012ef0e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1012ef12, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012ef14, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1012ef17, 0x2)   jmpd(0x1012ef1f, 0x6);                /* jmp 0x1012ef1f */
l_0x1012ef19:
    II(0x1012ef19, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012ef1c, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1012ef1f:
    II(0x1012ef1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012ef22, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x1012ef26, 0x2)   jged(0x1012ef99, 0x71);               /* jge 0x1012ef99 */
    II(0x1012ef28, 0x5)   calld(0x101319ac, 0x2a7f);            /* call 0x101319ac */
    II(0x1012ef2d, 0x1)   cwde();                               /* cwde */
    II(0x1012ef2e, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x1012ef31, 0x5)   mov(eax, 0xe);                        /* mov eax, 0xe */
    II(0x1012ef36, 0x5)   calld(sys_new, 0x36ec5);              /* call 0x10165e00 */
    II(0x1012ef3b, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
//    II(0x1012ef3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1012ef41, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x1012ef44, 0x4)   cmp(memd_a32(ss, ebp - 0x6c), 0);     /* cmp dword [ebp-0x6c], 0x0 */
    II(0x1012ef48, 0x2)   jzd(0x1012ef76, 0x2c);                /* jz 0x1012ef76 */
    II(0x1012ef4a, 0x5)   mov(edx, 0x101a87ed);                 /* mov edx, 0x101a87ed */ /* "" */
    II(0x1012ef4f, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x1012ef52, 0x5)   calld(my_string_ctor_char_ptr, 0x12ae4); /* call 0x10141a3b */
    II(0x1012ef57, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1012ef59, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012ef5c, 0x5)   calld(0x10131b38, 0x2bd7);            /* call 0x10131b38 */
    II(0x1012ef61, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012ef63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1012ef66, 0x5)   calld(0x10131716, 0x27ab);            /* call 0x10131716 */
    II(0x1012ef6b, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
//    II(0x1012ef6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x1012ef71, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x1012ef74, 0x2)   jmpd(0x1012ef7c, 0x6);                /* jmp 0x1012ef7c */
l_0x1012ef76:
    II(0x1012ef76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1012ef79, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
l_0x1012ef7c:
    II(0x1012ef7c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x78));   /* mov edx, [ebp-0x78] */
    II(0x1012ef7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012ef82, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012ef85, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x64));   /* mov ebx, [ebp-0x64] */
    II(0x1012ef88, 0x5)   calld(0x101318c0, 0x2933);            /* call 0x101318c0 */
    II(0x1012ef8d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012ef8f, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x1012ef92, 0x5)   calld(my_string_dtor, 0x12b93);       /* call 0x10141b2a */
    II(0x1012ef97, 0x2)   jmpd(0x1012ef19, -0x80);              /* jmp 0x1012ef19 */
l_0x1012ef99:
    II(0x1012ef99, 0x5)   mov(edx, 0x101b5c10);                 /* mov edx, 0x101b5c10 */
    II(0x1012ef9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012efa1, 0x5)   calld(sys_call_dtor_arr, 0x37012);    /* call 0x10165fb8 */
    II(0x1012efa6, 0x5)   calld(sys_delete_arr, 0x3702d);       /* call 0x10165fd8 */
l_0x1012efab:
    II(0x1012efab, 0x5)   jmpd(0x1012ed17, -0x299);             /* jmp 0x1012ed17 */
l_0x1012efb0:
    II(0x1012efb0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012efb3, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012efb6, 0x5)   calld(my_1_get_count, -0x83ae3);      /* call 0x100ab4d8 */
    II(0x1012efbb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012efbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012efc0, 0x4)   mov(bx, memw_a32(ds, eax + 0x3e));    /* mov bx, [eax+0x3e] */
//    II(0x1012efc4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012efc7, 0x2)   sub(edx, ebx);                        /* sub edx, ebx */
    II(0x1012efc9, 0x4)   mov(memw_a32(ds, eax + 0x34), dx);    /* mov [eax+0x34], dx */
    II(0x1012efcd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012efd0, 0x3)   mov(eax, memd_a32(ds, eax + 0x32));   /* mov eax, [eax+0x32] */
    II(0x1012efd3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012efd6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012efd8, 0x2)   jged(0x1012efe3, 0x9);                /* jge 0x1012efe3 */
    II(0x1012efda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012efdd, 0x6)   mov(memw_a32(ds, eax + 0x34), 0);     /* mov word [eax+0x34], 0x0 */
l_0x1012efe3:
    II(0x1012efe3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012efe5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012efe8, 0x3)   add(eax, 0x36);                       /* add eax, 0x36 */
    II(0x1012efeb, 0x5)   calld(0x10131c3c, 0x2c4c);            /* call 0x10131c3c */
    II(0x1012eff0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012eff2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012eff5, 0x5)   calld(0x10117b8c, -0x1746e);          /* call 0x10117b8c */
    II(0x1012effa, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012effc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012effd, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012effe, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012efff, 0x1)   popd(edx);                            /* pop edx */
    II(0x1012f000, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012f001, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012f002, 0x1)   retd();                               /* ret */
FUNC_END

