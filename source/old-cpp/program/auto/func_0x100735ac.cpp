FUNC_BEGIN(0x100735ac, 0xd4bf831611cd6d22, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x9c, 0x27, 0xf, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0x29, 0x2f, 0, 0, 0x89, 0x45, 0xf4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x8, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0xa, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0xc, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0xe, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x10, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x27, 0x2d, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x21, 0x2e, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xd3, 0x35, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x42, 0x77, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0x8e, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x61, 0x2d, 0, 0, 0xe8, 0xc0, 0x2b, 0, 0, 0x3b, 0x45, 0xfc, 0x75, 0x77, 0x8d, 0x45, 0xe4, 0xe8, 0x60, 0xea, 0xff, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0x58, 0xea, 0xff, 0xff, 0xe8, 0xb6, 0x29, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xf0, 0xe8, 0x9b, 0x2d, 0, 0, 0xe8, 0x16, 0xed, 0xff, 0xff, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xf0, 0xe8, 0x8b, 0x2d, 0, 0, 0xe8, 0x34, 0xeb, 0xff, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb1, 0xea, 0xff, 0xff, 0x8b, 0x45, 0xe6, 0x8b, 0x55, 0xfc, 0x66, 0x1, 0x42, 0x8, 0x8b, 0x45, 0xe8, 0x8b, 0x55, 0xfc, 0x66, 0x1, 0x42, 0xa, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xfc, 0x66, 0x1, 0x42, 0xc, 0x8b, 0x45, 0xea, 0x8b, 0x55, 0xfc, 0x66, 0x1, 0x42, 0xe, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xfc, 0x66, 0x1, 0x42, 0x10, 0xe9, 0x58, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x9d, 0x28, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100735ac, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x100735b1, 0x5)   calld(sys_check_available_stack_size, 0xf279c); /* call 0x10165d52 */
    II(0x100735b6, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100735b7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100735b8, 0x1)   pushd(edx);                           /* push edx */
    II(0x100735b9, 0x1)   pushd(esi);                           /* push esi */
    II(0x100735ba, 0x1)   pushd(edi);                           /* push edi */
    II(0x100735bb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100735bc, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100735be, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100735c4, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100735c7, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100735cb, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100735ce, 0x5)   calld(0x100764fc, 0x2f29);            /* call 0x100764fc */
    II(0x100735d3, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100735d6, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100735da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100735dd, 0x6)   mov(memw_a32(ds, eax + 0x8), 0);      /* mov word [eax+0x8], 0x0 */
    II(0x100735e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100735e6, 0x6)   mov(memw_a32(ds, eax + 0xa), 0);      /* mov word [eax+0xa], 0x0 */
    II(0x100735ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100735ef, 0x6)   mov(memw_a32(ds, eax + 0xc), 0);      /* mov word [eax+0xc], 0x0 */
    II(0x100735f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100735f8, 0x6)   mov(memw_a32(ds, eax + 0xe), 0);      /* mov word [eax+0xe], 0x0 */
    II(0x100735fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10073601, 0x6)   mov(memw_a32(ds, eax + 0x10), 0);     /* mov word [eax+0x10], 0x0 */
    II(0x10073607, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1007360c, 0x5)   calld(0x10076338, 0x2d27);            /* call 0x10076338 */
    II(0x10073611, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10073613, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10073616, 0x5)   calld(0x1007643c, 0x2e21);            /* call 0x1007643c */
    II(0x1007361b, 0x2)   jmpd(0x10073625, 0x8);                /* jmp 0x10073625 */
l_0x1007361d:
    II(0x1007361d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10073620, 0x5)   calld(0x10076bf8, 0x35d3);            /* call 0x10076bf8 */
l_0x10073625:
    II(0x10073625, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10073627, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007362a, 0x5)   calld(0x1013ad71, 0xc7742);           /* call 0x1013ad71 */
    II(0x1007362f, 0x2)   test(al, al);                         /* test al, al */
    II(0x10073631, 0x6)   jzd(0x100736c5, 0x8e);                /* jz dword 0x100736c5 */
    II(0x10073637, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007363a, 0x5)   calld(0x100763a0, 0x2d61);            /* call 0x100763a0 */
    II(0x1007363f, 0x5)   calld(0x10076204, 0x2bc0);            /* call 0x10076204 */
    II(0x10073644, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x10073647, 0x2)   jnzd(0x100736c0, 0x77);               /* jnz 0x100736c0 */
    II(0x10073649, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1007364c, 0x5)   calld(0x100720b1, -0x15a0);           /* call 0x100720b1 */
    II(0x10073651, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10073654, 0x5)   calld(0x100720b1, -0x15a8);           /* call 0x100720b1 */
    II(0x10073659, 0x5)   calld(0x10076014, 0x29b6);            /* call 0x10076014 */
    II(0x1007365e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10073660, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10073662, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x10073665, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10073668, 0x5)   calld(0x10076408, 0x2d9b);            /* call 0x10076408 */
    II(0x1007366d, 0x5)   calld(0x10072388, -0x12ea);           /* call 0x10072388 */
    II(0x10073672, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x10073675, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10073678, 0x5)   calld(0x10076408, 0x2d8b);            /* call 0x10076408 */
    II(0x1007367d, 0x5)   calld(0x100721b6, -0x14cc);           /* call 0x100721b6 */
    II(0x10073682, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x10073685, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10073687, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10073689, 0x5)   calld(0x1007213f, -0x154f);           /* call 0x1007213f */
    II(0x1007368e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x10073691, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10073694, 0x4)   add(memw_a32(ds, edx + 0x8), ax);     /* add [edx+0x8], ax */
    II(0x10073698, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1007369b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007369e, 0x4)   add(memw_a32(ds, edx + 0xa), ax);     /* add [edx+0xa], ax */
    II(0x100736a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100736a5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100736a8, 0x4)   add(memw_a32(ds, edx + 0xc), ax);     /* add [edx+0xc], ax */
    II(0x100736ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x100736af, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100736b2, 0x4)   add(memw_a32(ds, edx + 0xe), ax);     /* add [edx+0xe], ax */
    II(0x100736b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100736b9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100736bc, 0x4)   add(memw_a32(ds, edx + 0x10), ax);    /* add [edx+0x10], ax */
l_0x100736c0:
    II(0x100736c0, 0x5)   jmpd(0x1007361d, -0xa8);              /* jmp 0x1007361d */
l_0x100736c5:
    II(0x100736c5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100736c7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100736ca, 0x5)   calld(0x10075f6c, 0x289d);            /* call 0x10075f6c */
    II(0x100736cf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100736d1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100736d2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100736d3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100736d4, 0x1)   popd(edx);                            /* pop edx */
    II(0x100736d5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100736d6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100736d7, 0x1)   retd();                               /* ret */
FUNC_END

