FUNC_BEGIN(0x10123293, 0x6afbccb1b08b1b8e, 0x20, ({0x68, 0x74, 0, 0, 0, 0xe8, 0xb5, 0x2a, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x58, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0xbb, 0xcd, 0x6, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xac, 0xe8, 0xed, 0xe0, 0xff, 0xff, 0x89, 0x45, 0xa8, 0x80, 0x65, 0xf8, 0xfe, 0x8d, 0x45, 0xac, 0xe8, 0xb, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xb5, 0xe4, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10123293, 0x5)   pushd(0x74);                          /* push dword 0x74 */
    II(0x10123298, 0x5)   calld(sys_check_available_stack_size, 0x42ab5); /* call 0x10165d52 */
    II(0x1012329d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012329e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012329f, 0x1)   pushd(edx);                           /* push edx */
    II(0x101232a0, 0x1)   pushd(esi);                           /* push esi */
    II(0x101232a1, 0x1)   pushd(edi);                           /* push edi */
    II(0x101232a2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101232a3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101232a5, 0x6)   sub(esp, 0x58);                       /* sub esp, 0x58 */
    II(0x101232ab, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x101232ae, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x101232b2, 0x5)   mov(ebx, 0x6cd);                      /* mov ebx, 0x6cd */
    II(0x101232b7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x101232bb, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x101232be, 0x5)   calld(0x101213b0, -0x1f13);           /* call 0x101213b0 */
    II(0x101232c3, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x101232c6, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x101232ca, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x101232cd, 0x5)   calld(0x101231dd, -0xf5);             /* call 0x101231dd */
    II(0x101232d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101232d4, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x101232d7, 0x5)   calld(0x10121791, -0x1b4b);           /* call 0x10121791 */
    II(0x101232dc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101232de, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101232df, 0x1)   popd(edi);                            /* pop edi */
    II(0x101232e0, 0x1)   popd(esi);                            /* pop esi */
    II(0x101232e1, 0x1)   popd(edx);                            /* pop edx */
    II(0x101232e2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101232e3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101232e4, 0x1)   retd();                               /* ret */
FUNC_END

