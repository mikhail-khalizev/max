FUNC_BEGIN(0x101094b1, 0xb96d7b3f01bd21f, 0x20, ({0x68, 0x4, 0x1, 0, 0, 0xe8, 0x97, 0xc8, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xe8, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc6, 0x45, 0xf8, 0, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x85, 0x20, 0xff, 0xff, 0xff, 0xe8, 0x1c, 0xfd, 0xff, 0xff, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0, 0x74, 0x12, 0xe8, 0xa7, 0x17, 0x2, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x2, 0xf, 0x84, 0x3f, 0x1, 0, 0, 0xe8, 0x9, 0x1d, 0x6, 0, 0x89, 0x85, 0x2d, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x2d, 0xff, 0xff, 0xff, 0, 0x7e, 0xc, 0x81, 0xbd, 0x2d, 0xff, 0xff, 0xff, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0xc7, 0x85, 0x1c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xff, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x83, 0xf8, 0xc, 0xf, 0x8d, 0xe4, 0, 0, 0, 0xf, 0xbf, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x83, 0xbc, 0x28, 0x35, 0xff, 0xff, 0xff, 0, 0xf, 0x84, 0xc7, 0, 0, 0, 0xf, 0xbf, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x5, 0, 0x70, 0, 0, 0x3b, 0x85, 0x2d, 0xff, 0xff, 0xff, 0x75, 0x25, 0x80, 0x7d, 0xf8, 0, 0x75, 0x16, 0xf, 0xbf, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0x35, 0xff, 0xff, 0xff, 0xe8, 0x2e, 0x66, 0xfc, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0x93, 0, 0, 0, 0xf, 0xbf, 0x95, 0x1c, 0xff, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8b, 0x85, 0x2d, 0xff, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x69, 0xff, 0xff, 0xff, 0x75, 0x17, 0xf, 0xbf, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x6b, 0xc0, 0xc, 0x8b, 0x84, 0x28, 0x65, 0xff, 0xff, 0xff, 0x89, 0x85, 0x2d, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x1c, 0xff, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8b, 0x85, 0x2d, 0xff, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x65, 0xff, 0xff, 0xff, 0x75, 0x45, 0xf, 0xbf, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x83, 0xf8, 0x7, 0x7f, 0x16, 0xf, 0xbf, 0x85, 0x1c, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0x35, 0xff, 0xff, 0xff, 0xe8, 0xba, 0x65, 0xfc, 0xff, 0x81, 0x85, 0x2d, 0xff, 0xff, 0xff, 0x18, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x1c, 0xff, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8d, 0x85, 0x20, 0xff, 0xff, 0xff, 0xff, 0x94, 0x2a, 0x6d, 0xff, 0xff, 0xff, 0xeb, 0x5, 0xe9, 0, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x24, 0xff, 0xff, 0xff, 0, 0xf, 0x84, 0xa6, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x20, 0xff, 0xff, 0xff, 0xe8, 0xc2, 0xfd, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x29, 0xff, 0xff, 0xff, 0xf, 0xbe, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0xa5, 0x14, 0xfc, 0xff, 0xf, 0xbf, 0x55, 0xfc, 0x69, 0xd2, 0x47, 0x2, 0, 0, 0x8a, 0x85, 0x29, 0xff, 0xff, 0xff, 0x88, 0x82, 0xef, 0xa4, 0x1c, 0x10, 0x8b, 0x85, 0x29, 0xff, 0xff, 0xff, 0x89, 0x85, 0x18, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x18, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101094b1, 0x5)   pushd(0x104);                         /* push dword 0x104 */
    II(0x101094b6, 0x5)   calld(sys_check_available_stack_size, 0x5c897); /* call 0x10165d52 */
    II(0x101094bb, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101094bc, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101094bd, 0x1)   pushd(edx);                           /* push edx */
    II(0x101094be, 0x1)   pushd(esi);                           /* push esi */
    II(0x101094bf, 0x1)   pushd(edi);                           /* push edi */
    II(0x101094c0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101094c1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101094c3, 0x6)   sub(esp, 0xe8);                       /* sub esp, 0xe8 */
    II(0x101094c9, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x101094cc, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x101094d0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x101094d4, 0x6)   lea(eax, ebp - 0xe0);                 /* lea eax, [ebp+0xffffff20] */
    II(0x101094da, 0x5)   calld(0x101091fb, -0x2e4);            /* call 0x101091fb */
l_0x101094df:
    II(0x101094df, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0);     /* cmp byte [0x101c5630], 0x0 */
    II(0x101094e6, 0x2)   jzd(0x101094fa, 0x12);                /* jz 0x101094fa */
    II(0x101094e8, 0x5)   calld(0x1012ac94, 0x217a7);           /* call 0x1012ac94 */
    II(0x101094ed, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x2);   /* cmp byte [0x101c5630], 0x2 */
    II(0x101094f4, 0x6)   jzd(0x10109639, 0x13f);               /* jz dword 0x10109639 */
l_0x101094fa:
    II(0x101094fa, 0x5)   calld(/* sys */ 0x1016b208, 0x61d09); /* call 0x1016b208 */
    II(0x101094ff, 0x6)   mov(memd_a32(ss, ebp - 0xd3), eax);   /* mov [ebp+0xffffff2d], eax */
    II(0x10109505, 0x7)   cmp(memd_a32(ss, ebp - 0xd3), 0);     /* cmp dword [ebp+0xffffff2d], 0x0 */
    II(0x1010950c, 0x2)   jled(0x1010951a, 0xc);                /* jle 0x1010951a */
    II(0x1010950e, 0xa)   cmp(memd_a32(ss, ebp - 0xd3), 0x7000); /* cmp dword [ebp+0xffffff2d], 0x7000 */
    II(0x10109518, 0x2)   jld(0x1010951c, 0x2);                 /* jl 0x1010951c */
l_0x1010951a:
    II(0x1010951a, 0x2)   jmpd(0x10109520, 0x4);                /* jmp 0x10109520 */
l_0x1010951c:
    II(0x1010951c, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x10109520:
    II(0x10109520, 0xa)   mov(memd_a32(ss, ebp - 0xe4), 0);     /* mov dword [ebp+0xffffff1c], 0x0 */
    II(0x1010952a, 0x2)   jmpd(0x10109538, 0xc);                /* jmp 0x10109538 */
l_0x1010952c:
    II(0x1010952c, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe4));   /* mov eax, [ebp+0xffffff1c] */
    II(0x10109532, 0x6)   inc(memd_a32(ss, ebp - 0xe4));        /* inc dword [ebp+0xffffff1c] */
l_0x10109538:
    II(0x10109538, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xe4)); /* movsx eax, word [ebp+0xffffff1c] */
    II(0x1010953f, 0x3)   cmp(eax, 0xc);                        /* cmp eax, 0xc */
    II(0x10109542, 0x6)   jged(0x1010962c, 0xe4);               /* jge dword 0x1010962c */
    II(0x10109548, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xe4)); /* movsx eax, word [ebp+0xffffff1c] */
    II(0x1010954f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10109552, 0x8)   cmp(memd_a32(ds, eax + ebp - 0xcb), 0); /* cmp dword [eax+ebp+0xffffff35], 0x0 */
    II(0x1010955a, 0x6)   jzd(0x10109627, 0xc7);                /* jz dword 0x10109627 */
    II(0x10109560, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xe4)); /* movsx eax, word [ebp+0xffffff1c] */
    II(0x10109567, 0x5)   add(eax, 0x7000);                     /* add eax, 0x7000 */
    II(0x1010956c, 0x6)   cmp(eax, memd_a32(ss, ebp - 0xd3));   /* cmp eax, [ebp+0xffffff2d] */
    II(0x10109572, 0x2)   jnzd(0x10109599, 0x25);               /* jnz 0x10109599 */
    II(0x10109574, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10109578, 0x2)   jnzd(0x10109590, 0x16);               /* jnz 0x10109590 */
    II(0x1010957a, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xe4)); /* movsx eax, word [ebp+0xffffff1c] */
    II(0x10109581, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10109584, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0xcb)); /* mov eax, [eax+ebp+0xffffff35] */
    II(0x1010958b, 0x5)   calld(0x100cfbbe, -0x399d2);          /* call 0x100cfbbe */
l_0x10109590:
    II(0x10109590, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10109594, 0x5)   jmpd(0x1010962c, 0x93);               /* jmp 0x1010962c */
l_0x10109599:
    II(0x10109599, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xe4)); /* movsx edx, word [ebp+0xffffff1c] */
    II(0x101095a0, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x101095a3, 0x6)   mov(eax, memd_a32(ss, ebp - 0xd3));   /* mov eax, [ebp+0xffffff2d] */
    II(0x101095a9, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0x97)); /* cmp eax, [edx+ebp+0xffffff69] */
    II(0x101095b0, 0x2)   jnzd(0x101095c9, 0x17);               /* jnz 0x101095c9 */
    II(0x101095b2, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xe4)); /* movsx eax, word [ebp+0xffffff1c] */
    II(0x101095b9, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x101095bc, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x9b)); /* mov eax, [eax+ebp+0xffffff65] */
    II(0x101095c3, 0x6)   mov(memd_a32(ss, ebp - 0xd3), eax);   /* mov [ebp+0xffffff2d], eax */
l_0x101095c9:
    II(0x101095c9, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xe4)); /* movsx edx, word [ebp+0xffffff1c] */
    II(0x101095d0, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x101095d3, 0x6)   mov(eax, memd_a32(ss, ebp - 0xd3));   /* mov eax, [ebp+0xffffff2d] */
    II(0x101095d9, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0x9b)); /* cmp eax, [edx+ebp+0xffffff65] */
    II(0x101095e0, 0x2)   jnzd(0x10109627, 0x45);               /* jnz 0x10109627 */
    II(0x101095e2, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xe4)); /* movsx eax, word [ebp+0xffffff1c] */
    II(0x101095e9, 0x3)   cmp(eax, 0x7);                        /* cmp eax, 0x7 */
    II(0x101095ec, 0x2)   jgd(0x10109604, 0x16);                /* jg 0x10109604 */
    II(0x101095ee, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xe4)); /* movsx eax, word [ebp+0xffffff1c] */
    II(0x101095f5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101095f8, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0xcb)); /* mov eax, [eax+ebp+0xffffff35] */
    II(0x101095ff, 0x5)   calld(0x100cfbbe, -0x39a46);          /* call 0x100cfbbe */
l_0x10109604:
    II(0x10109604, 0xa)   add(memd_a32(ss, ebp - 0xd3), 0xfffffc18); /* add dword [ebp+0xffffff2d], 0xfffffc18 */
    II(0x1010960e, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xe4)); /* movsx edx, word [ebp+0xffffff1c] */
    II(0x10109615, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x10109618, 0x6)   lea(eax, ebp - 0xe0);                 /* lea eax, [ebp+0xffffff20] */
    II(0x1010961e, 0x7)   calld_abs(memd_a32(ds, edx + ebp - 0x93)); /* call dword near [edx+ebp+0xffffff6d] */
    II(0x10109625, 0x2)   jmpd(0x1010962c, 0x5);                /* jmp 0x1010962c */
l_0x10109627:
    II(0x10109627, 0x5)   jmpd(0x1010952c, -0x100);             /* jmp 0x1010952c */
l_0x1010962c:
    II(0x1010962c, 0x7)   cmp(memd_a32(ss, ebp - 0xdc), 0);     /* cmp dword [ebp+0xffffff24], 0x0 */
    II(0x10109633, 0x6)   jzd(0x101094df, -0x15a);              /* jz dword 0x101094df */
l_0x10109639:
    II(0x10109639, 0x6)   lea(eax, ebp - 0xe0);                 /* lea eax, [ebp+0xffffff20] */
    II(0x1010963f, 0x5)   calld(0x10109406, -0x23e);            /* call 0x10109406 */
    II(0x10109644, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xd7)); /* movsx edx, word [ebp+0xffffff29] */
    II(0x1010964b, 0x7)   movsx(eax, memb_a32(ss, ebp - 0xd8)); /* movsx eax, byte [ebp+0xffffff28] */
    II(0x10109652, 0x5)   calld(0x100caafc, -0x3eb5b);          /* call 0x100caafc */
    II(0x10109657, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1010965b, 0x6)   imul(edx, edx, 0x247);                /* imul edx, edx, 0x247 */
    II(0x10109661, 0x6)   mov(al, memb_a32(ss, ebp - 0xd7));    /* mov al, [ebp+0xffffff29] */
    II(0x10109667, 0x6)   mov(memb_a32(ds, edx + 0x101ca4ef), al); /* mov [edx+0x101ca4ef], al */
    II(0x1010966d, 0x6)   mov(eax, memd_a32(ss, ebp - 0xd7));   /* mov eax, [ebp+0xffffff29] */
    II(0x10109673, 0x6)   mov(memd_a32(ss, ebp - 0xe8), eax);   /* mov [ebp+0xffffff18], eax */
//    II(0x10109679, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe8));   /* mov eax, [ebp+0xffffff18] */
    II(0x1010967f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10109681, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10109682, 0x1)   popd(edi);                            /* pop edi */
    II(0x10109683, 0x1)   popd(esi);                            /* pop esi */
    II(0x10109684, 0x1)   popd(edx);                            /* pop edx */
    II(0x10109685, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10109686, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10109687, 0x1)   retd();                               /* ret */
FUNC_END

