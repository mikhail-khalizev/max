FUNC_BEGIN(0x1009d691, 0x1103b62aeadd340c, 0x20, ({0x68, 0x94, 0, 0, 0, 0xe8, 0xb7, 0x86, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x74, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xd8, 0xe8, 0x3c, 0x94, 0xfd, 0xff, 0x8d, 0x45, 0xdc, 0xe8, 0x34, 0x94, 0xfd, 0xff, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x6e, 0xda, 0xfe, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xec, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x7a, 0x8e, 0xfd, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xd4, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x9, 0xc7, 0x45, 0xec, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0x4e, 0, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0xf, 0xbf, 0x45, 0xec, 0x89, 0x45, 0xc4, 0xff, 0x75, 0xc4, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0, 0x74, 0x6, 0xc6, 0x45, 0xc0, 0, 0xeb, 0x4, 0xc6, 0x45, 0xc0, 0x3, 0x8b, 0x4d, 0xbd, 0xc1, 0xf9, 0x18, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x7d, 0x8e, 0xfd, 0xff, 0x8d, 0x75, 0xb0, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x62, 0x27, 0x8, 0, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0, 0x75, 0x35, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x3, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x4c, 0x8e, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xf0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x33, 0x48, 0x2, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xc5, 0x8d, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xb2, 0x8d, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x45, 0xda, 0xb8, 0x1, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x21, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x21, 0x8b, 0x45, 0xfc, 0x66, 0xf7, 0x58, 0x3b, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x8b, 0x55, 0xfc, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x3b, 0x1, 0xc0, 0x66, 0x8b, 0x52, 0x2b, 0x29, 0xc2, 0x89, 0xd0, 0x25, 0x7, 0, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x2b, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x2b, 0x8b, 0x55, 0xfc, 0x66, 0x3, 0x42, 0x3b, 0x25, 0x7, 0, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x2b, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x23, 0x1, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0xd1, 0xb2, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x29, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0xb, 0xd9, 0xfe, 0xff, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x98, 0x83, 0xf8, 0x8, 0x7c, 0x13, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0x49, 0xb4, 0xfe, 0xff, 0xe9, 0x5d, 0x2, 0, 0, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xac, 0xe8, 0xa1, 0x85, 0xfd, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xa8, 0xe8, 0x94, 0x85, 0xfd, 0xff, 0x89, 0xda, 0xe8, 0xf3, 0x86, 0, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x35, 0xc1, 0xfa, 0x10, 0x39, 0xd0, 0xf, 0x85, 0x31, 0xff, 0xff, 0xff, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x23, 0x1, 0xd8, 0xe8, 0x34, 0xb2, 0xfe, 0xff, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x23, 0x1, 0xc2, 0x8d, 0x45, 0xc8, 0xe8, 0x9c, 0xa9, 0x6, 0, 0x84, 0xc0, 0xf, 0x84, 0xd1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0x1, 0x83, 0x7d, 0xe0, 0, 0x74, 0x44, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x21, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xe0, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x23, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xd0, 0xf, 0xbf, 0, 0x83, 0xf8, 0x1, 0xf, 0x8d, 0x80, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x23, 0x1, 0xc2, 0x8d, 0x45, 0xa4, 0xe8, 0xbd, 0x84, 0xfd, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x1c, 0x8c, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x11, 0x6, 0, 0, 0x84, 0xc0, 0x74, 0x2c, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1f, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x23, 0x1, 0xc2, 0x8d, 0x45, 0xa0, 0xe8, 0x86, 0x84, 0xfd, 0xff, 0x8d, 0x5d, 0xb0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x62, 0x25, 0x8, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x1b, 0x8b, 0x45, 0xfc, 0xe8, 0x29, 0x1, 0, 0, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0xf6, 0xb2, 0xfe, 0xff, 0xe9, 0xa, 0x1, 0, 0, 0xe8, 0xe4, 0xa8, 0xa, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x72, 0x9, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x14, 0x7f, 0x2, 0xeb, 0x71, 0x8b, 0x45, 0xfc, 0xe8, 0xf7, 0xd2, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x52, 0xe8, 0x82, 0xcd, 0xfe, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0x9c, 0xb8, 0xa, 0, 0, 0, 0xe8, 0xb4, 0x83, 0xc, 0, 0x89, 0x45, 0x98, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x94, 0x83, 0x7d, 0x94, 0, 0x74, 0x16, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0x98, 0xe8, 0x63, 0x5e, 0, 0, 0x89, 0x45, 0x90, 0x8b, 0x45, 0x90, 0x89, 0x45, 0x8c, 0xeb, 0x6, 0x8b, 0x45, 0x94, 0x89, 0x45, 0x8c, 0x8b, 0x55, 0x8c, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x5d, 0x9c, 0xe8, 0x2f, 0x73, 0, 0, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0x67, 0xb2, 0xfe, 0xff, 0xe9, 0x7b, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x23, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x2f, 0x75, 0x1c, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x25, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x31, 0x74, 0x22, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x23, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x27, 0x75, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x25, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x29, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x5, 0xe9, 0xcf, 0xfc, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0xf3, 0xb1, 0xfe, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0xe7, 0xb1, 0xfe, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1009d691, 0x5)   pushd(0x94);                          /* push dword 0x94 */
    II(0x1009d696, 0x5)   calld(sys_check_available_stack_size, 0xc86b7); /* call 0x10165d52 */
    II(0x1009d69b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009d69c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009d69d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1009d69e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009d69f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009d6a0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009d6a1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009d6a3, 0x6)   sub(esp, 0x74);                       /* sub esp, 0x74 */
    II(0x1009d6a9, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1009d6ac, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1009d6af, 0x5)   calld(my_ctor_0x101b4184, -0x26bc4);  /* call 0x10076af0 */
    II(0x1009d6b4, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1009d6b7, 0x5)   calld(my_ctor_0x101b4184, -0x26bcc);  /* call 0x10076af0 */
    II(0x1009d6bc, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x1009d6c1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d6c4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009d6c5, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x1009d6cb, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1009d6ce, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1009d6d0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009d6d2, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1009d6d5, 0x5)   calld(0x1008b148, -0x12592);          /* call 0x1008b148 */
    II(0x1009d6da, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1009d6e1, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffffffff); /* mov dword [ebp-0x14], 0xffffffff */
    II(0x1009d6e8, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x1009d6ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d6f2, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009d6f5, 0x5)   calld(0x10076574, -0x27186);          /* call 0x10076574 */
    II(0x1009d6fa, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1009d6fd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d700, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1009d703, 0x7)   test(memb_a32(ds, eax + 0x101c81d4), 0x2); /* test byte [eax+0x101c81d4], 0x2 */
    II(0x1009d70a, 0x2)   jzd(0x1009d715, 0x9);                 /* jz 0x1009d715 */
    II(0x1009d70c, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffffffff); /* mov dword [ebp-0x14], 0xffffffff */
    II(0x1009d713, 0x2)   jmpd(0x1009d71c, 0x7);                /* jmp 0x1009d71c */
l_0x1009d715:
    II(0x1009d715, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x4e);  /* mov dword [ebp-0x14], 0x4e */
l_0x1009d71c:
    II(0x1009d71c, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1009d720, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1009d724, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1009d727, 0x3)   pushd(memd_a32(ss, ebp - 0x3c));      /* push dword [ebp-0x3c] */
    II(0x1009d72a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d72d, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0);     /* cmp byte [eax+0x3e], 0x0 */
    II(0x1009d731, 0x2)   jzd(0x1009d739, 0x6);                 /* jz 0x1009d739 */
    II(0x1009d733, 0x4)   mov(memb_a32(ss, ebp - 0x40), 0);     /* mov byte [ebp-0x40], 0x0 */
    II(0x1009d737, 0x2)   jmpd(0x1009d73d, 0x4);                /* jmp 0x1009d73d */
l_0x1009d739:
    II(0x1009d739, 0x4)   mov(memb_a32(ss, ebp - 0x40), 0x3);   /* mov byte [ebp-0x40], 0x3 */
l_0x1009d73d:
    II(0x1009d73d, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x43));   /* mov ecx, [ebp-0x43] */
    II(0x1009d740, 0x3)   sar(ecx, 0x18);                       /* sar ecx, 0x18 */
    II(0x1009d743, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1009d748, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d74b, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009d74e, 0x5)   calld(0x100765d0, -0x27183);          /* call 0x100765d0 */
    II(0x1009d753, 0x3)   lea(esi, ebp - 0x50);                 /* lea esi, [ebp-0x50] */
    II(0x1009d756, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009d758, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1009d75a, 0x5)   calld(0x1011fec1, 0x82762);           /* call 0x1011fec1 */
    II(0x1009d75f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1009d762, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1009d766, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d769, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0);     /* cmp byte [eax+0x3e], 0x0 */
    II(0x1009d76d, 0x2)   jnzd(0x1009d7a4, 0x35);               /* jnz 0x1009d7a4 */
    II(0x1009d76f, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1009d774, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x1009d779, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d77c, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009d77f, 0x5)   calld(0x100765d0, -0x271b4);          /* call 0x100765d0 */
    II(0x1009d784, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009d786, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d789, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1009d78c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d78f, 0x6)   imul(esi, eax, 0xc5);                 /* imul esi, eax, 0xc5 */
    II(0x1009d795, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x1009d79a, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x1009d79c, 0x5)   calld(0x100c1fd4, 0x24833);           /* call 0x100c1fd4 */
    II(0x1009d7a1, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x1009d7a4:
    II(0x1009d7a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d7a7, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009d7aa, 0x5)   calld(0x10076574, -0x2723b);          /* call 0x10076574 */
    II(0x1009d7af, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1009d7b3, 0x4)   mov(memw_a32(ss, ebp - 0x28), ax);    /* mov [ebp-0x28], ax */
    II(0x1009d7b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d7ba, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009d7bd, 0x5)   calld(0x10076574, -0x2724e);          /* call 0x10076574 */
    II(0x1009d7c2, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1009d7c6, 0x4)   mov(memw_a32(ss, ebp - 0x26), ax);    /* mov [ebp-0x26], ax */
l_0x1009d7ca:
    II(0x1009d7ca, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1009d7cf, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d7d2, 0x4)   sub(ax, memw_a32(ds, edx + 0x21));    /* sub ax, [edx+0x21] */
    II(0x1009d7d6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d7d9, 0x4)   mov(memw_a32(ds, edx + 0x21), ax);    /* mov [edx+0x21], ax */
    II(0x1009d7dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d7e0, 0x4)   neg(memw_a32(ds, eax + 0x3b));        /* neg word [eax+0x3b] */
    II(0x1009d7e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d7e7, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d7ea, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d7ed, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009d7ef, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d7f2, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009d7f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d7f7, 0x4)   mov(ax, memw_a32(ds, eax + 0x3b));    /* mov ax, [eax+0x3b] */
    II(0x1009d7fb, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009d7fd, 0x4)   mov(dx, memw_a32(ds, edx + 0x2b));    /* mov dx, [edx+0x2b] */
    II(0x1009d801, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1009d803, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1009d805, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x1009d80a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009d80c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d80f, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d812, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d815, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009d817, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009d81a, 0x4)   mov(memw_a32(ds, eax + 0x2b), dx);    /* mov [eax+0x2b], dx */
    II(0x1009d81e, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x1009d825:
    II(0x1009d825, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d828, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d82b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d82e, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009d830, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009d833, 0x4)   mov(ax, memw_a32(ds, eax + 0x2b));    /* mov ax, [eax+0x2b] */
    II(0x1009d837, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d83a, 0x4)   add(ax, memw_a32(ds, edx + 0x3b));    /* add ax, [edx+0x3b] */
    II(0x1009d83e, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x1009d843, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009d845, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d848, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d84b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d84e, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009d850, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009d853, 0x4)   mov(memw_a32(ds, eax + 0x2b), dx);    /* mov [eax+0x2b], dx */
    II(0x1009d857, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d85a, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d85d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d860, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009d863, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d866, 0x3)   add(edx, 0x23);                       /* add edx, 0x23 */
    II(0x1009d869, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009d86b, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1009d86e, 0x5)   calld(0x10088b44, -0x14d2f);          /* call 0x10088b44 */
    II(0x1009d873, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d876, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d879, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d87c, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009d87e, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009d881, 0x3)   mov(eax, memd_a32(ds, eax + 0x29));   /* mov eax, [eax+0x29] */
    II(0x1009d884, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d887, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009d88a, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1009d88f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009d891, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1009d894, 0x5)   calld(0x1008b1a4, -0x126f5);          /* call 0x1008b1a4 */
    II(0x1009d899, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1009d89c, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x1009d89f, 0x1)   cwde();                               /* cwde */
    II(0x1009d8a0, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1009d8a3, 0x2)   jld(0x1009d8b8, 0x13);                /* jl 0x1009d8b8 */
    II(0x1009d8a5, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1009d8a9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009d8ab, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x1009d8ae, 0x5)   calld(my_dtor_d1, -0x14bb7);          /* call 0x10088cfc */
    II(0x1009d8b3, 0x5)   jmpd(0x1009db15, 0x25d);              /* jmp 0x1009db15 */
l_0x1009d8b8:
    II(0x1009d8b8, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x1009d8bb, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1009d8be, 0x5)   calld(0x10075e64, -0x27a5f);          /* call 0x10075e64 */
    II(0x1009d8c3, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1009d8c5, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x1009d8c8, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x1009d8cb, 0x5)   calld(0x10075e64, -0x27a6c);          /* call 0x10075e64 */
    II(0x1009d8d0, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1009d8d2, 0x5)   calld(0x100a5fca, 0x86f3);            /* call 0x100a5fca */
    II(0x1009d8d7, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1009d8da, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1009d8dc, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1009d8df, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1009d8e1, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1009d8e3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d8e6, 0x3)   mov(edx, memd_a32(ds, edx + 0x35));   /* mov edx, [edx+0x35] */
    II(0x1009d8e9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009d8ec, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1009d8ee, 0x6)   jnzd(0x1009d825, -0xcf);              /* jnz dword 0x1009d825 */
    II(0x1009d8f4, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x1009d8f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d8fa, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d8fd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d900, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009d903, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1009d906, 0x3)   add(ebx, 0x23);                       /* add ebx, 0x23 */
    II(0x1009d909, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1009d90b, 0x5)   calld(0x10088b44, -0x14dcc);          /* call 0x10088b44 */
    II(0x1009d910, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009d913, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x1009d916, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d919, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d91c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d91f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009d922, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d925, 0x3)   add(edx, 0x23);                       /* add edx, 0x23 */
    II(0x1009d928, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009d92a, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1009d92d, 0x5)   calld(0x101082ce, 0x6a99c);           /* call 0x101082ce */
    II(0x1009d932, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009d934, 0x6)   jzd(0x1009da0b, 0xd1);                /* jz dword 0x1009da0b */
    II(0x1009d93a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d93d, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x1);   /* mov byte [eax+0x3d], 0x1 */
    II(0x1009d941, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x1009d945, 0x2)   jzd(0x1009d98b, 0x44);                /* jz 0x1009d98b */
    II(0x1009d947, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d94a, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d94d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d950, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009d953, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009d956, 0x3)   mov(eax, memd_a32(ds, eax + 0x21));   /* mov eax, [eax+0x21] */
    II(0x1009d959, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d95c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009d95f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x1009d962, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009d964, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d967, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d96a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d96d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009d970, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009d973, 0x3)   mov(eax, memd_a32(ds, eax + 0x23));   /* mov eax, [eax+0x23] */
    II(0x1009d976, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d979, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009d97b, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x1009d97d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1009d97f, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1009d982, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1009d985, 0x6)   jged(0x1009da0b, 0x80);               /* jge dword 0x1009da0b */
l_0x1009d98b:
    II(0x1009d98b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d98e, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009d991, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009d994, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009d997, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009d99a, 0x3)   add(edx, 0x23);                       /* add edx, 0x23 */
    II(0x1009d99d, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009d99f, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x1009d9a2, 0x5)   calld(0x10075e64, -0x27b43);          /* call 0x10075e64 */
    II(0x1009d9a7, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1009d9a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d9ac, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009d9af, 0x5)   calld(0x100765d0, -0x273e4);          /* call 0x100765d0 */
    II(0x1009d9b4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009d9b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d9b9, 0x5)   calld(0x1009dfcf, 0x611);             /* call 0x1009dfcf */
    II(0x1009d9be, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009d9c0, 0x2)   jzd(0x1009d9ee, 0x2c);                /* jz 0x1009d9ee */
    II(0x1009d9c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d9c5, 0x3)   mov(edx, memd_a32(ds, eax + 0x1f));   /* mov edx, [eax+0x1f] */
    II(0x1009d9c8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009d9cb, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1009d9ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d9d1, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x1009d9d4, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009d9d6, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x1009d9d9, 0x5)   calld(0x10075e64, -0x27b7a);          /* call 0x10075e64 */
    II(0x1009d9de, 0x3)   lea(ebx, ebp - 0x50);                 /* lea ebx, [ebp-0x50] */
    II(0x1009d9e1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009d9e3, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009d9e5, 0x5)   calld(0x1011ff4c, 0x82562);           /* call 0x1011ff4c */
    II(0x1009d9ea, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009d9ec, 0x2)   jnzd(0x1009d9f0, 0x2);                /* jnz 0x1009d9f0 */
l_0x1009d9ee:
    II(0x1009d9ee, 0x2)   jmpd(0x1009da0b, 0x1b);               /* jmp 0x1009da0b */
l_0x1009d9f0:
    II(0x1009d9f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009d9f3, 0x5)   calld(0x1009db21, 0x129);             /* call 0x1009db21 */
    II(0x1009d9f8, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1009d9fc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009d9fe, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x1009da01, 0x5)   calld(my_dtor_d1, -0x14d0a);          /* call 0x10088cfc */
    II(0x1009da06, 0x5)   jmpd(0x1009db15, 0x10a);              /* jmp 0x1009db15 */
l_0x1009da0b:
    II(0x1009da0b, 0x5)   calld(0x101482f4, 0xaa8e4);           /* call 0x101482f4 */
    II(0x1009da10, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x1009da16, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x1009da1c, 0x2)   jbd(0x1009da27, 0x9);                 /* jb 0x1009da27 */
    II(0x1009da1e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1009da22, 0x3)   cmp(eax, 0x14);                       /* cmp eax, 0x14 */
    II(0x1009da25, 0x2)   jgd(0x1009da29, 0x2);                 /* jg 0x1009da29 */
l_0x1009da27:
    II(0x1009da27, 0x2)   jmpd(0x1009da9a, 0x71);               /* jmp 0x1009da9a */
l_0x1009da29:
    II(0x1009da29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009da2c, 0x5)   calld(0x1008ad28, -0x12d09);          /* call 0x1008ad28 */
    II(0x1009da31, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009da33, 0x2)   jnzd(0x1009da87, 0x52);               /* jnz 0x1009da87 */
    II(0x1009da35, 0x5)   calld(0x1008a7bc, -0x1327e);          /* call 0x1008a7bc */
    II(0x1009da3a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1009da3f, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x1009da42, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x1009da47, 0x5)   calld(sys_new, 0xc83b4);              /* call 0x10165e00 */
    II(0x1009da4c, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
//    II(0x1009da4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1009da52, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x1009da55, 0x4)   cmp(memd_a32(ss, ebp - 0x6c), 0);     /* cmp dword [ebp-0x6c], 0x0 */
    II(0x1009da59, 0x2)   jzd(0x1009da71, 0x16);                /* jz 0x1009da71 */
    II(0x1009da5b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009da5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1009da61, 0x5)   calld(my_ctor_c11, 0x5e63);           /* call 0x100a38c9 */
    II(0x1009da66, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
//    II(0x1009da69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x1009da6c, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x1009da6f, 0x2)   jmpd(0x1009da77, 0x6);                /* jmp 0x1009da77 */
l_0x1009da71:
    II(0x1009da71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1009da74, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
l_0x1009da77:
    II(0x1009da77, 0x3)   mov(edx, memd_a32(ss, ebp - 0x74));   /* mov edx, [ebp-0x74] */
    II(0x1009da7a, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1009da7f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x64));   /* mov ebx, [ebp-0x64] */
    II(0x1009da82, 0x5)   calld(0x100a4db6, 0x732f);            /* call 0x100a4db6 */
l_0x1009da87:
    II(0x1009da87, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1009da8b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009da8d, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x1009da90, 0x5)   calld(my_dtor_d1, -0x14d99);          /* call 0x10088cfc */
    II(0x1009da95, 0x5)   jmpd(0x1009db15, 0x7b);               /* jmp 0x1009db15 */
l_0x1009da9a:
    II(0x1009da9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009da9d, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009daa0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009daa3, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009daa6, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009daa9, 0x4)   mov(dx, memw_a32(ds, eax + 0x23));    /* mov dx, [eax+0x23] */
    II(0x1009daad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dab0, 0x4)   cmp(dx, memw_a32(ds, eax + 0x2f));    /* cmp dx, [eax+0x2f] */
    II(0x1009dab4, 0x2)   jnzd(0x1009dad2, 0x1c);               /* jnz 0x1009dad2 */
    II(0x1009dab6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dab9, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009dabc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009dabf, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009dac2, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009dac5, 0x4)   mov(dx, memw_a32(ds, eax + 0x25));    /* mov dx, [eax+0x25] */
    II(0x1009dac9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dacc, 0x4)   cmp(dx, memw_a32(ds, eax + 0x31));    /* cmp dx, [eax+0x31] */
    II(0x1009dad0, 0x2)   jzd(0x1009daf4, 0x22);                /* jz 0x1009daf4 */
l_0x1009dad2:
    II(0x1009dad2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dad5, 0x4)   mov(dx, memw_a32(ds, eax + 0x23));    /* mov dx, [eax+0x23] */
//    II(0x1009dad9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dadc, 0x4)   cmp(dx, memw_a32(ds, eax + 0x27));    /* cmp dx, [eax+0x27] */
    II(0x1009dae0, 0x2)   jnzd(0x1009daf2, 0x10);               /* jnz 0x1009daf2 */
    II(0x1009dae2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dae5, 0x4)   mov(dx, memw_a32(ds, eax + 0x25));    /* mov dx, [eax+0x25] */
//    II(0x1009dae9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009daec, 0x4)   cmp(dx, memw_a32(ds, eax + 0x29));    /* cmp dx, [eax+0x29] */
    II(0x1009daf0, 0x2)   jzd(0x1009daf4, 0x2);                 /* jz 0x1009daf4 */
l_0x1009daf2:
    II(0x1009daf2, 0x2)   jmpd(0x1009daf6, 0x2);                /* jmp 0x1009daf6 */
l_0x1009daf4:
    II(0x1009daf4, 0x2)   jmpd(0x1009dafb, 0x5);                /* jmp 0x1009dafb */
l_0x1009daf6:
    II(0x1009daf6, 0x5)   jmpd(0x1009d7ca, -0x331);             /* jmp 0x1009d7ca */
l_0x1009dafb:
    II(0x1009dafb, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1009daff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009db01, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x1009db04, 0x5)   calld(my_dtor_d1, -0x14e0d);          /* call 0x10088cfc */
    II(0x1009db09, 0x2)   jmpd(0x1009db15, 0xa);                /* jmp 0x1009db15 */
//  II(0x1009db0b, 0xa)   /* Недостижимый код. */
l_0x1009db15:
    II(0x1009db15, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1009db18, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009db1a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009db1b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009db1c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009db1d, 0x1)   popd(edx);                            /* pop edx */
    II(0x1009db1e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009db1f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009db20, 0x1)   retd();                               /* ret */
FUNC_END

