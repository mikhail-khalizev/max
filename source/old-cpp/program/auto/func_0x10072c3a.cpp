FUNC_BEGIN(0x10072c3a, 0x3c428c14f6ba532a, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xe, 0x31, 0xf, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xf4, 0x88, 0x5d, 0xfc, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0x97, 0x38, 0, 0, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf0, 0xfe, 0x8b, 0x45, 0xf4, 0xe8, 0x69, 0xfa, 0xff, 0xff, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7c, 0x21, 0x8b, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xa0, 0x77, 0x1b, 0x10, 0xe8, 0x38, 0x36, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x9e, 0x37, 0, 0, 0xeb, 0x4e, 0x80, 0x7d, 0xfc, 0, 0x74, 0x25, 0xc7, 0x45, 0xe4, 0x4, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xa0, 0x77, 0x1b, 0x10, 0xe8, 0x45, 0x36, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x73, 0x37, 0, 0, 0xeb, 0x23, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xa0, 0x77, 0x1b, 0x10, 0xe8, 0x54, 0x36, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x4e, 0x37, 0, 0, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x80, 0x7d, 0xfc, 0, 0xf, 0x84, 0xaf, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x69, 0x80, 0xc, 0, 0x84, 0xc0, 0x74, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xe4, 0x3e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf3, 0x7f, 0xc, 0, 0x84, 0xc0, 0x74, 0x3a, 0xff, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xe0, 0x83, 0xf8, 0x5, 0x75, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xa0, 0x77, 0x1b, 0x10, 0xe8, 0xf1, 0x35, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xeb, 0x36, 0, 0, 0x8b, 0x45, 0xe0, 0x66, 0x3b, 0x45, 0xe4, 0x74, 0x2, 0xeb, 0xb8, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb, 0x80, 0xc, 0, 0x84, 0xc0, 0x74, 0xd, 0x8d, 0x45, 0xec, 0xe8, 0x96, 0x36, 0, 0, 0x3b, 0x45, 0xf4, 0x75, 0x2, 0xeb, 0x28, 0x8d, 0x45, 0xec, 0xe8, 0x1f, 0x36, 0, 0, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x75, 0x11, 0x8d, 0x45, 0xec, 0xe8, 0xd6, 0x35, 0, 0, 0xe8, 0x47, 0xfd, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x5, 0xe9, 0x56, 0xff, 0xff, 0xff, 0xe9, 0xaa, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xba, 0x7f, 0xc, 0, 0x84, 0xc0, 0x74, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xfd, 0x3d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x44, 0x7f, 0xc, 0, 0x84, 0xc0, 0x74, 0x3a, 0x83, 0x45, 0xe0, 0xff, 0xf, 0xbf, 0x45, 0xe0, 0x85, 0xc0, 0x7d, 0x7, 0xc7, 0x45, 0xe0, 0x4, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xa0, 0x77, 0x1b, 0x10, 0xe8, 0xe, 0x35, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x3c, 0x36, 0, 0, 0x8b, 0x45, 0xe0, 0x66, 0x3b, 0x45, 0xe4, 0x74, 0x2, 0xeb, 0xb8, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x5c, 0x7f, 0xc, 0, 0x84, 0xc0, 0x74, 0xd, 0x8d, 0x45, 0xec, 0xe8, 0xe7, 0x35, 0, 0, 0x3b, 0x45, 0xf4, 0x75, 0x2, 0xeb, 0x28, 0x8d, 0x45, 0xec, 0xe8, 0x70, 0x35, 0, 0, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x75, 0x11, 0x8d, 0x45, 0xec, 0xe8, 0x27, 0x35, 0, 0, 0xe8, 0x98, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x5, 0xe9, 0x56, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb0, 0x7e, 0xc, 0, 0x84, 0xc0, 0x75, 0x11, 0x8d, 0x45, 0xec, 0xe8, 0xff, 0x34, 0, 0, 0xe8, 0x70, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x13, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe5, 0x30, 0, 0, 0xeb, 0x21, 0x8d, 0x45, 0xec, 0xe8, 0x77, 0x35, 0, 0, 0x89, 0x45, 0xdc, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xce, 0x30, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xc2, 0x30, 0, 0, 0x8b, 0x45, 0xdc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10072c3a, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x10072c3f, 0x5)   calld(sys_check_available_stack_size, 0xf310e); /* call 0x10165d52 */
    II(0x10072c44, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10072c45, 0x1)   pushd(esi);                           /* push esi */
    II(0x10072c46, 0x1)   pushd(edi);                           /* push edi */
    II(0x10072c47, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10072c48, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10072c4a, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x10072c50, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10072c53, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10072c56, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x10072c59, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x10072c5d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072c60, 0x5)   calld(0x100764fc, 0x3897);            /* call 0x100764fc */
    II(0x10072c65, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10072c68, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x10072c6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10072c6f, 0x5)   calld(0x100726dd, -0x597);            /* call 0x100726dd */
    II(0x10072c74, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10072c77, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10072c7b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10072c7d, 0x2)   jld(0x10072ca0, 0x21);                /* jl 0x10072ca0 */
    II(0x10072c7f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10072c82, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10072c86, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10072c89, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b77a0)); /* mov eax, [eax+0x101b77a0] */
    II(0x10072c8f, 0x5)   calld(0x100762cc, 0x3638);            /* call 0x100762cc */
    II(0x10072c94, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10072c96, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072c99, 0x5)   calld(0x1007643c, 0x379e);            /* call 0x1007643c */
    II(0x10072c9e, 0x2)   jmpd(0x10072cee, 0x4e);               /* jmp 0x10072cee */
l_0x10072ca0:
    II(0x10072ca0, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10072ca4, 0x2)   jzd(0x10072ccb, 0x25);                /* jz 0x10072ccb */
    II(0x10072ca6, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x4);   /* mov dword [ebp-0x1c], 0x4 */
    II(0x10072cad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10072cb1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10072cb4, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b77a0)); /* mov eax, [eax+0x101b77a0] */
    II(0x10072cba, 0x5)   calld(0x10076304, 0x3645);            /* call 0x10076304 */
    II(0x10072cbf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10072cc1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072cc4, 0x5)   calld(0x1007643c, 0x3773);            /* call 0x1007643c */
    II(0x10072cc9, 0x2)   jmpd(0x10072cee, 0x23);               /* jmp 0x10072cee */
l_0x10072ccb:
    II(0x10072ccb, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x10072cd2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10072cd6, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10072cd9, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b77a0)); /* mov eax, [eax+0x101b77a0] */
    II(0x10072cdf, 0x5)   calld(0x10076338, 0x3654);            /* call 0x10076338 */
    II(0x10072ce4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10072ce6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072ce9, 0x5)   calld(0x1007643c, 0x374e);            /* call 0x1007643c */
l_0x10072cee:
    II(0x10072cee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10072cf1, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10072cf4, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10072cf8, 0x6)   jzd(0x10072dad, 0xaf);                /* jz dword 0x10072dad */
l_0x10072cfe:
    II(0x10072cfe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072d00, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072d03, 0x5)   calld(0x1013ad71, 0xc8069);           /* call 0x1013ad71 */
    II(0x10072d08, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072d0a, 0x2)   jzd(0x10072d14, 0x8);                 /* jz 0x10072d14 */
    II(0x10072d0c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072d0f, 0x5)   calld(0x10076bf8, 0x3ee4);            /* call 0x10076bf8 */
l_0x10072d14:
    II(0x10072d14, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072d16, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072d19, 0x5)   calld(0x1013ad11, 0xc7ff3);           /* call 0x1013ad11 */
    II(0x10072d1e, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072d20, 0x2)   jzd(0x10072d5c, 0x3a);                /* jz 0x10072d5c */
    II(0x10072d22, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
    II(0x10072d25, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10072d29, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x10072d2c, 0x2)   jnzd(0x10072d35, 0x7);                /* jnz 0x10072d35 */
    II(0x10072d2e, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x10072d35:
    II(0x10072d35, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10072d39, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10072d3c, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b77a0)); /* mov eax, [eax+0x101b77a0] */
    II(0x10072d42, 0x5)   calld(0x10076338, 0x35f1);            /* call 0x10076338 */
    II(0x10072d47, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10072d49, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072d4c, 0x5)   calld(0x1007643c, 0x36eb);            /* call 0x1007643c */
    II(0x10072d51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10072d54, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1c));    /* cmp ax, [ebp-0x1c] */
    II(0x10072d58, 0x2)   jzd(0x10072d5c, 0x2);                 /* jz 0x10072d5c */
    II(0x10072d5a, 0x2)   jmpd(0x10072d14, -0x48);              /* jmp 0x10072d14 */
l_0x10072d5c:
    II(0x10072d5c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072d5e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072d61, 0x5)   calld(0x1013ad71, 0xc800b);           /* call 0x1013ad71 */
    II(0x10072d66, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072d68, 0x2)   jzd(0x10072d77, 0xd);                 /* jz 0x10072d77 */
    II(0x10072d6a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072d6d, 0x5)   calld(0x10076408, 0x3696);            /* call 0x10076408 */
    II(0x10072d72, 0x3)   cmp(eax, memd_a32(ss, ebp - 0xc));    /* cmp eax, [ebp-0xc] */
    II(0x10072d75, 0x2)   jnzd(0x10072d79, 0x2);                /* jnz 0x10072d79 */
l_0x10072d77:
    II(0x10072d77, 0x2)   jmpd(0x10072da1, 0x28);               /* jmp 0x10072da1 */
l_0x10072d79:
    II(0x10072d79, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072d7c, 0x5)   calld(0x100763a0, 0x361f);            /* call 0x100763a0 */
    II(0x10072d81, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072d83, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10072d86, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10072d8a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10072d8c, 0x2)   jnzd(0x10072d9f, 0x11);               /* jnz 0x10072d9f */
    II(0x10072d8e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072d91, 0x5)   calld(0x1007636c, 0x35d6);            /* call 0x1007636c */
    II(0x10072d96, 0x5)   calld(0x10072ae2, -0x2b9);            /* call 0x10072ae2 */
    II(0x10072d9b, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072d9d, 0x2)   jnzd(0x10072da1, 0x2);                /* jnz 0x10072da1 */
l_0x10072d9f:
    II(0x10072d9f, 0x2)   jmpd(0x10072da3, 0x2);                /* jmp 0x10072da3 */
l_0x10072da1:
    II(0x10072da1, 0x2)   jmpd(0x10072da8, 0x5);                /* jmp 0x10072da8 */
l_0x10072da3:
    II(0x10072da3, 0x5)   jmpd(0x10072cfe, -0xaa);              /* jmp 0x10072cfe */
l_0x10072da8:
    II(0x10072da8, 0x5)   jmpd(0x10072e57, 0xaa);               /* jmp 0x10072e57 */
l_0x10072dad:
    II(0x10072dad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072daf, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072db2, 0x5)   calld(0x1013ad71, 0xc7fba);           /* call 0x1013ad71 */
    II(0x10072db7, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072db9, 0x2)   jzd(0x10072dc3, 0x8);                 /* jz 0x10072dc3 */
    II(0x10072dbb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072dbe, 0x5)   calld(0x10076bc0, 0x3dfd);            /* call 0x10076bc0 */
l_0x10072dc3:
    II(0x10072dc3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072dc5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072dc8, 0x5)   calld(0x1013ad11, 0xc7f44);           /* call 0x1013ad11 */
    II(0x10072dcd, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072dcf, 0x2)   jzd(0x10072e0b, 0x3a);                /* jz 0x10072e0b */
    II(0x10072dd1, 0x4)   add(memd_a32(ss, ebp - 0x20), -0x1 /* 0xff */); /* add dword [ebp-0x20], 0xff */
    II(0x10072dd5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10072dd9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10072ddb, 0x2)   jged(0x10072de4, 0x7);                /* jge 0x10072de4 */
    II(0x10072ddd, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x4);   /* mov dword [ebp-0x20], 0x4 */
l_0x10072de4:
    II(0x10072de4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10072de8, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10072deb, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b77a0)); /* mov eax, [eax+0x101b77a0] */
    II(0x10072df1, 0x5)   calld(0x10076304, 0x350e);            /* call 0x10076304 */
    II(0x10072df6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10072df8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072dfb, 0x5)   calld(0x1007643c, 0x363c);            /* call 0x1007643c */
    II(0x10072e00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10072e03, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1c));    /* cmp ax, [ebp-0x1c] */
    II(0x10072e07, 0x2)   jzd(0x10072e0b, 0x2);                 /* jz 0x10072e0b */
    II(0x10072e09, 0x2)   jmpd(0x10072dc3, -0x48);              /* jmp 0x10072dc3 */
l_0x10072e0b:
    II(0x10072e0b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072e0d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072e10, 0x5)   calld(0x1013ad71, 0xc7f5c);           /* call 0x1013ad71 */
    II(0x10072e15, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072e17, 0x2)   jzd(0x10072e26, 0xd);                 /* jz 0x10072e26 */
    II(0x10072e19, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072e1c, 0x5)   calld(0x10076408, 0x35e7);            /* call 0x10076408 */
    II(0x10072e21, 0x3)   cmp(eax, memd_a32(ss, ebp - 0xc));    /* cmp eax, [ebp-0xc] */
    II(0x10072e24, 0x2)   jnzd(0x10072e28, 0x2);                /* jnz 0x10072e28 */
l_0x10072e26:
    II(0x10072e26, 0x2)   jmpd(0x10072e50, 0x28);               /* jmp 0x10072e50 */
l_0x10072e28:
    II(0x10072e28, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072e2b, 0x5)   calld(0x100763a0, 0x3570);            /* call 0x100763a0 */
    II(0x10072e30, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072e32, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10072e35, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10072e39, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10072e3b, 0x2)   jnzd(0x10072e4e, 0x11);               /* jnz 0x10072e4e */
    II(0x10072e3d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072e40, 0x5)   calld(0x1007636c, 0x3527);            /* call 0x1007636c */
    II(0x10072e45, 0x5)   calld(0x10072ae2, -0x368);            /* call 0x10072ae2 */
    II(0x10072e4a, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072e4c, 0x2)   jnzd(0x10072e50, 0x2);                /* jnz 0x10072e50 */
l_0x10072e4e:
    II(0x10072e4e, 0x2)   jmpd(0x10072e52, 0x2);                /* jmp 0x10072e52 */
l_0x10072e50:
    II(0x10072e50, 0x2)   jmpd(0x10072e57, 0x5);                /* jmp 0x10072e57 */
l_0x10072e52:
    II(0x10072e52, 0x5)   jmpd(0x10072dad, -0xaa);              /* jmp 0x10072dad */
l_0x10072e57:
    II(0x10072e57, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072e59, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072e5c, 0x5)   calld(0x1013ad11, 0xc7eb0);           /* call 0x1013ad11 */
    II(0x10072e61, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072e63, 0x2)   jnzd(0x10072e76, 0x11);               /* jnz 0x10072e76 */
    II(0x10072e65, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072e68, 0x5)   calld(0x1007636c, 0x34ff);            /* call 0x1007636c */
    II(0x10072e6d, 0x5)   calld(0x10072ae2, -0x390);            /* call 0x10072ae2 */
    II(0x10072e72, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072e74, 0x2)   jnzd(0x10072e89, 0x13);               /* jnz 0x10072e89 */
l_0x10072e76:
    II(0x10072e76, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x10072e7d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072e7f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072e82, 0x5)   calld(0x10075f6c, 0x30e5);            /* call 0x10075f6c */
    II(0x10072e87, 0x2)   jmpd(0x10072eaa, 0x21);               /* jmp 0x10072eaa */
l_0x10072e89:
    II(0x10072e89, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072e8c, 0x5)   calld(0x10076408, 0x3577);            /* call 0x10076408 */
    II(0x10072e91, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10072e94, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072e96, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10072e99, 0x5)   calld(0x10075f6c, 0x30ce);            /* call 0x10075f6c */
    II(0x10072e9e, 0x2)   jmpd(0x10072eaa, 0xa);                /* jmp 0x10072eaa */
//  II(0x10072ea0, 0xa)   /* Недостижимый код. */
l_0x10072eaa:
    II(0x10072eaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10072ead, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10072eaf, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10072eb0, 0x1)   popd(edi);                            /* pop edi */
    II(0x10072eb1, 0x1)   popd(esi);                            /* pop esi */
    II(0x10072eb2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10072eb3, 0x1)   retd();                               /* ret */
FUNC_END

