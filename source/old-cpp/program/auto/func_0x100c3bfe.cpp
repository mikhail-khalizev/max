FUNC_BEGIN(0x100c3bfe, 0xe1bd12144b427d39, 0x20, ({0x68, 0x88, 0, 0, 0, 0xe8, 0x4a, 0x21, 0xa, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x70, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xf9, 0x43, 0xff, 0xff, 0x89, 0x45, 0xb4, 0x8b, 0x55, 0xb4, 0x8b, 0x5a, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xb4, 0x8b, 0x52, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xb8, 0xe8, 0x6c, 0x2e, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x48, 0x78, 0, 0, 0x89, 0x45, 0xe0, 0x8d, 0x55, 0xbc, 0x8b, 0x45, 0xfc, 0xe8, 0x36, 0x44, 0xff, 0xff, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xc4, 0xe8, 0x3, 0x22, 0xfb, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xb8, 0x8d, 0x45, 0xc0, 0xe8, 0xf6, 0x21, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0x55, 0x23, 0xfe, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xe0, 0x29, 0x45, 0xd8, 0x8b, 0x45, 0xb4, 0xe8, 0xaa, 0x25, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xd8, 0x66, 0x3b, 0x42, 0x10, 0x7d, 0x9, 0xc6, 0x45, 0xf0, 0, 0xe9, 0x3, 0x2, 0, 0, 0x8b, 0x45, 0xb4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x9e, 0x4b, 0xff, 0xff, 0x88, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0xa1, 0x77, 0, 0, 0x88, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6d, 0xe8, 0x7f, 0x75, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xc8, 0xe8, 0xc1, 0x74, 0, 0, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0xa, 0x2e, 0xfb, 0xff, 0x8d, 0x45, 0xd4, 0xe8, 0x2, 0x2e, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xc8, 0xe8, 0, 0x2f, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x6f, 0x70, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x64, 0x1, 0, 0, 0x8d, 0x45, 0xc8, 0xe8, 0xda, 0x73, 0, 0, 0xe8, 0xdd, 0x75, 0, 0, 0x3a, 0x45, 0xec, 0xf, 0x85, 0x49, 0x1, 0, 0, 0x8d, 0x55, 0xb8, 0x8d, 0x45, 0xb0, 0xe8, 0x39, 0x21, 0xfb, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xac, 0x8d, 0x45, 0xc8, 0xe8, 0xb4, 0x73, 0, 0, 0xe8, 0x5, 0x4e, 0xff, 0xff, 0x8d, 0x5d, 0xd0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xfb, 0x4d, 0xfc, 0xff, 0x8d, 0x55, 0xd0, 0x8d, 0x45, 0xa8, 0xe8, 0x10, 0x21, 0xfb, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xb8, 0x8d, 0x45, 0xa4, 0xe8, 0x3, 0x21, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0x62, 0x22, 0xfe, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xe8, 0x8d, 0x55, 0xd0, 0x8d, 0x45, 0xa0, 0xe8, 0xe2, 0x20, 0xfb, 0xff, 0x89, 0xc1, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0x9c, 0xe8, 0xd5, 0x20, 0xfb, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0x98, 0x8d, 0x45, 0xc8, 0xe8, 0x50, 0x73, 0, 0, 0xe8, 0xc, 0x4c, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0x99, 0x4d, 0xfc, 0xff, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0x94, 0xe8, 0xae, 0x20, 0xfb, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0x90, 0xe8, 0xa1, 0x20, 0xfb, 0xff, 0x89, 0xda, 0xe8, 0, 0x22, 0xfe, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe0, 0x29, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7d, 0x7, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd8, 0xbb, 0x3, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xe4, 0x39, 0xc2, 0x7d, 0x18, 0xf, 0xbf, 0x55, 0xd8, 0xbb, 0x3, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xe8, 0x39, 0xc2, 0x7c, 0x2, 0xeb, 0x1b, 0x80, 0x7d, 0xf4, 0, 0x75, 0x13, 0x8d, 0x45, 0xc8, 0xe8, 0xbe, 0x72, 0, 0, 0xe8, 0x8d, 0x74, 0, 0, 0x66, 0x3d, 0xff, 0xff, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x2c, 0x83, 0x7d, 0xcc, 0, 0x74, 0x12, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe8, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xdc, 0x39, 0xc2, 0x7d, 0x14, 0x8d, 0x45, 0xc8, 0xe8, 0xc3, 0x72, 0, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xe4, 0x3, 0x45, 0xe8, 0x89, 0x45, 0xdc, 0xe9, 0x82, 0xfe, 0xff, 0xff, 0x83, 0x7d, 0xcc, 0, 0x75, 0x10, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xd2, 0x66, 0, 0, 0xeb, 0x25, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xcc, 0xe8, 0x4, 0x4d, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xb7, 0x66, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xab, 0x66, 0, 0, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100c3bfe, 0x5)   pushd(0x88);                          /* push dword 0x88 */
    II(0x100c3c03, 0x5)   calld(sys_check_available_stack_size, 0xa214a); /* call 0x10165d52 */
    II(0x100c3c08, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100c3c09, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c3c0a, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c3c0b, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c3c0c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c3c0d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c3c0f, 0x6)   sub(esp, 0x70);                       /* sub esp, 0x70 */
    II(0x100c3c15, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100c3c18, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100c3c1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3c1e, 0x5)   calld(my__get_unit, -0xbc07);         /* call 0x100b801c */
    II(0x100c3c23, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100c3c26, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4c));   /* mov edx, [ebp-0x4c] */
    II(0x100c3c29, 0x3)   mov(ebx, memd_a32(ds, edx + 0x1a));   /* mov ebx, [edx+0x1a] */
    II(0x100c3c2c, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c3c2f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4c));   /* mov edx, [ebp-0x4c] */
    II(0x100c3c32, 0x3)   mov(edx, memd_a32(ds, edx + 0x18));   /* mov edx, [edx+0x18] */
    II(0x100c3c35, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c3c38, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100c3c3b, 0x5)   calld(0x10076aac, -0x4d194);          /* call 0x10076aac */
    II(0x100c3c40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3c43, 0x5)   calld(0x100cb490, 0x7848);            /* call 0x100cb490 */
    II(0x100c3c48, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100c3c4b, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x100c3c4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3c51, 0x5)   calld(0x100b808c, -0xbbca);           /* call 0x100b808c */
    II(0x100c3c56, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x100c3c59, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100c3c5c, 0x5)   calld(0x10075e64, -0x4ddfd);          /* call 0x10075e64 */
    II(0x100c3c61, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c3c63, 0x3)   lea(edx, ebp - 0x48);                 /* lea edx, [ebp-0x48] */
    II(0x100c3c66, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100c3c69, 0x5)   calld(0x10075e64, -0x4de0a);          /* call 0x10075e64 */
    II(0x100c3c6e, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c3c70, 0x5)   calld(0x100a5fca, -0x1dcab);          /* call 0x100a5fca */
    II(0x100c3c75, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c3c78, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c3c7a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c3c7d, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c3c7f, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c3c81, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100c3c84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100c3c87, 0x3)   sub(memd_a32(ss, ebp - 0x28), eax);   /* sub [ebp-0x28], eax */
    II(0x100c3c8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100c3c8d, 0x5)   calld(0x1007623c, -0x4da56);          /* call 0x1007623c */
    II(0x100c3c92, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3c94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100c3c97, 0x4)   cmp(ax, memw_a32(ds, edx + 0x10));    /* cmp ax, [edx+0x10] */
    II(0x100c3c9b, 0x2)   jged(0x100c3ca6, 0x9);                /* jge 0x100c3ca6 */
    II(0x100c3c9d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100c3ca1, 0x5)   jmpd(0x100c3ea9, 0x203);              /* jmp 0x100c3ea9 */
l_0x100c3ca6:
    II(0x100c3ca6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100c3ca9, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100c3cac, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c3caf, 0x5)   calld(0x100b8852, -0xb462);           /* call 0x100b8852 */
    II(0x100c3cb4, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100c3cb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3cba, 0x5)   calld(0x100cb460, 0x77a1);            /* call 0x100cb460 */
    II(0x100c3cbf, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x100c3cc2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3cc5, 0x3)   add(eax, 0x6d);                       /* add eax, 0x6d */
    II(0x100c3cc8, 0x5)   calld(0x100cb24c, 0x757f);            /* call 0x100cb24c */
    II(0x100c3ccd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3ccf, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3cd2, 0x5)   calld(0x100cb198, 0x74c1);            /* call 0x100cb198 */
    II(0x100c3cd7, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x100c3cde, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c3ce1, 0x5)   calld(my_ctor_0x101b4184, -0x4d1f6);  /* call 0x10076af0 */
    II(0x100c3ce6, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c3ce9, 0x5)   calld(my_ctor_0x101b4184, -0x4d1fe);  /* call 0x10076af0 */
    II(0x100c3cee, 0x2)   jmpd(0x100c3cf8, 0x8);                /* jmp 0x100c3cf8 */
l_0x100c3cf0:
    II(0x100c3cf0, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3cf3, 0x5)   calld(0x10076bf8, -0x4d100);          /* call 0x10076bf8 */
l_0x100c3cf8:
    II(0x100c3cf8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3cfa, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3cfd, 0x5)   calld(0x1013ad71, 0x7706f);           /* call 0x1013ad71 */
    II(0x100c3d02, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c3d04, 0x6)   jzd(0x100c3e6e, 0x164);               /* jz dword 0x100c3e6e */
    II(0x100c3d0a, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3d0d, 0x5)   calld(0x100cb0ec, 0x73da);            /* call 0x100cb0ec */
    II(0x100c3d12, 0x5)   calld(0x100cb2f4, 0x75dd);            /* call 0x100cb2f4 */
    II(0x100c3d17, 0x3)   cmp(al, memb_a32(ss, ebp - 0x14));    /* cmp al, [ebp-0x14] */
    II(0x100c3d1a, 0x6)   jnzd(0x100c3e69, 0x149);              /* jnz dword 0x100c3e69 */
    II(0x100c3d20, 0x3)   lea(edx, ebp - 0x48);                 /* lea edx, [ebp-0x48] */
    II(0x100c3d23, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100c3d26, 0x5)   calld(0x10075e64, -0x4dec7);          /* call 0x10075e64 */
    II(0x100c3d2b, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c3d2d, 0x3)   lea(edx, ebp - 0x54);                 /* lea edx, [ebp-0x54] */
    II(0x100c3d30, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3d33, 0x5)   calld(0x100cb0ec, 0x73b4);            /* call 0x100cb0ec */
    II(0x100c3d38, 0x5)   calld(0x100b8b42, -0xb1fb);           /* call 0x100b8b42 */
    II(0x100c3d3d, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x100c3d40, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3d42, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c3d44, 0x5)   calld(0x10088b44, -0x3b205);          /* call 0x10088b44 */
    II(0x100c3d49, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100c3d4c, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100c3d4f, 0x5)   calld(0x10075e64, -0x4def0);          /* call 0x10075e64 */
    II(0x100c3d54, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c3d56, 0x3)   lea(edx, ebp - 0x48);                 /* lea edx, [ebp-0x48] */
    II(0x100c3d59, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100c3d5c, 0x5)   calld(0x10075e64, -0x4defd);          /* call 0x10075e64 */
    II(0x100c3d61, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c3d63, 0x5)   calld(0x100a5fca, -0x1dd9e);          /* call 0x100a5fca */
    II(0x100c3d68, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c3d6b, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c3d6d, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c3d70, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c3d72, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c3d74, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100c3d77, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100c3d7a, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c3d7d, 0x5)   calld(0x10075e64, -0x4df1e);          /* call 0x10075e64 */
    II(0x100c3d82, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100c3d84, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x100c3d87, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100c3d8a, 0x5)   calld(0x10075e64, -0x4df2b);          /* call 0x10075e64 */
    II(0x100c3d8f, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c3d91, 0x3)   lea(edx, ebp - 0x68);                 /* lea edx, [ebp-0x68] */
    II(0x100c3d94, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3d97, 0x5)   calld(0x100cb0ec, 0x7350);            /* call 0x100cb0ec */
    II(0x100c3d9c, 0x5)   calld(0x100b89ad, -0xb3f4);           /* call 0x100b89ad */
    II(0x100c3da1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3da3, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100c3da6, 0x5)   calld(0x10088b44, -0x3b267);          /* call 0x10088b44 */
    II(0x100c3dab, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100c3dae, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100c3db1, 0x5)   calld(0x10075e64, -0x4df52);          /* call 0x10075e64 */
    II(0x100c3db6, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c3db8, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x100c3dbb, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x100c3dbe, 0x5)   calld(0x10075e64, -0x4df5f);          /* call 0x10075e64 */
    II(0x100c3dc3, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100c3dc5, 0x5)   calld(0x100a5fca, -0x1de00);          /* call 0x100a5fca */
    II(0x100c3dca, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c3dcd, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c3dcf, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c3dd2, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100c3dd4, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100c3dd6, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100c3dd9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100c3ddc, 0x3)   sub(memd_a32(ss, ebp - 0x1c), eax);   /* sub [ebp-0x1c], eax */
    II(0x100c3ddf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100c3de3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c3de5, 0x2)   jged(0x100c3dee, 0x7);                /* jge 0x100c3dee */
    II(0x100c3de7, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x100c3dee:
    II(0x100c3dee, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c3df2, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x100c3df7, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c3df9, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c3dfc, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100c3dfe, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100c3e02, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c3e04, 0x2)   jged(0x100c3e1e, 0x18);               /* jge 0x100c3e1e */
    II(0x100c3e06, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100c3e0a, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x100c3e0f, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100c3e11, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100c3e14, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100c3e16, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c3e1a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c3e1c, 0x2)   jld(0x100c3e20, 0x2);                 /* jl 0x100c3e20 */
l_0x100c3e1e:
    II(0x100c3e1e, 0x2)   jmpd(0x100c3e3b, 0x1b);               /* jmp 0x100c3e3b */
l_0x100c3e20:
    II(0x100c3e20, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x100c3e24, 0x2)   jnzd(0x100c3e39, 0x13);               /* jnz 0x100c3e39 */
    II(0x100c3e26, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3e29, 0x5)   calld(0x100cb0ec, 0x72be);            /* call 0x100cb0ec */
    II(0x100c3e2e, 0x5)   calld(0x100cb2c0, 0x748d);            /* call 0x100cb2c0 */
    II(0x100c3e33, 0x4)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x100c3e37, 0x2)   jnzd(0x100c3e3b, 0x2);                /* jnz 0x100c3e3b */
l_0x100c3e39:
    II(0x100c3e39, 0x2)   jmpd(0x100c3e3d, 0x2);                /* jmp 0x100c3e3d */
l_0x100c3e3b:
    II(0x100c3e3b, 0x2)   jmpd(0x100c3e69, 0x2c);               /* jmp 0x100c3e69 */
l_0x100c3e3d:
    II(0x100c3e3d, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100c3e41, 0x2)   jzd(0x100c3e55, 0x12);                /* jz 0x100c3e55 */
    II(0x100c3e43, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100c3e47, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c3e4b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c3e4d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100c3e51, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c3e53, 0x2)   jged(0x100c3e69, 0x14);               /* jge 0x100c3e69 */
l_0x100c3e55:
    II(0x100c3e55, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3e58, 0x5)   calld(0x100cb120, 0x72c3);            /* call 0x100cb120 */
    II(0x100c3e5d, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100c3e60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100c3e63, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x100c3e66, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100c3e69:
    II(0x100c3e69, 0x5)   jmpd(0x100c3cf0, -0x17e);             /* jmp 0x100c3cf0 */
l_0x100c3e6e:
    II(0x100c3e6e, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100c3e72, 0x2)   jnzd(0x100c3e84, 0x10);               /* jnz 0x100c3e84 */
    II(0x100c3e74, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100c3e78, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3e7a, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3e7d, 0x5)   calld(0x100ca554, 0x66d2);            /* call 0x100ca554 */
    II(0x100c3e82, 0x2)   jmpd(0x100c3ea9, 0x25);               /* jmp 0x100c3ea9 */
l_0x100c3e84:
    II(0x100c3e84, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c3e87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100c3e8a, 0x5)   calld(0x100b8b93, -0xb2fc);           /* call 0x100b8b93 */
    II(0x100c3e8f, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x100c3e93, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3e95, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c3e98, 0x5)   calld(0x100ca554, 0x66b7);            /* call 0x100ca554 */
    II(0x100c3e9d, 0x2)   jmpd(0x100c3ea9, 0xa);                /* jmp 0x100c3ea9 */
//  II(0x100c3e9f, 0xa)   /* Недостижимый код. */
l_0x100c3ea9:
    II(0x100c3ea9, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x100c3eac, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c3eae, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c3eaf, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c3eb0, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c3eb1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c3eb2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100c3eb3, 0x1)   retd();                               /* ret */
FUNC_END

