FUNC_BEGIN(0x101158d2, 0xfa54bc34c76cf290, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x76, 0x4, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xc7, 0x45, 0xe4, 0x64, 0x4e, 0x1c, 0x10, 0xc6, 0x45, 0xed, 0, 0xf, 0xbf, 0x45, 0xf0, 0x3, 0x45, 0xf8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xa, 0x75, 0x67, 0xf, 0xbf, 0x55, 0xf4, 0xa1, 0xb0, 0x52, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x50, 0x15, 0xf6, 0xff, 0x66, 0xa3, 0xb2, 0x52, 0x1c, 0x10, 0x66, 0x83, 0x5, 0xb4, 0x52, 0x1c, 0x10, 0xa, 0x66, 0xa1, 0xb0, 0x52, 0x1c, 0x10, 0x66, 0xff, 0x5, 0xb0, 0x52, 0x1c, 0x10, 0x98, 0xc6, 0x80, 0x64, 0x4e, 0x1c, 0x10, 0x20, 0x66, 0xa1, 0xb0, 0x52, 0x1c, 0x10, 0x66, 0xff, 0x5, 0xb0, 0x52, 0x1c, 0x10, 0x98, 0xc6, 0x80, 0x64, 0x4e, 0x1c, 0x10, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xa1, 0xae, 0x52, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xba, 0x64, 0x4e, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe4, 0xe9, 0xed, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0x3, 0x45, 0xf8, 0x8a, 0, 0x88, 0x45, 0xec, 0x8d, 0x45, 0xec, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xe8, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x7e, 0x6f, 0xa1, 0xae, 0x52, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xba, 0x64, 0x4e, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe0, 0x8b, 0x45, 0xe0, 0xff, 0x4d, 0xe0, 0xc6, 0, 0, 0x8b, 0x45, 0xe0, 0x80, 0x38, 0x20, 0x74, 0x8, 0x8b, 0x45, 0xe0, 0xff, 0x4d, 0xe0, 0xeb, 0xf0, 0x8b, 0x45, 0xe0, 0xc6, 0, 0, 0x8b, 0x45, 0xe4, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xf4, 0xa1, 0xb0, 0x52, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x82, 0x14, 0xf6, 0xff, 0x66, 0xa3, 0xb2, 0x52, 0x1c, 0x10, 0x8b, 0x45, 0xe0, 0x40, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x89, 0x45, 0xf4, 0x66, 0x83, 0x5, 0xb4, 0x52, 0x1c, 0x10, 0xa, 0x8b, 0x45, 0xe8, 0x1, 0x45, 0xf4, 0xa1, 0xae, 0x52, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x3d, 0x20, 0x3, 0, 0, 0x73, 0x9, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x71, 0, 0, 0, 0xbb, 0xc4, 0x7a, 0x1a, 0x10, 0xba, 0xd1, 0x7a, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x43, 0x3, 0x5, 0, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xf0, 0x3, 0x55, 0xf8, 0x66, 0xa1, 0xb0, 0x52, 0x1c, 0x10, 0x66, 0xff, 0x5, 0xb0, 0x52, 0x1c, 0x10, 0x98, 0x8a, 0x12, 0x88, 0x90, 0x64, 0x4e, 0x1c, 0x10, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x98, 0x3, 0x45, 0xf8, 0x80, 0x38, 0, 0xf, 0x85, 0x86, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xf4, 0xa1, 0xb0, 0x52, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xe9, 0x13, 0xf6, 0xff, 0x66, 0xa3, 0xb2, 0x52, 0x1c, 0x10, 0x66, 0x83, 0x5, 0xb4, 0x52, 0x1c, 0x10, 0xa, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101158d2, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x101158d7, 0x5)   calld(sys_check_available_stack_size, 0x50476); /* call 0x10165d52 */
    II(0x101158dc, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101158dd, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101158de, 0x1)   pushd(esi);                           /* push esi */
    II(0x101158df, 0x1)   pushd(edi);                           /* push edi */
    II(0x101158e0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101158e1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101158e3, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x101158e9, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101158ec, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101158ef, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x101158f6, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x101158fd, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x101c4e64); /* mov dword [ebp-0x1c], 0x101c4e64 */
    II(0x10115904, 0x4)   mov(memb_a32(ss, ebp - 0x13), 0);     /* mov byte [ebp-0x13], 0x0 */
l_0x10115908:
    II(0x10115908, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1011590c, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1011590f, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10115911, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10115916, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x10115919, 0x2)   jnzd(0x10115982, 0x67);               /* jnz 0x10115982 */
    II(0x1011591b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1011591f, 0x5)   mov(eax, memd_a32(ds, 0x101c52b0));   /* mov eax, [0x101c52b0] */
    II(0x10115924, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10115927, 0x5)   calld(0x10076e7c, -0x9eab0);          /* call 0x10076e7c */
    II(0x1011592c, 0x6)   mov(memw_a32(ds, 0x101c52b2), ax);    /* mov [0x101c52b2], ax */
    II(0x10115932, 0x8)   add(memw_a32(ds, 0x101c52b4), 0xa);   /* add word [0x101c52b4], 0xa */
    II(0x1011593a, 0x6)   mov(ax, memw_a32(ds, 0x101c52b0));    /* mov ax, [0x101c52b0] */
    II(0x10115940, 0x7)   inc(memw_a32(ds, 0x101c52b0));        /* inc word [0x101c52b0] */
    II(0x10115947, 0x1)   cwde();                               /* cwde */
    II(0x10115948, 0x7)   mov(memb_a32(ds, eax + 0x101c4e64), 0x20); /* mov byte [eax+0x101c4e64], 0x20 */
    II(0x1011594f, 0x6)   mov(ax, memw_a32(ds, 0x101c52b0));    /* mov ax, [0x101c52b0] */
    II(0x10115955, 0x7)   inc(memw_a32(ds, 0x101c52b0));        /* inc word [0x101c52b0] */
    II(0x1011595c, 0x1)   cwde();                               /* cwde */
    II(0x1011595d, 0x7)   mov(memb_a32(ds, eax + 0x101c4e64), 0); /* mov byte [eax+0x101c4e64], 0x0 */
    II(0x10115964, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1011596b, 0x5)   mov(eax, memd_a32(ds, 0x101c52ae));   /* mov eax, [0x101c52ae] */
    II(0x10115970, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10115973, 0x5)   mov(edx, 0x101c4e64);                 /* mov edx, 0x101c4e64 */
    II(0x10115978, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011597a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x1011597d, 0x5)   jmpd(0x10115a6f, 0xed);               /* jmp 0x10115a6f */
l_0x10115982:
    II(0x10115982, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10115986, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10115989, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1011598b, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x1011598e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10115991, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x10115997, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011599a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1011599e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x101159a2, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101159a4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101159a8, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x101159aa, 0x2)   jled(0x10115a1b, 0x6f);               /* jle 0x10115a1b */
    II(0x101159ac, 0x5)   mov(eax, memd_a32(ds, 0x101c52ae));   /* mov eax, [0x101c52ae] */
    II(0x101159b1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101159b4, 0x5)   mov(edx, 0x101c4e64);                 /* mov edx, 0x101c4e64 */
    II(0x101159b9, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101159bb, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x101159be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101159c1, 0x3)   dec(memd_a32(ss, ebp - 0x20));        /* dec dword [ebp-0x20] */
    II(0x101159c4, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x101159c7:
    II(0x101159c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101159ca, 0x3)   cmp(memb_a32(ds, eax), 0x20);         /* cmp byte [eax], 0x20 */
    II(0x101159cd, 0x2)   jzd(0x101159d7, 0x8);                 /* jz 0x101159d7 */
    II(0x101159cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101159d2, 0x3)   dec(memd_a32(ss, ebp - 0x20));        /* dec dword [ebp-0x20] */
    II(0x101159d5, 0x2)   jmpd(0x101159c7, -0x10);              /* jmp 0x101159c7 */
l_0x101159d7:
    II(0x101159d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101159da, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
    II(0x101159dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101159e0, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x101159e6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101159e9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x101159ed, 0x5)   mov(eax, memd_a32(ds, 0x101c52b0));   /* mov eax, [0x101c52b0] */
    II(0x101159f2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101159f5, 0x5)   calld(0x10076e7c, -0x9eb7e);          /* call 0x10076e7c */
    II(0x101159fa, 0x6)   mov(memw_a32(ds, 0x101c52b2), ax);    /* mov [0x101c52b2], ax */
    II(0x10115a00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10115a03, 0x1)   inc(eax);                             /* inc eax */
    II(0x10115a04, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x10115a07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10115a0a, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x10115a10, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10115a13, 0x8)   add(memw_a32(ds, 0x101c52b4), 0xa);   /* add word [0x101c52b4], 0xa */
l_0x10115a1b:
    II(0x10115a1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10115a1e, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
    II(0x10115a21, 0x5)   mov(eax, memd_a32(ds, 0x101c52ae));   /* mov eax, [0x101c52ae] */
    II(0x10115a26, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10115a29, 0x5)   cmp(eax, 0x320);                      /* cmp eax, 0x320 */
    II(0x10115a2e, 0x2)   jaed(0x10115a39, 0x9);                /* jae 0x10115a39 */
    II(0x10115a30, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x10115a37, 0x2)   jmpd(0x10115a52, 0x19);               /* jmp 0x10115a52 */
l_0x10115a39:
    II(0x10115a39, 0x5)   mov(ecx, 0x71);                       /* mov ecx, 0x71 */
    II(0x10115a3e, 0x5)   mov(ebx, 0x101a7ac4);                 /* mov ebx, 0x101a7ac4 */ /* "mssgsmgr.cpp" */
    II(0x10115a43, 0x5)   mov(edx, 0x101a7ad1);                 /* mov edx, 0x101a7ad1 */ /* "mssglen < sizeof( mssgbfr )" */
    II(0x10115a48, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10115a4a, 0x5)   calld(sys_assert, 0x50343);           /* call 0x10165d92 */
    II(0x10115a4f, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x10115a52:
    II(0x10115a52, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10115a56, 0x3)   add(edx, memd_a32(ss, ebp - 0x8));    /* add edx, [ebp-0x8] */
    II(0x10115a59, 0x6)   mov(ax, memw_a32(ds, 0x101c52b0));    /* mov ax, [0x101c52b0] */
    II(0x10115a5f, 0x7)   inc(memw_a32(ds, 0x101c52b0));        /* inc word [0x101c52b0] */
    II(0x10115a66, 0x1)   cwde();                               /* cwde */
    II(0x10115a67, 0x2)   mov(dl, memb_a32(ds, edx));           /* mov dl, [edx] */
    II(0x10115a69, 0x6)   mov(memb_a32(ds, eax + 0x101c4e64), dl); /* mov [eax+0x101c4e64], dl */
l_0x10115a6f:
    II(0x10115a6f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10115a72, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x10115a75, 0x1)   cwde();                               /* cwde */
    II(0x10115a76, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10115a79, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x10115a7c, 0x6)   jnzd(0x10115908, -0x17a);             /* jnz dword 0x10115908 */
    II(0x10115a82, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10115a86, 0x5)   mov(eax, memd_a32(ds, 0x101c52b0));   /* mov eax, [0x101c52b0] */
    II(0x10115a8b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10115a8e, 0x5)   calld(0x10076e7c, -0x9ec17);          /* call 0x10076e7c */
    II(0x10115a93, 0x6)   mov(memw_a32(ds, 0x101c52b2), ax);    /* mov [0x101c52b2], ax */
    II(0x10115a99, 0x8)   add(memw_a32(ds, 0x101c52b4), 0xa);   /* add word [0x101c52b4], 0xa */
    II(0x10115aa1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10115aa3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10115aa4, 0x1)   popd(edi);                            /* pop edi */
    II(0x10115aa5, 0x1)   popd(esi);                            /* pop esi */
    II(0x10115aa6, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10115aa7, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10115aa8, 0x1)   retd();                               /* ret */
FUNC_END

