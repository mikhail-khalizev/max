FUNC_BEGIN(/* sys */ 0x1016ced0, 0xcfe1050681a7c793, 0x20, ({0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x83, 0xec, 0xc, 0x89, 0x44, 0x24, 0x8, 0x89, 0xc3, 0x31, 0xc9, 0xc1, 0xe3, 0x8, 0x8b, 0x44, 0x24, 0x8, 0x80, 0xb8, 0x20, 0x4, 0x1d, 0x10, 0, 0x75, 0x1a, 0x80, 0xb9, 0x20, 0x4, 0x1d, 0x10, 0, 0x74, 0x1a, 0x88, 0x8b, 0x20, 0x5, 0x1d, 0x10, 0x88, 0x8b, 0x20, 0x5, 0x1f, 0x10, 0xe9, 0xb7, 0x1, 0, 0, 0x80, 0xb9, 0x20, 0x4, 0x1d, 0x10, 0, 0x75, 0xf, 0x8a, 0x44, 0x24, 0x8, 0x88, 0x83, 0x20, 0x5, 0x1d, 0x10, 0xe9, 0x99, 0x1, 0, 0, 0xf, 0xb6, 0x7c, 0x24, 0x8, 0x89, 0xf8, 0xf, 0xb6, 0xe9, 0xe8, 0xb6, 0xfb, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xe8, 0x81, 0xe2, 0, 0x7c, 0, 0, 0xe8, 0xa7, 0xfb, 0xff, 0xff, 0x25, 0, 0x7c, 0, 0, 0xc1, 0xfa, 0xa, 0xc1, 0xf8, 0xa, 0x1, 0xc2, 0x89, 0xf8, 0xe8, 0x93, 0xfb, 0xff, 0xff, 0x25, 0xe0, 0x3, 0, 0, 0xc1, 0xf8, 0x5, 0x89, 0x4, 0x24, 0x89, 0xe8, 0xe8, 0x81, 0xfb, 0xff, 0xff, 0x25, 0xe0, 0x3, 0, 0, 0x8b, 0x34, 0x24, 0xc1, 0xf8, 0x5, 0x1, 0xc6, 0x89, 0xf8, 0xe8, 0x6d, 0xfb, 0xff, 0xff, 0x83, 0xe0, 0x1f, 0x89, 0x4, 0x24, 0x89, 0xe8, 0x8b, 0x3c, 0x24, 0xe8, 0x5d, 0xfb, 0xff, 0xff, 0x83, 0xe0, 0x1f, 0x89, 0x54, 0x24, 0x4, 0x1, 0xf8, 0x39, 0xd6, 0x7e, 0x4, 0x89, 0x74, 0x24, 0x4, 0x3b, 0x44, 0x24, 0x4, 0x7e, 0x4, 0x89, 0x44, 0x24, 0x4, 0x8b, 0x7c, 0x24, 0x4, 0x83, 0xff, 0x1f, 0x7e, 0x60, 0x83, 0xef, 0x1f, 0x29, 0xfa, 0x29, 0xfe, 0x29, 0xf8, 0x85, 0xd2, 0x7d, 0x2, 0x31, 0xd2, 0x85, 0xf6, 0x7d, 0x2, 0x31, 0xf6, 0x85, 0xc0, 0x7d, 0x2, 0x31, 0xc0, 0xc1, 0xe2, 0xa, 0xc1, 0xe6, 0x5, 0x9, 0xf2, 0x9, 0xd0, 0x8a, 0x80, 0x20, 0x5, 0x20, 0x10, 0x25, 0xff, 0, 0, 0, 0xdb, 0x44, 0x24, 0x4, 0xdc, 0x5, 0x44, 0x2e, 0x1b, 0x10, 0xdc, 0xd, 0x34, 0x2e, 0x1b, 0x10, 0xd9, 0xe8, 0xde, 0xc1, 0x31, 0xd2, 0xdc, 0xd, 0x3c, 0x2e, 0x1b, 0x10, 0x88, 0xc2, 0xe8, 0x7c, 0x90, 0xff, 0xff, 0xdb, 0x1c, 0x24, 0x8b, 0x4, 0x24, 0xe8, 0xa7, 0xfa, 0xff, 0xff, 0xeb, 0x15, 0xc1, 0xe2, 0xa, 0xc1, 0xe6, 0x5, 0x9, 0xf2, 0x9, 0xd0, 0x8a, 0x80, 0x20, 0x5, 0x20, 0x10, 0x25, 0xff, 0, 0, 0, 0x88, 0x83, 0x20, 0x5, 0x1d, 0x10, 0x31, 0xd2, 0x8a, 0x54, 0x24, 0x8, 0x89, 0xd0, 0xf, 0xb6, 0xf1, 0xe8, 0xae, 0xfa, 0xff, 0xff, 0x89, 0xc7, 0x89, 0xf0, 0x81, 0xe7, 0, 0x7c, 0, 0, 0xe8, 0x9f, 0xfa, 0xff, 0xff, 0x25, 0, 0x7c, 0, 0, 0xc1, 0xff, 0xa, 0xc1, 0xf8, 0xa, 0xf, 0xaf, 0xc7, 0xc1, 0xf8, 0x5, 0x89, 0x4, 0x24, 0x89, 0xd0, 0xe8, 0x84, 0xfa, 0xff, 0xff, 0x89, 0xc7, 0x89, 0xf0, 0x81, 0xe7, 0xe0, 0x3, 0, 0, 0xe8, 0x75, 0xfa, 0xff, 0xff, 0x25, 0xe0, 0x3, 0, 0, 0xc1, 0xff, 0x5, 0xc1, 0xf8, 0x5, 0xf, 0xaf, 0xf8, 0x89, 0xd0, 0xe8, 0x60, 0xfa, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x57, 0xfa, 0xff, 0xff, 0x89, 0xc6, 0x83, 0xe2, 0x1f, 0x83, 0xe6, 0x1f, 0xf, 0xaf, 0xf2, 0xc1, 0xff, 0x5, 0x8b, 0x4, 0x24, 0x89, 0xfa, 0xc1, 0xe0, 0xa, 0xc1, 0xe2, 0x5, 0xc1, 0xfe, 0x5, 0x9, 0xd0, 0x9, 0xf0, 0x8a, 0x80, 0x20, 0x5, 0x20, 0x10, 0x25, 0xff, 0, 0, 0, 0x88, 0x83, 0x20, 0x5, 0x1f, 0x10, 0x41, 0x43, 0x81, 0xf9, 0, 0x1, 0, 0, 0xf, 0x8c, 0x14, 0xfe, 0xff, 0xff, 0x83, 0xc4, 0xc, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1016ced0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1016ced1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1016ced2, 0x1)   pushd(edx);                           /* push edx */
    II(0x1016ced3, 0x1)   pushd(esi);                           /* push esi */
    II(0x1016ced4, 0x1)   pushd(edi);                           /* push edi */
    II(0x1016ced5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1016ced6, 0x3)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x1016ced9, 0x4)   mov(memd_a32(ss, esp + 0x8), eax);    /* mov [esp+0x8], eax */
    II(0x1016cedd, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1016cedf, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1016cee1, 0x3)   shl(ebx, 0x8);                        /* shl ebx, 0x8 */
l_0x1016cee4:
    II(0x1016cee4, 0x4)   mov(eax, memd_a32(ss, esp + 0x8));    /* mov eax, [esp+0x8] */
    II(0x1016cee8, 0x7)   cmp(memb_a32(ds, eax + 0x101d0420), 0); /* cmp byte [eax+0x101d0420], 0x0 */
    II(0x1016ceef, 0x2)   jnzd(0x1016cf0b, 0x1a);               /* jnz 0x1016cf0b */
    II(0x1016cef1, 0x7)   cmp(memb_a32(ds, ecx + 0x101d0420), 0); /* cmp byte [ecx+0x101d0420], 0x0 */
    II(0x1016cef8, 0x2)   jzd(0x1016cf14, 0x1a);                /* jz 0x1016cf14 */
    II(0x1016cefa, 0x6)   mov(memb_a32(ds, ebx + 0x101d0520), cl); /* mov [ebx+0x101d0520], cl */
    II(0x1016cf00, 0x6)   mov(memb_a32(ds, ebx + 0x101f0520), cl); /* mov [ebx+0x101f0520], cl */
    II(0x1016cf06, 0x5)   jmpd(0x1016d0c2, 0x1b7);              /* jmp 0x1016d0c2 */
l_0x1016cf0b:
    II(0x1016cf0b, 0x7)   cmp(memb_a32(ds, ecx + 0x101d0420), 0); /* cmp byte [ecx+0x101d0420], 0x0 */
    II(0x1016cf12, 0x2)   jnzd(0x1016cf23, 0xf);                /* jnz 0x1016cf23 */
l_0x1016cf14:
    II(0x1016cf14, 0x4)   mov(al, memb_a32(ss, esp + 0x8));     /* mov al, [esp+0x8] */
    II(0x1016cf18, 0x6)   mov(memb_a32(ds, ebx + 0x101d0520), al); /* mov [ebx+0x101d0520], al */
    II(0x1016cf1e, 0x5)   jmpd(0x1016d0bc, 0x199);              /* jmp 0x1016d0bc */
l_0x1016cf23:
    II(0x1016cf23, 0x5)   movzx(edi, memb_a32(ss, esp + 0x8));  /* movzx edi, byte [esp+0x8] */
    II(0x1016cf28, 0x2)   mov(eax, edi);                        /* mov eax, edi */
    II(0x1016cf2a, 0x3)   movzx(ebp, cl);                       /* movzx ebp, cl */
    II(0x1016cf2d, 0x5)   calld(/* sys */ 0x1016cae8, -0x44a);  /* call 0x1016cae8 */
    II(0x1016cf32, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1016cf34, 0x2)   mov(eax, ebp);                        /* mov eax, ebp */
    II(0x1016cf36, 0x6)   and_(edx, 0x7c00);                    /* and edx, 0x7c00 */
    II(0x1016cf3c, 0x5)   calld(/* sys */ 0x1016cae8, -0x459);  /* call 0x1016cae8 */
    II(0x1016cf41, 0x5)   and_(eax, 0x7c00);                    /* and eax, 0x7c00 */
    II(0x1016cf46, 0x3)   sar(edx, 0xa);                        /* sar edx, 0xa */
    II(0x1016cf49, 0x3)   sar(eax, 0xa);                        /* sar eax, 0xa */
    II(0x1016cf4c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1016cf4e, 0x2)   mov(eax, edi);                        /* mov eax, edi */
    II(0x1016cf50, 0x5)   calld(/* sys */ 0x1016cae8, -0x46d);  /* call 0x1016cae8 */
    II(0x1016cf55, 0x5)   and_(eax, 0x3e0);                     /* and eax, 0x3e0 */
    II(0x1016cf5a, 0x3)   sar(eax, 0x5);                        /* sar eax, 0x5 */
    II(0x1016cf5d, 0x3)   mov(memd_a32(ss, esp), eax);          /* mov [esp], eax */
    II(0x1016cf60, 0x2)   mov(eax, ebp);                        /* mov eax, ebp */
    II(0x1016cf62, 0x5)   calld(/* sys */ 0x1016cae8, -0x47f);  /* call 0x1016cae8 */
    II(0x1016cf67, 0x5)   and_(eax, 0x3e0);                     /* and eax, 0x3e0 */
    II(0x1016cf6c, 0x3)   mov(esi, memd_a32(ss, esp));          /* mov esi, [esp] */
    II(0x1016cf6f, 0x3)   sar(eax, 0x5);                        /* sar eax, 0x5 */
    II(0x1016cf72, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x1016cf74, 0x2)   mov(eax, edi);                        /* mov eax, edi */
    II(0x1016cf76, 0x5)   calld(/* sys */ 0x1016cae8, -0x493);  /* call 0x1016cae8 */
    II(0x1016cf7b, 0x3)   and_(eax, 0x1f);                      /* and eax, 0x1f */
    II(0x1016cf7e, 0x3)   mov(memd_a32(ss, esp), eax);          /* mov [esp], eax */
    II(0x1016cf81, 0x2)   mov(eax, ebp);                        /* mov eax, ebp */
    II(0x1016cf83, 0x3)   mov(edi, memd_a32(ss, esp));          /* mov edi, [esp] */
    II(0x1016cf86, 0x5)   calld(/* sys */ 0x1016cae8, -0x4a3);  /* call 0x1016cae8 */
    II(0x1016cf8b, 0x3)   and_(eax, 0x1f);                      /* and eax, 0x1f */
    II(0x1016cf8e, 0x4)   mov(memd_a32(ss, esp + 0x4), edx);    /* mov [esp+0x4], edx */
    II(0x1016cf92, 0x2)   add(eax, edi);                        /* add eax, edi */
    II(0x1016cf94, 0x2)   cmp(esi, edx);                        /* cmp esi, edx */
    II(0x1016cf96, 0x2)   jled(0x1016cf9c, 0x4);                /* jle 0x1016cf9c */
    II(0x1016cf98, 0x4)   mov(memd_a32(ss, esp + 0x4), esi);    /* mov [esp+0x4], esi */
l_0x1016cf9c:
    II(0x1016cf9c, 0x4)   cmp(eax, memd_a32(ss, esp + 0x4));    /* cmp eax, [esp+0x4] */
    II(0x1016cfa0, 0x2)   jled(0x1016cfa6, 0x4);                /* jle 0x1016cfa6 */
    II(0x1016cfa2, 0x4)   mov(memd_a32(ss, esp + 0x4), eax);    /* mov [esp+0x4], eax */
l_0x1016cfa6:
    II(0x1016cfa6, 0x4)   mov(edi, memd_a32(ss, esp + 0x4));    /* mov edi, [esp+0x4] */
    II(0x1016cfaa, 0x3)   cmp(edi, 0x1f);                       /* cmp edi, 0x1f */
    II(0x1016cfad, 0x2)   jled(0x1016d00f, 0x60);               /* jle 0x1016d00f */
    II(0x1016cfaf, 0x3)   sub(edi, 0x1f);                       /* sub edi, 0x1f */
    II(0x1016cfb2, 0x2)   sub(edx, edi);                        /* sub edx, edi */
    II(0x1016cfb4, 0x2)   sub(esi, edi);                        /* sub esi, edi */
    II(0x1016cfb6, 0x2)   sub(eax, edi);                        /* sub eax, edi */
    II(0x1016cfb8, 0x2)   test(edx, edx);                       /* test edx, edx */
    II(0x1016cfba, 0x2)   jged(0x1016cfbe, 0x2);                /* jge 0x1016cfbe */
    II(0x1016cfbc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
l_0x1016cfbe:
    II(0x1016cfbe, 0x2)   test(esi, esi);                       /* test esi, esi */
    II(0x1016cfc0, 0x2)   jged(0x1016cfc4, 0x2);                /* jge 0x1016cfc4 */
    II(0x1016cfc2, 0x2)   xor_(esi, esi);                       /* xor esi, esi */
l_0x1016cfc4:
    II(0x1016cfc4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1016cfc6, 0x2)   jged(0x1016cfca, 0x2);                /* jge 0x1016cfca */
    II(0x1016cfc8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
l_0x1016cfca:
    II(0x1016cfca, 0x3)   shl(edx, 0xa);                        /* shl edx, 0xa */
    II(0x1016cfcd, 0x3)   shl(esi, 0x5);                        /* shl esi, 0x5 */
    II(0x1016cfd0, 0x2)   or_(edx, esi);                        /* or edx, esi */
    II(0x1016cfd2, 0x2)   or_(eax, edx);                        /* or eax, edx */
    II(0x1016cfd4, 0x6)   mov(al, memb_a32(ds, eax + 0x10200520)); /* mov al, [eax+0x10200520] */
    II(0x1016cfda, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1016cfdf, 0x4)   fild(memd_a32(ss, esp + 0x4));        /* fild dword [esp+0x4] */
    II(0x1016cfe3, 0x6)   fadd(memq_a32(ds, 0x101b2e44));       /* fadd qword [0x101b2e44] */
    II(0x1016cfe9, 0x6)   fmul(memq_a32(ds, 0x101b2e34));       /* fmul qword [0x101b2e34] */
    II(0x1016cfef, 0x2)   fld1();                               /* fld1 */
    II(0x1016cff1, 0x2)   faddp(0x1 /* st1 */, 0 /* st0 */);    /* faddp st1, st0 */
    II(0x1016cff3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1016cff5, 0x6)   fmul(memq_a32(ds, 0x101b2e3c));       /* fmul qword [0x101b2e3c] */
    II(0x1016cffb, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1016cffd, 0x5)   calld(sys_round, -0x6f84);            /* call 0x1016607e */
    II(0x1016d002, 0x3)   fistp(memd_a32(ss, esp));             /* fistp dword [esp] */
    II(0x1016d005, 0x3)   mov(eax, memd_a32(ss, esp));          /* mov eax, [esp] */
    II(0x1016d008, 0x5)   calld(/* sys */ 0x1016cab4, -0x559);  /* call 0x1016cab4 */
    II(0x1016d00d, 0x2)   jmpd(0x1016d024, 0x15);               /* jmp 0x1016d024 */
l_0x1016d00f:
    II(0x1016d00f, 0x3)   shl(edx, 0xa);                        /* shl edx, 0xa */
    II(0x1016d012, 0x3)   shl(esi, 0x5);                        /* shl esi, 0x5 */
    II(0x1016d015, 0x2)   or_(edx, esi);                        /* or edx, esi */
    II(0x1016d017, 0x2)   or_(eax, edx);                        /* or eax, edx */
    II(0x1016d019, 0x6)   mov(al, memb_a32(ds, eax + 0x10200520)); /* mov al, [eax+0x10200520] */
    II(0x1016d01f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
l_0x1016d024:
    II(0x1016d024, 0x6)   mov(memb_a32(ds, ebx + 0x101d0520), al); /* mov [ebx+0x101d0520], al */
    II(0x1016d02a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1016d02c, 0x4)   mov(dl, memb_a32(ss, esp + 0x8));     /* mov dl, [esp+0x8] */
    II(0x1016d030, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d032, 0x3)   movzx(esi, cl);                       /* movzx esi, cl */
    II(0x1016d035, 0x5)   calld(/* sys */ 0x1016cae8, -0x552);  /* call 0x1016cae8 */
    II(0x1016d03a, 0x2)   mov(edi, eax);                        /* mov edi, eax */
    II(0x1016d03c, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1016d03e, 0x6)   and_(edi, 0x7c00);                    /* and edi, 0x7c00 */
    II(0x1016d044, 0x5)   calld(/* sys */ 0x1016cae8, -0x561);  /* call 0x1016cae8 */
    II(0x1016d049, 0x5)   and_(eax, 0x7c00);                    /* and eax, 0x7c00 */
    II(0x1016d04e, 0x3)   sar(edi, 0xa);                        /* sar edi, 0xa */
    II(0x1016d051, 0x3)   sar(eax, 0xa);                        /* sar eax, 0xa */
    II(0x1016d054, 0x3)   imul(eax, edi);                       /* imul eax, edi */
    II(0x1016d057, 0x3)   sar(eax, 0x5);                        /* sar eax, 0x5 */
    II(0x1016d05a, 0x3)   mov(memd_a32(ss, esp), eax);          /* mov [esp], eax */
    II(0x1016d05d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d05f, 0x5)   calld(/* sys */ 0x1016cae8, -0x57c);  /* call 0x1016cae8 */
    II(0x1016d064, 0x2)   mov(edi, eax);                        /* mov edi, eax */
    II(0x1016d066, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1016d068, 0x6)   and_(edi, 0x3e0);                     /* and edi, 0x3e0 */
    II(0x1016d06e, 0x5)   calld(/* sys */ 0x1016cae8, -0x58b);  /* call 0x1016cae8 */
    II(0x1016d073, 0x5)   and_(eax, 0x3e0);                     /* and eax, 0x3e0 */
    II(0x1016d078, 0x3)   sar(edi, 0x5);                        /* sar edi, 0x5 */
    II(0x1016d07b, 0x3)   sar(eax, 0x5);                        /* sar eax, 0x5 */
    II(0x1016d07e, 0x3)   imul(edi, eax);                       /* imul edi, eax */
    II(0x1016d081, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1016d083, 0x5)   calld(/* sys */ 0x1016cae8, -0x5a0);  /* call 0x1016cae8 */
    II(0x1016d088, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1016d08a, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1016d08c, 0x5)   calld(/* sys */ 0x1016cae8, -0x5a9);  /* call 0x1016cae8 */
    II(0x1016d091, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x1016d093, 0x3)   and_(edx, 0x1f);                      /* and edx, 0x1f */
    II(0x1016d096, 0x3)   and_(esi, 0x1f);                      /* and esi, 0x1f */
    II(0x1016d099, 0x3)   imul(esi, edx);                       /* imul esi, edx */
    II(0x1016d09c, 0x3)   sar(edi, 0x5);                        /* sar edi, 0x5 */
    II(0x1016d09f, 0x3)   mov(eax, memd_a32(ss, esp));          /* mov eax, [esp] */
    II(0x1016d0a2, 0x2)   mov(edx, edi);                        /* mov edx, edi */
    II(0x1016d0a4, 0x3)   shl(eax, 0xa);                        /* shl eax, 0xa */
    II(0x1016d0a7, 0x3)   shl(edx, 0x5);                        /* shl edx, 0x5 */
    II(0x1016d0aa, 0x3)   sar(esi, 0x5);                        /* sar esi, 0x5 */
    II(0x1016d0ad, 0x2)   or_(eax, edx);                        /* or eax, edx */
    II(0x1016d0af, 0x2)   or_(eax, esi);                        /* or eax, esi */
    II(0x1016d0b1, 0x6)   mov(al, memb_a32(ds, eax + 0x10200520)); /* mov al, [eax+0x10200520] */
    II(0x1016d0b7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
l_0x1016d0bc:
    II(0x1016d0bc, 0x6)   mov(memb_a32(ds, ebx + 0x101f0520), al); /* mov [ebx+0x101f0520], al */
l_0x1016d0c2:
    II(0x1016d0c2, 0x1)   inc(ecx);                             /* inc ecx */
    II(0x1016d0c3, 0x1)   inc(ebx);                             /* inc ebx */
    II(0x1016d0c4, 0x6)   cmp(ecx, 0x100);                      /* cmp ecx, 0x100 */
    II(0x1016d0ca, 0x6)   jld(0x1016cee4, -0x1ec);              /* jl dword 0x1016cee4 */
    II(0x1016d0d0, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x1016d0d3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1016d0d4, 0x1)   popd(edi);                            /* pop edi */
    II(0x1016d0d5, 0x1)   popd(esi);                            /* pop esi */
    II(0x1016d0d6, 0x1)   popd(edx);                            /* pop edx */
    II(0x1016d0d7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1016d0d8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1016d0d9, 0x1)   retd();                               /* ret */
FUNC_END

