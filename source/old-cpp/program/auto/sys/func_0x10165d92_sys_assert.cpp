FUNC_BEGIN(sys_assert, 0xc69099c7bad176f4, 0x20, ({0x85, 0xc0, 0x75, 0x1a, 0x51, 0x53, 0x52, 0x68, 0x4c, 0x2d, 0x1b, 0x10, 0x68, 0xd4, 0xe5, 0x1b, 0x10, 0xe8, 0x93, 0x33, 0x1, 0, 0x83, 0xc4, 0x14, 0xe9, 0x70, 0xb2, 0x1, 0, 0xc3}))
    II(0x10165d92, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10165d94, 0x2)   jnzd(0x10165db0, 0x1a);               /* jnz 0x10165db0 */
    II(0x10165d96, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10165d97, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10165d98, 0x1)   pushd(edx);                           /* push edx */
    II(0x10165d99, 0x5)   pushd(0x101b2d4c);                    /* push dword 0x101b2d4c */ /* "Assertion failed: %hs, file %hs, line %d\n" */
    II(0x10165d9e, 0x5)   pushd(0x101be5d4);                    /* push dword 0x101be5d4 */
    II(0x10165da3, 0x5)   calld(/* sys */ 0x1017913b, 0x13393); /* call 0x1017913b */
    II(0x10165da8, 0x3)   add(esp, 0x14);                       /* add esp, 0x14 */
    II(0x10165dab, 0x5)   jmpd_func(0x10181020, 0x1b270);       /* jmp 0x10181020 */
l_0x10165db0:
    II(0x10165db0, 0x1)   retd();                               /* ret */
FUNC_END

