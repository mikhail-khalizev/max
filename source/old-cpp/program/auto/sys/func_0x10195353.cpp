FUNC_BEGIN(/* sys */ 0x10195353, 0x4e231a9d898f701e, 0x20, ({0x55, 0x8b, 0xec, 0x56, 0x57, 0x53, 0x51, 0xf, 0xa0, 0xf, 0xa8, 0x6, 0xbe, 0xfc, 0x1a, 0x1c, 0x10, 0xc7, 0x46, 0x1c, 0x7, 0x81, 0, 0, 0xc7, 0x46, 0x14, 0, 0, 0, 0, 0x66, 0x8b, 0x45, 0x8, 0x66, 0x89, 0x46, 0x22, 0xc7, 0x6, 0, 0, 0, 0, 0x66, 0xb8, 0, 0x3, 0xb3, 0x4b, 0xb7, 0, 0x66, 0xb9, 0, 0, 0xbf, 0xfc, 0x1a, 0x1c, 0x10, 0x1e, 0x7, 0xcd, 0x31, 0xbe, 0xfc, 0x1a, 0x1c, 0x10, 0x66, 0x83, 0x66, 0x20, 0x1, 0x75, 0xe, 0x90, 0x90, 0x90, 0x90, 0xb8, 0, 0, 0, 0, 0xeb, 0x8, 0x90, 0x90, 0x90, 0xb8, 0x1, 0, 0, 0, 0x7, 0xf, 0xa9, 0xf, 0xa1, 0x59, 0x5b, 0x5f, 0x5e, 0x5d, 0xc3}))
    II(0x10195353, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10195354, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10195356, 0x1)   pushd(esi);                           /* push esi */
    II(0x10195357, 0x1)   pushd(edi);                           /* push edi */
    II(0x10195358, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10195359, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1019535a, 0x2)   pushd(fs);                            /* push fs */
    II(0x1019535c, 0x2)   pushd(gs);                            /* push gs */
    II(0x1019535e, 0x1)   pushd(es);                            /* push es */
    II(0x1019535f, 0x5)   mov(esi, 0x101c1afc);                 /* mov esi, 0x101c1afc */
    II(0x10195364, 0x7)   mov(memd_a32(ds, esi + 0x1c), 0x8107); /* mov dword [esi+0x1c], 0x8107 */
    II(0x1019536b, 0x7)   mov(memd_a32(ds, esi + 0x14), 0);     /* mov dword [esi+0x14], 0x0 */
    II(0x10195372, 0x4)   mov(ax, memw_a32(ss, ebp + 0x8));     /* mov ax, [ebp+0x8] */
    II(0x10195376, 0x4)   mov(memw_a32(ds, esi + 0x22), ax);    /* mov [esi+0x22], ax */
    II(0x1019537a, 0x6)   mov(memd_a32(ds, esi), 0);            /* mov dword [esi], 0x0 */
    II(0x10195380, 0x4)   mov(ax, 0x300);                       /* mov ax, 0x300 */
    II(0x10195384, 0x2)   mov(bl, 0x4b);                        /* mov bl, 0x4b */
    II(0x10195386, 0x2)   mov(bh, 0);                           /* mov bh, 0x0 */
    II(0x10195388, 0x4)   mov(cx, 0);                           /* mov cx, 0x0 */
    II(0x1019538c, 0x5)   mov(edi, 0x101c1afc);                 /* mov edi, 0x101c1afc */
    II(0x10195391, 0x1)   pushd(ds);                            /* push ds */
    II(0x10195392, 0x1)   popd(es);                             /* pop es */
    II(0x10195393, 0x2)   int_(0x31);                           /* int 0x31 */
    II(0x10195395, 0x5)   mov(esi, 0x101c1afc);                 /* mov esi, 0x101c1afc */
    II(0x1019539a, 0x5)   and_(memw_a32(ds, esi + 0x20), 0x1);  /* and word [esi+0x20], 0x1 */
    II(0x1019539f, 0x2)   jnzd(0x101953af, 0xe);                /* jnz 0x101953af */
//    II(0x101953a1, 0x1)   nop();                                /* nop */
//    II(0x101953a2, 0x1)   nop();                                /* nop */
//    II(0x101953a3, 0x1)   nop();                                /* nop */
//    II(0x101953a4, 0x1)   nop();                                /* nop */
    II(0x101953a5, 0x5)   mov(eax, 0);                          /* mov eax, 0x0 */
    II(0x101953aa, 0x2)   jmpd(0x101953b4, 0x8);                /* jmp 0x101953b4 */
//  II(0x101953ac, 0x3)   /* Недостижимый код. */
l_0x101953af:
    II(0x101953af, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
l_0x101953b4:
    II(0x101953b4, 0x1)   popd(es);                             /* pop es */
    II(0x101953b5, 0x2)   popd(gs);                             /* pop gs */
    II(0x101953b7, 0x2)   popd(fs);                             /* pop fs */
    II(0x101953b9, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101953ba, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101953bb, 0x1)   popd(edi);                            /* pop edi */
    II(0x101953bc, 0x1)   popd(esi);                            /* pop esi */
    II(0x101953bd, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101953be, 0x1)   retd();                               /* ret */
FUNC_END

