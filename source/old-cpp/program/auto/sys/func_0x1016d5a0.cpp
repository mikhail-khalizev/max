FUNC_BEGIN(/* sys */ 0x1016d5a0, 0x6a401c32bc284fd1, 0x20, ({0x53, 0x51, 0x52, 0x31, 0xc9, 0x31, 0xdb, 0x83, 0xbb, 0x20, 0, 0x1d, 0x10, 0, 0x74, 0xf, 0x31, 0xd2, 0x8b, 0x83, 0x20, 0, 0x1d, 0x10, 0x88, 0xca, 0xe8, 0x95, 0xfd, 0xff, 0xff, 0x41, 0x83, 0xc3, 0x4, 0x81, 0xf9, 0, 0x1, 0, 0, 0x7c, 0xdc, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1016d5a0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1016d5a1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1016d5a2, 0x1)   pushd(edx);                           /* push edx */
    II(0x1016d5a3, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1016d5a5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
l_0x1016d5a7:
    II(0x1016d5a7, 0x7)   cmp(memd_a32(ds, ebx + 0x101d0020), 0); /* cmp dword [ebx+0x101d0020], 0x0 */
    II(0x1016d5ae, 0x2)   jzd(0x1016d5bf, 0xf);                 /* jz 0x1016d5bf */
    II(0x1016d5b0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1016d5b2, 0x6)   mov(eax, memd_a32(ds, ebx + 0x101d0020)); /* mov eax, [ebx+0x101d0020] */
    II(0x1016d5b8, 0x2)   mov(dl, cl);                          /* mov dl, cl */
    II(0x1016d5ba, 0x5)   calld(/* sys */ 0x1016d354, -0x26b);  /* call 0x1016d354 */
l_0x1016d5bf:
    II(0x1016d5bf, 0x1)   inc(ecx);                             /* inc ecx */
    II(0x1016d5c0, 0x3)   add(ebx, 0x4);                        /* add ebx, 0x4 */
    II(0x1016d5c3, 0x6)   cmp(ecx, 0x100);                      /* cmp ecx, 0x100 */
    II(0x1016d5c9, 0x2)   jld(0x1016d5a7, -0x24);               /* jl 0x1016d5a7 */
    II(0x1016d5cb, 0x1)   popd(edx);                            /* pop edx */
    II(0x1016d5cc, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1016d5cd, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1016d5ce, 0x1)   retd();                               /* ret */
FUNC_END

