FUNC_BEGIN(/* sys */ 0x1019385b, 0xb84f1b721ef7c35e, 0x20, ({0x55, 0x8b, 0xec, 0x83, 0xc4, 0xd4, 0x56, 0x57, 0x53, 0x66, 0x8c, 0xd8, 0x66, 0x8e, 0xc0, 0x8b, 0x45, 0x14, 0xc1, 0xe0, 0x3, 0x89, 0x45, 0xfc, 0x33, 0xdb, 0x8a, 0x1d, 0xd2, 0x9d, 0x20, 0x10, 0xa1, 0xd0, 0x9c, 0x20, 0x10, 0xf7, 0xe3, 0x89, 0x45, 0xf8, 0x6b, 0xc0, 0x7, 0x89, 0x45, 0xf0, 0x3, 0x45, 0xf8, 0x2b, 0x45, 0xfc, 0x89, 0x45, 0xe8, 0xa1, 0x98, 0x9c, 0x20, 0x10, 0xf7, 0xe3, 0x89, 0x45, 0xf4, 0x6b, 0xc0, 0x7, 0x89, 0x45, 0xec, 0x48, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf4, 0x2b, 0x45, 0xfc, 0x40, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe4, 0x3, 0x45, 0xfc, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0x8, 0, 0x74, 0x8, 0x8b, 0x35, 0xd8, 0x9c, 0x20, 0x10, 0xeb, 0x6, 0x8b, 0x35, 0xc8, 0x9c, 0x20, 0x10, 0x8b, 0x45, 0x10, 0xc1, 0xe0, 0x3, 0xf7, 0x25, 0xd0, 0x9c, 0x20, 0x10, 0x3, 0xf0, 0x8b, 0x45, 0xc, 0xc1, 0xe0, 0x3, 0x3, 0xf0, 0x83, 0x65, 0x20, 0xfc, 0x8b, 0x5d, 0x1c, 0x66, 0xba, 0, 0, 0x8a, 0xd, 0xd2, 0x9d, 0x20, 0x10}))
    II(0x1019385b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1019385c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1019385e, 0x3)   add(esp, -0x2c /* 0xd4 */);           /* add esp, 0xd4 */
    II(0x10193861, 0x1)   pushd(esi);                           /* push esi */
    II(0x10193862, 0x1)   pushd(edi);                           /* push edi */
    II(0x10193863, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10193864, 0x3)   mov(ax, ds);                          /* mov ax, ds */
    II(0x10193867, 0x3)   mov(es, ax);                          /* mov es, ax */
    II(0x1019386a, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1019386d, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x10193870, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10193873, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10193875, 0x6)   mov(bl, memb_a32(ds, 0x10209dd2));    /* mov bl, [0x10209dd2] */
    II(0x1019387b, 0x5)   mov(eax, memd_a32(ds, 0x10209cd0));   /* mov eax, [0x10209cd0] */
    II(0x10193880, 0x2)   mul(ebx);                             /* mul ebx */
    II(0x10193882, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10193885, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x10193888, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1019388b, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1019388e, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x10193891, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10193894, 0x5)   mov(eax, memd_a32(ds, video_bytes_per_line)); /* mov eax, [0x10209c98] */
    II(0x10193899, 0x2)   mul(ebx);                             /* mul ebx */
    II(0x1019389b, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1019389e, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x101938a1, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101938a4, 0x1)   dec(eax);                             /* dec eax */
    II(0x101938a5, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x101938a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101938ab, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x101938ae, 0x1)   inc(eax);                             /* inc eax */
    II(0x101938af, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x101938b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101938b5, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x101938b8, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101938bb, 0x4)   cmp(memd_a32(ss, ebp + 0x8), 0);      /* cmp dword [ebp+0x8], 0x0 */
    II(0x101938bf, 0x2)   jzd(0x101938c9, 0x8);                 /* jz 0x101938c9 */
    II(0x101938c1, 0x6)   mov(esi, memd_a32(ds, 0x10209cd8));   /* mov esi, [0x10209cd8] */
    II(0x101938c7, 0x2)   jmpd(0x101938cf, 0x6);                /* jmp 0x101938cf */
l_0x101938c9:
    II(0x101938c9, 0x6)   mov(esi, memd_a32(ds, 0x10209cc8));   /* mov esi, [0x10209cc8] */
l_0x101938cf:
    II(0x101938cf, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x101938d2, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x101938d5, 0x6)   mul(memd_a32(ds, 0x10209cd0));        /* mul dword [0x10209cd0] */
    II(0x101938db, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x101938dd, 0x3)   mov(eax, memd_a32(ss, ebp + 0xc));    /* mov eax, [ebp+0xc] */
    II(0x101938e0, 0x3)   shl(eax, 0x3);                        /* shl eax, 0x3 */
    II(0x101938e3, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x101938e5, 0x4)   and_(memd_a32(ss, ebp + 0x20), -0x4 /* 0xfc */); /* and dword [ebp+0x20], 0xfc */
    II(0x101938e9, 0x3)   mov(ebx, memd_a32(ss, ebp + 0x1c));   /* mov ebx, [ebp+0x1c] */
    II(0x101938ec, 0x4)   mov(dx, 0);                           /* mov dx, 0x0 */
    II(0x101938f0, 0x6)   mov(cl, memb_a32(ds, 0x10209dd2));    /* mov cl, [0x10209dd2] */
    II(0x101938f6, 0)     jmpd_func(/* sys */ 0x101938f6, 0);   /* Принудительное завершение функции. */
FUNC_END

