FUNC_BEGIN(0x10143319, 0x820c75ebe5c48ce, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0x2f, 0x2a, 0x2, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xb8, 0x31, 0xf3, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf0, 0xfe, 0x8b, 0x45, 0xf8, 0xe8, 0x93, 0xed, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x8b, 0xed, 0xf2, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xd3, 0x2f, 0xf3, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xcd, 0x30, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xf8, 0x79, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x42, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x17, 0x30, 0xf3, 0xff, 0xe8, 0x76, 0x2e, 0xf3, 0xff, 0x3b, 0x45, 0xf4, 0x75, 0xf, 0x8d, 0x45, 0xe8, 0xe8, 0x5, 0x30, 0xf3, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0xf4, 0x2f, 0xf3, 0xff, 0x80, 0x78, 0x3d, 0x8, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0xe4, 0x2f, 0xf3, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0xd4, 0x2f, 0xf3, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x5, 0xe9, 0xdf, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xc1, 0x2f, 0xf3, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x49, 0x8b, 0x45, 0xf8, 0x66, 0x1, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0xae, 0x2f, 0xf3, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x47, 0x8b, 0x45, 0xf8, 0x66, 0x1, 0x50, 0x2, 0x8d, 0x45, 0xe8, 0xe8, 0x9a, 0x2f, 0xf3, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x48, 0x8b, 0x45, 0xf8, 0x66, 0x1, 0x50, 0x4, 0x8d, 0x45, 0xe8, 0xe8, 0x86, 0x2f, 0xf3, 0xff, 0x31, 0xdb, 0x8a, 0x58, 0x49, 0x8d, 0x45, 0xe8, 0xe8, 0x79, 0x2f, 0xf3, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x47, 0x1, 0xda, 0x8d, 0x45, 0xe8, 0xe8, 0x6a, 0x2f, 0xf3, 0xff, 0x8a, 0x40, 0x48, 0x30, 0xe4, 0x1, 0xd0, 0xba, 0x10, 0, 0, 0, 0x29, 0xc2, 0x89, 0xd0, 0x8b, 0x55, 0xf8, 0x66, 0x1, 0x42, 0xa, 0x8d, 0x45, 0xe8, 0xe8, 0x4b, 0x2f, 0xf3, 0xff, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x45, 0xe4, 0x50, 0x8d, 0x45, 0xe0, 0x50, 0x8d, 0x45, 0xdc, 0x50, 0xb9, 0x10, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x20, 0x2f, 0xf3, 0xff, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0x12, 0x2f, 0xf3, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0x7f, 0xf6, 0xff, 0xff, 0x8b, 0x45, 0xdc, 0x8b, 0x55, 0xfc, 0x66, 0x1, 0x42, 0x2, 0x8b, 0x45, 0xe0, 0x8b, 0x55, 0xfc, 0x66, 0x1, 0x2, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xfc, 0x66, 0x1, 0x42, 0x4, 0x8d, 0x45, 0xe8, 0xe8, 0x3a, 0x37, 0xf3, 0xff, 0xe9, 0xac, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x9f, 0x2a, 0xf3, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10143319, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x1014331e, 0x5)   calld(sys_check_available_stack_size, 0x22a2f); /* call 0x10165d52 */
    II(0x10143323, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10143324, 0x1)   pushd(esi);                           /* push esi */
    II(0x10143325, 0x1)   pushd(edi);                           /* push edi */
    II(0x10143326, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10143327, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10143329, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1014332f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10143332, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10143335, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10143338, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x1014333c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014333f, 0x5)   calld(0x100764fc, -0xcce48);          /* call 0x100764fc */
    II(0x10143344, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10143347, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x1014334b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014334e, 0x5)   calld(0x100720e6, -0xd126d);          /* call 0x100720e6 */
    II(0x10143353, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10143356, 0x5)   calld(0x100720e6, -0xd1275);          /* call 0x100720e6 */
    II(0x1014335b, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10143360, 0x5)   calld(0x10076338, -0xcd02d);          /* call 0x10076338 */
    II(0x10143365, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10143367, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014336a, 0x5)   calld(0x1007643c, -0xccf33);          /* call 0x1007643c */
l_0x1014336f:
    II(0x1014336f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143371, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10143374, 0x5)   calld(0x1013ad71, -0x8608);           /* call 0x1013ad71 */
    II(0x10143379, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014337b, 0x6)   jzd(0x101434c3, 0x142);               /* jz dword 0x101434c3 */
    II(0x10143381, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10143384, 0x5)   calld(0x100763a0, -0xccfe9);          /* call 0x100763a0 */
    II(0x10143389, 0x5)   calld(0x10076204, -0xcd18a);          /* call 0x10076204 */
    II(0x1014338e, 0x3)   cmp(eax, memd_a32(ss, ebp - 0xc));    /* cmp eax, [ebp-0xc] */
    II(0x10143391, 0x2)   jnzd(0x101433a2, 0xf);                /* jnz 0x101433a2 */
    II(0x10143393, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10143396, 0x5)   calld(0x100763a0, -0xccffb);          /* call 0x100763a0 */
    II(0x1014339b, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x101433a0, 0x2)   jzd(0x101433a4, 0x2);                 /* jz 0x101433a4 */
l_0x101433a2:
    II(0x101433a2, 0x2)   jmpd(0x101433b2, 0xe);                /* jmp 0x101433b2 */
l_0x101433a4:
    II(0x101433a4, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101433a7, 0x5)   calld(0x100763a0, -0xcd00c);          /* call 0x100763a0 */
    II(0x101433ac, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x8);   /* cmp byte [eax+0x3d], 0x8 */
    II(0x101433b0, 0x2)   jnzd(0x101433b4, 0x2);                /* jnz 0x101433b4 */
l_0x101433b2:
    II(0x101433b2, 0x2)   jmpd(0x101433c2, 0xe);                /* jmp 0x101433c2 */
l_0x101433b4:
    II(0x101433b4, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101433b7, 0x5)   calld(0x100763a0, -0xcd01c);          /* call 0x100763a0 */
    II(0x101433bc, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x101433c0, 0x2)   jnzd(0x101433c4, 0x2);                /* jnz 0x101433c4 */
l_0x101433c2:
    II(0x101433c2, 0x2)   jmpd(0x101433d2, 0xe);                /* jmp 0x101433d2 */
l_0x101433c4:
    II(0x101433c4, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101433c7, 0x5)   calld(0x100763a0, -0xcd02c);          /* call 0x100763a0 */
    II(0x101433cc, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x101433d0, 0x2)   jnzd(0x101433d7, 0x5);                /* jnz 0x101433d7 */
l_0x101433d2:
    II(0x101433d2, 0x5)   jmpd(0x101434b6, 0xdf);               /* jmp 0x101434b6 */
l_0x101433d7:
    II(0x101433d7, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101433da, 0x5)   calld(0x100763a0, -0xcd03f);          /* call 0x100763a0 */
    II(0x101433df, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101433e1, 0x3)   mov(dl, memb_a32(ds, eax + 0x49));    /* mov dl, [eax+0x49] */
    II(0x101433e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101433e7, 0x3)   add(memw_a32(ds, eax), dx);           /* add [eax], dx */
    II(0x101433ea, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101433ed, 0x5)   calld(0x100763a0, -0xcd052);          /* call 0x100763a0 */
    II(0x101433f2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101433f4, 0x3)   mov(dl, memb_a32(ds, eax + 0x47));    /* mov dl, [eax+0x47] */
    II(0x101433f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101433fa, 0x4)   add(memw_a32(ds, eax + 0x2), dx);     /* add [eax+0x2], dx */
    II(0x101433fe, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10143401, 0x5)   calld(0x100763a0, -0xcd066);          /* call 0x100763a0 */
    II(0x10143406, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143408, 0x3)   mov(dl, memb_a32(ds, eax + 0x48));    /* mov dl, [eax+0x48] */
    II(0x1014340b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014340e, 0x4)   add(memw_a32(ds, eax + 0x4), dx);     /* add [eax+0x4], dx */
    II(0x10143412, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10143415, 0x5)   calld(0x100763a0, -0xcd07a);          /* call 0x100763a0 */
    II(0x1014341a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014341c, 0x3)   mov(bl, memb_a32(ds, eax + 0x49));    /* mov bl, [eax+0x49] */
    II(0x1014341f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10143422, 0x5)   calld(0x100763a0, -0xcd087);          /* call 0x100763a0 */
    II(0x10143427, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10143429, 0x3)   mov(dl, memb_a32(ds, eax + 0x47));    /* mov dl, [eax+0x47] */
    II(0x1014342c, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x1014342e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10143431, 0x5)   calld(0x100763a0, -0xcd096);          /* call 0x100763a0 */
    II(0x10143436, 0x3)   mov(al, memb_a32(ds, eax + 0x48));    /* mov al, [eax+0x48] */
    II(0x10143439, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014343b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1014343d, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x10143442, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10143444, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10143446, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10143449, 0x4)   add(memw_a32(ds, edx + 0xa), ax);     /* add [edx+0xa], ax */
    II(0x1014344d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10143450, 0x5)   calld(0x100763a0, -0xcd0b5);          /* call 0x100763a0 */
    II(0x10143455, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10143458, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014345a, 0x1)   cwde();                               /* cwde */
    II(0x1014345b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014345c, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10143461, 0x1)   pushd(eax);                           /* push eax */
    II(0x10143462, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10143465, 0x1)   pushd(eax);                           /* push eax */
    II(0x10143466, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10143469, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014346a, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1014346d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014346e, 0x5)   mov(ecx, 0x10);                       /* mov ecx, 0x10 */
    II(0x10143473, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10143478, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014347b, 0x5)   calld(0x100763a0, -0xcd0e0);          /* call 0x100763a0 */
    II(0x10143480, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x10143483, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10143486, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10143489, 0x5)   calld(0x100763a0, -0xcd0ee);          /* call 0x100763a0 */
    II(0x1014348e, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10143491, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10143494, 0x5)   calld(0x10142b18, -0x981);            /* call 0x10142b18 */
    II(0x10143499, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1014349c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1014349f, 0x4)   add(memw_a32(ds, edx + 0x2), ax);     /* add [edx+0x2], ax */
    II(0x101434a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101434a6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101434a9, 0x3)   add(memw_a32(ds, edx), ax);           /* add [edx], ax */
    II(0x101434ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101434af, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101434b2, 0x4)   add(memw_a32(ds, edx + 0x4), ax);     /* add [edx+0x4], ax */
l_0x101434b6:
    II(0x101434b6, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101434b9, 0x5)   calld(0x10076bf8, -0xcc8c6);          /* call 0x10076bf8 */
    II(0x101434be, 0x5)   jmpd(0x1014336f, -0x154);             /* jmp 0x1014336f */
l_0x101434c3:
    II(0x101434c3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101434c5, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101434c8, 0x5)   calld(0x10075f6c, -0xcd561);          /* call 0x10075f6c */
    II(0x101434cd, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101434cf, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101434d0, 0x1)   popd(edi);                            /* pop edi */
    II(0x101434d1, 0x1)   popd(esi);                            /* pop esi */
    II(0x101434d2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101434d3, 0x1)   retd();                               /* ret */
FUNC_END

