FUNC_BEGIN(0x100af2a7, 0x9eb86d23ada2cf8e, 0x20, ({0x68, 0x80, 0, 0, 0, 0xe8, 0xa1, 0x6a, 0xb, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x6c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xe8, 0xe8, 0x1d, 0xb3, 0xfd, 0xff, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0xc5, 0xbd, 0xfd, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xec, 0xfe, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0xe8, 0xe8, 0x2f, 0xb2, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0x7b, 0x72, 0xfc, 0xff, 0xe8, 0xae, 0x33, 0xa, 0, 0xe8, 0xb1, 0xc1, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x19, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x6b, 0x98, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x31, 0x9a, 0xfd, 0xff, 0xe9, 0x5f, 0x2, 0, 0, 0x83, 0x7d, 0xfc, 0, 0xf, 0x85, 0x1f, 0x1, 0, 0, 0xb8, 0x20, 0, 0, 0, 0xe8, 0xcc, 0x6a, 0xb, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x3f, 0x8d, 0x45, 0xe8, 0xe8, 0xd5, 0xb1, 0xfd, 0xff, 0x8d, 0x50, 0x1a, 0x8d, 0x45, 0xd4, 0xe8, 0xe, 0x6b, 0xfc, 0xff, 0x89, 0xc1, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xbb, 0xb1, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0x63, 0x72, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xdc, 0xe8, 0x74, 0xcb, 0xff, 0xff, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xe8, 0xe8, 0x8a, 0xb1, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0xd6, 0x71, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x30, 0xe4, 0xc1, 0xe0, 0x2, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xc8, 0xe8, 0x9, 0xe5, 0x6, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x67, 0xb1, 0xfd, 0xff, 0x8b, 0x50, 0x16, 0xc1, 0xfa, 0x18, 0x8b, 0x45, 0xc8, 0xe8, 0x3a, 0xe4, 0x6, 0, 0xb8, 0x1f, 0, 0, 0, 0xe8, 0x2f, 0x6a, 0xb, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xc0, 0, 0x74, 0x2b, 0xb8, 0x95, 0xd9, 0xa, 0x10, 0x50, 0xb9, 0x87, 0xf5, 0xa, 0x10, 0x8b, 0x5d, 0xc8, 0x8d, 0x45, 0xe8, 0xe8, 0x86, 0xb1, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xc4, 0xe8, 0x72, 0xc6, 0xff, 0xff, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0xeb, 0x6, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xb8, 0x8b, 0x55, 0xb8, 0x8d, 0x45, 0xe4, 0xe8, 0xc8, 0xbb, 0xfd, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x60, 0xbb, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x20, 0x59, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x42, 0x97, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x8, 0x99, 0xfd, 0xff, 0xe9, 0x36, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xcf, 0xb0, 0xfd, 0xff, 0x80, 0x78, 0x19, 0, 0x7e, 0x16, 0x8d, 0x45, 0xe8, 0xe8, 0xc1, 0xb0, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0xd, 0x71, 0xfc, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x75, 0x5, 0xe9, 0xe9, 0, 0, 0, 0xb8, 0x24, 0, 0, 0, 0xe8, 0x84, 0x69, 0xb, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x45, 0x8b, 0x45, 0xfc, 0x50, 0x8d, 0x45, 0xe8, 0xe8, 0x89, 0xb0, 0xfd, 0xff, 0x8d, 0x50, 0x1a, 0x8d, 0x45, 0xac, 0xe8, 0xc2, 0x69, 0xfc, 0xff, 0x89, 0xc1, 0xbb, 0x2, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x6f, 0xb0, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0x17, 0x71, 0xfc, 0xff, 0x8b, 0x75, 0xb4, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0xd3, 0xcc, 0xff, 0xff, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xa4, 0xeb, 0x6, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa4, 0x89, 0x45, 0xc8, 0xb8, 0x1f, 0, 0, 0, 0xe8, 0x1a, 0x69, 0xb, 0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x89, 0x45, 0x9c, 0x83, 0x7d, 0x9c, 0, 0x74, 0x2b, 0xb8, 0x95, 0xd9, 0xa, 0x10, 0x50, 0xb9, 0xd5, 0xf8, 0xa, 0x10, 0x8b, 0x5d, 0xc8, 0x8d, 0x45, 0xe8, 0xe8, 0x71, 0xb0, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xa0, 0xe8, 0x5d, 0xc5, 0xff, 0xff, 0x89, 0x45, 0x98, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x94, 0xeb, 0x6, 0x8b, 0x45, 0x9c, 0x89, 0x45, 0x94, 0x8b, 0x55, 0x94, 0x8d, 0x45, 0xe4, 0xe8, 0xb3, 0xba, 0xfd, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x4b, 0xba, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xb, 0x58, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x2d, 0x96, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xf3, 0x97, 0xfd, 0xff, 0xeb, 0x24, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0xba, 0xaf, 0xfd, 0xff, 0xe8, 0x4c, 0x6, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x7, 0x96, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xcd, 0x97, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100af2a7, 0x5)   pushd(0x80);                          /* push dword 0x80 */
    II(0x100af2ac, 0x5)   calld(sys_check_available_stack_size, 0xb6aa1); /* call 0x10165d52 */
    II(0x100af2b1, 0x1)   pushd(esi);                           /* push esi */
    II(0x100af2b2, 0x1)   pushd(edi);                           /* push edi */
    II(0x100af2b3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100af2b4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100af2b6, 0x6)   sub(esp, 0x6c);                       /* sub esp, 0x6c */
    II(0x100af2bc, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100af2bf, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100af2c2, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100af2c5, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100af2c8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100af2cb, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af2ce, 0x5)   calld(0x1008a5f0, -0x24ce3);          /* call 0x1008a5f0 */
    II(0x100af2d3, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x100af2d7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af2da, 0x5)   calld(my_ctor_0x101b3b58, -0x2423b);  /* call 0x1008b0a4 */
    II(0x100af2df, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100af2e2, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x100af2e6, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100af2e9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af2ec, 0x5)   calld(0x1008a520, -0x24dd1);          /* call 0x1008a520 */
    II(0x100af2f1, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af2f4, 0x5)   calld(0x10076574, -0x38d85);          /* call 0x10076574 */
    II(0x100af2f9, 0x5)   calld(0x101526ac, 0xa33ae);           /* call 0x101526ac */
    II(0x100af2fe, 0x5)   calld(0x1008b4b4, -0x23e4f);          /* call 0x1008b4b4 */
    II(0x100af303, 0x2)   test(al, al);                         /* test al, al */
    II(0x100af305, 0x2)   jzd(0x100af320, 0x19);                /* jz 0x100af320 */
    II(0x100af307, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af309, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af30c, 0x5)   calld(0x10088b7c, -0x26795);          /* call 0x10088b7c */
    II(0x100af311, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af313, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af316, 0x5)   calld(0x10088d4c, -0x265cf);          /* call 0x10088d4c */
    II(0x100af31b, 0x5)   jmpd(0x100af57f, 0x25f);              /* jmp 0x100af57f */
l_0x100af320:
    II(0x100af320, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100af324, 0x6)   jnzd(0x100af449, 0x11f);              /* jnz dword 0x100af449 */
    II(0x100af32a, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100af32f, 0x5)   calld(sys_new, 0xb6acc);              /* call 0x10165e00 */
    II(0x100af334, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100af337, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100af33a, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100af33d, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x100af341, 0x2)   jzd(0x100af382, 0x3f);                /* jz 0x100af382 */
    II(0x100af343, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af346, 0x5)   calld(0x1008a520, -0x24e2b);          /* call 0x1008a520 */
    II(0x100af34b, 0x3)   lea(edx, eax + 0x1a);                 /* lea edx, [eax+0x1a] */
    II(0x100af34e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100af351, 0x5)   calld(0x10075e64, -0x394f2);          /* call 0x10075e64 */
    II(0x100af356, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100af358, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100af35d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af360, 0x5)   calld(0x1008a520, -0x24e45);          /* call 0x1008a520 */
    II(0x100af365, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af368, 0x5)   calld(0x100765d0, -0x38d9d);          /* call 0x100765d0 */
    II(0x100af36d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af36f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100af372, 0x5)   calld(0x100abeeb, -0x348c);           /* call 0x100abeeb */
    II(0x100af377, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100af37a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100af37d, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100af380, 0x2)   jmpd(0x100af388, 0x6);                /* jmp 0x100af388 */
l_0x100af382:
    II(0x100af382, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100af385, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x100af388:
    II(0x100af388, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100af38b, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100af38e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af391, 0x5)   calld(0x1008a520, -0x24e76);          /* call 0x1008a520 */
    II(0x100af396, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af399, 0x5)   calld(0x10076574, -0x38e2a);          /* call 0x10076574 */
    II(0x100af39e, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100af3a1, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100af3a3, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100af3a6, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100af3a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100af3ac, 0x5)   calld(0x1011d8ba, 0x6e509);           /* call 0x1011d8ba */
    II(0x100af3b1, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af3b4, 0x5)   calld(0x1008a520, -0x24e99);          /* call 0x1008a520 */
    II(0x100af3b9, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x100af3bc, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x100af3bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100af3c2, 0x5)   calld(0x1011d801, 0x6e43a);           /* call 0x1011d801 */
    II(0x100af3c7, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x100af3cc, 0x5)   calld(sys_new, 0xb6a2f);              /* call 0x10165e00 */
    II(0x100af3d1, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x100af3d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100af3d7, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100af3da, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x100af3de, 0x2)   jzd(0x100af40b, 0x2b);                /* jz 0x100af40b */
    II(0x100af3e0, 0x5)   mov(eax, 0x100ad995);                 /* mov eax, 0x100ad995 */
    II(0x100af3e5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100af3e6, 0x5)   mov(ecx, 0x100af587);                 /* mov ecx, 0x100af587 */
    II(0x100af3eb, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x38));   /* mov ebx, [ebp-0x38] */
    II(0x100af3ee, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af3f1, 0x5)   calld(0x1008a57c, -0x24e7a);          /* call 0x1008a57c */
    II(0x100af3f6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af3f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100af3fb, 0x5)   calld(0x100aba72, -0x398e);           /* call 0x100aba72 */
    II(0x100af400, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x100af403, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100af406, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100af409, 0x2)   jmpd(0x100af411, 0x6);                /* jmp 0x100af411 */
l_0x100af40b:
    II(0x100af40b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100af40e, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
l_0x100af411:
    II(0x100af411, 0x3)   mov(edx, memd_a32(ss, ebp - 0x48));   /* mov edx, [ebp-0x48] */
    II(0x100af414, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af417, 0x5)   calld(0x1008afe4, -0x24438);          /* call 0x1008afe4 */
    II(0x100af41c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af41f, 0x5)   calld(0x1008af84, -0x244a0);          /* call 0x1008af84 */
    II(0x100af424, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af426, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100af42b, 0x5)   calld(0x100a4d50, -0xa6e0);           /* call 0x100a4d50 */
    II(0x100af430, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af432, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af435, 0x5)   calld(0x10088b7c, -0x268be);          /* call 0x10088b7c */
    II(0x100af43a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af43c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af43f, 0x5)   calld(0x10088d4c, -0x266f8);          /* call 0x10088d4c */
    II(0x100af444, 0x5)   jmpd(0x100af57f, 0x136);              /* jmp 0x100af57f */
l_0x100af449:
    II(0x100af449, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af44c, 0x5)   calld(0x1008a520, -0x24f31);          /* call 0x1008a520 */
    II(0x100af451, 0x4)   cmp(memb_a32(ds, eax + 0x19), 0);     /* cmp byte [eax+0x19], 0x0 */
    II(0x100af455, 0x2)   jled(0x100af46d, 0x16);               /* jle 0x100af46d */
    II(0x100af457, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af45a, 0x5)   calld(0x1008a520, -0x24f3f);          /* call 0x1008a520 */
    II(0x100af45f, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af462, 0x5)   calld(0x10076574, -0x38ef3);          /* call 0x10076574 */
    II(0x100af467, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x100af46b, 0x2)   jnzd(0x100af472, 0x5);                /* jnz 0x100af472 */
l_0x100af46d:
    II(0x100af46d, 0x5)   jmpd(0x100af55b, 0xe9);               /* jmp 0x100af55b */
l_0x100af472:
    II(0x100af472, 0x5)   mov(eax, 0x24);                       /* mov eax, 0x24 */
    II(0x100af477, 0x5)   calld(sys_new, 0xb6984);              /* call 0x10165e00 */
    II(0x100af47c, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x100af47f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100af482, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100af485, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x100af489, 0x2)   jzd(0x100af4d0, 0x45);                /* jz 0x100af4d0 */
    II(0x100af48b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af48e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100af48f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af492, 0x5)   calld(0x1008a520, -0x24f77);          /* call 0x1008a520 */
    II(0x100af497, 0x3)   lea(edx, eax + 0x1a);                 /* lea edx, [eax+0x1a] */
    II(0x100af49a, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100af49d, 0x5)   calld(0x10075e64, -0x3963e);          /* call 0x10075e64 */
    II(0x100af4a2, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100af4a4, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100af4a9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af4ac, 0x5)   calld(0x1008a520, -0x24f91);          /* call 0x1008a520 */
    II(0x100af4b1, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af4b4, 0x5)   calld(0x100765d0, -0x38ee9);          /* call 0x100765d0 */
    II(0x100af4b9, 0x3)   mov(esi, memd_a32(ss, ebp - 0x4c));   /* mov esi, [ebp-0x4c] */
    II(0x100af4bc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af4be, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100af4c0, 0x5)   calld(0x100ac198, -0x332d);           /* call 0x100ac198 */
    II(0x100af4c5, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
//    II(0x100af4c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100af4cb, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100af4ce, 0x2)   jmpd(0x100af4d6, 0x6);                /* jmp 0x100af4d6 */
l_0x100af4d0:
    II(0x100af4d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100af4d3, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
l_0x100af4d6:
    II(0x100af4d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100af4d9, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100af4dc, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x100af4e1, 0x5)   calld(sys_new, 0xb691a);              /* call 0x10165e00 */
    II(0x100af4e6, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
//    II(0x100af4e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100af4ec, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x100af4ef, 0x4)   cmp(memd_a32(ss, ebp - 0x64), 0);     /* cmp dword [ebp-0x64], 0x0 */
    II(0x100af4f3, 0x2)   jzd(0x100af520, 0x2b);                /* jz 0x100af520 */
    II(0x100af4f5, 0x5)   mov(eax, 0x100ad995);                 /* mov eax, 0x100ad995 */
    II(0x100af4fa, 0x1)   pushd(eax);                           /* push eax */
    II(0x100af4fb, 0x5)   mov(ecx, 0x100af8d5);                 /* mov ecx, 0x100af8d5 */
    II(0x100af500, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x38));   /* mov ebx, [ebp-0x38] */
    II(0x100af503, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af506, 0x5)   calld(0x1008a57c, -0x24f8f);          /* call 0x1008a57c */
    II(0x100af50b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af50d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100af510, 0x5)   calld(0x100aba72, -0x3aa3);           /* call 0x100aba72 */
    II(0x100af515, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
//    II(0x100af518, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100af51b, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x100af51e, 0x2)   jmpd(0x100af526, 0x6);                /* jmp 0x100af526 */
l_0x100af520:
    II(0x100af520, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x100af523, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
l_0x100af526:
    II(0x100af526, 0x3)   mov(edx, memd_a32(ss, ebp - 0x6c));   /* mov edx, [ebp-0x6c] */
    II(0x100af529, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af52c, 0x5)   calld(0x1008afe4, -0x2454d);          /* call 0x1008afe4 */
    II(0x100af531, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af534, 0x5)   calld(0x1008af84, -0x245b5);          /* call 0x1008af84 */
    II(0x100af539, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af53b, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100af540, 0x5)   calld(0x100a4d50, -0xa7f5);           /* call 0x100a4d50 */
    II(0x100af545, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af547, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af54a, 0x5)   calld(0x10088b7c, -0x269d3);          /* call 0x10088b7c */
    II(0x100af54f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af551, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af554, 0x5)   calld(0x10088d4c, -0x2680d);          /* call 0x10088d4c */
    II(0x100af559, 0x2)   jmpd(0x100af57f, 0x24);               /* jmp 0x100af57f */
l_0x100af55b:
    II(0x100af55b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100af55e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af561, 0x5)   calld(0x1008a520, -0x25046);          /* call 0x1008a520 */
    II(0x100af566, 0x5)   calld(0x100afbb7, 0x64c);             /* call 0x100afbb7 */
    II(0x100af56b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af56d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100af570, 0x5)   calld(0x10088b7c, -0x269f9);          /* call 0x10088b7c */
    II(0x100af575, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af577, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af57a, 0x5)   calld(0x10088d4c, -0x26833);          /* call 0x10088d4c */
l_0x100af57f:
    II(0x100af57f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100af581, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100af582, 0x1)   popd(edi);                            /* pop edi */
    II(0x100af583, 0x1)   popd(esi);                            /* pop esi */
    II(0x100af584, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

