FUNC_BEGIN(0x1008c122, 0xc3044c933ef90ef3, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x26, 0x9c, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0x2c, 0xa4, 0xfe, 0xff, 0x80, 0x78, 0x3d, 0x14, 0xf, 0x84, 0xcf, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0x17, 0xa4, 0xfe, 0xff, 0xf6, 0x40, 0x13, 0x2, 0x75, 0x6c, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x6, 0xa4, 0xfe, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x1f, 0x66, 0x2b, 0x50, 0x52, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xf0, 0xa3, 0xfe, 0xff, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xe1, 0xa3, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xd4, 0xa3, 0xfe, 0xff, 0x66, 0x8b, 0x52, 0x41, 0x66, 0x3b, 0x50, 0x52, 0x7e, 0x20, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xbf, 0xa3, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xb2, 0xa3, 0xfe, 0xff, 0x66, 0x8b, 0x52, 0x52, 0x66, 0x89, 0x50, 0x41, 0xe9, 0xdc, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xda, 0x5e, 0xfe, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0xd2, 0x5e, 0xfe, 0xff, 0x8d, 0x5d, 0xe4, 0x8d, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0x84, 0xa3, 0xfe, 0xff, 0xe8, 0xf, 0xa0, 0xfe, 0xff, 0xe8, 0x1c, 0x74, 0xb, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x6f, 0xa3, 0xfe, 0xff, 0xe8, 0x32, 0xa0, 0xfe, 0xff, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0xf, 0xbf, 0x55, 0xf2, 0x39, 0xc2, 0x7d, 0x9, 0x8b, 0x45, 0xf2, 0x66, 0x3b, 0x45, 0xe6, 0x75, 0x3a, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x46, 0xa3, 0xfe, 0xff, 0xe8, 0x9, 0xa0, 0xfe, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x34, 0xa3, 0xfe, 0xff, 0x89, 0xc2, 0x66, 0x8b, 0x43, 0x19, 0x66, 0x2b, 0x42, 0x52, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0x1d, 0xa3, 0xfe, 0xff, 0x66, 0x89, 0x50, 0x41, 0xeb, 0x25, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xc, 0xa3, 0xfe, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x1f, 0x66, 0x2b, 0x50, 0x52, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xf6, 0xa2, 0xfe, 0xff, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xe7, 0xa2, 0xfe, 0xff, 0x66, 0x8b, 0x40, 0x41, 0x66, 0x3b, 0x45, 0xf2, 0x7e, 0x14, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xd2, 0xa2, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf2, 0x66, 0x89, 0x42, 0x41, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x1a, 0xa3, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xb1, 0xa2, 0xfe, 0xff, 0xe8, 0xd0, 0xe6, 0xff, 0xff, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x9, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x4c, 0x1, 0, 0, 0xbb, 0xec, 0x3, 0x1a, 0x10, 0xba, 0xf9, 0x3, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x8b, 0x9a, 0xd, 0, 0x89, 0x45, 0xe0, 0x31, 0xdb, 0xba, 0x14, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xb4, 0xa2, 0xfe, 0xff, 0xe8, 0x32, 0x6d, 0xd, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008c122, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1008c127, 0x5)   calld(sys_check_available_stack_size, 0xd9c26); /* call 0x10165d52 */
    II(0x1008c12c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008c12d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008c12e, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008c12f, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008c130, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008c131, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008c132, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008c134, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1008c13a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1008c13d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c140, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c143, 0x5)   calld(0x10076574, -0x15bd4);          /* call 0x10076574 */
    II(0x1008c148, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x14);  /* cmp byte [eax+0x3d], 0x14 */
    II(0x1008c14c, 0x6)   jzd(0x1008c321, 0x1cf);               /* jz dword 0x1008c321 */
    II(0x1008c152, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c155, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c158, 0x5)   calld(0x10076574, -0x15be9);          /* call 0x10076574 */
    II(0x1008c15d, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x1008c161, 0x2)   jnzd(0x1008c1cf, 0x6c);               /* jnz 0x1008c1cf */
    II(0x1008c163, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c166, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1008c169, 0x5)   calld(0x10076574, -0x15bfa);          /* call 0x10076574 */
    II(0x1008c16e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008c171, 0x4)   mov(dx, memw_a32(ds, edx + 0x1f));    /* mov dx, [edx+0x1f] */
    II(0x1008c175, 0x4)   sub(dx, memw_a32(ds, eax + 0x52));    /* sub dx, [eax+0x52] */
    II(0x1008c179, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c17c, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c17f, 0x5)   calld(0x10076574, -0x15c10);          /* call 0x10076574 */
    II(0x1008c184, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x1008c188, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c18b, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c18e, 0x5)   calld(0x10076574, -0x15c1f);          /* call 0x10076574 */
    II(0x1008c193, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008c195, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c198, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c19b, 0x5)   calld(0x10076574, -0x15c2c);          /* call 0x10076574 */
    II(0x1008c1a0, 0x4)   mov(dx, memw_a32(ds, edx + 0x41));    /* mov dx, [edx+0x41] */
    II(0x1008c1a4, 0x4)   cmp(dx, memw_a32(ds, eax + 0x52));    /* cmp dx, [eax+0x52] */
    II(0x1008c1a8, 0x2)   jled(0x1008c1ca, 0x20);               /* jle 0x1008c1ca */
    II(0x1008c1aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c1ad, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c1b0, 0x5)   calld(0x10076574, -0x15c41);          /* call 0x10076574 */
    II(0x1008c1b5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008c1b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c1ba, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c1bd, 0x5)   calld(0x10076574, -0x15c4e);          /* call 0x10076574 */
    II(0x1008c1c2, 0x4)   mov(dx, memw_a32(ds, edx + 0x52));    /* mov dx, [edx+0x52] */
    II(0x1008c1c6, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
l_0x1008c1ca:
    II(0x1008c1ca, 0x5)   jmpd(0x1008c2ab, 0xdc);               /* jmp 0x1008c2ab */
l_0x1008c1cf:
    II(0x1008c1cf, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008c1d2, 0x5)   calld(0x100720b1, -0x1a126);          /* call 0x100720b1 */
    II(0x1008c1d7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1008c1da, 0x5)   calld(0x100720b1, -0x1a12e);          /* call 0x100720b1 */
    II(0x1008c1df, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x1008c1e2, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1008c1e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c1e8, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c1eb, 0x5)   calld(0x10076574, -0x15c7c);          /* call 0x10076574 */
    II(0x1008c1f0, 0x5)   calld(0x10076204, -0x15ff1);          /* call 0x10076204 */
    II(0x1008c1f5, 0x5)   calld(0x10143616, 0xb741c);           /* call 0x10143616 */
    II(0x1008c1fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c1fd, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1008c200, 0x5)   calld(0x10076574, -0x15c91);          /* call 0x10076574 */
    II(0x1008c205, 0x5)   calld(0x1007623c, -0x15fce);          /* call 0x1007623c */
    II(0x1008c20a, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x1008c20d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008c210, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1008c212, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xe));  /* movsx edx, word [ebp-0xe] */
    II(0x1008c216, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008c218, 0x2)   jged(0x1008c223, 0x9);                /* jge 0x1008c223 */
    II(0x1008c21a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x1008c21d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1a));    /* cmp ax, [ebp-0x1a] */
    II(0x1008c221, 0x2)   jnzd(0x1008c25d, 0x3a);               /* jnz 0x1008c25d */
l_0x1008c223:
    II(0x1008c223, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c226, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1008c229, 0x5)   calld(0x10076574, -0x15cba);          /* call 0x10076574 */
    II(0x1008c22e, 0x5)   calld(0x1007623c, -0x15ff7);          /* call 0x1007623c */
    II(0x1008c233, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1008c235, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c238, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1008c23b, 0x5)   calld(0x10076574, -0x15ccc);          /* call 0x10076574 */
    II(0x1008c240, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008c242, 0x4)   mov(ax, memw_a32(ds, ebx + 0x19));    /* mov ax, [ebx+0x19] */
    II(0x1008c246, 0x4)   sub(ax, memw_a32(ds, edx + 0x52));    /* sub ax, [edx+0x52] */
    II(0x1008c24a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008c24c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c24f, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c252, 0x5)   calld(0x10076574, -0x15ce3);          /* call 0x10076574 */
    II(0x1008c257, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x1008c25b, 0x2)   jmpd(0x1008c282, 0x25);               /* jmp 0x1008c282 */
l_0x1008c25d:
    II(0x1008c25d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c260, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1008c263, 0x5)   calld(0x10076574, -0x15cf4);          /* call 0x10076574 */
    II(0x1008c268, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008c26b, 0x4)   mov(dx, memw_a32(ds, edx + 0x1f));    /* mov dx, [edx+0x1f] */
    II(0x1008c26f, 0x4)   sub(dx, memw_a32(ds, eax + 0x52));    /* sub dx, [eax+0x52] */
    II(0x1008c273, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c276, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c279, 0x5)   calld(0x10076574, -0x15d0a);          /* call 0x10076574 */
    II(0x1008c27e, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
l_0x1008c282:
    II(0x1008c282, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c285, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c288, 0x5)   calld(0x10076574, -0x15d19);          /* call 0x10076574 */
    II(0x1008c28d, 0x4)   mov(ax, memw_a32(ds, eax + 0x41));    /* mov ax, [eax+0x41] */
    II(0x1008c291, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xe));     /* cmp ax, [ebp-0xe] */
    II(0x1008c295, 0x2)   jled(0x1008c2ab, 0x14);               /* jle 0x1008c2ab */
    II(0x1008c297, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c29a, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c29d, 0x5)   calld(0x10076574, -0x15d2e);          /* call 0x10076574 */
    II(0x1008c2a2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008c2a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x1008c2a7, 0x4)   mov(memw_a32(ds, edx + 0x41), ax);    /* mov [edx+0x41], ax */
l_0x1008c2ab:
    II(0x1008c2ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c2ae, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1008c2b1, 0x5)   calld(0x100765d0, -0x15ce6);          /* call 0x100765d0 */
    II(0x1008c2b6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008c2b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c2bb, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c2be, 0x5)   calld(0x10076574, -0x15d4f);          /* call 0x10076574 */
    II(0x1008c2c3, 0x5)   calld(0x1008a998, -0x1930);           /* call 0x1008a998 */
    II(0x1008c2c8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008c2ca, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x1008c2cf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008c2d1, 0x2)   jnzd(0x1008c2e8, 0x15);               /* jnz 0x1008c2e8 */
    II(0x1008c2d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c2d6, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1008c2d9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008c2dc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008c2de, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x1008c2e4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008c2e6, 0x2)   jnzd(0x1008c2f1, 0x9);                /* jnz 0x1008c2f1 */
l_0x1008c2e8:
    II(0x1008c2e8, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x1008c2ef, 0x2)   jmpd(0x1008c30a, 0x19);               /* jmp 0x1008c30a */
l_0x1008c2f1:
    II(0x1008c2f1, 0x5)   mov(ecx, 0x14c);                      /* mov ecx, 0x14c */
    II(0x1008c2f6, 0x5)   mov(ebx, 0x101a03ec);                 /* mov ebx, 0x101a03ec */ /* "ai_build.cpp" */
    II(0x1008c2fb, 0x5)   mov(edx, 0x101a03f9);                 /* mov edx, 0x101a03f9 */ /* "PlayMode != TURN_BASED || TeamTurnID == team" */
    II(0x1008c300, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008c302, 0x5)   calld(sys_assert, 0xd9a8b);           /* call 0x10165d92 */
    II(0x1008c307, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x1008c30a:
    II(0x1008c30a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1008c30c, 0x5)   mov(edx, 0x14);                       /* mov edx, 0x14 */
    II(0x1008c311, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008c314, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x1008c317, 0x5)   calld(0x100765d0, -0x15d4c);          /* call 0x100765d0 */
    II(0x1008c31c, 0x5)   calld(0x10163053, 0xd6d32);           /* call 0x10163053 */
l_0x1008c321:
    II(0x1008c321, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008c323, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008c324, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008c325, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008c326, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008c327, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008c328, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008c329, 0x1)   retd();                               /* ret */
FUNC_END

