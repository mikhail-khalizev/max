FUNC_BEGIN(0x100a62f3, 0x2e312c97a93ca4d, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x55, 0xfa, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x56, 0x4a, 0x9, 0, 0x84, 0xc0, 0x74, 0x1f, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xfe, 0x4b, 0xfe, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0xff, 0x52, 0x14, 0x89, 0x45, 0xf8, 0xeb, 0x7, 0xc7, 0x45, 0xf8, 0, 0x29, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a62f3, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100a62f8, 0x5)   calld(sys_check_available_stack_size, 0xbfa55); /* call 0x10165d52 */
    II(0x100a62fd, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a62fe, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a62ff, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a6300, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a6301, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a6302, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a6303, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a6305, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100a630b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a630e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6310, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6313, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a6316, 0x5)   calld(0x1013ad71, 0x94a56);           /* call 0x1013ad71 */
    II(0x100a631b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a631d, 0x2)   jzd(0x100a633e, 0x1f);                /* jz 0x100a633e */
    II(0x100a631f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6322, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a6325, 0x5)   calld(0x1008af28, -0x1b402);          /* call 0x1008af28 */
    II(0x100a632a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a632d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a6330, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a6333, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a6336, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100a6339, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a633c, 0x2)   jmpd(0x100a6345, 0x7);                /* jmp 0x100a6345 */
l_0x100a633e:
    II(0x100a633e, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x2900); /* mov dword [ebp-0x8], 0x2900 */
l_0x100a6345:
    II(0x100a6345, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a6348, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a634a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a634b, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a634c, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a634d, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a634e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a634f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a6350, 0x1)   retd();                               /* ret */
FUNC_END

