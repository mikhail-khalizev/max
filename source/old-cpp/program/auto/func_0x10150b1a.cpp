FUNC_BEGIN(0x10150b1a, 0xed6a634378b53943, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x2e, 0x52, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x13, 0x2, 0xf, 0x84, 0xa2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x4, 0x74, 0x22, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0x94, 0xbf, 0xf4, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x45, 0, 0xeb, 0x2d, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0xd, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0x15, 0xeb, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0x1f, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x66, 0x1a, 0xf2, 0xff, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf1, 0x61, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x23, 0xe8, 0x48, 0x20, 0xfb, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0x10, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xfa, 0xc9, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x7f, 0xfd, 0xfa, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x31, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x28, 0x8f, 0xff, 0xff, 0xe9, 0x5f, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0x9, 0xbf, 0xf4, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x45, 0, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0x7b, 0x37, 0xf2, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0xd, 0x5e, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x5e, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x31, 0x74, 0x1f, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x3e, 0x75, 0x13, 0x8b, 0x45, 0xfc, 0x5, 0x82, 0, 0, 0, 0xe8, 0x17, 0x59, 0xf2, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x75, 0x2, 0xeb, 0x46, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x43, 0xbb, 0x24, 0, 0, 0, 0xba, 0x17, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x3, 0x23, 0x1, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x29, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x61, 0x8e, 0xff, 0xff, 0xe9, 0x6c, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x3d, 0x75, 0x11, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xd3, 0, 0, 0, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x10, 0x7d, 0x2, 0xeb, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x80, 0xd5, 0, 0, 0, 0x83, 0xe8, 0x10, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x27, 0x8e, 0xff, 0xff, 0xeb, 0x35, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x3e, 0x75, 0x11, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xd3, 0, 0, 0, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x8, 0x7d, 0x2, 0xeb, 0x18, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x80, 0xd5, 0, 0, 0, 0x83, 0xe8, 0x8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0xf0, 0x8d, 0xff, 0xff, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x74, 0x60, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x1b, 0xe8, 0xcb, 0x1e, 0xfb, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x7d, 0xc8, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10150b1a, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10150b1f, 0x5)   calld(sys_check_available_stack_size, 0x1522e); /* call 0x10165d52 */
    II(0x10150b24, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10150b25, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10150b26, 0x1)   pushd(edx);                           /* push edx */
    II(0x10150b27, 0x1)   pushd(esi);                           /* push esi */
    II(0x10150b28, 0x1)   pushd(edi);                           /* push edi */
    II(0x10150b29, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10150b2a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10150b2c, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x10150b32, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10150b35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b38, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x10150b3c, 0x6)   jzd(0x10150be4, 0xa2);                /* jz dword 0x10150be4 */
    II(0x10150b42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b45, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x10150b49, 0x2)   jzd(0x10150b6d, 0x22);                /* jz 0x10150b6d */
    II(0x10150b4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b4e, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x10150b52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b55, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x10150b59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b5c, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10150b5f, 0x5)   calld(0x1009caf8, -0xb406c);          /* call 0x1009caf8 */
    II(0x10150b64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b67, 0x4)   mov(memb_a32(ds, eax + 0x45), 0);     /* mov byte [eax+0x45], 0x0 */
    II(0x10150b6b, 0x2)   jmpd(0x10150b9a, 0x2d);               /* jmp 0x10150b9a */
l_0x10150b6d:
    II(0x10150b6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b70, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0xd);   /* cmp byte [eax+0x3e], 0xd */
    II(0x10150b74, 0x2)   jnzd(0x10150b7f, 0x9);                /* jnz 0x10150b7f */
    II(0x10150b76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b79, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x15);  /* mov byte [eax+0x3d], 0x15 */
    II(0x10150b7d, 0x2)   jmpd(0x10150b86, 0x7);                /* jmp 0x10150b86 */
l_0x10150b7f:
    II(0x10150b7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b82, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x1f);  /* mov byte [eax+0x3d], 0x1f */
l_0x10150b86:
    II(0x10150b86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b89, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x10150b8d, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10150b92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b95, 0x5)   calld(0x10072600, -0xde59a);          /* call 0x10072600 */
l_0x10150b9a:
    II(0x10150b9a, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x10150b9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150ba2, 0x5)   calld(0x10076d98, -0xd9e0f);          /* call 0x10076d98 */
    II(0x10150ba7, 0x2)   test(al, al);                         /* test al, al */
    II(0x10150ba9, 0x2)   jzd(0x10150bce, 0x23);                /* jz 0x10150bce */
    II(0x10150bab, 0x5)   calld(0x10102bf8, -0x4dfb8);          /* call 0x10102bf8 */
    II(0x10150bb0, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10150bb2, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x10150bb4, 0x5)   mov(ebx, 0x10);                       /* mov ebx, 0x10 */
    II(0x10150bb9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10150bbc, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10150bc1, 0x5)   calld(0x1013d5c0, -0x13606);          /* call 0x1013d5c0 */
    II(0x10150bc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150bc9, 0x5)   calld(0x1010094d, -0x50281);          /* call 0x1010094d */
l_0x10150bce:
    II(0x10150bce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150bd1, 0x3)   mov(edx, memd_a32(ds, eax + 0x31));   /* mov edx, [eax+0x31] */
    II(0x10150bd4, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10150bd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150bda, 0x5)   calld(0x10149b07, -0x70d8);           /* call 0x10149b07 */
    II(0x10150bdf, 0x5)   jmpd(0x10150d43, 0x15f);              /* jmp 0x10150d43 */
l_0x10150be4:
    II(0x10150be4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150be7, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10150bea, 0x5)   calld(0x1009caf8, -0xb40f7);          /* call 0x1009caf8 */
    II(0x10150bef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150bf2, 0x4)   mov(memb_a32(ds, eax + 0x45), 0);     /* mov byte [eax+0x45], 0x0 */
    II(0x10150bf6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10150bf8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10150bf9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10150bfb, 0x1)   pushd(eax);                           /* push eax */
    II(0x10150bfc, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10150bfe, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10150c03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c06, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x10150c09, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10150c0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c0f, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10150c12, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10150c15, 0x5)   calld(0x10074395, -0xdc885);          /* call 0x10074395 */
    II(0x10150c1a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10150c1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c1f, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10150c22, 0x5)   calld(0x10076a34, -0xda1f3);          /* call 0x10076a34 */
    II(0x10150c27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c2a, 0x4)   mov(memb_a32(ds, eax + 0x5e), 0);     /* mov byte [eax+0x5e], 0x0 */
    II(0x10150c2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c31, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x10150c35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c38, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x10150c3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c3f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x10150c44, 0x2)   jzd(0x10150c65, 0x1f);                /* jz 0x10150c65 */
    II(0x10150c46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c49, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3e);   /* cmp word [eax+0x8], 0x3e */
    II(0x10150c4e, 0x2)   jnzd(0x10150c63, 0x13);               /* jnz 0x10150c63 */
    II(0x10150c50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c53, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x10150c58, 0x5)   calld(0x10076574, -0xda6e9);          /* call 0x10076574 */
    II(0x10150c5d, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x10150c61, 0x2)   jnzd(0x10150c65, 0x2);                /* jnz 0x10150c65 */
l_0x10150c63:
    II(0x10150c63, 0x2)   jmpd(0x10150cab, 0x46);               /* jmp 0x10150cab */
l_0x10150c65:
    II(0x10150c65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c68, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
//    II(0x10150c6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c6f, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x10150c73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c76, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
//    II(0x10150c7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c7d, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x10150c81, 0x5)   mov(ebx, 0x24);                       /* mov ebx, 0x24 */
    II(0x10150c86, 0x5)   mov(edx, 0x17);                       /* mov edx, 0x17 */
    II(0x10150c8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c8e, 0x5)   calld(0x10162f96, 0x12303);           /* call 0x10162f96 */
    II(0x10150c93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150c96, 0x3)   mov(al, memb_a32(ds, eax + 0x29));    /* mov al, [eax+0x29] */
    II(0x10150c99, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10150c9b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10150c9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150ca1, 0x5)   calld(0x10149b07, -0x719f);           /* call 0x10149b07 */
    II(0x10150ca6, 0x5)   jmpd(0x10150d17, 0x6c);               /* jmp 0x10150d17 */
l_0x10150cab:
    II(0x10150cab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150cae, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3d);   /* cmp word [eax+0x8], 0x3d */
    II(0x10150cb3, 0x2)   jnzd(0x10150cc6, 0x11);               /* jnz 0x10150cc6 */
    II(0x10150cb5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150cb8, 0x6)   mov(eax, memd_a32(ds, eax + 0xd3));   /* mov eax, [eax+0xd3] */
    II(0x10150cbe, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10150cc1, 0x3)   cmp(eax, 0x10);                       /* cmp eax, 0x10 */
    II(0x10150cc4, 0x2)   jged(0x10150cc8, 0x2);                /* jge 0x10150cc8 */
l_0x10150cc6:
    II(0x10150cc6, 0x2)   jmpd(0x10150ce2, 0x1a);               /* jmp 0x10150ce2 */
l_0x10150cc8:
    II(0x10150cc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150ccb, 0x7)   mov(ax, memw_a32(ds, eax + 0xd5));    /* mov ax, [eax+0xd5] */
    II(0x10150cd2, 0x3)   sub(eax, 0x10);                       /* sub eax, 0x10 */
    II(0x10150cd5, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10150cd8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150cdb, 0x5)   calld(0x10149b07, -0x71d9);           /* call 0x10149b07 */
    II(0x10150ce0, 0x2)   jmpd(0x10150d17, 0x35);               /* jmp 0x10150d17 */
l_0x10150ce2:
    II(0x10150ce2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150ce5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3e);   /* cmp word [eax+0x8], 0x3e */
    II(0x10150cea, 0x2)   jnzd(0x10150cfd, 0x11);               /* jnz 0x10150cfd */
    II(0x10150cec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150cef, 0x6)   mov(eax, memd_a32(ds, eax + 0xd3));   /* mov eax, [eax+0xd3] */
    II(0x10150cf5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10150cf8, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x10150cfb, 0x2)   jged(0x10150cff, 0x2);                /* jge 0x10150cff */
l_0x10150cfd:
    II(0x10150cfd, 0x2)   jmpd(0x10150d17, 0x18);               /* jmp 0x10150d17 */
l_0x10150cff:
    II(0x10150cff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150d02, 0x7)   mov(ax, memw_a32(ds, eax + 0xd5));    /* mov ax, [eax+0xd5] */
    II(0x10150d09, 0x3)   sub(eax, 0x8);                        /* sub eax, 0x8 */
    II(0x10150d0c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10150d0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150d12, 0x5)   calld(0x10149b07, -0x7210);           /* call 0x10149b07 */
l_0x10150d17:
    II(0x10150d17, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x10150d1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150d1f, 0x5)   calld(0x10076d98, -0xd9f8c);          /* call 0x10076d98 */
    II(0x10150d24, 0x2)   test(al, al);                         /* test al, al */
    II(0x10150d26, 0x2)   jzd(0x10150d43, 0x1b);                /* jz 0x10150d43 */
    II(0x10150d28, 0x5)   calld(0x10102bf8, -0x4e135);          /* call 0x10102bf8 */
    II(0x10150d2d, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10150d2f, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x10150d31, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10150d36, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10150d39, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10150d3e, 0x5)   calld(0x1013d5c0, -0x13783);          /* call 0x1013d5c0 */
l_0x10150d43:
    II(0x10150d43, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10150d45, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10150d46, 0x1)   popd(edi);                            /* pop edi */
    II(0x10150d47, 0x1)   popd(esi);                            /* pop esi */
    II(0x10150d48, 0x1)   popd(edx);                            /* pop edx */
    II(0x10150d49, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10150d4a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10150d4b, 0x1)   retd();                               /* ret */
FUNC_END

