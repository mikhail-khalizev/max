FUNC_BEGIN(0x1011b210, 0xd572dc19a4e88051, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x38, 0xab, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0xe7, 0x54, 0xfc, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x8, 0xba, 0x60, 0x7d, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xdb, 0xa9, 0x2, 0, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0xa, 0xba, 0x66, 0x7d, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc8, 0xa9, 0x2, 0, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x16, 0xba, 0x6c, 0x7d, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xb5, 0xa9, 0x2, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x8, 0x59, 0, 0, 0x31, 0xc9, 0xbb, 0x72, 0x7d, 0x1a, 0x10, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0xc6, 0xaf, 0x2, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x4, 0x54, 0xfc, 0xff, 0x89, 0xca, 0xe8, 0xca, 0xfa, 0x1, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xe0, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x31, 0x51, 0xfc, 0xff, 0x83, 0x7d, 0xdc, 0, 0x74, 0x3d, 0xba, 0x77, 0x7d, 0x1a, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x6a, 0x53, 0xfc, 0xff, 0xe8, 0xc7, 0xad, 0x2, 0, 0x88, 0x45, 0xf0, 0xba, 0x79, 0x7d, 0x1a, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x55, 0x53, 0xfc, 0xff, 0xe8, 0xb2, 0xad, 0x2, 0, 0x88, 0x45, 0xf1, 0x8d, 0x55, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0xff, 0x57, 0, 0, 0xe9, 0x76, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xe4, 0x50, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011b210, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1011b215, 0x5)   calld(sys_check_available_stack_size, 0x4ab38); /* call 0x10165d52 */
    II(0x1011b21a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011b21b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011b21c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011b21d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011b21e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011b21f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011b221, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1011b227, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011b22a, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1011b22d, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1011b231, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1011b234, 0x5)   calld(0x100e0720, -0x3ab19);          /* call 0x100e0720 */
    II(0x1011b239, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011b23c, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1011b240, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1011b243, 0x3)   add(ebx, 0x8);                        /* add ebx, 0x8 */
    II(0x1011b246, 0x5)   mov(edx, 0x101a7d60);                 /* mov edx, 0x101a7d60 */ /* "x_end" */
    II(0x1011b24b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011b24e, 0x5)   calld(0x10145c2e, 0x2a9db);           /* call 0x10145c2e */
    II(0x1011b253, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1011b256, 0x3)   add(ebx, 0xa);                        /* add ebx, 0xa */
    II(0x1011b259, 0x5)   mov(edx, 0x101a7d66);                 /* mov edx, 0x101a7d66 */ /* "y_end" */
    II(0x1011b25e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011b261, 0x5)   calld(0x10145c2e, 0x2a9c8);           /* call 0x10145c2e */
    II(0x1011b266, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1011b269, 0x3)   add(ebx, 0x16);                       /* add ebx, 0x16 */
    II(0x1011b26c, 0x5)   mov(edx, 0x101a7d6c);                 /* mov edx, 0x101a7d6c */ /* "index" */
    II(0x1011b271, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011b274, 0x5)   calld(0x10145c2e, 0x2a9b5);           /* call 0x10145c2e */
    II(0x1011b279, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011b27c, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1011b27f, 0x5)   calld(0x10120b8c, 0x5908);            /* call 0x10120b8c */
l_0x1011b284:
    II(0x1011b284, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1011b286, 0x5)   mov(ebx, 0x101a7d72);                 /* mov ebx, 0x101a7d72 */ /* "step" */
    II(0x1011b28b, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x1011b28e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011b291, 0x5)   calld(0x1014625c, 0x2afc6);           /* call 0x1014625c */
    II(0x1011b296, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011b298, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1011b29b, 0x5)   calld(0x100e06a4, -0x3abfc);          /* call 0x100e06a4 */
    II(0x1011b2a0, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1011b2a2, 0x5)   calld(0x1013ad71, 0x1faca);           /* call 0x1013ad71 */
    II(0x1011b2a7, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011b2a9, 0x2)   jzd(0x1011b2b4, 0x9);                 /* jz 0x1011b2b4 */
    II(0x1011b2ab, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x1);   /* mov dword [ebp-0x20], 0x1 */
    II(0x1011b2b2, 0x2)   jmpd(0x1011b2bb, 0x7);                /* jmp 0x1011b2bb */
l_0x1011b2b4:
    II(0x1011b2b4, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x1011b2bb:
    II(0x1011b2bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1011b2be, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1011b2c1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011b2c3, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1011b2c6, 0x5)   calld(0x100e03fc, -0x3aecf);          /* call 0x100e03fc */
    II(0x1011b2cb, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x1011b2cf, 0x2)   jzd(0x1011b30e, 0x3d);                /* jz 0x1011b30e */
    II(0x1011b2d1, 0x5)   mov(edx, 0x101a7d77);                 /* mov edx, 0x101a7d77 */ /* "x" */
    II(0x1011b2d6, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1011b2d9, 0x5)   calld(0x100e0648, -0x3ac96);          /* call 0x100e0648 */
    II(0x1011b2de, 0x5)   calld(0x101460aa, 0x2adc7);           /* call 0x101460aa */
    II(0x1011b2e3, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x1011b2e6, 0x5)   mov(edx, 0x101a7d79);                 /* mov edx, 0x101a7d79 */ /* "y" */
    II(0x1011b2eb, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1011b2ee, 0x5)   calld(0x100e0648, -0x3acab);          /* call 0x100e0648 */
    II(0x1011b2f3, 0x5)   calld(0x101460aa, 0x2adb2);           /* call 0x101460aa */
    II(0x1011b2f8, 0x3)   mov(memb_a32(ss, ebp - 0xf), al);     /* mov [ebp-0xf], al */
    II(0x1011b2fb, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1011b2fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011b301, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1011b304, 0x5)   calld(0x10120b08, 0x57ff);            /* call 0x10120b08 */
    II(0x1011b309, 0x5)   jmpd(0x1011b284, -0x8a);              /* jmp 0x1011b284 */
l_0x1011b30e:
    II(0x1011b30e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011b310, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1011b313, 0x5)   calld(0x100e03fc, -0x3af1c);          /* call 0x100e03fc */
    II(0x1011b318, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011b31a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011b31b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011b31c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011b31d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011b31e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011b31f, 0x1)   retd();                               /* ret */
FUNC_END

