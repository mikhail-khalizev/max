FUNC_BEGIN(0x100cfe4d, 0x723c3bb581d11f5b, 0x20, ({0x68, 0x5c, 0, 0, 0, 0xe8, 0xfb, 0x5e, 0x9, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf0, 0x89, 0x2, 0xe8, 0xf9, 0xcc, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1e, 0xe8, 0x23, 0xcc, 0xfc, 0xff, 0x83, 0xe8, 0x1e, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0x14, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x2e, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x30, 0xe8, 0x5a, 0x95, 0x1, 0, 0x83, 0xe8, 0x30, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0x18, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x38, 0x8b, 0x45, 0x1c, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x3c, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x40, 0xbc, 0x5c, 0x1b, 0x10, 0xb9, 0x6, 0, 0, 0, 0x8b, 0x7d, 0xf0, 0x8d, 0x7f, 0x4, 0x8b, 0x75, 0xf8, 0xf3, 0xa5, 0x66, 0xa5, 0x8b, 0x45, 0x10, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x22, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x24, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x26, 0, 0, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x2c, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x38, 0xe8, 0x1c, 0x52, 0, 0, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x2c, 0xc1, 0xfa, 0x10, 0x42, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x3c, 0xe8, 0x7, 0x52, 0, 0, 0xba, 0, 0x70, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x38, 0xe8, 0x27, 0x52, 0, 0, 0xba, 0x1, 0x70, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x3c, 0xe8, 0x17, 0x52, 0, 0, 0xba, 0xff, 0x4, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x38, 0xe8, 0x77, 0x51, 0, 0, 0xba, 0xff, 0x4, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x3c, 0xe8, 0x67, 0x51, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0xc, 0x8b, 0x45, 0xf8, 0x2b, 0x50, 0x4, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x5, 0x1b, 0xc2, 0xc1, 0xf8, 0x5, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x28, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x12, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x38, 0xe8, 0xbe, 0xf8, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x12, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x3c, 0xe8, 0xad, 0xf8, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x8, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x2, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x28, 0xc1, 0xe0, 0x5, 0x89, 0x45, 0xe8, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xf0, 0x66, 0x3b, 0x42, 0x28, 0x7d, 0x55, 0x6a, 0, 0x6a, 0, 0x6a, 0, 0x6a, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x2c, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xec, 0x83, 0xc0, 0x2, 0x1, 0xd0, 0x50, 0x6a, 0xff, 0x6a, 0xff, 0x6a, 0xff, 0x6a, 0x20, 0xf, 0xbf, 0x4d, 0xe4, 0xf, 0xbf, 0x5d, 0xec, 0xc1, 0xe3, 0x5, 0x8b, 0x45, 0xf8, 0x3, 0x58, 0x4, 0x8b, 0x45, 0xf8, 0x8b, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x12, 0xe8, 0x85, 0x86, 0x9, 0, 0x8b, 0x5d, 0xf0, 0x83, 0xc3, 0x30, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x16, 0x94, 0x1, 0, 0xeb, 0x99, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe8, 0xf, 0xaf, 0xc2, 0x83, 0xc0, 0x8, 0xe8, 0x8f, 0xaf, 0x9, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x2a, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x2a, 0x8b, 0x45, 0xe4, 0x66, 0x89, 0x2, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x2a, 0x8b, 0x45, 0xe8, 0x66, 0x89, 0x42, 0x2, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x2a, 0x83, 0xc0, 0x8, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0x8b, 0x45, 0xf8, 0xff, 0x70, 0x16, 0xe8, 0x1e, 0xab, 0x9, 0, 0x83, 0xc4, 0x18, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x10, 0}))
    II(0x100cfe4d, 0x5)   pushd(0x5c);                          /* push dword 0x5c */
    II(0x100cfe52, 0x5)   calld(sys_check_available_stack_size, 0x95efb); /* call 0x10165d52 */
    II(0x100cfe57, 0x1)   pushd(esi);                           /* push esi */
    II(0x100cfe58, 0x1)   pushd(edi);                           /* push edi */
    II(0x100cfe59, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100cfe5a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100cfe5c, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100cfe62, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100cfe65, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100cfe68, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100cfe6b, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100cfe6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100cfe71, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100cfe74, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x100cfe76, 0x5)   calld(0x1009cb74, -0x33307);          /* call 0x1009cb74 */
    II(0x100cfe7b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100cfe7d, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100cfe7f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100cfe82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cfe85, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100cfe88, 0x5)   calld(0x1009cab0, -0x333dd);          /* call 0x1009cab0 */
    II(0x100cfe8d, 0x3)   sub(eax, 0x1e);                       /* sub eax, 0x1e */
    II(0x100cfe90, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100cfe93, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cfe96, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100cfe99, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100cfe9c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100cfe9f, 0x4)   mov(memw_a32(ds, edx + 0x2e), ax);    /* mov [edx+0x2e], ax */
    II(0x100cfea3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cfea6, 0x3)   add(eax, 0x30);                       /* add eax, 0x30 */
    II(0x100cfea9, 0x5)   calld(0x100e9408, 0x1955a);           /* call 0x100e9408 */
    II(0x100cfeae, 0x3)   sub(eax, 0x30);                       /* sub eax, 0x30 */
    II(0x100cfeb1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100cfeb4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100cfeb7, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100cfeba, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x100cfebd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100cfec0, 0x3)   mov(memd_a32(ds, edx + 0x38), eax);   /* mov [edx+0x38], eax */
    II(0x100cfec3, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x100cfec6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100cfec9, 0x3)   mov(memd_a32(ds, edx + 0x3c), eax);   /* mov [edx+0x3c], eax */
    II(0x100cfecc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cfecf, 0x7)   mov(memd_a32(ds, eax + 0x40), 0x101b5cbc); /* mov dword [eax+0x40], 0x101b5cbc */
    II(0x100cfed6, 0x5)   mov(ecx, 0x6);                        /* mov ecx, 0x6 */
    II(0x100cfedb, 0x3)   mov(edi, memd_a32(ss, ebp - 0x10));   /* mov edi, [ebp-0x10] */
    II(0x100cfede, 0x3)   lea(edi, edi + 0x4);                  /* lea edi, [edi+0x4] */
    II(0x100cfee1, 0x3)   mov(esi, memd_a32(ss, ebp - 0x8));    /* mov esi, [ebp-0x8] */
    II(0x100cfee4, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */
    II(0x100cfee6, 0x2)   movsw_a32();                          /* movsw */
    II(0x100cfee8, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100cfeeb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100cfeee, 0x4)   mov(memw_a32(ds, edx + 0x22), ax);    /* mov [edx+0x22], ax */
    II(0x100cfef2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cfef5, 0x6)   mov(memw_a32(ds, eax + 0x24), 0);     /* mov word [eax+0x24], 0x0 */
    II(0x100cfefb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cfefe, 0x6)   mov(memw_a32(ds, eax + 0x26), 0);     /* mov word [eax+0x26], 0x0 */
    II(0x100cff04, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100cff07, 0x3)   mov(edx, memd_a32(ds, edx + 0x2c));   /* mov edx, [edx+0x2c] */
    II(0x100cff0a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100cff0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cff10, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x100cff13, 0x5)   calld(0x100d5134, 0x521c);            /* call 0x100d5134 */
    II(0x100cff18, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100cff1b, 0x3)   mov(edx, memd_a32(ds, edx + 0x2c));   /* mov edx, [edx+0x2c] */
    II(0x100cff1e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100cff21, 0x1)   inc(edx);                             /* inc edx */
    II(0x100cff22, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cff25, 0x3)   mov(eax, memd_a32(ds, eax + 0x3c));   /* mov eax, [eax+0x3c] */
    II(0x100cff28, 0x5)   calld(0x100d5134, 0x5207);            /* call 0x100d5134 */
    II(0x100cff2d, 0x5)   mov(edx, 0x7000);                     /* mov edx, 0x7000 */
    II(0x100cff32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cff35, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x100cff38, 0x5)   calld(0x100d5164, 0x5227);            /* call 0x100d5164 */
    II(0x100cff3d, 0x5)   mov(edx, 0x7001);                     /* mov edx, 0x7001 */
    II(0x100cff42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cff45, 0x3)   mov(eax, memd_a32(ds, eax + 0x3c));   /* mov eax, [eax+0x3c] */
    II(0x100cff48, 0x5)   calld(0x100d5164, 0x5217);            /* call 0x100d5164 */
    II(0x100cff4d, 0x5)   mov(edx, 0x4ff);                      /* mov edx, 0x4ff */
    II(0x100cff52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cff55, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x100cff58, 0x5)   calld(0x100d50d4, 0x5177);            /* call 0x100d50d4 */
    II(0x100cff5d, 0x5)   mov(edx, 0x4ff);                      /* mov edx, 0x4ff */
    II(0x100cff62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cff65, 0x3)   mov(eax, memd_a32(ds, eax + 0x3c));   /* mov eax, [eax+0x3c] */
    II(0x100cff68, 0x5)   calld(0x100d50d4, 0x5167);            /* call 0x100d50d4 */
    II(0x100cff6d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100cff70, 0x3)   mov(edx, memd_a32(ds, edx + 0xc));    /* mov edx, [edx+0xc] */
    II(0x100cff73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cff76, 0x3)   sub(edx, memd_a32(ds, eax + 0x4));    /* sub edx, [eax+0x4] */
    II(0x100cff79, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100cff7b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100cff7e, 0x3)   shl(edx, 0x5);                        /* shl edx, 0x5 */
    II(0x100cff81, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x100cff83, 0x3)   sar(eax, 0x5);                        /* sar eax, 0x5 */
    II(0x100cff86, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100cff89, 0x4)   mov(memw_a32(ds, edx + 0x28), ax);    /* mov [edx+0x28], ax */
    II(0x100cff8d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100cff90, 0x3)   mov(edx, memd_a32(ds, edx + 0x12));   /* mov edx, [edx+0x12] */
    II(0x100cff93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cff96, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x100cff99, 0x5)   calld(0x100cf85c, -0x742);            /* call 0x100cf85c */
    II(0x100cff9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cffa1, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x100cffa4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cffa7, 0x3)   mov(eax, memd_a32(ds, eax + 0x3c));   /* mov eax, [eax+0x3c] */
    II(0x100cffaa, 0x5)   calld(0x100cf85c, -0x753);            /* call 0x100cf85c */
    II(0x100cffaf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cffb2, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100cffb6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100cffb9, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x100cffbc, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100cffbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cffc2, 0x4)   mov(ax, memw_a32(ds, eax + 0x28));    /* mov ax, [eax+0x28] */
    II(0x100cffc6, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x100cffc9, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100cffcc, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100cffd3, 0x2)   jmpd(0x100cffdb, 0x6);                /* jmp 0x100cffdb */
l_0x100cffd5:
    II(0x100cffd5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100cffd8, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100cffdb:
    II(0x100cffdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100cffde, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100cffe1, 0x4)   cmp(ax, memw_a32(ds, edx + 0x28));    /* cmp ax, [edx+0x28] */
    II(0x100cffe5, 0x2)   jged(0x100d003c, 0x55);               /* jge 0x100d003c */
    II(0x100cffe7, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x100cffe9, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x100cffeb, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x100cffed, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x100cffef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cfff2, 0x3)   mov(eax, memd_a32(ds, eax + 0x2c));   /* mov eax, [eax+0x2c] */
    II(0x100cfff5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100cfff8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100cfffc, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100cffff, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d0001, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0002, 0x2)   pushd(-0x1 /* 0xff */);               /* push 0xff */
    II(0x100d0004, 0x2)   pushd(-0x1 /* 0xff */);               /* push 0xff */
    II(0x100d0006, 0x2)   pushd(-0x1 /* 0xff */);               /* push 0xff */
    II(0x100d0008, 0x2)   pushd(0x20);                          /* push 0x20 */
    II(0x100d000a, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x1c)); /* movsx ecx, word [ebp-0x1c] */
    II(0x100d000e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x100d0012, 0x3)   shl(ebx, 0x5);                        /* shl ebx, 0x5 */
    II(0x100d0015, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0018, 0x3)   add(ebx, memd_a32(ds, eax + 0x4));    /* add ebx, [eax+0x4] */
    II(0x100d001b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d001e, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x100d0020, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0023, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100d0026, 0x5)   calld(/* sys */ 0x101686b0, 0x98685); /* call 0x101686b0 */
    II(0x100d002b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x100d002e, 0x3)   add(ebx, 0x30);                       /* add ebx, 0x30 */
    II(0x100d0031, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d0033, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100d0035, 0x5)   calld(0x100e9450, 0x19416);           /* call 0x100e9450 */
    II(0x100d003a, 0x2)   jmpd(0x100cffd5, -0x67);              /* jmp 0x100cffd5 */
l_0x100d003c:
    II(0x100d003c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100d0040, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100d0044, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100d0047, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100d004a, 0x5)   calld(sys_malloc, 0x9af8f);           /* call 0x1016afde */
    II(0x100d004f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d0051, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d0054, 0x3)   mov(memd_a32(ds, eax + 0x2a), edx);   /* mov [eax+0x2a], edx */
    II(0x100d0057, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d005a, 0x3)   mov(edx, memd_a32(ds, eax + 0x2a));   /* mov edx, [eax+0x2a] */
    II(0x100d005d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d0060, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x100d0063, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d0066, 0x3)   mov(edx, memd_a32(ds, eax + 0x2a));   /* mov edx, [eax+0x2a] */
    II(0x100d0069, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d006c, 0x4)   mov(memw_a32(ds, edx + 0x2), ax);     /* mov [edx+0x2], ax */
    II(0x100d0070, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100d0074, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0075, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d0078, 0x3)   mov(eax, memd_a32(ds, eax + 0x2a));   /* mov eax, [eax+0x2a] */
    II(0x100d007b, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100d007e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d007f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0082, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100d0085, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0088, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0089, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100d008d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d008e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100d0092, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0093, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0096, 0x3)   pushd(memd_a32(ds, eax + 0x16));      /* push dword [eax+0x16] */
    II(0x100d0099, 0x5)   calld(/* sys */ 0x1016abbc, 0x9ab1e); /* call 0x1016abbc */
    II(0x100d009e, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100d00a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d00a4, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100d00a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100d00aa, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d00ac, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d00ad, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d00ae, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d00af, 0x3)   retd(0x10);                           /* ret 0x10 */
FUNC_END

