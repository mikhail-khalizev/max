FUNC_BEGIN(0x100a7a31, 0x27305a6b5c858f8e, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0x17, 0xe3, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xd8, 0xe8, 0x9c, 0xf0, 0xfc, 0xff, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0xd0, 0x4e, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf0, 0xfe, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x13, 0x1, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2e, 0xe8, 0x1b, 0x51, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x10, 0x51, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x5, 0x51, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xba, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x1e, 0x26, 0xfe, 0xff, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0xf, 0x84, 0x9c, 0, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x7, 0x3a, 0, 0, 0x66, 0x3b, 0x45, 0xe8, 0xf, 0x8e, 0x78, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x12, 0x2e, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x4, 0x4e, 0xff, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x8d, 0x45, 0xdc, 0xe8, 0x19, 0x2d, 0, 0, 0x83, 0xc0, 0x6, 0xe8, 0x6d, 0x39, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xec, 0x7e, 0x35, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xdc, 0xe8, 0xff, 0x2c, 0, 0, 0x83, 0xc0, 0x6, 0xe8, 0xfb, 0x2e, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0xd, 0x10, 0xfe, 0xff, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x80, 0x20, 0xf7, 0xeb, 0xaf, 0xe9, 0x6d, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x6b, 0x39, 0, 0, 0x66, 0x3b, 0x45, 0xe8, 0xf, 0x8e, 0xdd, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x76, 0x2d, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x68, 0x4d, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x8d, 0x45, 0xdc, 0xe8, 0x79, 0x2c, 0, 0, 0x83, 0xc0, 0x6, 0xe8, 0xcd, 0x38, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xec, 0xf, 0x8e, 0x5b, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xdc, 0xe8, 0x5b, 0x2c, 0, 0, 0x83, 0xc0, 0x6, 0xe8, 0x57, 0x2e, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0x69, 0xf, 0xfe, 0xff, 0x83, 0x7d, 0xe4, 0, 0x74, 0x15, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x80, 0x8, 0x8, 0x8b, 0x45, 0xfc, 0x8b, 0x48, 0x52, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x7, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xda, 0xf, 0xbf, 0x45, 0xd8, 0xe8, 0x79, 0xbc, 0xfc, 0xff, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x17, 0x8d, 0x45, 0xdc, 0xe8, 0x1, 0x2c, 0, 0, 0x8d, 0x50, 0x16, 0x8b, 0x45, 0xd4, 0xe8, 0x86, 0x38, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0x1, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xd0, 0xe8, 0x21, 0xe2, 0xfc, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2b, 0x2, 0, 0, 0x84, 0xc0, 0xf, 0x84, 0xbc, 0x1, 0, 0, 0x83, 0x7d, 0xd4, 0, 0x75, 0x5a, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xda, 0xf, 0xbf, 0x5d, 0xd8, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xdc, 0xe8, 0xa8, 0x2b, 0, 0, 0x83, 0xc0, 0x16, 0xe8, 0xf0, 0xe8, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x2a, 0x86, 0xfc, 0xff, 0x98, 0x85, 0xc0, 0x74, 0x10, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2e, 0xe8, 0xc2, 0x2d, 0, 0, 0xeb, 0xe, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0xb2, 0x2d, 0, 0, 0xe9, 0x5c, 0x1, 0, 0, 0x8b, 0x45, 0xd4, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x31, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x74, 0x35, 0x9, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x3f, 0x2b, 0, 0, 0xe8, 0x1e, 0xf9, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xf4, 0x3b, 0xff, 0xff, 0xe9, 0x71, 0x1, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x1f, 0x2b, 0, 0, 0x8d, 0x50, 0x16, 0x8b, 0x45, 0xd4, 0xe8, 0x88, 0xf0, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x13, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x42, 0x2d, 0, 0, 0xe9, 0xec, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xf5, 0x2a, 0, 0, 0xe8, 0xc4, 0x2c, 0, 0, 0x84, 0xc0, 0x74, 0x10, 0x8b, 0x45, 0xd4, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x7c, 0x2, 0xeb, 0x31, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0xf6, 0x34, 0x9, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xc1, 0x2a, 0, 0, 0xe8, 0xa0, 0xf8, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x76, 0x3b, 0xff, 0xff, 0xe9, 0xf3, 0, 0, 0, 0x8b, 0x45, 0xd4, 0x80, 0x78, 0x3d, 0, 0x74, 0x9, 0x8b, 0x45, 0xd4, 0x80, 0x78, 0x3d, 0xc, 0x75, 0x2, 0xeb, 0x64, 0x8b, 0x45, 0xd4, 0x80, 0x78, 0x3d, 0x4, 0x75, 0x9, 0x8b, 0x45, 0xd4, 0x80, 0x78, 0x3e, 0x1f, 0x75, 0x11, 0x8d, 0x45, 0xdc, 0xe8, 0x7b, 0x2a, 0, 0, 0xe8, 0x4a, 0x2c, 0, 0, 0x84, 0xc0, 0x74, 0x31, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x8e, 0x34, 0x9, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x59, 0x2a, 0, 0, 0xe8, 0x38, 0xf8, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xe, 0x3b, 0xff, 0xff, 0xe9, 0x8b, 0, 0, 0, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x73, 0x2c, 0, 0, 0xeb, 0x20, 0x8b, 0x4d, 0xd4, 0xf, 0xbf, 0x5d, 0xda, 0xf, 0xbf, 0x55, 0xd8, 0x8d, 0x45, 0xc8, 0xe8, 0x85, 0xf5, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x29, 0x29, 0, 0, 0xe9, 0x85, 0xfd, 0xff, 0xff, 0x80, 0x7d, 0xf4, 0, 0x75, 0x31, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x22, 0x34, 0x9, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xea, 0x29, 0, 0, 0xe8, 0xc9, 0xf7, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x9f, 0x3a, 0xff, 0xff, 0xeb, 0x1f, 0xe9, 0x8, 0xfd, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x8a, 0x3a, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x7e, 0x3a, 0xff, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a7a31, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x100a7a36, 0x5)   calld(sys_check_available_stack_size, 0xbe317); /* call 0x10165d52 */
    II(0x100a7a3b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a7a3c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a7a3d, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a7a3e, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a7a3f, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a7a40, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a7a41, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a7a43, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x100a7a49, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a7a4c, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100a7a4f, 0x5)   calld(my_ctor_0x101b4184, -0x30f64);  /* call 0x10076af0 */
    II(0x100a7a54, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x100a7a58, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7a5b, 0x5)   calld(0x1009c930, -0xb130);           /* call 0x1009c930 */
    II(0x100a7a60, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100a7a63, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x100a7a67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7a6a, 0x4)   mov(memb_a32(ds, eax + 0x13), 0x1);   /* mov byte [eax+0x13], 0x1 */
    II(0x100a7a6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7a71, 0x3)   add(eax, 0x2e);                       /* add eax, 0x2e */
    II(0x100a7a74, 0x5)   calld(0x1009cb94, -0xaee5);           /* call 0x1009cb94 */
    II(0x100a7a79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7a7c, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a7a7f, 0x5)   calld(0x1009cb94, -0xaef0);           /* call 0x1009cb94 */
    II(0x100a7a84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7a87, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100a7a8a, 0x5)   calld(0x1009cb94, -0xaefb);           /* call 0x1009cb94 */
    II(0x100a7a8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7a92, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100a7a95, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a7a98, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100a7a9e, 0x5)   mov(edx, 0x101c31c4);                 /* mov edx, 0x101c31c4 */
    II(0x100a7aa3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100a7aa5, 0x5)   calld(0x1008a0c8, -0x1d9e2);          /* call 0x1008a0c8 */
    II(0x100a7aaa, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100a7aad, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x100a7ab1, 0x6)   jzd(0x100a7b53, 0x9c);                /* jz dword 0x100a7b53 */
    II(0x100a7ab7, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100a7abe, 0x2)   jmpd(0x100a7ac6, 0x6);                /* jmp 0x100a7ac6 */
l_0x100a7ac0:
    II(0x100a7ac0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100a7ac3, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100a7ac6:
    II(0x100a7ac6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7ac9, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a7acc, 0x5)   calld(my_1_get_count, 0x3a07);        /* call 0x100ab4d8 */
    II(0x100a7ad1, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100a7ad5, 0x6)   jled(0x100a7b53, 0x78);               /* jle dword 0x100a7b53 */
    II(0x100a7adb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100a7adf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7ae2, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a7ae5, 0x5)   calld(0x100aa8fc, 0x2e12);            /* call 0x100aa8fc */
    II(0x100a7aea, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a7aec, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7aef, 0x5)   calld(0x1009c8f8, -0xb1fc);           /* call 0x1009c8f8 */
    II(0x100a7af4, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100a7afb, 0x2)   jmpd(0x100a7b03, 0x6);                /* jmp 0x100a7b03 */
l_0x100a7afd:
    II(0x100a7afd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a7b00, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100a7b03:
    II(0x100a7b03, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7b06, 0x5)   calld(0x100aa824, 0x2d19);            /* call 0x100aa824 */
    II(0x100a7b0b, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a7b0e, 0x5)   calld(my_3_get_count, -0x1c693);      /* call 0x1008b480 */
    II(0x100a7b13, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100a7b17, 0x2)   jled(0x100a7b4e, 0x35);               /* jle 0x100a7b4e */
    II(0x100a7b19, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100a7b1d, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7b20, 0x5)   calld(0x100aa824, 0x2cff);            /* call 0x100aa824 */
    II(0x100a7b25, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a7b28, 0x5)   calld(0x100aaa28, 0x2efb);            /* call 0x100aaa28 */
    II(0x100a7b2d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a7b2f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100a7b32, 0x5)   calld(0x10088b44, -0x1eff3);          /* call 0x10088b44 */
    II(0x100a7b37, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100a7b3b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100a7b3e, 0x3)   add(eax, memd_a32(ss, ebp - 0x1c));   /* add eax, [ebp-0x1c] */
    II(0x100a7b41, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100a7b45, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100a7b47, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100a7b49, 0x3)   and_(memb_a32(ds, eax), -0x9 /* 0xf7 */); /* and byte [eax], 0xf7 */
    II(0x100a7b4c, 0x2)   jmpd(0x100a7afd, -0x51);              /* jmp 0x100a7afd */
l_0x100a7b4e:
    II(0x100a7b4e, 0x5)   jmpd(0x100a7ac0, -0x93);              /* jmp 0x100a7ac0 */
l_0x100a7b53:
    II(0x100a7b53, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100a7b5a, 0x2)   jmpd(0x100a7b62, 0x6);                /* jmp 0x100a7b62 */
l_0x100a7b5c:
    II(0x100a7b5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100a7b5f, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100a7b62:
    II(0x100a7b62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7b65, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a7b68, 0x5)   calld(my_1_get_count, 0x396b);        /* call 0x100ab4d8 */
    II(0x100a7b6d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100a7b71, 0x6)   jled(0x100a7e54, 0x2dd);              /* jle dword 0x100a7e54 */
    II(0x100a7b77, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100a7b7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7b7e, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a7b81, 0x5)   calld(0x100aa8fc, 0x2d76);            /* call 0x100aa8fc */
    II(0x100a7b86, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a7b88, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7b8b, 0x5)   calld(0x1009c8f8, -0xb298);           /* call 0x1009c8f8 */
    II(0x100a7b90, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100a7b94, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100a7b9b, 0x2)   jmpd(0x100a7ba3, 0x6);                /* jmp 0x100a7ba3 */
l_0x100a7b9d:
    II(0x100a7b9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a7ba0, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x100a7ba3:
    II(0x100a7ba3, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7ba6, 0x5)   calld(0x100aa824, 0x2c79);            /* call 0x100aa824 */
    II(0x100a7bab, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a7bae, 0x5)   calld(my_3_get_count, -0x1c733);      /* call 0x1008b480 */
    II(0x100a7bb3, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100a7bb7, 0x6)   jled(0x100a7e18, 0x25b);              /* jle dword 0x100a7e18 */
    II(0x100a7bbd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100a7bc1, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7bc4, 0x5)   calld(0x100aa824, 0x2c5b);            /* call 0x100aa824 */
    II(0x100a7bc9, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a7bcc, 0x5)   calld(0x100aaa28, 0x2e57);            /* call 0x100aaa28 */
    II(0x100a7bd1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a7bd3, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100a7bd6, 0x5)   calld(0x10088b44, -0x1f097);          /* call 0x10088b44 */
    II(0x100a7bdb, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x100a7bdf, 0x2)   jzd(0x100a7bf6, 0x15);                /* jz 0x100a7bf6 */
    II(0x100a7be1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100a7be5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100a7be8, 0x3)   add(eax, memd_a32(ss, ebp - 0x1c));   /* add eax, [ebp-0x1c] */
    II(0x100a7beb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100a7bef, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100a7bf1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100a7bf3, 0x3)   or_(memb_a32(ds, eax), 0x8);          /* or byte [eax], 0x8 */
l_0x100a7bf6:
    II(0x100a7bf6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7bf9, 0x3)   mov(ecx, memd_a32(ds, eax + 0x52));   /* mov ecx, [eax+0x52] */
//    II(0x100a7bfc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7bff, 0x3)   mov(ebx, memd_a32(ds, eax + 0x7));    /* mov ebx, [eax+0x7] */
    II(0x100a7c02, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100a7c05, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x100a7c09, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100a7c0d, 0x5)   calld(0x1007388b, -0x34387);          /* call 0x1007388b */
    II(0x100a7c12, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100a7c15, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x100a7c19, 0x2)   jzd(0x100a7c32, 0x17);                /* jz 0x100a7c32 */
    II(0x100a7c1b, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7c1e, 0x5)   calld(0x100aa824, 0x2c01);            /* call 0x100aa824 */
    II(0x100a7c23, 0x3)   lea(edx, eax + 0x16);                 /* lea edx, [eax+0x16] */
    II(0x100a7c26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100a7c29, 0x5)   calld(0x1008b4b4, -0x1c77a);          /* call 0x1008b4b4 */
    II(0x100a7c2e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a7c30, 0x2)   jnzd(0x100a7c34, 0x2);                /* jnz 0x100a7c34 */
l_0x100a7c32:
    II(0x100a7c32, 0x2)   jmpd(0x100a7c38, 0x4);                /* jmp 0x100a7c38 */
l_0x100a7c34:
    II(0x100a7c34, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x100a7c38:
    II(0x100a7c38, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100a7c3b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100a7c3e, 0x5)   calld(0x10075e64, -0x31ddf);          /* call 0x10075e64 */
    II(0x100a7c43, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100a7c46, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a7c48, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a7c4a, 0x5)   calld(0x100a7e7a, 0x22b);             /* call 0x100a7e7a */
    II(0x100a7c4f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a7c51, 0x6)   jzd(0x100a7e13, 0x1bc);               /* jz dword 0x100a7e13 */
    II(0x100a7c57, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x100a7c5b, 0x2)   jnzd(0x100a7cb7, 0x5a);               /* jnz 0x100a7cb7 */
    II(0x100a7c5d, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100a7c62, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a7c63, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x26)); /* movsx ecx, word [ebp-0x26] */
    II(0x100a7c67, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x28)); /* movsx ebx, word [ebp-0x28] */
    II(0x100a7c6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7c6e, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100a7c71, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100a7c74, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7c77, 0x5)   calld(0x100aa824, 0x2ba8);            /* call 0x100aa824 */
    II(0x100a7c7c, 0x3)   add(eax, 0x16);                       /* add eax, 0x16 */
    II(0x100a7c7f, 0x5)   calld(0x10076574, -0x31710);          /* call 0x10076574 */
    II(0x100a7c84, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a7c87, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a7c8a, 0x5)   calld(0x100702b9, -0x379d6);          /* call 0x100702b9 */
    II(0x100a7c8f, 0x1)   cwde();                               /* cwde */
    II(0x100a7c90, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a7c92, 0x2)   jzd(0x100a7ca4, 0x10);                /* jz 0x100a7ca4 */
    II(0x100a7c94, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100a7c97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7c9a, 0x3)   add(eax, 0x2e);                       /* add eax, 0x2e */
    II(0x100a7c9d, 0x5)   calld(0x100aaa64, 0x2dc2);            /* call 0x100aaa64 */
    II(0x100a7ca2, 0x2)   jmpd(0x100a7cb2, 0xe);                /* jmp 0x100a7cb2 */
l_0x100a7ca4:
    II(0x100a7ca4, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100a7ca7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7caa, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100a7cad, 0x5)   calld(0x100aaa64, 0x2db2);            /* call 0x100aaa64 */
l_0x100a7cb2:
    II(0x100a7cb2, 0x5)   jmpd(0x100a7e13, 0x15c);              /* jmp 0x100a7e13 */
l_0x100a7cb7:
    II(0x100a7cb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100a7cba, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7cbc, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100a7cbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7cc2, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100a7cc5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a7cc8, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a7cca, 0x2)   jzd(0x100a7cfd, 0x31);                /* jz 0x100a7cfd */
    II(0x100a7ccc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100a7cd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7cd3, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a7cd6, 0x5)   calld(0x1013b24f, 0x93574);           /* call 0x1013b24f */
    II(0x100a7cdb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7cdd, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7ce0, 0x5)   calld(0x100aa824, 0x2b3f);            /* call 0x100aa824 */
    II(0x100a7ce5, 0x5)   calld(0x100a7608, -0x6e2);            /* call 0x100a7608 */
    II(0x100a7cea, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100a7cee, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7cf0, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7cf3, 0x5)   calld(0x1009b8ec, -0xc40c);           /* call 0x1009b8ec */
    II(0x100a7cf8, 0x5)   jmpd(0x100a7e6e, 0x171);              /* jmp 0x100a7e6e */
l_0x100a7cfd:
    II(0x100a7cfd, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7d00, 0x5)   calld(0x100aa824, 0x2b1f);            /* call 0x100aa824 */
    II(0x100a7d05, 0x3)   lea(edx, eax + 0x16);                 /* lea edx, [eax+0x16] */
    II(0x100a7d08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100a7d0b, 0x5)   calld(0x10076d98, -0x30f78);          /* call 0x10076d98 */
    II(0x100a7d10, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a7d12, 0x2)   jzd(0x100a7d27, 0x13);                /* jz 0x100a7d27 */
    II(0x100a7d14, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100a7d17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7d1a, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100a7d1d, 0x5)   calld(0x100aaa64, 0x2d42);            /* call 0x100aaa64 */
    II(0x100a7d22, 0x5)   jmpd(0x100a7e13, 0xec);               /* jmp 0x100a7e13 */
l_0x100a7d27:
    II(0x100a7d27, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7d2a, 0x5)   calld(0x100aa824, 0x2af5);            /* call 0x100aa824 */
    II(0x100a7d2f, 0x5)   calld(0x100aa9f8, 0x2cc4);            /* call 0x100aa9f8 */
    II(0x100a7d34, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a7d36, 0x2)   jzd(0x100a7d48, 0x10);                /* jz 0x100a7d48 */
    II(0x100a7d38, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100a7d3b, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100a7d3e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a7d43, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100a7d46, 0x2)   jld(0x100a7d4a, 0x2);                 /* jl 0x100a7d4a */
l_0x100a7d48:
    II(0x100a7d48, 0x2)   jmpd(0x100a7d7b, 0x31);               /* jmp 0x100a7d7b */
l_0x100a7d4a:
    II(0x100a7d4a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100a7d4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7d51, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a7d54, 0x5)   calld(0x1013b24f, 0x934f6);           /* call 0x1013b24f */
    II(0x100a7d59, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7d5b, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7d5e, 0x5)   calld(0x100aa824, 0x2ac1);            /* call 0x100aa824 */
    II(0x100a7d63, 0x5)   calld(0x100a7608, -0x760);            /* call 0x100a7608 */
    II(0x100a7d68, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100a7d6c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7d6e, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7d71, 0x5)   calld(0x1009b8ec, -0xc48a);           /* call 0x1009b8ec */
    II(0x100a7d76, 0x5)   jmpd(0x100a7e6e, 0xf3);               /* jmp 0x100a7e6e */
l_0x100a7d7b:
    II(0x100a7d7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100a7d7e, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0);     /* cmp byte [eax+0x3d], 0x0 */
    II(0x100a7d82, 0x2)   jzd(0x100a7d8d, 0x9);                 /* jz 0x100a7d8d */
    II(0x100a7d84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100a7d87, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0xc);   /* cmp byte [eax+0x3d], 0xc */
    II(0x100a7d8b, 0x2)   jnzd(0x100a7d8f, 0x2);                /* jnz 0x100a7d8f */
l_0x100a7d8d:
    II(0x100a7d8d, 0x2)   jmpd(0x100a7df3, 0x64);               /* jmp 0x100a7df3 */
l_0x100a7d8f:
    II(0x100a7d8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100a7d92, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x100a7d96, 0x2)   jnzd(0x100a7da1, 0x9);                /* jnz 0x100a7da1 */
    II(0x100a7d98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100a7d9b, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1f);  /* cmp byte [eax+0x3e], 0x1f */
    II(0x100a7d9f, 0x2)   jnzd(0x100a7db2, 0x11);               /* jnz 0x100a7db2 */
l_0x100a7da1:
    II(0x100a7da1, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7da4, 0x5)   calld(0x100aa824, 0x2a7b);            /* call 0x100aa824 */
    II(0x100a7da9, 0x5)   calld(0x100aa9f8, 0x2c4a);            /* call 0x100aa9f8 */
    II(0x100a7dae, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a7db0, 0x2)   jzd(0x100a7de3, 0x31);                /* jz 0x100a7de3 */
l_0x100a7db2:
    II(0x100a7db2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100a7db6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7db9, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a7dbc, 0x5)   calld(0x1013b24f, 0x9348e);           /* call 0x1013b24f */
    II(0x100a7dc1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7dc3, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7dc6, 0x5)   calld(0x100aa824, 0x2a59);            /* call 0x100aa824 */
    II(0x100a7dcb, 0x5)   calld(0x100a7608, -0x7c8);            /* call 0x100a7608 */
    II(0x100a7dd0, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100a7dd4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7dd6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7dd9, 0x5)   calld(0x1009b8ec, -0xc4f2);           /* call 0x1009b8ec */
    II(0x100a7dde, 0x5)   jmpd(0x100a7e6e, 0x8b);               /* jmp 0x100a7e6e */
l_0x100a7de3:
    II(0x100a7de3, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100a7de6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7de9, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100a7dec, 0x5)   calld(0x100aaa64, 0x2c73);            /* call 0x100aaa64 */
    II(0x100a7df1, 0x2)   jmpd(0x100a7e13, 0x20);               /* jmp 0x100a7e13 */
l_0x100a7df3:
    II(0x100a7df3, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x2c));   /* mov ecx, [ebp-0x2c] */
    II(0x100a7df6, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x26)); /* movsx ebx, word [ebp-0x26] */
    II(0x100a7dfa, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100a7dfe, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100a7e01, 0x5)   calld(0x100a738b, -0xa7b);            /* call 0x100a738b */
    II(0x100a7e06, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a7e08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7e0b, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a7e0e, 0x5)   calld(0x100aa73c, 0x2929);            /* call 0x100aa73c */
l_0x100a7e13:
    II(0x100a7e13, 0x5)   jmpd(0x100a7b9d, -0x27b);             /* jmp 0x100a7b9d */
l_0x100a7e18:
    II(0x100a7e18, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x100a7e1c, 0x2)   jnzd(0x100a7e4f, 0x31);               /* jnz 0x100a7e4f */
    II(0x100a7e1e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100a7e22, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7e25, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a7e28, 0x5)   calld(0x1013b24f, 0x93422);           /* call 0x1013b24f */
    II(0x100a7e2d, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100a7e32, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7e35, 0x5)   calld(0x100aa824, 0x29ea);            /* call 0x100aa824 */
    II(0x100a7e3a, 0x5)   calld(0x100a7608, -0x837);            /* call 0x100a7608 */
    II(0x100a7e3f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100a7e43, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7e45, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7e48, 0x5)   calld(0x1009b8ec, -0xc561);           /* call 0x1009b8ec */
    II(0x100a7e4d, 0x2)   jmpd(0x100a7e6e, 0x1f);               /* jmp 0x100a7e6e */
l_0x100a7e4f:
    II(0x100a7e4f, 0x5)   jmpd(0x100a7b5c, -0x2f8);             /* jmp 0x100a7b5c */
l_0x100a7e54:
    II(0x100a7e54, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100a7e58, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7e5a, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100a7e5d, 0x5)   calld(0x1009b8ec, -0xc576);           /* call 0x1009b8ec */
    II(0x100a7e62, 0x2)   jmpd(0x100a7e6e, 0xa);                /* jmp 0x100a7e6e */
//  II(0x100a7e64, 0xa)   /* Недостижимый код. */
l_0x100a7e6e:
    II(0x100a7e6e, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100a7e71, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a7e73, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a7e74, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a7e75, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a7e76, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a7e77, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a7e78, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a7e79, 0x1)   retd();                               /* ret */
FUNC_END

