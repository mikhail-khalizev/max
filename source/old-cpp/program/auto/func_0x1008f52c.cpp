FUNC_BEGIN(0x1008f52c, 0xd5d2648d6e85739a, 0x20, ({0x68, 0x74, 0, 0, 0, 0xe8, 0x1c, 0x68, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x50, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2b, 0xe8, 0x3e, 0x76, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x22, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x21, 0x8d, 0x45, 0xf0, 0xe8, 0xff, 0x68, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x11, 0xc1, 0xf8, 0x10, 0xe8, 0xf5, 0xc4, 0xff, 0xff, 0x3c, 0x2, 0x74, 0x5, 0xe9, 0xd5, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x6a, 0x75, 0xfe, 0xff, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xbe, 0xcd, 0, 0, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x8b, 0x58, 0x2, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xe0, 0xff, 0x53, 0x1c, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x25, 0x7, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0xd, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x21, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xfb, 0x5, 0, 0, 0xbb, 0x63, 0x5, 0x1a, 0x10, 0xba, 0x70, 0x5, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xa2, 0x67, 0xd, 0, 0x89, 0x45, 0xcc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x71, 0xb7, 0xa, 0, 0x84, 0xc0, 0x74, 0x17, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x25, 0x1, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x5e, 0x6f, 0xfe, 0xff, 0xe8, 0x62, 0x32, 0xc, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x11, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x10, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x65, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xeb, 0xf6, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0x66, 0x89, 0x45, 0xec, 0xeb, 0x7, 0x8b, 0x45, 0xec, 0x66, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x3b, 0x45, 0xd8, 0xf, 0x8d, 0xe6, 0, 0, 0, 0x8b, 0x45, 0xd4, 0x66, 0x89, 0x45, 0xee, 0xeb, 0x7, 0x8b, 0x45, 0xee, 0x66, 0xff, 0x45, 0xee, 0xf, 0xbf, 0x45, 0xee, 0x3b, 0x45, 0xdc, 0xf, 0x8d, 0xc4, 0, 0, 0, 0x8d, 0x55, 0xec, 0x8d, 0x45, 0xc8, 0xe8, 0xdf, 0x67, 0xfe, 0xff, 0xbb, 0x21, 0, 0, 0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd7, 0xc3, 0xff, 0xff, 0x3c, 0x1, 0xf, 0x85, 0x9e, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2a, 0x1, 0xb8, 0x35, 0, 0, 0, 0xe8, 0x54, 0x67, 0xd, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xc0, 0, 0x74, 0x44, 0x6a, 0, 0x8d, 0x55, 0xec, 0x8d, 0x45, 0xbc, 0xe8, 0x9c, 0x67, 0xfe, 0xff, 0x50, 0xb9, 0x21, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xb8, 0xff, 0x52, 0x14, 0x81, 0xe8, 0x80, 0, 0, 0, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xc4, 0xe8, 0xa5, 0xd2, 0xff, 0xff, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0xeb, 0x6, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xb0, 0x8b, 0x55, 0xb0, 0x8d, 0x45, 0xe8, 0xe8, 0xc4, 0xcb, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x5c, 0xcb, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2b, 0xe8, 0x1b, 0xd3, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x47, 0xcb, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x17, 0x56, 0x1, 0, 0xe9, 0x28, 0xff, 0xff, 0xff, 0xe9, 0x6, 0xff, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x53, 0xc9, 0, 0, 0xeb, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0xd0, 0xf5, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008f52c, 0x5)   pushd(0x74);                          /* push dword 0x74 */
    II(0x1008f531, 0x5)   calld(sys_check_available_stack_size, 0xd681c); /* call 0x10165d52 */
    II(0x1008f536, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008f537, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008f538, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008f539, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008f53a, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008f53b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008f53c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008f53e, 0x6)   sub(esp, 0x50);                       /* sub esp, 0x50 */
    II(0x1008f544, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1008f547, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f54a, 0x3)   add(eax, 0x2b);                       /* add eax, 0x2b */
    II(0x1008f54d, 0x5)   calld(0x10076b90, -0x189c2);          /* call 0x10076b90 */
    II(0x1008f552, 0x1)   cwde();                               /* cwde */
    II(0x1008f553, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008f555, 0x2)   jnzd(0x1008f579, 0x22);               /* jnz 0x1008f579 */
    II(0x1008f557, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008f55a, 0x3)   add(edx, 0x21);                       /* add edx, 0x21 */
    II(0x1008f55d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008f560, 0x5)   calld(0x10075e64, -0x19701);          /* call 0x10075e64 */
    II(0x1008f565, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f567, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f56a, 0x3)   mov(eax, memd_a32(ds, eax + 0x11));   /* mov eax, [eax+0x11] */
    II(0x1008f56d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008f570, 0x5)   calld(0x1008ba6a, -0x3b0b);           /* call 0x1008ba6a */
    II(0x1008f575, 0x2)   cmp(al, 0x2);                         /* cmp al, 0x2 */
    II(0x1008f577, 0x2)   jzd(0x1008f57e, 0x5);                 /* jz 0x1008f57e */
l_0x1008f579:
    II(0x1008f579, 0x5)   jmpd(0x1008f753, 0x1d5);              /* jmp 0x1008f753 */
l_0x1008f57e:
    II(0x1008f57e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1008f581, 0x5)   calld(my_ctor_0x101b4184, -0x18a96);  /* call 0x10076af0 */
    II(0x1008f586, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1008f58a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008f58d, 0x5)   calld(0x1009c350, 0xcdbe);            /* call 0x1009c350 */
    II(0x1008f592, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1008f595, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1008f599, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f59c, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1008f59f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008f5a2, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1008f5a5, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x1008f5a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008f5ab, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x1008f5ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f5b1, 0x4)   mov(memb_a32(ds, eax + 0x25), 0x7);   /* mov byte [eax+0x25], 0x7 */
    II(0x1008f5b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f5b8, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1008f5bb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008f5be, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008f5c0, 0x2)   jled(0x1008f5cf, 0xd);                /* jle 0x1008f5cf */
    II(0x1008f5c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f5c5, 0x3)   mov(eax, memd_a32(ds, eax + 0x21));   /* mov eax, [eax+0x21] */
    II(0x1008f5c8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008f5cb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008f5cd, 0x2)   jgd(0x1008f5d1, 0x2);                 /* jg 0x1008f5d1 */
l_0x1008f5cf:
    II(0x1008f5cf, 0x2)   jmpd(0x1008f5da, 0x9);                /* jmp 0x1008f5da */
l_0x1008f5d1:
    II(0x1008f5d1, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x1008f5d8, 0x2)   jmpd(0x1008f5f3, 0x19);               /* jmp 0x1008f5f3 */
l_0x1008f5da:
    II(0x1008f5da, 0x5)   mov(ecx, 0x5fb);                      /* mov ecx, 0x5fb */
    II(0x1008f5df, 0x5)   mov(ebx, 0x101a0563);                 /* mov ebx, 0x101a0563 */ /* "ai_build.cpp" */
    II(0x1008f5e4, 0x5)   mov(edx, 0x101a0570);                 /* mov edx, 0x101a0570 */ /* "site.x > 0 && site.y > 0" */
    II(0x1008f5e9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008f5eb, 0x5)   calld(sys_assert, 0xd67a2);           /* call 0x10165d92 */
    II(0x1008f5f0, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x1008f5f3:
    II(0x1008f5f3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f5f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f5f8, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008f5fb, 0x5)   calld(0x1013ad71, 0xab771);           /* call 0x1013ad71 */
    II(0x1008f600, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f602, 0x2)   jzd(0x1008f61b, 0x17);                /* jz 0x1008f61b */
    II(0x1008f604, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f607, 0x4)   mov(memb_a32(ds, eax + 0x25), 0x1);   /* mov byte [eax+0x25], 0x1 */
    II(0x1008f60b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f60e, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008f611, 0x5)   calld(0x10076574, -0x190a2);          /* call 0x10076574 */
    II(0x1008f616, 0x5)   calld(0x1015287d, 0xc3262);           /* call 0x1015287d */
l_0x1008f61b:
    II(0x1008f61b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f61e, 0x3)   mov(eax, memd_a32(ds, eax + 0x11));   /* mov eax, [eax+0x11] */
    II(0x1008f621, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008f624, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1008f627, 0x7)   test(memb_a32(ds, eax + 0x101c81c0), 0x10); /* test byte [eax+0x101c81c0], 0x10 */
    II(0x1008f62e, 0x2)   jzd(0x1008f638, 0x8);                 /* jz 0x1008f638 */
    II(0x1008f630, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f633, 0x5)   calld(0x1008f29d, -0x39b);            /* call 0x1008f29d */
l_0x1008f638:
    II(0x1008f638, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f63b, 0x5)   calld(0x1008ed2b, -0x915);            /* call 0x1008ed2b */
    II(0x1008f640, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1008f643, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x1008f647, 0x2)   jmpd(0x1008f650, 0x7);                /* jmp 0x1008f650 */
l_0x1008f649:
    II(0x1008f649, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1008f64c, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
l_0x1008f650:
    II(0x1008f650, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1008f654, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x28));   /* cmp eax, [ebp-0x28] */
    II(0x1008f657, 0x6)   jged(0x1008f743, 0xe6);               /* jge dword 0x1008f743 */
    II(0x1008f65d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1008f660, 0x4)   mov(memw_a32(ss, ebp - 0x12), ax);    /* mov [ebp-0x12], ax */
    II(0x1008f664, 0x2)   jmpd(0x1008f66d, 0x7);                /* jmp 0x1008f66d */
l_0x1008f666:
    II(0x1008f666, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x1008f669, 0x4)   inc(memw_a32(ss, ebp - 0x12));        /* inc word [ebp-0x12] */
l_0x1008f66d:
    II(0x1008f66d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x1008f671, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x24));   /* cmp eax, [ebp-0x24] */
    II(0x1008f674, 0x6)   jged(0x1008f73e, 0xc4);               /* jge dword 0x1008f73e */
    II(0x1008f67a, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x1008f67d, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1008f680, 0x5)   calld(0x10075e64, -0x19821);          /* call 0x10075e64 */
    II(0x1008f685, 0x5)   mov(ebx, 0x21);                       /* mov ebx, 0x21 */
    II(0x1008f68a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f68c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008f68e, 0x5)   calld(0x1008ba6a, -0x3c29);           /* call 0x1008ba6a */
    II(0x1008f693, 0x2)   cmp(al, 0x1);                         /* cmp al, 0x1 */
    II(0x1008f695, 0x6)   jnzd(0x1008f739, 0x9e);               /* jnz dword 0x1008f739 */
    II(0x1008f69b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f69e, 0x4)   mov(memb_a32(ds, eax + 0x2a), 0x1);   /* mov byte [eax+0x2a], 0x1 */
    II(0x1008f6a2, 0x5)   mov(eax, 0x35);                       /* mov eax, 0x35 */
    II(0x1008f6a7, 0x5)   calld(sys_new, 0xd6754);              /* call 0x10165e00 */
    II(0x1008f6ac, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x1008f6af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1008f6b2, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1008f6b5, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x1008f6b9, 0x2)   jzd(0x1008f6ff, 0x44);                /* jz 0x1008f6ff */
    II(0x1008f6bb, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x1008f6bd, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x1008f6c0, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1008f6c3, 0x5)   calld(0x10075e64, -0x19864);          /* call 0x10075e64 */
    II(0x1008f6c8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008f6c9, 0x5)   mov(ecx, 0x21);                       /* mov ecx, 0x21 */
    II(0x1008f6ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f6d1, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x1008f6d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1008f6d7, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x1008f6da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1008f6dd, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x1008f6e0, 0x6)   sub(eax, 0x80);                       /* sub eax, 0x80 */
    II(0x1008f6e6, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1008f6e9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008f6ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1008f6ef, 0x5)   calld(0x1008c999, -0x2d5b);           /* call 0x1008c999 */
    II(0x1008f6f4, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x1008f6f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1008f6fa, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1008f6fd, 0x2)   jmpd(0x1008f705, 0x6);                /* jmp 0x1008f705 */
l_0x1008f6ff:
    II(0x1008f6ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1008f702, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
l_0x1008f705:
    II(0x1008f705, 0x3)   mov(edx, memd_a32(ss, ebp - 0x50));   /* mov edx, [ebp-0x50] */
    II(0x1008f708, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008f70b, 0x5)   calld(0x1009c2d4, 0xcbc4);            /* call 0x1009c2d4 */
    II(0x1008f710, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008f713, 0x5)   calld(0x1009c274, 0xcb5c);            /* call 0x1009c274 */
    II(0x1008f718, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f71a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f71d, 0x3)   add(eax, 0x2b);                       /* add eax, 0x2b */
    II(0x1008f720, 0x5)   calld(0x1009ca40, 0xd31b);            /* call 0x1009ca40 */
    II(0x1008f725, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008f728, 0x5)   calld(0x1009c274, 0xcb47);            /* call 0x1009c274 */
    II(0x1008f72d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008f72f, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1008f734, 0x5)   calld(0x100a4d50, 0x15617);           /* call 0x100a4d50 */
l_0x1008f739:
    II(0x1008f739, 0x5)   jmpd(0x1008f666, -0xd8);              /* jmp 0x1008f666 */
l_0x1008f73e:
    II(0x1008f73e, 0x5)   jmpd(0x1008f649, -0xfa);              /* jmp 0x1008f649 */
l_0x1008f743:
    II(0x1008f743, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1008f747, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f749, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008f74c, 0x5)   calld(0x1009c0a4, 0xc953);            /* call 0x1009c0a4 */
    II(0x1008f751, 0x2)   jmpd(0x1008f75f, 0xc);                /* jmp 0x1008f75f */
l_0x1008f753:
    II(0x1008f753, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f756, 0x5)   calld(0x1008ed2b, -0xa30);            /* call 0x1008ed2b */
    II(0x1008f75b, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x1008f75f:
    II(0x1008f75f, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1008f762, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008f764, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008f765, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008f766, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008f767, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008f768, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008f769, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008f76a, 0x1)   retd();                               /* ret */
FUNC_END

