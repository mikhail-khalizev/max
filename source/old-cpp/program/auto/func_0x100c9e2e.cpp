FUNC_BEGIN(0x100c9e2e, 0xac2043c5e6605eaa, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x1a, 0xbf, 0x9, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x80, 0x7d, 0xfc, 0, 0xf, 0x84, 0x53, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0xb, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xbf, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0xf, 0x85, 0x2, 0x1, 0, 0, 0x31, 0xc0, 0x8b, 0x55, 0xf8, 0x8a, 0x42, 0x4d, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0xe8, 0x99, 0xc2, 0xfa, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x3d, 0xff, 0xff, 0, 0, 0x75, 0x34, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbe, 0x5d, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbe, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x59, 0x81, 0xff, 0xff, 0x89, 0x45, 0xec, 0xeb, 0x2c, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbe, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbe, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0xb0, 0x80, 0xff, 0xff, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0xf, 0x84, 0x79, 0, 0, 0, 0x80, 0x7d, 0xfc, 0x3, 0x75, 0x7, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x51, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xec, 0x8b, 0, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0, 0x89, 0x45, 0xe0, 0x66, 0xa1, 0x74, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xdc, 0xff, 0x4d, 0xdc, 0x66, 0x83, 0x7d, 0xdc, 0xff, 0x74, 0x1e, 0x8b, 0x45, 0xe4, 0x83, 0x45, 0xe4, 0x2, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xf0, 0x7c, 0x6, 0x8b, 0x45, 0xe0, 0xc6, 0, 0, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0xeb, 0xd8, 0xeb, 0x9d, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100c9e2e, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100c9e33, 0x5)   calld(sys_check_available_stack_size, 0x9bf1a); /* call 0x10165d52 */
    II(0x100c9e38, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c9e39, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c9e3a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c9e3b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c9e3c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c9e3e, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100c9e44, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100c9e47, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100c9e4a, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100c9e4d, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100c9e51, 0x6)   jzd(0x100c9faa, 0x153);               /* jz dword 0x100c9faa */
    II(0x100c9e57, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c9e5a, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100c9e5d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c9e62, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c9e68, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100c9e6e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c9e73, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100c9e76, 0x2)   jnzd(0x100c9e83, 0xb);                /* jnz 0x100c9e83 */
    II(0x100c9e78, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c9e7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c9e7e, 0x5)   calld(0x100c9b42, -0x341);            /* call 0x100c9b42 */
l_0x100c9e83:
    II(0x100c9e83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c9e86, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100c9e89, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c9e8e, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c9e94, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100c9e9a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c9e9f, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c9ea2, 0x6)   jnzd(0x100c9faa, 0x102);              /* jnz dword 0x100c9faa */
    II(0x100c9ea8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c9eaa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c9ead, 0x3)   mov(al, memb_a32(ds, edx + 0x4d));    /* mov al, [edx+0x4d] */
    II(0x100c9eb0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c9eb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c9eb6, 0x5)   calld(0x10076154, -0x53d67);          /* call 0x10076154 */
    II(0x100c9ebb, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x100c9ec0, 0x5)   cmp(eax, 0xffff);                     /* cmp eax, 0xffff */
    II(0x100c9ec5, 0x2)   jnzd(0x100c9efb, 0x34);               /* jnz 0x100c9efb */
    II(0x100c9ec7, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100c9ecc, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x100c9ed0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c9ed3, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100c9ed6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c9ed9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c9edc, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100c9edf, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c9ee4, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100c9eea, 0x5)   mov(esi, 0x101c31c4);                 /* mov esi, 0x101c31c4 */
    II(0x100c9eef, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100c9ef1, 0x5)   calld(0x100c204f, -0x7ea7);           /* call 0x100c204f */
    II(0x100c9ef6, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c9ef9, 0x2)   jmpd(0x100c9f27, 0x2c);               /* jmp 0x100c9f27 */
l_0x100c9efb:
    II(0x100c9efb, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100c9f00, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x100c9f04, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c9f07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c9f0a, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100c9f0d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c9f12, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100c9f18, 0x5)   mov(esi, 0x101c31c4);                 /* mov esi, 0x101c31c4 */
    II(0x100c9f1d, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100c9f1f, 0x5)   calld(0x100c1fd4, -0x7f50);           /* call 0x100c1fd4 */
    II(0x100c9f24, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x100c9f27:
    II(0x100c9f27, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100c9f2b, 0x6)   jzd(0x100c9faa, 0x79);                /* jz dword 0x100c9faa */
    II(0x100c9f31, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x3);    /* cmp byte [ebp-0x4], 0x3 */
    II(0x100c9f35, 0x2)   jnzd(0x100c9f3e, 0x7);                /* jnz 0x100c9f3e */
    II(0x100c9f37, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
l_0x100c9f3e:
    II(0x100c9f3e, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100c9f45, 0x2)   jmpd(0x100c9f4d, 0x6);                /* jmp 0x100c9f4d */
l_0x100c9f47:
    II(0x100c9f47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c9f4a, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100c9f4d:
    II(0x100c9f4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c9f50, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c9f57, 0x2)   jged(0x100c9faa, 0x51);               /* jge 0x100c9faa */
    II(0x100c9f59, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c9f5d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c9f60, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x100c9f63, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c9f65, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100c9f68, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c9f6c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c9f6f, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x100c9f72, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c9f74, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100c9f77, 0x6)   mov(ax, memw_a32(ds, 0x101c8174));    /* mov ax, [0x101c8174] */
    II(0x100c9f7d, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100c9f80:
    II(0x100c9f80, 0x3)   dec(memd_a32(ss, ebp - 0x24));        /* dec dword [ebp-0x24] */
    II(0x100c9f83, 0x5)   cmp(memw_a32(ss, ebp - 0x24), -0x1 /* 0xff */); /* cmp word [ebp-0x24], 0xff */
    II(0x100c9f88, 0x2)   jzd(0x100c9fa8, 0x1e);                /* jz 0x100c9fa8 */
    II(0x100c9f8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100c9f8d, 0x4)   add(memd_a32(ss, ebp - 0x1c), 0x2);   /* add dword [ebp-0x1c], 0x2 */
    II(0x100c9f91, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100c9f94, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100c9f98, 0x2)   jld(0x100c9fa0, 0x6);                 /* jl 0x100c9fa0 */
    II(0x100c9f9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100c9f9d, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100c9fa0:
    II(0x100c9fa0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100c9fa3, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
    II(0x100c9fa6, 0x2)   jmpd(0x100c9f80, -0x28);              /* jmp 0x100c9f80 */
l_0x100c9fa8:
    II(0x100c9fa8, 0x2)   jmpd(0x100c9f47, -0x63);              /* jmp 0x100c9f47 */
l_0x100c9faa:
    II(0x100c9faa, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c9fac, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c9fad, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c9fae, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c9faf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c9fb0, 0x1)   retd();                               /* ret */
FUNC_END

