FUNC_BEGIN(0x10072a44, 0x251c995cbb4c24db, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x4, 0x33, 0xf, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x4e, 0, 0x75, 0x6, 0xc6, 0x45, 0xf8, 0, 0xeb, 0x68, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0x96, 0x82, 0xc, 0, 0x84, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x51, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0x48, 0x3f, 0, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xff, 0x53, 0x24, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x64, 0x25, 0xff, 0, 0, 0, 0x1, 0xd0, 0x39, 0xc3, 0x7d, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x8a, 0x45, 0xf0, 0x88, 0x45, 0xf8, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10072a44, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10072a49, 0x5)   calld(sys_check_available_stack_size, 0xf3304); /* call 0x10165d52 */
    II(0x10072a4e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10072a4f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10072a50, 0x1)   pushd(edx);                           /* push edx */
    II(0x10072a51, 0x1)   pushd(esi);                           /* push esi */
    II(0x10072a52, 0x1)   pushd(edi);                           /* push edi */
    II(0x10072a53, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10072a54, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10072a56, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10072a5c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10072a5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10072a62, 0x4)   cmp(memb_a32(ds, eax + 0x4e), 0);     /* cmp byte [eax+0x4e], 0x0 */
    II(0x10072a66, 0x2)   jnzd(0x10072a6e, 0x6);                /* jnz 0x10072a6e */
    II(0x10072a68, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10072a6c, 0x2)   jmpd(0x10072ad6, 0x68);               /* jmp 0x10072ad6 */
l_0x10072a6e:
    II(0x10072a6e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10072a70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10072a73, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10072a76, 0x5)   calld(0x1013ad11, 0xc8296);           /* call 0x1013ad11 */
    II(0x10072a7b, 0x2)   test(al, al);                         /* test al, al */
    II(0x10072a7d, 0x2)   jzd(0x10072a85, 0x6);                 /* jz 0x10072a85 */
    II(0x10072a7f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10072a83, 0x2)   jmpd(0x10072ad6, 0x51);               /* jmp 0x10072ad6 */
l_0x10072a85:
    II(0x10072a85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10072a88, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10072a8b, 0x5)   calld(0x100769d8, 0x3f48);            /* call 0x100769d8 */
    II(0x10072a90, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x10072a93, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10072a96, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10072a99, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x10072a9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10072a9f, 0x3)   calld_abs(memd_a32(ds, ebx + 0x24));  /* call dword near [ebx+0x24] */
    II(0x10072aa2, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10072aa5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10072aa8, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x10072aab, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10072ab0, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10072ab3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10072ab5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10072ab8, 0x3)   mov(al, memb_a32(ds, eax + 0x64));    /* mov al, [eax+0x64] */
    II(0x10072abb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10072ac0, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10072ac2, 0x2)   cmp(ebx, eax);                        /* cmp ebx, eax */
    II(0x10072ac4, 0x2)   jged(0x10072acc, 0x6);                /* jge 0x10072acc */
    II(0x10072ac6, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x10072aca, 0x2)   jmpd(0x10072ad0, 0x4);                /* jmp 0x10072ad0 */
l_0x10072acc:
    II(0x10072acc, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x10072ad0:
    II(0x10072ad0, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10072ad3, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
l_0x10072ad6:
    II(0x10072ad6, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10072ad9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10072adb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10072adc, 0x1)   popd(edi);                            /* pop edi */
    II(0x10072add, 0x1)   popd(esi);                            /* pop esi */
    II(0x10072ade, 0x1)   popd(edx);                            /* pop edx */
    II(0x10072adf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10072ae0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10072ae1, 0x1)   retd();                               /* ret */
FUNC_END

