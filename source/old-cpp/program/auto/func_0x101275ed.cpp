FUNC_BEGIN(0x101275ed, 0xf655d814e2c2b3f3, 0x20, ({0x68, 0xd4, 0, 0, 0, 0xe8, 0x5b, 0xe7, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xac, 0, 0, 0, 0xc7, 0x45, 0xfc, 0xf5, 0x59, 0x1c, 0x10, 0xe8, 0xe, 0xe7, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x84, 0xe0, 0xf, 0, 0, 0x66, 0xa1, 0xf1, 0x59, 0x1c, 0x10, 0x89, 0x45, 0xec, 0x66, 0xa1, 0xf3, 0x59, 0x1c, 0x10, 0x89, 0x45, 0xf0, 0xa0, 0xf0, 0x59, 0x1c, 0x10, 0x88, 0x45, 0xf4, 0xe9, 0x94, 0xf, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x8a, 0x15, 0xf5, 0x59, 0x1c, 0x10, 0x88, 0x90, 0xd0, 0x59, 0x1c, 0x10, 0xe9, 0xa7, 0xf, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x8a, 0x15, 0xf5, 0x59, 0x1c, 0x10, 0x88, 0x90, 0xdc, 0x59, 0x1c, 0x10, 0xe9, 0x92, 0xf, 0, 0, 0xc7, 0x45, 0xe8, 0xf5, 0x59, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xe8, 0x8a, 0, 0x88, 0x82, 0xd4, 0x59, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xec, 0x1, 0xd2, 0x8b, 0x45, 0xe8, 0x66, 0x8b, 0x40, 0x1, 0x66, 0x89, 0x82, 0xe4, 0x59, 0x1c, 0x10, 0xe9, 0x63, 0xf, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0xf, 0x85, 0x32, 0x1, 0, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x8a, 0x40, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x8, 0xf, 0x84, 0x40, 0xf, 0, 0, 0xc6, 0x45, 0xe0, 0, 0xc6, 0x45, 0xe4, 0x8, 0xfe, 0x4d, 0xe4, 0x80, 0x7d, 0xe4, 0xff, 0x74, 0x23, 0x31, 0xc0, 0x8a, 0x45, 0xe4, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0x80, 0x28, 0x3, 0, 0, 0x66, 0x3b, 0x45, 0xec, 0x75, 0x4, 0xc6, 0x45, 0xe0, 0x1, 0xeb, 0xd4, 0x80, 0x7d, 0xe0, 0, 0xf, 0x85, 0xde, 0, 0, 0, 0xb8, 0x6e, 0x82, 0x1a, 0x10, 0xe8, 0xcb, 0xa7, 0x4, 0, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x5d, 0xdc, 0xba, 0x74, 0x82, 0x1a, 0x10, 0xb8, 0xf5, 0x59, 0x1c, 0x10, 0xe8, 0x4a, 0x1a, 0x5, 0, 0x85, 0xc0, 0x74, 0x43, 0x31, 0xc0, 0xa0, 0xc8, 0x59, 0x1c, 0x10, 0x83, 0xf8, 0x1, 0x74, 0xc, 0x31, 0xc0, 0xa0, 0xc8, 0x59, 0x1c, 0x10, 0x83, 0xf8, 0x2, 0x75, 0x26, 0xe8, 0xcd, 0x32, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xe2, 0x32, 0xfa, 0xff, 0x89, 0xc1, 0xbb, 0x1, 0, 0, 0, 0xba, 0x2, 0, 0, 0, 0xb8, 0x7a, 0x82, 0x1a, 0x10, 0xe8, 0xcf, 0xe5, 0xfe, 0xff, 0xe9, 0x9b, 0xe, 0, 0, 0xc6, 0x45, 0xe4, 0, 0xeb, 0x6, 0x8a, 0x45, 0xe4, 0xfe, 0x45, 0xe4, 0x31, 0xc0, 0x8a, 0x45, 0xe4, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x8b, 0x80, 0x26, 0x3, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0xdd, 0xf, 0xbf, 0x55, 0xdc, 0xb8, 0xf5, 0x59, 0x1c, 0x10, 0x1, 0xc2, 0x31, 0xc0, 0x8a, 0x45, 0xe4, 0x6b, 0xd8, 0x1e, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x5, 0x38, 0x2, 0, 0, 0x1, 0xd8, 0xe8, 0x29, 0xe7, 0x3, 0, 0x31, 0xc0, 0x8a, 0x45, 0xe4, 0x1, 0xc0, 0x8b, 0x15, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xec, 0x66, 0x89, 0x82, 0x28, 0x3, 0, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xfe, 0x40, 0x10, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xe, 0x1, 0xe9, 0x1f, 0xe, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0x75, 0x10, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x80, 0x78, 0x8, 0, 0x74, 0x5, 0xe8, 0x7c, 0x31, 0, 0, 0xe9, 0x1, 0xe, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0x75, 0x28, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x66, 0x8b, 0x40, 0x14, 0x66, 0x3b, 0x45, 0xec, 0x75, 0x19, 0xbb, 0x6, 0, 0, 0, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0xb8, 0x90, 0x40, 0x1c, 0x10, 0xe8, 0x2c, 0xe6, 0x3, 0, 0xe8, 0x60, 0xf9, 0xff, 0xff, 0xe9, 0xcb, 0xd, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0xf, 0x85, 0xa6, 0, 0, 0, 0x8b, 0x15, 0xcc, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0xec, 0x66, 0x89, 0x42, 0x14, 0xc7, 0x45, 0xd8, 0xf5, 0x59, 0x1c, 0x10, 0x8b, 0x15, 0xcc, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0, 0x66, 0x89, 0x42, 0xc, 0xc7, 0x45, 0xd4, 0x4, 0, 0, 0, 0xff, 0x4d, 0xd4, 0x66, 0x83, 0x7d, 0xd4, 0xff, 0x74, 0x4b, 0xf, 0xbf, 0x55, 0xd4, 0x6b, 0xd2, 0x1e, 0x8b, 0x45, 0xd8, 0x83, 0xc0, 0x2, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xd4, 0x6b, 0xd8, 0x1e, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x5, 0x38, 0x3, 0, 0, 0x1, 0xd8, 0xe8, 0x3d, 0xe6, 0x3, 0, 0xf, 0xbf, 0x45, 0xd4, 0x1, 0xc0, 0x3, 0x45, 0xd8, 0xf, 0xbf, 0x55, 0xd4, 0x1, 0xd2, 0x8b, 0x1d, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xda, 0x66, 0x8b, 0x40, 0x7a, 0x66, 0x89, 0x82, 0xdc, 0x4, 0, 0, 0xeb, 0xab, 0xbb, 0xad, 0, 0, 0, 0x8b, 0x55, 0xd8, 0x81, 0xc2, 0x82, 0, 0, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x5, 0xf0, 0x4, 0, 0, 0xe8, 0x78, 0xe5, 0x3, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xe, 0x1, 0xe9, 0x13, 0xd, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0xf, 0x85, 0xe5, 0x1, 0, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x66, 0x8b, 0x40, 0xc, 0x66, 0x3b, 0x45, 0xec, 0xf, 0x85, 0xad, 0, 0, 0, 0x31, 0xc0, 0xa0, 0xf0, 0x59, 0x1c, 0x10, 0x83, 0xf8, 0x20, 0x75, 0x14, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x8a, 0x40, 0x11, 0x25, 0xff, 0, 0, 0, 0x3d, 0xff, 0, 0, 0, 0x75, 0x2, 0xeb, 0x6e, 0xe8, 0x7d, 0xf9, 0xff, 0xff, 0xc6, 0x5, 0x30, 0x56, 0x1c, 0x10, 0x2, 0x31, 0xc0, 0xa0, 0xc8, 0x59, 0x1c, 0x10, 0x83, 0xf8, 0x3, 0x75, 0x48, 0xc7, 0x45, 0xd0, 0xf5, 0x59, 0x1c, 0x10, 0xbb, 0x6, 0, 0, 0, 0x8b, 0x55, 0xd0, 0x83, 0xc2, 0x4, 0x8b, 0x45, 0xd0, 0xf, 0xbf, 0, 0x6b, 0xc8, 0x6, 0xb8, 0x90, 0x40, 0x1c, 0x10, 0x1, 0xc8, 0xe8, 0xe9, 0xe4, 0x3, 0, 0x8b, 0x45, 0xd0, 0x66, 0x8b, 0x40, 0x2, 0x66, 0xa3, 0xd0, 0x40, 0x1c, 0x10, 0x8b, 0x45, 0xd0, 0xf, 0xbf, 0x18, 0x31, 0xd2, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x7a, 0xf7, 0xff, 0xff, 0xeb, 0x9, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xa, 0x1, 0xe9, 0x63, 0xc, 0, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x66, 0xc7, 0x40, 0xc, 0, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xb, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0x11, 0xff, 0xc7, 0x45, 0xcc, 0x8, 0, 0, 0, 0xff, 0x4d, 0xcc, 0x66, 0x83, 0x7d, 0xcc, 0xff, 0x74, 0x5b, 0xf, 0xbf, 0x45, 0xcc, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0x80, 0x28, 0x3, 0, 0, 0x66, 0x3b, 0x45, 0xec, 0x75, 0x3d, 0xf, 0xbf, 0x45, 0xcc, 0x1, 0xc0, 0x8b, 0x15, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0xc7, 0x80, 0x28, 0x3, 0, 0, 0, 0, 0xf, 0xbf, 0x55, 0xcc, 0x6b, 0xd2, 0x1e, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0xc6, 0x80, 0x38, 0x2, 0, 0, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xfe, 0x48, 0x10, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xe, 0x1, 0xeb, 0x9b, 0xc7, 0x45, 0xcc, 0x4, 0, 0, 0, 0xff, 0x4d, 0xcc, 0x66, 0x83, 0x7d, 0xcc, 0xff, 0xf, 0x84, 0x96, 0, 0, 0, 0xf, 0xbf, 0x45, 0xcc, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0x80, 0xdc, 0x4, 0, 0, 0x66, 0x3b, 0x45, 0xec, 0x75, 0x75, 0xf, 0xbf, 0x55, 0xcc, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xe8, 0xd0, 0xb6, 0xfe, 0xff, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x80, 0x78, 0x8, 0, 0x74, 0x8, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xfe, 0x48, 0xf, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x4, 0x7f, 0x42, 0x8a, 0x45, 0xcc, 0x4, 0xd, 0x88, 0x45, 0xc8, 0xba, 0xa, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xc8, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd8, 0x8b, 0x40, 0x16, 0xe8, 0x77, 0x77, 0xfa, 0xff, 0xba, 0xa, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xc8, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd8, 0x8b, 0x40, 0x16, 0xe8, 0xac, 0x78, 0xfa, 0xff, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xe, 0x1, 0xe9, 0x5c, 0xff, 0xff, 0xff, 0xc6, 0x5, 0xb9, 0x59, 0x1c, 0x10, 0, 0xc6, 0x5, 0xba, 0x59, 0x1c, 0x10, 0, 0xe9, 0x1c, 0xb, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0x75, 0xf, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x66, 0x8b, 0x40, 0xc, 0x66, 0x3b, 0x45, 0xec, 0x74, 0x5, 0xe9, 0xbc, 0, 0, 0, 0xc7, 0x45, 0xc4, 0xf5, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0xc4, 0x66, 0x8b, 0, 0x89, 0x45, 0xc0, 0xc7, 0x45, 0xbc, 0x4, 0, 0, 0, 0xff, 0x4d, 0xbc, 0x66, 0x83, 0x7d, 0xbc, 0xff, 0x74, 0x34, 0xf, 0xbf, 0x45, 0xbc, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0x80, 0xdc, 0x4, 0, 0, 0x66, 0x3b, 0x45, 0xc0, 0x75, 0x16, 0xf, 0xbf, 0x55, 0xbc, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xe8, 0xe9, 0xb5, 0xfe, 0xff, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xfe, 0x48, 0xf, 0xeb, 0xc2, 0x8b, 0x45, 0xc4, 0x66, 0x8b, 0x40, 0x2, 0x89, 0x45, 0xbc, 0xf, 0xbf, 0x55, 0xbc, 0x1, 0xd2, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xc0, 0x66, 0x89, 0x82, 0xdc, 0x4, 0, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xbc, 0x1, 0xc2, 0x8b, 0x45, 0xc4, 0x8a, 0x40, 0x4, 0x88, 0x82, 0xec, 0x4, 0, 0, 0x8b, 0x55, 0xc4, 0x83, 0xc2, 0x5, 0xf, 0xbf, 0x45, 0xbc, 0x6b, 0xd8, 0x1e, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x5, 0x38, 0x3, 0, 0, 0x1, 0xd8, 0xe8, 0x2f, 0xe3, 0x3, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xfe, 0x40, 0xf, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xe, 0x1, 0xe9, 0x3e, 0xa, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0xf, 0x85, 0xaa, 0, 0, 0, 0xc7, 0x45, 0xb8, 0x8, 0, 0, 0, 0xff, 0x4d, 0xb8, 0x66, 0x83, 0x7d, 0xb8, 0xff, 0x74, 0x44, 0xf, 0xbf, 0x45, 0xb8, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0x80, 0x28, 0x3, 0, 0, 0x66, 0x3b, 0x45, 0xec, 0x75, 0x26, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xb8, 0x6b, 0xd8, 0x1e, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x5, 0x38, 0x2, 0, 0, 0x1, 0xd8, 0xe8, 0xc2, 0xe2, 0x3, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xe, 0x1, 0xeb, 0xb2, 0xc7, 0x45, 0xb8, 0x4, 0, 0, 0, 0xff, 0x4d, 0xb8, 0x66, 0x83, 0x7d, 0xb8, 0xff, 0x74, 0x44, 0xf, 0xbf, 0x45, 0xb8, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0x80, 0xdc, 0x4, 0, 0, 0x66, 0x3b, 0x45, 0xec, 0x75, 0x26, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xb8, 0x6b, 0xd8, 0x1e, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x5, 0x38, 0x3, 0, 0, 0x1, 0xd8, 0xe8, 0x6d, 0xe2, 0x3, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xe, 0x1, 0xeb, 0xb2, 0xe9, 0x82, 0x9, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0x75, 0xf, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x66, 0x8b, 0x40, 0xc, 0x66, 0x3b, 0x45, 0xec, 0x74, 0x2, 0xeb, 0x22, 0xbb, 0xad, 0, 0, 0, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x5, 0xf0, 0x4, 0, 0, 0xe8, 0xa6, 0xe1, 0x3, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xe, 0x1, 0xe9, 0x41, 0x9, 0, 0, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0x75, 0xf, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x66, 0x8b, 0x40, 0xc, 0x66, 0x3b, 0x45, 0xec, 0x74, 0x2, 0xeb, 0x1d, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x5, 0x46, 0x4, 0, 0, 0xe8, 0xee, 0xe1, 0x3, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x40, 0xe, 0x1, 0xe9, 0x5, 0x9, 0, 0, 0xc7, 0x45, 0xb4, 0xf5, 0x59, 0x1c, 0x10, 0xbb, 0x6, 0, 0, 0, 0x8b, 0x55, 0xb4, 0x83, 0xc2, 0x4, 0x8b, 0x45, 0xb4, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x6, 0xb9, 0x90, 0x40, 0x1c, 0x10, 0x1, 0xc8, 0xe8, 0x35, 0xe1, 0x3, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0xfe, 0x40, 0xf, 0xe9, 0xd1, 0x8, 0, 0, 0xc7, 0x45, 0xb0, 0xf5, 0x59, 0x1c, 0x10, 0xbb, 0x18, 0, 0, 0, 0x8b, 0x55, 0xb0, 0xb8, 0x90, 0x40, 0x1c, 0x10, 0xe8, 0xf, 0xe1, 0x3, 0, 0x8b, 0x15, 0xcc, 0x59, 0x1c, 0x10, 0xc6, 0x42, 0xa, 0x1, 0xe9, 0xa9, 0x8, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x8a, 0x15, 0xf5, 0x59, 0x1c, 0x10, 0x88, 0x90, 0xc0, 0x59, 0x1c, 0x10, 0xe9, 0x94, 0x8, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc6, 0x80, 0x91, 0xa4, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0xf, 0x84, 0xff, 0, 0, 0, 0xc6, 0x45, 0xac, 0, 0xc7, 0x45, 0xa8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xa8, 0xff, 0x45, 0xa8, 0xf, 0xbf, 0x45, 0xa8, 0x83, 0xf8, 0x4, 0x7d, 0x54, 0xf, 0xbf, 0x45, 0xa8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xa8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x2, 0xeb, 0x1d, 0xf, 0xbf, 0x45, 0xa8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x91, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x4, 0xc6, 0x45, 0xac, 0x1, 0xeb, 0x9d, 0xe8, 0x1d, 0xab, 0xfd, 0xff, 0x80, 0x7d, 0xac, 0, 0xf, 0x84, 0x7e, 0, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0xff, 0xb2, 0x44, 0xb4, 0x1b, 0x10, 0xb8, 0xc6, 0x82, 0x1a, 0x10, 0x50, 0xb8, 0x74, 0x5e, 0x1c, 0x10, 0x50, 0xe8, 0xe4, 0xe0, 0x3, 0, 0x83, 0xc4, 0xc, 0xe8, 0xdb, 0x2b, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xf0, 0x2b, 0xfa, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0x74, 0x5e, 0x1c, 0x10, 0xe8, 0xe0, 0xde, 0xfe, 0xff, 0xc7, 0x45, 0xa4, 0x1, 0, 0, 0, 0x8b, 0x45, 0xa4, 0x40, 0xf, 0xaf, 0x45, 0xec, 0x5, 0x13, 0x4, 0, 0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x3, 0x45, 0xa4, 0x89, 0x45, 0x9c, 0xe8, 0x8, 0xd6, 0xfa, 0xff, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0x9c, 0xf, 0xbf, 0x55, 0xa0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x6d, 0x5c, 0x1, 0, 0xeb, 0x7, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0xe9, 0x69, 0x7, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xfe, 0x80, 0xd8, 0x59, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x31, 0xdb, 0x8a, 0x98, 0xd8, 0x59, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xb8, 0x30, 0, 0, 0, 0xe8, 0xdc, 0x9, 0, 0, 0x80, 0x3d, 0xf6, 0x59, 0x1c, 0x10, 0, 0x74, 0xd, 0x31, 0xdb, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xbe, 0xf5, 0xff, 0xff, 0xe9, 0x1e, 0x7, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x8a, 0x15, 0xf5, 0x59, 0x1c, 0x10, 0x88, 0x90, 0xd8, 0x59, 0x1c, 0x10, 0xe9, 0x9, 0x7, 0, 0, 0xc6, 0x5, 0x9e, 0x60, 0x1c, 0x10, 0x1, 0xe9, 0xfd, 0x6, 0, 0, 0xc7, 0x45, 0x98, 0xf5, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0x98, 0x80, 0x38, 0, 0x74, 0x7, 0xc6, 0x5, 0x70, 0x81, 0x1c, 0x10, 0x1, 0x8b, 0x45, 0x98, 0x8b, 0x40, 0x1, 0x3b, 0x5, 0x6c, 0x81, 0x1c, 0x10, 0x7e, 0x14, 0x8b, 0x45, 0xec, 0x66, 0xa3, 0x68, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0x98, 0x8b, 0x40, 0x1, 0xa3, 0x6c, 0x81, 0x1c, 0x10, 0xe9, 0xc0, 0x6, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0xec, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0x76, 0xbf, 0xfd, 0xff, 0x89, 0x45, 0xf8, 0x83, 0x7d, 0xf8, 0, 0x75, 0xb, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xf1, 0xea, 0xff, 0xff, 0xeb, 0x27, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x71, 0xde, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x3a, 0xc1, 0xfb, 0x18, 0xc1, 0xe3, 0x3, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xff, 0x93, 0xa4, 0x60, 0x1c, 0x10, 0xe9, 0x70, 0x6, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x10, 0xed, 0xff, 0xff, 0xe9, 0x62, 0x6, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xcf, 0xe8, 0xff, 0xff, 0xe9, 0x54, 0x6, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xf3, 0xea, 0xff, 0xff, 0xe9, 0x46, 0x6, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0xec, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0xfc, 0xbe, 0xfd, 0xff, 0x89, 0x45, 0x94, 0x83, 0x7d, 0x94, 0, 0x75, 0xb, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x77, 0xea, 0xff, 0xff, 0xeb, 0xd, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0x94, 0xe8, 0x46, 0x9d, 0x2, 0, 0xe9, 0x10, 0x6, 0, 0, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xbc, 0x75, 0xfb, 0xff, 0xe9, 0xf1, 0x5, 0, 0, 0x31, 0xc0, 0xa0, 0xf0, 0x59, 0x1c, 0x10, 0x83, 0xf8, 0x2a, 0x75, 0x6, 0xc6, 0x45, 0x90, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0x90, 0, 0x31, 0xd2, 0x8a, 0x55, 0x90, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0, 0xe7, 0xff, 0xff, 0xe9, 0xc8, 0x5, 0, 0, 0xf, 0xbf, 0x5d, 0xf0, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0xb8, 0x28, 0x56, 0x1c, 0x10, 0xe8, 0xc, 0xde, 0x3, 0, 0xe9, 0xb0, 0x5, 0, 0, 0xc7, 0x45, 0x8c, 0xf5, 0x59, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xd4, 0x37, 0x1c, 0x10, 0x89, 0x45, 0x88, 0xc6, 0x5, 0xd4, 0x37, 0x1c, 0x10, 0x1, 0x8b, 0x45, 0x8c, 0x8b, 0x48, 0x2, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0x8c, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0x8c, 0xf, 0xbf, 0x10, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x9d, 0xa0, 0xfd, 0xff, 0x8a, 0x45, 0x88, 0xa2, 0xd4, 0x37, 0x1c, 0x10, 0xe9, 0x6b, 0x5, 0, 0, 0xc7, 0x45, 0x84, 0xf5, 0x59, 0x1c, 0x10, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0x84, 0x83, 0xc2, 0x1e, 0x8b, 0x45, 0x84, 0xe8, 0xde, 0xed, 0, 0, 0xe8, 0x58, 0x29, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x6d, 0x29, 0xfa, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0xd9, 0x82, 0x1a, 0x10, 0xe8, 0x5d, 0xdc, 0xfe, 0xff, 0xe9, 0x29, 0x5, 0, 0, 0xe8, 0x8a, 0xec, 0xff, 0xff, 0xe9, 0x1f, 0x5, 0, 0, 0xb9, 0x1e, 0, 0, 0, 0xbb, 0x74, 0x5e, 0x1c, 0x10, 0x8a, 0x45, 0xec, 0x4, 0x63, 0xf, 0xbe, 0xd0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x90, 0xe1, 0xfd, 0xff, 0xba, 0xe5, 0x82, 0x1a, 0x10, 0xb8, 0x74, 0x5e, 0x1c, 0x10, 0xe8, 0x31, 0xde, 0x3, 0, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0xb8, 0x74, 0x5e, 0x1c, 0x10, 0xe8, 0x22, 0xde, 0x3, 0, 0x31, 0xc0, 0x50, 0xb9, 0x1, 0, 0, 0, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0x74, 0x5e, 0x1c, 0x10, 0xe8, 0xfb, 0xdb, 0xfe, 0xff, 0xba, 0x95, 0x2, 0, 0, 0xb8, 0x74, 0x5e, 0x1c, 0x10, 0xe8, 0x28, 0xdb, 0xfe, 0xff, 0xe9, 0xb8, 0x4, 0, 0, 0xc7, 0x45, 0x80, 0xf5, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0x80, 0x8b, 0x48, 0x4, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0x80, 0x8b, 0x58, 0x2, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0x80, 0x8b, 0x30, 0xc1, 0xfe, 0x10, 0x8b, 0x45, 0x80, 0xf, 0xbf, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xb1, 0x71, 0xfb, 0xff, 0x89, 0xf2, 0xe8, 0x1d, 0xf9, 0xfa, 0xff, 0xe9, 0x70, 0x4, 0, 0, 0x8b, 0x45, 0xec, 0x66, 0xa3, 0xee, 0x59, 0x1c, 0x10, 0xf, 0xbf, 0x5d, 0xf0, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0xb8, 0x48, 0x5e, 0x1c, 0x10, 0xe8, 0xab, 0xdc, 0x3, 0, 0xe9, 0x4f, 0x4, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x8a, 0x15, 0xf5, 0x59, 0x1c, 0x10, 0x88, 0x90, 0xe0, 0x59, 0x1c, 0x10, 0xe9, 0x3a, 0x4, 0, 0, 0xc6, 0x5, 0xec, 0x59, 0x1c, 0x10, 0x1, 0xe9, 0x2e, 0x4, 0, 0, 0x31, 0xd2, 0x8a, 0x15, 0xf5, 0x59, 0x1c, 0x10, 0x8a, 0x45, 0xec, 0x4, 0x6b, 0xf, 0xbe, 0xc0, 0xe8, 0x21, 0x29, 0xfa, 0xff, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x4a, 0xde, 0, 0, 0xe9, 0xb, 0x4, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0xec, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0xc1, 0xbc, 0xfd, 0xff, 0x89, 0x45, 0xf8, 0x83, 0x7d, 0xf8, 0, 0x75, 0xe, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x3c, 0xe8, 0xff, 0xff, 0xe9, 0x26, 0x2, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0x54, 0x2b, 0x1, 0, 0x84, 0xc0, 0x74, 0xd, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0x6, 0xe8, 0xf4, 0xff, 0xc7, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xf5, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x2c, 0x96, 0x3, 0, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8a, 0x10, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x3d, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8a, 0x50, 0x1, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x3e, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x66, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x66, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x43, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8a, 0x50, 0x14, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x4f, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x66, 0x83, 0x78, 0x18, 0, 0xf, 0x84, 0x8f, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x12, 0x40, 0xf, 0x84, 0xd7, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x6, 0xc6, 0x2, 0, 0xb8, 0x2d, 0, 0, 0, 0xe8, 0x42, 0xdb, 0x3, 0, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x74, 0xff, 0xff, 0xff, 0, 0x74, 0x5b, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x40, 0x4, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x40, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x48, 0xe, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x58, 0xa, 0x8b, 0x55, 0xf8, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x1b, 0, 0xff, 0xff, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0xe3, 0xe6, 0xf4, 0xff, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8a, 0x50, 0x17, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x2a, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8a, 0x50, 0x15, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x4e, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8a, 0x50, 0x16, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x64, 0xe9, 0xab, 0, 0, 0, 0xb8, 0x1c, 0, 0, 0, 0xe8, 0x73, 0xda, 0x3, 0, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x64, 0xff, 0xff, 0xff, 0, 0x74, 0x31, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x41, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x3f, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xe8, 0x91, 0x1b, 0xff, 0xff, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0x3e, 0xe6, 0xf4, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0xd7, 0xe5, 0xf4, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x48, 0x2, 0x8b, 0x9d, 0x7c, 0xff, 0xff, 0xff, 0x83, 0xc3, 0x1a, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x50, 0x16, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0xff, 0x51, 0x40, 0x8b, 0x45, 0xf8, 0xe8, 0x84, 0xc4, 0x2, 0, 0xe9, 0xb9, 0x1, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0xec, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0x6f, 0xba, 0xfd, 0xff, 0x89, 0x45, 0xf8, 0x83, 0x7d, 0xf8, 0, 0x75, 0xb, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xea, 0xe5, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0xae, 0x6b, 0x2, 0, 0xe9, 0x86, 0x1, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0xec, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0x3c, 0xba, 0xfd, 0xff, 0x89, 0x45, 0xf8, 0x83, 0x7d, 0xf8, 0, 0x75, 0xb, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xb7, 0xe5, 0xff, 0xff, 0xeb, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x27, 0x71, 0x2, 0, 0xe9, 0x55, 0x1, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0xec, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0xb, 0xba, 0xfd, 0xff, 0x89, 0x45, 0xf8, 0x83, 0x7d, 0xf8, 0, 0x75, 0xb, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0x86, 0xe5, 0xff, 0xff, 0xeb, 0xd, 0xba, 0xf5, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xee, 0x75, 0x2, 0, 0xe9, 0x1f, 0x1, 0, 0, 0xb8, 0xe8, 0x82, 0x1a, 0x10, 0xe8, 0x27, 0xe6, 0xfe, 0xff, 0xe9, 0x10, 0x1, 0, 0, 0xc6, 0x5, 0x66, 0x58, 0x1c, 0x10, 0x1, 0xe9, 0x4, 0x1, 0, 0, 0xe9, 0xff, 0, 0, 0, 0x8d, 0x40, 0, 0x38, 0x76, 0x12, 0x10, 0x4b, 0x7d, 0x12, 0x10, 0xf0, 0x84, 0x12, 0x10, 0xf0, 0x84, 0x12, 0x10, 0xf0, 0x84, 0x12, 0x10, 0xef, 0x7c, 0x12, 0x10, 0x60, 0x7d, 0x12, 0x10, 0x8b, 0x7e, 0x12, 0x10, 0x34, 0x7f, 0x12, 0x10, 0x84, 0x7f, 0x12, 0x10, 0x92, 0x7f, 0x12, 0x10, 0xe4, 0x7f, 0x12, 0x10, 0x3, 0x80, 0x12, 0x10, 0x2c, 0x80, 0x12, 0x10, 0x44, 0x80, 0x12, 0x10, 0xf0, 0x84, 0x12, 0x10, 0x89, 0x80, 0x12, 0x10, 0xcb, 0x80, 0x12, 0x10, 0xd5, 0x80, 0x12, 0x10, 0xf0, 0x84, 0x12, 0x10, 0xa0, 0x7f, 0x12, 0x10, 0x3c, 0x81, 0x12, 0x10, 0xae, 0x7f, 0x12, 0x10, 0x84, 0x81, 0x12, 0x10, 0xa5, 0x81, 0x12, 0x10, 0xf0, 0x84, 0x12, 0x10, 0xc6, 0x81, 0x12, 0x10, 0xf0, 0x84, 0x12, 0x10, 0xd5, 0x77, 0x12, 0x10, 0xf3, 0x77, 0x12, 0x10, 0x29, 0x78, 0x12, 0x10, 0xe1, 0x78, 0x12, 0x10, 0xe1, 0x78, 0x12, 0x10, 0xb3, 0x7c, 0x12, 0x10, 0x23, 0x7d, 0x12, 0x10, 0xd8, 0x7a, 0x12, 0x10, 0xb6, 0x7b, 0x12, 0x10, 0x72, 0x7c, 0x12, 0x10, 0xe9, 0x81, 0x12, 0x10, 0xd5, 0x84, 0x12, 0x10, 0xe4, 0x84, 0x12, 0x10, 0x3b, 0x84, 0x12, 0x10, 0x3, 0x80, 0x12, 0x10, 0x9f, 0x84, 0x12, 0x10, 0x91, 0x76, 0x12, 0x10, 0x62, 0x76, 0x12, 0x10, 0xf7, 0x7e, 0x12, 0x10, 0xf0, 0x84, 0x12, 0x10, 0xd6, 0x7e, 0x12, 0x10, 0xba, 0x81, 0x12, 0x10, 0x6e, 0x84, 0x12, 0x10, 0xeb, 0x7e, 0x12, 0x10, 0x4d, 0x76, 0x12, 0x10, 0x8a, 0x45, 0xf4, 0x88, 0x85, 0x54, 0xff, 0xff, 0xff, 0x80, 0xbd, 0x54, 0xff, 0xff, 0xff, 0x34, 0xf, 0x87, 0xe, 0xff, 0xff, 0xff, 0x31, 0xc0, 0x8a, 0x85, 0x54, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0xf8, 0x84, 0x12, 0x10, 0xe9, 0x13, 0xf0, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101275ed, 0x5)   pushd(0xd4);                          /* push dword 0xd4 */
    II(0x101275f2, 0x5)   calld(sys_check_available_stack_size, 0x3e75b); /* call 0x10165d52 */
    II(0x101275f7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101275f8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101275f9, 0x1)   pushd(edx);                           /* push edx */
    II(0x101275fa, 0x1)   pushd(esi);                           /* push esi */
    II(0x101275fb, 0x1)   pushd(edi);                           /* push edi */
    II(0x101275fc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101275fd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101275ff, 0x6)   sub(esp, 0xac);                       /* sub esp, 0xac */
    II(0x10127605, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x101c59f5); /* mov dword [ebp-0x4], 0x101c59f5 */
l_0x1012760c:
    II(0x1012760c, 0x5)   calld(0x10125d1f, -0x18f2);           /* call 0x10125d1f */
    II(0x10127611, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10127613, 0x6)   jzd(0x101285f9, 0xfe0);               /* jz dword 0x101285f9 */
    II(0x10127619, 0x6)   mov(ax, memw_a32(ds, 0x101c59f1));    /* mov ax, [0x101c59f1] */
    II(0x1012761f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10127622, 0x6)   mov(ax, memw_a32(ds, 0x101c59f3));    /* mov ax, [0x101c59f3] */
    II(0x10127628, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012762b, 0x5)   mov(al, memb_a32(ds, 0x101c59f0));    /* mov al, [0x101c59f0] */
    II(0x10127630, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x10127633, 0x5)   jmpd(0x101285cc, 0xf94);              /* jmp 0x101285cc */
l_0x10127638:
    II(0x10127638, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012763c, 0x6)   mov(dl, memb_a32(ds, 0x101c59f5));    /* mov dl, [0x101c59f5] */
    II(0x10127642, 0x6)   mov(memb_a32(ds, eax + 0x101c59d0), dl); /* mov [eax+0x101c59d0], dl */
    II(0x10127648, 0x5)   jmpd(0x101285f4, 0xfa7);              /* jmp 0x101285f4 */
l_0x1012764d:
    II(0x1012764d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127651, 0x6)   mov(dl, memb_a32(ds, 0x101c59f5));    /* mov dl, [0x101c59f5] */
    II(0x10127657, 0x6)   mov(memb_a32(ds, eax + 0x101c59dc), dl); /* mov [eax+0x101c59dc], dl */
    II(0x1012765d, 0x5)   jmpd(0x101285f4, 0xf92);              /* jmp 0x101285f4 */
l_0x10127662:
    II(0x10127662, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x101c59f5); /* mov dword [ebp-0x18], 0x101c59f5 */
    II(0x10127669, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012766d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10127670, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10127672, 0x6)   mov(memb_a32(ds, edx + 0x101c59d4), al); /* mov [edx+0x101c59d4], al */
    II(0x10127678, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012767c, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1012767e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10127681, 0x4)   mov(ax, memw_a32(ds, eax + 0x1));     /* mov ax, [eax+0x1] */
    II(0x10127685, 0x7)   mov(memw_a32(ds, edx + 0x101c59e4), ax); /* mov [edx+0x101c59e4], ax */
    II(0x1012768c, 0x5)   jmpd(0x101285f4, 0xf63);              /* jmp 0x101285f4 */
l_0x10127691:
    II(0x10127691, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x10127698, 0x6)   jnzd(0x101277d0, 0x132);              /* jnz dword 0x101277d0 */
    II(0x1012769e, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101276a3, 0x3)   mov(al, memb_a32(ds, eax + 0x10));    /* mov al, [eax+0x10] */
    II(0x101276a6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101276ab, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x101276ae, 0x6)   jzd(0x101285f4, 0xf40);               /* jz dword 0x101285f4 */
    II(0x101276b4, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0);     /* mov byte [ebp-0x20], 0x0 */
    II(0x101276b8, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0x8);   /* mov byte [ebp-0x1c], 0x8 */
l_0x101276bc:
    II(0x101276bc, 0x3)   dec(memb_a32(ss, ebp - 0x1c));        /* dec byte [ebp-0x1c] */
    II(0x101276bf, 0x4)   cmp(memb_a32(ss, ebp - 0x1c), -0x1 /* 0xff */); /* cmp byte [ebp-0x1c], 0xff */
    II(0x101276c3, 0x2)   jzd(0x101276e8, 0x23);                /* jz 0x101276e8 */
    II(0x101276c5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101276c7, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x101276ca, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101276cc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101276ce, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101276d3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101276d5, 0x7)   mov(ax, memw_a32(ds, eax + 0x328));   /* mov ax, [eax+0x328] */
    II(0x101276dc, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x101276e0, 0x2)   jnzd(0x101276e6, 0x4);                /* jnz 0x101276e6 */
    II(0x101276e2, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
l_0x101276e6:
    II(0x101276e6, 0x2)   jmpd(0x101276bc, -0x2c);              /* jmp 0x101276bc */
l_0x101276e8:
    II(0x101276e8, 0x4)   cmp(memb_a32(ss, ebp - 0x20), 0);     /* cmp byte [ebp-0x20], 0x0 */
    II(0x101276ec, 0x6)   jnzd(0x101277d0, 0xde);               /* jnz dword 0x101277d0 */
    II(0x101276f2, 0x5)   mov(eax, 0x101a826e);                 /* mov eax, 0x101a826e */ /* "v1.04" */
    II(0x101276f7, 0x5)   calld(sys_strlen, 0x4a7cb);           /* call 0x10171ec7 */
    II(0x101276fc, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101276ff, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x24)); /* movsx ebx, word [ebp-0x24] */
    II(0x10127703, 0x5)   mov(edx, 0x101a8274);                 /* mov edx, 0x101a8274 */ /* "v1.04" */
    II(0x10127708, 0x5)   mov(eax, 0x101c59f5);                 /* mov eax, 0x101c59f5 */
    II(0x1012770d, 0x5)   calld(sys_strncmp, 0x51a4a);          /* call 0x1017915c */
    II(0x10127712, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10127714, 0x2)   jzd(0x10127759, 0x43);                /* jz 0x10127759 */
    II(0x10127716, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127718, 0x5)   mov(al, memb_a32(ds, 0x101c59c8));    /* mov al, [0x101c59c8] */
    II(0x1012771d, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10127720, 0x2)   jzd(0x1012772e, 0xc);                 /* jz 0x1012772e */
    II(0x10127722, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127724, 0x5)   mov(al, memb_a32(ds, 0x101c59c8));    /* mov al, [0x101c59c8] */
    II(0x10127729, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1012772c, 0x2)   jnzd(0x10127754, 0x26);               /* jnz 0x10127754 */
l_0x1012772e:
    II(0x1012772e, 0x5)   calld(0x100caa00, -0x5cd33);          /* call 0x100caa00 */
    II(0x10127733, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10127738, 0x1)   pushd(eax);                           /* push eax */
    II(0x10127739, 0x5)   calld(0x100caa20, -0x5cd1e);          /* call 0x100caa20 */
    II(0x1012773e, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10127740, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10127745, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1012774a, 0x5)   mov(eax, 0x101a827a);                 /* mov eax, 0x101a827a */ /* "Host is not the same release version.\nUnable to continue with connection..." */
    II(0x1012774f, 0x5)   calld(0x10115d23, -0x11a31);          /* call 0x10115d23 */
l_0x10127754:
    II(0x10127754, 0x5)   jmpd(0x101285f4, 0xe9b);              /* jmp 0x101285f4 */
l_0x10127759:
    II(0x10127759, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0);     /* mov byte [ebp-0x1c], 0x0 */
    II(0x1012775d, 0x2)   jmpd(0x10127765, 0x6);                /* jmp 0x10127765 */
l_0x1012775f:
    II(0x1012775f, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x10127762, 0x3)   inc(memb_a32(ss, ebp - 0x1c));        /* inc byte [ebp-0x1c] */
l_0x10127765:
    II(0x10127765, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127767, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x1012776a, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1012776c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012776e, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127773, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10127775, 0x6)   mov(eax, memd_a32(ds, eax + 0x326));  /* mov eax, [eax+0x326] */
    II(0x1012777b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012777e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10127780, 0x2)   jnzd(0x1012775f, -0x23);              /* jnz 0x1012775f */
    II(0x10127782, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10127786, 0x5)   mov(eax, 0x101c59f5);                 /* mov eax, 0x101c59f5 */
    II(0x1012778b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012778d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012778f, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x10127792, 0x3)   imul(ebx, eax, 0x1e);                 /* imul ebx, eax, 0x1e */
    II(0x10127795, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x1012779a, 0x5)   add(eax, 0x238);                      /* add eax, 0x238 */
    II(0x1012779f, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x101277a1, 0x5)   calld(sys_strcpy, 0x3e729);           /* call 0x10165ecf */
    II(0x101277a6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101277a8, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x101277ab, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101277ad, 0x6)   mov(edx, memd_a32(ds, 0x101c59cc));   /* mov edx, [0x101c59cc] */
    II(0x101277b3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101277b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101277b8, 0x7)   mov(memw_a32(ds, edx + 0x328), ax);   /* mov [edx+0x328], ax */
    II(0x101277bf, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101277c4, 0x3)   inc(memb_a32(ds, eax + 0x10));        /* inc byte [eax+0x10] */
    II(0x101277c7, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101277cc, 0x4)   mov(memb_a32(ds, eax + 0xe), 0x1);    /* mov byte [eax+0xe], 0x1 */
l_0x101277d0:
    II(0x101277d0, 0x5)   jmpd(0x101285f4, 0xe1f);              /* jmp 0x101285f4 */
l_0x101277d5:
    II(0x101277d5, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x101277dc, 0x2)   jnzd(0x101277ee, 0x10);               /* jnz 0x101277ee */
    II(0x101277de, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101277e3, 0x4)   cmp(memb_a32(ds, eax + 0x8), 0);      /* cmp byte [eax+0x8], 0x0 */
    II(0x101277e7, 0x2)   jzd(0x101277ee, 0x5);                 /* jz 0x101277ee */
    II(0x101277e9, 0x5)   calld(0x1012a96a, 0x317c);            /* call 0x1012a96a */
l_0x101277ee:
    II(0x101277ee, 0x5)   jmpd(0x101285f4, 0xe01);              /* jmp 0x101285f4 */
l_0x101277f3:
    II(0x101277f3, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x101277fa, 0x2)   jnzd(0x10127824, 0x28);               /* jnz 0x10127824 */
    II(0x101277fc, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127801, 0x4)   mov(ax, memw_a32(ds, eax + 0x14));    /* mov ax, [eax+0x14] */
    II(0x10127805, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10127809, 0x2)   jnzd(0x10127824, 0x19);               /* jnz 0x10127824 */
    II(0x1012780b, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x10127810, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10127815, 0x5)   mov(eax, 0x101c4090);                 /* mov eax, 0x101c4090 */
    II(0x1012781a, 0x5)   calld(sys_memcpy, 0x3e62c);           /* call 0x10165e4b */
    II(0x1012781f, 0x5)   calld(0x10127184, -0x6a0);            /* call 0x10127184 */
l_0x10127824:
    II(0x10127824, 0x5)   jmpd(0x101285f4, 0xdcb);              /* jmp 0x101285f4 */
l_0x10127829:
    II(0x10127829, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x10127830, 0x6)   jnzd(0x101278dc, 0xa6);               /* jnz dword 0x101278dc */
    II(0x10127836, 0x6)   mov(edx, memd_a32(ds, 0x101c59cc));   /* mov edx, [0x101c59cc] */
    II(0x1012783c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012783f, 0x4)   mov(memw_a32(ds, edx + 0x14), ax);    /* mov [edx+0x14], ax */
    II(0x10127843, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0x101c59f5); /* mov dword [ebp-0x28], 0x101c59f5 */
    II(0x1012784a, 0x6)   mov(edx, memd_a32(ds, 0x101c59cc));   /* mov edx, [0x101c59cc] */
    II(0x10127850, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10127853, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10127856, 0x4)   mov(memw_a32(ds, edx + 0xc), ax);     /* mov [edx+0xc], ax */
    II(0x1012785a, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0x4);   /* mov dword [ebp-0x2c], 0x4 */
l_0x10127861:
    II(0x10127861, 0x3)   dec(memd_a32(ss, ebp - 0x2c));        /* dec dword [ebp-0x2c] */
    II(0x10127864, 0x5)   cmp(memw_a32(ss, ebp - 0x2c), -0x1 /* 0xff */); /* cmp word [ebp-0x2c], 0xff */
    II(0x10127869, 0x2)   jzd(0x101278b6, 0x4b);                /* jz 0x101278b6 */
    II(0x1012786b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1012786f, 0x3)   imul(edx, edx, 0x1e);                 /* imul edx, edx, 0x1e */
    II(0x10127872, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10127875, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10127878, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012787a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1012787e, 0x3)   imul(ebx, eax, 0x1e);                 /* imul ebx, eax, 0x1e */
    II(0x10127881, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127886, 0x5)   add(eax, 0x338);                      /* add eax, 0x338 */
    II(0x1012788b, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1012788d, 0x5)   calld(sys_strcpy, 0x3e63d);           /* call 0x10165ecf */
    II(0x10127892, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x10127896, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10127898, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x1012789b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1012789f, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x101278a1, 0x6)   mov(ebx, memd_a32(ds, 0x101c59cc));   /* mov ebx, [0x101c59cc] */
    II(0x101278a7, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x101278a9, 0x4)   mov(ax, memw_a32(ds, eax + 0x7a));    /* mov ax, [eax+0x7a] */
    II(0x101278ad, 0x7)   mov(memw_a32(ds, edx + 0x4dc), ax);   /* mov [edx+0x4dc], ax */
    II(0x101278b4, 0x2)   jmpd(0x10127861, -0x55);              /* jmp 0x10127861 */
l_0x101278b6:
    II(0x101278b6, 0x5)   mov(ebx, 0xad);                       /* mov ebx, 0xad */
    II(0x101278bb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x101278be, 0x6)   add(edx, 0x82);                       /* add edx, 0x82 */
    II(0x101278c4, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101278c9, 0x5)   add(eax, 0x4f0);                      /* add eax, 0x4f0 */
    II(0x101278ce, 0x5)   calld(sys_memcpy, 0x3e578);           /* call 0x10165e4b */
    II(0x101278d3, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101278d8, 0x4)   mov(memb_a32(ds, eax + 0xe), 0x1);    /* mov byte [eax+0xe], 0x1 */
l_0x101278dc:
    II(0x101278dc, 0x5)   jmpd(0x101285f4, 0xd13);              /* jmp 0x101285f4 */
l_0x101278e1:
    II(0x101278e1, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x101278e8, 0x6)   jnzd(0x10127ad3, 0x1e5);              /* jnz dword 0x10127ad3 */
    II(0x101278ee, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101278f3, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x101278f7, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x101278fb, 0x6)   jnzd(0x101279ae, 0xad);               /* jnz dword 0x101279ae */
    II(0x10127901, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127903, 0x5)   mov(al, memb_a32(ds, 0x101c59f0));    /* mov al, [0x101c59f0] */
    II(0x10127908, 0x3)   cmp(eax, 0x20);                       /* cmp eax, 0x20 */
    II(0x1012790b, 0x2)   jnzd(0x10127921, 0x14);               /* jnz 0x10127921 */
    II(0x1012790d, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127912, 0x3)   mov(al, memb_a32(ds, eax + 0x11));    /* mov al, [eax+0x11] */
    II(0x10127915, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012791a, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x1012791f, 0x2)   jnzd(0x10127923, 0x2);                /* jnz 0x10127923 */
l_0x10127921:
    II(0x10127921, 0x2)   jmpd(0x10127991, 0x6e);               /* jmp 0x10127991 */
l_0x10127923:
    II(0x10127923, 0x5)   calld(0x101272a5, -0x683);            /* call 0x101272a5 */
    II(0x10127928, 0x7)   mov(memb_a32(ds, 0x101c5630), 0x2);   /* mov byte [0x101c5630], 0x2 */
    II(0x1012792f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127931, 0x5)   mov(al, memb_a32(ds, 0x101c59c8));    /* mov al, [0x101c59c8] */
    II(0x10127936, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10127939, 0x2)   jnzd(0x10127983, 0x48);               /* jnz 0x10127983 */
    II(0x1012793b, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0x101c59f5); /* mov dword [ebp-0x30], 0x101c59f5 */
    II(0x10127942, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x10127947, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x1012794a, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x1012794d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10127950, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10127953, 0x3)   imul(ecx, eax, 0x6);                  /* imul ecx, eax, 0x6 */
    II(0x10127956, 0x5)   mov(eax, 0x101c4090);                 /* mov eax, 0x101c4090 */
    II(0x1012795b, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x1012795d, 0x5)   calld(sys_memcpy, 0x3e4e9);           /* call 0x10165e4b */
    II(0x10127962, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10127965, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x10127969, 0x6)   mov(memw_a32(ds, 0x101c40d0), ax);    /* mov [0x101c40d0], ax */
    II(0x1012796f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10127972, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10127975, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10127977, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1012797c, 0x5)   calld(0x101270fb, -0x886);            /* call 0x101270fb */
    II(0x10127981, 0x2)   jmpd(0x1012798c, 0x9);                /* jmp 0x1012798c */
l_0x10127983:
    II(0x10127983, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127988, 0x4)   mov(memb_a32(ds, eax + 0xa), 0x1);    /* mov byte [eax+0xa], 0x1 */
l_0x1012798c:
    II(0x1012798c, 0x5)   jmpd(0x101285f4, 0xc63);              /* jmp 0x101285f4 */
l_0x10127991:
    II(0x10127991, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127996, 0x6)   mov(memw_a32(ds, eax + 0xc), 0);      /* mov word [eax+0xc], 0x0 */
    II(0x1012799c, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101279a1, 0x4)   mov(memb_a32(ds, eax + 0xb), 0);      /* mov byte [eax+0xb], 0x0 */
    II(0x101279a5, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101279aa, 0x4)   mov(memb_a32(ds, eax + 0x11), 0xff);  /* mov byte [eax+0x11], 0xff */
l_0x101279ae:
    II(0x101279ae, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x8);   /* mov dword [ebp-0x34], 0x8 */
l_0x101279b5:
    II(0x101279b5, 0x3)   dec(memd_a32(ss, ebp - 0x34));        /* dec dword [ebp-0x34] */
    II(0x101279b8, 0x5)   cmp(memw_a32(ss, ebp - 0x34), -0x1 /* 0xff */); /* cmp word [ebp-0x34], 0xff */
    II(0x101279bd, 0x2)   jzd(0x10127a1a, 0x5b);                /* jz 0x10127a1a */
    II(0x101279bf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x101279c3, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101279c5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101279c7, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101279cc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101279ce, 0x7)   mov(ax, memw_a32(ds, eax + 0x328));   /* mov ax, [eax+0x328] */
    II(0x101279d5, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x101279d9, 0x2)   jnzd(0x10127a18, 0x3d);               /* jnz 0x10127a18 */
    II(0x101279db, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x101279df, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101279e1, 0x6)   mov(edx, memd_a32(ds, 0x101c59cc));   /* mov edx, [0x101c59cc] */
    II(0x101279e7, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101279e9, 0x9)   mov(memw_a32(ds, eax + 0x328), 0);    /* mov word [eax+0x328], 0x0 */
    II(0x101279f2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x101279f6, 0x3)   imul(edx, edx, 0x1e);                 /* imul edx, edx, 0x1e */
    II(0x101279f9, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101279fe, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10127a00, 0x7)   mov(memb_a32(ds, eax + 0x238), 0);    /* mov byte [eax+0x238], 0x0 */
    II(0x10127a07, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127a0c, 0x3)   dec(memb_a32(ds, eax + 0x10));        /* dec byte [eax+0x10] */
    II(0x10127a0f, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127a14, 0x4)   mov(memb_a32(ds, eax + 0xe), 0x1);    /* mov byte [eax+0xe], 0x1 */
l_0x10127a18:
    II(0x10127a18, 0x2)   jmpd(0x101279b5, -0x65);              /* jmp 0x101279b5 */
l_0x10127a1a:
    II(0x10127a1a, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x4);   /* mov dword [ebp-0x34], 0x4 */
l_0x10127a21:
    II(0x10127a21, 0x3)   dec(memd_a32(ss, ebp - 0x34));        /* dec dword [ebp-0x34] */
    II(0x10127a24, 0x5)   cmp(memw_a32(ss, ebp - 0x34), -0x1 /* 0xff */); /* cmp word [ebp-0x34], 0xff */
    II(0x10127a29, 0x6)   jzd(0x10127ac5, 0x96);                /* jz dword 0x10127ac5 */
    II(0x10127a2f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x10127a33, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10127a35, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10127a37, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127a3c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10127a3e, 0x7)   mov(ax, memw_a32(ds, eax + 0x4dc));   /* mov ax, [eax+0x4dc] */
    II(0x10127a45, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10127a49, 0x2)   jnzd(0x10127ac0, 0x75);               /* jnz 0x10127ac0 */
    II(0x10127a4b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x10127a4f, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127a54, 0x5)   calld(0x10113129, -0x14930);          /* call 0x10113129 */
    II(0x10127a59, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127a5e, 0x4)   cmp(memb_a32(ds, eax + 0x8), 0);      /* cmp byte [eax+0x8], 0x0 */
    II(0x10127a62, 0x2)   jzd(0x10127a6c, 0x8);                 /* jz 0x10127a6c */
    II(0x10127a64, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127a69, 0x3)   dec(memb_a32(ds, eax + 0xf));         /* dec byte [eax+0xf] */
l_0x10127a6c:
    II(0x10127a6c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127a70, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10127a73, 0x2)   jgd(0x10127ab7, 0x42);                /* jg 0x10127ab7 */
    II(0x10127a75, 0x3)   mov(al, memb_a32(ss, ebp - 0x34));    /* mov al, [ebp-0x34] */
    II(0x10127a78, 0x2)   add(al, 0xd);                         /* add al, 0xd */
    II(0x10127a7a, 0x3)   mov(memb_a32(ss, ebp - 0x38), al);    /* mov [ebp-0x38], al */
    II(0x10127a7d, 0x5)   mov(edx, 0x30a);                      /* mov edx, 0x30a */
    II(0x10127a82, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x38)); /* movsx eax, byte [ebp-0x38] */
    II(0x10127a86, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10127a89, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10127a8b, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127a90, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10127a92, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10127a95, 0x5)   calld(0x100cf211, -0x58889);          /* call 0x100cf211 */
    II(0x10127a9a, 0x5)   mov(edx, 0x30a);                      /* mov edx, 0x30a */
    II(0x10127a9f, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x38)); /* movsx eax, byte [ebp-0x38] */
    II(0x10127aa3, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10127aa6, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10127aa8, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127aad, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10127aaf, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10127ab2, 0x5)   calld(0x100cf363, -0x58754);          /* call 0x100cf363 */
l_0x10127ab7:
    II(0x10127ab7, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127abc, 0x4)   mov(memb_a32(ds, eax + 0xe), 0x1);    /* mov byte [eax+0xe], 0x1 */
l_0x10127ac0:
    II(0x10127ac0, 0x5)   jmpd(0x10127a21, -0xa4);              /* jmp 0x10127a21 */
l_0x10127ac5:
    II(0x10127ac5, 0x7)   mov(memb_a32(ds, 0x101c59b9), 0);     /* mov byte [0x101c59b9], 0x0 */
    II(0x10127acc, 0x7)   mov(memb_a32(ds, 0x101c59ba), 0);     /* mov byte [0x101c59ba], 0x0 */
l_0x10127ad3:
    II(0x10127ad3, 0x5)   jmpd(0x101285f4, 0xb1c);              /* jmp 0x101285f4 */
l_0x10127ad8:
    II(0x10127ad8, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x10127adf, 0x2)   jnzd(0x10127af0, 0xf);                /* jnz 0x10127af0 */
    II(0x10127ae1, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127ae6, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x10127aea, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10127aee, 0x2)   jzd(0x10127af5, 0x5);                 /* jz 0x10127af5 */
l_0x10127af0:
    II(0x10127af0, 0x5)   jmpd(0x10127bb1, 0xbc);               /* jmp 0x10127bb1 */
l_0x10127af5:
    II(0x10127af5, 0x7)   mov(memd_a32(ss, ebp - 0x3c), 0x101c59f5); /* mov dword [ebp-0x3c], 0x101c59f5 */
    II(0x10127afc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10127aff, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10127b02, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x10127b05, 0x7)   mov(memd_a32(ss, ebp - 0x44), 0x4);   /* mov dword [ebp-0x44], 0x4 */
l_0x10127b0c:
    II(0x10127b0c, 0x3)   dec(memd_a32(ss, ebp - 0x44));        /* dec dword [ebp-0x44] */
    II(0x10127b0f, 0x5)   cmp(memw_a32(ss, ebp - 0x44), -0x1 /* 0xff */); /* cmp word [ebp-0x44], 0xff */
    II(0x10127b14, 0x2)   jzd(0x10127b4a, 0x34);                /* jz 0x10127b4a */
    II(0x10127b16, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x44)); /* movsx eax, word [ebp-0x44] */
    II(0x10127b1a, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10127b1c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10127b1e, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127b23, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10127b25, 0x7)   mov(ax, memw_a32(ds, eax + 0x4dc));   /* mov ax, [eax+0x4dc] */
    II(0x10127b2c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x40));    /* cmp ax, [ebp-0x40] */
    II(0x10127b30, 0x2)   jnzd(0x10127b48, 0x16);               /* jnz 0x10127b48 */
    II(0x10127b32, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x44)); /* movsx edx, word [ebp-0x44] */
    II(0x10127b36, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127b3b, 0x5)   calld(0x10113129, -0x14a17);          /* call 0x10113129 */
    II(0x10127b40, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127b45, 0x3)   dec(memb_a32(ds, eax + 0xf));         /* dec byte [eax+0xf] */
l_0x10127b48:
    II(0x10127b48, 0x2)   jmpd(0x10127b0c, -0x3e);              /* jmp 0x10127b0c */
l_0x10127b4a:
    II(0x10127b4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10127b4d, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x10127b51, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x10127b54, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x44)); /* movsx edx, word [ebp-0x44] */
    II(0x10127b58, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10127b5a, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127b5f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10127b61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10127b64, 0x7)   mov(memw_a32(ds, edx + 0x4dc), ax);   /* mov [edx+0x4dc], ax */
    II(0x10127b6b, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127b70, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x44)); /* movsx edx, word [ebp-0x44] */
    II(0x10127b74, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10127b76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10127b79, 0x3)   mov(al, memb_a32(ds, eax + 0x4));     /* mov al, [eax+0x4] */
    II(0x10127b7c, 0x6)   mov(memb_a32(ds, edx + 0x4ec), al);   /* mov [edx+0x4ec], al */
    II(0x10127b82, 0x3)   mov(edx, memd_a32(ss, ebp - 0x3c));   /* mov edx, [ebp-0x3c] */
    II(0x10127b85, 0x3)   add(edx, 0x5);                        /* add edx, 0x5 */
    II(0x10127b88, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x44)); /* movsx eax, word [ebp-0x44] */
    II(0x10127b8c, 0x3)   imul(ebx, eax, 0x1e);                 /* imul ebx, eax, 0x1e */
    II(0x10127b8f, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127b94, 0x5)   add(eax, 0x338);                      /* add eax, 0x338 */
    II(0x10127b99, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10127b9b, 0x5)   calld(sys_strcpy, 0x3e32f);           /* call 0x10165ecf */
    II(0x10127ba0, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127ba5, 0x3)   inc(memb_a32(ds, eax + 0xf));         /* inc byte [eax+0xf] */
    II(0x10127ba8, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127bad, 0x4)   mov(memb_a32(ds, eax + 0xe), 0x1);    /* mov byte [eax+0xe], 0x1 */
l_0x10127bb1:
    II(0x10127bb1, 0x5)   jmpd(0x101285f4, 0xa3e);              /* jmp 0x101285f4 */
l_0x10127bb6:
    II(0x10127bb6, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x10127bbd, 0x6)   jnzd(0x10127c6d, 0xaa);               /* jnz dword 0x10127c6d */
    II(0x10127bc3, 0x7)   mov(memd_a32(ss, ebp - 0x48), 0x8);   /* mov dword [ebp-0x48], 0x8 */
l_0x10127bca:
    II(0x10127bca, 0x3)   dec(memd_a32(ss, ebp - 0x48));        /* dec dword [ebp-0x48] */
    II(0x10127bcd, 0x5)   cmp(memw_a32(ss, ebp - 0x48), -0x1 /* 0xff */); /* cmp word [ebp-0x48], 0xff */
    II(0x10127bd2, 0x2)   jzd(0x10127c18, 0x44);                /* jz 0x10127c18 */
    II(0x10127bd4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x10127bd8, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10127bda, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10127bdc, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127be1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10127be3, 0x7)   mov(ax, memw_a32(ds, eax + 0x328));   /* mov ax, [eax+0x328] */
    II(0x10127bea, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10127bee, 0x2)   jnzd(0x10127c16, 0x26);               /* jnz 0x10127c16 */
    II(0x10127bf0, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10127bf5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x10127bf9, 0x3)   imul(ebx, eax, 0x1e);                 /* imul ebx, eax, 0x1e */
    II(0x10127bfc, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127c01, 0x5)   add(eax, 0x238);                      /* add eax, 0x238 */
    II(0x10127c06, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10127c08, 0x5)   calld(sys_strcpy, 0x3e2c2);           /* call 0x10165ecf */
    II(0x10127c0d, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127c12, 0x4)   mov(memb_a32(ds, eax + 0xe), 0x1);    /* mov byte [eax+0xe], 0x1 */
l_0x10127c16:
    II(0x10127c16, 0x2)   jmpd(0x10127bca, -0x4e);              /* jmp 0x10127bca */
l_0x10127c18:
    II(0x10127c18, 0x7)   mov(memd_a32(ss, ebp - 0x48), 0x4);   /* mov dword [ebp-0x48], 0x4 */
l_0x10127c1f:
    II(0x10127c1f, 0x3)   dec(memd_a32(ss, ebp - 0x48));        /* dec dword [ebp-0x48] */
    II(0x10127c22, 0x5)   cmp(memw_a32(ss, ebp - 0x48), -0x1 /* 0xff */); /* cmp word [ebp-0x48], 0xff */
    II(0x10127c27, 0x2)   jzd(0x10127c6d, 0x44);                /* jz 0x10127c6d */
    II(0x10127c29, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x10127c2d, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10127c2f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10127c31, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127c36, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10127c38, 0x7)   mov(ax, memw_a32(ds, eax + 0x4dc));   /* mov ax, [eax+0x4dc] */
    II(0x10127c3f, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10127c43, 0x2)   jnzd(0x10127c6b, 0x26);               /* jnz 0x10127c6b */
    II(0x10127c45, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10127c4a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x10127c4e, 0x3)   imul(ebx, eax, 0x1e);                 /* imul ebx, eax, 0x1e */
    II(0x10127c51, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127c56, 0x5)   add(eax, 0x338);                      /* add eax, 0x338 */
    II(0x10127c5b, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10127c5d, 0x5)   calld(sys_strcpy, 0x3e26d);           /* call 0x10165ecf */
    II(0x10127c62, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127c67, 0x4)   mov(memb_a32(ds, eax + 0xe), 0x1);    /* mov byte [eax+0xe], 0x1 */
l_0x10127c6b:
    II(0x10127c6b, 0x2)   jmpd(0x10127c1f, -0x4e);              /* jmp 0x10127c1f */
l_0x10127c6d:
    II(0x10127c6d, 0x5)   jmpd(0x101285f4, 0x982);              /* jmp 0x101285f4 */
l_0x10127c72:
    II(0x10127c72, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x10127c79, 0x2)   jnzd(0x10127c8a, 0xf);                /* jnz 0x10127c8a */
    II(0x10127c7b, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127c80, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x10127c84, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10127c88, 0x2)   jzd(0x10127c8c, 0x2);                 /* jz 0x10127c8c */
l_0x10127c8a:
    II(0x10127c8a, 0x2)   jmpd(0x10127cae, 0x22);               /* jmp 0x10127cae */
l_0x10127c8c:
    II(0x10127c8c, 0x5)   mov(ebx, 0xad);                       /* mov ebx, 0xad */
    II(0x10127c91, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10127c96, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127c9b, 0x5)   add(eax, 0x4f0);                      /* add eax, 0x4f0 */
    II(0x10127ca0, 0x5)   calld(sys_memcpy, 0x3e1a6);           /* call 0x10165e4b */
    II(0x10127ca5, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127caa, 0x4)   mov(memb_a32(ds, eax + 0xe), 0x1);    /* mov byte [eax+0xe], 0x1 */
l_0x10127cae:
    II(0x10127cae, 0x5)   jmpd(0x101285f4, 0x941);              /* jmp 0x101285f4 */
l_0x10127cb3:
    II(0x10127cb3, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x10127cba, 0x2)   jnzd(0x10127ccb, 0xf);                /* jnz 0x10127ccb */
    II(0x10127cbc, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127cc1, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x10127cc5, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10127cc9, 0x2)   jzd(0x10127ccd, 0x2);                 /* jz 0x10127ccd */
l_0x10127ccb:
    II(0x10127ccb, 0x2)   jmpd(0x10127cea, 0x1d);               /* jmp 0x10127cea */
l_0x10127ccd:
    II(0x10127ccd, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10127cd2, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127cd7, 0x5)   add(eax, 0x446);                      /* add eax, 0x446 */
    II(0x10127cdc, 0x5)   calld(sys_strcpy, 0x3e1ee);           /* call 0x10165ecf */
    II(0x10127ce1, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127ce6, 0x4)   mov(memb_a32(ds, eax + 0xe), 0x1);    /* mov byte [eax+0xe], 0x1 */
l_0x10127cea:
    II(0x10127cea, 0x5)   jmpd(0x101285f4, 0x905);              /* jmp 0x101285f4 */
l_0x10127cef:
    II(0x10127cef, 0x7)   mov(memd_a32(ss, ebp - 0x4c), 0x101c59f5); /* mov dword [ebp-0x4c], 0x101c59f5 */
    II(0x10127cf6, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x10127cfb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4c));   /* mov edx, [ebp-0x4c] */
    II(0x10127cfe, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x10127d01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10127d04, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10127d07, 0x3)   imul(eax, eax, 0x6);                  /* imul eax, eax, 0x6 */
    II(0x10127d0a, 0x5)   mov(ecx, 0x101c4090);                 /* mov ecx, 0x101c4090 */
    II(0x10127d0f, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x10127d11, 0x5)   calld(sys_memcpy, 0x3e135);           /* call 0x10165e4b */
    II(0x10127d16, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127d1b, 0x3)   inc(memb_a32(ds, eax + 0xf));         /* inc byte [eax+0xf] */
    II(0x10127d1e, 0x5)   jmpd(0x101285f4, 0x8d1);              /* jmp 0x101285f4 */
l_0x10127d23:
    II(0x10127d23, 0x7)   mov(memd_a32(ss, ebp - 0x50), 0x101c59f5); /* mov dword [ebp-0x50], 0x101c59f5 */
    II(0x10127d2a, 0x5)   mov(ebx, 0x18);                       /* mov ebx, 0x18 */
    II(0x10127d2f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x50));   /* mov edx, [ebp-0x50] */
    II(0x10127d32, 0x5)   mov(eax, 0x101c4090);                 /* mov eax, 0x101c4090 */
    II(0x10127d37, 0x5)   calld(sys_memcpy, 0x3e10f);           /* call 0x10165e4b */
    II(0x10127d3c, 0x6)   mov(edx, memd_a32(ds, 0x101c59cc));   /* mov edx, [0x101c59cc] */
    II(0x10127d42, 0x4)   mov(memb_a32(ds, edx + 0xa), 0x1);    /* mov byte [edx+0xa], 0x1 */
    II(0x10127d46, 0x5)   jmpd(0x101285f4, 0x8a9);              /* jmp 0x101285f4 */
l_0x10127d4b:
    II(0x10127d4b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127d4f, 0x6)   mov(dl, memb_a32(ds, 0x101c59f5));    /* mov dl, [0x101c59f5] */
    II(0x10127d55, 0x6)   mov(memb_a32(ds, eax + 0x101c59c0), dl); /* mov [eax+0x101c59c0], dl */
    II(0x10127d5b, 0x5)   jmpd(0x101285f4, 0x894);              /* jmp 0x101285f4 */
l_0x10127d60:
    II(0x10127d60, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127d64, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10127d6a, 0x7)   mov(memb_a32(ds, eax + 0x101ca491), 0x1); /* mov byte [eax+0x101ca491], 0x1 */
    II(0x10127d71, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127d73, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x10127d78, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10127d7a, 0x6)   jzd(0x10127e7f, 0xff);                /* jz dword 0x10127e7f */
    II(0x10127d80, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0);     /* mov byte [ebp-0x54], 0x0 */
    II(0x10127d84, 0x7)   mov(memd_a32(ss, ebp - 0x58), 0);     /* mov dword [ebp-0x58], 0x0 */
    II(0x10127d8b, 0x2)   jmpd(0x10127d93, 0x6);                /* jmp 0x10127d93 */
l_0x10127d8d:
    II(0x10127d8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x10127d90, 0x3)   inc(memd_a32(ss, ebp - 0x58));        /* inc dword [ebp-0x58] */
l_0x10127d93:
    II(0x10127d93, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x10127d97, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10127d9a, 0x2)   jged(0x10127df0, 0x54);               /* jge 0x10127df0 */
    II(0x10127d9c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x10127da0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10127da6, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10127dac, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10127db1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10127db3, 0x2)   jzd(0x10127dcf, 0x1a);                /* jz 0x10127dcf */
    II(0x10127db5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x10127db9, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10127dbf, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10127dc5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10127dca, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10127dcd, 0x2)   jnzd(0x10127dd1, 0x2);                /* jnz 0x10127dd1 */
l_0x10127dcf:
    II(0x10127dcf, 0x2)   jmpd(0x10127dee, 0x1d);               /* jmp 0x10127dee */
l_0x10127dd1:
    II(0x10127dd1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x10127dd5, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10127ddb, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca491)); /* mov al, [eax+0x101ca491] */
    II(0x10127de1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10127de6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10127de8, 0x2)   jnzd(0x10127dee, 0x4);                /* jnz 0x10127dee */
    II(0x10127dea, 0x4)   mov(memb_a32(ss, ebp - 0x54), 0x1);   /* mov byte [ebp-0x54], 0x1 */
l_0x10127dee:
    II(0x10127dee, 0x2)   jmpd(0x10127d8d, -0x63);              /* jmp 0x10127d8d */
l_0x10127df0:
    II(0x10127df0, 0x5)   calld(0x10102912, -0x254e3);          /* call 0x10102912 */
    II(0x10127df5, 0x4)   cmp(memb_a32(ss, ebp - 0x54), 0);     /* cmp byte [ebp-0x54], 0x0 */
    II(0x10127df9, 0x6)   jzd(0x10127e7d, 0x7e);                /* jz dword 0x10127e7d */
    II(0x10127dff, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10127e03, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10127e06, 0x6)   pushd(memd_a32(ds, edx + 0x101bb444)); /* push dword [edx+0x101bb444] */
    II(0x10127e0c, 0x5)   mov(eax, 0x101a82c6);                 /* mov eax, 0x101a82c6 */ /* "%s has ended turn." */
    II(0x10127e11, 0x1)   pushd(eax);                           /* push eax */
    II(0x10127e12, 0x5)   mov(eax, 0x101c5e74);                 /* mov eax, 0x101c5e74 */
    II(0x10127e17, 0x1)   pushd(eax);                           /* push eax */
    II(0x10127e18, 0x5)   calld(sys_sprintf, 0x3e0e4);          /* call 0x10165f01 */
    II(0x10127e1d, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x10127e20, 0x5)   calld(0x100caa00, -0x5d425);          /* call 0x100caa00 */
    II(0x10127e25, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10127e2a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10127e2b, 0x5)   calld(0x100caa20, -0x5d410);          /* call 0x100caa20 */
    II(0x10127e30, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10127e32, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10127e34, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10127e39, 0x5)   mov(eax, 0x101c5e74);                 /* mov eax, 0x101c5e74 */
    II(0x10127e3e, 0x5)   calld(0x10115d23, -0x12120);          /* call 0x10115d23 */
    II(0x10127e43, 0x7)   mov(memd_a32(ss, ebp - 0x5c), 0x1);   /* mov dword [ebp-0x5c], 0x1 */
    II(0x10127e4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x10127e4d, 0x1)   inc(eax);                             /* inc eax */
    II(0x10127e4e, 0x4)   imul(eax, memd_a32(ss, ebp - 0x14));  /* imul eax, [ebp-0x14] */
    II(0x10127e52, 0x5)   add(eax, 0x413);                      /* add eax, 0x413 */
    II(0x10127e57, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
//    II(0x10127e5a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x10127e5d, 0x3)   add(eax, memd_a32(ss, ebp - 0x5c));   /* add eax, [ebp-0x5c] */
    II(0x10127e60, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x10127e63, 0x5)   calld(0x100d5470, -0x529f8);          /* call 0x100d5470 */
    II(0x10127e68, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10127e6b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x64)); /* movsx ebx, word [ebp-0x64] */
    II(0x10127e6f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x10127e73, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10127e78, 0x5)   calld(0x1013daea, 0x15c6d);           /* call 0x1013daea */
l_0x10127e7d:
    II(0x10127e7d, 0x2)   jmpd(0x10127e86, 0x7);                /* jmp 0x10127e86 */
l_0x10127e7f:
    II(0x10127e7f, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x9);   /* mov byte [0x101c391e], 0x9 */
l_0x10127e86:
    II(0x10127e86, 0x5)   jmpd(0x101285f4, 0x769);              /* jmp 0x101285f4 */
l_0x10127e8b:
    II(0x10127e8b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127e8d, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10127e92, 0x6)   inc(memb_a32(ds, eax + 0x101c59d8));  /* inc byte [eax+0x101c59d8] */
    II(0x10127e98, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127e9a, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10127e9f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10127ea1, 0x6)   mov(bl, memb_a32(ds, eax + 0x101c59d8)); /* mov bl, [eax+0x101c59d8] */
    II(0x10127ea7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127ea9, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10127eae, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10127eb1, 0x5)   mov(eax, 0x30);                       /* mov eax, 0x30 */
    II(0x10127eb6, 0x5)   calld(0x10128897, 0x9dc);             /* call 0x10128897 */
    II(0x10127ebb, 0x7)   cmp(memb_a32(ds, 0x101c59f6), 0);     /* cmp byte [0x101c59f6], 0x0 */
    II(0x10127ec2, 0x2)   jzd(0x10127ed1, 0xd);                 /* jz 0x10127ed1 */
    II(0x10127ec4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10127ec6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10127ec8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127ecc, 0x5)   calld(0x1012748f, -0xa42);            /* call 0x1012748f */
l_0x10127ed1:
    II(0x10127ed1, 0x5)   jmpd(0x101285f4, 0x71e);              /* jmp 0x101285f4 */
l_0x10127ed6:
    II(0x10127ed6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127eda, 0x6)   mov(dl, memb_a32(ds, 0x101c59f5));    /* mov dl, [0x101c59f5] */
    II(0x10127ee0, 0x6)   mov(memb_a32(ds, eax + 0x101c59d8), dl); /* mov [eax+0x101c59d8], dl */
    II(0x10127ee6, 0x5)   jmpd(0x101285f4, 0x709);              /* jmp 0x101285f4 */
l_0x10127eeb:
    II(0x10127eeb, 0x7)   mov(memb_a32(ds, 0x101c609e), 0x1);   /* mov byte [0x101c609e], 0x1 */
    II(0x10127ef2, 0x5)   jmpd(0x101285f4, 0x6fd);              /* jmp 0x101285f4 */
l_0x10127ef7:
    II(0x10127ef7, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0x101c59f5); /* mov dword [ebp-0x68], 0x101c59f5 */
    II(0x10127efe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x10127f01, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x10127f04, 0x2)   jzd(0x10127f0d, 0x7);                 /* jz 0x10127f0d */
    II(0x10127f06, 0x7)   mov(memb_a32(ds, 0x101c8170), 0x1);   /* mov byte [0x101c8170], 0x1 */
l_0x10127f0d:
    II(0x10127f0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x10127f10, 0x3)   mov(eax, memd_a32(ds, eax + 0x1));    /* mov eax, [eax+0x1] */
    II(0x10127f13, 0x6)   cmp(eax, memd_a32(ds, 0x101c816c));   /* cmp eax, [0x101c816c] */
    II(0x10127f19, 0x2)   jled(0x10127f2f, 0x14);               /* jle 0x10127f2f */
    II(0x10127f1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10127f1e, 0x6)   mov(memw_a32(ds, 0x101c8168), ax);    /* mov [0x101c8168], ax */
    II(0x10127f24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x10127f27, 0x3)   mov(eax, memd_a32(ds, eax + 0x1));    /* mov eax, [eax+0x1] */
    II(0x10127f2a, 0x5)   mov(memd_a32(ds, 0x101c816c), eax);   /* mov [0x101c816c], eax */
l_0x10127f2f:
    II(0x10127f2f, 0x5)   jmpd(0x101285f4, 0x6c0);              /* jmp 0x101285f4 */
l_0x10127f34:
    II(0x10127f34, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10127f36, 0x4)   mov(dx, memw_a32(ss, ebp - 0x14));    /* mov dx, [ebp-0x14] */
    II(0x10127f3a, 0x5)   mov(eax, 0x101c39c0);                 /* mov eax, 0x101c39c0 */
    II(0x10127f3f, 0x5)   calld(0x10103eba, -0x2408a);          /* call 0x10103eba */
    II(0x10127f44, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10127f47, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x10127f4b, 0x2)   jnzd(0x10127f58, 0xb);                /* jnz 0x10127f58 */
    II(0x10127f4d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127f51, 0x5)   calld(0x10126a47, -0x150f);           /* call 0x10126a47 */
    II(0x10127f56, 0x2)   jmpd(0x10127f7f, 0x27);               /* jmp 0x10127f7f */
l_0x10127f58:
    II(0x10127f58, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10127f5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10127f60, 0x5)   calld(0x10125dd6, -0x218f);           /* call 0x10125dd6 */
    II(0x10127f65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10127f68, 0x3)   mov(ebx, memd_a32(ds, eax + 0x3a));   /* mov ebx, [eax+0x3a] */
    II(0x10127f6b, 0x3)   sar(ebx, 0x18);                       /* sar ebx, 0x18 */
    II(0x10127f6e, 0x3)   shl(ebx, 0x3);                        /* shl ebx, 0x3 */
    II(0x10127f71, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10127f76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10127f79, 0x6)   calld_abs(memd_a32(ds, ebx + 0x101c60a4)); /* call dword near [ebx+0x101c60a4] */
l_0x10127f7f:
    II(0x10127f7f, 0x5)   jmpd(0x101285f4, 0x670);              /* jmp 0x101285f4 */
l_0x10127f84:
    II(0x10127f84, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127f88, 0x5)   calld(0x10126c9d, -0x12f0);           /* call 0x10126c9d */
    II(0x10127f8d, 0x5)   jmpd(0x101285f4, 0x662);              /* jmp 0x101285f4 */
l_0x10127f92:
    II(0x10127f92, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127f96, 0x5)   calld(0x1012686a, -0x1731);           /* call 0x1012686a */
    II(0x10127f9b, 0x5)   jmpd(0x101285f4, 0x654);              /* jmp 0x101285f4 */
l_0x10127fa0:
    II(0x10127fa0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127fa4, 0x5)   calld(0x10126a9c, -0x150d);           /* call 0x10126a9c */
    II(0x10127fa9, 0x5)   jmpd(0x101285f4, 0x646);              /* jmp 0x101285f4 */
l_0x10127fae:
    II(0x10127fae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10127fb0, 0x4)   mov(dx, memw_a32(ss, ebp - 0x14));    /* mov dx, [ebp-0x14] */
    II(0x10127fb4, 0x5)   mov(eax, 0x101c39c0);                 /* mov eax, 0x101c39c0 */
    II(0x10127fb9, 0x5)   calld(0x10103eba, -0x24104);          /* call 0x10103eba */
    II(0x10127fbe, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x10127fc1, 0x4)   cmp(memd_a32(ss, ebp - 0x6c), 0);     /* cmp dword [ebp-0x6c], 0x0 */
    II(0x10127fc5, 0x2)   jnzd(0x10127fd2, 0xb);                /* jnz 0x10127fd2 */
    II(0x10127fc7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127fcb, 0x5)   calld(0x10126a47, -0x1589);           /* call 0x10126a47 */
    II(0x10127fd0, 0x2)   jmpd(0x10127fdf, 0xd);                /* jmp 0x10127fdf */
l_0x10127fd2:
    II(0x10127fd2, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10127fd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x10127fda, 0x5)   calld(0x10151d25, 0x29d46);           /* call 0x10151d25 */
l_0x10127fdf:
    II(0x10127fdf, 0x5)   jmpd(0x101285f4, 0x610);              /* jmp 0x101285f4 */
l_0x10127fe4:
    II(0x10127fe4, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10127fe9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10127fed, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10127ff3, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10127ff9, 0x5)   calld(0x100df5ba, -0x48a44);          /* call 0x100df5ba */
    II(0x10127ffe, 0x5)   jmpd(0x101285f4, 0x5f1);              /* jmp 0x101285f4 */
l_0x10128003:
    II(0x10128003, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10128005, 0x5)   mov(al, memb_a32(ds, 0x101c59f0));    /* mov al, [0x101c59f0] */
    II(0x1012800a, 0x3)   cmp(eax, 0x2a);                       /* cmp eax, 0x2a */
    II(0x1012800d, 0x2)   jnzd(0x10128015, 0x6);                /* jnz 0x10128015 */
    II(0x1012800f, 0x4)   mov(memb_a32(ss, ebp - 0x70), 0x1);   /* mov byte [ebp-0x70], 0x1 */
    II(0x10128013, 0x2)   jmpd(0x10128019, 0x4);                /* jmp 0x10128019 */
l_0x10128015:
    II(0x10128015, 0x4)   mov(memb_a32(ss, ebp - 0x70), 0);     /* mov byte [ebp-0x70], 0x0 */
l_0x10128019:
    II(0x10128019, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012801b, 0x3)   mov(dl, memb_a32(ss, ebp - 0x70));    /* mov dl, [ebp-0x70] */
    II(0x1012801e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10128022, 0x5)   calld(0x10126727, -0x1900);           /* call 0x10126727 */
    II(0x10128027, 0x5)   jmpd(0x101285f4, 0x5c8);              /* jmp 0x101285f4 */
l_0x1012802c:
    II(0x1012802c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x10128030, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10128035, 0x5)   mov(eax, 0x101c5628);                 /* mov eax, 0x101c5628 */
    II(0x1012803a, 0x5)   calld(sys_memcpy, 0x3de0c);           /* call 0x10165e4b */
    II(0x1012803f, 0x5)   jmpd(0x101285f4, 0x5b0);              /* jmp 0x101285f4 */
l_0x10128044:
    II(0x10128044, 0x7)   mov(memd_a32(ss, ebp - 0x74), 0x101c59f5); /* mov dword [ebp-0x74], 0x101c59f5 */
    II(0x1012804b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012804d, 0x5)   mov(al, memb_a32(ds, 0x101c37d4));    /* mov al, [0x101c37d4] */
    II(0x10128052, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x10128055, 0x7)   mov(memb_a32(ds, 0x101c37d4), 0x1);   /* mov byte [0x101c37d4], 0x1 */
    II(0x1012805c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x1012805f, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x10128062, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x10128065, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x10128068, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x1012806a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012806d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x10128070, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x10128073, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10128077, 0x5)   calld(0x10102119, -0x25f63);          /* call 0x10102119 */
    II(0x1012807c, 0x3)   mov(al, memb_a32(ss, ebp - 0x78));    /* mov al, [ebp-0x78] */
    II(0x1012807f, 0x5)   mov(memb_a32(ds, 0x101c37d4), al);    /* mov [0x101c37d4], al */
    II(0x10128084, 0x5)   jmpd(0x101285f4, 0x56b);              /* jmp 0x101285f4 */
l_0x10128089:
    II(0x10128089, 0x7)   mov(memd_a32(ss, ebp - 0x7c), 0x101c59f5); /* mov dword [ebp-0x7c], 0x101c59f5 */
    II(0x10128090, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10128095, 0x3)   mov(edx, memd_a32(ss, ebp - 0x7c));   /* mov edx, [ebp-0x7c] */
    II(0x10128098, 0x3)   add(edx, 0x1e);                       /* add edx, 0x1e */
    II(0x1012809b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x1012809e, 0x5)   calld(0x10136e81, 0xedde);            /* call 0x10136e81 */
    II(0x101280a3, 0x5)   calld(0x100caa00, -0x5d6a8);          /* call 0x100caa00 */
    II(0x101280a8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101280ad, 0x1)   pushd(eax);                           /* push eax */
    II(0x101280ae, 0x5)   calld(0x100caa20, -0x5d693);          /* call 0x100caa20 */
    II(0x101280b3, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x101280b5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101280b7, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101280bc, 0x5)   mov(eax, 0x101a82d9);                 /* mov eax, 0x101a82d9 */ /* "Game saved." */
    II(0x101280c1, 0x5)   calld(0x10115d23, -0x123a3);          /* call 0x10115d23 */
    II(0x101280c6, 0x5)   jmpd(0x101285f4, 0x529);              /* jmp 0x101285f4 */
l_0x101280cb:
    II(0x101280cb, 0x5)   calld(0x10126d5a, -0x1376);           /* call 0x10126d5a */
    II(0x101280d0, 0x5)   jmpd(0x101285f4, 0x51f);              /* jmp 0x101285f4 */
l_0x101280d5:
    II(0x101280d5, 0x5)   mov(ecx, 0x1e);                       /* mov ecx, 0x1e */
    II(0x101280da, 0x5)   mov(ebx, 0x101c5e74);                 /* mov ebx, 0x101c5e74 */
    II(0x101280df, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x101280e2, 0x2)   add(al, 0x63);                        /* add al, 0x63 */
    II(0x101280e4, 0x3)   movsx(edx, al);                       /* movsx edx, al */
    II(0x101280e7, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x101280ec, 0x5)   calld(0x10106281, -0x21e70);          /* call 0x10106281 */
    II(0x101280f1, 0x5)   mov(edx, 0x101a82e5);                 /* mov edx, 0x101a82e5 */ /* ": " */
    II(0x101280f6, 0x5)   mov(eax, 0x101c5e74);                 /* mov eax, 0x101c5e74 */
    II(0x101280fb, 0x5)   calld(sys_strcat, 0x3de31);           /* call 0x10165f31 */
    II(0x10128100, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10128105, 0x5)   mov(eax, 0x101c5e74);                 /* mov eax, 0x101c5e74 */
    II(0x1012810a, 0x5)   calld(sys_strcat, 0x3de22);           /* call 0x10165f31 */
    II(0x1012810f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10128111, 0x1)   pushd(eax);                           /* push eax */
    II(0x10128112, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10128117, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10128119, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1012811e, 0x5)   mov(eax, 0x101c5e74);                 /* mov eax, 0x101c5e74 */
    II(0x10128123, 0x5)   calld(0x10115d23, -0x12405);          /* call 0x10115d23 */
    II(0x10128128, 0x5)   mov(edx, 0x295);                      /* mov edx, 0x295 */
    II(0x1012812d, 0x5)   mov(eax, 0x101c5e74);                 /* mov eax, 0x101c5e74 */
    II(0x10128132, 0x5)   calld(0x10115c5f, -0x124d8);          /* call 0x10115c5f */
    II(0x10128137, 0x5)   jmpd(0x101285f4, 0x4b8);              /* jmp 0x101285f4 */
l_0x1012813c:
    II(0x1012813c, 0x7)   mov(memd_a32(ss, ebp - 0x80), 0x101c59f5); /* mov dword [ebp-0x80], 0x101c59f5 */
    II(0x10128143, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x10128146, 0x3)   mov(ecx, memd_a32(ds, eax + 0x4));    /* mov ecx, [eax+0x4] */
    II(0x10128149, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1012814c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x1012814f, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10128152, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10128155, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x10128158, 0x2)   mov(esi, memd_a32(ds, eax));          /* mov esi, [eax] */
    II(0x1012815a, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x1012815d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x10128160, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x10128163, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10128167, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1012816d, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10128173, 0x5)   calld(0x100df329, -0x48e4f);          /* call 0x100df329 */
    II(0x10128178, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x1012817a, 0x5)   calld(0x100d7a9c, -0x506e3);          /* call 0x100d7a9c */
    II(0x1012817f, 0x5)   jmpd(0x101285f4, 0x470);              /* jmp 0x101285f4 */
l_0x10128184:
    II(0x10128184, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10128187, 0x6)   mov(memw_a32(ds, 0x101c59ee), ax);    /* mov [0x101c59ee], ax */
    II(0x1012818d, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x10128191, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x10128196, 0x5)   mov(eax, 0x101c5e48);                 /* mov eax, 0x101c5e48 */
    II(0x1012819b, 0x5)   calld(sys_memcpy, 0x3dcab);           /* call 0x10165e4b */
    II(0x101281a0, 0x5)   jmpd(0x101285f4, 0x44f);              /* jmp 0x101285f4 */
l_0x101281a5:
    II(0x101281a5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101281a9, 0x6)   mov(dl, memb_a32(ds, 0x101c59f5));    /* mov dl, [0x101c59f5] */
    II(0x101281af, 0x6)   mov(memb_a32(ds, eax + 0x101c59e0), dl); /* mov [eax+0x101c59e0], dl */
    II(0x101281b5, 0x5)   jmpd(0x101285f4, 0x43a);              /* jmp 0x101285f4 */
l_0x101281ba:
    II(0x101281ba, 0x7)   mov(memb_a32(ds, 0x101c59ec), 0x1);   /* mov byte [0x101c59ec], 0x1 */
    II(0x101281c1, 0x5)   jmpd(0x101285f4, 0x42e);              /* jmp 0x101285f4 */
l_0x101281c6:
    II(0x101281c6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101281c8, 0x6)   mov(dl, memb_a32(ds, 0x101c59f5));    /* mov dl, [0x101c59f5] */
    II(0x101281ce, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x101281d1, 0x2)   add(al, 0x6b);                        /* add al, 0x6b */
    II(0x101281d3, 0x3)   movsx(eax, al);                       /* movsx eax, al */
    II(0x101281d6, 0x5)   calld(0x100caafc, -0x5d6df);          /* call 0x100caafc */
    II(0x101281db, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101281df, 0x5)   calld(0x1013602e, 0xde4a);            /* call 0x1013602e */
    II(0x101281e4, 0x5)   jmpd(0x101285f4, 0x40b);              /* jmp 0x101285f4 */
l_0x101281e9:
    II(0x101281e9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101281eb, 0x4)   mov(dx, memw_a32(ss, ebp - 0x14));    /* mov dx, [ebp-0x14] */
    II(0x101281ef, 0x5)   mov(eax, 0x101c39c0);                 /* mov eax, 0x101c39c0 */
    II(0x101281f4, 0x5)   calld(0x10103eba, -0x2433f);          /* call 0x10103eba */
    II(0x101281f9, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101281fc, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x10128200, 0x2)   jnzd(0x10128210, 0xe);                /* jnz 0x10128210 */
    II(0x10128202, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10128206, 0x5)   calld(0x10126a47, -0x17c4);           /* call 0x10126a47 */
    II(0x1012820b, 0x5)   jmpd(0x10128436, 0x226);              /* jmp 0x10128436 */
l_0x10128210:
    II(0x10128210, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10128212, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10128215, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10128218, 0x5)   calld(0x1013ad71, 0x12b54);           /* call 0x1013ad71 */
    II(0x1012821d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012821f, 0x2)   jzd(0x1012822e, 0xd);                 /* jz 0x1012822e */
    II(0x10128221, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10128223, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10128226, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10128229, 0x5)   calld(0x10076a34, -0xb17fa);          /* call 0x10076a34 */
l_0x1012822e:
    II(0x1012822e, 0xa)   mov(memd_a32(ss, ebp - 0x84), 0x101c59f5); /* mov dword [ebp+0xffffff7c], 0x101c59f5 */
    II(0x10128238, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012823b, 0x5)   calld(0x1016186c, 0x3962c);           /* call 0x1016186c */
    II(0x10128240, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128246, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x10128248, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012824b, 0x3)   mov(memb_a32(ds, eax + 0x3d), dl);    /* mov [eax+0x3d], dl */
    II(0x1012824e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128254, 0x3)   mov(dl, memb_a32(ds, eax + 0x1));     /* mov dl, [eax+0x1] */
    II(0x10128257, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012825a, 0x3)   mov(memb_a32(ds, eax + 0x3e), dl);    /* mov [eax+0x3e], dl */
    II(0x1012825d, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128263, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x10128267, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012826a, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x1012826e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128274, 0x4)   mov(dx, memw_a32(ds, eax + 0x4));     /* mov dx, [eax+0x4] */
    II(0x10128278, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012827b, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x1012827f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128285, 0x3)   mov(dl, memb_a32(ds, eax + 0x14));    /* mov dl, [eax+0x14] */
    II(0x10128288, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012828b, 0x3)   mov(memb_a32(ds, eax + 0x4f), dl);    /* mov [eax+0x4f], dl */
    II(0x1012828e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128294, 0x5)   cmp(memw_a32(ds, eax + 0x18), 0);     /* cmp word [eax+0x18], 0x0 */
    II(0x10128299, 0x6)   jzd(0x1012842e, 0x18f);               /* jz dword 0x1012842e */
    II(0x1012829f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101282a2, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x101282a6, 0x6)   jzd(0x10128383, 0xd7);                /* jz dword 0x10128383 */
    II(0x101282ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101282af, 0x5)   calld(0x101548ba, 0x2c606);           /* call 0x101548ba */
    II(0x101282b4, 0x5)   mov(eax, 0x2d);                       /* mov eax, 0x2d */
    II(0x101282b9, 0x5)   calld(sys_new, 0x3db42);              /* call 0x10165e00 */
    II(0x101282be, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
//    II(0x101282c4, 0x6)   mov(eax, memd_a32(ss, ebp - 0x88));   /* mov eax, [ebp+0xffffff78] */
    II(0x101282ca, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
    II(0x101282d0, 0x7)   cmp(memd_a32(ss, ebp - 0x8c), 0);     /* cmp dword [ebp+0xffffff74], 0x0 */
    II(0x101282d7, 0x2)   jzd(0x10128334, 0x5b);                /* jz 0x10128334 */
    II(0x101282d9, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x101282df, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101282e2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101282e5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101282e6, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x101282ec, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x101282ef, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101282f2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101282f3, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x101282f9, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x101282fc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101282ff, 0x1)   pushd(eax);                           /* push eax */
    II(0x10128300, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128306, 0x3)   mov(ecx, memd_a32(ds, eax + 0xe));    /* mov ecx, [eax+0xe] */
//    II(0x10128309, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x1012830f, 0x3)   mov(ebx, memd_a32(ds, eax + 0xa));    /* mov ebx, [eax+0xa] */
    II(0x10128312, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10128315, 0x6)   mov(eax, memd_a32(ss, ebp - 0x88));   /* mov eax, [ebp+0xffffff78] */
    II(0x1012831b, 0x5)   calld(0x1011833b, -0xffe5);           /* call 0x1011833b */
    II(0x10128320, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
//    II(0x10128326, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x1012832c, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
    II(0x10128332, 0x2)   jmpd(0x10128340, 0xc);                /* jmp 0x10128340 */
l_0x10128334:
    II(0x10128334, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x1012833a, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
l_0x10128340:
    II(0x10128340, 0x6)   mov(edx, memd_a32(ss, ebp - 0x94));   /* mov edx, [ebp+0xffffff6c] */
    II(0x10128346, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10128349, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1012834c, 0x5)   calld(0x10076a34, -0xb191d);          /* call 0x10076a34 */
    II(0x10128351, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128357, 0x3)   mov(dl, memb_a32(ds, eax + 0x17));    /* mov dl, [eax+0x17] */
    II(0x1012835a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012835d, 0x3)   mov(memb_a32(ds, eax + 0x2a), dl);    /* mov [eax+0x2a], dl */
    II(0x10128360, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128366, 0x3)   mov(dl, memb_a32(ds, eax + 0x15));    /* mov dl, [eax+0x15] */
    II(0x10128369, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012836c, 0x3)   mov(memb_a32(ds, eax + 0x4e), dl);    /* mov [eax+0x4e], dl */
    II(0x1012836f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10128375, 0x3)   mov(dl, memb_a32(ds, eax + 0x16));    /* mov dl, [eax+0x16] */
    II(0x10128378, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012837b, 0x3)   mov(memb_a32(ds, eax + 0x64), dl);    /* mov [eax+0x64], dl */
    II(0x1012837e, 0x5)   jmpd(0x1012842e, 0xab);               /* jmp 0x1012842e */
l_0x10128383:
    II(0x10128383, 0x5)   mov(eax, 0x1c);                       /* mov eax, 0x1c */
    II(0x10128388, 0x5)   calld(sys_new, 0x3da73);              /* call 0x10165e00 */
    II(0x1012838d, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
//    II(0x10128393, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x10128399, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
    II(0x1012839f, 0x7)   cmp(memd_a32(ss, ebp - 0x9c), 0);     /* cmp dword [ebp+0xffffff64], 0x0 */
    II(0x101283a6, 0x2)   jzd(0x101283d9, 0x31);                /* jz 0x101283d9 */
    II(0x101283a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101283ab, 0x3)   mov(ebx, memd_a32(ds, eax + 0x41));   /* mov ebx, [eax+0x41] */
    II(0x101283ae, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101283b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101283b4, 0x3)   mov(edx, memd_a32(ds, eax + 0x3f));   /* mov edx, [eax+0x3f] */
    II(0x101283b7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101283ba, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x101283c0, 0x5)   calld(my_ctor_c20, -0xe46f);          /* call 0x10119f56 */
    II(0x101283c5, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
//    II(0x101283cb, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x101283d1, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
    II(0x101283d7, 0x2)   jmpd(0x101283e5, 0xc);                /* jmp 0x101283e5 */
l_0x101283d9:
    II(0x101283d9, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x101283df, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
l_0x101283e5:
    II(0x101283e5, 0x6)   mov(edx, memd_a32(ss, ebp - 0xa4));   /* mov edx, [ebp+0xffffff5c] */
    II(0x101283eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101283ee, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x101283f1, 0x5)   calld(0x10076a34, -0xb19c2);          /* call 0x10076a34 */
    II(0x101283f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101283f9, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x101283fc, 0x5)   calld(0x100769d8, -0xb1a29);          /* call 0x100769d8 */
    II(0x10128401, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
//    II(0x10128407, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x1012840d, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x10128410, 0x6)   mov(ebx, memd_a32(ss, ebp - 0x84));   /* mov ebx, [ebp+0xffffff7c] */
    II(0x10128416, 0x3)   add(ebx, 0x1a);                       /* add ebx, 0x1a */
    II(0x10128419, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x1012841f, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x10128422, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10128425, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x1012842b, 0x3)   calld_abs(memd_a32(ds, ecx + 0x40));  /* call dword near [ecx+0x40] */
l_0x1012842e:
    II(0x1012842e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10128431, 0x5)   calld(0x101548ba, 0x2c484);           /* call 0x101548ba */
l_0x10128436:
    II(0x10128436, 0x5)   jmpd(0x101285f4, 0x1b9);              /* jmp 0x101285f4 */
l_0x1012843b:
    II(0x1012843b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012843d, 0x4)   mov(dx, memw_a32(ss, ebp - 0x14));    /* mov dx, [ebp-0x14] */
    II(0x10128441, 0x5)   mov(eax, 0x101c39c0);                 /* mov eax, 0x101c39c0 */
    II(0x10128446, 0x5)   calld(0x10103eba, -0x24591);          /* call 0x10103eba */
    II(0x1012844b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1012844e, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x10128452, 0x2)   jnzd(0x1012845f, 0xb);                /* jnz 0x1012845f */
    II(0x10128454, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10128458, 0x5)   calld(0x10126a47, -0x1a16);           /* call 0x10126a47 */
    II(0x1012845d, 0x2)   jmpd(0x10128469, 0xa);                /* jmp 0x10128469 */
l_0x1012845f:
    II(0x1012845f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10128461, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10128464, 0x5)   calld(0x1014f017, 0x26bae);           /* call 0x1014f017 */
l_0x10128469:
    II(0x10128469, 0x5)   jmpd(0x101285f4, 0x186);              /* jmp 0x101285f4 */
l_0x1012846e:
    II(0x1012846e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10128470, 0x4)   mov(dx, memw_a32(ss, ebp - 0x14));    /* mov dx, [ebp-0x14] */
    II(0x10128474, 0x5)   mov(eax, 0x101c39c0);                 /* mov eax, 0x101c39c0 */
    II(0x10128479, 0x5)   calld(0x10103eba, -0x245c4);          /* call 0x10103eba */
    II(0x1012847e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10128481, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x10128485, 0x2)   jnzd(0x10128492, 0xb);                /* jnz 0x10128492 */
    II(0x10128487, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012848b, 0x5)   calld(0x10126a47, -0x1a49);           /* call 0x10126a47 */
    II(0x10128490, 0x2)   jmpd(0x1012849a, 0x8);                /* jmp 0x1012849a */
l_0x10128492:
    II(0x10128492, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10128495, 0x5)   calld(0x1014f5c1, 0x27127);           /* call 0x1014f5c1 */
l_0x1012849a:
    II(0x1012849a, 0x5)   jmpd(0x101285f4, 0x155);              /* jmp 0x101285f4 */
l_0x1012849f:
    II(0x1012849f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101284a1, 0x4)   mov(dx, memw_a32(ss, ebp - 0x14));    /* mov dx, [ebp-0x14] */
    II(0x101284a5, 0x5)   mov(eax, 0x101c39c0);                 /* mov eax, 0x101c39c0 */
    II(0x101284aa, 0x5)   calld(0x10103eba, -0x245f5);          /* call 0x10103eba */
    II(0x101284af, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101284b2, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x101284b6, 0x2)   jnzd(0x101284c3, 0xb);                /* jnz 0x101284c3 */
    II(0x101284b8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101284bc, 0x5)   calld(0x10126a47, -0x1a7a);           /* call 0x10126a47 */
    II(0x101284c1, 0x2)   jmpd(0x101284d0, 0xd);                /* jmp 0x101284d0 */
l_0x101284c3:
    II(0x101284c3, 0x5)   mov(edx, 0x101c59f5);                 /* mov edx, 0x101c59f5 */
    II(0x101284c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101284cb, 0x5)   calld(0x1014fabe, 0x275ee);           /* call 0x1014fabe */
l_0x101284d0:
    II(0x101284d0, 0x5)   jmpd(0x101285f4, 0x11f);              /* jmp 0x101285f4 */
l_0x101284d5:
    II(0x101284d5, 0x5)   mov(eax, 0x101a82e8);                 /* mov eax, 0x101a82e8 */ /* "Game Paused.\nClick OK to continue." */
    II(0x101284da, 0x5)   calld(0x10116b06, -0x119d9);          /* call 0x10116b06 */
    II(0x101284df, 0x5)   jmpd(0x101285f4, 0x110);              /* jmp 0x101285f4 */
l_0x101284e4:
    II(0x101284e4, 0x7)   mov(memb_a32(ds, 0x101c5866), 0x1);   /* mov byte [0x101c5866], 0x1 */
    II(0x101284eb, 0x5)   jmpd(0x101285f4, 0x104);              /* jmp 0x101285f4 */
l_0x101284f0:
    II(0x101284f0, 0x5)   jmpd(0x101285f4, 0xff);               /* jmp 0x101285f4 */
//    II(0x101284f5, 0x3)   /* Выравнивание. */
//    II(0x101284f8, 0xd4)  /* Служебная область с абсолютными адресами переходов. {0x10127638, 0x10127d4b, 0x101284f0, 0x101284f0, 0x101284f0, 0x10127cef, 0x10127d60, 0x10127e8b, 0x10127f34, 0x10127f84, 0x10127f92, 0x10127fe4, 0x10128003, 0x1012802c, 0x10128044, 0x101284f0, 0x10128089, 0x101280cb, 0x101280d5, 0x101284f0, 0x10127fa0, 0x1012813c, 0x10127fae, 0x10128184, 0x101281a5, 0x101284f0, 0x101281c6, 0x101284f0, 0x101277d5, 0x101277f3, 0x10127829, 0x101278e1, 0x101278e1, 0x10127cb3, 0x10127d23, 0x10127ad8, 0x10127bb6, 0x10127c72, 0x101281e9, 0x101284d5, 0x101284e4, 0x1012843b, 0x10128003, 0x1012849f, 0x10127691, 0x10127662, 0x10127ef7, 0x101284f0, 0x10127ed6, 0x101281ba, 0x1012846e, 0x10127eeb, 0x1012764d}. */
l_0x101285cc:
    II(0x101285cc, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x101285cf, 0x6)   mov(memb_a32(ss, ebp - 0xac), al);    /* mov [ebp+0xffffff54], al */
    II(0x101285d5, 0x7)   cmp(memb_a32(ss, ebp - 0xac), 0x34);  /* cmp byte [ebp+0xffffff54], 0x34 */
    II(0x101285dc, 0x6)   jad(0x101284f0, -0xf2);               /* ja dword 0x101284f0 */
    II(0x101285e2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101285e4, 0x6)   mov(al, memb_a32(ss, ebp - 0xac));    /* mov al, [ebp+0xffffff54] */
    II(0x101285ea, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101285ed, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x101284f8), (0x10127638)(0x1012764d)(0x10127662)(0x10127691)(0x101277d5)(0x101277f3)(0x10127829)(0x101278e1)(0x10127ad8)(0x10127bb6)(0x10127c72)(0x10127cb3)(0x10127cef)(0x10127d23)(0x10127d4b)(0x10127d60)(0x10127e8b)(0x10127ed6)(0x10127eeb)(0x10127ef7)(0x10127f34)(0x10127f84)(0x10127f92)(0x10127fa0)(0x10127fae)(0x10127fe4)(0x10128003)(0x1012802c)(0x10128044)(0x10128089)(0x101280cb)(0x101280d5)(0x1012813c)(0x10128184)(0x101281a5)(0x101281ba)(0x101281c6)(0x101281e9)(0x1012843b)(0x1012846e)(0x1012849f)(0x101284d5)(0x101284e4)(0x101284f0)); /* jmp dword near [cs:eax+0x101284f8] */
l_0x101285f4:
    II(0x101285f4, 0x5)   jmpd(0x1012760c, -0xfed);             /* jmp 0x1012760c */
l_0x101285f9:
    II(0x101285f9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101285fb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101285fc, 0x1)   popd(edi);                            /* pop edi */
    II(0x101285fd, 0x1)   popd(esi);                            /* pop esi */
    II(0x101285fe, 0x1)   popd(edx);                            /* pop edx */
    II(0x101285ff, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10128600, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10128601, 0x1)   retd();                               /* ret */
FUNC_END

