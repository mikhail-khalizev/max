FUNC_BEGIN(0x10153997, 0x6abbf8efd07de74a, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0xb1, 0x23, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x38, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x4a, 0x75, 0xd, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0x67, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x4a, 0x75, 0x9, 0xc7, 0x45, 0xdc, 0x2a, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0x29, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0x2d, 0xfb, 0xfa, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x9a, 0x2a, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x49, 0x73, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x12, 0x8d, 0x45, 0xe4, 0xe8, 0x6c, 0x29, 0xf2, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xf4, 0x75, 0x2, 0xeb, 0xa, 0x8d, 0x45, 0xe4, 0xe8, 0xb0, 0x31, 0xf2, 0xff, 0xeb, 0xd4, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x1d, 0x73, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xa, 0x25, 0xf2, 0xff, 0xe9, 0xd8, 0x1, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x7d, 0x2c, 0xf2, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf8, 0xfe, 0x8d, 0x45, 0xe0, 0xe8, 0x6e, 0x30, 0xf2, 0xff, 0xe8, 0xfd, 0xf0, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x12, 0xf1, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xf4, 0x8d, 0x45, 0xf0, 0xe8, 0x12, 0x68, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x46, 0x71, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x50, 0x24, 0xf2, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x48, 0xe8, 0x8f, 0x33, 0xf2, 0xff, 0x89, 0x45, 0xcc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x48, 0xe8, 0x7b, 0x33, 0xf2, 0xff, 0x89, 0x45, 0xd0, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x83, 0xc0, 0x2, 0xe8, 0x66, 0x5c, 0xf3, 0xff, 0x89, 0x45, 0xd4, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x83, 0xc0, 0x2, 0xe8, 0x49, 0x5c, 0xf3, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xcc, 0x66, 0x89, 0x45, 0xe0, 0xeb, 0x7, 0x8b, 0x45, 0xe0, 0x66, 0xff, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xe0, 0x3b, 0x45, 0xd4, 0xf, 0x8d, 0x82, 0, 0, 0, 0x8b, 0x45, 0xd0, 0x66, 0x89, 0x45, 0xe2, 0xeb, 0x7, 0x8b, 0x45, 0xe2, 0x66, 0xff, 0x45, 0xe2, 0xf, 0xbf, 0x45, 0xe2, 0x3b, 0x45, 0xd8, 0x7d, 0x64, 0xf, 0xbf, 0x5d, 0xe2, 0xf, 0xbf, 0x55, 0xe0, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0xbb, 0xf9, 0xfa, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xac, 0x28, 0xf2, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x5e, 0x30, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xcd, 0x71, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x2e, 0x8d, 0x45, 0xe4, 0xe8, 0xf0, 0x27, 0xf2, 0xff, 0x66, 0x83, 0x78, 0x8, 0x39, 0x75, 0x1d, 0x8d, 0x45, 0xe4, 0xe8, 0xe1, 0x27, 0xf2, 0xff, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe8, 0xe8, 0xa5, 0x29, 0xf2, 0xff, 0xe8, 0x60, 0xba, 0xff, 0xff, 0xeb, 0xbc, 0xeb, 0x8c, 0xe9, 0x6a, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x48, 0x52, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0xa, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0xa6, 0, 0, 0, 0, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x90, 0x31, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x1f, 0x8b, 0x45, 0xfc, 0xe8, 0x39, 0xcd, 0xfa, 0xff, 0xb9, 0x1, 0, 0, 0, 0xbb, 0xf, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x95, 0x99, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xf7, 0x22, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x2d, 0x23, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10153997, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x1015399c, 0x5)   calld(sys_check_available_stack_size, 0x123b1); /* call 0x10165d52 */
    II(0x101539a1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101539a2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101539a3, 0x1)   pushd(edx);                           /* push edx */
    II(0x101539a4, 0x1)   pushd(esi);                           /* push esi */
    II(0x101539a5, 0x1)   pushd(edi);                           /* push edi */
    II(0x101539a6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101539a7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101539a9, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x101539af, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x101539b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101539b5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x38);   /* cmp word [eax+0x8], 0x38 */
    II(0x101539ba, 0x2)   jzd(0x101539c6, 0xa);                 /* jz 0x101539c6 */
    II(0x101539bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101539bf, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4a);   /* cmp word [eax+0x8], 0x4a */
    II(0x101539c4, 0x2)   jnzd(0x101539d3, 0xd);                /* jnz 0x101539d3 */
l_0x101539c6:
    II(0x101539c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101539c9, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x101539cc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101539cf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101539d1, 0x2)   jnzd(0x101539d8, 0x5);                /* jnz 0x101539d8 */
l_0x101539d3:
    II(0x101539d3, 0x5)   jmpd(0x10153c3f, 0x267);              /* jmp 0x10153c3f */
l_0x101539d8:
    II(0x101539d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101539db, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4a);   /* cmp word [eax+0x8], 0x4a */
    II(0x101539e0, 0x2)   jnzd(0x101539eb, 0x9);                /* jnz 0x101539eb */
    II(0x101539e2, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0x2a);  /* mov dword [ebp-0x24], 0x2a */
    II(0x101539e9, 0x2)   jmpd(0x101539f2, 0x7);                /* jmp 0x101539f2 */
l_0x101539eb:
    II(0x101539eb, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0x29);  /* mov dword [ebp-0x24], 0x29 */
l_0x101539f2:
    II(0x101539f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101539f5, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101539f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101539fb, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x101539fe, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10153a01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153a04, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10153a07, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10153a0a, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x10153a0f, 0x5)   calld(0x10103541, -0x504d3);          /* call 0x10103541 */
    II(0x10153a14, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10153a16, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153a19, 0x5)   calld(0x100764b8, -0xdd566);          /* call 0x100764b8 */
l_0x10153a1e:
    II(0x10153a1e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153a20, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153a23, 0x5)   calld(0x1013ad71, -0x18cb7);          /* call 0x1013ad71 */
    II(0x10153a28, 0x2)   test(al, al);                         /* test al, al */
    II(0x10153a2a, 0x2)   jzd(0x10153a3e, 0x12);                /* jz 0x10153a3e */
    II(0x10153a2c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153a2f, 0x5)   calld(0x100763a0, -0xdd694);          /* call 0x100763a0 */
    II(0x10153a34, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10153a38, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x10153a3c, 0x2)   jnzd(0x10153a40, 0x2);                /* jnz 0x10153a40 */
l_0x10153a3e:
    II(0x10153a3e, 0x2)   jmpd(0x10153a4a, 0xa);                /* jmp 0x10153a4a */
l_0x10153a40:
    II(0x10153a40, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153a43, 0x5)   calld(0x10076bf8, -0xdce50);          /* call 0x10076bf8 */
    II(0x10153a48, 0x2)   jmpd(0x10153a1e, -0x2c);              /* jmp 0x10153a1e */
l_0x10153a4a:
    II(0x10153a4a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153a4c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153a4f, 0x5)   calld(0x1013ad71, -0x18ce3);          /* call 0x1013ad71 */
    II(0x10153a54, 0x2)   test(al, al);                         /* test al, al */
    II(0x10153a56, 0x2)   jzd(0x10153a67, 0xf);                 /* jz 0x10153a67 */
    II(0x10153a58, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153a5a, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153a5d, 0x5)   calld(0x10075f6c, -0xddaf6);          /* call 0x10075f6c */
    II(0x10153a62, 0x5)   jmpd(0x10153c3f, 0x1d8);              /* jmp 0x10153c3f */
l_0x10153a67:
    II(0x10153a67, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x10153a6b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10153a6e, 0x5)   calld(my_ctor_0x101b38f8, -0xdd383);  /* call 0x100766f0 */
    II(0x10153a73, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10153a76, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x10153a7a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10153a7d, 0x5)   calld(my_ctor_0x101b4184, -0xdcf92);  /* call 0x10076af0 */
    II(0x10153a82, 0x5)   calld(0x10102b84, -0x50f03);          /* call 0x10102b84 */
    II(0x10153a87, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10153a8c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10153a8d, 0x5)   calld(0x10102ba4, -0x50eee);          /* call 0x10102ba4 */
    II(0x10153a92, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10153a97, 0x1)   pushd(eax);                           /* push eax */
    II(0x10153a98, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10153a9a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10153a9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153a9e, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x10153aa1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10153aa4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10153aa5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153aa8, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10153aab, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10153aae, 0x1)   pushd(eax);                           /* push eax */
    II(0x10153aaf, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10153ab1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153ab4, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10153ab7, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10153ab9, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10153abc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10153ac0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10153ac3, 0x5)   calld(0x1015a2da, 0x6812);            /* call 0x1015a2da */
    II(0x10153ac8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10153aca, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10153acd, 0x5)   calld(0x1008ac18, -0xc8eba);          /* call 0x1008ac18 */
    II(0x10153ad2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153ad4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10153ad7, 0x5)   calld(0x10075f2c, -0xddbb0);          /* call 0x10075f2c */
    II(0x10153adc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153ade, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153ae1, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10153ae4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10153ae7, 0x1)   dec(eax);                             /* dec eax */
    II(0x10153ae8, 0x5)   calld(0x10076e7c, -0xdcc71);          /* call 0x10076e7c */
    II(0x10153aed, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10153af0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153af2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153af5, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x10153af8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10153afb, 0x1)   dec(eax);                             /* dec eax */
    II(0x10153afc, 0x5)   calld(0x10076e7c, -0xdcc85);          /* call 0x10076e7c */
    II(0x10153b01, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10153b04, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x10153b0a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10153b0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153b10, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10153b13, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10153b16, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10153b19, 0x5)   calld(my_min, -0xca39a);              /* call 0x10089784 */
    II(0x10153b1e, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10153b21, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x10153b27, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10153b2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153b2d, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x10153b30, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10153b33, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10153b36, 0x5)   calld(my_min, -0xca3b7);              /* call 0x10089784 */
    II(0x10153b3b, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10153b3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10153b41, 0x4)   mov(memw_a32(ss, ebp - 0x20), ax);    /* mov [ebp-0x20], ax */
    II(0x10153b45, 0x2)   jmpd(0x10153b4e, 0x7);                /* jmp 0x10153b4e */
l_0x10153b47:
    II(0x10153b47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10153b4a, 0x4)   inc(memw_a32(ss, ebp - 0x20));        /* inc word [ebp-0x20] */
l_0x10153b4e:
    II(0x10153b4e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x10153b52, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x2c));   /* cmp eax, [ebp-0x2c] */
    II(0x10153b55, 0x6)   jged(0x10153bdd, 0x82);               /* jge dword 0x10153bdd */
    II(0x10153b5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10153b5e, 0x4)   mov(memw_a32(ss, ebp - 0x1e), ax);    /* mov [ebp-0x1e], ax */
    II(0x10153b62, 0x2)   jmpd(0x10153b6b, 0x7);                /* jmp 0x10153b6b */
l_0x10153b64:
    II(0x10153b64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x10153b67, 0x4)   inc(memw_a32(ss, ebp - 0x1e));        /* inc word [ebp-0x1e] */
l_0x10153b6b:
    II(0x10153b6b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1e)); /* movsx eax, word [ebp-0x1e] */
    II(0x10153b6f, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x28));   /* cmp eax, [ebp-0x28] */
    II(0x10153b72, 0x2)   jged(0x10153bd8, 0x64);               /* jge 0x10153bd8 */
    II(0x10153b74, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1e)); /* movsx ebx, word [ebp-0x1e] */
    II(0x10153b78, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10153b7c, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x10153b81, 0x5)   calld(0x10103541, -0x50645);          /* call 0x10103541 */
    II(0x10153b86, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10153b88, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153b8b, 0x5)   calld(0x1007643c, -0xdd754);          /* call 0x1007643c */
    II(0x10153b90, 0x2)   jmpd(0x10153b9a, 0x8);                /* jmp 0x10153b9a */
l_0x10153b92:
    II(0x10153b92, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153b95, 0x5)   calld(0x10076bf8, -0xdcfa2);          /* call 0x10076bf8 */
l_0x10153b9a:
    II(0x10153b9a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153b9c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153b9f, 0x5)   calld(0x1013ad71, -0x18e33);          /* call 0x1013ad71 */
    II(0x10153ba4, 0x2)   test(al, al);                         /* test al, al */
    II(0x10153ba6, 0x2)   jzd(0x10153bd6, 0x2e);                /* jz 0x10153bd6 */
    II(0x10153ba8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153bab, 0x5)   calld(0x100763a0, -0xdd810);          /* call 0x100763a0 */
    II(0x10153bb0, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x39);   /* cmp word [eax+0x8], 0x39 */
    II(0x10153bb5, 0x2)   jnzd(0x10153bd4, 0x1d);               /* jnz 0x10153bd4 */
    II(0x10153bb7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153bba, 0x5)   calld(0x100763a0, -0xdd81f);          /* call 0x100763a0 */
    II(0x10153bbf, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10153bc2, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10153bc4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10153bc7, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10153bca, 0x5)   calld(0x10076574, -0xdd65b);          /* call 0x10076574 */
    II(0x10153bcf, 0x5)   calld(0x1014f634, -0x45a0);           /* call 0x1014f634 */
l_0x10153bd4:
    II(0x10153bd4, 0x2)   jmpd(0x10153b92, -0x44);              /* jmp 0x10153b92 */
l_0x10153bd6:
    II(0x10153bd6, 0x2)   jmpd(0x10153b64, -0x74);              /* jmp 0x10153b64 */
l_0x10153bd8:
    II(0x10153bd8, 0x5)   jmpd(0x10153b47, -0x96);              /* jmp 0x10153b47 */
l_0x10153bdd:
    II(0x10153bdd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153be0, 0x4)   dec(memw_a32(ds, eax + 0x52));        /* dec word [eax+0x52] */
    II(0x10153be4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153be7, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x10153bea, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10153bed, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10153bef, 0x2)   jnzd(0x10153bfb, 0xa);                /* jnz 0x10153bfb */
    II(0x10153bf1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153bf4, 0x7)   mov(memb_a32(ds, eax + 0xa6), 0);     /* mov byte [eax+0xa6], 0x0 */
l_0x10153bfb:
    II(0x10153bfb, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x10153c00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153c03, 0x5)   calld(0x10076d98, -0xdce70);          /* call 0x10076d98 */
    II(0x10153c08, 0x2)   test(al, al);                         /* test al, al */
    II(0x10153c0a, 0x2)   jzd(0x10153c2b, 0x1f);                /* jz 0x10153c2b */
    II(0x10153c0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10153c0f, 0x5)   calld(0x1010094d, -0x532c7);          /* call 0x1010094d */
    II(0x10153c14, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10153c19, 0x5)   mov(ebx, 0xf);                        /* mov ebx, 0xf */
    II(0x10153c1e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10153c21, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10153c26, 0x5)   calld(0x1013d5c0, -0x1666b);          /* call 0x1013d5c0 */
l_0x10153c2b:
    II(0x10153c2b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153c2d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10153c30, 0x5)   calld(0x10075f2c, -0xddd09);          /* call 0x10075f2c */
    II(0x10153c35, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10153c37, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10153c3a, 0x5)   calld(0x10075f6c, -0xddcd3);          /* call 0x10075f6c */
l_0x10153c3f:
    II(0x10153c3f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10153c41, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10153c42, 0x1)   popd(edi);                            /* pop edi */
    II(0x10153c43, 0x1)   popd(esi);                            /* pop esi */
    II(0x10153c44, 0x1)   popd(edx);                            /* pop edx */
    II(0x10153c45, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10153c46, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10153c47, 0x1)   retd();                               /* ret */
FUNC_END

