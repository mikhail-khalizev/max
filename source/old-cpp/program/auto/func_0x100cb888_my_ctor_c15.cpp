FUNC_BEGIN(my_ctor_c15, 0x6e48b2624727c4e, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xc0, 0xa4, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xb9, 0, 0x11, 0, 0, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0x12, 0x6e, 0xfd, 0xff, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x1d, 0xae, 0xfa, 0xff, 0x83, 0xe8, 0x13, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x6, 0xae, 0xfa, 0xff, 0x83, 0xe8, 0x17, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0xe4, 0x5a, 0x1b, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x22, 0xad, 0xfa, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100cb888, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100cb88d, 0x5)   calld(sys_check_available_stack_size, 0x9a4c0); /* call 0x10165d52 */
    II(0x100cb892, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100cb893, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100cb894, 0x1)   pushd(esi);                           /* push esi */
    II(0x100cb895, 0x1)   pushd(edi);                           /* push edi */
    II(0x100cb896, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100cb897, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100cb899, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100cb89f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100cb8a2, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100cb8a5, 0x5)   mov(ecx, 0x1100);                     /* mov ecx, 0x1100 */
    II(0x100cb8aa, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100cb8ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cb8af, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100cb8b2, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100cb8b4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100cb8b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cb8ba, 0x5)   calld(0x100a26d1, -0x291ee);          /* call 0x100a26d1 */
    II(0x100cb8bf, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100cb8c2, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100cb8c5, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100cb8c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cb8cb, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cb8ce, 0x5)   calld(my_ctor_0x101b38f8, -0x551e3);  /* call 0x100766f0 */
    II(0x100cb8d3, 0x3)   sub(eax, 0x13);                       /* sub eax, 0x13 */
    II(0x100cb8d6, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100cb8d9, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100cb8dc, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100cb8df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cb8e2, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cb8e5, 0x5)   calld(my_ctor_0x101b38f8, -0x551fa);  /* call 0x100766f0 */
    II(0x100cb8ea, 0x3)   sub(eax, 0x17);                       /* sub eax, 0x17 */
    II(0x100cb8ed, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100cb8f0, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100cb8f3, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100cb8f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cb8f9, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b5ae4); /* mov dword [eax+0x2], 0x101b5ae4 */
    II(0x100cb900, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100cb903, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cb906, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cb909, 0x5)   calld(0x10076630, -0x552de);          /* call 0x10076630 */
    II(0x100cb90e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cb911, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100cb914, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100cb917, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100cb919, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100cb91a, 0x1)   popd(edi);                            /* pop edi */
    II(0x100cb91b, 0x1)   popd(esi);                            /* pop esi */
    II(0x100cb91c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100cb91d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100cb91e, 0x1)   retd();                               /* ret */
FUNC_END

