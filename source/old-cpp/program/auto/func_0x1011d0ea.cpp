FUNC_BEGIN(0x1011d0ea, 0xd5e4222e2bd0d70a, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x5e, 0x8c, 0x4, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x88, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0x8b, 0x45, 0xf0, 0xe8, 0x95, 0xd9, 0x1, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x6, 0xe8, 0x82, 0x95, 0xf5, 0xff, 0x83, 0xe8, 0x6, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0xa, 0xe8, 0x20, 0x8d, 0xf5, 0xff, 0x83, 0xe8, 0xa, 0x89, 0x45, 0xf0, 0x8a, 0x45, 0xfc, 0x8b, 0x55, 0xf0, 0x88, 0x42, 0xe, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x16, 0xe8, 0x92, 0x95, 0xf5, 0xff, 0x83, 0xe8, 0x16, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x2, 0xcc, 0x68, 0x1b, 0x10, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0xf, 0xff, 0x7f, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x11, 0, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x13, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x14, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x15, 0x1, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x1011d0ea, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1011d0ef, 0x5)   calld(sys_check_available_stack_size, 0x48c5e); /* call 0x10165d52 */
    II(0x1011d0f4, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011d0f5, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011d0f6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011d0f7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011d0f9, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1011d0ff, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1011d102, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1011d105, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x1011d108, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x1011d10b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d10e, 0x5)   calld(0x1013aaa8, 0x1d995);           /* call 0x1013aaa8 */
    II(0x1011d113, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1011d116, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011d119, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011d11c, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1011d11f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d122, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1011d125, 0x5)   calld(0x100766ac, -0xa6a7e);          /* call 0x100766ac */
    II(0x1011d12a, 0x3)   sub(eax, 0x6);                        /* sub eax, 0x6 */
    II(0x1011d12d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1011d130, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011d133, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011d136, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011d139, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d13c, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x1011d13f, 0x5)   calld(0x10075e64, -0xa72e0);          /* call 0x10075e64 */
    II(0x1011d144, 0x3)   sub(eax, 0xa);                        /* sub eax, 0xa */
    II(0x1011d147, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1011d14a, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1011d14d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1011d150, 0x3)   mov(memb_a32(ds, edx + 0xe), al);     /* mov [edx+0xe], al */
    II(0x1011d153, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d156, 0x3)   add(eax, 0x16);                       /* add eax, 0x16 */
    II(0x1011d159, 0x5)   calld(my_ctor_0x101b38f8, -0xa6a6e);  /* call 0x100766f0 */
    II(0x1011d15e, 0x3)   sub(eax, 0x16);                       /* sub eax, 0x16 */
    II(0x1011d161, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1011d164, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011d167, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1011d16a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d16d, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b68cc); /* mov dword [eax+0x2], 0x101b68cc */
    II(0x1011d174, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d177, 0x6)   mov(memw_a32(ds, eax + 0xf), 0x7fff); /* mov word [eax+0xf], 0x7fff */
    II(0x1011d17d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d180, 0x6)   mov(memw_a32(ds, eax + 0x11), 0);     /* mov word [eax+0x11], 0x0 */
    II(0x1011d186, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d189, 0x4)   mov(memb_a32(ds, eax + 0x13), 0);     /* mov byte [eax+0x13], 0x0 */
    II(0x1011d18d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d190, 0x4)   mov(memb_a32(ds, eax + 0x14), 0);     /* mov byte [eax+0x14], 0x0 */
    II(0x1011d194, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d197, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x1);   /* mov byte [eax+0x15], 0x1 */
    II(0x1011d19b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011d19e, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1011d1a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1011d1a4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011d1a6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011d1a7, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011d1a8, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011d1a9, 0x1)   retd();                               /* ret */
FUNC_END

