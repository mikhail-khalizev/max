FUNC_BEGIN(0x100707ed, 0x34c236af2fc1d822, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0x5b, 0x55, 0xf, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xfc, 0x89, 0x55, 0xf0, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xf8, 0x31, 0xc0, 0x8b, 0x55, 0xf0, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0xe8, 0x1b, 0x5a, 0, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0x18, 0x89, 0x45, 0xec, 0xeb, 0x54, 0xc7, 0x45, 0xe8, 0x1, 0, 0, 0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x61, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xc7, 0x45, 0xe0, 0x1, 0, 0, 0, 0xeb, 0x51, 0xc7, 0x45, 0xe8, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x41, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xc7, 0x45, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x31, 0xeb, 0x2f, 0x8b, 0xc0, 0x2c, 0x8, 0x7, 0x10, 0x3c, 0x8, 0x7, 0x10, 0x4c, 0x8, 0x7, 0x10, 0x5c, 0x8, 0x7, 0x10, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xd4, 0x66, 0x83, 0x7d, 0xd4, 0x3, 0x77, 0xdf, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xd4, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x70, 0x8, 0x7, 0x10, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x66, 0x3b, 0x45, 0x10, 0xf, 0x8d, 0xf9, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0x85, 0xc0, 0x7c, 0xf, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xf, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x5, 0xe9, 0xa7, 0, 0, 0, 0x8b, 0x45, 0x14, 0x89, 0x45, 0xd0, 0xe9, 0x80, 0, 0, 0, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x94, 0xf9, 0xff, 0xff, 0x66, 0x85, 0xc0, 0x74, 0xc, 0xc7, 0x45, 0xcc, 0x1, 0, 0, 0, 0xe9, 0x83, 0, 0, 0, 0xeb, 0x63, 0xe8, 0xf7, 0x56, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x18, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xdb, 0x42, 0, 0, 0x85, 0xc0, 0x74, 0x22, 0x8b, 0x45, 0xd8, 0x8b, 0x48, 0x10, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x18, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xf2, 0x3, 0, 0, 0x89, 0x45, 0xcc, 0xeb, 0x3e, 0xeb, 0x1e, 0xeb, 0x1c, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xc8, 0x66, 0x83, 0x7d, 0xc8, 0, 0xf, 0x86, 0x6f, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xc8, 0x1, 0x74, 0xa1, 0xeb, 0xe4, 0xeb, 0xe2, 0x8b, 0x45, 0xe8, 0x8b, 0x55, 0xf4, 0x66, 0x1, 0x2, 0x8b, 0x45, 0xe0, 0x8b, 0x55, 0xf8, 0x66, 0x1, 0x2, 0xe9, 0xf4, 0xfe, 0xff, 0xff, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0x8b, 0x45, 0xcc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0xc, 0}))
    II(0x100707ed, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x100707f2, 0x5)   calld(sys_check_available_stack_size, 0xf555b); /* call 0x10165d52 */
    II(0x100707f7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100707f8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100707f9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100707fa, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100707fc, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x10070802, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10070805, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x10070808, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x1007080b, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x1007080e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10070810, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10070813, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x10070816, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10070819, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007081c, 0x5)   calld(0x1007623c, 0x5a1b);            /* call 0x1007623c */
    II(0x10070821, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10070824, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x10070827, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1007082a, 0x2)   jmpd(0x10070880, 0x54);               /* jmp 0x10070880 */
l_0x1007082c:
    II(0x1007082c, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x1);   /* mov dword [ebp-0x18], 0x1 */
    II(0x10070833, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x1007083a, 0x2)   jmpd(0x1007089d, 0x61);               /* jmp 0x1007089d */
l_0x1007083c:
    II(0x1007083c, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x10070843, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x1);   /* mov dword [ebp-0x20], 0x1 */
    II(0x1007084a, 0x2)   jmpd(0x1007089d, 0x51);               /* jmp 0x1007089d */
l_0x1007084c:
    II(0x1007084c, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0xffffffff); /* mov dword [ebp-0x18], 0xffffffff */
    II(0x10070853, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x1007085a, 0x2)   jmpd(0x1007089d, 0x41);               /* jmp 0x1007089d */
l_0x1007085c:
    II(0x1007085c, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x10070863, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0xffffffff); /* mov dword [ebp-0x20], 0xffffffff */
    II(0x1007086a, 0x2)   jmpd(0x1007089d, 0x31);               /* jmp 0x1007089d */
l_0x1007086c:
    II(0x1007086c, 0x2)   jmpd(0x1007089d, 0x2f);               /* jmp 0x1007089d */
//    II(0x1007086e, 0x2)   /* Выравнивание. */
//    II(0x10070870, 0x10)  /* Служебная область с абсолютными адресами переходов. {0x1007082c, 0x1007083c, 0x1007084c, 0x1007085c}. */
l_0x10070880:
    II(0x10070880, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10070883, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10070886, 0x5)   cmp(memw_a32(ss, ebp - 0x2c), 0x3);   /* cmp word [ebp-0x2c], 0x3 */
    II(0x1007088b, 0x2)   jad(0x1007086c, -0x21);               /* ja 0x1007086c */
    II(0x1007088d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1007088f, 0x4)   mov(ax, memw_a32(ss, ebp - 0x2c));    /* mov ax, [ebp-0x2c] */
    II(0x10070893, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10070896, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x10070870), (0x1007082c)(0x1007083c)(0x1007084c)(0x1007085c)); /* jmp dword near [cs:eax+0x10070870] */
l_0x1007089d:
    II(0x1007089d, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100708a4, 0x2)   jmpd(0x100708ac, 0x6);                /* jmp 0x100708ac */
l_0x100708a6:
    II(0x100708a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100708a9, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x100708ac:
    II(0x100708ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100708af, 0x4)   cmp(ax, memw_a32(ss, ebp + 0x10));    /* cmp ax, [ebp+0x10] */
    II(0x100708b3, 0x6)   jged(0x100709b2, 0xf9);               /* jge dword 0x100709b2 */
    II(0x100708b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100708bc, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100708bf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100708c1, 0x2)   jld(0x100708d2, 0xf);                 /* jl 0x100708d2 */
    II(0x100708c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100708c6, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100708c9, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100708d0, 0x2)   jld(0x100708d4, 0x2);                 /* jl 0x100708d4 */
l_0x100708d2:
    II(0x100708d2, 0x2)   jmpd(0x100708de, 0xa);                /* jmp 0x100708de */
l_0x100708d4:
    II(0x100708d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100708d7, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100708da, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100708dc, 0x2)   jged(0x100708e0, 0x2);                /* jge 0x100708e0 */
l_0x100708de:
    II(0x100708de, 0x2)   jmpd(0x100708ef, 0xf);                /* jmp 0x100708ef */
l_0x100708e0:
    II(0x100708e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100708e3, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100708e6, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100708ed, 0x2)   jld(0x100708f4, 0x5);                 /* jl 0x100708f4 */
l_0x100708ef:
    II(0x100708ef, 0x5)   jmpd(0x1007099b, 0xa7);               /* jmp 0x1007099b */
l_0x100708f4:
    II(0x100708f4, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100708f7, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100708fa, 0x5)   jmpd(0x1007097f, 0x80);               /* jmp 0x1007097f */
l_0x100708ff:
    II(0x100708ff, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10070904, 0x1)   pushd(eax);                           /* push eax */
    II(0x10070905, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10070908, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1007090b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007090e, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10070911, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10070914, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10070917, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10070919, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007091c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10070920, 0x5)   calld(0x100702b9, -0x66c);            /* call 0x100702b9 */
    II(0x10070925, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x10070928, 0x2)   jzd(0x10070936, 0xc);                 /* jz 0x10070936 */
    II(0x1007092a, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0x1);   /* mov dword [ebp-0x34], 0x1 */
    II(0x10070931, 0x5)   jmpd(0x100709b9, 0x83);               /* jmp 0x100709b9 */
l_0x10070936:
    II(0x10070936, 0x2)   jmpd(0x1007099b, 0x63);               /* jmp 0x1007099b */
l_0x10070938:
    II(0x10070938, 0x5)   calld(0x10076034, 0x56f7);            /* call 0x10076034 */
    II(0x1007093d, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1007093f, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x10070941, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10070944, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10070947, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007094a, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1007094d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10070950, 0x5)   calld(0x10074c30, 0x42db);            /* call 0x10074c30 */
    II(0x10070955, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10070957, 0x2)   jzd(0x1007097b, 0x22);                /* jz 0x1007097b */
    II(0x10070959, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1007095c, 0x3)   mov(ecx, memd_a32(ds, eax + 0x10));   /* mov ecx, [eax+0x10] */
    II(0x1007095f, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x10070962, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10070965, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10070968, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007096b, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1007096e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10070971, 0x5)   calld(0x10070d68, 0x3f2);             /* call 0x10070d68 */
    II(0x10070976, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10070979, 0x2)   jmpd(0x100709b9, 0x3e);               /* jmp 0x100709b9 */
l_0x1007097b:
    II(0x1007097b, 0x2)   jmpd(0x1007099b, 0x1e);               /* jmp 0x1007099b */
l_0x1007097d:
    II(0x1007097d, 0x2)   jmpd(0x1007099b, 0x1c);               /* jmp 0x1007099b */
l_0x1007097f:
    II(0x1007097f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10070982, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10070985, 0x5)   cmp(memw_a32(ss, ebp - 0x38), 0);     /* cmp word [ebp-0x38], 0x0 */
    II(0x1007098a, 0x6)   jbed(0x100708ff, -0x91);              /* jbe dword 0x100708ff */
    II(0x10070990, 0x5)   cmp(memw_a32(ss, ebp - 0x38), 0x1);   /* cmp word [ebp-0x38], 0x1 */
    II(0x10070995, 0x2)   jzd(0x10070938, -0x5f);               /* jz 0x10070938 */
    II(0x10070997, 0x2)   jmpd(0x1007097d, -0x1c);              /* jmp 0x1007097d */
//  II(0x10070999, 0x2)   /* Недостижимый код. */
l_0x1007099b:
    II(0x1007099b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1007099e, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100709a1, 0x3)   add(memw_a32(ds, edx), ax);           /* add [edx], ax */
    II(0x100709a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100709a7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100709aa, 0x3)   add(memw_a32(ds, edx), ax);           /* add [edx], ax */
    II(0x100709ad, 0x5)   jmpd(0x100708a6, -0x10c);             /* jmp 0x100708a6 */
l_0x100709b2:
    II(0x100709b2, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
l_0x100709b9:
    II(0x100709b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100709bc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100709be, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100709bf, 0x1)   popd(edi);                            /* pop edi */
    II(0x100709c0, 0x1)   popd(esi);                            /* pop esi */
    II(0x100709c1, 0x3)   retd(0xc);                            /* ret 0xc */
FUNC_END

