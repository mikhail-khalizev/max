FUNC_BEGIN(0x1009aff9, 0x462acc3fec5d1f68, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x4f, 0xad, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xb9, 0, 0x21, 0, 0, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xa8, 0x76, 0, 0, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x3f, 0xdc, 0xfe, 0xff, 0x83, 0xe8, 0x13, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0xe8, 0x41, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x1d, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1009aff9, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x1009affe, 0x5)   calld(sys_check_available_stack_size, 0xcad4f); /* call 0x10165d52 */
    II(0x1009b003, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009b004, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009b005, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009b006, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009b007, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009b008, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009b00a, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1009b010, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1009b013, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1009b016, 0x5)   mov(ecx, 0x2100);                     /* mov ecx, 0x2100 */
    II(0x1009b01b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1009b01d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1009b021, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009b024, 0x5)   calld(0x100a26d1, 0x76a8);            /* call 0x100a26d1 */
    II(0x1009b029, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1009b02c, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b02f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1009b032, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009b035, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009b038, 0x5)   calld(my_ctor_0x101b56fc, -0x123c1);  /* call 0x10088c7c */
    II(0x1009b03d, 0x3)   sub(eax, 0x13);                       /* sub eax, 0x13 */
    II(0x1009b040, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1009b043, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b046, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1009b049, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009b04c, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b41e8); /* mov dword [eax+0x2], 0x101b41e8 */
    II(0x1009b053, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009b056, 0x4)   mov(memb_a32(ds, eax + 0x1d), 0);     /* mov byte [eax+0x1d], 0x0 */
    II(0x1009b05a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009b05d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x1009b060, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1009b063, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009b065, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009b066, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009b067, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009b068, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009b069, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009b06a, 0x1)   retd();                               /* ret */
FUNC_END

