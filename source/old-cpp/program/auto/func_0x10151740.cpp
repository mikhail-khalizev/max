FUNC_BEGIN(0x10151740, 0xd26a990cef45f3c6, 0x20, ({0x68, 0x30, 0x1, 0, 0, 0xe8, 0x8, 0x46, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xfc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x3e, 0xf, 0x85, 0x12, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x5, 0x82, 0, 0, 0, 0xe8, 0xea, 0x4d, 0xf2, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x6, 0x75, 0x9, 0x31, 0xc0, 0xe8, 0x5d, 0xf7, 0xfa, 0xff, 0xeb, 0xee, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0xb9, 0x1, 0, 0, 0, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xd8, 0x2b, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x77, 0x4a, 0xf2, 0xff, 0x8b, 0x50, 0x17, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x5d, 0xd8, 0x1, 0xd8, 0xe8, 0xa5, 0x7f, 0xf3, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x52, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x80, 0xd5, 0, 0, 0, 0x83, 0xe8, 0x8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x7, 0x83, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0x8b, 0x45, 0xfc, 0x5, 0x82, 0, 0, 0, 0xe8, 0x59, 0x4d, 0xf2, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x2e, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x43, 0xbb, 0x24, 0, 0, 0, 0xba, 0x17, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x47, 0x17, 0x1, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x5, 0x82, 0, 0, 0, 0xe8, 0xd2, 0x4d, 0xf2, 0xff, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x2d, 0x55, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x1b, 0xe8, 0x84, 0x13, 0xfb, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x36, 0xbd, 0xfe, 0xff, 0xe9, 0x8d, 0x4, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0x55, 0x4e, 0xf2, 0xff, 0x89, 0x45, 0xdc, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0xe8, 0xf4, 0xf1, 0xff, 0xff, 0x98, 0x6b, 0xc0, 0x33, 0xba, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x13, 0x2, 0xf, 0x84, 0x11, 0x1, 0, 0, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0x8b, 0x45, 0xfc, 0xe8, 0x21, 0x49, 0xf2, 0xff, 0x89, 0xc1, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xfc, 0xe8, 0xa6, 0xf1, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xd4, 0xe8, 0xd7, 0x89, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xb, 0x93, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x15, 0x46, 0xf2, 0xff, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe4, 0xe8, 0x52, 0x4c, 0xf2, 0xff, 0xe8, 0x71, 0x90, 0xf3, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x45, 0x4c, 0xf2, 0xff, 0xc6, 0x40, 0x3d, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x39, 0x4c, 0xf2, 0xff, 0xc6, 0x40, 0x3e, 0x3, 0x8d, 0x45, 0xe4, 0xe8, 0x2d, 0x4c, 0xf2, 0xff, 0xc6, 0x40, 0x2d, 0x4, 0x8b, 0x55, 0xfc, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0xff, 0x80, 0x81, 0xa5, 0x1c, 0x10, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0xbf, 0x99, 0xf3, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x7a, 0, 0x74, 0x16, 0x8d, 0x45, 0xe4, 0xe8, 0xf6, 0x4b, 0xf2, 0xff, 0x8d, 0x50, 0x8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0x1c, 0x99, 0xf3, 0xff, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0x5, 0x82, 0, 0, 0, 0xe8, 0x7c, 0x92, 0xf3, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x52, 0x1, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0x4, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1f, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x31, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x43, 0x81, 0xff, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x34, 0xc, 0, 0, 0xe9, 0x3c, 0x3, 0, 0, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xb5, 0x53, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x1b, 0xe8, 0xc, 0x12, 0xfb, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xbe, 0xbb, 0xfe, 0xff, 0xf, 0xbf, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0x30, 0x25, 0xf2, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xe, 0x4c, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xe5, 0x92, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x77, 0x8b, 0x45, 0xfc, 0xe8, 0x66, 0xf0, 0xff, 0xff, 0x98, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0xb8, 0x3f, 0xde, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0xc, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x85, 0x44, 0x1, 0, 0x83, 0xc4, 0x18, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xe8, 0x92, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x1a, 0xb9, 0x9e, 0xd, 0, 0, 0xbb, 0x78, 0xde, 0x1a, 0x10, 0x8d, 0x95, 0xc, 0xff, 0xff, 0xff, 0xb8, 0x85, 0xde, 0x1a, 0x10, 0xe8, 0x2d, 0xed, 0xf9, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0xc5, 0x4a, 0xf2, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xe8, 0x8d, 0x45, 0xe4, 0xe8, 0xb6, 0x4a, 0xf2, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xf0, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xfc, 0xe8, 0xae, 0xef, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x85, 0x8, 0xff, 0xff, 0xff, 0xe8, 0xdc, 0x87, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x10, 0x91, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x8, 0xff, 0xff, 0xff, 0xe8, 0x17, 0x44, 0xf2, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0xef, 0x91, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0xb, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0xc7, 0xaf, 0xf4, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x97, 0x4a, 0xf2, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x53, 0x8e, 0xf3, 0xff, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe4, 0xe8, 0x24, 0x4a, 0xf2, 0xff, 0xe8, 0x43, 0x8e, 0xf3, 0xff, 0xbb, 0x1e, 0, 0, 0, 0xba, 0x10, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x99, 0x4a, 0xf2, 0xff, 0xe8, 0x2a, 0x14, 0x1, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x3d, 0x75, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x80, 0xd5, 0, 0, 0, 0x83, 0xe8, 0x10, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x79, 0x7f, 0xff, 0xff, 0xeb, 0x13, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x29, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x64, 0x7f, 0xff, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0xc9, 0x49, 0xf2, 0xff, 0x66, 0x83, 0x78, 0x8, 0x15, 0x74, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xba, 0x49, 0xf2, 0xff, 0x66, 0x83, 0x78, 0x8, 0x27, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xa9, 0x49, 0xf2, 0xff, 0x66, 0x83, 0x78, 0x8, 0x21, 0x75, 0x2, 0xeb, 0x13, 0x8d, 0x45, 0xe4, 0xe8, 0x98, 0x49, 0xf2, 0xff, 0x66, 0x83, 0x78, 0x8, 0xc, 0xf, 0x85, 0xfa, 0, 0, 0, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x97, 0x27, 0xf2, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x5, 0x82, 0, 0, 0, 0xe8, 0x23, 0x4a, 0xf2, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x5f, 0x49, 0xf2, 0xff, 0xc6, 0x40, 0x3d, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x53, 0x49, 0xf2, 0xff, 0xc6, 0x40, 0x3e, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0x8f, 0x8f, 0xf3, 0xff, 0xe8, 0x41, 0xd0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xc1, 0x49, 0xf2, 0xff, 0xe8, 0xf4, 0xfb, 0xf1, 0xff, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0x1, 0x8b, 0x55, 0xfc, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0xfa, 0x1a, 0xfb, 0xff, 0xe8, 0x93, 0x37, 0xf8, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xfc, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0x1, 0x18, 0xfb, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0xf6, 0x90, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1f, 0xeb, 0xe, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x29, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x5e, 0x7e, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xfb, 0x9, 0, 0, 0x85, 0xc0, 0x74, 0x2a, 0x8b, 0x45, 0xfc, 0xe8, 0xef, 0x9, 0, 0, 0x89, 0x85, 0x4, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x4, 0xff, 0xff, 0xff, 0x8b, 0x58, 0x2, 0x8d, 0x45, 0xe4, 0xe8, 0x2c, 0x49, 0xf2, 0xff, 0x89, 0xc2, 0x8b, 0x85, 0x4, 0xff, 0xff, 0xff, 0xff, 0x53, 0x2c, 0xeb, 0x31, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0x4, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x1f, 0x8b, 0x45, 0xfc, 0xe8, 0xb5, 0x9, 0, 0, 0x85, 0xc0, 0x74, 0x17, 0x8b, 0x45, 0xfc, 0xe8, 0xa9, 0x9, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x67, 0x48, 0xf2, 0xff, 0xe8, 0xdb, 0xa, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x10, 0x42, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10151740, 0x5)   pushd(0x130);                         /* push dword 0x130 */
    II(0x10151745, 0x5)   calld(sys_check_available_stack_size, 0x14608); /* call 0x10165d52 */
    II(0x1015174a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015174b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015174c, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015174d, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015174e, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015174f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10151750, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10151752, 0x6)   sub(esp, 0xfc);                       /* sub esp, 0xfc */
    II(0x10151758, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015175b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015175e, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x10151762, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10151765, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151768, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1015176c, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015176f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151772, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3e);   /* cmp word [eax+0x8], 0x3e */
    II(0x10151777, 0x6)   jnzd(0x1015188f, 0x112);              /* jnz dword 0x1015188f */
    II(0x1015177d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151780, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x10151785, 0x5)   calld(0x10076574, -0xdb216);          /* call 0x10076574 */
    II(0x1015178a, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x1015178e, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x10151791:
    II(0x10151791, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151794, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x6);   /* cmp byte [eax+0x3e], 0x6 */
    II(0x10151798, 0x2)   jnzd(0x101517a3, 0x9);                /* jnz 0x101517a3 */
    II(0x1015179a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015179c, 0x5)   calld(0x10100efe, -0x508a3);          /* call 0x10100efe */
    II(0x101517a1, 0x2)   jmpd(0x10151791, -0x12);              /* jmp 0x10151791 */
l_0x101517a3:
    II(0x101517a3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101517a5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101517a6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101517a8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101517a9, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x101517ae, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101517b0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x101517b4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101517b8, 0x5)   calld(0x10074395, -0xdd428);          /* call 0x10074395 */
    II(0x101517bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101517c0, 0x5)   calld(0x1007623c, -0xdb589);          /* call 0x1007623c */
    II(0x101517c5, 0x3)   mov(edx, memd_a32(ds, eax + 0x17));   /* mov edx, [eax+0x17] */
    II(0x101517c8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101517cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101517ce, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x101517d1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101517d4, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x28)); /* movsx ebx, word [ebp-0x28] */
    II(0x101517d8, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x101517da, 0x5)   calld(my_min, -0xc805b);              /* call 0x10089784 */
    II(0x101517df, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101517e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101517e4, 0x4)   mov(memw_a32(ds, eax + 0x52), dx);    /* mov [eax+0x52], dx */
    II(0x101517e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101517eb, 0x7)   mov(ax, memw_a32(ds, eax + 0xd5));    /* mov ax, [eax+0xd5] */
    II(0x101517f2, 0x3)   sub(eax, 0x8);                        /* sub eax, 0x8 */
    II(0x101517f5, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101517f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101517fb, 0x5)   calld(0x10149b07, -0x7cf9);           /* call 0x10149b07 */
    II(0x10151800, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151803, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x10151807, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015180a, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x1015180e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151811, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x10151816, 0x5)   calld(0x10076574, -0xdb2a7);          /* call 0x10076574 */
    II(0x1015181b, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1015181f, 0x2)   jzd(0x1015184f, 0x2e);                /* jz 0x1015184f */
    II(0x10151821, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151824, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
//    II(0x10151828, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015182b, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x1015182f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151832, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
//    II(0x10151836, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151839, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x1015183d, 0x5)   mov(ebx, 0x24);                       /* mov ebx, 0x24 */
    II(0x10151842, 0x5)   mov(edx, 0x17);                       /* mov edx, 0x17 */
    II(0x10151847, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015184a, 0x5)   calld(0x10162f96, 0x11747);           /* call 0x10162f96 */
l_0x1015184f:
    II(0x1015184f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151851, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151854, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x10151859, 0x5)   calld(0x10076630, -0xdb22e);          /* call 0x10076630 */
    II(0x1015185e, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x10151863, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151866, 0x5)   calld(0x10076d98, -0xdaad3);          /* call 0x10076d98 */
    II(0x1015186b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015186d, 0x2)   jzd(0x1015188a, 0x1b);                /* jz 0x1015188a */
    II(0x1015186f, 0x5)   calld(0x10102bf8, -0x4ec7c);          /* call 0x10102bf8 */
    II(0x10151874, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10151876, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x10151878, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1015187d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10151880, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10151885, 0x5)   calld(0x1013d5c0, -0x142ca);          /* call 0x1013d5c0 */
l_0x1015188a:
    II(0x1015188a, 0x5)   jmpd(0x10151d1c, 0x48d);              /* jmp 0x10151d1c */
l_0x1015188f:
    II(0x1015188f, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x10151893, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151896, 0x5)   calld(my_ctor_0x101b38f8, -0xdb1ab);  /* call 0x100766f0 */
    II(0x1015189b, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1015189e, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x101518a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101518a5, 0x5)   calld(0x10150a9e, -0xe0c);            /* call 0x10150a9e */
    II(0x101518aa, 0x1)   cwde();                               /* cwde */
    II(0x101518ab, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x101518ae, 0x5)   mov(edx, 0x101c81c0);                 /* mov edx, 0x101c81c0 */
    II(0x101518b3, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101518b5, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x101518b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101518bb, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x101518bf, 0x6)   jzd(0x101519d6, 0x111);               /* jz dword 0x101519d6 */
    II(0x101518c5, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101518ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x101518cb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101518cd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101518ce, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101518d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101518d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101518d5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101518d6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101518da, 0x1)   pushd(eax);                           /* push eax */
    II(0x101518db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101518de, 0x5)   calld(0x10076204, -0xdb6df);          /* call 0x10076204 */
    II(0x101518e3, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x101518e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101518e8, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x101518eb, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101518ed, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101518f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101518f3, 0x5)   calld(0x10150a9e, -0xe5a);            /* call 0x10150a9e */
    II(0x101518f8, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101518fb, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x101518fe, 0x5)   calld(0x1015a2da, 0x89d7);            /* call 0x1015a2da */
    II(0x10151903, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10151905, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151908, 0x5)   calld(0x1008ac18, -0xc6cf5);          /* call 0x1008ac18 */
    II(0x1015190d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015190f, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10151912, 0x5)   calld(0x10075f2c, -0xdb9eb);          /* call 0x10075f2c */
    II(0x10151917, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015191a, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015191d, 0x5)   calld(0x10076574, -0xdb3ae);          /* call 0x10076574 */
    II(0x10151922, 0x5)   calld(0x1008a998, -0xc6f8f);          /* call 0x1008a998 */
    II(0x10151927, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015192a, 0x5)   calld(0x10076574, -0xdb3bb);          /* call 0x10076574 */
    II(0x1015192f, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x10);  /* mov byte [eax+0x3d], 0x10 */
    II(0x10151933, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151936, 0x5)   calld(0x10076574, -0xdb3c7);          /* call 0x10076574 */
    II(0x1015193b, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x3);   /* mov byte [eax+0x3e], 0x3 */
    II(0x1015193f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151942, 0x5)   calld(0x10076574, -0xdb3d3);          /* call 0x10076574 */
    II(0x10151947, 0x4)   mov(memb_a32(ds, eax + 0x2d), 0x4);   /* mov byte [eax+0x2d], 0x4 */
    II(0x1015194b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015194e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10151950, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x10151953, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10151959, 0x7)   inc(memw_a32(ds, eax + 0x101ca581));  /* inc word [eax+0x101ca581] */
    II(0x10151960, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151962, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151965, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10151968, 0x5)   calld(0x1008b32c, -0xc6641);          /* call 0x1008b32c */
    II(0x1015196d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151970, 0x4)   cmp(memb_a32(ds, eax + 0x7a), 0);     /* cmp byte [eax+0x7a], 0x0 */
    II(0x10151974, 0x2)   jzd(0x1015198c, 0x16);                /* jz 0x1015198c */
    II(0x10151976, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151979, 0x5)   calld(0x10076574, -0xdb40a);          /* call 0x10076574 */
    II(0x1015197e, 0x3)   lea(edx, eax + 0x8);                  /* lea edx, [eax+0x8] */
    II(0x10151981, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151984, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10151987, 0x5)   calld(0x1008b2a8, -0xc66e4);          /* call 0x1008b2a8 */
l_0x1015198c:
    II(0x1015198c, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x1015198f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151992, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x10151997, 0x5)   calld(0x1008ac18, -0xc6d84);          /* call 0x1008ac18 */
    II(0x1015199c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015199f, 0x6)   mov(memw_a32(ds, eax + 0x52), 0x1);   /* mov word [eax+0x52], 0x1 */
    II(0x101519a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101519a8, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x4);   /* mov byte [eax+0x3d], 0x4 */
    II(0x101519ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101519af, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1f);  /* mov byte [eax+0x3e], 0x1f */
    II(0x101519b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101519b6, 0x3)   mov(edx, memd_a32(ds, eax + 0x31));   /* mov edx, [eax+0x31] */
    II(0x101519b9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101519bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101519bf, 0x5)   calld(0x10149b07, -0x7ebd);           /* call 0x10149b07 */
    II(0x101519c4, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101519c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101519cc, 0x5)   calld(0x10152605, 0xc34);             /* call 0x10152605 */
    II(0x101519d1, 0x5)   jmpd(0x10151d12, 0x33c);              /* jmp 0x10151d12 */
l_0x101519d6:
    II(0x101519d6, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x101519db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101519de, 0x5)   calld(0x10076d98, -0xdac4b);          /* call 0x10076d98 */
    II(0x101519e3, 0x2)   test(al, al);                         /* test al, al */
    II(0x101519e5, 0x2)   jzd(0x10151a02, 0x1b);                /* jz 0x10151a02 */
    II(0x101519e7, 0x5)   calld(0x10102bf8, -0x4edf4);          /* call 0x10102bf8 */
    II(0x101519ec, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101519ee, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x101519f0, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101519f5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101519f8, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x101519fd, 0x5)   calld(0x1013d5c0, -0x14442);          /* call 0x1013d5c0 */
l_0x10151a02:
    II(0x10151a02, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x10151a06, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10151a0a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151a0d, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10151a10, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10151a12, 0x1)   cwde();                               /* cwde */
    II(0x10151a13, 0x5)   calld(0x10073f48, -0xddad0);          /* call 0x10073f48 */
    II(0x10151a18, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10151a1a, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151a1d, 0x5)   calld(0x10076630, -0xdb3f2);          /* call 0x10076630 */
    II(0x10151a22, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151a24, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151a27, 0x5)   calld(0x1013ad11, -0x16d1b);          /* call 0x1013ad11 */
    II(0x10151a2c, 0x2)   test(al, al);                         /* test al, al */
    II(0x10151a2e, 0x2)   jzd(0x10151aa7, 0x77);                /* jz 0x10151aa7 */
    II(0x10151a30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151a33, 0x5)   calld(0x10150a9e, -0xf9a);            /* call 0x10150a9e */
    II(0x10151a38, 0x1)   cwde();                               /* cwde */
    II(0x10151a39, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10151a3c, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x10151a42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151a45, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x10151a48, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10151a4b, 0x1)   inc(eax);                             /* inc eax */
    II(0x10151a4c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151a4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151a50, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10151a53, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10151a56, 0x1)   inc(eax);                             /* inc eax */
    II(0x10151a57, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151a58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151a5b, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10151a5e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10151a61, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10151a64, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x10151a6a, 0x5)   mov(eax, 0x101ade3f);                 /* mov eax, 0x101ade3f */ /* "Cones for %s at [%i,%i] building %s prematurely deleted!" */
    II(0x10151a6f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151a70, 0x6)   lea(eax, ebp - 0xf4);                 /* lea eax, [ebp+0xffffff0c] */
    II(0x10151a76, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151a77, 0x5)   calld(sys_sprintf, 0x14485);          /* call 0x10165f01 */
    II(0x10151a7c, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x10151a7f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151a81, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151a84, 0x5)   calld(0x1013ad71, -0x16d18);          /* call 0x1013ad71 */
    II(0x10151a89, 0x2)   test(al, al);                         /* test al, al */
    II(0x10151a8b, 0x2)   jnzd(0x10151aa7, 0x1a);               /* jnz 0x10151aa7 */
    II(0x10151a8d, 0x5)   mov(ecx, 0xd9e);                      /* mov ecx, 0xd9e */
    II(0x10151a92, 0x5)   mov(ebx, 0x101ade78);                 /* mov ebx, 0x101ade78 */ /* "unitinfo.cpp" */
    II(0x10151a97, 0x6)   lea(edx, ebp - 0xf4);                 /* lea edx, [ebp+0xffffff0c] */
    II(0x10151a9d, 0x5)   mov(eax, 0x101ade85);                 /* mov eax, 0x101ade85 */ /* "new_unit != 0" */
    II(0x10151aa2, 0x5)   calld(0x100f07d4, -0x612d3);          /* call 0x100f07d4 */
l_0x10151aa7:
    II(0x10151aa7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151aaa, 0x5)   calld(0x10076574, -0xdb53b);          /* call 0x10076574 */
    II(0x10151aaf, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x10151ab3, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10151ab6, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151ab9, 0x5)   calld(0x10076574, -0xdb54a);          /* call 0x10076574 */
    II(0x10151abe, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x10151ac2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10151ac5, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10151aca, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151acb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10151acd, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151ace, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10151ad0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151ad1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10151ad5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151ad6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10151ada, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151adb, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10151add, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151ae0, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10151ae3, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10151ae5, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10151ae8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151aeb, 0x5)   calld(0x10150a9e, -0x1052);           /* call 0x10150a9e */
    II(0x10151af0, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10151af3, 0x6)   lea(eax, ebp - 0xf8);                 /* lea eax, [ebp+0xffffff08] */
    II(0x10151af9, 0x5)   calld(0x1015a2da, 0x87dc);            /* call 0x1015a2da */
    II(0x10151afe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10151b00, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151b03, 0x5)   calld(0x1008ac18, -0xc6ef0);          /* call 0x1008ac18 */
    II(0x10151b08, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151b0a, 0x6)   lea(eax, ebp - 0xf8);                 /* lea eax, [ebp+0xffffff08] */
    II(0x10151b10, 0x5)   calld(0x10075f2c, -0xdbbe9);          /* call 0x10075f2c */
    II(0x10151b15, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151b17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151b1a, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10151b1d, 0x5)   calld(0x1013ad11, -0x16e11);          /* call 0x1013ad11 */
    II(0x10151b22, 0x2)   test(al, al);                         /* test al, al */
    II(0x10151b24, 0x2)   jzd(0x10151b31, 0xb);                 /* jz 0x10151b31 */
    II(0x10151b26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151b29, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10151b2c, 0x5)   calld(0x1009caf8, -0xb5039);          /* call 0x1009caf8 */
l_0x10151b31:
    II(0x10151b31, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151b34, 0x5)   calld(0x100765d0, -0xdb569);          /* call 0x100765d0 */
    II(0x10151b39, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x10151b3c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10151b3e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10151b40, 0x5)   calld(0x1008a998, -0xc71ad);          /* call 0x1008a998 */
    II(0x10151b45, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10151b48, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151b4b, 0x5)   calld(0x10076574, -0xdb5dc);          /* call 0x10076574 */
    II(0x10151b50, 0x5)   calld(0x1008a998, -0xc71bd);          /* call 0x1008a998 */
    II(0x10151b55, 0x5)   mov(ebx, 0x1e);                       /* mov ebx, 0x1e */
    II(0x10151b5a, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x10151b5f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151b62, 0x5)   calld(0x10076600, -0xdb567);          /* call 0x10076600 */
    II(0x10151b67, 0x5)   calld(0x10162f96, 0x1142a);           /* call 0x10162f96 */
    II(0x10151b6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151b6f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3d);   /* cmp word [eax+0x8], 0x3d */
    II(0x10151b74, 0x2)   jnzd(0x10151b90, 0x1a);               /* jnz 0x10151b90 */
    II(0x10151b76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151b79, 0x7)   mov(ax, memw_a32(ds, eax + 0xd5));    /* mov ax, [eax+0xd5] */
    II(0x10151b80, 0x3)   sub(eax, 0x10);                       /* sub eax, 0x10 */
    II(0x10151b83, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10151b86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151b89, 0x5)   calld(0x10149b07, -0x8087);           /* call 0x10149b07 */
    II(0x10151b8e, 0x2)   jmpd(0x10151ba3, 0x13);               /* jmp 0x10151ba3 */
l_0x10151b90:
    II(0x10151b90, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151b93, 0x3)   mov(al, memb_a32(ds, eax + 0x29));    /* mov al, [eax+0x29] */
    II(0x10151b96, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10151b98, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10151b9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151b9e, 0x5)   calld(0x10149b07, -0x809c);           /* call 0x10149b07 */
l_0x10151ba3:
    II(0x10151ba3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151ba6, 0x5)   calld(0x10076574, -0xdb637);          /* call 0x10076574 */
    II(0x10151bab, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x15);   /* cmp word [eax+0x8], 0x15 */
    II(0x10151bb0, 0x2)   jzd(0x10151bc1, 0xf);                 /* jz 0x10151bc1 */
    II(0x10151bb2, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151bb5, 0x5)   calld(0x10076574, -0xdb646);          /* call 0x10076574 */
    II(0x10151bba, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x27);   /* cmp word [eax+0x8], 0x27 */
    II(0x10151bbf, 0x2)   jnzd(0x10151bc3, 0x2);                /* jnz 0x10151bc3 */
l_0x10151bc1:
    II(0x10151bc1, 0x2)   jmpd(0x10151bd2, 0xf);                /* jmp 0x10151bd2 */
l_0x10151bc3:
    II(0x10151bc3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151bc6, 0x5)   calld(0x10076574, -0xdb657);          /* call 0x10076574 */
    II(0x10151bcb, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x21);   /* cmp word [eax+0x8], 0x21 */
    II(0x10151bd0, 0x2)   jnzd(0x10151bd4, 0x2);                /* jnz 0x10151bd4 */
l_0x10151bd2:
    II(0x10151bd2, 0x2)   jmpd(0x10151be7, 0x13);               /* jmp 0x10151be7 */
l_0x10151bd4:
    II(0x10151bd4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151bd7, 0x5)   calld(0x10076574, -0xdb668);          /* call 0x10076574 */
    II(0x10151bdc, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xc);    /* cmp word [eax+0x8], 0xc */
    II(0x10151be1, 0x6)   jnzd(0x10151ce1, 0xfa);               /* jnz dword 0x10151ce1 */
l_0x10151be7:
    II(0x10151be7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10151be9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151bea, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10151bec, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151bed, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10151bef, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10151bf1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10151bf5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10151bf9, 0x5)   calld(0x10074395, -0xdd869);          /* call 0x10074395 */
    II(0x10151bfe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151c00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151c03, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x10151c08, 0x5)   calld(0x10076630, -0xdb5dd);          /* call 0x10076630 */
    II(0x10151c0d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151c10, 0x5)   calld(0x10076574, -0xdb6a1);          /* call 0x10076574 */
    II(0x10151c15, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x10151c19, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151c1c, 0x5)   calld(0x10076574, -0xdb6ad);          /* call 0x10076574 */
    II(0x10151c21, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
    II(0x10151c25, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151c28, 0x5)   calld(0x1008abbc, -0xc7071);          /* call 0x1008abbc */
    II(0x10151c2d, 0x5)   calld(0x1015ec73, 0xd041);            /* call 0x1015ec73 */
    II(0x10151c32, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10151c37, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151c3a, 0x5)   calld(0x10076600, -0xdb63f);          /* call 0x10076600 */
    II(0x10151c3f, 0x5)   calld(0x10071838, -0xe040c);          /* call 0x10071838 */
    II(0x10151c44, 0x7)   mov(memb_a32(ds, 0x101c391b), 0x1);   /* mov byte [0x101c391b], 0x1 */
    II(0x10151c4b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10151c4e, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x10151c53, 0x5)   calld(0x10103752, -0x4e506);          /* call 0x10103752 */
    II(0x10151c58, 0x5)   calld(0x100d53f0, -0x7c86d);          /* call 0x100d53f0 */
    II(0x10151c5d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10151c5f, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10151c61, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10151c64, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x10151c69, 0x5)   calld(0x1010346f, -0x4e7ff);          /* call 0x1010346f */
    II(0x10151c6e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151c70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151c73, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10151c76, 0x5)   calld(0x1013ad71, -0x16f0a);          /* call 0x1013ad71 */
    II(0x10151c7b, 0x2)   test(al, al);                         /* test al, al */
    II(0x10151c7d, 0x2)   jzd(0x10151c88, 0x9);                 /* jz 0x10151c88 */
    II(0x10151c7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151c82, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1f);  /* mov byte [eax+0x3e], 0x1f */
    II(0x10151c86, 0x2)   jmpd(0x10151c96, 0xe);                /* jmp 0x10151c96 */
l_0x10151c88:
    II(0x10151c88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151c8b, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x10151c8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151c92, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
l_0x10151c96:
    II(0x10151c96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151c99, 0x3)   mov(al, memb_a32(ds, eax + 0x29));    /* mov al, [eax+0x29] */
    II(0x10151c9c, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10151c9e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10151ca1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151ca4, 0x5)   calld(0x10149b07, -0x81a2);           /* call 0x10149b07 */
    II(0x10151ca9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151cac, 0x5)   calld(0x101526ac, 0x9fb);             /* call 0x101526ac */
    II(0x10151cb1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10151cb3, 0x2)   jzd(0x10151cdf, 0x2a);                /* jz 0x10151cdf */
    II(0x10151cb5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151cb8, 0x5)   calld(0x101526ac, 0x9ef);             /* call 0x101526ac */
    II(0x10151cbd, 0x6)   mov(memd_a32(ss, ebp - 0xfc), eax);   /* mov [ebp+0xffffff04], eax */
//    II(0x10151cc3, 0x6)   mov(eax, memd_a32(ss, ebp - 0xfc));   /* mov eax, [ebp+0xffffff04] */
    II(0x10151cc9, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10151ccc, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151ccf, 0x5)   calld(0x10076600, -0xdb6d4);          /* call 0x10076600 */
    II(0x10151cd4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10151cd6, 0x6)   mov(eax, memd_a32(ss, ebp - 0xfc));   /* mov eax, [ebp+0xffffff04] */
    II(0x10151cdc, 0x3)   calld_abs(memd_a32(ds, ebx + 0x2c));  /* call dword near [ebx+0x2c] */
l_0x10151cdf:
    II(0x10151cdf, 0x2)   jmpd(0x10151d12, 0x31);               /* jmp 0x10151d12 */
l_0x10151ce1:
    II(0x10151ce1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151ce4, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x4);   /* mov byte [eax+0x3d], 0x4 */
    II(0x10151ce8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151ceb, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1f);  /* mov byte [eax+0x3e], 0x1f */
    II(0x10151cef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151cf2, 0x5)   calld(0x101526ac, 0x9b5);             /* call 0x101526ac */
    II(0x10151cf7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10151cf9, 0x2)   jzd(0x10151d12, 0x17);                /* jz 0x10151d12 */
    II(0x10151cfb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10151cfe, 0x5)   calld(0x101526ac, 0x9a9);             /* call 0x101526ac */
    II(0x10151d03, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10151d05, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151d08, 0x5)   calld(0x10076574, -0xdb799);          /* call 0x10076574 */
    II(0x10151d0d, 0x5)   calld(0x101527ed, 0xadb);             /* call 0x101527ed */
l_0x10151d12:
    II(0x10151d12, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151d14, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10151d17, 0x5)   calld(0x10075f2c, -0xdbdf0);          /* call 0x10075f2c */
l_0x10151d1c:
    II(0x10151d1c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10151d1e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10151d1f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10151d20, 0x1)   popd(esi);                            /* pop esi */
    II(0x10151d21, 0x1)   popd(edx);                            /* pop edx */
    II(0x10151d22, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10151d23, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10151d24, 0x1)   retd();                               /* ret */
FUNC_END

