FUNC_BEGIN(0x100bcf11, 0xf30b5f927b26e6fe, 0x20, ({0x68, 0x8c, 0, 0, 0, 0xe8, 0x37, 0x8e, 0xa, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x70, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x63, 0, 0xf, 0x84, 0x56, 0x4, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0xa8, 0xec, 0xfc, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf8, 0xfe, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xd4, 0xe8, 0x24, 0xbd, 0xfc, 0xff, 0x89, 0x45, 0xd0, 0x80, 0x65, 0xf8, 0xfe, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xcf, 0x93, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x45, 0x95, 0xfb, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0x75, 0x9b, 0xfb, 0xff, 0x66, 0xc7, 0x45, 0xf0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xf0, 0x66, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x39, 0x66, 0xc7, 0x45, 0xf2, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xf2, 0x66, 0xff, 0x45, 0xf2, 0x8b, 0x45, 0xf2, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x1c, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xf2, 0x8b, 0, 0x1, 0xd0, 0x80, 0x20, 0xfb, 0xeb, 0xd1, 0xeb, 0xb4, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x1f, 0x9c, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x8e, 0xdd, 0x7, 0, 0x84, 0xc0, 0x74, 0x2d, 0x8d, 0x45, 0xec, 0xe8, 0xb1, 0x93, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x14, 0x8d, 0x45, 0xec, 0xe8, 0xce, 0x93, 0xfb, 0xff, 0x8d, 0x5d, 0xd4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xa, 0xdb, 0xfc, 0xff, 0xeb, 0xbd, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x1a, 0x93, 0xfb, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x12, 0x94, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xc4, 0x9b, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x33, 0xdd, 0x7, 0, 0x84, 0xc0, 0x74, 0x48, 0x8d, 0x45, 0xec, 0xe8, 0x56, 0x93, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x19, 0x8d, 0x45, 0xec, 0xe8, 0x73, 0x93, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xe8, 0x7b, 0xfb, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xec, 0xe8, 0x58, 0x93, 0xfb, 0xff, 0x8d, 0x5d, 0xd4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x94, 0xda, 0xfc, 0xff, 0xeb, 0xa2, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xa4, 0x92, 0xfb, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x9c, 0x93, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x4e, 0x9b, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xbd, 0xdc, 0x7, 0, 0x84, 0xc0, 0x74, 0x48, 0x8d, 0x45, 0xec, 0xe8, 0xe0, 0x92, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x19, 0x8d, 0x45, 0xec, 0xe8, 0xfd, 0x92, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xe8, 0x5, 0xfb, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xec, 0xe8, 0xe2, 0x92, 0xfb, 0xff, 0x8d, 0x5d, 0xd4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x1e, 0xda, 0xfc, 0xff, 0xeb, 0xa2, 0x8d, 0x45, 0xd4, 0xe8, 0x30, 0x92, 0xfb, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x28, 0x93, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xda, 0x9a, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x49, 0xdc, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x7f, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x68, 0x92, 0xfb, 0xff, 0xe8, 0xff, 0x90, 0xfb, 0xff, 0x66, 0x8b, 0x40, 0x17, 0x5, 0x8, 0, 0, 0, 0xf, 0xbf, 0xf0, 0x8d, 0x45, 0xec, 0xe8, 0x4f, 0x92, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x41, 0x92, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x3f, 0x99, 0xfb, 0xff, 0x8d, 0x4d, 0xbc, 0x89, 0xf3, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x46, 0xc4, 0xfe, 0xff, 0x8d, 0x45, 0xbc, 0xe8, 0xa9, 0xc6, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0xbc, 0xe8, 0xd2, 0xc6, 0xfc, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe4, 0xe8, 0x8f, 0xd5, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0x1, 0x8d, 0x45, 0xbc, 0xe8, 0x35, 0xc5, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0xd1, 0xe9, 0x67, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xa9, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x74, 0x19, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0x7b, 0, 0, 0, 0x66, 0xc7, 0x45, 0xf0, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xf0, 0x66, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x60, 0x66, 0xc7, 0x45, 0xf2, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xf2, 0x66, 0xff, 0x45, 0xf2, 0x8b, 0x45, 0xf2, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x43, 0xf, 0xbf, 0x55, 0xf2, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0xf0, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x80, 0x38, 0, 0x74, 0x15, 0xf, 0xbf, 0x5d, 0xf2, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x45, 0xe4, 0xe8, 0xc2, 0xd4, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0, 0xeb, 0xaa, 0xeb, 0x8d, 0xe9, 0x44, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xd4, 0xe8, 0xbc, 0x90, 0xfb, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb4, 0x91, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x66, 0x99, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xd5, 0xda, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xcd, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xf4, 0x90, 0xfb, 0xff, 0xe8, 0x8b, 0x8f, 0xfb, 0xff, 0x66, 0x8b, 0x40, 0x17, 0x5, 0xa, 0, 0, 0, 0xf, 0xbf, 0xf0, 0x8d, 0x45, 0xec, 0xe8, 0xdb, 0x90, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0xcd, 0x90, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xb8, 0xe8, 0xcb, 0x97, 0xfb, 0xff, 0x8d, 0x4d, 0x98, 0x89, 0xf3, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x44, 0xc5, 0xfe, 0xff, 0x8d, 0x45, 0x98, 0xe8, 0x41, 0xd8, 0, 0, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0x98, 0xe8, 0x6a, 0xd8, 0, 0, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe4, 0xe8, 0x1b, 0xd4, 0xfc, 0xff, 0x1, 0xd8, 0x80, 0x38, 0, 0x75, 0x4c, 0x8d, 0x45, 0xe4, 0xe8, 0xdc, 0xd3, 0xfc, 0xff, 0x89, 0xc1, 0x8d, 0x45, 0xec, 0xe8, 0x7a, 0x90, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x6c, 0x90, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x94, 0xe8, 0x6a, 0x97, 0xfb, 0xff, 0x89, 0xc3, 0x8d, 0x45, 0x98, 0xe8, 0x54, 0xd8, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0x90, 0xe8, 0xe, 0x8b, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x53, 0xf9, 0xff, 0xff, 0x8d, 0x45, 0x98, 0xe8, 0x78, 0xc7, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x83, 0xe9, 0x19, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf1, 0x8b, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xb7, 0xb8, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x10, 0xe9, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100bcf11, 0x5)   pushd(0x8c);                          /* push dword 0x8c */
    II(0x100bcf16, 0x5)   calld(sys_check_available_stack_size, 0xa8e37); /* call 0x10165d52 */
    II(0x100bcf1b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100bcf1c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100bcf1d, 0x1)   pushd(edx);                           /* push edx */
    II(0x100bcf1e, 0x1)   pushd(esi);                           /* push esi */
    II(0x100bcf1f, 0x1)   pushd(edi);                           /* push edi */
    II(0x100bcf20, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100bcf21, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100bcf23, 0x6)   sub(esp, 0x70);                       /* sub esp, 0x70 */
    II(0x100bcf29, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100bcf2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bcf2f, 0x4)   cmp(memd_a32(ds, eax + 0x63), 0);     /* cmp dword [eax+0x63], 0x0 */
    II(0x100bcf33, 0x6)   jzd(0x100bd38f, 0x456);               /* jz dword 0x100bd38f */
    II(0x100bcf39, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100bcf3d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bcf40, 0x5)   calld(0x1008bbed, -0x31358);          /* call 0x1008bbed */
    II(0x100bcf45, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100bcf48, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100bcf4c, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100bcf50, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bcf53, 0x5)   calld(my_ctor_0x101b56fc, -0x342dc);  /* call 0x10088c7c */
    II(0x100bcf58, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100bcf5b, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100bcf5f, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bcf64, 0x5)   calld(0x10076338, -0x46c31);          /* call 0x10076338 */
    II(0x100bcf69, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bcf6b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bcf6e, 0x5)   calld(0x100764b8, -0x46abb);          /* call 0x100764b8 */
    II(0x100bcf73, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100bcf76, 0x5)   calld(my_ctor_0x101b4184, -0x4648b);  /* call 0x10076af0 */
    II(0x100bcf7b, 0x6)   mov(memw_a32(ss, ebp - 0x10), 0);     /* mov word [ebp-0x10], 0x0 */
    II(0x100bcf81, 0x2)   jmpd(0x100bcf8a, 0x7);                /* jmp 0x100bcf8a */
l_0x100bcf83:
    II(0x100bcf83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bcf86, 0x4)   inc(memw_a32(ss, ebp - 0x10));        /* inc word [ebp-0x10] */
l_0x100bcf8a:
    II(0x100bcf8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bcf8d, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100bcf94, 0x2)   jged(0x100bcfcf, 0x39);               /* jge 0x100bcfcf */
    II(0x100bcf96, 0x6)   mov(memw_a32(ss, ebp - 0xe), 0);      /* mov word [ebp-0xe], 0x0 */
    II(0x100bcf9c, 0x2)   jmpd(0x100bcfa5, 0x7);                /* jmp 0x100bcfa5 */
l_0x100bcf9e:
    II(0x100bcf9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100bcfa1, 0x4)   inc(memw_a32(ss, ebp - 0xe));         /* inc word [ebp-0xe] */
l_0x100bcfa5:
    II(0x100bcfa5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100bcfa8, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100bcfaf, 0x2)   jged(0x100bcfcd, 0x1c);               /* jge 0x100bcfcd */
    II(0x100bcfb1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100bcfb5, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100bcfb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bcfbb, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bcfbe, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bcfc0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xe));  /* movsx edx, word [ebp-0xe] */
    II(0x100bcfc4, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bcfc6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bcfc8, 0x3)   and_(memb_a32(ds, eax), -0x5 /* 0xfb */); /* and byte [eax], 0xfb */
    II(0x100bcfcb, 0x2)   jmpd(0x100bcf9e, -0x2f);              /* jmp 0x100bcf9e */
l_0x100bcfcd:
    II(0x100bcfcd, 0x2)   jmpd(0x100bcf83, -0x4c);              /* jmp 0x100bcf83 */
l_0x100bcfcf:
    II(0x100bcfcf, 0x2)   jmpd(0x100bcfd9, 0x8);                /* jmp 0x100bcfd9 */
l_0x100bcfd1:
    II(0x100bcfd1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bcfd4, 0x5)   calld(0x10076bf8, -0x463e1);          /* call 0x10076bf8 */
l_0x100bcfd9:
    II(0x100bcfd9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bcfdb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bcfde, 0x5)   calld(0x1013ad71, 0x7dd8e);           /* call 0x1013ad71 */
    II(0x100bcfe3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bcfe5, 0x2)   jzd(0x100bd014, 0x2d);                /* jz 0x100bd014 */
    II(0x100bcfe7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bcfea, 0x5)   calld(0x100763a0, -0x46c4f);          /* call 0x100763a0 */
    II(0x100bcfef, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bcff1, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bcff4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bcff7, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bcffa, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bcffc, 0x2)   jnzd(0x100bd012, 0x14);               /* jnz 0x100bd012 */
    II(0x100bcffe, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd001, 0x5)   calld(0x100763d4, -0x46c32);          /* call 0x100763d4 */
    II(0x100bd006, 0x3)   lea(ebx, ebp - 0x2c);                 /* lea ebx, [ebp-0x2c] */
    II(0x100bd009, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd00b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd00d, 0x5)   calld(0x1008ab1c, -0x324f6);          /* call 0x1008ab1c */
l_0x100bd012:
    II(0x100bd012, 0x2)   jmpd(0x100bcfd1, -0x43);              /* jmp 0x100bcfd1 */
l_0x100bd014:
    II(0x100bd014, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100bd019, 0x5)   calld(0x10076338, -0x46ce6);          /* call 0x10076338 */
    II(0x100bd01e, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100bd021, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd023, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd025, 0x5)   calld(0x1007643c, -0x46bee);          /* call 0x1007643c */
    II(0x100bd02a, 0x2)   jmpd(0x100bd034, 0x8);                /* jmp 0x100bd034 */
l_0x100bd02c:
    II(0x100bd02c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd02f, 0x5)   calld(0x10076bf8, -0x4643c);          /* call 0x10076bf8 */
l_0x100bd034:
    II(0x100bd034, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd036, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd039, 0x5)   calld(0x1013ad71, 0x7dd33);           /* call 0x1013ad71 */
    II(0x100bd03e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd040, 0x2)   jzd(0x100bd08a, 0x48);                /* jz 0x100bd08a */
    II(0x100bd042, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd045, 0x5)   calld(0x100763a0, -0x46caa);          /* call 0x100763a0 */
    II(0x100bd04a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd04c, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bd04f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd052, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bd055, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bd057, 0x2)   jnzd(0x100bd072, 0x19);               /* jnz 0x100bd072 */
    II(0x100bd059, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd05c, 0x5)   calld(0x100763d4, -0x46c8d);          /* call 0x100763d4 */
    II(0x100bd061, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd063, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd066, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bd069, 0x5)   calld(0x100bcbe9, -0x485);            /* call 0x100bcbe9 */
    II(0x100bd06e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd070, 0x2)   jnzd(0x100bd074, 0x2);                /* jnz 0x100bd074 */
l_0x100bd072:
    II(0x100bd072, 0x2)   jmpd(0x100bd088, 0x14);               /* jmp 0x100bd088 */
l_0x100bd074:
    II(0x100bd074, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd077, 0x5)   calld(0x100763d4, -0x46ca8);          /* call 0x100763d4 */
    II(0x100bd07c, 0x3)   lea(ebx, ebp - 0x2c);                 /* lea ebx, [ebp-0x2c] */
    II(0x100bd07f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd081, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd083, 0x5)   calld(0x1008ab1c, -0x3256c);          /* call 0x1008ab1c */
l_0x100bd088:
    II(0x100bd088, 0x2)   jmpd(0x100bd02c, -0x5e);              /* jmp 0x100bd02c */
l_0x100bd08a:
    II(0x100bd08a, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100bd08f, 0x5)   calld(0x10076338, -0x46d5c);          /* call 0x10076338 */
    II(0x100bd094, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100bd097, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd099, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd09b, 0x5)   calld(0x1007643c, -0x46c64);          /* call 0x1007643c */
    II(0x100bd0a0, 0x2)   jmpd(0x100bd0aa, 0x8);                /* jmp 0x100bd0aa */
l_0x100bd0a2:
    II(0x100bd0a2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd0a5, 0x5)   calld(0x10076bf8, -0x464b2);          /* call 0x10076bf8 */
l_0x100bd0aa:
    II(0x100bd0aa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd0ac, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd0af, 0x5)   calld(0x1013ad71, 0x7dcbd);           /* call 0x1013ad71 */
    II(0x100bd0b4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd0b6, 0x2)   jzd(0x100bd100, 0x48);                /* jz 0x100bd100 */
    II(0x100bd0b8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd0bb, 0x5)   calld(0x100763a0, -0x46d20);          /* call 0x100763a0 */
    II(0x100bd0c0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd0c2, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bd0c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd0c8, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bd0cb, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bd0cd, 0x2)   jnzd(0x100bd0e8, 0x19);               /* jnz 0x100bd0e8 */
    II(0x100bd0cf, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd0d2, 0x5)   calld(0x100763d4, -0x46d03);          /* call 0x100763d4 */
    II(0x100bd0d7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd0d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd0dc, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bd0df, 0x5)   calld(0x100bcbe9, -0x4fb);            /* call 0x100bcbe9 */
    II(0x100bd0e4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd0e6, 0x2)   jnzd(0x100bd0ea, 0x2);                /* jnz 0x100bd0ea */
l_0x100bd0e8:
    II(0x100bd0e8, 0x2)   jmpd(0x100bd0fe, 0x14);               /* jmp 0x100bd0fe */
l_0x100bd0ea:
    II(0x100bd0ea, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd0ed, 0x5)   calld(0x100763d4, -0x46d1e);          /* call 0x100763d4 */
    II(0x100bd0f2, 0x3)   lea(ebx, ebp - 0x2c);                 /* lea ebx, [ebp-0x2c] */
    II(0x100bd0f5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd0f7, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd0f9, 0x5)   calld(0x1008ab1c, -0x325e2);          /* call 0x1008ab1c */
l_0x100bd0fe:
    II(0x100bd0fe, 0x2)   jmpd(0x100bd0a2, -0x5e);              /* jmp 0x100bd0a2 */
l_0x100bd100:
    II(0x100bd100, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd103, 0x5)   calld(0x10076338, -0x46dd0);          /* call 0x10076338 */
    II(0x100bd108, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100bd10b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd10d, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd10f, 0x5)   calld(0x1007643c, -0x46cd8);          /* call 0x1007643c */
    II(0x100bd114, 0x2)   jmpd(0x100bd11e, 0x8);                /* jmp 0x100bd11e */
l_0x100bd116:
    II(0x100bd116, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd119, 0x5)   calld(0x10076bf8, -0x46526);          /* call 0x10076bf8 */
l_0x100bd11e:
    II(0x100bd11e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd120, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd123, 0x5)   calld(0x1013ad71, 0x7dc49);           /* call 0x1013ad71 */
    II(0x100bd128, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd12a, 0x6)   jzd(0x100bd1af, 0x7f);                /* jz dword 0x100bd1af */
    II(0x100bd130, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd133, 0x5)   calld(0x100763a0, -0x46d98);          /* call 0x100763a0 */
    II(0x100bd138, 0x5)   calld(0x1007623c, -0x46f01);          /* call 0x1007623c */
    II(0x100bd13d, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x100bd141, 0x5)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100bd146, 0x3)   movsx(esi, ax);                       /* movsx esi, ax */
    II(0x100bd149, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd14c, 0x5)   calld(0x100763a0, -0x46db1);          /* call 0x100763a0 */
    II(0x100bd151, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100bd154, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bd157, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd15a, 0x5)   calld(0x100763a0, -0x46dbf);          /* call 0x100763a0 */
    II(0x100bd15f, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100bd162, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd165, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100bd168, 0x5)   calld(0x10076aac, -0x466c1);          /* call 0x10076aac */
    II(0x100bd16d, 0x3)   lea(ecx, ebp - 0x44);                 /* lea ecx, [ebp-0x44] */
    II(0x100bd170, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100bd172, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd174, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bd176, 0x5)   calld(0x100a95c1, -0x13bba);          /* call 0x100a95c1 */
l_0x100bd17b:
    II(0x100bd17b, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100bd17e, 0x5)   calld(0x1008982c, -0x33957);          /* call 0x1008982c */
    II(0x100bd183, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100bd186, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100bd189, 0x5)   calld(0x10089860, -0x3392e);          /* call 0x10089860 */
    II(0x100bd18e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100bd191, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bd194, 0x5)   calld(0x1008a728, -0x32a71);          /* call 0x1008a728 */
    II(0x100bd199, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bd19b, 0x3)   mov(memb_a32(ds, eax), 0x1);          /* mov byte [eax], 0x1 */
    II(0x100bd19e, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100bd1a1, 0x5)   calld(0x100a96db, -0x13acb);          /* call 0x100a96db */
    II(0x100bd1a6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd1a8, 0x2)   jnzd(0x100bd17b, -0x2f);              /* jnz 0x100bd17b */
    II(0x100bd1aa, 0x5)   jmpd(0x100bd116, -0x99);              /* jmp 0x100bd116 */
l_0x100bd1af:
    II(0x100bd1af, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100bd1b6, 0x2)   jmpd(0x100bd1be, 0x6);                /* jmp 0x100bd1be */
l_0x100bd1b8:
    II(0x100bd1b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bd1bb, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100bd1be:
    II(0x100bd1be, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100bd1c2, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100bd1c5, 0x6)   jged(0x100bd274, 0xa9);               /* jge dword 0x100bd274 */
    II(0x100bd1cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bd1ce, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100bd1d1, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100bd1d4, 0x2)   jzd(0x100bd1ef, 0x19);                /* jz 0x100bd1ef */
    II(0x100bd1d6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100bd1da, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bd1e0, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100bd1e6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bd1eb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bd1ed, 0x2)   jnzd(0x100bd1f4, 0x5);                /* jnz 0x100bd1f4 */
l_0x100bd1ef:
    II(0x100bd1ef, 0x5)   jmpd(0x100bd26f, 0x7b);               /* jmp 0x100bd26f */
l_0x100bd1f4:
    II(0x100bd1f4, 0x6)   mov(memw_a32(ss, ebp - 0x10), 0);     /* mov word [ebp-0x10], 0x0 */
    II(0x100bd1fa, 0x2)   jmpd(0x100bd203, 0x7);                /* jmp 0x100bd203 */
l_0x100bd1fc:
    II(0x100bd1fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bd1ff, 0x4)   inc(memw_a32(ss, ebp - 0x10));        /* inc word [ebp-0x10] */
l_0x100bd203:
    II(0x100bd203, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bd206, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100bd20d, 0x2)   jged(0x100bd26f, 0x60);               /* jge 0x100bd26f */
    II(0x100bd20f, 0x6)   mov(memw_a32(ss, ebp - 0xe), 0);      /* mov word [ebp-0xe], 0x0 */
    II(0x100bd215, 0x2)   jmpd(0x100bd21e, 0x7);                /* jmp 0x100bd21e */
l_0x100bd217:
    II(0x100bd217, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100bd21a, 0x4)   inc(memw_a32(ss, ebp - 0xe));         /* inc word [ebp-0xe] */
l_0x100bd21e:
    II(0x100bd21e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100bd221, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100bd228, 0x2)   jged(0x100bd26d, 0x43);               /* jge 0x100bd26d */
    II(0x100bd22a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xe));  /* movsx edx, word [ebp-0xe] */
    II(0x100bd22e, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100bd233, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bd236, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100bd239, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100bd23d, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100bd23f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100bd243, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bd249, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x100bd24f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bd251, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100bd254, 0x2)   jzd(0x100bd26b, 0x15);                /* jz 0x100bd26b */
    II(0x100bd256, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xe));  /* movsx ebx, word [ebp-0xe] */
    II(0x100bd25a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100bd25e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bd261, 0x5)   calld(0x1008a728, -0x32b3e);          /* call 0x1008a728 */
    II(0x100bd266, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bd268, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100bd26b:
    II(0x100bd26b, 0x2)   jmpd(0x100bd217, -0x56);              /* jmp 0x100bd217 */
l_0x100bd26d:
    II(0x100bd26d, 0x2)   jmpd(0x100bd1fc, -0x73);              /* jmp 0x100bd1fc */
l_0x100bd26f:
    II(0x100bd26f, 0x5)   jmpd(0x100bd1b8, -0xbc);              /* jmp 0x100bd1b8 */
l_0x100bd274:
    II(0x100bd274, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd277, 0x5)   calld(0x10076338, -0x46f44);          /* call 0x10076338 */
    II(0x100bd27c, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100bd27f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd281, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd283, 0x5)   calld(0x1007643c, -0x46e4c);          /* call 0x1007643c */
    II(0x100bd288, 0x2)   jmpd(0x100bd292, 0x8);                /* jmp 0x100bd292 */
l_0x100bd28a:
    II(0x100bd28a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd28d, 0x5)   calld(0x10076bf8, -0x4669a);          /* call 0x10076bf8 */
l_0x100bd292:
    II(0x100bd292, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd294, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd297, 0x5)   calld(0x1013ad71, 0x7dad5);           /* call 0x1013ad71 */
    II(0x100bd29c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd29e, 0x6)   jzd(0x100bd371, 0xcd);                /* jz dword 0x100bd371 */
    II(0x100bd2a4, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd2a7, 0x5)   calld(0x100763a0, -0x46f0c);          /* call 0x100763a0 */
    II(0x100bd2ac, 0x5)   calld(0x1007623c, -0x47075);          /* call 0x1007623c */
    II(0x100bd2b1, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x100bd2b5, 0x5)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x100bd2ba, 0x3)   movsx(esi, ax);                       /* movsx esi, ax */
    II(0x100bd2bd, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd2c0, 0x5)   calld(0x100763a0, -0x46f25);          /* call 0x100763a0 */
    II(0x100bd2c5, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100bd2c8, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bd2cb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd2ce, 0x5)   calld(0x100763a0, -0x46f33);          /* call 0x100763a0 */
    II(0x100bd2d3, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100bd2d6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd2d9, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100bd2dc, 0x5)   calld(0x10076aac, -0x46835);          /* call 0x10076aac */
    II(0x100bd2e1, 0x3)   lea(ecx, ebp - 0x68);                 /* lea ecx, [ebp-0x68] */
    II(0x100bd2e4, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100bd2e6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd2e8, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bd2ea, 0x5)   calld(0x100a9833, -0x13abc);          /* call 0x100a9833 */
l_0x100bd2ef:
    II(0x100bd2ef, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100bd2f2, 0x5)   calld(0x100cab38, 0xd841);            /* call 0x100cab38 */
    II(0x100bd2f7, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100bd2fa, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100bd2fd, 0x5)   calld(0x100cab6c, 0xd86a);            /* call 0x100cab6c */
    II(0x100bd302, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100bd305, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bd308, 0x5)   calld(0x1008a728, -0x32be5);          /* call 0x1008a728 */
    II(0x100bd30d, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bd30f, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100bd312, 0x2)   jnzd(0x100bd360, 0x4c);               /* jnz 0x100bd360 */
    II(0x100bd314, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bd317, 0x5)   calld(0x1008a6f8, -0x32c24);          /* call 0x1008a6f8 */
    II(0x100bd31c, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100bd31e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd321, 0x5)   calld(0x100763a0, -0x46f86);          /* call 0x100763a0 */
    II(0x100bd326, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100bd329, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bd32c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd32f, 0x5)   calld(0x100763a0, -0x46f94);          /* call 0x100763a0 */
    II(0x100bd334, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100bd337, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd33a, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100bd33d, 0x5)   calld(0x10076aac, -0x46896);          /* call 0x10076aac */
    II(0x100bd342, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100bd344, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100bd347, 0x5)   calld(0x100caba0, 0xd854);            /* call 0x100caba0 */
    II(0x100bd34c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd34e, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x100bd351, 0x5)   calld(0x10075e64, -0x474f2);          /* call 0x10075e64 */
    II(0x100bd356, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd358, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd35b, 0x5)   calld(0x100bccb3, -0x6ad);            /* call 0x100bccb3 */
l_0x100bd360:
    II(0x100bd360, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100bd363, 0x5)   calld(0x100a9ae0, -0x13888);          /* call 0x100a9ae0 */
    II(0x100bd368, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd36a, 0x2)   jnzd(0x100bd2ef, -0x7d);              /* jnz 0x100bd2ef */
    II(0x100bd36c, 0x5)   jmpd(0x100bd28a, -0xe7);              /* jmp 0x100bd28a */
l_0x100bd371:
    II(0x100bd371, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd373, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100bd376, 0x5)   calld(0x10075f6c, -0x4740f);          /* call 0x10075f6c */
    II(0x100bd37b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd37d, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd380, 0x5)   calld(my_dtor_0x101b56fc, -0x34749);  /* call 0x10088c3c */
    II(0x100bd385, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd387, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bd38a, 0x5)   calld(0x1008bc9f, -0x316f0);          /* call 0x1008bc9f */
l_0x100bd38f:
    II(0x100bd38f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100bd391, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100bd392, 0x1)   popd(edi);                            /* pop edi */
    II(0x100bd393, 0x1)   popd(esi);                            /* pop esi */
    II(0x100bd394, 0x1)   popd(edx);                            /* pop edx */
    II(0x100bd395, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100bd396, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100bd397, 0x1)   retd();                               /* ret */
FUNC_END

