FUNC_BEGIN(0x100f3800, 0x94d08037e3fdb008, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x48, 0x25, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0, 0x1, 0, 0, 0xc1, 0xf8, 0x10, 0xa3, 0xc0, 0x38, 0x1c, 0x10, 0xb9, 0x1, 0, 0, 0, 0x31, 0xdb, 0x8b, 0x15, 0xbe, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x31, 0xc0, 0xe8, 0xc9, 0xdd, 0, 0, 0xe8, 0x70, 0xf2, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0x8b, 0x45, 0xf8, 0x8b, 0x98, 0x4, 0x1, 0, 0, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x90, 0x2, 0x1, 0, 0, 0xc1, 0xfa, 0x10, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x9e, 0xdd, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x5, 0xfe, 0, 0, 0, 0xe8, 0xe0, 0x74, 0x4, 0, 0x84, 0xc0, 0x74, 0x19, 0x8b, 0x45, 0xf8, 0x5, 0xfe, 0, 0, 0, 0xe8, 0xd2, 0x2c, 0xf8, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x14, 0x8b, 0x45, 0xf8, 0x5, 0xfe, 0, 0, 0, 0xe8, 0x43, 0x2d, 0xf8, 0xff, 0xe8, 0x75, 0xbd, 0, 0, 0xeb, 0xa, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xa6, 0xda, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0x11, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0x7, 0x6f, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0xa, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0xf0, 0xe, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0xb, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0x77, 0xf, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0xc, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0xb1, 0xf, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0xd, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0x38, 0x10, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0x12, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0xd8, 0xf, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0x8, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0xde, 0xe, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0x9, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0x3a, 0x12, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0x10, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0xdc, 0x15, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0xe, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0x26, 0x10, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0xf, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0x60, 0x10, 0, 0, 0x31, 0xc0, 0xa0, 0x8c, 0x38, 0x1c, 0x10, 0xe8, 0x66, 0xfd, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f3800, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100f3805, 0x5)   calld(sys_check_available_stack_size, 0x72548); /* call 0x10165d52 */
    II(0x100f380a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f380b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f380c, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f380d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f380e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f380f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f3810, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f3812, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100f3818, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f381b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f381f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f3825, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x100f382a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100f382c, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100f382f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f3832, 0x6)   mov(eax, memd_a32(ds, eax + 0x100));  /* mov eax, [eax+0x100] */
    II(0x100f3838, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f383b, 0x5)   mov(memd_a32(ds, 0x101c38c0), eax);   /* mov [0x101c38c0], eax */
    II(0x100f3840, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100f3845, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f3847, 0x6)   mov(edx, memd_a32(ds, 0x101c38be));   /* mov edx, [0x101c38be] */
    II(0x100f384d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f3850, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f3852, 0x5)   calld(0x10101620, 0xddc9);            /* call 0x10101620 */
    II(0x100f3857, 0x5)   calld(0x10102acc, 0xf270);            /* call 0x10102acc */
    II(0x100f385c, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100f385e, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x100f3860, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f3863, 0x6)   mov(ebx, memd_a32(ds, eax + 0x104));  /* mov ebx, [eax+0x104] */
    II(0x100f3869, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100f386c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f386f, 0x6)   mov(edx, memd_a32(ds, eax + 0x102));  /* mov edx, [eax+0x102] */
    II(0x100f3875, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100f3878, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f387d, 0x5)   calld(0x10101620, 0xdd9e);            /* call 0x10101620 */
    II(0x100f3882, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f3884, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f3887, 0x5)   add(eax, 0xfe);                       /* add eax, 0xfe */
    II(0x100f388c, 0x5)   calld(0x1013ad71, 0x474e0);           /* call 0x1013ad71 */
    II(0x100f3891, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f3893, 0x2)   jzd(0x100f38ae, 0x19);                /* jz 0x100f38ae */
    II(0x100f3895, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f3898, 0x5)   add(eax, 0xfe);                       /* add eax, 0xfe */
    II(0x100f389d, 0x5)   calld(0x10076574, -0x7d32e);          /* call 0x10076574 */
    II(0x100f38a2, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100f38a5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f38aa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f38ac, 0x2)   jnzd(0x100f38b0, 0x2);                /* jnz 0x100f38b0 */
l_0x100f38ae:
    II(0x100f38ae, 0x2)   jmpd(0x100f38c4, 0x14);               /* jmp 0x100f38c4 */
l_0x100f38b0:
    II(0x100f38b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f38b3, 0x5)   add(eax, 0xfe);                       /* add eax, 0xfe */
    II(0x100f38b8, 0x5)   calld(0x10076600, -0x7d2bd);          /* call 0x10076600 */
    II(0x100f38bd, 0x5)   calld(0x100ff637, 0xbd75);            /* call 0x100ff637 */
    II(0x100f38c2, 0x2)   jmpd(0x100f38ce, 0xa);                /* jmp 0x100f38ce */
l_0x100f38c4:
    II(0x100f38c4, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100f38c9, 0x5)   calld(0x10101374, 0xdaa6);            /* call 0x10101374 */
l_0x100f38ce:
    II(0x100f38ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f38d1, 0x6)   mov(al, memb_a32(ds, eax + 0x111));   /* mov al, [eax+0x111] */
    II(0x100f38d7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f38dc, 0x5)   calld(0x100fa7e8, 0x6f07);            /* call 0x100fa7e8 */
    II(0x100f38e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f38e4, 0x6)   mov(al, memb_a32(ds, eax + 0x10a));   /* mov al, [eax+0x10a] */
    II(0x100f38ea, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f38ef, 0x5)   calld(0x100f47e4, 0xef0);             /* call 0x100f47e4 */
    II(0x100f38f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f38f7, 0x6)   mov(al, memb_a32(ds, eax + 0x10b));   /* mov al, [eax+0x10b] */
    II(0x100f38fd, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f3902, 0x5)   calld(0x100f487e, 0xf77);             /* call 0x100f487e */
    II(0x100f3907, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f390a, 0x6)   mov(al, memb_a32(ds, eax + 0x10c));   /* mov al, [eax+0x10c] */
    II(0x100f3910, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f3915, 0x5)   calld(0x100f48cb, 0xfb1);             /* call 0x100f48cb */
    II(0x100f391a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f391d, 0x6)   mov(al, memb_a32(ds, eax + 0x10d));   /* mov al, [eax+0x10d] */
    II(0x100f3923, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f3928, 0x5)   calld(0x100f4965, 0x1038);            /* call 0x100f4965 */
    II(0x100f392d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f3930, 0x6)   mov(al, memb_a32(ds, eax + 0x112));   /* mov al, [eax+0x112] */
    II(0x100f3936, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f393b, 0x5)   calld(0x100f4918, 0xfd8);             /* call 0x100f4918 */
    II(0x100f3940, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f3943, 0x6)   mov(al, memb_a32(ds, eax + 0x108));   /* mov al, [eax+0x108] */
    II(0x100f3949, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f394e, 0x5)   calld(0x100f4831, 0xede);             /* call 0x100f4831 */
    II(0x100f3953, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f3956, 0x6)   mov(al, memb_a32(ds, eax + 0x109));   /* mov al, [eax+0x109] */
    II(0x100f395c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f3961, 0x5)   calld(0x100f4ba0, 0x123a);            /* call 0x100f4ba0 */
    II(0x100f3966, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f3969, 0x6)   mov(al, memb_a32(ds, eax + 0x110));   /* mov al, [eax+0x110] */
    II(0x100f396f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f3974, 0x5)   calld(0x100f4f55, 0x15dc);            /* call 0x100f4f55 */
    II(0x100f3979, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f397c, 0x6)   mov(al, memb_a32(ds, eax + 0x10e));   /* mov al, [eax+0x10e] */
    II(0x100f3982, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f3987, 0x5)   calld(0x100f49b2, 0x1026);            /* call 0x100f49b2 */
    II(0x100f398c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f398f, 0x6)   mov(al, memb_a32(ds, eax + 0x10f));   /* mov al, [eax+0x10f] */
    II(0x100f3995, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f399a, 0x5)   calld(0x100f49ff, 0x1060);            /* call 0x100f49ff */
    II(0x100f399f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f39a1, 0x5)   mov(al, memb_a32(ds, 0x101c388c));    /* mov al, [0x101c388c] */
    II(0x100f39a6, 0x5)   calld(0x100f3711, -0x29a);            /* call 0x100f3711 */
    II(0x100f39ab, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f39ad, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f39ae, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f39af, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f39b0, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f39b1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f39b2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f39b3, 0x1)   retd();                               /* ret */
FUNC_END

