FUNC_BEGIN(0x1010e501, 0xb0fc5c8c1cfbc0a3, 0x20, ({0x68, 0x9c, 0x1, 0, 0, 0xe8, 0x47, 0x78, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x80, 0x1, 0, 0, 0x88, 0x45, 0xfc, 0x80, 0x7d, 0xfc, 0, 0x74, 0x20, 0xba, 0x1, 0, 0, 0, 0xb8, 0x67, 0, 0, 0, 0xe8, 0xcb, 0xc5, 0xfb, 0xff, 0xba, 0x2, 0, 0, 0, 0xb8, 0x68, 0, 0, 0, 0xe8, 0xbc, 0xc5, 0xfb, 0xff, 0xeb, 0x1e, 0xba, 0x1, 0, 0, 0, 0xb8, 0x67, 0, 0, 0, 0xe8, 0xab, 0xc5, 0xfb, 0xff, 0xba, 0x1, 0, 0, 0, 0xb8, 0x68, 0, 0, 0, 0xe8, 0x9c, 0xc5, 0xfb, 0xff, 0x31, 0xd2, 0xb8, 0x69, 0, 0, 0, 0xe8, 0x90, 0xc5, 0xfb, 0xff, 0x31, 0xd2, 0xb8, 0x6a, 0, 0, 0, 0xe8, 0x84, 0xc5, 0xfb, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x89, 0x85, 0xbc, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0xb0, 0xfe, 0xff, 0xff, 0xe8, 0x57, 0xfc, 0xff, 0xff, 0xc7, 0x85, 0xb4, 0xfe, 0xff, 0xff, 0, 0, 0, 0, 0xe8, 0x67, 0xcc, 0x5, 0, 0x89, 0x85, 0xc0, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0xc0, 0xfe, 0xff, 0xff, 0, 0x7e, 0xc, 0x81, 0xbd, 0xc0, 0xfe, 0xff, 0xff, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0xc7, 0x85, 0xac, 0xfe, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0xac, 0xfe, 0xff, 0xff, 0xff, 0x85, 0xac, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x85, 0xac, 0xfe, 0xff, 0xff, 0x83, 0xf8, 0x13, 0xf, 0x8d, 0xe4, 0, 0, 0, 0xf, 0xbf, 0x85, 0xac, 0xfe, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x83, 0xbc, 0x28, 0xc4, 0xfe, 0xff, 0xff, 0, 0xf, 0x84, 0xc7, 0, 0, 0, 0xf, 0xbf, 0x85, 0xac, 0xfe, 0xff, 0xff, 0x5, 0, 0x70, 0, 0, 0x3b, 0x85, 0xc0, 0xfe, 0xff, 0xff, 0x75, 0x25, 0x80, 0x7d, 0xf8, 0, 0x75, 0x16, 0xf, 0xbf, 0x85, 0xac, 0xfe, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0xc4, 0xfe, 0xff, 0xff, 0xe8, 0x8c, 0x15, 0xfc, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0x93, 0, 0, 0, 0xf, 0xbf, 0x95, 0xac, 0xfe, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8b, 0x85, 0xc0, 0xfe, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x14, 0xff, 0xff, 0xff, 0x75, 0x17, 0xf, 0xbf, 0x85, 0xac, 0xfe, 0xff, 0xff, 0x6b, 0xc0, 0xc, 0x8b, 0x84, 0x28, 0x10, 0xff, 0xff, 0xff, 0x89, 0x85, 0xc0, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x95, 0xac, 0xfe, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8b, 0x85, 0xc0, 0xfe, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x10, 0xff, 0xff, 0xff, 0x75, 0x45, 0xf, 0xbf, 0x85, 0xac, 0xfe, 0xff, 0xff, 0x83, 0xf8, 0xc, 0x7d, 0x16, 0xf, 0xbf, 0x85, 0xac, 0xfe, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0xc4, 0xfe, 0xff, 0xff, 0xe8, 0x18, 0x15, 0xfc, 0xff, 0x81, 0x85, 0xc0, 0xfe, 0xff, 0xff, 0x18, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x95, 0xac, 0xfe, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8d, 0x85, 0xb0, 0xfe, 0xff, 0xff, 0xff, 0x94, 0x2a, 0x18, 0xff, 0xff, 0xff, 0xeb, 0x5, 0xe9, 0, 0xff, 0xff, 0xff, 0x83, 0xbd, 0xb8, 0xfe, 0xff, 0xff, 0, 0x74, 0x1a, 0x8d, 0x85, 0xb0, 0xfe, 0xff, 0xff, 0xe8, 0x8f, 0xfa, 0xff, 0xff, 0xc7, 0x85, 0xa8, 0xfe, 0xff, 0xff, 0, 0, 0, 0, 0xe9, 0xdf, 0, 0, 0, 0x83, 0xbd, 0xb4, 0xfe, 0xff, 0xff, 0, 0xf, 0x84, 0x9e, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0xb0, 0xfe, 0xff, 0xff, 0xe8, 0x68, 0xfa, 0xff, 0xff, 0x8a, 0x45, 0xfc, 0x88, 0x45, 0xf4, 0xc7, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0xff, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x8f, 0, 0, 0, 0x8a, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0x4, 0x67, 0xf, 0xbe, 0xc0, 0xe8, 0x95, 0x78, 0xf6, 0xff, 0x89, 0x85, 0xa0, 0xfe, 0xff, 0xff, 0x80, 0x7d, 0xf4, 0, 0x74, 0xc, 0xf, 0xbf, 0x85, 0xa0, 0xfe, 0xff, 0xff, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x3b, 0xb9, 0x1e, 0, 0, 0, 0x8d, 0x9d, 0x80, 0xfe, 0xff, 0xff, 0xba, 0x32, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x6, 0x7b, 0xff, 0xff, 0x8d, 0x9d, 0x80, 0xfe, 0xff, 0xff, 0x8a, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0x4, 0x63, 0xf, 0xbe, 0xd0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x6f, 0x7a, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0, 0xeb, 0x25, 0xf, 0xbf, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x98, 0x44, 0xb4, 0x1b, 0x10, 0x8a, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0x4, 0x63, 0xf, 0xbe, 0xd0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x44, 0x7a, 0xff, 0xff, 0xe9, 0x55, 0xff, 0xff, 0xff, 0xc7, 0x85, 0xa8, 0xfe, 0xff, 0xff, 0x1, 0, 0, 0, 0x8b, 0x85, 0xa8, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010e501, 0x5)   pushd(0x19c);                         /* push dword 0x19c */
    II(0x1010e506, 0x5)   calld(sys_check_available_stack_size, 0x57847); /* call 0x10165d52 */
    II(0x1010e50b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010e50c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010e50d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010e50e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010e50f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010e510, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010e511, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010e513, 0x6)   sub(esp, 0x180);                      /* sub esp, 0x180 */
    II(0x1010e519, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x1010e51c, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1010e520, 0x2)   jzd(0x1010e542, 0x20);                /* jz 0x1010e542 */
    II(0x1010e522, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1010e527, 0x5)   mov(eax, 0x67);                       /* mov eax, 0x67 */
    II(0x1010e52c, 0x5)   calld(0x100caafc, -0x43a35);          /* call 0x100caafc */
    II(0x1010e531, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1010e536, 0x5)   mov(eax, 0x68);                       /* mov eax, 0x68 */
    II(0x1010e53b, 0x5)   calld(0x100caafc, -0x43a44);          /* call 0x100caafc */
    II(0x1010e540, 0x2)   jmpd(0x1010e560, 0x1e);               /* jmp 0x1010e560 */
l_0x1010e542:
    II(0x1010e542, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1010e547, 0x5)   mov(eax, 0x67);                       /* mov eax, 0x67 */
    II(0x1010e54c, 0x5)   calld(0x100caafc, -0x43a55);          /* call 0x100caafc */
    II(0x1010e551, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1010e556, 0x5)   mov(eax, 0x68);                       /* mov eax, 0x68 */
    II(0x1010e55b, 0x5)   calld(0x100caafc, -0x43a64);          /* call 0x100caafc */
l_0x1010e560:
    II(0x1010e560, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010e562, 0x5)   mov(eax, 0x69);                       /* mov eax, 0x69 */
    II(0x1010e567, 0x5)   calld(0x100caafc, -0x43a70);          /* call 0x100caafc */
    II(0x1010e56c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010e56e, 0x5)   mov(eax, 0x6a);                       /* mov eax, 0x6a */
    II(0x1010e573, 0x5)   calld(0x100caafc, -0x43a7c);          /* call 0x100caafc */
    II(0x1010e578, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1010e57c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010e57e, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1010e581, 0x6)   mov(memd_a32(ss, ebp - 0x144), eax);  /* mov [ebp+0xfffffebc], eax */
    II(0x1010e587, 0x6)   lea(eax, ebp - 0x150);                /* lea eax, [ebp+0xfffffeb0] */
    II(0x1010e58d, 0x5)   calld(0x1010e1e9, -0x3a9);            /* call 0x1010e1e9 */
    II(0x1010e592, 0xa)   mov(memd_a32(ss, ebp - 0x14c), 0);    /* mov dword [ebp+0xfffffeb4], 0x0 */
l_0x1010e59c:
    II(0x1010e59c, 0x5)   calld(/* sys */ 0x1016b208, 0x5cc67); /* call 0x1016b208 */
    II(0x1010e5a1, 0x6)   mov(memd_a32(ss, ebp - 0x140), eax);  /* mov [ebp+0xfffffec0], eax */
    II(0x1010e5a7, 0x7)   cmp(memd_a32(ss, ebp - 0x140), 0);    /* cmp dword [ebp+0xfffffec0], 0x0 */
    II(0x1010e5ae, 0x2)   jled(0x1010e5bc, 0xc);                /* jle 0x1010e5bc */
    II(0x1010e5b0, 0xa)   cmp(memd_a32(ss, ebp - 0x140), 0x7000); /* cmp dword [ebp+0xfffffec0], 0x7000 */
    II(0x1010e5ba, 0x2)   jld(0x1010e5be, 0x2);                 /* jl 0x1010e5be */
l_0x1010e5bc:
    II(0x1010e5bc, 0x2)   jmpd(0x1010e5c2, 0x4);                /* jmp 0x1010e5c2 */
l_0x1010e5be:
    II(0x1010e5be, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x1010e5c2:
    II(0x1010e5c2, 0xa)   mov(memd_a32(ss, ebp - 0x154), 0);    /* mov dword [ebp+0xfffffeac], 0x0 */
    II(0x1010e5cc, 0x2)   jmpd(0x1010e5da, 0xc);                /* jmp 0x1010e5da */
l_0x1010e5ce:
    II(0x1010e5ce, 0x6)   mov(eax, memd_a32(ss, ebp - 0x154));  /* mov eax, [ebp+0xfffffeac] */
    II(0x1010e5d4, 0x6)   inc(memd_a32(ss, ebp - 0x154));       /* inc dword [ebp+0xfffffeac] */
l_0x1010e5da:
    II(0x1010e5da, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x154)); /* movsx eax, word [ebp+0xfffffeac] */
    II(0x1010e5e1, 0x3)   cmp(eax, 0x13);                       /* cmp eax, 0x13 */
    II(0x1010e5e4, 0x6)   jged(0x1010e6ce, 0xe4);               /* jge dword 0x1010e6ce */
    II(0x1010e5ea, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x154)); /* movsx eax, word [ebp+0xfffffeac] */
    II(0x1010e5f1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010e5f4, 0x8)   cmp(memd_a32(ds, eax + ebp - 0x13c), 0); /* cmp dword [eax+ebp+0xfffffec4], 0x0 */
    II(0x1010e5fc, 0x6)   jzd(0x1010e6c9, 0xc7);                /* jz dword 0x1010e6c9 */
    II(0x1010e602, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x154)); /* movsx eax, word [ebp+0xfffffeac] */
    II(0x1010e609, 0x5)   add(eax, 0x7000);                     /* add eax, 0x7000 */
    II(0x1010e60e, 0x6)   cmp(eax, memd_a32(ss, ebp - 0x140));  /* cmp eax, [ebp+0xfffffec0] */
    II(0x1010e614, 0x2)   jnzd(0x1010e63b, 0x25);               /* jnz 0x1010e63b */
    II(0x1010e616, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1010e61a, 0x2)   jnzd(0x1010e632, 0x16);               /* jnz 0x1010e632 */
    II(0x1010e61c, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x154)); /* movsx eax, word [ebp+0xfffffeac] */
    II(0x1010e623, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010e626, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x13c)); /* mov eax, [eax+ebp+0xfffffec4] */
    II(0x1010e62d, 0x5)   calld(0x100cfbbe, -0x3ea74);          /* call 0x100cfbbe */
l_0x1010e632:
    II(0x1010e632, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1010e636, 0x5)   jmpd(0x1010e6ce, 0x93);               /* jmp 0x1010e6ce */
l_0x1010e63b:
    II(0x1010e63b, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x154)); /* movsx edx, word [ebp+0xfffffeac] */
    II(0x1010e642, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1010e645, 0x6)   mov(eax, memd_a32(ss, ebp - 0x140));  /* mov eax, [ebp+0xfffffec0] */
    II(0x1010e64b, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0xec)); /* cmp eax, [edx+ebp+0xffffff14] */
    II(0x1010e652, 0x2)   jnzd(0x1010e66b, 0x17);               /* jnz 0x1010e66b */
    II(0x1010e654, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x154)); /* movsx eax, word [ebp+0xfffffeac] */
    II(0x1010e65b, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010e65e, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0xf0)); /* mov eax, [eax+ebp+0xffffff10] */
    II(0x1010e665, 0x6)   mov(memd_a32(ss, ebp - 0x140), eax);  /* mov [ebp+0xfffffec0], eax */
l_0x1010e66b:
    II(0x1010e66b, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x154)); /* movsx edx, word [ebp+0xfffffeac] */
    II(0x1010e672, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1010e675, 0x6)   mov(eax, memd_a32(ss, ebp - 0x140));  /* mov eax, [ebp+0xfffffec0] */
    II(0x1010e67b, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0xf0)); /* cmp eax, [edx+ebp+0xffffff10] */
    II(0x1010e682, 0x2)   jnzd(0x1010e6c9, 0x45);               /* jnz 0x1010e6c9 */
    II(0x1010e684, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x154)); /* movsx eax, word [ebp+0xfffffeac] */
    II(0x1010e68b, 0x3)   cmp(eax, 0xc);                        /* cmp eax, 0xc */
    II(0x1010e68e, 0x2)   jged(0x1010e6a6, 0x16);               /* jge 0x1010e6a6 */
    II(0x1010e690, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x154)); /* movsx eax, word [ebp+0xfffffeac] */
    II(0x1010e697, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010e69a, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x13c)); /* mov eax, [eax+ebp+0xfffffec4] */
    II(0x1010e6a1, 0x5)   calld(0x100cfbbe, -0x3eae8);          /* call 0x100cfbbe */
l_0x1010e6a6:
    II(0x1010e6a6, 0xa)   add(memd_a32(ss, ebp - 0x140), 0xfffffc18); /* add dword [ebp+0xfffffec0], 0xfffffc18 */
    II(0x1010e6b0, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x154)); /* movsx edx, word [ebp+0xfffffeac] */
    II(0x1010e6b7, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1010e6ba, 0x6)   lea(eax, ebp - 0x150);                /* lea eax, [ebp+0xfffffeb0] */
    II(0x1010e6c0, 0x7)   calld_abs(memd_a32(ds, edx + ebp - 0xe8)); /* call dword near [edx+ebp+0xffffff18] */
    II(0x1010e6c7, 0x2)   jmpd(0x1010e6ce, 0x5);                /* jmp 0x1010e6ce */
l_0x1010e6c9:
    II(0x1010e6c9, 0x5)   jmpd(0x1010e5ce, -0x100);             /* jmp 0x1010e5ce */
l_0x1010e6ce:
    II(0x1010e6ce, 0x7)   cmp(memd_a32(ss, ebp - 0x148), 0);    /* cmp dword [ebp+0xfffffeb8], 0x0 */
    II(0x1010e6d5, 0x2)   jzd(0x1010e6f1, 0x1a);                /* jz 0x1010e6f1 */
    II(0x1010e6d7, 0x6)   lea(eax, ebp - 0x150);                /* lea eax, [ebp+0xfffffeb0] */
    II(0x1010e6dd, 0x5)   calld(0x1010e171, -0x571);            /* call 0x1010e171 */
    II(0x1010e6e2, 0xa)   mov(memd_a32(ss, ebp - 0x158), 0);    /* mov dword [ebp+0xfffffea8], 0x0 */
    II(0x1010e6ec, 0x5)   jmpd(0x1010e7d0, 0xdf);               /* jmp 0x1010e7d0 */
l_0x1010e6f1:
    II(0x1010e6f1, 0x7)   cmp(memd_a32(ss, ebp - 0x14c), 0);    /* cmp dword [ebp+0xfffffeb4], 0x0 */
    II(0x1010e6f8, 0x6)   jzd(0x1010e59c, -0x162);              /* jz dword 0x1010e59c */
    II(0x1010e6fe, 0x6)   lea(eax, ebp - 0x150);                /* lea eax, [ebp+0xfffffeb0] */
    II(0x1010e704, 0x5)   calld(0x1010e171, -0x598);            /* call 0x1010e171 */
    II(0x1010e709, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1010e70c, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x1010e70f, 0xa)   mov(memd_a32(ss, ebp - 0x15c), 0);    /* mov dword [ebp+0xfffffea4], 0x0 */
    II(0x1010e719, 0x2)   jmpd(0x1010e727, 0xc);                /* jmp 0x1010e727 */
l_0x1010e71b:
    II(0x1010e71b, 0x6)   mov(eax, memd_a32(ss, ebp - 0x15c));  /* mov eax, [ebp+0xfffffea4] */
    II(0x1010e721, 0x6)   inc(memd_a32(ss, ebp - 0x15c));       /* inc dword [ebp+0xfffffea4] */
l_0x1010e727:
    II(0x1010e727, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x15c)); /* movsx eax, word [ebp+0xfffffea4] */
    II(0x1010e72e, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1010e731, 0x6)   jged(0x1010e7c6, 0x8f);               /* jge dword 0x1010e7c6 */
    II(0x1010e737, 0x6)   mov(al, memb_a32(ss, ebp - 0x15c));   /* mov al, [ebp+0xfffffea4] */
    II(0x1010e73d, 0x2)   add(al, 0x67);                        /* add al, 0x67 */
    II(0x1010e73f, 0x3)   movsx(eax, al);                       /* movsx eax, al */
    II(0x1010e742, 0x5)   calld(0x10075fdc, -0x9876b);          /* call 0x10075fdc */
    II(0x1010e747, 0x6)   mov(memd_a32(ss, ebp - 0x160), eax);  /* mov [ebp+0xfffffea0], eax */
    II(0x1010e74d, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x1010e751, 0x2)   jzd(0x1010e75f, 0xc);                 /* jz 0x1010e75f */
    II(0x1010e753, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x160)); /* movsx eax, word [ebp+0xfffffea0] */
    II(0x1010e75a, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1010e75d, 0x2)   jzd(0x1010e761, 0x2);                 /* jz 0x1010e761 */
l_0x1010e75f:
    II(0x1010e75f, 0x2)   jmpd(0x1010e79c, 0x3b);               /* jmp 0x1010e79c */
l_0x1010e761:
    II(0x1010e761, 0x5)   mov(ecx, 0x1e);                       /* mov ecx, 0x1e */
    II(0x1010e766, 0x6)   lea(ebx, ebp - 0x180);                /* lea ebx, [ebp+0xfffffe80] */
    II(0x1010e76c, 0x5)   mov(edx, 0x32);                       /* mov edx, 0x32 */
    II(0x1010e771, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x1010e776, 0x5)   calld(0x10106281, -0x84fa);           /* call 0x10106281 */
    II(0x1010e77b, 0x6)   lea(ebx, ebp - 0x180);                /* lea ebx, [ebp+0xfffffe80] */
    II(0x1010e781, 0x6)   mov(al, memb_a32(ss, ebp - 0x15c));   /* mov al, [ebp+0xfffffea4] */
    II(0x1010e787, 0x2)   add(al, 0x63);                        /* add al, 0x63 */
    II(0x1010e789, 0x3)   movsx(edx, al);                       /* movsx edx, al */
    II(0x1010e78c, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x1010e791, 0x5)   calld(0x10106205, -0x8591);           /* call 0x10106205 */
    II(0x1010e796, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1010e79a, 0x2)   jmpd(0x1010e7c1, 0x25);               /* jmp 0x1010e7c1 */
l_0x1010e79c:
    II(0x1010e79c, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x15c)); /* movsx eax, word [ebp+0xfffffea4] */
    II(0x1010e7a3, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010e7a6, 0x6)   mov(ebx, memd_a32(ds, eax + 0x101bb444)); /* mov ebx, [eax+0x101bb444] */
    II(0x1010e7ac, 0x6)   mov(al, memb_a32(ss, ebp - 0x15c));   /* mov al, [ebp+0xfffffea4] */
    II(0x1010e7b2, 0x2)   add(al, 0x63);                        /* add al, 0x63 */
    II(0x1010e7b4, 0x3)   movsx(edx, al);                       /* movsx edx, al */
    II(0x1010e7b7, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x1010e7bc, 0x5)   calld(0x10106205, -0x85bc);           /* call 0x10106205 */
l_0x1010e7c1:
    II(0x1010e7c1, 0x5)   jmpd(0x1010e71b, -0xab);              /* jmp 0x1010e71b */
l_0x1010e7c6:
    II(0x1010e7c6, 0xa)   mov(memd_a32(ss, ebp - 0x158), 0x1);  /* mov dword [ebp+0xfffffea8], 0x1 */
l_0x1010e7d0:
    II(0x1010e7d0, 0x6)   mov(eax, memd_a32(ss, ebp - 0x158));  /* mov eax, [ebp+0xfffffea8] */
    II(0x1010e7d6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010e7d8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010e7d9, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010e7da, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010e7db, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010e7dc, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010e7dd, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010e7de, 0x1)   retd();                               /* ret */
FUNC_END

