FUNC_BEGIN(0x101469b5, 0x580b8157346e9369, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x93, 0xf3, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x80, 0x4d, 0xfc, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0xf, 0xb1, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x80, 0x65, 0xfc, 0xfe, 0xcc, 0xe8, 0xca, 0xfc, 0x1, 0, 0xe8, 0x95, 0xae, 0x2, 0, 0x8d, 0x45, 0x24, 0x89, 0x45, 0xf4, 0x8d, 0x4d, 0xf4, 0x8b, 0x5d, 0x20, 0xba, 0x2c, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xd3, 0xb6, 0xff, 0xff, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0x1c, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0x1c, 0x8b, 0x48, 0x16, 0x8b, 0x45, 0x1c, 0x83, 0xc0, 0x12, 0xe8, 0xa2, 0x2d, 0xf4, 0xff, 0x89, 0xc3, 0x8d, 0x45, 0xec, 0xe8, 0x98, 0x2d, 0xf4, 0xff, 0x8d, 0x75, 0xf8, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x1a, 0xe6, 0xff, 0xff, 0xe8, 0x87, 0x2d, 0xf4, 0xff, 0xe8, 0xda, 0xa4, 0x3, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xda, 0xb0, 0xff, 0xff, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x5, 0x5c, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xc6, 0xb0, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101469b5, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x101469ba, 0x5)   calld(sys_check_available_stack_size, 0x1f393); /* call 0x10165d52 */
    II(0x101469bf, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101469c0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101469c1, 0x1)   pushd(edx);                           /* push edx */
    II(0x101469c2, 0x1)   pushd(esi);                           /* push esi */
    II(0x101469c3, 0x1)   pushd(edi);                           /* push edi */
    II(0x101469c4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101469c5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101469c7, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x101469cd, 0x4)   or_(memb_a32(ss, ebp - 0x4), 0x1);    /* or byte [ebp-0x4], 0x1 */
    II(0x101469d1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101469d4, 0x5)   calld(my_string_ctor, -0x4ef1);       /* call 0x10141ae8 */
    II(0x101469d9, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101469dc, 0x4)   and_(memb_a32(ss, ebp - 0x4), -0x2 /* 0xfe */); /* and byte [ebp-0x4], 0xfe */
    II(0x101469e0, 0x1)   int3();                               /* int3 */
    II(0x101469e1, 0x5)   calld(/* sys */ 0x101666b0, 0x1fcca); /* call 0x101666b0 */
    II(0x101469e6, 0x5)   calld(/* sys */ 0x10171880, 0x2ae95); /* call 0x10171880 */
    II(0x101469eb, 0x3)   lea(eax, ebp + 0x24);                 /* lea eax, [ebp+0x24] */
    II(0x101469ee, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101469f1, 0x3)   lea(ecx, ebp - 0xc);                  /* lea ecx, [ebp-0xc] */
    II(0x101469f4, 0x3)   mov(ebx, memd_a32(ss, ebp + 0x20));   /* mov ebx, [ebp+0x20] */
    II(0x101469f7, 0x5)   mov(edx, 0x12c);                      /* mov edx, 0x12c */
    II(0x101469fc, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x101469ff, 0x5)   calld(0x101420d7, -0x492d);           /* call 0x101420d7 */
    II(0x10146a04, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10146a0b, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x10146a0e, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10146a11, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10146a14, 0x1)   pushd(eax);                           /* push eax */
    II(0x10146a15, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x10146a18, 0x3)   mov(ecx, memd_a32(ds, eax + 0x16));   /* mov ecx, [eax+0x16] */
//    II(0x10146a1b, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x10146a1e, 0x3)   add(eax, 0x12);                       /* add eax, 0x12 */
    II(0x10146a21, 0x5)   calld(my_strobj_c_str_v2, -0xbd25e);  /* call 0x100897c8 */
    II(0x10146a26, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10146a28, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10146a2b, 0x5)   calld(my_strobj_c_str_v2, -0xbd268);  /* call 0x100897c8 */
    II(0x10146a30, 0x3)   lea(esi, ebp - 0x8);                  /* lea esi, [ebp-0x8] */
    II(0x10146a33, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10146a35, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x10146a37, 0x5)   calld(0x10145056, -0x19e6);           /* call 0x10145056 */
    II(0x10146a3c, 0x5)   calld(my_strobj_c_str_v2, -0xbd279);  /* call 0x100897c8 */
    II(0x10146a41, 0x5)   calld(/* sys */ 0x10180f20, 0x3a4da); /* call 0x10180f20 */
    II(0x10146a46, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146a48, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10146a4b, 0x5)   calld(my_string_dtor, -0x4f26);       /* call 0x10141b2a */
    II(0x10146a50, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x10146a55, 0x5)   calld(sys_exit, 0x25c05);             /* call 0x1016c65f */
    II(0x10146a5a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10146a5c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10146a5f, 0x5)   calld(my_string_dtor, -0x4f3a);       /* call 0x10141b2a */
    II(0x10146a64, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10146a66, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10146a67, 0x1)   popd(edi);                            /* pop edi */
    II(0x10146a68, 0x1)   popd(esi);                            /* pop esi */
    II(0x10146a69, 0x1)   popd(edx);                            /* pop edx */
    II(0x10146a6a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10146a6b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10146a6c, 0x1)   retd();                               /* ret */
FUNC_END

