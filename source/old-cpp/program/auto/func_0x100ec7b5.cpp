FUNC_BEGIN(0x100ec7b5, 0xadfebfb7e752500f, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x93, 0x95, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x5c, 0x9b, 0xf8, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd0, 0x9c, 0xf8, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xff, 0xa3, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x6e, 0xe5, 0x4, 0, 0x84, 0xc0, 0xf, 0x84, 0xa5, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x8d, 0x9b, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xf4, 0xe8, 0x78, 0x9b, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0x67, 0x9b, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x7, 0x74, 0x5, 0xe9, 0x67, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xec, 0xeb, 0x38, 0x8d, 0x45, 0xf4, 0xe8, 0x4c, 0x9b, 0xf8, 0xff, 0x8a, 0x40, 0x47, 0x30, 0xe4, 0x1, 0x45, 0xf0, 0xeb, 0x4d, 0x8d, 0x45, 0xf4, 0xe8, 0x3a, 0x9b, 0xf8, 0xff, 0x8a, 0x40, 0x48, 0x30, 0xe4, 0x1, 0x45, 0xf0, 0xeb, 0x3b, 0x8d, 0x45, 0xf4, 0xe8, 0x28, 0x9b, 0xf8, 0xff, 0x8a, 0x40, 0x49, 0x30, 0xe4, 0x1, 0x45, 0xf0, 0xeb, 0x29, 0xeb, 0x27, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x66, 0x83, 0x7d, 0xe8, 0x40, 0x72, 0x11, 0x66, 0x83, 0x7d, 0xe8, 0x40, 0x76, 0xd8, 0x66, 0x81, 0x7d, 0xe8, 0x80, 0, 0x74, 0xac, 0xeb, 0xe0, 0x66, 0x83, 0x7d, 0xe8, 0x20, 0x74, 0xb5, 0xeb, 0xd7, 0xe9, 0x41, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xac, 0x96, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xa0, 0x96, 0xf8, 0xff, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ec7b5, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100ec7ba, 0x5)   calld(sys_check_available_stack_size, 0x79593); /* call 0x10165d52 */
    II(0x100ec7bf, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ec7c0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ec7c1, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ec7c2, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ec7c3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ec7c4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ec7c6, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100ec7cc, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ec7cf, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100ec7d2, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100ec7d7, 0x5)   calld(0x10076338, -0x764a4);          /* call 0x10076338 */
    II(0x100ec7dc, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100ec7df, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ec7e1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ec7e3, 0x5)   calld(0x100764b8, -0x76330);          /* call 0x100764b8 */
    II(0x100ec7e8, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100ec7ef, 0x2)   jmpd(0x100ec7f9, 0x8);                /* jmp 0x100ec7f9 */
l_0x100ec7f1:
    II(0x100ec7f1, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec7f4, 0x5)   calld(0x10076bf8, -0x75c01);          /* call 0x10076bf8 */
l_0x100ec7f9:
    II(0x100ec7f9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec7fb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec7fe, 0x5)   calld(0x1013ad71, 0x4e56e);           /* call 0x1013ad71 */
    II(0x100ec803, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec805, 0x6)   jzd(0x100ec8b0, 0xa5);                /* jz dword 0x100ec8b0 */
    II(0x100ec80b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec80e, 0x5)   calld(0x100763a0, -0x76473);          /* call 0x100763a0 */
    II(0x100ec813, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec815, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ec818, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ec81c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ec81e, 0x2)   jnzd(0x100ec82f, 0xf);                /* jnz 0x100ec82f */
    II(0x100ec820, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec823, 0x5)   calld(0x100763a0, -0x76488);          /* call 0x100763a0 */
    II(0x100ec828, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x100ec82d, 0x2)   jzd(0x100ec831, 0x2);                 /* jz 0x100ec831 */
l_0x100ec82f:
    II(0x100ec82f, 0x2)   jmpd(0x100ec83f, 0xe);                /* jmp 0x100ec83f */
l_0x100ec831:
    II(0x100ec831, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec834, 0x5)   calld(0x100763a0, -0x76499);          /* call 0x100763a0 */
    II(0x100ec839, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x100ec83d, 0x2)   jzd(0x100ec844, 0x5);                 /* jz 0x100ec844 */
l_0x100ec83f:
    II(0x100ec83f, 0x5)   jmpd(0x100ec8ab, 0x67);               /* jmp 0x100ec8ab */
l_0x100ec844:
    II(0x100ec844, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ec847, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100ec84a, 0x2)   jmpd(0x100ec884, 0x38);               /* jmp 0x100ec884 */
l_0x100ec84c:
    II(0x100ec84c, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec84f, 0x5)   calld(0x100763a0, -0x764b4);          /* call 0x100763a0 */
    II(0x100ec854, 0x3)   mov(al, memb_a32(ds, eax + 0x47));    /* mov al, [eax+0x47] */
    II(0x100ec857, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100ec859, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100ec85c, 0x2)   jmpd(0x100ec8ab, 0x4d);               /* jmp 0x100ec8ab */
l_0x100ec85e:
    II(0x100ec85e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec861, 0x5)   calld(0x100763a0, -0x764c6);          /* call 0x100763a0 */
    II(0x100ec866, 0x3)   mov(al, memb_a32(ds, eax + 0x48));    /* mov al, [eax+0x48] */
    II(0x100ec869, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100ec86b, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100ec86e, 0x2)   jmpd(0x100ec8ab, 0x3b);               /* jmp 0x100ec8ab */
l_0x100ec870:
    II(0x100ec870, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec873, 0x5)   calld(0x100763a0, -0x764d8);          /* call 0x100763a0 */
    II(0x100ec878, 0x3)   mov(al, memb_a32(ds, eax + 0x49));    /* mov al, [eax+0x49] */
    II(0x100ec87b, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100ec87d, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100ec880, 0x2)   jmpd(0x100ec8ab, 0x29);               /* jmp 0x100ec8ab */
l_0x100ec882:
    II(0x100ec882, 0x2)   jmpd(0x100ec8ab, 0x27);               /* jmp 0x100ec8ab */
l_0x100ec884:
    II(0x100ec884, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ec887, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100ec88a, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x40);  /* cmp word [ebp-0x18], 0x40 */
    II(0x100ec88f, 0x2)   jbd(0x100ec8a2, 0x11);                /* jb 0x100ec8a2 */
    II(0x100ec891, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x40);  /* cmp word [ebp-0x18], 0x40 */
    II(0x100ec896, 0x2)   jbed(0x100ec870, -0x28);              /* jbe 0x100ec870 */
    II(0x100ec898, 0x6)   cmp(memw_a32(ss, ebp - 0x18), 0x80);  /* cmp word [ebp-0x18], 0x80 */
    II(0x100ec89e, 0x2)   jzd(0x100ec84c, -0x54);               /* jz 0x100ec84c */
    II(0x100ec8a0, 0x2)   jmpd(0x100ec882, -0x20);              /* jmp 0x100ec882 */
l_0x100ec8a2:
    II(0x100ec8a2, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x20);  /* cmp word [ebp-0x18], 0x20 */
    II(0x100ec8a7, 0x2)   jzd(0x100ec85e, -0x4b);               /* jz 0x100ec85e */
    II(0x100ec8a9, 0x2)   jmpd(0x100ec882, -0x29);              /* jmp 0x100ec882 */
l_0x100ec8ab:
    II(0x100ec8ab, 0x5)   jmpd(0x100ec7f1, -0xbf);              /* jmp 0x100ec7f1 */
l_0x100ec8b0:
    II(0x100ec8b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ec8b3, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100ec8b6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec8b8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec8bb, 0x5)   calld(0x10075f6c, -0x76954);          /* call 0x10075f6c */
    II(0x100ec8c0, 0x2)   jmpd(0x100ec8cc, 0xa);                /* jmp 0x100ec8cc */
//  II(0x100ec8c2, 0xa)   /* Недостижимый код. */
l_0x100ec8cc:
    II(0x100ec8cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ec8cf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ec8d1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ec8d2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ec8d3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ec8d4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ec8d5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ec8d6, 0x1)   retd();                               /* ret */
FUNC_END

