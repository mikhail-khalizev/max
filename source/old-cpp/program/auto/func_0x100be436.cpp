FUNC_BEGIN(0x100be436, 0x9eb1a497f5efff78, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x12, 0x79, 0xa, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0xe, 0, 0x74, 0x11, 0x8b, 0x45, 0xfc, 0xe8, 0x8d, 0xce, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0x4b, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0xf, 0, 0x74, 0x10, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x10, 0, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x32, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x10, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xe4, 0x6d, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xfe, 0x40, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xa, 0x7d, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0xf4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xa, 0x75, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0x6b, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x19, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x65, 0x6c, 0xfe, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0xbd, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x14, 0x75, 0x11, 0x8b, 0x45, 0xfc, 0xe8, 0xb6, 0xf9, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0x9c, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1e, 0x75, 0x23, 0xba, 0x84, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5d, 0xfb, 0xff, 0xff, 0xba, 0xa8, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x50, 0xfb, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0x69, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3c, 0x75, 0x16, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xe8, 0x6b, 0xfe, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x43, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x78, 0x7e, 0x2f, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x74, 0x9, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x75, 0x2, 0xeb, 0x9, 0xe8, 0, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x10, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xe8, 0x46, 0x41, 0x4, 0, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100be436, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100be43b, 0x5)   calld(sys_check_available_stack_size, 0xa7912); /* call 0x10165d52 */
    II(0x100be440, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100be441, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100be442, 0x1)   pushd(edx);                           /* push edx */
    II(0x100be443, 0x1)   pushd(esi);                           /* push esi */
    II(0x100be444, 0x1)   pushd(edi);                           /* push edi */
    II(0x100be445, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100be446, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100be448, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100be44e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100be451, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be454, 0x4)   cmp(memb_a32(ds, eax + 0xe), 0);      /* cmp byte [eax+0xe], 0x0 */
    II(0x100be458, 0x2)   jzd(0x100be46b, 0x11);                /* jz 0x100be46b */
    II(0x100be45a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be45d, 0x5)   calld(0x100bb2ef, -0x3173);           /* call 0x100bb2ef */
    II(0x100be462, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100be466, 0x5)   jmpd(0x100be5b6, 0x14b);              /* jmp 0x100be5b6 */
l_0x100be46b:
    II(0x100be46b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be46e, 0x4)   cmp(memb_a32(ds, eax + 0xf), 0);      /* cmp byte [eax+0xf], 0x0 */
    II(0x100be472, 0x2)   jzd(0x100be484, 0x10);                /* jz 0x100be484 */
    II(0x100be474, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be477, 0x4)   mov(memb_a32(ds, eax + 0x10), 0);     /* mov byte [eax+0x10], 0x0 */
    II(0x100be47b, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100be47f, 0x5)   jmpd(0x100be5b6, 0x132);              /* jmp 0x100be5b6 */
l_0x100be484:
    II(0x100be484, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be487, 0x3)   mov(al, memb_a32(ds, eax + 0x10));    /* mov al, [eax+0x10] */
    II(0x100be48a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100be48f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100be491, 0x2)   jnzd(0x100be4a3, 0x10);               /* jnz 0x100be4a3 */
    II(0x100be493, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be496, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100be499, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100be49e, 0x5)   calld(0x100a5287, -0x1921c);          /* call 0x100a5287 */
l_0x100be4a3:
    II(0x100be4a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be4a6, 0x3)   inc(memb_a32(ds, eax + 0x10));        /* inc byte [eax+0x10] */
    II(0x100be4a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be4ac, 0x3)   mov(al, memb_a32(ds, eax + 0x10));    /* mov al, [eax+0x10] */
    II(0x100be4af, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100be4b4, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100be4b7, 0x2)   jged(0x100be4c2, 0x9);                /* jge 0x100be4c2 */
    II(0x100be4b9, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100be4bd, 0x5)   jmpd(0x100be5b6, 0xf4);               /* jmp 0x100be5b6 */
l_0x100be4c2:
    II(0x100be4c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be4c5, 0x3)   mov(al, memb_a32(ds, eax + 0x10));    /* mov al, [eax+0x10] */
    II(0x100be4c8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100be4cd, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100be4d0, 0x2)   jnzd(0x100be4de, 0xc);                /* jnz 0x100be4de */
    II(0x100be4d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be4d5, 0x5)   calld(0x100be145, -0x395);            /* call 0x100be145 */
    II(0x100be4da, 0x2)   test(al, al);                         /* test al, al */
    II(0x100be4dc, 0x2)   jzd(0x100be4e0, 0x2);                 /* jz 0x100be4e0 */
l_0x100be4de:
    II(0x100be4de, 0x2)   jmpd(0x100be4f9, 0x19);               /* jmp 0x100be4f9 */
l_0x100be4e0:
    II(0x100be4e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be4e3, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100be4e6, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100be4eb, 0x5)   calld(0x100a5155, -0x1939b);          /* call 0x100a5155 */
    II(0x100be4f0, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100be4f4, 0x5)   jmpd(0x100be5b6, 0xbd);               /* jmp 0x100be5b6 */
l_0x100be4f9:
    II(0x100be4f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be4fc, 0x3)   mov(al, memb_a32(ds, eax + 0x10));    /* mov al, [eax+0x10] */
    II(0x100be4ff, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100be504, 0x3)   cmp(eax, 0x14);                       /* cmp eax, 0x14 */
    II(0x100be507, 0x2)   jnzd(0x100be51a, 0x11);               /* jnz 0x100be51a */
    II(0x100be509, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be50c, 0x5)   calld(0x100bdec7, -0x64a);            /* call 0x100bdec7 */
    II(0x100be511, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100be515, 0x5)   jmpd(0x100be5b6, 0x9c);               /* jmp 0x100be5b6 */
l_0x100be51a:
    II(0x100be51a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be51d, 0x3)   mov(al, memb_a32(ds, eax + 0x10));    /* mov al, [eax+0x10] */
    II(0x100be520, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100be525, 0x3)   cmp(eax, 0x1e);                       /* cmp eax, 0x1e */
    II(0x100be528, 0x2)   jnzd(0x100be54d, 0x23);               /* jnz 0x100be54d */
    II(0x100be52a, 0x5)   mov(edx, 0x101c8184);                 /* mov edx, 0x101c8184 */
    II(0x100be52f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be532, 0x5)   calld(0x100be094, -0x4a3);            /* call 0x100be094 */
    II(0x100be537, 0x5)   mov(edx, 0x101c81a8);                 /* mov edx, 0x101c81a8 */
    II(0x100be53c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be53f, 0x5)   calld(0x100be094, -0x4b0);            /* call 0x100be094 */
    II(0x100be544, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100be548, 0x5)   jmpd(0x100be5b6, 0x69);               /* jmp 0x100be5b6 */
l_0x100be54d:
    II(0x100be54d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be550, 0x3)   mov(al, memb_a32(ds, eax + 0x10));    /* mov al, [eax+0x10] */
    II(0x100be553, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100be558, 0x3)   cmp(eax, 0x3c);                       /* cmp eax, 0x3c */
    II(0x100be55b, 0x2)   jnzd(0x100be573, 0x16);               /* jnz 0x100be573 */
    II(0x100be55d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be560, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100be563, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100be568, 0x5)   calld(0x100a5155, -0x19418);          /* call 0x100a5155 */
    II(0x100be56d, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100be571, 0x2)   jmpd(0x100be5b6, 0x43);               /* jmp 0x100be5b6 */
l_0x100be573:
    II(0x100be573, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be576, 0x3)   mov(al, memb_a32(ds, eax + 0x10));    /* mov al, [eax+0x10] */
    II(0x100be579, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100be57e, 0x3)   cmp(eax, 0x78);                       /* cmp eax, 0x78 */
    II(0x100be581, 0x2)   jled(0x100be5b2, 0x2f);               /* jle 0x100be5b2 */
    II(0x100be583, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100be585, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100be58a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100be58c, 0x2)   jzd(0x100be597, 0x9);                 /* jz 0x100be597 */
    II(0x100be58e, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x9);   /* cmp byte [0x101c391e], 0x9 */
    II(0x100be595, 0x2)   jnzd(0x100be599, 0x2);                /* jnz 0x100be599 */
l_0x100be597:
    II(0x100be597, 0x2)   jmpd(0x100be5a2, 0x9);                /* jmp 0x100be5a2 */
l_0x100be599:
    II(0x100be599, 0x5)   calld(0x100be19e, -0x400);            /* call 0x100be19e */
    II(0x100be59e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100be5a0, 0x2)   jzd(0x100be5b2, 0x10);                /* jz 0x100be5b2 */
l_0x100be5a2:
    II(0x100be5a2, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100be5a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be5aa, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100be5ad, 0x5)   calld(0x101026f8, 0x44146);           /* call 0x101026f8 */
l_0x100be5b2:
    II(0x100be5b2, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x100be5b6:
    II(0x100be5b6, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100be5b9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100be5bb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100be5bc, 0x1)   popd(edi);                            /* pop edi */
    II(0x100be5bd, 0x1)   popd(esi);                            /* pop esi */
    II(0x100be5be, 0x1)   popd(edx);                            /* pop edx */
    II(0x100be5bf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100be5c0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100be5c1, 0x1)   retd();                               /* ret */
FUNC_END

