FUNC_BEGIN(0x10115d23, 0x78ffba2ab3754c9f, 0x20, ({0x68, 0xac, 0, 0, 0, 0xe8, 0x25, 0, 0x5, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x9c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x88, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xf4, 0x8b, 0x45, 0xf0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0x40, 0x2, 0, 0, 0x83, 0x7d, 0xf8, 0, 0x74, 0x32, 0x80, 0x4d, 0xec, 0x1, 0x31, 0xdb, 0x8a, 0x5d, 0xf4, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0x9c, 0xe8, 0x32, 0x4, 0, 0, 0x89, 0x45, 0x98, 0x80, 0x65, 0xec, 0xfe, 0x8d, 0x45, 0x9c, 0xe8, 0x9a, 0xc, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0xad, 0x7, 0, 0, 0xe9, 0x8, 0x2, 0, 0, 0x80, 0x3d, 0x1d, 0x39, 0x1c, 0x10, 0, 0x74, 0x5, 0xe8, 0xd0, 0x2, 0, 0, 0x80, 0x7d, 0x10, 0, 0xf, 0x84, 0xa0, 0, 0, 0, 0xb8, 0x15, 0, 0, 0, 0xe8, 0x50, 0, 0x5, 0, 0x89, 0x45, 0x94, 0x8b, 0x45, 0x94, 0x89, 0x45, 0x90, 0x83, 0x7d, 0x90, 0, 0x74, 0x1b, 0xbb, 0x96, 0x2, 0, 0, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0x94, 0xe8, 0x66, 0x18, 0, 0, 0x89, 0x45, 0x8c, 0x8b, 0x45, 0x8c, 0x89, 0x45, 0x88, 0xeb, 0x6, 0x8b, 0x45, 0x90, 0x89, 0x45, 0x88, 0x8b, 0x55, 0x88, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xc0, 0xa, 0xbb, 0xbc, 0x52, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x43, 0x1e, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xd0, 0xa, 0xb8, 0xbc, 0x52, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x81, 0xd, 0xf6, 0xff, 0x98, 0x83, 0xf8, 0x32, 0x7e, 0x31, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xc0, 0xa, 0xbb, 0xbc, 0x52, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x41, 0x1e, 0, 0, 0x31, 0xdb, 0x8a, 0x1d, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xd3, 0xa, 0xbb, 0xbc, 0x52, 0x1c, 0x10, 0x1, 0xd3, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc6, 0x1d, 0, 0, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xfc, 0x43, 0x5, 0, 0xb8, 0x26, 0, 0, 0, 0xe8, 0xe3, 0x29, 0xfd, 0xff, 0x89, 0x45, 0x84, 0x8b, 0x45, 0x84, 0x66, 0x8b, 0x40, 0x8, 0x8b, 0x55, 0x84, 0x66, 0x2b, 0x2, 0x89, 0x45, 0x80, 0x66, 0xc7, 0x5, 0xb2, 0x52, 0x1c, 0x10, 0, 0, 0x66, 0xa1, 0xb2, 0x52, 0x1c, 0x10, 0x66, 0xa3, 0xb0, 0x52, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xb4, 0x52, 0x1c, 0x10, 0x14, 0, 0x8b, 0x45, 0x80, 0x83, 0xe8, 0x14, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0xe8, 0x36, 0xfa, 0xff, 0xff, 0xa1, 0xae, 0x52, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc6, 0x80, 0x64, 0x4e, 0x1c, 0x10, 0, 0x66, 0x83, 0x5, 0xb2, 0x52, 0x1c, 0x10, 0x14, 0xc7, 0x85, 0x7c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xc7, 0x85, 0x78, 0xff, 0xff, 0xff, 0xa, 0, 0, 0, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x6c, 0x29, 0xfd, 0xff, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x55, 0x84, 0x8b, 0x12, 0x8b, 0x9d, 0x74, 0xff, 0xff, 0xff, 0x1, 0xd0, 0x89, 0x3, 0xf, 0xbf, 0x95, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x45, 0x84, 0x8b, 0x40, 0x4, 0x8b, 0x9d, 0x74, 0xff, 0xff, 0xff, 0x1, 0xc2, 0x89, 0x53, 0x4, 0x8b, 0x15, 0xb0, 0x52, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0, 0x1, 0xd0, 0x8b, 0x95, 0x74, 0xff, 0xff, 0xff, 0x89, 0x42, 0x8, 0x8b, 0x15, 0xb2, 0x52, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0x8b, 0x95, 0x74, 0xff, 0xff, 0xff, 0x89, 0x42, 0xc, 0xf, 0xbf, 0x85, 0x78, 0xff, 0xff, 0xff, 0x69, 0xd0, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0x84, 0x8b, 0x40, 0x16, 0x1, 0xd0, 0xf, 0xbf, 0x95, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x9d, 0x74, 0xff, 0xff, 0xff, 0x1, 0xd0, 0x89, 0x43, 0x16, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x88, 0xaf, 0x1b, 0x10, 0x8b, 0, 0xa3, 0xb8, 0x52, 0x1c, 0x10, 0xc6, 0x5, 0x1d, 0x39, 0x1c, 0x10, 0x1, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0x72, 0x4a, 0xfe, 0xff, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0xcc, 0x95, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x10115d23, 0x5)   pushd(0xac);                          /* push dword 0xac */
    II(0x10115d28, 0x5)   calld(sys_check_available_stack_size, 0x50025); /* call 0x10165d52 */
    II(0x10115d2d, 0x1)   pushd(esi);                           /* push esi */
    II(0x10115d2e, 0x1)   pushd(edi);                           /* push edi */
    II(0x10115d2f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10115d30, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10115d32, 0x6)   sub(esp, 0x9c);                       /* sub esp, 0x9c */
    II(0x10115d38, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10115d3b, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10115d3e, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10115d41, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x10115d44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10115d47, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10115d49, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10115d4e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10115d50, 0x6)   jzd(0x10115f96, 0x240);               /* jz dword 0x10115f96 */
    II(0x10115d56, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x10115d5a, 0x2)   jzd(0x10115d8e, 0x32);                /* jz 0x10115d8e */
    II(0x10115d5c, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x10115d60, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10115d62, 0x3)   mov(bl, memb_a32(ss, ebp - 0xc));     /* mov bl, [ebp-0xc] */
    II(0x10115d65, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10115d68, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10115d6b, 0x5)   calld(0x101161a2, 0x432);             /* call 0x101161a2 */
    II(0x10115d70, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x10115d73, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x10115d77, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10115d7a, 0x5)   calld(0x10116a19, 0xc9a);             /* call 0x10116a19 */
    II(0x10115d7f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10115d81, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10115d84, 0x5)   calld(0x10116536, 0x7ad);             /* call 0x10116536 */
    II(0x10115d89, 0x5)   jmpd(0x10115f96, 0x208);              /* jmp 0x10115f96 */
l_0x10115d8e:
    II(0x10115d8e, 0x7)   cmp(memb_a32(ds, 0x101c391d), 0);     /* cmp byte [0x101c391d], 0x0 */
    II(0x10115d95, 0x2)   jzd(0x10115d9c, 0x5);                 /* jz 0x10115d9c */
    II(0x10115d97, 0x5)   calld(0x1011606c, 0x2d0);             /* call 0x1011606c */
l_0x10115d9c:
    II(0x10115d9c, 0x4)   cmp(memb_a32(ss, ebp + 0x10), 0);     /* cmp byte [ebp+0x10], 0x0 */
    II(0x10115da0, 0x6)   jzd(0x10115e46, 0xa0);                /* jz dword 0x10115e46 */
    II(0x10115da6, 0x5)   mov(eax, 0x15);                       /* mov eax, 0x15 */
    II(0x10115dab, 0x5)   calld(sys_new, 0x50050);              /* call 0x10165e00 */
    II(0x10115db0, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
//    II(0x10115db3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x10115db6, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x10115db9, 0x4)   cmp(memd_a32(ss, ebp - 0x70), 0);     /* cmp dword [ebp-0x70], 0x0 */
    II(0x10115dbd, 0x2)   jzd(0x10115dda, 0x1b);                /* jz 0x10115dda */
    II(0x10115dbf, 0x5)   mov(ebx, 0x296);                      /* mov ebx, 0x296 */
    II(0x10115dc4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10115dc7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x10115dca, 0x5)   calld(0x10117635, 0x1866);            /* call 0x10117635 */
    II(0x10115dcf, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
//    II(0x10115dd2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x10115dd5, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x10115dd8, 0x2)   jmpd(0x10115de0, 0x6);                /* jmp 0x10115de0 */
l_0x10115dda:
    II(0x10115dda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x10115ddd, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
l_0x10115de0:
    II(0x10115de0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x78));   /* mov edx, [ebp-0x78] */
    II(0x10115de3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10115de5, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10115dea, 0x3)   imul(eax, eax, 0xa);                  /* imul eax, eax, 0xa */
    II(0x10115ded, 0x5)   mov(ebx, 0x101c52bc);                 /* mov ebx, 0x101c52bc */
    II(0x10115df2, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10115df4, 0x5)   calld(0x10117c3c, 0x1e43);            /* call 0x10117c3c */
    II(0x10115df9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10115dfb, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10115e00, 0x3)   imul(edx, eax, 0xa);                  /* imul edx, eax, 0xa */
    II(0x10115e03, 0x5)   mov(eax, 0x101c52bc);                 /* mov eax, 0x101c52bc */
    II(0x10115e08, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10115e0a, 0x5)   calld(0x10076b90, -0x9f27f);          /* call 0x10076b90 */
    II(0x10115e0f, 0x1)   cwde();                               /* cwde */
    II(0x10115e10, 0x3)   cmp(eax, 0x32);                       /* cmp eax, 0x32 */
    II(0x10115e13, 0x2)   jled(0x10115e46, 0x31);               /* jle 0x10115e46 */
    II(0x10115e15, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10115e17, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10115e1c, 0x3)   imul(eax, eax, 0xa);                  /* imul eax, eax, 0xa */
    II(0x10115e1f, 0x5)   mov(ebx, 0x101c52bc);                 /* mov ebx, 0x101c52bc */
    II(0x10115e24, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10115e26, 0x5)   calld(0x10117c6c, 0x1e41);            /* call 0x10117c6c */
    II(0x10115e2b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10115e2d, 0x6)   mov(bl, memb_a32(ds, 0x101c37da));    /* mov bl, [0x101c37da] */
    II(0x10115e33, 0x3)   imul(edx, ebx, 0xa);                  /* imul edx, ebx, 0xa */
    II(0x10115e36, 0x5)   mov(ebx, 0x101c52bc);                 /* mov ebx, 0x101c52bc */
    II(0x10115e3b, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x10115e3d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10115e3f, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10115e41, 0x5)   calld(0x10117c0c, 0x1dc6);            /* call 0x10117c0c */
l_0x10115e46:
    II(0x10115e46, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10115e4b, 0x5)   calld(/* sys */ 0x1016a24c, 0x543fc); /* call 0x1016a24c */
    II(0x10115e50, 0x5)   mov(eax, 0x26);                       /* mov eax, 0x26 */
    II(0x10115e55, 0x5)   calld(0x100e883d, -0x2d61d);          /* call 0x100e883d */
    II(0x10115e5a, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
//    II(0x10115e5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x10115e60, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10115e64, 0x3)   mov(edx, memd_a32(ss, ebp - 0x7c));   /* mov edx, [ebp-0x7c] */
    II(0x10115e67, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x10115e6a, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
    II(0x10115e6d, 0x9)   mov(memw_a32(ds, 0x101c52b2), 0);     /* mov word [0x101c52b2], 0x0 */
    II(0x10115e76, 0x6)   mov(ax, memw_a32(ds, 0x101c52b2));    /* mov ax, [0x101c52b2] */
    II(0x10115e7c, 0x6)   mov(memw_a32(ds, 0x101c52b0), ax);    /* mov [0x101c52b0], ax */
    II(0x10115e82, 0x9)   mov(memw_a32(ds, 0x101c52b4), 0x14);  /* mov word [0x101c52b4], 0x14 */
    II(0x10115e8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x10115e8e, 0x3)   sub(eax, 0x14);                       /* sub eax, 0x14 */
    II(0x10115e91, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10115e94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10115e97, 0x5)   calld(0x101158d2, -0x5ca);            /* call 0x101158d2 */
    II(0x10115e9c, 0x5)   mov(eax, memd_a32(ds, 0x101c52ae));   /* mov eax, [0x101c52ae] */
    II(0x10115ea1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10115ea4, 0x7)   mov(memb_a32(ds, eax + 0x101c4e64), 0); /* mov byte [eax+0x101c4e64], 0x0 */
    II(0x10115eab, 0x8)   add(memw_a32(ds, 0x101c52b2), 0x14);  /* add word [0x101c52b2], 0x14 */
    II(0x10115eb3, 0xa)   mov(memd_a32(ss, ebp - 0x84), 0);     /* mov dword [ebp+0xffffff7c], 0x0 */
    II(0x10115ebd, 0xa)   mov(memd_a32(ss, ebp - 0x88), 0xa);   /* mov dword [ebp+0xffffff78], 0xa */
    II(0x10115ec7, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10115ecc, 0x5)   calld(0x100e883d, -0x2d694);          /* call 0x100e883d */
    II(0x10115ed1, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
    II(0x10115ed7, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x84)); /* movsx eax, word [ebp+0xffffff7c] */
    II(0x10115ede, 0x3)   mov(edx, memd_a32(ss, ebp - 0x7c));   /* mov edx, [ebp-0x7c] */
    II(0x10115ee1, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10115ee3, 0x6)   mov(ebx, memd_a32(ss, ebp - 0x8c));   /* mov ebx, [ebp+0xffffff74] */
    II(0x10115ee9, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10115eeb, 0x2)   mov(memd_a32(ds, ebx), eax);          /* mov [ebx], eax */
    II(0x10115eed, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x88)); /* movsx edx, word [ebp+0xffffff78] */
    II(0x10115ef4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x10115ef7, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10115efa, 0x6)   mov(ebx, memd_a32(ss, ebp - 0x8c));   /* mov ebx, [ebp+0xffffff74] */
    II(0x10115f00, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10115f02, 0x3)   mov(memd_a32(ds, ebx + 0x4), edx);    /* mov [ebx+0x4], edx */
    II(0x10115f05, 0x6)   mov(edx, memd_a32(ds, 0x101c52b0));   /* mov edx, [0x101c52b0] */
    II(0x10115f0b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10115f0e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x10115f14, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10115f16, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10115f18, 0x6)   mov(edx, memd_a32(ss, ebp - 0x8c));   /* mov edx, [ebp+0xffffff74] */
    II(0x10115f1e, 0x3)   mov(memd_a32(ds, edx + 0x8), eax);    /* mov [edx+0x8], eax */
    II(0x10115f21, 0x6)   mov(edx, memd_a32(ds, 0x101c52b2));   /* mov edx, [0x101c52b2] */
    II(0x10115f27, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10115f2a, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x10115f30, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10115f33, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10115f35, 0x6)   mov(edx, memd_a32(ss, ebp - 0x8c));   /* mov edx, [ebp+0xffffff74] */
    II(0x10115f3b, 0x3)   mov(memd_a32(ds, edx + 0xc), eax);    /* mov [edx+0xc], eax */
    II(0x10115f3e, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x88)); /* movsx eax, word [ebp+0xffffff78] */
    II(0x10115f45, 0x6)   imul(edx, eax, 0x280);                /* imul edx, eax, 0x280 */
    II(0x10115f4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x10115f4e, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10115f51, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10115f53, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x84)); /* movsx edx, word [ebp+0xffffff7c] */
    II(0x10115f5a, 0x6)   mov(ebx, memd_a32(ss, ebp - 0x8c));   /* mov ebx, [ebp+0xffffff74] */
    II(0x10115f60, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10115f62, 0x3)   mov(memd_a32(ds, ebx + 0x16), eax);   /* mov [ebx+0x16], eax */
    II(0x10115f65, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10115f69, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10115f6c, 0x6)   mov(eax, memd_a32(ds, eax + 0x101baf88)); /* mov eax, [eax+0x101baf88] */
    II(0x10115f72, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10115f74, 0x5)   mov(memd_a32(ds, 0x101c52b8), eax);   /* mov [0x101c52b8], eax */
    II(0x10115f79, 0x7)   mov(memb_a32(ds, 0x101c391d), 0x1);   /* mov byte [0x101c391d], 0x1 */
    II(0x10115f80, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x10115f86, 0x5)   calld(0x100fa9fd, -0x1b58e);          /* call 0x100fa9fd */
    II(0x10115f8b, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x10115f91, 0x5)   calld(0x100ff562, -0x16a34);          /* call 0x100ff562 */
l_0x10115f96:
    II(0x10115f96, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10115f98, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10115f99, 0x1)   popd(edi);                            /* pop edi */
    II(0x10115f9a, 0x1)   popd(esi);                            /* pop esi */
    II(0x10115f9b, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

