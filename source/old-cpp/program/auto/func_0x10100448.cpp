FUNC_BEGIN(0x10100448, 0x463a2ee05a87ebef, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0, 0x59, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x84, 0x1b, 0xf7, 0xff, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x74, 0x13, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x5, 0xe9, 0xe6, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x1, 0x1c, 0xf7, 0xff, 0xe8, 0x5f, 0x5b, 0xf7, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xe0, 0x8b, 0x45, 0xfc, 0xe8, 0xc4, 0x1e, 0xf7, 0xff, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x7d, 0x31, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0xf7, 0xd8, 0x25, 0xff, 0xff, 0, 0, 0x50, 0x8b, 0x45, 0xf0, 0xf7, 0xd8, 0x31, 0xc9, 0x66, 0x89, 0xc1, 0xbb, 0x8a, 0x2, 0, 0, 0xba, 0xb, 0, 0, 0, 0xb8, 0x49, 0x2b, 0x1a, 0x10, 0xe8, 0x94, 0xfa, 0xff, 0xff, 0xeb, 0x27, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf8, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xf0, 0xbb, 0x8a, 0x2, 0, 0, 0xba, 0xb, 0, 0, 0, 0xb8, 0x4f, 0x2b, 0x1a, 0x10, 0xe8, 0x6b, 0xfa, 0xff, 0xff, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xf6, 0x5d, 0xf7, 0xff, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x6a, 0x5f, 0xf7, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0xa0, 0x66, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xf, 0xa8, 0x3, 0, 0x84, 0xc0, 0xf, 0x84, 0x7c, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x2e, 0x5e, 0xf7, 0xff, 0xe8, 0x8d, 0x5c, 0xf7, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x83, 0x5c, 0xf7, 0xff, 0x39, 0xc2, 0x75, 0x5c, 0x8d, 0x45, 0xdc, 0xe8, 0x13, 0x5e, 0xf7, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x5d, 0x1a, 0xf7, 0xff, 0x66, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x7d, 0x8, 0x8b, 0x45, 0xe8, 0x29, 0x45, 0xf8, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x1, 0x45, 0xf4, 0xe8, 0x5d, 0x5a, 0xf7, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xdc, 0xe8, 0xe, 0x5e, 0xf7, 0xff, 0xe8, 0xbd, 0x1d, 0xf7, 0xff, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x7d, 0x8, 0x8b, 0x45, 0xe8, 0x29, 0x45, 0xec, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x1, 0x45, 0xf0, 0xe9, 0x6a, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x1, 0x1a, 0xf7, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x29, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf4, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xec, 0xbb, 0x8a, 0x2, 0, 0, 0xba, 0xc, 0, 0, 0, 0xb8, 0x55, 0x2b, 0x1a, 0x10, 0xe8, 0x75, 0xf9, 0xff, 0xff, 0xeb, 0x4e, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf8, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xf0, 0xbb, 0x8a, 0x2, 0, 0, 0xba, 0xc, 0, 0, 0, 0xb8, 0x5b, 0x2b, 0x1a, 0x10, 0xe8, 0x4c, 0xf9, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf4, 0x50, 0x31, 0xc9, 0x66, 0x8b, 0x4d, 0xec, 0xbb, 0x8a, 0x2, 0, 0, 0xba, 0xd, 0, 0, 0, 0xb8, 0x61, 0x2b, 0x1a, 0x10, 0xe8, 0x25, 0xf9, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xf2, 0x58, 0xf7, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10100448, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x1010044d, 0x5)   calld(sys_check_available_stack_size, 0x65900); /* call 0x10165d52 */
    II(0x10100452, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10100453, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10100454, 0x1)   pushd(edx);                           /* push edx */
    II(0x10100455, 0x1)   pushd(esi);                           /* push esi */
    II(0x10100456, 0x1)   pushd(edi);                           /* push edi */
    II(0x10100457, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10100458, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010045a, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x10100460, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10100463, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10100466, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100469, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010046c, 0x5)   calld(0x10071ff5, -0x8e47c);          /* call 0x10071ff5 */
    II(0x10100471, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10100474, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10100478, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1010047a, 0x2)   jzd(0x1010048f, 0x13);                /* jz 0x1010048f */
    II(0x1010047c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010047f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100481, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10100484, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100486, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1010048b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1010048d, 0x2)   jzd(0x10100494, 0x5);                 /* jz 0x10100494 */
l_0x1010048f:
    II(0x1010048f, 0x5)   jmpd(0x1010067a, 0x1e6);              /* jmp 0x1010067a */
l_0x10100494:
    II(0x10100494, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10100497, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010049a, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x101004a1, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x101004a8, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101004ab, 0x5)   calld(0x100720b1, -0x8e3ff);          /* call 0x100720b1 */
    II(0x101004b0, 0x5)   calld(0x10076014, -0x8a4a1);          /* call 0x10076014 */
    II(0x101004b5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101004b7, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x101004b9, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x101004bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101004bf, 0x5)   calld(0x10072388, -0x8e13c);          /* call 0x10072388 */
    II(0x101004c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101004c7, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101004ca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101004ce, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101004d0, 0x2)   jged(0x10100503, 0x31);               /* jge 0x10100503 */
    II(0x101004d2, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101004d7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101004d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101004db, 0x2)   neg(eax);                             /* neg eax */
    II(0x101004dd, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x101004e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101004e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101004e6, 0x2)   neg(eax);                             /* neg eax */
    II(0x101004e8, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101004ea, 0x3)   mov(cx, ax);                          /* mov cx, ax */
    II(0x101004ed, 0x5)   mov(ebx, 0x28a);                      /* mov ebx, 0x28a */
    II(0x101004f2, 0x5)   mov(edx, 0xb);                        /* mov edx, 0xb */
    II(0x101004f7, 0x5)   mov(eax, 0x101a2b49);                 /* mov eax, 0x101a2b49 */ /* "Teams" */
    II(0x101004fc, 0x5)   calld(0x100fff95, -0x56c);            /* call 0x100fff95 */
    II(0x10100501, 0x2)   jmpd(0x1010052a, 0x27);               /* jmp 0x1010052a */
l_0x10100503:
    II(0x10100503, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10100508, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100509, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010050b, 0x4)   mov(ax, memw_a32(ss, ebp - 0x8));     /* mov ax, [ebp-0x8] */
    II(0x1010050f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100510, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100512, 0x4)   mov(cx, memw_a32(ss, ebp - 0x10));    /* mov cx, [ebp-0x10] */
    II(0x10100516, 0x5)   mov(ebx, 0x28a);                      /* mov ebx, 0x28a */
    II(0x1010051b, 0x5)   mov(edx, 0xb);                        /* mov edx, 0xb */
    II(0x10100520, 0x5)   mov(eax, 0x101a2b4f);                 /* mov eax, 0x101a2b4f */ /* "Usage" */
    II(0x10100525, 0x5)   calld(0x100fff95, -0x595);            /* call 0x100fff95 */
l_0x1010052a:
    II(0x1010052a, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x10100531, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10100538, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1010053d, 0x5)   calld(0x10076338, -0x8a20a);          /* call 0x10076338 */
    II(0x10100542, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x10100545, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10100547, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10100549, 0x5)   calld(0x100764b8, -0x8a096);          /* call 0x100764b8 */
    II(0x1010054e, 0x2)   jmpd(0x10100558, 0x8);                /* jmp 0x10100558 */
l_0x10100550:
    II(0x10100550, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10100553, 0x5)   calld(0x10076bf8, -0x89960);          /* call 0x10076bf8 */
l_0x10100558:
    II(0x10100558, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010055a, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1010055d, 0x5)   calld(0x1013ad71, 0x3a80f);           /* call 0x1013ad71 */
    II(0x10100562, 0x2)   test(al, al);                         /* test al, al */
    II(0x10100564, 0x6)   jzd(0x101005e6, 0x7c);                /* jz dword 0x101005e6 */
    II(0x1010056a, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1010056d, 0x5)   calld(0x100763a0, -0x8a1d2);          /* call 0x100763a0 */
    II(0x10100572, 0x5)   calld(0x10076204, -0x8a373);          /* call 0x10076204 */
    II(0x10100577, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10100579, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010057c, 0x5)   calld(0x10076204, -0x8a37d);          /* call 0x10076204 */
    II(0x10100581, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10100583, 0x2)   jnzd(0x101005e1, 0x5c);               /* jnz 0x101005e1 */
    II(0x10100585, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10100588, 0x5)   calld(0x100763a0, -0x8a1ed);          /* call 0x100763a0 */
    II(0x1010058d, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10100590, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10100593, 0x5)   calld(0x10071ff5, -0x8e5a3);          /* call 0x10071ff5 */
    II(0x10100598, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x1010059c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x101005a0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101005a2, 0x2)   jged(0x101005ac, 0x8);                /* jge 0x101005ac */
    II(0x101005a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101005a7, 0x3)   sub(memd_a32(ss, ebp - 0x8), eax);    /* sub [ebp-0x8], eax */
    II(0x101005aa, 0x2)   jmpd(0x101005b2, 0x6);                /* jmp 0x101005b2 */
l_0x101005ac:
    II(0x101005ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101005af, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
l_0x101005b2:
    II(0x101005b2, 0x5)   calld(0x10076014, -0x8a5a3);          /* call 0x10076014 */
    II(0x101005b7, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101005b9, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x101005bb, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x101005be, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101005c1, 0x5)   calld(0x100763d4, -0x8a1f2);          /* call 0x100763d4 */
    II(0x101005c6, 0x5)   calld(0x10072388, -0x8e243);          /* call 0x10072388 */
    II(0x101005cb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x101005cf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101005d1, 0x2)   jged(0x101005db, 0x8);                /* jge 0x101005db */
    II(0x101005d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101005d6, 0x3)   sub(memd_a32(ss, ebp - 0x14), eax);   /* sub [ebp-0x14], eax */
    II(0x101005d9, 0x2)   jmpd(0x101005e1, 0x6);                /* jmp 0x101005e1 */
l_0x101005db:
    II(0x101005db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101005de, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x101005e1:
    II(0x101005e1, 0x5)   jmpd(0x10100550, -0x96);              /* jmp 0x10100550 */
l_0x101005e6:
    II(0x101005e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101005e9, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101005ec, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101005ef, 0x5)   calld(0x10071ff5, -0x8e5ff);          /* call 0x10071ff5 */
    II(0x101005f4, 0x1)   cwde();                               /* cwde */
    II(0x101005f5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101005f7, 0x2)   jled(0x10100622, 0x29);               /* jle 0x10100622 */
    II(0x101005f9, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101005fe, 0x1)   pushd(eax);                           /* push eax */
    II(0x101005ff, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100601, 0x4)   mov(ax, memw_a32(ss, ebp - 0xc));     /* mov ax, [ebp-0xc] */
    II(0x10100605, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100606, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100608, 0x4)   mov(cx, memw_a32(ss, ebp - 0x14));    /* mov cx, [ebp-0x14] */
    II(0x1010060c, 0x5)   mov(ebx, 0x28a);                      /* mov ebx, 0x28a */
    II(0x10100611, 0x5)   mov(edx, 0xc);                        /* mov edx, 0xc */
    II(0x10100616, 0x5)   mov(eax, 0x101a2b55);                 /* mov eax, 0x101a2b55 */ /* "Total" */
    II(0x1010061b, 0x5)   calld(0x100fff95, -0x68b);            /* call 0x100fff95 */
    II(0x10100620, 0x2)   jmpd(0x10100670, 0x4e);               /* jmp 0x10100670 */
l_0x10100622:
    II(0x10100622, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10100627, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100628, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010062a, 0x4)   mov(ax, memw_a32(ss, ebp - 0x8));     /* mov ax, [ebp-0x8] */
    II(0x1010062e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010062f, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100631, 0x4)   mov(cx, memw_a32(ss, ebp - 0x10));    /* mov cx, [ebp-0x10] */
    II(0x10100635, 0x5)   mov(ebx, 0x28a);                      /* mov ebx, 0x28a */
    II(0x1010063a, 0x5)   mov(edx, 0xc);                        /* mov edx, 0xc */
    II(0x1010063f, 0x5)   mov(eax, 0x101a2b5b);                 /* mov eax, 0x101a2b5b */ /* "Total" */
    II(0x10100644, 0x5)   calld(0x100fff95, -0x6b4);            /* call 0x100fff95 */
    II(0x10100649, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1010064e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010064f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10100651, 0x4)   mov(ax, memw_a32(ss, ebp - 0xc));     /* mov ax, [ebp-0xc] */
    II(0x10100655, 0x1)   pushd(eax);                           /* push eax */
    II(0x10100656, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10100658, 0x4)   mov(cx, memw_a32(ss, ebp - 0x14));    /* mov cx, [ebp-0x14] */
    II(0x1010065c, 0x5)   mov(ebx, 0x28a);                      /* mov ebx, 0x28a */
    II(0x10100661, 0x5)   mov(edx, 0xd);                        /* mov edx, 0xd */
    II(0x10100666, 0x5)   mov(eax, 0x101a2b61);                 /* mov eax, 0x101a2b61 */ /* "Usage" */
    II(0x1010066b, 0x5)   calld(0x100fff95, -0x6db);            /* call 0x100fff95 */
l_0x10100670:
    II(0x10100670, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10100672, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10100675, 0x5)   calld(0x10075f6c, -0x8a70e);          /* call 0x10075f6c */
l_0x1010067a:
    II(0x1010067a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010067c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010067d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010067e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010067f, 0x1)   popd(edx);                            /* pop edx */
    II(0x10100680, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10100681, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10100682, 0x1)   retd();                               /* ret */
FUNC_END

