FUNC_BEGIN(0x100f01bb, 0xc3b73cfa1b1dfe93, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x8d, 0x5b, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x67, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x4, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x61, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x67, 0x40, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x5, 0x76, 0x7, 0xc7, 0x45, 0xf0, 0x5, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xf0, 0x7d, 0x25, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0xc, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x8, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x53, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xf8, 0, 0xeb, 0x6, 0xeb, 0xcc, 0xc6, 0x45, 0xf8, 0x1, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f01bb, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100f01c0, 0x5)   calld(sys_check_available_stack_size, 0x75b8d); /* call 0x10165d52 */
    II(0x100f01c5, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f01c6, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f01c7, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f01c8, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f01c9, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f01ca, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f01cb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f01cd, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100f01d3, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100f01d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f01d9, 0x4)   mov(dx, memw_a32(ds, eax + 0x67));    /* mov dx, [eax+0x67] */
//    II(0x100f01dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f01e0, 0x4)   mov(memw_a32(ds, eax + 0x4), dx);     /* mov [eax+0x4], dx */
    II(0x100f01e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f01e7, 0x4)   mov(ax, memw_a32(ds, eax + 0x61));    /* mov ax, [eax+0x61] */
    II(0x100f01eb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f01ee, 0x4)   sub(ax, memw_a32(ds, edx + 0x67));    /* sub ax, [edx+0x67] */
    II(0x100f01f2, 0x1)   inc(eax);                             /* inc eax */
    II(0x100f01f3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100f01f6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100f01fa, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x100f01fd, 0x2)   jbed(0x100f0206, 0x7);                /* jbe 0x100f0206 */
    II(0x100f01ff, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x5);   /* mov dword [ebp-0x10], 0x5 */
l_0x100f0206:
    II(0x100f0206, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100f020d, 0x2)   jmpd(0x100f0215, 0x6);                /* jmp 0x100f0215 */
l_0x100f020f:
    II(0x100f020f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f0212, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100f0215:
    II(0x100f0215, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f0218, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100f021c, 0x2)   jged(0x100f0243, 0x25);               /* jge 0x100f0243 */
    II(0x100f021e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f0222, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x100f0225, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f0228, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x100f022b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100f022d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0230, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100f0232, 0x5)   calld(0x100f008a, -0x1ad);            /* call 0x100f008a */
    II(0x100f0237, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f0239, 0x2)   jnzd(0x100f0241, 0x6);                /* jnz 0x100f0241 */
    II(0x100f023b, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100f023f, 0x2)   jmpd(0x100f0247, 0x6);                /* jmp 0x100f0247 */
l_0x100f0241:
    II(0x100f0241, 0x2)   jmpd(0x100f020f, -0x34);              /* jmp 0x100f020f */
l_0x100f0243:
    II(0x100f0243, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x100f0247:
    II(0x100f0247, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100f024a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f024c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f024d, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f024e, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f024f, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f0250, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f0251, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f0252, 0x1)   retd();                               /* ret */
FUNC_END

