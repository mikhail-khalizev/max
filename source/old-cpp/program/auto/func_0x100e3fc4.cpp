FUNC_BEGIN(0x100e3fc4, 0x7bb18e482893db90, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x84, 0x1d, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1c, 0xe8, 0x4e, 0x23, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xc4, 0x24, 0xf9, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x24, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x16, 0xe8, 0xbe, 0x11, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x60, 0xe8, 0xf1, 0xba, 0xfe, 0xff, 0xeb, 0x1d, 0xe8, 0xc8, 0x11, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xdf, 0x11, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x60, 0xe8, 0x48, 0xba, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x24, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1c, 0xe8, 0x3d, 0x2b, 0xf9, 0xff, 0x98, 0x39, 0xc2, 0x7c, 0x16, 0xe8, 0x67, 0x11, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x64, 0xe8, 0x9a, 0xba, 0xfe, 0xff, 0xeb, 0x1d, 0xe8, 0x71, 0x11, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x88, 0x11, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x64, 0xe8, 0xf1, 0xb9, 0xfe, 0xff, 0xe8, 0x54, 0x11, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x6b, 0x11, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x68, 0xe8, 0xd4, 0xb9, 0xfe, 0xff, 0xc6, 0x45, 0xf8, 0, 0xc6, 0x45, 0xf4, 0, 0xc6, 0x45, 0xf0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1c, 0xe8, 0xd1, 0x2a, 0xf9, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x22, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x4c, 0, 0x74, 0x14, 0xe8, 0xf2, 0x10, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4c, 0xe8, 0x25, 0xba, 0xfe, 0xff, 0xe9, 0x8e, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x4c, 0, 0x74, 0x1d, 0xe8, 0xf0, 0x10, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x7, 0x11, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4c, 0xe8, 0x70, 0xb9, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xe2, 0x2a, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x51, 0x6c, 0x5, 0, 0x84, 0xc0, 0x74, 0x50, 0x8d, 0x45, 0xec, 0xe8, 0xa8, 0x22, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xce, 0xed, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xf8, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0x8e, 0x22, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x42, 0xee, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xf4, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0x74, 0x22, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xb6, 0xee, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x9a, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x50, 0, 0x75, 0xc, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe5, 0x1d, 0xf9, 0xff, 0xeb, 0x55, 0xe8, 0x56, 0x10, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0x8a, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x50, 0xe8, 0xda, 0xb8, 0xfe, 0xff, 0xe8, 0x3d, 0x10, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0x8a, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x54, 0xe8, 0xc1, 0xb8, 0xfe, 0xff, 0xe8, 0x24, 0x10, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xd2, 0x8a, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x58, 0xe8, 0xa8, 0xb8, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x8e, 0x1d, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100e3fc4, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100e3fc9, 0x5)   calld(sys_check_available_stack_size, 0x81d84); /* call 0x10165d52 */
    II(0x100e3fce, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e3fcf, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e3fd0, 0x1)   pushd(edx);                           /* push edx */
    II(0x100e3fd1, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e3fd2, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e3fd3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e3fd4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e3fd6, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100e3fdc, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100e3fdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3fe2, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x100e3fe5, 0x5)   calld(0x10076338, -0x6dcb2);          /* call 0x10076338 */
    II(0x100e3fea, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e3fec, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e3fef, 0x5)   calld(0x100764b8, -0x6db3c);          /* call 0x100764b8 */
    II(0x100e3ff4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3ff7, 0x3)   mov(eax, memd_a32(ds, eax + 0x24));   /* mov eax, [eax+0x24] */
    II(0x100e3ffa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e3ffd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e3fff, 0x2)   jnzd(0x100e4017, 0x16);               /* jnz 0x100e4017 */
    II(0x100e4001, 0x5)   calld(0x100d51c4, -0xee42);           /* call 0x100d51c4 */
    II(0x100e4006, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e4008, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100e400a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e400d, 0x3)   mov(eax, memd_a32(ds, eax + 0x60));   /* mov eax, [eax+0x60] */
    II(0x100e4010, 0x5)   calld(0x100cfb06, -0x1450f);          /* call 0x100cfb06 */
    II(0x100e4015, 0x2)   jmpd(0x100e4034, 0x1d);               /* jmp 0x100e4034 */
l_0x100e4017:
    II(0x100e4017, 0x5)   calld(0x100d51e4, -0xee38);           /* call 0x100d51e4 */
    II(0x100e401c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e401e, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e4020, 0x5)   calld(0x100d5204, -0xee21);           /* call 0x100d5204 */
    II(0x100e4025, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e4027, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100e4029, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e402c, 0x3)   mov(eax, memd_a32(ds, eax + 0x60));   /* mov eax, [eax+0x60] */
    II(0x100e402f, 0x5)   calld(0x100cfa7c, -0x145b8);          /* call 0x100cfa7c */
l_0x100e4034:
    II(0x100e4034, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e4037, 0x3)   mov(edx, memd_a32(ds, eax + 0x24));   /* mov edx, [eax+0x24] */
    II(0x100e403a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e403d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e4040, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x100e4043, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e4046, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e4048, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e404b, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x100e404e, 0x5)   calld(0x10076b90, -0x6d4c3);          /* call 0x10076b90 */
    II(0x100e4053, 0x1)   cwde();                               /* cwde */
    II(0x100e4054, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100e4056, 0x2)   jld(0x100e406e, 0x16);                /* jl 0x100e406e */
    II(0x100e4058, 0x5)   calld(0x100d51c4, -0xee99);           /* call 0x100d51c4 */
    II(0x100e405d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e405f, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100e4061, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e4064, 0x3)   mov(eax, memd_a32(ds, eax + 0x64));   /* mov eax, [eax+0x64] */
    II(0x100e4067, 0x5)   calld(0x100cfb06, -0x14566);          /* call 0x100cfb06 */
    II(0x100e406c, 0x2)   jmpd(0x100e408b, 0x1d);               /* jmp 0x100e408b */
l_0x100e406e:
    II(0x100e406e, 0x5)   calld(0x100d51e4, -0xee8f);           /* call 0x100d51e4 */
    II(0x100e4073, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e4075, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e4077, 0x5)   calld(0x100d5204, -0xee78);           /* call 0x100d5204 */
    II(0x100e407c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e407e, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100e4080, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e4083, 0x3)   mov(eax, memd_a32(ds, eax + 0x64));   /* mov eax, [eax+0x64] */
    II(0x100e4086, 0x5)   calld(0x100cfa7c, -0x1460f);          /* call 0x100cfa7c */
l_0x100e408b:
    II(0x100e408b, 0x5)   calld(0x100d51e4, -0xeeac);           /* call 0x100d51e4 */
    II(0x100e4090, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e4092, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e4094, 0x5)   calld(0x100d5204, -0xee95);           /* call 0x100d5204 */
    II(0x100e4099, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e409b, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100e409d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e40a0, 0x3)   mov(eax, memd_a32(ds, eax + 0x68));   /* mov eax, [eax+0x68] */
    II(0x100e40a3, 0x5)   calld(0x100cfa7c, -0x1462c);          /* call 0x100cfa7c */
    II(0x100e40a8, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100e40ac, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100e40b0, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100e40b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e40b7, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x100e40ba, 0x5)   calld(0x10076b90, -0x6d52f);          /* call 0x10076b90 */
    II(0x100e40bf, 0x1)   cwde();                               /* cwde */
    II(0x100e40c0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e40c2, 0x2)   jnzd(0x100e40e6, 0x22);               /* jnz 0x100e40e6 */
    II(0x100e40c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e40c7, 0x4)   cmp(memd_a32(ds, eax + 0x4c), 0);     /* cmp dword [eax+0x4c], 0x0 */
    II(0x100e40cb, 0x2)   jzd(0x100e40e1, 0x14);                /* jz 0x100e40e1 */
    II(0x100e40cd, 0x5)   calld(0x100d51c4, -0xef0e);           /* call 0x100d51c4 */
    II(0x100e40d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e40d4, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100e40d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e40d9, 0x3)   mov(eax, memd_a32(ds, eax + 0x4c));   /* mov eax, [eax+0x4c] */
    II(0x100e40dc, 0x5)   calld(0x100cfb06, -0x145db);          /* call 0x100cfb06 */
l_0x100e40e1:
    II(0x100e40e1, 0x5)   jmpd(0x100e4174, 0x8e);               /* jmp 0x100e4174 */
l_0x100e40e6:
    II(0x100e40e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e40e9, 0x4)   cmp(memd_a32(ds, eax + 0x4c), 0);     /* cmp dword [eax+0x4c], 0x0 */
    II(0x100e40ed, 0x2)   jzd(0x100e410c, 0x1d);                /* jz 0x100e410c */
    II(0x100e40ef, 0x5)   calld(0x100d51e4, -0xef10);           /* call 0x100d51e4 */
    II(0x100e40f4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e40f6, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e40f8, 0x5)   calld(0x100d5204, -0xeef9);           /* call 0x100d5204 */
    II(0x100e40fd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e40ff, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100e4101, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e4104, 0x3)   mov(eax, memd_a32(ds, eax + 0x4c));   /* mov eax, [eax+0x4c] */
    II(0x100e4107, 0x5)   calld(0x100cfa7c, -0x14690);          /* call 0x100cfa7c */
l_0x100e410c:
    II(0x100e410c, 0x2)   jmpd(0x100e4116, 0x8);                /* jmp 0x100e4116 */
l_0x100e410e:
    II(0x100e410e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e4111, 0x5)   calld(0x10076bf8, -0x6d51e);          /* call 0x10076bf8 */
l_0x100e4116:
    II(0x100e4116, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e4118, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e411b, 0x5)   calld(0x1013ad71, 0x56c51);           /* call 0x1013ad71 */
    II(0x100e4120, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e4122, 0x2)   jzd(0x100e4174, 0x50);                /* jz 0x100e4174 */
    II(0x100e4124, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e4127, 0x5)   calld(0x100763d4, -0x6dd58);          /* call 0x100763d4 */
    II(0x100e412c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e412e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e4131, 0x5)   calld(0x100e2f04, -0x1232);           /* call 0x100e2f04 */
    II(0x100e4136, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e4138, 0x2)   jzd(0x100e413e, 0x4);                 /* jz 0x100e413e */
    II(0x100e413a, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x100e413e:
    II(0x100e413e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e4141, 0x5)   calld(0x100763d4, -0x6dd72);          /* call 0x100763d4 */
    II(0x100e4146, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e4148, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e414b, 0x5)   calld(0x100e2f92, -0x11be);           /* call 0x100e2f92 */
    II(0x100e4150, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e4152, 0x2)   jzd(0x100e4158, 0x4);                 /* jz 0x100e4158 */
    II(0x100e4154, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x100e4158:
    II(0x100e4158, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e415b, 0x5)   calld(0x100763d4, -0x6dd8c);          /* call 0x100763d4 */
    II(0x100e4160, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e4162, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e4165, 0x5)   calld(0x100e3020, -0x114a);           /* call 0x100e3020 */
    II(0x100e416a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e416c, 0x2)   jzd(0x100e4172, 0x4);                 /* jz 0x100e4172 */
    II(0x100e416e, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x100e4172:
    II(0x100e4172, 0x2)   jmpd(0x100e410e, -0x66);              /* jmp 0x100e410e */
l_0x100e4174:
    II(0x100e4174, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e4177, 0x4)   cmp(memd_a32(ds, eax + 0x50), 0);     /* cmp dword [eax+0x50], 0x0 */
    II(0x100e417b, 0x2)   jnzd(0x100e4189, 0xc);                /* jnz 0x100e4189 */
    II(0x100e417d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e417f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e4182, 0x5)   calld(0x10075f6c, -0x6e21b);          /* call 0x10075f6c */
    II(0x100e4187, 0x2)   jmpd(0x100e41de, 0x55);               /* jmp 0x100e41de */
l_0x100e4189:
    II(0x100e4189, 0x5)   calld(0x100d51e4, -0xefaa);           /* call 0x100d51e4 */
    II(0x100e418e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e4190, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e4192, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e4194, 0x3)   mov(dl, memb_a32(ss, ebp - 0x8));     /* mov dl, [ebp-0x8] */
    II(0x100e4197, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e419a, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100e419d, 0x5)   calld(0x100cfa7c, -0x14726);          /* call 0x100cfa7c */
    II(0x100e41a2, 0x5)   calld(0x100d51e4, -0xefc3);           /* call 0x100d51e4 */
    II(0x100e41a7, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e41a9, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e41ab, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e41ad, 0x3)   mov(dl, memb_a32(ss, ebp - 0xc));     /* mov dl, [ebp-0xc] */
    II(0x100e41b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e41b3, 0x3)   mov(eax, memd_a32(ds, eax + 0x54));   /* mov eax, [eax+0x54] */
    II(0x100e41b6, 0x5)   calld(0x100cfa7c, -0x1473f);          /* call 0x100cfa7c */
    II(0x100e41bb, 0x5)   calld(0x100d51e4, -0xefdc);           /* call 0x100d51e4 */
    II(0x100e41c0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e41c2, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100e41c4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e41c6, 0x3)   mov(dl, memb_a32(ss, ebp - 0x10));    /* mov dl, [ebp-0x10] */
    II(0x100e41c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e41cc, 0x3)   mov(eax, memd_a32(ds, eax + 0x58));   /* mov eax, [eax+0x58] */
    II(0x100e41cf, 0x5)   calld(0x100cfa7c, -0x14758);          /* call 0x100cfa7c */
    II(0x100e41d4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e41d6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100e41d9, 0x5)   calld(0x10075f6c, -0x6e272);          /* call 0x10075f6c */
l_0x100e41de:
    II(0x100e41de, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e41e0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e41e1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e41e2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e41e3, 0x1)   popd(edx);                            /* pop edx */
    II(0x100e41e4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e41e5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e41e6, 0x1)   retd();                               /* ret */
FUNC_END

