FUNC_BEGIN(0x1008c999, 0xf16f514cac68a34f, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xaf, 0x93, 0xd, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x4d, 0xfc, 0xf, 0xbf, 0x5d, 0xf8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0xa5, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x19, 0xe8, 0xf, 0x9d, 0xfe, 0xff, 0x83, 0xe8, 0x19, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1d, 0xe8, 0xac, 0xe6, 0xff, 0xff, 0x83, 0xe8, 0x1d, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x21, 0xe8, 0xe1, 0xa0, 0xfe, 0xff, 0x83, 0xe8, 0x21, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x26, 0xe8, 0x10, 0xff, 0, 0, 0x83, 0xe8, 0x26, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x2b, 0xe8, 0x39, 0, 0x1, 0, 0x83, 0xe8, 0x2b, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x2, 0x7c, 0x46, 0x1b, 0x10, 0x8b, 0x55, 0x10, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x21, 0xe8, 0xe9, 0xc0, 0xff, 0xff, 0x8b, 0x55, 0x14, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1d, 0xe8, 0x7b, 0xe5, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x2a, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x25, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7c, 0x10, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x21, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0xd, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x21, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0x10, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x23, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xf4, 0x1, 0, 0, 0xbb, 0x26, 0x4, 0x1a, 0x10, 0xba, 0x33, 0x4, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xbc, 0x92, 0xd, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x8, 0}))
    II(0x1008c999, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1008c99e, 0x5)   calld(sys_check_available_stack_size, 0xd93af); /* call 0x10165d52 */
    II(0x1008c9a3, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008c9a4, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008c9a5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008c9a6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008c9a8, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x1008c9ae, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008c9b1, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1008c9b4, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1008c9b7, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1008c9ba, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x1008c9be, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x1008c9c2, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1008c9c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008c9c8, 0x5)   calld(0x1008c772, -0x25b);            /* call 0x1008c772 */
    II(0x1008c9cd, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008c9d0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008c9d3, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1008c9d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008c9d9, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x1008c9dc, 0x5)   calld(my_ctor_0x101b38f8, -0x162f1);  /* call 0x100766f0 */
    II(0x1008c9e1, 0x3)   sub(eax, 0x19);                       /* sub eax, 0x19 */
    II(0x1008c9e4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008c9e7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008c9ea, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1008c9ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008c9f0, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x1008c9f3, 0x5)   calld(my_ctor_0x101b3b58, -0x1954);   /* call 0x1008b0a4 */
    II(0x1008c9f8, 0x3)   sub(eax, 0x1d);                       /* sub eax, 0x1d */
    II(0x1008c9fb, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008c9fe, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008ca01, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1008ca04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca07, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x1008ca0a, 0x5)   calld(my_ctor_0x101b4184, -0x15f1f);  /* call 0x10076af0 */
    II(0x1008ca0f, 0x3)   sub(eax, 0x21);                       /* sub eax, 0x21 */
    II(0x1008ca12, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1008ca15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca18, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1008ca1b, 0x5)   calld(0x1009c930, 0xff10);            /* call 0x1009c930 */
    II(0x1008ca20, 0x3)   sub(eax, 0x26);                       /* sub eax, 0x26 */
    II(0x1008ca23, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008ca26, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008ca29, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1008ca2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca2f, 0x3)   add(eax, 0x2b);                       /* add eax, 0x2b */
    II(0x1008ca32, 0x5)   calld(0x1009ca70, 0x10039);           /* call 0x1009ca70 */
    II(0x1008ca37, 0x3)   sub(eax, 0x2b);                       /* sub eax, 0x2b */
    II(0x1008ca3a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008ca3d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008ca40, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1008ca43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca46, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b467c); /* mov dword [eax+0x2], 0x101b467c */
    II(0x1008ca4d, 0x3)   mov(edx, memd_a32(ss, ebp + 0x10));   /* mov edx, [ebp+0x10] */
    II(0x1008ca50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca53, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x1008ca56, 0x5)   calld(0x10088b44, -0x3f17);           /* call 0x10088b44 */
    II(0x1008ca5b, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x1008ca5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca61, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x1008ca64, 0x5)   calld(0x1008afe4, -0x1a85);           /* call 0x1008afe4 */
    II(0x1008ca69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca6c, 0x4)   mov(memb_a32(ds, eax + 0x2a), 0);     /* mov byte [eax+0x2a], 0x0 */
    II(0x1008ca70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca73, 0x4)   mov(memb_a32(ds, eax + 0x25), 0);     /* mov byte [eax+0x25], 0x0 */
    II(0x1008ca77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca7a, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1008ca7d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008ca80, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008ca82, 0x2)   jld(0x1008ca94, 0x10);                /* jl 0x1008ca94 */
    II(0x1008ca84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca87, 0x4)   mov(ax, memw_a32(ds, eax + 0x21));    /* mov ax, [eax+0x21] */
    II(0x1008ca8b, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1008ca92, 0x2)   jld(0x1008ca96, 0x2);                 /* jl 0x1008ca96 */
l_0x1008ca94:
    II(0x1008ca94, 0x2)   jmpd(0x1008caa3, 0xd);                /* jmp 0x1008caa3 */
l_0x1008ca96:
    II(0x1008ca96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008ca99, 0x3)   mov(eax, memd_a32(ds, eax + 0x21));   /* mov eax, [eax+0x21] */
    II(0x1008ca9c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008ca9f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008caa1, 0x2)   jged(0x1008caa5, 0x2);                /* jge 0x1008caa5 */
l_0x1008caa3:
    II(0x1008caa3, 0x2)   jmpd(0x1008cab5, 0x10);               /* jmp 0x1008cab5 */
l_0x1008caa5:
    II(0x1008caa5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008caa8, 0x4)   mov(ax, memw_a32(ds, eax + 0x23));    /* mov ax, [eax+0x23] */
    II(0x1008caac, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1008cab3, 0x2)   jld(0x1008cab7, 0x2);                 /* jl 0x1008cab7 */
l_0x1008cab5:
    II(0x1008cab5, 0x2)   jmpd(0x1008cac0, 0x9);                /* jmp 0x1008cac0 */
l_0x1008cab7:
    II(0x1008cab7, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x1008cabe, 0x2)   jmpd(0x1008cad9, 0x19);               /* jmp 0x1008cad9 */
l_0x1008cac0:
    II(0x1008cac0, 0x5)   mov(ecx, 0x1f4);                      /* mov ecx, 0x1f4 */
    II(0x1008cac5, 0x5)   mov(ebx, 0x101a0426);                 /* mov ebx, 0x101a0426 */ /* "ai_build.cpp" */
    II(0x1008caca, 0x5)   mov(edx, 0x101a0433);                 /* mov edx, 0x101a0433 */ /* "site.x >= 0 && site.x < MapXDim && site.y >= 0 && site.y < MapYDim" */
    II(0x1008cacf, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008cad1, 0x5)   calld(sys_assert, 0xd92bc);           /* call 0x10165d92 */
    II(0x1008cad6, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x1008cad9:
    II(0x1008cad9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1008cadc, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x1008cadf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1008cae2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008cae4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008cae5, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008cae6, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008cae7, 0x3)   retd(0x8);                            /* ret 0x8 */
FUNC_END

