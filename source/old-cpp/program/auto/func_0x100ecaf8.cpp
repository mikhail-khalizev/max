FUNC_BEGIN(0x100ecaf8, 0x92dfbeb1e338aa9e, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x50, 0x92, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x1b, 0x98, 0xf8, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x8f, 0x99, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xc5, 0xa0, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x34, 0xe2, 0x4, 0, 0x84, 0xc0, 0x74, 0x4c, 0x8d, 0x45, 0xf4, 0xe8, 0x57, 0x98, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xf4, 0xe8, 0x42, 0x98, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xf4, 0xe8, 0x31, 0x98, 0xf8, 0xff, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x10, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xe3, 0x93, 0xf8, 0xff, 0xeb, 0x1c, 0xeb, 0x9e, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xd1, 0x93, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xc5, 0x93, 0xf8, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ecaf8, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100ecafd, 0x5)   calld(sys_check_available_stack_size, 0x79250); /* call 0x10165d52 */
    II(0x100ecb02, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ecb03, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ecb04, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ecb05, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ecb06, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ecb07, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ecb08, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ecb0a, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100ecb10, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ecb13, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100ecb18, 0x5)   calld(0x10076338, -0x767e5);          /* call 0x10076338 */
    II(0x100ecb1d, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100ecb20, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ecb22, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ecb24, 0x5)   calld(0x100764b8, -0x76671);          /* call 0x100764b8 */
    II(0x100ecb29, 0x2)   jmpd(0x100ecb33, 0x8);                /* jmp 0x100ecb33 */
l_0x100ecb2b:
    II(0x100ecb2b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ecb2e, 0x5)   calld(0x10076bf8, -0x75f3b);          /* call 0x10076bf8 */
l_0x100ecb33:
    II(0x100ecb33, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ecb35, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ecb38, 0x5)   calld(0x1013ad71, 0x4e234);           /* call 0x1013ad71 */
    II(0x100ecb3d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ecb3f, 0x2)   jzd(0x100ecb8d, 0x4c);                /* jz 0x100ecb8d */
    II(0x100ecb41, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ecb44, 0x5)   calld(0x100763a0, -0x767a9);          /* call 0x100763a0 */
    II(0x100ecb49, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ecb4b, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ecb4e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ecb52, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ecb54, 0x2)   jnzd(0x100ecb65, 0xf);                /* jnz 0x100ecb65 */
    II(0x100ecb56, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ecb59, 0x5)   calld(0x100763a0, -0x767be);          /* call 0x100763a0 */
    II(0x100ecb5e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100ecb63, 0x2)   jzd(0x100ecb67, 0x2);                 /* jz 0x100ecb67 */
l_0x100ecb65:
    II(0x100ecb65, 0x2)   jmpd(0x100ecb79, 0x12);               /* jmp 0x100ecb79 */
l_0x100ecb67:
    II(0x100ecb67, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ecb6a, 0x5)   calld(0x100763a0, -0x767cf);          /* call 0x100763a0 */
    II(0x100ecb6f, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100ecb72, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ecb75, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ecb77, 0x2)   jgd(0x100ecb7b, 0x2);                 /* jg 0x100ecb7b */
l_0x100ecb79:
    II(0x100ecb79, 0x2)   jmpd(0x100ecb8b, 0x10);               /* jmp 0x100ecb8b */
l_0x100ecb7b:
    II(0x100ecb7b, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100ecb7f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ecb81, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ecb84, 0x5)   calld(0x10075f6c, -0x76c1d);          /* call 0x10075f6c */
    II(0x100ecb89, 0x2)   jmpd(0x100ecba7, 0x1c);               /* jmp 0x100ecba7 */
l_0x100ecb8b:
    II(0x100ecb8b, 0x2)   jmpd(0x100ecb2b, -0x62);              /* jmp 0x100ecb2b */
l_0x100ecb8d:
    II(0x100ecb8d, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100ecb91, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ecb93, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ecb96, 0x5)   calld(0x10075f6c, -0x76c2f);          /* call 0x10075f6c */
    II(0x100ecb9b, 0x2)   jmpd(0x100ecba7, 0xa);                /* jmp 0x100ecba7 */
//  II(0x100ecb9d, 0xa)   /* Недостижимый код. */
l_0x100ecba7:
    II(0x100ecba7, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100ecbaa, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ecbac, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ecbad, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ecbae, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ecbaf, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ecbb0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ecbb1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ecbb2, 0x1)   retd();                               /* ret */
FUNC_END

