FUNC_BEGIN(0x100c36ab, 0xa1223ec5fdbe8adc, 0x20, ({0x68, 0x68, 0, 0, 0, 0xe8, 0x9d, 0x26, 0xa, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x50, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0, 0x39, 0xc2, 0x74, 0x21, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x1, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x29, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x2a, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0xf6, 0x4, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x43, 0xe8, 0xf5, 0x78, 0, 0, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x8d, 0x6a, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x50, 0x76, 0x7, 0, 0x84, 0xc0, 0x74, 0x12, 0x8d, 0x45, 0xdc, 0xe8, 0xcb, 0x69, 0xfc, 0xff, 0xe8, 0x3e, 0x6c, 0xfc, 0xff, 0x3b, 0x45, 0xfc, 0x75, 0x2, 0xeb, 0xa, 0x8d, 0x45, 0xdc, 0xe8, 0xb7, 0x34, 0xfb, 0xff, 0xeb, 0xd4, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x24, 0x76, 0x7, 0, 0x84, 0xc0, 0x74, 0x1c, 0x8d, 0x45, 0xdc, 0xe8, 0x9f, 0x69, 0xfc, 0xff, 0xe8, 0xb5, 0x57, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xe4, 0x56, 0xfc, 0xff, 0xe9, 0x89, 0x4, 0, 0, 0xb8, 0x15, 0, 0, 0, 0xe8, 0x89, 0x26, 0xa, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x1c, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x18, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xec, 0xe8, 0x57, 0x54, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xd8, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xd8, 0x8b, 0x55, 0xd8, 0x8d, 0x45, 0xe0, 0xe8, 0xc1, 0x78, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xc9, 0x6a, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x43, 0xe8, 0x8, 0x78, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x29, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x2a, 0x75, 0xb, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x5a, 0xf6, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x43, 0xe8, 0xa, 0x78, 0, 0, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x66, 0x77, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0xec, 0x33, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x5b, 0x75, 0x7, 0, 0x84, 0xc0, 0x74, 0x24, 0x8d, 0x45, 0xdc, 0xe8, 0xd6, 0x68, 0xfc, 0xff, 0xe8, 0x49, 0x6b, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x65, 0x78, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x2, 0xeb, 0xc6, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x4b, 0x78, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x12, 0x80, 0x7d, 0xf4, 0, 0x75, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x31, 0x74, 0x2, 0xeb, 0x45, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x79, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x30, 0xbb, 0, 0x1f, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0, 0x6a, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xcf, 0x72, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x74, 0x55, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xaa, 0x55, 0xfc, 0xff, 0xe9, 0x4f, 0x3, 0, 0, 0x80, 0x7d, 0xf4, 0, 0x75, 0x12, 0x8b, 0x45, 0xfc, 0xe8, 0x87, 0x29, 0xfb, 0xff, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x19, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x43, 0x55, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x79, 0x55, 0xfc, 0xff, 0xe9, 0x1e, 0x3, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x56, 0x2a, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0xcc, 0x2b, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x79, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0xf, 0x85, 0xd3, 0x2, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xe9, 0x32, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x58, 0x74, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x15, 0x1, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x77, 0x2a, 0xfb, 0xff, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x3a, 0x50, 0x26, 0x75, 0x17, 0x8d, 0x45, 0xf0, 0xe8, 0x64, 0x2a, 0xfb, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x50, 0x77, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x18, 0x8d, 0x45, 0xf0, 0xe8, 0x17, 0x2a, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xbb, 0x26, 0xfe, 0xff, 0x98, 0x83, 0xf8, 0x1e, 0x7c, 0x5, 0xe9, 0xc7, 0, 0, 0, 0xb8, 0x15, 0, 0, 0, 0xe8, 0x8c, 0x24, 0xa, 0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x74, 0x23, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x18, 0x8d, 0x45, 0xf0, 0xe8, 0x43, 0x2a, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xd4, 0xe8, 0x53, 0x52, 0xff, 0xff, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xc8, 0x8b, 0x55, 0xc8, 0x8d, 0x45, 0xe0, 0xe8, 0xfd, 0x68, 0xfc, 0xff, 0x8b, 0x5d, 0xfc, 0x8b, 0x5b, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0xdb, 0x30, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x4d, 0x68, 0xfc, 0xff, 0xe8, 0xd8, 0x76, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x9c, 0x68, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x43, 0xe8, 0xdb, 0x75, 0, 0, 0xbb, 0, 0x1f, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x82, 0x68, 0xfc, 0xff, 0x8b, 0x4d, 0xf8, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x4f, 0x71, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x54, 0x25, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xea, 0x53, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x20, 0x54, 0xfc, 0xff, 0xe9, 0xc5, 0x1, 0, 0, 0xe9, 0xd1, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x43, 0xe8, 0xbf, 0x75, 0, 0, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x1b, 0x75, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0xa1, 0x31, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x10, 0x73, 0x7, 0, 0x84, 0xc0, 0x74, 0x39, 0x8d, 0x45, 0xdc, 0xe8, 0x8b, 0x66, 0xfc, 0xff, 0xe8, 0xfe, 0x68, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x31, 0x75, 0x23, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xe9, 0x24, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x7f, 0x53, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xb5, 0x53, 0xfc, 0xff, 0xe9, 0x5a, 0x1, 0, 0, 0xeb, 0xb1, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x90, 0x28, 0xfb, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x88, 0x29, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x3a, 0x31, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xa9, 0x72, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x8, 0x1, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xc8, 0x28, 0xfb, 0xff, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x3a, 0x50, 0x26, 0x75, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0xb5, 0x28, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x31, 0x74, 0x2, 0xeb, 0x18, 0x8d, 0x45, 0xf0, 0xe8, 0x70, 0x28, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x14, 0x25, 0xfe, 0xff, 0x98, 0x83, 0xf8, 0x1e, 0x7c, 0x5, 0xe9, 0xc2, 0, 0, 0, 0xb8, 0x15, 0, 0, 0, 0xe8, 0xe5, 0x22, 0xa, 0, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0x83, 0x7d, 0xbc, 0, 0x74, 0x23, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x18, 0x8d, 0x45, 0xf0, 0xe8, 0x9c, 0x28, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xc0, 0xe8, 0xac, 0x50, 0xff, 0xff, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xb4, 0xeb, 0x6, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb4, 0x8b, 0x55, 0xb4, 0x8d, 0x45, 0xe0, 0xe8, 0x56, 0x67, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xb0, 0xe8, 0x34, 0x2f, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xa6, 0x66, 0xfc, 0xff, 0xe8, 0x31, 0x75, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xf5, 0x66, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x43, 0xe8, 0x34, 0x74, 0, 0, 0xbb, 0, 0x1f, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xdb, 0x66, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xaa, 0x6f, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xaf, 0x23, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x45, 0x52, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x7b, 0x52, 0xfc, 0xff, 0xeb, 0x23, 0xe9, 0xde, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x8a, 0x23, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x20, 0x52, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x56, 0x52, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100c36ab, 0x5)   pushd(0x68);                          /* push dword 0x68 */
    II(0x100c36b0, 0x5)   calld(sys_check_available_stack_size, 0xa269d); /* call 0x10165d52 */
    II(0x100c36b5, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100c36b6, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c36b7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c36b8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c36b9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c36ba, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c36bc, 0x6)   sub(esp, 0x50);                       /* sub esp, 0x50 */
    II(0x100c36c2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100c36c5, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100c36c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c36cb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c36cd, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c36d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c36d3, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c36d6, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c36d8, 0x2)   jzd(0x100c36fb, 0x21);                /* jz 0x100c36fb */
    II(0x100c36da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c36dd, 0x4)   test(memb_a32(ds, eax + 0x12), 0x1);  /* test byte [eax+0x12], 0x1 */
    II(0x100c36e1, 0x2)   jzd(0x100c36ed, 0xa);                 /* jz 0x100c36ed */
    II(0x100c36e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c36e6, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x29);   /* cmp word [eax+0x8], 0x29 */
    II(0x100c36eb, 0x2)   jnzd(0x100c36ef, 0x2);                /* jnz 0x100c36ef */
l_0x100c36ed:
    II(0x100c36ed, 0x2)   jmpd(0x100c36f9, 0xa);                /* jmp 0x100c36f9 */
l_0x100c36ef:
    II(0x100c36ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c36f2, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x2a);   /* cmp word [eax+0x8], 0x2a */
    II(0x100c36f7, 0x2)   jnzd(0x100c36fb, 0x2);                /* jnz 0x100c36fb */
l_0x100c36f9:
    II(0x100c36f9, 0x2)   jmpd(0x100c3700, 0x5);                /* jmp 0x100c3700 */
l_0x100c36fb:
    II(0x100c36fb, 0x5)   jmpd(0x100c3bf6, 0x4f6);              /* jmp 0x100c3bf6 */
l_0x100c3700:
    II(0x100c3700, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3703, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c3706, 0x5)   calld(0x100cb000, 0x78f5);            /* call 0x100cb000 */
    II(0x100c370b, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100c370e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3710, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c3712, 0x5)   calld(0x1008a1a4, -0x39573);          /* call 0x1008a1a4 */
l_0x100c3717:
    II(0x100c3717, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3719, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c371c, 0x5)   calld(0x1013ad71, 0x77650);           /* call 0x1013ad71 */
    II(0x100c3721, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c3723, 0x2)   jzd(0x100c3737, 0x12);                /* jz 0x100c3737 */
    II(0x100c3725, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3728, 0x5)   calld(0x1008a0f8, -0x39635);          /* call 0x1008a0f8 */
    II(0x100c372d, 0x5)   calld(0x1008a370, -0x393c2);          /* call 0x1008a370 */
    II(0x100c3732, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100c3735, 0x2)   jnzd(0x100c3739, 0x2);                /* jnz 0x100c3739 */
l_0x100c3737:
    II(0x100c3737, 0x2)   jmpd(0x100c3743, 0xa);                /* jmp 0x100c3743 */
l_0x100c3739:
    II(0x100c3739, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c373c, 0x5)   calld(0x10076bf8, -0x4cb49);          /* call 0x10076bf8 */
    II(0x100c3741, 0x2)   jmpd(0x100c3717, -0x2c);              /* jmp 0x100c3717 */
l_0x100c3743:
    II(0x100c3743, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3745, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3748, 0x5)   calld(0x1013ad71, 0x77624);           /* call 0x1013ad71 */
    II(0x100c374d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c374f, 0x2)   jzd(0x100c376d, 0x1c);                /* jz 0x100c376d */
    II(0x100c3751, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3754, 0x5)   calld(0x1008a0f8, -0x39661);          /* call 0x1008a0f8 */
    II(0x100c3759, 0x5)   calld(0x100b8f13, -0xa84b);           /* call 0x100b8f13 */
    II(0x100c375e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3760, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3763, 0x5)   calld(0x10088e4c, -0x3a91c);          /* call 0x10088e4c */
    II(0x100c3768, 0x5)   jmpd(0x100c3bf6, 0x489);              /* jmp 0x100c3bf6 */
l_0x100c376d:
    II(0x100c376d, 0x5)   mov(eax, 0x15);                       /* mov eax, 0x15 */
    II(0x100c3772, 0x5)   calld(sys_new, 0xa2689);              /* call 0x10165e00 */
    II(0x100c3777, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100c377a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c377d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100c3780, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100c3784, 0x2)   jzd(0x100c37a2, 0x1c);                /* jz 0x100c37a2 */
    II(0x100c3786, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3789, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c378c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c378f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c3792, 0x5)   calld(0x100b8bee, -0xaba9);           /* call 0x100b8bee */
    II(0x100c3797, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100c379a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100c379d, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100c37a0, 0x2)   jmpd(0x100c37a8, 0x6);                /* jmp 0x100c37a8 */
l_0x100c37a2:
    II(0x100c37a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c37a5, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100c37a8:
    II(0x100c37a8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x100c37ab, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c37ae, 0x5)   calld(0x100cb074, 0x78c1);            /* call 0x100cb074 */
    II(0x100c37b3, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c37b6, 0x5)   calld(0x1008a284, -0x39537);          /* call 0x1008a284 */
    II(0x100c37bb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c37bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c37c0, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c37c3, 0x5)   calld(0x100cafd0, 0x7808);            /* call 0x100cafd0 */
    II(0x100c37c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c37cb, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x29);   /* cmp word [eax+0x8], 0x29 */
    II(0x100c37d0, 0x2)   jzd(0x100c37dc, 0xa);                 /* jz 0x100c37dc */
    II(0x100c37d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c37d5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x2a);   /* cmp word [eax+0x8], 0x2a */
    II(0x100c37da, 0x2)   jnzd(0x100c37e7, 0xb);                /* jnz 0x100c37e7 */
l_0x100c37dc:
    II(0x100c37dc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c37df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c37e2, 0x5)   calld(0x100c2e41, -0x9a6);            /* call 0x100c2e41 */
l_0x100c37e7:
    II(0x100c37e7, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100c37eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c37ee, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c37f1, 0x5)   calld(0x100cb000, 0x780a);            /* call 0x100cb000 */
    II(0x100c37f6, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100c37f9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c37fb, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c37fd, 0x5)   calld(0x100caf68, 0x7766);            /* call 0x100caf68 */
    II(0x100c3802, 0x2)   jmpd(0x100c380c, 0x8);                /* jmp 0x100c380c */
l_0x100c3804:
    II(0x100c3804, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3807, 0x5)   calld(0x10076bf8, -0x4cc14);          /* call 0x10076bf8 */
l_0x100c380c:
    II(0x100c380c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c380e, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3811, 0x5)   calld(0x1013ad71, 0x7755b);           /* call 0x1013ad71 */
    II(0x100c3816, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c3818, 0x2)   jzd(0x100c383e, 0x24);                /* jz 0x100c383e */
    II(0x100c381a, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c381d, 0x5)   calld(0x1008a0f8, -0x3972a);          /* call 0x1008a0f8 */
    II(0x100c3822, 0x5)   calld(0x1008a370, -0x394b7);          /* call 0x1008a370 */
    II(0x100c3827, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100c382a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c382d, 0x5)   calld(0x100bb097, -0x879b);           /* call 0x100bb097 */
    II(0x100c3832, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c3834, 0x2)   jzd(0x100c383c, 0x6);                 /* jz 0x100c383c */
    II(0x100c3836, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100c383a, 0x2)   jmpd(0x100c383e, 0x2);                /* jmp 0x100c383e */
l_0x100c383c:
    II(0x100c383c, 0x2)   jmpd(0x100c3804, -0x3a);              /* jmp 0x100c3804 */
l_0x100c383e:
    II(0x100c383e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3841, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100c3844, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c3847, 0x5)   calld(0x100bb097, -0x87b5);           /* call 0x100bb097 */
    II(0x100c384c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c384e, 0x2)   jnzd(0x100c3862, 0x12);               /* jnz 0x100c3862 */
    II(0x100c3850, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x100c3854, 0x2)   jnzd(0x100c3860, 0xa);                /* jnz 0x100c3860 */
    II(0x100c3856, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3859, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x100c385e, 0x2)   jzd(0x100c3862, 0x2);                 /* jz 0x100c3862 */
l_0x100c3860:
    II(0x100c3860, 0x2)   jmpd(0x100c38a7, 0x45);               /* jmp 0x100c38a7 */
l_0x100c3862:
    II(0x100c3862, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3865, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3867, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c386a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c386d, 0x3)   mov(eax, memd_a32(ds, eax + 0x79));   /* mov eax, [eax+0x79] */
    II(0x100c3870, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c3873, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c3875, 0x2)   jnzd(0x100c38a7, 0x30);               /* jnz 0x100c38a7 */
    II(0x100c3877, 0x5)   mov(ebx, 0x1f00);                     /* mov ebx, 0x1f00 */
    II(0x100c387c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c387f, 0x5)   calld(0x1008a284, -0x39600);          /* call 0x1008a284 */
    II(0x100c3884, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3886, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3889, 0x5)   calld(0x100bab5d, -0x8d31);           /* call 0x100bab5d */
    II(0x100c388e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3890, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c3893, 0x5)   calld(0x10088e0c, -0x3aa8c);          /* call 0x10088e0c */
    II(0x100c3898, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c389a, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c389d, 0x5)   calld(0x10088e4c, -0x3aa56);          /* call 0x10088e4c */
    II(0x100c38a2, 0x5)   jmpd(0x100c3bf6, 0x34f);              /* jmp 0x100c3bf6 */
l_0x100c38a7:
    II(0x100c38a7, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x100c38ab, 0x2)   jnzd(0x100c38bf, 0x12);               /* jnz 0x100c38bf */
    II(0x100c38ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c38b0, 0x5)   calld(0x1007623c, -0x4d679);          /* call 0x1007623c */
    II(0x100c38b5, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100c38b8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c38bb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c38bd, 0x2)   jnzd(0x100c38d8, 0x19);               /* jnz 0x100c38d8 */
l_0x100c38bf:
    II(0x100c38bf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c38c1, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c38c4, 0x5)   calld(0x10088e0c, -0x3aabd);          /* call 0x10088e0c */
    II(0x100c38c9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c38cb, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c38ce, 0x5)   calld(0x10088e4c, -0x3aa87);          /* call 0x10088e4c */
    II(0x100c38d3, 0x5)   jmpd(0x100c3bf6, 0x31e);              /* jmp 0x100c3bf6 */
l_0x100c38d8:
    II(0x100c38d8, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100c38dd, 0x5)   calld(0x10076338, -0x4d5aa);          /* call 0x10076338 */
    II(0x100c38e2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c38e4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c38e7, 0x5)   calld(0x100764b8, -0x4d434);          /* call 0x100764b8 */
    II(0x100c38ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c38ef, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c38f1, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c38f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c38f7, 0x3)   mov(eax, memd_a32(ds, eax + 0x79));   /* mov eax, [eax+0x79] */
    II(0x100c38fa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c38fd, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c38ff, 0x6)   jnzd(0x100c3bd8, 0x2d3);              /* jnz dword 0x100c3bd8 */
    II(0x100c3905, 0x2)   jmpd(0x100c390f, 0x8);                /* jmp 0x100c390f */
l_0x100c3907:
    II(0x100c3907, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c390a, 0x5)   calld(0x10076bf8, -0x4cd17);          /* call 0x10076bf8 */
l_0x100c390f:
    II(0x100c390f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3911, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3914, 0x5)   calld(0x1013ad71, 0x77458);           /* call 0x1013ad71 */
    II(0x100c3919, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c391b, 0x6)   jzd(0x100c3a36, 0x115);               /* jz dword 0x100c3a36 */
    II(0x100c3921, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3924, 0x5)   calld(0x100763a0, -0x4d589);          /* call 0x100763a0 */
    II(0x100c3929, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c392c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c392f, 0x3)   cmp(dl, memb_a32(ds, eax + 0x26));    /* cmp dl, [eax+0x26] */
    II(0x100c3932, 0x2)   jnzd(0x100c394b, 0x17);               /* jnz 0x100c394b */
    II(0x100c3934, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3937, 0x5)   calld(0x100763a0, -0x4d59c);          /* call 0x100763a0 */
    II(0x100c393c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100c393f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c3942, 0x5)   calld(0x100bb097, -0x88b0);           /* call 0x100bb097 */
    II(0x100c3947, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c3949, 0x2)   jnzd(0x100c394d, 0x2);                /* jnz 0x100c394d */
l_0x100c394b:
    II(0x100c394b, 0x2)   jmpd(0x100c3965, 0x18);               /* jmp 0x100c3965 */
l_0x100c394d:
    II(0x100c394d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3950, 0x5)   calld(0x1007636c, -0x4d5e9);          /* call 0x1007636c */
    II(0x100c3955, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3957, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c395a, 0x5)   calld(0x100a601a, -0x1d945);          /* call 0x100a601a */
    II(0x100c395f, 0x1)   cwde();                               /* cwde */
    II(0x100c3960, 0x3)   cmp(eax, 0x1e);                       /* cmp eax, 0x1e */
    II(0x100c3963, 0x2)   jld(0x100c396a, 0x5);                 /* jl 0x100c396a */
l_0x100c3965:
    II(0x100c3965, 0x5)   jmpd(0x100c3a31, 0xc7);               /* jmp 0x100c3a31 */
l_0x100c396a:
    II(0x100c396a, 0x5)   mov(eax, 0x15);                       /* mov eax, 0x15 */
    II(0x100c396f, 0x5)   calld(sys_new, 0xa248c);              /* call 0x10165e00 */
    II(0x100c3974, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x100c3977, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c397a, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100c397d, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x100c3981, 0x2)   jzd(0x100c39a6, 0x23);                /* jz 0x100c39a6 */
    II(0x100c3983, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3986, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c3989, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c398c, 0x5)   calld(0x100763d4, -0x4d5bd);          /* call 0x100763d4 */
    II(0x100c3991, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3993, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100c3996, 0x5)   calld(0x100b8bee, -0xadad);           /* call 0x100b8bee */
    II(0x100c399b, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x100c399e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100c39a1, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100c39a4, 0x2)   jmpd(0x100c39ac, 0x6);                /* jmp 0x100c39ac */
l_0x100c39a6:
    II(0x100c39a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100c39a9, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
l_0x100c39ac:
    II(0x100c39ac, 0x3)   mov(edx, memd_a32(ss, ebp - 0x38));   /* mov edx, [ebp-0x38] */
    II(0x100c39af, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c39b2, 0x5)   calld(0x1008a2b4, -0x39703);          /* call 0x1008a2b4 */
    II(0x100c39b7, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100c39ba, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x1a));   /* mov ebx, [ebx+0x1a] */
    II(0x100c39bd, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c39c0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100c39c3, 0x3)   mov(edx, memd_a32(ds, edx + 0x18));   /* mov edx, [edx+0x18] */
    II(0x100c39c6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c39c9, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100c39cc, 0x5)   calld(0x10076aac, -0x4cf25);          /* call 0x10076aac */
    II(0x100c39d1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c39d3, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c39d6, 0x5)   calld(0x1008a228, -0x397b3);          /* call 0x1008a228 */
    II(0x100c39db, 0x5)   calld(0x100cb0b8, 0x76d8);            /* call 0x100cb0b8 */
    II(0x100c39e0, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c39e3, 0x5)   calld(0x1008a284, -0x39764);          /* call 0x1008a284 */
    II(0x100c39e8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c39ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c39ed, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c39f0, 0x5)   calld(0x100cafd0, 0x75db);            /* call 0x100cafd0 */
    II(0x100c39f5, 0x5)   mov(ebx, 0x1f00);                     /* mov ebx, 0x1f00 */
    II(0x100c39fa, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c39fd, 0x5)   calld(0x1008a284, -0x3977e);          /* call 0x1008a284 */
    II(0x100c3a02, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x100c3a05, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3a07, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100c3a09, 0x5)   calld(0x100bab5d, -0x8eb1);           /* call 0x100bab5d */
    II(0x100c3a0e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3a10, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3a13, 0x5)   calld(0x10075f6c, -0x4daac);          /* call 0x10075f6c */
    II(0x100c3a18, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3a1a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c3a1d, 0x5)   calld(0x10088e0c, -0x3ac16);          /* call 0x10088e0c */
    II(0x100c3a22, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3a24, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3a27, 0x5)   calld(0x10088e4c, -0x3abe0);          /* call 0x10088e4c */
    II(0x100c3a2c, 0x5)   jmpd(0x100c3bf6, 0x1c5);              /* jmp 0x100c3bf6 */
l_0x100c3a31:
    II(0x100c3a31, 0x5)   jmpd(0x100c3907, -0x12f);             /* jmp 0x100c3907 */
l_0x100c3a36:
    II(0x100c3a36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3a39, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c3a3c, 0x5)   calld(0x100cb000, 0x75bf);            /* call 0x100cb000 */
    II(0x100c3a41, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100c3a44, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3a46, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c3a48, 0x5)   calld(0x100caf68, 0x751b);            /* call 0x100caf68 */
    II(0x100c3a4d, 0x2)   jmpd(0x100c3a57, 0x8);                /* jmp 0x100c3a57 */
l_0x100c3a4f:
    II(0x100c3a4f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3a52, 0x5)   calld(0x10076bf8, -0x4ce5f);          /* call 0x10076bf8 */
l_0x100c3a57:
    II(0x100c3a57, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3a59, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3a5c, 0x5)   calld(0x1013ad71, 0x77310);           /* call 0x1013ad71 */
    II(0x100c3a61, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c3a63, 0x2)   jzd(0x100c3a9e, 0x39);                /* jz 0x100c3a9e */
    II(0x100c3a65, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3a68, 0x5)   calld(0x1008a0f8, -0x39975);          /* call 0x1008a0f8 */
    II(0x100c3a6d, 0x5)   calld(0x1008a370, -0x39702);          /* call 0x1008a370 */
    II(0x100c3a72, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x100c3a77, 0x2)   jnzd(0x100c3a9c, 0x23);               /* jnz 0x100c3a9c */
    II(0x100c3a79, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3a7b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3a7e, 0x5)   calld(0x10075f6c, -0x4db17);          /* call 0x10075f6c */
    II(0x100c3a83, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3a85, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c3a88, 0x5)   calld(0x10088e0c, -0x3ac81);          /* call 0x10088e0c */
    II(0x100c3a8d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3a8f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3a92, 0x5)   calld(0x10088e4c, -0x3ac4b);          /* call 0x10088e4c */
    II(0x100c3a97, 0x5)   jmpd(0x100c3bf6, 0x15a);              /* jmp 0x100c3bf6 */
l_0x100c3a9c:
    II(0x100c3a9c, 0x2)   jmpd(0x100c3a4f, -0x4f);              /* jmp 0x100c3a4f */
l_0x100c3a9e:
    II(0x100c3a9e, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100c3aa3, 0x5)   calld(0x10076338, -0x4d770);          /* call 0x10076338 */
    II(0x100c3aa8, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100c3aab, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3aad, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c3aaf, 0x5)   calld(0x1007643c, -0x4d678);          /* call 0x1007643c */
    II(0x100c3ab4, 0x2)   jmpd(0x100c3abe, 0x8);                /* jmp 0x100c3abe */
l_0x100c3ab6:
    II(0x100c3ab6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3ab9, 0x5)   calld(0x10076bf8, -0x4cec6);          /* call 0x10076bf8 */
l_0x100c3abe:
    II(0x100c3abe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3ac0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3ac3, 0x5)   calld(0x1013ad71, 0x772a9);           /* call 0x1013ad71 */
    II(0x100c3ac8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c3aca, 0x6)   jzd(0x100c3bd8, 0x108);               /* jz dword 0x100c3bd8 */
    II(0x100c3ad0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3ad3, 0x5)   calld(0x100763a0, -0x4d738);          /* call 0x100763a0 */
    II(0x100c3ad8, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c3adb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3ade, 0x3)   cmp(dl, memb_a32(ds, eax + 0x26));    /* cmp dl, [eax+0x26] */
    II(0x100c3ae1, 0x2)   jnzd(0x100c3af2, 0xf);                /* jnz 0x100c3af2 */
    II(0x100c3ae3, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3ae6, 0x5)   calld(0x100763a0, -0x4d74b);          /* call 0x100763a0 */
    II(0x100c3aeb, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x100c3af0, 0x2)   jzd(0x100c3af4, 0x2);                 /* jz 0x100c3af4 */
l_0x100c3af2:
    II(0x100c3af2, 0x2)   jmpd(0x100c3b0c, 0x18);               /* jmp 0x100c3b0c */
l_0x100c3af4:
    II(0x100c3af4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3af7, 0x5)   calld(0x1007636c, -0x4d790);          /* call 0x1007636c */
    II(0x100c3afc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3afe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3b01, 0x5)   calld(0x100a601a, -0x1daec);          /* call 0x100a601a */
    II(0x100c3b06, 0x1)   cwde();                               /* cwde */
    II(0x100c3b07, 0x3)   cmp(eax, 0x1e);                       /* cmp eax, 0x1e */
    II(0x100c3b0a, 0x2)   jld(0x100c3b11, 0x5);                 /* jl 0x100c3b11 */
l_0x100c3b0c:
    II(0x100c3b0c, 0x5)   jmpd(0x100c3bd3, 0xc2);               /* jmp 0x100c3bd3 */
l_0x100c3b11:
    II(0x100c3b11, 0x5)   mov(eax, 0x15);                       /* mov eax, 0x15 */
    II(0x100c3b16, 0x5)   calld(sys_new, 0xa22e5);              /* call 0x10165e00 */
    II(0x100c3b1b, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100c3b1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100c3b21, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100c3b24, 0x4)   cmp(memd_a32(ss, ebp - 0x44), 0);     /* cmp dword [ebp-0x44], 0x0 */
    II(0x100c3b28, 0x2)   jzd(0x100c3b4d, 0x23);                /* jz 0x100c3b4d */
    II(0x100c3b2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3b2d, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c3b30, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3b33, 0x5)   calld(0x100763d4, -0x4d764);          /* call 0x100763d4 */
    II(0x100c3b38, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3b3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100c3b3d, 0x5)   calld(0x100b8bee, -0xaf54);           /* call 0x100b8bee */
    II(0x100c3b42, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x100c3b45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100c3b48, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100c3b4b, 0x2)   jmpd(0x100c3b53, 0x6);                /* jmp 0x100c3b53 */
l_0x100c3b4d:
    II(0x100c3b4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100c3b50, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
l_0x100c3b53:
    II(0x100c3b53, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4c));   /* mov edx, [ebp-0x4c] */
    II(0x100c3b56, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c3b59, 0x5)   calld(0x1008a2b4, -0x398aa);          /* call 0x1008a2b4 */
    II(0x100c3b5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3b61, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100c3b64, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c3b67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3b6a, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100c3b6d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c3b70, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100c3b73, 0x5)   calld(0x10076aac, -0x4d0cc);          /* call 0x10076aac */
    II(0x100c3b78, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3b7a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c3b7d, 0x5)   calld(0x1008a228, -0x3995a);          /* call 0x1008a228 */
    II(0x100c3b82, 0x5)   calld(0x100cb0b8, 0x7531);            /* call 0x100cb0b8 */
    II(0x100c3b87, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c3b8a, 0x5)   calld(0x1008a284, -0x3990b);          /* call 0x1008a284 */
    II(0x100c3b8f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3b91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3b94, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c3b97, 0x5)   calld(0x100cafd0, 0x7434);            /* call 0x100cafd0 */
    II(0x100c3b9c, 0x5)   mov(ebx, 0x1f00);                     /* mov ebx, 0x1f00 */
    II(0x100c3ba1, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c3ba4, 0x5)   calld(0x1008a284, -0x39925);          /* call 0x1008a284 */
    II(0x100c3ba9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c3bab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c3bae, 0x5)   calld(0x100bab5d, -0x9056);           /* call 0x100bab5d */
    II(0x100c3bb3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3bb5, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3bb8, 0x5)   calld(0x10075f6c, -0x4dc51);          /* call 0x10075f6c */
    II(0x100c3bbd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3bbf, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c3bc2, 0x5)   calld(0x10088e0c, -0x3adbb);          /* call 0x10088e0c */
    II(0x100c3bc7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3bc9, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3bcc, 0x5)   calld(0x10088e4c, -0x3ad85);          /* call 0x10088e4c */
    II(0x100c3bd1, 0x2)   jmpd(0x100c3bf6, 0x23);               /* jmp 0x100c3bf6 */
l_0x100c3bd3:
    II(0x100c3bd3, 0x5)   jmpd(0x100c3ab6, -0x122);             /* jmp 0x100c3ab6 */
l_0x100c3bd8:
    II(0x100c3bd8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3bda, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100c3bdd, 0x5)   calld(0x10075f6c, -0x4dc76);          /* call 0x10075f6c */
    II(0x100c3be2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3be4, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c3be7, 0x5)   calld(0x10088e0c, -0x3ade0);          /* call 0x10088e0c */
    II(0x100c3bec, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c3bee, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c3bf1, 0x5)   calld(0x10088e4c, -0x3adaa);          /* call 0x10088e4c */
l_0x100c3bf6:
    II(0x100c3bf6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c3bf8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c3bf9, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c3bfa, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c3bfb, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c3bfc, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100c3bfd, 0x1)   retd();                               /* ret */
FUNC_END

