FUNC_BEGIN(0x100ceffe, 0x64cb9ca1ebe2fc65, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0x4a, 0x6d, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x14, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x14, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd8, 0xe8, 0xf6, 0x8c, 0, 0, 0xe8, 0x22, 0x6f, 0x9, 0, 0x89, 0x45, 0xdc, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0x78, 0x18, 0, 0x74, 0x2a, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x18, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd0, 0xe8, 0xc3, 0x8c, 0, 0, 0xe8, 0xef, 0x6e, 0x9, 0, 0x89, 0x45, 0xd4, 0xeb, 0x7, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xb8, 0xd, 0, 0, 0, 0xe8, 0x75, 0x6d, 0x9, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x38, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x6, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x4, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x2, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe8, 0xe8, 0x15, 0x8b, 0, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xc8, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x14, 0xb8, 0xd, 0, 0, 0, 0xe8, 0x15, 0x6d, 0x9, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xf0, 0x83, 0x7d, 0xf0, 0, 0x74, 0x38, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x6, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x4, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x2, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0xe8, 0xb5, 0x8a, 0, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x18, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x14, 0xe8, 0x25, 0x8c, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x14, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x18, 0xe8, 0xa1, 0x8c, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ceffe, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x100cf003, 0x5)   calld(sys_check_available_stack_size, 0x96d4a); /* call 0x10165d52 */
    II(0x100cf008, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100cf009, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100cf00a, 0x1)   pushd(esi);                           /* push esi */
    II(0x100cf00b, 0x1)   pushd(edi);                           /* push edi */
    II(0x100cf00c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100cf00d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100cf00f, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x100cf015, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100cf018, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100cf01b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf01e, 0x4)   cmp(memd_a32(ds, eax + 0x14), 0);     /* cmp dword [eax+0x14], 0x0 */
    II(0x100cf022, 0x2)   jzd(0x100cf04e, 0x2a);                /* jz 0x100cf04e */
    II(0x100cf024, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf027, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x100cf02a, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100cf02d, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x100cf031, 0x2)   jzd(0x100cf047, 0x14);                /* jz 0x100cf047 */
    II(0x100cf033, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cf035, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100cf038, 0x5)   calld(my_dtor_d3, 0x8cf6);            /* call 0x100d7d33 */
    II(0x100cf03d, 0x5)   calld(sys_delete, 0x96f22);           /* call 0x10165f64 */
    II(0x100cf042, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100cf045, 0x2)   jmpd(0x100cf04e, 0x7);                /* jmp 0x100cf04e */
l_0x100cf047:
    II(0x100cf047, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
l_0x100cf04e:
    II(0x100cf04e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf051, 0x4)   cmp(memd_a32(ds, eax + 0x18), 0);     /* cmp dword [eax+0x18], 0x0 */
    II(0x100cf055, 0x2)   jzd(0x100cf081, 0x2a);                /* jz 0x100cf081 */
    II(0x100cf057, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf05a, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100cf05d, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100cf060, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x100cf064, 0x2)   jzd(0x100cf07a, 0x14);                /* jz 0x100cf07a */
    II(0x100cf066, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cf068, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100cf06b, 0x5)   calld(my_dtor_d3, 0x8cc3);            /* call 0x100d7d33 */
    II(0x100cf070, 0x5)   calld(sys_delete, 0x96eef);           /* call 0x10165f64 */
    II(0x100cf075, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100cf078, 0x2)   jmpd(0x100cf081, 0x7);                /* jmp 0x100cf081 */
l_0x100cf07a:
    II(0x100cf07a, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
l_0x100cf081:
    II(0x100cf081, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x100cf086, 0x5)   calld(sys_new, 0x96d75);              /* call 0x10165e00 */
    II(0x100cf08b, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100cf08e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100cf091, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100cf094, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x100cf098, 0x2)   jzd(0x100cf0d2, 0x38);                /* jz 0x100cf0d2 */
    II(0x100cf09a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf09d, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100cf0a0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100cf0a3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100cf0a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf0a7, 0x3)   mov(ecx, memd_a32(ds, eax + 0x6));    /* mov ecx, [eax+0x6] */
    II(0x100cf0aa, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100cf0ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf0b0, 0x3)   mov(ebx, memd_a32(ds, eax + 0x4));    /* mov ebx, [eax+0x4] */
    II(0x100cf0b3, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100cf0b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf0b9, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
    II(0x100cf0bc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100cf0bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100cf0c2, 0x5)   calld(0x100d7bdc, 0x8b15);            /* call 0x100d7bdc */
    II(0x100cf0c7, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100cf0ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100cf0cd, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100cf0d0, 0x2)   jmpd(0x100cf0d8, 0x6);                /* jmp 0x100cf0d8 */
l_0x100cf0d2:
    II(0x100cf0d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100cf0d5, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
l_0x100cf0d8:
    II(0x100cf0d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100cf0db, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100cf0de, 0x3)   mov(memd_a32(ds, edx + 0x14), eax);   /* mov [edx+0x14], eax */
    II(0x100cf0e1, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x100cf0e6, 0x5)   calld(sys_new, 0x96d15);              /* call 0x10165e00 */
    II(0x100cf0eb, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100cf0ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100cf0f1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100cf0f4, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x100cf0f8, 0x2)   jzd(0x100cf132, 0x38);                /* jz 0x100cf132 */
    II(0x100cf0fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf0fd, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100cf100, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100cf103, 0x1)   pushd(eax);                           /* push eax */
    II(0x100cf104, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf107, 0x3)   mov(ecx, memd_a32(ds, eax + 0x6));    /* mov ecx, [eax+0x6] */
    II(0x100cf10a, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100cf10d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf110, 0x3)   mov(ebx, memd_a32(ds, eax + 0x4));    /* mov ebx, [eax+0x4] */
    II(0x100cf113, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100cf116, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf119, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
    II(0x100cf11c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100cf11f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100cf122, 0x5)   calld(0x100d7bdc, 0x8ab5);            /* call 0x100d7bdc */
    II(0x100cf127, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100cf12a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100cf12d, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100cf130, 0x2)   jmpd(0x100cf138, 0x6);                /* jmp 0x100cf138 */
l_0x100cf132:
    II(0x100cf132, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cf135, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x100cf138:
    II(0x100cf138, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100cf13b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100cf13e, 0x3)   mov(memd_a32(ds, edx + 0x18), eax);   /* mov [edx+0x18], eax */
    II(0x100cf141, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100cf144, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf147, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x100cf14a, 0x5)   calld(0x100d7d74, 0x8c25);            /* call 0x100d7d74 */
    II(0x100cf14f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf152, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
//    II(0x100cf155, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cf158, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100cf15b, 0x5)   calld(0x100d7e01, 0x8ca1);            /* call 0x100d7e01 */
    II(0x100cf160, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100cf162, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100cf163, 0x1)   popd(edi);                            /* pop edi */
    II(0x100cf164, 0x1)   popd(esi);                            /* pop esi */
    II(0x100cf165, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100cf166, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100cf167, 0x1)   retd();                               /* ret */
FUNC_END

