FUNC_BEGIN(0x1010cca5, 0x8e28663fdda43379, 0x20, ({0x68, 0x6c, 0, 0, 0, 0xe8, 0xa3, 0x90, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x44, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x82, 0xd5, 0x5, 0, 0xe8, 0x49, 0x86, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0xba, 0xf4, 0x97, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x17, 0xbd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x14, 0, 0xf, 0x85, 0x83, 0, 0, 0, 0xc7, 0x45, 0xd8, 0x8, 0x98, 0x1b, 0x10, 0xb8, 0xd, 0, 0, 0, 0xe8, 0xf4, 0x90, 0x5, 0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x74, 0x44, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0x40, 0xc, 0x8b, 0x55, 0xd8, 0x66, 0x2b, 0x42, 0x4, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0x40, 0x8, 0x8b, 0x55, 0xd8, 0x66, 0x2b, 0x2, 0x40, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xd8, 0x8b, 0x58, 0x2, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xd8, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xd4, 0xe8, 0x88, 0xae, 0xfc, 0xff, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0xeb, 0x6, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x8b, 0x55, 0xfc, 0x89, 0x42, 0x14, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x14, 0xe8, 0xf6, 0xaf, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x14, 0xe8, 0xde, 0xb1, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x94, 0x97, 0x1b, 0x10, 0xa3, 0x18, 0x98, 0x1b, 0x10, 0xe8, 0x6e, 0x85, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0xba, 0x8, 0x98, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x3c, 0xbc, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1c, 0xe8, 0x93, 0xb1, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x34, 0x97, 0x1b, 0x10, 0xa3, 0x2c, 0x98, 0x1b, 0x10, 0xe8, 0x23, 0x85, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x38, 0x85, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0x2, 0, 0, 0, 0xba, 0x1c, 0x98, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0xed, 0xbb, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0xc, 0, 0, 0, 0xff, 0x4d, 0xe8, 0x66, 0x83, 0x7d, 0xe8, 0xff, 0x74, 0x26, 0xe8, 0xb6, 0x83, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xcd, 0x83, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x20, 0xe8, 0x2f, 0x2c, 0xfc, 0xff, 0xeb, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x18, 0, 0x74, 0x44, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xe8, 0x4, 0xb1, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xc4, 0xe8, 0xb2, 0xae, 0xfc, 0xff, 0xe8, 0xde, 0x90, 0x5, 0, 0x89, 0x45, 0xc0, 0xeb, 0x7, 0xc7, 0x45, 0xc0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x18, 0, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0xa, 0xc1, 0xfa, 0x10, 0xbb, 0x6, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x18, 0x66, 0x8b, 0x80, 0x30, 0x98, 0x1b, 0x10, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x18, 0x66, 0x8b, 0x80, 0x32, 0x98, 0x1b, 0x10, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x18, 0x66, 0x8b, 0x80, 0x34, 0x98, 0x1b, 0x10, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x18, 0x66, 0x8b, 0x80, 0x36, 0x98, 0x1b, 0x10, 0x89, 0x45, 0xf0, 0xb8, 0xd, 0, 0, 0, 0xe8, 0xfe, 0x8e, 0x5, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x2e, 0x8b, 0x45, 0xf0, 0x2b, 0x45, 0xf4, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xec, 0x2b, 0x45, 0xf8, 0x40, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xe4, 0xe8, 0xa8, 0xac, 0xfc, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xbc, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x8b, 0x55, 0xfc, 0x89, 0x42, 0x18, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xe8, 0x16, 0xae, 0xfc, 0xff, 0x6a, 0x1, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0xf, 0xbf, 0x4d, 0xf4, 0xf, 0xbf, 0x5d, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x50, 0xe, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x16, 0xe8, 0x2, 0xd7, 0x5, 0, 0x6a, 0x1, 0xf, 0xbf, 0x45, 0xf0, 0x48, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x48, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x8d, 0x48, 0x1, 0xf, 0xbf, 0x5d, 0xf8, 0x43, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x50, 0xe, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x16, 0xe8, 0xd0, 0xd6, 0x5, 0, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x12, 0xe8, 0xbb, 0xa4, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010cca5, 0x5)   pushd(0x6c);                          /* push dword 0x6c */
    II(0x1010ccaa, 0x5)   calld(sys_check_available_stack_size, 0x590a3); /* call 0x10165d52 */
    II(0x1010ccaf, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010ccb0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010ccb1, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010ccb2, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010ccb3, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010ccb4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010ccb5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010ccb7, 0x6)   sub(esp, 0x44);                       /* sub esp, 0x44 */
    II(0x1010ccbd, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010ccc0, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1010ccc5, 0x5)   calld(/* sys */ 0x1016a24c, 0x5d582); /* call 0x1016a24c */
    II(0x1010ccca, 0x5)   calld(0x10115318, 0x8649);            /* call 0x10115318 */
    II(0x1010cccf, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010ccd4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010ccd5, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010ccda, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1010ccdf, 0x5)   mov(edx, 0x101b97f4);                 /* mov edx, 0x101b97f4 */
    II(0x1010cce4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cce7, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010cce9, 0x5)   calld(0x10108a05, -0x42e9);           /* call 0x10108a05 */
    II(0x1010ccee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ccf1, 0x4)   cmp(memd_a32(ds, eax + 0x14), 0);     /* cmp dword [eax+0x14], 0x0 */
    II(0x1010ccf5, 0x6)   jnzd(0x1010cd7e, 0x83);               /* jnz dword 0x1010cd7e */
    II(0x1010ccfb, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0x101b9808); /* mov dword [ebp-0x28], 0x101b9808 */
    II(0x1010cd02, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x1010cd07, 0x5)   calld(sys_new, 0x590f4);              /* call 0x10165e00 */
    II(0x1010cd0c, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x1010cd0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1010cd12, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1010cd15, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x1010cd19, 0x2)   jzd(0x1010cd5f, 0x44);                /* jz 0x1010cd5f */
    II(0x1010cd1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010cd1e, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x1010cd22, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x1010cd25, 0x4)   sub(ax, memw_a32(ds, edx + 0x4));     /* sub ax, [edx+0x4] */
    II(0x1010cd29, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010cd2a, 0x1)   cwde();                               /* cwde */
    II(0x1010cd2b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010cd2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010cd2f, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1010cd33, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x1010cd36, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x1010cd39, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010cd3a, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1010cd3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010cd40, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1010cd43, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1010cd46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010cd49, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1010cd4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1010cd4f, 0x5)   calld(0x100d7bdc, -0x35178);          /* call 0x100d7bdc */
    II(0x1010cd54, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x1010cd57, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1010cd5a, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1010cd5d, 0x2)   jmpd(0x1010cd65, 0x6);                /* jmp 0x1010cd65 */
l_0x1010cd5f:
    II(0x1010cd5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1010cd62, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
l_0x1010cd65:
    II(0x1010cd65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1010cd68, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1010cd6b, 0x3)   mov(memd_a32(ds, edx + 0x14), eax);   /* mov [edx+0x14], eax */
    II(0x1010cd6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cd71, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x1010cd73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cd76, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010cd79, 0x5)   calld(0x100d7d74, -0x3500a);          /* call 0x100d7d74 */
l_0x1010cd7e:
    II(0x1010cd7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cd81, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x1010cd83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cd86, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010cd89, 0x5)   calld(0x100d7f6c, -0x34e22);          /* call 0x100d7f6c */
    II(0x1010cd8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cd91, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x1010cd94, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010cd97, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010cd9a, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b9794)); /* mov eax, [eax+0x101b9794] */
    II(0x1010cda0, 0x5)   mov(memd_a32(ds, 0x101b9818), eax);   /* mov [0x101b9818], eax */
    II(0x1010cda5, 0x5)   calld(0x10115318, 0x856e);            /* call 0x10115318 */
    II(0x1010cdaa, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010cdaf, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010cdb0, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010cdb5, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1010cdba, 0x5)   mov(edx, 0x101b9808);                 /* mov edx, 0x101b9808 */
    II(0x1010cdbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cdc2, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010cdc4, 0x5)   calld(0x10108a05, -0x43c4);           /* call 0x10108a05 */
    II(0x1010cdc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cdcc, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x1010cdce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cdd1, 0x3)   mov(eax, memd_a32(ds, eax + 0x1c));   /* mov eax, [eax+0x1c] */
    II(0x1010cdd4, 0x5)   calld(0x100d7f6c, -0x34e6d);          /* call 0x100d7f6c */
    II(0x1010cdd9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cddc, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x1010cddf, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010cde2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010cde5, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b9734)); /* mov eax, [eax+0x101b9734] */
    II(0x1010cdeb, 0x5)   mov(memd_a32(ds, 0x101b982c), eax);   /* mov [0x101b982c], eax */
    II(0x1010cdf0, 0x5)   calld(0x10115318, 0x8523);            /* call 0x10115318 */
    II(0x1010cdf5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010cdfa, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010cdfb, 0x5)   calld(0x10115338, 0x8538);            /* call 0x10115338 */
    II(0x1010ce00, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010ce02, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x1010ce04, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1010ce09, 0x5)   mov(edx, 0x101b981c);                 /* mov edx, 0x101b981c */
    II(0x1010ce0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ce11, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010ce13, 0x5)   calld(0x10108a05, -0x4413);           /* call 0x10108a05 */
    II(0x1010ce18, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0xc);   /* mov dword [ebp-0x18], 0xc */
l_0x1010ce1f:
    II(0x1010ce1f, 0x3)   dec(memd_a32(ss, ebp - 0x18));        /* dec dword [ebp-0x18] */
    II(0x1010ce22, 0x5)   cmp(memw_a32(ss, ebp - 0x18), -0x1 /* 0xff */); /* cmp word [ebp-0x18], 0xff */
    II(0x1010ce27, 0x2)   jzd(0x1010ce4f, 0x26);                /* jz 0x1010ce4f */
    II(0x1010ce29, 0x5)   calld(0x100d51e4, -0x37c4a);          /* call 0x100d51e4 */
    II(0x1010ce2e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010ce30, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1010ce32, 0x5)   calld(0x100d5204, -0x37c33);          /* call 0x100d5204 */
    II(0x1010ce37, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010ce39, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1010ce3b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1010ce3f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010ce42, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010ce45, 0x3)   mov(eax, memd_a32(ds, eax + 0x20));   /* mov eax, [eax+0x20] */
    II(0x1010ce48, 0x5)   calld(0x100cfa7c, -0x3d3d1);          /* call 0x100cfa7c */
    II(0x1010ce4d, 0x2)   jmpd(0x1010ce1f, -0x30);              /* jmp 0x1010ce1f */
l_0x1010ce4f:
    II(0x1010ce4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ce52, 0x4)   cmp(memd_a32(ds, eax + 0x18), 0);     /* cmp dword [eax+0x18], 0x0 */
    II(0x1010ce56, 0x2)   jzd(0x1010ce9c, 0x44);                /* jz 0x1010ce9c */
    II(0x1010ce58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ce5b, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x1010ce5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ce60, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1010ce63, 0x5)   calld(0x100d7f6c, -0x34efc);          /* call 0x100d7f6c */
    II(0x1010ce68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ce6b, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1010ce6e, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1010ce71, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x1010ce75, 0x2)   jzd(0x1010ce8b, 0x14);                /* jz 0x1010ce8b */
    II(0x1010ce77, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010ce79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1010ce7c, 0x5)   calld(my_dtor_d3, -0x3514e);          /* call 0x100d7d33 */
    II(0x1010ce81, 0x5)   calld(sys_delete, 0x590de);           /* call 0x10165f64 */
    II(0x1010ce86, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1010ce89, 0x2)   jmpd(0x1010ce92, 0x7);                /* jmp 0x1010ce92 */
l_0x1010ce8b:
    II(0x1010ce8b, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0);     /* mov dword [ebp-0x40], 0x0 */
l_0x1010ce92:
    II(0x1010ce92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010ce95, 0x7)   mov(memd_a32(ds, eax + 0x18), 0);     /* mov dword [eax+0x18], 0x0 */
l_0x1010ce9c:
    II(0x1010ce9c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1010ce9f, 0x3)   mov(edx, memd_a32(ds, edx + 0xa));    /* mov edx, [edx+0xa] */
    II(0x1010cea2, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1010cea5, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x1010ceaa, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1010ceac, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1010ceaf, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1010ceb1, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x1010ceb4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1010ceb8, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x1010cebb, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b9830)); /* mov ax, [eax+0x101b9830] */
    II(0x1010cec2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010cec5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1010cec9, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x1010cecc, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b9832)); /* mov ax, [eax+0x101b9832] */
    II(0x1010ced3, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1010ced6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1010ceda, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x1010cedd, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b9834)); /* mov ax, [eax+0x101b9834] */
    II(0x1010cee4, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1010cee7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1010ceeb, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x1010ceee, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b9836)); /* mov ax, [eax+0x101b9836] */
    II(0x1010cef5, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010cef8, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x1010cefd, 0x5)   calld(sys_new, 0x58efe);              /* call 0x10165e00 */
    II(0x1010cf02, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x1010cf05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1010cf08, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1010cf0b, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x1010cf0f, 0x2)   jzd(0x1010cf3f, 0x2e);                /* jz 0x1010cf3f */
    II(0x1010cf11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010cf14, 0x3)   sub(eax, memd_a32(ss, ebp - 0xc));    /* sub eax, [ebp-0xc] */
    II(0x1010cf17, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010cf18, 0x1)   cwde();                               /* cwde */
    II(0x1010cf19, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010cf1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1010cf1d, 0x3)   sub(eax, memd_a32(ss, ebp - 0x8));    /* sub eax, [ebp-0x8] */
    II(0x1010cf20, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010cf21, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1010cf24, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1010cf28, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1010cf2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1010cf2f, 0x5)   calld(0x100d7bdc, -0x35358);          /* call 0x100d7bdc */
    II(0x1010cf34, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1010cf37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010cf3a, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x1010cf3d, 0x2)   jmpd(0x1010cf45, 0x6);                /* jmp 0x1010cf45 */
l_0x1010cf3f:
    II(0x1010cf3f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1010cf42, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x1010cf45:
    II(0x1010cf45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1010cf48, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1010cf4b, 0x3)   mov(memd_a32(ds, edx + 0x18), eax);   /* mov [edx+0x18], eax */
    II(0x1010cf4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cf51, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x1010cf53, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cf56, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1010cf59, 0x5)   calld(0x100d7d74, -0x351ea);          /* call 0x100d7d74 */
    II(0x1010cf5e, 0x2)   pushd(0x1);                           /* push 0x1 */
    II(0x1010cf60, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1010cf64, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010cf65, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1010cf69, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010cf6a, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x1010cf6e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x1010cf72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cf75, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010cf77, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x1010cf7a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1010cf7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cf80, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010cf82, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1010cf85, 0x5)   calld(/* sys */ 0x1016a68c, 0x5d702); /* call 0x1016a68c */
    II(0x1010cf8a, 0x2)   pushd(0x1);                           /* push 0x1 */
    II(0x1010cf8c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1010cf90, 0x1)   dec(eax);                             /* dec eax */
    II(0x1010cf91, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010cf92, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1010cf96, 0x1)   dec(eax);                             /* dec eax */
    II(0x1010cf97, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010cf98, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010cf9c, 0x3)   lea(ecx, eax + 0x1);                  /* lea ecx, [eax+0x1] */
    II(0x1010cf9f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x1010cfa3, 0x1)   inc(ebx);                             /* inc ebx */
    II(0x1010cfa4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cfa7, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010cfa9, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x1010cfac, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1010cfaf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cfb2, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010cfb4, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1010cfb7, 0x5)   calld(/* sys */ 0x1016a68c, 0x5d6d0); /* call 0x1016a68c */
    II(0x1010cfbc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010cfbf, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010cfc1, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1010cfc4, 0x5)   calld(sys_display_draw_0, 0x5a4bb);   /* call 0x10167484 */
    II(0x1010cfc9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010cfcb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010cfcc, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010cfcd, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010cfce, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010cfcf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010cfd0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010cfd1, 0x1)   retd();                               /* ret */
FUNC_END

