FUNC_BEGIN(0x100a284c, 0x96ef162fef0c22e4, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xfc, 0x34, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0x54, 0x4f, 0x1b, 0x10, 0x66, 0xff, 0xd, 0xb6, 0x31, 0x1c, 0x10, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xf, 0xe8, 0xf5, 0x62, 0xfe, 0xff, 0x83, 0xe8, 0xf, 0x89, 0x45, 0xf8, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x8d, 0x82, 0x9, 0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a284c, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100a2851, 0x5)   calld(sys_check_available_stack_size, 0xc34fc); /* call 0x10165d52 */
    II(0x100a2856, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a2857, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a2858, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a2859, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a285a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a285b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a285d, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100a2863, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a2866, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100a2869, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a286c, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b4f54); /* mov dword [eax+0x2], 0x101b4f54 */
    II(0x100a2873, 0x7)   dec(memw_a32(ds, 0x101c31b6));        /* dec word [0x101c31b6] */
    II(0x100a287a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a287c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a287f, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a2882, 0x5)   calld(0x10088b7c, -0x19d0b);          /* call 0x10088b7c */
    II(0x100a2887, 0x3)   sub(eax, 0xf);                        /* sub eax, 0xf */
    II(0x100a288a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a288d, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
//    II(0x100a2892, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a2895, 0x5)   calld(0x1013ab27, 0x9828d);           /* call 0x1013ab27 */
    II(0x100a289a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x100a289d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a28a0, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a28a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a28a6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a28a8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a28a9, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a28aa, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a28ab, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a28ac, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a28ad, 0x1)   retd();                               /* ret */
FUNC_END

