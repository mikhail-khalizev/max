FUNC_BEGIN(0x1015a76f, 0x264d107e20922d4a, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xd9, 0xb5, 0, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe8, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xf0, 0x9c, 0xf9, 0xff, 0x8b, 0x45, 0xe8, 0x66, 0x8b, 0x40, 0x41, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xe8, 0x66, 0x8b, 0x40, 0x43, 0x89, 0x45, 0xf4, 0x8d, 0x5d, 0xf4, 0x8d, 0x55, 0xf0, 0x8b, 0x45, 0xe8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0x35, 0xf9, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x25, 0xe8, 0x33, 0x2, 0xf7, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x48, 0x2, 0xf7, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x2, 0, 0, 0, 0xb8, 0x2, 0x27, 0x1b, 0x10, 0xe8, 0x38, 0xb5, 0xfb, 0xff, 0xeb, 0x76, 0xbb, 0x19, 0, 0, 0, 0xba, 0x4, 0, 0, 0, 0x8b, 0x45, 0xe8, 0xe8, 0x97, 0x87, 0, 0, 0x8b, 0x45, 0xe8, 0x50, 0x8b, 0x45, 0xe8, 0x8b, 0x40, 0x41, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xe8, 0x8b, 0x48, 0x3f, 0xc1, 0xf9, 0x10, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd8, 0xba, 0xf, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x7d, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0xb8, 0xc0, 0x37, 0x1c, 0x10, 0xe8, 0xdf, 0x3, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe9, 0xb6, 0xf1, 0xff, 0xe8, 0xb8, 0x1, 0xf7, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xcd, 0x1, 0xf7, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x2e, 0x27, 0x1b, 0x10, 0xe8, 0xc0, 0xb4, 0xfb, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1015a76f, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x1015a774, 0x5)   calld(sys_check_available_stack_size, 0xb5d9); /* call 0x10165d52 */
    II(0x1015a779, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015a77a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015a77b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015a77c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015a77d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015a77e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015a780, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x1015a786, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1015a789, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1015a78c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015a78f, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1015a792, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015a797, 0x5)   calld(0x100f448c, -0x66310);          /* call 0x100f448c */
    II(0x1015a79c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015a79f, 0x4)   mov(ax, memw_a32(ds, eax + 0x41));    /* mov ax, [eax+0x41] */
    II(0x1015a7a3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1015a7a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015a7a9, 0x4)   mov(ax, memw_a32(ds, eax + 0x43));    /* mov ax, [eax+0x43] */
    II(0x1015a7ad, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015a7b0, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x1015a7b3, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1015a7b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015a7b9, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015a7bc, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015a7be, 0x1)   cwde();                               /* cwde */
    II(0x1015a7bf, 0x5)   calld(0x1015a0f9, -0x6cb);            /* call 0x1015a0f9 */
    II(0x1015a7c4, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015a7c6, 0x2)   jnzd(0x1015a7ed, 0x25);               /* jnz 0x1015a7ed */
    II(0x1015a7c8, 0x5)   calld(0x100caa00, -0x8fdcd);          /* call 0x100caa00 */
    II(0x1015a7cd, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015a7d2, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a7d3, 0x5)   calld(0x100caa20, -0x8fdb8);          /* call 0x100caa20 */
    II(0x1015a7d8, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1015a7da, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015a7dc, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x1015a7e1, 0x5)   mov(eax, 0x101b2702);                 /* mov eax, 0x101b2702 */ /* "Need a location to put the power generator." */
    II(0x1015a7e6, 0x5)   calld(0x10115d23, -0x44ac8);          /* call 0x10115d23 */
    II(0x1015a7eb, 0x2)   jmpd(0x1015a863, 0x76);               /* jmp 0x1015a863 */
l_0x1015a7ed:
    II(0x1015a7ed, 0x5)   mov(ebx, 0x19);                       /* mov ebx, 0x19 */
    II(0x1015a7f2, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x1015a7f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015a7fa, 0x5)   calld(0x10162f96, 0x8797);            /* call 0x10162f96 */
    II(0x1015a7ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015a802, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a803, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015a806, 0x3)   mov(eax, memd_a32(ds, eax + 0x41));   /* mov eax, [eax+0x41] */
    II(0x1015a809, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015a80c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a80d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015a810, 0x3)   mov(ecx, memd_a32(ds, eax + 0x3f));   /* mov ecx, [eax+0x3f] */
    II(0x1015a813, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1015a816, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015a818, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1015a81d, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015a820, 0x5)   mov(edx, 0xf);                        /* mov edx, 0xf */
    II(0x1015a825, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1015a828, 0x5)   calld(0x1015a6aa, -0x183);            /* call 0x1015a6aa */
    II(0x1015a82d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015a82f, 0x5)   mov(eax, 0x101c37c0);                 /* mov eax, 0x101c37c0 */
    II(0x1015a834, 0x5)   calld(0x1008ac18, -0xcfc21);          /* call 0x1008ac18 */
    II(0x1015a839, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015a83b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1015a83e, 0x5)   calld(0x10075f2c, -0xe4917);          /* call 0x10075f2c */
    II(0x1015a843, 0x5)   calld(0x100caa00, -0x8fe48);          /* call 0x100caa00 */
    II(0x1015a848, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015a84d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015a84e, 0x5)   calld(0x100caa20, -0x8fe33);          /* call 0x100caa20 */
    II(0x1015a853, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1015a855, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015a857, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015a859, 0x5)   mov(eax, 0x101b272e);                 /* mov eax, 0x101b272e */ /* "Click inside tape to begin transformation." */
    II(0x1015a85e, 0x5)   calld(0x10115d23, -0x44b40);          /* call 0x10115d23 */
l_0x1015a863:
    II(0x1015a863, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015a865, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015a866, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015a867, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015a868, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015a869, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015a86a, 0x1)   retd();                               /* ret */
FUNC_END

