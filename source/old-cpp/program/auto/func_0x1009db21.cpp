FUNC_BEGIN(0x1009db21, 0x1f3d89591295c7a5, 0x20, ({0x68, 0x9c, 0, 0, 0, 0xe8, 0x27, 0x82, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x74, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xb8, 0xe8, 0xac, 0x8f, 0xfd, 0xff, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xa8, 0xe8, 0xe6, 0xd5, 0xfe, 0xff, 0x8d, 0x45, 0xbc, 0xe8, 0x86, 0x8f, 0xfd, 0xff, 0x8d, 0x45, 0xc0, 0xe8, 0x7e, 0x8f, 0xfd, 0xff, 0x8d, 0x55, 0xc4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1b, 0xe8, 0x4, 0x25, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xb8, 0xe8, 0xba, 0xaf, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x25, 0x2b, 0x45, 0xba, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x23, 0x2b, 0x45, 0xb8, 0x98, 0xe8, 0x7a, 0xe7, 0xb, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x23, 0x1, 0xc2, 0x8d, 0x45, 0xbc, 0xe8, 0x66, 0xaf, 0xfe, 0xff, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xc0, 0xe8, 0x5b, 0xaf, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1f, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xbc, 0xe8, 0x9b, 0xd5, 0xfe, 0xff, 0xff, 0x4d, 0xec, 0x66, 0x83, 0x7d, 0xec, 0xff, 0x74, 0xf, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xa8, 0xe8, 0xb0, 0xa6, 0x6, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x36, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0, 0x75, 0x2b, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x3, 0, 0, 0, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xc8, 0xe8, 0x22, 0x82, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x6d, 0xcf, 0xfe, 0xff, 0xe8, 0xa5, 0xb4, 0, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x26, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xcc, 0xe8, 0xfd, 0x81, 0xfd, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x5c, 0x89, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x51, 0x3, 0, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x26, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xc0, 0xe8, 0xb5, 0xae, 0xfe, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xbc, 0xe8, 0xff, 0xd4, 0xfe, 0xff, 0xe9, 0x5f, 0xff, 0xff, 0xff, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xd0, 0xe8, 0x46, 0x88, 0xfd, 0xff, 0x89, 0x45, 0xd4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xac, 0x88, 0xfd, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x18, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x60, 0x86, 0xfd, 0xff, 0x8d, 0x5d, 0xd0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x58, 0x87, 0xfd, 0xff, 0xeb, 0x16, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x48, 0x86, 0xfd, 0xff, 0x8d, 0x5d, 0xd0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x40, 0x87, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd0, 0xe8, 0xf2, 0x8e, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x61, 0xd0, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0x9, 0x2, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x80, 0x86, 0xfd, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x14, 0x8d, 0x45, 0xd0, 0xe8, 0x66, 0x86, 0xfd, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x1f, 0x8d, 0x45, 0xd0, 0xe8, 0x50, 0x86, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x17, 0x88, 0xfd, 0xff, 0x66, 0x8b, 0x52, 0x8, 0x66, 0x3b, 0x50, 0x8, 0x74, 0x2, 0xeb, 0x19, 0x8d, 0x45, 0xd0, 0xe8, 0x97, 0x86, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x6e, 0xd7, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0x95, 0x1, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x11, 0x86, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0, 0x74, 0xe, 0x8d, 0x45, 0xd0, 0xe8, 0x3, 0x86, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0xc, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xd0, 0xe8, 0xf3, 0x85, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xd0, 0xe8, 0xe3, 0x85, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0x1b, 0x75, 0x3e, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0xa4, 0xe8, 0x96, 0x80, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xf5, 0x87, 0xfd, 0xff, 0xe8, 0xc1, 0x2e, 0xfd, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0xa0, 0xe8, 0x77, 0x80, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0xdd, 0x85, 0xfd, 0xff, 0xe8, 0xa5, 0x2e, 0xfd, 0xff, 0x66, 0x39, 0xc3, 0x7f, 0x5, 0xe9, 0x16, 0x1, 0, 0, 0xc6, 0x45, 0xf4, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x8e, 0x85, 0xfd, 0xff, 0xe8, 0x95, 0x48, 0xb, 0, 0x85, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x4e, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0xb, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xd0, 0xe8, 0x6e, 0x85, 0xfd, 0xff, 0xe8, 0x75, 0x48, 0xb, 0, 0xe8, 0x88, 0x4d, 0, 0, 0x98, 0x85, 0xc0, 0x7e, 0x2e, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x28, 0x87, 0xfd, 0xff, 0xe8, 0x5b, 0x48, 0xb, 0, 0x89, 0x45, 0x9c, 0x8b, 0x45, 0x9c, 0x8b, 0x58, 0x2, 0x8d, 0x45, 0xd0, 0xe8, 0x72, 0x85, 0xfd, 0xff, 0x8b, 0x4d, 0x9c, 0x89, 0xc2, 0x89, 0xc8, 0xff, 0x53, 0x4, 0x88, 0x45, 0xf4, 0x80, 0x7d, 0xf4, 0, 0xf, 0x84, 0xa3, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x13, 0x8d, 0x45, 0x98, 0xe8, 0xe1, 0x87, 0xfd, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0x79, 0x85, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x94, 0x87, 0xfd, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xcd, 0x86, 0xfd, 0xff, 0xe8, 0xd1, 0x49, 0xb, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1b, 0x89, 0x45, 0x94, 0x8b, 0x5d, 0x94, 0x8b, 0x5b, 0x2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xa, 0x87, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0x94, 0xff, 0x53, 0x2c, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x98, 0x86, 0xfd, 0xff, 0xe8, 0xc, 0x49, 0xb, 0, 0x31, 0xdb, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0x98, 0xe8, 0x86, 0x86, 0xfd, 0xff, 0xe8, 0x6f, 0x4a, 0xb, 0, 0xe8, 0xa4, 0xc8, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x45, 0x98, 0xe8, 0xcc, 0x86, 0xfd, 0xff, 0xb9, 0x80, 0x31, 0x1c, 0x10, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x9a, 0x74, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0x98, 0xe8, 0x10, 0x80, 0xfd, 0xff, 0xe9, 0xdd, 0xfd, 0xff, 0xff, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xd5, 0x7e, 0xc, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x53, 0xb8, 0x75, 0xe0, 0x9, 0x10, 0x50, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0xdc, 0xe8, 0x19, 0x7f, 0xfd, 0xff, 0x50, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0, 0x74, 0x6, 0xc6, 0x45, 0x90, 0, 0xeb, 0x4, 0xc6, 0x45, 0x90, 0x3, 0x8b, 0x45, 0x8d, 0xc1, 0xf8, 0x18, 0x50, 0x31, 0xc9, 0x8b, 0x5d, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x5a, 0x86, 0xfd, 0xff, 0x8b, 0x75, 0xe8, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x9e, 0xe2, 0, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0x8c, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0x8c, 0x8b, 0x55, 0x8c, 0x8d, 0x45, 0xd8, 0xe8, 0xc2, 0xd0, 0xfe, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0xde, 0xcf, 0xfe, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x9e, 0x6d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xc0, 0xab, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xa6, 0x7f, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1009db21, 0x5)   pushd(0x9c);                          /* push dword 0x9c */
    II(0x1009db26, 0x5)   calld(sys_check_available_stack_size, 0xc8227); /* call 0x10165d52 */
    II(0x1009db2b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009db2c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009db2d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1009db2e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009db2f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009db30, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009db31, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009db33, 0x6)   sub(esp, 0x74);                       /* sub esp, 0x74 */
    II(0x1009db39, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1009db3c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1009db3f, 0x5)   calld(my_ctor_0x101b4184, -0x27054);  /* call 0x10076af0 */
    II(0x1009db44, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x1009db49, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009db4c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009db4d, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x1009db53, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x1009db56, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1009db58, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009db5a, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x1009db5d, 0x5)   calld(0x1008b148, -0x12a1a);          /* call 0x1008b148 */
    II(0x1009db62, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1009db65, 0x5)   calld(my_ctor_0x101b4184, -0x2707a);  /* call 0x10076af0 */
    II(0x1009db6a, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1009db6d, 0x5)   calld(my_ctor_0x101b4184, -0x27082);  /* call 0x10076af0 */
    II(0x1009db72, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x1009db75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009db78, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x1009db7b, 0x5)   calld(0x100a0084, 0x2504);            /* call 0x100a0084 */
    II(0x1009db80, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009db82, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1009db85, 0x5)   calld(0x10088b44, -0x15046);          /* call 0x10088b44 */
    II(0x1009db8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009db8d, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009db90, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009db93, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009db96, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009db99, 0x4)   mov(ax, memw_a32(ds, eax + 0x25));    /* mov ax, [eax+0x25] */
    II(0x1009db9d, 0x3)   sub(eax, memd_a32(ss, ebp - 0x46));   /* sub eax, [ebp-0x46] */
    II(0x1009dba0, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1009dba3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dba6, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009dba9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009dbac, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009dbaf, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1009dbb2, 0x4)   mov(ax, memw_a32(ds, eax + 0x23));    /* mov ax, [eax+0x23] */
    II(0x1009dbb6, 0x3)   sub(eax, memd_a32(ss, ebp - 0x48));   /* sub eax, [ebp-0x48] */
    II(0x1009dbb9, 0x1)   cwde();                               /* cwde */
    II(0x1009dbba, 0x5)   calld(0x1015c339, 0xbe77a);           /* call 0x1015c339 */
    II(0x1009dbbf, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1009dbc2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dbc5, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1009dbc8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009dbcb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009dbce, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009dbd1, 0x3)   add(edx, 0x23);                       /* add edx, 0x23 */
    II(0x1009dbd4, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009dbd6, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1009dbd9, 0x5)   calld(0x10088b44, -0x1509a);          /* call 0x10088b44 */
    II(0x1009dbde, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1009dbe1, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1009dbe4, 0x5)   calld(0x10088b44, -0x150a5);          /* call 0x10088b44 */
    II(0x1009dbe9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dbec, 0x4)   mov(ax, memw_a32(ds, eax + 0x1f));    /* mov ax, [eax+0x1f] */
    II(0x1009dbf0, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1009dbf3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1009dbf7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009dbfa, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1009dbff, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009dc01, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1009dc04, 0x5)   calld(0x1008b1a4, -0x12a65);          /* call 0x1008b1a4 */
l_0x1009dc09:
    II(0x1009dc09, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
    II(0x1009dc0c, 0x5)   cmp(memw_a32(ss, ebp - 0x14), -0x1 /* 0xff */); /* cmp word [ebp-0x14], 0xff */
    II(0x1009dc11, 0x2)   jzd(0x1009dc22, 0xf);                 /* jz 0x1009dc22 */
    II(0x1009dc13, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1009dc16, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x1009dc19, 0x5)   calld(0x101082ce, 0x6a6b0);           /* call 0x101082ce */
    II(0x1009dc1e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009dc20, 0x2)   jnzd(0x1009dc24, 0x2);                /* jnz 0x1009dc24 */
l_0x1009dc22:
    II(0x1009dc22, 0x2)   jmpd(0x1009dc5a, 0x36);               /* jmp 0x1009dc5a */
l_0x1009dc24:
    II(0x1009dc24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dc27, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0);     /* cmp byte [eax+0x3e], 0x0 */
    II(0x1009dc2b, 0x2)   jnzd(0x1009dc58, 0x2b);               /* jnz 0x1009dc58 */
    II(0x1009dc2d, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1009dc32, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x1009dc37, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1009dc3a, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1009dc3d, 0x5)   calld(0x10075e64, -0x27dde);          /* call 0x10075e64 */
    II(0x1009dc42, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009dc44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dc47, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009dc4a, 0x5)   calld(0x1008abbc, -0x13093);          /* call 0x1008abbc */
    II(0x1009dc4f, 0x5)   calld(0x100a90f9, 0xb4a5);            /* call 0x100a90f9 */
    II(0x1009dc54, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009dc56, 0x2)   jnzd(0x1009dc5a, 0x2);                /* jnz 0x1009dc5a */
l_0x1009dc58:
    II(0x1009dc58, 0x2)   jmpd(0x1009dc5c, 0x2);                /* jmp 0x1009dc5c */
l_0x1009dc5a:
    II(0x1009dc5a, 0x2)   jmpd(0x1009dc82, 0x26);               /* jmp 0x1009dc82 */
l_0x1009dc5c:
    II(0x1009dc5c, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1009dc5f, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1009dc62, 0x5)   calld(0x10075e64, -0x27e03);          /* call 0x10075e64 */
    II(0x1009dc67, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1009dc69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dc6c, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009dc6f, 0x5)   calld(0x100765d0, -0x276a4);          /* call 0x100765d0 */
    II(0x1009dc74, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009dc76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dc79, 0x5)   calld(0x1009dfcf, 0x351);             /* call 0x1009dfcf */
    II(0x1009dc7e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009dc80, 0x2)   jnzd(0x1009dc84, 0x2);                /* jnz 0x1009dc84 */
l_0x1009dc82:
    II(0x1009dc82, 0x2)   jmpd(0x1009dcaa, 0x26);               /* jmp 0x1009dcaa */
l_0x1009dc84:
    II(0x1009dc84, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1009dc87, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1009dc8a, 0x5)   calld(0x10088b44, -0x1514b);          /* call 0x10088b44 */
    II(0x1009dc8f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1009dc93, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009dc96, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1009dc9b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1009dc9d, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1009dca0, 0x5)   calld(0x1008b1a4, -0x12b01);          /* call 0x1008b1a4 */
    II(0x1009dca5, 0x5)   jmpd(0x1009dc09, -0xa1);              /* jmp 0x1009dc09 */
l_0x1009dcaa:
    II(0x1009dcaa, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1009dcae, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dcb1, 0x5)   calld(0x100764fc, -0x277ba);          /* call 0x100764fc */
    II(0x1009dcb6, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1009dcb9, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1009dcbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dcc0, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009dcc3, 0x5)   calld(0x10076574, -0x27754);          /* call 0x10076574 */
    II(0x1009dcc8, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x1009dccc, 0x2)   jzd(0x1009dce6, 0x18);                /* jz 0x1009dce6 */
    II(0x1009dcce, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x1009dcd3, 0x5)   calld(0x10076338, -0x279a0);          /* call 0x10076338 */
    II(0x1009dcd8, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x1009dcdb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009dcdd, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009dcdf, 0x5)   calld(0x1007643c, -0x278a8);          /* call 0x1007643c */
    II(0x1009dce4, 0x2)   jmpd(0x1009dcfc, 0x16);               /* jmp 0x1009dcfc */
l_0x1009dce6:
    II(0x1009dce6, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x1009dceb, 0x5)   calld(0x10076338, -0x279b8);          /* call 0x10076338 */
    II(0x1009dcf0, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x1009dcf3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009dcf5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009dcf7, 0x5)   calld(0x1007643c, -0x278c0);          /* call 0x1007643c */
l_0x1009dcfc:
    II(0x1009dcfc, 0x2)   jmpd(0x1009dd06, 0x8);                /* jmp 0x1009dd06 */
l_0x1009dcfe:
    II(0x1009dcfe, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dd01, 0x5)   calld(0x10076bf8, -0x2710e);          /* call 0x10076bf8 */
l_0x1009dd06:
    II(0x1009dd06, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009dd08, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dd0b, 0x5)   calld(0x1013ad71, 0x9d061);           /* call 0x1013ad71 */
    II(0x1009dd10, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009dd12, 0x6)   jzd(0x1009df21, 0x209);               /* jz dword 0x1009df21 */
    II(0x1009dd18, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dd1b, 0x5)   calld(0x100763a0, -0x27980);          /* call 0x100763a0 */
    II(0x1009dd20, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009dd22, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1009dd25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dd28, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1009dd2b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009dd2e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1009dd30, 0x2)   jnzd(0x1009dd46, 0x14);               /* jnz 0x1009dd46 */
    II(0x1009dd32, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dd35, 0x5)   calld(0x100763a0, -0x2799a);          /* call 0x100763a0 */
    II(0x1009dd3a, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x1009dd3d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1009dd42, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009dd44, 0x2)   jgd(0x1009dd48, 0x2);                 /* jg 0x1009dd48 */
l_0x1009dd46:
    II(0x1009dd46, 0x2)   jmpd(0x1009dd67, 0x1f);               /* jmp 0x1009dd67 */
l_0x1009dd48:
    II(0x1009dd48, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dd4b, 0x5)   calld(0x100763a0, -0x279b0);          /* call 0x100763a0 */
    II(0x1009dd50, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009dd52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dd55, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009dd58, 0x5)   calld(0x10076574, -0x277e9);          /* call 0x10076574 */
    II(0x1009dd5d, 0x4)   mov(dx, memw_a32(ds, edx + 0x8));     /* mov dx, [edx+0x8] */
    II(0x1009dd61, 0x4)   cmp(dx, memw_a32(ds, eax + 0x8));     /* cmp dx, [eax+0x8] */
    II(0x1009dd65, 0x2)   jzd(0x1009dd69, 0x2);                 /* jz 0x1009dd69 */
l_0x1009dd67:
    II(0x1009dd67, 0x2)   jmpd(0x1009dd82, 0x19);               /* jmp 0x1009dd82 */
l_0x1009dd69:
    II(0x1009dd69, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dd6c, 0x5)   calld(0x10076408, -0x27969);          /* call 0x10076408 */
    II(0x1009dd71, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009dd73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009dd76, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009dd79, 0x5)   calld(0x1008b4ec, -0x12892);          /* call 0x1008b4ec */
    II(0x1009dd7e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009dd80, 0x2)   jnzd(0x1009dd87, 0x5);                /* jnz 0x1009dd87 */
l_0x1009dd82:
    II(0x1009dd82, 0x5)   jmpd(0x1009df1c, 0x195);              /* jmp 0x1009df1c */
l_0x1009dd87:
    II(0x1009dd87, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dd8a, 0x5)   calld(0x100763a0, -0x279ef);          /* call 0x100763a0 */
    II(0x1009dd8f, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0);     /* cmp byte [eax+0x3d], 0x0 */
    II(0x1009dd93, 0x2)   jzd(0x1009dda3, 0xe);                 /* jz 0x1009dda3 */
    II(0x1009dd95, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dd98, 0x5)   calld(0x100763a0, -0x279fd);          /* call 0x100763a0 */
    II(0x1009dd9d, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0xc);   /* cmp byte [eax+0x3d], 0xc */
    II(0x1009dda1, 0x2)   jnzd(0x1009dda5, 0x2);                /* jnz 0x1009dda5 */
l_0x1009dda3:
    II(0x1009dda3, 0x2)   jmpd(0x1009ddb3, 0xe);                /* jmp 0x1009ddb3 */
l_0x1009dda5:
    II(0x1009dda5, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dda8, 0x5)   calld(0x100763a0, -0x27a0d);          /* call 0x100763a0 */
    II(0x1009ddad, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x1009ddb1, 0x2)   jnzd(0x1009ddb5, 0x2);                /* jnz 0x1009ddb5 */
l_0x1009ddb3:
    II(0x1009ddb3, 0x2)   jmpd(0x1009ddc3, 0xe);                /* jmp 0x1009ddc3 */
l_0x1009ddb5:
    II(0x1009ddb5, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009ddb8, 0x5)   calld(0x100763a0, -0x27a1d);          /* call 0x100763a0 */
    II(0x1009ddbd, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x1009ddc1, 0x2)   jnzd(0x1009de01, 0x3e);               /* jnz 0x1009de01 */
l_0x1009ddc3:
    II(0x1009ddc3, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x1009ddc6, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x1009ddc9, 0x5)   calld(0x10075e64, -0x27f6a);          /* call 0x10075e64 */
    II(0x1009ddce, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009ddd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009ddd3, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009ddd6, 0x5)   calld(0x100765d0, -0x2780b);          /* call 0x100765d0 */
    II(0x1009dddb, 0x5)   calld(0x10070ca1, -0x2d13f);          /* call 0x10070ca1 */
    II(0x1009dde0, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1009dde2, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x1009dde5, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x1009dde8, 0x5)   calld(0x10075e64, -0x27f89);          /* call 0x10075e64 */
    II(0x1009dded, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009ddef, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009ddf2, 0x5)   calld(0x100763d4, -0x27a23);          /* call 0x100763d4 */
    II(0x1009ddf7, 0x5)   calld(0x10070ca1, -0x2d15b);          /* call 0x10070ca1 */
    II(0x1009ddfc, 0x3)   cmp(bx, ax);                          /* cmp bx, ax */
    II(0x1009ddff, 0x2)   jgd(0x1009de06, 0x5);                 /* jg 0x1009de06 */
l_0x1009de01:
    II(0x1009de01, 0x5)   jmpd(0x1009df1c, 0x116);              /* jmp 0x1009df1c */
l_0x1009de06:
    II(0x1009de06, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1009de0a, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009de0d, 0x5)   calld(0x100763a0, -0x27a72);          /* call 0x100763a0 */
    II(0x1009de12, 0x5)   calld(0x101526ac, 0xb4895);           /* call 0x101526ac */
    II(0x1009de17, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009de19, 0x2)   jnzd(0x1009de21, 0x6);                /* jnz 0x1009de21 */
    II(0x1009de1b, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x1009de1f, 0x2)   jmpd(0x1009de6f, 0x4e);               /* jmp 0x1009de6f */
l_0x1009de21:
    II(0x1009de21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009de24, 0x3)   mov(edx, memd_a32(ds, eax + 0xb));    /* mov edx, [eax+0xb] */
    II(0x1009de27, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009de2a, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009de2d, 0x5)   calld(0x100763a0, -0x27a92);          /* call 0x100763a0 */
    II(0x1009de32, 0x5)   calld(0x101526ac, 0xb4875);           /* call 0x101526ac */
    II(0x1009de37, 0x5)   calld(0x100a2bc4, 0x4d88);            /* call 0x100a2bc4 */
    II(0x1009de3c, 0x1)   cwde();                               /* cwde */
    II(0x1009de3d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009de3f, 0x2)   jled(0x1009de6f, 0x2e);               /* jle 0x1009de6f */
    II(0x1009de41, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009de44, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009de47, 0x5)   calld(0x10076574, -0x278d8);          /* call 0x10076574 */
    II(0x1009de4c, 0x5)   calld(0x101526ac, 0xb485b);           /* call 0x101526ac */
    II(0x1009de51, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
//    II(0x1009de54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x1009de57, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1009de5a, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009de5d, 0x5)   calld(0x100763d4, -0x27a8e);          /* call 0x100763d4 */
    II(0x1009de62, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x64));   /* mov ecx, [ebp-0x64] */
    II(0x1009de65, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009de67, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1009de69, 0x3)   calld_abs(memd_a32(ds, ebx + 0x4));   /* call dword near [ebx+0x4] */
    II(0x1009de6c, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
l_0x1009de6f:
    II(0x1009de6f, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x1009de73, 0x6)   jzd(0x1009df1c, 0xa3);                /* jz dword 0x1009df1c */
    II(0x1009de79, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009de7c, 0x3)   add(edx, 0x13);                       /* add edx, 0x13 */
    II(0x1009de7f, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x1009de82, 0x5)   calld(0x10076668, -0x2781f);          /* call 0x10076668 */
    II(0x1009de87, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009de8a, 0x5)   calld(0x10076408, -0x27a87);          /* call 0x10076408 */
    II(0x1009de8f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009de91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009de94, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009de97, 0x5)   calld(0x10076630, -0x2786c);          /* call 0x10076630 */
    II(0x1009de9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009de9f, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009dea2, 0x5)   calld(0x10076574, -0x27933);          /* call 0x10076574 */
    II(0x1009dea7, 0x5)   calld(0x1015287d, 0xb49d1);           /* call 0x1015287d */
    II(0x1009deac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009deaf, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x1009deb2, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x1009deb5, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x6c));   /* mov ebx, [ebp-0x6c] */
    II(0x1009deb8, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x2));    /* mov ebx, [ebx+0x2] */
    II(0x1009debb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009debe, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009dec1, 0x5)   calld(0x100765d0, -0x278f6);          /* call 0x100765d0 */
    II(0x1009dec6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009dec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1009decb, 0x3)   calld_abs(memd_a32(ds, ebx + 0x2c));  /* call dword near [ebx+0x2c] */
    II(0x1009dece, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009ded1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009ded4, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009ded7, 0x5)   calld(0x10076574, -0x27968);          /* call 0x10076574 */
    II(0x1009dedc, 0x5)   calld(0x101527ed, 0xb490c);           /* call 0x101527ed */
    II(0x1009dee1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1009dee3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009dee6, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x1009dee9, 0x5)   calld(0x10076574, -0x2797a);          /* call 0x10076574 */
    II(0x1009deee, 0x5)   calld(0x10152962, 0xb4a6f);           /* call 0x10152962 */
    II(0x1009def3, 0x5)   calld(0x1008a79c, -0x1375c);          /* call 0x1008a79c */
    II(0x1009def8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1009defa, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1009defc, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x1009deff, 0x5)   calld(0x100765d0, -0x27934);          /* call 0x100765d0 */
    II(0x1009df04, 0x5)   mov(ecx, 0x101c3180);                 /* mov ecx, 0x101c3180 */
    II(0x1009df09, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009df0b, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1009df0d, 0x5)   calld(0x100a53ac, 0x749a);            /* call 0x100a53ac */
    II(0x1009df12, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009df14, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x1009df17, 0x5)   calld(0x10075f2c, -0x27ff0);          /* call 0x10075f2c */
l_0x1009df1c:
    II(0x1009df1c, 0x5)   jmpd(0x1009dcfe, -0x223);             /* jmp 0x1009dcfe */
l_0x1009df21:
    II(0x1009df21, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x1009df26, 0x5)   calld(sys_new, 0xc7ed5);              /* call 0x10165e00 */
    II(0x1009df2b, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1009df2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1009df31, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1009df34, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1009df38, 0x2)   jzd(0x1009df8d, 0x53);                /* jz 0x1009df8d */
    II(0x1009df3a, 0x5)   mov(eax, 0x1009e075);                 /* mov eax, 0x1009e075 */
    II(0x1009df3f, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009df40, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x1009df43, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1009df46, 0x5)   calld(0x10075e64, -0x280e7);          /* call 0x10075e64 */
    II(0x1009df4b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009df4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009df4f, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0);     /* cmp byte [eax+0x3e], 0x0 */
    II(0x1009df53, 0x2)   jzd(0x1009df5b, 0x6);                 /* jz 0x1009df5b */
    II(0x1009df55, 0x4)   mov(memb_a32(ss, ebp - 0x70), 0);     /* mov byte [ebp-0x70], 0x0 */
    II(0x1009df59, 0x2)   jmpd(0x1009df5f, 0x4);                /* jmp 0x1009df5f */
l_0x1009df5b:
    II(0x1009df5b, 0x4)   mov(memb_a32(ss, ebp - 0x70), 0x3);   /* mov byte [ebp-0x70], 0x3 */
l_0x1009df5f:
    II(0x1009df5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x73));   /* mov eax, [ebp-0x73] */
    II(0x1009df62, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x1009df65, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009df66, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1009df68, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1009df6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009df6e, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009df71, 0x5)   calld(0x100765d0, -0x279a6);          /* call 0x100765d0 */
    II(0x1009df76, 0x3)   mov(esi, memd_a32(ss, ebp - 0x18));   /* mov esi, [ebp-0x18] */
    II(0x1009df79, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009df7b, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1009df7d, 0x5)   calld(0x100ac220, 0xe29e);            /* call 0x100ac220 */
    II(0x1009df82, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1009df85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1009df88, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x1009df8b, 0x2)   jmpd(0x1009df93, 0x6);                /* jmp 0x1009df93 */
l_0x1009df8d:
    II(0x1009df8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1009df90, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
l_0x1009df93:
    II(0x1009df93, 0x3)   mov(edx, memd_a32(ss, ebp - 0x74));   /* mov edx, [ebp-0x74] */
    II(0x1009df96, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1009df99, 0x5)   calld(0x1008b060, -0x12f3e);          /* call 0x1008b060 */
    II(0x1009df9e, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1009dfa1, 0x5)   calld(0x1008af84, -0x13022);          /* call 0x1008af84 */
    II(0x1009dfa6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009dfa8, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1009dfad, 0x5)   calld(0x100a4d50, 0x6d9e);            /* call 0x100a4d50 */
    II(0x1009dfb2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009dfb4, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1009dfb7, 0x5)   calld(0x10088b7c, -0x15440);          /* call 0x10088b7c */
    II(0x1009dfbc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009dfbe, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1009dfc1, 0x5)   calld(0x10075f6c, -0x2805a);          /* call 0x10075f6c */
    II(0x1009dfc6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009dfc8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009dfc9, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009dfca, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009dfcb, 0x1)   popd(edx);                            /* pop edx */
    II(0x1009dfcc, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009dfcd, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009dfce, 0x1)   retd();                               /* ret */
FUNC_END

