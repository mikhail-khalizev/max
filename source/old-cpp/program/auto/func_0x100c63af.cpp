FUNC_BEGIN(0x100c63af, 0xa81c55d21bc1ca8, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x99, 0xf9, 0x9, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0xc, 0xff, 0x7f, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0xa, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0xe8, 0x31, 0x4a, 0, 0, 0x66, 0x3b, 0x45, 0xe8, 0x7e, 0x5e, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xf8, 0xe8, 0xe7, 0x48, 0, 0, 0xf, 0xbe, 0x18, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xf8, 0xe8, 0xd8, 0x48, 0, 0, 0xf, 0xbf, 0x50, 0x1, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0xe8, 0xd2, 0x99, 0x1, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xf4, 0x66, 0x3b, 0x42, 0xc, 0x7d, 0x23, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xf8, 0xe8, 0xae, 0x48, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x9, 0xe8, 0x19, 0x42, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0xc, 0xeb, 0x8e, 0xc6, 0x45, 0xf0, 0x2, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0xb2, 0x49, 0, 0, 0x66, 0x3b, 0x45, 0xe8, 0x7e, 0x72, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0x68, 0x48, 0, 0, 0xf, 0xbe, 0x18, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0x59, 0x48, 0, 0, 0xf, 0xbf, 0x50, 0x1, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0xe8, 0x53, 0x99, 0x1, 0, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xec, 0x31, 0xc0, 0x8a, 0x45, 0xf0, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x7d, 0x27, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0x22, 0x48, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x9, 0xe8, 0x8d, 0x41, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0xc, 0xc6, 0x45, 0xf0, 0x1, 0xe9, 0x7a, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100c63af, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100c63b4, 0x5)   calld(sys_check_available_stack_size, 0x9f999); /* call 0x10165d52 */
    II(0x100c63b9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c63ba, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c63bb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c63bc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c63bd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c63bf, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100c63c5, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100c63c8, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100c63cb, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x100c63ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c63d1, 0x6)   mov(memw_a32(ds, eax + 0xc), 0x7fff); /* mov word [eax+0xc], 0x7fff */
    II(0x100c63d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c63da, 0x6)   mov(memw_a32(ds, eax + 0xa), 0xffff); /* mov word [eax+0xa], 0xffff */
    II(0x100c63e0, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100c63e7, 0x2)   jmpd(0x100c63ef, 0x6);                /* jmp 0x100c63ef */
l_0x100c63e9:
    II(0x100c63e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c63ec, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100c63ef:
    II(0x100c63ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c63f2, 0x5)   calld(0x100cae28, 0x4a31);            /* call 0x100cae28 */
    II(0x100c63f7, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100c63fb, 0x2)   jled(0x100c645b, 0x5e);               /* jle 0x100c645b */
    II(0x100c63fd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c6401, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c6404, 0x5)   calld(0x100cacf0, 0x48e7);            /* call 0x100cacf0 */
    II(0x100c6409, 0x3)   movsx(ebx, memb_a32(ds, eax));        /* movsx ebx, byte [eax] */
    II(0x100c640c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c6410, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c6413, 0x5)   calld(0x100cacf0, 0x48d8);            /* call 0x100cacf0 */
    II(0x100c6418, 0x4)   movsx(edx, memw_a32(ds, eax + 0x1));  /* movsx edx, word [eax+0x1] */
    II(0x100c641c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c641f, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c6422, 0x5)   calld(0x100dfdf9, 0x199d2);           /* call 0x100dfdf9 */
    II(0x100c6427, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100c642a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c642d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c6430, 0x4)   cmp(ax, memw_a32(ds, edx + 0xc));     /* cmp ax, [edx+0xc] */
    II(0x100c6434, 0x2)   jged(0x100c6459, 0x23);               /* jge 0x100c6459 */
    II(0x100c6436, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c643a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c643d, 0x5)   calld(0x100cacf0, 0x48ae);            /* call 0x100cacf0 */
    II(0x100c6442, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c6444, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c6447, 0x3)   add(eax, 0x9);                        /* add eax, 0x9 */
    II(0x100c644a, 0x5)   calld(0x100ca668, 0x4219);            /* call 0x100ca668 */
    II(0x100c644f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c6452, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c6455, 0x4)   mov(memw_a32(ds, edx + 0xc), ax);     /* mov [edx+0xc], ax */
l_0x100c6459:
    II(0x100c6459, 0x2)   jmpd(0x100c63e9, -0x72);              /* jmp 0x100c63e9 */
l_0x100c645b:
    II(0x100c645b, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x2);   /* mov byte [ebp-0x10], 0x2 */
    II(0x100c645f, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100c6466, 0x2)   jmpd(0x100c646e, 0x6);                /* jmp 0x100c646e */
l_0x100c6468:
    II(0x100c6468, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c646b, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100c646e:
    II(0x100c646e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c6471, 0x5)   calld(0x100cae28, 0x49b2);            /* call 0x100cae28 */
    II(0x100c6476, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100c647a, 0x2)   jled(0x100c64ee, 0x72);               /* jle 0x100c64ee */
    II(0x100c647c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c6480, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c6483, 0x5)   calld(0x100cacf0, 0x4868);            /* call 0x100cacf0 */
    II(0x100c6488, 0x3)   movsx(ebx, memb_a32(ds, eax));        /* movsx ebx, byte [eax] */
    II(0x100c648b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c648f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c6492, 0x5)   calld(0x100cacf0, 0x4859);            /* call 0x100cacf0 */
    II(0x100c6497, 0x4)   movsx(edx, memw_a32(ds, eax + 0x1));  /* movsx edx, word [eax+0x1] */
    II(0x100c649b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c649e, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c64a1, 0x5)   calld(0x100dfdf9, 0x19953);           /* call 0x100dfdf9 */
    II(0x100c64a6, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c64a9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100c64ad, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c64af, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x100c64b2, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c64b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c64b8, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x100c64bb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c64be, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c64c0, 0x2)   jged(0x100c64e9, 0x27);               /* jge 0x100c64e9 */
    II(0x100c64c2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c64c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c64c9, 0x5)   calld(0x100cacf0, 0x4822);            /* call 0x100cacf0 */
    II(0x100c64ce, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c64d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c64d3, 0x3)   add(eax, 0x9);                        /* add eax, 0x9 */
    II(0x100c64d6, 0x5)   calld(0x100ca668, 0x418d);            /* call 0x100ca668 */
    II(0x100c64db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c64de, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c64e1, 0x4)   mov(memw_a32(ds, edx + 0xc), ax);     /* mov [edx+0xc], ax */
    II(0x100c64e5, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x100c64e9:
    II(0x100c64e9, 0x5)   jmpd(0x100c6468, -0x86);              /* jmp 0x100c6468 */
l_0x100c64ee:
    II(0x100c64ee, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c64f0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c64f1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c64f2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c64f3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c64f4, 0x1)   retd();                               /* ret */
FUNC_END

