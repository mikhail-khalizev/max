FUNC_BEGIN(0x100c0aae, 0xe4e8883d3b11ebec, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0x9a, 0x52, 0xa, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0x14, 0x8b, 0x55, 0x18, 0x66, 0x3b, 0x2, 0x7e, 0x9, 0x8b, 0x45, 0x18, 0x66, 0x8b, 0, 0x89, 0x45, 0x14, 0x8b, 0x45, 0x14, 0x8b, 0x55, 0x18, 0x66, 0x29, 0x2, 0x8b, 0x45, 0x10, 0xf, 0xaf, 0x45, 0x14, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xe8, 0x85, 0xd2, 0xf, 0x8e, 0x25, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x47, 0x74, 0xa, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x45, 0x75, 0x6, 0xc6, 0x45, 0xe4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe4, 0, 0x8a, 0x45, 0xe4, 0x88, 0x45, 0xec, 0x80, 0x7d, 0xec, 0, 0xf, 0x84, 0xae, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xe0, 0xe8, 0x25, 0x53, 0xfb, 0xff, 0x8d, 0x4d, 0xd0, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x76, 0x8a, 0xfe, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0xd9, 0x8c, 0xfc, 0xff, 0x98, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xd0, 0x8d, 0x45, 0xd0, 0xe8, 0xf8, 0x8c, 0xfc, 0xff, 0x98, 0x1, 0xd0, 0x8b, 0x15, 0x54, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0xf6, 0, 0x6, 0x74, 0x54, 0x8d, 0x45, 0xd0, 0xe8, 0xe0, 0x8c, 0xfc, 0xff, 0x98, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x4, 0x1, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0x98, 0x8c, 0xfc, 0xff, 0x98, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xc2, 0x8b, 0x45, 0xe8, 0x66, 0x1, 0x2, 0x8d, 0x45, 0xd0, 0xe8, 0xb7, 0x8c, 0xfc, 0xff, 0x98, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x8, 0x1, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0x6d, 0x8c, 0xfc, 0xff, 0x98, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xc2, 0x8b, 0x45, 0x14, 0x66, 0x1, 0x2, 0x8d, 0x45, 0xd0, 0xe8, 0x7, 0x8b, 0xfe, 0xff, 0x84, 0xc0, 0xf, 0x85, 0x6f, 0xff, 0xff, 0xff, 0xeb, 0x49, 0x31, 0xc0, 0x8a, 0x45, 0x1c, 0x50, 0xf, 0xbf, 0x4d, 0xe8, 0xf, 0xbf, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xcc, 0xe8, 0x6d, 0x52, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x4, 0xe8, 0x36, 0xfd, 0xff, 0xff, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x4d, 0x14, 0xf, 0xbf, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xc8, 0xe8, 0x4a, 0x52, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x8, 0xe8, 0x13, 0xfd, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x10, 0}))
    II(0x100c0aae, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x100c0ab3, 0x5)   calld(sys_check_available_stack_size, 0xa529a); /* call 0x10165d52 */
    II(0x100c0ab8, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c0ab9, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c0aba, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c0abb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c0abd, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x100c0ac3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c0ac6, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100c0ac9, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100c0acc, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100c0acf, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100c0ad2, 0x3)   mov(edx, memd_a32(ss, ebp + 0x18));   /* mov edx, [ebp+0x18] */
    II(0x100c0ad5, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100c0ad8, 0x2)   jled(0x100c0ae3, 0x9);                /* jle 0x100c0ae3 */
    II(0x100c0ada, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x100c0add, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100c0ae0, 0x3)   mov(memd_a32(ss, ebp + 0x14), eax);   /* mov [ebp+0x14], eax */
l_0x100c0ae3:
    II(0x100c0ae3, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100c0ae6, 0x3)   mov(edx, memd_a32(ss, ebp + 0x18));   /* mov edx, [ebp+0x18] */
    II(0x100c0ae9, 0x3)   sub(memw_a32(ds, edx), ax);           /* sub [edx], ax */
    II(0x100c0aec, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100c0aef, 0x4)   imul(eax, memd_a32(ss, ebp + 0x14));  /* imul eax, [ebp+0x14] */
    II(0x100c0af3, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100c0af6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c0afa, 0x2)   test(edx, edx);                       /* test edx, edx */
    II(0x100c0afc, 0x6)   jled(0x100c0c27, 0x125);              /* jle dword 0x100c0c27 */
    II(0x100c0b02, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c0b05, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x47);   /* cmp word [eax+0x8], 0x47 */
    II(0x100c0b0a, 0x2)   jzd(0x100c0b16, 0xa);                 /* jz 0x100c0b16 */
    II(0x100c0b0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c0b0f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x45);   /* cmp word [eax+0x8], 0x45 */
    II(0x100c0b14, 0x2)   jnzd(0x100c0b1c, 0x6);                /* jnz 0x100c0b1c */
l_0x100c0b16:
    II(0x100c0b16, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0x1);   /* mov byte [ebp-0x1c], 0x1 */
    II(0x100c0b1a, 0x2)   jmpd(0x100c0b20, 0x4);                /* jmp 0x100c0b20 */
l_0x100c0b1c:
    II(0x100c0b1c, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0);     /* mov byte [ebp-0x1c], 0x0 */
l_0x100c0b20:
    II(0x100c0b20, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x100c0b23, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100c0b26, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x100c0b2a, 0x6)   jzd(0x100c0bde, 0xae);                /* jz dword 0x100c0bde */
    II(0x100c0b30, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100c0b34, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c0b37, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100c0b3a, 0x5)   calld(0x10075e64, -0x4acdb);          /* call 0x10075e64 */
    II(0x100c0b3f, 0x3)   lea(ecx, ebp - 0x30);                 /* lea ecx, [ebp-0x30] */
    II(0x100c0b42, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c0b44, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100c0b46, 0x5)   calld(0x100a95c1, -0x1758a);          /* call 0x100a95c1 */
l_0x100c0b4b:
    II(0x100c0b4b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c0b4e, 0x5)   calld(0x1008982c, -0x37327);          /* call 0x1008982c */
    II(0x100c0b53, 0x1)   cwde();                               /* cwde */
    II(0x100c0b54, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x100c0b5a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c0b5d, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c0b60, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c0b63, 0x5)   calld(0x10089860, -0x37308);          /* call 0x10089860 */
    II(0x100c0b68, 0x1)   cwde();                               /* cwde */
    II(0x100c0b69, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c0b6b, 0x6)   mov(edx, memd_a32(ds, 0x101c9454));   /* mov edx, [0x101c9454] */
    II(0x100c0b71, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c0b73, 0x3)   test(memb_a32(ds, eax), 0x6);         /* test byte [eax], 0x6 */
    II(0x100c0b76, 0x2)   jzd(0x100c0bcc, 0x54);                /* jz 0x100c0bcc */
    II(0x100c0b78, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c0b7b, 0x5)   calld(0x10089860, -0x37320);          /* call 0x10089860 */
    II(0x100c0b80, 0x1)   cwde();                               /* cwde */
    II(0x100c0b81, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c0b84, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c0b87, 0x3)   mov(edx, memd_a32(ds, edx + 0x4));    /* mov edx, [edx+0x4] */
    II(0x100c0b8a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c0b8c, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c0b8f, 0x5)   calld(0x1008982c, -0x37368);          /* call 0x1008982c */
    II(0x100c0b94, 0x1)   cwde();                               /* cwde */
    II(0x100c0b95, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c0b97, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100c0b99, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c0b9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c0b9e, 0x3)   add(memw_a32(ds, edx), ax);           /* add [edx], ax */
    II(0x100c0ba1, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c0ba4, 0x5)   calld(0x10089860, -0x37349);          /* call 0x10089860 */
    II(0x100c0ba9, 0x1)   cwde();                               /* cwde */
    II(0x100c0baa, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c0bad, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c0baf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0bb2, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100c0bb5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c0bb7, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c0bba, 0x5)   calld(0x1008982c, -0x37393);          /* call 0x1008982c */
    II(0x100c0bbf, 0x1)   cwde();                               /* cwde */
    II(0x100c0bc0, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c0bc2, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100c0bc4, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c0bc6, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100c0bc9, 0x3)   add(memw_a32(ds, edx), ax);           /* add [edx], ax */
l_0x100c0bcc:
    II(0x100c0bcc, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100c0bcf, 0x5)   calld(0x100a96db, -0x174f9);          /* call 0x100a96db */
    II(0x100c0bd4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c0bd6, 0x6)   jnzd(0x100c0b4b, -0x91);              /* jnz dword 0x100c0b4b */
    II(0x100c0bdc, 0x2)   jmpd(0x100c0c27, 0x49);               /* jmp 0x100c0c27 */
l_0x100c0bde:
    II(0x100c0bde, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0be0, 0x3)   mov(al, memb_a32(ss, ebp + 0x1c));    /* mov al, [ebp+0x1c] */
    II(0x100c0be3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0be4, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x18)); /* movsx ecx, word [ebp-0x18] */
    II(0x100c0be8, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100c0bec, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c0bef, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100c0bf2, 0x5)   calld(0x10075e64, -0x4ad93);          /* call 0x10075e64 */
    II(0x100c0bf7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c0bf9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0bfc, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x100c0bff, 0x5)   calld(0x100c093a, -0x2ca);            /* call 0x100c093a */
    II(0x100c0c04, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0c06, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0c07, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x14)); /* movsx ecx, word [ebp+0x14] */
    II(0x100c0c0b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100c0c0f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100c0c12, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c0c15, 0x5)   calld(0x10075e64, -0x4adb6);          /* call 0x10075e64 */
    II(0x100c0c1a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c0c1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c0c1f, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100c0c22, 0x5)   calld(0x100c093a, -0x2ed);            /* call 0x100c093a */
l_0x100c0c27:
    II(0x100c0c27, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c0c29, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c0c2a, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c0c2b, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c0c2c, 0x3)   retd(0x10);                           /* ret 0x10 */
FUNC_END

