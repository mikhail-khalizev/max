FUNC_BEGIN(0x1007a473, 0xd45073f57726ab88, 0x20, ({0x68, 0xa8, 0, 0, 0, 0xe8, 0xd5, 0xb8, 0xe, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x88, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x9c, 0xbe, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x12, 0xc0, 0xff, 0xff, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xd8, 0xe8, 0x3e, 0xc2, 0xff, 0xff, 0x89, 0x45, 0xd4, 0x80, 0x65, 0xf0, 0xfe, 0xc6, 0x45, 0xe8, 0, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0x2a, 0xc7, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x99, 0x8, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0xc0, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xb8, 0xbe, 0xff, 0xff, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x3a, 0x50, 0x26, 0x75, 0x16, 0x8d, 0x45, 0xdc, 0xe8, 0xd9, 0xbe, 0xff, 0xff, 0xe8, 0xb3, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x75, 0x2, 0xeb, 0x14, 0x80, 0x7d, 0xe8, 0, 0x74, 0xc, 0x8b, 0x45, 0xd0, 0xe8, 0xf, 0xf4, 0, 0, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x11, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xd0, 0xe8, 0x97, 0x86, 0x2, 0, 0x98, 0x85, 0xc0, 0x7e, 0x2, 0xeb, 0x67, 0x8d, 0x45, 0xdc, 0xe8, 0x98, 0xbe, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb9, 0x67, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xbc, 0x7, 0xc, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x45, 0xe0, 0x7d, 0x2, 0xeb, 0x14, 0x80, 0x7d, 0xe8, 0, 0x75, 0xc, 0x8b, 0x45, 0xd0, 0xe8, 0xb6, 0xf3, 0, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x23, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x8d, 0x45, 0xdc, 0xe8, 0x4e, 0xbe, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0xa0, 0xc0, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0xe8, 0x90, 0xf3, 0, 0, 0x88, 0x45, 0xe8, 0xe9, 0x26, 0xff, 0xff, 0xff, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x8e, 0xbd, 0xff, 0xff, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x86, 0xbe, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0x38, 0xc6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xa7, 0x7, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0xc0, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xc6, 0xbd, 0xff, 0xff, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x3a, 0x50, 0x26, 0x75, 0x16, 0x8d, 0x45, 0xdc, 0xe8, 0xe7, 0xbd, 0xff, 0xff, 0xe8, 0xc1, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0x75, 0x2, 0xeb, 0x14, 0x80, 0x7d, 0xe8, 0, 0x74, 0xc, 0x8b, 0x45, 0xd0, 0xe8, 0x1d, 0xf3, 0, 0, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x11, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xd0, 0xe8, 0xa5, 0x85, 0x2, 0, 0x98, 0x85, 0xc0, 0x7e, 0x2, 0xeb, 0x67, 0x8d, 0x45, 0xdc, 0xe8, 0xa6, 0xbd, 0xff, 0xff, 0x8b, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc7, 0x66, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xca, 0x6, 0xc, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x45, 0xe0, 0x7d, 0x2, 0xeb, 0x14, 0x80, 0x7d, 0xe8, 0, 0x75, 0xc, 0x8b, 0x45, 0xd0, 0xe8, 0xc4, 0xf2, 0, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x23, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x8d, 0x45, 0xdc, 0xe8, 0x5c, 0xbd, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0xae, 0xbf, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0xe8, 0x9e, 0xf2, 0, 0, 0x88, 0x45, 0xe8, 0xe9, 0x26, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xd5, 0x6, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0x94, 0x3, 0, 0, 0x8d, 0x45, 0xcc, 0xe8, 0x44, 0xc4, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xd0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xff, 0xf9, 0, 0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0xc6, 0xc3, 0xff, 0xff, 0xc7, 0x45, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x13, 0x1, 0x74, 0x40, 0xba, 0x4e, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0xd3, 0xca, 0x3, 0, 0x98, 0x85, 0xc0, 0x7e, 0x9, 0xc7, 0x45, 0xc0, 0x4e, 0, 0, 0, 0xeb, 0x1f, 0xba, 0x48, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0xb2, 0xca, 0x3, 0, 0x98, 0x85, 0xc0, 0x7e, 0x7, 0xc7, 0x45, 0xc0, 0x48, 0, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0xf, 0xbf, 0x45, 0xc0, 0x50, 0x31, 0xc9, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xb0, 0xe8, 0x70, 0x57, 0xa, 0, 0x89, 0x45, 0xac, 0x80, 0x65, 0xf0, 0xfe, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xf0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x52, 0x78, 0x4, 0, 0x89, 0x45, 0xa8, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xd8, 0xe8, 0x2c, 0x4, 0x1, 0, 0xe8, 0x85, 0xb8, 0x2, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xa4, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0xcc, 0xe8, 0x95, 0xe3, 0, 0, 0xc7, 0x45, 0xa0, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xa0, 0xff, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x66, 0x3b, 0x45, 0xa4, 0xf, 0x8d, 0x8b, 0x1, 0, 0, 0x8b, 0x45, 0xc4, 0x66, 0xff, 0x4d, 0xc4, 0x8b, 0x45, 0xc6, 0x66, 0xff, 0x45, 0xc6, 0xc7, 0x45, 0x9c, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0x9c, 0x2, 0xf, 0xbf, 0x45, 0x9c, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0x5e, 0x1, 0, 0, 0xc7, 0x45, 0x98, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0x98, 0xff, 0x45, 0x98, 0xf, 0xbf, 0x45, 0xa0, 0x1, 0xc0, 0xf, 0xbf, 0x55, 0x98, 0x39, 0xc2, 0xf, 0x8d, 0x38, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0x9c, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0x7a, 0x9, 0x1, 0, 0xf, 0xbf, 0x45, 0xc4, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xc4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xc6, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xc6, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x2e, 0x83, 0x7d, 0xa8, 0, 0x74, 0x26, 0xf, 0xbf, 0x45, 0xc4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xa8, 0xf, 0xbf, 0x55, 0xc6, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0x5, 0xe9, 0xbc, 0, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0xe1, 0xbc, 0xff, 0xff, 0x8b, 0x55, 0xc6, 0x66, 0x2b, 0x50, 0x1c, 0x89, 0xd0, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xd8, 0xe8, 0xcd, 0xbc, 0xff, 0xff, 0x8b, 0x5d, 0xc4, 0x66, 0x2b, 0x58, 0x1a, 0x89, 0xd8, 0x98, 0xe8, 0xaf, 0xb6, 0x2, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0x94, 0x8b, 0x45, 0x94, 0x66, 0x3b, 0x45, 0xa4, 0xf, 0x8d, 0x75, 0, 0, 0, 0x83, 0x7d, 0xc8, 0, 0x74, 0x17, 0xf, 0xbf, 0x45, 0xc4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xc8, 0xf, 0xbf, 0x55, 0xc6, 0x8b, 0, 0x1, 0xd0, 0xf6, 0, 0x8, 0x75, 0x58, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0x90, 0xe8, 0x6a, 0xb5, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xb0, 0xe8, 0x48, 0x56, 0xa, 0, 0x84, 0xc0, 0x74, 0x2c, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xc6, 0xf, 0xbf, 0x5d, 0xc4, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x8a, 0x59, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x11, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0xcc, 0xe8, 0x3, 0xe2, 0, 0, 0x8b, 0x45, 0x94, 0x89, 0x45, 0xa4, 0xe9, 0xb0, 0xfe, 0xff, 0xff, 0xe9, 0x91, 0xfe, 0xff, 0xff, 0xe9, 0x62, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xcc, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x1a, 0x75, 0x10, 0x8b, 0x45, 0xce, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x1c, 0xf, 0x84, 0xa2, 0, 0, 0, 0xb8, 0x49, 0, 0, 0, 0xe8, 0x84, 0xb4, 0xe, 0, 0x89, 0x45, 0x8c, 0x8b, 0x45, 0x8c, 0x89, 0x45, 0x88, 0x83, 0x7d, 0x88, 0, 0x74, 0x36, 0xb8, 0xbb, 0xe, 0xb, 0x10, 0x50, 0x8d, 0x55, 0xcc, 0x8d, 0x45, 0x84, 0xe8, 0xc8, 0xb4, 0xff, 0xff, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0x31, 0xc9, 0x8b, 0x5d, 0xf4, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0x8c, 0xe8, 0x6d, 0x18, 0x3, 0, 0x89, 0x45, 0x80, 0x8b, 0x45, 0x80, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xeb, 0x9, 0x8b, 0x45, 0x88, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x7c, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x15, 0xfc, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x35, 0xfb, 0, 0, 0xe8, 0xb4, 0xfc, 0, 0, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x81, 0xfb, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x49, 0xa3, 0x2, 0, 0x31, 0xd2, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x38, 0xe3, 0, 0, 0xc6, 0x45, 0xec, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xb0, 0xe8, 0xda, 0xe2, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0, 0xb5, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x36, 0xb5, 0xff, 0xff, 0xeb, 0x2e, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xe6, 0xb4, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x1c, 0xb5, 0xff, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xd0, 0xb4, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x6, 0xb5, 0xff, 0xff, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1007a473, 0x5)   pushd(0xa8);                          /* push dword 0xa8 */
    II(0x1007a478, 0x5)   calld(sys_check_available_stack_size, 0xeb8d5); /* call 0x10165d52 */
    II(0x1007a47d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007a47e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007a47f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007a480, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007a481, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007a483, 0x6)   sub(esp, 0x88);                       /* sub esp, 0x88 */
    II(0x1007a489, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1007a48c, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1007a48f, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x1007a492, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x1007a497, 0x5)   calld(0x10076338, -0x4164);           /* call 0x10076338 */
    II(0x1007a49c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007a49e, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a4a1, 0x5)   calld(0x100764b8, -0x3fee);           /* call 0x100764b8 */
    II(0x1007a4a6, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x1007a4aa, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007a4ad, 0x5)   calld(my_ctor_0x101b38f8, -0x3dc2);   /* call 0x100766f0 */
    II(0x1007a4b2, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1007a4b5, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x1007a4b9, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x1007a4bd, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
    II(0x1007a4c4, 0x2)   jmpd(0x1007a4ce, 0x8);                /* jmp 0x1007a4ce */
l_0x1007a4c6:
    II(0x1007a4c6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a4c9, 0x5)   calld(0x10076bf8, -0x38d6);           /* call 0x10076bf8 */
l_0x1007a4ce:
    II(0x1007a4ce, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007a4d0, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a4d3, 0x5)   calld(0x1013ad71, 0xc0899);           /* call 0x1013ad71 */
    II(0x1007a4d8, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a4da, 0x6)   jzd(0x1007a5a0, 0xc0);                /* jz dword 0x1007a5a0 */
    II(0x1007a4e0, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a4e3, 0x5)   calld(0x100763a0, -0x4148);           /* call 0x100763a0 */
    II(0x1007a4e8, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1007a4eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a4ee, 0x3)   cmp(dl, memb_a32(ds, eax + 0x26));    /* cmp dl, [eax+0x26] */
    II(0x1007a4f1, 0x2)   jnzd(0x1007a509, 0x16);               /* jnz 0x1007a509 */
    II(0x1007a4f3, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a4f6, 0x5)   calld(0x100763d4, -0x4127);           /* call 0x100763d4 */
    II(0x1007a4fb, 0x5)   calld(0x1007a3b3, -0x14d);            /* call 0x1007a3b3 */
    II(0x1007a500, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1007a503, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x1007a507, 0x2)   jnzd(0x1007a50b, 0x2);                /* jnz 0x1007a50b */
l_0x1007a509:
    II(0x1007a509, 0x2)   jmpd(0x1007a51f, 0x14);               /* jmp 0x1007a51f */
l_0x1007a50b:
    II(0x1007a50b, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x1007a50f, 0x2)   jzd(0x1007a51d, 0xc);                 /* jz 0x1007a51d */
    II(0x1007a511, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1007a514, 0x5)   calld(0x10089928, 0xf40f);            /* call 0x10089928 */
    II(0x1007a519, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a51b, 0x2)   jzd(0x1007a51f, 0x2);                 /* jz 0x1007a51f */
l_0x1007a51d:
    II(0x1007a51d, 0x2)   jmpd(0x1007a521, 0x2);                /* jmp 0x1007a521 */
l_0x1007a51f:
    II(0x1007a51f, 0x2)   jmpd(0x1007a532, 0x11);               /* jmp 0x1007a532 */
l_0x1007a521:
    II(0x1007a521, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1007a525, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1007a528, 0x5)   calld(0x100a2bc4, 0x28697);           /* call 0x100a2bc4 */
    II(0x1007a52d, 0x1)   cwde();                               /* cwde */
    II(0x1007a52e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007a530, 0x2)   jled(0x1007a534, 0x2);                /* jle 0x1007a534 */
l_0x1007a532:
    II(0x1007a532, 0x2)   jmpd(0x1007a59b, 0x67);               /* jmp 0x1007a59b */
l_0x1007a534:
    II(0x1007a534, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a537, 0x5)   calld(0x100763d4, -0x4168);           /* call 0x100763d4 */
    II(0x1007a53c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1007a53f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007a541, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007a543, 0x5)   calld(0x10070d01, -0x9847);           /* call 0x10070d01 */
    II(0x1007a548, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1007a54b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007a54d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007a550, 0x5)   calld(0x1013ad11, 0xc07bc);           /* call 0x1013ad11 */
    II(0x1007a555, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a557, 0x2)   jnzd(0x1007a562, 0x9);                /* jnz 0x1007a562 */
    II(0x1007a559, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1007a55c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x1007a560, 0x2)   jged(0x1007a564, 0x2);                /* jge 0x1007a564 */
l_0x1007a562:
    II(0x1007a562, 0x2)   jmpd(0x1007a578, 0x14);               /* jmp 0x1007a578 */
l_0x1007a564:
    II(0x1007a564, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x1007a568, 0x2)   jnzd(0x1007a576, 0xc);                /* jnz 0x1007a576 */
    II(0x1007a56a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1007a56d, 0x5)   calld(0x10089928, 0xf3b6);            /* call 0x10089928 */
    II(0x1007a572, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a574, 0x2)   jnzd(0x1007a578, 0x2);                /* jnz 0x1007a578 */
l_0x1007a576:
    II(0x1007a576, 0x2)   jmpd(0x1007a59b, 0x23);               /* jmp 0x1007a59b */
l_0x1007a578:
    II(0x1007a578, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1007a57b, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1007a57e, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a581, 0x5)   calld(0x100763d4, -0x41b2);           /* call 0x100763d4 */
    II(0x1007a586, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007a588, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007a58b, 0x5)   calld(0x10076630, -0x3f60);           /* call 0x10076630 */
    II(0x1007a590, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1007a593, 0x5)   calld(0x10089928, 0xf390);            /* call 0x10089928 */
    II(0x1007a598, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
l_0x1007a59b:
    II(0x1007a59b, 0x5)   jmpd(0x1007a4c6, -0xda);              /* jmp 0x1007a4c6 */
l_0x1007a5a0:
    II(0x1007a5a0, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x1007a5a5, 0x5)   calld(0x10076338, -0x4272);           /* call 0x10076338 */
    II(0x1007a5aa, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x1007a5ad, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007a5af, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007a5b1, 0x5)   calld(0x1007643c, -0x417a);           /* call 0x1007643c */
    II(0x1007a5b6, 0x2)   jmpd(0x1007a5c0, 0x8);                /* jmp 0x1007a5c0 */
l_0x1007a5b8:
    II(0x1007a5b8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a5bb, 0x5)   calld(0x10076bf8, -0x39c8);           /* call 0x10076bf8 */
l_0x1007a5c0:
    II(0x1007a5c0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007a5c2, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a5c5, 0x5)   calld(0x1013ad71, 0xc07a7);           /* call 0x1013ad71 */
    II(0x1007a5ca, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a5cc, 0x6)   jzd(0x1007a692, 0xc0);                /* jz dword 0x1007a692 */
    II(0x1007a5d2, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a5d5, 0x5)   calld(0x100763a0, -0x423a);           /* call 0x100763a0 */
    II(0x1007a5da, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1007a5dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a5e0, 0x3)   cmp(dl, memb_a32(ds, eax + 0x26));    /* cmp dl, [eax+0x26] */
    II(0x1007a5e3, 0x2)   jnzd(0x1007a5fb, 0x16);               /* jnz 0x1007a5fb */
    II(0x1007a5e5, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a5e8, 0x5)   calld(0x100763d4, -0x4219);           /* call 0x100763d4 */
    II(0x1007a5ed, 0x5)   calld(0x1007a3b3, -0x23f);            /* call 0x1007a3b3 */
    II(0x1007a5f2, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1007a5f5, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x1007a5f9, 0x2)   jnzd(0x1007a5fd, 0x2);                /* jnz 0x1007a5fd */
l_0x1007a5fb:
    II(0x1007a5fb, 0x2)   jmpd(0x1007a611, 0x14);               /* jmp 0x1007a611 */
l_0x1007a5fd:
    II(0x1007a5fd, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x1007a601, 0x2)   jzd(0x1007a60f, 0xc);                 /* jz 0x1007a60f */
    II(0x1007a603, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1007a606, 0x5)   calld(0x10089928, 0xf31d);            /* call 0x10089928 */
    II(0x1007a60b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a60d, 0x2)   jzd(0x1007a611, 0x2);                 /* jz 0x1007a611 */
l_0x1007a60f:
    II(0x1007a60f, 0x2)   jmpd(0x1007a613, 0x2);                /* jmp 0x1007a613 */
l_0x1007a611:
    II(0x1007a611, 0x2)   jmpd(0x1007a624, 0x11);               /* jmp 0x1007a624 */
l_0x1007a613:
    II(0x1007a613, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1007a617, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1007a61a, 0x5)   calld(0x100a2bc4, 0x285a5);           /* call 0x100a2bc4 */
    II(0x1007a61f, 0x1)   cwde();                               /* cwde */
    II(0x1007a620, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007a622, 0x2)   jled(0x1007a626, 0x2);                /* jle 0x1007a626 */
l_0x1007a624:
    II(0x1007a624, 0x2)   jmpd(0x1007a68d, 0x67);               /* jmp 0x1007a68d */
l_0x1007a626:
    II(0x1007a626, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a629, 0x5)   calld(0x100763d4, -0x425a);           /* call 0x100763d4 */
    II(0x1007a62e, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1007a631, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007a633, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007a635, 0x5)   calld(0x10070d01, -0x9939);           /* call 0x10070d01 */
    II(0x1007a63a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1007a63d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007a63f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007a642, 0x5)   calld(0x1013ad11, 0xc06ca);           /* call 0x1013ad11 */
    II(0x1007a647, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a649, 0x2)   jnzd(0x1007a654, 0x9);                /* jnz 0x1007a654 */
    II(0x1007a64b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1007a64e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x1007a652, 0x2)   jged(0x1007a656, 0x2);                /* jge 0x1007a656 */
l_0x1007a654:
    II(0x1007a654, 0x2)   jmpd(0x1007a66a, 0x14);               /* jmp 0x1007a66a */
l_0x1007a656:
    II(0x1007a656, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x1007a65a, 0x2)   jnzd(0x1007a668, 0xc);                /* jnz 0x1007a668 */
    II(0x1007a65c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1007a65f, 0x5)   calld(0x10089928, 0xf2c4);            /* call 0x10089928 */
    II(0x1007a664, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a666, 0x2)   jnzd(0x1007a66a, 0x2);                /* jnz 0x1007a66a */
l_0x1007a668:
    II(0x1007a668, 0x2)   jmpd(0x1007a68d, 0x23);               /* jmp 0x1007a68d */
l_0x1007a66a:
    II(0x1007a66a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1007a66d, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1007a670, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007a673, 0x5)   calld(0x100763d4, -0x42a4);           /* call 0x100763d4 */
    II(0x1007a678, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007a67a, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007a67d, 0x5)   calld(0x10076630, -0x4052);           /* call 0x10076630 */
    II(0x1007a682, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1007a685, 0x5)   calld(0x10089928, 0xf29e);            /* call 0x10089928 */
    II(0x1007a68a, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
l_0x1007a68d:
    II(0x1007a68d, 0x5)   jmpd(0x1007a5b8, -0xda);              /* jmp 0x1007a5b8 */
l_0x1007a692:
    II(0x1007a692, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007a694, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007a697, 0x5)   calld(0x1013ad71, 0xc06d5);           /* call 0x1013ad71 */
    II(0x1007a69c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a69e, 0x6)   jzd(0x1007aa38, 0x394);               /* jz dword 0x1007aa38 */
    II(0x1007a6a4, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007a6a7, 0x5)   calld(my_ctor_0x101b4184, -0x3bbc);   /* call 0x10076af0 */
    II(0x1007a6ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a6af, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1007a6b2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007a6b7, 0x6)   imul(edx, eax, 0xc5);                 /* imul edx, eax, 0xc5 */
    II(0x1007a6bd, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x1007a6c2, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007a6c4, 0x5)   calld(0x1008a0c8, 0xf9ff);            /* call 0x1008a0c8 */
    II(0x1007a6c9, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1007a6cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a6cf, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1007a6d2, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1007a6d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a6d8, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1007a6db, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007a6de, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007a6e1, 0x5)   calld(0x10076aac, -0x3c3a);           /* call 0x10076aac */
    II(0x1007a6e6, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0xffffffff); /* mov dword [ebp-0x40], 0xffffffff */
    II(0x1007a6ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a6f0, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x1007a6f4, 0x2)   jzd(0x1007a736, 0x40);                /* jz 0x1007a736 */
    II(0x1007a6f6, 0x5)   mov(edx, 0x4e);                       /* mov edx, 0x4e */
    II(0x1007a6fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a6fe, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1007a701, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1007a703, 0x1)   cwde();                               /* cwde */
    II(0x1007a704, 0x5)   calld(0x100b71dc, 0x3cad3);           /* call 0x100b71dc */
    II(0x1007a709, 0x1)   cwde();                               /* cwde */
    II(0x1007a70a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007a70c, 0x2)   jled(0x1007a717, 0x9);                /* jle 0x1007a717 */
    II(0x1007a70e, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0x4e);  /* mov dword [ebp-0x40], 0x4e */
    II(0x1007a715, 0x2)   jmpd(0x1007a736, 0x1f);               /* jmp 0x1007a736 */
l_0x1007a717:
    II(0x1007a717, 0x5)   mov(edx, 0x48);                       /* mov edx, 0x48 */
    II(0x1007a71c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a71f, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1007a722, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1007a724, 0x1)   cwde();                               /* cwde */
    II(0x1007a725, 0x5)   calld(0x100b71dc, 0x3cab2);           /* call 0x100b71dc */
    II(0x1007a72a, 0x1)   cwde();                               /* cwde */
    II(0x1007a72b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007a72d, 0x2)   jled(0x1007a736, 0x7);                /* jle 0x1007a736 */
    II(0x1007a72f, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0x48);  /* mov dword [ebp-0x40], 0x48 */
l_0x1007a736:
    II(0x1007a736, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x1007a73a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x40)); /* movsx eax, word [ebp-0x40] */
    II(0x1007a73e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007a73f, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1007a741, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1007a746, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007a749, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x1007a74c, 0x5)   calld(0x1011fec1, 0xa5770);           /* call 0x1011fec1 */
    II(0x1007a751, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x1007a754, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x1007a758, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1007a75d, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1007a762, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007a765, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a768, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1007a76b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007a770, 0x6)   imul(esi, eax, 0xc5);                 /* imul esi, eax, 0xc5 */
    II(0x1007a776, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x1007a77b, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x1007a77d, 0x5)   calld(0x100c1fd4, 0x47852);           /* call 0x100c1fd4 */
    II(0x1007a782, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x1007a785, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007a788, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007a78b, 0x5)   calld(0x1008abbc, 0x1042c);           /* call 0x1008abbc */
    II(0x1007a790, 0x5)   calld(0x100a601a, 0x2b885);           /* call 0x100a601a */
    II(0x1007a795, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007a798, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007a79a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007a79d, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1007a79f, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1007a7a1, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x1007a7a4, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x1007a7a7, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007a7aa, 0x5)   calld(0x10088b44, 0xe395);            /* call 0x10088b44 */
    II(0x1007a7af, 0x7)   mov(memd_a32(ss, ebp - 0x60), 0x1);   /* mov dword [ebp-0x60], 0x1 */
    II(0x1007a7b6, 0x2)   jmpd(0x1007a7be, 0x6);                /* jmp 0x1007a7be */
l_0x1007a7b8:
    II(0x1007a7b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1007a7bb, 0x3)   inc(memd_a32(ss, ebp - 0x60));        /* inc dword [ebp-0x60] */
l_0x1007a7be:
    II(0x1007a7be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1007a7c1, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x5c));    /* cmp ax, [ebp-0x5c] */
    II(0x1007a7c5, 0x6)   jged(0x1007a956, 0x18b);              /* jge dword 0x1007a956 */
    II(0x1007a7cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1007a7ce, 0x4)   dec(memw_a32(ss, ebp - 0x3c));        /* dec word [ebp-0x3c] */
    II(0x1007a7d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3a));   /* mov eax, [ebp-0x3a] */
    II(0x1007a7d5, 0x4)   inc(memw_a32(ss, ebp - 0x3a));        /* inc word [ebp-0x3a] */
    II(0x1007a7d9, 0x7)   mov(memd_a32(ss, ebp - 0x64), 0);     /* mov dword [ebp-0x64], 0x0 */
    II(0x1007a7e0, 0x2)   jmpd(0x1007a7e6, 0x4);                /* jmp 0x1007a7e6 */
l_0x1007a7e2:
    II(0x1007a7e2, 0x4)   add(memd_a32(ss, ebp - 0x64), 0x2);   /* add dword [ebp-0x64], 0x2 */
l_0x1007a7e6:
    II(0x1007a7e6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x1007a7ea, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1007a7ed, 0x6)   jged(0x1007a951, 0x15e);              /* jge dword 0x1007a951 */
    II(0x1007a7f3, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0);     /* mov dword [ebp-0x68], 0x0 */
    II(0x1007a7fa, 0x2)   jmpd(0x1007a802, 0x6);                /* jmp 0x1007a802 */
l_0x1007a7fc:
    II(0x1007a7fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1007a7ff, 0x3)   inc(memd_a32(ss, ebp - 0x68));        /* inc dword [ebp-0x68] */
l_0x1007a802:
    II(0x1007a802, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x60)); /* movsx eax, word [ebp-0x60] */
    II(0x1007a806, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1007a808, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x68)); /* movsx edx, word [ebp-0x68] */
    II(0x1007a80c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007a80e, 0x6)   jged(0x1007a94c, 0x138);              /* jge dword 0x1007a94c */
    II(0x1007a814, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x1007a818, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1007a81b, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1007a820, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1007a822, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007a825, 0x5)   calld(0x1008b1a4, 0x1097a);           /* call 0x1008b1a4 */
    II(0x1007a82a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x1007a82e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007a830, 0x2)   jld(0x1007a83e, 0xc);                 /* jl 0x1007a83e */
    II(0x1007a832, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1007a835, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1007a83c, 0x2)   jld(0x1007a840, 0x2);                 /* jl 0x1007a840 */
l_0x1007a83e:
    II(0x1007a83e, 0x2)   jmpd(0x1007a848, 0x8);                /* jmp 0x1007a848 */
l_0x1007a840:
    II(0x1007a840, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3a)); /* movsx eax, word [ebp-0x3a] */
    II(0x1007a844, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007a846, 0x2)   jged(0x1007a84a, 0x2);                /* jge 0x1007a84a */
l_0x1007a848:
    II(0x1007a848, 0x2)   jmpd(0x1007a856, 0xc);                /* jmp 0x1007a856 */
l_0x1007a84a:
    II(0x1007a84a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3a));   /* mov eax, [ebp-0x3a] */
    II(0x1007a84d, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1007a854, 0x2)   jld(0x1007a858, 0x2);                 /* jl 0x1007a858 */
l_0x1007a856:
    II(0x1007a856, 0x2)   jmpd(0x1007a886, 0x2e);               /* jmp 0x1007a886 */
l_0x1007a858:
    II(0x1007a858, 0x4)   cmp(memd_a32(ss, ebp - 0x58), 0);     /* cmp dword [ebp-0x58], 0x0 */
    II(0x1007a85c, 0x2)   jzd(0x1007a884, 0x26);                /* jz 0x1007a884 */
    II(0x1007a85e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x1007a862, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1007a865, 0x3)   add(eax, memd_a32(ss, ebp - 0x58));   /* add eax, [ebp-0x58] */
    II(0x1007a868, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3a)); /* movsx edx, word [ebp-0x3a] */
    II(0x1007a86c, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1007a86e, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1007a870, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007a872, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1007a875, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a878, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x1007a87b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007a880, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007a882, 0x2)   jged(0x1007a886, 0x2);                /* jge 0x1007a886 */
l_0x1007a884:
    II(0x1007a884, 0x2)   jmpd(0x1007a88b, 0x5);                /* jmp 0x1007a88b */
l_0x1007a886:
    II(0x1007a886, 0x5)   jmpd(0x1007a947, 0xbc);               /* jmp 0x1007a947 */
l_0x1007a88b:
    II(0x1007a88b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007a88e, 0x5)   calld(0x10076574, -0x431f);           /* call 0x10076574 */
    II(0x1007a893, 0x3)   mov(edx, memd_a32(ss, ebp - 0x3a));   /* mov edx, [ebp-0x3a] */
    II(0x1007a896, 0x4)   sub(dx, memw_a32(ds, eax + 0x1c));    /* sub dx, [eax+0x1c] */
    II(0x1007a89a, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007a89c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007a89f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007a8a2, 0x5)   calld(0x10076574, -0x4333);           /* call 0x10076574 */
    II(0x1007a8a7, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x3c));   /* mov ebx, [ebp-0x3c] */
    II(0x1007a8aa, 0x4)   sub(bx, memw_a32(ds, eax + 0x1a));    /* sub bx, [eax+0x1a] */
    II(0x1007a8ae, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007a8b0, 0x1)   cwde();                               /* cwde */
    II(0x1007a8b1, 0x5)   calld(0x100a5f65, 0x2b6af);           /* call 0x100a5f65 */
    II(0x1007a8b6, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007a8b9, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007a8bb, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007a8be, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1007a8c0, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1007a8c2, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
//    II(0x1007a8c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1007a8c8, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x5c));    /* cmp ax, [ebp-0x5c] */
    II(0x1007a8cc, 0x6)   jged(0x1007a947, 0x75);               /* jge dword 0x1007a947 */
    II(0x1007a8d2, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x1007a8d6, 0x2)   jzd(0x1007a8ef, 0x17);                /* jz 0x1007a8ef */
    II(0x1007a8d8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x1007a8dc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1007a8df, 0x3)   add(eax, memd_a32(ss, ebp - 0x38));   /* add eax, [ebp-0x38] */
    II(0x1007a8e2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3a)); /* movsx edx, word [ebp-0x3a] */
    II(0x1007a8e6, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1007a8e8, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007a8ea, 0x3)   test(memb_a32(ds, eax), 0x8);         /* test byte [eax], 0x8 */
    II(0x1007a8ed, 0x2)   jnzd(0x1007a947, 0x58);               /* jnz 0x1007a947 */
l_0x1007a8ef:
    II(0x1007a8ef, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x1007a8f2, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x1007a8f5, 0x5)   calld(0x10075e64, -0x4a96);           /* call 0x10075e64 */
    II(0x1007a8fa, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007a8fc, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x1007a8ff, 0x5)   calld(0x1011ff4c, 0xa5648);           /* call 0x1011ff4c */
    II(0x1007a904, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007a906, 0x2)   jzd(0x1007a934, 0x2c);                /* jz 0x1007a934 */
    II(0x1007a908, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1007a90d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007a90e, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x3a)); /* movsx ecx, word [ebp-0x3a] */
    II(0x1007a912, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x3c)); /* movsx ebx, word [ebp-0x3c] */
    II(0x1007a916, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a919, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1007a91c, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1007a91e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007a921, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007a924, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1007a927, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007a92a, 0x5)   calld(0x100702b9, -0xa676);           /* call 0x100702b9 */
    II(0x1007a92f, 0x1)   cwde();                               /* cwde */
    II(0x1007a930, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007a932, 0x2)   jnzd(0x1007a936, 0x2);                /* jnz 0x1007a936 */
l_0x1007a934:
    II(0x1007a934, 0x2)   jmpd(0x1007a947, 0x11);               /* jmp 0x1007a947 */
l_0x1007a936:
    II(0x1007a936, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x1007a939, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007a93c, 0x5)   calld(0x10088b44, 0xe203);            /* call 0x10088b44 */
    II(0x1007a941, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1007a944, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
l_0x1007a947:
    II(0x1007a947, 0x5)   jmpd(0x1007a7fc, -0x150);             /* jmp 0x1007a7fc */
l_0x1007a94c:
    II(0x1007a94c, 0x5)   jmpd(0x1007a7e2, -0x16f);             /* jmp 0x1007a7e2 */
l_0x1007a951:
    II(0x1007a951, 0x5)   jmpd(0x1007a7b8, -0x19e);             /* jmp 0x1007a7b8 */
l_0x1007a956:
    II(0x1007a956, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1007a959, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007a95c, 0x4)   cmp(ax, memw_a32(ds, edx + 0x1a));    /* cmp ax, [edx+0x1a] */
    II(0x1007a960, 0x2)   jnzd(0x1007a972, 0x10);               /* jnz 0x1007a972 */
    II(0x1007a962, 0x3)   mov(eax, memd_a32(ss, ebp - 0x32));   /* mov eax, [ebp-0x32] */
    II(0x1007a965, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007a968, 0x4)   cmp(ax, memw_a32(ds, edx + 0x1c));    /* cmp ax, [edx+0x1c] */
    II(0x1007a96c, 0x6)   jzd(0x1007aa14, 0xa2);                /* jz dword 0x1007aa14 */
l_0x1007a972:
    II(0x1007a972, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x1007a977, 0x5)   calld(sys_new, 0xeb484);              /* call 0x10165e00 */
    II(0x1007a97c, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
//    II(0x1007a97f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x1007a982, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x1007a985, 0x4)   cmp(memd_a32(ss, ebp - 0x78), 0);     /* cmp dword [ebp-0x78], 0x0 */
    II(0x1007a989, 0x2)   jzd(0x1007a9c1, 0x36);                /* jz 0x1007a9c1 */
    II(0x1007a98b, 0x5)   mov(eax, 0x100b0ebb);                 /* mov eax, 0x100b0ebb */
    II(0x1007a990, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007a991, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x1007a994, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x1007a997, 0x5)   calld(0x10075e64, -0x4b38);           /* call 0x10075e64 */
    II(0x1007a99c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007a99d, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1007a9a2, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007a9a3, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1007a9a5, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x1007a9a8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007a9ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x1007a9ae, 0x5)   calld(0x100ac220, 0x3186d);           /* call 0x100ac220 */
    II(0x1007a9b3, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
//    II(0x1007a9b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x1007a9b9, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
    II(0x1007a9bf, 0x2)   jmpd(0x1007a9ca, 0x9);                /* jmp 0x1007a9ca */
l_0x1007a9c1:
    II(0x1007a9c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x1007a9c4, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
l_0x1007a9ca:
    II(0x1007a9ca, 0x6)   mov(edx, memd_a32(ss, ebp - 0x84));   /* mov edx, [ebp+0xffffff7c] */
    II(0x1007a9d0, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x1007a9d6, 0x5)   calld(0x1008a5f0, 0xfc15);            /* call 0x1008a5f0 */
    II(0x1007a9db, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1007a9e0, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x1007a9e6, 0x5)   calld(0x1008a520, 0xfb35);            /* call 0x1008a520 */
    II(0x1007a9eb, 0x5)   calld(0x1008a6a4, 0xfcb4);            /* call 0x1008a6a4 */
    II(0x1007a9f0, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x1007a9f6, 0x5)   calld(0x1008a57c, 0xfb81);            /* call 0x1008a57c */
    II(0x1007a9fb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007a9fd, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1007aa02, 0x5)   calld(0x100a4d50, 0x2a349);           /* call 0x100a4d50 */
    II(0x1007aa07, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007aa09, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x1007aa0f, 0x5)   calld(0x10088d4c, 0xe338);            /* call 0x10088d4c */
l_0x1007aa14:
    II(0x1007aa14, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1007aa18, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007aa1a, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x1007aa1d, 0x5)   calld(my_dtor_d1, 0xe2da);            /* call 0x10088cfc */
    II(0x1007aa22, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007aa24, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007aa27, 0x5)   calld(0x10075f2c, -0x4b00);           /* call 0x10075f2c */
    II(0x1007aa2c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007aa2e, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007aa31, 0x5)   calld(0x10075f6c, -0x4aca);           /* call 0x10075f6c */
    II(0x1007aa36, 0x2)   jmpd(0x1007aa66, 0x2e);               /* jmp 0x1007aa66 */
l_0x1007aa38:
    II(0x1007aa38, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1007aa3c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007aa3e, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1007aa41, 0x5)   calld(0x10075f2c, -0x4b1a);           /* call 0x10075f2c */
    II(0x1007aa46, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007aa48, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007aa4b, 0x5)   calld(0x10075f6c, -0x4ae4);           /* call 0x10075f6c */
    II(0x1007aa50, 0x2)   jmpd(0x1007aa66, 0x14);               /* jmp 0x1007aa66 */
//  II(0x1007aa52, 0x14)  /* Недостижимый код. */
l_0x1007aa66:
    II(0x1007aa66, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1007aa69, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007aa6b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007aa6c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007aa6d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007aa6e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007aa6f, 0x1)   retd();                               /* ret */
FUNC_END

