FUNC_BEGIN(0x10160d16, 0xad5dab665108d86a, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x32, 0x50, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x15, 0x2, 0x74, 0xb, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x2e, 0x88, 0x45, 0xf4, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x29, 0x88, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x41, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1a, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x43, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1c, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xe4, 0xe8, 0xb6, 0xb5, 0xff, 0xff, 0x89, 0x45, 0xec, 0x31, 0xd2, 0x8a, 0x55, 0xf8, 0xf, 0xbf, 0x45, 0xec, 0x39, 0xc2, 0xf, 0x85, 0xac, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x8, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x7d, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xdc, 0x39, 0xc2, 0x74, 0x19, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x3c, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0xc, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0xe8, 0x2, 0xe8, 0xfe, 0xff, 0xe9, 0x70, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe0, 0x1, 0, 0, 0, 0xe9, 0x74, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x8b, 0x55, 0xec, 0x29, 0xc2, 0x89, 0xd0, 0x5, 0x8, 0, 0, 0, 0x25, 0x7, 0, 0, 0, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0x7e, 0x9, 0xc7, 0x45, 0xec, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x8a, 0x45, 0xf8, 0x2, 0x45, 0xec, 0x24, 0x7, 0x88, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x15, 0x2, 0x74, 0x17, 0xbb, 0x1, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0xea, 0xd8, 0xfe, 0xff, 0xeb, 0x10, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x36, 0x91, 0xfe, 0xff, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10160d16, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x10160d1b, 0x5)   calld(sys_check_available_stack_size, 0x5032); /* call 0x10165d52 */
    II(0x10160d20, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10160d21, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10160d22, 0x1)   pushd(edx);                           /* push edx */
    II(0x10160d23, 0x1)   pushd(esi);                           /* push esi */
    II(0x10160d24, 0x1)   pushd(edi);                           /* push edi */
    II(0x10160d25, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10160d26, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10160d28, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x10160d2e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10160d31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160d34, 0x4)   test(memb_a32(ds, eax + 0x15), 0x2);  /* test byte [eax+0x15], 0x2 */
    II(0x10160d38, 0x2)   jzd(0x10160d45, 0xb);                 /* jz 0x10160d45 */
    II(0x10160d3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160d3d, 0x3)   mov(al, memb_a32(ds, eax + 0x2e));    /* mov al, [eax+0x2e] */
    II(0x10160d40, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x10160d43, 0x2)   jmpd(0x10160d4e, 0x9);                /* jmp 0x10160d4e */
l_0x10160d45:
    II(0x10160d45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160d48, 0x3)   mov(al, memb_a32(ds, eax + 0x29));    /* mov al, [eax+0x29] */
    II(0x10160d4b, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
l_0x10160d4e:
    II(0x10160d4e, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10160d51, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10160d54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160d57, 0x4)   mov(ax, memw_a32(ds, eax + 0x41));    /* mov ax, [eax+0x41] */
    II(0x10160d5b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10160d5e, 0x4)   sub(ax, memw_a32(ds, edx + 0x1a));    /* sub ax, [edx+0x1a] */
    II(0x10160d62, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10160d65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160d68, 0x4)   mov(ax, memw_a32(ds, eax + 0x43));    /* mov ax, [eax+0x43] */
    II(0x10160d6c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10160d6f, 0x4)   sub(ax, memw_a32(ds, edx + 0x1c));    /* sub ax, [edx+0x1c] */
    II(0x10160d73, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10160d76, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10160d7a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10160d7e, 0x5)   calld(0x1015c339, -0x4a4a);           /* call 0x1015c339 */
    II(0x10160d83, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10160d86, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10160d88, 0x3)   mov(dl, memb_a32(ss, ebp - 0x8));     /* mov dl, [ebp-0x8] */
    II(0x10160d8b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10160d8f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10160d91, 0x6)   jnzd(0x10160e43, 0xac);               /* jnz dword 0x10160e43 */
    II(0x10160d97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160d9a, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x8);   /* mov byte [eax+0x3e], 0x8 */
    II(0x10160d9e, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x10160da5, 0x2)   jmpd(0x10160dad, 0x6);                /* jmp 0x10160dad */
l_0x10160da7:
    II(0x10160da7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10160daa, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x10160dad:
    II(0x10160dad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10160db1, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10160db4, 0x6)   jged(0x10160e37, 0x7d);               /* jge dword 0x10160e37 */
    II(0x10160dba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160dbd, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10160dc0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10160dc5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10160dc9, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10160dcb, 0x2)   jzd(0x10160de6, 0x19);                /* jz 0x10160de6 */
    II(0x10160dcd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10160dd1, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10160dd7, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10160ddd, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10160de2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10160de4, 0x2)   jnzd(0x10160de8, 0x2);                /* jnz 0x10160de8 */
l_0x10160de6:
    II(0x10160de6, 0x2)   jmpd(0x10160e24, 0x3c);               /* jmp 0x10160e24 */
l_0x10160de8:
    II(0x10160de8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160deb, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x10160dee, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10160df1, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x10160df6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10160df9, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10160dfc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160dff, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10160e02, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10160e05, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10160e07, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10160e0b, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10160e11, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x10160e17, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10160e19, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10160e1b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10160e20, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10160e22, 0x2)   jnzd(0x10160e26, 0x2);                /* jnz 0x10160e26 */
l_0x10160e24:
    II(0x10160e24, 0x2)   jmpd(0x10160e32, 0xc);                /* jmp 0x10160e32 */
l_0x10160e26:
    II(0x10160e26, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10160e2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160e2d, 0x5)   calld(0x1014f634, -0x117fe);          /* call 0x1014f634 */
l_0x10160e32:
    II(0x10160e32, 0x5)   jmpd(0x10160da7, -0x90);              /* jmp 0x10160da7 */
l_0x10160e37:
    II(0x10160e37, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x1);   /* mov dword [ebp-0x20], 0x1 */
    II(0x10160e3e, 0x5)   jmpd(0x10160eb7, 0x74);               /* jmp 0x10160eb7 */
l_0x10160e43:
    II(0x10160e43, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10160e45, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10160e48, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x10160e4b, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10160e4d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10160e4f, 0x5)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x10160e54, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x10160e59, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10160e5c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10160e60, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10160e63, 0x2)   jled(0x10160e6e, 0x9);                /* jle 0x10160e6e */
    II(0x10160e65, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xffffffff); /* mov dword [ebp-0x14], 0xffffffff */
    II(0x10160e6c, 0x2)   jmpd(0x10160e75, 0x7);                /* jmp 0x10160e75 */
l_0x10160e6e:
    II(0x10160e6e, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
l_0x10160e75:
    II(0x10160e75, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10160e78, 0x3)   add(al, memb_a32(ss, ebp - 0x14));    /* add al, [ebp-0x14] */
    II(0x10160e7b, 0x2)   and_(al, 0x7);                        /* and al, 0x7 */
    II(0x10160e7d, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10160e80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160e83, 0x4)   test(memb_a32(ds, eax + 0x15), 0x2);  /* test byte [eax+0x15], 0x2 */
    II(0x10160e87, 0x2)   jzd(0x10160ea0, 0x17);                /* jz 0x10160ea0 */
    II(0x10160e89, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10160e8e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10160e90, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10160e93, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10160e96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160e99, 0x5)   calld(0x1014e788, -0x12716);          /* call 0x1014e788 */
    II(0x10160e9e, 0x2)   jmpd(0x10160eb0, 0x10);               /* jmp 0x10160eb0 */
l_0x10160ea0:
    II(0x10160ea0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10160ea2, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10160ea5, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10160ea8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10160eab, 0x5)   calld(0x10149fe6, -0x16eca);          /* call 0x10149fe6 */
l_0x10160eb0:
    II(0x10160eb0, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x10160eb7:
    II(0x10160eb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10160eba, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10160ebc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10160ebd, 0x1)   popd(edi);                            /* pop edi */
    II(0x10160ebe, 0x1)   popd(esi);                            /* pop esi */
    II(0x10160ebf, 0x1)   popd(edx);                            /* pop edx */
    II(0x10160ec0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10160ec1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10160ec2, 0x1)   retd();                               /* ret */
FUNC_END

