FUNC_BEGIN(0x10103752, 0x251cf4d3d5bdca51, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xf6, 0x25, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x75, 0x19, 0xb9, 0x6, 0x1, 0, 0, 0xbb, 0x9f, 0x31, 0x1a, 0x10, 0xba, 0xa8, 0x31, 0x1a, 0x10, 0xb8, 0xdb, 0x31, 0x1a, 0x10, 0xe8, 0x46, 0xd0, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x4d, 0xf4, 0xf, 0xbf, 0x5d, 0xf0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x8d, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x45, 0xf, 0xbf, 0x4d, 0xf4, 0x8b, 0x45, 0xf0, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x6e, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xf0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x58, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x40, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf0, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x3f, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10103752, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10103757, 0x5)   calld(sys_check_available_stack_size, 0x625f6); /* call 0x10165d52 */
    II(0x1010375c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010375d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010375e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010375f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10103760, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10103761, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10103763, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10103769, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010376c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1010376f, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x10103773, 0x2)   jnzd(0x1010378e, 0x19);               /* jnz 0x1010378e */
    II(0x10103775, 0x5)   mov(ecx, 0x106);                      /* mov ecx, 0x106 */
    II(0x1010377a, 0x5)   mov(ebx, 0x101a319f);                 /* mov ebx, 0x101a319f */ /* "hash.cpp" */
    II(0x1010377f, 0x5)   mov(edx, 0x101a31a8);                 /* mov edx, 0x101a31a8 */ /* "Attempted to remove NULL unit from map hash table." */
    II(0x10103784, 0x5)   mov(eax, 0x101a31db);                 /* mov eax, 0x101a31db */ /* "unit != 0" */
    II(0x10103789, 0x5)   calld(0x100f07d4, -0x12fba);          /* call 0x100f07d4 */
l_0x1010378e:
    II(0x1010378e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103791, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x10103795, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10103798, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010379b, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1010379f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101037a2, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x101037a6, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x101037aa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101037ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101037b0, 0x5)   calld(0x10103642, -0x173);            /* call 0x10103642 */
    II(0x101037b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101037b8, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x101037bc, 0x2)   jzd(0x10103803, 0x45);                /* jz 0x10103803 */
    II(0x101037be, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x101037c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101037c5, 0x1)   inc(eax);                             /* inc eax */
    II(0x101037c6, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101037c9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101037cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101037cf, 0x5)   calld(0x10103642, -0x192);            /* call 0x10103642 */
    II(0x101037d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101037d7, 0x1)   inc(eax);                             /* inc eax */
    II(0x101037d8, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x101037db, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x101037df, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101037e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101037e5, 0x5)   calld(0x10103642, -0x1a8);            /* call 0x10103642 */
    II(0x101037ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101037ed, 0x1)   inc(eax);                             /* inc eax */
    II(0x101037ee, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x101037f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101037f4, 0x1)   inc(eax);                             /* inc eax */
    II(0x101037f5, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101037f8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101037fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101037fe, 0x5)   calld(0x10103642, -0x1c1);            /* call 0x10103642 */
l_0x10103803:
    II(0x10103803, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10103805, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10103806, 0x1)   popd(edi);                            /* pop edi */
    II(0x10103807, 0x1)   popd(esi);                            /* pop esi */
    II(0x10103808, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10103809, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010380a, 0x1)   retd();                               /* ret */
FUNC_END

