FUNC_BEGIN(0x10095947, 0x2d0185357f37d4af, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0x1, 0x4, 0xd, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0xc5, 0x9, 0xfe, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x39, 0xb, 0xfe, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x69, 0x11, 0xfe, 0xff, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0xa6, 0x9, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xa0, 0xa, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x52, 0x12, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xc1, 0x53, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x4e, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xe0, 0x9, 0xfe, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x75, 0x13, 0x8d, 0x45, 0xec, 0xe8, 0xd2, 0x9, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x5, 0xf, 0x85, 0x28, 0x1, 0, 0, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xec, 0xe8, 0xbc, 0x9, 0xfe, 0xff, 0xe8, 0x49, 0xcb, 0xb, 0, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xe4, 0x5, 0x2, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xe0, 0x5, 0x2, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xdc, 0x83, 0xe8, 0x2, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xd8, 0x83, 0xe8, 0x2, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x8a, 0xb0, 0xff, 0xff, 0x31, 0xc0, 0x50, 0x8b, 0x45, 0xe4, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xe0, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xdc, 0x48, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xd8, 0x48, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x62, 0xb0, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xd8, 0x83, 0xe8, 0x2, 0xe8, 0x27, 0x14, 0xfe, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe0, 0x83, 0xc0, 0x2, 0xe8, 0x18, 0x3d, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x31, 0xd2, 0x8b, 0x45, 0xdc, 0x83, 0xe8, 0x2, 0xe8, 0, 0x14, 0xfe, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe4, 0x83, 0xc0, 0x2, 0xe8, 0xf1, 0x3c, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8d, 0x45, 0xec, 0xe8, 0x2, 0x9, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x5, 0x75, 0x9, 0x8b, 0x45, 0x10, 0x40, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0x10, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd8, 0x66, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0x8b, 0x45, 0xe8, 0x66, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x3b, 0x45, 0xe0, 0x7d, 0x34, 0x8b, 0x45, 0xdc, 0x66, 0x89, 0x45, 0xea, 0xeb, 0x7, 0x8b, 0x45, 0xea, 0x66, 0xff, 0x45, 0xea, 0xf, 0xbf, 0x45, 0xea, 0x3b, 0x45, 0xe4, 0x7d, 0x19, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0xf, 0xbf, 0x5d, 0xea, 0x8b, 0x10, 0x1, 0xda, 0x8a, 0x45, 0xd4, 0x88, 0x2, 0xeb, 0xd7, 0xeb, 0xbc, 0xe9, 0x98, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x21, 0xe8, 0xb7, 0x6b, 0, 0, 0x8d, 0x5d, 0xd0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xbf, 0x6a, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xd0, 0xe8, 0xd1, 0x10, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x40, 0x52, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x5c, 0x1, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0xb7, 0x69, 0, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xcc, 0xff, 0x52, 0x70, 0x84, 0xc0, 0x74, 0xd, 0x8d, 0x45, 0xd0, 0xe8, 0xd0, 0x69, 0, 0, 0x3b, 0x45, 0xfc, 0x75, 0x2, 0xeb, 0x2f, 0x8d, 0x45, 0xd0, 0xe8, 0x8d, 0x69, 0, 0, 0xe8, 0x54, 0x69, 0, 0, 0x98, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x10, 0x75, 0x13, 0x8d, 0x45, 0xd0, 0xe8, 0x73, 0x69, 0, 0, 0xe8, 0x3a, 0x69, 0, 0, 0x66, 0x3d, 0x5, 0, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0xf9, 0, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x59, 0x69, 0, 0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x8b, 0x58, 0x2, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xc8, 0xff, 0x53, 0x1c, 0x31, 0xc0, 0x50, 0x8b, 0x45, 0xe4, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xe0, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xdc, 0x48, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xd8, 0x48, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0xd1, 0xae, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xd8, 0x48, 0xe8, 0x98, 0x12, 0xfe, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe0, 0x40, 0xe8, 0x8b, 0x3b, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x31, 0xd2, 0x8b, 0x45, 0xdc, 0x48, 0xe8, 0x75, 0x12, 0xfe, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe4, 0x40, 0xe8, 0x68, 0x3b, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8d, 0x45, 0xd0, 0xe8, 0xd1, 0x68, 0, 0, 0xe8, 0x98, 0x68, 0, 0, 0x66, 0x3d, 0x5, 0, 0x75, 0xa, 0x8b, 0x45, 0x10, 0x40, 0x66, 0x89, 0x45, 0xd4, 0xeb, 0x7, 0x8b, 0x45, 0x10, 0x66, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd8, 0x66, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0x8b, 0x45, 0xe8, 0x66, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x3b, 0x45, 0xe0, 0x7d, 0x34, 0x8b, 0x45, 0xdc, 0x66, 0x89, 0x45, 0xea, 0xeb, 0x7, 0x8b, 0x45, 0xea, 0x66, 0xff, 0x45, 0xea, 0xf, 0xbf, 0x45, 0xea, 0x3b, 0x45, 0xe4, 0x7d, 0x19, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0xf, 0xbf, 0x5d, 0xea, 0x8b, 0x10, 0x1, 0xda, 0x8a, 0x45, 0xd4, 0x88, 0x2, 0xeb, 0xd7, 0xeb, 0xbc, 0xe9, 0x8a, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xcd, 0x5d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xc3, 0x2, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x10095947, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x1009594c, 0x5)   calld(sys_check_available_stack_size, 0xd0401); /* call 0x10165d52 */
    II(0x10095951, 0x1)   pushd(esi);                           /* push esi */
    II(0x10095952, 0x1)   pushd(edi);                           /* push edi */
    II(0x10095953, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10095954, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10095956, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x1009595c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1009595f, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10095962, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10095965, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
//    II(0x10095968, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009596b, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009596e, 0x5)   calld(0x10076338, -0x1f63b);          /* call 0x10076338 */
    II(0x10095973, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x10095976, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10095978, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009597a, 0x5)   calld(0x100764b8, -0x1f4c7);          /* call 0x100764b8 */
    II(0x1009597f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10095982, 0x5)   calld(my_ctor_0x101b4184, -0x1ee97);  /* call 0x10076af0 */
    II(0x10095987, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009598a, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009598d, 0x5)   calld(0x10076338, -0x1f65a);          /* call 0x10076338 */
    II(0x10095992, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10095994, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10095997, 0x5)   calld(0x1007643c, -0x1f560);          /* call 0x1007643c */
    II(0x1009599c, 0x2)   jmpd(0x100959a6, 0x8);                /* jmp 0x100959a6 */
l_0x1009599e:
    II(0x1009599e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100959a1, 0x5)   calld(0x10076bf8, -0x1edae);          /* call 0x10076bf8 */
l_0x100959a6:
    II(0x100959a6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100959a8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100959ab, 0x5)   calld(0x1013ad71, 0xa53c1);           /* call 0x1013ad71 */
    II(0x100959b0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100959b2, 0x6)   jzd(0x10095b06, 0x14e);               /* jz dword 0x10095b06 */
    II(0x100959b8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100959bb, 0x5)   calld(0x100763a0, -0x1f620);          /* call 0x100763a0 */
    II(0x100959c0, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x100959c4, 0x2)   jnzd(0x100959d9, 0x13);               /* jnz 0x100959d9 */
    II(0x100959c6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100959c9, 0x5)   calld(0x100763a0, -0x1f62e);          /* call 0x100763a0 */
    II(0x100959ce, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x5);    /* cmp word [eax+0x8], 0x5 */
    II(0x100959d3, 0x6)   jnzd(0x10095b01, 0x128);              /* jnz dword 0x10095b01 */
l_0x100959d9:
    II(0x100959d9, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x100959dc, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100959df, 0x5)   calld(0x100763a0, -0x1f644);          /* call 0x100763a0 */
    II(0x100959e4, 0x5)   calld(0x10152532, 0xbcb49);           /* call 0x10152532 */
    II(0x100959e9, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100959ee, 0x1)   pushd(eax);                           /* push eax */
    II(0x100959ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100959f2, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100959f7, 0x1)   cwde();                               /* cwde */
    II(0x100959f8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100959f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100959fc, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10095a01, 0x1)   cwde();                               /* cwde */
    II(0x10095a02, 0x1)   pushd(eax);                           /* push eax */
    II(0x10095a03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10095a06, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x10095a09, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10095a0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10095a0f, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x10095a12, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10095a15, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10095a18, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10095a1b, 0x5)   calld(0x10090aaa, -0x4f76);           /* call 0x10090aaa */
    II(0x10095a20, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10095a22, 0x1)   pushd(eax);                           /* push eax */
    II(0x10095a23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10095a26, 0x1)   inc(eax);                             /* inc eax */
    II(0x10095a27, 0x1)   cwde();                               /* cwde */
    II(0x10095a28, 0x1)   pushd(eax);                           /* push eax */
    II(0x10095a29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10095a2c, 0x1)   inc(eax);                             /* inc eax */
    II(0x10095a2d, 0x1)   cwde();                               /* cwde */
    II(0x10095a2e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10095a2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10095a32, 0x1)   dec(eax);                             /* dec eax */
    II(0x10095a33, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10095a36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10095a39, 0x1)   dec(eax);                             /* dec eax */
    II(0x10095a3a, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10095a3d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10095a40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10095a43, 0x5)   calld(0x10090aaa, -0x4f9e);           /* call 0x10090aaa */
    II(0x10095a48, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10095a4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10095a4d, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x10095a50, 0x5)   calld(0x10076e7c, -0x1ebd9);          /* call 0x10076e7c */
    II(0x10095a55, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10095a58, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x10095a5e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10095a61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10095a64, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10095a67, 0x5)   calld(my_min, -0xc2e8);               /* call 0x10089784 */
    II(0x10095a6c, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10095a6f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10095a71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10095a74, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x10095a77, 0x5)   calld(0x10076e7c, -0x1ec00);          /* call 0x10076e7c */
    II(0x10095a7c, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10095a7f, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x10095a85, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10095a88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10095a8b, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10095a8e, 0x5)   calld(my_min, -0xc30f);               /* call 0x10089784 */
    II(0x10095a93, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10095a96, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10095a99, 0x5)   calld(0x100763a0, -0x1f6fe);          /* call 0x100763a0 */
    II(0x10095a9e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x5);    /* cmp word [eax+0x8], 0x5 */
    II(0x10095aa3, 0x2)   jnzd(0x10095aae, 0x9);                /* jnz 0x10095aae */
    II(0x10095aa5, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10095aa8, 0x1)   inc(eax);                             /* inc eax */
    II(0x10095aa9, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10095aac, 0x2)   jmpd(0x10095ab4, 0x6);                /* jmp 0x10095ab4 */
l_0x10095aae:
    II(0x10095aae, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10095ab1, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x10095ab4:
    II(0x10095ab4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10095ab7, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x10095abb, 0x2)   jmpd(0x10095ac4, 0x7);                /* jmp 0x10095ac4 */
l_0x10095abd:
    II(0x10095abd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10095ac0, 0x4)   inc(memw_a32(ss, ebp - 0x18));        /* inc word [ebp-0x18] */
l_0x10095ac4:
    II(0x10095ac4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10095ac8, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x20));   /* cmp eax, [ebp-0x20] */
    II(0x10095acb, 0x2)   jged(0x10095b01, 0x34);               /* jge 0x10095b01 */
    II(0x10095acd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10095ad0, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x10095ad4, 0x2)   jmpd(0x10095add, 0x7);                /* jmp 0x10095add */
l_0x10095ad6:
    II(0x10095ad6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x10095ad9, 0x4)   inc(memw_a32(ss, ebp - 0x16));        /* inc word [ebp-0x16] */
l_0x10095add:
    II(0x10095add, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x16)); /* movsx eax, word [ebp-0x16] */
    II(0x10095ae1, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x1c));   /* cmp eax, [ebp-0x1c] */
    II(0x10095ae4, 0x2)   jged(0x10095aff, 0x19);               /* jge 0x10095aff */
    II(0x10095ae6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10095aea, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10095aed, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10095af0, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x16)); /* movsx ebx, word [ebp-0x16] */
    II(0x10095af4, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x10095af6, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x10095af8, 0x3)   mov(al, memb_a32(ss, ebp - 0x2c));    /* mov al, [ebp-0x2c] */
    II(0x10095afb, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x10095afd, 0x2)   jmpd(0x10095ad6, -0x29);              /* jmp 0x10095ad6 */
l_0x10095aff:
    II(0x10095aff, 0x2)   jmpd(0x10095abd, -0x44);              /* jmp 0x10095abd */
l_0x10095b01:
    II(0x10095b01, 0x5)   jmpd(0x1009599e, -0x168);             /* jmp 0x1009599e */
l_0x10095b06:
    II(0x10095b06, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10095b09, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x10095b0c, 0x5)   calld(0x1009c6c8, 0x6bb7);            /* call 0x1009c6c8 */
    II(0x10095b11, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x10095b14, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10095b16, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10095b18, 0x5)   calld(0x1009c5dc, 0x6abf);            /* call 0x1009c5dc */
    II(0x10095b1d, 0x2)   jmpd(0x10095b27, 0x8);                /* jmp 0x10095b27 */
l_0x10095b1f:
    II(0x10095b1f, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10095b22, 0x5)   calld(0x10076bf8, -0x1ef2f);          /* call 0x10076bf8 */
l_0x10095b27:
    II(0x10095b27, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10095b29, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10095b2c, 0x5)   calld(0x1013ad71, 0xa5240);           /* call 0x1013ad71 */
    II(0x10095b31, 0x2)   test(al, al);                         /* test al, al */
    II(0x10095b33, 0x6)   jzd(0x10095c95, 0x15c);               /* jz dword 0x10095c95 */
    II(0x10095b39, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10095b3c, 0x5)   calld(0x1009c4f8, 0x69b7);            /* call 0x1009c4f8 */
    II(0x10095b41, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x10095b44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10095b47, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10095b4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10095b4d, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x10095b50, 0x2)   test(al, al);                         /* test al, al */
    II(0x10095b52, 0x2)   jzd(0x10095b61, 0xd);                 /* jz 0x10095b61 */
    II(0x10095b54, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10095b57, 0x5)   calld(0x1009c52c, 0x69d0);            /* call 0x1009c52c */
    II(0x10095b5c, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x10095b5f, 0x2)   jnzd(0x10095b63, 0x2);                /* jnz 0x10095b63 */
l_0x10095b61:
    II(0x10095b61, 0x2)   jmpd(0x10095b92, 0x2f);               /* jmp 0x10095b92 */
l_0x10095b63:
    II(0x10095b63, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10095b66, 0x5)   calld(0x1009c4f8, 0x698d);            /* call 0x1009c4f8 */
    II(0x10095b6b, 0x5)   calld(0x1009c4c4, 0x6954);            /* call 0x1009c4c4 */
    II(0x10095b70, 0x1)   cwde();                               /* cwde */
    II(0x10095b71, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10095b74, 0x7)   test(memb_a32(ds, eax + 0x101c81c0), 0x10); /* test byte [eax+0x101c81c0], 0x10 */
    II(0x10095b7b, 0x2)   jnzd(0x10095b90, 0x13);               /* jnz 0x10095b90 */
    II(0x10095b7d, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10095b80, 0x5)   calld(0x1009c4f8, 0x6973);            /* call 0x1009c4f8 */
    II(0x10095b85, 0x5)   calld(0x1009c4c4, 0x693a);            /* call 0x1009c4c4 */
    II(0x10095b8a, 0x4)   cmp(ax, 0x5);                         /* cmp ax, 0x5 */
    II(0x10095b8e, 0x2)   jnzd(0x10095b92, 0x2);                /* jnz 0x10095b92 */
l_0x10095b90:
    II(0x10095b90, 0x2)   jmpd(0x10095b97, 0x5);                /* jmp 0x10095b97 */
l_0x10095b92:
    II(0x10095b92, 0x5)   jmpd(0x10095c90, 0xf9);               /* jmp 0x10095c90 */
l_0x10095b97:
    II(0x10095b97, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10095b9a, 0x5)   calld(0x1009c4f8, 0x6959);            /* call 0x1009c4f8 */
    II(0x10095b9f, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x10095ba2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10095ba5, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10095ba8, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x10095bab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10095bae, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x10095bb1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10095bb3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10095bb4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10095bb7, 0x1)   inc(eax);                             /* inc eax */
    II(0x10095bb8, 0x1)   cwde();                               /* cwde */
    II(0x10095bb9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10095bba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10095bbd, 0x1)   inc(eax);                             /* inc eax */
    II(0x10095bbe, 0x1)   cwde();                               /* cwde */
    II(0x10095bbf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10095bc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10095bc3, 0x1)   dec(eax);                             /* dec eax */
    II(0x10095bc4, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10095bc7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10095bca, 0x1)   dec(eax);                             /* dec eax */
    II(0x10095bcb, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10095bce, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10095bd1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10095bd4, 0x5)   calld(0x10090aaa, -0x512f);           /* call 0x10090aaa */
    II(0x10095bd9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10095bdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10095bde, 0x1)   dec(eax);                             /* dec eax */
    II(0x10095bdf, 0x5)   calld(0x10076e7c, -0x1ed68);          /* call 0x10076e7c */
    II(0x10095be4, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10095be7, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x10095bed, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10095bf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10095bf3, 0x1)   inc(eax);                             /* inc eax */
    II(0x10095bf4, 0x5)   calld(my_min, -0xc475);               /* call 0x10089784 */
    II(0x10095bf9, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10095bfc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10095bfe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10095c01, 0x1)   dec(eax);                             /* dec eax */
    II(0x10095c02, 0x5)   calld(0x10076e7c, -0x1ed8b);          /* call 0x10076e7c */
    II(0x10095c07, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10095c0a, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x10095c10, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10095c13, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10095c16, 0x1)   inc(eax);                             /* inc eax */
    II(0x10095c17, 0x5)   calld(my_min, -0xc498);               /* call 0x10089784 */
    II(0x10095c1c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10095c1f, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10095c22, 0x5)   calld(0x1009c4f8, 0x68d1);            /* call 0x1009c4f8 */
    II(0x10095c27, 0x5)   calld(0x1009c4c4, 0x6898);            /* call 0x1009c4c4 */
    II(0x10095c2c, 0x4)   cmp(ax, 0x5);                         /* cmp ax, 0x5 */
    II(0x10095c30, 0x2)   jnzd(0x10095c3c, 0xa);                /* jnz 0x10095c3c */
    II(0x10095c32, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10095c35, 0x1)   inc(eax);                             /* inc eax */
    II(0x10095c36, 0x4)   mov(memw_a32(ss, ebp - 0x2c), ax);    /* mov [ebp-0x2c], ax */
    II(0x10095c3a, 0x2)   jmpd(0x10095c43, 0x7);                /* jmp 0x10095c43 */
l_0x10095c3c:
    II(0x10095c3c, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10095c3f, 0x4)   mov(memw_a32(ss, ebp - 0x2c), ax);    /* mov [ebp-0x2c], ax */
l_0x10095c43:
    II(0x10095c43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10095c46, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x10095c4a, 0x2)   jmpd(0x10095c53, 0x7);                /* jmp 0x10095c53 */
l_0x10095c4c:
    II(0x10095c4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10095c4f, 0x4)   inc(memw_a32(ss, ebp - 0x18));        /* inc word [ebp-0x18] */
l_0x10095c53:
    II(0x10095c53, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10095c57, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x20));   /* cmp eax, [ebp-0x20] */
    II(0x10095c5a, 0x2)   jged(0x10095c90, 0x34);               /* jge 0x10095c90 */
    II(0x10095c5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10095c5f, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x10095c63, 0x2)   jmpd(0x10095c6c, 0x7);                /* jmp 0x10095c6c */
l_0x10095c65:
    II(0x10095c65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x10095c68, 0x4)   inc(memw_a32(ss, ebp - 0x16));        /* inc word [ebp-0x16] */
l_0x10095c6c:
    II(0x10095c6c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x16)); /* movsx eax, word [ebp-0x16] */
    II(0x10095c70, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x1c));   /* cmp eax, [ebp-0x1c] */
    II(0x10095c73, 0x2)   jged(0x10095c8e, 0x19);               /* jge 0x10095c8e */
    II(0x10095c75, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10095c79, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10095c7c, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10095c7f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x16)); /* movsx ebx, word [ebp-0x16] */
    II(0x10095c83, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x10095c85, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x10095c87, 0x3)   mov(al, memb_a32(ss, ebp - 0x2c));    /* mov al, [ebp-0x2c] */
    II(0x10095c8a, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x10095c8c, 0x2)   jmpd(0x10095c65, -0x29);              /* jmp 0x10095c65 */
l_0x10095c8e:
    II(0x10095c8e, 0x2)   jmpd(0x10095c4c, -0x44);              /* jmp 0x10095c4c */
l_0x10095c90:
    II(0x10095c90, 0x5)   jmpd(0x10095b1f, -0x176);             /* jmp 0x10095b1f */
l_0x10095c95:
    II(0x10095c95, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10095c97, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10095c9a, 0x5)   calld(0x1009ba6c, 0x5dcd);            /* call 0x1009ba6c */
    II(0x10095c9f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10095ca1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10095ca4, 0x5)   calld(0x10075f6c, -0x1fd3d);          /* call 0x10075f6c */
    II(0x10095ca9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10095cab, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10095cac, 0x1)   popd(edi);                            /* pop edi */
    II(0x10095cad, 0x1)   popd(esi);                            /* pop esi */
    II(0x10095cae, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

