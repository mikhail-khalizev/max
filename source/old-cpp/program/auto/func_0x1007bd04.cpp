FUNC_BEGIN(0x1007bd04, 0x2bbfdb9e30c6efa2, 0x20, ({0x68, 0xd4, 0, 0, 0, 0xe8, 0x44, 0xa0, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xb4, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xe1, 0xef, 0xb, 0, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf0, 0, 0xe9, 0x6, 0x7, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0x58, 0xe7, 0, 0, 0x98, 0x85, 0xc0, 0x75, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0xe3, 0xf8, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0xd4, 0xa5, 0xff, 0xff, 0x8d, 0x5d, 0xcc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x48, 0xa7, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xcc, 0xe8, 0x7e, 0xae, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xed, 0xef, 0xb, 0, 0x84, 0xc0, 0x74, 0x3d, 0x8d, 0x45, 0xcc, 0xe8, 0x10, 0xa6, 0xff, 0xff, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0x39, 0xca, 0x3, 0, 0x98, 0x85, 0xc0, 0x75, 0x1d, 0xe8, 0xf1, 0xe9, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x45, 0xcc, 0xe8, 0x1d, 0xa6, 0xff, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xe9, 0x95, 0x2, 0, 0xeb, 0xad, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x25, 0x7f, 0x13, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x89, 0xa1, 0xff, 0xff, 0xe9, 0x5b, 0x6, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x31, 0, 0xf, 0x84, 0x5c, 0x3, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xc0, 0xe8, 0xef, 0xa8, 0xff, 0xff, 0x89, 0x45, 0xbc, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xb8, 0xe8, 0xdc, 0xa8, 0xff, 0xff, 0x89, 0x45, 0xb4, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x7d, 0xf8, 0, 0x75, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0xf, 0xf8, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xd7, 0xee, 0xb, 0, 0x84, 0xc0, 0x74, 0xc, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xe8, 0xa7, 0xff, 0xff, 0xeb, 0x1a, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x5f, 0xf1, 0, 0, 0xe8, 0x7b, 0x8f, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xb8, 0xe8, 0xcc, 0xa7, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xa3, 0xee, 0xb, 0, 0x84, 0xc0, 0x75, 0x1d, 0x8d, 0x45, 0xb8, 0xe8, 0xfa, 0xa6, 0xff, 0xff, 0xf6, 0x40, 0x12, 0xc0, 0x75, 0xf, 0x8d, 0x45, 0xb8, 0xe8, 0xec, 0xa6, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0xc, 0xc7, 0x45, 0xb0, 0, 0, 0, 0, 0xe9, 0x9a, 0, 0, 0, 0xc7, 0x45, 0xac, 0xff, 0xff, 0xff, 0xff, 0xba, 0x4e, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x27, 0xb3, 0x3, 0, 0x98, 0x85, 0xc0, 0x7e, 0x9, 0xc7, 0x45, 0xac, 0x4e, 0, 0, 0, 0xeb, 0x1f, 0xba, 0x48, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x6, 0xb3, 0x3, 0, 0x98, 0x85, 0xc0, 0x7e, 0x7, 0xc7, 0x45, 0xac, 0x48, 0, 0, 0, 0xb8, 0xf, 0, 0, 0, 0xe8, 0x14, 0x9f, 0xe, 0, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xa4, 0x83, 0x7d, 0xa4, 0, 0x74, 0x2e, 0xf, 0xbf, 0x45, 0xac, 0x50, 0xb9, 0x2, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xbe, 0xa6, 0xff, 0xff, 0x8b, 0x75, 0xa8, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0xa3, 0x3f, 0xa, 0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x89, 0x45, 0x9c, 0xeb, 0x6, 0x8b, 0x45, 0xa4, 0x89, 0x45, 0x9c, 0x8b, 0x45, 0x9c, 0x89, 0x45, 0xb0, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xf1, 0xa6, 0xff, 0xff, 0x8b, 0x45, 0xb0, 0x50, 0x8d, 0x4d, 0x98, 0x31, 0xdb, 0xba, 0x84, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x80, 0xfb, 0xff, 0xff, 0x8d, 0x5d, 0xc0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xcf, 0xa6, 0xff, 0xff, 0x6a, 0, 0x8d, 0x4d, 0x98, 0x8d, 0x45, 0xc0, 0xe8, 0x62, 0xa6, 0xff, 0xff, 0x89, 0xc3, 0xba, 0xa8, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x58, 0xfb, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xc0, 0xe8, 0xa9, 0xa6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xe0, 0xed, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x3c, 0x1, 0, 0, 0x8d, 0x45, 0xc0, 0xe8, 0xd3, 0xa5, 0xff, 0xff, 0xe8, 0xd7, 0x68, 0xd, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0x94, 0x8b, 0x45, 0x94, 0x8b, 0x58, 0x2, 0x8d, 0x45, 0xc0, 0xe8, 0x16, 0xa6, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0x94, 0xff, 0x53, 0x2c, 0xe8, 0x2d, 0xc3, 0xc, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0xf, 0x82, 0xc1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x17, 0xed, 0, 0, 0x84, 0xc0, 0x75, 0x52, 0xe8, 0xd2, 0xe7, 0, 0, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0x90, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x4, 0x9e, 0xe, 0, 0x89, 0x45, 0x8c, 0x8b, 0x45, 0x8c, 0x89, 0x45, 0x88, 0x83, 0x7d, 0x88, 0, 0x74, 0x16, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0x8c, 0xe8, 0xfb, 0x76, 0x2, 0, 0x89, 0x45, 0x84, 0x8b, 0x45, 0x84, 0x89, 0x45, 0x80, 0xeb, 0x6, 0x8b, 0x45, 0x88, 0x89, 0x45, 0x80, 0x8b, 0x55, 0x80, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x5d, 0x90, 0xe8, 0x7f, 0x8d, 0x2, 0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x36, 0x8b, 0x45, 0xb0, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x7c, 0xff, 0xff, 0xff, 0, 0x74, 0x1a, 0x31, 0xd2, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0xa0, 0xcc, 0, 0, 0xe8, 0x3, 0x9f, 0xe, 0, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x78, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xab, 0x9e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xa1, 0x9e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xd7, 0x9e, 0xff, 0xff, 0xe9, 0xa9, 0x3, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x6d, 0xec, 0xb, 0, 0x84, 0xc0, 0x74, 0x11, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xbc, 0xec, 0xb, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x1a, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xee, 0xee, 0, 0, 0xe8, 0xa, 0x8d, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xb8, 0xe8, 0x5b, 0xa5, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x92, 0xec, 0xb, 0, 0x84, 0xc0, 0x74, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x25, 0x7f, 0x2, 0xeb, 0x5, 0xe9, 0x3b, 0xfe, 0xff, 0xff, 0x83, 0x7d, 0xb0, 0, 0x74, 0x36, 0x8b, 0x45, 0xb0, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x74, 0xff, 0xff, 0xff, 0, 0x74, 0x1a, 0x31, 0xd2, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0xdd, 0xcb, 0, 0, 0xe8, 0x40, 0x9e, 0xe, 0, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x31, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xe5, 0x9d, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xdb, 0x9d, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x25, 0x7f, 0x13, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xfd, 0x9d, 0xff, 0xff, 0xe9, 0xcf, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x13, 0, 0x74, 0x13, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xe0, 0x9d, 0xff, 0xff, 0xe9, 0xb2, 0x2, 0, 0, 0x80, 0x7d, 0xf8, 0, 0x75, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0x99, 0xf4, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xd0, 0xe8, 0xa9, 0xe7, 0, 0, 0x89, 0x45, 0xc4, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xd4, 0xe8, 0x2e, 0xa5, 0xff, 0xff, 0x89, 0x45, 0xd8, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x2d, 0x8d, 0x45, 0xc8, 0xe8, 0x25, 0xc3, 0x3, 0, 0x89, 0x45, 0xdc, 0x80, 0x65, 0xf4, 0xfe, 0xe8, 0x60, 0x6f, 0x2, 0, 0x89, 0x45, 0xec, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0x97, 0xe2, 0, 0, 0x66, 0x3b, 0x45, 0xe0, 0x7e, 0x63, 0xf, 0xbf, 0x55, 0xe0, 0x8d, 0x45, 0xc8, 0xe8, 0xc1, 0xe1, 0, 0, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x7, 0xc1, 0xfb, 0x10, 0x69, 0xdb, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xf3, 0x3a, 0x6, 0, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xec, 0x7f, 0x1b, 0xf, 0xbf, 0x55, 0xe0, 0x8d, 0x45, 0xc8, 0xe8, 0x8d, 0xe1, 0, 0, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc3, 0x81, 0x1c, 0x10, 0x10, 0x74, 0x12, 0xf, 0xbf, 0x55, 0xe0, 0x8d, 0x45, 0xc8, 0xe8, 0x72, 0xe1, 0, 0, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0xeb, 0x86, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x27, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x25, 0x89, 0x45, 0xe4, 0x8d, 0x45, 0xc8, 0xe8, 0x7f, 0xc4, 0x3, 0, 0x89, 0x45, 0xe8, 0x66, 0x83, 0x7d, 0xe8, 0xff, 0x75, 0xc, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xe9, 0x40, 0x1, 0, 0, 0xb8, 0xe1, 0, 0, 0, 0xe8, 0x55, 0x9b, 0xe, 0, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x68, 0xff, 0xff, 0xff, 0, 0x74, 0x38, 0xe8, 0xa5, 0xe9, 0, 0, 0x98, 0x50, 0xb9, 0xff, 0xff, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x7, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0x4d, 0xcf, 0xc, 0, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x60, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xd4, 0xe8, 0x18, 0xa3, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x5, 0xdf, 0, 0, 0xe8, 0x48, 0xe0, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0x9e, 0xa2, 0xff, 0xff, 0xe8, 0x43, 0xec, 0xff, 0xff, 0x29, 0x45, 0xe4, 0xb8, 0x1d, 0, 0, 0, 0xe8, 0xbc, 0x9a, 0xe, 0, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x58, 0xff, 0xff, 0xff, 0, 0x74, 0x3a, 0x8d, 0x95, 0x54, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xb8, 0xde, 0, 0, 0xe8, 0xee, 0xca, 0x3, 0, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0xe7, 0x9c, 0x2, 0, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0x89, 0x85, 0x4c, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x89, 0x85, 0x4c, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x4c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0xe5, 0xe4, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x13, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd0, 0xe8, 0x16, 0xe4, 0, 0, 0xe8, 0xf1, 0x9f, 0x2, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x65, 0xe4, 0, 0, 0xbb, 0x80, 0x31, 0x1c, 0x10, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x6f, 0x89, 0x2, 0, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0xf, 0x8f, 0x96, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xd1, 0xc9, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x27, 0x9b, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xad, 0xc8, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x53, 0x9b, 0xff, 0xff, 0xeb, 0x28, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xa7, 0xc9, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xfd, 0x9a, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x83, 0xc8, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x29, 0x9b, 0xff, 0xff, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1007bd04, 0x5)   pushd(0xd4);                          /* push dword 0xd4 */
    II(0x1007bd09, 0x5)   calld(sys_check_available_stack_size, 0xea044); /* call 0x10165d52 */
    II(0x1007bd0e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007bd0f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007bd10, 0x1)   pushd(edx);                           /* push edx */
    II(0x1007bd11, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007bd12, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007bd13, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007bd14, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007bd16, 0x6)   sub(esp, 0xb4);                       /* sub esp, 0xb4 */
    II(0x1007bd1c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1007bd1f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1007bd23, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007bd25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bd28, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1007bd2b, 0x5)   calld(0x1013ad11, 0xbefe1);           /* call 0x1013ad11 */
    II(0x1007bd30, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007bd32, 0x2)   jzd(0x1007bd3d, 0x9);                 /* jz 0x1007bd3d */
    II(0x1007bd34, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x1007bd38, 0x5)   jmpd(0x1007c443, 0x706);              /* jmp 0x1007c443 */
l_0x1007bd3d:
    II(0x1007bd3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bd40, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007bd43, 0x5)   calld(0x1008a4a0, 0xe758);            /* call 0x1008a4a0 */
    II(0x1007bd48, 0x1)   cwde();                               /* cwde */
    II(0x1007bd49, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007bd4b, 0x2)   jnzd(0x1007bd59, 0xc);                /* jnz 0x1007bd59 */
    II(0x1007bd4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bd50, 0x5)   calld(0x1007b638, -0x71d);            /* call 0x1007b638 */
    II(0x1007bd55, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x1007bd59:
    II(0x1007bd59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bd5c, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x1007bd5f, 0x5)   calld(0x10076338, -0x5a2c);           /* call 0x10076338 */
    II(0x1007bd64, 0x3)   lea(ebx, ebp - 0x34);                 /* lea ebx, [ebp-0x34] */
    II(0x1007bd67, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007bd69, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007bd6b, 0x5)   calld(0x100764b8, -0x58b8);           /* call 0x100764b8 */
    II(0x1007bd70, 0x2)   jmpd(0x1007bd7a, 0x8);                /* jmp 0x1007bd7a */
l_0x1007bd72:
    II(0x1007bd72, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007bd75, 0x5)   calld(0x10076bf8, -0x5182);           /* call 0x10076bf8 */
l_0x1007bd7a:
    II(0x1007bd7a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007bd7c, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007bd7f, 0x5)   calld(0x1013ad71, 0xbefed);           /* call 0x1013ad71 */
    II(0x1007bd84, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007bd86, 0x2)   jzd(0x1007bdc5, 0x3d);                /* jz 0x1007bdc5 */
    II(0x1007bd88, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007bd8b, 0x5)   calld(0x100763a0, -0x59f0);           /* call 0x100763a0 */
    II(0x1007bd90, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1007bd93, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007bd96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bd99, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007bd9c, 0x5)   calld(0x100b87da, 0x3ca39);           /* call 0x100b87da */
    II(0x1007bda1, 0x1)   cwde();                               /* cwde */
    II(0x1007bda2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007bda4, 0x2)   jnzd(0x1007bdc3, 0x1d);               /* jnz 0x1007bdc3 */
    II(0x1007bda6, 0x5)   calld(0x1008a79c, 0xe9f1);            /* call 0x1008a79c */
    II(0x1007bdab, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1007bdad, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1007bdaf, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007bdb2, 0x5)   calld(0x100763d4, -0x59e3);           /* call 0x100763d4 */
    II(0x1007bdb7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007bdb9, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1007bdbe, 0x5)   calld(0x100a53ac, 0x295e9);           /* call 0x100a53ac */
l_0x1007bdc3:
    II(0x1007bdc3, 0x2)   jmpd(0x1007bd72, -0x53);              /* jmp 0x1007bd72 */
l_0x1007bdc5:
    II(0x1007bdc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bdc8, 0x4)   mov(dx, memw_a32(ds, eax + 0x27));    /* mov dx, [eax+0x27] */
//    II(0x1007bdcc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bdcf, 0x4)   cmp(dx, memw_a32(ds, eax + 0x25));    /* cmp dx, [eax+0x25] */
    II(0x1007bdd3, 0x2)   jgd(0x1007bde8, 0x13);                /* jg 0x1007bde8 */
    II(0x1007bdd5, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x1007bdd9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007bddb, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007bdde, 0x5)   calld(0x10075f6c, -0x5e77);           /* call 0x10075f6c */
    II(0x1007bde3, 0x5)   jmpd(0x1007c443, 0x65b);              /* jmp 0x1007c443 */
l_0x1007bde8:
    II(0x1007bde8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bdeb, 0x4)   cmp(memb_a32(ds, eax + 0x31), 0);     /* cmp byte [eax+0x31], 0x0 */
    II(0x1007bdef, 0x6)   jzd(0x1007c151, 0x35c);               /* jz dword 0x1007c151 */
    II(0x1007bdf5, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1007bdf9, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007bdfc, 0x5)   calld(my_ctor_0x101b38f8, -0x5711);   /* call 0x100766f0 */
    II(0x1007be01, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x1007be04, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1007be08, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1007be0c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007be0f, 0x5)   calld(my_ctor_0x101b38f8, -0x5724);   /* call 0x100766f0 */
    II(0x1007be14, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x1007be17, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1007be1b, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1007be1f, 0x2)   jnzd(0x1007be2d, 0xc);                /* jnz 0x1007be2d */
    II(0x1007be21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007be24, 0x5)   calld(0x1007b638, -0x7f1);            /* call 0x1007b638 */
    II(0x1007be29, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x1007be2d:
    II(0x1007be2d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007be2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007be32, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1007be35, 0x5)   calld(0x1013ad11, 0xbeed7);           /* call 0x1013ad11 */
    II(0x1007be3a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007be3c, 0x2)   jzd(0x1007be4a, 0xc);                 /* jz 0x1007be4a */
    II(0x1007be3e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007be40, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007be43, 0x5)   calld(0x10076630, -0x5818);           /* call 0x10076630 */
    II(0x1007be48, 0x2)   jmpd(0x1007be64, 0x1a);               /* jmp 0x1007be64 */
l_0x1007be4a:
    II(0x1007be4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007be4d, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1007be50, 0x5)   calld(0x1008afb4, 0xf15f);            /* call 0x1008afb4 */
    II(0x1007be55, 0x5)   calld(0x10084dd5, 0x8f7b);            /* call 0x10084dd5 */
    II(0x1007be5a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007be5c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007be5f, 0x5)   calld(0x10076630, -0x5834);           /* call 0x10076630 */
l_0x1007be64:
    II(0x1007be64, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007be66, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007be69, 0x5)   calld(0x1013ad11, 0xbeea3);           /* call 0x1013ad11 */
    II(0x1007be6e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007be70, 0x2)   jnzd(0x1007be8f, 0x1d);               /* jnz 0x1007be8f */
    II(0x1007be72, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007be75, 0x5)   calld(0x10076574, -0x5906);           /* call 0x10076574 */
    II(0x1007be7a, 0x4)   test(memb_a32(ds, eax + 0x12), 0xc0); /* test byte [eax+0x12], 0xc0 */
    II(0x1007be7e, 0x2)   jnzd(0x1007be8f, 0xf);                /* jnz 0x1007be8f */
    II(0x1007be80, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007be83, 0x5)   calld(0x10076574, -0x5914);           /* call 0x10076574 */
    II(0x1007be88, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1007be8d, 0x2)   jnzd(0x1007be9b, 0xc);                /* jnz 0x1007be9b */
l_0x1007be8f:
    II(0x1007be8f, 0x7)   mov(memd_a32(ss, ebp - 0x50), 0);     /* mov dword [ebp-0x50], 0x0 */
    II(0x1007be96, 0x5)   jmpd(0x1007bf35, 0x9a);               /* jmp 0x1007bf35 */
l_0x1007be9b:
    II(0x1007be9b, 0x7)   mov(memd_a32(ss, ebp - 0x54), 0xffffffff); /* mov dword [ebp-0x54], 0xffffffff */
    II(0x1007bea2, 0x5)   mov(edx, 0x4e);                       /* mov edx, 0x4e */
    II(0x1007bea7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007beaa, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007bead, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007beb0, 0x5)   calld(0x100b71dc, 0x3b327);           /* call 0x100b71dc */
    II(0x1007beb5, 0x1)   cwde();                               /* cwde */
    II(0x1007beb6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007beb8, 0x2)   jled(0x1007bec3, 0x9);                /* jle 0x1007bec3 */
    II(0x1007beba, 0x7)   mov(memd_a32(ss, ebp - 0x54), 0x4e);  /* mov dword [ebp-0x54], 0x4e */
    II(0x1007bec1, 0x2)   jmpd(0x1007bee2, 0x1f);               /* jmp 0x1007bee2 */
l_0x1007bec3:
    II(0x1007bec3, 0x5)   mov(edx, 0x48);                       /* mov edx, 0x48 */
    II(0x1007bec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007becb, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007bece, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007bed1, 0x5)   calld(0x100b71dc, 0x3b306);           /* call 0x100b71dc */
    II(0x1007bed6, 0x1)   cwde();                               /* cwde */
    II(0x1007bed7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007bed9, 0x2)   jled(0x1007bee2, 0x7);                /* jle 0x1007bee2 */
    II(0x1007bedb, 0x7)   mov(memd_a32(ss, ebp - 0x54), 0x48);  /* mov dword [ebp-0x54], 0x48 */
l_0x1007bee2:
    II(0x1007bee2, 0x5)   mov(eax, 0xf);                        /* mov eax, 0xf */
    II(0x1007bee7, 0x5)   calld(sys_new, 0xe9f14);              /* call 0x10165e00 */
    II(0x1007beec, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
//    II(0x1007beef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x1007bef2, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x1007bef5, 0x4)   cmp(memd_a32(ss, ebp - 0x5c), 0);     /* cmp dword [ebp-0x5c], 0x0 */
    II(0x1007bef9, 0x2)   jzd(0x1007bf29, 0x2e);                /* jz 0x1007bf29 */
    II(0x1007befb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x54)); /* movsx eax, word [ebp-0x54] */
    II(0x1007beff, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007bf00, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x1007bf05, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1007bf0a, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007bf0d, 0x5)   calld(0x100765d0, -0x5942);           /* call 0x100765d0 */
    II(0x1007bf12, 0x3)   mov(esi, memd_a32(ss, ebp - 0x58));   /* mov esi, [ebp-0x58] */
    II(0x1007bf15, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007bf17, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1007bf19, 0x5)   calld(0x1011fec1, 0xa3fa3);           /* call 0x1011fec1 */
    II(0x1007bf1e, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
//    II(0x1007bf21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1007bf24, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x1007bf27, 0x2)   jmpd(0x1007bf2f, 0x6);                /* jmp 0x1007bf2f */
l_0x1007bf29:
    II(0x1007bf29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x1007bf2c, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
l_0x1007bf2f:
    II(0x1007bf2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x1007bf32, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
l_0x1007bf35:
    II(0x1007bf35, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007bf37, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007bf3a, 0x5)   calld(0x10076630, -0x590f);           /* call 0x10076630 */
    II(0x1007bf3f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1007bf42, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007bf43, 0x3)   lea(ecx, ebp - 0x68);                 /* lea ecx, [ebp-0x68] */
    II(0x1007bf46, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1007bf48, 0x5)   mov(edx, 0x101c8184);                 /* mov edx, 0x101c8184 */
    II(0x1007bf4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bf50, 0x5)   calld(0x1007bad5, -0x480);            /* call 0x1007bad5 */
    II(0x1007bf55, 0x3)   lea(ebx, ebp - 0x40);                 /* lea ebx, [ebp-0x40] */
    II(0x1007bf58, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007bf5a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007bf5c, 0x5)   calld(0x10076630, -0x5931);           /* call 0x10076630 */
    II(0x1007bf61, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x1007bf63, 0x3)   lea(ecx, ebp - 0x68);                 /* lea ecx, [ebp-0x68] */
    II(0x1007bf66, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007bf69, 0x5)   calld(0x100765d0, -0x599e);           /* call 0x100765d0 */
    II(0x1007bf6e, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007bf70, 0x5)   mov(edx, 0x101c81a8);                 /* mov edx, 0x101c81a8 */
    II(0x1007bf75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bf78, 0x5)   calld(0x1007bad5, -0x4a8);            /* call 0x1007bad5 */
    II(0x1007bf7d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007bf7f, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007bf82, 0x5)   calld(0x10076630, -0x5957);           /* call 0x10076630 */
    II(0x1007bf87, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007bf89, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007bf8c, 0x5)   calld(0x1013ad71, 0xbede0);           /* call 0x1013ad71 */
    II(0x1007bf91, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007bf93, 0x6)   jzd(0x1007c0d5, 0x13c);               /* jz dword 0x1007c0d5 */
    II(0x1007bf99, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007bf9c, 0x5)   calld(0x10076574, -0x5a2d);           /* call 0x10076574 */
    II(0x1007bfa1, 0x5)   calld(0x1015287d, 0xd68d7);           /* call 0x1015287d */
    II(0x1007bfa6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bfa9, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
//    II(0x1007bfac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1007bfaf, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1007bfb2, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007bfb5, 0x5)   calld(0x100765d0, -0x59ea);           /* call 0x100765d0 */
    II(0x1007bfba, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007bfbc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1007bfbf, 0x3)   calld_abs(memd_a32(ds, ebx + 0x2c));  /* call dword near [ebx+0x2c] */
    II(0x1007bfc2, 0x5)   calld(0x101482f4, 0xcc32d);           /* call 0x101482f4 */
    II(0x1007bfc7, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x1007bfcd, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x1007bfd3, 0x6)   jbd(0x1007c09a, 0xc1);                /* jb dword 0x1007c09a */
    II(0x1007bfd9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007bfdc, 0x5)   calld(0x1008acf8, 0xed17);            /* call 0x1008acf8 */
    II(0x1007bfe1, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007bfe3, 0x2)   jnzd(0x1007c037, 0x52);               /* jnz 0x1007c037 */
    II(0x1007bfe5, 0x5)   calld(0x1008a7bc, 0xe7d2);            /* call 0x1008a7bc */
    II(0x1007bfea, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007bfef, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x1007bff2, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x1007bff7, 0x5)   calld(sys_new, 0xe9e04);              /* call 0x10165e00 */
    II(0x1007bffc, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
//    II(0x1007bfff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x1007c002, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x1007c005, 0x4)   cmp(memd_a32(ss, ebp - 0x78), 0);     /* cmp dword [ebp-0x78], 0x0 */
    II(0x1007c009, 0x2)   jzd(0x1007c021, 0x16);                /* jz 0x1007c021 */
    II(0x1007c00b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007c00e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x1007c011, 0x5)   calld(0x100a3711, 0x276fb);           /* call 0x100a3711 */
    II(0x1007c016, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
//    II(0x1007c019, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x1007c01c, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
    II(0x1007c01f, 0x2)   jmpd(0x1007c027, 0x6);                /* jmp 0x1007c027 */
l_0x1007c021:
    II(0x1007c021, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x1007c024, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
l_0x1007c027:
    II(0x1007c027, 0x3)   mov(edx, memd_a32(ss, ebp - 0x80));   /* mov edx, [ebp-0x80] */
    II(0x1007c02a, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1007c02f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x70));   /* mov ebx, [ebp-0x70] */
    II(0x1007c032, 0x5)   calld(0x100a4db6, 0x28d7f);           /* call 0x100a4db6 */
l_0x1007c037:
    II(0x1007c037, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x1007c03b, 0x2)   jzd(0x1007c073, 0x36);                /* jz 0x1007c073 */
    II(0x1007c03d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1007c040, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
    II(0x1007c046, 0x7)   cmp(memd_a32(ss, ebp - 0x84), 0);     /* cmp dword [ebp+0xffffff7c], 0x0 */
    II(0x1007c04d, 0x2)   jzd(0x1007c069, 0x1a);                /* jz 0x1007c069 */
    II(0x1007c04f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c051, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x1007c057, 0x5)   calld(my_dtor_d1, 0xcca0);            /* call 0x10088cfc */
    II(0x1007c05c, 0x5)   calld(sys_delete, 0xe9f03);           /* call 0x10165f64 */
    II(0x1007c061, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
    II(0x1007c067, 0x2)   jmpd(0x1007c073, 0xa);                /* jmp 0x1007c073 */
l_0x1007c069:
    II(0x1007c069, 0xa)   mov(memd_a32(ss, ebp - 0x88), 0);     /* mov dword [ebp+0xffffff78], 0x0 */
l_0x1007c073:
    II(0x1007c073, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1007c077, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c079, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007c07c, 0x5)   calld(0x10075f2c, -0x6155);           /* call 0x10075f2c */
    II(0x1007c081, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c083, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007c086, 0x5)   calld(0x10075f2c, -0x615f);           /* call 0x10075f2c */
    II(0x1007c08b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c08d, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007c090, 0x5)   calld(0x10075f6c, -0x6129);           /* call 0x10075f6c */
    II(0x1007c095, 0x5)   jmpd(0x1007c443, 0x3a9);              /* jmp 0x1007c443 */
l_0x1007c09a:
    II(0x1007c09a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c09c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007c09f, 0x5)   calld(0x1013ad11, 0xbec6d);           /* call 0x1013ad11 */
    II(0x1007c0a4, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007c0a6, 0x2)   jzd(0x1007c0b9, 0x11);                /* jz 0x1007c0b9 */
    II(0x1007c0a8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c0aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c0ad, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1007c0b0, 0x5)   calld(0x1013ad71, 0xbecbc);           /* call 0x1013ad71 */
    II(0x1007c0b5, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007c0b7, 0x2)   jnzd(0x1007c0bb, 0x2);                /* jnz 0x1007c0bb */
l_0x1007c0b9:
    II(0x1007c0b9, 0x2)   jmpd(0x1007c0d5, 0x1a);               /* jmp 0x1007c0d5 */
l_0x1007c0bb:
    II(0x1007c0bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c0be, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1007c0c1, 0x5)   calld(0x1008afb4, 0xeeee);            /* call 0x1008afb4 */
    II(0x1007c0c6, 0x5)   calld(0x10084dd5, 0x8d0a);            /* call 0x10084dd5 */
    II(0x1007c0cb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007c0cd, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007c0d0, 0x5)   calld(0x10076630, -0x5aa5);           /* call 0x10076630 */
l_0x1007c0d5:
    II(0x1007c0d5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c0d7, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007c0da, 0x5)   calld(0x1013ad71, 0xbec92);           /* call 0x1013ad71 */
    II(0x1007c0df, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007c0e1, 0x2)   jzd(0x1007c0f3, 0x10);                /* jz 0x1007c0f3 */
    II(0x1007c0e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c0e6, 0x4)   mov(dx, memw_a32(ds, eax + 0x27));    /* mov dx, [eax+0x27] */
//    II(0x1007c0ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c0ed, 0x4)   cmp(dx, memw_a32(ds, eax + 0x25));    /* cmp dx, [eax+0x25] */
    II(0x1007c0f1, 0x2)   jgd(0x1007c0f5, 0x2);                 /* jg 0x1007c0f5 */
l_0x1007c0f3:
    II(0x1007c0f3, 0x2)   jmpd(0x1007c0fa, 0x5);                /* jmp 0x1007c0fa */
l_0x1007c0f5:
    II(0x1007c0f5, 0x5)   jmpd(0x1007bf35, -0x1c5);             /* jmp 0x1007bf35 */
l_0x1007c0fa:
    II(0x1007c0fa, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x1007c0fe, 0x2)   jzd(0x1007c136, 0x36);                /* jz 0x1007c136 */
    II(0x1007c100, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1007c103, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
    II(0x1007c109, 0x7)   cmp(memd_a32(ss, ebp - 0x8c), 0);     /* cmp dword [ebp+0xffffff74], 0x0 */
    II(0x1007c110, 0x2)   jzd(0x1007c12c, 0x1a);                /* jz 0x1007c12c */
    II(0x1007c112, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c114, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x1007c11a, 0x5)   calld(my_dtor_d1, 0xcbdd);            /* call 0x10088cfc */
    II(0x1007c11f, 0x5)   calld(sys_delete, 0xe9e40);           /* call 0x10165f64 */
    II(0x1007c124, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
    II(0x1007c12a, 0x2)   jmpd(0x1007c136, 0xa);                /* jmp 0x1007c136 */
l_0x1007c12c:
    II(0x1007c12c, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
l_0x1007c136:
    II(0x1007c136, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c139, 0x4)   mov(memb_a32(ds, eax + 0x31), 0);     /* mov byte [eax+0x31], 0x0 */
    II(0x1007c13d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c13f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1007c142, 0x5)   calld(0x10075f2c, -0x621b);           /* call 0x10075f2c */
    II(0x1007c147, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c149, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1007c14c, 0x5)   calld(0x10075f2c, -0x6225);           /* call 0x10075f2c */
l_0x1007c151:
    II(0x1007c151, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c154, 0x4)   mov(dx, memw_a32(ds, eax + 0x27));    /* mov dx, [eax+0x27] */
//    II(0x1007c158, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c15b, 0x4)   cmp(dx, memw_a32(ds, eax + 0x25));    /* cmp dx, [eax+0x25] */
    II(0x1007c15f, 0x2)   jgd(0x1007c174, 0x13);                /* jg 0x1007c174 */
    II(0x1007c161, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x1007c165, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c167, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007c16a, 0x5)   calld(0x10075f6c, -0x6203);           /* call 0x10075f6c */
    II(0x1007c16f, 0x5)   jmpd(0x1007c443, 0x2cf);              /* jmp 0x1007c443 */
l_0x1007c174:
    II(0x1007c174, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c177, 0x5)   cmp(memw_a32(ds, eax + 0x13), 0);     /* cmp word [eax+0x13], 0x0 */
    II(0x1007c17c, 0x2)   jzd(0x1007c191, 0x13);                /* jz 0x1007c191 */
    II(0x1007c17e, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x1007c182, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c184, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007c187, 0x5)   calld(0x10075f6c, -0x6220);           /* call 0x10075f6c */
    II(0x1007c18c, 0x5)   jmpd(0x1007c443, 0x2b2);              /* jmp 0x1007c443 */
l_0x1007c191:
    II(0x1007c191, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1007c195, 0x2)   jnzd(0x1007c1a3, 0xc);                /* jnz 0x1007c1a3 */
    II(0x1007c197, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c19a, 0x5)   calld(0x1007b638, -0xb67);            /* call 0x1007b638 */
    II(0x1007c19f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x1007c1a3:
    II(0x1007c1a3, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1007c1a7, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1007c1aa, 0x5)   calld(0x1008a958, 0xe7a9);            /* call 0x1008a958 */
    II(0x1007c1af, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1007c1b2, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1007c1b6, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1007c1ba, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007c1bd, 0x5)   calld(my_ctor_0x101b38f8, -0x5ad2);   /* call 0x100766f0 */
    II(0x1007c1c2, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1007c1c5, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1007c1c9, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1007c1cd, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1007c1d2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007c1d5, 0x3)   add(edx, 0x2d);                       /* add edx, 0x2d */
    II(0x1007c1d8, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007c1db, 0x5)   calld(0x100b8505, 0x3c325);           /* call 0x100b8505 */
    II(0x1007c1e0, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1007c1e3, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1007c1e7, 0x5)   calld(0x100a314c, 0x26f60);           /* call 0x100a314c */
    II(0x1007c1ec, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1007c1ef, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x1007c1f6, 0x2)   jmpd(0x1007c1fe, 0x6);                /* jmp 0x1007c1fe */
l_0x1007c1f8:
    II(0x1007c1f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1007c1fb, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
l_0x1007c1fe:
    II(0x1007c1fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c201, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007c204, 0x5)   calld(0x1008a4a0, 0xe297);            /* call 0x1008a4a0 */
    II(0x1007c209, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x1007c20d, 0x2)   jled(0x1007c272, 0x63);               /* jle 0x1007c272 */
    II(0x1007c20f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x1007c213, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007c216, 0x5)   calld(0x1008a3dc, 0xe1c1);            /* call 0x1008a3dc */
    II(0x1007c21b, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1007c21e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c221, 0x3)   mov(ebx, memd_a32(ds, eax + 0x7));    /* mov ebx, [eax+0x7] */
    II(0x1007c224, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1007c227, 0x6)   imul(ebx, ebx, 0x247);                /* imul ebx, ebx, 0x247 */
    II(0x1007c22d, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x1007c232, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1007c234, 0x5)   calld(0x100dfd2c, 0x63af3);           /* call 0x100dfd2c */
    II(0x1007c239, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1007c23d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x1007c241, 0x2)   jgd(0x1007c25e, 0x1b);                /* jg 0x1007c25e */
    II(0x1007c243, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x1007c247, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007c24a, 0x5)   calld(0x1008a3dc, 0xe18d);            /* call 0x1008a3dc */
    II(0x1007c24f, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1007c252, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1007c255, 0x7)   test(memb_a32(ds, eax + 0x101c81c3), 0x10); /* test byte [eax+0x101c81c3], 0x10 */
    II(0x1007c25c, 0x2)   jzd(0x1007c270, 0x12);                /* jz 0x1007c270 */
l_0x1007c25e:
    II(0x1007c25e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x1007c262, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007c265, 0x5)   calld(0x1008a3dc, 0xe172);            /* call 0x1008a3dc */
    II(0x1007c26a, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
l_0x1007c270:
    II(0x1007c270, 0x2)   jmpd(0x1007c1f8, -0x7a);              /* jmp 0x1007c1f8 */
l_0x1007c272:
    II(0x1007c272, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c275, 0x4)   mov(ax, memw_a32(ds, eax + 0x27));    /* mov ax, [eax+0x27] */
    II(0x1007c279, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007c27c, 0x4)   sub(ax, memw_a32(ds, edx + 0x25));    /* sub ax, [edx+0x25] */
    II(0x1007c280, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1007c283:
    II(0x1007c283, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007c286, 0x5)   calld(0x100b870a, 0x3c47f);           /* call 0x100b870a */
    II(0x1007c28b, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1007c28e, 0x5)   cmp(memw_a32(ss, ebp - 0x18), -0x1 /* 0xff */); /* cmp word [ebp-0x18], 0xff */
    II(0x1007c293, 0x2)   jnzd(0x1007c2a1, 0xc);                /* jnz 0x1007c2a1 */
    II(0x1007c295, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1007c29c, 0x5)   jmpd(0x1007c3e1, 0x140);              /* jmp 0x1007c3e1 */
l_0x1007c2a1:
    II(0x1007c2a1, 0x5)   mov(eax, 0xe1);                       /* mov eax, 0xe1 */
    II(0x1007c2a6, 0x5)   calld(sys_new, 0xe9b55);              /* call 0x10165e00 */
    II(0x1007c2ab, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
//    II(0x1007c2b1, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x1007c2b7, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
    II(0x1007c2bd, 0x7)   cmp(memd_a32(ss, ebp - 0x98), 0);     /* cmp dword [ebp+0xffffff68], 0x0 */
    II(0x1007c2c4, 0x2)   jzd(0x1007c2fe, 0x38);                /* jz 0x1007c2fe */
    II(0x1007c2c6, 0x5)   calld(0x1008ac70, 0xe9a5);            /* call 0x1008ac70 */
    II(0x1007c2cb, 0x1)   cwde();                               /* cwde */
    II(0x1007c2cc, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007c2cd, 0x5)   mov(ecx, 0xffff);                     /* mov ecx, 0xffff */
    II(0x1007c2d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c2d5, 0x3)   mov(ebx, memd_a32(ds, eax + 0x7));    /* mov ebx, [eax+0x7] */
    II(0x1007c2d8, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1007c2db, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007c2df, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x1007c2e5, 0x5)   calld(0x10149237, 0xccf4d);           /* call 0x10149237 */
    II(0x1007c2ea, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
//    II(0x1007c2f0, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x1007c2f6, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
    II(0x1007c2fc, 0x2)   jmpd(0x1007c30a, 0xc);                /* jmp 0x1007c30a */
l_0x1007c2fe:
    II(0x1007c2fe, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x1007c304, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
l_0x1007c30a:
    II(0x1007c30a, 0x6)   mov(edx, memd_a32(ss, ebp - 0xa0));   /* mov edx, [ebp+0xffffff60] */
    II(0x1007c310, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007c313, 0x5)   calld(0x10076630, -0x5ce8);           /* call 0x10076630 */
    II(0x1007c318, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c31b, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1007c31e, 0x5)   calld(0x1008a228, 0xdf05);            /* call 0x1008a228 */
    II(0x1007c323, 0x5)   calld(0x1008a370, 0xe048);            /* call 0x1008a370 */
    II(0x1007c328, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007c32a, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007c32d, 0x5)   calld(0x100765d0, -0x5d62);           /* call 0x100765d0 */
    II(0x1007c332, 0x5)   calld(0x1007af7a, -0x13bd);           /* call 0x1007af7a */
    II(0x1007c337, 0x3)   sub(memd_a32(ss, ebp - 0x1c), eax);   /* sub [ebp-0x1c], eax */
    II(0x1007c33a, 0x5)   mov(eax, 0x1d);                       /* mov eax, 0x1d */
    II(0x1007c33f, 0x5)   calld(sys_new, 0xe9abc);              /* call 0x10165e00 */
    II(0x1007c344, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
//    II(0x1007c34a, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x1007c350, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x1007c356, 0x7)   cmp(memd_a32(ss, ebp - 0xa8), 0);     /* cmp dword [ebp+0xffffff58], 0x0 */
    II(0x1007c35d, 0x2)   jzd(0x1007c399, 0x3a);                /* jz 0x1007c399 */
    II(0x1007c35f, 0x6)   lea(edx, ebp - 0xac);                 /* lea edx, [ebp+0xffffff54] */
    II(0x1007c365, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c368, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1007c36b, 0x5)   calld(0x1008a228, 0xdeb8);            /* call 0x1008a228 */
    II(0x1007c370, 0x5)   calld(0x100b8e63, 0x3caee);           /* call 0x100b8e63 */
    II(0x1007c375, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007c377, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007c37a, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x1007c380, 0x5)   calld(my_ctor_c12, 0x29ce7);          /* call 0x100a606c */
    II(0x1007c385, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
//    II(0x1007c38b, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb0));   /* mov eax, [ebp+0xffffff50] */
    II(0x1007c391, 0x6)   mov(memd_a32(ss, ebp - 0xb4), eax);   /* mov [ebp+0xffffff4c], eax */
    II(0x1007c397, 0x2)   jmpd(0x1007c3a5, 0xc);                /* jmp 0x1007c3a5 */
l_0x1007c399:
    II(0x1007c399, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x1007c39f, 0x6)   mov(memd_a32(ss, ebp - 0xb4), eax);   /* mov [ebp+0xffffff4c], eax */
l_0x1007c3a5:
    II(0x1007c3a5, 0x6)   mov(edx, memd_a32(ss, ebp - 0xb4));   /* mov edx, [ebp+0xffffff4c] */
    II(0x1007c3ab, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1007c3ae, 0x5)   calld(0x1008a898, 0xe4e5);            /* call 0x1008a898 */
    II(0x1007c3b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007c3b6, 0x4)   inc(memw_a32(ds, eax + 0x13));        /* inc word [eax+0x13] */
    II(0x1007c3ba, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007c3be, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1007c3c1, 0x5)   calld(0x1008a7dc, 0xe416);            /* call 0x1008a7dc */
    II(0x1007c3c6, 0x5)   calld(0x100a63bc, 0x29ff1);           /* call 0x100a63bc */
    II(0x1007c3cb, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1007c3ce, 0x5)   calld(0x1008a838, 0xe465);            /* call 0x1008a838 */
    II(0x1007c3d3, 0x5)   mov(ebx, 0x101c3180);                 /* mov ebx, 0x101c3180 */
    II(0x1007c3d8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007c3da, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007c3dc, 0x5)   calld(0x100a4d50, 0x2896f);           /* call 0x100a4d50 */
l_0x1007c3e1:
    II(0x1007c3e1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1007c3e5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007c3e7, 0x6)   jgd(0x1007c283, -0x16a);              /* jg dword 0x1007c283 */
    II(0x1007c3ed, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1007c3f1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c3f3, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007c3f6, 0x5)   calld(0x10088dcc, 0xc9d1);            /* call 0x10088dcc */
    II(0x1007c3fb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c3fd, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1007c400, 0x5)   calld(0x10075f2c, -0x64d9);           /* call 0x10075f2c */
    II(0x1007c405, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c407, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1007c40a, 0x5)   calld(0x10088cbc, 0xc8ad);            /* call 0x10088cbc */
    II(0x1007c40f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007c411, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1007c414, 0x5)   calld(0x10075f6c, -0x64ad);           /* call 0x10075f6c */
    II(0x1007c419, 0x2)   jmpd(0x1007c443, 0x28);               /* jmp 0x1007c443 */
//  II(0x1007c41b, 0x28)  /* Недостижимый код. */
l_0x1007c443:
    II(0x1007c443, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x1007c446, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007c448, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007c449, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007c44a, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007c44b, 0x1)   popd(edx);                            /* pop edx */
    II(0x1007c44c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007c44d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1007c44e, 0x1)   retd();                               /* ret */
FUNC_END

