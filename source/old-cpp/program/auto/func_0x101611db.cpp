FUNC_BEGIN(0x101611db, 0xd4b8349f95de92bd, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x6d, 0x4b, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x5e, 0xf8, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x3b, 0x75, 0xd, 0x8b, 0x45, 0xfc, 0xe8, 0xbb, 0xe0, 0xff, 0xff, 0xe9, 0xb1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xfe, 0x4e, 0xf1, 0xff, 0x85, 0xc0, 0x74, 0x1a, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x39, 0xc1, 0xf8, 0x10, 0xd1, 0xf8, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x25, 0xf8, 0xfb, 0xff, 0x98, 0x39, 0xd0, 0x74, 0x2, 0xeb, 0x5e, 0x8b, 0x45, 0xfc, 0xe8, 0xd6, 0x4e, 0xf1, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x5a, 0x54, 0xf1, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0x3c, 0x97, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xb, 0x9b, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x14, 0x8d, 0x45, 0xf8, 0xe8, 0x2, 0x53, 0xf1, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x12, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xf8, 0xe8, 0x43, 0x53, 0xf1, 0xff, 0xe8, 0x2d, 0xf5, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x90, 0x4c, 0xf1, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x5e, 0x1, 0x74, 0x14, 0x8b, 0x45, 0xfc, 0xe8, 0xaf, 0xf7, 0xfb, 0xff, 0x40, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x4e, 0x88, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xfe, 0x40, 0x5e, 0x8b, 0x45, 0xfc, 0xe8, 0xe1, 0x8c, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101611db, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x101611e0, 0x5)   calld(sys_check_available_stack_size, 0x4b6d); /* call 0x10165d52 */
    II(0x101611e5, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101611e6, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101611e7, 0x1)   pushd(edx);                           /* push edx */
    II(0x101611e8, 0x1)   pushd(esi);                           /* push esi */
    II(0x101611e9, 0x1)   pushd(edi);                           /* push edi */
    II(0x101611ea, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101611eb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101611ed, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x101611f3, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x101611f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101611f9, 0x5)   calld(0x10120a5c, -0x407a2);          /* call 0x10120a5c */
    II(0x101611fe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10161200, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161203, 0x4)   cmp(dx, memw_a32(ds, eax + 0x3b));    /* cmp dx, [eax+0x3b] */
    II(0x10161207, 0x2)   jnzd(0x10161216, 0xd);                /* jnz 0x10161216 */
    II(0x10161209, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1016120c, 0x5)   calld(0x1015f2cc, -0x1f45);           /* call 0x1015f2cc */
    II(0x10161211, 0x5)   jmpd(0x101612c7, 0xb1);               /* jmp 0x101612c7 */
l_0x10161216:
    II(0x10161216, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161219, 0x5)   calld(0x1007611c, -0xeb102);          /* call 0x1007611c */
    II(0x1016121e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10161220, 0x2)   jzd(0x1016123c, 0x1a);                /* jz 0x1016123c */
    II(0x10161222, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161225, 0x3)   mov(eax, memd_a32(ds, eax + 0x39));   /* mov eax, [eax+0x39] */
    II(0x10161228, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1016122b, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1016122d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1016122f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161232, 0x5)   calld(0x10120a5c, -0x407db);          /* call 0x10120a5c */
    II(0x10161237, 0x1)   cwde();                               /* cwde */
    II(0x10161238, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1016123a, 0x2)   jzd(0x1016123e, 0x2);                 /* jz 0x1016123e */
l_0x1016123c:
    II(0x1016123c, 0x2)   jmpd(0x1016129c, 0x5e);               /* jmp 0x1016129c */
l_0x1016123e:
    II(0x1016123e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161241, 0x5)   calld(0x1007611c, -0xeb12a);          /* call 0x1007611c */
    II(0x10161246, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x10161249, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1016124b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1016124d, 0x5)   calld(0x100766ac, -0xeaba6);          /* call 0x100766ac */
    II(0x10161252, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10161254, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10161257, 0x5)   calld(0x1008a998, -0xd68c4);          /* call 0x1008a998 */
    II(0x1016125c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1016125e, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10161261, 0x5)   calld(0x1013ad71, -0x264f5);          /* call 0x1013ad71 */
    II(0x10161266, 0x2)   test(al, al);                         /* test al, al */
    II(0x10161268, 0x2)   jzd(0x1016127e, 0x14);                /* jz 0x1016127e */
    II(0x1016126a, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1016126d, 0x5)   calld(0x10076574, -0xeacfe);          /* call 0x10076574 */
    II(0x10161272, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x10161275, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1016127a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1016127c, 0x2)   jzd(0x10161280, 0x2);                 /* jz 0x10161280 */
l_0x1016127e:
    II(0x1016127e, 0x2)   jmpd(0x10161292, 0x12);               /* jmp 0x10161292 */
l_0x10161280:
    II(0x10161280, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10161285, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10161288, 0x5)   calld(0x100765d0, -0xeacbd);          /* call 0x100765d0 */
    II(0x1016128d, 0x5)   calld(0x101607bf, -0xad3);            /* call 0x101607bf */
l_0x10161292:
    II(0x10161292, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10161294, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10161297, 0x5)   calld(0x10075f2c, -0xeb370);          /* call 0x10075f2c */
l_0x1016129c:
    II(0x1016129c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1016129f, 0x4)   test(memb_a32(ds, eax + 0x5e), 0x1);  /* test byte [eax+0x5e], 0x1 */
    II(0x101612a3, 0x2)   jzd(0x101612b9, 0x14);                /* jz 0x101612b9 */
    II(0x101612a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101612a8, 0x5)   calld(0x10120a5c, -0x40851);          /* call 0x10120a5c */
    II(0x101612ad, 0x1)   inc(eax);                             /* inc eax */
    II(0x101612ae, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101612b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101612b4, 0x5)   calld(0x10149b07, -0x177b2);          /* call 0x10149b07 */
l_0x101612b9:
    II(0x101612b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101612bc, 0x3)   inc(memb_a32(ds, eax + 0x5e));        /* inc byte [eax+0x5e] */
    II(0x101612bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101612c2, 0x5)   calld(0x10149fa8, -0x1731f);          /* call 0x10149fa8 */
l_0x101612c7:
    II(0x101612c7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101612c9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101612ca, 0x1)   popd(edi);                            /* pop edi */
    II(0x101612cb, 0x1)   popd(esi);                            /* pop esi */
    II(0x101612cc, 0x1)   popd(edx);                            /* pop edx */
    II(0x101612cd, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101612ce, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101612cf, 0x1)   retd();                               /* ret */
FUNC_END

