FUNC_BEGIN(0x100b33a4, 0x2f80f19b00318d10, 0x20, ({0x68, 0x7c, 0, 0, 0, 0xe8, 0xa4, 0x29, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc9, 0x8b, 0x55, 0xfc, 0x8b, 0x5a, 0x1e, 0xc1, 0xfb, 0x18, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xfb, 0x31, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xf0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0xe2, 0xeb, 0, 0, 0x89, 0x45, 0xe8, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x35, 0x7d, 0xfd, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x56, 0x31, 0xfc, 0xff, 0x89, 0xc2, 0x31, 0xc0, 0x8a, 0x42, 0x4d, 0x89, 0x45, 0xf0, 0x80, 0x4d, 0xf8, 0x1, 0xe8, 0xa3, 0x72, 0xfd, 0xff, 0x98, 0x50, 0x31, 0xc9, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x8b, 0x31, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xc8, 0xe8, 0x72, 0xca, 0x6, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf8, 0xfe, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x21, 0x3, 0x75, 0x7, 0xc7, 0x45, 0xf0, 0x1, 0, 0, 0, 0x83, 0x7d, 0xe8, 0, 0x75, 0x17, 0x8b, 0x45, 0xfc, 0xe8, 0xe0, 0x2, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x77, 0x58, 0xfd, 0xff, 0xe9, 0x6d, 0x2, 0, 0, 0xe8, 0x65, 0x4e, 0x9, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x72, 0xd, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x14, 0xf, 0x8d, 0x36, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x1f, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1f, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x17, 0xf, 0x8c, 0xaa, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x40, 0x1d, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1b, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x8, 0xf, 0x8c, 0x87, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x40, 0x17, 0x2, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x22, 0, 0x74, 0x27, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x79, 0x30, 0xfc, 0xff, 0xe8, 0x3c, 0x2d, 0xfc, 0xff, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x15, 0xc1, 0xf8, 0x10, 0x39, 0xd0, 0x7e, 0x31, 0xbb, 0x1, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x48, 0x30, 0xfc, 0xff, 0xe8, 0xef, 0x7b, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x22, 0x2, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xb9, 0x57, 0xfd, 0xff, 0xe9, 0xaf, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x48, 0x19, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x1b, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x1d, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x22, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x1f, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1b, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0x17, 0x7c, 0xfd, 0xff, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x19, 0x8d, 0x45, 0xd8, 0xe8, 0x2d, 0x4d, 0x5, 0, 0x84, 0xc0, 0xf, 0x84, 0x32, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x22, 0x1, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xe8, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x8b, 0x12, 0x1, 0xd0, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xf0, 0x7d, 0x3c, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x48, 0x19, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x17, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x6f, 0x2f, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xa9, 0xcc, 0xfb, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x1c, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x19, 0x8d, 0x45, 0xc4, 0xe8, 0x3f, 0x28, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xc8, 0xe8, 0x1d, 0xc9, 0x6, 0, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0xa3, 0, 0, 0, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xbe, 0x27, 0xb, 0, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0x83, 0x7d, 0xbc, 0, 0x74, 0x3d, 0xb8, 0, 0x37, 0xb, 0x10, 0x50, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x19, 0x8d, 0x45, 0xb8, 0xe8, 0xff, 0x27, 0xfc, 0xff, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x8b, 0x5d, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x57, 0x2f, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xc0, 0xe8, 0x9d, 0x8b, 0xff, 0xff, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0xeb, 0x6, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb0, 0x8b, 0x55, 0xb0, 0x8d, 0x45, 0xac, 0xe8, 0x51, 0x6f, 0xfd, 0xff, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xac, 0xe8, 0x74, 0x6e, 0xfd, 0xff, 0xe8, 0xf3, 0x6f, 0xfd, 0xff, 0x8d, 0x45, 0xac, 0xe8, 0xc3, 0x6e, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x8b, 0x16, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0x7d, 0x56, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x23, 0x56, 0xfd, 0xff, 0xeb, 0x1c, 0xe9, 0xaa, 0xfd, 0xff, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x12, 0xf2, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x5, 0x56, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100b33a4, 0x5)   pushd(0x7c);                          /* push dword 0x7c */
    II(0x100b33a9, 0x5)   calld(sys_check_available_stack_size, 0xb29a4); /* call 0x10165d52 */
    II(0x100b33ae, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b33af, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b33b0, 0x1)   pushd(edx);                           /* push edx */
    II(0x100b33b1, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b33b2, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b33b3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b33b4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b33b6, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x100b33bc, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100b33bf, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100b33c1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b33c4, 0x3)   mov(ebx, memd_a32(ds, edx + 0x1e));   /* mov ebx, [edx+0x1e] */
    II(0x100b33c7, 0x3)   sar(ebx, 0x18);                       /* sar ebx, 0x18 */
    II(0x100b33ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b33cd, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b33d0, 0x5)   calld(0x100765d0, -0x3ce05);          /* call 0x100765d0 */
    II(0x100b33d5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b33d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b33da, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b33dd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b33e0, 0x6)   imul(esi, eax, 0xc5);                 /* imul esi, eax, 0xc5 */
    II(0x100b33e6, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100b33eb, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100b33ed, 0x5)   calld(0x100c1fd4, 0xebe2);            /* call 0x100c1fd4 */
    II(0x100b33f2, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b33f5, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100b33fa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b33fd, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b33fe, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100b3404, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100b3407, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b3409, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b340b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b340e, 0x5)   calld(0x1008b148, -0x282cb);          /* call 0x1008b148 */
    II(0x100b3413, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3416, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b3419, 0x5)   calld(0x10076574, -0x3ceaa);          /* call 0x10076574 */
    II(0x100b341e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b3420, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b3422, 0x3)   mov(al, memb_a32(ds, edx + 0x4d));    /* mov al, [edx+0x4d] */
    II(0x100b3425, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b3428, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100b342c, 0x5)   calld(0x1008a6d4, -0x28d5d);          /* call 0x1008a6d4 */
    II(0x100b3431, 0x1)   cwde();                               /* cwde */
    II(0x100b3432, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b3433, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100b3435, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100b343a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b343d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b3440, 0x5)   calld(0x100765d0, -0x3ce75);          /* call 0x100765d0 */
    II(0x100b3445, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b3447, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100b344a, 0x5)   calld(0x1011fec1, 0x6ca72);           /* call 0x1011fec1 */
    II(0x100b344f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b3452, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100b3456, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100b345d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3460, 0x4)   cmp(memb_a32(ds, eax + 0x21), 0x3);   /* cmp byte [eax+0x21], 0x3 */
    II(0x100b3464, 0x2)   jnzd(0x100b346d, 0x7);                /* jnz 0x100b346d */
    II(0x100b3466, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x1);   /* mov dword [ebp-0x10], 0x1 */
l_0x100b346d:
    II(0x100b346d, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100b3471, 0x2)   jnzd(0x100b348a, 0x17);               /* jnz 0x100b348a */
    II(0x100b3473, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3476, 0x5)   calld(0x100b375b, 0x2e0);             /* call 0x100b375b */
    II(0x100b347b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b347d, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100b3480, 0x5)   calld(my_dtor_d1, -0x2a789);          /* call 0x10088cfc */
    II(0x100b3485, 0x5)   jmpd(0x100b36f7, 0x26d);              /* jmp 0x100b36f7 */
l_0x100b348a:
    II(0x100b348a, 0x5)   calld(0x101482f4, 0x94e65);           /* call 0x101482f4 */
    II(0x100b348f, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x100b3495, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x100b349b, 0x2)   jbd(0x100b34aa, 0xd);                 /* jb 0x100b34aa */
    II(0x100b349d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100b34a1, 0x3)   cmp(eax, 0x14);                       /* cmp eax, 0x14 */
    II(0x100b34a4, 0x6)   jged(0x100b36e0, 0x236);              /* jge dword 0x100b36e0 */
l_0x100b34aa:
    II(0x100b34aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b34ad, 0x4)   inc(memw_a32(ds, eax + 0x1f));        /* inc word [eax+0x1f] */
    II(0x100b34b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b34b4, 0x4)   mov(dx, memw_a32(ds, eax + 0x1f));    /* mov dx, [eax+0x1f] */
//    II(0x100b34b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b34bb, 0x4)   cmp(dx, memw_a32(ds, eax + 0x17));    /* cmp dx, [eax+0x17] */
    II(0x100b34bf, 0x6)   jld(0x100b356f, 0xaa);                /* jl dword 0x100b356f */
    II(0x100b34c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b34c8, 0x5)   add(memw_a32(ds, eax + 0x1d), 0x2);   /* add word [eax+0x1d], 0x2 */
    II(0x100b34cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b34d0, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x100b34d3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b34d6, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100b34d9, 0x6)   jld(0x100b3566, 0x87);                /* jl dword 0x100b3566 */
    II(0x100b34df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b34e2, 0x5)   add(memw_a32(ds, eax + 0x17), 0x2);   /* add word [eax+0x17], 0x2 */
    II(0x100b34e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b34ea, 0x4)   cmp(memb_a32(ds, eax + 0x22), 0);     /* cmp byte [eax+0x22], 0x0 */
    II(0x100b34ee, 0x2)   jzd(0x100b3517, 0x27);                /* jz 0x100b3517 */
    II(0x100b34f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b34f3, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b34f6, 0x5)   calld(0x10076574, -0x3cf87);          /* call 0x10076574 */
    II(0x100b34fb, 0x5)   calld(0x1007623c, -0x3d2c4);          /* call 0x1007623c */
    II(0x100b3500, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100b3503, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b3506, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100b3508, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b350a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b350d, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x100b3510, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b3513, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100b3515, 0x2)   jled(0x100b3548, 0x31);               /* jle 0x100b3548 */
l_0x100b3517:
    II(0x100b3517, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100b351c, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100b3521, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3524, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b3527, 0x5)   calld(0x10076574, -0x3cfb8);          /* call 0x10076574 */
    II(0x100b352c, 0x5)   calld(0x100ab120, -0x8411);           /* call 0x100ab120 */
    II(0x100b3531, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3534, 0x5)   calld(0x100b375b, 0x222);             /* call 0x100b375b */
    II(0x100b3539, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b353b, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100b353e, 0x5)   calld(my_dtor_d1, -0x2a847);          /* call 0x10088cfc */
    II(0x100b3543, 0x5)   jmpd(0x100b36f7, 0x1af);              /* jmp 0x100b36f7 */
l_0x100b3548:
    II(0x100b3548, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b354b, 0x4)   dec(memw_a32(ds, eax + 0x19));        /* dec word [eax+0x19] */
    II(0x100b354f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3552, 0x4)   inc(memw_a32(ds, eax + 0x1b));        /* inc word [eax+0x1b] */
    II(0x100b3556, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3559, 0x6)   mov(memw_a32(ds, eax + 0x1d), 0);     /* mov word [eax+0x1d], 0x0 */
    II(0x100b355f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3562, 0x4)   mov(memb_a32(ds, eax + 0x22), 0);     /* mov byte [eax+0x22], 0x0 */
l_0x100b3566:
    II(0x100b3566, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3569, 0x6)   mov(memw_a32(ds, eax + 0x1f), 0);     /* mov word [eax+0x1f], 0x0 */
l_0x100b356f:
    II(0x100b356f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3572, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x100b3575, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b3578, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100b357b, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x100b3580, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100b3582, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3585, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b3588, 0x5)   calld(0x1008b1a4, -0x283e9);          /* call 0x1008b1a4 */
    II(0x100b358d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b3590, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
    II(0x100b3593, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b3596, 0x3)   add(edx, 0x19);                       /* add edx, 0x19 */
    II(0x100b3599, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b359c, 0x5)   calld(0x101082ce, 0x54d2d);           /* call 0x101082ce */
    II(0x100b35a1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b35a3, 0x6)   jzd(0x100b36db, 0x132);               /* jz dword 0x100b36db */
    II(0x100b35a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b35ac, 0x4)   mov(memb_a32(ds, eax + 0x22), 0x1);   /* mov byte [eax+0x22], 0x1 */
    II(0x100b35b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b35b3, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x100b35b6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b35b9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100b35bc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x100b35bf, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100b35c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b35c4, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x100b35c7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b35ca, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100b35cc, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100b35ce, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100b35d0, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100b35d3, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100b35d7, 0x2)   jged(0x100b3615, 0x3c);               /* jge 0x100b3615 */
    II(0x100b35d9, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100b35de, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b35df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b35e2, 0x3)   mov(ecx, memd_a32(ds, eax + 0x19));   /* mov ecx, [eax+0x19] */
    II(0x100b35e5, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100b35e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b35eb, 0x3)   mov(ebx, memd_a32(ds, eax + 0x17));   /* mov ebx, [eax+0x17] */
    II(0x100b35ee, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b35f1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b35f4, 0x3)   mov(edx, memd_a32(ds, edx + 0x7));    /* mov edx, [edx+0x7] */
    II(0x100b35f7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b35fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b35fd, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b3600, 0x5)   calld(0x10076574, -0x3d091);          /* call 0x10076574 */
    II(0x100b3605, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100b3608, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b360b, 0x5)   calld(0x100702b9, -0x43357);          /* call 0x100702b9 */
    II(0x100b3610, 0x1)   cwde();                               /* cwde */
    II(0x100b3611, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b3613, 0x2)   jnzd(0x100b3617, 0x2);                /* jnz 0x100b3617 */
l_0x100b3615:
    II(0x100b3615, 0x2)   jmpd(0x100b3633, 0x1c);               /* jmp 0x100b3633 */
l_0x100b3617:
    II(0x100b3617, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b361a, 0x3)   add(edx, 0x19);                       /* add edx, 0x19 */
    II(0x100b361d, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100b3620, 0x5)   calld(0x10075e64, -0x3d7c1);          /* call 0x10075e64 */
    II(0x100b3625, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b3627, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100b362a, 0x5)   calld(0x1011ff4c, 0x6c91d);           /* call 0x1011ff4c */
    II(0x100b362f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b3631, 0x2)   jnzd(0x100b3638, 0x5);                /* jnz 0x100b3638 */
l_0x100b3633:
    II(0x100b3633, 0x5)   jmpd(0x100b36db, 0xa3);               /* jmp 0x100b36db */
l_0x100b3638:
    II(0x100b3638, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100b363d, 0x5)   calld(sys_new, 0xb27be);              /* call 0x10165e00 */
    II(0x100b3642, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100b3645, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100b3648, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100b364b, 0x4)   cmp(memd_a32(ss, ebp - 0x44), 0);     /* cmp dword [ebp-0x44], 0x0 */
    II(0x100b364f, 0x2)   jzd(0x100b368e, 0x3d);                /* jz 0x100b368e */
    II(0x100b3651, 0x5)   mov(eax, 0x100b3700);                 /* mov eax, 0x100b3700 */
    II(0x100b3656, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b3657, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b365a, 0x3)   add(edx, 0x19);                       /* add edx, 0x19 */
    II(0x100b365d, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b3660, 0x5)   calld(0x10075e64, -0x3d801);          /* call 0x10075e64 */
    II(0x100b3665, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b3666, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b3668, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b3669, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100b366b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100b366e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b3671, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b3674, 0x5)   calld(0x100765d0, -0x3d0a9);          /* call 0x100765d0 */
    II(0x100b3679, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b367b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100b367e, 0x5)   calld(0x100ac220, -0x7463);           /* call 0x100ac220 */
    II(0x100b3683, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x100b3686, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100b3689, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100b368c, 0x2)   jmpd(0x100b3694, 0x6);                /* jmp 0x100b3694 */
l_0x100b368e:
    II(0x100b368e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100b3691, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
l_0x100b3694:
    II(0x100b3694, 0x3)   mov(edx, memd_a32(ss, ebp - 0x50));   /* mov edx, [ebp-0x50] */
    II(0x100b3697, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100b369a, 0x5)   calld(0x1008a5f0, -0x290af);          /* call 0x1008a5f0 */
    II(0x100b369f, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100b36a4, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100b36a7, 0x5)   calld(0x1008a520, -0x2918c);          /* call 0x1008a520 */
    II(0x100b36ac, 0x5)   calld(0x1008a6a4, -0x2900d);          /* call 0x1008a6a4 */
    II(0x100b36b1, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100b36b4, 0x5)   calld(0x1008a57c, -0x2913d);          /* call 0x1008a57c */
    II(0x100b36b9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b36bb, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b36c0, 0x5)   calld(0x100a4d50, -0xe975);           /* call 0x100a4d50 */
    II(0x100b36c5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b36c7, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100b36ca, 0x5)   calld(0x10088d4c, -0x2a983);          /* call 0x10088d4c */
    II(0x100b36cf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b36d1, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100b36d4, 0x5)   calld(my_dtor_d1, -0x2a9dd);          /* call 0x10088cfc */
    II(0x100b36d9, 0x2)   jmpd(0x100b36f7, 0x1c);               /* jmp 0x100b36f7 */
l_0x100b36db:
    II(0x100b36db, 0x5)   jmpd(0x100b348a, -0x256);             /* jmp 0x100b348a */
l_0x100b36e0:
    II(0x100b36e0, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100b36e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b36e8, 0x5)   calld(0x100a28ff, -0x10dee);          /* call 0x100a28ff */
    II(0x100b36ed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b36ef, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100b36f2, 0x5)   calld(my_dtor_d1, -0x2a9fb);          /* call 0x10088cfc */
l_0x100b36f7:
    II(0x100b36f7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b36f9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b36fa, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b36fb, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b36fc, 0x1)   popd(edx);                            /* pop edx */
    II(0x100b36fd, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b36fe, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b36ff, 0x1)   retd();                               /* ret */
FUNC_END

