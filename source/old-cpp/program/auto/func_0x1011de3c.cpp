FUNC_BEGIN(0x1011de3c, 0x27c010912303da06, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xc, 0x7f, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x4, 0xe8, 0x30, 0x2a, 0, 0, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd8, 0x28, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x77, 0x8d, 0xf5, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xe6, 0xce, 0x1, 0, 0x84, 0xc0, 0x74, 0x35, 0x8d, 0x45, 0xf4, 0xe8, 0xd5, 0x27, 0, 0, 0xe8, 0x80, 0xa1, 0xf9, 0xff, 0x85, 0xc0, 0x74, 0x1a, 0x8d, 0x45, 0xf4, 0xe8, 0xc4, 0x27, 0, 0, 0xe8, 0x6f, 0xa1, 0xf9, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xeb, 0xb5, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0xa3, 0xce, 0x1, 0, 0x84, 0xc0, 0x74, 0x11, 0x8b, 0x45, 0xf8, 0xe8, 0x3e, 0xa0, 0xf9, 0xff, 0xe8, 0x3d, 0xa1, 0xf9, 0xff, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x1a, 0x8b, 0x45, 0xf8, 0xe8, 0x2b, 0xa0, 0xf9, 0xff, 0xe8, 0x2a, 0xa1, 0xf9, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x4d, 0x25, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x41, 0x25, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011de3c, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x1011de41, 0x5)   calld(sys_check_available_stack_size, 0x47f0c); /* call 0x10165d52 */
    II(0x1011de46, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011de47, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011de48, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011de49, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011de4a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011de4b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011de4d, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1011de53, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011de56, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1011de59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011de5c, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x1011de5f, 0x5)   calld(0x10120894, 0x2a30);            /* call 0x10120894 */
    II(0x1011de64, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x1011de67, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011de69, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1011de6b, 0x5)   calld(0x10120748, 0x28d8);            /* call 0x10120748 */
    II(0x1011de70, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1011de77, 0x2)   jmpd(0x1011de81, 0x8);                /* jmp 0x1011de81 */
l_0x1011de79:
    II(0x1011de79, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1011de7c, 0x5)   calld(0x10076bf8, -0xa7289);          /* call 0x10076bf8 */
l_0x1011de81:
    II(0x1011de81, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011de83, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1011de86, 0x5)   calld(0x1013ad71, 0x1cee6);           /* call 0x1013ad71 */
    II(0x1011de8b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011de8d, 0x2)   jzd(0x1011dec4, 0x35);                /* jz 0x1011dec4 */
    II(0x1011de8f, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1011de92, 0x5)   calld(0x1012066c, 0x27d5);            /* call 0x1012066c */
    II(0x1011de97, 0x5)   calld(my__get_unit, -0x65e80);        /* call 0x100b801c */
    II(0x1011de9c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011de9e, 0x2)   jzd(0x1011deba, 0x1a);                /* jz 0x1011deba */
    II(0x1011dea0, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1011dea3, 0x5)   calld(0x1012066c, 0x27c4);            /* call 0x1012066c */
    II(0x1011dea8, 0x5)   calld(my__get_unit, -0x65e91);        /* call 0x100b801c */
    II(0x1011dead, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011deaf, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1011deb2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1011deb6, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1011deb8, 0x2)   jzd(0x1011debc, 0x2);                 /* jz 0x1011debc */
l_0x1011deba:
    II(0x1011deba, 0x2)   jmpd(0x1011dec2, 0x6);                /* jmp 0x1011dec2 */
l_0x1011debc:
    II(0x1011debc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011debf, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1011dec2:
    II(0x1011dec2, 0x2)   jmpd(0x1011de79, -0x4b);              /* jmp 0x1011de79 */
l_0x1011dec4:
    II(0x1011dec4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011dec6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011dec9, 0x5)   calld(0x1013ad71, 0x1cea3);           /* call 0x1013ad71 */
    II(0x1011dece, 0x2)   test(al, al);                         /* test al, al */
    II(0x1011ded0, 0x2)   jzd(0x1011dee3, 0x11);                /* jz 0x1011dee3 */
    II(0x1011ded2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ded5, 0x5)   calld(0x100b7f18, -0x65fc2);          /* call 0x100b7f18 */
    II(0x1011deda, 0x5)   calld(my__get_unit, -0x65ec3);        /* call 0x100b801c */
    II(0x1011dedf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011dee1, 0x2)   jnzd(0x1011dee5, 0x2);                /* jnz 0x1011dee5 */
l_0x1011dee3:
    II(0x1011dee3, 0x2)   jmpd(0x1011deff, 0x1a);               /* jmp 0x1011deff */
l_0x1011dee5:
    II(0x1011dee5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011dee8, 0x5)   calld(0x100b7f18, -0x65fd5);          /* call 0x100b7f18 */
    II(0x1011deed, 0x5)   calld(my__get_unit, -0x65ed6);        /* call 0x100b801c */
    II(0x1011def2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011def4, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1011def7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1011defb, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1011defd, 0x2)   jzd(0x1011df01, 0x2);                 /* jz 0x1011df01 */
l_0x1011deff:
    II(0x1011deff, 0x2)   jmpd(0x1011df07, 0x6);                /* jmp 0x1011df07 */
l_0x1011df01:
    II(0x1011df01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011df04, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1011df07:
    II(0x1011df07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011df0a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011df0d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011df0f, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1011df12, 0x5)   calld(0x10120464, 0x254d);            /* call 0x10120464 */
    II(0x1011df17, 0x2)   jmpd(0x1011df23, 0xa);                /* jmp 0x1011df23 */
//  II(0x1011df19, 0xa)   /* Недостижимый код. */
l_0x1011df23:
    II(0x1011df23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1011df26, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011df28, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011df29, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011df2a, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011df2b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011df2c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011df2d, 0x1)   retd();                               /* ret */
FUNC_END

