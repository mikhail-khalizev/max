FUNC_BEGIN(0x100b084c, 0xc19d75f4110bab6b, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xfc, 0x54, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xb9, 0, 0x29, 0, 0, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0x4e, 0x1e, 0xff, 0xff, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x59, 0x5e, 0xfc, 0xff, 0x83, 0xe8, 0x15, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x19, 0xe8, 0xe, 0x74, 0, 0, 0x83, 0xe8, 0x19, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x6f, 0x9d, 0xfd, 0xff, 0x83, 0xe8, 0x23, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x27, 0xe8, 0x7c, 0xa0, 0xfd, 0xff, 0x83, 0xe8, 0x27, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0xb4, 0x53, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x13, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x22, 0x5d, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0xe1, 0x73, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b084c, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100b0851, 0x5)   calld(sys_check_available_stack_size, 0xb54fc); /* call 0x10165d52 */
    II(0x100b0856, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b0857, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b0858, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b0859, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b085a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b085b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b085d, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100b0863, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b0866, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b0869, 0x5)   mov(ecx, 0x2900);                     /* mov ecx, 0x2900 */
    II(0x100b086e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b0870, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0873, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100b0876, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100b0878, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100b087b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b087e, 0x5)   calld(0x100a26d1, -0xe1b2);           /* call 0x100a26d1 */
    II(0x100b0883, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b0886, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b0889, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100b088c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b088f, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b0892, 0x5)   calld(my_ctor_0x101b38f8, -0x3a1a7);  /* call 0x100766f0 */
    II(0x100b0897, 0x3)   sub(eax, 0x15);                       /* sub eax, 0x15 */
    II(0x100b089a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b089d, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b08a0, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b08a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b08a6, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b08a9, 0x5)   calld(0x100b7cbc, 0x740e);            /* call 0x100b7cbc */
    II(0x100b08ae, 0x3)   sub(eax, 0x19);                       /* sub eax, 0x19 */
    II(0x100b08b1, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b08b4, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b08b7, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b08ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b08bd, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b08c0, 0x5)   calld(0x1008a634, -0x26291);          /* call 0x1008a634 */
    II(0x100b08c5, 0x3)   sub(eax, 0x23);                       /* sub eax, 0x23 */
    II(0x100b08c8, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b08cb, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b08ce, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b08d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b08d4, 0x3)   add(eax, 0x27);                       /* add eax, 0x27 */
    II(0x100b08d7, 0x5)   calld(0x1008a958, -0x25f84);          /* call 0x1008a958 */
    II(0x100b08dc, 0x3)   sub(eax, 0x27);                       /* sub eax, 0x27 */
    II(0x100b08df, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b08e2, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b08e5, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b08e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b08eb, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b53b4); /* mov dword [eax+0x2], 0x101b53b4 */
    II(0x100b08f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b08f5, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x100b08f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b08fc, 0x4)   mov(memw_a32(ds, eax + 0x13), dx);    /* mov [eax+0x13], dx */
    II(0x100b0900, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b0903, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b0906, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b0909, 0x5)   calld(0x10076630, -0x3a2de);          /* call 0x10076630 */
    II(0x100b090e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0910, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b0913, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b0916, 0x5)   calld(0x100b7cfc, 0x73e1);            /* call 0x100b7cfc */
    II(0x100b091b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b091e, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100b0921, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100b0924, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b0926, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b0927, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b0928, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b0929, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b092a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b092b, 0x1)   retd();                               /* ret */
FUNC_END

