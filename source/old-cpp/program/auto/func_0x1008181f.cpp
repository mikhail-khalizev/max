FUNC_BEGIN(0x1008181f, 0x533cdcb89559468a, 0x20, ({0x68, 0xb8, 0, 0, 0, 0xe8, 0x29, 0x45, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x98, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xc4, 0, 0, 0, 0, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x16, 0xe8, 0x35, 0x53, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xd4, 0x7e, 0x1d, 0xf, 0xbf, 0x55, 0xd4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x16, 0xe8, 0xf8, 0x83, 0, 0, 0xe8, 0xfb, 0x86, 0, 0, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0xcc, 0x83, 0x7d, 0xc4, 0, 0x75, 0x9, 0xc6, 0x45, 0xec, 0x1, 0xe9, 0xbb, 0x7, 0, 0, 0x80, 0x4d, 0xe8, 0x1, 0x8d, 0x45, 0xac, 0xe8, 0x6f, 0x71, 0, 0, 0x89, 0x45, 0xb0, 0x80, 0x65, 0xe8, 0xfe, 0xc6, 0x45, 0xf0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa8, 0x8b, 0x58, 0x2, 0x8b, 0x45, 0xa8, 0xff, 0x53, 0x14, 0x89, 0x45, 0xd0, 0xb9, 0x3, 0, 0, 0, 0x8b, 0x5d, 0xc4, 0x8d, 0x55, 0xc0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbe, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x9d, 0x18, 0x4, 0, 0x89, 0xc2, 0x8d, 0x45, 0xac, 0xe8, 0x64, 0x6c, 0x3, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0xd9, 0x74, 0, 0, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0x8d, 0x45, 0xac, 0xe8, 0x96, 0x8b, 0, 0, 0x66, 0x3b, 0x45, 0xd4, 0x7e, 0x55, 0xf, 0xbf, 0x55, 0xd4, 0x8d, 0x45, 0xac, 0xe8, 0xc0, 0x8a, 0, 0, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x1b, 0xf, 0xbf, 0x55, 0xd4, 0x8d, 0x45, 0xac, 0xe8, 0xab, 0x8a, 0, 0, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc1, 0x81, 0x1c, 0x10, 0x1, 0x74, 0x2, 0xeb, 0x1b, 0xf, 0xbf, 0x55, 0xd4, 0x8d, 0x45, 0xac, 0xe8, 0x8e, 0x8a, 0, 0, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x80, 0x75, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x97, 0x80, 0x7d, 0xf0, 0, 0x75, 0x13, 0xc6, 0x45, 0xec, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0x53, 0x74, 0, 0, 0xe9, 0xca, 0x6, 0, 0, 0x80, 0x4d, 0xe8, 0x1, 0x8d, 0x45, 0x9c, 0xe8, 0x63, 0xa2, 0, 0, 0x89, 0x45, 0xc8, 0x80, 0x65, 0xe8, 0xfe, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0x9d, 0x49, 0xff, 0xff, 0x8d, 0x5d, 0xb8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x11, 0x4b, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x16, 0xe8, 0x52, 0x83, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xa4, 0xe8, 0x24, 0x82, 0, 0, 0x8d, 0x45, 0xb4, 0xe8, 0x28, 0x51, 0xff, 0xff, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0x8c, 0xe8, 0x6f, 0x97, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x5d, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x40, 0xf, 0xbf, 0x55, 0xe0, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xe4, 0x1, 0xd0, 0x8b, 0x15, 0x54, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x15, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0x9c, 0xe8, 0xe4, 0x8c, 0, 0, 0xf, 0xbf, 0x55, 0xe0, 0x1, 0xd0, 0xc6, 0, 0x2, 0xeb, 0xae, 0xeb, 0x91, 0xeb, 0x8, 0x8d, 0x45, 0xb8, 0xe8, 0x9d, 0x51, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xc, 0x93, 0xb, 0, 0x84, 0xc0, 0x74, 0x56, 0x8d, 0x45, 0xb8, 0xe8, 0x2f, 0x49, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x27, 0x75, 0x1a, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xb8, 0xe8, 0x17, 0x49, 0xff, 0xff, 0xe8, 0xe6, 0x45, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x29, 0x8d, 0x45, 0xb8, 0xe8, 0x4, 0x49, 0xff, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xb8, 0xe8, 0xf6, 0x48, 0xff, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x9c, 0xe8, 0x70, 0x8c, 0, 0, 0x1, 0xd8, 0xc6, 0, 0x2, 0xeb, 0x94, 0xeb, 0x8, 0x8d, 0x45, 0xa4, 0xe8, 0x2f, 0x51, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0x9e, 0x92, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0xeb, 0, 0, 0, 0x8d, 0x45, 0xa4, 0xe8, 0xe9, 0x7f, 0, 0, 0xe8, 0x50, 0x84, 0, 0, 0x89, 0x45, 0xbc, 0x83, 0x7d, 0xbc, 0, 0xf, 0x84, 0xcc, 0, 0, 0, 0x8d, 0x55, 0x88, 0x8b, 0x45, 0xbc, 0xe8, 0x63, 0x73, 0x3, 0, 0x8d, 0x5d, 0xb4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x38, 0x70, 0, 0, 0xf, 0xbf, 0x5d, 0xb6, 0xf, 0xbf, 0x55, 0xb4, 0x8d, 0x45, 0x9c, 0xe8, 0xc, 0x8c, 0, 0, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0xf, 0x85, 0x93, 0, 0, 0, 0xb8, 0x24, 0, 0, 0, 0xe8, 0xc8, 0x42, 0xe, 0, 0x89, 0x45, 0x84, 0x8b, 0x45, 0x84, 0x89, 0x45, 0x80, 0x83, 0x7d, 0x80, 0, 0x74, 0x40, 0x31, 0xc0, 0x50, 0x8d, 0x55, 0xb4, 0x8d, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0xc, 0x43, 0xff, 0xff, 0x89, 0xc1, 0xbb, 0x3, 0, 0, 0, 0x8d, 0x45, 0x9c, 0xe8, 0x91, 0x8b, 0, 0, 0x8b, 0x75, 0x84, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x5d, 0x62, 0x4, 0, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0xeb, 0x9, 0x8b, 0x45, 0x80, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x74, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x3f, 0x7b, 0, 0, 0x8d, 0x55, 0x8c, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x91, 0x7a, 0, 0, 0xe8, 0x10, 0x7d, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x3f, 0x7a, 0, 0, 0xe9, 0xfb, 0xfe, 0xff, 0xff, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x5d, 0xc4, 0x8d, 0x55, 0xcc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xf0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x82, 0x15, 0x4, 0, 0x89, 0xc2, 0x8d, 0x45, 0xac, 0xe8, 0x49, 0x69, 0x3, 0, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xbe, 0x71, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x20, 0x47, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xb8, 0xe8, 0x1a, 0x48, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xb8, 0xe8, 0xcc, 0x4f, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x3b, 0x91, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0xcd, 0x1, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0x5a, 0x47, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x14, 0x8d, 0x45, 0xb8, 0xe8, 0x40, 0x47, 0xff, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xb8, 0xe8, 0x2a, 0x47, 0xff, 0xff, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x24, 0x8d, 0x45, 0xb8, 0xe8, 0x14, 0x47, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x54, 0x8d, 0x45, 0xb8, 0xe8, 0x7, 0x47, 0xff, 0xff, 0xe8, 0x9e, 0x45, 0xff, 0xff, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xb8, 0xe8, 0xee, 0x46, 0xff, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x5, 0xe9, 0x49, 0x1, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xdb, 0x46, 0xff, 0xff, 0xf6, 0x40, 0x12, 0x80, 0x75, 0x36, 0x8d, 0x45, 0xb8, 0xe8, 0xcd, 0x46, 0xff, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xb8, 0xe8, 0xbf, 0x46, 0xff, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x9c, 0xe8, 0x39, 0x8a, 0, 0, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0xf, 0x85, 0x5, 0x1, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0x97, 0x46, 0xff, 0xff, 0x80, 0x78, 0x3d, 0, 0x74, 0xe, 0x8d, 0x45, 0xb8, 0xe8, 0x89, 0x46, 0xff, 0xff, 0x80, 0x78, 0x3d, 0xc, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xb8, 0xe8, 0x79, 0x46, 0xff, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xb8, 0xe8, 0x69, 0x46, 0xff, 0xff, 0x80, 0x78, 0x3d, 0x1b, 0xf, 0x85, 0xc5, 0, 0, 0, 0xc6, 0x45, 0xf4, 0, 0x8d, 0x45, 0xb8, 0xe8, 0x53, 0x46, 0xff, 0xff, 0xe8, 0x5a, 0x9, 0xd, 0, 0x85, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x4f, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x38, 0x46, 0xff, 0xff, 0xe8, 0x3f, 0x9, 0xd, 0, 0xe8, 0x52, 0xe, 0x2, 0, 0x98, 0x85, 0xc0, 0x7e, 0x34, 0x8d, 0x45, 0xb8, 0xe8, 0x21, 0x46, 0xff, 0xff, 0xe8, 0x28, 0x9, 0xd, 0, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x58, 0x2, 0x8d, 0x45, 0xb8, 0xe8, 0x39, 0x46, 0xff, 0xff, 0x8b, 0x8d, 0x6c, 0xff, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xc8, 0xff, 0x53, 0x4, 0x88, 0x45, 0xf4, 0x80, 0x7d, 0xf4, 0, 0x74, 0x1b, 0x8d, 0x45, 0xb8, 0xe8, 0xe7, 0x45, 0xff, 0xff, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xac, 0xe8, 0x13, 0x6a, 0x3, 0, 0x98, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x38, 0x8d, 0x45, 0xb8, 0xe8, 0xca, 0x45, 0xff, 0xff, 0xf6, 0x40, 0x12, 0x80, 0x74, 0x16, 0x8d, 0x45, 0xb8, 0xe8, 0xbc, 0x45, 0xff, 0xff, 0xe8, 0x53, 0x44, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x1, 0x45, 0xdc, 0xeb, 0x14, 0x8d, 0x45, 0xb8, 0xe8, 0xa6, 0x45, 0xff, 0xff, 0xe8, 0x3d, 0x44, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x1, 0x45, 0xd8, 0xe9, 0x19, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xdc, 0x85, 0xc0, 0x7f, 0x8, 0xf, 0xbf, 0x45, 0xd8, 0x85, 0xc0, 0x7e, 0x4f, 0x8b, 0x45, 0xd8, 0x66, 0x3b, 0x45, 0xdc, 0x7e, 0x9, 0xc6, 0x85, 0x68, 0xff, 0xff, 0xff, 0x1, 0xeb, 0x7, 0xc6, 0x85, 0x68, 0xff, 0xff, 0xff, 0, 0x8a, 0x85, 0x68, 0xff, 0xff, 0xff, 0x88, 0x45, 0xec, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0xfd, 0x71, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x1b, 0x41, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0x44, 0x9e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0x67, 0x6f, 0, 0, 0xe9, 0xde, 0x1, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xc4, 0x44, 0xff, 0xff, 0x8d, 0x5d, 0xb8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xbc, 0x45, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xb8, 0xe8, 0x6e, 0x4d, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xdd, 0x8e, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x97, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xfc, 0x44, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xb8, 0xe8, 0xe2, 0x44, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x19, 0x74, 0x2, 0xeb, 0x67, 0xc6, 0x45, 0xf8, 0x1, 0x8d, 0x45, 0xb8, 0xe8, 0xcd, 0x44, 0xff, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xb8, 0xe8, 0xbf, 0x44, 0xff, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x9c, 0xe8, 0x39, 0x88, 0, 0, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x31, 0xc6, 0x45, 0xec, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0x39, 0x71, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x57, 0x40, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0x80, 0x9d, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xa3, 0x6e, 0, 0, 0xe9, 0x1a, 0x1, 0, 0, 0xe9, 0x4f, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0, 0xf, 0x85, 0xb5, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xf1, 0x43, 0xff, 0xff, 0x8d, 0x5d, 0xb8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xe9, 0x44, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xb8, 0xe8, 0x9b, 0x4c, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xa, 0x8e, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x83, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0x29, 0x44, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x64, 0xc6, 0x45, 0xf8, 0x1, 0x8d, 0x45, 0xb8, 0xe8, 0xb, 0x44, 0xff, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xb8, 0xe8, 0xfd, 0x43, 0xff, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x9c, 0xe8, 0x77, 0x87, 0, 0, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x2e, 0xc6, 0x45, 0xec, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0x77, 0x70, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x95, 0x3f, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0xbe, 0x9c, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xe1, 0x6d, 0, 0, 0xeb, 0x5b, 0xe9, 0x63, 0xff, 0xff, 0xff, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0x44, 0x70, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x62, 0x3f, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0x8b, 0x9c, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xae, 0x6d, 0, 0, 0xeb, 0x28, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0x1a, 0x70, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x38, 0x3f, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0x61, 0x9c, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0x84, 0x6d, 0, 0, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008181f, 0x5)   pushd(0xb8);                          /* push dword 0xb8 */
    II(0x10081824, 0x5)   calld(sys_check_available_stack_size, 0xe4529); /* call 0x10165d52 */
    II(0x10081829, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008182a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008182b, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008182c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008182d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008182e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008182f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10081831, 0x6)   sub(esp, 0x98);                       /* sub esp, 0x98 */
    II(0x10081837, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1008183a, 0x7)   mov(memd_a32(ss, ebp - 0x3c), 0);     /* mov dword [ebp-0x3c], 0x0 */
    II(0x10081841, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x10081848, 0x2)   jmpd(0x10081850, 0x6);                /* jmp 0x10081850 */
l_0x1008184a:
    II(0x1008184a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1008184d, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
l_0x10081850:
    II(0x10081850, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10081853, 0x3)   add(eax, 0x16);                       /* add eax, 0x16 */
    II(0x10081856, 0x5)   calld(0x10076b90, -0xaccb);           /* call 0x10076b90 */
    II(0x1008185b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x2c));    /* cmp ax, [ebp-0x2c] */
    II(0x1008185f, 0x2)   jled(0x1008187e, 0x1d);               /* jle 0x1008187e */
    II(0x10081861, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x10081865, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10081868, 0x3)   add(eax, 0x16);                       /* add eax, 0x16 */
    II(0x1008186b, 0x5)   calld(0x10089c68, 0x83f8);            /* call 0x10089c68 */
    II(0x10081870, 0x5)   calld(0x10089f70, 0x86fb);            /* call 0x10089f70 */
    II(0x10081875, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x10081878, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x1008187c, 0x2)   jzd(0x1008184a, -0x34);               /* jz 0x1008184a */
l_0x1008187e:
    II(0x1008187e, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x10081882, 0x2)   jnzd(0x1008188d, 0x9);                /* jnz 0x1008188d */
    II(0x10081884, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x10081888, 0x5)   jmpd(0x10082048, 0x7bb);              /* jmp 0x10082048 */
l_0x1008188d:
    II(0x1008188d, 0x4)   or_(memb_a32(ss, ebp - 0x18), 0x1);   /* or byte [ebp-0x18], 0x1 */
    II(0x10081891, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081894, 0x5)   calld(0x10088a08, 0x716f);            /* call 0x10088a08 */
    II(0x10081899, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1008189c, 0x4)   and_(memb_a32(ss, ebp - 0x18), -0x2 /* 0xfe */); /* and byte [ebp-0x18], 0xfe */
    II(0x100818a0, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100818a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100818a7, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
//    II(0x100818aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100818ad, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
//    II(0x100818b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100818b3, 0x3)   calld_abs(memd_a32(ds, ebx + 0x14));  /* call dword near [ebx+0x14] */
    II(0x100818b6, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100818b9, 0x5)   mov(ecx, 0x3);                        /* mov ecx, 0x3 */
    II(0x100818be, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x3c));   /* mov ebx, [ebp-0x3c] */
    II(0x100818c1, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x100818c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100818c7, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100818ca, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100818cd, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100818d3, 0x5)   mov(esi, 0x101c31c4);                 /* mov esi, 0x101c31c4 */
    II(0x100818d8, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100818da, 0x5)   calld(0x100c317c, 0x4189d);           /* call 0x100c317c */
    II(0x100818df, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100818e1, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100818e4, 0x5)   calld(0x100b854d, 0x36c64);           /* call 0x100b854d */
    II(0x100818e9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100818eb, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100818ee, 0x5)   calld(0x10088dcc, 0x74d9);            /* call 0x10088dcc */
    II(0x100818f3, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x100818fa, 0x2)   jmpd(0x10081902, 0x6);                /* jmp 0x10081902 */
l_0x100818fc:
    II(0x100818fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100818ff, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
l_0x10081902:
    II(0x10081902, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081905, 0x5)   calld(0x1008a4a0, 0x8b96);            /* call 0x1008a4a0 */
    II(0x1008190a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x2c));    /* cmp ax, [ebp-0x2c] */
    II(0x1008190e, 0x2)   jled(0x10081965, 0x55);               /* jle 0x10081965 */
    II(0x10081910, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x10081914, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081917, 0x5)   calld(0x1008a3dc, 0x8ac0);            /* call 0x1008a3dc */
    II(0x1008191c, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1008191e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10081921, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10081923, 0x2)   jled(0x10081940, 0x1b);               /* jle 0x10081940 */
    II(0x10081925, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x10081929, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1008192c, 0x5)   calld(0x1008a3dc, 0x8aab);            /* call 0x1008a3dc */
    II(0x10081931, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10081934, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10081937, 0x7)   test(memb_a32(ds, eax + 0x101c81c1), 0x1); /* test byte [eax+0x101c81c1], 0x1 */
    II(0x1008193e, 0x2)   jzd(0x10081942, 0x2);                 /* jz 0x10081942 */
l_0x10081940:
    II(0x10081940, 0x2)   jmpd(0x1008195d, 0x1b);               /* jmp 0x1008195d */
l_0x10081942:
    II(0x10081942, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x10081946, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081949, 0x5)   calld(0x1008a3dc, 0x8a8e);            /* call 0x1008a3dc */
    II(0x1008194e, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10081951, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10081954, 0x7)   test(memb_a32(ds, eax + 0x101c81c0), 0x80); /* test byte [eax+0x101c81c0], 0x80 */
    II(0x1008195b, 0x2)   jnzd(0x1008195f, 0x2);                /* jnz 0x1008195f */
l_0x1008195d:
    II(0x1008195d, 0x2)   jmpd(0x10081963, 0x4);                /* jmp 0x10081963 */
l_0x1008195f:
    II(0x1008195f, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x10081963:
    II(0x10081963, 0x2)   jmpd(0x100818fc, -0x69);              /* jmp 0x100818fc */
l_0x10081965:
    II(0x10081965, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x10081969, 0x2)   jnzd(0x1008197e, 0x13);               /* jnz 0x1008197e */
    II(0x1008196b, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1008196f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081971, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081974, 0x5)   calld(0x10088dcc, 0x7453);            /* call 0x10088dcc */
    II(0x10081979, 0x5)   jmpd(0x10082048, 0x6ca);              /* jmp 0x10082048 */
l_0x1008197e:
    II(0x1008197e, 0x4)   or_(memb_a32(ss, ebp - 0x18), 0x1);   /* or byte [ebp-0x18], 0x1 */
    II(0x10081982, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081985, 0x5)   calld(0x1008bbed, 0xa263);            /* call 0x1008bbed */
    II(0x1008198a, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1008198d, 0x4)   and_(memb_a32(ss, ebp - 0x18), -0x2 /* 0xfe */); /* and byte [ebp-0x18], 0xfe */
    II(0x10081991, 0x5)   mov(eax, 0x101c8178);                 /* mov eax, 0x101c8178 */
    II(0x10081996, 0x5)   calld(0x10076338, -0xb663);           /* call 0x10076338 */
    II(0x1008199b, 0x3)   lea(ebx, ebp - 0x48);                 /* lea ebx, [ebp-0x48] */
    II(0x1008199e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100819a0, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100819a2, 0x5)   calld(0x100764b8, -0xb4ef);           /* call 0x100764b8 */
    II(0x100819a7, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100819ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100819ae, 0x3)   add(eax, 0x16);                       /* add eax, 0x16 */
    II(0x100819b1, 0x5)   calld(0x10089d08, 0x8352);            /* call 0x10089d08 */
    II(0x100819b6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100819b8, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100819bb, 0x5)   calld(0x10089be4, 0x8224);            /* call 0x10089be4 */
    II(0x100819c0, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100819c3, 0x5)   calld(my_ctor_0x101b4184, -0xaed8);   /* call 0x10076af0 */
    II(0x100819c8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100819ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x100819cb, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100819cd, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100819cf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100819d1, 0x3)   lea(eax, ebp - 0x74);                 /* lea eax, [ebp-0x74] */
    II(0x100819d4, 0x5)   calld(0x1008b148, 0x976f);            /* call 0x1008b148 */
    II(0x100819d9, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100819e0, 0x2)   jmpd(0x100819e8, 0x6);                /* jmp 0x100819e8 */
l_0x100819e2:
    II(0x100819e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100819e5, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100819e8:
    II(0x100819e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100819eb, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100819f2, 0x2)   jged(0x10081a51, 0x5d);               /* jge 0x10081a51 */
    II(0x100819f4, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100819fb, 0x2)   jmpd(0x10081a03, 0x6);                /* jmp 0x10081a03 */
l_0x100819fd:
    II(0x100819fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10081a00, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
l_0x10081a03:
    II(0x10081a03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10081a06, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x10081a0d, 0x2)   jged(0x10081a4f, 0x40);               /* jge 0x10081a4f */
    II(0x10081a0f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10081a13, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x10081a18, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10081a1b, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10081a1e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10081a22, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10081a24, 0x6)   mov(edx, memd_a32(ds, 0x101c9454));   /* mov edx, [0x101c9454] */
    II(0x10081a2a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10081a2c, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10081a2e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10081a33, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10081a36, 0x2)   jnzd(0x10081a4d, 0x15);               /* jnz 0x10081a4d */
    II(0x10081a38, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10081a3c, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081a3f, 0x5)   calld(0x1008a728, 0x8ce4);            /* call 0x1008a728 */
    II(0x10081a44, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10081a48, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10081a4a, 0x3)   mov(memb_a32(ds, eax), 0x2);          /* mov byte [eax], 0x2 */
l_0x10081a4d:
    II(0x10081a4d, 0x2)   jmpd(0x100819fd, -0x52);              /* jmp 0x100819fd */
l_0x10081a4f:
    II(0x10081a4f, 0x2)   jmpd(0x100819e2, -0x6f);              /* jmp 0x100819e2 */
l_0x10081a51:
    II(0x10081a51, 0x2)   jmpd(0x10081a5b, 0x8);                /* jmp 0x10081a5b */
l_0x10081a53:
    II(0x10081a53, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081a56, 0x5)   calld(0x10076bf8, -0xae63);           /* call 0x10076bf8 */
l_0x10081a5b:
    II(0x10081a5b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081a5d, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081a60, 0x5)   calld(0x1013ad71, 0xb930c);           /* call 0x1013ad71 */
    II(0x10081a65, 0x2)   test(al, al);                         /* test al, al */
    II(0x10081a67, 0x2)   jzd(0x10081abf, 0x56);                /* jz 0x10081abf */
    II(0x10081a69, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081a6c, 0x5)   calld(0x100763a0, -0xb6d1);           /* call 0x100763a0 */
    II(0x10081a71, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x27);   /* cmp word [eax+0x8], 0x27 */
    II(0x10081a76, 0x2)   jnzd(0x10081a92, 0x1a);               /* jnz 0x10081a92 */
    II(0x10081a78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10081a7b, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x10081a7e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10081a81, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081a84, 0x5)   calld(0x100763a0, -0xb6e9);           /* call 0x100763a0 */
    II(0x10081a89, 0x5)   calld(0x10076074, -0xba1a);           /* call 0x10076074 */
    II(0x10081a8e, 0x2)   test(al, al);                         /* test al, al */
    II(0x10081a90, 0x2)   jnzd(0x10081a94, 0x2);                /* jnz 0x10081a94 */
l_0x10081a92:
    II(0x10081a92, 0x2)   jmpd(0x10081abd, 0x29);               /* jmp 0x10081abd */
l_0x10081a94:
    II(0x10081a94, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081a97, 0x5)   calld(0x100763a0, -0xb6fc);           /* call 0x100763a0 */
    II(0x10081a9c, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10081a9f, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10081aa2, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081aa5, 0x5)   calld(0x100763a0, -0xb70a);           /* call 0x100763a0 */
    II(0x10081aaa, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10081aad, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10081ab0, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081ab3, 0x5)   calld(0x1008a728, 0x8c70);            /* call 0x1008a728 */
    II(0x10081ab8, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10081aba, 0x3)   mov(memb_a32(ds, eax), 0x2);          /* mov byte [eax], 0x2 */
l_0x10081abd:
    II(0x10081abd, 0x2)   jmpd(0x10081a53, -0x6c);              /* jmp 0x10081a53 */
l_0x10081abf:
    II(0x10081abf, 0x2)   jmpd(0x10081ac9, 0x8);                /* jmp 0x10081ac9 */
l_0x10081ac1:
    II(0x10081ac1, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10081ac4, 0x5)   calld(0x10076bf8, -0xaed1);           /* call 0x10076bf8 */
l_0x10081ac9:
    II(0x10081ac9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081acb, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10081ace, 0x5)   calld(0x1013ad71, 0xb929e);           /* call 0x1013ad71 */
    II(0x10081ad3, 0x2)   test(al, al);                         /* test al, al */
    II(0x10081ad5, 0x6)   jzd(0x10081bc6, 0xeb);                /* jz dword 0x10081bc6 */
    II(0x10081adb, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10081ade, 0x5)   calld(0x10089acc, 0x7fe9);            /* call 0x10089acc */
    II(0x10081ae3, 0x5)   calld(0x10089f38, 0x8450);            /* call 0x10089f38 */
    II(0x10081ae8, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x10081aeb, 0x4)   cmp(memd_a32(ss, ebp - 0x44), 0);     /* cmp dword [ebp-0x44], 0x0 */
    II(0x10081aef, 0x6)   jzd(0x10081bc1, 0xcc);                /* jz dword 0x10081bc1 */
    II(0x10081af5, 0x3)   lea(edx, ebp - 0x78);                 /* lea edx, [ebp-0x78] */
    II(0x10081af8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10081afb, 0x5)   calld(0x100b8e63, 0x37363);           /* call 0x100b8e63 */
    II(0x10081b00, 0x3)   lea(ebx, ebp - 0x4c);                 /* lea ebx, [ebp-0x4c] */
    II(0x10081b03, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10081b05, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10081b07, 0x5)   calld(0x10088b44, 0x7038);            /* call 0x10088b44 */
    II(0x10081b0c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4a)); /* movsx ebx, word [ebp-0x4a] */
    II(0x10081b10, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4c)); /* movsx edx, word [ebp-0x4c] */
    II(0x10081b14, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081b17, 0x5)   calld(0x1008a728, 0x8c0c);            /* call 0x1008a728 */
    II(0x10081b1c, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10081b1e, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10081b20, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10081b25, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x10081b28, 0x6)   jnzd(0x10081bc1, 0x93);               /* jnz dword 0x10081bc1 */
    II(0x10081b2e, 0x5)   mov(eax, 0x24);                       /* mov eax, 0x24 */
    II(0x10081b33, 0x5)   calld(sys_new, 0xe42c8);              /* call 0x10165e00 */
    II(0x10081b38, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
//    II(0x10081b3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x10081b3e, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
    II(0x10081b41, 0x4)   cmp(memd_a32(ss, ebp - 0x80), 0);     /* cmp dword [ebp-0x80], 0x0 */
    II(0x10081b45, 0x2)   jzd(0x10081b87, 0x40);                /* jz 0x10081b87 */
    II(0x10081b47, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10081b49, 0x1)   pushd(eax);                           /* push eax */
    II(0x10081b4a, 0x3)   lea(edx, ebp - 0x4c);                 /* lea edx, [ebp-0x4c] */
    II(0x10081b4d, 0x6)   lea(eax, ebp - 0x84);                 /* lea eax, [ebp+0xffffff7c] */
    II(0x10081b53, 0x5)   calld(0x10075e64, -0xbcf4);           /* call 0x10075e64 */
    II(0x10081b58, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10081b5a, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x10081b5f, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081b62, 0x5)   calld(0x1008a6f8, 0x8b91);            /* call 0x1008a6f8 */
    II(0x10081b67, 0x3)   mov(esi, memd_a32(ss, ebp - 0x7c));   /* mov esi, [ebp-0x7c] */
    II(0x10081b6a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10081b6c, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x10081b6e, 0x5)   calld(0x100c7dd0, 0x4625d);           /* call 0x100c7dd0 */
    II(0x10081b73, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
//    II(0x10081b79, 0x6)   mov(eax, memd_a32(ss, ebp - 0x88));   /* mov eax, [ebp+0xffffff78] */
    II(0x10081b7f, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
    II(0x10081b85, 0x2)   jmpd(0x10081b90, 0x9);                /* jmp 0x10081b90 */
l_0x10081b87:
    II(0x10081b87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x10081b8a, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
l_0x10081b90:
    II(0x10081b90, 0x6)   mov(edx, memd_a32(ss, ebp - 0x8c));   /* mov edx, [ebp+0xffffff74] */
    II(0x10081b96, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10081b9c, 0x5)   calld(0x100896e0, 0x7b3f);            /* call 0x100896e0 */
    II(0x10081ba1, 0x3)   lea(edx, ebp - 0x74);                 /* lea edx, [ebp-0x74] */
    II(0x10081ba4, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10081baa, 0x5)   calld(0x10089640, 0x7a91);            /* call 0x10089640 */
    II(0x10081baf, 0x5)   calld(0x100898c4, 0x7d10);            /* call 0x100898c4 */
    II(0x10081bb4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081bb6, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x10081bbc, 0x5)   calld(0x10089600, 0x7a3f);            /* call 0x10089600 */
l_0x10081bc1:
    II(0x10081bc1, 0x5)   jmpd(0x10081ac1, -0x105);             /* jmp 0x10081ac1 */
l_0x10081bc6:
    II(0x10081bc6, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x10081bcd, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x10081bd4, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10081bd9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x3c));   /* mov ebx, [ebp-0x3c] */
    II(0x10081bdc, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x10081bdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10081be2, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10081be5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10081be8, 0x6)   imul(esi, eax, 0xc5);                 /* imul esi, eax, 0xc5 */
    II(0x10081bee, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x10081bf3, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x10081bf5, 0x5)   calld(0x100c317c, 0x41582);           /* call 0x100c317c */
    II(0x10081bfa, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10081bfc, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081bff, 0x5)   calld(0x100b854d, 0x36949);           /* call 0x100b854d */
    II(0x10081c04, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081c06, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10081c09, 0x5)   calld(0x10088dcc, 0x71be);            /* call 0x10088dcc */
    II(0x10081c0e, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x10081c13, 0x5)   calld(0x10076338, -0xb8e0);           /* call 0x10076338 */
    II(0x10081c18, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10081c1a, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081c1d, 0x5)   calld(0x1007643c, -0xb7e6);           /* call 0x1007643c */
    II(0x10081c22, 0x2)   jmpd(0x10081c2c, 0x8);                /* jmp 0x10081c2c */
l_0x10081c24:
    II(0x10081c24, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081c27, 0x5)   calld(0x10076bf8, -0xb034);           /* call 0x10076bf8 */
l_0x10081c2c:
    II(0x10081c2c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081c2e, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081c31, 0x5)   calld(0x1013ad71, 0xb913b);           /* call 0x1013ad71 */
    II(0x10081c36, 0x2)   test(al, al);                         /* test al, al */
    II(0x10081c38, 0x6)   jzd(0x10081e0b, 0x1cd);               /* jz dword 0x10081e0b */
    II(0x10081c3e, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081c41, 0x5)   calld(0x100763a0, -0xb8a6);           /* call 0x100763a0 */
    II(0x10081c46, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081c48, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10081c4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10081c4e, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10081c51, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10081c54, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10081c56, 0x2)   jnzd(0x10081c6c, 0x14);               /* jnz 0x10081c6c */
    II(0x10081c58, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081c5b, 0x5)   calld(0x100763a0, -0xb8c0);           /* call 0x100763a0 */
    II(0x10081c60, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x10081c63, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10081c68, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10081c6a, 0x2)   jgd(0x10081c6e, 0x2);                 /* jg 0x10081c6e */
l_0x10081c6c:
    II(0x10081c6c, 0x2)   jmpd(0x10081c82, 0x14);               /* jmp 0x10081c82 */
l_0x10081c6e:
    II(0x10081c6e, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081c71, 0x5)   calld(0x100763a0, -0xb8d6);           /* call 0x100763a0 */
    II(0x10081c76, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x10081c79, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10081c7e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10081c80, 0x2)   jgd(0x10081c84, 0x2);                 /* jg 0x10081c84 */
l_0x10081c82:
    II(0x10081c82, 0x2)   jmpd(0x10081ca8, 0x24);               /* jmp 0x10081ca8 */
l_0x10081c84:
    II(0x10081c84, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081c87, 0x5)   calld(0x100763a0, -0xb8ec);           /* call 0x100763a0 */
    II(0x10081c8c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081c8e, 0x3)   mov(dl, memb_a32(ds, eax + 0x54));    /* mov dl, [eax+0x54] */
    II(0x10081c91, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081c94, 0x5)   calld(0x100763a0, -0xb8f9);           /* call 0x100763a0 */
    II(0x10081c99, 0x5)   calld(0x1007623c, -0xba62);           /* call 0x1007623c */
    II(0x10081c9e, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10081ca1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10081ca4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10081ca6, 0x2)   jged(0x10081caa, 0x2);                /* jge 0x10081caa */
l_0x10081ca8:
    II(0x10081ca8, 0x2)   jmpd(0x10081cb8, 0xe);                /* jmp 0x10081cb8 */
l_0x10081caa:
    II(0x10081caa, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081cad, 0x5)   calld(0x100763a0, -0xb912);           /* call 0x100763a0 */
    II(0x10081cb2, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x10081cb6, 0x2)   jzd(0x10081cbd, 0x5);                 /* jz 0x10081cbd */
l_0x10081cb8:
    II(0x10081cb8, 0x5)   jmpd(0x10081e06, 0x149);              /* jmp 0x10081e06 */
l_0x10081cbd:
    II(0x10081cbd, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081cc0, 0x5)   calld(0x100763a0, -0xb925);           /* call 0x100763a0 */
    II(0x10081cc5, 0x4)   test(memb_a32(ds, eax + 0x12), 0x80); /* test byte [eax+0x12], 0x80 */
    II(0x10081cc9, 0x2)   jnzd(0x10081d01, 0x36);               /* jnz 0x10081d01 */
    II(0x10081ccb, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081cce, 0x5)   calld(0x100763a0, -0xb933);           /* call 0x100763a0 */
    II(0x10081cd3, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10081cd6, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10081cd9, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081cdc, 0x5)   calld(0x100763a0, -0xb941);           /* call 0x100763a0 */
    II(0x10081ce1, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10081ce4, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10081ce7, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081cea, 0x5)   calld(0x1008a728, 0x8a39);            /* call 0x1008a728 */
    II(0x10081cef, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10081cf1, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10081cf3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10081cf8, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10081cfb, 0x6)   jnzd(0x10081e06, 0x105);              /* jnz dword 0x10081e06 */
l_0x10081d01:
    II(0x10081d01, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081d04, 0x5)   calld(0x100763a0, -0xb969);           /* call 0x100763a0 */
    II(0x10081d09, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0);     /* cmp byte [eax+0x3d], 0x0 */
    II(0x10081d0d, 0x2)   jzd(0x10081d1d, 0xe);                 /* jz 0x10081d1d */
    II(0x10081d0f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081d12, 0x5)   calld(0x100763a0, -0xb977);           /* call 0x100763a0 */
    II(0x10081d17, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0xc);   /* cmp byte [eax+0x3d], 0xc */
    II(0x10081d1b, 0x2)   jnzd(0x10081d1f, 0x2);                /* jnz 0x10081d1f */
l_0x10081d1d:
    II(0x10081d1d, 0x2)   jmpd(0x10081d2d, 0xe);                /* jmp 0x10081d2d */
l_0x10081d1f:
    II(0x10081d1f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081d22, 0x5)   calld(0x100763a0, -0xb987);           /* call 0x100763a0 */
    II(0x10081d27, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x10081d2b, 0x2)   jnzd(0x10081d2f, 0x2);                /* jnz 0x10081d2f */
l_0x10081d2d:
    II(0x10081d2d, 0x2)   jmpd(0x10081d41, 0x12);               /* jmp 0x10081d41 */
l_0x10081d2f:
    II(0x10081d2f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081d32, 0x5)   calld(0x100763a0, -0xb997);           /* call 0x100763a0 */
    II(0x10081d37, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x10081d3b, 0x6)   jnzd(0x10081e06, 0xc5);               /* jnz dword 0x10081e06 */
l_0x10081d41:
    II(0x10081d41, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x10081d45, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081d48, 0x5)   calld(0x100763a0, -0xb9ad);           /* call 0x100763a0 */
    II(0x10081d4d, 0x5)   calld(0x101526ac, 0xd095a);           /* call 0x101526ac */
    II(0x10081d52, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10081d54, 0x2)   jnzd(0x10081d5c, 0x6);                /* jnz 0x10081d5c */
    II(0x10081d56, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x10081d5a, 0x2)   jmpd(0x10081dab, 0x4f);               /* jmp 0x10081dab */
l_0x10081d5c:
    II(0x10081d5c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x10081d60, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081d63, 0x5)   calld(0x100763a0, -0xb9c8);           /* call 0x100763a0 */
    II(0x10081d68, 0x5)   calld(0x101526ac, 0xd093f);           /* call 0x101526ac */
    II(0x10081d6d, 0x5)   calld(0x100a2bc4, 0x20e52);           /* call 0x100a2bc4 */
    II(0x10081d72, 0x1)   cwde();                               /* cwde */
    II(0x10081d73, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10081d75, 0x2)   jled(0x10081dab, 0x34);               /* jle 0x10081dab */
    II(0x10081d77, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081d7a, 0x5)   calld(0x100763a0, -0xb9df);           /* call 0x100763a0 */
    II(0x10081d7f, 0x5)   calld(0x101526ac, 0xd0928);           /* call 0x101526ac */
    II(0x10081d84, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
//    II(0x10081d8a, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x10081d90, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10081d93, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081d96, 0x5)   calld(0x100763d4, -0xb9c7);           /* call 0x100763d4 */
    II(0x10081d9b, 0x6)   mov(ecx, memd_a32(ss, ebp - 0x94));   /* mov ecx, [ebp+0xffffff6c] */
    II(0x10081da1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10081da3, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x10081da5, 0x3)   calld_abs(memd_a32(ds, ebx + 0x4));   /* call dword near [ebx+0x4] */
    II(0x10081da8, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
l_0x10081dab:
    II(0x10081dab, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x10081daf, 0x2)   jzd(0x10081dcc, 0x1b);                /* jz 0x10081dcc */
    II(0x10081db1, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081db4, 0x5)   calld(0x100763a0, -0xba19);           /* call 0x100763a0 */
    II(0x10081db9, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x10081dbc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10081dbf, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081dc2, 0x5)   calld(0x100b87da, 0x36a13);           /* call 0x100b87da */
    II(0x10081dc7, 0x1)   cwde();                               /* cwde */
    II(0x10081dc8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10081dca, 0x2)   jnzd(0x10081dce, 0x2);                /* jnz 0x10081dce */
l_0x10081dcc:
    II(0x10081dcc, 0x2)   jmpd(0x10081e06, 0x38);               /* jmp 0x10081e06 */
l_0x10081dce:
    II(0x10081dce, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081dd1, 0x5)   calld(0x100763a0, -0xba36);           /* call 0x100763a0 */
    II(0x10081dd6, 0x4)   test(memb_a32(ds, eax + 0x12), 0x80); /* test byte [eax+0x12], 0x80 */
    II(0x10081dda, 0x2)   jzd(0x10081df2, 0x16);                /* jz 0x10081df2 */
    II(0x10081ddc, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081ddf, 0x5)   calld(0x100763a0, -0xba44);           /* call 0x100763a0 */
    II(0x10081de4, 0x5)   calld(0x1007623c, -0xbbad);           /* call 0x1007623c */
    II(0x10081de9, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10081ded, 0x3)   add(memd_a32(ss, ebp - 0x24), eax);   /* add [ebp-0x24], eax */
    II(0x10081df0, 0x2)   jmpd(0x10081e06, 0x14);               /* jmp 0x10081e06 */
l_0x10081df2:
    II(0x10081df2, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081df5, 0x5)   calld(0x100763a0, -0xba5a);           /* call 0x100763a0 */
    II(0x10081dfa, 0x5)   calld(0x1007623c, -0xbbc3);           /* call 0x1007623c */
    II(0x10081dff, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10081e03, 0x3)   add(memd_a32(ss, ebp - 0x28), eax);   /* add [ebp-0x28], eax */
l_0x10081e06:
    II(0x10081e06, 0x5)   jmpd(0x10081c24, -0x1e7);             /* jmp 0x10081c24 */
l_0x10081e0b:
    II(0x10081e0b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10081e0f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10081e11, 0x2)   jgd(0x10081e1b, 0x8);                 /* jg 0x10081e1b */
    II(0x10081e13, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10081e17, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10081e19, 0x2)   jled(0x10081e6a, 0x4f);               /* jle 0x10081e6a */
l_0x10081e1b:
    II(0x10081e1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10081e1e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x10081e22, 0x2)   jled(0x10081e2d, 0x9);                /* jle 0x10081e2d */
    II(0x10081e24, 0x7)   mov(memb_a32(ss, ebp - 0x98), 0x1);   /* mov byte [ebp+0xffffff68], 0x1 */
    II(0x10081e2b, 0x2)   jmpd(0x10081e34, 0x7);                /* jmp 0x10081e34 */
l_0x10081e2d:
    II(0x10081e2d, 0x7)   mov(memb_a32(ss, ebp - 0x98), 0);     /* mov byte [ebp+0xffffff68], 0x0 */
l_0x10081e34:
    II(0x10081e34, 0x6)   mov(al, memb_a32(ss, ebp - 0x98));    /* mov al, [ebp+0xffffff68] */
    II(0x10081e3a, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10081e3d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081e3f, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10081e42, 0x5)   calld(0x10089044, 0x71fd);            /* call 0x10089044 */
    II(0x10081e47, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081e49, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081e4c, 0x5)   calld(0x10075f6c, -0xbee5);           /* call 0x10075f6c */
    II(0x10081e51, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081e53, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081e56, 0x5)   calld(0x1008bc9f, 0x9e44);            /* call 0x1008bc9f */
    II(0x10081e5b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081e5d, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081e60, 0x5)   calld(0x10088dcc, 0x6f67);            /* call 0x10088dcc */
    II(0x10081e65, 0x5)   jmpd(0x10082048, 0x1de);              /* jmp 0x10082048 */
l_0x10081e6a:
    II(0x10081e6a, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10081e6f, 0x5)   calld(0x10076338, -0xbb3c);           /* call 0x10076338 */
    II(0x10081e74, 0x3)   lea(ebx, ebp - 0x48);                 /* lea ebx, [ebp-0x48] */
    II(0x10081e77, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10081e79, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10081e7b, 0x5)   calld(0x1007643c, -0xba44);           /* call 0x1007643c */
    II(0x10081e80, 0x2)   jmpd(0x10081e8a, 0x8);                /* jmp 0x10081e8a */
l_0x10081e82:
    II(0x10081e82, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081e85, 0x5)   calld(0x10076bf8, -0xb292);           /* call 0x10076bf8 */
l_0x10081e8a:
    II(0x10081e8a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081e8c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081e8f, 0x5)   calld(0x1013ad71, 0xb8edd);           /* call 0x1013ad71 */
    II(0x10081e94, 0x2)   test(al, al);                         /* test al, al */
    II(0x10081e96, 0x6)   jzd(0x10081f33, 0x97);                /* jz dword 0x10081f33 */
    II(0x10081e9c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081e9f, 0x5)   calld(0x100763a0, -0xbb04);           /* call 0x100763a0 */
    II(0x10081ea4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081ea6, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10081ea9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10081eac, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10081eaf, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10081eb2, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10081eb4, 0x2)   jnzd(0x10081ec5, 0xf);                /* jnz 0x10081ec5 */
    II(0x10081eb6, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081eb9, 0x5)   calld(0x100763a0, -0xbb1e);           /* call 0x100763a0 */
    II(0x10081ebe, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x19);   /* cmp word [eax+0x8], 0x19 */
    II(0x10081ec3, 0x2)   jzd(0x10081ec7, 0x2);                 /* jz 0x10081ec7 */
l_0x10081ec5:
    II(0x10081ec5, 0x2)   jmpd(0x10081f2e, 0x67);               /* jmp 0x10081f2e */
l_0x10081ec7:
    II(0x10081ec7, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10081ecb, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081ece, 0x5)   calld(0x100763a0, -0xbb33);           /* call 0x100763a0 */
    II(0x10081ed3, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10081ed6, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10081ed9, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081edc, 0x5)   calld(0x100763a0, -0xbb41);           /* call 0x100763a0 */
    II(0x10081ee1, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10081ee4, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10081ee7, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081eea, 0x5)   calld(0x1008a728, 0x8839);            /* call 0x1008a728 */
    II(0x10081eef, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10081ef1, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10081ef3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10081ef8, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10081efb, 0x2)   jnzd(0x10081f2e, 0x31);               /* jnz 0x10081f2e */
    II(0x10081efd, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x10081f01, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081f03, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10081f06, 0x5)   calld(0x10089044, 0x7139);            /* call 0x10089044 */
    II(0x10081f0b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081f0d, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081f10, 0x5)   calld(0x10075f6c, -0xbfa9);           /* call 0x10075f6c */
    II(0x10081f15, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081f17, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081f1a, 0x5)   calld(0x1008bc9f, 0x9d80);            /* call 0x1008bc9f */
    II(0x10081f1f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081f21, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081f24, 0x5)   calld(0x10088dcc, 0x6ea3);            /* call 0x10088dcc */
    II(0x10081f29, 0x5)   jmpd(0x10082048, 0x11a);              /* jmp 0x10082048 */
l_0x10081f2e:
    II(0x10081f2e, 0x5)   jmpd(0x10081e82, -0xb1);              /* jmp 0x10081e82 */
l_0x10081f33:
    II(0x10081f33, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10081f37, 0x6)   jnzd(0x10081ff2, 0xb5);               /* jnz dword 0x10081ff2 */
    II(0x10081f3d, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10081f42, 0x5)   calld(0x10076338, -0xbc0f);           /* call 0x10076338 */
    II(0x10081f47, 0x3)   lea(ebx, ebp - 0x48);                 /* lea ebx, [ebp-0x48] */
    II(0x10081f4a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10081f4c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10081f4e, 0x5)   calld(0x1007643c, -0xbb17);           /* call 0x1007643c */
    II(0x10081f53, 0x2)   jmpd(0x10081f5d, 0x8);                /* jmp 0x10081f5d */
l_0x10081f55:
    II(0x10081f55, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081f58, 0x5)   calld(0x10076bf8, -0xb365);           /* call 0x10076bf8 */
l_0x10081f5d:
    II(0x10081f5d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081f5f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081f62, 0x5)   calld(0x1013ad71, 0xb8e0a);           /* call 0x1013ad71 */
    II(0x10081f67, 0x2)   test(al, al);                         /* test al, al */
    II(0x10081f69, 0x6)   jzd(0x10081ff2, 0x83);                /* jz dword 0x10081ff2 */
    II(0x10081f6f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081f72, 0x5)   calld(0x100763a0, -0xbbd7);           /* call 0x100763a0 */
    II(0x10081f77, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081f79, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10081f7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10081f7f, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10081f82, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10081f85, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10081f87, 0x2)   jnzd(0x10081fed, 0x64);               /* jnz 0x10081fed */
    II(0x10081f89, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10081f8d, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081f90, 0x5)   calld(0x100763a0, -0xbbf5);           /* call 0x100763a0 */
    II(0x10081f95, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10081f98, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10081f9b, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081f9e, 0x5)   calld(0x100763a0, -0xbc03);           /* call 0x100763a0 */
    II(0x10081fa3, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10081fa6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10081fa9, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081fac, 0x5)   calld(0x1008a728, 0x8777);            /* call 0x1008a728 */
    II(0x10081fb1, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10081fb3, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10081fb5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10081fba, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10081fbd, 0x2)   jnzd(0x10081fed, 0x2e);               /* jnz 0x10081fed */
    II(0x10081fbf, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x10081fc3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081fc5, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10081fc8, 0x5)   calld(0x10089044, 0x7077);            /* call 0x10089044 */
    II(0x10081fcd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081fcf, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10081fd2, 0x5)   calld(0x10075f6c, -0xc06b);           /* call 0x10075f6c */
    II(0x10081fd7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081fd9, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10081fdc, 0x5)   calld(0x1008bc9f, 0x9cbe);            /* call 0x1008bc9f */
    II(0x10081fe1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081fe3, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10081fe6, 0x5)   calld(0x10088dcc, 0x6de1);            /* call 0x10088dcc */
    II(0x10081feb, 0x2)   jmpd(0x10082048, 0x5b);               /* jmp 0x10082048 */
l_0x10081fed:
    II(0x10081fed, 0x5)   jmpd(0x10081f55, -0x9d);              /* jmp 0x10081f55 */
l_0x10081ff2:
    II(0x10081ff2, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x10081ff6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081ff8, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10081ffb, 0x5)   calld(0x10089044, 0x7044);            /* call 0x10089044 */
    II(0x10082000, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10082002, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10082005, 0x5)   calld(0x10075f6c, -0xc09e);           /* call 0x10075f6c */
    II(0x1008200a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008200c, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x1008200f, 0x5)   calld(0x1008bc9f, 0x9c8b);            /* call 0x1008bc9f */
    II(0x10082014, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10082016, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10082019, 0x5)   calld(0x10088dcc, 0x6dae);            /* call 0x10088dcc */
    II(0x1008201e, 0x2)   jmpd(0x10082048, 0x28);               /* jmp 0x10082048 */
//  II(0x10082020, 0x28)  /* Недостижимый код. */
l_0x10082048:
    II(0x10082048, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1008204b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008204d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008204e, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008204f, 0x1)   popd(esi);                            /* pop esi */
    II(0x10082050, 0x1)   popd(edx);                            /* pop edx */
    II(0x10082051, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10082052, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10082053, 0x1)   retd();                               /* ret */
FUNC_END

