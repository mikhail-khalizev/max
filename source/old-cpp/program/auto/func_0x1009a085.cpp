FUNC_BEGIN(0x1009a085, 0xb7a69693916a475a, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xc3, 0xbc, 0xc, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x4d, 0xfc, 0x8b, 0x5d, 0xf4, 0x8b, 0x45, 0xf4, 0xe8, 0xdb, 0xc, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0xe8, 0x11, 0x86, 0, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x13, 0xe8, 0x1c, 0xc6, 0xfd, 0xff, 0x83, 0xe8, 0x13, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0x5, 0xc6, 0xfd, 0xff, 0x83, 0xe8, 0x17, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x2, 0xcc, 0x42, 0x1b, 0x10, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0x21, 0xc5, 0xfd, 0xff, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x1009a085, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1009a08a, 0x5)   calld(sys_check_available_stack_size, 0xcbcc3); /* call 0x10165d52 */
    II(0x1009a08f, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009a090, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009a091, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009a092, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009a094, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1009a09a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1009a09d, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1009a0a0, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1009a0a3, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1009a0a6, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x1009a0aa, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x1009a0ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1009a0b0, 0x5)   calld(0x1008ad90, -0xf325);           /* call 0x1008ad90 */
    II(0x1009a0b5, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1009a0b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009a0bb, 0x5)   calld(0x100a26d1, 0x8611);            /* call 0x100a26d1 */
    II(0x1009a0c0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1009a0c3, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1009a0c6, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1009a0c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009a0cc, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009a0cf, 0x5)   calld(my_ctor_0x101b38f8, -0x239e4);  /* call 0x100766f0 */
    II(0x1009a0d4, 0x3)   sub(eax, 0x13);                       /* sub eax, 0x13 */
    II(0x1009a0d7, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1009a0da, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1009a0dd, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1009a0e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009a0e3, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009a0e6, 0x5)   calld(my_ctor_0x101b38f8, -0x239fb);  /* call 0x100766f0 */
    II(0x1009a0eb, 0x3)   sub(eax, 0x17);                       /* sub eax, 0x17 */
    II(0x1009a0ee, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1009a0f1, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1009a0f4, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1009a0f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009a0fa, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b42cc); /* mov dword [eax+0x2], 0x101b42cc */
    II(0x1009a101, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009a104, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009a107, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009a10a, 0x5)   calld(0x10076630, -0x23adf);          /* call 0x10076630 */
    II(0x1009a10f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009a112, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1009a115, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1009a118, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009a11a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009a11b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009a11c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009a11d, 0x1)   retd();                               /* ret */
FUNC_END

