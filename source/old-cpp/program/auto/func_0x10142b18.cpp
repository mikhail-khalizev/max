FUNC_BEGIN(0x10142b18, 0x867a26a38d6ac20e, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x30, 0x32, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xf0, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf4, 0xf, 0xbf, 0x45, 0x20, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe4, 0x8b, 0x45, 0x10, 0x66, 0xc7, 0, 0, 0, 0x8b, 0x45, 0x14, 0x66, 0xc7, 0, 0, 0, 0x8b, 0x45, 0x18, 0x66, 0xc7, 0, 0, 0, 0x66, 0x83, 0x7d, 0x1c, 0, 0x74, 0x9, 0xc7, 0x45, 0xe0, 0xff, 0xff, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xe4, 0x8b, 0x80, 0xfa, 0, 0, 0, 0x66, 0x8b, 0, 0x25, 0xff, 0xff, 0, 0, 0xb, 0x45, 0xe0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xdc, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0x66, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x3, 0x45, 0xfc, 0x98, 0xe8, 0xcd, 0x6b, 0xf4, 0xff, 0xf, 0xbf, 0x55, 0xdc, 0x39, 0xc2, 0xf, 0x8f, 0x1, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xd8, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0x66, 0xa1, 0x74, 0x81, 0x1c, 0x10, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0x3, 0x45, 0xfc, 0x98, 0xe8, 0x9d, 0x6b, 0xf4, 0xff, 0xf, 0xbf, 0x55, 0xd8, 0x39, 0xc2, 0xf, 0x8f, 0xcc, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd8, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xdc, 0x1, 0xd0, 0x1, 0xc0, 0x8b, 0x15, 0x1c, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xe8, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xec, 0x85, 0xc2, 0x74, 0x2d, 0xf, 0xbf, 0x55, 0xd8, 0xf, 0xbf, 0x45, 0xdc, 0xe8, 0x15, 0x11, 0xf3, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x83, 0xf8, 0x8, 0x74, 0x9, 0xc7, 0x45, 0xd4, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0x83, 0x7d, 0xd4, 0, 0x75, 0x2, 0xeb, 0x65, 0x66, 0xf7, 0x45, 0xe8, 0x40, 0, 0x74, 0x1d, 0xba, 0x10, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x25, 0x1f, 0, 0, 0, 0x98, 0xe8, 0x14, 0x6b, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0x14, 0x66, 0x1, 0x10, 0xeb, 0x40, 0x66, 0xf7, 0x45, 0xe8, 0x20, 0, 0x74, 0x1d, 0xba, 0x10, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x25, 0x1f, 0, 0, 0, 0x98, 0xe8, 0xef, 0x6a, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0x18, 0x66, 0x1, 0x10, 0xeb, 0x1b, 0xba, 0x10, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x25, 0x1f, 0, 0, 0, 0x98, 0xe8, 0xd2, 0x6a, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0x10, 0x66, 0x1, 0x10, 0xe9, 0xc, 0xff, 0xff, 0xff, 0xe9, 0xd7, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0x14, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xf4, 0x7e, 0x9, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0x14, 0x66, 0x89, 0x2, 0x8b, 0x45, 0x18, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xf4, 0x7e, 0x9, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0x18, 0x66, 0x89, 0x2, 0x8b, 0x45, 0x10, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xf4, 0x7e, 0x9, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0x10, 0x66, 0x89, 0x2, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x14, 0}))
    II(0x10142b18, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x10142b1d, 0x5)   calld(sys_check_available_stack_size, 0x23230); /* call 0x10165d52 */
    II(0x10142b22, 0x1)   pushd(esi);                           /* push esi */
    II(0x10142b23, 0x1)   pushd(edi);                           /* push edi */
    II(0x10142b24, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10142b25, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10142b27, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x10142b2d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10142b30, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x10142b33, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10142b36, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x10142b39, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x20)); /* movsx eax, word [ebp+0x20] */
    II(0x10142b3d, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10142b43, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x10142b48, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10142b4a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x10142b4d, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10142b50, 0x5)   mov(memw_a32(ds, eax), 0);            /* mov word [eax], 0x0 */
    II(0x10142b55, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10142b58, 0x5)   mov(memw_a32(ds, eax), 0);            /* mov word [eax], 0x0 */
    II(0x10142b5d, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x10142b60, 0x5)   mov(memw_a32(ds, eax), 0);            /* mov word [eax], 0x0 */
    II(0x10142b65, 0x5)   cmp(memw_a32(ss, ebp + 0x1c), 0);     /* cmp word [ebp+0x1c], 0x0 */
    II(0x10142b6a, 0x2)   jzd(0x10142b75, 0x9);                 /* jz 0x10142b75 */
    II(0x10142b6c, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0xffff); /* mov dword [ebp-0x20], 0xffff */
    II(0x10142b73, 0x2)   jmpd(0x10142b7c, 0x7);                /* jmp 0x10142b7c */
l_0x10142b75:
    II(0x10142b75, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x10142b7c:
    II(0x10142b7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10142b7f, 0x6)   mov(eax, memd_a32(ds, eax + 0xfa));   /* mov eax, [eax+0xfa] */
    II(0x10142b85, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10142b88, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10142b8d, 0x3)   or_(eax, memd_a32(ss, ebp - 0x20));   /* or eax, [ebp-0x20] */
    II(0x10142b90, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10142b93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10142b96, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10142b99, 0x2)   jmpd(0x10142ba1, 0x6);                /* jmp 0x10142ba1 */
l_0x10142b9b:
    II(0x10142b9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10142b9e, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x10142ba1:
    II(0x10142ba1, 0x6)   mov(ax, memw_a32(ds, 0x101c8172));    /* mov ax, [0x101c8172] */
    II(0x10142ba7, 0x1)   dec(eax);                             /* dec eax */
    II(0x10142ba8, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10142bab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10142bae, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10142bb1, 0x1)   cwde();                               /* cwde */
    II(0x10142bb2, 0x5)   calld(my_min, -0xb9433);              /* call 0x10089784 */
    II(0x10142bb7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10142bbb, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10142bbd, 0x6)   jgd(0x10142cc4, 0x101);               /* jg dword 0x10142cc4 */
    II(0x10142bc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10142bc6, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10142bc9, 0x2)   jmpd(0x10142bd1, 0x6);                /* jmp 0x10142bd1 */
l_0x10142bcb:
    II(0x10142bcb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10142bce, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x10142bd1:
    II(0x10142bd1, 0x6)   mov(ax, memw_a32(ds, 0x101c8174));    /* mov ax, [0x101c8174] */
    II(0x10142bd7, 0x1)   dec(eax);                             /* dec eax */
    II(0x10142bd8, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10142bdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10142bde, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10142be1, 0x1)   cwde();                               /* cwde */
    II(0x10142be2, 0x5)   calld(my_min, -0xb9463);              /* call 0x10089784 */
    II(0x10142be7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x10142beb, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10142bed, 0x6)   jgd(0x10142cbf, 0xcc);                /* jg dword 0x10142cbf */
    II(0x10142bf3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x10142bf7, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x10142bfc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10142bff, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10142c02, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10142c06, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10142c08, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10142c0a, 0x6)   mov(edx, memd_a32(ds, 0x101c811c));   /* mov edx, [0x101c811c] */
    II(0x10142c10, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10142c12, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10142c15, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10142c18, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10142c1c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10142c1e, 0x4)   mov(ax, memw_a32(ss, ebp - 0x14));    /* mov ax, [ebp-0x14] */
    II(0x10142c22, 0x2)   test(edx, eax);                       /* test edx, eax */
    II(0x10142c24, 0x2)   jzd(0x10142c53, 0x2d);                /* jz 0x10142c53 */
    II(0x10142c26, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x10142c2a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10142c2e, 0x5)   calld(0x10073d48, -0xceeeb);          /* call 0x10073d48 */
    II(0x10142c33, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10142c38, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x10142c3b, 0x2)   jzd(0x10142c46, 0x9);                 /* jz 0x10142c46 */
    II(0x10142c3d, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0x1);   /* mov dword [ebp-0x2c], 0x1 */
    II(0x10142c44, 0x2)   jmpd(0x10142c4d, 0x7);                /* jmp 0x10142c4d */
l_0x10142c46:
    II(0x10142c46, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
l_0x10142c4d:
    II(0x10142c4d, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x10142c51, 0x2)   jnzd(0x10142c55, 0x2);                /* jnz 0x10142c55 */
l_0x10142c53:
    II(0x10142c53, 0x2)   jmpd(0x10142cba, 0x65);               /* jmp 0x10142cba */
l_0x10142c55:
    II(0x10142c55, 0x6)   test(memw_a32(ss, ebp - 0x18), 0x40); /* test word [ebp-0x18], 0x40 */
    II(0x10142c5b, 0x2)   jzd(0x10142c7a, 0x1d);                /* jz 0x10142c7a */
    II(0x10142c5d, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x10142c62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10142c65, 0x5)   and_(eax, 0x1f);                      /* and eax, 0x1f */
    II(0x10142c6a, 0x1)   cwde();                               /* cwde */
    II(0x10142c6b, 0x5)   calld(my_min, -0xb94ec);              /* call 0x10089784 */
    II(0x10142c70, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10142c72, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10142c75, 0x3)   add(memw_a32(ds, eax), dx);           /* add [eax], dx */
    II(0x10142c78, 0x2)   jmpd(0x10142cba, 0x40);               /* jmp 0x10142cba */
l_0x10142c7a:
    II(0x10142c7a, 0x6)   test(memw_a32(ss, ebp - 0x18), 0x20); /* test word [ebp-0x18], 0x20 */
    II(0x10142c80, 0x2)   jzd(0x10142c9f, 0x1d);                /* jz 0x10142c9f */
    II(0x10142c82, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x10142c87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10142c8a, 0x5)   and_(eax, 0x1f);                      /* and eax, 0x1f */
    II(0x10142c8f, 0x1)   cwde();                               /* cwde */
    II(0x10142c90, 0x5)   calld(my_min, -0xb9511);              /* call 0x10089784 */
    II(0x10142c95, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10142c97, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x10142c9a, 0x3)   add(memw_a32(ds, eax), dx);           /* add [eax], dx */
    II(0x10142c9d, 0x2)   jmpd(0x10142cba, 0x1b);               /* jmp 0x10142cba */
l_0x10142c9f:
    II(0x10142c9f, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x10142ca4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10142ca7, 0x5)   and_(eax, 0x1f);                      /* and eax, 0x1f */
    II(0x10142cac, 0x1)   cwde();                               /* cwde */
    II(0x10142cad, 0x5)   calld(my_min, -0xb952e);              /* call 0x10089784 */
    II(0x10142cb2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10142cb4, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10142cb7, 0x3)   add(memw_a32(ds, eax), dx);           /* add [eax], dx */
l_0x10142cba:
    II(0x10142cba, 0x5)   jmpd(0x10142bcb, -0xf4);              /* jmp 0x10142bcb */
l_0x10142cbf:
    II(0x10142cbf, 0x5)   jmpd(0x10142b9b, -0x129);             /* jmp 0x10142b9b */
l_0x10142cc4:
    II(0x10142cc4, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10142cc7, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10142cca, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x10142cce, 0x2)   jled(0x10142cd9, 0x9);                /* jle 0x10142cd9 */
    II(0x10142cd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10142cd3, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x10142cd6, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
l_0x10142cd9:
    II(0x10142cd9, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x10142cdc, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10142cdf, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x10142ce3, 0x2)   jled(0x10142cee, 0x9);                /* jle 0x10142cee */
    II(0x10142ce5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10142ce8, 0x3)   mov(edx, memd_a32(ss, ebp + 0x18));   /* mov edx, [ebp+0x18] */
    II(0x10142ceb, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
l_0x10142cee:
    II(0x10142cee, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10142cf1, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10142cf4, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x10142cf8, 0x2)   jled(0x10142d03, 0x9);                /* jle 0x10142d03 */
    II(0x10142cfa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10142cfd, 0x3)   mov(edx, memd_a32(ss, ebp + 0x10));   /* mov edx, [ebp+0x10] */
    II(0x10142d00, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
l_0x10142d03:
    II(0x10142d03, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10142d05, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10142d06, 0x1)   popd(edi);                            /* pop edi */
    II(0x10142d07, 0x1)   popd(esi);                            /* pop esi */
    II(0x10142d08, 0x3)   retd(0x14);                           /* ret 0x14 */
FUNC_END

