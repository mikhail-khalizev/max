FUNC_BEGIN(0x100e9dcc, 0xeed135a99695224b, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0x7c, 0xbf, 0x7, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xf8, 0x8b, 0x5d, 0x10, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xe0, 0xe8, 0x6d, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x5e, 0x1, 0, 0, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xe0, 0xe8, 0x4a, 0xff, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x58, 0xe8, 0x5, 0xb5, 0xfe, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc0, 0x8a, 0x45, 0x18, 0x50, 0x8b, 0x45, 0x14, 0x50, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0xc, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x42, 0x4, 0x98, 0x50, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x8, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x2, 0x98, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x8, 0x8b, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0x80, 0xfc, 0xff, 0xff, 0xe9, 0xf7, 0, 0, 0, 0x8b, 0x45, 0xe8, 0x2b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xec, 0x2b, 0x45, 0xe4, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x8, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x2, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0xc, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x42, 0x4, 0x89, 0x45, 0xd0, 0xf, 0xbf, 0x55, 0xd0, 0xf, 0xbf, 0x45, 0xd4, 0xf, 0xaf, 0xc2, 0xe8, 0x31, 0x11, 0x8, 0, 0x89, 0x45, 0xcc, 0xf, 0xbf, 0x45, 0xfc, 0xf, 0xaf, 0x45, 0xe4, 0x3, 0x45, 0xe0, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xe4, 0x2b, 0x50, 0x4, 0xf, 0xbf, 0x45, 0xd4, 0xf, 0xaf, 0xd0, 0x8b, 0x5d, 0xf8, 0x8b, 0x45, 0xe0, 0x2b, 0x3, 0x3, 0x45, 0xcc, 0x1, 0xd0, 0x89, 0x45, 0xc8, 0xf, 0xbf, 0x45, 0xd4, 0x50, 0x8b, 0x45, 0xc8, 0x50, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x45, 0xd8, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0x8b, 0x45, 0xf0, 0x50, 0xe8, 0xbd, 0xc, 0x8, 0, 0x83, 0xc4, 0x18, 0xe8, 0x15, 0xb4, 0xfe, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc0, 0x8a, 0x45, 0x18, 0x50, 0x8b, 0x45, 0x14, 0x50, 0xf, 0xbf, 0x45, 0xd0, 0x50, 0xf, 0xbf, 0x45, 0xd4, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x8b, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xd4, 0x8b, 0x45, 0xcc, 0xe8, 0xb0, 0xfb, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0x8b, 0x45, 0xf0, 0x50, 0xf, 0xbf, 0x45, 0xd4, 0x50, 0xf, 0xbf, 0x45, 0xd8, 0x50, 0xf, 0xbf, 0x45, 0xdc, 0x50, 0x8b, 0x45, 0xc8, 0x50, 0xe8, 0x66, 0xc, 0x8, 0, 0x83, 0xc4, 0x18, 0x8b, 0x45, 0xcc, 0xe8, 0x60, 0x11, 0x8, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0xc, 0}))
    II(0x100e9dcc, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x100e9dd1, 0x5)   calld(sys_check_available_stack_size, 0x7bf7c); /* call 0x10165d52 */
    II(0x100e9dd6, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e9dd7, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e9dd8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e9dd9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e9ddb, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x100e9de1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e9de4, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100e9de7, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x100e9dea, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x100e9ded, 0x3)   mov(ebx, memd_a32(ss, ebp + 0x10));   /* mov ebx, [ebp+0x10] */
    II(0x100e9df0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e9df3, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e9df6, 0x5)   calld(0x100e9c68, -0x193);            /* call 0x100e9c68 */
    II(0x100e9dfb, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e9dfd, 0x6)   jzd(0x100e9f61, 0x15e);               /* jz dword 0x100e9f61 */
    II(0x100e9e03, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e9e06, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100e9e09, 0x5)   calld(0x100e9d58, -0xb6);             /* call 0x100e9d58 */
    II(0x100e9e0e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e9e10, 0x2)   jzd(0x100e9e6a, 0x58);                /* jz 0x100e9e6a */
    II(0x100e9e12, 0x5)   calld(0x100d531c, -0x14afb);          /* call 0x100d531c */
    II(0x100e9e17, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e9e1c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9e1d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e9e1f, 0x3)   mov(al, memb_a32(ss, ebp + 0x18));    /* mov al, [ebp+0x18] */
    II(0x100e9e22, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9e23, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100e9e26, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9e27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9e2a, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x100e9e2e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e9e31, 0x4)   sub(ax, memw_a32(ds, edx + 0x4));     /* sub ax, [edx+0x4] */
    II(0x100e9e35, 0x1)   cwde();                               /* cwde */
    II(0x100e9e36, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9e37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9e3a, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100e9e3e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e9e41, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x100e9e44, 0x1)   cwde();                               /* cwde */
    II(0x100e9e45, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9e46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9e49, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x100e9e4c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e9e4f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9e50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9e53, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x100e9e56, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100e9e59, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100e9e5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e9e60, 0x5)   calld(0x100e9ae5, -0x380);            /* call 0x100e9ae5 */
    II(0x100e9e65, 0x5)   jmpd(0x100e9f61, 0xf7);               /* jmp 0x100e9f61 */
l_0x100e9e6a:
    II(0x100e9e6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100e9e6d, 0x3)   sub(eax, memd_a32(ss, ebp - 0x20));   /* sub eax, [ebp-0x20] */
    II(0x100e9e70, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100e9e73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100e9e76, 0x3)   sub(eax, memd_a32(ss, ebp - 0x1c));   /* sub eax, [ebp-0x1c] */
    II(0x100e9e79, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100e9e7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9e7f, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100e9e83, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e9e86, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x100e9e89, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100e9e8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9e8f, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x100e9e93, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e9e96, 0x4)   sub(ax, memw_a32(ds, edx + 0x4));     /* sub ax, [edx+0x4] */
    II(0x100e9e9a, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100e9e9d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100e9ea1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100e9ea5, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100e9ea8, 0x5)   calld(sys_malloc, 0x81131);           /* call 0x1016afde */
    II(0x100e9ead, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100e9eb0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e9eb4, 0x4)   imul(eax, memd_a32(ss, ebp - 0x1c));  /* imul eax, [ebp-0x1c] */
    II(0x100e9eb8, 0x3)   add(eax, memd_a32(ss, ebp - 0x20));   /* add eax, [ebp-0x20] */
    II(0x100e9ebb, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100e9ebe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e9ec1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1c));   /* mov edx, [ebp-0x1c] */
    II(0x100e9ec4, 0x3)   sub(edx, memd_a32(ds, eax + 0x4));    /* sub edx, [eax+0x4] */
    II(0x100e9ec7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100e9ecb, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100e9ece, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100e9ed1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100e9ed4, 0x2)   sub(eax, memd_a32(ds, ebx));          /* sub eax, [ebx] */
    II(0x100e9ed6, 0x3)   add(eax, memd_a32(ss, ebp - 0x34));   /* add eax, [ebp-0x34] */
    II(0x100e9ed9, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e9edb, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100e9ede, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100e9ee2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9ee3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100e9ee6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9ee7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e9eeb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9eec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100e9ef0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9ef1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100e9ef5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9ef6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e9ef9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9efa, 0x5)   calld(/* sys */ 0x1016abbc, 0x80cbd); /* call 0x1016abbc */
    II(0x100e9eff, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100e9f02, 0x5)   calld(0x100d531c, -0x14beb);          /* call 0x100d531c */
    II(0x100e9f07, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e9f0c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f0d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e9f0f, 0x3)   mov(al, memb_a32(ss, ebp + 0x18));    /* mov al, [ebp+0x18] */
    II(0x100e9f12, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f13, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100e9f16, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f17, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100e9f1b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f1c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100e9f20, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f21, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e9f23, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f24, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100e9f26, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100e9f29, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100e9f2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100e9f30, 0x5)   calld(0x100e9ae5, -0x450);            /* call 0x100e9ae5 */
    II(0x100e9f35, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e9f39, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e9f3d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f3e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100e9f42, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f43, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100e9f47, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f48, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100e9f4c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100e9f50, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e9f51, 0x5)   calld(/* sys */ 0x1016abbc, 0x80c66); /* call 0x1016abbc */
    II(0x100e9f56, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100e9f59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100e9f5c, 0x5)   calld(sys_free, 0x81160);             /* call 0x1016b0c1 */
l_0x100e9f61:
    II(0x100e9f61, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e9f63, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e9f64, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e9f65, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e9f66, 0x3)   retd(0xc);                            /* ret 0xc */
FUNC_END

