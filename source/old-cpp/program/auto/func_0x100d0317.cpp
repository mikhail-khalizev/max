FUNC_BEGIN(0x100d0317, 0xcf1afd2f7a87330f, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0x31, 0x5a, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2c, 0xc1, 0xf8, 0x10, 0x83, 0xc0, 0x2, 0x3b, 0x45, 0xfc, 0x7f, 0x1c, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x2c, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x83, 0xc2, 0x2, 0x1, 0xd0, 0x3b, 0x45, 0xfc, 0x7f, 0x5, 0xe9, 0x7f, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x3, 0x50, 0x24, 0x89, 0xd0, 0x83, 0xe8, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x2b, 0x50, 0x2e, 0x89, 0x55, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1e, 0xe8, 0xdc, 0xaf, 0xfb, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7f, 0x9, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x71, 0x2, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x26, 0x75, 0xf, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x63, 0x2, 0, 0, 0xeb, 0x26, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x26, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x50, 0x40, 0x8b, 0x45, 0xec, 0xff, 0x52, 0x10, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0x3b, 0x2, 0, 0, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x27, 0x2, 0, 0, 0x81, 0x7d, 0xfc, 0x48, 0x1, 0, 0, 0x75, 0x57, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x24, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x41, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x48, 0x26, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x50, 0x24, 0x7d, 0xe, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x24, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x40, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x10, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0xdb, 0x1, 0, 0, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0xc7, 0x1, 0, 0, 0x81, 0x7d, 0xfc, 0x50, 0x1, 0, 0, 0xf, 0x85, 0x82, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1e, 0xe8, 0xb, 0xaf, 0xfb, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x24, 0xc1, 0xf8, 0x10, 0x4a, 0x39, 0xd0, 0x7d, 0x5d, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x22, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x24, 0xc1, 0xf8, 0x10, 0x4a, 0x39, 0xd0, 0x7e, 0x18, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x26, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x42, 0x28, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x42, 0x66, 0x89, 0x50, 0x24, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x50, 0x40, 0x8b, 0x45, 0xe4, 0xff, 0x52, 0x10, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0x4c, 0x1, 0, 0, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x38, 0x1, 0, 0, 0x81, 0x7d, 0xfc, 0x51, 0x1, 0, 0, 0x74, 0x13, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2c, 0xc1, 0xf8, 0x10, 0x40, 0x3b, 0x45, 0xfc, 0xf, 0x85, 0x7c, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x28, 0x89, 0x45, 0xe0, 0xff, 0x4d, 0xe0, 0x66, 0x83, 0x7d, 0xe0, 0xff, 0x74, 0x5f, 0xe8, 0xeb, 0x7d, 0x7, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x24, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x22, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1e, 0xe8, 0x36, 0xae, 0xfb, 0xff, 0x98, 0x39, 0xc2, 0x7e, 0x9, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x48, 0x24, 0xeb, 0x23, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x8b, 0x50, 0x40, 0x8b, 0x45, 0xd8, 0xff, 0x52, 0x10, 0xe8, 0x9d, 0x7d, 0x7, 0, 0x2b, 0x45, 0xdc, 0x3d, 0x19, 0x61, 0, 0, 0x72, 0xf1, 0xeb, 0x97, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0xa0, 0, 0, 0, 0x81, 0x7d, 0xfc, 0x49, 0x1, 0, 0, 0x74, 0xe, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2c, 0xc1, 0xf8, 0x10, 0x3b, 0x45, 0xfc, 0x75, 0x58, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x28, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x24, 0, 0x74, 0xa, 0xff, 0x4d, 0xd4, 0x66, 0x83, 0x7d, 0xd4, 0xff, 0x75, 0x2, 0xeb, 0x32, 0xe8, 0x4c, 0x7d, 0x7, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x48, 0x24, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x8b, 0x50, 0x40, 0x8b, 0x45, 0xcc, 0xff, 0x52, 0x10, 0xe8, 0x2b, 0x7d, 0x7, 0, 0x2b, 0x45, 0xd0, 0x3d, 0x19, 0x61, 0, 0, 0x72, 0xf1, 0xeb, 0xb8, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x31, 0x81, 0x7d, 0xfc, 0, 0x70, 0, 0, 0x7c, 0x24, 0x81, 0x45, 0xfc, 0, 0x90, 0xff, 0xff, 0x83, 0x7d, 0xfc, 0, 0x74, 0x6, 0x83, 0x7d, 0xfc, 0x1, 0x75, 0x11, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x38, 0xe8, 0xbc, 0xf5, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d0317, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x100d031c, 0x5)   calld(sys_check_available_stack_size, 0x95a31); /* call 0x10165d52 */
    II(0x100d0321, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d0322, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d0323, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d0324, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d0325, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d0326, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d0328, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x100d032e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d0331, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100d0334, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0337, 0x3)   mov(eax, memd_a32(ds, eax + 0x2c));   /* mov eax, [eax+0x2c] */
    II(0x100d033a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d033d, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100d0340, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100d0343, 0x2)   jgd(0x100d0361, 0x1c);                /* jg 0x100d0361 */
    II(0x100d0345, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0348, 0x3)   mov(edx, memd_a32(ds, eax + 0x2c));   /* mov edx, [eax+0x2c] */
    II(0x100d034b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d034e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0351, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x100d0354, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0357, 0x3)   add(edx, 0x2);                        /* add edx, 0x2 */
    II(0x100d035a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d035c, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100d035f, 0x2)   jgd(0x100d0366, 0x5);                 /* jg 0x100d0366 */
l_0x100d0361:
    II(0x100d0361, 0x5)   jmpd(0x100d03e5, 0x7f);               /* jmp 0x100d03e5 */
l_0x100d0366:
    II(0x100d0366, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0369, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d036c, 0x4)   add(dx, memw_a32(ds, eax + 0x24));    /* add dx, [eax+0x24] */
    II(0x100d0370, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100d0372, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x100d0375, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d0377, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d037a, 0x4)   sub(dx, memw_a32(ds, eax + 0x2e));    /* sub dx, [eax+0x2e] */
    II(0x100d037e, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x100d0381, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0384, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d0387, 0x5)   calld(my_2_get_count, -0x45024);      /* call 0x1008b368 */
    II(0x100d038c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100d0390, 0x2)   jgd(0x100d039b, 0x9);                 /* jg 0x100d039b */
    II(0x100d0392, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d0396, 0x5)   jmpd(0x100d060c, 0x271);              /* jmp 0x100d060c */
l_0x100d039b:
    II(0x100d039b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d039e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d03a1, 0x4)   cmp(ax, memw_a32(ds, edx + 0x26));    /* cmp ax, [edx+0x26] */
    II(0x100d03a5, 0x2)   jnzd(0x100d03b6, 0xf);                /* jnz 0x100d03b6 */
    II(0x100d03a7, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d03ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d03af, 0x5)   calld(0x100d0617, 0x263);             /* call 0x100d0617 */
    II(0x100d03b4, 0x2)   jmpd(0x100d03dc, 0x26);               /* jmp 0x100d03dc */
l_0x100d03b6:
    II(0x100d03b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d03b9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d03bc, 0x4)   mov(memw_a32(ds, edx + 0x26), ax);    /* mov [edx+0x26], ax */
    II(0x100d03c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d03c3, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100d03c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d03c9, 0x3)   mov(edx, memd_a32(ds, eax + 0x40));   /* mov edx, [eax+0x40] */
//    II(0x100d03cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d03cf, 0x3)   calld_abs(memd_a32(ds, edx + 0x10));  /* call dword near [edx+0x10] */
    II(0x100d03d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d03d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d03d7, 0x5)   calld(0x100d0617, 0x23b);             /* call 0x100d0617 */
l_0x100d03dc:
    II(0x100d03dc, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d03e0, 0x5)   jmpd(0x100d060c, 0x227);              /* jmp 0x100d060c */
l_0x100d03e5:
    II(0x100d03e5, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x148);  /* cmp dword [ebp-0x4], 0x148 */
    II(0x100d03ec, 0x2)   jnzd(0x100d0445, 0x57);               /* jnz 0x100d0445 */
    II(0x100d03ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d03f1, 0x3)   mov(eax, memd_a32(ds, eax + 0x24));   /* mov eax, [eax+0x24] */
    II(0x100d03f4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d03f7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d03f9, 0x2)   jled(0x100d043c, 0x41);               /* jle 0x100d043c */
    II(0x100d03fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d03fe, 0x4)   dec(memw_a32(ds, eax + 0x26));        /* dec word [eax+0x26] */
    II(0x100d0402, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0405, 0x4)   mov(dx, memw_a32(ds, eax + 0x26));    /* mov dx, [eax+0x26] */
//    II(0x100d0409, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d040c, 0x4)   cmp(dx, memw_a32(ds, eax + 0x24));    /* cmp dx, [eax+0x24] */
    II(0x100d0410, 0x2)   jged(0x100d0420, 0xe);                /* jge 0x100d0420 */
    II(0x100d0412, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0415, 0x4)   mov(dx, memw_a32(ds, eax + 0x26));    /* mov dx, [eax+0x26] */
//    II(0x100d0419, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d041c, 0x4)   mov(memw_a32(ds, eax + 0x24), dx);    /* mov [eax+0x24], dx */
l_0x100d0420:
    II(0x100d0420, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0423, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100d0426, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d0429, 0x3)   mov(edx, memd_a32(ds, eax + 0x40));   /* mov edx, [eax+0x40] */
//    II(0x100d042c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d042f, 0x3)   calld_abs(memd_a32(ds, edx + 0x10));  /* call dword near [edx+0x10] */
    II(0x100d0432, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d0434, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0437, 0x5)   calld(0x100d0617, 0x1db);             /* call 0x100d0617 */
l_0x100d043c:
    II(0x100d043c, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d0440, 0x5)   jmpd(0x100d060c, 0x1c7);              /* jmp 0x100d060c */
l_0x100d0445:
    II(0x100d0445, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x150);  /* cmp dword [ebp-0x4], 0x150 */
    II(0x100d044c, 0x6)   jnzd(0x100d04d4, 0x82);               /* jnz dword 0x100d04d4 */
    II(0x100d0452, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0455, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d0458, 0x5)   calld(my_2_get_count, -0x450f5);      /* call 0x1008b368 */
    II(0x100d045d, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100d0460, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0463, 0x3)   mov(eax, memd_a32(ds, eax + 0x24));   /* mov eax, [eax+0x24] */
    II(0x100d0466, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0469, 0x1)   dec(edx);                             /* dec edx */
    II(0x100d046a, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100d046c, 0x2)   jged(0x100d04cb, 0x5d);               /* jge 0x100d04cb */
    II(0x100d046e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0471, 0x4)   inc(memw_a32(ds, eax + 0x26));        /* inc word [eax+0x26] */
    II(0x100d0475, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0478, 0x3)   mov(edx, memd_a32(ds, eax + 0x22));   /* mov edx, [eax+0x22] */
    II(0x100d047b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d047e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0481, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x100d0484, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0487, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d0489, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d048c, 0x3)   mov(eax, memd_a32(ds, eax + 0x24));   /* mov eax, [eax+0x24] */
    II(0x100d048f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0492, 0x1)   dec(edx);                             /* dec edx */
    II(0x100d0493, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100d0495, 0x2)   jled(0x100d04af, 0x18);               /* jle 0x100d04af */
    II(0x100d0497, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d049a, 0x4)   mov(ax, memw_a32(ds, eax + 0x26));    /* mov ax, [eax+0x26] */
    II(0x100d049e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100d04a1, 0x4)   sub(ax, memw_a32(ds, edx + 0x28));    /* sub ax, [edx+0x28] */
    II(0x100d04a5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d04a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d04aa, 0x1)   inc(edx);                             /* inc edx */
    II(0x100d04ab, 0x4)   mov(memw_a32(ds, eax + 0x24), dx);    /* mov [eax+0x24], dx */
l_0x100d04af:
    II(0x100d04af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d04b2, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100d04b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d04b8, 0x3)   mov(edx, memd_a32(ds, eax + 0x40));   /* mov edx, [eax+0x40] */
//    II(0x100d04bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d04be, 0x3)   calld_abs(memd_a32(ds, edx + 0x10));  /* call dword near [edx+0x10] */
    II(0x100d04c1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d04c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d04c6, 0x5)   calld(0x100d0617, 0x14c);             /* call 0x100d0617 */
l_0x100d04cb:
    II(0x100d04cb, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d04cf, 0x5)   jmpd(0x100d060c, 0x138);              /* jmp 0x100d060c */
l_0x100d04d4:
    II(0x100d04d4, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x151);  /* cmp dword [ebp-0x4], 0x151 */
    II(0x100d04db, 0x2)   jzd(0x100d04f0, 0x13);                /* jz 0x100d04f0 */
    II(0x100d04dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d04e0, 0x3)   mov(eax, memd_a32(ds, eax + 0x2c));   /* mov eax, [eax+0x2c] */
    II(0x100d04e3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d04e6, 0x1)   inc(eax);                             /* inc eax */
    II(0x100d04e7, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100d04ea, 0x6)   jnzd(0x100d056c, 0x7c);               /* jnz dword 0x100d056c */
l_0x100d04f0:
    II(0x100d04f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d04f3, 0x4)   mov(ax, memw_a32(ds, eax + 0x28));    /* mov ax, [eax+0x28] */
    II(0x100d04f7, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100d04fa:
    II(0x100d04fa, 0x3)   dec(memd_a32(ss, ebp - 0x20));        /* dec dword [ebp-0x20] */
    II(0x100d04fd, 0x5)   cmp(memw_a32(ss, ebp - 0x20), -0x1 /* 0xff */); /* cmp word [ebp-0x20], 0xff */
    II(0x100d0502, 0x2)   jzd(0x100d0563, 0x5f);                /* jz 0x100d0563 */
    II(0x100d0504, 0x5)   calld(0x101482f4, 0x77deb);           /* call 0x101482f4 */
    II(0x100d0509, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100d050c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d050f, 0x4)   inc(memw_a32(ds, eax + 0x24));        /* inc word [eax+0x24] */
    II(0x100d0513, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0516, 0x3)   mov(edx, memd_a32(ds, eax + 0x22));   /* mov edx, [eax+0x22] */
    II(0x100d0519, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d051c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d051f, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x100d0522, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0525, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d0527, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d052a, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d052d, 0x5)   calld(my_2_get_count, -0x451ca);      /* call 0x1008b368 */
    II(0x100d0532, 0x1)   cwde();                               /* cwde */
    II(0x100d0533, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d0535, 0x2)   jled(0x100d0540, 0x9);                /* jle 0x100d0540 */
    II(0x100d0537, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d053a, 0x4)   dec(memw_a32(ds, eax + 0x24));        /* dec word [eax+0x24] */
    II(0x100d053e, 0x2)   jmpd(0x100d0563, 0x23);               /* jmp 0x100d0563 */
l_0x100d0540:
    II(0x100d0540, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0543, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100d0546, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100d0549, 0x3)   mov(edx, memd_a32(ds, eax + 0x40));   /* mov edx, [eax+0x40] */
//    II(0x100d054c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100d054f, 0x3)   calld_abs(memd_a32(ds, edx + 0x10));  /* call dword near [edx+0x10] */
l_0x100d0552:
    II(0x100d0552, 0x5)   calld(0x101482f4, 0x77d9d);           /* call 0x101482f4 */
    II(0x100d0557, 0x3)   sub(eax, memd_a32(ss, ebp - 0x24));   /* sub eax, [ebp-0x24] */
    II(0x100d055a, 0x5)   cmp(eax, 0x6119);                     /* cmp eax, 0x6119 */
    II(0x100d055f, 0x2)   jbd(0x100d0552, -0xf);                /* jb 0x100d0552 */
    II(0x100d0561, 0x2)   jmpd(0x100d04fa, -0x69);              /* jmp 0x100d04fa */
l_0x100d0563:
    II(0x100d0563, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d0567, 0x5)   jmpd(0x100d060c, 0xa0);               /* jmp 0x100d060c */
l_0x100d056c:
    II(0x100d056c, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x149);  /* cmp dword [ebp-0x4], 0x149 */
    II(0x100d0573, 0x2)   jzd(0x100d0583, 0xe);                 /* jz 0x100d0583 */
    II(0x100d0575, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0578, 0x3)   mov(eax, memd_a32(ds, eax + 0x2c));   /* mov eax, [eax+0x2c] */
    II(0x100d057b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d057e, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100d0581, 0x2)   jnzd(0x100d05db, 0x58);               /* jnz 0x100d05db */
l_0x100d0583:
    II(0x100d0583, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0586, 0x4)   mov(ax, memw_a32(ds, eax + 0x28));    /* mov ax, [eax+0x28] */
    II(0x100d058a, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100d058d:
    II(0x100d058d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0590, 0x5)   cmp(memw_a32(ds, eax + 0x24), 0);     /* cmp word [eax+0x24], 0x0 */
    II(0x100d0595, 0x2)   jzd(0x100d05a1, 0xa);                 /* jz 0x100d05a1 */
    II(0x100d0597, 0x3)   dec(memd_a32(ss, ebp - 0x2c));        /* dec dword [ebp-0x2c] */
    II(0x100d059a, 0x5)   cmp(memw_a32(ss, ebp - 0x2c), -0x1 /* 0xff */); /* cmp word [ebp-0x2c], 0xff */
    II(0x100d059f, 0x2)   jnzd(0x100d05a3, 0x2);                /* jnz 0x100d05a3 */
l_0x100d05a1:
    II(0x100d05a1, 0x2)   jmpd(0x100d05d5, 0x32);               /* jmp 0x100d05d5 */
l_0x100d05a3:
    II(0x100d05a3, 0x5)   calld(0x101482f4, 0x77d4c);           /* call 0x101482f4 */
    II(0x100d05a8, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100d05ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d05ae, 0x4)   dec(memw_a32(ds, eax + 0x24));        /* dec word [eax+0x24] */
    II(0x100d05b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d05b5, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x100d05b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100d05bb, 0x3)   mov(edx, memd_a32(ds, eax + 0x40));   /* mov edx, [eax+0x40] */
//    II(0x100d05be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100d05c1, 0x3)   calld_abs(memd_a32(ds, edx + 0x10));  /* call dword near [edx+0x10] */
l_0x100d05c4:
    II(0x100d05c4, 0x5)   calld(0x101482f4, 0x77d2b);           /* call 0x101482f4 */
    II(0x100d05c9, 0x3)   sub(eax, memd_a32(ss, ebp - 0x30));   /* sub eax, [ebp-0x30] */
    II(0x100d05cc, 0x5)   cmp(eax, 0x6119);                     /* cmp eax, 0x6119 */
    II(0x100d05d1, 0x2)   jbd(0x100d05c4, -0xf);                /* jb 0x100d05c4 */
    II(0x100d05d3, 0x2)   jmpd(0x100d058d, -0x48);              /* jmp 0x100d058d */
l_0x100d05d5:
    II(0x100d05d5, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d05d9, 0x2)   jmpd(0x100d060c, 0x31);               /* jmp 0x100d060c */
l_0x100d05db:
    II(0x100d05db, 0x7)   cmp(memd_a32(ss, ebp - 0x4), 0x7000); /* cmp dword [ebp-0x4], 0x7000 */
    II(0x100d05e2, 0x2)   jld(0x100d0608, 0x24);                /* jl 0x100d0608 */
    II(0x100d05e4, 0x7)   add(memd_a32(ss, ebp - 0x4), 0xffff9000); /* add dword [ebp-0x4], 0xffff9000 */
    II(0x100d05eb, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100d05ef, 0x2)   jzd(0x100d05f7, 0x6);                 /* jz 0x100d05f7 */
    II(0x100d05f1, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0x1);    /* cmp dword [ebp-0x4], 0x1 */
    II(0x100d05f5, 0x2)   jnzd(0x100d0608, 0x11);               /* jnz 0x100d0608 */
l_0x100d05f7:
    II(0x100d05f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d05fa, 0x3)   mov(eax, memd_a32(ds, eax + 0x38));   /* mov eax, [eax+0x38] */
    II(0x100d05fd, 0x5)   calld(0x100cfbbe, -0xa44);            /* call 0x100cfbbe */
    II(0x100d0602, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d0606, 0x2)   jmpd(0x100d060c, 0x4);                /* jmp 0x100d060c */
l_0x100d0608:
    II(0x100d0608, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
l_0x100d060c:
    II(0x100d060c, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100d060f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d0611, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d0612, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d0613, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d0614, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d0615, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d0616, 0x1)   retd();                               /* ret */
FUNC_END

