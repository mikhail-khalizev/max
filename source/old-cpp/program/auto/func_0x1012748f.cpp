FUNC_BEGIN(0x1012748f, 0x4b9f0000149ea61c, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xb9, 0xe8, 0x3, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf4, 0x88, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0xba, 0x4, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x8b, 0x80, 0x3d, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x18, 0xe8, 0x37, 0x36, 0xfa, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc6, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x4, 0xc6, 0x5, 0xc9, 0x59, 0x1c, 0x10, 0, 0x80, 0x7d, 0xfc, 0, 0x74, 0x23, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x44, 0xb4, 0x1b, 0x10, 0xb8, 0x2b, 0x82, 0x1a, 0x10, 0x50, 0xb8, 0x74, 0x5e, 0x1c, 0x10, 0x50, 0xe8, 0, 0xea, 0x3, 0, 0x83, 0xc4, 0xc, 0xeb, 0x68, 0x80, 0x3d, 0x84, 0x39, 0x1c, 0x10, 0, 0xf, 0x85, 0xd3, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x44, 0xb4, 0x1b, 0x10, 0xb8, 0x58, 0x82, 0x1a, 0x10, 0x50, 0xb8, 0x74, 0x5e, 0x1c, 0x10, 0x50, 0xe8, 0xd0, 0xe9, 0x3, 0, 0x83, 0xc4, 0xc, 0xc7, 0x45, 0xf0, 0x3, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x40, 0xf, 0xaf, 0x45, 0xf4, 0x5, 0x1b, 0x4, 0, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x3, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0xe8, 0x17, 0xdf, 0xfa, 0xff, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xe8, 0xf, 0xbf, 0x55, 0xec, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x7c, 0x65, 0x1, 0, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0x74, 0x24, 0xe8, 0x84, 0x34, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0xb8, 0x74, 0x5e, 0x1c, 0x10, 0xe8, 0x88, 0xe7, 0xfe, 0xff, 0xc7, 0x45, 0xf4, 0x4, 0, 0, 0, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x24, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x8, 0xff, 0x5, 0x28, 0x56, 0x1c, 0x10, 0xeb, 0x18, 0xeb, 0xd2, 0x31, 0xd2, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x20, 0x35, 0xfa, 0xff, 0xc7, 0x5, 0x24, 0x56, 0x1c, 0x10, 0, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1012748f, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x10127494, 0x5)   calld(sys_check_available_stack_size, 0x3e8b9); /* call 0x10165d52 */
    II(0x10127499, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012749a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012749b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012749c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012749d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012749f, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x101274a5, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101274a8, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x101274ab, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x101274ae, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x101274b3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101274b7, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b873d)); /* mov eax, [eax+0x101b873d] */
    II(0x101274bd, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x101274c0, 0x5)   calld(0x100caafc, -0x5c9c9);          /* call 0x100caafc */
    II(0x101274c5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101274c9, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101274cf, 0x7)   mov(memb_a32(ds, eax + 0x101ca490), 0x4); /* mov byte [eax+0x101ca490], 0x4 */
    II(0x101274d6, 0x7)   mov(memb_a32(ds, 0x101c59c9), 0);     /* mov byte [0x101c59c9], 0x0 */
    II(0x101274dd, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x101274e1, 0x2)   jzd(0x10127506, 0x23);                /* jz 0x10127506 */
    II(0x101274e3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101274e7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101274ea, 0x6)   pushd(memd_a32(ds, eax + 0x101bb444)); /* push dword [eax+0x101bb444] */
    II(0x101274f0, 0x5)   mov(eax, 0x101a822b);                 /* mov eax, 0x101a822b */ /* "%s does not respond. Terminating Connection." */
    II(0x101274f5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101274f6, 0x5)   mov(eax, 0x101c5e74);                 /* mov eax, 0x101c5e74 */
    II(0x101274fb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101274fc, 0x5)   calld(sys_sprintf, 0x3ea00);          /* call 0x10165f01 */
    II(0x10127501, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x10127504, 0x2)   jmpd(0x1012756e, 0x68);               /* jmp 0x1012756e */
l_0x10127506:
    II(0x10127506, 0x7)   cmp(memb_a32(ds, 0x101c3984), 0);     /* cmp byte [0x101c3984], 0x0 */
    II(0x1012750d, 0x6)   jnzd(0x101275e6, 0xd3);               /* jnz dword 0x101275e6 */
    II(0x10127513, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10127517, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1012751a, 0x6)   pushd(memd_a32(ds, eax + 0x101bb444)); /* push dword [eax+0x101bb444] */
    II(0x10127520, 0x5)   mov(eax, 0x101a8258);                 /* mov eax, 0x101a8258 */ /* "%s has left the game." */
    II(0x10127525, 0x1)   pushd(eax);                           /* push eax */
    II(0x10127526, 0x5)   mov(eax, 0x101c5e74);                 /* mov eax, 0x101c5e74 */
    II(0x1012752b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012752c, 0x5)   calld(sys_sprintf, 0x3e9d0);          /* call 0x10165f01 */
    II(0x10127531, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x10127534, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x3);   /* mov dword [ebp-0x10], 0x3 */
    II(0x1012753b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012753e, 0x1)   inc(eax);                             /* inc eax */
    II(0x1012753f, 0x4)   imul(eax, memd_a32(ss, ebp - 0xc));   /* imul eax, [ebp-0xc] */
    II(0x10127543, 0x5)   add(eax, 0x41b);                      /* add eax, 0x41b */
    II(0x10127548, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x1012754b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012754e, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x10127551, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10127554, 0x5)   calld(0x100d5470, -0x520e9);          /* call 0x100d5470 */
    II(0x10127559, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1012755c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x10127560, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10127564, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10127569, 0x5)   calld(0x1013daea, 0x1657c);           /* call 0x1013daea */
l_0x1012756e:
    II(0x1012756e, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x3);   /* cmp byte [0x101c391e], 0x3 */
    II(0x10127575, 0x2)   jzd(0x1012759b, 0x24);                /* jz 0x1012759b */
    II(0x10127577, 0x5)   calld(0x100caa00, -0x5cb7c);          /* call 0x100caa00 */
    II(0x1012757c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10127581, 0x1)   pushd(eax);                           /* push eax */
    II(0x10127582, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x10127587, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1012758c, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10127591, 0x5)   mov(eax, 0x101c5e74);                 /* mov eax, 0x101c5e74 */
    II(0x10127596, 0x5)   calld(0x10115d23, -0x11878);          /* call 0x10115d23 */
l_0x1012759b:
    II(0x1012759b, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x4);    /* mov dword [ebp-0xc], 0x4 */
l_0x101275a2:
    II(0x101275a2, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
    II(0x101275a5, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x101275aa, 0x2)   jzd(0x101275d0, 0x24);                /* jz 0x101275d0 */
    II(0x101275ac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101275b0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101275b6, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x101275bc, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101275c1, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x101275c4, 0x2)   jnzd(0x101275ce, 0x8);                /* jnz 0x101275ce */
    II(0x101275c6, 0x6)   inc(memd_a32(ds, 0x101c5628));        /* inc dword [0x101c5628] */
    II(0x101275cc, 0x2)   jmpd(0x101275e6, 0x18);               /* jmp 0x101275e6 */
l_0x101275ce:
    II(0x101275ce, 0x2)   jmpd(0x101275a2, -0x2e);              /* jmp 0x101275a2 */
l_0x101275d0:
    II(0x101275d0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101275d2, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x101275d7, 0x5)   calld(0x100caafc, -0x5cae0);          /* call 0x100caafc */
    II(0x101275dc, 0xa)   mov(memd_a32(ds, 0x101c5624), 0);     /* mov dword [0x101c5624], 0x0 */
l_0x101275e6:
    II(0x101275e6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101275e8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101275e9, 0x1)   popd(edi);                            /* pop edi */
    II(0x101275ea, 0x1)   popd(esi);                            /* pop esi */
    II(0x101275eb, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101275ec, 0x1)   retd();                               /* ret */
FUNC_END

