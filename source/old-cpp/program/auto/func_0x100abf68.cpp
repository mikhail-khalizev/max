FUNC_BEGIN(0x100abf68, 0x56b7ad200205ef39, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xe0, 0x9d, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x1e, 0, 0x74, 0x11, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1a, 0xe8, 0xd8, 0xed, 0x8, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x4c, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1a, 0xe8, 0x97, 0xbe, 0, 0, 0xe8, 0xde, 0xed, 0xfd, 0xff, 0xf, 0xbf, 0xd8, 0x69, 0xdb, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x37, 0x7c, 0x1, 0, 0x84, 0xc0, 0x74, 0x20, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1a, 0xe8, 0xc8, 0xbe, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6, 0xe8, 0x4b, 0xa6, 0xfc, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100abf68, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100abf6d, 0x5)   calld(sys_check_available_stack_size, 0xb9de0); /* call 0x10165d52 */
    II(0x100abf72, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100abf73, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100abf74, 0x1)   pushd(edx);                           /* push edx */
    II(0x100abf75, 0x1)   pushd(esi);                           /* push esi */
    II(0x100abf76, 0x1)   pushd(edi);                           /* push edi */
    II(0x100abf77, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100abf78, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100abf7a, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100abf80, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100abf83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100abf86, 0x4)   cmp(memb_a32(ds, eax + 0x1e), 0);     /* cmp byte [eax+0x1e], 0x0 */
    II(0x100abf8a, 0x2)   jzd(0x100abf9d, 0x11);                /* jz 0x100abf9d */
    II(0x100abf8c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100abf8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100abf91, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100abf94, 0x5)   calld(0x1013ad71, 0x8edd8);           /* call 0x1013ad71 */
    II(0x100abf99, 0x2)   test(al, al);                         /* test al, al */
    II(0x100abf9b, 0x2)   jnzd(0x100abf9f, 0x2);                /* jnz 0x100abf9f */
l_0x100abf9d:
    II(0x100abf9d, 0x2)   jmpd(0x100abfeb, 0x4c);               /* jmp 0x100abfeb */
l_0x100abf9f:
    II(0x100abf9f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100abfa2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100abfa5, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100abfa8, 0x5)   calld(0x100b7e44, 0xbe97);            /* call 0x100b7e44 */
    II(0x100abfad, 0x5)   calld(0x1008ad90, -0x21222);          /* call 0x1008ad90 */
    II(0x100abfb2, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100abfb5, 0x6)   imul(ebx, ebx, 0xc5);                 /* imul ebx, ebx, 0xc5 */
    II(0x100abfbb, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x100abfc0, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100abfc2, 0x5)   calld(0x100c3bfe, 0x17c37);           /* call 0x100c3bfe */
    II(0x100abfc7, 0x2)   test(al, al);                         /* test al, al */
    II(0x100abfc9, 0x2)   jzd(0x100abfeb, 0x20);                /* jz 0x100abfeb */
    II(0x100abfcb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100abfcd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100abfd0, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100abfd3, 0x5)   calld(0x100b7ea0, 0xbec8);            /* call 0x100b7ea0 */
    II(0x100abfd8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100abfda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100abfdd, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100abfe0, 0x5)   calld(0x10076630, -0x359b5);          /* call 0x10076630 */
    II(0x100abfe5, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100abfe9, 0x2)   jmpd(0x100abfef, 0x4);                /* jmp 0x100abfef */
l_0x100abfeb:
    II(0x100abfeb, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x100abfef:
    II(0x100abfef, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100abff2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100abff4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100abff5, 0x1)   popd(edi);                            /* pop edi */
    II(0x100abff6, 0x1)   popd(esi);                            /* pop esi */
    II(0x100abff7, 0x1)   popd(edx);                            /* pop edx */
    II(0x100abff8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100abff9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100abffa, 0x1)   retd();                               /* ret */
FUNC_END

