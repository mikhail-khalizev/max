FUNC_BEGIN(0x1011d1d5, 0xed3fcc7f846d56fa, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0x73, 0x8b, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6, 0xe8, 0x79, 0x93, 0xf5, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7e, 0x37, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6, 0xe8, 0x62, 0x93, 0xf5, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x74, 0x11, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6, 0xe8, 0x51, 0x93, 0xf5, 0xff, 0x80, 0x78, 0x3d, 0x1b, 0x75, 0x2, 0xeb, 0x11, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6, 0xe8, 0x3e, 0x93, 0xf5, 0xff, 0x80, 0x78, 0x3d, 0x1e, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x11, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6, 0xe8, 0x29, 0x93, 0xf5, 0xff, 0x80, 0x78, 0x3e, 0x2a, 0x74, 0x2, 0xeb, 0x26, 0xbb, 0xc, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6, 0xe8, 0x11, 0x93, 0xf5, 0xff, 0x8b, 0x50, 0x3a, 0xc1, 0xfa, 0x18, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6, 0xe8, 0x5c, 0x93, 0xf5, 0xff, 0xe8, 0xda, 0x5d, 0x4, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6, 0xe8, 0x4c, 0x93, 0xf5, 0xff, 0xe8, 0xf0, 0x87, 0xf5, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1011d1d5, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x1011d1da, 0x5)   calld(sys_check_available_stack_size, 0x48b73); /* call 0x10165d52 */
    II(0x1011d1df, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011d1e0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011d1e1, 0x1)   pushd(edx);                           /* push edx */
    II(0x1011d1e2, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011d1e3, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011d1e4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011d1e5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011d1e7, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x1011d1ed, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1011d1f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011d1f3, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1011d1f6, 0x5)   calld(0x10076574, -0xa6c87);          /* call 0x10076574 */
    II(0x1011d1fb, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x1011d1fe, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011d203, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011d205, 0x2)   jled(0x1011d23e, 0x37);               /* jle 0x1011d23e */
    II(0x1011d207, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011d20a, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1011d20d, 0x5)   calld(0x10076574, -0xa6c9e);          /* call 0x10076574 */
    II(0x1011d212, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x1011d216, 0x2)   jzd(0x1011d229, 0x11);                /* jz 0x1011d229 */
    II(0x1011d218, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011d21b, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1011d21e, 0x5)   calld(0x10076574, -0xa6caf);          /* call 0x10076574 */
    II(0x1011d223, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x1011d227, 0x2)   jnzd(0x1011d22b, 0x2);                /* jnz 0x1011d22b */
l_0x1011d229:
    II(0x1011d229, 0x2)   jmpd(0x1011d23c, 0x11);               /* jmp 0x1011d23c */
l_0x1011d22b:
    II(0x1011d22b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011d22e, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1011d231, 0x5)   calld(0x10076574, -0xa6cc2);          /* call 0x10076574 */
    II(0x1011d236, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x1011d23a, 0x2)   jnzd(0x1011d23e, 0x2);                /* jnz 0x1011d23e */
l_0x1011d23c:
    II(0x1011d23c, 0x2)   jmpd(0x1011d240, 0x2);                /* jmp 0x1011d240 */
l_0x1011d23e:
    II(0x1011d23e, 0x2)   jmpd(0x1011d251, 0x11);               /* jmp 0x1011d251 */
l_0x1011d240:
    II(0x1011d240, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011d243, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1011d246, 0x5)   calld(0x10076574, -0xa6cd7);          /* call 0x10076574 */
    II(0x1011d24b, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x2a);  /* cmp byte [eax+0x3e], 0x2a */
    II(0x1011d24f, 0x2)   jzd(0x1011d253, 0x2);                 /* jz 0x1011d253 */
l_0x1011d251:
    II(0x1011d251, 0x2)   jmpd(0x1011d279, 0x26);               /* jmp 0x1011d279 */
l_0x1011d253:
    II(0x1011d253, 0x5)   mov(ebx, 0xc);                        /* mov ebx, 0xc */
    II(0x1011d258, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011d25b, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1011d25e, 0x5)   calld(0x10076574, -0xa6cef);          /* call 0x10076574 */
    II(0x1011d263, 0x3)   mov(edx, memd_a32(ds, eax + 0x3a));   /* mov edx, [eax+0x3a] */
    II(0x1011d266, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x1011d269, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011d26c, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1011d26f, 0x5)   calld(0x100765d0, -0xa6ca4);          /* call 0x100765d0 */
    II(0x1011d274, 0x5)   calld(0x10163053, 0x45dda);           /* call 0x10163053 */
l_0x1011d279:
    II(0x1011d279, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011d27c, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1011d27f, 0x5)   calld(0x100765d0, -0xa6cb4);          /* call 0x100765d0 */
    II(0x1011d284, 0x5)   calld(0x10075a79, -0xa7810);          /* call 0x10075a79 */
    II(0x1011d289, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011d28b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011d28c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011d28d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011d28e, 0x1)   popd(edx);                            /* pop edx */
    II(0x1011d28f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011d290, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011d291, 0x1)   retd();                               /* ret */
FUNC_END

