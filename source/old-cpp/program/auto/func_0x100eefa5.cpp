FUNC_BEGIN(0x100eefa5, 0xe7f32fd2e8ba3c8a, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0xa3, 0x6d, 0x7, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x66, 0xa1, 0x68, 0x39, 0x1c, 0x10, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x80, 0x7d, 0xfc, 0, 0x74, 0xf, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0x29, 0xc2, 0x83, 0xfa, 0x5, 0x7d, 0x2, 0xeb, 0x10, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x3, 0xc6, 0x45, 0xdc, 0x1, 0xe9, 0xcc, 0x2, 0, 0, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xa4, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0x82, 0, 0, 0, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xd8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xd8, 0xe8, 0x45, 0xd1, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x1a, 0xf, 0xbf, 0x45, 0xd8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x2, 0xeb, 0x33, 0xf, 0xbf, 0x45, 0xd8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0xd0, 0x1, 0xd2, 0x8b, 0x45, 0xd8, 0x66, 0x89, 0x44, 0x2a, 0xd0, 0xe9, 0x49, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xf4, 0x31, 0xc0, 0xe8, 0x72, 0xdc, 0xff, 0xff, 0x88, 0x45, 0xcc, 0x80, 0x7d, 0xcc, 0x2, 0x74, 0x6, 0x80, 0x7d, 0xcc, 0x3, 0x75, 0x1e, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd0, 0xe8, 0x82, 0xf7, 0xff, 0xff, 0xc6, 0x45, 0xdc, 0x1, 0xe9, 0xd4, 0x1, 0, 0, 0x80, 0x7d, 0xcc, 0x1, 0x74, 0x32, 0xf, 0xbf, 0x45, 0xe8, 0x83, 0xf8, 0x1, 0x75, 0x9, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x1, 0x7f, 0x2, 0xeb, 0x1e, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd0, 0xe8, 0x4a, 0xf7, 0xff, 0xff, 0xc6, 0x45, 0xdc, 0x1, 0xe9, 0x9c, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x74, 0x11, 0x66, 0x83, 0x7d, 0xe4, 0, 0x75, 0x8, 0xf, 0xbf, 0x45, 0xe0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x1e, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd0, 0xe8, 0x13, 0xf7, 0xff, 0xff, 0xc6, 0x45, 0xdc, 0x1, 0xe9, 0x65, 0x1, 0, 0, 0xa1, 0x64, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x51, 0xf, 0xbf, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xf4, 0x83, 0xe8, 0xa, 0x39, 0xc2, 0x75, 0x8, 0xf, 0xbf, 0x45, 0xe0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0xc, 0xb8, 0xc4, 0x1f, 0x1a, 0x10, 0xe8, 0x60, 0x79, 0x2, 0, 0xeb, 0x27, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xf0, 0x7c, 0x1e, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd0, 0xe8, 0xbb, 0xf6, 0xff, 0xff, 0xc6, 0x45, 0xdc, 0x1, 0xe9, 0xd, 0x1, 0, 0, 0xe9, 0x69, 0, 0, 0, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0x4, 0x7d, 0x51, 0xf, 0xbf, 0x45, 0xd8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x16, 0xf, 0xbf, 0x45, 0xd8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0x3b, 0x90, 0x50, 0xa5, 0x1c, 0x10, 0x7e, 0x2, 0xeb, 0x1e, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd0, 0xe8, 0x4f, 0xf6, 0xff, 0xff, 0xc6, 0x45, 0xdc, 0x1, 0xe9, 0xa1, 0, 0, 0, 0xeb, 0xa0, 0x80, 0x7d, 0xcc, 0, 0xf, 0x85, 0x91, 0, 0, 0, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0x75, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0xd, 0xf, 0xbf, 0x45, 0xd8, 0xe8, 0x37, 0xcf, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x47, 0xa0, 0x1e, 0x39, 0x1c, 0x10, 0x88, 0x45, 0xc8, 0xa0, 0x24, 0x56, 0x1c, 0x10, 0x88, 0x45, 0xc4, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd0, 0xe8, 0xd3, 0xf5, 0xff, 0xff, 0x80, 0x7d, 0xc4, 0, 0x74, 0x6, 0xc6, 0x45, 0xdc, 0x1, 0xeb, 0x22, 0x8a, 0x45, 0xc8, 0xa2, 0x1e, 0x39, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xd8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc6, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x4, 0xe9, 0x78, 0xff, 0xff, 0xff, 0xc6, 0x45, 0xdc, 0, 0x8a, 0x45, 0xdc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100eefa5, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x100eefaa, 0x5)   calld(sys_check_available_stack_size, 0x76da3); /* call 0x10165d52 */
    II(0x100eefaf, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100eefb0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100eefb1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100eefb2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100eefb3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100eefb5, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x100eefbb, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100eefbe, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100eefc1, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100eefc4, 0x6)   mov(ax, memw_a32(ds, 0x101c3968));    /* mov ax, [0x101c3968] */
    II(0x100eefca, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100eefcd, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100eefd4, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100eefdb, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100eefe2, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100eefe9, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100eefed, 0x2)   jzd(0x100eeffe, 0xf);                 /* jz 0x100eeffe */
    II(0x100eefef, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100eeff3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100eeff7, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100eeff9, 0x3)   cmp(edx, 0x5);                        /* cmp edx, 0x5 */
    II(0x100eeffc, 0x2)   jged(0x100ef000, 0x2);                /* jge 0x100ef000 */
l_0x100eeffe:
    II(0x100eeffe, 0x2)   jmpd(0x100ef010, 0x10);               /* jmp 0x100ef010 */
l_0x100ef000:
    II(0x100ef000, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x3);   /* mov byte [0x101c391e], 0x3 */
    II(0x100ef007, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x100ef00b, 0x5)   jmpd(0x100ef2dc, 0x2cc);              /* jmp 0x100ef2dc */
l_0x100ef010:
    II(0x100ef010, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100ef017, 0x2)   jmpd(0x100ef01f, 0x6);                /* jmp 0x100ef01f */
l_0x100ef019:
    II(0x100ef019, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ef01c, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x100ef01f:
    II(0x100ef01f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef023, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ef026, 0x6)   jged(0x100ef0d0, 0xa4);               /* jge dword 0x100ef0d0 */
    II(0x100ef02c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef030, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ef036, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ef03c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ef041, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ef043, 0x6)   jzd(0x100ef0cb, 0x82);                /* jz dword 0x100ef0cb */
    II(0x100ef049, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ef04c, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
    II(0x100ef04f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef053, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ef059, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ef05f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ef064, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ef067, 0x2)   jzd(0x100ef06f, 0x6);                 /* jz 0x100ef06f */
    II(0x100ef069, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100ef06c, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
l_0x100ef06f:
    II(0x100ef06f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef073, 0x5)   calld(0x100ec1bd, -0x2ebb);           /* call 0x100ec1bd */
    II(0x100ef078, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ef07a, 0x2)   jzd(0x100ef096, 0x1a);                /* jz 0x100ef096 */
    II(0x100ef07c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef080, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ef086, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ef08c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ef091, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ef094, 0x2)   jnzd(0x100ef098, 0x2);                /* jnz 0x100ef098 */
l_0x100ef096:
    II(0x100ef096, 0x2)   jmpd(0x100ef0cb, 0x33);               /* jmp 0x100ef0cb */
l_0x100ef098:
    II(0x100ef098, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef09c, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ef0a2, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ef0a8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ef0ad, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ef0b0, 0x2)   jzd(0x100ef0b8, 0x6);                 /* jz 0x100ef0b8 */
    II(0x100ef0b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ef0b5, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100ef0b8:
    II(0x100ef0b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ef0bb, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x100ef0be, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100ef0c1, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100ef0c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ef0c6, 0x5)   mov(memw_a32(ds, edx + ebp - 0x30), ax); /* mov [edx+ebp-0x30], ax */
l_0x100ef0cb:
    II(0x100ef0cb, 0x5)   jmpd(0x100ef019, -0xb7);              /* jmp 0x100ef019 */
l_0x100ef0d0:
    II(0x100ef0d0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100ef0d4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ef0d6, 0x5)   calld(0x100ecd4d, -0x238e);           /* call 0x100ecd4d */
    II(0x100ef0db, 0x3)   mov(memb_a32(ss, ebp - 0x34), al);    /* mov [ebp-0x34], al */
    II(0x100ef0de, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0x2);   /* cmp byte [ebp-0x34], 0x2 */
    II(0x100ef0e2, 0x2)   jzd(0x100ef0ea, 0x6);                 /* jz 0x100ef0ea */
    II(0x100ef0e4, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0x3);   /* cmp byte [ebp-0x34], 0x3 */
    II(0x100ef0e8, 0x2)   jnzd(0x100ef108, 0x1e);               /* jnz 0x100ef108 */
l_0x100ef0ea:
    II(0x100ef0ea, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ef0ef, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x100ef0f3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100ef0f7, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100ef0fa, 0x5)   calld(0x100ee881, -0x87e);            /* call 0x100ee881 */
    II(0x100ef0ff, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x100ef103, 0x5)   jmpd(0x100ef2dc, 0x1d4);              /* jmp 0x100ef2dc */
l_0x100ef108:
    II(0x100ef108, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0x1);   /* cmp byte [ebp-0x34], 0x1 */
    II(0x100ef10c, 0x2)   jzd(0x100ef140, 0x32);                /* jz 0x100ef140 */
    II(0x100ef10e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100ef112, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ef115, 0x2)   jnzd(0x100ef120, 0x9);                /* jnz 0x100ef120 */
    II(0x100ef117, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100ef11b, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ef11e, 0x2)   jgd(0x100ef122, 0x2);                 /* jg 0x100ef122 */
l_0x100ef120:
    II(0x100ef120, 0x2)   jmpd(0x100ef140, 0x1e);               /* jmp 0x100ef140 */
l_0x100ef122:
    II(0x100ef122, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ef127, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x100ef12b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100ef12f, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100ef132, 0x5)   calld(0x100ee881, -0x8b6);            /* call 0x100ee881 */
    II(0x100ef137, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x100ef13b, 0x5)   jmpd(0x100ef2dc, 0x19c);              /* jmp 0x100ef2dc */
l_0x100ef140:
    II(0x100ef140, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100ef144, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ef146, 0x2)   jzd(0x100ef159, 0x11);                /* jz 0x100ef159 */
    II(0x100ef148, 0x5)   cmp(memw_a32(ss, ebp - 0x1c), 0);     /* cmp word [ebp-0x1c], 0x0 */
    II(0x100ef14d, 0x2)   jnzd(0x100ef157, 0x8);                /* jnz 0x100ef157 */
    II(0x100ef14f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100ef153, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ef155, 0x2)   jgd(0x100ef159, 0x2);                 /* jg 0x100ef159 */
l_0x100ef157:
    II(0x100ef157, 0x2)   jmpd(0x100ef177, 0x1e);               /* jmp 0x100ef177 */
l_0x100ef159:
    II(0x100ef159, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ef15e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x100ef162, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100ef166, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100ef169, 0x5)   calld(0x100ee881, -0x8ed);            /* call 0x100ee881 */
    II(0x100ef16e, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x100ef172, 0x5)   jmpd(0x100ef2dc, 0x165);              /* jmp 0x100ef2dc */
l_0x100ef177:
    II(0x100ef177, 0x5)   mov(eax, memd_a32(ds, 0x101c3964));   /* mov eax, [0x101c3964] */
    II(0x100ef17c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ef17f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ef181, 0x2)   jnzd(0x100ef1d4, 0x51);               /* jnz 0x100ef1d4 */
    II(0x100ef183, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ef187, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100ef18b, 0x3)   sub(eax, 0xa);                        /* sub eax, 0xa */
    II(0x100ef18e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ef190, 0x2)   jnzd(0x100ef19a, 0x8);                /* jnz 0x100ef19a */
    II(0x100ef192, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100ef196, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ef198, 0x2)   jgd(0x100ef19c, 0x2);                 /* jg 0x100ef19c */
l_0x100ef19a:
    II(0x100ef19a, 0x2)   jmpd(0x100ef1a8, 0xc);                /* jmp 0x100ef1a8 */
l_0x100ef19c:
    II(0x100ef19c, 0x5)   mov(eax, 0x101a1fc4);                 /* mov eax, 0x101a1fc4 */ /* "Notice: Game will end in 10 turns!" */
    II(0x100ef1a1, 0x5)   calld(0x10116b06, 0x27960);           /* call 0x10116b06 */
    II(0x100ef1a6, 0x2)   jmpd(0x100ef1cf, 0x27);               /* jmp 0x100ef1cf */
l_0x100ef1a8:
    II(0x100ef1a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ef1ab, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100ef1af, 0x2)   jld(0x100ef1cf, 0x1e);                /* jl 0x100ef1cf */
    II(0x100ef1b1, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ef1b6, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x100ef1ba, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100ef1be, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100ef1c1, 0x5)   calld(0x100ee881, -0x945);            /* call 0x100ee881 */
    II(0x100ef1c6, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x100ef1ca, 0x5)   jmpd(0x100ef2dc, 0x10d);              /* jmp 0x100ef2dc */
l_0x100ef1cf:
    II(0x100ef1cf, 0x5)   jmpd(0x100ef23d, 0x69);               /* jmp 0x100ef23d */
l_0x100ef1d4:
    II(0x100ef1d4, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100ef1db, 0x2)   jmpd(0x100ef1e3, 0x6);                /* jmp 0x100ef1e3 */
l_0x100ef1dd:
    II(0x100ef1dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ef1e0, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x100ef1e3:
    II(0x100ef1e3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef1e7, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ef1ea, 0x2)   jged(0x100ef23d, 0x51);               /* jge 0x100ef23d */
    II(0x100ef1ec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef1f0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ef1f6, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ef1fc, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ef201, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ef203, 0x2)   jzd(0x100ef21b, 0x16);                /* jz 0x100ef21b */
    II(0x100ef205, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef209, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ef20f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100ef213, 0x6)   cmp(edx, memd_a32(ds, eax + 0x101ca550)); /* cmp edx, [eax+0x101ca550] */
    II(0x100ef219, 0x2)   jled(0x100ef21d, 0x2);                /* jle 0x100ef21d */
l_0x100ef21b:
    II(0x100ef21b, 0x2)   jmpd(0x100ef23b, 0x1e);               /* jmp 0x100ef23b */
l_0x100ef21d:
    II(0x100ef21d, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ef222, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x100ef226, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100ef22a, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100ef22d, 0x5)   calld(0x100ee881, -0x9b1);            /* call 0x100ee881 */
    II(0x100ef232, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x100ef236, 0x5)   jmpd(0x100ef2dc, 0xa1);               /* jmp 0x100ef2dc */
l_0x100ef23b:
    II(0x100ef23b, 0x2)   jmpd(0x100ef1dd, -0x60);              /* jmp 0x100ef1dd */
l_0x100ef23d:
    II(0x100ef23d, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0);     /* cmp byte [ebp-0x34], 0x0 */
    II(0x100ef241, 0x6)   jnzd(0x100ef2d8, 0x91);               /* jnz dword 0x100ef2d8 */
    II(0x100ef247, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100ef24e, 0x2)   jmpd(0x100ef256, 0x6);                /* jmp 0x100ef256 */
l_0x100ef250:
    II(0x100ef250, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100ef253, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x100ef256:
    II(0x100ef256, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef25a, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100ef25d, 0x6)   jged(0x100ef2d8, 0x75);               /* jge dword 0x100ef2d8 */
    II(0x100ef263, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef267, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ef26d, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ef273, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ef278, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ef27b, 0x2)   jnzd(0x100ef28a, 0xd);                /* jnz 0x100ef28a */
    II(0x100ef27d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef281, 0x5)   calld(0x100ec1bd, -0x30c9);           /* call 0x100ec1bd */
    II(0x100ef286, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ef288, 0x2)   jzd(0x100ef28c, 0x2);                 /* jz 0x100ef28c */
l_0x100ef28a:
    II(0x100ef28a, 0x2)   jmpd(0x100ef2d3, 0x47);               /* jmp 0x100ef2d3 */
l_0x100ef28c:
    II(0x100ef28c, 0x5)   mov(al, memb_a32(ds, 0x101c391e));    /* mov al, [0x101c391e] */
    II(0x100ef291, 0x3)   mov(memb_a32(ss, ebp - 0x38), al);    /* mov [ebp-0x38], al */
    II(0x100ef294, 0x5)   mov(al, memb_a32(ds, 0x101c5624));    /* mov al, [0x101c5624] */
    II(0x100ef299, 0x3)   mov(memb_a32(ss, ebp - 0x3c), al);    /* mov [ebp-0x3c], al */
    II(0x100ef29c, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100ef29e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x100ef2a2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100ef2a6, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100ef2a9, 0x5)   calld(0x100ee881, -0xa2d);            /* call 0x100ee881 */
    II(0x100ef2ae, 0x4)   cmp(memb_a32(ss, ebp - 0x3c), 0);     /* cmp byte [ebp-0x3c], 0x0 */
    II(0x100ef2b2, 0x2)   jzd(0x100ef2ba, 0x6);                 /* jz 0x100ef2ba */
    II(0x100ef2b4, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x100ef2b8, 0x2)   jmpd(0x100ef2dc, 0x22);               /* jmp 0x100ef2dc */
l_0x100ef2ba:
    II(0x100ef2ba, 0x3)   mov(al, memb_a32(ss, ebp - 0x38));    /* mov al, [ebp-0x38] */
    II(0x100ef2bd, 0x5)   mov(memb_a32(ds, 0x101c391e), al);    /* mov [0x101c391e], al */
    II(0x100ef2c2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100ef2c6, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ef2cc, 0x7)   mov(memb_a32(ds, eax + 0x101ca490), 0x4); /* mov byte [eax+0x101ca490], 0x4 */
l_0x100ef2d3:
    II(0x100ef2d3, 0x5)   jmpd(0x100ef250, -0x88);              /* jmp 0x100ef250 */
l_0x100ef2d8:
    II(0x100ef2d8, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0);     /* mov byte [ebp-0x24], 0x0 */
l_0x100ef2dc:
    II(0x100ef2dc, 0x3)   mov(al, memb_a32(ss, ebp - 0x24));    /* mov al, [ebp-0x24] */
    II(0x100ef2df, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ef2e1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ef2e2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ef2e3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ef2e4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ef2e5, 0x1)   retd();                               /* ret */
FUNC_END

