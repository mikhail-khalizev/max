FUNC_BEGIN(0x1010e1e9, 0xbdd69367887cfe35, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x5f, 0x7b, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0xe8, 0x32, 0xa6, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x89, 0x10, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x8, 0, 0, 0, 0, 0xe8, 0x9, 0xdc, 0x5, 0, 0xe8, 0xc, 0x71, 0xfc, 0xff, 0x98, 0x50, 0xe8, 0x29, 0x71, 0xfc, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x58, 0xe, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xb8, 0xee, 0x6, 0, 0, 0xe8, 0xf9, 0xa9, 0xfd, 0xff, 0xc7, 0x45, 0xf4, 0x13, 0, 0, 0, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x37, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0xc7, 0x40, 0x14, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0xc, 0x7d, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x31, 0xdb, 0x8a, 0x5d, 0xf0, 0xf, 0xbe, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0x9, 0xf8, 0xff, 0xff, 0xeb, 0xbf, 0x8b, 0x45, 0xfc, 0xe8, 0x8a, 0xfb, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0x4, 0x66, 0xc7, 0x45, 0xf4, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xf4, 0x66, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xf4, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x39, 0xc2, 0x7d, 0x67, 0xc6, 0x45, 0xec, 0, 0xeb, 0x6, 0x8a, 0x45, 0xec, 0xfe, 0x45, 0xec, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0x83, 0xf8, 0x3, 0x7d, 0x31, 0x31, 0xd2, 0x8a, 0x55, 0xec, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xf4, 0x1, 0xd0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x14, 0xe8, 0x5, 0x6e, 0xfc, 0xff, 0x89, 0xc2, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x89, 0x54, 0x28, 0xe0, 0xeb, 0xbf, 0x8d, 0x55, 0xe0, 0xb8, 0x3, 0, 0, 0, 0xe8, 0x5c, 0xb7, 0x5, 0, 0xbb, 0x1, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0xa4, 0xfc, 0xff, 0xff, 0xeb, 0x85, 0xe8, 0x90, 0xd9, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010e1e9, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x1010e1ee, 0x5)   calld(sys_check_available_stack_size, 0x57b5f); /* call 0x10165d52 */
    II(0x1010e1f3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010e1f4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010e1f5, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010e1f6, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010e1f7, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010e1f8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010e1f9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010e1fb, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1010e201, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010e204, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010e206, 0x5)   calld(0x100e883d, -0x259ce);          /* call 0x100e883d */
    II(0x1010e20b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010e20d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e210, 0x2)   mov(memd_a32(ds, eax), edx);          /* mov [eax], edx */
    II(0x1010e212, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e215, 0x7)   mov(memd_a32(ds, eax + 0x4), 0);      /* mov dword [eax+0x4], 0x0 */
    II(0x1010e21c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e21f, 0x7)   mov(memd_a32(ds, eax + 0x8), 0);      /* mov dword [eax+0x8], 0x0 */
    II(0x1010e226, 0x5)   calld(/* sys */ 0x1016be34, 0x5dc09); /* call 0x1016be34 */
    II(0x1010e22b, 0x5)   calld(0x100d533c, -0x38ef4);          /* call 0x100d533c */
    II(0x1010e230, 0x1)   cwde();                               /* cwde */
    II(0x1010e231, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010e232, 0x5)   calld(0x100d5360, -0x38ed7);          /* call 0x100d5360 */
    II(0x1010e237, 0x1)   cwde();                               /* cwde */
    II(0x1010e238, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010e239, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010e23b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010e23c, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010e23e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e241, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010e243, 0x3)   mov(ebx, memd_a32(ds, eax + 0xe));    /* mov ebx, [eax+0xe] */
    II(0x1010e246, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1010e249, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e24c, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x1010e24e, 0x5)   mov(eax, 0x6ee);                      /* mov eax, 0x6ee */
    II(0x1010e253, 0x5)   calld(0x100e8c51, -0x25607);          /* call 0x100e8c51 */
    II(0x1010e258, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x13);   /* mov dword [ebp-0xc], 0x13 */
l_0x1010e25f:
    II(0x1010e25f, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
    II(0x1010e262, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x1010e267, 0x2)   jzd(0x1010e2a0, 0x37);                /* jz 0x1010e2a0 */
    II(0x1010e269, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010e26d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010e270, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010e273, 0x7)   mov(memd_a32(ds, eax + 0x14), 0);     /* mov dword [eax+0x14], 0x0 */
    II(0x1010e27a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010e27e, 0x3)   cmp(eax, 0xc);                        /* cmp eax, 0xc */
    II(0x1010e281, 0x2)   jged(0x1010e289, 0x6);                /* jge 0x1010e289 */
    II(0x1010e283, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x1010e287, 0x2)   jmpd(0x1010e28d, 0x4);                /* jmp 0x1010e28d */
l_0x1010e289:
    II(0x1010e289, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x1010e28d:
    II(0x1010e28d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010e28f, 0x3)   mov(bl, memb_a32(ss, ebp - 0x10));    /* mov bl, [ebp-0x10] */
    II(0x1010e292, 0x4)   movsx(edx, memb_a32(ss, ebp - 0xc));  /* movsx edx, byte [ebp-0xc] */
    II(0x1010e296, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e299, 0x5)   calld(0x1010daa7, -0x7f7);            /* call 0x1010daa7 */
    II(0x1010e29e, 0x2)   jmpd(0x1010e25f, -0x41);              /* jmp 0x1010e25f */
l_0x1010e2a0:
    II(0x1010e2a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e2a3, 0x5)   calld(0x1010de32, -0x476);            /* call 0x1010de32 */
    II(0x1010e2a8, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x4);    /* mov byte [ebp-0x8], 0x4 */
    II(0x1010e2ac, 0x6)   mov(memw_a32(ss, ebp - 0xc), 0);      /* mov word [ebp-0xc], 0x0 */
    II(0x1010e2b2, 0x2)   jmpd(0x1010e2bb, 0x7);                /* jmp 0x1010e2bb */
l_0x1010e2b4:
    II(0x1010e2b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010e2b7, 0x4)   inc(memw_a32(ss, ebp - 0xc));         /* inc word [ebp-0xc] */
l_0x1010e2bb:
    II(0x1010e2bb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1010e2bf, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010e2c1, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1010e2c4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1010e2c6, 0x2)   jged(0x1010e32f, 0x67);               /* jge 0x1010e32f */
    II(0x1010e2c8, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1010e2cc, 0x2)   jmpd(0x1010e2d4, 0x6);                /* jmp 0x1010e2d4 */
l_0x1010e2ce:
    II(0x1010e2ce, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1010e2d1, 0x3)   inc(memb_a32(ss, ebp - 0x14));        /* inc byte [ebp-0x14] */
l_0x1010e2d4:
    II(0x1010e2d4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010e2d6, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1010e2d9, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x1010e2dc, 0x2)   jged(0x1010e30f, 0x31);               /* jge 0x1010e30f */
    II(0x1010e2de, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010e2e0, 0x3)   mov(dl, memb_a32(ss, ebp - 0x14));    /* mov dl, [ebp-0x14] */
    II(0x1010e2e3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010e2e5, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1010e2e8, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1010e2eb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010e2ef, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1010e2f1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010e2f4, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010e2f7, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010e2fa, 0x5)   calld(0x100d5104, -0x391fb);          /* call 0x100d5104 */
    II(0x1010e2ff, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010e301, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010e303, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1010e306, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010e309, 0x4)   mov(memd_a32(ds, eax + ebp - 0x20), edx); /* mov [eax+ebp-0x20], edx */
    II(0x1010e30d, 0x2)   jmpd(0x1010e2ce, -0x41);              /* jmp 0x1010e2ce */
l_0x1010e30f:
    II(0x1010e30f, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x1010e312, 0x5)   mov(eax, 0x3);                        /* mov eax, 0x3 */
    II(0x1010e317, 0x5)   calld(/* sys */ 0x10169a78, 0x5b75c); /* call 0x10169a78 */
    II(0x1010e31c, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1010e321, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1010e325, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010e328, 0x5)   calld(0x1010dfd1, -0x35c);            /* call 0x1010dfd1 */
    II(0x1010e32d, 0x2)   jmpd(0x1010e2b4, -0x7b);              /* jmp 0x1010e2b4 */
l_0x1010e32f:
    II(0x1010e32f, 0x5)   calld(/* sys */ 0x1016bcc4, 0x5d990); /* call 0x1016bcc4 */
    II(0x1010e334, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010e336, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010e337, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010e338, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010e339, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010e33a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010e33b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010e33c, 0x1)   retd();                               /* ret */
FUNC_END

