FUNC_BEGIN(0x1010af4d, 0x8d12c3277e0e5a6b, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xfb, 0xad, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xf8, 0x33, 0, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0x49, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x83, 0xb8, 0x75, 0x2, 0, 0, 0, 0x74, 0x34, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0x75, 0x2, 0, 0, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0x89, 0x35, 0xfc, 0xff, 0xe8, 0xb0, 0xaf, 0x5, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0xad, 0xc7, 0x45, 0xf8, 0x6, 0, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0x49, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x83, 0xb8, 0x74, 0x3, 0, 0, 0, 0x74, 0x34, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0x74, 0x3, 0, 0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0xe8, 0x2a, 0xcd, 0xfc, 0xff, 0xe8, 0x56, 0xaf, 0x5, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0xad, 0x8b, 0x45, 0xfc, 0x83, 0xb8, 0x41, 0x3, 0, 0, 0, 0x74, 0x2d, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x41, 0x3, 0, 0, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe4, 0xe8, 0x93, 0, 0xfe, 0xff, 0xe8, 0x1b, 0xaf, 0x5, 0, 0x89, 0x45, 0xe0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010af4d, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1010af52, 0x5)   calld(sys_check_available_stack_size, 0x5adfb); /* call 0x10165d52 */
    II(0x1010af57, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010af58, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010af59, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010af5a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010af5b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010af5c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010af5d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010af5f, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1010af65, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1010af68, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x33);   /* mov dword [ebp-0x8], 0x33 */
l_0x1010af6f:
    II(0x1010af6f, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x1010af72, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x1010af77, 0x2)   jzd(0x1010afc2, 0x49);                /* jz 0x1010afc2 */
    II(0x1010af79, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010af7d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010af80, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010af83, 0x7)   cmp(memd_a32(ds, eax + 0x275), 0);    /* cmp dword [eax+0x275], 0x0 */
    II(0x1010af8a, 0x2)   jzd(0x1010afc0, 0x34);                /* jz 0x1010afc0 */
    II(0x1010af8c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010af90, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010af93, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010af96, 0x6)   mov(eax, memd_a32(ds, eax + 0x275));  /* mov eax, [eax+0x275] */
    II(0x1010af9c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1010af9f, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1010afa3, 0x2)   jzd(0x1010afb9, 0x14);                /* jz 0x1010afb9 */
    II(0x1010afa5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010afa7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010afaa, 0x5)   calld(my_dtor_d2, -0x3ca77);          /* call 0x100ce538 */
    II(0x1010afaf, 0x5)   calld(sys_delete, 0x5afb0);           /* call 0x10165f64 */
    II(0x1010afb4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010afb7, 0x2)   jmpd(0x1010afc0, 0x7);                /* jmp 0x1010afc0 */
l_0x1010afb9:
    II(0x1010afb9, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x1010afc0:
    II(0x1010afc0, 0x2)   jmpd(0x1010af6f, -0x53);              /* jmp 0x1010af6f */
l_0x1010afc2:
    II(0x1010afc2, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x6);    /* mov dword [ebp-0x8], 0x6 */
l_0x1010afc9:
    II(0x1010afc9, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x1010afcc, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x1010afd1, 0x2)   jzd(0x1010b01c, 0x49);                /* jz 0x1010b01c */
    II(0x1010afd3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010afd7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010afda, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010afdd, 0x7)   cmp(memd_a32(ds, eax + 0x374), 0);    /* cmp dword [eax+0x374], 0x0 */
    II(0x1010afe4, 0x2)   jzd(0x1010b01a, 0x34);                /* jz 0x1010b01a */
    II(0x1010afe6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010afea, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010afed, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1010aff0, 0x6)   mov(eax, memd_a32(ds, eax + 0x374));  /* mov eax, [eax+0x374] */
    II(0x1010aff6, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1010aff9, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x1010affd, 0x2)   jzd(0x1010b013, 0x14);                /* jz 0x1010b013 */
    II(0x1010afff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010b001, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1010b004, 0x5)   calld(my_dtor_d3, -0x332d6);          /* call 0x100d7d33 */
    II(0x1010b009, 0x5)   calld(sys_delete, 0x5af56);           /* call 0x10165f64 */
    II(0x1010b00e, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1010b011, 0x2)   jmpd(0x1010b01a, 0x7);                /* jmp 0x1010b01a */
l_0x1010b013:
    II(0x1010b013, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x1010b01a:
    II(0x1010b01a, 0x2)   jmpd(0x1010afc9, -0x53);              /* jmp 0x1010afc9 */
l_0x1010b01c:
    II(0x1010b01c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010b01f, 0x7)   cmp(memd_a32(ds, eax + 0x341), 0);    /* cmp dword [eax+0x341], 0x0 */
    II(0x1010b026, 0x2)   jzd(0x1010b055, 0x2d);                /* jz 0x1010b055 */
    II(0x1010b028, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010b02b, 0x6)   mov(eax, memd_a32(ds, eax + 0x341));  /* mov eax, [eax+0x341] */
    II(0x1010b031, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1010b034, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1010b038, 0x2)   jzd(0x1010b04e, 0x14);                /* jz 0x1010b04e */
    II(0x1010b03a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010b03c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1010b03f, 0x5)   calld(my_dtor_d6, -0x1ff6d);          /* call 0x100eb0d7 */
    II(0x1010b044, 0x5)   calld(sys_delete, 0x5af1b);           /* call 0x10165f64 */
    II(0x1010b049, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1010b04c, 0x2)   jmpd(0x1010b055, 0x7);                /* jmp 0x1010b055 */
l_0x1010b04e:
    II(0x1010b04e, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x1010b055:
    II(0x1010b055, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010b057, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010b058, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010b059, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010b05a, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010b05b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010b05c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010b05d, 0x1)   retd();                               /* ret */
FUNC_END

