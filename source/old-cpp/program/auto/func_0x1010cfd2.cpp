FUNC_BEGIN(0x1010cfd2, 0xd51059efe0a07c21, 0x20, ({0x68, 0x7c, 0, 0, 0, 0xe8, 0x76, 0x8d, 0x5, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0xf, 0xbf, 0x55, 0xf4, 0xbb, 0x6, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x5, 0x68, 0x7, 0, 0, 0x98, 0xe8, 0xdd, 0x71, 0x2, 0, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xf8, 0xbb, 0x6, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x5, 0x68, 0x7, 0, 0, 0x98, 0xe8, 0xbf, 0x71, 0x2, 0, 0x89, 0x45, 0xe8, 0xb8, 0x6c, 0x7, 0, 0, 0xe8, 0xb2, 0x71, 0x2, 0, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xec, 0, 0x74, 0x6, 0x83, 0x7d, 0xe8, 0, 0x75, 0x2, 0xeb, 0x6, 0x83, 0x7d, 0xe4, 0, 0x75, 0x5, 0xe9, 0xff, 0x1, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xe0, 0x66, 0x8b, 0x40, 0x4, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xe0, 0x66, 0x8b, 0x40, 0x6, 0x89, 0x45, 0xd0, 0xf, 0xbf, 0x55, 0xd4, 0xf, 0xbf, 0x45, 0xd0, 0xf, 0xaf, 0xc2, 0x8d, 0x4, 0x40, 0xe8, 0x82, 0x8f, 0x5, 0, 0x89, 0x45, 0xcc, 0x80, 0x7d, 0xfc, 0, 0x74, 0x4d, 0x6b, 0x45, 0xd4, 0x3, 0x98, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x8b, 0x55, 0xcc, 0x8b, 0x45, 0xe0, 0xe8, 0x78, 0xba, 0xfd, 0xff, 0x6b, 0x45, 0xd4, 0x3, 0x98, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xd4, 0x3, 0x55, 0xcc, 0x8b, 0x45, 0xd8, 0xe8, 0x5f, 0xba, 0xfd, 0xff, 0x6b, 0x45, 0xd4, 0x3, 0x98, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0xf, 0xbf, 0x45, 0xd4, 0x1, 0xc0, 0x8b, 0x55, 0xcc, 0x1, 0xc2, 0x8b, 0x45, 0xdc, 0xe8, 0x42, 0xba, 0xfd, 0xff, 0xeb, 0x49, 0x6b, 0x45, 0xd4, 0x3, 0x98, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xd4, 0x1, 0xd2, 0x3, 0x55, 0xcc, 0x8b, 0x45, 0xe0, 0xe8, 0x25, 0xba, 0xfd, 0xff, 0x6b, 0x45, 0xd4, 0x3, 0x98, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xd4, 0x3, 0x55, 0xcc, 0x8b, 0x45, 0xd8, 0xe8, 0xc, 0xba, 0xfd, 0xff, 0x6b, 0x45, 0xd4, 0x3, 0x98, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x8b, 0x55, 0xcc, 0x8b, 0x45, 0xdc, 0xe8, 0xf7, 0xb9, 0xfd, 0xff, 0x8b, 0x45, 0xe0, 0xf, 0xbf, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xe0, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xc0, 0xf, 0xbf, 0x45, 0xd4, 0x8b, 0x55, 0xbc, 0x1, 0xc2, 0x89, 0x55, 0xc4, 0xf, 0xbf, 0x45, 0xd0, 0x8b, 0x55, 0xc0, 0x1, 0xc2, 0x89, 0x55, 0xc8, 0x8b, 0x45, 0xf0, 0x8b, 0, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x8b, 0x55, 0xc0, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf0, 0x8b, 0, 0x8b, 0x40, 0x16, 0x1, 0xd0, 0x8b, 0x55, 0xbc, 0x1, 0xc2, 0x89, 0x55, 0xb8, 0xc7, 0x45, 0xb4, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xb4, 0xff, 0x45, 0xb4, 0xf, 0xbf, 0x45, 0xb4, 0x83, 0xf8, 0x10, 0xf, 0x8f, 0x9c, 0, 0, 0, 0xe8, 0x57, 0xb1, 0x3, 0, 0x89, 0x45, 0xb0, 0xf, 0xbf, 0x55, 0xd4, 0x1, 0xd2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x4, 0x1b, 0xc2, 0xc1, 0xf8, 0x4, 0x89, 0x45, 0xac, 0x80, 0x7d, 0xfc, 0, 0x74, 0xc, 0x8b, 0x45, 0xb4, 0xf, 0xaf, 0x45, 0xac, 0x89, 0x45, 0xac, 0xeb, 0x11, 0xb8, 0x10, 0, 0, 0, 0x2b, 0x45, 0xb4, 0x8b, 0x55, 0xac, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xac, 0x8b, 0x45, 0xf0, 0x8b, 0, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xb8, 0x50, 0xf, 0xbf, 0x45, 0xd4, 0x8d, 0x4, 0x40, 0x50, 0xf, 0xbf, 0x45, 0xd0, 0x50, 0xf, 0xbf, 0x45, 0xd4, 0x50, 0xf, 0xbf, 0x45, 0xac, 0x3, 0x45, 0xcc, 0x50, 0xe8, 0xb4, 0xd9, 0x5, 0, 0x83, 0xc4, 0x18, 0x8d, 0x55, 0xbc, 0x8b, 0x45, 0xf0, 0x8b, 0, 0x8b, 0x40, 0x12, 0xe8, 0x8d, 0xa2, 0x5, 0, 0xe8, 0x38, 0xe0, 0x5, 0, 0xe8, 0xcf, 0xb0, 0x3, 0, 0x2b, 0x45, 0xb0, 0x3d, 0x33, 0xc2, 0, 0, 0x72, 0xf1, 0xe9, 0x51, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xcc, 0xe8, 0x28, 0x8d, 0x5, 0, 0x8b, 0x45, 0xe4, 0xe8, 0x20, 0x8d, 0x5, 0, 0x8b, 0x45, 0xe8, 0xe8, 0x18, 0x8d, 0x5, 0, 0x8b, 0x45, 0xec, 0xe8, 0x10, 0x8d, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x1010cfd2, 0x5)   pushd(0x7c);                          /* push dword 0x7c */
    II(0x1010cfd7, 0x5)   calld(sys_check_available_stack_size, 0x58d76); /* call 0x10165d52 */
    II(0x1010cfdc, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010cfdd, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010cfde, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010cfdf, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010cfe1, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x1010cfe7, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010cfea, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1010cfed, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1010cff0, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x1010cff3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1010cff7, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x1010cffc, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1010cffe, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1010d001, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1010d003, 0x5)   add(eax, 0x768);                      /* add eax, 0x768 */
    II(0x1010d008, 0x1)   cwde();                               /* cwde */
    II(0x1010d009, 0x5)   calld(my_get_res_data_by_id_malloc, 0x271dd); /* call 0x101341eb */
    II(0x1010d00e, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1010d011, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1010d015, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x1010d01a, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1010d01c, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1010d01f, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1010d021, 0x5)   add(eax, 0x768);                      /* add eax, 0x768 */
    II(0x1010d026, 0x1)   cwde();                               /* cwde */
    II(0x1010d027, 0x5)   calld(my_get_res_data_by_id_malloc, 0x271bf); /* call 0x101341eb */
    II(0x1010d02c, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1010d02f, 0x5)   mov(eax, 0x76c);                      /* mov eax, 0x76c */
    II(0x1010d034, 0x5)   calld(my_get_res_data_by_id_malloc, 0x271b2); /* call 0x101341eb */
    II(0x1010d039, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1010d03c, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x1010d040, 0x2)   jzd(0x1010d048, 0x6);                 /* jz 0x1010d048 */
    II(0x1010d042, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x1010d046, 0x2)   jnzd(0x1010d04a, 0x2);                /* jnz 0x1010d04a */
l_0x1010d048:
    II(0x1010d048, 0x2)   jmpd(0x1010d050, 0x6);                /* jmp 0x1010d050 */
l_0x1010d04a:
    II(0x1010d04a, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1010d04e, 0x2)   jnzd(0x1010d055, 0x5);                /* jnz 0x1010d055 */
l_0x1010d050:
    II(0x1010d050, 0x5)   jmpd(0x1010d254, 0x1ff);              /* jmp 0x1010d254 */
l_0x1010d055:
    II(0x1010d055, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1010d058, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1010d05b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1010d05e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1010d061, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1010d064, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1010d067, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010d06a, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x1010d06e, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1010d071, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010d074, 0x4)   mov(ax, memw_a32(ds, eax + 0x6));     /* mov ax, [eax+0x6] */
    II(0x1010d078, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1010d07b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1010d07f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1010d083, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1010d086, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x1010d089, 0x5)   calld(sys_new_arr, 0x58f82);          /* call 0x10166010 */
    II(0x1010d08e, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1010d091, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1010d095, 0x2)   jzd(0x1010d0e4, 0x4d);                /* jz 0x1010d0e4 */
    II(0x1010d097, 0x4)   imul(eax, memd_a32(ss, ebp - 0x2c), 0x3); /* imul eax, [ebp-0x2c], 0x3 */
    II(0x1010d09b, 0x1)   cwde();                               /* cwde */
    II(0x1010d09c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d09d, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010d09f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010d0a1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x1010d0a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010d0a7, 0x5)   calld(0x100e8b24, -0x24588);          /* call 0x100e8b24 */
    II(0x1010d0ac, 0x4)   imul(eax, memd_a32(ss, ebp - 0x2c), 0x3); /* imul eax, [ebp-0x2c], 0x3 */
    II(0x1010d0b0, 0x1)   cwde();                               /* cwde */
    II(0x1010d0b1, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d0b2, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010d0b4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010d0b6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1010d0ba, 0x3)   add(edx, memd_a32(ss, ebp - 0x34));   /* add edx, [ebp-0x34] */
    II(0x1010d0bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010d0c0, 0x5)   calld(0x100e8b24, -0x245a1);          /* call 0x100e8b24 */
    II(0x1010d0c5, 0x4)   imul(eax, memd_a32(ss, ebp - 0x2c), 0x3); /* imul eax, [ebp-0x2c], 0x3 */
    II(0x1010d0c9, 0x1)   cwde();                               /* cwde */
    II(0x1010d0ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d0cb, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010d0cd, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010d0cf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1010d0d3, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1010d0d5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x1010d0d8, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010d0da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1010d0dd, 0x5)   calld(0x100e8b24, -0x245be);          /* call 0x100e8b24 */
    II(0x1010d0e2, 0x2)   jmpd(0x1010d12d, 0x49);               /* jmp 0x1010d12d */
l_0x1010d0e4:
    II(0x1010d0e4, 0x4)   imul(eax, memd_a32(ss, ebp - 0x2c), 0x3); /* imul eax, [ebp-0x2c], 0x3 */
    II(0x1010d0e8, 0x1)   cwde();                               /* cwde */
    II(0x1010d0e9, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d0ea, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010d0ec, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010d0ee, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1010d0f2, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1010d0f4, 0x3)   add(edx, memd_a32(ss, ebp - 0x34));   /* add edx, [ebp-0x34] */
    II(0x1010d0f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010d0fa, 0x5)   calld(0x100e8b24, -0x245db);          /* call 0x100e8b24 */
    II(0x1010d0ff, 0x4)   imul(eax, memd_a32(ss, ebp - 0x2c), 0x3); /* imul eax, [ebp-0x2c], 0x3 */
    II(0x1010d103, 0x1)   cwde();                               /* cwde */
    II(0x1010d104, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d105, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010d107, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010d109, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1010d10d, 0x3)   add(edx, memd_a32(ss, ebp - 0x34));   /* add edx, [ebp-0x34] */
    II(0x1010d110, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010d113, 0x5)   calld(0x100e8b24, -0x245f4);          /* call 0x100e8b24 */
    II(0x1010d118, 0x4)   imul(eax, memd_a32(ss, ebp - 0x2c), 0x3); /* imul eax, [ebp-0x2c], 0x3 */
    II(0x1010d11c, 0x1)   cwde();                               /* cwde */
    II(0x1010d11d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d11e, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010d120, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010d122, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x1010d125, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1010d128, 0x5)   calld(0x100e8b24, -0x24609);          /* call 0x100e8b24 */
l_0x1010d12d:
    II(0x1010d12d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010d130, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1010d133, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x1010d136, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010d139, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010d13b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010d13e, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1010d141, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1010d145, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x1010d148, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010d14a, 0x3)   mov(memd_a32(ss, ebp - 0x3c), edx);   /* mov [ebp-0x3c], edx */
    II(0x1010d14d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1010d151, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x1010d154, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010d156, 0x3)   mov(memd_a32(ss, ebp - 0x38), edx);   /* mov [ebp-0x38], edx */
    II(0x1010d159, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010d15c, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010d15e, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1010d161, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010d164, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x1010d167, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1010d16a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010d16d, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010d16f, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1010d172, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1010d174, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x1010d177, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010d179, 0x3)   mov(memd_a32(ss, ebp - 0x48), edx);   /* mov [ebp-0x48], edx */
    II(0x1010d17c, 0x7)   mov(memd_a32(ss, ebp - 0x4c), 0x1);   /* mov dword [ebp-0x4c], 0x1 */
    II(0x1010d183, 0x2)   jmpd(0x1010d18b, 0x6);                /* jmp 0x1010d18b */
l_0x1010d185:
    II(0x1010d185, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1010d188, 0x3)   inc(memd_a32(ss, ebp - 0x4c));        /* inc dword [ebp-0x4c] */
l_0x1010d18b:
    II(0x1010d18b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4c)); /* movsx eax, word [ebp-0x4c] */
    II(0x1010d18f, 0x3)   cmp(eax, 0x10);                       /* cmp eax, 0x10 */
    II(0x1010d192, 0x6)   jgd(0x1010d234, 0x9c);                /* jg dword 0x1010d234 */
    II(0x1010d198, 0x5)   calld(0x101482f4, 0x3b157);           /* call 0x101482f4 */
    II(0x1010d19d, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1010d1a0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1010d1a4, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1010d1a6, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1010d1a8, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1010d1ab, 0x3)   shl(edx, 0x4);                        /* shl edx, 0x4 */
    II(0x1010d1ae, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x1010d1b0, 0x3)   sar(eax, 0x4);                        /* sar eax, 0x4 */
    II(0x1010d1b3, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x1010d1b6, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1010d1ba, 0x2)   jzd(0x1010d1c8, 0xc);                 /* jz 0x1010d1c8 */
    II(0x1010d1bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1010d1bf, 0x4)   imul(eax, memd_a32(ss, ebp - 0x54));  /* imul eax, [ebp-0x54] */
    II(0x1010d1c3, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x1010d1c6, 0x2)   jmpd(0x1010d1d9, 0x11);               /* jmp 0x1010d1d9 */
l_0x1010d1c8:
    II(0x1010d1c8, 0x5)   mov(eax, 0x10);                       /* mov eax, 0x10 */
    II(0x1010d1cd, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4c));   /* sub eax, [ebp-0x4c] */
    II(0x1010d1d0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x54));   /* mov edx, [ebp-0x54] */
    II(0x1010d1d3, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1010d1d6, 0x3)   mov(memd_a32(ss, ebp - 0x54), edx);   /* mov [ebp-0x54], edx */
l_0x1010d1d9:
    II(0x1010d1d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010d1dc, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010d1de, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1010d1e1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010d1e4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d1e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1010d1e8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d1e9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1010d1ed, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x1010d1f0, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d1f1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1010d1f5, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d1f6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1010d1fa, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d1fb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x54)); /* movsx eax, word [ebp-0x54] */
    II(0x1010d1ff, 0x3)   add(eax, memd_a32(ss, ebp - 0x34));   /* add eax, [ebp-0x34] */
    II(0x1010d202, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d203, 0x5)   calld(/* sys */ 0x1016abbc, 0x5d9b4); /* call 0x1016abbc */
    II(0x1010d208, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x1010d20b, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1010d20e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010d211, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010d213, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1010d216, 0x5)   calld(sys_display_draw_1, 0x5a28d);   /* call 0x101674a8 */
    II(0x1010d21b, 0x5)   calld(/* sys */ 0x1016b258, 0x5e038); /* call 0x1016b258 */
l_0x1010d220:
    II(0x1010d220, 0x5)   calld(0x101482f4, 0x3b0cf);           /* call 0x101482f4 */
    II(0x1010d225, 0x3)   sub(eax, memd_a32(ss, ebp - 0x50));   /* sub eax, [ebp-0x50] */
    II(0x1010d228, 0x5)   cmp(eax, 0xc233);                     /* cmp eax, 0xc233 */
    II(0x1010d22d, 0x2)   jbd(0x1010d220, -0xf);                /* jb 0x1010d220 */
    II(0x1010d22f, 0x5)   jmpd(0x1010d185, -0xaf);              /* jmp 0x1010d185 */
l_0x1010d234:
    II(0x1010d234, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1010d237, 0x5)   calld(sys_delete, 0x58d28);           /* call 0x10165f64 */
    II(0x1010d23c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1010d23f, 0x5)   calld(sys_delete, 0x58d20);           /* call 0x10165f64 */
    II(0x1010d244, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1010d247, 0x5)   calld(sys_delete, 0x58d18);           /* call 0x10165f64 */
    II(0x1010d24c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1010d24f, 0x5)   calld(sys_delete, 0x58d10);           /* call 0x10165f64 */
l_0x1010d254:
    II(0x1010d254, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010d256, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010d257, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010d258, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010d259, 0x1)   retd();                               /* ret */
FUNC_END

