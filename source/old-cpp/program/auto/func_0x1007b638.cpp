FUNC_BEGIN(0x1007b638, 0x38932f77147589bb, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x10, 0xa7, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x56, 0xf9, 0, 0, 0x89, 0x45, 0xe8, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xe8, 0xe8, 0x88, 0xe2, 0, 0, 0x89, 0x45, 0xf0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x91, 0xf6, 0xb, 0, 0x84, 0xc0, 0xf, 0x85, 0x1, 0x2, 0, 0, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x90, 0xeb, 0, 0, 0xe8, 0xd3, 0xec, 0, 0, 0x89, 0xc3, 0x8d, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xf0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0xbf, 0x7a, 0x4, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0x83, 0xce, 0x3, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xf8, 0xd6, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0xb2, 0xed, 0, 0, 0x66, 0x3b, 0x45, 0xf8, 0xf, 0x8e, 0x7f, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0xd5, 0xec, 0, 0, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x62, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0xbd, 0xec, 0, 0, 0x66, 0x83, 0x38, 0x32, 0x75, 0x1f, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xd0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x24, 0xe9, 0, 0, 0x3c, 0x5, 0x75, 0x2, 0xeb, 0x9, 0x81, 0x4d, 0xec, 0, 0x1, 0, 0, 0xeb, 0x23, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0x7e, 0xec, 0, 0, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x25, 0xc0, 0x1, 0, 0, 0x9, 0x45, 0xec, 0xe9, 0x66, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xa6, 0xea, 0, 0, 0xe8, 0xe9, 0xeb, 0, 0, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x4, 0x83, 0x4d, 0xf0, 0x40, 0x8b, 0x45, 0xec, 0x85, 0x45, 0xf0, 0x74, 0x8, 0x8b, 0x45, 0xf0, 0x21, 0x45, 0xec, 0xeb, 0x19, 0xf7, 0x45, 0xec, 0x40, 0, 0, 0, 0x74, 0x9, 0xc7, 0x45, 0xec, 0x40, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0xcc, 0xec, 0, 0, 0x66, 0x3b, 0x45, 0xf8, 0xf, 0x8e, 0xab, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0xef, 0xeb, 0, 0, 0x66, 0x83, 0x38, 0x42, 0xf, 0x84, 0x8d, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0xd6, 0xeb, 0, 0, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x85, 0x45, 0xec, 0x75, 0x17, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0xb6, 0xeb, 0, 0, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0xeb, 0x56, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0x9f, 0xeb, 0, 0, 0x66, 0x83, 0x38, 0x32, 0x75, 0x9, 0xf7, 0x45, 0xec, 0, 0x1, 0, 0, 0x74, 0x2, 0xeb, 0x1f, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xd0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xfb, 0xe7, 0, 0, 0x3c, 0x5, 0x75, 0x2, 0xeb, 0x15, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2d, 0xe8, 0x5e, 0xeb, 0, 0, 0x66, 0xc7, 0x40, 0x2, 0, 0, 0xe9, 0x3a, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1007b638, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x1007b63d, 0x5)   calld(sys_check_available_stack_size, 0xea710); /* call 0x10165d52 */
    II(0x1007b642, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007b643, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007b644, 0x1)   pushd(edx);                           /* push edx */
    II(0x1007b645, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007b646, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007b647, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007b648, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007b64a, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x1007b650, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1007b653, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b656, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1007b659, 0x5)   calld(0x1008afb4, 0xf956);            /* call 0x1008afb4 */
    II(0x1007b65e, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1007b661, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
//    II(0x1007b668, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1007b66b, 0x5)   calld(0x100898f8, 0xe288);            /* call 0x100898f8 */
    II(0x1007b670, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007b673, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007b675, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b678, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1007b67b, 0x5)   calld(0x1013ad11, 0xbf691);           /* call 0x1013ad11 */
    II(0x1007b680, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007b682, 0x6)   jnzd(0x1007b889, 0x201);              /* jnz dword 0x1007b889 */
    II(0x1007b688, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1007b68d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b690, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1007b693, 0x5)   calld(0x1008a228, 0xeb90);            /* call 0x1008a228 */
    II(0x1007b698, 0x5)   calld(0x1008a370, 0xecd3);            /* call 0x1008a370 */
    II(0x1007b69d, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007b69f, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x1007b6a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b6a5, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007b6a8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007b6ab, 0x6)   imul(esi, eax, 0xc5);                 /* imul esi, eax, 0xc5 */
    II(0x1007b6b1, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x1007b6b6, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x1007b6b8, 0x5)   calld(0x100c317c, 0x47abf);           /* call 0x100c317c */
    II(0x1007b6bd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007b6bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b6c2, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b6c5, 0x5)   calld(0x100b854d, 0x3ce83);           /* call 0x100b854d */
    II(0x1007b6ca, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007b6cc, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1007b6cf, 0x5)   calld(0x10088dcc, 0xd6f8);            /* call 0x10088dcc */
    II(0x1007b6d4, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1007b6db, 0x2)   jmpd(0x1007b6e3, 0x6);                /* jmp 0x1007b6e3 */
l_0x1007b6dd:
    II(0x1007b6dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007b6e0, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x1007b6e3:
    II(0x1007b6e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b6e6, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b6e9, 0x5)   calld(0x1008a4a0, 0xedb2);            /* call 0x1008a4a0 */
    II(0x1007b6ee, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x1007b6f2, 0x6)   jled(0x1007b777, 0x7f);               /* jle dword 0x1007b777 */
    II(0x1007b6f8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1007b6fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b6ff, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b702, 0x5)   calld(0x1008a3dc, 0xecd5);            /* call 0x1008a3dc */
    II(0x1007b707, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1007b709, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007b70c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007b70e, 0x2)   jled(0x1007b772, 0x62);               /* jle 0x1007b772 */
    II(0x1007b710, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1007b714, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b717, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b71a, 0x5)   calld(0x1008a3dc, 0xecbd);            /* call 0x1008a3dc */
    II(0x1007b71f, 0x4)   cmp(memw_a32(ds, eax), 0x32);         /* cmp word [eax], 0x32 */
    II(0x1007b723, 0x2)   jnzd(0x1007b744, 0x1f);               /* jnz 0x1007b744 */
    II(0x1007b725, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b728, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007b72b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007b72e, 0x6)   imul(edx, eax, 0xc5);                 /* imul edx, eax, 0xc5 */
    II(0x1007b734, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x1007b739, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007b73b, 0x5)   calld(0x1008a064, 0xe924);            /* call 0x1008a064 */
    II(0x1007b740, 0x2)   cmp(al, 0x5);                         /* cmp al, 0x5 */
    II(0x1007b742, 0x2)   jnzd(0x1007b746, 0x2);                /* jnz 0x1007b746 */
l_0x1007b744:
    II(0x1007b744, 0x2)   jmpd(0x1007b74f, 0x9);                /* jmp 0x1007b74f */
l_0x1007b746:
    II(0x1007b746, 0x7)   or_(memd_a32(ss, ebp - 0x14), 0x100); /* or dword [ebp-0x14], 0x100 */
    II(0x1007b74d, 0x2)   jmpd(0x1007b772, 0x23);               /* jmp 0x1007b772 */
l_0x1007b74f:
    II(0x1007b74f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1007b753, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b756, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b759, 0x5)   calld(0x1008a3dc, 0xec7e);            /* call 0x1008a3dc */
    II(0x1007b75e, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1007b761, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1007b764, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c0)); /* mov eax, [eax+0x101c81c0] */
    II(0x1007b76a, 0x5)   and_(eax, 0x1c0);                     /* and eax, 0x1c0 */
    II(0x1007b76f, 0x3)   or_(memd_a32(ss, ebp - 0x14), eax);   /* or [ebp-0x14], eax */
l_0x1007b772:
    II(0x1007b772, 0x5)   jmpd(0x1007b6dd, -0x9a);              /* jmp 0x1007b6dd */
l_0x1007b777:
    II(0x1007b777, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b77a, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1007b77d, 0x5)   calld(0x1008a228, 0xeaa6);            /* call 0x1008a228 */
    II(0x1007b782, 0x5)   calld(0x1008a370, 0xebe9);            /* call 0x1008a370 */
    II(0x1007b787, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x1007b78b, 0x2)   jzd(0x1007b791, 0x4);                 /* jz 0x1007b791 */
    II(0x1007b78d, 0x4)   or_(memd_a32(ss, ebp - 0x10), 0x40);  /* or dword [ebp-0x10], 0x40 */
l_0x1007b791:
    II(0x1007b791, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1007b794, 0x3)   test(memd_a32(ss, ebp - 0x10), eax);  /* test [ebp-0x10], eax */
    II(0x1007b797, 0x2)   jzd(0x1007b7a1, 0x8);                 /* jz 0x1007b7a1 */
    II(0x1007b799, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007b79c, 0x3)   and_(memd_a32(ss, ebp - 0x14), eax);  /* and [ebp-0x14], eax */
    II(0x1007b79f, 0x2)   jmpd(0x1007b7ba, 0x19);               /* jmp 0x1007b7ba */
l_0x1007b7a1:
    II(0x1007b7a1, 0x7)   test(memd_a32(ss, ebp - 0x14), 0x40); /* test dword [ebp-0x14], 0x40 */
    II(0x1007b7a8, 0x2)   jzd(0x1007b7b3, 0x9);                 /* jz 0x1007b7b3 */
    II(0x1007b7aa, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x40);  /* mov dword [ebp-0x14], 0x40 */
    II(0x1007b7b1, 0x2)   jmpd(0x1007b7ba, 0x7);                /* jmp 0x1007b7ba */
l_0x1007b7b3:
    II(0x1007b7b3, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x1007b7ba:
    II(0x1007b7ba, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1007b7c1, 0x2)   jmpd(0x1007b7c9, 0x6);                /* jmp 0x1007b7c9 */
l_0x1007b7c3:
    II(0x1007b7c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007b7c6, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x1007b7c9:
    II(0x1007b7c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b7cc, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b7cf, 0x5)   calld(0x1008a4a0, 0xeccc);            /* call 0x1008a4a0 */
    II(0x1007b7d4, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x1007b7d8, 0x6)   jled(0x1007b889, 0xab);               /* jle dword 0x1007b889 */
    II(0x1007b7de, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1007b7e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b7e5, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b7e8, 0x5)   calld(0x1008a3dc, 0xebef);            /* call 0x1008a3dc */
    II(0x1007b7ed, 0x4)   cmp(memw_a32(ds, eax), 0x42);         /* cmp word [eax], 0x42 */
    II(0x1007b7f1, 0x6)   jzd(0x1007b884, 0x8d);                /* jz dword 0x1007b884 */
    II(0x1007b7f7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1007b7fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b7fe, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b801, 0x5)   calld(0x1008a3dc, 0xebd6);            /* call 0x1008a3dc */
    II(0x1007b806, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1007b809, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1007b80c, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c0)); /* mov eax, [eax+0x101c81c0] */
    II(0x1007b812, 0x3)   test(memd_a32(ss, ebp - 0x14), eax);  /* test [ebp-0x14], eax */
    II(0x1007b815, 0x2)   jnzd(0x1007b82e, 0x17);               /* jnz 0x1007b82e */
    II(0x1007b817, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1007b81b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b81e, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b821, 0x5)   calld(0x1008a3dc, 0xebb6);            /* call 0x1008a3dc */
    II(0x1007b826, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
    II(0x1007b82c, 0x2)   jmpd(0x1007b884, 0x56);               /* jmp 0x1007b884 */
l_0x1007b82e:
    II(0x1007b82e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1007b832, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b835, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b838, 0x5)   calld(0x1008a3dc, 0xeb9f);            /* call 0x1008a3dc */
    II(0x1007b83d, 0x4)   cmp(memw_a32(ds, eax), 0x32);         /* cmp word [eax], 0x32 */
    II(0x1007b841, 0x2)   jnzd(0x1007b84c, 0x9);                /* jnz 0x1007b84c */
    II(0x1007b843, 0x7)   test(memd_a32(ss, ebp - 0x14), 0x100); /* test dword [ebp-0x14], 0x100 */
    II(0x1007b84a, 0x2)   jzd(0x1007b84e, 0x2);                 /* jz 0x1007b84e */
l_0x1007b84c:
    II(0x1007b84c, 0x2)   jmpd(0x1007b86d, 0x1f);               /* jmp 0x1007b86d */
l_0x1007b84e:
    II(0x1007b84e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b851, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007b854, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007b857, 0x6)   imul(edx, eax, 0xc5);                 /* imul edx, eax, 0xc5 */
    II(0x1007b85d, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x1007b862, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007b864, 0x5)   calld(0x1008a064, 0xe7fb);            /* call 0x1008a064 */
    II(0x1007b869, 0x2)   cmp(al, 0x5);                         /* cmp al, 0x5 */
    II(0x1007b86b, 0x2)   jnzd(0x1007b86f, 0x2);                /* jnz 0x1007b86f */
l_0x1007b86d:
    II(0x1007b86d, 0x2)   jmpd(0x1007b884, 0x15);               /* jmp 0x1007b884 */
l_0x1007b86f:
    II(0x1007b86f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1007b873, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007b876, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007b879, 0x5)   calld(0x1008a3dc, 0xeb5e);            /* call 0x1008a3dc */
    II(0x1007b87e, 0x6)   mov(memw_a32(ds, eax + 0x2), 0);      /* mov word [eax+0x2], 0x0 */
l_0x1007b884:
    II(0x1007b884, 0x5)   jmpd(0x1007b7c3, -0xc6);              /* jmp 0x1007b7c3 */
l_0x1007b889:
    II(0x1007b889, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007b88b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007b88c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007b88d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007b88e, 0x1)   popd(edx);                            /* pop edx */
    II(0x1007b88f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007b890, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1007b891, 0x1)   retd();                               /* ret */
FUNC_END

