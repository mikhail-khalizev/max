FUNC_BEGIN(0x10158711, 0xa7631bde5ee5202, 0x20, ({0x68, 0xd4, 0, 0, 0, 0xe8, 0x37, 0xd6, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xa8, 0, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0xbb, 0x26, 0, 0, 0, 0xba, 0xe9, 0x6, 0, 0, 0x8d, 0x45, 0x80, 0xe8, 0x64, 0xe1, 0xf7, 0xff, 0x89, 0x45, 0x98, 0x80, 0x65, 0xf0, 0xfe, 0xba, 0x10, 0, 0, 0, 0x8d, 0x45, 0x80, 0xe8, 0xc5, 0x6b, 0xf9, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x37, 0x86, 0xfc, 0xff, 0xe8, 0xc2, 0xd9, 0xf7, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x45, 0x80, 0xe8, 0x71, 0xe3, 0xf7, 0xff, 0x8d, 0x95, 0x64, 0xff, 0xff, 0xff, 0x8d, 0x45, 0x80, 0xe8, 0x95, 0xe2, 0xf7, 0xff, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x7a, 0xd6, 0, 0, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x89, 0x45, 0xa8, 0x83, 0x7d, 0xa8, 0, 0x74, 0x28, 0xb8, 0xe, 0, 0, 0, 0x50, 0xb9, 0x59, 0, 0, 0, 0xbb, 0x5d, 0x1, 0, 0, 0xba, 0x5c, 0x1, 0, 0, 0x8b, 0x45, 0xac, 0xe8, 0x5d, 0x5c, 0xf7, 0xff, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa4, 0x89, 0x45, 0xc0, 0xeb, 0x6, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xa0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x2d, 0xd6, 0, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0x83, 0x7d, 0xb8, 0, 0x74, 0x28, 0xb8, 0x2e, 0, 0, 0, 0x50, 0xb9, 0x59, 0, 0, 0, 0xbb, 0x5f, 0x1, 0, 0, 0xba, 0x5e, 0x1, 0, 0, 0x8b, 0x45, 0xbc, 0xe8, 0x10, 0x5c, 0xf7, 0xff, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xb0, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x2c, 0x1a, 0x1, 0, 0x8d, 0x45, 0xec, 0xe8, 0xfc, 0xc9, 0xf7, 0xff, 0x50, 0x8d, 0x45, 0xe4, 0xe8, 0x1f, 0xca, 0xf7, 0xff, 0x50, 0x8d, 0x45, 0xe0, 0xe8, 0x42, 0xca, 0xf7, 0xff, 0x50, 0x8d, 0x45, 0xe8, 0xe8, 0x65, 0xca, 0xf7, 0xff, 0x50, 0xe8, 0x8b, 0xca, 0xf7, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0xa7, 0xca, 0xf7, 0xff, 0xf, 0xbf, 0xd8, 0xba, 0xb1, 0x24, 0x1b, 0x10, 0x8b, 0x45, 0xa0, 0xe8, 0x3, 0x67, 0xf7, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0xbb, 0xc9, 0xf7, 0xff, 0x50, 0x8d, 0x45, 0xdc, 0xe8, 0xde, 0xc9, 0xf7, 0xff, 0x50, 0x8d, 0x45, 0xd8, 0xe8, 0x1, 0xca, 0xf7, 0xff, 0x50, 0x8d, 0x45, 0xd4, 0xe8, 0x24, 0xca, 0xf7, 0xff, 0x50, 0xe8, 0x4a, 0xca, 0xf7, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0x66, 0xca, 0xf7, 0xff, 0xf, 0xbf, 0xd8, 0xba, 0xb5, 0x24, 0x1b, 0x10, 0x8b, 0x45, 0xb0, 0xe8, 0xc2, 0x66, 0xf7, 0xff, 0xba, 0x5, 0, 0, 0, 0x8b, 0x45, 0xa0, 0xe8, 0xe5, 0xc8, 0xf7, 0xff, 0xba, 0xd, 0, 0, 0, 0x8b, 0x45, 0xa0, 0xe8, 0xa8, 0xc8, 0xf7, 0xff, 0xba, 0xdd, 0x4, 0, 0, 0x8b, 0x45, 0xa0, 0xe8, 0xb, 0xc8, 0xf7, 0xff, 0x8b, 0x95, 0x76, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xa0, 0xe8, 0x85, 0x6f, 0xf7, 0xff, 0xba, 0x1b, 0, 0, 0, 0x8b, 0x45, 0xb0, 0xe8, 0x50, 0xc8, 0xf7, 0xff, 0xba, 0x1b, 0x70, 0, 0, 0x8b, 0x45, 0xb0, 0xe8, 0x73, 0xc8, 0xf7, 0xff, 0xba, 0xe4, 0x4, 0, 0, 0x8b, 0x45, 0xb0, 0xe8, 0xd6, 0xc7, 0xf7, 0xff, 0x8b, 0x95, 0x76, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xb0, 0xe8, 0x50, 0x6f, 0xf7, 0xff, 0x8b, 0x85, 0x76, 0xff, 0xff, 0xff, 0xe8, 0x6d, 0xeb, 0, 0, 0xc6, 0x45, 0xfc, 0, 0xc6, 0x45, 0xf4, 0, 0xc6, 0x45, 0xf8, 0, 0x80, 0x7d, 0xfc, 0, 0x75, 0x6, 0x80, 0x7d, 0xf4, 0, 0x74, 0x5, 0xe9, 0xa2, 0, 0, 0, 0xe8, 0xcf, 0x28, 0x1, 0, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x80, 0x3d, 0xd2, 0x37, 0x1c, 0x10, 0, 0x74, 0xa, 0xc7, 0x85, 0x60, 0xff, 0xff, 0xff, 0x1b, 0, 0, 0, 0x83, 0xbd, 0x60, 0xff, 0xff, 0xff, 0xd, 0x75, 0x34, 0x8b, 0x45, 0xa0, 0xe8, 0x5b, 0x72, 0xf7, 0xff, 0xe8, 0x5c, 0xc8, 0xf7, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xa0, 0xe8, 0x92, 0x71, 0xf7, 0xff, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0xaf, 0xfb, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xfc, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x2f, 0x83, 0xbd, 0x60, 0xff, 0xff, 0xff, 0x1b, 0x75, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x20, 0x81, 0xbd, 0x60, 0xff, 0xff, 0xff, 0, 0x70, 0, 0, 0x7c, 0x6, 0x80, 0x7d, 0xf8, 0, 0x74, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xb0, 0xe8, 0x4, 0x72, 0xf7, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xe8, 0xd1, 0xc6, 0xf7, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x61, 0x84, 0xfa, 0xff, 0xe9, 0x4d, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xa0, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x17, 0x31, 0xd2, 0x8b, 0x45, 0xc4, 0xe8, 0x4c, 0x5b, 0xf7, 0xff, 0xe8, 0x73, 0xd5, 0, 0, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x5c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x17, 0x31, 0xd2, 0x8b, 0x45, 0xc8, 0xe8, 0x1f, 0x5b, 0xf7, 0xff, 0xe8, 0x46, 0xd5, 0, 0, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x58, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x89, 0x45, 0x9c, 0x31, 0xd2, 0x8d, 0x45, 0x80, 0xe8, 0x57, 0xdf, 0xf7, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0x80, 0xe8, 0x4b, 0xdf, 0xf7, 0xff, 0x8b, 0x45, 0x9c, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10158711, 0x5)   pushd(0xd4);                          /* push dword 0xd4 */
    II(0x10158716, 0x5)   calld(sys_check_available_stack_size, 0xd637); /* call 0x10165d52 */
    II(0x1015871b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015871c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015871d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015871e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015871f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10158720, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10158721, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10158723, 0x6)   sub(esp, 0xa8);                       /* sub esp, 0xa8 */
    II(0x10158729, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x1015872d, 0x5)   mov(ebx, 0x26);                       /* mov ebx, 0x26 */
    II(0x10158732, 0x5)   mov(edx, 0x6e9);                      /* mov edx, 0x6e9 */
    II(0x10158737, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x1015873a, 0x5)   calld(0x100d68a3, -0x81e9c);          /* call 0x100d68a3 */
    II(0x1015873f, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x10158742, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x10158746, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x1015874b, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x1015874e, 0x5)   calld(0x100ef318, -0x6943b);          /* call 0x100ef318 */
    II(0x10158753, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10158758, 0x5)   calld(0x10120d94, -0x379c9);          /* call 0x10120d94 */
    II(0x1015875d, 0x5)   calld(0x100d6124, -0x8263e);          /* call 0x100d6124 */
    II(0x10158762, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10158764, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10158766, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x10158769, 0x5)   calld(0x100d6adf, -0x81c8f);          /* call 0x100d6adf */
    II(0x1015876e, 0x6)   lea(edx, ebp - 0x9c);                 /* lea edx, [ebp+0xffffff64] */
    II(0x10158774, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x10158777, 0x5)   calld(0x100d6a11, -0x81d6b);          /* call 0x100d6a11 */
    II(0x1015877c, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10158781, 0x5)   calld(sys_new, 0xd67a);               /* call 0x10165e00 */
    II(0x10158786, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x10158789, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x1015878c, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x1015878f, 0x4)   cmp(memd_a32(ss, ebp - 0x58), 0);     /* cmp dword [ebp-0x58], 0x0 */
    II(0x10158793, 0x2)   jzd(0x101587bd, 0x28);                /* jz 0x101587bd */
    II(0x10158795, 0x5)   mov(eax, 0xe);                        /* mov eax, 0xe */
    II(0x1015879a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015879b, 0x5)   mov(ecx, 0x59);                       /* mov ecx, 0x59 */
    II(0x101587a0, 0x5)   mov(ebx, 0x15d);                      /* mov ebx, 0x15d */
    II(0x101587a5, 0x5)   mov(edx, 0x15c);                      /* mov edx, 0x15c */
    II(0x101587aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x101587ad, 0x5)   calld(my_ctor_c17, -0x8a3a3);         /* call 0x100ce40f */
    II(0x101587b2, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
//    II(0x101587b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x101587b8, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x101587bb, 0x2)   jmpd(0x101587c3, 0x6);                /* jmp 0x101587c3 */
l_0x101587bd:
    II(0x101587bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x101587c0, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x101587c3:
    II(0x101587c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x101587c6, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x101587c9, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x101587ce, 0x5)   calld(sys_new, 0xd62d);               /* call 0x10165e00 */
    II(0x101587d3, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x101587d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x101587d9, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x101587dc, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0);     /* cmp dword [ebp-0x48], 0x0 */
    II(0x101587e0, 0x2)   jzd(0x1015880a, 0x28);                /* jz 0x1015880a */
    II(0x101587e2, 0x5)   mov(eax, 0x2e);                       /* mov eax, 0x2e */
    II(0x101587e7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101587e8, 0x5)   mov(ecx, 0x59);                       /* mov ecx, 0x59 */
    II(0x101587ed, 0x5)   mov(ebx, 0x15f);                      /* mov ebx, 0x15f */
    II(0x101587f2, 0x5)   mov(edx, 0x15e);                      /* mov edx, 0x15e */
    II(0x101587f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x101587fa, 0x5)   calld(my_ctor_c17, -0x8a3f0);         /* call 0x100ce40f */
    II(0x101587ff, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x10158802, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10158805, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10158808, 0x2)   jmpd(0x10158810, 0x6);                /* jmp 0x10158810 */
l_0x1015880a:
    II(0x1015880a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1015880d, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x10158810:
    II(0x10158810, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10158813, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x10158816, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1015881b, 0x5)   calld(/* sys */ 0x1016a24c, 0x11a2c); /* call 0x1016a24c */
    II(0x10158820, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10158823, 0x5)   calld(0x100d5224, -0x83604);          /* call 0x100d5224 */
    II(0x10158828, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158829, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015882c, 0x5)   calld(0x100d5250, -0x835e1);          /* call 0x100d5250 */
    II(0x10158831, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158832, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10158835, 0x5)   calld(0x100d527c, -0x835be);          /* call 0x100d527c */
    II(0x1015883a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015883b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1015883e, 0x5)   calld(0x100d52a8, -0x8359b);          /* call 0x100d52a8 */
    II(0x10158843, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158844, 0x5)   calld(0x100d52d4, -0x83575);          /* call 0x100d52d4 */
    II(0x10158849, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1015884c, 0x5)   calld(0x100d52f8, -0x83559);          /* call 0x100d52f8 */
    II(0x10158851, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10158854, 0x5)   mov(edx, 0x101b24b1);                 /* mov edx, 0x101b24b1 */ /* "Arm" */
    II(0x10158859, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1015885c, 0x5)   calld(0x100cef64, -0x898fd);          /* call 0x100cef64 */
    II(0x10158861, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10158864, 0x5)   calld(0x100d5224, -0x83645);          /* call 0x100d5224 */
    II(0x10158869, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015886a, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1015886d, 0x5)   calld(0x100d5250, -0x83622);          /* call 0x100d5250 */
    II(0x10158872, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158873, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10158876, 0x5)   calld(0x100d527c, -0x835ff);          /* call 0x100d527c */
    II(0x1015887b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015887c, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1015887f, 0x5)   calld(0x100d52a8, -0x835dc);          /* call 0x100d52a8 */
    II(0x10158884, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158885, 0x5)   calld(0x100d52d4, -0x835b6);          /* call 0x100d52d4 */
    II(0x1015888a, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1015888d, 0x5)   calld(0x100d52f8, -0x8359a);          /* call 0x100d52f8 */
    II(0x10158892, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10158895, 0x5)   mov(edx, 0x101b24b5);                 /* mov edx, 0x101b24b5 */ /* "Cancel" */
    II(0x1015889a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1015889d, 0x5)   calld(0x100cef64, -0x8993e);          /* call 0x100cef64 */
    II(0x101588a2, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x101588a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x101588aa, 0x5)   calld(0x100d5194, -0x8371b);          /* call 0x100d5194 */
    II(0x101588af, 0x5)   mov(edx, 0xd);                        /* mov edx, 0xd */
    II(0x101588b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x101588b7, 0x5)   calld(0x100d5164, -0x83758);          /* call 0x100d5164 */
    II(0x101588bc, 0x5)   mov(edx, 0x4dd);                      /* mov edx, 0x4dd */
    II(0x101588c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x101588c4, 0x5)   calld(0x100d50d4, -0x837f5);          /* call 0x100d50d4 */
    II(0x101588c9, 0x6)   mov(edx, memd_a32(ss, ebp - 0x8a));   /* mov edx, [ebp+0xffffff76] */
    II(0x101588cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x101588d2, 0x5)   calld(0x100cf85c, -0x8907b);          /* call 0x100cf85c */
    II(0x101588d7, 0x5)   mov(edx, 0x1b);                       /* mov edx, 0x1b */
    II(0x101588dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x101588df, 0x5)   calld(0x100d5134, -0x837b0);          /* call 0x100d5134 */
    II(0x101588e4, 0x5)   mov(edx, 0x701b);                     /* mov edx, 0x701b */
    II(0x101588e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x101588ec, 0x5)   calld(0x100d5164, -0x8378d);          /* call 0x100d5164 */
    II(0x101588f1, 0x5)   mov(edx, 0x4e4);                      /* mov edx, 0x4e4 */
    II(0x101588f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x101588f9, 0x5)   calld(0x100d50d4, -0x8382a);          /* call 0x100d50d4 */
    II(0x101588fe, 0x6)   mov(edx, memd_a32(ss, ebp - 0x8a));   /* mov edx, [ebp+0xffffff76] */
    II(0x10158904, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x10158907, 0x5)   calld(0x100cf85c, -0x890b0);          /* call 0x100cf85c */
    II(0x1015890c, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8a));   /* mov eax, [ebp+0xffffff76] */
    II(0x10158912, 0x5)   calld(sys_display_draw_0, 0xeb6d);    /* call 0x10167484 */
    II(0x10158917, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
    II(0x1015891b, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1015891f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x10158923:
    II(0x10158923, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10158927, 0x2)   jnzd(0x1015892f, 0x6);                /* jnz 0x1015892f */
    II(0x10158929, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x1015892d, 0x2)   jzd(0x10158934, 0x5);                 /* jz 0x10158934 */
l_0x1015892f:
    II(0x1015892f, 0x5)   jmpd(0x101589d6, 0xa2);               /* jmp 0x101589d6 */
l_0x10158934:
    II(0x10158934, 0x5)   calld(/* sys */ 0x1016b208, 0x128cf); /* call 0x1016b208 */
    II(0x10158939, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
    II(0x1015893f, 0x7)   cmp(memb_a32(ds, 0x101c37d2), 0);     /* cmp byte [0x101c37d2], 0x0 */
    II(0x10158946, 0x2)   jzd(0x10158952, 0xa);                 /* jz 0x10158952 */
    II(0x10158948, 0xa)   mov(memd_a32(ss, ebp - 0xa0), 0x1b);  /* mov dword [ebp+0xffffff60], 0x1b */
l_0x10158952:
    II(0x10158952, 0x7)   cmp(memd_a32(ss, ebp - 0xa0), 0xd);   /* cmp dword [ebp+0xffffff60], 0xd */
    II(0x10158959, 0x2)   jnzd(0x1015898f, 0x34);               /* jnz 0x1015898f */
    II(0x1015895b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1015895e, 0x5)   calld(0x100cfbbe, -0x88da5);          /* call 0x100cfbbe */
    II(0x10158963, 0x5)   calld(0x100d51c4, -0x837a4);          /* call 0x100d51c4 */
    II(0x10158968, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015896a, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1015896c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1015896f, 0x5)   calld(0x100cfb06, -0x88e6e);          /* call 0x100cfb06 */
    II(0x10158974, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x1015897a, 0x5)   calld(0x1015852e, -0x451);            /* call 0x1015852e */
    II(0x1015897f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10158981, 0x2)   jzd(0x10158989, 0x6);                 /* jz 0x10158989 */
    II(0x10158983, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x10158987, 0x2)   jmpd(0x1015898d, 0x4);                /* jmp 0x1015898d */
l_0x10158989:
    II(0x10158989, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x1015898d:
    II(0x1015898d, 0x2)   jmpd(0x101589be, 0x2f);               /* jmp 0x101589be */
l_0x1015898f:
    II(0x1015898f, 0x7)   cmp(memd_a32(ss, ebp - 0xa0), 0x1b);  /* cmp dword [ebp+0xffffff60], 0x1b */
    II(0x10158996, 0x2)   jnzd(0x1015899e, 0x6);                /* jnz 0x1015899e */
    II(0x10158998, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x1015899c, 0x2)   jmpd(0x101589be, 0x20);               /* jmp 0x101589be */
l_0x1015899e:
    II(0x1015899e, 0xa)   cmp(memd_a32(ss, ebp - 0xa0), 0x7000); /* cmp dword [ebp+0xffffff60], 0x7000 */
    II(0x101589a8, 0x2)   jld(0x101589b0, 0x6);                 /* jl 0x101589b0 */
    II(0x101589aa, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x101589ae, 0x2)   jzd(0x101589b2, 0x2);                 /* jz 0x101589b2 */
l_0x101589b0:
    II(0x101589b0, 0x2)   jmpd(0x101589be, 0xc);                /* jmp 0x101589be */
l_0x101589b2:
    II(0x101589b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x101589b5, 0x5)   calld(0x100cfbbe, -0x88dfc);          /* call 0x100cfbbe */
    II(0x101589ba, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x101589be:
    II(0x101589be, 0x5)   calld(0x100d5094, -0x8392f);          /* call 0x100d5094 */
    II(0x101589c3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101589c5, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x101589c7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101589cc, 0x5)   calld(0x10100e32, -0x57b9f);          /* call 0x10100e32 */
    II(0x101589d1, 0x5)   jmpd(0x10158923, -0xb3);              /* jmp 0x10158923 */
l_0x101589d6:
    II(0x101589d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x101589d9, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x101589dc, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x101589e0, 0x2)   jzd(0x101589f9, 0x17);                /* jz 0x101589f9 */
    II(0x101589e2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101589e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x101589e7, 0x5)   calld(my_dtor_d2, -0x8a4b4);          /* call 0x100ce538 */
    II(0x101589ec, 0x5)   calld(sys_delete, 0xd573);            /* call 0x10165f64 */
    II(0x101589f1, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
    II(0x101589f7, 0x2)   jmpd(0x10158a03, 0xa);                /* jmp 0x10158a03 */
l_0x101589f9:
    II(0x101589f9, 0xa)   mov(memd_a32(ss, ebp - 0xa4), 0);     /* mov dword [ebp+0xffffff5c], 0x0 */
l_0x10158a03:
    II(0x10158a03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x10158a06, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10158a09, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x10158a0d, 0x2)   jzd(0x10158a26, 0x17);                /* jz 0x10158a26 */
    II(0x10158a0f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10158a11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10158a14, 0x5)   calld(my_dtor_d2, -0x8a4e1);          /* call 0x100ce538 */
    II(0x10158a19, 0x5)   calld(sys_delete, 0xd546);            /* call 0x10165f64 */
    II(0x10158a1e, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x10158a24, 0x2)   jmpd(0x10158a30, 0xa);                /* jmp 0x10158a30 */
l_0x10158a26:
    II(0x10158a26, 0xa)   mov(memd_a32(ss, ebp - 0xa8), 0);     /* mov dword [ebp+0xffffff58], 0x0 */
l_0x10158a30:
    II(0x10158a30, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10158a32, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10158a35, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x10158a38, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10158a3a, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x10158a3d, 0x5)   calld(0x100d6999, -0x820a9);          /* call 0x100d6999 */
    II(0x10158a42, 0x2)   jmpd(0x10158a4e, 0xa);                /* jmp 0x10158a4e */
//  II(0x10158a44, 0xa)   /* Недостижимый код. */
l_0x10158a4e:
    II(0x10158a4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x10158a51, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10158a53, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10158a54, 0x1)   popd(edi);                            /* pop edi */
    II(0x10158a55, 0x1)   popd(esi);                            /* pop esi */
    II(0x10158a56, 0x1)   popd(edx);                            /* pop edx */
    II(0x10158a57, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10158a58, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10158a59, 0x1)   retd();                               /* ret */
FUNC_END

