FUNC_BEGIN(0x100884ce, 0x3e848c6764f198d9, 0x20, ({0x68, 0xb4, 0, 0, 0, 0xe8, 0x7a, 0xd8, 0xd, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x90, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xda, 0xe0, 0xfe, 0xff, 0xe8, 0xe0, 0xa9, 0x1, 0, 0x84, 0xc0, 0x75, 0x11, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x6a, 0xe0, 0xfe, 0xff, 0x80, 0x78, 0x3d, 0x1e, 0x75, 0x2, 0xeb, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x9c, 0x4, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x4e, 0xe0, 0xfe, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x3d, 0xe0, 0xfe, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0x67, 0xe5, 0xfe, 0xff, 0x8b, 0x5d, 0xfc, 0x8b, 0x5b, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc0, 0xe8, 0x4d, 0xe5, 0xfe, 0xff, 0x8d, 0x45, 0xbc, 0xe8, 0x89, 0xe5, 0xfe, 0xff, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x7, 0xc1, 0xfa, 0x10, 0x69, 0xd2, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x46, 0x1b, 0, 0, 0x89, 0x45, 0xb8, 0x31, 0xc9, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbe, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x2a, 0x9a, 0x3, 0, 0x89, 0x45, 0xb4, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0x7d, 0x2b, 0, 0, 0xc7, 0x45, 0xe4, 0xff, 0xff, 0xff, 0xff, 0xba, 0x4e, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0xf7, 0xeb, 0x2, 0, 0x98, 0x85, 0xc0, 0x7e, 0xc, 0xc7, 0x45, 0xe4, 0x4e, 0, 0, 0, 0xe9, 0x9b, 0, 0, 0, 0xba, 0x48, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0xd3, 0xeb, 0x2, 0, 0x98, 0x85, 0xc0, 0x7e, 0xc, 0xc7, 0x45, 0xe4, 0x48, 0, 0, 0, 0xe9, 0x77, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0x18, 0xba, 0x41, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x9b, 0xeb, 0x2, 0, 0x98, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xe4, 0x41, 0, 0, 0, 0xeb, 0x40, 0xba, 0x1b, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x78, 0xeb, 0x2, 0, 0x98, 0x85, 0xc0, 0x7e, 0x9, 0xc7, 0x45, 0xe4, 0x4e, 0, 0, 0, 0xeb, 0x1f, 0xba, 0x17, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x57, 0xeb, 0x2, 0, 0x98, 0x85, 0xc0, 0x7e, 0x7, 0xc7, 0x45, 0xe4, 0x48, 0, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0xb9, 0x2, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0x94, 0xe8, 0x12, 0x78, 0x9, 0, 0x89, 0x45, 0x90, 0x80, 0x65, 0xf0, 0xfe, 0x83, 0x7d, 0xb4, 0, 0x75, 0x13, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0x94, 0xe8, 0x32, 0x6, 0, 0, 0xe9, 0xe8, 0x2, 0, 0, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0xcc, 0xe8, 0x8a, 0xd7, 0xfe, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0x8c, 0xe8, 0x7d, 0xd7, 0xfe, 0xff, 0x89, 0xda, 0xe8, 0xdc, 0xd8, 0x1, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xe0, 0x31, 0xc0, 0x8b, 0x55, 0xfc, 0x8a, 0x42, 0x4d, 0x89, 0x45, 0xd8, 0xc7, 0x45, 0xdc, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x66, 0x3b, 0x45, 0xe0, 0xf, 0x8d, 0x80, 0x1, 0, 0, 0x8b, 0x45, 0xc4, 0x2b, 0x45, 0xdc, 0x66, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xc6, 0x3, 0x45, 0xdc, 0x66, 0x89, 0x45, 0xbe, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xec, 0x2, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0x4d, 0x1, 0, 0, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0xf, 0xbf, 0x45, 0xdc, 0x1, 0xc0, 0xf, 0xbf, 0x55, 0xd4, 0x39, 0xc2, 0xf, 0x8d, 0x27, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xbc, 0xe8, 0x1b, 0x2a, 0, 0, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xa4, 0xe8, 0x3a, 0xfb, 0x7, 0, 0x84, 0xc0, 0x74, 0x1d, 0xf, 0xbf, 0x45, 0xbc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xb4, 0xf, 0xbf, 0x55, 0xbe, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xd8, 0x7c, 0x5, 0xe9, 0xdb, 0, 0, 0, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0x88, 0xe8, 0x9f, 0xd6, 0xfe, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0x84, 0xe8, 0x92, 0xd6, 0xfe, 0xff, 0x89, 0xda, 0xe8, 0xf1, 0xd7, 0x1, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x42, 0x1c, 0x2b, 0x45, 0xbe, 0xf, 0xbf, 0xc8, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x42, 0x1a, 0x2b, 0x45, 0xbc, 0x98, 0x89, 0xca, 0xe8, 0x5f, 0xd7, 0x1, 0, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x1, 0xd8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xe0, 0x7d, 0x17, 0xf, 0xbf, 0x45, 0xbc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xb8, 0xf, 0xbf, 0x55, 0xbe, 0x8b, 0, 0x1, 0xd0, 0xf6, 0, 0x8, 0x74, 0x2, 0xeb, 0x19, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0x80, 0xe8, 0x1c, 0xd6, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0x94, 0xe8, 0xfa, 0x76, 0x9, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x2a, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xbe, 0xf, 0xbf, 0x5d, 0xbc, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x3c, 0x7a, 0xfe, 0xff, 0x66, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x11, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xc0, 0xe8, 0xb5, 0x2, 0, 0, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe0, 0xe9, 0xc1, 0xfe, 0xff, 0xff, 0xe9, 0xa2, 0xfe, 0xff, 0xff, 0xe9, 0x6d, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xc0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x1a, 0x75, 0xc, 0x8b, 0x45, 0xc2, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x1c, 0x74, 0x2, 0xeb, 0x13, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0x94, 0xe8, 0x30, 0x4, 0, 0, 0xe9, 0xe6, 0, 0, 0, 0x8b, 0x45, 0xc0, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x1e, 0x8b, 0x45, 0xc2, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x20, 0xb8, 0x49, 0, 0, 0, 0xe8, 0x11, 0xd5, 0xd, 0, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x78, 0xff, 0xff, 0xff, 0, 0x74, 0x3f, 0xb8, 0xbb, 0xe, 0xb, 0x10, 0x50, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0xc8, 0xe8, 0x49, 0xd5, 0xfe, 0xff, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0x31, 0xc9, 0x8b, 0x5d, 0xf8, 0x8b, 0x55, 0xfc, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0xeb, 0x38, 0x2, 0, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x70, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0x8d, 0x1c, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0xb0, 0x1b, 0, 0, 0xe8, 0x2f, 0x1d, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0xff, 0x1b, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xc7, 0xc3, 0x1, 0, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xb5, 0x3, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0x94, 0xe8, 0x5b, 0x3, 0, 0, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x9f, 0x3, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0x94, 0xe8, 0x45, 0x3, 0, 0, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100884ce, 0x5)   pushd(0xb4);                          /* push dword 0xb4 */
    II(0x100884d3, 0x5)   calld(sys_check_available_stack_size, 0xdd87a); /* call 0x10165d52 */
    II(0x100884d8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100884d9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100884da, 0x1)   pushd(esi);                           /* push esi */
    II(0x100884db, 0x1)   pushd(edi);                           /* push edi */
    II(0x100884dc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100884dd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100884df, 0x6)   sub(esp, 0x90);                       /* sub esp, 0x90 */
    II(0x100884e5, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100884e8, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100884eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100884ee, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100884f1, 0x5)   calld(0x100765d0, -0x11f26);          /* call 0x100765d0 */
    II(0x100884f6, 0x5)   calld(0x100a2edb, 0x1a9e0);           /* call 0x100a2edb */
    II(0x100884fb, 0x2)   test(al, al);                         /* test al, al */
    II(0x100884fd, 0x2)   jnzd(0x10088510, 0x11);               /* jnz 0x10088510 */
    II(0x100884ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10088502, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x10088505, 0x5)   calld(0x10076574, -0x11f96);          /* call 0x10076574 */
    II(0x1008850a, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x1008850e, 0x2)   jnzd(0x10088512, 0x2);                /* jnz 0x10088512 */
l_0x10088510:
    II(0x10088510, 0x2)   jmpd(0x1008851b, 0x9);                /* jmp 0x1008851b */
l_0x10088512:
    II(0x10088512, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x10088516, 0x5)   jmpd(0x100889b7, 0x49c);              /* jmp 0x100889b7 */
l_0x1008851b:
    II(0x1008851b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008851e, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x10088521, 0x5)   calld(0x10076574, -0x11fb2);          /* call 0x10076574 */
    II(0x10088526, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10088529, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1008852c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008852f, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x10088532, 0x5)   calld(0x10076574, -0x11fc3);          /* call 0x10076574 */
    II(0x10088537, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1008853a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1008853d, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10088540, 0x5)   calld(0x10076aac, -0x11a99);          /* call 0x10076aac */
    II(0x10088545, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x10088548, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x1a));   /* mov ebx, [ebx+0x1a] */
    II(0x1008854b, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1008854e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10088551, 0x3)   mov(edx, memd_a32(ds, edx + 0x18));   /* mov edx, [edx+0x18] */
    II(0x10088554, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10088557, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1008855a, 0x5)   calld(0x10076aac, -0x11ab3);          /* call 0x10076aac */
    II(0x1008855f, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x10088562, 0x5)   calld(my_ctor_0x101b4184, -0x11a77);  /* call 0x10076af0 */
    II(0x10088567, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1008856a, 0x3)   mov(edx, memd_a32(ds, edx + 0x7));    /* mov edx, [edx+0x7] */
    II(0x1008856d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10088570, 0x6)   imul(edx, edx, 0xc5);                 /* imul edx, edx, 0xc5 */
    II(0x10088576, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x1008857b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1008857d, 0x5)   calld(0x1008a0c8, 0x1b46);            /* call 0x1008a0c8 */
    II(0x10088582, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x10088585, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10088587, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1008858c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008858f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10088592, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10088595, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10088598, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x1008859e, 0x5)   mov(esi, 0x101c31c4);                 /* mov esi, 0x101c31c4 */
    II(0x100885a3, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100885a5, 0x5)   calld(0x100c1fd4, 0x39a2a);           /* call 0x100c1fd4 */
    II(0x100885aa, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100885ad, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100885b2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100885b5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100885b6, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100885bc, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100885bf, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100885c1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100885c3, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100885c6, 0x5)   calld(0x1008b148, 0x2b7d);            /* call 0x1008b148 */
    II(0x100885cb, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0xffffffff); /* mov dword [ebp-0x1c], 0xffffffff */
    II(0x100885d2, 0x5)   mov(edx, 0x4e);                       /* mov edx, 0x4e */
    II(0x100885d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100885da, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100885dd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100885e0, 0x5)   calld(0x100b71dc, 0x2ebf7);           /* call 0x100b71dc */
    II(0x100885e5, 0x1)   cwde();                               /* cwde */
    II(0x100885e6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100885e8, 0x2)   jled(0x100885f6, 0xc);                /* jle 0x100885f6 */
    II(0x100885ea, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x4e);  /* mov dword [ebp-0x1c], 0x4e */
    II(0x100885f1, 0x5)   jmpd(0x10088691, 0x9b);               /* jmp 0x10088691 */
l_0x100885f6:
    II(0x100885f6, 0x5)   mov(edx, 0x48);                       /* mov edx, 0x48 */
    II(0x100885fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100885fe, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10088601, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10088604, 0x5)   calld(0x100b71dc, 0x2ebd3);           /* call 0x100b71dc */
    II(0x10088609, 0x1)   cwde();                               /* cwde */
    II(0x1008860a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008860c, 0x2)   jled(0x1008861a, 0xc);                /* jle 0x1008861a */
    II(0x1008860e, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x48);  /* mov dword [ebp-0x1c], 0x48 */
    II(0x10088615, 0x5)   jmpd(0x10088691, 0x77);               /* jmp 0x10088691 */
l_0x1008861a:
    II(0x1008861a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008861d, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x10088622, 0x2)   jzd(0x1008862e, 0xa);                 /* jz 0x1008862e */
    II(0x10088624, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10088627, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x1008862c, 0x2)   jnzd(0x10088646, 0x18);               /* jnz 0x10088646 */
l_0x1008862e:
    II(0x1008862e, 0x5)   mov(edx, 0x41);                       /* mov edx, 0x41 */
    II(0x10088633, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10088636, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10088639, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008863c, 0x5)   calld(0x100b71dc, 0x2eb9b);           /* call 0x100b71dc */
    II(0x10088641, 0x1)   cwde();                               /* cwde */
    II(0x10088642, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10088644, 0x2)   jgd(0x10088648, 0x2);                 /* jg 0x10088648 */
l_0x10088646:
    II(0x10088646, 0x2)   jmpd(0x10088651, 0x9);                /* jmp 0x10088651 */
l_0x10088648:
    II(0x10088648, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x41);  /* mov dword [ebp-0x1c], 0x41 */
    II(0x1008864f, 0x2)   jmpd(0x10088691, 0x40);               /* jmp 0x10088691 */
l_0x10088651:
    II(0x10088651, 0x5)   mov(edx, 0x1b);                       /* mov edx, 0x1b */
    II(0x10088656, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10088659, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1008865c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008865f, 0x5)   calld(0x100b71dc, 0x2eb78);           /* call 0x100b71dc */
    II(0x10088664, 0x1)   cwde();                               /* cwde */
    II(0x10088665, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10088667, 0x2)   jled(0x10088672, 0x9);                /* jle 0x10088672 */
    II(0x10088669, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x4e);  /* mov dword [ebp-0x1c], 0x4e */
    II(0x10088670, 0x2)   jmpd(0x10088691, 0x1f);               /* jmp 0x10088691 */
l_0x10088672:
    II(0x10088672, 0x5)   mov(edx, 0x17);                       /* mov edx, 0x17 */
    II(0x10088677, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008867a, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1008867d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10088680, 0x5)   calld(0x100b71dc, 0x2eb57);           /* call 0x100b71dc */
    II(0x10088685, 0x1)   cwde();                               /* cwde */
    II(0x10088686, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10088688, 0x2)   jled(0x10088691, 0x7);                /* jle 0x10088691 */
    II(0x1008868a, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x48);  /* mov dword [ebp-0x1c], 0x48 */
l_0x10088691:
    II(0x10088691, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x10088695, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10088699, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008869a, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x1008869f, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100886a4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100886a7, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100886aa, 0x5)   calld(0x1011fec1, 0x97812);           /* call 0x1011fec1 */
    II(0x100886af, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x100886b2, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x100886b6, 0x4)   cmp(memd_a32(ss, ebp - 0x4c), 0);     /* cmp dword [ebp-0x4c], 0x0 */
    II(0x100886ba, 0x2)   jnzd(0x100886cf, 0x13);               /* jnz 0x100886cf */
    II(0x100886bc, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100886c0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100886c2, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100886c5, 0x5)   calld(my_dtor_d1, 0x632);             /* call 0x10088cfc */
    II(0x100886ca, 0x5)   jmpd(0x100889b7, 0x2e8);              /* jmp 0x100889b7 */
l_0x100886cf:
    II(0x100886cf, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100886d2, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100886d5, 0x5)   calld(0x10075e64, -0x12876);          /* call 0x10075e64 */
    II(0x100886da, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100886dc, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x100886df, 0x3)   lea(eax, ebp - 0x74);                 /* lea eax, [ebp-0x74] */
    II(0x100886e2, 0x5)   calld(0x10075e64, -0x12883);          /* call 0x10075e64 */
    II(0x100886e7, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100886e9, 0x5)   calld(0x100a5fca, 0x1d8dc);           /* call 0x100a5fca */
    II(0x100886ee, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100886f1, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100886f3, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100886f6, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100886f8, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100886fa, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100886fd, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100886ff, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10088702, 0x3)   mov(al, memb_a32(ds, edx + 0x4d));    /* mov al, [edx+0x4d] */
    II(0x10088705, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10088708, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0x1);   /* mov dword [ebp-0x24], 0x1 */
    II(0x1008870f, 0x2)   jmpd(0x10088717, 0x6);                /* jmp 0x10088717 */
l_0x10088711:
    II(0x10088711, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10088714, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x10088717:
    II(0x10088717, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1008871a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x1008871e, 0x6)   jged(0x100888a4, 0x180);              /* jge dword 0x100888a4 */
    II(0x10088724, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10088727, 0x3)   sub(eax, memd_a32(ss, ebp - 0x24));   /* sub eax, [ebp-0x24] */
    II(0x1008872a, 0x4)   mov(memw_a32(ss, ebp - 0x44), ax);    /* mov [ebp-0x44], ax */
    II(0x1008872e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3a));   /* mov eax, [ebp-0x3a] */
    II(0x10088731, 0x3)   add(eax, memd_a32(ss, ebp - 0x24));   /* add eax, [ebp-0x24] */
    II(0x10088734, 0x4)   mov(memw_a32(ss, ebp - 0x42), ax);    /* mov [ebp-0x42], ax */
    II(0x10088738, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1008873f, 0x2)   jmpd(0x10088745, 0x4);                /* jmp 0x10088745 */
l_0x10088741:
    II(0x10088741, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x2);   /* add dword [ebp-0x14], 0x2 */
l_0x10088745:
    II(0x10088745, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10088749, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1008874c, 0x6)   jged(0x1008889f, 0x14d);              /* jge dword 0x1008889f */
    II(0x10088752, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x10088759, 0x2)   jmpd(0x10088761, 0x6);                /* jmp 0x10088761 */
l_0x1008875b:
    II(0x1008875b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1008875e, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
l_0x10088761:
    II(0x10088761, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10088765, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10088767, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1008876b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008876d, 0x6)   jged(0x1008889a, 0x127);              /* jge dword 0x1008889a */
    II(0x10088773, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10088777, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1008877a, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x1008877f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10088781, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x10088784, 0x5)   calld(0x1008b1a4, 0x2a1b);            /* call 0x1008b1a4 */
    II(0x10088789, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1008878c, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x1008878f, 0x5)   calld(0x101082ce, 0x7fb3a);           /* call 0x101082ce */
    II(0x10088794, 0x2)   test(al, al);                         /* test al, al */
    II(0x10088796, 0x2)   jzd(0x100887b5, 0x1d);                /* jz 0x100887b5 */
    II(0x10088798, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x44)); /* movsx eax, word [ebp-0x44] */
    II(0x1008879c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008879f, 0x3)   add(eax, memd_a32(ss, ebp - 0x4c));   /* add eax, [ebp-0x4c] */
    II(0x100887a2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x42)); /* movsx edx, word [ebp-0x42] */
    II(0x100887a6, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100887a8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100887aa, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100887ac, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100887af, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x28));    /* cmp ax, [ebp-0x28] */
    II(0x100887b3, 0x2)   jld(0x100887ba, 0x5);                 /* jl 0x100887ba */
l_0x100887b5:
    II(0x100887b5, 0x5)   jmpd(0x10088895, 0xdb);               /* jmp 0x10088895 */
l_0x100887ba:
    II(0x100887ba, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100887bd, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x100887c0, 0x5)   calld(0x10075e64, -0x12961);          /* call 0x10075e64 */
    II(0x100887c5, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100887c7, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x100887ca, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x100887cd, 0x5)   calld(0x10075e64, -0x1296e);          /* call 0x10075e64 */
    II(0x100887d2, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100887d4, 0x5)   calld(0x100a5fca, 0x1d7f1);           /* call 0x100a5fca */
    II(0x100887d9, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100887dc, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100887de, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100887e1, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100887e3, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100887e5, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100887e7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100887ea, 0x4)   mov(ax, memw_a32(ds, edx + 0x1c));    /* mov ax, [edx+0x1c] */
    II(0x100887ee, 0x3)   sub(eax, memd_a32(ss, ebp - 0x42));   /* sub eax, [ebp-0x42] */
    II(0x100887f1, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100887f4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100887f7, 0x4)   mov(ax, memw_a32(ds, edx + 0x1a));    /* mov ax, [edx+0x1a] */
    II(0x100887fb, 0x3)   sub(eax, memd_a32(ss, ebp - 0x44));   /* sub eax, [ebp-0x44] */
    II(0x100887fe, 0x1)   cwde();                               /* cwde */
    II(0x100887ff, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x10088801, 0x5)   calld(0x100a5f65, 0x1d75f);           /* call 0x100a5f65 */
    II(0x10088806, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10088809, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1008880b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1008880e, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10088811, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x10088813, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x10088816, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10088818, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1008881b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1008881e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x10088822, 0x2)   jged(0x1008883b, 0x17);               /* jge 0x1008883b */
    II(0x10088824, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x44)); /* movsx eax, word [ebp-0x44] */
    II(0x10088828, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008882b, 0x3)   add(eax, memd_a32(ss, ebp - 0x48));   /* add eax, [ebp-0x48] */
    II(0x1008882e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x42)); /* movsx edx, word [ebp-0x42] */
    II(0x10088832, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10088834, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10088836, 0x3)   test(memb_a32(ds, eax), 0x8);         /* test byte [eax], 0x8 */
    II(0x10088839, 0x2)   jzd(0x1008883d, 0x2);                 /* jz 0x1008883d */
l_0x1008883b:
    II(0x1008883b, 0x2)   jmpd(0x10088856, 0x19);               /* jmp 0x10088856 */
l_0x1008883d:
    II(0x1008883d, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x10088840, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x10088843, 0x5)   calld(0x10075e64, -0x129e4);          /* call 0x10075e64 */
    II(0x10088848, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008884a, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x1008884d, 0x5)   calld(0x1011ff4c, 0x976fa);           /* call 0x1011ff4c */
    II(0x10088852, 0x2)   test(al, al);                         /* test al, al */
    II(0x10088854, 0x2)   jnzd(0x10088858, 0x2);                /* jnz 0x10088858 */
l_0x10088856:
    II(0x10088856, 0x2)   jmpd(0x10088882, 0x2a);               /* jmp 0x10088882 */
l_0x10088858:
    II(0x10088858, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1008885d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008885e, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x42)); /* movsx ecx, word [ebp-0x42] */
    II(0x10088862, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x44)); /* movsx ebx, word [ebp-0x44] */
    II(0x10088866, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10088869, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x1008886c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1008886f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10088872, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10088875, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10088878, 0x5)   calld(0x100702b9, -0x185c4);          /* call 0x100702b9 */
    II(0x1008887d, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x10088880, 0x2)   jnzd(0x10088884, 0x2);                /* jnz 0x10088884 */
l_0x10088882:
    II(0x10088882, 0x2)   jmpd(0x10088895, 0x11);               /* jmp 0x10088895 */
l_0x10088884:
    II(0x10088884, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x10088887, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1008888a, 0x5)   calld(0x10088b44, 0x2b5);             /* call 0x10088b44 */
    II(0x1008888f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10088892, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x10088895:
    II(0x10088895, 0x5)   jmpd(0x1008875b, -0x13f);             /* jmp 0x1008875b */
l_0x1008889a:
    II(0x1008889a, 0x5)   jmpd(0x10088741, -0x15e);             /* jmp 0x10088741 */
l_0x1008889f:
    II(0x1008889f, 0x5)   jmpd(0x10088711, -0x193);             /* jmp 0x10088711 */
l_0x100888a4:
    II(0x100888a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100888a7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100888aa, 0x4)   cmp(ax, memw_a32(ds, edx + 0x1a));    /* cmp ax, [edx+0x1a] */
    II(0x100888ae, 0x2)   jnzd(0x100888bc, 0xc);                /* jnz 0x100888bc */
    II(0x100888b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3e));   /* mov eax, [ebp-0x3e] */
    II(0x100888b3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100888b6, 0x4)   cmp(ax, memw_a32(ds, edx + 0x1c));    /* cmp ax, [edx+0x1c] */
    II(0x100888ba, 0x2)   jzd(0x100888be, 0x2);                 /* jz 0x100888be */
l_0x100888bc:
    II(0x100888bc, 0x2)   jmpd(0x100888d1, 0x13);               /* jmp 0x100888d1 */
l_0x100888be:
    II(0x100888be, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100888c2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100888c4, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100888c7, 0x5)   calld(my_dtor_d1, 0x430);             /* call 0x10088cfc */
    II(0x100888cc, 0x5)   jmpd(0x100889b7, 0xe6);               /* jmp 0x100889b7 */
l_0x100888d1:
    II(0x100888d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100888d4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100888d7, 0x4)   mov(memw_a32(ds, edx + 0x1e), ax);    /* mov [edx+0x1e], ax */
    II(0x100888db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3e));   /* mov eax, [ebp-0x3e] */
    II(0x100888de, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100888e1, 0x4)   mov(memw_a32(ds, edx + 0x20), ax);    /* mov [edx+0x20], ax */
    II(0x100888e5, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100888ea, 0x5)   calld(sys_new, 0xdd511);              /* call 0x10165e00 */
    II(0x100888ef, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
//    II(0x100888f5, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x100888fb, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
    II(0x10088901, 0x7)   cmp(memd_a32(ss, ebp - 0x88), 0);     /* cmp dword [ebp+0xffffff78], 0x0 */
    II(0x10088908, 0x2)   jzd(0x10088949, 0x3f);                /* jz 0x10088949 */
    II(0x1008890a, 0x5)   mov(eax, 0x100b0ebb);                 /* mov eax, 0x100b0ebb */
    II(0x1008890f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10088910, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x10088913, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10088916, 0x5)   calld(0x10075e64, -0x12ab7);          /* call 0x10075e64 */
    II(0x1008891b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008891c, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10088921, 0x1)   pushd(eax);                           /* push eax */
    II(0x10088922, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10088924, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10088927, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008892a, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x10088930, 0x5)   calld(0x100ac220, 0x238eb);           /* call 0x100ac220 */
    II(0x10088935, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
//    II(0x1008893b, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x10088941, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
    II(0x10088947, 0x2)   jmpd(0x10088955, 0xc);                /* jmp 0x10088955 */
l_0x10088949:
    II(0x10088949, 0x6)   mov(eax, memd_a32(ss, ebp - 0x88));   /* mov eax, [ebp+0xffffff78] */
    II(0x1008894f, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
l_0x10088955:
    II(0x10088955, 0x6)   mov(edx, memd_a32(ss, ebp - 0x90));   /* mov edx, [ebp+0xffffff70] */
    II(0x1008895b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008895e, 0x5)   calld(0x1008a5f0, 0x1c8d);            /* call 0x1008a5f0 */
    II(0x10088963, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10088968, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008896b, 0x5)   calld(0x1008a520, 0x1bb0);            /* call 0x1008a520 */
    II(0x10088970, 0x5)   calld(0x1008a6a4, 0x1d2f);            /* call 0x1008a6a4 */
    II(0x10088975, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10088978, 0x5)   calld(0x1008a57c, 0x1bff);            /* call 0x1008a57c */
    II(0x1008897d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008897f, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10088984, 0x5)   calld(0x100a4d50, 0x1c3c7);           /* call 0x100a4d50 */
    II(0x10088989, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x1008898d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008898f, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10088992, 0x5)   calld(0x10088d4c, 0x3b5);             /* call 0x10088d4c */
    II(0x10088997, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10088999, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x1008899c, 0x5)   calld(my_dtor_d1, 0x35b);             /* call 0x10088cfc */
    II(0x100889a1, 0x2)   jmpd(0x100889b7, 0x14);               /* jmp 0x100889b7 */
//  II(0x100889a3, 0x14)  /* Недостижимый код. */
l_0x100889b7:
    II(0x100889b7, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100889ba, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100889bc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100889bd, 0x1)   popd(edi);                            /* pop edi */
    II(0x100889be, 0x1)   popd(esi);                            /* pop esi */
    II(0x100889bf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100889c0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100889c1, 0x1)   retd();                               /* ret */
FUNC_END

