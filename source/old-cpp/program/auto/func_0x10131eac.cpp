FUNC_BEGIN(0x10131eac, 0x85d6f6e762f18859, 0x20, ({0x68, 0xd8, 0, 0, 0, 0xe8, 0x9c, 0x3e, 0x3, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xb4, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x88, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf0, 0x89, 0x2, 0x8a, 0x45, 0xfc, 0x8b, 0x55, 0xf0, 0x88, 0x42, 0x4, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x5, 0x8b, 0x45, 0xf0, 0x66, 0xf, 0xbe, 0x40, 0x4, 0x6b, 0xc0, 0x1c, 0x5, 0x46, 0, 0, 0, 0x89, 0x45, 0xe4, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xe8, 0x9, 0x4b, 0xfa, 0xff, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xee, 0x3e, 0x3, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xc0, 0, 0x74, 0x27, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0xb9, 0x8f, 0, 0, 0, 0xbb, 0x3b, 0x1, 0, 0, 0xba, 0x3a, 0x1, 0, 0, 0x8b, 0x45, 0xc4, 0xe8, 0xd2, 0xc4, 0xf9, 0xff, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0xeb, 0x6, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x7, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x9f, 0x3e, 0x3, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x27, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0xb9, 0x48, 0, 0, 0, 0xbb, 0x3e, 0x1, 0, 0, 0xba, 0x3d, 0x1, 0, 0, 0x8b, 0x45, 0xb4, 0xe8, 0x83, 0xc4, 0xf9, 0xff, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x89, 0x45, 0xa8, 0xeb, 0x6, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa8, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0xb, 0x8b, 0x5d, 0xf0, 0xba, 0xaf, 0x27, 0x13, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xe8, 0x6b, 0xd8, 0xf9, 0xff, 0xba, 0x3c, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xe8, 0xf1, 0xd2, 0xf9, 0xff, 0x8b, 0x55, 0xda, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xe8, 0x56, 0xc9, 0xf9, 0xff, 0xe8, 0x8, 0x32, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xf4, 0xe8, 0x78, 0x19, 0, 0, 0x98, 0x85, 0xc0, 0x7e, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8a, 0x55, 0xec, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0x8b, 0x5d, 0xa4, 0xe8, 0x6e, 0xda, 0xf9, 0xff, 0x8b, 0x55, 0xda, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xe8, 0x40, 0xd8, 0xf9, 0xff, 0x8b, 0x5d, 0xf0, 0xba, 0xed, 0x27, 0x13, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xb, 0xe8, 0xf5, 0xd7, 0xf9, 0xff, 0xba, 0x3f, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xb, 0xe8, 0x7b, 0xd2, 0xf9, 0xff, 0x8b, 0x55, 0xda, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xb, 0xe8, 0xe0, 0xc8, 0xf9, 0xff, 0xe8, 0x92, 0x31, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x3, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x6, 0xc6, 0x45, 0xe8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0, 0x31, 0xd2, 0x8a, 0x55, 0xe8, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xb, 0x8b, 0x5d, 0xa0, 0xe8, 0xf8, 0xd9, 0xf9, 0xff, 0x8b, 0x55, 0xda, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xb, 0xe8, 0xca, 0xd7, 0xf9, 0xff, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x64, 0x3d, 0x3, 0, 0x89, 0x45, 0x9c, 0x8b, 0x45, 0x9c, 0x89, 0x45, 0x98, 0x83, 0x7d, 0x98, 0, 0x74, 0x27, 0xb8, 0x11, 0, 0, 0, 0x50, 0xb9, 0x38, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe4, 0xba, 0x57, 0, 0, 0, 0x8b, 0x45, 0x9c, 0xe8, 0xd6, 0xc2, 0xf9, 0xff, 0x89, 0x45, 0x94, 0x8b, 0x45, 0x94, 0x89, 0x45, 0x90, 0xeb, 0x6, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x90, 0x8b, 0x45, 0x90, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0xf, 0x8b, 0x5d, 0xf0, 0xba, 0x2b, 0x28, 0x13, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xf, 0xe8, 0xf8, 0xd6, 0xf9, 0xff, 0x8b, 0x55, 0xda, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xf, 0xe8, 0x5a, 0xd7, 0xf9, 0xff, 0xb8, 0xd, 0, 0, 0, 0xe8, 0xf4, 0x3c, 0x3, 0, 0x89, 0x45, 0x8c, 0x8b, 0x45, 0x8c, 0x89, 0x45, 0x88, 0x83, 0x7d, 0x88, 0, 0x74, 0x2e, 0xb8, 0xa, 0, 0, 0, 0x50, 0xb9, 0x15, 0, 0, 0, 0x8b, 0x45, 0xe4, 0x5, 0x3, 0, 0, 0, 0xf, 0xbf, 0xd8, 0xba, 0x26, 0, 0, 0, 0x8b, 0x45, 0x8c, 0xe8, 0x9e, 0x5a, 0xfa, 0xff, 0x89, 0x45, 0x84, 0x8b, 0x45, 0x84, 0x89, 0x45, 0x80, 0xeb, 0x6, 0x8b, 0x45, 0x88, 0x89, 0x45, 0x80, 0x8b, 0x45, 0x80, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x13, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x13, 0xe8, 0xe, 0x5c, 0xfa, 0xff, 0xb8, 0xd, 0, 0, 0, 0xe8, 0x90, 0x3c, 0x3, 0, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x78, 0xff, 0xff, 0xff, 0, 0x74, 0x3a, 0xb8, 0xa, 0, 0, 0, 0x50, 0xb9, 0x23, 0, 0, 0, 0x8b, 0x45, 0xe4, 0x5, 0x3, 0, 0, 0, 0xf, 0xbf, 0xd8, 0xba, 0x28, 0x1, 0, 0, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0x2b, 0x5a, 0xfa, 0xff, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x17, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x17, 0xe8, 0x89, 0x5b, 0xfa, 0xff, 0xb8, 0xd, 0, 0, 0, 0xe8, 0xb, 0x3c, 0x3, 0, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x68, 0xff, 0xff, 0xff, 0, 0x74, 0x33, 0xb8, 0x11, 0, 0, 0, 0x50, 0xb9, 0x30, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xe4, 0xba, 0x5b, 0, 0, 0, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0xad, 0x59, 0xfa, 0xff, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x1b, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1b, 0xe8, 0xb, 0x5b, 0xfa, 0xff, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xd9, 0x7f, 0x3, 0, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0xee, 0x10, 0xff, 0xff, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xf, 0, 0, 0, 0x50, 0xb8, 0x31, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xe4, 0xbb, 0xb9, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x1, 0xc1, 0xfa, 0x18, 0xc1, 0xe2, 0x2, 0x8b, 0x92, 0xb4, 0xb4, 0x1b, 0x10, 0x8d, 0x45, 0xc8, 0xe8, 0xe6, 0x88, 0xfb, 0xff, 0x80, 0x8d, 0x58, 0xff, 0xff, 0xff, 0x1, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0x1f, 0xf8, 0, 0, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0x80, 0xa5, 0x58, 0xff, 0xff, 0xff, 0xfe, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1, 0xc1, 0xf8, 0x18, 0x1, 0xc0, 0x8b, 0x80, 0xd2, 0xb4, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xe9, 0x1c, 0, 0, 0x89, 0x85, 0x4c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0x50, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x95, 0x4c, 0xff, 0xff, 0xff, 0x8b, 0x12, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xe4, 0x83, 0xc2, 0x7, 0x29, 0xc2, 0xf, 0xbf, 0xda, 0x8b, 0x95, 0x4c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x12, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xba, 0xaa, 0, 0, 0, 0x29, 0xc2, 0x89, 0xd0, 0xf, 0xbf, 0xd0, 0x8b, 0x85, 0x4c, 0xff, 0xff, 0xff, 0xe8, 0xd7, 0x69, 0xfb, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xe8, 0xab, 0x15, 0, 0, 0x98, 0x69, 0xd0, 0x47, 0x2, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1, 0xc1, 0xf8, 0x18, 0x6b, 0xc0, 0xc, 0x1, 0xd0, 0x6b, 0x80, 0xf0, 0xa4, 0x1c, 0x10, 0xa, 0x50, 0xb8, 0xc, 0x89, 0x1a, 0x10, 0x50, 0xb8, 0xa, 0, 0, 0, 0x50, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0x50, 0xe8, 0xb1, 0xfc, 0, 0, 0x83, 0xc4, 0x10, 0x68, 0xa2, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xd8, 0xbb, 0x23, 0, 0, 0, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0x26, 0x74, 0xf5, 0xff, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xe4, 0xf, 0xbf, 0x75, 0xd8, 0x83, 0xc0, 0x3, 0xf, 0xaf, 0xc6, 0x8b, 0x75, 0xde, 0x81, 0xc6, 0x14, 0x1, 0, 0, 0x1, 0xc6, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0, 0x74, 0xf5, 0xff, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x29, 0xc6, 0x89, 0xf0, 0xff, 0x15, 0xec, 0xdd, 0x1b, 0x10, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0xe8, 0xa7, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x54, 0xff, 0xff, 0xff, 0xe8, 0x3b, 0xf7, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10131eac, 0x5)   pushd(0xd8);                          /* push dword 0xd8 */
    II(0x10131eb1, 0x5)   calld(sys_check_available_stack_size, 0x33e9c); /* call 0x10165d52 */
    II(0x10131eb6, 0x1)   pushd(esi);                           /* push esi */
    II(0x10131eb7, 0x1)   pushd(edi);                           /* push edi */
    II(0x10131eb8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10131eb9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10131ebb, 0x6)   sub(esp, 0xb4);                       /* sub esp, 0xb4 */
    II(0x10131ec1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10131ec4, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10131ec7, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x10131eca, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x10131ecd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10131ed0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10131ed3, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x10131ed5, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10131ed8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10131edb, 0x3)   mov(memb_a32(ds, edx + 0x4), al);     /* mov [edx+0x4], al */
    II(0x10131ede, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10131ee1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10131ee4, 0x4)   mov(memw_a32(ds, edx + 0x5), ax);     /* mov [edx+0x5], ax */
    II(0x10131ee8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10131eeb, 0x5)   movsx(ax, memb_a32(ds, eax + 0x4));   /* movsx ax, byte [eax+0x4] */
    II(0x10131ef0, 0x3)   imul(eax, eax, 0x1c);                 /* imul eax, eax, 0x1c */
    II(0x10131ef3, 0x5)   add(eax, 0x46);                       /* add eax, 0x46 */
    II(0x10131ef8, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10131efb, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x10131efe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10131f01, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10131f03, 0x5)   calld(0x100d6a11, -0x5b4f7);          /* call 0x100d6a11 */
    II(0x10131f08, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10131f0d, 0x5)   calld(sys_new, 0x33eee);              /* call 0x10165e00 */
    II(0x10131f12, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x10131f15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10131f18, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x10131f1b, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x10131f1f, 0x2)   jzd(0x10131f48, 0x27);                /* jz 0x10131f48 */
    II(0x10131f21, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10131f25, 0x1)   pushd(eax);                           /* push eax */
    II(0x10131f26, 0x5)   mov(ecx, 0x8f);                       /* mov ecx, 0x8f */
    II(0x10131f2b, 0x5)   mov(ebx, 0x13b);                      /* mov ebx, 0x13b */
    II(0x10131f30, 0x5)   mov(edx, 0x13a);                      /* mov edx, 0x13a */
    II(0x10131f35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10131f38, 0x5)   calld(my_ctor_c17, -0x63b2e);         /* call 0x100ce40f */
    II(0x10131f3d, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x10131f40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10131f43, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x10131f46, 0x2)   jmpd(0x10131f4e, 0x6);                /* jmp 0x10131f4e */
l_0x10131f48:
    II(0x10131f48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10131f4b, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
l_0x10131f4e:
    II(0x10131f4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10131f51, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10131f54, 0x3)   mov(memd_a32(ds, edx + 0x7), eax);    /* mov [edx+0x7], eax */
    II(0x10131f57, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10131f5c, 0x5)   calld(sys_new, 0x33e9f);              /* call 0x10165e00 */
    II(0x10131f61, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x10131f64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10131f67, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x10131f6a, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x10131f6e, 0x2)   jzd(0x10131f97, 0x27);                /* jz 0x10131f97 */
    II(0x10131f70, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10131f74, 0x1)   pushd(eax);                           /* push eax */
    II(0x10131f75, 0x5)   mov(ecx, 0x48);                       /* mov ecx, 0x48 */
    II(0x10131f7a, 0x5)   mov(ebx, 0x13e);                      /* mov ebx, 0x13e */
    II(0x10131f7f, 0x5)   mov(edx, 0x13d);                      /* mov edx, 0x13d */
    II(0x10131f84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10131f87, 0x5)   calld(my_ctor_c17, -0x63b7d);         /* call 0x100ce40f */
    II(0x10131f8c, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x10131f8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x10131f92, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x10131f95, 0x2)   jmpd(0x10131f9d, 0x6);                /* jmp 0x10131f9d */
l_0x10131f97:
    II(0x10131f97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x10131f9a, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
l_0x10131f9d:
    II(0x10131f9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x10131fa0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10131fa3, 0x3)   mov(memd_a32(ds, edx + 0xb), eax);    /* mov [edx+0xb], eax */
    II(0x10131fa6, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x10131fa9, 0x5)   mov(edx, 0x101327af);                 /* mov edx, 0x101327af */
    II(0x10131fae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10131fb1, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10131fb4, 0x5)   calld(0x100cf824, -0x62795);          /* call 0x100cf824 */
    II(0x10131fb9, 0x5)   mov(edx, 0x13c);                      /* mov edx, 0x13c */
    II(0x10131fbe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10131fc1, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10131fc4, 0x5)   calld(0x100cf2ba, -0x62d0f);          /* call 0x100cf2ba */
    II(0x10131fc9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x26));   /* mov edx, [ebp-0x26] */
    II(0x10131fcc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10131fcf, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10131fd2, 0x5)   calld(0x100ce92d, -0x636aa);          /* call 0x100ce92d */
    II(0x10131fd7, 0x5)   calld(0x100d51e4, -0x5cdf8);          /* call 0x100d51e4 */
    II(0x10131fdc, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10131fe1, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x10131fe4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10131fe7, 0x5)   calld(0x10133964, 0x1978);            /* call 0x10133964 */
    II(0x10131fec, 0x1)   cwde();                               /* cwde */
    II(0x10131fed, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10131fef, 0x2)   jled(0x10131ff7, 0x6);                /* jle 0x10131ff7 */
    II(0x10131ff1, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x10131ff5, 0x2)   jmpd(0x10131ffb, 0x4);                /* jmp 0x10131ffb */
l_0x10131ff7:
    II(0x10131ff7, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x10131ffb:
    II(0x10131ffb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10131ffd, 0x3)   mov(dl, memb_a32(ss, ebp - 0x14));    /* mov dl, [ebp-0x14] */
    II(0x10132000, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10132003, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10132006, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x5c));   /* mov ebx, [ebp-0x5c] */
    II(0x10132009, 0x5)   calld(0x100cfa7c, -0x62592);          /* call 0x100cfa7c */
    II(0x1013200e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x26));   /* mov edx, [ebp-0x26] */
    II(0x10132011, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10132014, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10132017, 0x5)   calld(0x100cf85c, -0x627c0);          /* call 0x100cf85c */
    II(0x1013201c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x1013201f, 0x5)   mov(edx, 0x101327ed);                 /* mov edx, 0x101327ed */
    II(0x10132024, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10132027, 0x3)   mov(eax, memd_a32(ds, eax + 0xb));    /* mov eax, [eax+0xb] */
    II(0x1013202a, 0x5)   calld(0x100cf824, -0x6280b);          /* call 0x100cf824 */
    II(0x1013202f, 0x5)   mov(edx, 0x13f);                      /* mov edx, 0x13f */
    II(0x10132034, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10132037, 0x3)   mov(eax, memd_a32(ds, eax + 0xb));    /* mov eax, [eax+0xb] */
    II(0x1013203a, 0x5)   calld(0x100cf2ba, -0x62d85);          /* call 0x100cf2ba */
    II(0x1013203f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x26));   /* mov edx, [ebp-0x26] */
    II(0x10132042, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10132045, 0x3)   mov(eax, memd_a32(ds, eax + 0xb));    /* mov eax, [eax+0xb] */
    II(0x10132048, 0x5)   calld(0x100ce92d, -0x63720);          /* call 0x100ce92d */
    II(0x1013204d, 0x5)   calld(0x100d51e4, -0x5ce6e);          /* call 0x100d51e4 */
    II(0x10132052, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10132057, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x1013205a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013205d, 0x3)   mov(eax, memd_a32(ds, eax + 0x3));    /* mov eax, [eax+0x3] */
    II(0x10132060, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10132063, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10132065, 0x2)   jled(0x1013206d, 0x6);                /* jle 0x1013206d */
    II(0x10132067, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x1013206b, 0x2)   jmpd(0x10132071, 0x4);                /* jmp 0x10132071 */
l_0x1013206d:
    II(0x1013206d, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x10132071:
    II(0x10132071, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10132073, 0x3)   mov(dl, memb_a32(ss, ebp - 0x18));    /* mov dl, [ebp-0x18] */
    II(0x10132076, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10132079, 0x3)   mov(eax, memd_a32(ds, eax + 0xb));    /* mov eax, [eax+0xb] */
    II(0x1013207c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x60));   /* mov ebx, [ebp-0x60] */
    II(0x1013207f, 0x5)   calld(0x100cfa7c, -0x62608);          /* call 0x100cfa7c */
    II(0x10132084, 0x3)   mov(edx, memd_a32(ss, ebp - 0x26));   /* mov edx, [ebp-0x26] */
    II(0x10132087, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013208a, 0x3)   mov(eax, memd_a32(ds, eax + 0xb));    /* mov eax, [eax+0xb] */
    II(0x1013208d, 0x5)   calld(0x100cf85c, -0x62836);          /* call 0x100cf85c */
    II(0x10132092, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10132097, 0x5)   calld(sys_new, 0x33d64);              /* call 0x10165e00 */
    II(0x1013209c, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
//    II(0x1013209f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x101320a2, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x101320a5, 0x4)   cmp(memd_a32(ss, ebp - 0x68), 0);     /* cmp dword [ebp-0x68], 0x0 */
    II(0x101320a9, 0x2)   jzd(0x101320d2, 0x27);                /* jz 0x101320d2 */
    II(0x101320ab, 0x5)   mov(eax, 0x11);                       /* mov eax, 0x11 */
    II(0x101320b0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101320b1, 0x5)   mov(ecx, 0x38);                       /* mov ecx, 0x38 */
    II(0x101320b6, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x101320ba, 0x5)   mov(edx, 0x57);                       /* mov edx, 0x57 */
    II(0x101320bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x101320c2, 0x5)   calld(0x100ce39d, -0x63d2a);          /* call 0x100ce39d */
    II(0x101320c7, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
//    II(0x101320ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x101320cd, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x101320d0, 0x2)   jmpd(0x101320d8, 0x6);                /* jmp 0x101320d8 */
l_0x101320d2:
    II(0x101320d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x101320d5, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
l_0x101320d8:
    II(0x101320d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x101320db, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101320de, 0x3)   mov(memd_a32(ds, edx + 0xf), eax);    /* mov [edx+0xf], eax */
    II(0x101320e1, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x101320e4, 0x5)   mov(edx, 0x1013282b);                 /* mov edx, 0x1013282b */
    II(0x101320e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101320ec, 0x3)   mov(eax, memd_a32(ds, eax + 0xf));    /* mov eax, [eax+0xf] */
    II(0x101320ef, 0x5)   calld(0x100cf7ec, -0x62908);          /* call 0x100cf7ec */
    II(0x101320f4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x26));   /* mov edx, [ebp-0x26] */
    II(0x101320f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101320fa, 0x3)   mov(eax, memd_a32(ds, eax + 0xf));    /* mov eax, [eax+0xf] */
    II(0x101320fd, 0x5)   calld(0x100cf85c, -0x628a6);          /* call 0x100cf85c */
    II(0x10132102, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x10132107, 0x5)   calld(sys_new, 0x33cf4);              /* call 0x10165e00 */
    II(0x1013210c, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
//    II(0x1013210f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x10132112, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x10132115, 0x4)   cmp(memd_a32(ss, ebp - 0x78), 0);     /* cmp dword [ebp-0x78], 0x0 */
    II(0x10132119, 0x2)   jzd(0x10132149, 0x2e);                /* jz 0x10132149 */
    II(0x1013211b, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x10132120, 0x1)   pushd(eax);                           /* push eax */
    II(0x10132121, 0x5)   mov(ecx, 0x15);                       /* mov ecx, 0x15 */
    II(0x10132126, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10132129, 0x5)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x1013212e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10132131, 0x5)   mov(edx, 0x26);                       /* mov edx, 0x26 */
    II(0x10132136, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x10132139, 0x5)   calld(0x100d7bdc, -0x5a562);          /* call 0x100d7bdc */
    II(0x1013213e, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
//    II(0x10132141, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x10132144, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
    II(0x10132147, 0x2)   jmpd(0x1013214f, 0x6);                /* jmp 0x1013214f */
l_0x10132149:
    II(0x10132149, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x1013214c, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
l_0x1013214f:
    II(0x1013214f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x10132152, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10132155, 0x3)   mov(memd_a32(ds, edx + 0x13), eax);   /* mov [edx+0x13], eax */
    II(0x10132158, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x1013215b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013215e, 0x3)   mov(eax, memd_a32(ds, eax + 0x13));   /* mov eax, [eax+0x13] */
    II(0x10132161, 0x5)   calld(0x100d7d74, -0x5a3f2);          /* call 0x100d7d74 */
    II(0x10132166, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x1013216b, 0x5)   calld(sys_new, 0x33c90);              /* call 0x10165e00 */
    II(0x10132170, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
//    II(0x10132176, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x1013217c, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
    II(0x10132182, 0x7)   cmp(memd_a32(ss, ebp - 0x88), 0);     /* cmp dword [ebp+0xffffff78], 0x0 */
    II(0x10132189, 0x2)   jzd(0x101321c5, 0x3a);                /* jz 0x101321c5 */
    II(0x1013218b, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x10132190, 0x1)   pushd(eax);                           /* push eax */
    II(0x10132191, 0x5)   mov(ecx, 0x23);                       /* mov ecx, 0x23 */
    II(0x10132196, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10132199, 0x5)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x1013219e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101321a1, 0x5)   mov(edx, 0x128);                      /* mov edx, 0x128 */
    II(0x101321a6, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x101321ac, 0x5)   calld(0x100d7bdc, -0x5a5d5);          /* call 0x100d7bdc */
    II(0x101321b1, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
//    II(0x101321b7, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x101321bd, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
    II(0x101321c3, 0x2)   jmpd(0x101321d1, 0xc);                /* jmp 0x101321d1 */
l_0x101321c5:
    II(0x101321c5, 0x6)   mov(eax, memd_a32(ss, ebp - 0x88));   /* mov eax, [ebp+0xffffff78] */
    II(0x101321cb, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
l_0x101321d1:
    II(0x101321d1, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x101321d7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x101321da, 0x3)   mov(memd_a32(ds, edx + 0x17), eax);   /* mov [edx+0x17], eax */
    II(0x101321dd, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x101321e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101321e3, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x101321e6, 0x5)   calld(0x100d7d74, -0x5a477);          /* call 0x100d7d74 */
    II(0x101321eb, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x101321f0, 0x5)   calld(sys_new, 0x33c0b);              /* call 0x10165e00 */
    II(0x101321f5, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
//    II(0x101321fb, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x10132201, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
    II(0x10132207, 0x7)   cmp(memd_a32(ss, ebp - 0x98), 0);     /* cmp dword [ebp+0xffffff68], 0x0 */
    II(0x1013220e, 0x2)   jzd(0x10132243, 0x33);                /* jz 0x10132243 */
    II(0x10132210, 0x5)   mov(eax, 0x11);                       /* mov eax, 0x11 */
    II(0x10132215, 0x1)   pushd(eax);                           /* push eax */
    II(0x10132216, 0x5)   mov(ecx, 0x30);                       /* mov ecx, 0x30 */
    II(0x1013221b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x1c)); /* movsx ebx, word [ebp-0x1c] */
    II(0x1013221f, 0x5)   mov(edx, 0x5b);                       /* mov edx, 0x5b */
    II(0x10132224, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x1013222a, 0x5)   calld(0x100d7bdc, -0x5a653);          /* call 0x100d7bdc */
    II(0x1013222f, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
//    II(0x10132235, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x1013223b, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
    II(0x10132241, 0x2)   jmpd(0x1013224f, 0xc);                /* jmp 0x1013224f */
l_0x10132243:
    II(0x10132243, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x10132249, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
l_0x1013224f:
    II(0x1013224f, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x10132255, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10132258, 0x3)   mov(memd_a32(ds, edx + 0x1b), eax);   /* mov [edx+0x1b], eax */
    II(0x1013225b, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x1013225e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10132261, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x10132264, 0x5)   calld(0x100d7d74, -0x5a4f5);          /* call 0x100d7d74 */
    II(0x10132269, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1013226e, 0x5)   calld(/* sys */ 0x1016a24c, 0x37fd9); /* call 0x1016a24c */
    II(0x10132273, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10132279, 0x5)   calld(0x1012336c, -0xef12);           /* call 0x1012336c */
    II(0x1013227e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013227f, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10132284, 0x1)   pushd(eax);                           /* push eax */
    II(0x10132285, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10132287, 0x1)   pushd(eax);                           /* push eax */
    II(0x10132288, 0x5)   mov(eax, 0xf);                        /* mov eax, 0xf */
    II(0x1013228d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013228e, 0x5)   mov(eax, 0x31);                       /* mov eax, 0x31 */
    II(0x10132293, 0x1)   pushd(eax);                           /* push eax */
    II(0x10132294, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x1c)); /* movsx ecx, word [ebp-0x1c] */
    II(0x10132298, 0x5)   mov(ebx, 0xb9);                       /* mov ebx, 0xb9 */
    II(0x1013229d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101322a0, 0x3)   mov(edx, memd_a32(ds, eax + 0x1));    /* mov edx, [eax+0x1] */
    II(0x101322a3, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x101322a6, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x101322a9, 0x6)   mov(edx, memd_a32(ds, edx + 0x101bb4b4)); /* mov edx, [edx+0x101bb4b4] */
    II(0x101322af, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x101322b2, 0x5)   calld(0x100eab9d, -0x4771a);          /* call 0x100eab9d */
    II(0x101322b7, 0x7)   or_(memb_a32(ss, ebp - 0xa8), 0x1);   /* or byte [ebp+0xffffff58], 0x1 */
    II(0x101322be, 0x6)   lea(eax, ebp - 0xac);                 /* lea eax, [ebp+0xffffff54] */
    II(0x101322c4, 0x5)   calld(my_string_ctor, 0xf81f);        /* call 0x10141ae8 */
    II(0x101322c9, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
    II(0x101322cf, 0x7)   and_(memb_a32(ss, ebp - 0xa8), -0x2 /* 0xfe */); /* and byte [ebp+0xffffff58], 0xfe */
    II(0x101322d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101322d9, 0x3)   mov(eax, memd_a32(ds, eax + 0x1));    /* mov eax, [eax+0x1] */
    II(0x101322dc, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x101322df, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101322e1, 0x6)   mov(eax, memd_a32(ds, eax + 0x101bb4d2)); /* mov eax, [eax+0x101bb4d2] */
    II(0x101322e7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101322ea, 0x5)   calld(my_get_res_data_by_id, 0x1ce9); /* call 0x10133fd8 */
    II(0x101322ef, 0x6)   mov(memd_a32(ss, ebp - 0xb4), eax);   /* mov [ebp+0xffffff4c], eax */
    II(0x101322f5, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x101322f8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101322f9, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x101322fe, 0x6)   mov(edx, memd_a32(ss, ebp - 0xb4));   /* mov edx, [ebp+0xffffff4c] */
    II(0x10132304, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10132306, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10132309, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013230b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013230e, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10132310, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10132312, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10132316, 0x3)   add(edx, 0x7);                        /* add edx, 0x7 */
    II(0x10132319, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1013231b, 0x3)   movsx(ebx, dx);                       /* movsx ebx, dx */
    II(0x1013231e, 0x6)   mov(edx, memd_a32(ss, ebp - 0xb4));   /* mov edx, [ebp+0xffffff4c] */
    II(0x10132324, 0x3)   movsx(edx, memw_a32(ds, edx));        /* movsx edx, word [edx] */
    II(0x10132327, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10132329, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013232c, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1013232e, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10132330, 0x5)   mov(edx, 0xaa);                       /* mov edx, 0xaa */
    II(0x10132335, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10132337, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10132339, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1013233c, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb4));   /* mov eax, [ebp+0xffffff4c] */
    II(0x10132342, 0x5)   calld(0x100e8d1e, -0x49629);          /* call 0x100e8d1e */
    II(0x10132347, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013234a, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1013234c, 0x5)   calld(0x101338fc, 0x15ab);            /* call 0x101338fc */
    II(0x10132351, 0x1)   cwde();                               /* cwde */
    II(0x10132352, 0x6)   imul(edx, eax, 0x247);                /* imul edx, eax, 0x247 */
    II(0x10132358, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013235b, 0x3)   mov(eax, memd_a32(ds, eax + 0x1));    /* mov eax, [eax+0x1] */
    II(0x1013235e, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x10132361, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x10132364, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10132366, 0x7)   imul(eax, memd_a32(ds, eax + 0x101ca4f0), 0xa); /* imul eax, [eax+0x101ca4f0], 0xa */
    II(0x1013236d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013236e, 0x5)   mov(eax, 0x101a890c);                 /* mov eax, 0x101a890c */ /* "+%i%%" */
    II(0x10132373, 0x1)   pushd(eax);                           /* push eax */
    II(0x10132374, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x10132379, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013237a, 0x6)   lea(eax, ebp - 0xac);                 /* lea eax, [ebp+0xffffff54] */
    II(0x10132380, 0x1)   pushd(eax);                           /* push eax */
    II(0x10132381, 0x5)   calld(0x10142037, 0xfcb1);            /* call 0x10142037 */
    II(0x10132386, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x10132389, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x1013238e, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x28)); /* movsx ecx, word [ebp-0x28] */
    II(0x10132392, 0x5)   mov(ebx, 0x23);                       /* mov ebx, 0x23 */
    II(0x10132397, 0x6)   lea(eax, ebp - 0xac);                 /* lea eax, [ebp+0xffffff54] */
    II(0x1013239d, 0x5)   calld(my_strobj_c_str_v2, -0xa8bda);  /* call 0x100897c8 */
    II(0x101323a2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101323a4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x101323a8, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x28)); /* movsx esi, word [ebp-0x28] */
    II(0x101323ac, 0x3)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x101323af, 0x3)   imul(eax, esi);                       /* imul eax, esi */
    II(0x101323b2, 0x3)   mov(esi, memd_a32(ss, ebp - 0x22));   /* mov esi, [ebp-0x22] */
    II(0x101323b5, 0x6)   add(esi, 0x114);                      /* add esi, 0x114 */
    II(0x101323bb, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x101323bd, 0x6)   lea(eax, ebp - 0xac);                 /* lea eax, [ebp+0xffffff54] */
    II(0x101323c3, 0x5)   calld(my_strobj_c_str_v2, -0xa8c00);  /* call 0x100897c8 */
    II(0x101323c8, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x101323ce, 0x2)   sub(esi, eax);                        /* sub esi, eax */
    II(0x101323d0, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x101323d2, 0x6)   calld_abs(memd_a32(ds, 0x101bddec));  /* call dword near [0x101bddec] */
    II(0x101323d8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101323da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101323dd, 0x5)   calld(0x10132489, 0xa7);              /* call 0x10132489 */
    II(0x101323e2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101323e4, 0x6)   lea(eax, ebp - 0xac);                 /* lea eax, [ebp+0xffffff54] */
    II(0x101323ea, 0x5)   calld(my_string_dtor, 0xf73b);        /* call 0x10141b2a */
    II(0x101323ef, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101323f1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101323f2, 0x1)   popd(edi);                            /* pop edi */
    II(0x101323f3, 0x1)   popd(esi);                            /* pop esi */
    II(0x101323f4, 0x1)   retd();                               /* ret */
FUNC_END

