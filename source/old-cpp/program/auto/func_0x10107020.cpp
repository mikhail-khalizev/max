FUNC_BEGIN(0x10107020, 0x24c26e7901fc408e, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x28, 0xed, 0x5, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x66, 0xc7, 0x5, 0xb6, 0x59, 0x1c, 0x10, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0x14, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0x4e, 0x6d, 0xfc, 0xff, 0xeb, 0xe2, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0xe8, 0x42, 0x6d, 0xfc, 0xff, 0x66, 0xa1, 0xb6, 0x59, 0x1c, 0x10, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10107020, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x10107025, 0x5)   calld(sys_check_available_stack_size, 0x5ed28); /* call 0x10165d52 */
    II(0x1010702a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010702b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010702c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010702d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010702e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10107030, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10107036, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10107039, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1010703c, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x1010703f, 0x9)   mov(memw_a32(ds, 0x101c59b6), 0);     /* mov word [0x101c59b6], 0x0 */
l_0x10107048:
    II(0x10107048, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x1010704b, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x10107050, 0x2)   jzd(0x10107066, 0x14);                /* jz 0x10107066 */
    II(0x10107052, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10107055, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
    II(0x10107058, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1010705a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1010705f, 0x5)   calld(0x100cddb2, -0x392b2);          /* call 0x100cddb2 */
    II(0x10107064, 0x2)   jmpd(0x10107048, -0x1e);              /* jmp 0x10107048 */
l_0x10107066:
    II(0x10107066, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10107068, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1010706b, 0x5)   calld(0x100cddb2, -0x392be);          /* call 0x100cddb2 */
    II(0x10107070, 0x6)   mov(ax, memw_a32(ds, 0x101c59b6));    /* mov ax, [0x101c59b6] */
    II(0x10107076, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x10107079, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010707c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010707e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010707f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10107080, 0x1)   popd(esi);                            /* pop esi */
    II(0x10107081, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10107082, 0x1)   retd();                               /* ret */
FUNC_END

