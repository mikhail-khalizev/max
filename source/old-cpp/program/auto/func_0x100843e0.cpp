FUNC_BEGIN(0x100843e0, 0x65670f9d96ba826b, 0x20, ({0x68, 0x70, 0, 0, 0, 0xe8, 0x68, 0x19, 0xe, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x2a, 0xe8, 0x71, 0x59, 0, 0, 0xe8, 0x2d, 0xe9, 0x1, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xd8, 0x26, 0xff, 0xff, 0x66, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x2a, 0xe8, 0x47, 0x59, 0, 0, 0xe8, 0x36, 0x5b, 0, 0, 0xe8, 0x35, 0x1c, 0xff, 0xff, 0x88, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x15, 0x3, 0x7c, 0x4, 0xc6, 0x45, 0xfc, 0x2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x1a, 0x21, 0xff, 0xff, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x6, 0x80, 0x7d, 0xec, 0, 0x74, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x15, 0x6, 0x7c, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xfc, 0x3, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x15, 0x1, 0x75, 0x4, 0xc6, 0x45, 0xfc, 0x3, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x46, 0, 0x74, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x3f, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0xcd, 0x20, 0xff, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x75, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x15, 0x4, 0x7c, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x15, 0x1, 0x75, 0x32, 0xf, 0xbe, 0x45, 0xfc, 0x50, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0xdc, 0xe8, 0x93, 0x19, 0xff, 0xff, 0x89, 0xc1, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0xf2, 0x20, 0xff, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0xe8, 0x6a, 0xf2, 0xff, 0xff, 0x88, 0x45, 0xf4, 0xe9, 0xe8, 0x1, 0, 0, 0xf, 0xbe, 0x4d, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0xce, 0x20, 0xff, 0xff, 0x8d, 0x55, 0xd8, 0x8b, 0x75, 0xf8, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x9b, 0xf9, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x29, 0x46, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x4e, 0x20, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x3b, 0x45, 0xe4, 0x75, 0x15, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x39, 0x20, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x3b, 0x45, 0xe6, 0x74, 0x2, 0xeb, 0x1c, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x46, 0x1, 0x8b, 0x45, 0xf8, 0xe8, 0xa9, 0x1c, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xb, 0xee, 0xff, 0xff, 0xe9, 0x74, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x15, 0x5, 0xf, 0x8d, 0xa3, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x20, 0xe8, 0x8d, 0x57, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0x5f, 0x56, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xd0, 0xe8, 0x6b, 0x1f, 0xff, 0xff, 0x89, 0x45, 0xcc, 0x80, 0x65, 0xf0, 0xfe, 0xeb, 0x8, 0x8d, 0x45, 0xd4, 0xe8, 0x56, 0x26, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xc5, 0x67, 0xb, 0, 0x84, 0xc0, 0x74, 0x4f, 0x8d, 0x45, 0xd4, 0xe8, 0x14, 0x55, 0, 0, 0xe8, 0x7, 0x5a, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0x75, 0x1e, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd0, 0xe8, 0x27, 0x26, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x96, 0x67, 0xb, 0, 0x84, 0xc0, 0x74, 0x1e, 0x8d, 0x45, 0xd0, 0xe8, 0xb9, 0x1d, 0xff, 0xff, 0x66, 0xc7, 0x40, 0x1e, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0xab, 0x1d, 0xff, 0xff, 0x66, 0xc7, 0x40, 0x20, 0, 0, 0xeb, 0xcc, 0xeb, 0x9b, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x63, 0x19, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x31, 0x4a, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x56, 0x1f, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe4, 0x66, 0x89, 0x42, 0x1e, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x42, 0x1f, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe6, 0x66, 0x89, 0x42, 0x20, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xbb, 0x17, 0xe, 0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x3c, 0xb8, 0xbb, 0xe, 0xb, 0x10, 0x50, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xc0, 0xe8, 0xff, 0x17, 0xff, 0xff, 0x50, 0xf, 0xbe, 0x45, 0xfc, 0x50, 0x31, 0xc9, 0x8b, 0x5d, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x55, 0x1f, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xc8, 0xe8, 0x9b, 0x7b, 0x2, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0xeb, 0x6, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xb8, 0x8b, 0x55, 0xb8, 0x8d, 0x45, 0xb4, 0xe8, 0x4f, 0x5f, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xb4, 0xe8, 0x72, 0x5e, 0, 0, 0xe8, 0xf1, 0x5f, 0, 0, 0x8d, 0x45, 0xb4, 0xe8, 0xc1, 0x5e, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x89, 0x6, 0x2, 0, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x77, 0x46, 0, 0, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100843e0, 0x5)   pushd(0x70);                          /* push dword 0x70 */
    II(0x100843e5, 0x5)   calld(sys_check_available_stack_size, 0xe1968); /* call 0x10165d52 */
    II(0x100843ea, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100843eb, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100843ec, 0x1)   pushd(esi);                           /* push esi */
    II(0x100843ed, 0x1)   pushd(edi);                           /* push edi */
    II(0x100843ee, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100843ef, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100843f1, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x100843f7, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100843fa, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100843fd, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10084400, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084403, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084406, 0x5)   calld(0x10089d7c, 0x5971);            /* call 0x10089d7c */
    II(0x1008440b, 0x5)   calld(0x100a2d3d, 0x1e92d);           /* call 0x100a2d3d */
    II(0x10084410, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10084413, 0x5)   calld(my_ctor_0x101b4184, -0xd928);   /* call 0x10076af0 */
    II(0x10084418, 0x6)   mov(ax, memw_a32(ds, 0x101c8172));    /* mov ax, [0x101c8172] */
    II(0x1008441e, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10084421, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084424, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x10084427, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1008442a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008442d, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084430, 0x5)   calld(0x10089d7c, 0x5947);            /* call 0x10089d7c */
    II(0x10084435, 0x5)   calld(0x10089f70, 0x5b36);            /* call 0x10089f70 */
    II(0x1008443a, 0x5)   calld(0x10076074, -0xe3cb);           /* call 0x10076074 */
    II(0x1008443f, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10084442, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084445, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x3);   /* cmp byte [eax+0x15], 0x3 */
    II(0x10084449, 0x2)   jld(0x1008444f, 0x4);                 /* jl 0x1008444f */
    II(0x1008444b, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x2);    /* mov byte [ebp-0x4], 0x2 */
l_0x1008444f:
    II(0x1008444f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084452, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084455, 0x5)   calld(0x10076574, -0xdee6);           /* call 0x10076574 */
    II(0x1008445a, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x1008445d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10084462, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10084464, 0x2)   jnzd(0x1008446c, 0x6);                /* jnz 0x1008446c */
    II(0x10084466, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x1008446a, 0x2)   jzd(0x1008446e, 0x2);                 /* jz 0x1008446e */
l_0x1008446c:
    II(0x1008446c, 0x2)   jmpd(0x10084477, 0x9);                /* jmp 0x10084477 */
l_0x1008446e:
    II(0x1008446e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084471, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x6);   /* cmp byte [eax+0x15], 0x6 */
    II(0x10084475, 0x2)   jld(0x10084479, 0x2);                 /* jl 0x10084479 */
l_0x10084477:
    II(0x10084477, 0x2)   jmpd(0x1008447d, 0x4);                /* jmp 0x1008447d */
l_0x10084479:
    II(0x10084479, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x3);    /* mov byte [ebp-0x4], 0x3 */
l_0x1008447d:
    II(0x1008447d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084480, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x1);   /* cmp byte [eax+0x15], 0x1 */
    II(0x10084484, 0x2)   jnzd(0x1008448a, 0x4);                /* jnz 0x1008448a */
    II(0x10084486, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x3);    /* mov byte [ebp-0x4], 0x3 */
l_0x1008448a:
    II(0x1008448a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008448d, 0x4)   cmp(memb_a32(ds, eax + 0x46), 0);     /* cmp byte [eax+0x46], 0x0 */
    II(0x10084491, 0x2)   jzd(0x1008449c, 0x9);                 /* jz 0x1008449c */
    II(0x10084493, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x10084497, 0x5)   jmpd(0x100846db, 0x23f);              /* jmp 0x100846db */
l_0x1008449c:
    II(0x1008449c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008449f, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x100844a2, 0x5)   calld(0x10076574, -0xdf33);           /* call 0x10076574 */
    II(0x100844a7, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x100844ab, 0x2)   jnzd(0x100844b6, 0x9);                /* jnz 0x100844b6 */
    II(0x100844ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100844b0, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x4);   /* cmp byte [eax+0x15], 0x4 */
    II(0x100844b4, 0x2)   jld(0x100844b8, 0x2);                 /* jl 0x100844b8 */
l_0x100844b6:
    II(0x100844b6, 0x2)   jmpd(0x100844c1, 0x9);                /* jmp 0x100844c1 */
l_0x100844b8:
    II(0x100844b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100844bb, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x1);   /* cmp byte [eax+0x15], 0x1 */
    II(0x100844bf, 0x2)   jnzd(0x100844f3, 0x32);               /* jnz 0x100844f3 */
l_0x100844c1:
    II(0x100844c1, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x100844c5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100844c6, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100844c9, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100844cc, 0x5)   calld(0x10075e64, -0xe66d);           /* call 0x10075e64 */
    II(0x100844d1, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100844d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100844d6, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x100844d9, 0x5)   calld(0x100765d0, -0xdf0e);           /* call 0x100765d0 */
    II(0x100844de, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100844e0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100844e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100844e6, 0x5)   calld(0x10083755, -0xd96);            /* call 0x10083755 */
    II(0x100844eb, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x100844ee, 0x5)   jmpd(0x100846db, 0x1e8);              /* jmp 0x100846db */
l_0x100844f3:
    II(0x100844f3, 0x4)   movsx(ecx, memb_a32(ss, ebp - 0x4));  /* movsx ecx, byte [ebp-0x4] */
    II(0x100844f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100844fa, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x100844fd, 0x5)   calld(0x100765d0, -0xdf32);           /* call 0x100765d0 */
    II(0x10084502, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x10084505, 0x3)   mov(esi, memd_a32(ss, ebp - 0x8));    /* mov esi, [ebp-0x8] */
    II(0x10084508, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1008450a, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1008450c, 0x5)   calld(0x10083eac, -0x665);            /* call 0x10083eac */
    II(0x10084511, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084513, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10084516, 0x5)   calld(0x10088b44, 0x4629);            /* call 0x10088b44 */
    II(0x1008451b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008451e, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084521, 0x5)   calld(0x10076574, -0xdfb2);           /* call 0x10076574 */
    II(0x10084526, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1008452a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1c));    /* cmp ax, [ebp-0x1c] */
    II(0x1008452e, 0x2)   jnzd(0x10084545, 0x15);               /* jnz 0x10084545 */
    II(0x10084530, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084533, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084536, 0x5)   calld(0x10076574, -0xdfc7);           /* call 0x10076574 */
    II(0x1008453b, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1008453f, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1a));    /* cmp ax, [ebp-0x1a] */
    II(0x10084543, 0x2)   jzd(0x10084547, 0x2);                 /* jz 0x10084547 */
l_0x10084545:
    II(0x10084545, 0x2)   jmpd(0x10084563, 0x1c);               /* jmp 0x10084563 */
l_0x10084547:
    II(0x10084547, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008454a, 0x4)   mov(memb_a32(ds, eax + 0x46), 0x1);   /* mov byte [eax+0x46], 0x1 */
    II(0x1008454e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084551, 0x5)   calld(0x100861ff, 0x1ca9);            /* call 0x100861ff */
    II(0x10084556, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084559, 0x5)   calld(0x10083369, -0x11f5);           /* call 0x10083369 */
    II(0x1008455e, 0x5)   jmpd(0x100846d7, 0x174);              /* jmp 0x100846d7 */
l_0x10084563:
    II(0x10084563, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084566, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x5);   /* cmp byte [eax+0x15], 0x5 */
    II(0x1008456a, 0x6)   jged(0x10084613, 0xa3);               /* jge dword 0x10084613 */
    II(0x10084570, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084573, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10084576, 0x5)   calld(0x10089d08, 0x578d);            /* call 0x10089d08 */
    II(0x1008457b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008457d, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10084580, 0x5)   calld(0x10089be4, 0x565f);            /* call 0x10089be4 */
    II(0x10084585, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x10084589, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008458c, 0x5)   calld(0x100764fc, -0xe095);           /* call 0x100764fc */
    II(0x10084591, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10084594, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x10084598, 0x2)   jmpd(0x100845a2, 0x8);                /* jmp 0x100845a2 */
l_0x1008459a:
    II(0x1008459a, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008459d, 0x5)   calld(0x10076bf8, -0xd9aa);           /* call 0x10076bf8 */
l_0x100845a2:
    II(0x100845a2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100845a4, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100845a7, 0x5)   calld(0x1013ad71, 0xb67c5);           /* call 0x1013ad71 */
    II(0x100845ac, 0x2)   test(al, al);                         /* test al, al */
    II(0x100845ae, 0x2)   jzd(0x100845ff, 0x4f);                /* jz 0x100845ff */
    II(0x100845b0, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100845b3, 0x5)   calld(0x10089acc, 0x5514);            /* call 0x10089acc */
    II(0x100845b8, 0x5)   calld(0x10089fc4, 0x5a07);            /* call 0x10089fc4 */
    II(0x100845bd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100845bf, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100845c2, 0x5)   calld(0x1007643c, -0xe18b);           /* call 0x1007643c */
    II(0x100845c7, 0x2)   jmpd(0x100845d1, 0x8);                /* jmp 0x100845d1 */
l_0x100845c9:
    II(0x100845c9, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100845cc, 0x5)   calld(0x10076bf8, -0xd9d9);           /* call 0x10076bf8 */
l_0x100845d1:
    II(0x100845d1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100845d3, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100845d6, 0x5)   calld(0x1013ad71, 0xb6796);           /* call 0x1013ad71 */
    II(0x100845db, 0x2)   test(al, al);                         /* test al, al */
    II(0x100845dd, 0x2)   jzd(0x100845fd, 0x1e);                /* jz 0x100845fd */
    II(0x100845df, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100845e2, 0x5)   calld(0x100763a0, -0xe247);           /* call 0x100763a0 */
    II(0x100845e7, 0x6)   mov(memw_a32(ds, eax + 0x1e), 0);     /* mov word [eax+0x1e], 0x0 */
    II(0x100845ed, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100845f0, 0x5)   calld(0x100763a0, -0xe255);           /* call 0x100763a0 */
    II(0x100845f5, 0x6)   mov(memw_a32(ds, eax + 0x20), 0);     /* mov word [eax+0x20], 0x0 */
    II(0x100845fb, 0x2)   jmpd(0x100845c9, -0x34);              /* jmp 0x100845c9 */
l_0x100845fd:
    II(0x100845fd, 0x2)   jmpd(0x1008459a, -0x65);              /* jmp 0x1008459a */
l_0x100845ff:
    II(0x100845ff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084601, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x10084604, 0x5)   calld(0x10075f6c, -0xe69d);           /* call 0x10075f6c */
    II(0x10084609, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008460b, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008460e, 0x5)   calld(0x10089044, 0x4a31);            /* call 0x10089044 */
l_0x10084613:
    II(0x10084613, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084616, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084619, 0x5)   calld(0x10076574, -0xe0aa);           /* call 0x10076574 */
    II(0x1008461e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084620, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10084623, 0x4)   mov(memw_a32(ds, edx + 0x1e), ax);    /* mov [edx+0x1e], ax */
    II(0x10084627, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008462a, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x1008462d, 0x5)   calld(0x10076574, -0xe0be);           /* call 0x10076574 */
    II(0x10084632, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084634, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x10084637, 0x4)   mov(memw_a32(ds, edx + 0x20), ax);    /* mov [edx+0x20], ax */
    II(0x1008463b, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x10084640, 0x5)   calld(sys_new, 0xe17bb);              /* call 0x10165e00 */
    II(0x10084645, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x10084648, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1008464b, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1008464e, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x10084652, 0x2)   jzd(0x10084690, 0x3c);                /* jz 0x10084690 */
    II(0x10084654, 0x5)   mov(eax, 0x100b0ebb);                 /* mov eax, 0x100b0ebb */
    II(0x10084659, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008465a, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x1008465d, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10084660, 0x5)   calld(0x10075e64, -0xe801);           /* call 0x10075e64 */
    II(0x10084665, 0x1)   pushd(eax);                           /* push eax */
    II(0x10084666, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1008466a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008466b, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1008466d, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10084670, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10084673, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084676, 0x5)   calld(0x100765d0, -0xe0ab);           /* call 0x100765d0 */
    II(0x1008467b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008467d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10084680, 0x5)   calld(0x100ac220, 0x27b9b);           /* call 0x100ac220 */
    II(0x10084685, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x10084688, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1008468b, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x1008468e, 0x2)   jmpd(0x10084696, 0x6);                /* jmp 0x10084696 */
l_0x10084690:
    II(0x10084690, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10084693, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
l_0x10084696:
    II(0x10084696, 0x3)   mov(edx, memd_a32(ss, ebp - 0x48));   /* mov edx, [ebp-0x48] */
    II(0x10084699, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1008469c, 0x5)   calld(0x1008a5f0, 0x5f4f);            /* call 0x1008a5f0 */
    II(0x100846a1, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100846a6, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100846a9, 0x5)   calld(0x1008a520, 0x5e72);            /* call 0x1008a520 */
    II(0x100846ae, 0x5)   calld(0x1008a6a4, 0x5ff1);            /* call 0x1008a6a4 */
    II(0x100846b3, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100846b6, 0x5)   calld(0x1008a57c, 0x5ec1);            /* call 0x1008a57c */
    II(0x100846bb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100846bd, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100846c2, 0x5)   calld(0x100a4d50, 0x20689);           /* call 0x100a4d50 */
    II(0x100846c7, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100846cb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100846cd, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100846d0, 0x5)   calld(0x10088d4c, 0x4677);            /* call 0x10088d4c */
    II(0x100846d5, 0x2)   jmpd(0x100846db, 0x4);                /* jmp 0x100846db */
l_0x100846d7:
    II(0x100846d7, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
l_0x100846db:
    II(0x100846db, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100846de, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100846e0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100846e1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100846e2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100846e3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100846e4, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100846e5, 0x1)   retd();                               /* ret */
FUNC_END

