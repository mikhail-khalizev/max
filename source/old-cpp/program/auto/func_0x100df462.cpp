FUNC_BEGIN(0x100df462, 0x338ff9e43d2fc496, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0xe6, 0x68, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0x7f, 0x11, 0, 0, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf8, 0xfe, 0xc7, 0x45, 0xf4, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x5, 0xf0, 0x2, 0, 0, 0xe8, 0x4c, 0x18, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x9a, 0x10, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0x40, 0x77, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xaf, 0xb8, 0x5, 0, 0x84, 0xc0, 0x74, 0x13, 0x8d, 0x45, 0xdc, 0xe8, 0xae, 0xf, 0, 0, 0xe8, 0x91, 0x18, 0, 0, 0x66, 0x3b, 0x45, 0xf4, 0x74, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xeb, 0xcd, 0xb8, 0x16, 0, 0, 0, 0xe8, 0x13, 0x69, 0x8, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x17, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0xd1, 0x48, 0x8, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xe4, 0x8b, 0x5d, 0xe4, 0x8d, 0x45, 0xdc, 0xe8, 0xee, 0xf, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x5, 0xf0, 0x2, 0, 0, 0xe8, 0x53, 0x17, 0, 0, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xd8, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xf3, 0xe, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xe7, 0xe, 0, 0, 0x8b, 0x45, 0xd8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100df462, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x100df467, 0x5)   calld(sys_check_available_stack_size, 0x868e6); /* call 0x10165d52 */
    II(0x100df46c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100df46d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100df46e, 0x1)   pushd(edx);                           /* push edx */
    II(0x100df46f, 0x1)   pushd(esi);                           /* push esi */
    II(0x100df470, 0x1)   pushd(edi);                           /* push edi */
    II(0x100df471, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100df472, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100df474, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x100df47a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100df47d, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100df481, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df484, 0x5)   calld(0x100e0608, 0x117f);            /* call 0x100e0608 */
    II(0x100df489, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100df48c, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100df490, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x1);    /* mov dword [ebp-0xc], 0x1 */
    II(0x100df497, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df49a, 0x5)   add(eax, 0x2f0);                      /* add eax, 0x2f0 */
    II(0x100df49f, 0x5)   calld(0x100e0cf0, 0x184c);            /* call 0x100e0cf0 */
    II(0x100df4a4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df4a6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df4a9, 0x5)   calld(0x100e0548, 0x109a);            /* call 0x100e0548 */
    II(0x100df4ae, 0x2)   jmpd(0x100df4b8, 0x8);                /* jmp 0x100df4b8 */
l_0x100df4b0:
    II(0x100df4b0, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df4b3, 0x5)   calld(0x10076bf8, -0x688c0);          /* call 0x10076bf8 */
l_0x100df4b8:
    II(0x100df4b8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df4ba, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df4bd, 0x5)   calld(0x1013ad71, 0x5b8af);           /* call 0x1013ad71 */
    II(0x100df4c2, 0x2)   test(al, al);                         /* test al, al */
    II(0x100df4c4, 0x2)   jzd(0x100df4d9, 0x13);                /* jz 0x100df4d9 */
    II(0x100df4c6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df4c9, 0x5)   calld(0x100e047c, 0xfae);             /* call 0x100e047c */
    II(0x100df4ce, 0x5)   calld(0x100e0d64, 0x1891);            /* call 0x100e0d64 */
    II(0x100df4d3, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100df4d7, 0x2)   jzd(0x100df4db, 0x2);                 /* jz 0x100df4db */
l_0x100df4d9:
    II(0x100df4d9, 0x2)   jmpd(0x100df4e3, 0x8);                /* jmp 0x100df4e3 */
l_0x100df4db:
    II(0x100df4db, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100df4de, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
    II(0x100df4e1, 0x2)   jmpd(0x100df4b0, -0x33);              /* jmp 0x100df4b0 */
l_0x100df4e3:
    II(0x100df4e3, 0x5)   mov(eax, 0x16);                       /* mov eax, 0x16 */
    II(0x100df4e8, 0x5)   calld(sys_new, 0x86913);              /* call 0x10165e00 */
    II(0x100df4ed, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100df4f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100df4f3, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100df4f6, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100df4fa, 0x2)   jzd(0x100df513, 0x17);                /* jz 0x100df513 */
    II(0x100df4fc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100df500, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100df503, 0x5)   calld(0x10163dd9, 0x848d1);           /* call 0x10163dd9 */
    II(0x100df508, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100df50b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100df50e, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100df511, 0x2)   jmpd(0x100df519, 0x6);                /* jmp 0x100df519 */
l_0x100df513:
    II(0x100df513, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100df516, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100df519:
    II(0x100df519, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100df51c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100df51f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x1c));   /* mov ebx, [ebp-0x1c] */
    II(0x100df522, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df525, 0x5)   calld(0x100e0518, 0xfee);             /* call 0x100e0518 */
    II(0x100df52a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100df52c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100df52f, 0x5)   add(eax, 0x2f0);                      /* add eax, 0x2f0 */
    II(0x100df534, 0x5)   calld(0x100e0c8c, 0x1753);            /* call 0x100e0c8c */
    II(0x100df539, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100df53c, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100df53f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100df541, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100df544, 0x5)   calld(0x100e043c, 0xef3);             /* call 0x100e043c */
    II(0x100df549, 0x2)   jmpd(0x100df555, 0xa);                /* jmp 0x100df555 */
//  II(0x100df54b, 0xa)   /* Недостижимый код. */
l_0x100df555:
    II(0x100df555, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100df558, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100df55a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100df55b, 0x1)   popd(edi);                            /* pop edi */
    II(0x100df55c, 0x1)   popd(esi);                            /* pop esi */
    II(0x100df55d, 0x1)   popd(edx);                            /* pop edx */
    II(0x100df55e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100df55f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100df560, 0x1)   retd();                               /* ret */
FUNC_END

