FUNC_BEGIN(0x101111dc, 0xfdea9ba2a5dcb5c7, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x6c, 0x4b, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x90, 0x40, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xc, 0x1, 0xd0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x90, 0x42, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x75, 0xf, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x4, 0x1, 0, 0, 0, 0xe9, 0x7c, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x90, 0x42, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x3a, 0x90, 0x40, 0x1, 0, 0, 0x72, 0x20, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x90, 0x40, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x80, 0x42, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xc2, 0xc, 0x39, 0xd0, 0x7c, 0x2, 0xeb, 0x2a, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x90, 0x42, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x80, 0x40, 0x1, 0, 0, 0x30, 0xe4, 0x29, 0xc2, 0x89, 0xd0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x6, 0xf0, 0xff, 0xff, 0x8a, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x88, 0x82, 0x42, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x4c, 0xf7, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xea, 0xf1, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101111dc, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x101111e1, 0x5)   calld(sys_check_available_stack_size, 0x54b6c); /* call 0x10165d52 */
    II(0x101111e6, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101111e7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101111e8, 0x1)   pushd(edx);                           /* push edx */
    II(0x101111e9, 0x1)   pushd(esi);                           /* push esi */
    II(0x101111ea, 0x1)   pushd(edi);                           /* push edi */
    II(0x101111eb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101111ec, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101111ee, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x101111f4, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x101111f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101111fa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101111fc, 0x6)   mov(dl, memb_a32(ds, eax + 0x140));   /* mov dl, [eax+0x140] */
    II(0x10111202, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111205, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x10111209, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011120b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011120e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111211, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10111213, 0x6)   mov(dl, memb_a32(ds, eax + 0x142));   /* mov dl, [eax+0x142] */
    II(0x10111219, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1011121d, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1011121f, 0x2)   jnzd(0x10111230, 0xf);                /* jnz 0x10111230 */
    II(0x10111221, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111224, 0x7)   mov(memd_a32(ds, eax + 0x4), 0x1);    /* mov dword [eax+0x4], 0x1 */
    II(0x1011122b, 0x5)   jmpd(0x101112ac, 0x7c);               /* jmp 0x101112ac */
l_0x10111230:
    II(0x10111230, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111233, 0x6)   mov(dl, memb_a32(ds, eax + 0x142));   /* mov dl, [eax+0x142] */
//    II(0x10111239, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011123c, 0x6)   cmp(dl, memb_a32(ds, eax + 0x140));   /* cmp dl, [eax+0x140] */
    II(0x10111242, 0x2)   jbd(0x10111264, 0x20);                /* jb 0x10111264 */
    II(0x10111244, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111247, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10111249, 0x6)   mov(dl, memb_a32(ds, eax + 0x140));   /* mov dl, [eax+0x140] */
    II(0x1011124f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111252, 0x6)   mov(al, memb_a32(ds, eax + 0x142));   /* mov al, [eax+0x142] */
    II(0x10111258, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011125d, 0x3)   add(edx, 0xc);                        /* add edx, 0xc */
    II(0x10111260, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10111262, 0x2)   jld(0x10111266, 0x2);                 /* jl 0x10111266 */
l_0x10111264:
    II(0x10111264, 0x2)   jmpd(0x10111290, 0x2a);               /* jmp 0x10111290 */
l_0x10111266:
    II(0x10111266, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1011126b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011126e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10111270, 0x6)   mov(dl, memb_a32(ds, eax + 0x142));   /* mov dl, [eax+0x142] */
    II(0x10111276, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10111279, 0x6)   mov(al, memb_a32(ds, eax + 0x140));   /* mov al, [eax+0x140] */
    II(0x1011127f, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10111281, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10111283, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10111285, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10111288, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011128b, 0x5)   calld(0x10110296, -0xffa);            /* call 0x10110296 */
l_0x10111290:
    II(0x10111290, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10111293, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10111296, 0x6)   mov(memb_a32(ds, edx + 0x142), al);   /* mov [edx+0x142], al */
    II(0x1011129c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011129f, 0x5)   calld(0x101109f0, -0x8b4);            /* call 0x101109f0 */
    II(0x101112a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101112a7, 0x5)   calld(0x10110496, -0xe16);            /* call 0x10110496 */
l_0x101112ac:
    II(0x101112ac, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101112ae, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101112af, 0x1)   popd(edi);                            /* pop edi */
    II(0x101112b0, 0x1)   popd(esi);                            /* pop esi */
    II(0x101112b1, 0x1)   popd(edx);                            /* pop edx */
    II(0x101112b2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101112b3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101112b4, 0x1)   retd();                               /* ret */
FUNC_END

