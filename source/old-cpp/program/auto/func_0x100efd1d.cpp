FUNC_BEGIN(0x100efd1d, 0x823c77808a935d8a, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x2b, 0x60, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0, 0x89, 0x45, 0xf4, 0x83, 0x45, 0xf8, 0x2, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0xf, 0x84, 0x8b, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8a, 0, 0x30, 0xe4, 0x1, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0xff, 0x45, 0xf8, 0x31, 0xc0, 0x8a, 0x2, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x75, 0x7, 0xc7, 0x45, 0xec, 0, 0x1, 0, 0, 0xff, 0x4d, 0xec, 0x66, 0x83, 0x7d, 0xec, 0xff, 0x74, 0x53, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x2, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xfc, 0xd3, 0xf8, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x1, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xfc, 0xd3, 0xf8, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x45, 0xf8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xfc, 0xd3, 0xf8, 0xf, 0xb6, 0xf0, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x98, 0x89, 0xd1, 0x89, 0xf2, 0xe8, 0x1c, 0xcf, 0x7, 0, 0x83, 0x45, 0xf8, 0x3, 0xeb, 0xa3, 0xe9, 0x67, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100efd1d, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100efd22, 0x5)   calld(sys_check_available_stack_size, 0x7602b); /* call 0x10165d52 */
    II(0x100efd27, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100efd28, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100efd29, 0x1)   pushd(esi);                           /* push esi */
    II(0x100efd2a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100efd2b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100efd2c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100efd2e, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100efd34, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100efd37, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100efd3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100efd3d, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100efd40, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100efd43, 0x4)   add(memd_a32(ss, ebp - 0x8), 0x2);    /* add dword [ebp-0x8], 0x2 */
    II(0x100efd47, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x100efd4e:
    II(0x100efd4e, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
    II(0x100efd51, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x100efd56, 0x6)   jzd(0x100efde7, 0x8b);                /* jz dword 0x100efde7 */
    II(0x100efd5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100efd5f, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
    II(0x100efd62, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100efd64, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100efd66, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x100efd69, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100efd6c, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
    II(0x100efd6f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100efd71, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x100efd73, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100efd76, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100efd7a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100efd7c, 0x2)   jnzd(0x100efd85, 0x7);                /* jnz 0x100efd85 */
    II(0x100efd7e, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x100); /* mov dword [ebp-0x14], 0x100 */
l_0x100efd85:
    II(0x100efd85, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
    II(0x100efd88, 0x5)   cmp(memw_a32(ss, ebp - 0x14), -0x1 /* 0xff */); /* cmp word [ebp-0x14], 0xff */
    II(0x100efd8d, 0x2)   jzd(0x100efde2, 0x53);                /* jz 0x100efde2 */
    II(0x100efd8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100efd92, 0x3)   mov(al, memb_a32(ds, eax + 0x2));     /* mov al, [eax+0x2] */
    II(0x100efd95, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100efd9a, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100efd9e, 0x2)   sar(eax, cl);                         /* sar eax, cl */
    II(0x100efda0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100efda2, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100efda4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100efda7, 0x3)   mov(al, memb_a32(ds, eax + 0x1));     /* mov al, [eax+0x1] */
    II(0x100efdaa, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100efdaf, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100efdb3, 0x2)   sar(eax, cl);                         /* sar eax, cl */
    II(0x100efdb5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100efdb7, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100efdb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100efdbc, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100efdbe, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100efdc3, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100efdc7, 0x2)   sar(eax, cl);                         /* sar eax, cl */
    II(0x100efdc9, 0x3)   movzx(esi, al);                       /* movzx esi, al */
    II(0x100efdcc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100efdcf, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x100efdd2, 0x1)   cwde();                               /* cwde */
    II(0x100efdd3, 0x2)   mov(ecx, edx);                        /* mov ecx, edx */
    II(0x100efdd5, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x100efdd7, 0x5)   calld(/* sys */ 0x1016ccf8, 0x7cf1c); /* call 0x1016ccf8 */
    II(0x100efddc, 0x4)   add(memd_a32(ss, ebp - 0x8), 0x3);    /* add dword [ebp-0x8], 0x3 */
    II(0x100efde0, 0x2)   jmpd(0x100efd85, -0x5d);              /* jmp 0x100efd85 */
l_0x100efde2:
    II(0x100efde2, 0x5)   jmpd(0x100efd4e, -0x99);              /* jmp 0x100efd4e */
l_0x100efde7:
    II(0x100efde7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100efde9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100efdea, 0x1)   popd(edi);                            /* pop edi */
    II(0x100efdeb, 0x1)   popd(esi);                            /* pop esi */
    II(0x100efdec, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100efded, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100efdee, 0x1)   retd();                               /* ret */
FUNC_END

