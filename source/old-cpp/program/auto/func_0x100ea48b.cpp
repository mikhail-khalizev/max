FUNC_BEGIN(0x100ea48b, 0xf969303a9a566f0, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0xbd, 0xb8, 0x7, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xf8, 0x8b, 0x45, 0x18, 0x3, 0x45, 0x1c, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x4, 0x89, 0x45, 0xe0, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0xf, 0xbf, 0x55, 0xe0, 0x8b, 0x45, 0xf4, 0x3b, 0x50, 0xc, 0xf, 0x8d, 0x1c, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0, 0x89, 0x45, 0xdc, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xf4, 0x3b, 0x50, 0x8, 0xf, 0x8d, 0xf6, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe0, 0xf, 0xbf, 0x45, 0xfc, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xdc, 0x1, 0xd0, 0x8b, 0x55, 0xf0, 0x1, 0xc2, 0x31, 0xc0, 0x8a, 0x2, 0x66, 0x89, 0x45, 0xe4, 0x8a, 0x45, 0xe4, 0x88, 0x45, 0xec, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0xe8, 0xc2, 0x25, 0x8, 0, 0x25, 0, 0x7c, 0, 0, 0xc1, 0xf8, 0xa, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0x1c, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0xf8, 0xf, 0xbf, 0x5d, 0x18, 0xf, 0xaf, 0xd3, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0xe8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xd0, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0xe8, 0x8c, 0x25, 0x8, 0, 0x25, 0xe0, 0x3, 0, 0, 0xc1, 0xf8, 0x5, 0xf, 0xbf, 0x5d, 0x1c, 0xf, 0xaf, 0xd8, 0xf, 0xbf, 0x55, 0x10, 0xf, 0xbf, 0x45, 0x18, 0xf, 0xaf, 0xd0, 0x1, 0xda, 0xf, 0xbf, 0x5d, 0xe8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xd4, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0xe8, 0x58, 0x25, 0x8, 0, 0x83, 0xe0, 0x1f, 0xf, 0xbf, 0x55, 0x1c, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0x14, 0xf, 0xbf, 0x5d, 0x18, 0xf, 0xaf, 0xc3, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0xe8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd0, 0xc1, 0xe0, 0xa, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xd4, 0xc1, 0xe0, 0x5, 0x9, 0xd0, 0xf, 0xbf, 0x55, 0xd8, 0x9, 0xc2, 0xf, 0xbf, 0x5d, 0xe0, 0xf, 0xbf, 0x45, 0xfc, 0xf, 0xaf, 0xc3, 0xf, 0xbf, 0x5d, 0xdc, 0x1, 0xd8, 0x3, 0x45, 0xf0, 0x8a, 0x92, 0x20, 0x5, 0x20, 0x10, 0x88, 0x10, 0xe9, 0xf4, 0xfe, 0xff, 0xff, 0xe9, 0xce, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x10, 0}))
    II(0x100ea48b, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x100ea490, 0x5)   calld(sys_check_available_stack_size, 0x7b8bd); /* call 0x10165d52 */
    II(0x100ea495, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ea496, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ea497, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ea498, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ea49a, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x100ea4a0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ea4a3, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100ea4a6, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x100ea4a9, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x100ea4ac, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x100ea4af, 0x3)   add(eax, memd_a32(ss, ebp + 0x1c));   /* add eax, [ebp+0x1c] */
    II(0x100ea4b2, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100ea4b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ea4b8, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100ea4bc, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100ea4bf, 0x2)   jmpd(0x100ea4c7, 0x6);                /* jmp 0x100ea4c7 */
l_0x100ea4c1:
    II(0x100ea4c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100ea4c4, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
l_0x100ea4c7:
    II(0x100ea4c7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100ea4cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ea4ce, 0x3)   cmp(edx, memd_a32(ds, eax + 0xc));    /* cmp edx, [eax+0xc] */
    II(0x100ea4d1, 0x6)   jged(0x100ea5f3, 0x11c);              /* jge dword 0x100ea5f3 */
    II(0x100ea4d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ea4da, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100ea4dd, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100ea4e0, 0x2)   jmpd(0x100ea4e8, 0x6);                /* jmp 0x100ea4e8 */
l_0x100ea4e2:
    II(0x100ea4e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100ea4e5, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x100ea4e8:
    II(0x100ea4e8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100ea4ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ea4ef, 0x3)   cmp(edx, memd_a32(ds, eax + 0x8));    /* cmp edx, [eax+0x8] */
    II(0x100ea4f2, 0x6)   jged(0x100ea5ee, 0xf6);               /* jge dword 0x100ea5ee */
    II(0x100ea4f8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100ea4fc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ea500, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100ea503, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100ea507, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100ea509, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100ea50c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ea50e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ea510, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x100ea512, 0x4)   mov(memw_a32(ss, ebp - 0x1c), ax);    /* mov [ebp-0x1c], ax */
    II(0x100ea516, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x100ea519, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100ea51c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ea51e, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100ea521, 0x5)   calld(/* sys */ 0x1016cae8, 0x825c2); /* call 0x1016cae8 */
    II(0x100ea526, 0x5)   and_(eax, 0x7c00);                    /* and eax, 0x7c00 */
    II(0x100ea52b, 0x3)   sar(eax, 0xa);                        /* sar eax, 0xa */
    II(0x100ea52e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ea530, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x1c)); /* movsx eax, word [ebp+0x1c] */
    II(0x100ea534, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100ea537, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100ea53b, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x18)); /* movsx ebx, word [ebp+0x18] */
    II(0x100ea53f, 0x3)   imul(edx, ebx);                       /* imul edx, ebx */
    II(0x100ea542, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ea544, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100ea548, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100ea54a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100ea54d, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100ea54f, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100ea552, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ea554, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100ea557, 0x5)   calld(/* sys */ 0x1016cae8, 0x8258c); /* call 0x1016cae8 */
    II(0x100ea55c, 0x5)   and_(eax, 0x3e0);                     /* and eax, 0x3e0 */
    II(0x100ea561, 0x3)   sar(eax, 0x5);                        /* sar eax, 0x5 */
    II(0x100ea564, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x1c)); /* movsx ebx, word [ebp+0x1c] */
    II(0x100ea568, 0x3)   imul(ebx, eax);                       /* imul ebx, eax */
    II(0x100ea56b, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x10)); /* movsx edx, word [ebp+0x10] */
    II(0x100ea56f, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100ea573, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100ea576, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x100ea578, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100ea57c, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100ea57e, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100ea581, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100ea583, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100ea586, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ea588, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100ea58b, 0x5)   calld(/* sys */ 0x1016cae8, 0x82558); /* call 0x1016cae8 */
    II(0x100ea590, 0x3)   and_(eax, 0x1f);                      /* and eax, 0x1f */
    II(0x100ea593, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x1c)); /* movsx edx, word [ebp+0x1c] */
    II(0x100ea597, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100ea59a, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100ea59e, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x18)); /* movsx ebx, word [ebp+0x18] */
    II(0x100ea5a2, 0x3)   imul(eax, ebx);                       /* imul eax, ebx */
    II(0x100ea5a5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ea5a7, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x100ea5ab, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100ea5ad, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100ea5b0, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100ea5b2, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100ea5b5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100ea5b9, 0x3)   shl(eax, 0xa);                        /* shl eax, 0xa */
    II(0x100ea5bc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ea5be, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100ea5c2, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x100ea5c5, 0x2)   or_(eax, edx);                        /* or eax, edx */
    II(0x100ea5c7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100ea5cb, 0x2)   or_(edx, eax);                        /* or edx, eax */
    II(0x100ea5cd, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x20)); /* movsx ebx, word [ebp-0x20] */
    II(0x100ea5d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ea5d5, 0x3)   imul(eax, ebx);                       /* imul eax, ebx */
    II(0x100ea5d8, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x24)); /* movsx ebx, word [ebp-0x24] */
    II(0x100ea5dc, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100ea5de, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100ea5e1, 0x6)   mov(dl, memb_a32(ds, edx + 0x10200520)); /* mov dl, [edx+0x10200520] */
    II(0x100ea5e7, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x100ea5e9, 0x5)   jmpd(0x100ea4e2, -0x10c);             /* jmp 0x100ea4e2 */
l_0x100ea5ee:
    II(0x100ea5ee, 0x5)   jmpd(0x100ea4c1, -0x132);             /* jmp 0x100ea4c1 */
l_0x100ea5f3:
    II(0x100ea5f3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ea5f5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ea5f6, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ea5f7, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ea5f8, 0x3)   retd(0x10);                           /* ret 0x10 */
FUNC_END

