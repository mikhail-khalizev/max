FUNC_BEGIN(0x1011ff4c, 0x78d9b481ea5afe64, 0x20, ({0x68, 0x88, 0, 0, 0, 0xe8, 0xfc, 0x5d, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x6c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x6, 0, 0xf, 0x85, 0x11, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x7a, 0xa7, 0xf6, 0xff, 0x8d, 0x4d, 0xc4, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xfd, 0xd9, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0x9, 0xc1, 0xf9, 0x18, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x8, 0xc1, 0xfb, 0x18, 0x8b, 0x45, 0xf8, 0xe8, 0x54, 0xa7, 0xf6, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x7, 0xe8, 0x1f, 0x66, 0xf5, 0xff, 0xe8, 0x72, 0xef, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0xd, 0xff, 0x74, 0x11, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x7, 0xe8, 0xa9, 0x65, 0xf5, 0xff, 0xf6, 0x40, 0x13, 0x1, 0x75, 0x5, 0xe9, 0x76, 0x1, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xbc, 0xe8, 0xb, 0xbc, 0xf6, 0xff, 0x89, 0x45, 0xb8, 0x80, 0x65, 0xf0, 0xfe, 0xb8, 0xe1, 0, 0, 0, 0xe8, 0xd, 0x5e, 0x4, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x3b, 0xe8, 0x69, 0xac, 0xf6, 0xff, 0x98, 0x50, 0xb9, 0xff, 0xff, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x7, 0xe8, 0x5b, 0x65, 0xf5, 0xff, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0xb, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xb4, 0xe8, 0x5, 0x92, 0x2, 0, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x89, 0x45, 0xa8, 0xeb, 0x6, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa8, 0x8b, 0x55, 0xa8, 0x8d, 0x45, 0xa4, 0xe8, 0x5e, 0x66, 0xf5, 0xff, 0xb9, 0x3, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x45, 0xbc, 0xe8, 0x98, 0xa6, 0xf6, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa4, 0xe8, 0x66, 0x65, 0xf5, 0xff, 0xe8, 0xb9, 0xee, 0xff, 0xff, 0xc7, 0x45, 0xa0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xa0, 0xff, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xaa, 0, 0, 0, 0xc7, 0x45, 0x9c, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0x9c, 0xff, 0x45, 0x9c, 0x8b, 0x45, 0x9c, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x86, 0, 0, 0, 0xf, 0xbf, 0x55, 0xa0, 0x8d, 0x45, 0xbc, 0xe8, 0x6f, 0xa6, 0xf6, 0xff, 0xf, 0xbf, 0x55, 0x9c, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x17, 0xf, 0xbf, 0x55, 0xa0, 0x8b, 0x45, 0xf8, 0xe8, 0x52, 0xa6, 0xf6, 0xff, 0xf, 0xbf, 0x55, 0x9c, 0x1, 0xd0, 0x80, 0x8, 0x40, 0xeb, 0x4d, 0xf, 0xbf, 0x55, 0xa0, 0x8b, 0x45, 0xf8, 0xe8, 0x3b, 0xa6, 0xf6, 0xff, 0xf, 0xbf, 0x55, 0x9c, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x30, 0xf, 0xbf, 0x55, 0xa0, 0x8d, 0x45, 0xbc, 0xe8, 0x1e, 0xa6, 0xf6, 0xff, 0xf, 0xbf, 0x55, 0x9c, 0x1, 0xd0, 0x8a, 0, 0xb4, 0x3, 0xf6, 0xe4, 0xc, 0x80, 0x88, 0xc3, 0xf, 0xbf, 0x55, 0xa0, 0x8b, 0x45, 0xf8, 0xe8, 0x2, 0xa6, 0xf6, 0xff, 0xf, 0xbf, 0x55, 0x9c, 0x1, 0xd0, 0x88, 0x18, 0xe9, 0x64, 0xff, 0xff, 0xff, 0xe9, 0x40, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa4, 0xe8, 0xea, 0x5d, 0xf5, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0x53, 0xbb, 0xf6, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x7, 0xe8, 0x1d, 0x64, 0xf5, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x7, 0xe8, 0xc, 0x64, 0xf5, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x98, 0xe8, 0x36, 0x69, 0xf5, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0xcf, 0x1, 0xf7, 0xff, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x6, 0x1, 0x8b, 0x45, 0xfc, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x8b, 0xa5, 0xf6, 0xff, 0x1, 0xd8, 0xf6, 0, 0x20, 0x74, 0x1d, 0x8b, 0x45, 0xfc, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x6e, 0xa5, 0xf6, 0xff, 0x1, 0xd8, 0xf6, 0, 0x80, 0x74, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0x94, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0x94, 0, 0x8a, 0x45, 0x94, 0x88, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011ff4c, 0x5)   pushd(0x88);                          /* push dword 0x88 */
    II(0x1011ff51, 0x5)   calld(sys_check_available_stack_size, 0x45dfc); /* call 0x10165d52 */
    II(0x1011ff56, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011ff57, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011ff58, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011ff59, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011ff5a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011ff5b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011ff5d, 0x6)   sub(esp, 0x6c);                       /* sub esp, 0x6c */
    II(0x1011ff63, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011ff66, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1011ff69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ff6c, 0x4)   cmp(memb_a32(ds, eax + 0x6), 0);      /* cmp byte [eax+0x6], 0x0 */
    II(0x1011ff70, 0x6)   jnzd(0x10120187, 0x211);              /* jnz dword 0x10120187 */
    II(0x1011ff76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ff79, 0x5)   calld(0x1008a6f8, -0x95886);          /* call 0x1008a6f8 */
    II(0x1011ff7e, 0x3)   lea(ecx, ebp - 0x3c);                 /* lea ecx, [ebp-0x3c] */
    II(0x1011ff81, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011ff83, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1011ff85, 0x5)   calld(0x1011d987, -0x2603);           /* call 0x1011d987 */
    II(0x1011ff8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ff8d, 0x3)   mov(ecx, memd_a32(ds, eax + 0x9));    /* mov ecx, [eax+0x9] */
    II(0x1011ff90, 0x3)   sar(ecx, 0x18);                       /* sar ecx, 0x18 */
    II(0x1011ff93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ff96, 0x3)   mov(ebx, memd_a32(ds, eax + 0x8));    /* mov ebx, [eax+0x8] */
    II(0x1011ff99, 0x3)   sar(ebx, 0x18);                       /* sar ebx, 0x18 */
    II(0x1011ff9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ff9f, 0x5)   calld(0x1008a6f8, -0x958ac);          /* call 0x1008a6f8 */
    II(0x1011ffa4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011ffa6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ffa9, 0x3)   add(eax, 0x7);                        /* add eax, 0x7 */
    II(0x1011ffac, 0x5)   calld(0x100765d0, -0xa99e1);          /* call 0x100765d0 */
    II(0x1011ffb1, 0x5)   calld(0x1011ef28, -0x108e);           /* call 0x1011ef28 */
    II(0x1011ffb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ffb9, 0x5)   cmp(memw_a32(ds, eax + 0xd), -0x1 /* 0xff */); /* cmp word [eax+0xd], 0xff */
    II(0x1011ffbe, 0x2)   jzd(0x1011ffd1, 0x11);                /* jz 0x1011ffd1 */
    II(0x1011ffc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ffc3, 0x3)   add(eax, 0x7);                        /* add eax, 0x7 */
    II(0x1011ffc6, 0x5)   calld(0x10076574, -0xa9a57);          /* call 0x10076574 */
    II(0x1011ffcb, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x1011ffcf, 0x2)   jnzd(0x1011ffd6, 0x5);                /* jnz 0x1011ffd6 */
l_0x1011ffd1:
    II(0x1011ffd1, 0x5)   jmpd(0x1012014c, 0x176);              /* jmp 0x1012014c */
l_0x1011ffd6:
    II(0x1011ffd6, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x1011ffda, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1011ffdd, 0x5)   calld(0x1008bbed, -0x943f5);          /* call 0x1008bbed */
    II(0x1011ffe2, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x1011ffe5, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x1011ffe9, 0x5)   mov(eax, 0xe1);                       /* mov eax, 0xe1 */
    II(0x1011ffee, 0x5)   calld(sys_new, 0x45e0d);              /* call 0x10165e00 */
    II(0x1011fff3, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x1011fff6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1011fff9, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1011fffc, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x10120000, 0x2)   jzd(0x1012003d, 0x3b);                /* jz 0x1012003d */
    II(0x10120002, 0x5)   calld(0x1008ac70, -0x95397);          /* call 0x1008ac70 */
    II(0x10120007, 0x1)   cwde();                               /* cwde */
    II(0x10120008, 0x1)   pushd(eax);                           /* push eax */
    II(0x10120009, 0x5)   mov(ecx, 0xffff);                     /* mov ecx, 0xffff */
    II(0x1012000e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10120011, 0x3)   add(eax, 0x7);                        /* add eax, 0x7 */
    II(0x10120014, 0x5)   calld(0x10076574, -0xa9aa5);          /* call 0x10076574 */
    II(0x10120019, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1012001c, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1012001e, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10120021, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10120024, 0x3)   mov(edx, memd_a32(ds, eax + 0xb));    /* mov edx, [eax+0xb] */
    II(0x10120027, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012002a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1012002d, 0x5)   calld(0x10149237, 0x29205);           /* call 0x10149237 */
    II(0x10120032, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x10120035, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x10120038, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x1012003b, 0x2)   jmpd(0x10120043, 0x6);                /* jmp 0x10120043 */
l_0x1012003d:
    II(0x1012003d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x10120040, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
l_0x10120043:
    II(0x10120043, 0x3)   mov(edx, memd_a32(ss, ebp - 0x58));   /* mov edx, [ebp-0x58] */
    II(0x10120046, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10120049, 0x5)   calld(0x100766ac, -0xa99a2);          /* call 0x100766ac */
    II(0x1012004e, 0x5)   mov(ecx, 0x3);                        /* mov ecx, 0x3 */
    II(0x10120053, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10120058, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1012005b, 0x5)   calld(0x1008a6f8, -0x95968);          /* call 0x1008a6f8 */
    II(0x10120060, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10120062, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x10120065, 0x5)   calld(0x100765d0, -0xa9a9a);          /* call 0x100765d0 */
    II(0x1012006a, 0x5)   calld(0x1011ef28, -0x1147);           /* call 0x1011ef28 */
    II(0x1012006f, 0x7)   mov(memd_a32(ss, ebp - 0x60), 0);     /* mov dword [ebp-0x60], 0x0 */
    II(0x10120076, 0x2)   jmpd(0x1012007e, 0x6);                /* jmp 0x1012007e */
l_0x10120078:
    II(0x10120078, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1012007b, 0x3)   inc(memd_a32(ss, ebp - 0x60));        /* inc dword [ebp-0x60] */
l_0x1012007e:
    II(0x1012007e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x10120081, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x10120088, 0x6)   jged(0x10120138, 0xaa);               /* jge dword 0x10120138 */
    II(0x1012008e, 0x7)   mov(memd_a32(ss, ebp - 0x64), 0);     /* mov dword [ebp-0x64], 0x0 */
    II(0x10120095, 0x2)   jmpd(0x1012009d, 0x6);                /* jmp 0x1012009d */
l_0x10120097:
    II(0x10120097, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x1012009a, 0x3)   inc(memd_a32(ss, ebp - 0x64));        /* inc dword [ebp-0x64] */
l_0x1012009d:
    II(0x1012009d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x101200a0, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x101200a7, 0x6)   jged(0x10120133, 0x86);               /* jge dword 0x10120133 */
    II(0x101200ad, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x101200b1, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x101200b4, 0x5)   calld(0x1008a728, -0x95991);          /* call 0x1008a728 */
    II(0x101200b9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x64)); /* movsx edx, word [ebp-0x64] */
    II(0x101200bd, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101200bf, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x101200c1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101200c6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101200c8, 0x2)   jnzd(0x101200e1, 0x17);               /* jnz 0x101200e1 */
    II(0x101200ca, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x101200ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101200d1, 0x5)   calld(0x1008a728, -0x959ae);          /* call 0x1008a728 */
    II(0x101200d6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x64)); /* movsx edx, word [ebp-0x64] */
    II(0x101200da, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101200dc, 0x3)   or_(memb_a32(ds, eax), 0x40);         /* or byte [eax], 0x40 */
    II(0x101200df, 0x2)   jmpd(0x1012012e, 0x4d);               /* jmp 0x1012012e */
l_0x101200e1:
    II(0x101200e1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x101200e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101200e8, 0x5)   calld(0x1008a728, -0x959c5);          /* call 0x1008a728 */
    II(0x101200ed, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x64)); /* movsx edx, word [ebp-0x64] */
    II(0x101200f1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101200f3, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x101200f5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101200fa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101200fc, 0x2)   jnzd(0x1012012e, 0x30);               /* jnz 0x1012012e */
    II(0x101200fe, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x10120102, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x10120105, 0x5)   calld(0x1008a728, -0x959e2);          /* call 0x1008a728 */
    II(0x1012010a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x64)); /* movsx edx, word [ebp-0x64] */
    II(0x1012010e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10120110, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10120112, 0x2)   mov(ah, 0x3);                         /* mov ah, 0x3 */
    II(0x10120114, 0x2)   mul(ah);                              /* mul ah */
    II(0x10120116, 0x2)   or_(al, 0x80);                        /* or al, 0x80 */
    II(0x10120118, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1012011a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x1012011e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10120121, 0x5)   calld(0x1008a728, -0x959fe);          /* call 0x1008a728 */
    II(0x10120126, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x64)); /* movsx edx, word [ebp-0x64] */
    II(0x1012012a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012012c, 0x2)   mov(memb_a32(ds, eax), bl);           /* mov [eax], bl */
l_0x1012012e:
    II(0x1012012e, 0x5)   jmpd(0x10120097, -0x9c);              /* jmp 0x10120097 */
l_0x10120133:
    II(0x10120133, 0x5)   jmpd(0x10120078, -0xc0);              /* jmp 0x10120078 */
l_0x10120138:
    II(0x10120138, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012013a, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x1012013d, 0x5)   calld(0x10075f2c, -0xaa216);          /* call 0x10075f2c */
    II(0x10120142, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10120144, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x10120147, 0x5)   calld(0x1008bc9f, -0x944ad);          /* call 0x1008bc9f */
l_0x1012014c:
    II(0x1012014c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012014f, 0x3)   add(eax, 0x7);                        /* add eax, 0x7 */
    II(0x10120152, 0x5)   calld(0x10076574, -0xa9be3);          /* call 0x10076574 */
    II(0x10120157, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1012015a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012015d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10120160, 0x3)   add(eax, 0x7);                        /* add eax, 0x7 */
    II(0x10120163, 0x5)   calld(0x10076574, -0xa9bf4);          /* call 0x10076574 */
    II(0x10120168, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1012016b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012016e, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x10120171, 0x5)   calld(0x10076aac, -0xa96ca);          /* call 0x10076aac */
    II(0x10120176, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10120178, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1012017b, 0x5)   calld(0x1009034f, -0x8fe31);          /* call 0x1009034f */
    II(0x10120180, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10120183, 0x4)   mov(memb_a32(ds, eax + 0x6), 0x1);    /* mov byte [eax+0x6], 0x1 */
l_0x10120187:
    II(0x10120187, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012018a, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x1012018c, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012018f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10120192, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x10120195, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10120198, 0x5)   calld(0x1008a728, -0x95a75);          /* call 0x1008a728 */
    II(0x1012019d, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1012019f, 0x3)   test(memb_a32(ds, eax), 0x20);        /* test byte [eax], 0x20 */
    II(0x101201a2, 0x2)   jzd(0x101201c1, 0x1d);                /* jz 0x101201c1 */
    II(0x101201a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101201a7, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x101201a9, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101201ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101201af, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x101201b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101201b5, 0x5)   calld(0x1008a728, -0x95a92);          /* call 0x1008a728 */
    II(0x101201ba, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x101201bc, 0x3)   test(memb_a32(ds, eax), 0x80);        /* test byte [eax], 0x80 */
    II(0x101201bf, 0x2)   jzd(0x101201c3, 0x2);                 /* jz 0x101201c3 */
l_0x101201c1:
    II(0x101201c1, 0x2)   jmpd(0x101201c9, 0x6);                /* jmp 0x101201c9 */
l_0x101201c3:
    II(0x101201c3, 0x4)   mov(memb_a32(ss, ebp - 0x6c), 0x1);   /* mov byte [ebp-0x6c], 0x1 */
    II(0x101201c7, 0x2)   jmpd(0x101201cd, 0x4);                /* jmp 0x101201cd */
l_0x101201c9:
    II(0x101201c9, 0x4)   mov(memb_a32(ss, ebp - 0x6c), 0);     /* mov byte [ebp-0x6c], 0x0 */
l_0x101201cd:
    II(0x101201cd, 0x3)   mov(al, memb_a32(ss, ebp - 0x6c));    /* mov al, [ebp-0x6c] */
    II(0x101201d0, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
//    II(0x101201d3, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x101201d6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101201d8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101201d9, 0x1)   popd(edi);                            /* pop edi */
    II(0x101201da, 0x1)   popd(esi);                            /* pop esi */
    II(0x101201db, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101201dc, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101201dd, 0x1)   retd();                               /* ret */
FUNC_END

