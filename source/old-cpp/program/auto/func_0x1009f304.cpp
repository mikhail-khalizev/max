FUNC_BEGIN(0x1009f304, 0xd213ed35d683e98c, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x44, 0x6a, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xb9, 0, 0x22, 0, 0, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0x96, 0x33, 0, 0, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xa1, 0x77, 0xfd, 0xff, 0x83, 0xe8, 0x13, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x90, 0x73, 0xfd, 0xff, 0x83, 0xe8, 0x17, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1f, 0xe8, 0x79, 0x77, 0xfd, 0xff, 0x83, 0xe8, 0x1f, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x68, 0x77, 0xfd, 0xff, 0x83, 0xe8, 0x23, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0xd8, 0x48, 0x1b, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x8a, 0x72, 0xfd, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x13, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x15, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x1b, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x63, 0x6f, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0xd9, 0x70, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xf, 0x78, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x7e, 0xb9, 0x9, 0, 0x84, 0xc0, 0x74, 0x5f, 0x8d, 0x45, 0xf4, 0xe8, 0xa1, 0x6f, 0xfd, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xf4, 0xe8, 0x87, 0x6f, 0xfd, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0x32, 0x8d, 0x45, 0xf4, 0xe8, 0x76, 0x6f, 0xfd, 0xff, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x13, 0x8d, 0x45, 0xf4, 0xe8, 0x63, 0x6f, 0xfd, 0xff, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x15, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x1a, 0x6b, 0xfd, 0xff, 0xeb, 0xc, 0xeb, 0x8b, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xc, 0x6b, 0xfd, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1009f304, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1009f309, 0x5)   calld(sys_check_available_stack_size, 0xc6a44); /* call 0x10165d52 */
    II(0x1009f30e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009f30f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009f310, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009f311, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009f312, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009f313, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009f315, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x1009f31b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1009f31e, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1009f321, 0x5)   mov(ecx, 0x2200);                     /* mov ecx, 0x2200 */
    II(0x1009f326, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1009f328, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009f32b, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1009f32e, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1009f330, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1009f333, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f336, 0x5)   calld(0x100a26d1, 0x3396);            /* call 0x100a26d1 */
    II(0x1009f33b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1009f33e, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009f341, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1009f344, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f347, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009f34a, 0x5)   calld(my_ctor_0x101b4184, -0x2885f);  /* call 0x10076af0 */
    II(0x1009f34f, 0x3)   sub(eax, 0x13);                       /* sub eax, 0x13 */
    II(0x1009f352, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x1009f355, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f358, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f35b, 0x5)   calld(my_ctor_0x101b38f8, -0x28c70);  /* call 0x100766f0 */
    II(0x1009f360, 0x3)   sub(eax, 0x17);                       /* sub eax, 0x17 */
    II(0x1009f363, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1009f366, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009f369, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1009f36c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f36f, 0x3)   add(eax, 0x1f);                       /* add eax, 0x1f */
    II(0x1009f372, 0x5)   calld(my_ctor_0x101b4184, -0x28887);  /* call 0x10076af0 */
    II(0x1009f377, 0x3)   sub(eax, 0x1f);                       /* sub eax, 0x1f */
    II(0x1009f37a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x1009f37d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f380, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x1009f383, 0x5)   calld(my_ctor_0x101b4184, -0x28898);  /* call 0x10076af0 */
    II(0x1009f388, 0x3)   sub(eax, 0x23);                       /* sub eax, 0x23 */
    II(0x1009f38b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x1009f38e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f391, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b48d8); /* mov dword [eax+0x2], 0x101b48d8 */
    II(0x1009f398, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009f39b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f39e, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009f3a1, 0x5)   calld(0x10076630, -0x28d76);          /* call 0x10076630 */
    II(0x1009f3a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009f3a9, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1009f3ad, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f3b0, 0x4)   mov(memw_a32(ds, edx + 0x13), ax);    /* mov [edx+0x13], ax */
    II(0x1009f3b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009f3b7, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1009f3bb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009f3be, 0x4)   mov(memw_a32(ds, edx + 0x15), ax);    /* mov [edx+0x15], ax */
    II(0x1009f3c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f3c5, 0x6)   mov(memw_a32(ds, eax + 0x1b), 0);     /* mov word [eax+0x1b], 0x0 */
    II(0x1009f3cb, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1009f3d0, 0x5)   calld(0x10076338, -0x2909d);          /* call 0x10076338 */
    II(0x1009f3d5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009f3d7, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009f3da, 0x5)   calld(0x100764b8, -0x28f27);          /* call 0x100764b8 */
    II(0x1009f3df, 0x2)   jmpd(0x1009f3e9, 0x8);                /* jmp 0x1009f3e9 */
l_0x1009f3e1:
    II(0x1009f3e1, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009f3e4, 0x5)   calld(0x10076bf8, -0x287f1);          /* call 0x10076bf8 */
l_0x1009f3e9:
    II(0x1009f3e9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009f3eb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009f3ee, 0x5)   calld(0x1013ad71, 0x9b97e);           /* call 0x1013ad71 */
    II(0x1009f3f3, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009f3f5, 0x2)   jzd(0x1009f456, 0x5f);                /* jz 0x1009f456 */
    II(0x1009f3f7, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009f3fa, 0x5)   calld(0x100763a0, -0x2905f);          /* call 0x100763a0 */
    II(0x1009f3ff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009f401, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1009f404, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f407, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1009f40a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009f40d, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1009f40f, 0x2)   jnzd(0x1009f420, 0xf);                /* jnz 0x1009f420 */
    II(0x1009f411, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009f414, 0x5)   calld(0x100763a0, -0x29079);          /* call 0x100763a0 */
    II(0x1009f419, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x1009f41e, 0x2)   jzd(0x1009f422, 0x2);                 /* jz 0x1009f422 */
l_0x1009f420:
    II(0x1009f420, 0x2)   jmpd(0x1009f454, 0x32);               /* jmp 0x1009f454 */
l_0x1009f422:
    II(0x1009f422, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009f425, 0x5)   calld(0x100763a0, -0x2908a);          /* call 0x100763a0 */
    II(0x1009f42a, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
    II(0x1009f42e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f431, 0x4)   mov(memw_a32(ds, eax + 0x13), dx);    /* mov [eax+0x13], dx */
    II(0x1009f435, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009f438, 0x5)   calld(0x100763a0, -0x2909d);          /* call 0x100763a0 */
    II(0x1009f43d, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x1009f441, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f444, 0x4)   mov(memw_a32(ds, eax + 0x15), dx);    /* mov [eax+0x15], dx */
    II(0x1009f448, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009f44a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009f44d, 0x5)   calld(0x10075f6c, -0x294e6);          /* call 0x10075f6c */
    II(0x1009f452, 0x2)   jmpd(0x1009f460, 0xc);                /* jmp 0x1009f460 */
l_0x1009f454:
    II(0x1009f454, 0x2)   jmpd(0x1009f3e1, -0x75);              /* jmp 0x1009f3e1 */
l_0x1009f456:
    II(0x1009f456, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009f458, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1009f45b, 0x5)   calld(0x10075f6c, -0x294f4);          /* call 0x10075f6c */
l_0x1009f460:
    II(0x1009f460, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009f463, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1009f466, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1009f469, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009f46b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009f46c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009f46d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009f46e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009f46f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009f470, 0x1)   retd();                               /* ret */
FUNC_END

