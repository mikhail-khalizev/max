FUNC_BEGIN(0x100b9c44, 0x67f99f78a4bd4065, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x4, 0xc1, 0xa, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x8f, 0xc8, 0xfb, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x12, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x9, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xe0, 0x1, 0, 0, 0xbb, 0x8c, 0x12, 0x1a, 0x10, 0xba, 0x99, 0x12, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xe2, 0xc0, 0xa, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0x7d, 0xc6, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x77, 0xc7, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x29, 0xcf, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x98, 0x10, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0xb1, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xb7, 0xc6, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x74, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0xa9, 0xc6, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x1b, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0x99, 0xc6, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x1e, 0x75, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0x8b, 0xc6, 0xfb, 0xff, 0x80, 0x78, 0x3e, 0x1, 0x74, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xe8, 0xe8, 0x7b, 0xc6, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0x62, 0xc6, 0xfb, 0xff, 0x80, 0x78, 0x4e, 0, 0x75, 0x2, 0xeb, 0x15, 0x8d, 0x45, 0xe8, 0xe8, 0x52, 0xc6, 0xfb, 0xff, 0x8a, 0x40, 0x60, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x11, 0x8d, 0x45, 0xe8, 0xe8, 0x3b, 0xc6, 0xfb, 0xff, 0xe8, 0x42, 0x89, 0x9, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x1d, 0x31, 0xdb, 0x8d, 0x45, 0xe8, 0xe8, 0x26, 0xc6, 0xfb, 0xff, 0x8b, 0x50, 0x3a, 0xc1, 0xfa, 0x18, 0x8d, 0x45, 0xe8, 0xe8, 0x80, 0xc6, 0xfb, 0xff, 0xe8, 0xc6, 0x92, 0xa, 0, 0xe9, 0x35, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd0, 0xc1, 0xfb, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b9c44, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100b9c49, 0x5)   calld(sys_check_available_stack_size, 0xac104); /* call 0x10165d52 */
    II(0x100b9c4e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b9c4f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b9c50, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b9c51, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b9c52, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b9c53, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b9c55, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100b9c5b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b9c5e, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b9c61, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100b9c65, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9c68, 0x5)   calld(0x100764fc, -0x43771);          /* call 0x100764fc */
    II(0x100b9c6d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b9c70, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100b9c74, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b9c76, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100b9c7b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b9c7d, 0x2)   jnzd(0x100b9c91, 0x12);               /* jnz 0x100b9c91 */
    II(0x100b9c7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9c82, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100b9c85, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b9c87, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100b9c8d, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b9c8f, 0x2)   jnzd(0x100b9c9a, 0x9);                /* jnz 0x100b9c9a */
l_0x100b9c91:
    II(0x100b9c91, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100b9c98, 0x2)   jmpd(0x100b9cb3, 0x19);               /* jmp 0x100b9cb3 */
l_0x100b9c9a:
    II(0x100b9c9a, 0x5)   mov(ecx, 0x1e0);                      /* mov ecx, 0x1e0 */
    II(0x100b9c9f, 0x5)   mov(ebx, 0x101a128c);                 /* mov ebx, 0x101a128c */ /* "ai_playr.cpp" */
    II(0x100b9ca4, 0x5)   mov(edx, 0x101a1299);                 /* mov edx, 0x101a1299 */ /* "PlayMode != TURN_BASED || TeamTurnID == team" */
    II(0x100b9ca9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b9cab, 0x5)   calld(sys_assert, 0xac0e2);           /* call 0x10165d92 */
    II(0x100b9cb0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x100b9cb3:
    II(0x100b9cb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b9cb6, 0x5)   calld(0x10076338, -0x43983);          /* call 0x10076338 */
    II(0x100b9cbb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b9cbd, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9cc0, 0x5)   calld(0x1007643c, -0x43889);          /* call 0x1007643c */
    II(0x100b9cc5, 0x2)   jmpd(0x100b9ccf, 0x8);                /* jmp 0x100b9ccf */
l_0x100b9cc7:
    II(0x100b9cc7, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9cca, 0x5)   calld(0x10076bf8, -0x430d7);          /* call 0x10076bf8 */
l_0x100b9ccf:
    II(0x100b9ccf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b9cd1, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9cd4, 0x5)   calld(0x1013ad71, 0x81098);           /* call 0x1013ad71 */
    II(0x100b9cd9, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b9cdb, 0x6)   jzd(0x100b9d92, 0xb1);                /* jz dword 0x100b9d92 */
    II(0x100b9ce1, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9ce4, 0x5)   calld(0x100763a0, -0x43949);          /* call 0x100763a0 */
    II(0x100b9ce9, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x100b9ced, 0x2)   jzd(0x100b9cfd, 0xe);                 /* jz 0x100b9cfd */
    II(0x100b9cef, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9cf2, 0x5)   calld(0x100763a0, -0x43957);          /* call 0x100763a0 */
    II(0x100b9cf7, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1b);  /* cmp byte [eax+0x3d], 0x1b */
    II(0x100b9cfb, 0x2)   jnzd(0x100b9cff, 0x2);                /* jnz 0x100b9cff */
l_0x100b9cfd:
    II(0x100b9cfd, 0x2)   jmpd(0x100b9d0d, 0xe);                /* jmp 0x100b9d0d */
l_0x100b9cff:
    II(0x100b9cff, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9d02, 0x5)   calld(0x100763a0, -0x43967);          /* call 0x100763a0 */
    II(0x100b9d07, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x100b9d0b, 0x2)   jnzd(0x100b9d1b, 0xe);                /* jnz 0x100b9d1b */
l_0x100b9d0d:
    II(0x100b9d0d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9d10, 0x5)   calld(0x100763a0, -0x43975);          /* call 0x100763a0 */
    II(0x100b9d15, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100b9d19, 0x2)   jzd(0x100b9d1d, 0x2);                 /* jz 0x100b9d1d */
l_0x100b9d1b:
    II(0x100b9d1b, 0x2)   jmpd(0x100b9d34, 0x17);               /* jmp 0x100b9d34 */
l_0x100b9d1d:
    II(0x100b9d1d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9d20, 0x5)   calld(0x100763a0, -0x43985);          /* call 0x100763a0 */
    II(0x100b9d25, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b9d27, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100b9d2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9d2d, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100b9d30, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b9d32, 0x2)   jzd(0x100b9d36, 0x2);                 /* jz 0x100b9d36 */
l_0x100b9d34:
    II(0x100b9d34, 0x2)   jmpd(0x100b9d44, 0xe);                /* jmp 0x100b9d44 */
l_0x100b9d36:
    II(0x100b9d36, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9d39, 0x5)   calld(0x100763a0, -0x4399e);          /* call 0x100763a0 */
    II(0x100b9d3e, 0x4)   cmp(memb_a32(ds, eax + 0x4e), 0);     /* cmp byte [eax+0x4e], 0x0 */
    II(0x100b9d42, 0x2)   jnzd(0x100b9d46, 0x2);                /* jnz 0x100b9d46 */
l_0x100b9d44:
    II(0x100b9d44, 0x2)   jmpd(0x100b9d5b, 0x15);               /* jmp 0x100b9d5b */
l_0x100b9d46:
    II(0x100b9d46, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9d49, 0x5)   calld(0x100763a0, -0x439ae);          /* call 0x100763a0 */
    II(0x100b9d4e, 0x3)   mov(al, memb_a32(ds, eax + 0x60));    /* mov al, [eax+0x60] */
    II(0x100b9d51, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b9d56, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100b9d59, 0x2)   jzd(0x100b9d5d, 0x2);                 /* jz 0x100b9d5d */
l_0x100b9d5b:
    II(0x100b9d5b, 0x2)   jmpd(0x100b9d6e, 0x11);               /* jmp 0x100b9d6e */
l_0x100b9d5d:
    II(0x100b9d5d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9d60, 0x5)   calld(0x100763a0, -0x439c5);          /* call 0x100763a0 */
    II(0x100b9d65, 0x5)   calld(0x101526ac, 0x98942);           /* call 0x101526ac */
    II(0x100b9d6a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b9d6c, 0x2)   jnzd(0x100b9d70, 0x2);                /* jnz 0x100b9d70 */
l_0x100b9d6e:
    II(0x100b9d6e, 0x2)   jmpd(0x100b9d8d, 0x1d);               /* jmp 0x100b9d8d */
l_0x100b9d70:
    II(0x100b9d70, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b9d72, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9d75, 0x5)   calld(0x100763a0, -0x439da);          /* call 0x100763a0 */
    II(0x100b9d7a, 0x3)   mov(edx, memd_a32(ds, eax + 0x3a));   /* mov edx, [eax+0x3a] */
    II(0x100b9d7d, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x100b9d80, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9d83, 0x5)   calld(0x10076408, -0x43980);          /* call 0x10076408 */
    II(0x100b9d88, 0x5)   calld(0x10163053, 0xa92c6);           /* call 0x10163053 */
l_0x100b9d8d:
    II(0x100b9d8d, 0x5)   jmpd(0x100b9cc7, -0xcb);              /* jmp 0x100b9cc7 */
l_0x100b9d92:
    II(0x100b9d92, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b9d94, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b9d97, 0x5)   calld(0x10075f6c, -0x43e30);          /* call 0x10075f6c */
    II(0x100b9d9c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b9d9e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b9d9f, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b9da0, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b9da1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b9da2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b9da3, 0x1)   retd();                               /* ret */
FUNC_END

