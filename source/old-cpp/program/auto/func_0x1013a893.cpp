FUNC_BEGIN(0x1013a893, 0x7db66b9cbe58208e, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xb5, 0xb4, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0x9c, 0xc4, 0xf3, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x7c, 0xe, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0, 0xf, 0xbf, 0x55, 0xfc, 0x39, 0xc2, 0x7c, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0xbd, 0, 0, 0, 0xbb, 0xf4, 0xcb, 0x1a, 0x10, 0xba, 0x1, 0xcc, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x98, 0xb4, 0x2, 0, 0x89, 0x45, 0xe8, 0x8b, 0x55, 0xf8, 0xf, 0xbf, 0x12, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xfc, 0x39, 0xc2, 0x7e, 0x31, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x6, 0x8d, 0x45, 0xf0, 0xe8, 0x4e, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0, 0x2b, 0x45, 0xfc, 0x48, 0x89, 0x45, 0xfc, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0xa, 0x8d, 0x45, 0xf0, 0xe8, 0x7f, 0xc2, 0xf3, 0xff, 0xeb, 0xec, 0xeb, 0x22, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x2, 0x8d, 0x45, 0xf0, 0xe8, 0x1d, 0x1, 0, 0, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0xa, 0x8d, 0x45, 0xf0, 0xe8, 0x93, 0xc2, 0xf3, 0xff, 0xeb, 0xec, 0x8d, 0x45, 0xf0, 0xe8, 0xf9, 0xc2, 0xf3, 0xff, 0x89, 0x45, 0xe4, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xa8, 0xb4, 0xf3, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x9c, 0xb4, 0xf3, 0xff, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1013a893, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x1013a898, 0x5)   calld(sys_check_available_stack_size, 0x2b4b5); /* call 0x10165d52 */
    II(0x1013a89d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013a89e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013a89f, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013a8a0, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013a8a1, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013a8a2, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013a8a4, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x1013a8aa, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1013a8ad, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1013a8b0, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1013a8b4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1013a8b7, 0x5)   calld(0x10076d58, -0xc3b64);          /* call 0x10076d58 */
    II(0x1013a8bc, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1013a8bf, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1013a8c3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013a8c7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1013a8c9, 0x2)   jld(0x1013a8d9, 0xe);                 /* jl 0x1013a8d9 */
    II(0x1013a8cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013a8ce, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x1013a8d1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013a8d5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1013a8d7, 0x2)   jld(0x1013a8db, 0x2);                 /* jl 0x1013a8db */
l_0x1013a8d9:
    II(0x1013a8d9, 0x2)   jmpd(0x1013a8e4, 0x9);                /* jmp 0x1013a8e4 */
l_0x1013a8db:
    II(0x1013a8db, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1013a8e2, 0x2)   jmpd(0x1013a8fd, 0x19);               /* jmp 0x1013a8fd */
l_0x1013a8e4:
    II(0x1013a8e4, 0x5)   mov(ecx, 0xbd);                       /* mov ecx, 0xbd */
    II(0x1013a8e9, 0x5)   mov(ebx, 0x101acbf4);                 /* mov ebx, 0x101acbf4 */ /* "smartlst.cpp" */
    II(0x1013a8ee, 0x5)   mov(edx, 0x101acc01);                 /* mov edx, 0x101acc01 */ /* "index >= 0 && index < count" */
    II(0x1013a8f3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1013a8f5, 0x5)   calld(sys_assert, 0x2b498);           /* call 0x10165d92 */
    II(0x1013a8fa, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x1013a8fd:
    II(0x1013a8fd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013a900, 0x3)   movsx(edx, memw_a32(ds, edx));        /* movsx edx, word [edx] */
    II(0x1013a903, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013a905, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013a908, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1013a90a, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1013a90c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1013a910, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1013a912, 0x2)   jled(0x1013a945, 0x31);               /* jle 0x1013a945 */
    II(0x1013a914, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013a917, 0x3)   add(edx, 0x6);                        /* add edx, 0x6 */
    II(0x1013a91a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1013a91d, 0x5)   calld(0x1013aa70, 0x14e);             /* call 0x1013aa70 */
    II(0x1013a922, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1013a925, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1013a928, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x1013a92b, 0x1)   dec(eax);                             /* dec eax */
    II(0x1013a92c, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x1013a92f:
    II(0x1013a92f, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x1013a932, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x1013a937, 0x2)   jzd(0x1013a943, 0xa);                 /* jz 0x1013a943 */
    II(0x1013a939, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1013a93c, 0x5)   calld(0x10076bc0, -0xc3d81);          /* call 0x10076bc0 */
    II(0x1013a941, 0x2)   jmpd(0x1013a92f, -0x14);              /* jmp 0x1013a92f */
l_0x1013a943:
    II(0x1013a943, 0x2)   jmpd(0x1013a967, 0x22);               /* jmp 0x1013a967 */
l_0x1013a945:
    II(0x1013a945, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1013a948, 0x3)   add(edx, 0x2);                        /* add edx, 0x2 */
    II(0x1013a94b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1013a94e, 0x5)   calld(0x1013aa70, 0x11d);             /* call 0x1013aa70 */
l_0x1013a953:
    II(0x1013a953, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x1013a956, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x1013a95b, 0x2)   jzd(0x1013a967, 0xa);                 /* jz 0x1013a967 */
    II(0x1013a95d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1013a960, 0x5)   calld(0x10076bf8, -0xc3d6d);          /* call 0x10076bf8 */
    II(0x1013a965, 0x2)   jmpd(0x1013a953, -0x14);              /* jmp 0x1013a953 */
l_0x1013a967:
    II(0x1013a967, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1013a96a, 0x5)   calld(0x10076c68, -0xc3d07);          /* call 0x10076c68 */
    II(0x1013a96f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1013a972, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1013a974, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1013a977, 0x5)   calld(0x10075e24, -0xc4b58);          /* call 0x10075e24 */
    II(0x1013a97c, 0x2)   jmpd(0x1013a988, 0xa);                /* jmp 0x1013a988 */
//  II(0x1013a97e, 0xa)   /* Недостижимый код. */
l_0x1013a988:
    II(0x1013a988, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1013a98b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013a98d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013a98e, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013a98f, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013a990, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013a991, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013a992, 0x1)   retd();                               /* ret */
FUNC_END

