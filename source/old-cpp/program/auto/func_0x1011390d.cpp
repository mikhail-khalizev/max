FUNC_BEGIN(0x1011390d, 0x7405a09dba5a0f20, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x3b, 0x24, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x1a, 0x69, 0x5, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x12, 0xf2, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x8, 0, 0x74, 0x12, 0x8b, 0x45, 0xfc, 0xe8, 0x92, 0xf3, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xbe, 0xf8, 0xff, 0xff, 0xeb, 0x2c, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0xc, 0, 0x74, 0x12, 0x8b, 0x45, 0xfc, 0xe8, 0x76, 0xf3, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xa2, 0xf8, 0xff, 0xff, 0xeb, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x80, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xa4, 0xfb, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0xc, 0, 0x74, 0x1e, 0x8b, 0x45, 0xfc, 0x8b, 0x90, 0xd3, 0x5, 0, 0, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x80, 0xe, 0x5, 0, 0, 0x25, 0xff, 0, 0, 0, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x59, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x90, 0xe, 0x5, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x90, 0xd5, 0x5, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x50, 0xe, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0x15, 0x94, 0x9e, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x16, 0x3, 0x5, 0x90, 0x9e, 0x1b, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x18, 0x8b, 0x5b, 0xe, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xd3, 0x5, 0, 0, 0xc1, 0xf8, 0x10, 0xe8, 0xd9, 0x8d, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x55, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x12, 0xe8, 0x6b, 0x3a, 0x5, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x8, 0, 0x75, 0xe, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0xc, 0, 0xf, 0x84, 0x91, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x4, 0x7d, 0x79, 0x8a, 0x45, 0xf4, 0x4, 0xd, 0x88, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf4, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x74, 0x56, 0xba, 0x1, 0, 0, 0, 0xf, 0xbe, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0xf6, 0xc0, 0xfb, 0xff, 0xe8, 0x62, 0x17, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x79, 0x17, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbe, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0xdb, 0xbf, 0xfb, 0xff, 0xe8, 0x1e, 0x17, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbe, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0x4a, 0xc0, 0xfb, 0xff, 0xe9, 0x78, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1011390d, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10113912, 0x5)   calld(sys_check_available_stack_size, 0x5243b); /* call 0x10165d52 */
    II(0x10113917, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10113918, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10113919, 0x1)   pushd(edx);                           /* push edx */
    II(0x1011391a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011391b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011391c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011391d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011391f, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10113925, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10113928, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1011392d, 0x5)   calld(/* sys */ 0x1016a24c, 0x5691a); /* call 0x1016a24c */
    II(0x10113932, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113935, 0x5)   calld(0x10112b4c, -0xdee);            /* call 0x10112b4c */
    II(0x1011393a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011393d, 0x4)   cmp(memb_a32(ds, eax + 0x8), 0);      /* cmp byte [eax+0x8], 0x0 */
    II(0x10113941, 0x2)   jzd(0x10113955, 0x12);                /* jz 0x10113955 */
    II(0x10113943, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113946, 0x5)   calld(0x10112cdd, -0xc6e);            /* call 0x10112cdd */
    II(0x1011394b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011394e, 0x5)   calld(0x10113211, -0x742);            /* call 0x10113211 */
    II(0x10113953, 0x2)   jmpd(0x10113981, 0x2c);               /* jmp 0x10113981 */
l_0x10113955:
    II(0x10113955, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113958, 0x5)   cmp(memw_a32(ds, eax + 0xc), 0);      /* cmp word [eax+0xc], 0x0 */
    II(0x1011395d, 0x2)   jzd(0x10113971, 0x12);                /* jz 0x10113971 */
    II(0x1011395f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113962, 0x5)   calld(0x10112cdd, -0xc8a);            /* call 0x10112cdd */
    II(0x10113967, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011396a, 0x5)   calld(0x10113211, -0x75e);            /* call 0x10113211 */
    II(0x1011396f, 0x2)   jmpd(0x10113981, 0x10);               /* jmp 0x10113981 */
l_0x10113971:
    II(0x10113971, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113974, 0x5)   calld(0x101137f9, -0x180);            /* call 0x101137f9 */
    II(0x10113979, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011397c, 0x5)   calld(0x10113525, -0x45c);            /* call 0x10113525 */
l_0x10113981:
    II(0x10113981, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113984, 0x5)   cmp(memw_a32(ds, eax + 0xc), 0);      /* cmp word [eax+0xc], 0x0 */
    II(0x10113989, 0x2)   jzd(0x101139a9, 0x1e);                /* jz 0x101139a9 */
    II(0x1011398b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011398e, 0x6)   mov(edx, memd_a32(ds, eax + 0x5d3));  /* mov edx, [eax+0x5d3] */
    II(0x10113994, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10113997, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011399a, 0x6)   mov(al, memb_a32(ds, eax + 0x50e));   /* mov al, [eax+0x50e] */
    II(0x101139a0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101139a5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x101139a7, 0x2)   jnzd(0x101139ab, 0x2);                /* jnz 0x101139ab */
l_0x101139a9:
    II(0x101139a9, 0x2)   jmpd(0x10113a04, 0x59);               /* jmp 0x10113a04 */
l_0x101139ab:
    II(0x101139ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101139ae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101139b0, 0x6)   mov(dl, memb_a32(ds, eax + 0x50e));   /* mov dl, [eax+0x50e] */
    II(0x101139b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101139b9, 0x7)   mov(memw_a32(ds, eax + 0x5d5), dx);   /* mov [eax+0x5d5], dx */
    II(0x101139c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101139c3, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101139c5, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x101139c8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101139cb, 0x7)   imul(edx, memd_a32(ds, 0x101b9e94));  /* imul edx, [0x101b9e94] */
    II(0x101139d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101139d5, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101139d7, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101139da, 0x6)   add(eax, memd_a32(ds, 0x101b9e90));   /* add eax, [0x101b9e90] */
    II(0x101139e0, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101139e2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101139e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101139e8, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x101139ea, 0x3)   mov(ebx, memd_a32(ds, ebx + 0xe));    /* mov ebx, [ebx+0xe] */
    II(0x101139ed, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101139f0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101139f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101139f6, 0x6)   mov(eax, memd_a32(ds, eax + 0x5d3));  /* mov eax, [eax+0x5d3] */
    II(0x101139fc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101139ff, 0x5)   calld(0x1010c7dd, -0x7227);           /* call 0x1010c7dd */
l_0x10113a04:
    II(0x10113a04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113a07, 0x5)   calld(0x10113761, -0x2ab);            /* call 0x10113761 */
    II(0x10113a0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113a0f, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10113a11, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10113a14, 0x5)   calld(sys_display_draw_0, 0x53a6b);   /* call 0x10167484 */
    II(0x10113a19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113a1c, 0x4)   cmp(memb_a32(ds, eax + 0x8), 0);      /* cmp byte [eax+0x8], 0x0 */
    II(0x10113a20, 0x2)   jnzd(0x10113a30, 0xe);                /* jnz 0x10113a30 */
    II(0x10113a22, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113a25, 0x5)   cmp(memw_a32(ds, eax + 0xc), 0);      /* cmp word [eax+0xc], 0x0 */
    II(0x10113a2a, 0x6)   jzd(0x10113ac1, 0x91);                /* jz dword 0x10113ac1 */
l_0x10113a30:
    II(0x10113a30, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10113a37, 0x2)   jmpd(0x10113a3f, 0x6);                /* jmp 0x10113a3f */
l_0x10113a39:
    II(0x10113a39, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10113a3c, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x10113a3f:
    II(0x10113a3f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10113a43, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10113a46, 0x2)   jged(0x10113ac1, 0x79);               /* jge 0x10113ac1 */
    II(0x10113a48, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10113a4b, 0x2)   add(al, 0xd);                         /* add al, 0xd */
    II(0x10113a4d, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x10113a50, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10113a54, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10113a56, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113a59, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x10113a5f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10113a62, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113a64, 0x2)   jzd(0x10113abc, 0x56);                /* jz 0x10113abc */
    II(0x10113a66, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10113a6b, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x10)); /* movsx eax, byte [ebp-0x10] */
    II(0x10113a6f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113a72, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113a75, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10113a78, 0x5)   calld(0x100cfb73, -0x43f0a);          /* call 0x100cfb73 */
    II(0x10113a7d, 0x5)   calld(0x100d51e4, -0x3e89e);          /* call 0x100d51e4 */
    II(0x10113a82, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10113a84, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x10113a86, 0x5)   calld(0x100d5204, -0x3e887);          /* call 0x100d5204 */
    II(0x10113a8b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10113a8d, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10113a8f, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x10)); /* movsx eax, byte [ebp-0x10] */
    II(0x10113a93, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113a96, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113a99, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10113a9c, 0x5)   calld(0x100cfa7c, -0x44025);          /* call 0x100cfa7c */
    II(0x10113aa1, 0x5)   calld(0x100d51c4, -0x3e8e2);          /* call 0x100d51c4 */
    II(0x10113aa6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10113aa8, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10113aaa, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x10)); /* movsx eax, byte [ebp-0x10] */
    II(0x10113aae, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113ab1, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113ab4, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10113ab7, 0x5)   calld(0x100cfb06, -0x43fb6);          /* call 0x100cfb06 */
l_0x10113abc:
    II(0x10113abc, 0x5)   jmpd(0x10113a39, -0x88);              /* jmp 0x10113a39 */
l_0x10113ac1:
    II(0x10113ac1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10113ac3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10113ac4, 0x1)   popd(edi);                            /* pop edi */
    II(0x10113ac5, 0x1)   popd(esi);                            /* pop esi */
    II(0x10113ac6, 0x1)   popd(edx);                            /* pop edx */
    II(0x10113ac7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10113ac8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10113ac9, 0x1)   retd();                               /* ret */
FUNC_END

