FUNC_BEGIN(0x101026f8, 0x50c8d77dcf7cb2ab, 0x20, ({0x68, 0x14, 0x1, 0, 0, 0xe8, 0x50, 0x36, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xf0, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe8, 0x8b, 0x45, 0xe8, 0x8a, 0x40, 0x28, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xec, 0x8b, 0x45, 0xe8, 0x8a, 0x40, 0x28, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x74, 0x9, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x18, 0x22, 0, 0, 0xbb, 0xf3, 0x2b, 0x1a, 0x10, 0xba, 0xff, 0x2b, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x1a, 0x36, 0x6, 0, 0x89, 0x45, 0xe4, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0x81, 0xde, 0xfd, 0xff, 0x89, 0x45, 0xdc, 0x80, 0x65, 0xf0, 0xfe, 0x8b, 0x45, 0xe8, 0x8b, 0x80, 0xfa, 0, 0, 0, 0xe8, 0x7c, 0x4, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xa2, 0xdd, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe0, 0xe8, 0x48, 0x44, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xb7, 0x85, 0x3, 0, 0x84, 0xc0, 0xf, 0x84, 0xae, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x1a, 0xdd, 0xfd, 0xff, 0xe8, 0xdd, 0xd, 0xf7, 0xff, 0xb9, 0x1, 0, 0, 0, 0x31, 0xdb, 0x8a, 0x5d, 0xec, 0x8d, 0x45, 0xe0, 0xe8, 0x77, 0x2, 0, 0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x13, 0xea, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x1d, 0x66, 0x83, 0x7d, 0xfc, 0, 0x75, 0x16, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x33, 0xdc, 0xfd, 0xff, 0xe9, 0xf9, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0xce, 0xdc, 0xfd, 0xff, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0xe3, 0xf9, 0xf9, 0xff, 0x84, 0xc0, 0x74, 0x6, 0x80, 0x7d, 0xec, 0, 0x75, 0x2, 0xeb, 0x3e, 0x8d, 0x45, 0xe0, 0xe8, 0x47, 0xdc, 0xfd, 0xff, 0xe8, 0x2a, 0xe5, 0xfd, 0xff, 0x98, 0x50, 0xb8, 0x1f, 0x2c, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x10, 0xff, 0xff, 0xff, 0x50, 0xe8, 0xb3, 0x36, 0x6, 0, 0x83, 0xc4, 0xc, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x10, 0xff, 0xff, 0xff, 0xe8, 0xb8, 0x34, 0x1, 0, 0xe9, 0x38, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xf8, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xa7, 0x6, 0xf7, 0xff, 0xf, 0xbf, 0x55, 0xf8, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x99, 0x6, 0xf7, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc6, 0x80, 0x91, 0xa4, 0x1c, 0x10, 0x1, 0x31, 0xc0, 0xe8, 0x5a, 0xe6, 0xff, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x10, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xf8, 0xb8, 0x6, 0, 0, 0, 0xe8, 0xda, 0x5f, 0x2, 0, 0xe8, 0x50, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0xb, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0xe, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0x31, 0xc0, 0xe8, 0xb8, 0x26, 0xff, 0xff, 0xc7, 0x45, 0xd8, 0x1, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x41, 0xdb, 0xfd, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x35, 0xdb, 0xfd, 0xff, 0x8b, 0x45, 0xd8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101026f8, 0x5)   pushd(0x114);                         /* push dword 0x114 */
    II(0x101026fd, 0x5)   calld(sys_check_available_stack_size, 0x63650); /* call 0x10165d52 */
    II(0x10102702, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10102703, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10102704, 0x1)   pushd(esi);                           /* push esi */
    II(0x10102705, 0x1)   pushd(edi);                           /* push edi */
    II(0x10102706, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10102707, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10102709, 0x6)   sub(esp, 0xf0);                       /* sub esp, 0xf0 */
    II(0x1010270f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10102712, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10102715, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10102719, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1010271f, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x10102724, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10102726, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x10102729, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1010272c, 0x3)   mov(al, memb_a32(ds, eax + 0x28));    /* mov al, [eax+0x28] */
    II(0x1010272f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10102734, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10102737, 0x2)   jnzd(0x1010273f, 0x6);                /* jnz 0x1010273f */
    II(0x10102739, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x1010273d, 0x2)   jmpd(0x10102743, 0x4);                /* jmp 0x10102743 */
l_0x1010273f:
    II(0x1010273f, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
l_0x10102743:
    II(0x10102743, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10102746, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10102749, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1010274c, 0x3)   mov(al, memb_a32(ds, eax + 0x28));    /* mov al, [eax+0x28] */
    II(0x1010274f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10102754, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10102757, 0x2)   jzd(0x10102762, 0x9);                 /* jz 0x10102762 */
    II(0x10102759, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x10102760, 0x2)   jmpd(0x1010277b, 0x19);               /* jmp 0x1010277b */
l_0x10102762:
    II(0x10102762, 0x5)   mov(ecx, 0x2218);                     /* mov ecx, 0x2218 */
    II(0x10102767, 0x5)   mov(ebx, 0x101a2bf3);                 /* mov ebx, 0x101a2bf3 */ /* "gamemgr.cpp" */
    II(0x1010276c, 0x5)   mov(edx, 0x101a2bff);                 /* mov edx, 0x101a2bff */ /* "CTinfo->TeamType != REMOTE_TEAM" */
    II(0x10102771, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10102773, 0x5)   calld(sys_assert, 0x6361a);           /* call 0x10165d92 */
    II(0x10102778, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1010277b:
    II(0x1010277b, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x1010277f, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10102782, 0x5)   calld(0x100e0608, -0x2217f);          /* call 0x100e0608 */
    II(0x10102787, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1010278a, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x1010278e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10102791, 0x6)   mov(eax, memd_a32(ds, eax + 0xfa));   /* mov eax, [eax+0xfa] */
    II(0x10102797, 0x5)   calld(0x10102c18, 0x47c);             /* call 0x10102c18 */
    II(0x1010279c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010279e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101027a1, 0x5)   calld(0x100e0548, -0x2225e);          /* call 0x100e0548 */
    II(0x101027a6, 0x2)   jmpd(0x101027b0, 0x8);                /* jmp 0x101027b0 */
l_0x101027a8:
    II(0x101027a8, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101027ab, 0x5)   calld(0x10076bf8, -0x8bbb8);          /* call 0x10076bf8 */
l_0x101027b0:
    II(0x101027b0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101027b2, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101027b5, 0x5)   calld(0x1013ad71, 0x385b7);           /* call 0x1013ad71 */
    II(0x101027ba, 0x2)   test(al, al);                         /* test al, al */
    II(0x101027bc, 0x6)   jzd(0x10102870, 0xae);                /* jz dword 0x10102870 */
    II(0x101027c2, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101027c5, 0x5)   calld(0x100e04e4, -0x222e6);          /* call 0x100e04e4 */
    II(0x101027ca, 0x5)   calld(0x100735ac, -0x8f223);          /* call 0x100735ac */
    II(0x101027cf, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x101027d4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101027d6, 0x3)   mov(bl, memb_a32(ss, ebp - 0x14));    /* mov bl, [ebp-0x14] */
    II(0x101027d9, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101027dc, 0x5)   calld(0x10102a58, 0x277);             /* call 0x10102a58 */
    II(0x101027e1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101027e3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101027e7, 0x5)   calld(0x101011ff, -0x15ed);           /* call 0x101011ff */
    II(0x101027ec, 0x1)   cwde();                               /* cwde */
    II(0x101027ed, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101027ef, 0x2)   jnzd(0x1010280e, 0x1d);               /* jnz 0x1010280e */
    II(0x101027f1, 0x5)   cmp(memw_a32(ss, ebp - 0x4), 0);      /* cmp word [ebp-0x4], 0x0 */
    II(0x101027f6, 0x2)   jnzd(0x1010280e, 0x16);               /* jnz 0x1010280e */
    II(0x101027f8, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x101027ff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10102801, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10102804, 0x5)   calld(0x100e043c, -0x223cd);          /* call 0x100e043c */
    II(0x10102809, 0x5)   jmpd(0x10102907, 0xf9);               /* jmp 0x10102907 */
l_0x1010280e:
    II(0x1010280e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10102811, 0x5)   calld(0x100e04e4, -0x22332);          /* call 0x100e04e4 */
    II(0x10102816, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10102818, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010281c, 0x5)   calld(0x100a2204, -0x6061d);          /* call 0x100a2204 */
    II(0x10102821, 0x2)   test(al, al);                         /* test al, al */
    II(0x10102823, 0x2)   jzd(0x1010282b, 0x6);                 /* jz 0x1010282b */
    II(0x10102825, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x10102829, 0x2)   jnzd(0x1010282d, 0x2);                /* jnz 0x1010282d */
l_0x1010282b:
    II(0x1010282b, 0x2)   jmpd(0x1010286b, 0x3e);               /* jmp 0x1010286b */
l_0x1010282d:
    II(0x1010282d, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10102830, 0x5)   calld(0x100e047c, -0x223b9);          /* call 0x100e047c */
    II(0x10102835, 0x5)   calld(0x100e0d64, -0x21ad6);          /* call 0x100e0d64 */
    II(0x1010283a, 0x1)   cwde();                               /* cwde */
    II(0x1010283b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010283c, 0x5)   mov(eax, 0x101a2c1f);                 /* mov eax, 0x101a2c1f */ /* "Factories in complex %i re-started." */
    II(0x10102841, 0x1)   pushd(eax);                           /* push eax */
    II(0x10102842, 0x6)   lea(eax, ebp - 0xf0);                 /* lea eax, [ebp+0xffffff10] */
    II(0x10102848, 0x1)   pushd(eax);                           /* push eax */
    II(0x10102849, 0x5)   calld(sys_sprintf, 0x636b3);          /* call 0x10165f01 */
    II(0x1010284e, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x10102851, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10102856, 0x1)   pushd(eax);                           /* push eax */
    II(0x10102857, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10102859, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010285b, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10102860, 0x6)   lea(eax, ebp - 0xf0);                 /* lea eax, [ebp+0xffffff10] */
    II(0x10102866, 0x5)   calld(0x10115d23, 0x134b8);           /* call 0x10115d23 */
l_0x1010286b:
    II(0x1010286b, 0x5)   jmpd(0x101027a8, -0xc8);              /* jmp 0x101027a8 */
l_0x10102870:
    II(0x10102870, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10102874, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x10102879, 0x5)   calld(0x10072f25, -0x8f959);          /* call 0x10072f25 */
    II(0x1010287e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10102882, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x10102887, 0x5)   calld(0x10072f25, -0x8f967);          /* call 0x10072f25 */
    II(0x1010288c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10102890, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10102896, 0x7)   mov(memb_a32(ds, eax + 0x101ca491), 0x1); /* mov byte [eax+0x101ca491], 0x1 */
    II(0x1010289d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010289f, 0x5)   calld(0x10100efe, -0x19a6);           /* call 0x10100efe */
    II(0x101028a4, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x101028ab, 0x2)   jzd(0x101028bd, 0x10);                /* jz 0x101028bd */
    II(0x101028ad, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101028af, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x101028b3, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x101028b8, 0x5)   calld(0x10128897, 0x25fda);           /* call 0x10128897 */
l_0x101028bd:
    II(0x101028bd, 0x5)   calld(0x10102912, 0x50);              /* call 0x10102912 */
    II(0x101028c2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x101028c6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101028c8, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x101028cd, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x101028cf, 0x2)   jzd(0x101028dc, 0xb);                 /* jz 0x101028dc */
    II(0x101028d1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101028d3, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x101028d8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101028da, 0x2)   jnzd(0x101028ea, 0xe);                /* jnz 0x101028ea */
l_0x101028dc:
    II(0x101028dc, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x9);   /* mov byte [0x101c391e], 0x9 */
    II(0x101028e3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101028e5, 0x5)   calld(0x100f4fa2, -0xd948);           /* call 0x100f4fa2 */
l_0x101028ea:
    II(0x101028ea, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0x1);   /* mov dword [ebp-0x28], 0x1 */
    II(0x101028f1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101028f3, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x101028f6, 0x5)   calld(0x100e043c, -0x224bf);          /* call 0x100e043c */
    II(0x101028fb, 0x2)   jmpd(0x10102907, 0xa);                /* jmp 0x10102907 */
//  II(0x101028fd, 0xa)   /* Недостижимый код. */
l_0x10102907:
    II(0x10102907, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010290a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010290c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010290d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010290e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010290f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10102910, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10102911, 0x1)   retd();                               /* ret */
FUNC_END

