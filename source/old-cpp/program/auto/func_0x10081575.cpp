FUNC_BEGIN(0x10081575, 0x13446717762f532b, 0x20, ({0x68, 0xb8, 0, 0, 0, 0xe8, 0xd3, 0x47, 0xe, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x88, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x2a, 0xe8, 0x34, 0x88, 0, 0, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0xc, 0x8b, 0x45, 0xf4, 0xe8, 0xbb, 0x89, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x83, 0x7d, 0xf4, 0, 0x75, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x20, 0xe8, 0xbd, 0x55, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x10, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x20, 0xe8, 0x81, 0x86, 0, 0, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0xc, 0x8b, 0x45, 0xf4, 0xe8, 0x78, 0x89, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x83, 0x7d, 0xf4, 0, 0x75, 0x12, 0xba, 0x11, 0x2, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xb7, 0x48, 0xe, 0, 0xe9, 0x7e, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xcb, 0x54, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x15, 0x88, 0x45, 0xec, 0xe9, 0x75, 0, 0, 0, 0xc7, 0x45, 0xe4, 0x28, 0x2, 0x1a, 0x10, 0xe9, 0x84, 0, 0, 0, 0xc7, 0x45, 0xe4, 0x39, 0x2, 0x1a, 0x10, 0xe9, 0x78, 0, 0, 0, 0xc7, 0x45, 0xe4, 0x49, 0x2, 0x1a, 0x10, 0xe9, 0x6c, 0, 0, 0, 0xc7, 0x45, 0xe4, 0x5a, 0x2, 0x1a, 0x10, 0xeb, 0x63, 0xc7, 0x45, 0xe4, 0x63, 0x2, 0x1a, 0x10, 0xeb, 0x5a, 0xc7, 0x45, 0xe4, 0x73, 0x2, 0x1a, 0x10, 0xeb, 0x51, 0xc7, 0x45, 0xe4, 0x7f, 0x2, 0x1a, 0x10, 0xeb, 0x48, 0xc7, 0x45, 0xe4, 0x90, 0x2, 0x1a, 0x10, 0xeb, 0x3f, 0xeb, 0x3d, 0x8b, 0xc0, 0x33, 0x16, 0x8, 0x10, 0x3f, 0x16, 0x8, 0x10, 0x4b, 0x16, 0x8, 0x10, 0x57, 0x16, 0x8, 0x10, 0x60, 0x16, 0x8, 0x10, 0x69, 0x16, 0x8, 0x10, 0x72, 0x16, 0x8, 0x10, 0x7b, 0x16, 0x8, 0x10, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xe0, 0x80, 0x7d, 0xe0, 0x7, 0x77, 0xd0, 0x31, 0xc0, 0x8a, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x88, 0x16, 0x8, 0x10, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xf4, 0xe8, 0x6f, 0x16, 0x2, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x6a, 0x74, 0, 0, 0xf, 0xbf, 0x45, 0xea, 0x40, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x40, 0x50, 0x8b, 0x45, 0xf4, 0xe8, 0x82, 0x88, 0, 0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xe4, 0x50, 0xb8, 0x98, 0x2, 0x1a, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x50, 0xe8, 0xf1, 0x47, 0xe, 0, 0x83, 0xc4, 0x18, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x51, 0x96, 0xb, 0, 0x84, 0xc0, 0x74, 0x77, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x45, 0x4e, 0xff, 0xff, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x32, 0x4e, 0xff, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x40, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x1f, 0x4e, 0xff, 0xff, 0x8a, 0x40, 0x27, 0x25, 0xff, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0xb, 0x4e, 0xff, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0xb8, 0xa9, 0x2, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x77, 0x47, 0xe, 0, 0x83, 0xc4, 0x18, 0x8d, 0x95, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x96, 0x47, 0xe, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10081575, 0x5)   pushd(0xb8);                          /* push dword 0xb8 */
    II(0x1008157a, 0x5)   calld(sys_check_available_stack_size, 0xe47d3); /* call 0x10165d52 */
    II(0x1008157f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10081580, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10081581, 0x1)   pushd(esi);                           /* push esi */
    II(0x10081582, 0x1)   pushd(edi);                           /* push edi */
    II(0x10081583, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10081584, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10081586, 0x6)   sub(esp, 0x88);                       /* sub esp, 0x88 */
    II(0x1008158c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1008158f, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10081592, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
//    II(0x10081599, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008159c, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x1008159f, 0x5)   calld(0x10089dd8, 0x8834);            /* call 0x10089dd8 */
    II(0x100815a4, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100815a7, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x100815ab, 0x2)   jzd(0x100815b9, 0xc);                 /* jz 0x100815b9 */
    II(0x100815ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100815b0, 0x5)   calld(0x10089f70, 0x89bb);            /* call 0x10089f70 */
    II(0x100815b5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100815b7, 0x2)   jzd(0x100815bb, 0x2);                 /* jz 0x100815bb */
l_0x100815b9:
    II(0x100815b9, 0x2)   jmpd(0x100815c2, 0x7);                /* jmp 0x100815c2 */
l_0x100815bb:
    II(0x100815bb, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
l_0x100815c2:
    II(0x100815c2, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x100815c6, 0x2)   jnzd(0x100815d8, 0x10);               /* jnz 0x100815d8 */
    II(0x100815c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100815cb, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100815ce, 0x5)   calld(0x10076b90, -0xaa43);           /* call 0x10076b90 */
    II(0x100815d3, 0x1)   cwde();                               /* cwde */
    II(0x100815d4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100815d6, 0x2)   jgd(0x100815da, 0x2);                 /* jg 0x100815da */
l_0x100815d8:
    II(0x100815d8, 0x2)   jmpd(0x100815ea, 0x10);               /* jmp 0x100815ea */
l_0x100815da:
    II(0x100815da, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100815dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100815df, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100815e2, 0x5)   calld(0x10089c68, 0x8681);            /* call 0x10089c68 */
    II(0x100815e7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x100815ea:
    II(0x100815ea, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x100815ee, 0x2)   jzd(0x100815fc, 0xc);                 /* jz 0x100815fc */
    II(0x100815f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100815f3, 0x5)   calld(0x10089f70, 0x8978);            /* call 0x10089f70 */
    II(0x100815f8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100815fa, 0x2)   jzd(0x100815fe, 0x2);                 /* jz 0x100815fe */
l_0x100815fc:
    II(0x100815fc, 0x2)   jmpd(0x10081605, 0x7);                /* jmp 0x10081605 */
l_0x100815fe:
    II(0x100815fe, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
l_0x10081605:
    II(0x10081605, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x10081609, 0x2)   jnzd(0x1008161d, 0x12);               /* jnz 0x1008161d */
    II(0x1008160b, 0x5)   mov(edx, 0x101a0211);                 /* mov edx, 0x101a0211 */ /* "Completed attack task." */
    II(0x10081610, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10081613, 0x5)   calld(sys_strcpy, 0xe48b7);           /* call 0x10165ecf */
    II(0x10081618, 0x5)   jmpd(0x1008179b, 0x17e);              /* jmp 0x1008179b */
l_0x1008161d:
    II(0x1008161d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10081620, 0x5)   calld(my_ctor_0x101b4184, -0xab35);   /* call 0x10076af0 */
    II(0x10081625, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10081628, 0x3)   mov(al, memb_a32(ds, eax + 0x15));    /* mov al, [eax+0x15] */
    II(0x1008162b, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x1008162e, 0x5)   jmpd(0x100816a8, 0x75);               /* jmp 0x100816a8 */
l_0x10081633:
    II(0x10081633, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x101a0228); /* mov dword [ebp-0x1c], 0x101a0228 */ /* "Init. attack on " */
    II(0x1008163a, 0x5)   jmpd(0x100816c3, 0x84);               /* jmp 0x100816c3 */
l_0x1008163f:
    II(0x1008163f, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x101a0239); /* mov dword [ebp-0x1c], 0x101a0239 */ /* "Wait to attack " */
    II(0x10081646, 0x5)   jmpd(0x100816c3, 0x78);               /* jmp 0x100816c3 */
l_0x1008164b:
    II(0x1008164b, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x101a0249); /* mov dword [ebp-0x1c], 0x101a0249 */ /* "Gather attack on" */
    II(0x10081652, 0x5)   jmpd(0x100816c3, 0x6c);               /* jmp 0x100816c3 */
l_0x10081657:
    II(0x10081657, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x101a025a); /* mov dword [ebp-0x1c], 0x101a025a */ /* "Adv. on " */
    II(0x1008165e, 0x2)   jmpd(0x100816c3, 0x63);               /* jmp 0x100816c3 */
l_0x10081660:
    II(0x10081660, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x101a0263); /* mov dword [ebp-0x1c], 0x101a0263 */ /* "Adv. w/trans on" */
    II(0x10081667, 0x2)   jmpd(0x100816c3, 0x5a);               /* jmp 0x100816c3 */
l_0x10081669:
    II(0x10081669, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x101a0273); /* mov dword [ebp-0x1c], 0x101a0273 */ /* "Search for " */
    II(0x10081670, 0x2)   jmpd(0x100816c3, 0x51);               /* jmp 0x100816c3 */
l_0x10081672:
    II(0x10081672, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x101a027f); /* mov dword [ebp-0x1c], 0x101a027f */ /* "Bold search for " */
    II(0x10081679, 0x2)   jmpd(0x100816c3, 0x48);               /* jmp 0x100816c3 */
l_0x1008167b:
    II(0x1008167b, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0x101a0290); /* mov dword [ebp-0x1c], 0x101a0290 */ /* "Attack " */
    II(0x10081682, 0x2)   jmpd(0x100816c3, 0x3f);               /* jmp 0x100816c3 */
l_0x10081684:
    II(0x10081684, 0x2)   jmpd(0x100816c3, 0x3d);               /* jmp 0x100816c3 */
//    II(0x10081686, 0x2)   /* Выравнивание. */
//    II(0x10081688, 0x20)  /* Служебная область с абсолютными адресами переходов. {0x10081633, 0x1008163f, 0x1008164b, 0x10081657, 0x10081660, 0x10081669, 0x10081672, 0x1008167b}. */
l_0x100816a8:
    II(0x100816a8, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100816ab, 0x3)   mov(memb_a32(ss, ebp - 0x20), al);    /* mov [ebp-0x20], al */
    II(0x100816ae, 0x4)   cmp(memb_a32(ss, ebp - 0x20), 0x7);   /* cmp byte [ebp-0x20], 0x7 */
    II(0x100816b2, 0x2)   jad(0x10081684, -0x30);               /* ja 0x10081684 */
    II(0x100816b4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100816b6, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x100816b9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100816bc, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x10081688), (0x10081633)(0x1008163f)(0x1008164b)(0x10081657)(0x10081660)(0x10081669)(0x10081672)(0x1008167b)); /* jmp dword near [cs:eax+0x10081688] */
l_0x100816c3:
    II(0x100816c3, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100816c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100816c9, 0x5)   calld(0x100a2d3d, 0x2166f);           /* call 0x100a2d3d */
    II(0x100816ce, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100816d1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100816d3, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100816d5, 0x5)   calld(0x10088b44, 0x746a);            /* call 0x10088b44 */
    II(0x100816da, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x16)); /* movsx eax, word [ebp-0x16] */
    II(0x100816de, 0x1)   inc(eax);                             /* inc eax */
    II(0x100816df, 0x1)   pushd(eax);                           /* push eax */
    II(0x100816e0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100816e4, 0x1)   inc(eax);                             /* inc eax */
    II(0x100816e5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100816e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100816e9, 0x5)   calld(0x10089f70, 0x8882);            /* call 0x10089f70 */
    II(0x100816ee, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100816f1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100816f4, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100816f7, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x100816fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10081700, 0x1)   pushd(eax);                           /* push eax */
    II(0x10081701, 0x5)   mov(eax, 0x101a0298);                 /* mov eax, 0x101a0298 */ /* "%s %s at [%i,%i]" */
    II(0x10081706, 0x1)   pushd(eax);                           /* push eax */
    II(0x10081707, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008170a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008170b, 0x5)   calld(sys_sprintf, 0xe47f1);          /* call 0x10165f01 */
    II(0x10081710, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x10081713, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10081715, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10081718, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x1008171b, 0x5)   calld(0x1013ad71, 0xb9651);           /* call 0x1013ad71 */
    II(0x10081720, 0x2)   test(al, al);                         /* test al, al */
    II(0x10081722, 0x2)   jzd(0x1008179b, 0x77);                /* jz 0x1008179b */
    II(0x10081724, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10081727, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x1008172a, 0x5)   calld(0x10076574, -0xb1bb);           /* call 0x10076574 */
    II(0x1008172f, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x10081732, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10081735, 0x1)   inc(eax);                             /* inc eax */
    II(0x10081736, 0x1)   pushd(eax);                           /* push eax */
    II(0x10081737, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008173a, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x1008173d, 0x5)   calld(0x10076574, -0xb1ce);           /* call 0x10076574 */
    II(0x10081742, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10081745, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10081748, 0x1)   inc(eax);                             /* inc eax */
    II(0x10081749, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008174a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008174d, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10081750, 0x5)   calld(0x10076574, -0xb1e1);           /* call 0x10076574 */
    II(0x10081755, 0x3)   mov(al, memb_a32(ds, eax + 0x27));    /* mov al, [eax+0x27] */
    II(0x10081758, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1008175d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008175e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10081761, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10081764, 0x5)   calld(0x10076574, -0xb1f5);           /* call 0x10076574 */
    II(0x10081769, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1008176c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008176f, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10081772, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x10081778, 0x5)   mov(eax, 0x101a02a9);                 /* mov eax, 0x101a02a9 */ /* ", leader %s %i at [%i,%i]" */
    II(0x1008177d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008177e, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x10081784, 0x1)   pushd(eax);                           /* push eax */
    II(0x10081785, 0x5)   calld(sys_sprintf, 0xe4777);          /* call 0x10165f01 */
    II(0x1008178a, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x1008178d, 0x6)   lea(edx, ebp - 0x88);                 /* lea edx, [ebp+0xffffff78] */
    II(0x10081793, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10081796, 0x5)   calld(sys_strcat, 0xe4796);           /* call 0x10165f31 */
l_0x1008179b:
    II(0x1008179b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008179e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100817a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100817a4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100817a6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100817a7, 0x1)   popd(edi);                            /* pop edi */
    II(0x100817a8, 0x1)   popd(esi);                            /* pop esi */
    II(0x100817a9, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100817aa, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100817ab, 0x1)   retd();                               /* ret */
FUNC_END

