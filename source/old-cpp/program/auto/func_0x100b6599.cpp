FUNC_BEGIN(0x100b6599, 0x9a6d28982bb60fb2, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xaf, 0xf7, 0xa, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0x24, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x75, 0x1f, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xa4, 0x43, 0xfd, 0xff, 0x31, 0xdb, 0xba, 0xf, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x50, 0xca, 0xa, 0, 0xe9, 0xfb, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x50, 0x1c, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x43, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x7d, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x4e, 0x2, 0xb8, 0x1c, 0, 0, 0, 0xe8, 0xbb, 0xf7, 0xa, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x25, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0xe8, 0x38, 0x6, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe0, 0x8b, 0x55, 0xe0, 0x8d, 0x45, 0xe4, 0xe8, 0x26, 0x4d, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1c, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1c, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1a, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1a, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe4, 0xe8, 0x2c, 0x4c, 0xff, 0xff, 0xe8, 0xea, 0x45, 0x6, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x7b, 0x4c, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x65, 0xe8, 0x66, 0x3, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xe4, 0xe1, 0x9, 0, 0xbb, 0x5, 0, 0, 0, 0xba, 0x1b, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x6b, 0xc9, 0xa, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x94, 0x47, 0x7, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x35, 0x38, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100b6599, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100b659e, 0x5)   calld(sys_check_available_stack_size, 0xaf7af); /* call 0x10165d52 */
    II(0x100b65a3, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b65a4, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b65a5, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b65a6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b65a7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b65a9, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100b65af, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b65b2, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100b65b5, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100b65b8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100b65ba, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100b65bf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b65c1, 0x2)   jnzd(0x100b65d8, 0x15);               /* jnz 0x100b65d8 */
    II(0x100b65c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b65c6, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b65c9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b65cc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b65ce, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100b65d4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b65d6, 0x2)   jnzd(0x100b65da, 0x2);                /* jnz 0x100b65da */
l_0x100b65d8:
    II(0x100b65d8, 0x2)   jmpd(0x100b65df, 0x5);                /* jmp 0x100b65df */
l_0x100b65da:
    II(0x100b65da, 0x5)   jmpd(0x100b6703, 0x124);              /* jmp 0x100b6703 */
l_0x100b65df:
    II(0x100b65df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b65e2, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100b65e7, 0x2)   jnzd(0x100b6608, 0x1f);               /* jnz 0x100b6608 */
    II(0x100b65e9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b65ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b65ef, 0x5)   calld(0x1008a998, -0x2bc5c);          /* call 0x1008a998 */
    II(0x100b65f4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b65f6, 0x5)   mov(edx, 0xf);                        /* mov edx, 0xf */
    II(0x100b65fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b65fe, 0x5)   calld(0x10163053, 0xaca50);           /* call 0x10163053 */
    II(0x100b6603, 0x5)   jmpd(0x100b6703, 0xfb);               /* jmp 0x100b6703 */
l_0x100b6608:
    II(0x100b6608, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b660b, 0x4)   mov(dx, memw_a32(ds, eax + 0x1a));    /* mov dx, [eax+0x1a] */
    II(0x100b660f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6612, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x100b6616, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b6619, 0x4)   mov(dx, memw_a32(ds, eax + 0x1c));    /* mov dx, [eax+0x1c] */
    II(0x100b661d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6620, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x100b6624, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6627, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100b662a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b662f, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100b6632, 0x2)   jged(0x100b663b, 0x7);                /* jge 0x100b663b */
    II(0x100b6634, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b6637, 0x4)   mov(memb_a32(ds, eax + 0x4e), 0x2);   /* mov byte [eax+0x4e], 0x2 */
l_0x100b663b:
    II(0x100b663b, 0x5)   mov(eax, 0x1c);                       /* mov eax, 0x1c */
    II(0x100b6640, 0x5)   calld(sys_new, 0xaf7bb);              /* call 0x10165e00 */
    II(0x100b6645, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100b6648, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b664b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b664e, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100b6652, 0x2)   jzd(0x100b6679, 0x25);                /* jz 0x100b6679 */
    II(0x100b6654, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b6657, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100b665a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b665d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b6660, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100b6663, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b6666, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b6669, 0x5)   calld(my_ctor_c20, 0x638e8);          /* call 0x10119f56 */
    II(0x100b666e, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100b6671, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b6674, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100b6677, 0x2)   jmpd(0x100b667f, 0x6);                /* jmp 0x100b667f */
l_0x100b6679:
    II(0x100b6679, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100b667c, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100b667f:
    II(0x100b667f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x100b6682, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b6685, 0x5)   calld(0x100ab3b0, -0xb2da);           /* call 0x100ab3b0 */
    II(0x100b668a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b668d, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100b6691, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b6694, 0x4)   sub(ax, memw_a32(ds, edx + 0x1c));    /* sub ax, [edx+0x1c] */
    II(0x100b6698, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100b669b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b669e, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100b66a2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b66a5, 0x4)   sub(ax, memw_a32(ds, edx + 0x1a));    /* sub ax, [edx+0x1a] */
    II(0x100b66a9, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100b66ac, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b66af, 0x5)   calld(0x100ab2e0, -0xb3d4);           /* call 0x100ab2e0 */
    II(0x100b66b4, 0x5)   calld(0x1011aca3, 0x645ea);           /* call 0x1011aca3 */
    II(0x100b66b9, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b66bc, 0x5)   calld(0x100ab33c, -0xb385);           /* call 0x100ab33c */
    II(0x100b66c1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b66c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b66c6, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100b66c9, 0x5)   calld(0x10076a34, -0x3fc9a);          /* call 0x10076a34 */
    II(0x100b66ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b66d1, 0x5)   calld(0x101548ba, 0x9e1e4);           /* call 0x101548ba */
    II(0x100b66d6, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x100b66db, 0x5)   mov(edx, 0x1b);                       /* mov edx, 0x1b */
    II(0x100b66e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b66e3, 0x5)   calld(0x10163053, 0xac96b);           /* call 0x10163053 */
    II(0x100b66e8, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100b66ef, 0x2)   jzd(0x100b66f9, 0x8);                 /* jz 0x100b66f9 */
    II(0x100b66f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b66f4, 0x5)   calld(0x1012ae8d, 0x74794);           /* call 0x1012ae8d */
l_0x100b66f9:
    II(0x100b66f9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b66fb, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b66fe, 0x5)   calld(0x100a9f38, -0xc7cb);           /* call 0x100a9f38 */
l_0x100b6703:
    II(0x100b6703, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b6705, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b6706, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b6707, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b6708, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b6709, 0x1)   retd();                               /* ret */
FUNC_END

