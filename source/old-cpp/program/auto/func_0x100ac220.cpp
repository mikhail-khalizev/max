FUNC_BEGIN(0x100ac220, 0xb2ec53b7742a3bd4, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x28, 0x9b, 0xb, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x83, 0x7d, 0xf8, 0, 0x75, 0x9, 0xc7, 0x45, 0xec, 0, 0x10, 0, 0, 0xeb, 0x16, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x14, 0x98, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0xf, 0xbf, 0xc8, 0x8b, 0x5d, 0xf8, 0x8b, 0x55, 0xf4, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0xe8, 0x4f, 0x64, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x13, 0xe8, 0x5a, 0xa4, 0xfc, 0xff, 0x83, 0xe8, 0x13, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1a, 0xe8, 0x43, 0xa8, 0xfc, 0xff, 0x83, 0xe8, 0x1a, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1e, 0xe8, 0x32, 0xa8, 0xfc, 0xff, 0x83, 0xe8, 0x1e, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x22, 0xe8, 0x21, 0xa8, 0xfc, 0xff, 0x83, 0xe8, 0x22, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x28, 0xe8, 0x10, 0xa8, 0xfc, 0xff, 0x83, 0xe8, 0x28, 0x89, 0x45, 0xf0, 0xe8, 0x3d, 0xe8, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x2c, 0xe8, 0xdb, 0xe7, 0xff, 0xff, 0x83, 0xe8, 0x2c, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x3c, 0xe8, 0x20, 0x6, 0xff, 0xff, 0x83, 0xe8, 0x3c, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x2, 0x94, 0x54, 0x1b, 0x10, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x48, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x45, 0, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x13, 0xe8, 0xee, 0xa2, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x17, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x13, 0xe8, 0x1d, 0xa2, 0xfc, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x9, 0xc7, 0x45, 0xd4, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x76, 0x1, 0, 0, 0xbb, 0xfb, 0xd, 0x1a, 0x10, 0xba, 0x7, 0xe, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xa, 0x9a, 0xb, 0, 0x89, 0x45, 0xd4, 0x8a, 0x45, 0x10, 0x8b, 0x55, 0xf0, 0x88, 0x42, 0x19, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x13, 0xe8, 0xd5, 0xa1, 0xfc, 0xff, 0xe8, 0xdc, 0xe6, 0xfd, 0xff, 0xa8, 0x1, 0x74, 0x7, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x19, 0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x13, 0xe8, 0xba, 0xa1, 0xfc, 0xff, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x1a, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x13, 0xe8, 0xa3, 0xa1, 0xfc, 0xff, 0xe8, 0x66, 0x9e, 0xfc, 0xff, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xf0, 0x80, 0x78, 0x19, 0, 0x7f, 0x2, 0xeb, 0x7, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x19, 0x3, 0x8b, 0x55, 0x14, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x22, 0xe8, 0x42, 0xc7, 0xfd, 0xff, 0x8b, 0x55, 0x14, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1a, 0xe8, 0x34, 0xc7, 0xfd, 0xff, 0x8b, 0x55, 0x14, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x1e, 0xe8, 0x26, 0xc7, 0xfd, 0xff, 0x8b, 0x55, 0x14, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x28, 0xe8, 0x18, 0xc7, 0xfd, 0xff, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x26, 0xff, 0xff, 0x8b, 0x45, 0x18, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x40, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x44, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x46, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0xc, 0}))
    II(0x100ac220, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x100ac225, 0x5)   calld(sys_check_available_stack_size, 0xb9b28); /* call 0x10165d52 */
    II(0x100ac22a, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ac22b, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ac22c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ac22d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ac22f, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x100ac235, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ac238, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100ac23b, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100ac23e, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100ac241, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x100ac245, 0x2)   jnzd(0x100ac250, 0x9);                /* jnz 0x100ac250 */
    II(0x100ac247, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1000); /* mov dword [ebp-0x14], 0x1000 */
    II(0x100ac24e, 0x2)   jmpd(0x100ac266, 0x16);               /* jmp 0x100ac266 */
l_0x100ac250:
    II(0x100ac250, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ac253, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100ac256, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ac259, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100ac25c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ac25f, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100ac262, 0x1)   cwde();                               /* cwde */
    II(0x100ac263, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x100ac266:
    II(0x100ac266, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ac269, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100ac26c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100ac26f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ac272, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ac274, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x100ac277, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100ac27a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac27d, 0x5)   calld(0x100a26d1, -0x9bb1);           /* call 0x100a26d1 */
    II(0x100ac282, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ac285, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ac288, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100ac28b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac28e, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac291, 0x5)   calld(my_ctor_0x101b38f8, -0x35ba6);  /* call 0x100766f0 */
    II(0x100ac296, 0x3)   sub(eax, 0x13);                       /* sub eax, 0x13 */
    II(0x100ac299, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ac29c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ac29f, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100ac2a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac2a5, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100ac2a8, 0x5)   calld(my_ctor_0x101b4184, -0x357bd);  /* call 0x10076af0 */
    II(0x100ac2ad, 0x3)   sub(eax, 0x1a);                       /* sub eax, 0x1a */
    II(0x100ac2b0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100ac2b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac2b6, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100ac2b9, 0x5)   calld(my_ctor_0x101b4184, -0x357ce);  /* call 0x10076af0 */
    II(0x100ac2be, 0x3)   sub(eax, 0x1e);                       /* sub eax, 0x1e */
    II(0x100ac2c1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100ac2c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac2c7, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x100ac2ca, 0x5)   calld(my_ctor_0x101b4184, -0x357df);  /* call 0x10076af0 */
    II(0x100ac2cf, 0x3)   sub(eax, 0x22);                       /* sub eax, 0x22 */
    II(0x100ac2d2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100ac2d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac2d8, 0x3)   add(eax, 0x28);                       /* add eax, 0x28 */
    II(0x100ac2db, 0x5)   calld(my_ctor_0x101b4184, -0x357f0);  /* call 0x10076af0 */
    II(0x100ac2e0, 0x3)   sub(eax, 0x28);                       /* sub eax, 0x28 */
    II(0x100ac2e3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ac2e6, 0x5)   calld(0x100aab28, -0x17c3);           /* call 0x100aab28 */
    II(0x100ac2eb, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100ac2ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac2f1, 0x3)   add(eax, 0x2c);                       /* add eax, 0x2c */
    II(0x100ac2f4, 0x5)   calld(0x100aaad4, -0x1825);           /* call 0x100aaad4 */
    II(0x100ac2f9, 0x3)   sub(eax, 0x2c);                       /* sub eax, 0x2c */
    II(0x100ac2fc, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ac2ff, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ac302, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100ac305, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac308, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100ac30b, 0x5)   calld(0x1009c930, -0xf9e0);           /* call 0x1009c930 */
    II(0x100ac310, 0x3)   sub(eax, 0x3c);                       /* sub eax, 0x3c */
    II(0x100ac313, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ac316, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ac319, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100ac31c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac31f, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b5494); /* mov dword [eax+0x2], 0x101b5494 */
    II(0x100ac326, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac329, 0x4)   mov(memb_a32(ds, eax + 0x48), 0);     /* mov byte [eax+0x48], 0x0 */
    II(0x100ac32d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac330, 0x4)   mov(memb_a32(ds, eax + 0x45), 0);     /* mov byte [eax+0x45], 0x0 */
    II(0x100ac334, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100ac337, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac33a, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac33d, 0x5)   calld(0x10076630, -0x35d12);          /* call 0x10076630 */
    II(0x100ac342, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ac345, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100ac348, 0x4)   mov(memw_a32(ds, edx + 0x17), ax);    /* mov [edx+0x17], ax */
    II(0x100ac34c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac34f, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac352, 0x5)   calld(0x10076574, -0x35de3);          /* call 0x10076574 */
    II(0x100ac357, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ac359, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ac35c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac35f, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100ac362, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ac365, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ac367, 0x2)   jnzd(0x100ac372, 0x9);                /* jnz 0x100ac372 */
    II(0x100ac369, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0);     /* mov dword [ebp-0x2c], 0x0 */
    II(0x100ac370, 0x2)   jmpd(0x100ac38b, 0x19);               /* jmp 0x100ac38b */
l_0x100ac372:
    II(0x100ac372, 0x5)   mov(ecx, 0x176);                      /* mov ecx, 0x176 */
    II(0x100ac377, 0x5)   mov(ebx, 0x101a0dfb);                 /* mov ebx, 0x101a0dfb */ /* "ai_move.cpp" */
    II(0x100ac37c, 0x5)   mov(edx, 0x101a0e07);                 /* mov edx, 0x101a0e07 */ /* "unit->teamID == team" */
    II(0x100ac381, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ac383, 0x5)   calld(sys_assert, 0xb9a0a);           /* call 0x10165d92 */
    II(0x100ac388, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100ac38b:
    II(0x100ac38b, 0x3)   mov(al, memb_a32(ss, ebp + 0x10));    /* mov al, [ebp+0x10] */
    II(0x100ac38e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100ac391, 0x3)   mov(memb_a32(ds, edx + 0x19), al);    /* mov [edx+0x19], al */
    II(0x100ac394, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac397, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac39a, 0x5)   calld(0x10076574, -0x35e2b);          /* call 0x10076574 */
    II(0x100ac39f, 0x5)   calld(0x1008aa80, -0x21924);          /* call 0x1008aa80 */
    II(0x100ac3a4, 0x2)   test(al, 0x1);                        /* test al, 0x1 */
    II(0x100ac3a6, 0x2)   jzd(0x100ac3af, 0x7);                 /* jz 0x100ac3af */
    II(0x100ac3a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac3ab, 0x4)   mov(memb_a32(ds, eax + 0x19), 0);     /* mov byte [eax+0x19], 0x0 */
l_0x100ac3af:
    II(0x100ac3af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac3b2, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac3b5, 0x5)   calld(0x10076574, -0x35e46);          /* call 0x10076574 */
    II(0x100ac3ba, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x100ac3bd, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ac3c2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ac3c4, 0x2)   jnzd(0x100ac3e0, 0x1a);               /* jnz 0x100ac3e0 */
    II(0x100ac3c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac3c9, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ac3cc, 0x5)   calld(0x10076574, -0x35e5d);          /* call 0x10076574 */
    II(0x100ac3d1, 0x5)   calld(0x1007623c, -0x3619a);          /* call 0x1007623c */
    II(0x100ac3d6, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x100ac3d9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ac3dc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ac3de, 0x2)   jgd(0x100ac3e2, 0x2);                 /* jg 0x100ac3e2 */
l_0x100ac3e0:
    II(0x100ac3e0, 0x2)   jmpd(0x100ac3eb, 0x9);                /* jmp 0x100ac3eb */
l_0x100ac3e2:
    II(0x100ac3e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac3e5, 0x4)   cmp(memb_a32(ds, eax + 0x19), 0);     /* cmp byte [eax+0x19], 0x0 */
    II(0x100ac3e9, 0x2)   jgd(0x100ac3ed, 0x2);                 /* jg 0x100ac3ed */
l_0x100ac3eb:
    II(0x100ac3eb, 0x2)   jmpd(0x100ac3f4, 0x7);                /* jmp 0x100ac3f4 */
l_0x100ac3ed:
    II(0x100ac3ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac3f0, 0x4)   mov(memb_a32(ds, eax + 0x19), 0x3);   /* mov byte [eax+0x19], 0x3 */
l_0x100ac3f4:
    II(0x100ac3f4, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x100ac3f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac3fa, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x100ac3fd, 0x5)   calld(0x10088b44, -0x238be);          /* call 0x10088b44 */
    II(0x100ac402, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x100ac405, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac408, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100ac40b, 0x5)   calld(0x10088b44, -0x238cc);          /* call 0x10088b44 */
    II(0x100ac410, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x100ac413, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac416, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100ac419, 0x5)   calld(0x10088b44, -0x238da);          /* call 0x10088b44 */
    II(0x100ac41e, 0x3)   mov(edx, memd_a32(ss, ebp + 0x14));   /* mov edx, [ebp+0x14] */
    II(0x100ac421, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac424, 0x3)   add(eax, 0x28);                       /* add eax, 0x28 */
    II(0x100ac427, 0x5)   calld(0x10088b44, -0x238e8);          /* call 0x10088b44 */
    II(0x100ac42c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac42f, 0x6)   mov(memw_a32(ds, eax + 0x26), 0xffff); /* mov word [eax+0x26], 0xffff */
    II(0x100ac435, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x100ac438, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100ac43b, 0x3)   mov(memd_a32(ds, edx + 0x40), eax);   /* mov [edx+0x40], eax */
    II(0x100ac43e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac441, 0x4)   mov(memb_a32(ds, eax + 0x44), 0);     /* mov byte [eax+0x44], 0x0 */
    II(0x100ac445, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac448, 0x4)   mov(memb_a32(ds, eax + 0x46), 0);     /* mov byte [eax+0x46], 0x0 */
    II(0x100ac44c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ac44f, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100ac452, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ac455, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ac457, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ac458, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ac459, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ac45a, 0x3)   retd(0xc);                            /* ret 0xc */
FUNC_END

