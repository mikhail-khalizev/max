FUNC_BEGIN(0x10095463, 0xd15e9f83b5f97229, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0xe5, 0x8, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc6, 0x45, 0xf8, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x68, 0xed, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x5b, 0xe8, 0x29, 0x53, 0xff, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xf0, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x5b, 0x9, 0xd, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x16, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xec, 0xe8, 0x52, 0xe2, 0, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe0, 0x8b, 0x55, 0xe0, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x5d, 0xf0, 0xe8, 0xd6, 0xf8, 0, 0, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0xde, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x89, 0xf4, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2b, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7c, 0xd, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2d, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0x11, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x29, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0xf, 0x8d, 0xa3, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x10, 0xe, 0xfe, 0xff, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x84, 0xf, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0xba, 0x16, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x29, 0x58, 0xa, 0, 0x84, 0xc0, 0x74, 0x2f, 0x8d, 0x45, 0xdc, 0xe8, 0x4c, 0xe, 0xfe, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xdc, 0xe8, 0x32, 0xe, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0xbb, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x8c, 0x57, 0xa, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xd8, 0, 0x5, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xd8, 0, 0xe, 0, 0, 0x8b, 0x45, 0xd8, 0xf, 0xbf, 0xc8, 0x8b, 0x5d, 0xfc, 0xba, 0x28, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x53, 0x18, 0, 0, 0x84, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xab, 0x9, 0xfe, 0xff, 0x8a, 0x45, 0xf8, 0x88, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10095463, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x10095468, 0x5)   calld(sys_check_available_stack_size, 0xd08e5); /* call 0x10165d52 */
    II(0x1009546d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009546e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009546f, 0x1)   pushd(edx);                           /* push edx */
    II(0x10095470, 0x1)   pushd(esi);                           /* push esi */
    II(0x10095471, 0x1)   pushd(edi);                           /* push edi */
    II(0x10095472, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10095473, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10095475, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x1009547b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1009547e, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10095482, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10095485, 0x5)   calld(0x100941f2, -0x1298);           /* call 0x100941f2 */
    II(0x1009548a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009548c, 0x2)   jzd(0x100954e9, 0x5b);                /* jz 0x100954e9 */
    II(0x1009548e, 0x5)   calld(0x1008a7bc, -0xacd7);           /* call 0x1008a7bc */
    II(0x10095493, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10095498, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1009549b, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x100954a0, 0x5)   calld(sys_new, 0xd095b);              /* call 0x10165e00 */
    II(0x100954a5, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100954a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100954ab, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100954ae, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100954b2, 0x2)   jzd(0x100954ca, 0x16);                /* jz 0x100954ca */
    II(0x100954b4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100954b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100954ba, 0x5)   calld(0x100a3711, 0xe252);            /* call 0x100a3711 */
    II(0x100954bf, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100954c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100954c5, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100954c8, 0x2)   jmpd(0x100954d0, 0x6);                /* jmp 0x100954d0 */
l_0x100954ca:
    II(0x100954ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100954cd, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100954d0:
    II(0x100954d0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x100954d3, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100954d8, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x100954db, 0x5)   calld(0x100a4db6, 0xf8d6);            /* call 0x100a4db6 */
    II(0x100954e0, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100954e4, 0x5)   jmpd(0x100955c7, 0xde);               /* jmp 0x100955c7 */
l_0x100954e9:
    II(0x100954e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100954ec, 0x5)   calld(0x1009497a, -0xb77);            /* call 0x1009497a */
    II(0x100954f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100954f4, 0x3)   mov(eax, memd_a32(ds, eax + 0x2b));   /* mov eax, [eax+0x2b] */
    II(0x100954f7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100954fa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100954fc, 0x2)   jld(0x1009550b, 0xd);                 /* jl 0x1009550b */
    II(0x100954fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10095501, 0x3)   mov(eax, memd_a32(ds, eax + 0x2d));   /* mov eax, [eax+0x2d] */
    II(0x10095504, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10095507, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10095509, 0x2)   jged(0x1009550d, 0x2);                /* jge 0x1009550d */
l_0x1009550b:
    II(0x1009550b, 0x2)   jmpd(0x1009551e, 0x11);               /* jmp 0x1009551e */
l_0x1009550d:
    II(0x1009550d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10095510, 0x3)   mov(eax, memd_a32(ds, eax + 0x29));   /* mov eax, [eax+0x29] */
    II(0x10095513, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10095516, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10095518, 0x6)   jged(0x100955c1, 0xa3);               /* jge dword 0x100955c1 */
l_0x1009551e:
    II(0x1009551e, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10095523, 0x5)   calld(0x10076338, -0x1f1f0);          /* call 0x10076338 */
    II(0x10095528, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x1009552b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009552d, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009552f, 0x5)   calld(0x100764b8, -0x1f07c);          /* call 0x100764b8 */
    II(0x10095534, 0x2)   jmpd(0x1009553e, 0x8);                /* jmp 0x1009553e */
l_0x10095536:
    II(0x10095536, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10095539, 0x5)   calld(0x10076bf8, -0x1e946);          /* call 0x10076bf8 */
l_0x1009553e:
    II(0x1009553e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10095540, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10095543, 0x5)   calld(0x1013ad71, 0xa5829);           /* call 0x1013ad71 */
    II(0x10095548, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009554a, 0x2)   jzd(0x1009557b, 0x2f);                /* jz 0x1009557b */
    II(0x1009554c, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1009554f, 0x5)   calld(0x100763a0, -0x1f1b4);          /* call 0x100763a0 */
    II(0x10095554, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10095556, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10095559, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009555c, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1009555f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10095562, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10095564, 0x2)   jnzd(0x10095575, 0xf);                /* jnz 0x10095575 */
    II(0x10095566, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10095569, 0x5)   calld(0x100763a0, -0x1f1ce);          /* call 0x100763a0 */
    II(0x1009556e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x10095573, 0x2)   jzd(0x10095577, 0x2);                 /* jz 0x10095577 */
l_0x10095575:
    II(0x10095575, 0x2)   jmpd(0x10095579, 0x2);                /* jmp 0x10095579 */
l_0x10095577:
    II(0x10095577, 0x2)   jmpd(0x1009557b, 0x2);                /* jmp 0x1009557b */
l_0x10095579:
    II(0x10095579, 0x2)   jmpd(0x10095536, -0x45);              /* jmp 0x10095536 */
l_0x1009557b:
    II(0x1009557b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009557d, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10095580, 0x5)   calld(0x1013ad11, 0xa578c);           /* call 0x1013ad11 */
    II(0x10095585, 0x2)   test(al, al);                         /* test al, al */
    II(0x10095587, 0x2)   jzd(0x10095592, 0x9);                 /* jz 0x10095592 */
    II(0x10095589, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0x500); /* mov dword [ebp-0x28], 0x500 */
    II(0x10095590, 0x2)   jmpd(0x10095599, 0x7);                /* jmp 0x10095599 */
l_0x10095592:
    II(0x10095592, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0xe00); /* mov dword [ebp-0x28], 0xe00 */
l_0x10095599:
    II(0x10095599, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1009559c, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1009559f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100955a2, 0x5)   mov(edx, 0x28);                       /* mov edx, 0x28 */
    II(0x100955a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100955aa, 0x5)   calld(0x10096e02, 0x1853);            /* call 0x10096e02 */
    II(0x100955af, 0x2)   test(al, al);                         /* test al, al */
    II(0x100955b1, 0x2)   jzd(0x100955b7, 0x4);                 /* jz 0x100955b7 */
    II(0x100955b3, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x100955b7:
    II(0x100955b7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100955b9, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100955bc, 0x5)   calld(0x10075f6c, -0x1f655);          /* call 0x10075f6c */
l_0x100955c1:
    II(0x100955c1, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100955c4, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
l_0x100955c7:
    II(0x100955c7, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100955ca, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100955cc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100955cd, 0x1)   popd(edi);                            /* pop edi */
    II(0x100955ce, 0x1)   popd(esi);                            /* pop esi */
    II(0x100955cf, 0x1)   popd(edx);                            /* pop edx */
    II(0x100955d0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100955d1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100955d2, 0x1)   retd();                               /* ret */
FUNC_END

