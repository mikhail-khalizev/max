FUNC_BEGIN(0x100ec62a, 0x70b6b13c8bf56f1f, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x1e, 0x97, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xe9, 0x9c, 0xf8, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x5d, 0x9e, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x93, 0xa5, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x2, 0xe7, 0x4, 0, 0x84, 0xc0, 0x74, 0x52, 0x8d, 0x45, 0xf4, 0xe8, 0x25, 0x9d, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xf4, 0xe8, 0x10, 0x9d, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x33, 0x74, 0x2, 0xeb, 0x18, 0x8d, 0x45, 0xf4, 0xe8, 0xff, 0x9c, 0xf8, 0xff, 0xe8, 0x96, 0x9b, 0xf8, 0xff, 0xe8, 0xc1, 0x2c, 0, 0, 0x98, 0x83, 0xf8, 0x1, 0x7f, 0x2, 0xeb, 0x10, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xab, 0x98, 0xf8, 0xff, 0xeb, 0x1c, 0xeb, 0x98, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x99, 0x98, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x8d, 0x98, 0xf8, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ec62a, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100ec62f, 0x5)   calld(sys_check_available_stack_size, 0x7971e); /* call 0x10165d52 */
    II(0x100ec634, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ec635, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ec636, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ec637, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ec638, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ec639, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ec63a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ec63c, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100ec642, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ec645, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100ec64a, 0x5)   calld(0x10076338, -0x76317);          /* call 0x10076338 */
    II(0x100ec64f, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100ec652, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ec654, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ec656, 0x5)   calld(0x100764b8, -0x761a3);          /* call 0x100764b8 */
    II(0x100ec65b, 0x2)   jmpd(0x100ec665, 0x8);                /* jmp 0x100ec665 */
l_0x100ec65d:
    II(0x100ec65d, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec660, 0x5)   calld(0x10076bf8, -0x75a6d);          /* call 0x10076bf8 */
l_0x100ec665:
    II(0x100ec665, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec667, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec66a, 0x5)   calld(0x1013ad71, 0x4e702);           /* call 0x1013ad71 */
    II(0x100ec66f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec671, 0x2)   jzd(0x100ec6c5, 0x52);                /* jz 0x100ec6c5 */
    II(0x100ec673, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec676, 0x5)   calld(0x100763a0, -0x762db);          /* call 0x100763a0 */
    II(0x100ec67b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec67d, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ec680, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ec684, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ec686, 0x2)   jnzd(0x100ec697, 0xf);                /* jnz 0x100ec697 */
    II(0x100ec688, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec68b, 0x5)   calld(0x100763a0, -0x762f0);          /* call 0x100763a0 */
    II(0x100ec690, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x33);   /* cmp word [eax+0x8], 0x33 */
    II(0x100ec695, 0x2)   jzd(0x100ec699, 0x2);                 /* jz 0x100ec699 */
l_0x100ec697:
    II(0x100ec697, 0x2)   jmpd(0x100ec6b1, 0x18);               /* jmp 0x100ec6b1 */
l_0x100ec699:
    II(0x100ec699, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec69c, 0x5)   calld(0x100763a0, -0x76301);          /* call 0x100763a0 */
    II(0x100ec6a1, 0x5)   calld(0x1007623c, -0x7646a);          /* call 0x1007623c */
    II(0x100ec6a6, 0x5)   calld(0x100ef36c, 0x2cc1);            /* call 0x100ef36c */
    II(0x100ec6ab, 0x1)   cwde();                               /* cwde */
    II(0x100ec6ac, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ec6af, 0x2)   jgd(0x100ec6b3, 0x2);                 /* jg 0x100ec6b3 */
l_0x100ec6b1:
    II(0x100ec6b1, 0x2)   jmpd(0x100ec6c3, 0x10);               /* jmp 0x100ec6c3 */
l_0x100ec6b3:
    II(0x100ec6b3, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100ec6b7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec6b9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec6bc, 0x5)   calld(0x10075f6c, -0x76755);          /* call 0x10075f6c */
    II(0x100ec6c1, 0x2)   jmpd(0x100ec6df, 0x1c);               /* jmp 0x100ec6df */
l_0x100ec6c3:
    II(0x100ec6c3, 0x2)   jmpd(0x100ec65d, -0x68);              /* jmp 0x100ec65d */
l_0x100ec6c5:
    II(0x100ec6c5, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100ec6c9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec6cb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec6ce, 0x5)   calld(0x10075f6c, -0x76767);          /* call 0x10075f6c */
    II(0x100ec6d3, 0x2)   jmpd(0x100ec6df, 0xa);                /* jmp 0x100ec6df */
//  II(0x100ec6d5, 0xa)   /* Недостижимый код. */
l_0x100ec6df:
    II(0x100ec6df, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100ec6e2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ec6e4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ec6e5, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ec6e6, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ec6e7, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ec6e8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ec6e9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ec6ea, 0x1)   retd();                               /* ret */
FUNC_END

