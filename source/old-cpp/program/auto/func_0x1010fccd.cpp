FUNC_BEGIN(0x1010fccd, 0x61e2a64087003c31, 0x20, ({0x68, 0x5c, 0x2, 0, 0, 0xe8, 0x7b, 0x60, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x40, 0x2, 0, 0, 0x88, 0x45, 0xfc, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xfc, 0x88, 0x85, 0xe0, 0xfd, 0xff, 0xff, 0x8d, 0x85, 0xcc, 0xfd, 0xff, 0xff, 0xe8, 0x7f, 0xf2, 0xff, 0xff, 0xe8, 0x3, 0xb5, 0x5, 0, 0x89, 0x85, 0xd8, 0xfd, 0xff, 0xff, 0x83, 0xbd, 0xe1, 0xfd, 0xff, 0xff, 0, 0xf, 0x84, 0xbf, 0, 0, 0, 0x8b, 0x95, 0xd8, 0xfd, 0xff, 0xff, 0x8b, 0x85, 0xe1, 0xfd, 0xff, 0xff, 0xe8, 0x5a, 0xb5, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x4d, 0x83, 0xbd, 0xd8, 0xfd, 0xff, 0xff, 0x1b, 0x74, 0x9, 0x83, 0xbd, 0xd8, 0xfd, 0xff, 0xff, 0xd, 0x75, 0x2c, 0x83, 0xbd, 0xd8, 0xfd, 0xff, 0xff, 0xd, 0x75, 0x9, 0xc6, 0x85, 0xc8, 0xfd, 0xff, 0xff, 0x1, 0xeb, 0x7, 0xc6, 0x85, 0xc8, 0xfd, 0xff, 0xff, 0, 0x31, 0xd2, 0x8a, 0x95, 0xc8, 0xfd, 0xff, 0xff, 0x8d, 0x85, 0xcc, 0xfd, 0xff, 0xff, 0xe8, 0x64, 0xfd, 0xff, 0xff, 0xc7, 0x85, 0xd8, 0xfd, 0xff, 0xff, 0, 0, 0, 0, 0xe9, 0x84, 0x1, 0, 0, 0x81, 0xbd, 0xd8, 0xfd, 0xff, 0xff, 0xd0, 0x7, 0, 0, 0x7c, 0xc, 0x81, 0xbd, 0xd8, 0xfd, 0xff, 0xff, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0x1a, 0x8d, 0x85, 0xcc, 0xfd, 0xff, 0xff, 0xe8, 0x95, 0xf8, 0xff, 0xff, 0xc7, 0x85, 0xd8, 0xfd, 0xff, 0xff, 0, 0, 0, 0, 0xe9, 0x50, 0x1, 0, 0, 0x83, 0xbd, 0xd8, 0xfd, 0xff, 0xff, 0, 0x7e, 0x20, 0xba, 0xd, 0, 0, 0, 0x8b, 0x85, 0xe1, 0xfd, 0xff, 0xff, 0xe8, 0xbc, 0xb4, 0xfd, 0xff, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0xcc, 0xfd, 0xff, 0xff, 0xe8, 0xf8, 0xfc, 0xff, 0xff, 0x83, 0xbd, 0xd8, 0xfd, 0xff, 0xff, 0, 0x7e, 0xc, 0x81, 0xbd, 0xd8, 0xfd, 0xff, 0xff, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0xc7, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0xff, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0xf, 0xbf, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0x83, 0xf8, 0xd, 0xf, 0x8d, 0xe4, 0, 0, 0, 0xf, 0xbf, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x83, 0xbc, 0x28, 0xe5, 0xfd, 0xff, 0xff, 0, 0xf, 0x84, 0xc7, 0, 0, 0, 0xf, 0xbf, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0x5, 0, 0x70, 0, 0, 0x3b, 0x85, 0xd8, 0xfd, 0xff, 0xff, 0x75, 0x25, 0x80, 0x7d, 0xf8, 0, 0x75, 0x16, 0xf, 0xbf, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0xe5, 0xfd, 0xff, 0xff, 0xe8, 0x5c, 0xfd, 0xfb, 0xff, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0x93, 0, 0, 0, 0xf, 0xbf, 0x95, 0xc4, 0xfd, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8b, 0x85, 0xd8, 0xfd, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x1d, 0xfe, 0xff, 0xff, 0x75, 0x17, 0xf, 0xbf, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0x6b, 0xc0, 0xc, 0x8b, 0x84, 0x28, 0x19, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xd8, 0xfd, 0xff, 0xff, 0xf, 0xbf, 0x95, 0xc4, 0xfd, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8b, 0x85, 0xd8, 0xfd, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x19, 0xfe, 0xff, 0xff, 0x75, 0x45, 0xf, 0xbf, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0x83, 0xf8, 0x6, 0x7f, 0x16, 0xf, 0xbf, 0x85, 0xc4, 0xfd, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0xe5, 0xfd, 0xff, 0xff, 0xe8, 0xe8, 0xfc, 0xfb, 0xff, 0x81, 0x85, 0xd8, 0xfd, 0xff, 0xff, 0x18, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x95, 0xc4, 0xfd, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8d, 0x85, 0xcc, 0xfd, 0xff, 0xff, 0xff, 0x94, 0x2a, 0x21, 0xfe, 0xff, 0xff, 0xeb, 0x5, 0xe9, 0, 0xff, 0xff, 0xff, 0x83, 0xbd, 0xd0, 0xfd, 0xff, 0xff, 0, 0x75, 0x9, 0x83, 0xbd, 0xd4, 0xfd, 0xff, 0xff, 0, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0xe9, 0xfd, 0xff, 0xff, 0x8b, 0x85, 0xd0, 0xfd, 0xff, 0xff, 0x89, 0x85, 0xc0, 0xfd, 0xff, 0xff, 0x8b, 0x85, 0xc0, 0xfd, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010fccd, 0x5)   pushd(0x25c);                         /* push dword 0x25c */
    II(0x1010fcd2, 0x5)   calld(sys_check_available_stack_size, 0x5607b); /* call 0x10165d52 */
    II(0x1010fcd7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010fcd8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010fcd9, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010fcda, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010fcdb, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010fcdc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010fcdd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010fcdf, 0x6)   sub(esp, 0x240);                      /* sub esp, 0x240 */
    II(0x1010fce5, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x1010fce8, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
//    II(0x1010fcec, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1010fcef, 0x6)   mov(memb_a32(ss, ebp - 0x220), al);   /* mov [ebp+0xfffffde0], al */
    II(0x1010fcf5, 0x6)   lea(eax, ebp - 0x234);                /* lea eax, [ebp+0xfffffdcc] */
    II(0x1010fcfb, 0x5)   calld(0x1010ef7f, -0xd81);            /* call 0x1010ef7f */
l_0x1010fd00:
    II(0x1010fd00, 0x5)   calld(/* sys */ 0x1016b208, 0x5b503); /* call 0x1016b208 */
    II(0x1010fd05, 0x6)   mov(memd_a32(ss, ebp - 0x228), eax);  /* mov [ebp+0xfffffdd8], eax */
    II(0x1010fd0b, 0x7)   cmp(memd_a32(ss, ebp - 0x21f), 0);    /* cmp dword [ebp+0xfffffde1], 0x0 */
    II(0x1010fd12, 0x6)   jzd(0x1010fdd7, 0xbf);                /* jz dword 0x1010fdd7 */
    II(0x1010fd18, 0x6)   mov(edx, memd_a32(ss, ebp - 0x228));  /* mov edx, [ebp+0xfffffdd8] */
    II(0x1010fd1e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x21f));  /* mov eax, [ebp+0xfffffde1] */
    II(0x1010fd24, 0x5)   calld(0x100eb283, -0x24aa6);          /* call 0x100eb283 */
    II(0x1010fd29, 0x2)   test(al, al);                         /* test al, al */
    II(0x1010fd2b, 0x2)   jzd(0x1010fd7a, 0x4d);                /* jz 0x1010fd7a */
    II(0x1010fd2d, 0x7)   cmp(memd_a32(ss, ebp - 0x228), 0x1b); /* cmp dword [ebp+0xfffffdd8], 0x1b */
    II(0x1010fd34, 0x2)   jzd(0x1010fd3f, 0x9);                 /* jz 0x1010fd3f */
    II(0x1010fd36, 0x7)   cmp(memd_a32(ss, ebp - 0x228), 0xd);  /* cmp dword [ebp+0xfffffdd8], 0xd */
    II(0x1010fd3d, 0x2)   jnzd(0x1010fd6b, 0x2c);               /* jnz 0x1010fd6b */
l_0x1010fd3f:
    II(0x1010fd3f, 0x7)   cmp(memd_a32(ss, ebp - 0x228), 0xd);  /* cmp dword [ebp+0xfffffdd8], 0xd */
    II(0x1010fd46, 0x2)   jnzd(0x1010fd51, 0x9);                /* jnz 0x1010fd51 */
    II(0x1010fd48, 0x7)   mov(memb_a32(ss, ebp - 0x238), 0x1);  /* mov byte [ebp+0xfffffdc8], 0x1 */
    II(0x1010fd4f, 0x2)   jmpd(0x1010fd58, 0x7);                /* jmp 0x1010fd58 */
l_0x1010fd51:
    II(0x1010fd51, 0x7)   mov(memb_a32(ss, ebp - 0x238), 0);    /* mov byte [ebp+0xfffffdc8], 0x0 */
l_0x1010fd58:
    II(0x1010fd58, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010fd5a, 0x6)   mov(dl, memb_a32(ss, ebp - 0x238));   /* mov dl, [ebp+0xfffffdc8] */
    II(0x1010fd60, 0x6)   lea(eax, ebp - 0x234);                /* lea eax, [ebp+0xfffffdcc] */
    II(0x1010fd66, 0x5)   calld(0x1010facf, -0x29c);            /* call 0x1010facf */
l_0x1010fd6b:
    II(0x1010fd6b, 0xa)   mov(memd_a32(ss, ebp - 0x228), 0);    /* mov dword [ebp+0xfffffdd8], 0x0 */
    II(0x1010fd75, 0x5)   jmpd(0x1010fefe, 0x184);              /* jmp 0x1010fefe */
l_0x1010fd7a:
    II(0x1010fd7a, 0xa)   cmp(memd_a32(ss, ebp - 0x228), 0x7d0); /* cmp dword [ebp+0xfffffdd8], 0x7d0 */
    II(0x1010fd84, 0x2)   jld(0x1010fd92, 0xc);                 /* jl 0x1010fd92 */
    II(0x1010fd86, 0xa)   cmp(memd_a32(ss, ebp - 0x228), 0x7000); /* cmp dword [ebp+0xfffffdd8], 0x7000 */
    II(0x1010fd90, 0x2)   jld(0x1010fd94, 0x2);                 /* jl 0x1010fd94 */
l_0x1010fd92:
    II(0x1010fd92, 0x2)   jmpd(0x1010fdae, 0x1a);               /* jmp 0x1010fdae */
l_0x1010fd94:
    II(0x1010fd94, 0x6)   lea(eax, ebp - 0x234);                /* lea eax, [ebp+0xfffffdcc] */
    II(0x1010fd9a, 0x5)   calld(0x1010f634, -0x76b);            /* call 0x1010f634 */
    II(0x1010fd9f, 0xa)   mov(memd_a32(ss, ebp - 0x228), 0);    /* mov dword [ebp+0xfffffdd8], 0x0 */
    II(0x1010fda9, 0x5)   jmpd(0x1010fefe, 0x150);              /* jmp 0x1010fefe */
l_0x1010fdae:
    II(0x1010fdae, 0x7)   cmp(memd_a32(ss, ebp - 0x228), 0);    /* cmp dword [ebp+0xfffffdd8], 0x0 */
    II(0x1010fdb5, 0x2)   jled(0x1010fdd7, 0x20);               /* jle 0x1010fdd7 */
    II(0x1010fdb7, 0x5)   mov(edx, 0xd);                        /* mov edx, 0xd */
    II(0x1010fdbc, 0x6)   mov(eax, memd_a32(ss, ebp - 0x21f));  /* mov eax, [ebp+0xfffffde1] */
    II(0x1010fdc2, 0x5)   calld(0x100eb283, -0x24b44);          /* call 0x100eb283 */
    II(0x1010fdc7, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1010fdcc, 0x6)   lea(eax, ebp - 0x234);                /* lea eax, [ebp+0xfffffdcc] */
    II(0x1010fdd2, 0x5)   calld(0x1010facf, -0x308);            /* call 0x1010facf */
l_0x1010fdd7:
    II(0x1010fdd7, 0x7)   cmp(memd_a32(ss, ebp - 0x228), 0);    /* cmp dword [ebp+0xfffffdd8], 0x0 */
    II(0x1010fdde, 0x2)   jled(0x1010fdec, 0xc);                /* jle 0x1010fdec */
    II(0x1010fde0, 0xa)   cmp(memd_a32(ss, ebp - 0x228), 0x7000); /* cmp dword [ebp+0xfffffdd8], 0x7000 */
    II(0x1010fdea, 0x2)   jld(0x1010fdee, 0x2);                 /* jl 0x1010fdee */
l_0x1010fdec:
    II(0x1010fdec, 0x2)   jmpd(0x1010fdf2, 0x4);                /* jmp 0x1010fdf2 */
l_0x1010fdee:
    II(0x1010fdee, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x1010fdf2:
    II(0x1010fdf2, 0xa)   mov(memd_a32(ss, ebp - 0x23c), 0);    /* mov dword [ebp+0xfffffdc4], 0x0 */
    II(0x1010fdfc, 0x2)   jmpd(0x1010fe0a, 0xc);                /* jmp 0x1010fe0a */
l_0x1010fdfe:
    II(0x1010fdfe, 0x6)   mov(eax, memd_a32(ss, ebp - 0x23c));  /* mov eax, [ebp+0xfffffdc4] */
    II(0x1010fe04, 0x6)   inc(memd_a32(ss, ebp - 0x23c));       /* inc dword [ebp+0xfffffdc4] */
l_0x1010fe0a:
    II(0x1010fe0a, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x23c)); /* movsx eax, word [ebp+0xfffffdc4] */
    II(0x1010fe11, 0x3)   cmp(eax, 0xd);                        /* cmp eax, 0xd */
    II(0x1010fe14, 0x6)   jged(0x1010fefe, 0xe4);               /* jge dword 0x1010fefe */
    II(0x1010fe1a, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x23c)); /* movsx eax, word [ebp+0xfffffdc4] */
    II(0x1010fe21, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010fe24, 0x8)   cmp(memd_a32(ds, eax + ebp - 0x21b), 0); /* cmp dword [eax+ebp+0xfffffde5], 0x0 */
    II(0x1010fe2c, 0x6)   jzd(0x1010fef9, 0xc7);                /* jz dword 0x1010fef9 */
    II(0x1010fe32, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x23c)); /* movsx eax, word [ebp+0xfffffdc4] */
    II(0x1010fe39, 0x5)   add(eax, 0x7000);                     /* add eax, 0x7000 */
    II(0x1010fe3e, 0x6)   cmp(eax, memd_a32(ss, ebp - 0x228));  /* cmp eax, [ebp+0xfffffdd8] */
    II(0x1010fe44, 0x2)   jnzd(0x1010fe6b, 0x25);               /* jnz 0x1010fe6b */
    II(0x1010fe46, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1010fe4a, 0x2)   jnzd(0x1010fe62, 0x16);               /* jnz 0x1010fe62 */
    II(0x1010fe4c, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x23c)); /* movsx eax, word [ebp+0xfffffdc4] */
    II(0x1010fe53, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010fe56, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x21b)); /* mov eax, [eax+ebp+0xfffffde5] */
    II(0x1010fe5d, 0x5)   calld(0x100cfbbe, -0x402a4);          /* call 0x100cfbbe */
l_0x1010fe62:
    II(0x1010fe62, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1010fe66, 0x5)   jmpd(0x1010fefe, 0x93);               /* jmp 0x1010fefe */
l_0x1010fe6b:
    II(0x1010fe6b, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x23c)); /* movsx edx, word [ebp+0xfffffdc4] */
    II(0x1010fe72, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1010fe75, 0x6)   mov(eax, memd_a32(ss, ebp - 0x228));  /* mov eax, [ebp+0xfffffdd8] */
    II(0x1010fe7b, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0x1e3)); /* cmp eax, [edx+ebp+0xfffffe1d] */
    II(0x1010fe82, 0x2)   jnzd(0x1010fe9b, 0x17);               /* jnz 0x1010fe9b */
    II(0x1010fe84, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x23c)); /* movsx eax, word [ebp+0xfffffdc4] */
    II(0x1010fe8b, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010fe8e, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x1e7)); /* mov eax, [eax+ebp+0xfffffe19] */
    II(0x1010fe95, 0x6)   mov(memd_a32(ss, ebp - 0x228), eax);  /* mov [ebp+0xfffffdd8], eax */
l_0x1010fe9b:
    II(0x1010fe9b, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x23c)); /* movsx edx, word [ebp+0xfffffdc4] */
    II(0x1010fea2, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1010fea5, 0x6)   mov(eax, memd_a32(ss, ebp - 0x228));  /* mov eax, [ebp+0xfffffdd8] */
    II(0x1010feab, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0x1e7)); /* cmp eax, [edx+ebp+0xfffffe19] */
    II(0x1010feb2, 0x2)   jnzd(0x1010fef9, 0x45);               /* jnz 0x1010fef9 */
    II(0x1010feb4, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x23c)); /* movsx eax, word [ebp+0xfffffdc4] */
    II(0x1010febb, 0x3)   cmp(eax, 0x6);                        /* cmp eax, 0x6 */
    II(0x1010febe, 0x2)   jgd(0x1010fed6, 0x16);                /* jg 0x1010fed6 */
    II(0x1010fec0, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x23c)); /* movsx eax, word [ebp+0xfffffdc4] */
    II(0x1010fec7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010feca, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x21b)); /* mov eax, [eax+ebp+0xfffffde5] */
    II(0x1010fed1, 0x5)   calld(0x100cfbbe, -0x40318);          /* call 0x100cfbbe */
l_0x1010fed6:
    II(0x1010fed6, 0xa)   add(memd_a32(ss, ebp - 0x228), 0xfffffc18); /* add dword [ebp+0xfffffdd8], 0xfffffc18 */
    II(0x1010fee0, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x23c)); /* movsx edx, word [ebp+0xfffffdc4] */
    II(0x1010fee7, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1010feea, 0x6)   lea(eax, ebp - 0x234);                /* lea eax, [ebp+0xfffffdcc] */
    II(0x1010fef0, 0x7)   calld_abs(memd_a32(ds, edx + ebp - 0x1df)); /* call dword near [edx+ebp+0xfffffe21] */
    II(0x1010fef7, 0x2)   jmpd(0x1010fefe, 0x5);                /* jmp 0x1010fefe */
l_0x1010fef9:
    II(0x1010fef9, 0x5)   jmpd(0x1010fdfe, -0x100);             /* jmp 0x1010fdfe */
l_0x1010fefe:
    II(0x1010fefe, 0x7)   cmp(memd_a32(ss, ebp - 0x230), 0);    /* cmp dword [ebp+0xfffffdd0], 0x0 */
    II(0x1010ff05, 0x2)   jnzd(0x1010ff10, 0x9);                /* jnz 0x1010ff10 */
    II(0x1010ff07, 0x7)   cmp(memd_a32(ss, ebp - 0x22c), 0);    /* cmp dword [ebp+0xfffffdd4], 0x0 */
    II(0x1010ff0e, 0x2)   jzd(0x1010ff12, 0x2);                 /* jz 0x1010ff12 */
l_0x1010ff10:
    II(0x1010ff10, 0x2)   jmpd(0x1010ff17, 0x5);                /* jmp 0x1010ff17 */
l_0x1010ff12:
    II(0x1010ff12, 0x5)   jmpd(0x1010fd00, -0x217);             /* jmp 0x1010fd00 */
l_0x1010ff17:
    II(0x1010ff17, 0x6)   mov(eax, memd_a32(ss, ebp - 0x230));  /* mov eax, [ebp+0xfffffdd0] */
    II(0x1010ff1d, 0x6)   mov(memd_a32(ss, ebp - 0x240), eax);  /* mov [ebp+0xfffffdc0], eax */
//    II(0x1010ff23, 0x6)   mov(eax, memd_a32(ss, ebp - 0x240));  /* mov eax, [ebp+0xfffffdc0] */
    II(0x1010ff29, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010ff2b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010ff2c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010ff2d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010ff2e, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010ff2f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010ff30, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010ff31, 0x1)   retd();                               /* ret */
FUNC_END

