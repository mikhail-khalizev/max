FUNC_BEGIN(0x10152962, 0x31420ef537b6aff6, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xe6, 0x33, 0x1, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0xe8, 0x23, 0xfd, 0xff, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xcb, 0x86, 0xf3, 0xff, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x3, 0x87, 0xf3, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xec, 0xfe, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x5f, 0x83, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x19, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xbc, 0x61, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xb2, 0x61, 0xf3, 0xff, 0xe9, 0x7c, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0x5, 0x8a, 0, 0, 0, 0xe8, 0x29, 0xa0, 0xf4, 0xff, 0x8b, 0x45, 0xf4, 0xe8, 0xc5, 0xfc, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xf3, 0x85, 0xf3, 0xff, 0x8d, 0x55, 0xf0, 0x8d, 0x45, 0xe8, 0xe8, 0x34, 0x8b, 0xf3, 0xff, 0x84, 0xc0, 0x75, 0x37, 0x8b, 0x45, 0xf4, 0x5, 0x8a, 0, 0, 0, 0xe8, 0x83, 0x41, 0xf2, 0xff, 0x98, 0x85, 0xc0, 0x74, 0x25, 0x80, 0x7d, 0xfc, 0, 0x74, 0xc, 0x8b, 0x45, 0xf4, 0xe8, 0xbb, 0x4, 0xf5, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x11, 0xe8, 0xb9, 0x86, 0xf3, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xf4, 0xe8, 0x46, 0xff, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x3b, 0x61, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x31, 0x61, 0xf3, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10152962, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10152967, 0x5)   calld(sys_check_available_stack_size, 0x133e6); /* call 0x10165d52 */
    II(0x1015296c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015296d, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015296e, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015296f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10152970, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10152972, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10152978, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015297b, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1015297e, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x10152981, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10152984, 0x5)   calld(0x101526ac, -0x2dd);            /* call 0x101526ac */
    II(0x10152989, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x1015298c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015298e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10152990, 0x5)   calld(0x1008b060, -0xc7935);          /* call 0x1008b060 */
    II(0x10152995, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x10152999, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1015299c, 0x5)   calld(my_ctor_0x101b3b58, -0xc78fd);  /* call 0x1008b0a4 */
    II(0x101529a1, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x101529a4, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x101529a8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101529aa, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x101529ad, 0x5)   calld(0x1013ad11, -0x17ca1);          /* call 0x1013ad11 */
    II(0x101529b2, 0x2)   test(al, al);                         /* test al, al */
    II(0x101529b4, 0x2)   jzd(0x101529cf, 0x19);                /* jz 0x101529cf */
    II(0x101529b6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101529b8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101529bb, 0x5)   calld(0x10088b7c, -0xc9e44);          /* call 0x10088b7c */
    II(0x101529c0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101529c2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x101529c5, 0x5)   calld(0x10088b7c, -0xc9e4e);          /* call 0x10088b7c */
    II(0x101529ca, 0x5)   jmpd(0x10152a4b, 0x7c);               /* jmp 0x10152a4b */
l_0x101529cf:
    II(0x101529cf, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101529d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101529d5, 0x5)   add(eax, 0x8a);                       /* add eax, 0x8a */
    II(0x101529da, 0x5)   calld(0x1009ca08, -0xb5fd7);          /* call 0x1009ca08 */
    II(0x101529df, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101529e2, 0x5)   calld(0x101526ac, -0x33b);            /* call 0x101526ac */
    II(0x101529e7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101529e9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101529ec, 0x5)   calld(0x1008afe4, -0xc7a0d);          /* call 0x1008afe4 */
    II(0x101529f1, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x101529f4, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101529f7, 0x5)   calld(0x1008b530, -0xc74cc);          /* call 0x1008b530 */
    II(0x101529fc, 0x2)   test(al, al);                         /* test al, al */
    II(0x101529fe, 0x2)   jnzd(0x10152a37, 0x37);               /* jnz 0x10152a37 */
    II(0x10152a00, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10152a03, 0x5)   add(eax, 0x8a);                       /* add eax, 0x8a */
    II(0x10152a08, 0x5)   calld(0x10076b90, -0xdbe7d);          /* call 0x10076b90 */
    II(0x10152a0d, 0x1)   cwde();                               /* cwde */
    II(0x10152a0e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10152a10, 0x2)   jzd(0x10152a37, 0x25);                /* jz 0x10152a37 */
    II(0x10152a12, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10152a16, 0x2)   jzd(0x10152a24, 0xc);                 /* jz 0x10152a24 */
    II(0x10152a18, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10152a1b, 0x5)   calld(0x100a2edb, -0xafb45);          /* call 0x100a2edb */
    II(0x10152a20, 0x2)   test(al, al);                         /* test al, al */
    II(0x10152a22, 0x2)   jnzd(0x10152a26, 0x2);                /* jnz 0x10152a26 */
l_0x10152a24:
    II(0x10152a24, 0x2)   jmpd(0x10152a37, 0x11);               /* jmp 0x10152a37 */
l_0x10152a26:
    II(0x10152a26, 0x5)   calld(0x1008b0e4, -0xc7947);          /* call 0x1008b0e4 */
    II(0x10152a2b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10152a2d, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10152a2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10152a32, 0x5)   calld(0x100a297d, -0xb00ba);          /* call 0x100a297d */
l_0x10152a37:
    II(0x10152a37, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10152a39, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10152a3c, 0x5)   calld(0x10088b7c, -0xc9ec5);          /* call 0x10088b7c */
    II(0x10152a41, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10152a43, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10152a46, 0x5)   calld(0x10088b7c, -0xc9ecf);          /* call 0x10088b7c */
l_0x10152a4b:
    II(0x10152a4b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10152a4d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10152a4e, 0x1)   popd(edi);                            /* pop edi */
    II(0x10152a4f, 0x1)   popd(esi);                            /* pop esi */
    II(0x10152a50, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10152a51, 0x1)   retd();                               /* ret */
FUNC_END

