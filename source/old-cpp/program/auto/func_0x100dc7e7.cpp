FUNC_BEGIN(0x100dc7e7, 0x6aa05929c590207b, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x61, 0x95, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xf9, 0x3f, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0xe8, 0x51, 0xb7, 0xff, 0xff, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x27, 0xda, 0x8, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x28, 0x7d, 0x11, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x1d, 0xeb, 0xfa, 0xff, 0x66, 0x3b, 0x45, 0xf4, 0x7f, 0x5, 0xe9, 0x12, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x24, 0x3, 0x45, 0xf4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xba, 0xe9, 0xfa, 0xff, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x20, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xbb, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xa0, 0x34, 0, 0, 0x66, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x24, 0x3, 0x45, 0xf4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x7d, 0xe9, 0xfa, 0xff, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc1, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x1a, 0xba, 0x1, 0, 0, 0, 0xb8, 0x31, 0, 0, 0, 0xe8, 0x37, 0x55, 0xf9, 0xff, 0x8b, 0x55, 0xf8, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xf0, 0xeb, 0x18, 0xba, 0x1, 0, 0, 0, 0xb8, 0x19, 0, 0, 0, 0xe8, 0x1d, 0x55, 0xf9, 0xff, 0x8b, 0x55, 0xf8, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xf0, 0x6a, 0x4, 0x8b, 0x55, 0xfc, 0x8b, 0x4a, 0x12, 0xc1, 0xf9, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x42, 0x44, 0xe8, 0x56, 0x86, 0xff, 0xff, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x75, 0xf0, 0xf, 0xbf, 0x7d, 0xf4, 0xc1, 0xe7, 0x5, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x89, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x83, 0xc7, 0x10, 0x29, 0xc7, 0x8b, 0x55, 0xfc, 0x8b, 0x42, 0x12, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xf8, 0x89, 0x7d, 0xec, 0x8b, 0x55, 0xfc, 0x8b, 0x42, 0x44, 0xe8, 0xb0, 0x85, 0xff, 0xff, 0xf, 0xbf, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0x1, 0xc7, 0x8b, 0x55, 0xfc, 0x8b, 0x42, 0x44, 0xe8, 0x2, 0x86, 0xff, 0xff, 0x98, 0x1, 0xf8, 0x3, 0x45, 0xec, 0x89, 0xf2, 0xe8, 0xf5, 0xec, 0x4, 0, 0xe9, 0xc6, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0xe8, 0x7d, 0x85, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0xe8, 0xc3, 0x85, 0xff, 0xff, 0x98, 0x8b, 0x55, 0xdc, 0x1, 0xc2, 0x89, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0xe8, 0x7b, 0x85, 0xff, 0xff, 0x98, 0x8b, 0x55, 0xe0, 0x1, 0xc2, 0x89, 0x55, 0xe8, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0xe8, 0xaa, 0x8, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100dc7e7, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x100dc7ec, 0x5)   calld(sys_check_available_stack_size, 0x89561); /* call 0x10165d52 */
    II(0x100dc7f1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100dc7f2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100dc7f3, 0x1)   pushd(edx);                           /* push edx */
    II(0x100dc7f4, 0x1)   pushd(esi);                           /* push esi */
    II(0x100dc7f5, 0x1)   pushd(edi);                           /* push edi */
    II(0x100dc7f6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100dc7f7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100dc7f9, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100dc7ff, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100dc802, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc805, 0x5)   calld(0x100d0803, -0xc007);           /* call 0x100d0803 */
    II(0x100dc80a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc80d, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x100dc810, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc813, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100dc816, 0x5)   calld(0x100d7f6c, -0x48af);           /* call 0x100d7f6c */
    II(0x100dc81b, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100dc820, 0x5)   calld(/* sys */ 0x1016a24c, 0x8da27); /* call 0x1016a24c */
    II(0x100dc825, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100dc82c, 0x2)   jmpd(0x100dc834, 0x6);                /* jmp 0x100dc834 */
l_0x100dc82e:
    II(0x100dc82e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100dc831, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100dc834:
    II(0x100dc834, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100dc837, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc83a, 0x4)   cmp(ax, memw_a32(ds, edx + 0x28));    /* cmp ax, [edx+0x28] */
    II(0x100dc83e, 0x2)   jged(0x100dc851, 0x11);               /* jge 0x100dc851 */
    II(0x100dc840, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc843, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100dc846, 0x5)   calld(my_2_get_count, -0x514e3);      /* call 0x1008b368 */
    II(0x100dc84b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100dc84f, 0x2)   jgd(0x100dc856, 0x5);                 /* jg 0x100dc856 */
l_0x100dc851:
    II(0x100dc851, 0x5)   jmpd(0x100dc968, 0x112);              /* jmp 0x100dc968 */
l_0x100dc856:
    II(0x100dc856, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc859, 0x4)   mov(ax, memw_a32(ds, eax + 0x24));    /* mov ax, [eax+0x24] */
    II(0x100dc85d, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x100dc860, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100dc863, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc866, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100dc869, 0x5)   calld(0x1008b228, -0x51646);          /* call 0x1008b228 */
    II(0x100dc86e, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100dc871, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc874, 0x3)   mov(eax, memd_a32(ds, eax + 0x20));   /* mov eax, [eax+0x20] */
    II(0x100dc877, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dc87a, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100dc880, 0x5)   mov(ebx, 0x101ca468);                 /* mov ebx, 0x101ca468 */
    II(0x100dc885, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100dc887, 0x5)   calld(0x100dfd2c, 0x34a0);            /* call 0x100dfd2c */
    II(0x100dc88c, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100dc890, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100dc893, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc896, 0x4)   mov(ax, memw_a32(ds, eax + 0x24));    /* mov ax, [eax+0x24] */
    II(0x100dc89a, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x100dc89d, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100dc8a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc8a3, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100dc8a6, 0x5)   calld(0x1008b228, -0x51683);          /* call 0x1008b228 */
    II(0x100dc8ab, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100dc8ae, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100dc8b1, 0x7)   test(memb_a32(ds, eax + 0x101c81c1), 0x2); /* test byte [eax+0x101c81c1], 0x2 */
    II(0x100dc8b8, 0x2)   jzd(0x100dc8d4, 0x1a);                /* jz 0x100dc8d4 */
    II(0x100dc8ba, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100dc8bf, 0x5)   mov(eax, 0x31);                       /* mov eax, 0x31 */
    II(0x100dc8c4, 0x5)   calld(0x10071e00, -0x6aac9);          /* call 0x10071e00 */
    II(0x100dc8c9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100dc8cc, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100dc8cf, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x100dc8d2, 0x2)   jmpd(0x100dc8ec, 0x18);               /* jmp 0x100dc8ec */
l_0x100dc8d4:
    II(0x100dc8d4, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100dc8d9, 0x5)   mov(eax, 0x19);                       /* mov eax, 0x19 */
    II(0x100dc8de, 0x5)   calld(0x10071e00, -0x6aae3);          /* call 0x10071e00 */
    II(0x100dc8e3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100dc8e6, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100dc8e9, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
l_0x100dc8ec:
    II(0x100dc8ec, 0x2)   pushd(0x4);                           /* push 0x4 */
    II(0x100dc8ee, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc8f1, 0x3)   mov(ecx, memd_a32(ds, edx + 0x12));   /* mov ecx, [edx+0x12] */
    II(0x100dc8f4, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100dc8f7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc8fa, 0x3)   mov(eax, memd_a32(ds, edx + 0x44));   /* mov eax, [edx+0x44] */
    II(0x100dc8fd, 0x5)   calld(0x100d4f58, -0x79aa);           /* call 0x100d4f58 */
    II(0x100dc902, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100dc905, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x10)); /* movsx esi, word [ebp-0x10] */
    II(0x100dc909, 0x4)   movsx(edi, memw_a32(ss, ebp - 0xc));  /* movsx edi, word [ebp-0xc] */
    II(0x100dc90d, 0x3)   shl(edi, 0x5);                        /* shl edi, 0x5 */
    II(0x100dc910, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x100dc916, 0x2)   mov(edx, eax);                        /* mov edx, eax */
//    II(0x100dc918, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100dc91a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100dc91d, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100dc91f, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100dc921, 0x3)   add(edi, 0x10);                       /* add edi, 0x10 */
    II(0x100dc924, 0x2)   sub(edi, eax);                        /* sub edi, eax */
    II(0x100dc926, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc929, 0x3)   mov(eax, memd_a32(ds, edx + 0x12));   /* mov eax, [edx+0x12] */
    II(0x100dc92c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100dc92f, 0x3)   imul(edi, eax);                       /* imul edi, eax */
    II(0x100dc932, 0x3)   mov(memd_a32(ss, ebp - 0x14), edi);   /* mov [ebp-0x14], edi */
    II(0x100dc935, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc938, 0x3)   mov(eax, memd_a32(ds, edx + 0x44));   /* mov eax, [edx+0x44] */
    II(0x100dc93b, 0x5)   calld(0x100d4ef0, -0x7a50);           /* call 0x100d4ef0 */
    II(0x100dc940, 0x3)   movsx(edi, ax);                       /* movsx edi, ax */
    II(0x100dc943, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc946, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100dc949, 0x2)   add(edi, eax);                        /* add edi, eax */
    II(0x100dc94b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100dc94e, 0x3)   mov(eax, memd_a32(ds, edx + 0x44));   /* mov eax, [edx+0x44] */
    II(0x100dc951, 0x5)   calld(0x100d4f58, -0x79fe);           /* call 0x100d4f58 */
    II(0x100dc956, 0x1)   cwde();                               /* cwde */
    II(0x100dc957, 0x2)   add(eax, edi);                        /* add eax, edi */
    II(0x100dc959, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x100dc95c, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x100dc95e, 0x5)   calld(0x1012b658, 0x4ecf5);           /* call 0x1012b658 */
    II(0x100dc963, 0x5)   jmpd(0x100dc82e, -0x13a);             /* jmp 0x100dc82e */
l_0x100dc968:
    II(0x100dc968, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc96b, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100dc96e, 0x5)   calld(0x100d4ef0, -0x7a83);           /* call 0x100d4ef0 */
    II(0x100dc973, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100dc976, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc979, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x100dc97c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100dc97e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100dc981, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc984, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100dc987, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100dc98a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc98d, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100dc990, 0x5)   calld(0x100d4f58, -0x7a3d);           /* call 0x100d4f58 */
    II(0x100dc995, 0x1)   cwde();                               /* cwde */
    II(0x100dc996, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100dc999, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100dc99b, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x100dc99e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc9a1, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100dc9a4, 0x5)   calld(0x100d4f24, -0x7a85);           /* call 0x100d4f24 */
    II(0x100dc9a9, 0x1)   cwde();                               /* cwde */
    II(0x100dc9aa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x100dc9ad, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100dc9af, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x100dc9b2, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100dc9b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dc9b8, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100dc9bb, 0x5)   calld(sys_display_draw_1, 0x8aae8);   /* call 0x101674a8 */
    II(0x100dc9c0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100dc9c2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100dc9c3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100dc9c4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100dc9c5, 0x1)   popd(edx);                            /* pop edx */
    II(0x100dc9c6, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100dc9c7, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100dc9c8, 0x1)   retd();                               /* ret */
FUNC_END

