FUNC_BEGIN(0x10154355, 0xa80c1af008aa2761, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0xf3, 0x19, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0x8b, 0x55, 0xfc, 0x8a, 0x42, 0x29, 0x89, 0x45, 0xec, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0xe7, 0x1c, 0xf2, 0xff, 0x84, 0xc0, 0x75, 0x9, 0x80, 0x3d, 0x80, 0x39, 0x1c, 0x10, 0, 0x74, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x88, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x58, 0x3, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x23, 0x75, 0x12, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x58, 0xb4, 0x5, 0xf6, 0xe4, 0x8b, 0x55, 0xfc, 0x88, 0x42, 0x58, 0xeb, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x37, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x44, 0x75, 0x6, 0x8b, 0x45, 0xfc, 0xd0, 0x60, 0x58, 0x80, 0x7d, 0xf0, 0, 0x75, 0x3f, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x41, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3f, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x1b, 0xe8, 0xc7, 0xe7, 0xfa, 0xff, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0xc, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x79, 0x91, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x14, 0x2, 0xf, 0x84, 0x97, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x15, 0x2, 0x74, 0x21, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x2e, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x37, 0x1, 0xd0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x22, 0x57, 0xff, 0xff, 0xe9, 0x6d, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0x42, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x1c, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x58, 0x8, 0x8b, 0x45, 0xec, 0x5, 0x68, 0, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x51, 0x56, 0xff, 0xff, 0xeb, 0x1a, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x58, 0x8, 0x8b, 0x45, 0xec, 0x5, 0x68, 0, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x35, 0x56, 0xff, 0xff, 0xeb, 0x17, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xec, 0x66, 0x3, 0x50, 0x37, 0x89, 0xd0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x1c, 0x56, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x14, 0x4, 0xf, 0x84, 0x7c, 0x1, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xec, 0x21, 0xf2, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x47, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x45, 0x75, 0x9, 0xc7, 0x45, 0xe0, 0x55, 0, 0, 0, 0xeb, 0x4a, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x51, 0x75, 0x9, 0xc7, 0x45, 0xe0, 0x57, 0, 0, 0, 0xeb, 0x37, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x52, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x50, 0x75, 0x9, 0xc7, 0x45, 0xe0, 0x58, 0, 0, 0, 0xeb, 0x1a, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x53, 0x75, 0x9, 0xc7, 0x45, 0xe0, 0x56, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0x54, 0, 0, 0, 0x66, 0x83, 0x7d, 0xe0, 0x57, 0x74, 0x7, 0x66, 0x83, 0x7d, 0xe0, 0x58, 0x75, 0x9, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x34, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x43, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1c, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x41, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x1a, 0x98, 0x89, 0xda, 0xe8, 0x2b, 0x7f, 0, 0, 0x89, 0x45, 0xec, 0x66, 0x83, 0x7d, 0xe0, 0x56, 0x75, 0x3, 0xd1, 0x65, 0xec, 0xe8, 0xc2, 0xe5, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x50, 0x31, 0xc9, 0x8b, 0x55, 0xfc, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xe0, 0x8d, 0x45, 0xdc, 0xe8, 0xda, 0x5c, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xe, 0x66, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x18, 0x19, 0xf2, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x58, 0x1f, 0xf2, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x41, 0x66, 0x89, 0x50, 0x41, 0x8d, 0x45, 0xe8, 0xe8, 0x45, 0x1f, 0xf2, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0x43, 0x66, 0x89, 0x50, 0x43, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x2f, 0x1f, 0xf2, 0xff, 0xe8, 0x4e, 0x63, 0xf3, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x22, 0x1f, 0xf2, 0xff, 0xc6, 0x40, 0x3d, 0x2, 0x8d, 0x45, 0xe8, 0xe8, 0x16, 0x1f, 0xf2, 0xff, 0xc6, 0x40, 0x3e, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x98, 0x81, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xb8, 0x18, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0xfe, 0x48, 0x54, 0x80, 0x3d, 0x15, 0x39, 0x1c, 0x10, 0, 0x75, 0x21, 0x8b, 0x45, 0xfc, 0xfe, 0x48, 0x50, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6c, 0xe8, 0x9c, 0x20, 0xf2, 0xff, 0x80, 0x78, 0x16, 0, 0x75, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0xfc, 0xfb, 0xff, 0xff, 0xeb, 0x1a, 0x8b, 0x45, 0xfc, 0x8a, 0x50, 0x50, 0x8b, 0x45, 0xfc, 0x3a, 0x50, 0x54, 0x76, 0xc, 0x8b, 0x45, 0xfc, 0x8a, 0x50, 0x54, 0x8b, 0x45, 0xfc, 0x88, 0x50, 0x50, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x9, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10154355, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x1015435a, 0x5)   calld(sys_check_available_stack_size, 0x119f3); /* call 0x10165d52 */
    II(0x1015435f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10154360, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10154361, 0x1)   pushd(edx);                           /* push edx */
    II(0x10154362, 0x1)   pushd(esi);                           /* push esi */
    II(0x10154363, 0x1)   pushd(edi);                           /* push edi */
    II(0x10154364, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10154365, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10154367, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1015436d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10154370, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10154372, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10154375, 0x3)   mov(al, memb_a32(ds, edx + 0x29));    /* mov al, [edx+0x29] */
    II(0x10154378, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015437b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015437d, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10154382, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10154385, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154388, 0x5)   calld(0x10076074, -0xde319);          /* call 0x10076074 */
    II(0x1015438d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015438f, 0x2)   jnzd(0x1015439a, 0x9);                /* jnz 0x1015439a */
    II(0x10154391, 0x7)   cmp(memb_a32(ds, 0x101c3980), 0);     /* cmp byte [0x101c3980], 0x0 */
    II(0x10154398, 0x2)   jzd(0x101543a0, 0x6);                 /* jz 0x101543a0 */
l_0x1015439a:
    II(0x1015439a, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1015439e, 0x2)   jmpd(0x101543a4, 0x4);                /* jmp 0x101543a4 */
l_0x101543a0:
    II(0x101543a0, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x101543a4:
    II(0x101543a4, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x101543a7, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x101543aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101543ad, 0x4)   mov(memb_a32(ds, eax + 0x58), 0x3);   /* mov byte [eax+0x58], 0x3 */
    II(0x101543b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101543b4, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x23);   /* cmp word [eax+0x8], 0x23 */
    II(0x101543b9, 0x2)   jnzd(0x101543cd, 0x12);               /* jnz 0x101543cd */
    II(0x101543bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101543be, 0x3)   mov(al, memb_a32(ds, eax + 0x58));    /* mov al, [eax+0x58] */
    II(0x101543c1, 0x2)   mov(ah, 0x5);                         /* mov ah, 0x5 */
    II(0x101543c3, 0x2)   mul(ah);                              /* mul ah */
    II(0x101543c5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101543c8, 0x3)   mov(memb_a32(ds, edx + 0x58), al);    /* mov [edx+0x58], al */
    II(0x101543cb, 0x2)   jmpd(0x101543e7, 0x1a);               /* jmp 0x101543e7 */
l_0x101543cd:
    II(0x101543cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101543d0, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x37);   /* cmp word [eax+0x8], 0x37 */
    II(0x101543d5, 0x2)   jzd(0x101543e1, 0xa);                 /* jz 0x101543e1 */
    II(0x101543d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101543da, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x44);   /* cmp word [eax+0x8], 0x44 */
    II(0x101543df, 0x2)   jnzd(0x101543e7, 0x6);                /* jnz 0x101543e7 */
l_0x101543e1:
    II(0x101543e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101543e4, 0x3)   shl(memb_a32(ds, eax + 0x58), 0x1);   /* shl byte [eax+0x58], 1 */
l_0x101543e7:
    II(0x101543e7, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x101543eb, 0x2)   jnzd(0x1015442c, 0x3f);               /* jnz 0x1015442c */
    II(0x101543ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101543f0, 0x3)   mov(edx, memd_a32(ds, eax + 0x41));   /* mov edx, [eax+0x41] */
    II(0x101543f3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101543f6, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x101543fb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101543fe, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10154401, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154404, 0x3)   mov(eax, memd_a32(ds, eax + 0x3f));   /* mov eax, [eax+0x3f] */
    II(0x10154407, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015440a, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1015440c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015440e, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10154413, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10154419, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x1015441f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10154421, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10154423, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10154428, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015442a, 0x2)   jzd(0x10154447, 0x1b);                /* jz 0x10154447 */
l_0x1015442c:
    II(0x1015442c, 0x5)   calld(0x10102bf8, -0x51839);          /* call 0x10102bf8 */
    II(0x10154431, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10154433, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x10154435, 0x5)   mov(ebx, 0xc);                        /* mov ebx, 0xc */
    II(0x1015443a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015443d, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x10154442, 0x5)   calld(0x1013d5c0, -0x16e87);          /* call 0x1013d5c0 */
l_0x10154447:
    II(0x10154447, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015444a, 0x4)   test(memb_a32(ds, eax + 0x14), 0x2);  /* test byte [eax+0x14], 0x2 */
    II(0x1015444e, 0x6)   jzd(0x101544eb, 0x97);                /* jz dword 0x101544eb */
    II(0x10154454, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154457, 0x4)   test(memb_a32(ds, eax + 0x15), 0x2);  /* test byte [eax+0x15], 0x2 */
    II(0x1015445b, 0x2)   jzd(0x1015447e, 0x21);                /* jz 0x1015447e */
    II(0x1015445d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154460, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10154462, 0x3)   mov(dl, memb_a32(ds, eax + 0x2e));    /* mov dl, [eax+0x2e] */
    II(0x10154465, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154468, 0x4)   mov(ax, memw_a32(ds, eax + 0x37));    /* mov ax, [eax+0x37] */
    II(0x1015446c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1015446e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10154471, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154474, 0x5)   calld(0x10149b9b, -0xa8de);           /* call 0x10149b9b */
    II(0x10154479, 0x5)   jmpd(0x101544eb, 0x6d);               /* jmp 0x101544eb */
l_0x1015447e:
    II(0x1015447e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154481, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x10154486, 0x2)   jzd(0x10154492, 0xa);                 /* jz 0x10154492 */
    II(0x10154488, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015448b, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x10154490, 0x2)   jnzd(0x101544d4, 0x42);               /* jnz 0x101544d4 */
l_0x10154492:
    II(0x10154492, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154495, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1015449a, 0x2)   jnzd(0x101544b8, 0x1c);               /* jnz 0x101544b8 */
    II(0x1015449c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015449f, 0x4)   mov(memb_a32(ds, eax + 0x58), 0x8);   /* mov byte [eax+0x58], 0x8 */
    II(0x101544a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101544a6, 0x5)   add(eax, 0x68);                       /* add eax, 0x68 */
    II(0x101544ab, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101544ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101544b1, 0x5)   calld(0x10149b07, -0xa9af);           /* call 0x10149b07 */
    II(0x101544b6, 0x2)   jmpd(0x101544d2, 0x1a);               /* jmp 0x101544d2 */
l_0x101544b8:
    II(0x101544b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101544bb, 0x4)   mov(memb_a32(ds, eax + 0x58), 0x8);   /* mov byte [eax+0x58], 0x8 */
    II(0x101544bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101544c2, 0x5)   add(eax, 0x68);                       /* add eax, 0x68 */
    II(0x101544c7, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101544ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101544cd, 0x5)   calld(0x10149b07, -0xa9cb);           /* call 0x10149b07 */
l_0x101544d2:
    II(0x101544d2, 0x2)   jmpd(0x101544eb, 0x17);               /* jmp 0x101544eb */
l_0x101544d4:
    II(0x101544d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101544d7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x101544da, 0x4)   add(dx, memw_a32(ds, eax + 0x37));    /* add dx, [eax+0x37] */
    II(0x101544de, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101544e0, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101544e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101544e6, 0x5)   calld(0x10149b07, -0xa9e4);           /* call 0x10149b07 */
l_0x101544eb:
    II(0x101544eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101544ee, 0x4)   test(memb_a32(ds, eax + 0x14), 0x4);  /* test byte [eax+0x14], 0x4 */
    II(0x101544f2, 0x6)   jzd(0x10154674, 0x17c);               /* jz dword 0x10154674 */
    II(0x101544f8, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x101544fc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x101544ff, 0x5)   calld(my_ctor_0x101b38f8, -0xdde14);  /* call 0x100766f0 */
    II(0x10154504, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10154507, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1015450b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015450e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x47);   /* cmp word [eax+0x8], 0x47 */
    II(0x10154513, 0x2)   jzd(0x1015451f, 0xa);                 /* jz 0x1015451f */
    II(0x10154515, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154518, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x45);   /* cmp word [eax+0x8], 0x45 */
    II(0x1015451d, 0x2)   jnzd(0x10154528, 0x9);                /* jnz 0x10154528 */
l_0x1015451f:
    II(0x1015451f, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x55);  /* mov dword [ebp-0x20], 0x55 */
    II(0x10154526, 0x2)   jmpd(0x10154572, 0x4a);               /* jmp 0x10154572 */
l_0x10154528:
    II(0x10154528, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015452b, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x51);   /* cmp word [eax+0x8], 0x51 */
    II(0x10154530, 0x2)   jnzd(0x1015453b, 0x9);                /* jnz 0x1015453b */
    II(0x10154532, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x57);  /* mov dword [ebp-0x20], 0x57 */
    II(0x10154539, 0x2)   jmpd(0x10154572, 0x37);               /* jmp 0x10154572 */
l_0x1015453b:
    II(0x1015453b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015453e, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x52);   /* cmp word [eax+0x8], 0x52 */
    II(0x10154543, 0x2)   jzd(0x1015454f, 0xa);                 /* jz 0x1015454f */
    II(0x10154545, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154548, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x50);   /* cmp word [eax+0x8], 0x50 */
    II(0x1015454d, 0x2)   jnzd(0x10154558, 0x9);                /* jnz 0x10154558 */
l_0x1015454f:
    II(0x1015454f, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x58);  /* mov dword [ebp-0x20], 0x58 */
    II(0x10154556, 0x2)   jmpd(0x10154572, 0x1a);               /* jmp 0x10154572 */
l_0x10154558:
    II(0x10154558, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015455b, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x53);   /* cmp word [eax+0x8], 0x53 */
    II(0x10154560, 0x2)   jnzd(0x1015456b, 0x9);                /* jnz 0x1015456b */
    II(0x10154562, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x56);  /* mov dword [ebp-0x20], 0x56 */
    II(0x10154569, 0x2)   jmpd(0x10154572, 0x7);                /* jmp 0x10154572 */
l_0x1015456b:
    II(0x1015456b, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x54);  /* mov dword [ebp-0x20], 0x54 */
l_0x10154572:
    II(0x10154572, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x57);  /* cmp word [ebp-0x20], 0x57 */
    II(0x10154577, 0x2)   jzd(0x10154580, 0x7);                 /* jz 0x10154580 */
    II(0x10154579, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x58);  /* cmp word [ebp-0x20], 0x58 */
    II(0x1015457e, 0x2)   jnzd(0x10154589, 0x9);                /* jnz 0x10154589 */
l_0x10154580:
    II(0x10154580, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10154587, 0x2)   jmpd(0x101545bd, 0x34);               /* jmp 0x101545bd */
l_0x10154589:
    II(0x10154589, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015458c, 0x4)   mov(ax, memw_a32(ds, eax + 0x43));    /* mov ax, [eax+0x43] */
    II(0x10154590, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10154593, 0x4)   sub(ax, memw_a32(ds, edx + 0x1c));    /* sub ax, [edx+0x1c] */
    II(0x10154597, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015459a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015459d, 0x4)   mov(ax, memw_a32(ds, eax + 0x41));    /* mov ax, [eax+0x41] */
    II(0x101545a1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101545a4, 0x4)   sub(ax, memw_a32(ds, edx + 0x1a));    /* sub ax, [edx+0x1a] */
    II(0x101545a8, 0x1)   cwde();                               /* cwde */
    II(0x101545a9, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x101545ab, 0x5)   calld(0x1015c4db, 0x7f2b);            /* call 0x1015c4db */
    II(0x101545b0, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101545b3, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x56);  /* cmp word [ebp-0x20], 0x56 */
    II(0x101545b8, 0x2)   jnzd(0x101545bd, 0x3);                /* jnz 0x101545bd */
    II(0x101545ba, 0x3)   shl(memd_a32(ss, ebp - 0x14), 0x1);   /* shl dword [ebp-0x14], 1 */
l_0x101545bd:
    II(0x101545bd, 0x5)   calld(0x10102b84, -0x51a3e);          /* call 0x10102b84 */
    II(0x101545c2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101545c7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101545c8, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101545cd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101545ce, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101545d2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101545d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101545d6, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x101545d9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101545dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101545dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101545e0, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x101545e3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101545e6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101545e7, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101545e9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101545ec, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101545ee, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x101545f1, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101545f4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x101545f8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101545fb, 0x5)   calld(0x1015a2da, 0x5cda);            /* call 0x1015a2da */
    II(0x10154600, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10154602, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10154605, 0x5)   calld(0x1008ac18, -0xc99f2);          /* call 0x1008ac18 */
    II(0x1015460a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015460c, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1015460f, 0x5)   calld(0x10075f2c, -0xde6e8);          /* call 0x10075f2c */
    II(0x10154614, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10154617, 0x5)   calld(0x10076574, -0xde0a8);          /* call 0x10076574 */
    II(0x1015461c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015461f, 0x4)   mov(dx, memw_a32(ds, edx + 0x41));    /* mov dx, [edx+0x41] */
    II(0x10154623, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x10154627, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1015462a, 0x5)   calld(0x10076574, -0xde0bb);          /* call 0x10076574 */
    II(0x1015462f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10154632, 0x4)   mov(dx, memw_a32(ds, edx + 0x43));    /* mov dx, [edx+0x43] */
    II(0x10154636, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x1015463a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015463d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10154640, 0x5)   calld(0x10076574, -0xde0d1);          /* call 0x10076574 */
    II(0x10154645, 0x5)   calld(0x1008a998, -0xc9cb2);          /* call 0x1008a998 */
    II(0x1015464a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1015464d, 0x5)   calld(0x10076574, -0xde0de);          /* call 0x10076574 */
    II(0x10154652, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x2);   /* mov byte [eax+0x3d], 0x2 */
    II(0x10154656, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10154659, 0x5)   calld(0x10076574, -0xde0ea);          /* call 0x10076574 */
    II(0x1015465e, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0);     /* mov byte [eax+0x3e], 0x0 */
    II(0x10154662, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154665, 0x5)   calld(0x1015c802, 0x8198);            /* call 0x1015c802 */
    II(0x1015466a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015466c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1015466f, 0x5)   calld(0x10075f2c, -0xde748);          /* call 0x10075f2c */
l_0x10154674:
    II(0x10154674, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154677, 0x3)   dec(memb_a32(ds, eax + 0x54));        /* dec byte [eax+0x54] */
    II(0x1015467a, 0x7)   cmp(memb_a32(ds, 0x101c3915), 0);     /* cmp byte [0x101c3915], 0x0 */
    II(0x10154681, 0x2)   jnzd(0x101546a4, 0x21);               /* jnz 0x101546a4 */
    II(0x10154683, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154686, 0x3)   dec(memb_a32(ds, eax + 0x50));        /* dec byte [eax+0x50] */
    II(0x10154689, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015468c, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1015468f, 0x5)   calld(0x10076730, -0xddf64);          /* call 0x10076730 */
    II(0x10154694, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x10154698, 0x2)   jnzd(0x101546a2, 0x8);                /* jnz 0x101546a2 */
    II(0x1015469a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015469d, 0x5)   calld(0x1015429e, -0x404);            /* call 0x1015429e */
l_0x101546a2:
    II(0x101546a2, 0x2)   jmpd(0x101546be, 0x1a);               /* jmp 0x101546be */
l_0x101546a4:
    II(0x101546a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101546a7, 0x3)   mov(dl, memb_a32(ds, eax + 0x50));    /* mov dl, [eax+0x50] */
//    II(0x101546aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101546ad, 0x3)   cmp(dl, memb_a32(ds, eax + 0x54));    /* cmp dl, [eax+0x54] */
    II(0x101546b0, 0x2)   jbed(0x101546be, 0xc);                /* jbe 0x101546be */
    II(0x101546b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101546b5, 0x3)   mov(dl, memb_a32(ds, eax + 0x54));    /* mov dl, [eax+0x54] */
//    II(0x101546b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101546bb, 0x3)   mov(memb_a32(ds, eax + 0x50), dl);    /* mov [eax+0x50], dl */
l_0x101546be:
    II(0x101546be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101546c1, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x9);   /* mov byte [eax+0x3e], 0x9 */
    II(0x101546c5, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101546c7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101546c8, 0x1)   popd(edi);                            /* pop edi */
    II(0x101546c9, 0x1)   popd(esi);                            /* pop esi */
    II(0x101546ca, 0x1)   popd(edx);                            /* pop edx */
    II(0x101546cb, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101546cc, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101546cd, 0x1)   retd();                               /* ret */
FUNC_END

