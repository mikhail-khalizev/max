FUNC_BEGIN(0x10141ba3, 0xf6dc7a7f854dd893, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xa5, 0x41, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xe8, 0x56, 0x93, 0xfa, 0xff, 0x98, 0xf, 0xbf, 0x55, 0xfc, 0x48, 0x39, 0xc2, 0x7e, 0xe, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xe8, 0x42, 0x93, 0xfa, 0xff, 0x48, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x45, 0xf8, 0x7d, 0x12, 0xba, 0x18, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xf4, 0xe8, 0xaa, 0xfe, 0xff, 0xff, 0xe9, 0x7f, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x2b, 0x45, 0xf8, 0x40, 0x89, 0x45, 0xe8, 0x80, 0x4d, 0xec, 0x1, 0xf, 0xbf, 0x55, 0xe8, 0x42, 0x8d, 0x45, 0xe4, 0xe8, 0xb4, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xec, 0xfe, 0xf, 0xbf, 0x5d, 0xe8, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xe8, 0xcb, 0x7b, 0xf4, 0xff, 0xf, 0xbf, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xe4, 0xe8, 0xbd, 0x7b, 0xf4, 0xff, 0xe8, 0x9c, 0x2, 0x3, 0, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xe4, 0xe8, 0x42, 0x6, 0, 0, 0xc6, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xe4, 0xe8, 0x8d, 0x8, 0, 0, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xf4, 0xe8, 0x3c, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xb6, 0xfe, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xaa, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10141ba3, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10141ba8, 0x5)   calld(sys_check_available_stack_size, 0x241a5); /* call 0x10165d52 */
    II(0x10141bad, 0x1)   pushd(esi);                           /* push esi */
    II(0x10141bae, 0x1)   pushd(edi);                           /* push edi */
    II(0x10141baf, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10141bb0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10141bb2, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10141bb8, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10141bbb, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10141bbe, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10141bc1, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
//    II(0x10141bc4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10141bc7, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10141bc9, 0x5)   calld(my_strobj_get_len, -0x56caa);   /* call 0x100eaf24 */
    II(0x10141bce, 0x1)   cwde();                               /* cwde */
    II(0x10141bcf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10141bd3, 0x1)   dec(eax);                             /* dec eax */
    II(0x10141bd4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10141bd6, 0x2)   jled(0x10141be6, 0xe);                /* jle 0x10141be6 */
    II(0x10141bd8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10141bdb, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10141bdd, 0x5)   calld(my_strobj_get_len, -0x56cbe);   /* call 0x100eaf24 */
    II(0x10141be2, 0x1)   dec(eax);                             /* dec eax */
    II(0x10141be3, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x10141be6:
    II(0x10141be6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10141be9, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10141bed, 0x2)   jged(0x10141c01, 0x12);               /* jge 0x10141c01 */
    II(0x10141bef, 0x5)   mov(edx, 0x101c8118);                 /* mov edx, 0x101c8118 */
    II(0x10141bf4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10141bf7, 0x5)   calld(my_string_ctor_string, -0x156); /* call 0x10141aa6 */
    II(0x10141bfc, 0x5)   jmpd(0x10141c80, 0x7f);               /* jmp 0x10141c80 */
l_0x10141c01:
    II(0x10141c01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10141c04, 0x3)   sub(eax, memd_a32(ss, ebp - 0x8));    /* sub eax, [ebp-0x8] */
    II(0x10141c07, 0x1)   inc(eax);                             /* inc eax */
    II(0x10141c08, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10141c0b, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x10141c0f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10141c13, 0x1)   inc(edx);                             /* inc edx */
    II(0x10141c14, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10141c17, 0x5)   calld(my_string_ctor_capaticy, -0x24c); /* call 0x101419d0 */
    II(0x10141c1c, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10141c1f, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x10141c23, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x10141c27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10141c2a, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10141c2c, 0x5)   calld(my_strobj_c_str, -0xb8435);     /* call 0x100897fc */
    II(0x10141c31, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10141c35, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10141c37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10141c3a, 0x5)   calld(my_strobj_c_str, -0xb8443);     /* call 0x100897fc */
    II(0x10141c3f, 0x5)   calld(sys_strncpy, 0x3029c);          /* call 0x10171ee0 */
    II(0x10141c44, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10141c48, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10141c4b, 0x5)   calld(my_string_get, 0x642);          /* call 0x10142292 */
    II(0x10141c50, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
    II(0x10141c53, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10141c57, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10141c5a, 0x5)   calld(my_strobj_set_len, 0x88d);      /* call 0x101424ec */
    II(0x10141c5f, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x10141c62, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10141c65, 0x5)   calld(my_string_ctor_string, -0x1c4); /* call 0x10141aa6 */
    II(0x10141c6a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10141c6c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10141c6f, 0x5)   calld(my_string_dtor, -0x14a);        /* call 0x10141b2a */
    II(0x10141c74, 0x2)   jmpd(0x10141c80, 0xa);                /* jmp 0x10141c80 */
//  II(0x10141c76, 0xa)   /* Недостижимый код. */
l_0x10141c80:
    II(0x10141c80, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10141c83, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10141c85, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10141c86, 0x1)   popd(edi);                            /* pop edi */
    II(0x10141c87, 0x1)   popd(esi);                            /* pop esi */
    II(0x10141c88, 0x1)   retd();                               /* ret */
FUNC_END

