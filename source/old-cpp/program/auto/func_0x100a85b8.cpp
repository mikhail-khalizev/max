FUNC_BEGIN(0x100a85b8, 0xb5cde864eca53e12, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x90, 0xd7, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4e, 0xe8, 0x89, 0x27, 0x9, 0, 0x84, 0xc0, 0x74, 0x75, 0xe8, 0x5f, 0x26, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4e, 0xe8, 0x71, 0xdf, 0xfc, 0xff, 0xe8, 0x5a, 0xa3, 0xa, 0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4e, 0xe8, 0x61, 0xdf, 0xfc, 0xff, 0xe8, 0x94, 0xa0, 0xa, 0, 0x85, 0xc0, 0x75, 0x20, 0xe8, 0x7b, 0x21, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4e, 0xe8, 0xa0, 0xdf, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x70, 0xcd, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4e, 0xe8, 0xe7, 0xdf, 0xfc, 0xff, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x13, 0, 0xe8, 0x33, 0x2c, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xf4, 0xe8, 0x9e, 0xa2, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a85b8, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100a85bd, 0x5)   calld(sys_check_available_stack_size, 0xbd790); /* call 0x10165d52 */
    II(0x100a85c2, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a85c3, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a85c4, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a85c5, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a85c6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a85c7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a85c9, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100a85cf, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a85d2, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100a85d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a85d8, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a85db, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a85dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a85e0, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a85e3, 0x5)   calld(0x1013ad71, 0x92789);           /* call 0x1013ad71 */
    II(0x100a85e8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a85ea, 0x2)   jzd(0x100a8661, 0x75);                /* jz 0x100a8661 */
    II(0x100a85ec, 0x5)   calld(0x1008ac50, -0x1d9a1);          /* call 0x1008ac50 */
    II(0x100a85f1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a85f3, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100a85f5, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100a85f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a85fb, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a85fe, 0x5)   calld(0x10076574, -0x3208f);          /* call 0x10076574 */
    II(0x100a8603, 0x5)   calld(0x10152962, 0xaa35a);           /* call 0x10152962 */
    II(0x100a8608, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a860b, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a860e, 0x5)   calld(0x10076574, -0x3209f);          /* call 0x10076574 */
    II(0x100a8613, 0x5)   calld(0x101526ac, 0xaa094);           /* call 0x101526ac */
    II(0x100a8618, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a861a, 0x2)   jnzd(0x100a863c, 0x20);               /* jnz 0x100a863c */
    II(0x100a861c, 0x5)   calld(0x1008a79c, -0x1de85);          /* call 0x1008a79c */
    II(0x100a8621, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a8623, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100a8625, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a8628, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a862b, 0x5)   calld(0x100765d0, -0x32060);          /* call 0x100765d0 */
    II(0x100a8630, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a8632, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a8637, 0x5)   calld(0x100a53ac, -0x3290);           /* call 0x100a53ac */
l_0x100a863c:
    II(0x100a863c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a863e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a8641, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a8644, 0x5)   calld(0x10076630, -0x32019);          /* call 0x10076630 */
    II(0x100a8649, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a864c, 0x4)   mov(memb_a32(ds, eax + 0x13), 0);     /* mov byte [eax+0x13], 0x0 */
    II(0x100a8650, 0x5)   calld(0x100ab288, 0x2c33);            /* call 0x100ab288 */
    II(0x100a8655, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a8657, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100a8659, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a865c, 0x5)   calld(0x100a28ff, -0x5d62);           /* call 0x100a28ff */
l_0x100a8661:
    II(0x100a8661, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a8663, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a8664, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a8665, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a8666, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a8667, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a8668, 0x1)   retd();                               /* ret */
FUNC_END

