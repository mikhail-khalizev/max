FUNC_BEGIN(0x100efed0, 0xb580e195a797775b, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0x78, 0x5e, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xf4, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x4, 0xc1, 0xf8, 0x10, 0x3b, 0x45, 0xf0, 0xf, 0x8e, 0x51, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x6, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xec, 0x8b, 0, 0x1, 0x45, 0xf4, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x40, 0x4, 0x89, 0x45, 0xe8, 0xe9, 0xc5, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xe4, 0xe8, 0xa7, 0xfe, 0xff, 0xff, 0xe9, 0x16, 0x1, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xe4, 0xe8, 0x68, 0xfc, 0xff, 0xff, 0xe9, 0x6, 0x1, 0, 0, 0x6a, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x48, 0x61, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x54, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x48, 0xe8, 0x67, 0x72, 0x7, 0, 0xe9, 0xd5, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x67, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0xff, 0x70, 0x4c, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x61, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x61, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xe4, 0x50, 0xe8, 0xf7, 0xab, 0x7, 0, 0x83, 0xc4, 0x18, 0xe9, 0x96, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x6f, 0, 0x74, 0xd, 0xba, 0x2, 0, 0, 0, 0x8b, 0x45, 0xe4, 0xe8, 0x3a, 0xfd, 0xff, 0xff, 0xe9, 0x7b, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x6f, 0, 0x74, 0xa, 0x31, 0xd2, 0x8b, 0x45, 0xe4, 0xe8, 0x22, 0xfd, 0xff, 0xff, 0xe9, 0x63, 0, 0, 0, 0xeb, 0x61, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe0, 0x66, 0x83, 0x7d, 0xe0, 0xb, 0x72, 0x33, 0x66, 0x83, 0x7d, 0xe0, 0xb, 0x76, 0xd2, 0x66, 0x83, 0x7d, 0xe0, 0xf, 0x72, 0x18, 0x66, 0x83, 0x7d, 0xe0, 0xf, 0xf, 0x86, 0x15, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x10, 0xf, 0x84, 0x5b, 0xff, 0xff, 0xff, 0xeb, 0xcb, 0x66, 0x83, 0x7d, 0xe0, 0xd, 0xf, 0x84, 0x1d, 0xff, 0xff, 0xff, 0xeb, 0xbe, 0x66, 0x83, 0x7d, 0xe0, 0x4, 0x72, 0x18, 0x66, 0x83, 0x7d, 0xe0, 0x4, 0xf, 0x86, 0x79, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe0, 0x7, 0xf, 0x84, 0xee, 0xfe, 0xff, 0xff, 0xeb, 0x9f, 0xeb, 0x9d, 0xe9, 0x97, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x48, 0, 0x74, 0x11, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x48, 0xe8, 0x26, 0x74, 0x7, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100efed0, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x100efed5, 0x5)   calld(sys_check_available_stack_size, 0x75e78); /* call 0x10165d52 */
    II(0x100efeda, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100efedb, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100efedc, 0x1)   pushd(esi);                           /* push esi */
    II(0x100efedd, 0x1)   pushd(edi);                           /* push edi */
    II(0x100efede, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100efedf, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100efee1, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100efee7, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100efeea, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100efeed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100efef0, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100efef3, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100efef6, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100efefd, 0x2)   jmpd(0x100eff05, 0x6);                /* jmp 0x100eff05 */
l_0x100efeff:
    II(0x100efeff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100eff02, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100eff05:
    II(0x100eff05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eff08, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x100eff0b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100eff0e, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x10));   /* cmp eax, [ebp-0x10] */
    II(0x100eff11, 0x6)   jled(0x100f0068, 0x151);              /* jle dword 0x100f0068 */
    II(0x100eff17, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100eff1a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100eff1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100eff20, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100eff23, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100eff26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100eff29, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100eff2b, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
    II(0x100eff2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100eff31, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100eff35, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100eff38, 0x5)   jmpd(0x100f0002, 0xc5);               /* jmp 0x100f0002 */
l_0x100eff3d:
    II(0x100eff3d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100eff40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100eff43, 0x5)   calld(0x100efdef, -0x159);            /* call 0x100efdef */
    II(0x100eff48, 0x5)   jmpd(0x100f0063, 0x116);              /* jmp 0x100f0063 */
l_0x100eff4d:
    II(0x100eff4d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100eff50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100eff53, 0x5)   calld(0x100efbc0, -0x398);            /* call 0x100efbc0 */
    II(0x100eff58, 0x5)   jmpd(0x100f0063, 0x106);              /* jmp 0x100f0063 */
l_0x100eff5d:
    II(0x100eff5d, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x100eff5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eff62, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100eff65, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100eff68, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eff69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eff6c, 0x3)   mov(ecx, memd_a32(ds, eax + 0x61));   /* mov ecx, [eax+0x61] */
    II(0x100eff6f, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100eff72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eff75, 0x3)   mov(ebx, memd_a32(ds, eax + 0x54));   /* mov ebx, [eax+0x54] */
//    II(0x100eff78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eff7b, 0x3)   mov(edx, memd_a32(ds, eax + 0x50));   /* mov edx, [eax+0x50] */
//    II(0x100eff7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eff81, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100eff84, 0x5)   calld(/* sys */ 0x101671f0, 0x77267); /* call 0x101671f0 */
    II(0x100eff89, 0x5)   jmpd(0x100f0063, 0xd5);               /* jmp 0x100f0063 */
l_0x100eff8e:
    II(0x100eff8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eff91, 0x3)   mov(eax, memd_a32(ds, eax + 0x67));   /* mov eax, [eax+0x67] */
    II(0x100eff94, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100eff97, 0x1)   pushd(eax);                           /* push eax */
    II(0x100eff98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100eff9b, 0x3)   pushd(memd_a32(ds, eax + 0x4c));      /* push dword [eax+0x4c] */
    II(0x100eff9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100effa1, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100effa4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100effa7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100effa8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100effab, 0x3)   mov(eax, memd_a32(ds, eax + 0x61));   /* mov eax, [eax+0x61] */
    II(0x100effae, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100effb1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100effb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100effb5, 0x3)   mov(eax, memd_a32(ds, eax + 0x61));   /* mov eax, [eax+0x61] */
    II(0x100effb8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100effbb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100effbc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100effbf, 0x1)   pushd(eax);                           /* push eax */
    II(0x100effc0, 0x5)   calld(/* sys */ 0x1016abbc, 0x7abf7); /* call 0x1016abbc */
    II(0x100effc5, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100effc8, 0x5)   jmpd(0x100f0063, 0x96);               /* jmp 0x100f0063 */
l_0x100effcd:
    II(0x100effcd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100effd0, 0x4)   cmp(memb_a32(ds, eax + 0x6f), 0);     /* cmp byte [eax+0x6f], 0x0 */
    II(0x100effd4, 0x2)   jzd(0x100effe3, 0xd);                 /* jz 0x100effe3 */
    II(0x100effd6, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100effdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100effde, 0x5)   calld(0x100efd1d, -0x2c6);            /* call 0x100efd1d */
l_0x100effe3:
    II(0x100effe3, 0x5)   jmpd(0x100f0063, 0x7b);               /* jmp 0x100f0063 */
l_0x100effe8:
    II(0x100effe8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100effeb, 0x4)   cmp(memb_a32(ds, eax + 0x6f), 0);     /* cmp byte [eax+0x6f], 0x0 */
    II(0x100effef, 0x2)   jzd(0x100efffb, 0xa);                 /* jz 0x100efffb */
    II(0x100efff1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100efff3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100efff6, 0x5)   calld(0x100efd1d, -0x2de);            /* call 0x100efd1d */
l_0x100efffb:
    II(0x100efffb, 0x5)   jmpd(0x100f0063, 0x63);               /* jmp 0x100f0063 */
l_0x100f0000:
    II(0x100f0000, 0x2)   jmpd(0x100f0063, 0x61);               /* jmp 0x100f0063 */
l_0x100f0002:
    II(0x100f0002, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100f0005, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100f0008, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0xb);   /* cmp word [ebp-0x20], 0xb */
    II(0x100f000d, 0x2)   jbd(0x100f0042, 0x33);                /* jb 0x100f0042 */
    II(0x100f000f, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0xb);   /* cmp word [ebp-0x20], 0xb */
    II(0x100f0014, 0x2)   jbed(0x100effe8, -0x2e);              /* jbe 0x100effe8 */
    II(0x100f0016, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0xf);   /* cmp word [ebp-0x20], 0xf */
    II(0x100f001b, 0x2)   jbd(0x100f0035, 0x18);                /* jb 0x100f0035 */
    II(0x100f001d, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0xf);   /* cmp word [ebp-0x20], 0xf */
    II(0x100f0022, 0x6)   jbed(0x100eff3d, -0xeb);              /* jbe dword 0x100eff3d */
    II(0x100f0028, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x10);  /* cmp word [ebp-0x20], 0x10 */
    II(0x100f002d, 0x6)   jzd(0x100eff8e, -0xa5);               /* jz dword 0x100eff8e */
    II(0x100f0033, 0x2)   jmpd(0x100f0000, -0x35);              /* jmp 0x100f0000 */
l_0x100f0035:
    II(0x100f0035, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0xd);   /* cmp word [ebp-0x20], 0xd */
    II(0x100f003a, 0x6)   jzd(0x100eff5d, -0xe3);               /* jz dword 0x100eff5d */
    II(0x100f0040, 0x2)   jmpd(0x100f0000, -0x42);              /* jmp 0x100f0000 */
l_0x100f0042:
    II(0x100f0042, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x4);   /* cmp word [ebp-0x20], 0x4 */
    II(0x100f0047, 0x2)   jbd(0x100f0061, 0x18);                /* jb 0x100f0061 */
    II(0x100f0049, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x4);   /* cmp word [ebp-0x20], 0x4 */
    II(0x100f004e, 0x6)   jbed(0x100effcd, -0x87);              /* jbe dword 0x100effcd */
    II(0x100f0054, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x7);   /* cmp word [ebp-0x20], 0x7 */
    II(0x100f0059, 0x6)   jzd(0x100eff4d, -0x112);              /* jz dword 0x100eff4d */
    II(0x100f005f, 0x2)   jmpd(0x100f0000, -0x61);              /* jmp 0x100f0000 */
l_0x100f0061:
    II(0x100f0061, 0x2)   jmpd(0x100f0000, -0x63);              /* jmp 0x100f0000 */
l_0x100f0063:
    II(0x100f0063, 0x5)   jmpd(0x100efeff, -0x169);             /* jmp 0x100efeff */
l_0x100f0068:
    II(0x100f0068, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f006b, 0x4)   cmp(memd_a32(ds, eax + 0x48), 0);     /* cmp dword [eax+0x48], 0x0 */
    II(0x100f006f, 0x2)   jzd(0x100f0082, 0x11);                /* jz 0x100f0082 */
    II(0x100f0071, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f0074, 0x3)   add(edx, 0x50);                       /* add edx, 0x50 */
    II(0x100f0077, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f007a, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100f007d, 0x5)   calld(sys_display_draw_1, 0x77426);   /* call 0x101674a8 */
l_0x100f0082:
    II(0x100f0082, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f0084, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f0085, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f0086, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f0087, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f0088, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f0089, 0x1)   retd();                               /* ret */
FUNC_END

