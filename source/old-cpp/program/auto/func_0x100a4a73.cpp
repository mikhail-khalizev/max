FUNC_BEGIN(0x100a4a73, 0x797168d438236932, 0x20, ({0x68, 0x1c, 0x1, 0, 0, 0xe8, 0xd5, 0x12, 0xc, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0x1, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x58, 0x64, 0xfe, 0xff, 0x8d, 0x5d, 0xd4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc8, 0x63, 0xfe, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xd0, 0xff, 0x52, 0x14, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xf4, 0xe8, 0xcb, 0x62, 0xfe, 0xff, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xf8, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xd8, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x4a, 0xb2, 0x3, 0, 0x89, 0xc2, 0xe8, 0x63, 0xe6, 0xff, 0xff, 0x66, 0x3b, 0x42, 0x8, 0x7d, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xc3, 0x40, 0xfe, 0xff, 0xe9, 0x4a, 0x2, 0, 0, 0xbb, 0xba, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x14, 0xff, 0xff, 0xff, 0xe8, 0xd0, 0x12, 0xc, 0, 0xeb, 0x8, 0x8d, 0x45, 0xd4, 0xe8, 0xde, 0x20, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x4d, 0x62, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0x7e, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x90, 0x62, 0xfe, 0xff, 0xe8, 0x57, 0x62, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0xe8, 0x4d, 0x62, 0xfe, 0xff, 0x66, 0x39, 0xc2, 0x75, 0x24, 0x8d, 0x45, 0xd4, 0xe8, 0x74, 0x62, 0xfe, 0xff, 0x89, 0x85, 0x10, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x10, 0xff, 0xff, 0xff, 0x8b, 0x50, 0x2, 0x8b, 0x85, 0x10, 0xff, 0xff, 0xff, 0xff, 0x52, 0x20, 0x3c, 0x8, 0x74, 0x2, 0xeb, 0x1d, 0x8b, 0x45, 0xd8, 0x5, 0xfa, 0, 0, 0, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xd4, 0xe8, 0x43, 0x62, 0xfe, 0xff, 0xe8, 0x3e, 0xe0, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x2, 0xeb, 0x18, 0x8d, 0x45, 0xd4, 0xe8, 0x63, 0x62, 0xfe, 0xff, 0xe8, 0x2a, 0x79, 0xff, 0xff, 0x98, 0x1, 0xc0, 0x66, 0xff, 0x84, 0x28, 0x14, 0xff, 0xff, 0xff, 0xe9, 0x68, 0xff, 0xff, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x84, 0x17, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0xc, 0xff, 0xff, 0xff, 0xe8, 0xf7, 0x18, 0xfd, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x30, 0x93, 0x2, 0, 0x89, 0x45, 0xdc, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xf, 0xbf, 0x55, 0xdc, 0x8d, 0x85, 0x8, 0xff, 0xff, 0xff, 0xe8, 0xab, 0x93, 0x2, 0, 0xeb, 0xb, 0x8d, 0x85, 0xc, 0xff, 0xff, 0xff, 0xe8, 0x1, 0x20, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0xc, 0xff, 0xff, 0xff, 0xe8, 0x6d, 0x61, 0x9, 0, 0x84, 0xc0, 0x74, 0x37, 0x8d, 0x85, 0xc, 0xff, 0xff, 0xff, 0xe8, 0x8d, 0x17, 0xfd, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xec, 0x39, 0xc2, 0x75, 0x15, 0x8d, 0x85, 0xc, 0xff, 0xff, 0xff, 0xe8, 0x75, 0x17, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x66, 0x3b, 0x45, 0xdc, 0x74, 0x2, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0xeb, 0xad, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8d, 0x85, 0x8, 0xff, 0xff, 0xff, 0xe8, 0xf, 0x67, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xe8, 0x7e, 0x21, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x85, 0x8, 0xff, 0xff, 0xff, 0xe8, 0xba, 0x65, 0xfe, 0xff, 0xf, 0xbf, 0, 0x1, 0xc0, 0x66, 0x8b, 0x84, 0x28, 0x14, 0xff, 0xff, 0xff, 0x1, 0x45, 0xe4, 0xeb, 0xc8, 0x8b, 0x45, 0xe0, 0x1, 0xc0, 0x40, 0x2b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x66, 0x3b, 0x45, 0xfc, 0x7e, 0x6, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0xff, 0x4d, 0xe0, 0x98, 0x85, 0xc0, 0xf, 0x8e, 0x7a, 0, 0, 0, 0xb8, 0x1e, 0, 0, 0, 0xe8, 0x4c, 0x11, 0xc, 0, 0x89, 0x85, 0x4, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x4, 0xff, 0xff, 0xff, 0x89, 0x85, 0, 0xff, 0xff, 0xff, 0x83, 0xbd, 0, 0xff, 0xff, 0xff, 0, 0x74, 0x36, 0x8b, 0x55, 0x10, 0x8d, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0xe8, 0x87, 0x11, 0xfd, 0xff, 0x89, 0xc1, 0x8b, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x85, 0x4, 0xff, 0xff, 0xff, 0xe8, 0xd4, 0x3a, 0xff, 0xff, 0x89, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0, 0xff, 0xff, 0xff, 0x89, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0xf4, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0xe8, 0x31, 0, 0, 0, 0xe9, 0x77, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x8, 0xff, 0xff, 0xff, 0xe8, 0xd3, 0x3d, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0xc, 0xff, 0xff, 0xff, 0xe8, 0x2e, 0x12, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x74, 0x3e, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100a4a73, 0x5)   pushd(0x11c);                         /* push dword 0x11c */
    II(0x100a4a78, 0x5)   calld(sys_check_available_stack_size, 0xc12d5); /* call 0x10165d52 */
    II(0x100a4a7d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a4a7e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a4a7f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a4a80, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a4a82, 0x6)   sub(esp, 0x10c);                      /* sub esp, 0x10c */
    II(0x100a4a88, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a4a8b, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100a4a8e, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100a4a91, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
//    II(0x100a4a94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a4a97, 0x5)   calld(0x1008aef4, -0x19ba8);          /* call 0x1008aef4 */
    II(0x100a4a9c, 0x3)   lea(ebx, ebp - 0x2c);                 /* lea ebx, [ebp-0x2c] */
    II(0x100a4a9f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4aa1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a4aa3, 0x5)   calld(0x1008ae70, -0x19c38);          /* call 0x1008ae70 */
    II(0x100a4aa8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a4aab, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100a4aae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100a4ab1, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a4ab4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100a4ab7, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x100a4aba, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100a4abd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a4ac0, 0x5)   calld(0x1008ad90, -0x19d35);          /* call 0x1008ad90 */
    II(0x100a4ac5, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100a4ac8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a4acc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100a4ad0, 0x6)   imul(ebx, eax, 0x247);                /* imul ebx, eax, 0x247 */
    II(0x100a4ad6, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x100a4adb, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100a4add, 0x5)   calld(0x100dfd2c, 0x3b24a);           /* call 0x100dfd2c */
    II(0x100a4ae2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4ae4, 0x5)   calld(0x100a314c, -0x199d);           /* call 0x100a314c */
    II(0x100a4ae9, 0x4)   cmp(ax, memw_a32(ds, edx + 0x8));     /* cmp ax, [edx+0x8] */
    II(0x100a4aed, 0x2)   jged(0x100a4afe, 0xf);                /* jge 0x100a4afe */
    II(0x100a4aef, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4af1, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100a4af4, 0x5)   calld(0x10088bbc, -0x1bf3d);          /* call 0x10088bbc */
    II(0x100a4af9, 0x5)   jmpd(0x100a4d48, 0x24a);              /* jmp 0x100a4d48 */
l_0x100a4afe:
    II(0x100a4afe, 0x5)   mov(ebx, 0xba);                       /* mov ebx, 0xba */
    II(0x100a4b03, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4b05, 0x6)   lea(eax, ebp - 0xec);                 /* lea eax, [ebp+0xffffff14] */
    II(0x100a4b0b, 0x5)   calld(sys_memset, 0xc12d0);           /* call 0x10165de0 */
    II(0x100a4b10, 0x2)   jmpd(0x100a4b1a, 0x8);                /* jmp 0x100a4b1a */
l_0x100a4b12:
    II(0x100a4b12, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100a4b15, 0x5)   calld(0x10076bf8, -0x2df22);          /* call 0x10076bf8 */
l_0x100a4b1a:
    II(0x100a4b1a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4b1c, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100a4b1f, 0x5)   calld(0x1013ad71, 0x9624d);           /* call 0x1013ad71 */
    II(0x100a4b24, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a4b26, 0x6)   jzd(0x100a4baa, 0x7e);                /* jz dword 0x100a4baa */
    II(0x100a4b2c, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100a4b2f, 0x5)   calld(0x1008adc4, -0x19d70);          /* call 0x1008adc4 */
    II(0x100a4b34, 0x5)   calld(0x1008ad90, -0x19da9);          /* call 0x1008ad90 */
    II(0x100a4b39, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4b3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a4b3e, 0x5)   calld(0x1008ad90, -0x19db3);          /* call 0x1008ad90 */
    II(0x100a4b43, 0x3)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x100a4b46, 0x2)   jnzd(0x100a4b6c, 0x24);               /* jnz 0x100a4b6c */
    II(0x100a4b48, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100a4b4b, 0x5)   calld(0x1008adc4, -0x19d8c);          /* call 0x1008adc4 */
    II(0x100a4b50, 0x6)   mov(memd_a32(ss, ebp - 0xf0), eax);   /* mov [ebp+0xffffff10], eax */
//    II(0x100a4b56, 0x6)   mov(eax, memd_a32(ss, ebp - 0xf0));   /* mov eax, [ebp+0xffffff10] */
    II(0x100a4b5c, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a4b5f, 0x6)   mov(eax, memd_a32(ss, ebp - 0xf0));   /* mov eax, [ebp+0xffffff10] */
    II(0x100a4b65, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100a4b68, 0x2)   cmp(al, 0x8);                         /* cmp al, 0x8 */
    II(0x100a4b6a, 0x2)   jzd(0x100a4b6e, 0x2);                 /* jz 0x100a4b6e */
l_0x100a4b6c:
    II(0x100a4b6c, 0x2)   jmpd(0x100a4b8b, 0x1d);               /* jmp 0x100a4b8b */
l_0x100a4b6e:
    II(0x100a4b6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100a4b71, 0x5)   add(eax, 0xfa);                       /* add eax, 0xfa */
    II(0x100a4b76, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a4b79, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100a4b7c, 0x5)   calld(0x1008adc4, -0x19dbd);          /* call 0x1008adc4 */
    II(0x100a4b81, 0x5)   calld(0x100a2bc4, -0x1fc2);           /* call 0x100a2bc4 */
    II(0x100a4b86, 0x1)   cwde();                               /* cwde */
    II(0x100a4b87, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4b89, 0x2)   jled(0x100a4b8d, 0x2);                /* jle 0x100a4b8d */
l_0x100a4b8b:
    II(0x100a4b8b, 0x2)   jmpd(0x100a4ba5, 0x18);               /* jmp 0x100a4ba5 */
l_0x100a4b8d:
    II(0x100a4b8d, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100a4b90, 0x5)   calld(0x1008adf8, -0x19d9d);          /* call 0x1008adf8 */
    II(0x100a4b95, 0x5)   calld(0x1009c4c4, -0x86d6);           /* call 0x1009c4c4 */
    II(0x100a4b9a, 0x1)   cwde();                               /* cwde */
    II(0x100a4b9b, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100a4b9d, 0x8)   inc(memw_a32(ds, eax + ebp - 0xec));  /* inc word [eax+ebp+0xffffff14] */
l_0x100a4ba5:
    II(0x100a4ba5, 0x5)   jmpd(0x100a4b12, -0x98);              /* jmp 0x100a4b12 */
l_0x100a4baa:
    II(0x100a4baa, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100a4baf, 0x5)   calld(0x10076338, -0x2e87c);          /* call 0x10076338 */
    II(0x100a4bb4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4bb6, 0x6)   lea(eax, ebp - 0xf4);                 /* lea eax, [ebp+0xffffff0c] */
    II(0x100a4bbc, 0x5)   calld(0x100764b8, -0x2e709);          /* call 0x100764b8 */
    II(0x100a4bc1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100a4bc5, 0x5)   calld(0x100cdefa, 0x29330);           /* call 0x100cdefa */
    II(0x100a4bca, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100a4bcd, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100a4bd4, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100a4bdb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100a4bdf, 0x6)   lea(eax, ebp - 0xf8);                 /* lea eax, [ebp+0xffffff08] */
    II(0x100a4be5, 0x5)   calld(0x100cdf95, 0x293ab);           /* call 0x100cdf95 */
    II(0x100a4bea, 0x2)   jmpd(0x100a4bf7, 0xb);                /* jmp 0x100a4bf7 */
l_0x100a4bec:
    II(0x100a4bec, 0x6)   lea(eax, ebp - 0xf4);                 /* lea eax, [ebp+0xffffff0c] */
    II(0x100a4bf2, 0x5)   calld(0x10076bf8, -0x2dfff);          /* call 0x10076bf8 */
l_0x100a4bf7:
    II(0x100a4bf7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4bf9, 0x6)   lea(eax, ebp - 0xf4);                 /* lea eax, [ebp+0xffffff0c] */
    II(0x100a4bff, 0x5)   calld(0x1013ad71, 0x9616d);           /* call 0x1013ad71 */
    II(0x100a4c04, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a4c06, 0x2)   jzd(0x100a4c3f, 0x37);                /* jz 0x100a4c3f */
    II(0x100a4c08, 0x6)   lea(eax, ebp - 0xf4);                 /* lea eax, [ebp+0xffffff0c] */
    II(0x100a4c0e, 0x5)   calld(0x100763a0, -0x2e873);          /* call 0x100763a0 */
    II(0x100a4c13, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4c15, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100a4c18, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100a4c1c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100a4c1e, 0x2)   jnzd(0x100a4c35, 0x15);               /* jnz 0x100a4c35 */
    II(0x100a4c20, 0x6)   lea(eax, ebp - 0xf4);                 /* lea eax, [ebp+0xffffff0c] */
    II(0x100a4c26, 0x5)   calld(0x100763a0, -0x2e88b);          /* call 0x100763a0 */
    II(0x100a4c2b, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100a4c2f, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x24));    /* cmp ax, [ebp-0x24] */
    II(0x100a4c33, 0x2)   jzd(0x100a4c37, 0x2);                 /* jz 0x100a4c37 */
l_0x100a4c35:
    II(0x100a4c35, 0x2)   jmpd(0x100a4c3d, 0x6);                /* jmp 0x100a4c3d */
l_0x100a4c37:
    II(0x100a4c37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100a4c3a, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
l_0x100a4c3d:
    II(0x100a4c3d, 0x2)   jmpd(0x100a4bec, -0x53);              /* jmp 0x100a4bec */
l_0x100a4c3f:
    II(0x100a4c3f, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100a4c46, 0x2)   jmpd(0x100a4c4e, 0x6);                /* jmp 0x100a4c4e */
l_0x100a4c48:
    II(0x100a4c48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100a4c4b, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100a4c4e:
    II(0x100a4c4e, 0x6)   lea(eax, ebp - 0xf8);                 /* lea eax, [ebp+0xffffff08] */
    II(0x100a4c54, 0x5)   calld(my_2_get_count, -0x198f1);      /* call 0x1008b368 */
    II(0x100a4c59, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100a4c5d, 0x2)   jled(0x100a4c80, 0x21);               /* jle 0x100a4c80 */
    II(0x100a4c5f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100a4c63, 0x6)   lea(eax, ebp - 0xf8);                 /* lea eax, [ebp+0xffffff08] */
    II(0x100a4c69, 0x5)   calld(0x1008b228, -0x19a46);          /* call 0x1008b228 */
    II(0x100a4c6e, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100a4c71, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100a4c73, 0x8)   mov(ax, memw_a32(ds, eax + ebp - 0xec)); /* mov ax, [eax+ebp+0xffffff14] */
    II(0x100a4c7b, 0x3)   add(memd_a32(ss, ebp - 0x1c), eax);   /* add [ebp-0x1c], eax */
    II(0x100a4c7e, 0x2)   jmpd(0x100a4c48, -0x38);              /* jmp 0x100a4c48 */
l_0x100a4c80:
    II(0x100a4c80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100a4c83, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100a4c85, 0x1)   inc(eax);                             /* inc eax */
    II(0x100a4c86, 0x3)   sub(eax, memd_a32(ss, ebp - 0x1c));   /* sub eax, [ebp-0x1c] */
    II(0x100a4c89, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100a4c8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100a4c8f, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100a4c93, 0x2)   jled(0x100a4c9b, 0x6);                /* jle 0x100a4c9b */
    II(0x100a4c95, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4c98, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100a4c9b:
    II(0x100a4c9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100a4c9e, 0x3)   dec(memd_a32(ss, ebp - 0x20));        /* dec dword [ebp-0x20] */
    II(0x100a4ca1, 0x1)   cwde();                               /* cwde */
    II(0x100a4ca2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4ca4, 0x6)   jled(0x100a4d24, 0x7a);               /* jle dword 0x100a4d24 */
    II(0x100a4caa, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x100a4caf, 0x5)   calld(sys_new, 0xc114c);              /* call 0x10165e00 */
    II(0x100a4cb4, 0x6)   mov(memd_a32(ss, ebp - 0xfc), eax);   /* mov [ebp+0xffffff04], eax */
//    II(0x100a4cba, 0x6)   mov(eax, memd_a32(ss, ebp - 0xfc));   /* mov eax, [ebp+0xffffff04] */
    II(0x100a4cc0, 0x6)   mov(memd_a32(ss, ebp - 0x100), eax);  /* mov [ebp+0xffffff00], eax */
    II(0x100a4cc6, 0x7)   cmp(memd_a32(ss, ebp - 0x100), 0);    /* cmp dword [ebp+0xffffff00], 0x0 */
    II(0x100a4ccd, 0x2)   jzd(0x100a4d05, 0x36);                /* jz 0x100a4d05 */
    II(0x100a4ccf, 0x3)   mov(edx, memd_a32(ss, ebp + 0x10));   /* mov edx, [ebp+0x10] */
    II(0x100a4cd2, 0x6)   lea(eax, ebp - 0x104);                /* lea eax, [ebp+0xfffffefc] */
    II(0x100a4cd8, 0x5)   calld(0x10075e64, -0x2ee79);          /* call 0x10075e64 */
    II(0x100a4cdd, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100a4cdf, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100a4ce2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a4ce6, 0x6)   mov(eax, memd_a32(ss, ebp - 0xfc));   /* mov eax, [ebp+0xffffff04] */
    II(0x100a4cec, 0x5)   calld(0x100987c5, -0xc52c);           /* call 0x100987c5 */
    II(0x100a4cf1, 0x6)   mov(memd_a32(ss, ebp - 0x108), eax);  /* mov [ebp+0xfffffef8], eax */
//    II(0x100a4cf7, 0x6)   mov(eax, memd_a32(ss, ebp - 0x108));  /* mov eax, [ebp+0xfffffef8] */
    II(0x100a4cfd, 0x6)   mov(memd_a32(ss, ebp - 0x10c), eax);  /* mov [ebp+0xfffffef4], eax */
    II(0x100a4d03, 0x2)   jmpd(0x100a4d11, 0xc);                /* jmp 0x100a4d11 */
l_0x100a4d05:
    II(0x100a4d05, 0x6)   mov(eax, memd_a32(ss, ebp - 0x100));  /* mov eax, [ebp+0xffffff00] */
    II(0x100a4d0b, 0x6)   mov(memd_a32(ss, ebp - 0x10c), eax);  /* mov [ebp+0xfffffef4], eax */
l_0x100a4d11:
    II(0x100a4d11, 0x6)   mov(edx, memd_a32(ss, ebp - 0x10c));  /* mov edx, [ebp+0xfffffef4] */
    II(0x100a4d17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a4d1a, 0x5)   calld(0x100a4d50, 0x31);              /* call 0x100a4d50 */
    II(0x100a4d1f, 0x5)   jmpd(0x100a4c9b, -0x89);              /* jmp 0x100a4c9b */
l_0x100a4d24:
    II(0x100a4d24, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4d26, 0x6)   lea(eax, ebp - 0xf8);                 /* lea eax, [ebp+0xffffff08] */
    II(0x100a4d2c, 0x5)   calld(0x10088b04, -0x1c22d);          /* call 0x10088b04 */
    II(0x100a4d31, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4d33, 0x6)   lea(eax, ebp - 0xf4);                 /* lea eax, [ebp+0xffffff0c] */
    II(0x100a4d39, 0x5)   calld(0x10075f6c, -0x2edd2);          /* call 0x10075f6c */
    II(0x100a4d3e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4d40, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100a4d43, 0x5)   calld(0x10088bbc, -0x1c18c);          /* call 0x10088bbc */
l_0x100a4d48:
    II(0x100a4d48, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a4d4a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a4d4b, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a4d4c, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a4d4d, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

