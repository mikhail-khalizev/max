FUNC_BEGIN(0x100d7e88, 0x86c6fbf3a43d7e58, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xc0, 0xde, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x6f, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xd7, 0xcf, 0xff, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x8a, 0, 0x88, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x8b, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xa5, 0x18, 0xfb, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x8, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0xe8, 0x8b, 0x18, 0xfb, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xf0, 0xff, 0x4d, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0xff, 0x74, 0x58, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xec, 0xff, 0x4d, 0xec, 0x66, 0x83, 0x7d, 0xec, 0xff, 0x74, 0x22, 0x8b, 0x45, 0xdc, 0x8a, 0, 0x3a, 0x45, 0xf4, 0x74, 0xa, 0x8b, 0x45, 0xdc, 0x8a, 0x10, 0x8b, 0x45, 0xe0, 0x88, 0x10, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0x8b, 0x45, 0xe0, 0xff, 0x45, 0xe0, 0xeb, 0xd4, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xe8, 0x29, 0xc2, 0x1, 0x55, 0xdc, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xe8, 0x29, 0xc2, 0x1, 0x55, 0xe0, 0xeb, 0x9e, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d7e88, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100d7e8d, 0x5)   calld(sys_check_available_stack_size, 0x8dec0); /* call 0x10165d52 */
    II(0x100d7e92, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d7e93, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d7e94, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d7e95, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d7e96, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d7e97, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d7e99, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100d7e9f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d7ea2, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100d7ea5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7ea8, 0x5)   calld(0x100d811c, 0x26f);             /* call 0x100d811c */
    II(0x100d7ead, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d7eb0, 0x5)   calld(0x100d4e8c, -0x3029);           /* call 0x100d4e8c */
    II(0x100d7eb5, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100d7eb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100d7ebb, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100d7ebd, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x100d7ec0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7ec3, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100d7ec5, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100d7ec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d7ecb, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100d7ece, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d7ed1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7ed4, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d7ed7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d7eda, 0x5)   calld(my_min, -0x4e75b);              /* call 0x10089784 */
    II(0x100d7edf, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100d7ee2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d7ee5, 0x3)   mov(edx, memd_a32(ds, eax + 0x8));    /* mov edx, [eax+0x8] */
    II(0x100d7ee8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d7eeb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7eee, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100d7ef1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d7ef4, 0x5)   calld(my_min, -0x4e775);              /* call 0x10089784 */
    II(0x100d7ef9, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100d7efc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d7eff, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x100d7f02:
    II(0x100d7f02, 0x3)   dec(memd_a32(ss, ebp - 0x10));        /* dec dword [ebp-0x10] */
    II(0x100d7f05, 0x5)   cmp(memw_a32(ss, ebp - 0x10), -0x1 /* 0xff */); /* cmp word [ebp-0x10], 0xff */
    II(0x100d7f0a, 0x2)   jzd(0x100d7f64, 0x58);                /* jz 0x100d7f64 */
    II(0x100d7f0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d7f0f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x100d7f12:
    II(0x100d7f12, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
    II(0x100d7f15, 0x5)   cmp(memw_a32(ss, ebp - 0x14), -0x1 /* 0xff */); /* cmp word [ebp-0x14], 0xff */
    II(0x100d7f1a, 0x2)   jzd(0x100d7f3e, 0x22);                /* jz 0x100d7f3e */
    II(0x100d7f1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100d7f1f, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100d7f21, 0x3)   cmp(al, memb_a32(ss, ebp - 0xc));     /* cmp al, [ebp-0xc] */
    II(0x100d7f24, 0x2)   jzd(0x100d7f30, 0xa);                 /* jz 0x100d7f30 */
    II(0x100d7f26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100d7f29, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x100d7f2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100d7f2e, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
l_0x100d7f30:
    II(0x100d7f30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100d7f33, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
    II(0x100d7f36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100d7f39, 0x3)   inc(memd_a32(ss, ebp - 0x20));        /* inc dword [ebp-0x20] */
    II(0x100d7f3c, 0x2)   jmpd(0x100d7f12, -0x2c);              /* jmp 0x100d7f12 */
l_0x100d7f3e:
    II(0x100d7f3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d7f41, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100d7f44, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d7f47, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100d7f4b, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100d7f4d, 0x3)   add(memd_a32(ss, ebp - 0x24), edx);   /* add [ebp-0x24], edx */
    II(0x100d7f50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7f53, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100d7f56, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d7f59, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100d7f5d, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100d7f5f, 0x3)   add(memd_a32(ss, ebp - 0x20), edx);   /* add [ebp-0x20], edx */
    II(0x100d7f62, 0x2)   jmpd(0x100d7f02, -0x62);              /* jmp 0x100d7f02 */
l_0x100d7f64:
    II(0x100d7f64, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d7f66, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d7f67, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d7f68, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d7f69, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d7f6a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d7f6b, 0x1)   retd();                               /* ret */
FUNC_END

