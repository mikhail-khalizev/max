FUNC_BEGIN(0x100b0e61, 0xacdaeaa6eb8ac25a, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xe7, 0x4e, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x88, 0x9e, 0x8, 0, 0x84, 0xc0, 0x74, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0xf8, 0x5c, 0xfc, 0xff, 0x98, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0, 0x8a, 0x45, 0xf8, 0x88, 0x45, 0xf4, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100b0e61, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100b0e66, 0x5)   calld(sys_check_available_stack_size, 0xb4ee7); /* call 0x10165d52 */
    II(0x100b0e6b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b0e6c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b0e6d, 0x1)   pushd(edx);                           /* push edx */
    II(0x100b0e6e, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b0e6f, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b0e70, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b0e71, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b0e73, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100b0e79, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100b0e7c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0e7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0e81, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b0e84, 0x5)   calld(0x1013ad11, 0x89e88);           /* call 0x1013ad11 */
    II(0x100b0e89, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b0e8b, 0x2)   jzd(0x100b0e9d, 0x10);                /* jz 0x100b0e9d */
    II(0x100b0e8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0e90, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b0e93, 0x5)   calld(0x10076b90, -0x3a308);          /* call 0x10076b90 */
    II(0x100b0e98, 0x1)   cwde();                               /* cwde */
    II(0x100b0e99, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b0e9b, 0x2)   jgd(0x100b0e9f, 0x2);                 /* jg 0x100b0e9f */
l_0x100b0e9d:
    II(0x100b0e9d, 0x2)   jmpd(0x100b0ea5, 0x6);                /* jmp 0x100b0ea5 */
l_0x100b0e9f:
    II(0x100b0e9f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100b0ea3, 0x2)   jmpd(0x100b0ea9, 0x4);                /* jmp 0x100b0ea9 */
l_0x100b0ea5:
    II(0x100b0ea5, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
l_0x100b0ea9:
    II(0x100b0ea9, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100b0eac, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
//    II(0x100b0eaf, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100b0eb2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b0eb4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b0eb5, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b0eb6, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b0eb7, 0x1)   popd(edx);                            /* pop edx */
    II(0x100b0eb8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b0eb9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b0eba, 0x1)   retd();                               /* ret */
FUNC_END

