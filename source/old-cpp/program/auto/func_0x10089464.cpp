FUNC_BEGIN(0x10089464, 0x8e2426da12a422a3, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xe4, 0xc8, 0xd, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf7, 0x45, 0xfc, 0x4, 0, 0, 0, 0x74, 0x17, 0xba, 0x54, 0x3a, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x21, 0xcb, 0xd, 0, 0xe8, 0x3c, 0xcb, 0xd, 0, 0xe9, 0xb9, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x42, 0xe8, 0x56, 0xf6, 0xff, 0xff, 0x83, 0xe8, 0x42, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x3e, 0xe8, 0x6b, 0xca, 0xfe, 0xff, 0x83, 0xe8, 0x3e, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x36, 0xe8, 0xa8, 0xf6, 0xff, 0xff, 0x83, 0xe8, 0x36, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x32, 0xe8, 0x45, 0xca, 0xfe, 0xff, 0x83, 0xe8, 0x32, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x2e, 0xe8, 0x2a, 0xff, 0xff, 0xff, 0x83, 0xe8, 0x2e, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x2a, 0xe8, 0xb7, 0xfa, 0xff, 0xff, 0x83, 0xe8, 0x2a, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x20, 0xe8, 0xe4, 0xfa, 0xff, 0xff, 0x83, 0xe8, 0x20, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x16, 0xe8, 0xd1, 0xfa, 0xff, 0xff, 0x83, 0xe8, 0x16, 0x89, 0x45, 0xf8, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x6, 0x93, 0x1, 0, 0x89, 0x45, 0xf8, 0xf7, 0x45, 0xfc, 0x2, 0, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xa, 0xca, 0xd, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10089464, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x10089469, 0x5)   calld(sys_check_available_stack_size, 0xdc8e4); /* call 0x10165d52 */
    II(0x1008946e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008946f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10089470, 0x1)   pushd(esi);                           /* push esi */
    II(0x10089471, 0x1)   pushd(edi);                           /* push edi */
    II(0x10089472, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10089473, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10089475, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x1008947b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1008947e, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10089481, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x4);   /* test dword [ebp-0x4], 0x4 */
    II(0x10089488, 0x2)   jzd(0x100894a1, 0x17);                /* jz 0x100894a1 */
    II(0x1008948a, 0x5)   mov(edx, 0x101b3a54);                 /* mov edx, 0x101b3a54 */
    II(0x1008948f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10089492, 0x5)   calld(sys_call_dtor_arr, 0xdcb21);    /* call 0x10165fb8 */
    II(0x10089497, 0x5)   calld(sys_delete_arr, 0xdcb3c);       /* call 0x10165fd8 */
    II(0x1008949c, 0x5)   jmpd(0x1008955a, 0xb9);               /* jmp 0x1008955a */
l_0x100894a1:
    II(0x100894a1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100894a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100894a6, 0x3)   add(eax, 0x42);                       /* add eax, 0x42 */
    II(0x100894a9, 0x5)   calld(0x10088b04, -0x9aa);            /* call 0x10088b04 */
    II(0x100894ae, 0x3)   sub(eax, 0x42);                       /* sub eax, 0x42 */
    II(0x100894b1, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100894b4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100894b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100894b9, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100894bc, 0x5)   calld(0x10075f2c, -0x13595);          /* call 0x10075f2c */
    II(0x100894c1, 0x3)   sub(eax, 0x3e);                       /* sub eax, 0x3e */
    II(0x100894c4, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100894c7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100894c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100894cc, 0x3)   add(eax, 0x36);                       /* add eax, 0x36 */
    II(0x100894cf, 0x5)   calld(0x10088b7c, -0x958);            /* call 0x10088b7c */
    II(0x100894d4, 0x3)   sub(eax, 0x36);                       /* sub eax, 0x36 */
    II(0x100894d7, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100894da, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100894dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100894df, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x100894e2, 0x5)   calld(0x10075f2c, -0x135bb);          /* call 0x10075f2c */
    II(0x100894e7, 0x3)   sub(eax, 0x32);                       /* sub eax, 0x32 */
    II(0x100894ea, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100894ed, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100894ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100894f2, 0x3)   add(eax, 0x2e);                       /* add eax, 0x2e */
    II(0x100894f5, 0x5)   calld(0x10089424, -0xd6);             /* call 0x10089424 */
    II(0x100894fa, 0x3)   sub(eax, 0x2e);                       /* sub eax, 0x2e */
    II(0x100894fd, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10089500, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10089502, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10089505, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10089508, 0x5)   calld(0x10088fc4, -0x549);            /* call 0x10088fc4 */
    II(0x1008950d, 0x3)   sub(eax, 0x2a);                       /* sub eax, 0x2a */
    II(0x10089510, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10089513, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10089515, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10089518, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x1008951b, 0x5)   calld(0x10089004, -0x51c);            /* call 0x10089004 */
    II(0x10089520, 0x3)   sub(eax, 0x20);                       /* sub eax, 0x20 */
    II(0x10089523, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10089526, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10089528, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008952b, 0x3)   add(eax, 0x16);                       /* add eax, 0x16 */
    II(0x1008952e, 0x5)   calld(0x10089004, -0x52f);            /* call 0x10089004 */
    II(0x10089533, 0x3)   sub(eax, 0x16);                       /* sub eax, 0x16 */
    II(0x10089536, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10089539, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
//    II(0x1008953e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10089541, 0x5)   calld(0x100a284c, 0x19306);           /* call 0x100a284c */
    II(0x10089546, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10089549, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x2);   /* test dword [ebp-0x4], 0x2 */
    II(0x10089550, 0x2)   jzd(0x1008955a, 0x8);                 /* jz 0x1008955a */
    II(0x10089552, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10089555, 0x5)   calld(sys_delete, 0xdca0a);           /* call 0x10165f64 */
l_0x1008955a:
    II(0x1008955a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008955d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x10089560, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10089563, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10089565, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10089566, 0x1)   popd(edi);                            /* pop edi */
    II(0x10089567, 0x1)   popd(esi);                            /* pop esi */
    II(0x10089568, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10089569, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008956a, 0x1)   retd();                               /* ret */
FUNC_END

