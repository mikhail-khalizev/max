FUNC_BEGIN(0x1010daa7, 0x17ace167c2dc091d, 0x20, ({0x68, 0x80, 0, 0, 0, 0xe8, 0xa1, 0x82, 0x5, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x5c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x88, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0xf, 0xbe, 0x45, 0xf8, 0x6b, 0xd0, 0x18, 0xb8, 0xc4, 0x9b, 0x1b, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xf0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x6b, 0xc7, 0x5, 0, 0x80, 0x7d, 0xf8, 0xc, 0x7c, 0x6, 0x80, 0x7d, 0xf8, 0x10, 0x7c, 0x5, 0xe9, 0xfd, 0, 0, 0, 0x66, 0xf, 0xbe, 0x45, 0xf8, 0x83, 0xe8, 0xc, 0x66, 0x89, 0x45, 0xec, 0xc7, 0x45, 0xe8, 0xd5, 0x2, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x8, 0x40, 0x89, 0x45, 0xe4, 0x8a, 0x45, 0xec, 0x4, 0x67, 0xf, 0xbe, 0xc0, 0xe8, 0xbf, 0x84, 0xf6, 0xff, 0x83, 0xf8, 0x1, 0x75, 0x46, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0xb0, 0x84, 0xf6, 0xff, 0x83, 0xf8, 0x9, 0x74, 0xa, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0xc, 0, 0x75, 0xf, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x8e, 0x84, 0xf6, 0xff, 0x83, 0xf8, 0x9, 0x75, 0x15, 0x8a, 0x45, 0xec, 0x4, 0x6b, 0xf, 0xbe, 0xc0, 0xe8, 0x7c, 0x84, 0xf6, 0xff, 0x5, 0xd5, 0x2, 0, 0, 0x89, 0x45, 0xe8, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x8e, 0x82, 0x5, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x31, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xe4, 0x8b, 0x45, 0xe0, 0xe8, 0x68, 0x8, 0xfc, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd4, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x4d, 0xf4, 0x1, 0xc1, 0x8b, 0x45, 0xd4, 0x89, 0x41, 0x14, 0xb9, 0x28, 0, 0, 0, 0xbb, 0x29, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x14, 0xe8, 0x31, 0x11, 0xfc, 0xff, 0xe9, 0x3f, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x78, 0x8, 0xff, 0xf, 0x85, 0x77, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xf9, 0x81, 0x5, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x41, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x6, 0x8b, 0x55, 0xf0, 0x66, 0x2b, 0x42, 0x2, 0x98, 0x50, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x4, 0x8b, 0x55, 0xf0, 0x66, 0x2b, 0x2, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf0, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xd0, 0xe8, 0x51, 0x7, 0xfc, 0xff, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc4, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0x8b, 0x45, 0xc4, 0x89, 0x42, 0x14, 0xe9, 0xba, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x82, 0x81, 0x5, 0, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0x83, 0x7d, 0xbc, 0, 0x74, 0x36, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xc0, 0xe8, 0x57, 0x7, 0xfc, 0xff, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xb4, 0xeb, 0x6, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb4, 0xf, 0xbe, 0x55, 0xf8, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf4, 0x8b, 0x45, 0xb4, 0x89, 0x42, 0x14, 0x8b, 0x45, 0xf0, 0x83, 0x78, 0xa, 0, 0x74, 0x4c, 0x8d, 0x45, 0xb0, 0xe8, 0x3a, 0x75, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xac, 0xe8, 0x5d, 0x75, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xa8, 0xe8, 0x80, 0x75, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xa4, 0xe8, 0xa3, 0x75, 0xfc, 0xff, 0x50, 0xe8, 0xc9, 0x75, 0xfc, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0xe5, 0x75, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0xa, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x14, 0xe8, 0x36, 0x12, 0xfc, 0xff, 0x80, 0x7d, 0xfc, 0, 0x74, 0x35, 0xba, 0x5, 0, 0, 0, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x14, 0xe8, 0x49, 0x74, 0xfc, 0xff, 0xf, 0xbe, 0x55, 0xf8, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x14, 0xe8, 0xfd, 0x73, 0xfc, 0xff, 0xeb, 0x4c, 0x31, 0xd2, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x14, 0xe8, 0x17, 0x74, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xf8, 0x8d, 0x90, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x14, 0xe8, 0x9b, 0x73, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xf8, 0x8d, 0x90, 0, 0x70, 0, 0, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x14, 0xe8, 0xaf, 0x73, 0xfc, 0xff, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x14, 0xe8, 0x4, 0x73, 0xfc, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0, 0x8b, 0x50, 0x12, 0xf, 0xbe, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0x8b, 0x40, 0x14, 0xe8, 0x72, 0x1a, 0xfc, 0xff, 0xf, 0xbe, 0x55, 0xf8, 0xf, 0xbe, 0x45, 0xf8, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf4, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0x89, 0x50, 0x60, 0xf, 0xbe, 0x45, 0xf8, 0x6b, 0xc0, 0xc, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xe, 0x89, 0x42, 0x64, 0xf, 0xbe, 0x45, 0xf8, 0x6b, 0xc0, 0xc, 0x8b, 0x55, 0xf4, 0x1, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x12, 0x89, 0x42, 0x68, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1010daa7, 0x5)   pushd(0x80);                          /* push dword 0x80 */
    II(0x1010daac, 0x5)   calld(sys_check_available_stack_size, 0x582a1); /* call 0x10165d52 */
    II(0x1010dab1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010dab2, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010dab3, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010dab4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010dab5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010dab7, 0x6)   sub(esp, 0x5c);                       /* sub esp, 0x5c */
    II(0x1010dabd, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1010dac0, 0x3)   mov(memb_a32(ss, ebp - 0x8), dl);     /* mov [ebp-0x8], dl */
    II(0x1010dac3, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x1010dac6, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010daca, 0x3)   imul(edx, eax, 0x18);                 /* imul edx, eax, 0x18 */
    II(0x1010dacd, 0x5)   mov(eax, 0x101b9bc4);                 /* mov eax, 0x101b9bc4 */
    II(0x1010dad2, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1010dad4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010dad7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1010dadc, 0x5)   calld(/* sys */ 0x1016a24c, 0x5c76b); /* call 0x1016a24c */
    II(0x1010dae1, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0xc);    /* cmp byte [ebp-0x8], 0xc */
    II(0x1010dae5, 0x2)   jld(0x1010daed, 0x6);                 /* jl 0x1010daed */
    II(0x1010dae7, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0x10);   /* cmp byte [ebp-0x8], 0x10 */
    II(0x1010daeb, 0x2)   jld(0x1010daf2, 0x5);                 /* jl 0x1010daf2 */
l_0x1010daed:
    II(0x1010daed, 0x5)   jmpd(0x1010dbef, 0xfd);               /* jmp 0x1010dbef */
l_0x1010daf2:
    II(0x1010daf2, 0x5)   movsx(ax, memb_a32(ss, ebp - 0x8));   /* movsx ax, byte [ebp-0x8] */
    II(0x1010daf7, 0x3)   sub(eax, 0xc);                        /* sub eax, 0xc */
    II(0x1010dafa, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x1010dafe, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x2d5); /* mov dword [ebp-0x18], 0x2d5 */
    II(0x1010db05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010db08, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1010db0c, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010db0d, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1010db10, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1010db13, 0x2)   add(al, 0x67);                        /* add al, 0x67 */
    II(0x1010db15, 0x3)   movsx(eax, al);                       /* movsx eax, al */
    II(0x1010db18, 0x5)   calld(0x10075fdc, -0x97b41);          /* call 0x10075fdc */
    II(0x1010db1d, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1010db20, 0x2)   jnzd(0x1010db68, 0x46);               /* jnz 0x1010db68 */
    II(0x1010db22, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x1010db27, 0x5)   calld(0x10075fdc, -0x97b50);          /* call 0x10075fdc */
    II(0x1010db2c, 0x3)   cmp(eax, 0x9);                        /* cmp eax, 0x9 */
    II(0x1010db2f, 0x2)   jzd(0x1010db3b, 0xa);                 /* jz 0x1010db3b */
    II(0x1010db31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010db34, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1010db38, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1010db3b:
    II(0x1010db3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010db3e, 0x4)   cmp(memd_a32(ds, eax + 0xc), 0);      /* cmp dword [eax+0xc], 0x0 */
    II(0x1010db42, 0x2)   jnzd(0x1010db53, 0xf);                /* jnz 0x1010db53 */
    II(0x1010db44, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x1010db49, 0x5)   calld(0x10075fdc, -0x97b72);          /* call 0x10075fdc */
    II(0x1010db4e, 0x3)   cmp(eax, 0x9);                        /* cmp eax, 0x9 */
    II(0x1010db51, 0x2)   jnzd(0x1010db68, 0x15);               /* jnz 0x1010db68 */
l_0x1010db53:
    II(0x1010db53, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1010db56, 0x2)   add(al, 0x6b);                        /* add al, 0x6b */
    II(0x1010db58, 0x3)   movsx(eax, al);                       /* movsx eax, al */
    II(0x1010db5b, 0x5)   calld(0x10075fdc, -0x97b84);          /* call 0x10075fdc */
    II(0x1010db60, 0x5)   add(eax, 0x2d5);                      /* add eax, 0x2d5 */
    II(0x1010db65, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x1010db68:
    II(0x1010db68, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x1010db6d, 0x5)   calld(sys_new, 0x5828e);              /* call 0x10165e00 */
    II(0x1010db72, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1010db75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010db78, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1010db7b, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x1010db7f, 0x2)   jzd(0x1010dbb2, 0x31);                /* jz 0x1010dbb2 */
    II(0x1010db81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010db84, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010db86, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010db89, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010db8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010db8d, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1010db90, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010db93, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1010db97, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010db98, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1010db9b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1010db9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010dba2, 0x5)   calld(my_ctor_c17, -0x3f798);         /* call 0x100ce40f */
    II(0x1010dba7, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x1010dbaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010dbad, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1010dbb0, 0x2)   jmpd(0x1010dbb8, 0x6);                /* jmp 0x1010dbb8 */
l_0x1010dbb2:
    II(0x1010dbb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1010dbb5, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x1010dbb8:
    II(0x1010dbb8, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dbbc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010dbbf, 0x3)   mov(ecx, memd_a32(ss, ebp - 0xc));    /* mov ecx, [ebp-0xc] */
    II(0x1010dbc2, 0x2)   add(ecx, eax);                        /* add ecx, eax */
    II(0x1010dbc4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1010dbc7, 0x3)   mov(memd_a32(ds, ecx + 0x14), eax);   /* mov [ecx+0x14], eax */
    II(0x1010dbca, 0x5)   mov(ecx, 0x28);                       /* mov ecx, 0x28 */
    II(0x1010dbcf, 0x5)   mov(ebx, 0x29);                       /* mov ebx, 0x29 */
    II(0x1010dbd4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1010dbd8, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dbdc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010dbdf, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010dbe2, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010dbe5, 0x5)   calld(0x100ced1b, -0x3eecf);          /* call 0x100ced1b */
    II(0x1010dbea, 0x5)   jmpd(0x1010dd2e, 0x13f);              /* jmp 0x1010dd2e */
l_0x1010dbef:
    II(0x1010dbef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dbf2, 0x5)   cmp(memw_a32(ds, eax + 0x8), -0x1 /* 0xff */); /* cmp word [eax+0x8], 0xff */
    II(0x1010dbf7, 0x6)   jnzd(0x1010dc74, 0x77);               /* jnz dword 0x1010dc74 */
    II(0x1010dbfd, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x1010dc02, 0x5)   calld(sys_new, 0x581f9);              /* call 0x10165e00 */
    II(0x1010dc07, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x1010dc0a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1010dc0d, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1010dc10, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x1010dc14, 0x2)   jzd(0x1010dc57, 0x41);                /* jz 0x1010dc57 */
    II(0x1010dc16, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dc19, 0x4)   mov(ax, memw_a32(ds, eax + 0x6));     /* mov ax, [eax+0x6] */
    II(0x1010dc1d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1010dc20, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x1010dc24, 0x1)   cwde();                               /* cwde */
    II(0x1010dc25, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010dc26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dc29, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x1010dc2d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1010dc30, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x1010dc33, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1010dc36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dc39, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x1010dc3b, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1010dc3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dc41, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1010dc44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1010dc47, 0x5)   calld(0x100ce39d, -0x3f8af);          /* call 0x100ce39d */
    II(0x1010dc4c, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x1010dc4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1010dc52, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x1010dc55, 0x2)   jmpd(0x1010dc5d, 0x6);                /* jmp 0x1010dc5d */
l_0x1010dc57:
    II(0x1010dc57, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1010dc5a, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
l_0x1010dc5d:
    II(0x1010dc5d, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dc61, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010dc64, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010dc67, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010dc69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1010dc6c, 0x3)   mov(memd_a32(ds, edx + 0x14), eax);   /* mov [edx+0x14], eax */
    II(0x1010dc6f, 0x5)   jmpd(0x1010dd2e, 0xba);               /* jmp 0x1010dd2e */
l_0x1010dc74:
    II(0x1010dc74, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x1010dc79, 0x5)   calld(sys_new, 0x58182);              /* call 0x10165e00 */
    II(0x1010dc7e, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x1010dc81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1010dc84, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x1010dc87, 0x4)   cmp(memd_a32(ss, ebp - 0x44), 0);     /* cmp dword [ebp-0x44], 0x0 */
    II(0x1010dc8b, 0x2)   jzd(0x1010dcc3, 0x36);                /* jz 0x1010dcc3 */
    II(0x1010dc8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dc90, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010dc92, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010dc95, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010dc96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dc99, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1010dc9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dc9f, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1010dca3, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010dca4, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1010dca7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dcaa, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1010dcad, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1010dcb0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1010dcb3, 0x5)   calld(my_ctor_c17, -0x3f8a9);         /* call 0x100ce40f */
    II(0x1010dcb8, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x1010dcbb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1010dcbe, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x1010dcc1, 0x2)   jmpd(0x1010dcc9, 0x6);                /* jmp 0x1010dcc9 */
l_0x1010dcc3:
    II(0x1010dcc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1010dcc6, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
l_0x1010dcc9:
    II(0x1010dcc9, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x8));  /* movsx edx, byte [ebp-0x8] */
    II(0x1010dccd, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1010dcd0, 0x3)   add(edx, memd_a32(ss, ebp - 0xc));    /* add edx, [ebp-0xc] */
    II(0x1010dcd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1010dcd6, 0x3)   mov(memd_a32(ds, edx + 0x14), eax);   /* mov [edx+0x14], eax */
    II(0x1010dcd9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dcdc, 0x4)   cmp(memd_a32(ds, eax + 0xa), 0);      /* cmp dword [eax+0xa], 0x0 */
    II(0x1010dce0, 0x2)   jzd(0x1010dd2e, 0x4c);                /* jz 0x1010dd2e */
    II(0x1010dce2, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x1010dce5, 0x5)   calld(0x100d5224, -0x38ac6);          /* call 0x100d5224 */
    II(0x1010dcea, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010dceb, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1010dcee, 0x5)   calld(0x100d5250, -0x38aa3);          /* call 0x100d5250 */
    II(0x1010dcf3, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010dcf4, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x1010dcf7, 0x5)   calld(0x100d527c, -0x38a80);          /* call 0x100d527c */
    II(0x1010dcfc, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010dcfd, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x1010dd00, 0x5)   calld(0x100d52a8, -0x38a5d);          /* call 0x100d52a8 */
    II(0x1010dd05, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010dd06, 0x5)   calld(0x100d52d4, -0x38a37);          /* call 0x100d52d4 */
    II(0x1010dd0b, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1010dd0e, 0x5)   calld(0x100d52f8, -0x38a1b);          /* call 0x100d52f8 */
    II(0x1010dd13, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1010dd16, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010dd19, 0x3)   mov(edx, memd_a32(ds, eax + 0xa));    /* mov edx, [eax+0xa] */
    II(0x1010dd1c, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dd20, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010dd23, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010dd26, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010dd29, 0x5)   calld(0x100cef64, -0x3edca);          /* call 0x100cef64 */
l_0x1010dd2e:
    II(0x1010dd2e, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1010dd32, 0x2)   jzd(0x1010dd69, 0x35);                /* jz 0x1010dd69 */
    II(0x1010dd34, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x1010dd39, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dd3d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010dd40, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010dd43, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010dd46, 0x5)   calld(0x100d5194, -0x38bb7);          /* call 0x100d5194 */
    II(0x1010dd4b, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x8));  /* movsx edx, byte [ebp-0x8] */
    II(0x1010dd4f, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x1010dd55, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dd59, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010dd5c, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010dd5f, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010dd62, 0x5)   calld(0x100d5164, -0x38c03);          /* call 0x100d5164 */
    II(0x1010dd67, 0x2)   jmpd(0x1010ddb5, 0x4c);               /* jmp 0x1010ddb5 */
l_0x1010dd69:
    II(0x1010dd69, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010dd6b, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dd6f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010dd72, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010dd75, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010dd78, 0x5)   calld(0x100d5194, -0x38be9);          /* call 0x100d5194 */
    II(0x1010dd7d, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dd81, 0x6)   lea(edx, eax + 0x3e8);                /* lea edx, [eax+0x3e8] */
    II(0x1010dd87, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dd8b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010dd8e, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010dd91, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010dd94, 0x5)   calld(0x100d5134, -0x38c65);          /* call 0x100d5134 */
    II(0x1010dd99, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dd9d, 0x6)   lea(edx, eax + 0x7000);               /* lea edx, [eax+0x7000] */
    II(0x1010dda3, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dda7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010ddaa, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010ddad, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010ddb0, 0x5)   calld(0x100d5164, -0x38c51);          /* call 0x100d5164 */
l_0x1010ddb5:
    II(0x1010ddb5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010ddb8, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
    II(0x1010ddbb, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1010ddbe, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010ddc2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010ddc5, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010ddc8, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010ddcb, 0x5)   calld(0x100d50d4, -0x38cfc);          /* call 0x100d50d4 */
    II(0x1010ddd0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010ddd3, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010ddd5, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x1010ddd8, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010dddc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010dddf, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010dde2, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x1010dde5, 0x5)   calld(0x100cf85c, -0x3e58e);          /* call 0x100cf85c */
    II(0x1010ddea, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x8));  /* movsx edx, byte [ebp-0x8] */
    II(0x1010ddee, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010ddf2, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010ddf5, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1010ddf8, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x1010ddfe, 0x3)   mov(memd_a32(ds, eax + 0x60), edx);   /* mov [eax+0x60], edx */
    II(0x1010de01, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010de05, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010de08, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010de0b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010de0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010de10, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x1010de13, 0x3)   mov(memd_a32(ds, edx + 0x64), eax);   /* mov [edx+0x64], eax */
    II(0x1010de16, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x8));  /* movsx eax, byte [ebp-0x8] */
    II(0x1010de1a, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010de1d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010de20, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010de22, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010de25, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1010de28, 0x3)   mov(memd_a32(ds, edx + 0x68), eax);   /* mov [edx+0x68], eax */
    II(0x1010de2b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010de2d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010de2e, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010de2f, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010de30, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010de31, 0x1)   retd();                               /* ret */
FUNC_END

