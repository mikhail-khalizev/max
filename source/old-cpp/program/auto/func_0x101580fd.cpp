FUNC_BEGIN(0x101580fd, 0x339cf57b2f4b60b8, 0x20, ({0x68, 0xbc, 0, 0, 0, 0xe8, 0x4b, 0xdc, 0, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x88, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xd0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xc4, 0xe8, 0x90, 0xc2, 0, 0, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xb4, 0xe8, 0xb9, 0xc2, 0, 0, 0x89, 0x45, 0xd4, 0x80, 0x65, 0xf4, 0xfe, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x27, 0xc3, 0xf9, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xc9, 0xe1, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x3f, 0xe3, 0xf1, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0x75, 0xea, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xe4, 0x2b, 0xfe, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x81, 0x1, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x3, 0xe2, 0xf1, 0xff, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xd0, 0x3a, 0x50, 0x26, 0x75, 0x15, 0x8d, 0x45, 0xdc, 0xe8, 0xf0, 0xe1, 0xf1, 0xff, 0x66, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xd0, 0x66, 0x3b, 0x50, 0x8, 0x74, 0x2, 0xeb, 0x11, 0x8d, 0x45, 0xdc, 0xe8, 0xd9, 0xe1, 0xf1, 0xff, 0xe8, 0x85, 0x8c, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xdc, 0xe8, 0xc6, 0xe1, 0xf1, 0xff, 0x80, 0x78, 0x3e, 0x1f, 0x75, 0x5, 0xe9, 0x2c, 0x1, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8d, 0x45, 0xc4, 0xe8, 0xdc, 0x32, 0xf5, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0x1f, 0x8d, 0x45, 0xdc, 0xe8, 0x96, 0xe1, 0xf1, 0xff, 0xe8, 0xf5, 0xdf, 0xf1, 0xff, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x45, 0xc4, 0xe8, 0x8b, 0xc6, 0, 0, 0x39, 0xc3, 0x75, 0xcd, 0x8d, 0x45, 0xc4, 0xe8, 0xaf, 0x32, 0xf5, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x75, 0x54, 0x8d, 0x45, 0xa8, 0xe8, 0x7a, 0x9e, 0xf1, 0xff, 0x8d, 0x45, 0x9c, 0xe8, 0x72, 0x9e, 0xf1, 0xff, 0x8d, 0x5d, 0x9c, 0x8d, 0x55, 0xa8, 0x8d, 0x45, 0xdc, 0xe8, 0x53, 0xe1, 0xf1, 0xff, 0xe8, 0xb2, 0xdf, 0xf1, 0xff, 0xe8, 0xbf, 0xb3, 0xfe, 0xff, 0xe8, 0, 0xc7, 0, 0, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0xdc, 0xe8, 0x39, 0xe1, 0xf1, 0xff, 0xe8, 0x98, 0xdf, 0xf1, 0xff, 0x8d, 0x4d, 0xc4, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xf8, 0xc5, 0, 0, 0x8d, 0x55, 0xaa, 0x8d, 0x45, 0xb4, 0xe8, 0x5, 0xc5, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x15, 0xe1, 0xf1, 0xff, 0xe8, 0x16, 0x87, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x45, 0xb4, 0xe8, 0x9d, 0xc4, 0, 0, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xe8, 0x7c, 0x59, 0x8d, 0x45, 0xdc, 0xe8, 0x14, 0xe1, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0xd6, 0xe0, 0xf1, 0xff, 0xe8, 0xc9, 0x26, 0xf3, 0xff, 0xbb, 0x1, 0, 0, 0, 0xba, 0x1c, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xf3, 0xe0, 0xf1, 0xff, 0xe8, 0x6d, 0xad, 0, 0, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe8, 0x1, 0x45, 0xec, 0x8d, 0x45, 0xdc, 0xe8, 0xda, 0xe0, 0xf1, 0xff, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x45, 0xb4, 0xe8, 0x43, 0xc4, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xe8, 0x66, 0x29, 0x2, 0xe9, 0x65, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xd0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xbb, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xf0, 0x79, 0xf8, 0xff, 0xe8, 0x2b, 0x70, 0xf9, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0x88, 0xe8, 0xb9, 0x75, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x75, 0x6a, 0xe8, 0xa7, 0x26, 0xf7, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xbc, 0x26, 0xf7, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xbe, 0x2, 0, 0, 0, 0x8b, 0x45, 0xd0, 0xe8, 0x31, 0x86, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x50, 0xb8, 0x34, 0x24, 0x1b, 0x10, 0x50, 0xb8, 0x50, 0, 0, 0, 0x50, 0x8d, 0x45, 0x84, 0xe8, 0x4e, 0x97, 0xfe, 0xff, 0x50, 0xe8, 0x97, 0x9c, 0xfe, 0xff, 0x83, 0xc4, 0x10, 0xe8, 0x20, 0x14, 0xf3, 0xff, 0x89, 0xf2, 0xe8, 0x74, 0xd9, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x84, 0xe8, 0x71, 0x97, 0xfe, 0xff, 0xe9, 0xeb, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe4, 0x83, 0xf8, 0x1, 0x75, 0x75, 0x8b, 0x45, 0xd8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xd8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x80, 0xe8, 0xcb, 0xe6, 0xf1, 0xff, 0x8b, 0x8, 0x8b, 0x5d, 0xd8, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xec, 0x50, 0x8d, 0x45, 0x88, 0x50, 0x8b, 0x45, 0xd0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xd7, 0x81, 0x1c, 0x10, 0xb8, 0x57, 0x24, 0x1b, 0x10, 0x50, 0xb8, 0x50, 0, 0, 0, 0x50, 0x8d, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0xce, 0x96, 0xfe, 0xff, 0x50, 0xe8, 0x17, 0x9c, 0xfe, 0xff, 0x83, 0xc4, 0x18, 0xe8, 0xa0, 0x13, 0xf3, 0xff, 0xe8, 0x33, 0xd7, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0xf0, 0x96, 0xfe, 0xff, 0xeb, 0x6d, 0xe8, 0xbf, 0x25, 0xf7, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0xd4, 0x25, 0xf7, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xec, 0x50, 0x8d, 0x45, 0x88, 0x50, 0x8b, 0x45, 0xd0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xff, 0xb0, 0xdb, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0xb8, 0x83, 0x24, 0x1b, 0x10, 0x50, 0xb8, 0x50, 0, 0, 0, 0x50, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x5f, 0x96, 0xfe, 0xff, 0x50, 0xe8, 0xa8, 0x9b, 0xfe, 0xff, 0x83, 0xc4, 0x1c, 0xe8, 0x31, 0x13, 0xf3, 0xff, 0xe8, 0x87, 0xd8, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x81, 0x96, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xb9, 0xda, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0xe3, 0xc1, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x99, 0xc1, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101580fd, 0x5)   pushd(0xbc);                          /* push dword 0xbc */
    II(0x10158102, 0x5)   calld(sys_check_available_stack_size, 0xdc4b); /* call 0x10165d52 */
    II(0x10158107, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10158108, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10158109, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015810a, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015810b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015810c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015810e, 0x6)   sub(esp, 0x88);                       /* sub esp, 0x88 */
    II(0x10158114, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10158117, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1015811a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015811d, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10158120, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10158124, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10158127, 0x5)   calld(0x101643bc, 0xc290);            /* call 0x101643bc */
    II(0x1015812c, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1015812f, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10158133, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10158137, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1015813a, 0x5)   calld(0x101643f8, 0xc2b9);            /* call 0x101643f8 */
    II(0x1015813f, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10158142, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10158146, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1015814d, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x10158154, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x1015815b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10158160, 0x5)   calld(0x100f448c, -0x63cd9);          /* call 0x100f448c */
    II(0x10158165, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1015816a, 0x5)   calld(0x10076338, -0xe1e37);          /* call 0x10076338 */
    II(0x1015816f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10158171, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10158174, 0x5)   calld(0x100764b8, -0xe1cc1);          /* call 0x100764b8 */
    II(0x10158179, 0x2)   jmpd(0x10158183, 0x8);                /* jmp 0x10158183 */
l_0x1015817b:
    II(0x1015817b, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1015817e, 0x5)   calld(0x10076bf8, -0xe158b);          /* call 0x10076bf8 */
l_0x10158183:
    II(0x10158183, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10158185, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10158188, 0x5)   calld(0x1013ad71, -0x1d41c);          /* call 0x1013ad71 */
    II(0x1015818d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015818f, 0x6)   jzd(0x10158316, 0x181);               /* jz dword 0x10158316 */
    II(0x10158195, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10158198, 0x5)   calld(0x100763a0, -0xe1dfd);          /* call 0x100763a0 */
    II(0x1015819d, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x101581a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x101581a3, 0x3)   cmp(dl, memb_a32(ds, eax + 0x26));    /* cmp dl, [eax+0x26] */
    II(0x101581a6, 0x2)   jnzd(0x101581bd, 0x15);               /* jnz 0x101581bd */
    II(0x101581a8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101581ab, 0x5)   calld(0x100763a0, -0xe1e10);          /* call 0x100763a0 */
    II(0x101581b0, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x101581b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x101581b7, 0x4)   cmp(dx, memw_a32(ds, eax + 0x8));     /* cmp dx, [eax+0x8] */
    II(0x101581bb, 0x2)   jzd(0x101581bf, 0x2);                 /* jz 0x101581bf */
l_0x101581bd:
    II(0x101581bd, 0x2)   jmpd(0x101581d0, 0x11);               /* jmp 0x101581d0 */
l_0x101581bf:
    II(0x101581bf, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101581c2, 0x5)   calld(0x100763a0, -0xe1e27);          /* call 0x100763a0 */
    II(0x101581c7, 0x5)   calld(0x10150e51, -0x737b);           /* call 0x10150e51 */
    II(0x101581cc, 0x2)   test(al, al);                         /* test al, al */
    II(0x101581ce, 0x2)   jnzd(0x101581d2, 0x2);                /* jnz 0x101581d2 */
l_0x101581d0:
    II(0x101581d0, 0x2)   jmpd(0x101581e0, 0xe);                /* jmp 0x101581e0 */
l_0x101581d2:
    II(0x101581d2, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101581d5, 0x5)   calld(0x100763a0, -0xe1e3a);          /* call 0x100763a0 */
    II(0x101581da, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1f);  /* cmp byte [eax+0x3e], 0x1f */
    II(0x101581de, 0x2)   jnzd(0x101581e5, 0x5);                /* jnz 0x101581e5 */
l_0x101581e0:
    II(0x101581e0, 0x5)   jmpd(0x10158311, 0x12c);              /* jmp 0x10158311 */
l_0x101581e5:
    II(0x101581e5, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x101581ec, 0x2)   jmpd(0x101581f4, 0x6);                /* jmp 0x101581f4 */
l_0x101581ee:
    II(0x101581ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101581f1, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x101581f4:
    II(0x101581f4, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x101581f7, 0x5)   calld(my_1_get_count, -0xacd24);      /* call 0x100ab4d8 */
    II(0x101581fc, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x10158200, 0x2)   jled(0x10158221, 0x1f);               /* jle 0x10158221 */
    II(0x10158202, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10158205, 0x5)   calld(0x100763a0, -0xe1e6a);          /* call 0x100763a0 */
    II(0x1015820a, 0x5)   calld(0x10076204, -0xe200b);          /* call 0x10076204 */
    II(0x1015820f, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10158211, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10158215, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10158218, 0x5)   calld(0x101648a8, 0xc68b);            /* call 0x101648a8 */
    II(0x1015821d, 0x2)   cmp(ebx, eax);                        /* cmp ebx, eax */
    II(0x1015821f, 0x2)   jnzd(0x101581ee, -0x33);              /* jnz 0x101581ee */
l_0x10158221:
    II(0x10158221, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10158224, 0x5)   calld(my_1_get_count, -0xacd51);      /* call 0x100ab4d8 */
    II(0x10158229, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x1015822d, 0x2)   jnzd(0x10158283, 0x54);               /* jnz 0x10158283 */
    II(0x1015822f, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x10158232, 0x5)   calld(0x100720b1, -0xe6186);          /* call 0x100720b1 */
    II(0x10158237, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x1015823a, 0x5)   calld(0x100720b1, -0xe618e);          /* call 0x100720b1 */
    II(0x1015823f, 0x3)   lea(ebx, ebp - 0x64);                 /* lea ebx, [ebp-0x64] */
    II(0x10158242, 0x3)   lea(edx, ebp - 0x58);                 /* lea edx, [ebp-0x58] */
    II(0x10158245, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10158248, 0x5)   calld(0x100763a0, -0xe1ead);          /* call 0x100763a0 */
    II(0x1015824d, 0x5)   calld(0x10076204, -0xe204e);          /* call 0x10076204 */
    II(0x10158252, 0x5)   calld(0x10143616, -0x14c41);          /* call 0x10143616 */
    II(0x10158257, 0x5)   calld(0x1016495c, 0xc700);            /* call 0x1016495c */
    II(0x1015825c, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015825f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10158262, 0x5)   calld(0x100763a0, -0xe1ec7);          /* call 0x100763a0 */
    II(0x10158267, 0x5)   calld(0x10076204, -0xe2068);          /* call 0x10076204 */
    II(0x1015826c, 0x3)   lea(ecx, ebp - 0x3c);                 /* lea ecx, [ebp-0x3c] */
    II(0x1015826f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10158271, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x10158273, 0x5)   calld(0x10164870, 0xc5f8);            /* call 0x10164870 */
    II(0x10158278, 0x3)   lea(edx, ebp - 0x56);                 /* lea edx, [ebp-0x56] */
    II(0x1015827b, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1015827e, 0x5)   calld(0x10164788, 0xc505);            /* call 0x10164788 */
l_0x10158283:
    II(0x10158283, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10158286, 0x5)   calld(0x100763a0, -0xe1eeb);          /* call 0x100763a0 */
    II(0x1015828b, 0x5)   calld(0x101509a6, -0x78ea);           /* call 0x101509a6 */
    II(0x10158290, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10158293, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10158295, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10158298, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1015829b, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x1015829d, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x101582a0, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x101582a3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x101582a7, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x101582aa, 0x5)   calld(0x1016474c, 0xc49d);            /* call 0x1016474c */
    II(0x101582af, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x101582b2, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x101582b6, 0x2)   jld(0x10158311, 0x59);                /* jl 0x10158311 */
    II(0x101582b8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101582bb, 0x5)   calld(0x100763d4, -0xe1eec);          /* call 0x100763d4 */
    II(0x101582c0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101582c2, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101582c5, 0x5)   calld(0x100763a0, -0xe1f2a);          /* call 0x100763a0 */
    II(0x101582ca, 0x5)   calld(0x1008a998, -0xcd937);          /* call 0x1008a998 */
    II(0x101582cf, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101582d4, 0x5)   mov(edx, 0x1c);                       /* mov edx, 0x1c */
    II(0x101582d9, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101582dc, 0x5)   calld(0x100763d4, -0xe1f0d);          /* call 0x100763d4 */
    II(0x101582e1, 0x5)   calld(0x10163053, 0xad6d);            /* call 0x10163053 */
    II(0x101582e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101582e9, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
    II(0x101582ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101582ef, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
    II(0x101582f2, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101582f5, 0x5)   calld(0x100763d4, -0xe1f26);          /* call 0x100763d4 */
    II(0x101582fa, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x101582fd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10158301, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x10158304, 0x5)   calld(0x1016474c, 0xc443);            /* call 0x1016474c */
    II(0x10158309, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015830b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015830e, 0x3)   sub(memw_a32(ds, edx), ax);           /* sub [edx], ax */
l_0x10158311:
    II(0x10158311, 0x5)   jmpd(0x1015817b, -0x19b);             /* jmp 0x1015817b */
l_0x10158316:
    II(0x10158316, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10158319, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1015831c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015831f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10158322, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10158325, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015832a, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10158330, 0x5)   mov(ebx, 0x101ca468);                 /* mov ebx, 0x101ca468 */
    II(0x10158335, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10158337, 0x5)   calld(0x100dfd2c, -0x78610);          /* call 0x100dfd2c */
    II(0x1015833c, 0x5)   calld(0x100ef36c, -0x68fd5);          /* call 0x100ef36c */
    II(0x10158341, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10158344, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x10158347, 0x5)   calld(0x1014f905, -0x8a47);           /* call 0x1014f905 */
    II(0x1015834c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10158350, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10158352, 0x2)   jnzd(0x101583be, 0x6a);               /* jnz 0x101583be */
    II(0x10158354, 0x5)   calld(0x100caa00, -0x8d959);          /* call 0x100caa00 */
    II(0x10158359, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015835e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015835f, 0x5)   calld(0x100caa20, -0x8d944);          /* call 0x100caa20 */
    II(0x10158364, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10158366, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10158368, 0x5)   mov(esi, 0x2);                        /* mov esi, 0x2 */
    II(0x1015836d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10158370, 0x5)   calld(0x101509a6, -0x79cf);           /* call 0x101509a6 */
    II(0x10158375, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10158378, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1015837a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1015837d, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10158380, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x10158382, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x10158385, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158386, 0x5)   mov(eax, 0x101b2434);                 /* mov eax, 0x101b2434 */ /* "%i raw material needed to upgrade." */
    II(0x1015838b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015838c, 0x5)   mov(eax, 0x50);                       /* mov eax, 0x50 */
    II(0x10158391, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158392, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x10158395, 0x5)   calld(my_string_ctor, -0x168b2);      /* call 0x10141ae8 */
    II(0x1015839a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015839b, 0x5)   calld(0x10142037, -0x16369);          /* call 0x10142037 */
    II(0x101583a0, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x101583a3, 0x5)   calld(my_strobj_c_str_v2, -0xcebe0);  /* call 0x100897c8 */
    II(0x101583a8, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x101583aa, 0x5)   calld(0x10115d23, -0x4268c);          /* call 0x10115d23 */
    II(0x101583af, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101583b1, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x101583b4, 0x5)   calld(my_string_dtor, -0x1688f);      /* call 0x10141b2a */
    II(0x101583b9, 0x5)   jmpd(0x101584a9, 0xeb);               /* jmp 0x101584a9 */
l_0x101583be:
    II(0x101583be, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x101583c2, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x101583c5, 0x2)   jnzd(0x1015843c, 0x75);               /* jnz 0x1015843c */
    II(0x101583c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x101583ca, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x101583cd, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x101583d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x101583d3, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x101583d6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101583d9, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x101583dc, 0x5)   calld(0x10076aac, -0xe1935);          /* call 0x10076aac */
    II(0x101583e1, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x101583e3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x28));   /* mov ebx, [ebp-0x28] */
    II(0x101583e6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101583e8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x101583ec, 0x1)   pushd(eax);                           /* push eax */
    II(0x101583ed, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x101583f0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101583f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x101583f4, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101583f7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101583fa, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x101583fd, 0x6)   pushd(memd_a32(ds, eax + 0x101c81d7)); /* push dword [eax+0x101c81d7] */
    II(0x10158403, 0x5)   mov(eax, 0x101b2457);                 /* mov eax, 0x101b2457 */ /* "%s upgraded to mark %s for %i raw material." */
    II(0x10158408, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158409, 0x5)   mov(eax, 0x50);                       /* mov eax, 0x50 */
    II(0x1015840e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015840f, 0x6)   lea(eax, ebp - 0x84);                 /* lea eax, [ebp+0xffffff7c] */
    II(0x10158415, 0x5)   calld(my_string_ctor, -0x16932);      /* call 0x10141ae8 */
    II(0x1015841a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015841b, 0x5)   calld(0x10142037, -0x163e9);          /* call 0x10142037 */
    II(0x10158420, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x10158423, 0x5)   calld(my_strobj_c_str_v2, -0xcec60);  /* call 0x100897c8 */
    II(0x10158428, 0x5)   calld(0x10115b60, -0x428cd);          /* call 0x10115b60 */
    II(0x1015842d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015842f, 0x6)   lea(eax, ebp - 0x84);                 /* lea eax, [ebp+0xffffff7c] */
    II(0x10158435, 0x5)   calld(my_string_dtor, -0x16910);      /* call 0x10141b2a */
    II(0x1015843a, 0x2)   jmpd(0x101584a9, 0x6d);               /* jmp 0x101584a9 */
l_0x1015843c:
    II(0x1015843c, 0x5)   calld(0x100caa00, -0x8da41);          /* call 0x100caa00 */
    II(0x10158441, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10158446, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158447, 0x5)   calld(0x100caa20, -0x8da2c);          /* call 0x100caa20 */
    II(0x1015844c, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1015844e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10158450, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10158452, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10158456, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158457, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x1015845a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015845b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1015845e, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10158461, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10158464, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x10158467, 0x6)   pushd(memd_a32(ds, eax + 0x101c81db)); /* push dword [eax+0x101c81db] */
    II(0x1015846d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10158471, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158472, 0x5)   mov(eax, 0x101b2483);                 /* mov eax, 0x101b2483 */ /* "%i %s upgraded to mark %s for %i raw material" */
    II(0x10158477, 0x1)   pushd(eax);                           /* push eax */
    II(0x10158478, 0x5)   mov(eax, 0x50);                       /* mov eax, 0x50 */
    II(0x1015847d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015847e, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x10158484, 0x5)   calld(my_string_ctor, -0x169a1);      /* call 0x10141ae8 */
    II(0x10158489, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015848a, 0x5)   calld(0x10142037, -0x16458);          /* call 0x10142037 */
    II(0x1015848f, 0x3)   add(esp, 0x1c);                       /* add esp, 0x1c */
    II(0x10158492, 0x5)   calld(my_strobj_c_str_v2, -0xceccf);  /* call 0x100897c8 */
    II(0x10158497, 0x5)   calld(0x10115d23, -0x42779);          /* call 0x10115d23 */
    II(0x1015849c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015849e, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x101584a4, 0x5)   calld(my_string_dtor, -0x1697f);      /* call 0x10141b2a */
l_0x101584a9:
    II(0x101584a9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101584ab, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101584ae, 0x5)   calld(0x10075f6c, -0xe2547);          /* call 0x10075f6c */
    II(0x101584b3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101584b5, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x101584b8, 0x5)   calld(0x101646a0, 0xc1e3);            /* call 0x101646a0 */
    II(0x101584bd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101584bf, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x101584c2, 0x5)   calld(0x10164660, 0xc199);            /* call 0x10164660 */
    II(0x101584c7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101584c9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101584ca, 0x1)   popd(edi);                            /* pop edi */
    II(0x101584cb, 0x1)   popd(esi);                            /* pop esi */
    II(0x101584cc, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101584cd, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101584ce, 0x1)   retd();                               /* ret */
FUNC_END

