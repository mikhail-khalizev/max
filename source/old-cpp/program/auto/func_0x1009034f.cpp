FUNC_BEGIN(0x1009034f, 0x59a3d0ef62bd3550, 0x20, ({0x68, 0xa8, 0, 0, 0, 0xe8, 0xf9, 0x59, 0xd, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x90, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0xba, 0xa, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0x7f, 0xbe, 0, 0, 0x89, 0x45, 0xc8, 0x80, 0x65, 0xf4, 0xfe, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xe8, 0x64, 0x7f, 0xb, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x21, 0, 0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0x1, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0x5, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0x9, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x89, 0x50, 0xd, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xd4, 0x8b, 0x75, 0xd4, 0x8b, 0x76, 0x23, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x13, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xd0, 0xe8, 0x74, 0x5a, 0xfe, 0xff, 0x8b, 0x4d, 0xd4, 0x89, 0xc2, 0x89, 0xc8, 0xff, 0x16, 0x66, 0x89, 0x45, 0xb2, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xdc, 0x8b, 0x75, 0xdc, 0x8b, 0x76, 0x23, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x1b, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xd8, 0xe8, 0x47, 0x5a, 0xfe, 0xff, 0x8b, 0x4d, 0xdc, 0x89, 0xc2, 0x89, 0xc8, 0xff, 0x56, 0x4, 0x66, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0, 0x66, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb4, 0x2b, 0x45, 0xb2, 0x8b, 0x55, 0xf8, 0x66, 0x1, 0x42, 0x21, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xe0, 0x8b, 0x75, 0xe0, 0x8b, 0x76, 0x23, 0xf, 0xbf, 0x4d, 0xb4, 0xf, 0xbf, 0x5d, 0xb2, 0x8b, 0x55, 0xfc, 0xf, 0xbf, 0x12, 0x8b, 0x45, 0xe0, 0xff, 0x56, 0xc, 0x8d, 0x55, 0xb0, 0x8d, 0x45, 0xb8, 0xe8, 0x1f, 0xbd, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xb, 0xb0, 0xff, 0xff, 0x98, 0x85, 0xc0, 0xf, 0x8e, 0x30, 0x3, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xfa, 0xaf, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xec, 0x7e, 0x6, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0x48, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0xa9, 0xbc, 0, 0, 0x8d, 0x7d, 0xb0, 0x89, 0xc6, 0xa5, 0x66, 0xa5, 0x8b, 0x45, 0xf0, 0x48, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xb8, 0xe8, 0x56, 0xd6, 0x3, 0, 0xf, 0xbf, 0x55, 0xb2, 0x8b, 0x45, 0xf8, 0x3b, 0x50, 0x5, 0x7d, 0xa, 0xf, 0xbf, 0x45, 0xb2, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x5, 0xf, 0xbf, 0x55, 0xb0, 0x8b, 0x45, 0xf8, 0x3b, 0x50, 0x1, 0x7d, 0xa, 0xf, 0xbf, 0x45, 0xb0, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x1, 0xf, 0xbf, 0x55, 0xb0, 0x8b, 0x45, 0xf8, 0x3b, 0x50, 0x9, 0x7c, 0xa, 0xf, 0xbf, 0x45, 0xb0, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x9, 0xf, 0xbf, 0x55, 0xb4, 0x8b, 0x45, 0xf8, 0x3b, 0x50, 0xd, 0x7e, 0xa, 0xf, 0xbf, 0x45, 0xb4, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0xd, 0x8b, 0x45, 0xf8, 0x80, 0x38, 0, 0x74, 0x16, 0xf, 0xbf, 0x45, 0xb2, 0x8d, 0x50, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x15, 0xe8, 0x4c, 0x69, 0xfe, 0xff, 0x66, 0x89, 0x45, 0xb2, 0x8b, 0x45, 0xf8, 0x80, 0x38, 0, 0x74, 0x16, 0xf, 0xbf, 0x45, 0xb4, 0x8d, 0x50, 0x1, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1d, 0xe8, 0x36, 0x92, 0xff, 0xff, 0x66, 0x89, 0x45, 0xb4, 0xf, 0xbf, 0x55, 0xb0, 0x8b, 0x45, 0xf8, 0x3b, 0x50, 0x11, 0xf, 0x8e, 0xe, 0x1, 0, 0, 0x8b, 0x45, 0xb0, 0x48, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x2, 0x8b, 0x45, 0xb2, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x2, 0x66, 0x3b, 0x45, 0xb4, 0xf, 0x8d, 0xe9, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x8b, 0x48, 0x23, 0xf, 0xbf, 0x5d, 0xb4, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xa8, 0xe8, 0xc2, 0x58, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xac, 0xff, 0x51, 0x8, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x2, 0x66, 0x3b, 0x45, 0xb4, 0xf, 0x8d, 0xa7, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0, 0x66, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0x9c, 0x8b, 0x45, 0x9c, 0x8b, 0x70, 0x23, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x13, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0x98, 0xe8, 0x76, 0x58, 0xfe, 0xff, 0x8b, 0x4d, 0x9c, 0x89, 0xc2, 0x89, 0xc8, 0xff, 0x16, 0x66, 0x89, 0x45, 0xa2, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0x94, 0x8b, 0x45, 0x94, 0x8b, 0x48, 0x23, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x1b, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0x90, 0xe8, 0x49, 0x58, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0x94, 0xff, 0x51, 0x4, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x2, 0x66, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa4, 0x2b, 0x45, 0xa2, 0x8b, 0x55, 0xf8, 0x66, 0x1, 0x42, 0x21, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0x8c, 0x8b, 0x75, 0x8c, 0x8b, 0x76, 0x23, 0xf, 0xbf, 0x4d, 0xa4, 0xf, 0xbf, 0x5d, 0xa2, 0xf, 0xbf, 0x55, 0xa0, 0x8b, 0x45, 0x8c, 0xff, 0x56, 0xc, 0x8d, 0x55, 0xa0, 0x8d, 0x45, 0xb8, 0xe8, 0x21, 0xbb, 0, 0, 0xe9, 0x6, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x19, 0x48, 0xf, 0xbf, 0x55, 0xb0, 0x39, 0xc2, 0xf, 0x8d, 0x26, 0x1, 0, 0, 0x8b, 0x45, 0xb0, 0x40, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x2, 0x8b, 0x45, 0xb2, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x2, 0x66, 0x3b, 0x45, 0xb4, 0xf, 0x8d, 0x1, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0x88, 0x8b, 0x45, 0x88, 0x8b, 0x48, 0x23, 0xf, 0xbf, 0x5d, 0xb4, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0x84, 0xe8, 0xa1, 0x57, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0x88, 0xff, 0x51, 0x8, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x2, 0x66, 0x3b, 0x45, 0xb4, 0xf, 0x8d, 0xbf, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0, 0x66, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0x80, 0x8b, 0x45, 0x80, 0x8b, 0x70, 0x23, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x13, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8d, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0x52, 0x57, 0xfe, 0xff, 0x8b, 0x4d, 0x80, 0x89, 0xc2, 0x89, 0xc8, 0xff, 0x16, 0x66, 0x89, 0x45, 0xa2, 0x8b, 0x45, 0xf8, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x48, 0x23, 0x8b, 0x5d, 0xf8, 0x8b, 0x5b, 0x1b, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0x1c, 0x57, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0xff, 0x51, 0x4, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x2, 0x66, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa4, 0x2b, 0x45, 0xa2, 0x8b, 0x55, 0xf8, 0x66, 0x1, 0x42, 0x21, 0x8b, 0x45, 0xf8, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0xb5, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x76, 0x23, 0xf, 0xbf, 0x4d, 0xa4, 0xf, 0xbf, 0x5d, 0xa2, 0xf, 0xbf, 0x55, 0xa0, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x56, 0xc, 0x8d, 0x55, 0xa0, 0x8d, 0x45, 0xb8, 0xe8, 0xe8, 0xb9, 0, 0, 0xe9, 0xee, 0xfe, 0xff, 0xff, 0xe9, 0xbf, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xff, 0x40, 0x9, 0x8b, 0x45, 0xcc, 0xe8, 0xf1, 0x7d, 0xb, 0, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x83, 0xf8, 0xa, 0x7f, 0x7, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x21, 0x89, 0x45, 0xe8, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x1, 0xb9, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0xf5, 0xb8, 0, 0, 0x8b, 0x45, 0xe8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1009034f, 0x5)   pushd(0xa8);                          /* push dword 0xa8 */
    II(0x10090354, 0x5)   calld(sys_check_available_stack_size, 0xd59f9); /* call 0x10165d52 */
    II(0x10090359, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009035a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009035b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009035c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009035d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009035e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10090360, 0x6)   sub(esp, 0x90);                       /* sub esp, 0x90 */
    II(0x10090366, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10090369, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1009036c, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10090370, 0x5)   mov(edx, 0xa);                        /* mov edx, 0xa */
    II(0x10090375, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10090378, 0x5)   calld(0x1009c1fc, 0xbe7f);            /* call 0x1009c1fc */
    II(0x1009037d, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10090380, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10090384, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1009038b, 0x5)   calld(0x101482f4, 0xb7f64);           /* call 0x101482f4 */
    II(0x10090390, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10090393, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090396, 0x6)   mov(memw_a32(ds, eax + 0x21), 0);     /* mov word [eax+0x21], 0x0 */
    II(0x1009039c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009039f, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100903a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100903a5, 0x3)   mov(memd_a32(ds, eax + 0x1), edx);    /* mov [eax+0x1], edx */
    II(0x100903a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100903ab, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100903ad, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100903b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100903b3, 0x3)   mov(memd_a32(ds, eax + 0x5), edx);    /* mov [eax+0x5], edx */
    II(0x100903b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100903b9, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100903bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100903bf, 0x3)   mov(memd_a32(ds, eax + 0x9), edx);    /* mov [eax+0x9], edx */
    II(0x100903c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100903c5, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100903c7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100903ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100903cd, 0x3)   mov(memd_a32(ds, eax + 0xd), edx);    /* mov [eax+0xd], edx */
    II(0x100903d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100903d3, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100903d6, 0x3)   mov(esi, memd_a32(ss, ebp - 0x2c));   /* mov esi, [ebp-0x2c] */
    II(0x100903d9, 0x3)   mov(esi, memd_a32(ds, esi + 0x23));   /* mov esi, [esi+0x23] */
    II(0x100903dc, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100903df, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x13));   /* mov ebx, [ebx+0x13] */
    II(0x100903e2, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100903e5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100903e8, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100903eb, 0x5)   calld(0x10075e64, -0x1a58c);          /* call 0x10075e64 */
    II(0x100903f0, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x2c));   /* mov ecx, [ebp-0x2c] */
    II(0x100903f3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100903f5, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100903f7, 0x2)   calld_abs(memd_a32(ds, esi));         /* call dword near [esi] */
    II(0x100903f9, 0x4)   mov(memw_a32(ss, ebp - 0x4e), ax);    /* mov [ebp-0x4e], ax */
    II(0x100903fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090400, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10090403, 0x3)   mov(esi, memd_a32(ss, ebp - 0x24));   /* mov esi, [ebp-0x24] */
    II(0x10090406, 0x3)   mov(esi, memd_a32(ds, esi + 0x23));   /* mov esi, [esi+0x23] */
    II(0x10090409, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1009040c, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x1b));   /* mov ebx, [ebx+0x1b] */
    II(0x1009040f, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10090412, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090415, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10090418, 0x5)   calld(0x10075e64, -0x1a5b9);          /* call 0x10075e64 */
    II(0x1009041d, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x24));   /* mov ecx, [ebp-0x24] */
    II(0x10090420, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10090422, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x10090424, 0x3)   calld_abs(memd_a32(ds, esi + 0x4));   /* call dword near [esi+0x4] */
    II(0x10090427, 0x4)   mov(memw_a32(ss, ebp - 0x4c), ax);    /* mov [ebp-0x4c], ax */
    II(0x1009042b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009042e, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10090431, 0x4)   mov(memw_a32(ss, ebp - 0x50), ax);    /* mov [ebp-0x50], ax */
    II(0x10090435, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10090438, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4e));   /* sub eax, [ebp-0x4e] */
    II(0x1009043b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009043e, 0x4)   add(memw_a32(ds, edx + 0x21), ax);    /* add [edx+0x21], ax */
    II(0x10090442, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090445, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10090448, 0x3)   mov(esi, memd_a32(ss, ebp - 0x20));   /* mov esi, [ebp-0x20] */
    II(0x1009044b, 0x3)   mov(esi, memd_a32(ds, esi + 0x23));   /* mov esi, [esi+0x23] */
    II(0x1009044e, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4c)); /* movsx ecx, word [ebp-0x4c] */
    II(0x10090452, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4e)); /* movsx ebx, word [ebp-0x4e] */
    II(0x10090456, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090459, 0x3)   movsx(edx, memw_a32(ds, edx));        /* movsx edx, word [edx] */
    II(0x1009045c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1009045f, 0x3)   calld_abs(memd_a32(ds, esi + 0xc));   /* call dword near [esi+0xc] */
    II(0x10090462, 0x3)   lea(edx, ebp - 0x50);                 /* lea edx, [ebp-0x50] */
    II(0x10090465, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10090468, 0x5)   calld(0x1009c18c, 0xbd1f);            /* call 0x1009c18c */
l_0x1009046d:
    II(0x1009046d, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10090470, 0x5)   calld(my_3_get_count, -0x4ff5);       /* call 0x1008b480 */
    II(0x10090475, 0x1)   cwde();                               /* cwde */
    II(0x10090476, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10090478, 0x6)   jled(0x100907ae, 0x330);              /* jle dword 0x100907ae */
    II(0x1009047e, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10090481, 0x5)   calld(my_3_get_count, -0x5006);       /* call 0x1008b480 */
    II(0x10090486, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x10090489, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009048c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x10090490, 0x2)   jled(0x10090498, 0x6);                /* jle 0x10090498 */
    II(0x10090492, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10090495, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x10090498:
    II(0x10090498, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009049b, 0x1)   dec(eax);                             /* dec eax */
    II(0x1009049c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1009049f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100904a2, 0x5)   calld(0x1009c150, 0xbca9);            /* call 0x1009c150 */
    II(0x100904a7, 0x3)   lea(edi, ebp - 0x50);                 /* lea edi, [ebp-0x50] */
    II(0x100904aa, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x100904ac, 0x1)   movsd_a32();                          /* movsd */
    II(0x100904ad, 0x2)   movsw_a32();                          /* movsw */
    II(0x100904af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100904b2, 0x1)   dec(eax);                             /* dec eax */
    II(0x100904b3, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100904b6, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100904b9, 0x5)   calld(0x100cdb14, 0x3d656);           /* call 0x100cdb14 */
    II(0x100904be, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4e)); /* movsx edx, word [ebp-0x4e] */
    II(0x100904c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100904c5, 0x3)   cmp(edx, memd_a32(ds, eax + 0x5));    /* cmp edx, [eax+0x5] */
    II(0x100904c8, 0x2)   jged(0x100904d4, 0xa);                /* jge 0x100904d4 */
    II(0x100904ca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4e)); /* movsx eax, word [ebp-0x4e] */
    II(0x100904ce, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100904d1, 0x3)   mov(memd_a32(ds, edx + 0x5), eax);    /* mov [edx+0x5], eax */
l_0x100904d4:
    II(0x100904d4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x50)); /* movsx edx, word [ebp-0x50] */
    II(0x100904d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100904db, 0x3)   cmp(edx, memd_a32(ds, eax + 0x1));    /* cmp edx, [eax+0x1] */
    II(0x100904de, 0x2)   jged(0x100904ea, 0xa);                /* jge 0x100904ea */
    II(0x100904e0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x50)); /* movsx eax, word [ebp-0x50] */
    II(0x100904e4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100904e7, 0x3)   mov(memd_a32(ds, edx + 0x1), eax);    /* mov [edx+0x1], eax */
l_0x100904ea:
    II(0x100904ea, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x50)); /* movsx edx, word [ebp-0x50] */
    II(0x100904ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100904f1, 0x3)   cmp(edx, memd_a32(ds, eax + 0x9));    /* cmp edx, [eax+0x9] */
    II(0x100904f4, 0x2)   jld(0x10090500, 0xa);                 /* jl 0x10090500 */
    II(0x100904f6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x50)); /* movsx eax, word [ebp-0x50] */
    II(0x100904fa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100904fd, 0x3)   mov(memd_a32(ds, edx + 0x9), eax);    /* mov [edx+0x9], eax */
l_0x10090500:
    II(0x10090500, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4c)); /* movsx edx, word [ebp-0x4c] */
    II(0x10090504, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090507, 0x3)   cmp(edx, memd_a32(ds, eax + 0xd));    /* cmp edx, [eax+0xd] */
    II(0x1009050a, 0x2)   jled(0x10090516, 0xa);                /* jle 0x10090516 */
    II(0x1009050c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4c)); /* movsx eax, word [ebp-0x4c] */
    II(0x10090510, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10090513, 0x3)   mov(memd_a32(ds, edx + 0xd), eax);    /* mov [edx+0xd], eax */
l_0x10090516:
    II(0x10090516, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090519, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x1009051c, 0x2)   jzd(0x10090534, 0x16);                /* jz 0x10090534 */
    II(0x1009051e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4e)); /* movsx eax, word [ebp-0x4e] */
    II(0x10090522, 0x3)   lea(edx, eax - 0x1);                  /* lea edx, [eax-0x1] */
    II(0x10090525, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090528, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x1009052b, 0x5)   calld(0x10076e7c, -0x196b4);          /* call 0x10076e7c */
    II(0x10090530, 0x4)   mov(memw_a32(ss, ebp - 0x4e), ax);    /* mov [ebp-0x4e], ax */
l_0x10090534:
    II(0x10090534, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090537, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x1009053a, 0x2)   jzd(0x10090552, 0x16);                /* jz 0x10090552 */
    II(0x1009053c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4c)); /* movsx eax, word [ebp-0x4c] */
    II(0x10090540, 0x3)   lea(edx, eax + 0x1);                  /* lea edx, [eax+0x1] */
    II(0x10090543, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090546, 0x3)   mov(eax, memd_a32(ds, eax + 0x1d));   /* mov eax, [eax+0x1d] */
    II(0x10090549, 0x5)   calld(my_min, -0x6dca);               /* call 0x10089784 */
    II(0x1009054e, 0x4)   mov(memw_a32(ss, ebp - 0x4c), ax);    /* mov [ebp-0x4c], ax */
l_0x10090552:
    II(0x10090552, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x50)); /* movsx edx, word [ebp-0x50] */
    II(0x10090556, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090559, 0x3)   cmp(edx, memd_a32(ds, eax + 0x11));   /* cmp edx, [eax+0x11] */
    II(0x1009055c, 0x6)   jled(0x10090670, 0x10e);              /* jle dword 0x10090670 */
    II(0x10090562, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x10090565, 0x1)   dec(eax);                             /* dec eax */
    II(0x10090566, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090569, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x1009056c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4e));   /* mov eax, [ebp-0x4e] */
    II(0x1009056f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090572, 0x4)   mov(memw_a32(ds, edx + 0x2), ax);     /* mov [edx+0x2], ax */
l_0x10090576:
    II(0x10090576, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10090579, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x1009057d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4c));    /* cmp ax, [ebp-0x4c] */
    II(0x10090581, 0x6)   jged(0x10090670, 0xe9);               /* jge dword 0x10090670 */
    II(0x10090587, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009058a, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x1009058d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x10090590, 0x3)   mov(ecx, memd_a32(ds, eax + 0x23));   /* mov ecx, [eax+0x23] */
    II(0x10090593, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4c)); /* movsx ebx, word [ebp-0x4c] */
    II(0x10090597, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009059a, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x1009059d, 0x5)   calld(0x10075e64, -0x1a73e);          /* call 0x10075e64 */
    II(0x100905a2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100905a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100905a7, 0x3)   calld_abs(memd_a32(ds, ecx + 0x8));   /* call dword near [ecx+0x8] */
    II(0x100905aa, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100905ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100905af, 0x4)   mov(memw_a32(ds, eax + 0x2), dx);     /* mov [eax+0x2], dx */
    II(0x100905b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100905b6, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x100905ba, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4c));    /* cmp ax, [ebp-0x4c] */
    II(0x100905be, 0x6)   jged(0x1009066b, 0xa7);               /* jge dword 0x1009066b */
    II(0x100905c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100905c7, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100905ca, 0x4)   mov(memw_a32(ss, ebp - 0x60), ax);    /* mov [ebp-0x60], ax */
    II(0x100905ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100905d1, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
//    II(0x100905d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x100905d7, 0x3)   mov(esi, memd_a32(ds, eax + 0x23));   /* mov esi, [eax+0x23] */
//    II(0x100905da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100905dd, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
    II(0x100905e0, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100905e3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100905e6, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100905e9, 0x5)   calld(0x10075e64, -0x1a78a);          /* call 0x10075e64 */
    II(0x100905ee, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x64));   /* mov ecx, [ebp-0x64] */
    II(0x100905f1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100905f3, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100905f5, 0x2)   calld_abs(memd_a32(ds, esi));         /* call dword near [esi] */
    II(0x100905f7, 0x4)   mov(memw_a32(ss, ebp - 0x5e), ax);    /* mov [ebp-0x5e], ax */
    II(0x100905fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100905fe, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
//    II(0x10090601, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x10090604, 0x3)   mov(ecx, memd_a32(ds, eax + 0x23));   /* mov ecx, [eax+0x23] */
    II(0x10090607, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1009060a, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x1b));   /* mov ebx, [ebx+0x1b] */
    II(0x1009060d, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10090610, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090613, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x10090616, 0x5)   calld(0x10075e64, -0x1a7b7);          /* call 0x10075e64 */
    II(0x1009061b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009061d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x10090620, 0x3)   calld_abs(memd_a32(ds, ecx + 0x4));   /* call dword near [ecx+0x4] */
    II(0x10090623, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090626, 0x4)   mov(memw_a32(ds, edx + 0x2), ax);     /* mov [edx+0x2], ax */
    II(0x1009062a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009062d, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x10090631, 0x4)   mov(memw_a32(ss, ebp - 0x5c), ax);    /* mov [ebp-0x5c], ax */
    II(0x10090635, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x10090638, 0x3)   sub(eax, memd_a32(ss, ebp - 0x5e));   /* sub eax, [ebp-0x5e] */
    II(0x1009063b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009063e, 0x4)   add(memw_a32(ds, edx + 0x21), ax);    /* add [edx+0x21], ax */
    II(0x10090642, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090645, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x10090648, 0x3)   mov(esi, memd_a32(ss, ebp - 0x74));   /* mov esi, [ebp-0x74] */
    II(0x1009064b, 0x3)   mov(esi, memd_a32(ds, esi + 0x23));   /* mov esi, [esi+0x23] */
    II(0x1009064e, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x5c)); /* movsx ecx, word [ebp-0x5c] */
    II(0x10090652, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x5e)); /* movsx ebx, word [ebp-0x5e] */
    II(0x10090656, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x1009065a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x1009065d, 0x3)   calld_abs(memd_a32(ds, esi + 0xc));   /* call dword near [esi+0xc] */
    II(0x10090660, 0x3)   lea(edx, ebp - 0x60);                 /* lea edx, [ebp-0x60] */
    II(0x10090663, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10090666, 0x5)   calld(0x1009c18c, 0xbb21);            /* call 0x1009c18c */
l_0x1009066b:
    II(0x1009066b, 0x5)   jmpd(0x10090576, -0xfa);              /* jmp 0x10090576 */
l_0x10090670:
    II(0x10090670, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090673, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x10090676, 0x1)   dec(eax);                             /* dec eax */
    II(0x10090677, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x50)); /* movsx edx, word [ebp-0x50] */
    II(0x1009067b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1009067d, 0x6)   jged(0x100907a9, 0x126);              /* jge dword 0x100907a9 */
    II(0x10090683, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x10090686, 0x1)   inc(eax);                             /* inc eax */
    II(0x10090687, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009068a, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x1009068d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4e));   /* mov eax, [ebp-0x4e] */
    II(0x10090690, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090693, 0x4)   mov(memw_a32(ds, edx + 0x2), ax);     /* mov [edx+0x2], ax */
l_0x10090697:
    II(0x10090697, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009069a, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x1009069e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4c));    /* cmp ax, [ebp-0x4c] */
    II(0x100906a2, 0x6)   jged(0x100907a9, 0x101);              /* jge dword 0x100907a9 */
    II(0x100906a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100906ab, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
//    II(0x100906ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x100906b1, 0x3)   mov(ecx, memd_a32(ds, eax + 0x23));   /* mov ecx, [eax+0x23] */
    II(0x100906b4, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4c)); /* movsx ebx, word [ebp-0x4c] */
    II(0x100906b8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100906bb, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x100906be, 0x5)   calld(0x10075e64, -0x1a85f);          /* call 0x10075e64 */
    II(0x100906c3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100906c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x100906c8, 0x3)   calld_abs(memd_a32(ds, ecx + 0x8));   /* call dword near [ecx+0x8] */
    II(0x100906cb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100906cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100906d0, 0x4)   mov(memw_a32(ds, eax + 0x2), dx);     /* mov [eax+0x2], dx */
    II(0x100906d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100906d7, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x100906db, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4c));    /* cmp ax, [ebp-0x4c] */
    II(0x100906df, 0x6)   jged(0x100907a4, 0xbf);               /* jge dword 0x100907a4 */
    II(0x100906e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100906e8, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100906eb, 0x4)   mov(memw_a32(ss, ebp - 0x60), ax);    /* mov [ebp-0x60], ax */
    II(0x100906ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100906f2, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
//    II(0x100906f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x100906f8, 0x3)   mov(esi, memd_a32(ds, eax + 0x23));   /* mov esi, [eax+0x23] */
//    II(0x100906fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100906fe, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
    II(0x10090701, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10090704, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090707, 0x6)   lea(eax, ebp - 0x84);                 /* lea eax, [ebp+0xffffff7c] */
    II(0x1009070d, 0x5)   calld(0x10075e64, -0x1a8ae);          /* call 0x10075e64 */
    II(0x10090712, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x80));   /* mov ecx, [ebp-0x80] */
    II(0x10090715, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10090717, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x10090719, 0x2)   calld_abs(memd_a32(ds, esi));         /* call dword near [esi] */
    II(0x1009071b, 0x4)   mov(memw_a32(ss, ebp - 0x5e), ax);    /* mov [ebp-0x5e], ax */
    II(0x1009071f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090722, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
//    II(0x10090728, 0x6)   mov(eax, memd_a32(ss, ebp - 0x88));   /* mov eax, [ebp+0xffffff78] */
    II(0x1009072e, 0x3)   mov(ecx, memd_a32(ds, eax + 0x23));   /* mov ecx, [eax+0x23] */
    II(0x10090731, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10090734, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x1b));   /* mov ebx, [ebx+0x1b] */
    II(0x10090737, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1009073a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009073d, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x10090743, 0x5)   calld(0x10075e64, -0x1a8e4);          /* call 0x10075e64 */
    II(0x10090748, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009074a, 0x6)   mov(eax, memd_a32(ss, ebp - 0x88));   /* mov eax, [ebp+0xffffff78] */
    II(0x10090750, 0x3)   calld_abs(memd_a32(ds, ecx + 0x4));   /* call dword near [ecx+0x4] */
    II(0x10090753, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10090756, 0x4)   mov(memw_a32(ds, edx + 0x2), ax);     /* mov [edx+0x2], ax */
    II(0x1009075a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009075d, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x10090761, 0x4)   mov(memw_a32(ss, ebp - 0x5c), ax);    /* mov [ebp-0x5c], ax */
    II(0x10090765, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x10090768, 0x3)   sub(eax, memd_a32(ss, ebp - 0x5e));   /* sub eax, [ebp-0x5e] */
    II(0x1009076b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1009076e, 0x4)   add(memw_a32(ds, edx + 0x21), ax);    /* add [edx+0x21], ax */
    II(0x10090772, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10090775, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
    II(0x1009077b, 0x6)   mov(esi, memd_a32(ss, ebp - 0x90));   /* mov esi, [ebp+0xffffff70] */
    II(0x10090781, 0x3)   mov(esi, memd_a32(ds, esi + 0x23));   /* mov esi, [esi+0x23] */
    II(0x10090784, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x5c)); /* movsx ecx, word [ebp-0x5c] */
    II(0x10090788, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x5e)); /* movsx ebx, word [ebp-0x5e] */
    II(0x1009078c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x10090790, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x10090796, 0x3)   calld_abs(memd_a32(ds, esi + 0xc));   /* call dword near [esi+0xc] */
    II(0x10090799, 0x3)   lea(edx, ebp - 0x60);                 /* lea edx, [ebp-0x60] */
    II(0x1009079c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x1009079f, 0x5)   calld(0x1009c18c, 0xb9e8);            /* call 0x1009c18c */
l_0x100907a4:
    II(0x100907a4, 0x5)   jmpd(0x10090697, -0x112);             /* jmp 0x10090697 */
l_0x100907a9:
    II(0x100907a9, 0x5)   jmpd(0x1009046d, -0x341);             /* jmp 0x1009046d */
l_0x100907ae:
    II(0x100907ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100907b1, 0x3)   inc(memd_a32(ds, eax + 0x9));         /* inc dword [eax+0x9] */
    II(0x100907b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100907b7, 0x5)   calld(0x101485ad, 0xb7df1);           /* call 0x101485ad */
    II(0x100907bc, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100907bf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100907c3, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100907c6, 0x2)   jgd(0x100907cf, 0x7);                 /* jg 0x100907cf */
    II(0x100907c8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100907cc, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
l_0x100907cf:
    II(0x100907cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100907d2, 0x4)   mov(ax, memw_a32(ds, eax + 0x21));    /* mov ax, [eax+0x21] */
    II(0x100907d6, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100907d9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100907db, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100907de, 0x5)   calld(0x1009c0e4, 0xb901);            /* call 0x1009c0e4 */
    II(0x100907e3, 0x2)   jmpd(0x100907ef, 0xa);                /* jmp 0x100907ef */
//  II(0x100907e5, 0xa)   /* Недостижимый код. */
l_0x100907ef:
    II(0x100907ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100907f2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100907f4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100907f5, 0x1)   popd(edi);                            /* pop edi */
    II(0x100907f6, 0x1)   popd(esi);                            /* pop esi */
    II(0x100907f7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100907f8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100907f9, 0x1)   retd();                               /* ret */
FUNC_END

