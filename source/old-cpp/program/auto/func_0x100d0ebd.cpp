FUNC_BEGIN(0x100d0ebd, 0xa1991a9c487a2d55, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x8b, 0x4e, 0x9, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xe8, 0xf0, 0x58, 0, 0, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x89, 0x42, 0x31, 0xe8, 0xed, 0xa4, 0xfb, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x3a, 0xe8, 0xd7, 0xa2, 0xfb, 0xff, 0x83, 0xe8, 0x3a, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x13, 0x88, 0x5c, 0x1b, 0x10, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x42, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x46, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x4a, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x4e, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x52, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x56, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x5a, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x6a, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x6e, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x72, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x76, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x7a, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x7e, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x82, 0, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc6, 0x80, 0x86, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xdc, 0xb9, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x38, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x98, 0x1, 0xc0, 0x8b, 0x90, 0x76, 0x7b, 0x1b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x31, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x39, 0xd0, 0x74, 0x13, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0x78, 0x7b, 0x1b, 0x10, 0x40, 0x1, 0x45, 0xec, 0xeb, 0xcb, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x98, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0x78, 0x7b, 0x1b, 0x10, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xf0, 0x7d, 0x44, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xe8, 0x1, 0xd0, 0x1, 0xc0, 0x8b, 0x80, 0x76, 0x7b, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xe9, 0xcd, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x24, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xe8, 0x1, 0xd0, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0x78, 0x7b, 0x1b, 0x10, 0x89, 0x45, 0xdc, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x3a, 0xe8, 0x32, 0xa2, 0xfb, 0xff, 0xeb, 0xad, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0x5a, 0x5a, 0, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x5, 0xfd, 0x4, 0, 0xe8, 0x7f, 0xeb, 0x2, 0, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf4, 0xe8, 0x6f, 0x59, 0, 0, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100d0ebd, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100d0ec2, 0x5)   calld(sys_check_available_stack_size, 0x94e8b); /* call 0x10165d52 */
    II(0x100d0ec7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d0ec8, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d0ec9, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d0eca, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d0ecb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d0ecd, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100d0ed3, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d0ed6, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100d0ed9, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100d0edc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100d0ee0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0ee3, 0x5)   calld(0x100d67d8, 0x58f0);            /* call 0x100d67d8 */
    II(0x100d0ee8, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d0eeb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100d0eee, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d0ef1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0ef4, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100d0ef7, 0x3)   mov(memd_a32(ds, edx + 0x31), eax);   /* mov [edx+0x31], eax */
    II(0x100d0efa, 0x5)   calld(0x1008b3ec, -0x45b13);          /* call 0x1008b3ec */
    II(0x100d0eff, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100d0f02, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f05, 0x3)   add(eax, 0x3a);                       /* add eax, 0x3a */
    II(0x100d0f08, 0x5)   calld(0x1008b1e4, -0x45d29);          /* call 0x1008b1e4 */
    II(0x100d0f0d, 0x3)   sub(eax, 0x3a);                       /* sub eax, 0x3a */
    II(0x100d0f10, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d0f13, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100d0f16, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100d0f19, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f1c, 0x7)   mov(memd_a32(ds, eax + 0x13), 0x101b5c88); /* mov dword [eax+0x13], 0x101b5c88 */
    II(0x100d0f23, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f26, 0x7)   mov(memd_a32(ds, eax + 0x42), 0);     /* mov dword [eax+0x42], 0x0 */
    II(0x100d0f2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f30, 0x7)   mov(memd_a32(ds, eax + 0x46), 0);     /* mov dword [eax+0x46], 0x0 */
    II(0x100d0f37, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f3a, 0x7)   mov(memd_a32(ds, eax + 0x4a), 0);     /* mov dword [eax+0x4a], 0x0 */
    II(0x100d0f41, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f44, 0x7)   mov(memd_a32(ds, eax + 0x4e), 0);     /* mov dword [eax+0x4e], 0x0 */
    II(0x100d0f4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f4e, 0x7)   mov(memd_a32(ds, eax + 0x52), 0);     /* mov dword [eax+0x52], 0x0 */
    II(0x100d0f55, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f58, 0x7)   mov(memd_a32(ds, eax + 0x56), 0);     /* mov dword [eax+0x56], 0x0 */
    II(0x100d0f5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f62, 0x7)   mov(memd_a32(ds, eax + 0x5a), 0);     /* mov dword [eax+0x5a], 0x0 */
    II(0x100d0f69, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f6c, 0x7)   mov(memd_a32(ds, eax + 0x6a), 0);     /* mov dword [eax+0x6a], 0x0 */
    II(0x100d0f73, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f76, 0x7)   mov(memd_a32(ds, eax + 0x6e), 0);     /* mov dword [eax+0x6e], 0x0 */
    II(0x100d0f7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f80, 0x7)   mov(memd_a32(ds, eax + 0x72), 0);     /* mov dword [eax+0x72], 0x0 */
    II(0x100d0f87, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f8a, 0x7)   mov(memd_a32(ds, eax + 0x76), 0);     /* mov dword [eax+0x76], 0x0 */
    II(0x100d0f91, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f94, 0x7)   mov(memd_a32(ds, eax + 0x7a), 0);     /* mov dword [eax+0x7a], 0x0 */
    II(0x100d0f9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0f9e, 0x7)   mov(memd_a32(ds, eax + 0x7e), 0);     /* mov dword [eax+0x7e], 0x0 */
    II(0x100d0fa5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0fa8, 0xa)   mov(memd_a32(ds, eax + 0x82), 0);     /* mov dword [eax+0x82], 0x0 */
    II(0x100d0fb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0fb5, 0x7)   mov(memb_a32(ds, eax + 0x86), 0);     /* mov byte [eax+0x86], 0x0 */
    II(0x100d0fbc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0fbf, 0x5)   calld(0x1009c9a0, -0x34624);          /* call 0x1009c9a0 */
    II(0x100d0fc4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d0fc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0fc9, 0x4)   mov(memw_a32(ds, eax + 0x38), dx);    /* mov [eax+0x38], dx */
    II(0x100d0fcd, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x100d0fd4:
    II(0x100d0fd4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d0fd7, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
    II(0x100d0fda, 0x1)   cwde();                               /* cwde */
    II(0x100d0fdb, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d0fdd, 0x6)   mov(edx, memd_a32(ds, eax + 0x101b7b76)); /* mov edx, [eax+0x101b7b76] */
    II(0x100d0fe3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d0fe6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d0fe9, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100d0fec, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d0fef, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0ff2, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100d0ff4, 0x2)   jzd(0x100d1009, 0x13);                /* jz 0x100d1009 */
    II(0x100d0ff6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100d0ffa, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d0ffc, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b7b78)); /* mov ax, [eax+0x101b7b78] */
    II(0x100d1003, 0x1)   inc(eax);                             /* inc eax */
    II(0x100d1004, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
    II(0x100d1007, 0x2)   jmpd(0x100d0fd4, -0x35);              /* jmp 0x100d0fd4 */
l_0x100d1009:
    II(0x100d1009, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d100c, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
    II(0x100d100f, 0x1)   cwde();                               /* cwde */
    II(0x100d1010, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d1012, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b7b78)); /* mov ax, [eax+0x101b7b78] */
    II(0x100d1019, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d101c, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100d1023, 0x2)   jmpd(0x100d102b, 0x6);                /* jmp 0x100d102b */
l_0x100d1025:
    II(0x100d1025, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d1028, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100d102b:
    II(0x100d102b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d102e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100d1032, 0x2)   jged(0x100d1078, 0x44);               /* jge 0x100d1078 */
    II(0x100d1034, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100d1038, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100d103c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d103e, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d1040, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b7b76)); /* mov eax, [eax+0x101b7b76] */
    II(0x100d1046, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d1049, 0x5)   calld(0x100cde37, -0x3217);           /* call 0x100cde37 */
    II(0x100d104e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100d1050, 0x2)   jzd(0x100d1076, 0x24);                /* jz 0x100d1076 */
    II(0x100d1052, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100d1056, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100d105a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d105c, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d105e, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b7b78)); /* mov ax, [eax+0x101b7b78] */
    II(0x100d1065, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100d1068, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100d106b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d106e, 0x3)   add(eax, 0x3a);                       /* add eax, 0x3a */
    II(0x100d1071, 0x5)   calld(0x1008b2a8, -0x45dce);          /* call 0x1008b2a8 */
l_0x100d1076:
    II(0x100d1076, 0x2)   jmpd(0x100d1025, -0x53);              /* jmp 0x100d1025 */
l_0x100d1078:
    II(0x100d1078, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d107d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d1080, 0x5)   calld(0x100d6adf, 0x5a5a);            /* call 0x100d6adf */
    II(0x100d1085, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100d108a, 0x5)   calld(0x10120d94, 0x4fd05);           /* call 0x10120d94 */
    II(0x100d108f, 0x5)   calld(0x100ffc13, 0x2eb7f);           /* call 0x100ffc13 */
    II(0x100d1094, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100d1097, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d109a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d109d, 0x5)   calld(0x100d6a11, 0x596f);            /* call 0x100d6a11 */
    II(0x100d10a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d10a5, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100d10a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100d10ab, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d10ad, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d10ae, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d10af, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d10b0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d10b1, 0x1)   retd();                               /* ret */
FUNC_END

