FUNC_BEGIN(0x100ebb28, 0xc9a702d51162a279, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x20, 0xa2, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x89, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0xe8, 0xeb, 0xa7, 0xf8, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x61, 0xa9, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x97, 0xb0, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x6, 0xf2, 0x4, 0, 0x84, 0xc0, 0xf, 0x84, 0x5f, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x25, 0xa8, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0x14, 0x8d, 0x45, 0xf0, 0xe8, 0x10, 0xa8, 0xf8, 0xff, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0xfa, 0xa7, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x47, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0xe9, 0xa7, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x2, 0xeb, 0x10, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x9e, 0xa3, 0xf8, 0xff, 0xeb, 0x1c, 0xeb, 0x87, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x8c, 0xa3, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x80, 0xa3, 0xf8, 0xff, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ebb28, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100ebb2d, 0x5)   calld(sys_check_available_stack_size, 0x7a220); /* call 0x10165d52 */
    II(0x100ebb32, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ebb33, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ebb34, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ebb35, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ebb36, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ebb37, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ebb39, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100ebb3f, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ebb42, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100ebb45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ebb48, 0x5)   calld(0x10076338, -0x75815);          /* call 0x10076338 */
    II(0x100ebb4d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ebb4f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebb52, 0x5)   calld(0x100764b8, -0x7569f);          /* call 0x100764b8 */
    II(0x100ebb57, 0x2)   jmpd(0x100ebb61, 0x8);                /* jmp 0x100ebb61 */
l_0x100ebb59:
    II(0x100ebb59, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebb5c, 0x5)   calld(0x10076bf8, -0x74f69);          /* call 0x10076bf8 */
l_0x100ebb61:
    II(0x100ebb61, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebb63, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebb66, 0x5)   calld(0x1013ad71, 0x4f206);           /* call 0x1013ad71 */
    II(0x100ebb6b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebb6d, 0x6)   jzd(0x100ebbd2, 0x5f);                /* jz dword 0x100ebbd2 */
    II(0x100ebb73, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebb76, 0x5)   calld(0x100763a0, -0x757db);          /* call 0x100763a0 */
    II(0x100ebb7b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebb7d, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ebb80, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ebb84, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ebb86, 0x2)   jnzd(0x100ebb9c, 0x14);               /* jnz 0x100ebb9c */
    II(0x100ebb88, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebb8b, 0x5)   calld(0x100763a0, -0x757f0);          /* call 0x100763a0 */
    II(0x100ebb90, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x100ebb93, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ebb98, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ebb9a, 0x2)   jgd(0x100ebb9e, 0x2);                 /* jg 0x100ebb9e */
l_0x100ebb9c:
    II(0x100ebb9c, 0x2)   jmpd(0x100ebbad, 0xf);                /* jmp 0x100ebbad */
l_0x100ebb9e:
    II(0x100ebb9e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebba1, 0x5)   calld(0x100763a0, -0x75806);          /* call 0x100763a0 */
    II(0x100ebba6, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x47);   /* cmp word [eax+0x8], 0x47 */
    II(0x100ebbab, 0x2)   jnzd(0x100ebbaf, 0x2);                /* jnz 0x100ebbaf */
l_0x100ebbad:
    II(0x100ebbad, 0x2)   jmpd(0x100ebbbe, 0xf);                /* jmp 0x100ebbbe */
l_0x100ebbaf:
    II(0x100ebbaf, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebbb2, 0x5)   calld(0x100763a0, -0x75817);          /* call 0x100763a0 */
    II(0x100ebbb7, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100ebbbc, 0x2)   jnzd(0x100ebbc0, 0x2);                /* jnz 0x100ebbc0 */
l_0x100ebbbe:
    II(0x100ebbbe, 0x2)   jmpd(0x100ebbd0, 0x10);               /* jmp 0x100ebbd0 */
l_0x100ebbc0:
    II(0x100ebbc0, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100ebbc4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebbc6, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebbc9, 0x5)   calld(0x10075f6c, -0x75c62);          /* call 0x10075f6c */
    II(0x100ebbce, 0x2)   jmpd(0x100ebbec, 0x1c);               /* jmp 0x100ebbec */
l_0x100ebbd0:
    II(0x100ebbd0, 0x2)   jmpd(0x100ebb59, -0x79);              /* jmp 0x100ebb59 */
l_0x100ebbd2:
    II(0x100ebbd2, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100ebbd6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebbd8, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ebbdb, 0x5)   calld(0x10075f6c, -0x75c74);          /* call 0x10075f6c */
    II(0x100ebbe0, 0x2)   jmpd(0x100ebbec, 0xa);                /* jmp 0x100ebbec */
//  II(0x100ebbe2, 0xa)   /* Недостижимый код. */
l_0x100ebbec:
    II(0x100ebbec, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100ebbef, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ebbf1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ebbf2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ebbf3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ebbf4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ebbf5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ebbf6, 0x1)   retd();                               /* ret */
FUNC_END

