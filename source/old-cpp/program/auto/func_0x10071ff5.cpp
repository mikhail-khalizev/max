FUNC_BEGIN(0x10071ff5, 0x91456ee935336cae, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x53, 0x3d, 0xf, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf8, 0xeb, 0x28, 0xc7, 0x45, 0xf4, 0xfd, 0xff, 0xff, 0xff, 0xeb, 0x46, 0xc7, 0x45, 0xf4, 0x1, 0, 0, 0, 0xeb, 0x3d, 0xeb, 0x34, 0x18, 0x20, 0x7, 0x10, 0x21, 0x20, 0x7, 0x10, 0x21, 0x20, 0x7, 0x10, 0x2a, 0x20, 0x7, 0x10, 0x21, 0x20, 0x7, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xe8, 0x1c, 0x89, 0x45, 0xf0, 0x66, 0x83, 0x7d, 0xf0, 0x4, 0x77, 0xda, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x2c, 0x20, 0x7, 0x10, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10071ff5, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10071ffa, 0x5)   calld(sys_check_available_stack_size, 0xf3d53); /* call 0x10165d52 */
    II(0x10071fff, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10072000, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10072001, 0x1)   pushd(edx);                           /* push edx */
    II(0x10072002, 0x1)   pushd(esi);                           /* push esi */
    II(0x10072003, 0x1)   pushd(edi);                           /* push edi */
    II(0x10072004, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10072005, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10072007, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1007200d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10072010, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10072013, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10072016, 0x2)   jmpd(0x10072040, 0x28);               /* jmp 0x10072040 */
l_0x10072018:
    II(0x10072018, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xfffffffd); /* mov dword [ebp-0xc], 0xfffffffd */
    II(0x1007201f, 0x2)   jmpd(0x10072067, 0x46);               /* jmp 0x10072067 */
l_0x10072021:
    II(0x10072021, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x1);    /* mov dword [ebp-0xc], 0x1 */
    II(0x10072028, 0x2)   jmpd(0x10072067, 0x3d);               /* jmp 0x10072067 */
l_0x1007202a:
    II(0x1007202a, 0x2)   jmpd(0x10072060, 0x34);               /* jmp 0x10072060 */
//    II(0x1007202c, 0x14)  /* Служебная область с абсолютными адресами переходов. {0x10072018, 0x10072021, 0x10072021, 0x1007202a, 0x10072021}. */
l_0x10072040:
    II(0x10072040, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10072043, 0x3)   sub(eax, 0x1c);                       /* sub eax, 0x1c */
    II(0x10072046, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10072049, 0x5)   cmp(memw_a32(ss, ebp - 0x10), 0x4);   /* cmp word [ebp-0x10], 0x4 */
    II(0x1007204e, 0x2)   jad(0x1007202a, -0x26);               /* ja 0x1007202a */
    II(0x10072050, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10072052, 0x4)   mov(ax, memw_a32(ss, ebp - 0x10));    /* mov ax, [ebp-0x10] */
    II(0x10072056, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10072059, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x1007202c), (0x10072018)(0x10072021)(0x1007202a)); /* jmp dword near [cs:eax+0x1007202c] */
l_0x10072060:
    II(0x10072060, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
l_0x10072067:
    II(0x10072067, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007206a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007206c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007206d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007206e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007206f, 0x1)   popd(edx);                            /* pop edx */
    II(0x10072070, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10072071, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10072072, 0x1)   retd();                               /* ret */
FUNC_END

