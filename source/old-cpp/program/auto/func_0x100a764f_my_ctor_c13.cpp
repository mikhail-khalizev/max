FUNC_BEGIN(my_ctor_c13, 0x6beebfd8e5fc2e4f, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xf9, 0xe6, 0xb, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x31, 0xc9, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xe8, 0x53, 0xb0, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xf0, 0xe8, 0x48, 0x33, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x14, 0xe8, 0xd2, 0x32, 0, 0, 0x83, 0xe8, 0x14, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xec, 0xe8, 0x55, 0x31, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x1e, 0xe8, 0xf3, 0x30, 0, 0, 0x83, 0xe8, 0x1e, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe8, 0xe8, 0x5e, 0x34, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x2e, 0xe8, 0xfc, 0x33, 0, 0, 0x83, 0xe8, 0x2e, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe4, 0xe8, 0x3f, 0x34, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x3e, 0xe8, 0xdd, 0x33, 0, 0, 0x83, 0xe8, 0x3e, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x4e, 0xe8, 0xe2, 0xef, 0xfc, 0xff, 0x83, 0xe8, 0x4e, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x2, 0x94, 0x4d, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x89, 0x42, 0x52, 0x8b, 0x45, 0xf4, 0xc6, 0x40, 0x13, 0, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100a764f, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100a7654, 0x5)   calld(sys_check_available_stack_size, 0xbe6f9); /* call 0x10165d52 */
    II(0x100a7659, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a765a, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a765b, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a765c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a765d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a765f, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100a7665, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a7668, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100a766b, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100a766e, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100a7670, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a7672, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100a7676, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a7679, 0x5)   calld(0x100a26d1, -0x4fad);           /* call 0x100a26d1 */
    II(0x100a767e, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a7681, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a7684, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a7687, 0x5)   calld(0x100aa9d4, 0x3348);            /* call 0x100aa9d4 */
    II(0x100a768c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a768f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a7692, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a7695, 0x5)   calld(0x100aa96c, 0x32d2);            /* call 0x100aa96c */
    II(0x100a769a, 0x3)   sub(eax, 0x14);                       /* sub eax, 0x14 */
    II(0x100a769d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a76a0, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a76a3, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100a76a6, 0x5)   calld(0x100aa800, 0x3155);            /* call 0x100aa800 */
    II(0x100a76ab, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a76ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a76b1, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a76b4, 0x5)   calld(0x100aa7ac, 0x30f3);            /* call 0x100aa7ac */
    II(0x100a76b9, 0x3)   sub(eax, 0x1e);                       /* sub eax, 0x1e */
    II(0x100a76bc, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a76bf, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a76c2, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100a76c5, 0x5)   calld(0x100aab28, 0x345e);            /* call 0x100aab28 */
    II(0x100a76ca, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a76cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a76d0, 0x3)   add(eax, 0x2e);                       /* add eax, 0x2e */
    II(0x100a76d3, 0x5)   calld(0x100aaad4, 0x33fc);            /* call 0x100aaad4 */
    II(0x100a76d8, 0x3)   sub(eax, 0x2e);                       /* sub eax, 0x2e */
    II(0x100a76db, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a76de, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a76e1, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100a76e4, 0x5)   calld(0x100aab28, 0x343f);            /* call 0x100aab28 */
    II(0x100a76e9, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a76ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a76ef, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100a76f2, 0x5)   calld(0x100aaad4, 0x33dd);            /* call 0x100aaad4 */
    II(0x100a76f7, 0x3)   sub(eax, 0x3e);                       /* sub eax, 0x3e */
    II(0x100a76fa, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a76fd, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a7700, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100a7703, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a7706, 0x3)   add(eax, 0x4e);                       /* add eax, 0x4e */
    II(0x100a7709, 0x5)   calld(my_ctor_0x101b38f8, -0x3101e);  /* call 0x100766f0 */
    II(0x100a770e, 0x3)   sub(eax, 0x4e);                       /* sub eax, 0x4e */
    II(0x100a7711, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a7714, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a7717, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100a771a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a771d, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b4d94); /* mov dword [eax+0x2], 0x101b4d94 */
    II(0x100a7724, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a7727, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100a772a, 0x3)   mov(memd_a32(ds, edx + 0x52), eax);   /* mov [edx+0x52], eax */
    II(0x100a772d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a7730, 0x4)   mov(memb_a32(ds, eax + 0x13), 0);     /* mov byte [eax+0x13], 0x0 */
    II(0x100a7734, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a7737, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100a773a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100a773d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a773f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a7740, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a7741, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a7742, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a7743, 0x1)   retd();                               /* ret */
FUNC_END

