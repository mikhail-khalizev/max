FUNC_BEGIN(0x10122911, 0x8274b79554ce6bc3, 0x20, ({0x68, 0x8c, 0, 0, 0, 0xe8, 0x37, 0x34, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x60, 0, 0, 0, 0x80, 0x4d, 0xfc, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0xb3, 0xf1, 0x1, 0, 0x89, 0x45, 0xf4, 0x80, 0x65, 0xfc, 0xfe, 0xe8, 0x6f, 0x42, 0xfe, 0xff, 0x89, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x14, 0x1b, 0xc2, 0xc1, 0xf8, 0x14, 0x50, 0xb8, 0xa8, 0x7e, 0x1a, 0x10, 0x50, 0xb8, 0x2c, 0x1, 0, 0, 0x50, 0x8d, 0x45, 0xf0, 0x50, 0xe8, 0xd1, 0xf6, 0x1, 0, 0x83, 0xc4, 0x10, 0x80, 0x4d, 0xfc, 0x1, 0x31, 0xdb, 0x8d, 0x45, 0xf0, 0xe8, 0x51, 0x6e, 0xf6, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa0, 0xe8, 0x21, 0x38, 0xff, 0xff, 0x89, 0x45, 0xf8, 0x80, 0x65, 0xfc, 0xfe, 0x8d, 0x45, 0xa0, 0xe8, 0x89, 0x40, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa0, 0xe8, 0x9c, 0x3b, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x86, 0xf1, 0x1, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10122911, 0x5)   pushd(0x8c);                          /* push dword 0x8c */
    II(0x10122916, 0x5)   calld(sys_check_available_stack_size, 0x43437); /* call 0x10165d52 */
    II(0x1012291b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012291c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012291d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1012291e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012291f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10122920, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10122921, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10122923, 0x6)   sub(esp, 0x60);                       /* sub esp, 0x60 */
    II(0x10122929, 0x4)   or_(memb_a32(ss, ebp - 0x4), 0x1);    /* or byte [ebp-0x4], 0x1 */
    II(0x1012292d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10122930, 0x5)   calld(my_string_ctor, 0x1f1b3);       /* call 0x10141ae8 */
    II(0x10122935, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10122938, 0x4)   and_(memb_a32(ss, ebp - 0x4), -0x2 /* 0xfe */); /* and byte [ebp-0x4], 0xfe */
    II(0x1012293c, 0x5)   calld(0x10106bb0, -0x1bd91);          /* call 0x10106bb0 */
    II(0x10122941, 0x2)   mov(edx, eax);                        /* mov edx, eax */
//    II(0x10122943, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10122945, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10122948, 0x3)   shl(edx, 0x14);                       /* shl edx, 0x14 */
    II(0x1012294b, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x1012294d, 0x3)   sar(eax, 0x14);                       /* sar eax, 0x14 */
    II(0x10122950, 0x1)   pushd(eax);                           /* push eax */
    II(0x10122951, 0x5)   mov(eax, 0x101a7ea8);                 /* mov eax, 0x101a7ea8 */ /* "Warning: You have only %iMB XMS.  Enabling enhanced graphics will likely result in the game crashing." */
    II(0x10122956, 0x1)   pushd(eax);                           /* push eax */
    II(0x10122957, 0x5)   mov(eax, 0x12c);                      /* mov eax, 0x12c */
    II(0x1012295c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012295d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10122960, 0x1)   pushd(eax);                           /* push eax */
    II(0x10122961, 0x5)   calld(0x10142037, 0x1f6d1);           /* call 0x10142037 */
    II(0x10122966, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x10122969, 0x4)   or_(memb_a32(ss, ebp - 0x4), 0x1);    /* or byte [ebp-0x4], 0x1 */
    II(0x1012296d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1012296f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10122972, 0x5)   calld(my_strobj_c_str_v2, -0x991af);  /* call 0x100897c8 */
    II(0x10122977, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10122979, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x1012297c, 0x5)   calld(0x101161a2, -0xc7df);           /* call 0x101161a2 */
    II(0x10122981, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10122984, 0x4)   and_(memb_a32(ss, ebp - 0x4), -0x2 /* 0xfe */); /* and byte [ebp-0x4], 0xfe */
    II(0x10122988, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x1012298b, 0x5)   calld(0x10116a19, -0xbf77);           /* call 0x10116a19 */
    II(0x10122990, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10122992, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x10122995, 0x5)   calld(0x10116536, -0xc464);           /* call 0x10116536 */
    II(0x1012299a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012299c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1012299f, 0x5)   calld(my_string_dtor, 0x1f186);       /* call 0x10141b2a */
    II(0x101229a4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101229a6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101229a7, 0x1)   popd(edi);                            /* pop edi */
    II(0x101229a8, 0x1)   popd(esi);                            /* pop esi */
    II(0x101229a9, 0x1)   popd(edx);                            /* pop edx */
    II(0x101229aa, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101229ab, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101229ac, 0x1)   retd();                               /* ret */
FUNC_END

