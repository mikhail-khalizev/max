FUNC_BEGIN(0x1008e55a, 0x9680e94caf553cd3, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0xee, 0x77, 0xd, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8d, 0x45, 0xd8, 0xe8, 0x6d, 0x85, 0xfe, 0xff, 0x8d, 0x45, 0xd4, 0xe8, 0x65, 0x85, 0xfe, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0x5d, 0x85, 0xfe, 0xff, 0xc6, 0x45, 0xe8, 0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xe0, 0x2, 0xf, 0xbf, 0x45, 0xe0, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0x1e, 0x2, 0, 0, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xc6, 0x45, 0xec, 0, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xd8, 0xe8, 0x7d, 0xa5, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xd4, 0xe8, 0x72, 0xa5, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x8d, 0x45, 0xd0, 0xe8, 0x67, 0xa5, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xe0, 0x83, 0xc0, 0x2, 0x83, 0xe0, 0x7, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0xab, 0xcb, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xe0, 0x83, 0xc0, 0x6, 0x83, 0xe0, 0x7, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0x8f, 0xcb, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xd4, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xd4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xd6, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xd6, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0xb, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xd4, 0xe8, 0xf8, 0xa4, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xd0, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xd0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xd2, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xd2, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0xb, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xd0, 0xe8, 0xc1, 0xa4, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xd8, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xd8, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xda, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xda, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0xb, 0x8b, 0x45, 0xdc, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x7c, 0x5, 0xe9, 0xed, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x31, 0xd2, 0x8a, 0x10, 0xf, 0xbf, 0x45, 0x10, 0x39, 0xc2, 0x74, 0x1e, 0xf, 0xbf, 0x45, 0xd4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xd6, 0x8b, 0, 0x1, 0xd0, 0x31, 0xd2, 0x8a, 0x10, 0xf, 0xbf, 0x45, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x1e, 0xf, 0xbf, 0x45, 0xd0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x31, 0xd2, 0x8a, 0x10, 0xf, 0xbf, 0x45, 0x10, 0x39, 0xc2, 0x75, 0x9, 0xc6, 0x45, 0xec, 0x1, 0xe9, 0x88, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xda, 0x8b, 0, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x47, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0x27, 0xca, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0x11, 0xca, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0xfb, 0xc9, 0xff, 0xff, 0xe9, 0xd5, 0xfe, 0xff, 0xff, 0x80, 0x7d, 0xec, 0, 0x74, 0x16, 0xc6, 0x45, 0xe8, 0x1, 0x8b, 0x45, 0xe0, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x2, 0x8b, 0x45, 0xdc, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x2, 0xe9, 0xd1, 0xfd, 0xff, 0xff, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xe4, 0x8a, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x1008e55a, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x1008e55f, 0x5)   calld(sys_check_available_stack_size, 0xd77ee); /* call 0x10165d52 */
    II(0x1008e564, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008e565, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008e566, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008e567, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008e569, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x1008e56f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1008e572, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1008e575, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1008e578, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1008e57b, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1008e57e, 0x5)   calld(my_ctor_0x101b4184, -0x17a93);  /* call 0x10076af0 */
    II(0x1008e583, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008e586, 0x5)   calld(my_ctor_0x101b4184, -0x17a9b);  /* call 0x10076af0 */
    II(0x1008e58b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008e58e, 0x5)   calld(my_ctor_0x101b4184, -0x17aa3);  /* call 0x10076af0 */
    II(0x1008e593, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
    II(0x1008e597, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x1008e59e, 0x2)   jmpd(0x1008e5a4, 0x4);                /* jmp 0x1008e5a4 */
l_0x1008e5a0:
    II(0x1008e5a0, 0x4)   add(memd_a32(ss, ebp - 0x20), 0x2);   /* add dword [ebp-0x20], 0x2 */
l_0x1008e5a4:
    II(0x1008e5a4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1008e5a8, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1008e5ab, 0x6)   jged(0x1008e7cf, 0x21e);              /* jge dword 0x1008e7cf */
    II(0x1008e5b1, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x1008e5b8, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x1008e5bc, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1008e5bf, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1008e5c2, 0x5)   calld(0x10088b44, -0x5a83);           /* call 0x10088b44 */
    II(0x1008e5c7, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1008e5ca, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008e5cd, 0x5)   calld(0x10088b44, -0x5a8e);           /* call 0x10088b44 */
    II(0x1008e5d2, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1008e5d5, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008e5d8, 0x5)   calld(0x10088b44, -0x5a99);           /* call 0x10088b44 */
    II(0x1008e5dd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1008e5e1, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x1008e5e4, 0x3)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x1008e5e7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e5ea, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1008e5ef, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1008e5f1, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008e5f4, 0x5)   calld(0x1008b1a4, -0x3455);           /* call 0x1008b1a4 */
    II(0x1008e5f9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1008e5fd, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1008e600, 0x3)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x1008e603, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e606, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1008e60b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1008e60d, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008e610, 0x5)   calld(0x1008b1a4, -0x3471);           /* call 0x1008b1a4 */
    II(0x1008e615, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1008e619, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e61b, 0x2)   jld(0x1008e629, 0xc);                 /* jl 0x1008e629 */
    II(0x1008e61d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1008e620, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1008e627, 0x2)   jld(0x1008e62b, 0x2);                 /* jl 0x1008e62b */
l_0x1008e629:
    II(0x1008e629, 0x2)   jmpd(0x1008e633, 0x8);                /* jmp 0x1008e633 */
l_0x1008e62b:
    II(0x1008e62b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2a)); /* movsx eax, word [ebp-0x2a] */
    II(0x1008e62f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e631, 0x2)   jged(0x1008e635, 0x2);                /* jge 0x1008e635 */
l_0x1008e633:
    II(0x1008e633, 0x2)   jmpd(0x1008e641, 0xc);                /* jmp 0x1008e641 */
l_0x1008e635:
    II(0x1008e635, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2a));   /* mov eax, [ebp-0x2a] */
    II(0x1008e638, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1008e63f, 0x2)   jld(0x1008e64c, 0xb);                 /* jl 0x1008e64c */
l_0x1008e641:
    II(0x1008e641, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x1008e644, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008e647, 0x5)   calld(0x10088b44, -0x5b08);           /* call 0x10088b44 */
l_0x1008e64c:
    II(0x1008e64c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1008e650, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e652, 0x2)   jld(0x1008e660, 0xc);                 /* jl 0x1008e660 */
    II(0x1008e654, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1008e657, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1008e65e, 0x2)   jld(0x1008e662, 0x2);                 /* jl 0x1008e662 */
l_0x1008e660:
    II(0x1008e660, 0x2)   jmpd(0x1008e66a, 0x8);                /* jmp 0x1008e66a */
l_0x1008e662:
    II(0x1008e662, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2e)); /* movsx eax, word [ebp-0x2e] */
    II(0x1008e666, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e668, 0x2)   jged(0x1008e66c, 0x2);                /* jge 0x1008e66c */
l_0x1008e66a:
    II(0x1008e66a, 0x2)   jmpd(0x1008e678, 0xc);                /* jmp 0x1008e678 */
l_0x1008e66c:
    II(0x1008e66c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2e));   /* mov eax, [ebp-0x2e] */
    II(0x1008e66f, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1008e676, 0x2)   jld(0x1008e683, 0xb);                 /* jl 0x1008e683 */
l_0x1008e678:
    II(0x1008e678, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x1008e67b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008e67e, 0x5)   calld(0x10088b44, -0x5b3f);           /* call 0x10088b44 */
l_0x1008e683:
    II(0x1008e683, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1008e687, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e689, 0x2)   jld(0x1008e697, 0xc);                 /* jl 0x1008e697 */
    II(0x1008e68b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1008e68e, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1008e695, 0x2)   jld(0x1008e699, 0x2);                 /* jl 0x1008e699 */
l_0x1008e697:
    II(0x1008e697, 0x2)   jmpd(0x1008e6a1, 0x8);                /* jmp 0x1008e6a1 */
l_0x1008e699:
    II(0x1008e699, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x26)); /* movsx eax, word [ebp-0x26] */
    II(0x1008e69d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e69f, 0x2)   jged(0x1008e6a3, 0x2);                /* jge 0x1008e6a3 */
l_0x1008e6a1:
    II(0x1008e6a1, 0x2)   jmpd(0x1008e6af, 0xc);                /* jmp 0x1008e6af */
l_0x1008e6a3:
    II(0x1008e6a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x26));   /* mov eax, [ebp-0x26] */
    II(0x1008e6a6, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1008e6ad, 0x2)   jld(0x1008e6b1, 0x2);                 /* jl 0x1008e6b1 */
l_0x1008e6af:
    II(0x1008e6af, 0x2)   jmpd(0x1008e6bc, 0xb);                /* jmp 0x1008e6bc */
l_0x1008e6b1:
    II(0x1008e6b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1008e6b4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008e6b7, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x1008e6ba, 0x2)   jld(0x1008e6c1, 0x5);                 /* jl 0x1008e6c1 */
l_0x1008e6bc:
    II(0x1008e6bc, 0x5)   jmpd(0x1008e7ae, 0xed);               /* jmp 0x1008e7ae */
l_0x1008e6c1:
    II(0x1008e6c1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1008e6c5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e6c8, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1008e6cb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x1008e6cf, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1008e6d1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1008e6d3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e6d5, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x1008e6d7, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x1008e6db, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008e6dd, 0x2)   jzd(0x1008e6fd, 0x1e);                /* jz 0x1008e6fd */
    II(0x1008e6df, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x1008e6e3, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e6e6, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1008e6e9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2a)); /* movsx edx, word [ebp-0x2a] */
    II(0x1008e6ed, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1008e6ef, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1008e6f1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e6f3, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x1008e6f5, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x1008e6f9, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008e6fb, 0x2)   jnzd(0x1008e6ff, 0x2);                /* jnz 0x1008e6ff */
l_0x1008e6fd:
    II(0x1008e6fd, 0x2)   jmpd(0x1008e71d, 0x1e);               /* jmp 0x1008e71d */
l_0x1008e6ff:
    II(0x1008e6ff, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x1008e703, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e706, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1008e709, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2e)); /* movsx edx, word [ebp-0x2e] */
    II(0x1008e70d, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1008e70f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1008e711, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008e713, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x1008e715, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x1008e719, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008e71b, 0x2)   jnzd(0x1008e726, 0x9);                /* jnz 0x1008e726 */
l_0x1008e71d:
    II(0x1008e71d, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1008e721, 0x5)   jmpd(0x1008e7ae, 0x88);               /* jmp 0x1008e7ae */
l_0x1008e726:
    II(0x1008e726, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1008e72a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e72d, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1008e730, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x1008e734, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1008e736, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1008e738, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1008e73a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1008e73f, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1008e742, 0x2)   jnzd(0x1008e74a, 0x6);                /* jnz 0x1008e74a */
    II(0x1008e744, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1008e747, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x1008e74a:
    II(0x1008e74a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1008e74e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e751, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1008e754, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x1008e758, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1008e75a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1008e75c, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1008e75e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1008e763, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008e765, 0x2)   jzd(0x1008e7ae, 0x47);                /* jz 0x1008e7ae */
    II(0x1008e767, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1008e76b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e76e, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1008e773, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1008e775, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1008e778, 0x5)   calld(0x1008b1a4, -0x35d9);           /* call 0x1008b1a4 */
    II(0x1008e77d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1008e781, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e784, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1008e789, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1008e78b, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008e78e, 0x5)   calld(0x1008b1a4, -0x35ef);           /* call 0x1008b1a4 */
    II(0x1008e793, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1008e797, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008e79a, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x1008e79f, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1008e7a1, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1008e7a4, 0x5)   calld(0x1008b1a4, -0x3605);           /* call 0x1008b1a4 */
    II(0x1008e7a9, 0x5)   jmpd(0x1008e683, -0x12b);             /* jmp 0x1008e683 */
l_0x1008e7ae:
    II(0x1008e7ae, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x1008e7b2, 0x2)   jzd(0x1008e7ca, 0x16);                /* jz 0x1008e7ca */
    II(0x1008e7b4, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x1008e7b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008e7bb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1008e7be, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x1008e7c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1008e7c4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008e7c7, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
l_0x1008e7ca:
    II(0x1008e7ca, 0x5)   jmpd(0x1008e5a0, -0x22f);             /* jmp 0x1008e5a0 */
l_0x1008e7cf:
    II(0x1008e7cf, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x1008e7d2, 0x3)   mov(memb_a32(ss, ebp - 0x1c), al);    /* mov [ebp-0x1c], al */
//    II(0x1008e7d5, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x1008e7d8, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008e7da, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008e7db, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008e7dc, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008e7dd, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

