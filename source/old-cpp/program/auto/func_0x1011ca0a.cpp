FUNC_BEGIN(0x1011ca0a, 0xfa29706a4f8bc479, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0x3e, 0x93, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8d, 0x45, 0xd8, 0xe8, 0xc1, 0xa0, 0xf5, 0xff, 0x8d, 0x45, 0xdc, 0xe8, 0xb9, 0xa0, 0xf5, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xe, 0xe8, 0x3e, 0xea, 0xf6, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xa9, 0x1, 0, 0, 0xff, 0x5, 0xe8, 0x52, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xe, 0xe8, 0x1f, 0xea, 0xf6, 0xff, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xe, 0xe8, 0xd8, 0x3a, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0xca, 0xc0, 0xf6, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xe, 0xe8, 0xfb, 0xe9, 0xf6, 0xff, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xe, 0xe8, 0x80, 0x10, 0xfb, 0xff, 0xf, 0xbf, 0x45, 0xdc, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xde, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x4d, 0xec, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x1e, 0x8d, 0x45, 0xe4, 0xe8, 0x9e, 0x93, 0xf5, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xe0, 0xe8, 0x91, 0x93, 0xf5, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x59, 0xfe, 0xff, 0xff, 0x66, 0xc7, 0x5, 0xd0, 0xaf, 0x1b, 0x10, 0x1, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0xf3, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xdc, 0x66, 0x3, 0x82, 0x48, 0x53, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xde, 0x66, 0x3, 0x82, 0x4a, 0x53, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xda, 0xf, 0xbf, 0x55, 0xd8, 0x85, 0xd2, 0x7c, 0xc, 0x8b, 0x45, 0xd8, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xda, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xda, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x20, 0xf, 0xbf, 0x55, 0xd8, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf8, 0x8b, 0, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xda, 0x1, 0xd2, 0x8b, 0, 0x1, 0xc2, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x2, 0x7c, 0x2, 0xeb, 0x74, 0x8b, 0x45, 0xf8, 0x31, 0xdb, 0x8a, 0x58, 0x22, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xd4, 0xe8, 0xd5, 0x92, 0xf5, 0xff, 0x89, 0xc1, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xd0, 0xe8, 0xc8, 0x92, 0xf5, 0xff, 0x89, 0xca, 0xe8, 0x6d, 0xf3, 0xff, 0xff, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x7e, 0x42, 0x66, 0xf7, 0x45, 0xf0, 0x1, 0, 0x74, 0x13, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x14, 0x52, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x50, 0x31, 0xc9, 0x8a, 0x4d, 0xf0, 0x8b, 0x45, 0xe8, 0x3, 0x45, 0xec, 0xf, 0xbf, 0xd8, 0x8d, 0x55, 0xd8, 0x8d, 0x45, 0xcc, 0xe8, 0x7e, 0x92, 0xf5, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xfd, 0xf6, 0xff, 0xff, 0xe9, 0xfa, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011ca0a, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x1011ca0f, 0x5)   calld(sys_check_available_stack_size, 0x4933e); /* call 0x10165d52 */
    II(0x1011ca14, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011ca15, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011ca16, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011ca17, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011ca18, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011ca19, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011ca1b, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x1011ca21, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011ca24, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1011ca27, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1011ca2a, 0x5)   calld(my_ctor_0x101b4184, -0xa5f3f);  /* call 0x10076af0 */
    II(0x1011ca2f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1011ca32, 0x5)   calld(my_ctor_0x101b4184, -0xa5f47);  /* call 0x10076af0 */
    II(0x1011ca37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ca3a, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1011ca3d, 0x5)   calld(my_3_get_count, -0x915c2);      /* call 0x1008b480 */
    II(0x1011ca42, 0x1)   cwde();                               /* cwde */
    II(0x1011ca43, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011ca45, 0x2)   jnzd(0x1011ca50, 0x9);                /* jnz 0x1011ca50 */
    II(0x1011ca47, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1011ca4b, 0x5)   jmpd(0x1011cbf9, 0x1a9);              /* jmp 0x1011cbf9 */
l_0x1011ca50:
    II(0x1011ca50, 0x6)   inc(memd_a32(ds, 0x101c52e8));        /* inc dword [0x101c52e8] */
    II(0x1011ca56, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ca59, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1011ca5c, 0x5)   calld(my_3_get_count, -0x915e1);      /* call 0x1008b480 */
    II(0x1011ca61, 0x1)   dec(eax);                             /* dec eax */
    II(0x1011ca62, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1011ca65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ca68, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1011ca6b, 0x5)   calld(0x10120548, 0x3ad8);            /* call 0x10120548 */
    II(0x1011ca70, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011ca72, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1011ca75, 0x5)   calld(0x10088b44, -0x93f36);          /* call 0x10088b44 */
    II(0x1011ca7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ca7d, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1011ca80, 0x5)   calld(my_3_get_count, -0x91605);      /* call 0x1008b480 */
    II(0x1011ca85, 0x1)   dec(eax);                             /* dec eax */
    II(0x1011ca86, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1011ca89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011ca8c, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x1011ca8f, 0x5)   calld(0x100cdb14, -0x4ef80);          /* call 0x100cdb14 */
    II(0x1011ca94, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1011ca98, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011ca9b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011ca9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011caa0, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011caa2, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011caa4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x22)); /* movsx edx, word [ebp-0x22] */
    II(0x1011caa8, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1011caaa, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011caac, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011caae, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1011cab1, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011cab4, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x14)); /* movsx ecx, word [ebp-0x14] */
    II(0x1011cab8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1011cabb, 0x3)   add(edx, 0x1e);                       /* add edx, 0x1e */
    II(0x1011cabe, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1011cac1, 0x5)   calld(0x10075e64, -0xa6c62);          /* call 0x10075e64 */
    II(0x1011cac6, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1011cac8, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x1011cacb, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1011cace, 0x5)   calld(0x10075e64, -0xa6c6f);          /* call 0x10075e64 */
    II(0x1011cad3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011cad5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011cad8, 0x5)   calld(0x1011c936, -0x1a7);            /* call 0x1011c936 */
    II(0x1011cadd, 0x9)   mov(memw_a32(ds, 0x101bafd0), 0x1);   /* mov word [0x101bafd0], 0x1 */
    II(0x1011cae6, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1011caed, 0x2)   jmpd(0x1011caf5, 0x6);                /* jmp 0x1011caf5 */
l_0x1011caef:
    II(0x1011caef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011caf2, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1011caf5:
    II(0x1011caf5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1011caf9, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1011cafc, 0x6)   jged(0x1011cbf5, 0xf3);               /* jge dword 0x1011cbf5 */
    II(0x1011cb02, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1011cb06, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011cb09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1011cb0c, 0x7)   add(ax, memw_a32(ds, edx + 0x101c5348)); /* add ax, [edx+0x101c5348] */
    II(0x1011cb13, 0x4)   mov(memw_a32(ss, ebp - 0x28), ax);    /* mov [ebp-0x28], ax */
    II(0x1011cb17, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1011cb1b, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011cb1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1011cb21, 0x7)   add(ax, memw_a32(ds, edx + 0x101c534a)); /* add ax, [edx+0x101c534a] */
    II(0x1011cb28, 0x4)   mov(memw_a32(ss, ebp - 0x26), ax);    /* mov [ebp-0x26], ax */
    II(0x1011cb2c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1011cb30, 0x2)   test(edx, edx);                       /* test edx, edx */
    II(0x1011cb32, 0x2)   jld(0x1011cb40, 0xc);                 /* jl 0x1011cb40 */
    II(0x1011cb34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1011cb37, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x1011cb3e, 0x2)   jld(0x1011cb42, 0x2);                 /* jl 0x1011cb42 */
l_0x1011cb40:
    II(0x1011cb40, 0x2)   jmpd(0x1011cb4a, 0x8);                /* jmp 0x1011cb4a */
l_0x1011cb42:
    II(0x1011cb42, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x26)); /* movsx eax, word [ebp-0x26] */
    II(0x1011cb46, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011cb48, 0x2)   jged(0x1011cb4c, 0x2);                /* jge 0x1011cb4c */
l_0x1011cb4a:
    II(0x1011cb4a, 0x2)   jmpd(0x1011cb58, 0xc);                /* jmp 0x1011cb58 */
l_0x1011cb4c:
    II(0x1011cb4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x26));   /* mov eax, [ebp-0x26] */
    II(0x1011cb4f, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1011cb56, 0x2)   jld(0x1011cb5a, 0x2);                 /* jl 0x1011cb5a */
l_0x1011cb58:
    II(0x1011cb58, 0x2)   jmpd(0x1011cb7a, 0x20);               /* jmp 0x1011cb7a */
l_0x1011cb5a:
    II(0x1011cb5a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1011cb5e, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011cb61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011cb64, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011cb66, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011cb68, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x26)); /* movsx edx, word [ebp-0x26] */
    II(0x1011cb6c, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1011cb6e, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011cb70, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011cb72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1011cb75, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x1011cb78, 0x2)   jld(0x1011cb7c, 0x2);                 /* jl 0x1011cb7c */
l_0x1011cb7a:
    II(0x1011cb7a, 0x2)   jmpd(0x1011cbf0, 0x74);               /* jmp 0x1011cbf0 */
l_0x1011cb7c:
    II(0x1011cb7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011cb7f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011cb81, 0x3)   mov(bl, memb_a32(ds, eax + 0x22));    /* mov bl, [eax+0x22] */
    II(0x1011cb84, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x1011cb87, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1011cb8a, 0x5)   calld(0x10075e64, -0xa6d2b);          /* call 0x10075e64 */
    II(0x1011cb8f, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1011cb91, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x1011cb94, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1011cb97, 0x5)   calld(0x10075e64, -0xa6d38);          /* call 0x10075e64 */
    II(0x1011cb9c, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1011cb9e, 0x5)   calld(0x1011bf10, -0xc93);            /* call 0x1011bf10 */
    II(0x1011cba3, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011cba6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1011cbaa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011cbac, 0x2)   jled(0x1011cbf0, 0x42);               /* jle 0x1011cbf0 */
    II(0x1011cbae, 0x6)   test(memw_a32(ss, ebp - 0x10), 0x1);  /* test word [ebp-0x10], 0x1 */
    II(0x1011cbb4, 0x2)   jzd(0x1011cbc9, 0x13);                /* jz 0x1011cbc9 */
    II(0x1011cbb6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1011cbba, 0x3)   lea(edx, edx + edx * 0x2);            /* lea edx, [edx+edx*2] */
    II(0x1011cbbd, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1011cbbf, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1011cbc2, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1011cbc4, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1011cbc6, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x1011cbc9:
    II(0x1011cbc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011cbcc, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011cbcd, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1011cbcf, 0x3)   mov(cl, memb_a32(ss, ebp - 0x10));    /* mov cl, [ebp-0x10] */
    II(0x1011cbd2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1011cbd5, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x1011cbd8, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1011cbdb, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x1011cbde, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1011cbe1, 0x5)   calld(0x10075e64, -0xa6d82);          /* call 0x10075e64 */
    II(0x1011cbe6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011cbe8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011cbeb, 0x5)   calld(0x1011c2ed, -0x903);            /* call 0x1011c2ed */
l_0x1011cbf0:
    II(0x1011cbf0, 0x5)   jmpd(0x1011caef, -0x106);             /* jmp 0x1011caef */
l_0x1011cbf5:
    II(0x1011cbf5, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x1011cbf9:
    II(0x1011cbf9, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x1011cbfc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011cbfe, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011cbff, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011cc00, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011cc01, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011cc02, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011cc03, 0x1)   retd();                               /* ret */
FUNC_END

