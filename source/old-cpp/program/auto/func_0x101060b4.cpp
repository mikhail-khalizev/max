FUNC_BEGIN(0x101060b4, 0x2da5587aaeb96af7, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x94, 0xfc, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x88, 0x45, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0xf6, 0x80, 0x88, 0x8b, 0x1b, 0x10, 0x1, 0x75, 0xa, 0x83, 0x45, 0xf8, 0xff, 0x83, 0x7d, 0xf8, 0, 0x75, 0xe7, 0x8b, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0x8b, 0x80, 0x80, 0x8b, 0x1b, 0x10, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101060b4, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x101060b9, 0x5)   calld(sys_check_available_stack_size, 0x5fc94); /* call 0x10165d52 */
    II(0x101060be, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101060bf, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101060c0, 0x1)   pushd(edx);                           /* push edx */
    II(0x101060c1, 0x1)   pushd(esi);                           /* push esi */
    II(0x101060c2, 0x1)   pushd(edi);                           /* push edi */
    II(0x101060c3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101060c4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101060c6, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x101060cc, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x101060cf, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101060d3, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
l_0x101060d6:
    II(0x101060d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101060d9, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x101060dc, 0x7)   test(memb_a32(ds, eax + 0x101b8b88), 0x1); /* test byte [eax+0x101b8b88], 0x1 */
    II(0x101060e3, 0x2)   jnzd(0x101060ef, 0xa);                /* jnz 0x101060ef */
    II(0x101060e5, 0x4)   add(memd_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* add dword [ebp-0x8], 0xff */
    II(0x101060e9, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x101060ed, 0x2)   jnzd(0x101060d6, -0x19);              /* jnz 0x101060d6 */
l_0x101060ef:
    II(0x101060ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101060f2, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x101060f5, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8b80)); /* mov eax, [eax+0x101b8b80] */
    II(0x101060fb, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x101060fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10106101, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10106103, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10106104, 0x1)   popd(edi);                            /* pop edi */
    II(0x10106105, 0x1)   popd(esi);                            /* pop esi */
    II(0x10106106, 0x1)   popd(edx);                            /* pop edx */
    II(0x10106107, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10106108, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10106109, 0x1)   retd();                               /* ret */
FUNC_END

