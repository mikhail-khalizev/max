FUNC_BEGIN(0x100f32a2, 0xd882fe04fe455365, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xa6, 0x2a, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0xb8, 0x69, 0x24, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0xec, 0x50, 0xe8, 0x29, 0x2c, 0x7, 0, 0x83, 0xc4, 0x10, 0xb9, 0x15, 0, 0, 0, 0xbb, 0xa2, 0, 0, 0, 0x8d, 0x55, 0xec, 0x31, 0xc0, 0xe8, 0x87, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100f32a2, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100f32a7, 0x5)   calld(sys_check_available_stack_size, 0x72aa6); /* call 0x10165d52 */
    II(0x100f32ac, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f32ad, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f32ae, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f32af, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f32b0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f32b1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f32b3, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100f32b9, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f32bc, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100f32bf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f32c3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f32c4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100f32c8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f32c9, 0x5)   mov(eax, 0x101a2469);                 /* mov eax, 0x101a2469 */ /* "%3.3i-%3.3i" */
    II(0x100f32ce, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f32cf, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100f32d2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f32d3, 0x5)   calld(sys_sprintf, 0x72c29);          /* call 0x10165f01 */
    II(0x100f32d8, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100f32db, 0x5)   mov(ecx, 0x15);                       /* mov ecx, 0x15 */
    II(0x100f32e0, 0x5)   mov(ebx, 0xa2);                       /* mov ebx, 0xa2 */
    II(0x100f32e5, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100f32e8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f32ea, 0x5)   calld(0x100f3176, -0x179);            /* call 0x100f3176 */
    II(0x100f32ef, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f32f1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f32f2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f32f3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f32f4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f32f5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f32f6, 0x1)   retd();                               /* ret */
FUNC_END

