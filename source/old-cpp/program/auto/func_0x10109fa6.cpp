FUNC_BEGIN(0x10109fa6, 0x832d4e6915fc9919, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0xa2, 0xbd, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0x18, 0xba, 0xe4, 0xa0, 0x1b, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0x80, 0x7d, 0xfc, 0x30, 0x7c, 0xc, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x68, 0x2, 0x6, 0, 0xeb, 0xa, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x5c, 0x2, 0x6, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0xff, 0x74, 0xd, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0xa, 0, 0xf, 0x85, 0xa8, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xef, 0xbd, 0x5, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x41, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x6, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x42, 0x2, 0x98, 0x50, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x4, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x2, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf4, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0x47, 0x43, 0xfc, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0xf, 0xbe, 0x55, 0xfc, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf8, 0x8b, 0x45, 0xe4, 0x89, 0x82, 0x75, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0xff, 0x74, 0x26, 0x8b, 0x45, 0xf8, 0xff, 0x30, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x47, 0xee, 0xfd, 0xff, 0xe9, 0xc0, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x47, 0xbd, 0x5, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x36, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe0, 0xe8, 0x1c, 0x43, 0xfc, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd4, 0xf, 0xbe, 0x55, 0xfc, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf8, 0x8b, 0x45, 0xd4, 0x89, 0x82, 0x75, 0x2, 0, 0, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0xa, 0, 0x74, 0x4f, 0x8d, 0x45, 0xd0, 0xe8, 0xfc, 0xb0, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xcc, 0xe8, 0x1f, 0xb1, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xc8, 0xe8, 0x42, 0xb1, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xc4, 0xe8, 0x65, 0xb1, 0xfc, 0xff, 0x50, 0xe8, 0x8b, 0xb1, 0xfc, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0xa7, 0xb1, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xa, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x75, 0x2, 0, 0, 0xe8, 0xf5, 0x4d, 0xfc, 0xff, 0x31, 0xd2, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x75, 0x2, 0, 0, 0xe8, 0xe, 0xb0, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xfc, 0x8d, 0x90, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x75, 0x2, 0, 0, 0xe8, 0x8f, 0xaf, 0xfc, 0xff, 0xf, 0xbe, 0x55, 0xfc, 0x81, 0xc2, 0, 0x70, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x75, 0x2, 0, 0, 0xe8, 0xa0, 0xaf, 0xfc, 0xff, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x75, 0x2, 0, 0, 0xe8, 0xf2, 0xae, 0xfc, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0, 0x8b, 0x50, 0x12, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x75, 0x2, 0, 0, 0xe8, 0x5d, 0x56, 0xfc, 0xff, 0xe8, 0xe0, 0xaf, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xf7, 0xaf, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0x75, 0x2, 0, 0, 0xe8, 0x56, 0x58, 0xfc, 0xff, 0xf, 0xbe, 0x55, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0x89, 0x50, 0x11, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0xe, 0x89, 0x50, 0x15, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x12, 0x89, 0x50, 0x19, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10109fa6, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x10109fab, 0x5)   calld(sys_check_available_stack_size, 0x5bda2); /* call 0x10165d52 */
    II(0x10109fb0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10109fb1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10109fb2, 0x1)   pushd(esi);                           /* push esi */
    II(0x10109fb3, 0x1)   pushd(edi);                           /* push edi */
    II(0x10109fb4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10109fb5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10109fb7, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x10109fbd, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10109fc0, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10109fc3, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10109fc7, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x10109fca, 0x5)   mov(edx, 0x101ba0e4);                 /* mov edx, 0x101ba0e4 */
    II(0x10109fcf, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10109fd1, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10109fd4, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x30);   /* cmp byte [ebp-0x4], 0x30 */
    II(0x10109fd8, 0x2)   jld(0x10109fe6, 0xc);                 /* jl 0x10109fe6 */
    II(0x10109fda, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10109fdf, 0x5)   calld(/* sys */ 0x1016a24c, 0x60268); /* call 0x1016a24c */
    II(0x10109fe4, 0x2)   jmpd(0x10109ff0, 0xa);                /* jmp 0x10109ff0 */
l_0x10109fe6:
    II(0x10109fe6, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10109feb, 0x5)   calld(/* sys */ 0x1016a24c, 0x6025c); /* call 0x1016a24c */
l_0x10109ff0:
    II(0x10109ff0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10109ff3, 0x5)   cmp(memw_a32(ds, eax + 0x8), -0x1 /* 0xff */); /* cmp word [eax+0x8], 0xff */
    II(0x10109ff8, 0x2)   jzd(0x1010a007, 0xd);                 /* jz 0x1010a007 */
    II(0x10109ffa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10109ffd, 0x4)   cmp(memd_a32(ds, eax + 0xa), 0);      /* cmp dword [eax+0xa], 0x0 */
    II(0x1010a001, 0x6)   jnzd(0x1010a0af, 0xa8);               /* jnz dword 0x1010a0af */
l_0x1010a007:
    II(0x1010a007, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x1010a00c, 0x5)   calld(sys_new, 0x5bdef);              /* call 0x10165e00 */
    II(0x1010a011, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1010a014, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010a017, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1010a01a, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x1010a01e, 0x2)   jzd(0x1010a061, 0x41);                /* jz 0x1010a061 */
    II(0x1010a020, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a023, 0x4)   mov(ax, memw_a32(ds, eax + 0x6));     /* mov ax, [eax+0x6] */
    II(0x1010a027, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010a02a, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x1010a02e, 0x1)   cwde();                               /* cwde */
    II(0x1010a02f, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010a030, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a033, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x1010a037, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010a03a, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x1010a03d, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1010a040, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a043, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x1010a045, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1010a048, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a04b, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1010a04e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010a051, 0x5)   calld(0x100ce39d, -0x3bcb9);          /* call 0x100ce39d */
    II(0x1010a056, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1010a059, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1010a05c, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1010a05f, 0x2)   jmpd(0x1010a067, 0x6);                /* jmp 0x1010a067 */
l_0x1010a061:
    II(0x1010a061, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1010a064, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1010a067:
    II(0x1010a067, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x1010a06b, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1010a06e, 0x3)   add(edx, memd_a32(ss, ebp - 0x8));    /* add edx, [ebp-0x8] */
    II(0x1010a071, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1010a074, 0x6)   mov(memd_a32(ds, edx + 0x275), eax);  /* mov [edx+0x275], eax */
    II(0x1010a07a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a07d, 0x5)   cmp(memw_a32(ds, eax + 0x8), -0x1 /* 0xff */); /* cmp word [eax+0x8], 0xff */
    II(0x1010a082, 0x2)   jzd(0x1010a0aa, 0x26);                /* jz 0x1010a0aa */
    II(0x1010a084, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010a087, 0x2)   pushd(memd_a32(ds, eax));             /* push dword [eax] */
    II(0x1010a089, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1010a08e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a091, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x1010a093, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1010a096, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a099, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1010a09c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a09f, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1010a0a2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010a0a5, 0x5)   calld(0x100e8ef1, -0x211b9);          /* call 0x100e8ef1 */
l_0x1010a0aa:
    II(0x1010a0aa, 0x5)   jmpd(0x1010a16f, 0xc0);               /* jmp 0x1010a16f */
l_0x1010a0af:
    II(0x1010a0af, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x1010a0b4, 0x5)   calld(sys_new, 0x5bd47);              /* call 0x10165e00 */
    II(0x1010a0b9, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1010a0bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010a0bf, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1010a0c2, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x1010a0c6, 0x2)   jzd(0x1010a0fe, 0x36);                /* jz 0x1010a0fe */
    II(0x1010a0c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a0cb, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010a0cd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010a0d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010a0d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a0d4, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1010a0d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a0da, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1010a0de, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010a0df, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1010a0e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a0e5, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1010a0e8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1010a0eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010a0ee, 0x5)   calld(my_ctor_c17, -0x3bce4);         /* call 0x100ce40f */
    II(0x1010a0f3, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x1010a0f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010a0f9, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1010a0fc, 0x2)   jmpd(0x1010a104, 0x6);                /* jmp 0x1010a104 */
l_0x1010a0fe:
    II(0x1010a0fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1010a101, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x1010a104:
    II(0x1010a104, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x1010a108, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1010a10b, 0x3)   add(edx, memd_a32(ss, ebp - 0x8));    /* add edx, [ebp-0x8] */
    II(0x1010a10e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1010a111, 0x6)   mov(memd_a32(ds, edx + 0x275), eax);  /* mov [edx+0x275], eax */
    II(0x1010a117, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a11a, 0x4)   cmp(memd_a32(ds, eax + 0xa), 0);      /* cmp dword [eax+0xa], 0x0 */
    II(0x1010a11e, 0x2)   jzd(0x1010a16f, 0x4f);                /* jz 0x1010a16f */
    II(0x1010a120, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1010a123, 0x5)   calld(0x100d5224, -0x34f04);          /* call 0x100d5224 */
    II(0x1010a128, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010a129, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1010a12c, 0x5)   calld(0x100d5250, -0x34ee1);          /* call 0x100d5250 */
    II(0x1010a131, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010a132, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1010a135, 0x5)   calld(0x100d527c, -0x34ebe);          /* call 0x100d527c */
    II(0x1010a13a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010a13b, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1010a13e, 0x5)   calld(0x100d52a8, -0x34e9b);          /* call 0x100d52a8 */
    II(0x1010a143, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010a144, 0x5)   calld(0x100d52d4, -0x34e75);          /* call 0x100d52d4 */
    II(0x1010a149, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1010a14c, 0x5)   calld(0x100d52f8, -0x34e59);          /* call 0x100d52f8 */
    II(0x1010a151, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1010a154, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010a157, 0x3)   mov(edx, memd_a32(ds, eax + 0xa));    /* mov edx, [eax+0xa] */
    II(0x1010a15a, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a15e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010a161, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a164, 0x6)   mov(eax, memd_a32(ds, eax + 0x275));  /* mov eax, [eax+0x275] */
    II(0x1010a16a, 0x5)   calld(0x100cef64, -0x3b20b);          /* call 0x100cef64 */
l_0x1010a16f:
    II(0x1010a16f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010a171, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a175, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010a178, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a17b, 0x6)   mov(eax, memd_a32(ds, eax + 0x275));  /* mov eax, [eax+0x275] */
    II(0x1010a181, 0x5)   calld(0x100d5194, -0x34ff2);          /* call 0x100d5194 */
    II(0x1010a186, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a18a, 0x6)   lea(edx, eax + 0x3e8);                /* lea edx, [eax+0x3e8] */
    II(0x1010a190, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a194, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010a197, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a19a, 0x6)   mov(eax, memd_a32(ds, eax + 0x275));  /* mov eax, [eax+0x275] */
    II(0x1010a1a0, 0x5)   calld(0x100d5134, -0x35071);          /* call 0x100d5134 */
    II(0x1010a1a5, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x1010a1a9, 0x6)   add(edx, 0x7000);                     /* add edx, 0x7000 */
    II(0x1010a1af, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a1b3, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010a1b6, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a1b9, 0x6)   mov(eax, memd_a32(ds, eax + 0x275));  /* mov eax, [eax+0x275] */
    II(0x1010a1bf, 0x5)   calld(0x100d5164, -0x35060);          /* call 0x100d5164 */
    II(0x1010a1c4, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010a1c7, 0x3)   mov(edx, memd_a32(ds, edx + 0x14));   /* mov edx, [edx+0x14] */
    II(0x1010a1ca, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1010a1cd, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a1d1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010a1d4, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a1d7, 0x6)   mov(eax, memd_a32(ds, eax + 0x275));  /* mov eax, [eax+0x275] */
    II(0x1010a1dd, 0x5)   calld(0x100d50d4, -0x3510e);          /* call 0x100d50d4 */
    II(0x1010a1e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010a1e5, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010a1e7, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x1010a1ea, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a1ee, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010a1f1, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a1f4, 0x6)   mov(eax, memd_a32(ds, eax + 0x275));  /* mov eax, [eax+0x275] */
    II(0x1010a1fa, 0x5)   calld(0x100cf85c, -0x3a9a3);          /* call 0x100cf85c */
    II(0x1010a1ff, 0x5)   calld(0x100d51e4, -0x35020);          /* call 0x100d51e4 */
    II(0x1010a204, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010a206, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1010a208, 0x5)   calld(0x100d5204, -0x35009);          /* call 0x100d5204 */
    II(0x1010a20d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010a20f, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1010a211, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a215, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010a218, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a21b, 0x6)   mov(eax, memd_a32(ds, eax + 0x275));  /* mov eax, [eax+0x275] */
    II(0x1010a221, 0x5)   calld(0x100cfa7c, -0x3a7aa);          /* call 0x100cfa7c */
    II(0x1010a226, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x1010a22a, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a22e, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010a231, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a234, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x1010a23a, 0x3)   mov(memd_a32(ds, eax + 0x11), edx);   /* mov [eax+0x11], edx */
    II(0x1010a23d, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a241, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010a244, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a247, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010a24a, 0x3)   mov(edx, memd_a32(ds, edx + 0xe));    /* mov edx, [edx+0xe] */
    II(0x1010a24d, 0x3)   mov(memd_a32(ds, eax + 0x15), edx);   /* mov [eax+0x15], edx */
    II(0x1010a250, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010a254, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010a257, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010a25a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010a25d, 0x3)   mov(edx, memd_a32(ds, edx + 0x12));   /* mov edx, [edx+0x12] */
    II(0x1010a260, 0x3)   mov(memd_a32(ds, eax + 0x19), edx);   /* mov [eax+0x19], edx */
    II(0x1010a263, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010a265, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010a266, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010a267, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010a268, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010a269, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010a26a, 0x1)   retd();                               /* ret */
FUNC_END

