FUNC_BEGIN(0x100bb2ef, 0xbe61eff2554c053a, 0x20, ({0x68, 0x14, 0x2, 0, 0, 0xe8, 0x59, 0xaa, 0xa, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xec, 0x1, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0xe6, 0xb1, 0xfb, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf8, 0xfe, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0xbf, 0xee, 0xfc, 0xff, 0x89, 0x45, 0xd8, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x19, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xf6, 0xda, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xc, 0xac, 0xfb, 0xff, 0xe9, 0x7b, 0x18, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0xa, 0x7d, 0x10, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xc0, 0x13, 0xc6, 0x80, 0xf4, 0x34, 0x1c, 0x10, 0, 0xeb, 0xe1, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x10, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x6d, 0xe8, 0x55, 0xf3, 0x7, 0, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x51, 0x8d, 0x7d, 0xc8, 0xbe, 0xcc, 0x77, 0x1b, 0x10, 0xa5, 0xa5, 0xa5, 0xa5, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xc1, 0xe0, 0x2, 0xff, 0x74, 0x28, 0xc8, 0xb8, 0xc6, 0x12, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x2c, 0xab, 0xa, 0, 0x83, 0xc4, 0xc, 0xe8, 0x23, 0xf6, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x38, 0xf6, 0, 0, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0xb5, 0x78, 0xff, 0xff, 0xff, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0x28, 0xa9, 0x5, 0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8d, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0xe0, 0xf6, 0xff, 0xff, 0x8d, 0x95, 0x74, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0x47, 0xaa, 0xfb, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc, 0xfb, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x18, 0xf9, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0x8b, 0x80, 0x50, 0xa5, 0x1c, 0x10, 0x89, 0x45, 0xec, 0xbb, 0xa, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0x87, 0xa9, 0xa, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xd5, 0xae, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xcf, 0xaf, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x81, 0xb7, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xf0, 0xf8, 0x7, 0, 0x84, 0xc0, 0x74, 0x1c, 0x8d, 0x45, 0xe4, 0xe8, 0x13, 0xaf, 0xfb, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x1, 0xc0, 0x66, 0xff, 0x84, 0x28, 0x64, 0xff, 0xff, 0xff, 0xeb, 0xce, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x79, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x9, 0xc7, 0x45, 0xf4, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x79, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0x8b, 0x80, 0x50, 0xa5, 0x1c, 0x10, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x79, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x18, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xec, 0x7c, 0x9, 0x81, 0x45, 0xf4, 0xe8, 0x3, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xf0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0xb, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x75, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x7b, 0x75, 0x5, 0xe9, 0xb4, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x66, 0x8b, 0x80, 0x50, 0xa5, 0x1c, 0x10, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x24, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xec, 0x7c, 0xc, 0x81, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0x3, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0xff, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x79, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x7d, 0x2, 0xeb, 0x31, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x75, 0x23, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x79, 0xc1, 0xfa, 0x10, 0x1, 0xd2, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xc0, 0x66, 0x8b, 0x94, 0x2a, 0x64, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x94, 0x28, 0x64, 0xff, 0xff, 0xff, 0x7c, 0x2, 0xeb, 0x13, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x7b, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x89, 0x45, 0xf4, 0xe9, 0xfd, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0xe, 0, 0xf, 0x84, 0xe5, 0xe, 0, 0, 0xb8, 0x17, 0, 0, 0, 0xe8, 0xd6, 0xa7, 0xa, 0, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x58, 0xff, 0xff, 0xff, 0, 0x74, 0x25, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x70, 0x13, 0xfc, 0xff, 0x89, 0x85, 0x54, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x54, 0xff, 0xff, 0xff, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x50, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0x5d, 0xf9, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0xf2, 0xf8, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xb2, 0x96, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x2, 0, 0xf, 0x85, 0x9a, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0xef, 0xa4, 0x1c, 0x10, 0x88, 0x85, 0x4c, 0xff, 0xff, 0xff, 0xeb, 0x57, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2, 0x3, 0xe9, 0x74, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2, 0x4, 0xeb, 0x6b, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2, 0x2, 0xeb, 0x62, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2, 0x7, 0xeb, 0x59, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2, 0x1, 0xeb, 0x50, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2, 0x8, 0xeb, 0x47, 0x8b, 0xc0, 0xc5, 0xb6, 0xb, 0x10, 0xd1, 0xb6, 0xb, 0x10, 0xf5, 0xb6, 0xb, 0x10, 0xda, 0xb6, 0xb, 0x10, 0xf5, 0xb6, 0xb, 0x10, 0xe3, 0xb6, 0xb, 0x10, 0xec, 0xb6, 0xb, 0x10, 0x8a, 0x85, 0x4c, 0xff, 0xff, 0xff, 0xfe, 0xc8, 0x88, 0x85, 0x48, 0xff, 0xff, 0xff, 0x80, 0xbd, 0x48, 0xff, 0xff, 0xff, 0x6, 0x77, 0xc2, 0x31, 0xc0, 0x8a, 0x85, 0x48, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0, 0xb7, 0xb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0xf7, 0x88, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x2d, 0x89, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x5, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0xde, 0x89, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x4a, 0xef, 0xff, 0xff, 0x66, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x61, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x63, 0, 0xf, 0x85, 0x7a, 0, 0, 0, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0xe8, 0x59, 0xa8, 0xa, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x89, 0x50, 0x63, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x47, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0x29, 0xa8, 0xa, 0, 0x89, 0xc3, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0x1, 0xd0, 0x89, 0x18, 0x8b, 0x1d, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x89, 0xc1, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0x1, 0xc8, 0x8b, 0, 0xe8, 0xc1, 0xa5, 0xa, 0, 0xeb, 0xa7, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x67, 0, 0xf, 0x85, 0x7a, 0, 0, 0, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0xe8, 0xd2, 0xa7, 0xa, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x89, 0x50, 0x67, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x47, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xa2, 0xa7, 0xa, 0, 0x89, 0xc3, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x67, 0x1, 0xd0, 0x89, 0x18, 0x8b, 0x1d, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfb, 0x10, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x89, 0xc1, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x67, 0x1, 0xc8, 0x8b, 0, 0xe8, 0x3a, 0xa5, 0xa, 0, 0xeb, 0xa7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x83, 0, 0, 0, 0xc7, 0x85, 0x44, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0xff, 0x85, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x57, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x9d, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xda, 0xf, 0xbf, 0x55, 0xf0, 0x1, 0xda, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x1d, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0x1, 0xd0, 0xf, 0xbf, 0x95, 0x44, 0xff, 0xff, 0xff, 0x8b, 0, 0x1, 0xd0, 0xc6, 0, 0x1, 0xeb, 0x8e, 0xe9, 0x67, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x74, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x75, 0xf, 0xf, 0xbf, 0x85, 0x76, 0xff, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x84, 0xd3, 0x1, 0, 0, 0xb8, 0x23, 0, 0, 0, 0xe8, 0x92, 0xa4, 0xa, 0, 0x89, 0x85, 0x40, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x40, 0xff, 0xff, 0xff, 0x89, 0x85, 0x3c, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x3c, 0xff, 0xff, 0xff, 0, 0x74, 0x38, 0x8d, 0x95, 0x74, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x38, 0xff, 0xff, 0xff, 0xe8, 0xca, 0xa4, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0x40, 0xff, 0xff, 0xff, 0xe8, 0x3f, 0x2a, 0xfe, 0xff, 0x89, 0x85, 0x34, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x34, 0xff, 0xff, 0xff, 0x89, 0x85, 0x30, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x3c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x30, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x30, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0xe8, 0x82, 0xf6, 0xfc, 0xff, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x50, 0xa9, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0xc3, 0xaa, 0xfb, 0xff, 0xeb, 0xb, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0xf6, 0xb1, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0x62, 0xf3, 0x7, 0, 0x84, 0xc0, 0x74, 0x62, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0x82, 0xa9, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x12, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0x68, 0xa9, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x39, 0x74, 0x2, 0xeb, 0x32, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0xe8, 0xdc, 0xf4, 0xfc, 0xff, 0x89, 0x85, 0x24, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x24, 0xff, 0xff, 0xff, 0x8b, 0x58, 0x2, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0xa2, 0xa9, 0xfb, 0xff, 0x8b, 0x8d, 0x24, 0xff, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xc8, 0xff, 0x53, 0x2c, 0xeb, 0x82, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0xe8, 0x4, 0xf5, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xc4, 0x92, 0xfe, 0xff, 0xb8, 0x85, 0, 0, 0, 0xe8, 0x6a, 0xa3, 0xa, 0, 0x89, 0x85, 0x20, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x20, 0xff, 0xff, 0xff, 0x89, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x1c, 0xff, 0xff, 0xff, 0, 0x74, 0x38, 0x8d, 0x95, 0x74, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x18, 0xff, 0xff, 0xff, 0xe8, 0xa2, 0xa3, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0x20, 0xff, 0xff, 0xff, 0xe8, 0xe9, 0x2e, 0xfe, 0xff, 0x89, 0x85, 0x14, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x14, 0xff, 0xff, 0xff, 0x89, 0x85, 0x10, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x10, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x10, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0xe8, 0xde, 0xf4, 0xfc, 0xff, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0xe8, 0x73, 0xf4, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x33, 0x92, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0x42, 0xa4, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0xe8, 0x45, 0xd0, 0xfc, 0xff, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0xf7, 0xa7, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xef, 0xa8, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0xa1, 0xb0, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x10, 0xf2, 0x7, 0, 0x84, 0xc0, 0x74, 0x5d, 0x8d, 0x45, 0xe4, 0xe8, 0x33, 0xa8, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0xe, 0x8d, 0x45, 0xe4, 0xe8, 0x1c, 0xa8, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x20, 0x8d, 0x45, 0xe4, 0xe8, 0xc, 0xa8, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x21, 0x74, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xfd, 0xa7, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x27, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xe4, 0xe8, 0x52, 0xa8, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x71, 0xe5, 0xff, 0xff, 0xeb, 0x8d, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x6c, 0xa7, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x64, 0xa8, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x16, 0xb0, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x85, 0xf1, 0x7, 0, 0x84, 0xc0, 0x74, 0x3b, 0x8d, 0x45, 0xe4, 0xe8, 0xa8, 0xa7, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0xe, 0x8d, 0x45, 0xe4, 0xe8, 0x91, 0xa7, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xe4, 0xe8, 0xe9, 0xa7, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x8, 0xe5, 0xff, 0xff, 0xeb, 0xaf, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x3, 0xa7, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xfb, 0xa7, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0xad, 0xaf, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x1c, 0xf1, 0x7, 0, 0x84, 0xc0, 0x74, 0x39, 0x8d, 0x45, 0xe4, 0xe8, 0x3f, 0xa7, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x20, 0x8d, 0x45, 0xe4, 0xe8, 0x28, 0xa7, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x4, 0x75, 0x12, 0x8d, 0x45, 0xe4, 0xe8, 0x82, 0xa7, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xa1, 0xe4, 0xff, 0xff, 0xeb, 0xb1, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x9c, 0xa6, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x94, 0xa7, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x46, 0xaf, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xb5, 0xf0, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xab, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xd4, 0xa6, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0xe, 0x8d, 0x45, 0xe4, 0xe8, 0xbd, 0xa6, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe4, 0xe8, 0xad, 0xa6, 0xfb, 0xff, 0x80, 0x78, 0x3e, 0x4, 0x74, 0x2, 0xeb, 0x6f, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xfb, 0xa0, 0xa, 0, 0x89, 0x85, 0xc, 0xff, 0xff, 0xff, 0x8b, 0x85, 0xc, 0xff, 0xff, 0xff, 0x89, 0x85, 0x8, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x8, 0xff, 0xff, 0xff, 0, 0x74, 0x2e, 0xbb, 0xc2, 0xa9, 0xb, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0xa7, 0xa6, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x85, 0xc, 0xff, 0xff, 0xff, 0xe8, 0x23, 0x7, 0xff, 0xff, 0x89, 0x85, 0x4, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x4, 0xff, 0xff, 0xff, 0x89, 0x85, 0, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x8, 0xff, 0xff, 0xff, 0x89, 0x85, 0, 0xff, 0xff, 0xff, 0x8b, 0x95, 0, 0xff, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xe6, 0x8f, 0xfe, 0xff, 0xe9, 0x3b, 0xff, 0xff, 0xff, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xbf, 0xa5, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb7, 0xa6, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x69, 0xae, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xd8, 0xef, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xd8, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xf7, 0xa5, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0xf, 0x85, 0xb8, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xdc, 0xa5, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x4f, 0x74, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xcd, 0xa5, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x4d, 0x75, 0x71, 0xb8, 0x1e, 0, 0, 0, 0xe8, 0x1c, 0xa0, 0xa, 0, 0x89, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xfc, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0xf8, 0xfe, 0xff, 0xff, 0, 0x74, 0x30, 0xbb, 0x4c, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xc8, 0xa5, 0xfb, 0xff, 0x8b, 0x8d, 0xfc, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xa0, 0xbc, 0xfc, 0xff, 0x89, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xf4, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0xf8, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xf0, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0xf0, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x5, 0x8f, 0xfe, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x4d, 0xa5, 0xfb, 0xff, 0xe8, 0xe4, 0xa3, 0xfb, 0xff, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x12, 0x8d, 0x45, 0xe4, 0xe8, 0x6a, 0xa5, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x1a, 0xe3, 0xff, 0xff, 0xe9, 0xe, 0xff, 0xff, 0xff, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xb5, 0xa4, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xad, 0xa5, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x5f, 0xad, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xce, 0xee, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xdc, 0x1, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xed, 0xa4, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0xf, 0x85, 0xbc, 0x1, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xd2, 0xa4, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x36, 0x74, 0x13, 0x8d, 0x45, 0xe4, 0xe8, 0xc3, 0xa4, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x3a, 0xf, 0x85, 0xe2, 0, 0, 0, 0xb8, 0x1e, 0, 0, 0, 0xe8, 0xe, 0x9f, 0xa, 0, 0x89, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xec, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xe8, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0xe8, 0xfe, 0xff, 0xff, 0, 0x74, 0x30, 0xbb, 0x33, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xba, 0xa4, 0xfb, 0xff, 0x8b, 0x8d, 0xec, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x92, 0xbb, 0xfc, 0xff, 0x89, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xe4, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0xe8, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xe0, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0xe0, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xf7, 0x8d, 0xfe, 0xff, 0xb8, 0x1e, 0, 0, 0, 0xe8, 0x9d, 0x9e, 0xa, 0, 0x89, 0x85, 0xdc, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xdc, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xd8, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0xd8, 0xfe, 0xff, 0xff, 0, 0x74, 0x30, 0xbb, 0x37, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x49, 0xa4, 0xfb, 0xff, 0x8b, 0x8d, 0xdc, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x21, 0xbb, 0xfc, 0xff, 0x89, 0x85, 0xd4, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xd4, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xd0, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0xd8, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xd0, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0xd0, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x86, 0x8d, 0xfe, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0xce, 0xa3, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x37, 0x74, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xbf, 0xa3, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x44, 0x75, 0x71, 0xb8, 0x1e, 0, 0, 0, 0xe8, 0xe, 0x9e, 0xa, 0, 0x89, 0x85, 0xcc, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xcc, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xc8, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0xc8, 0xfe, 0xff, 0xff, 0, 0x74, 0x30, 0xbb, 0x4c, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xba, 0xa3, 0xfb, 0xff, 0x8b, 0x8d, 0xcc, 0xfe, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x92, 0xba, 0xfc, 0xff, 0x89, 0x85, 0xc4, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xc4, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xc0, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0xc8, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xc0, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0xc0, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xf7, 0x8c, 0xfe, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x3f, 0xa3, 0xfb, 0xff, 0xe8, 0xd6, 0xa1, 0xfb, 0xff, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x12, 0x8d, 0x45, 0xe4, 0xe8, 0x5c, 0xa3, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xc, 0xe1, 0xff, 0xff, 0xe9, 0xa, 0xfe, 0xff, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xa7, 0xa2, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x9f, 0xa3, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x51, 0xab, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xc0, 0xec, 0x7, 0, 0x84, 0xc0, 0x74, 0x44, 0x8d, 0x45, 0xe4, 0xe8, 0xe3, 0xa2, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x17, 0x8d, 0x45, 0xe4, 0xe8, 0xcc, 0xa2, 0xfb, 0xff, 0xe8, 0x63, 0xa1, 0xfb, 0xff, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xe4, 0xe8, 0xe7, 0xa2, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x97, 0xe0, 0xff, 0xff, 0xeb, 0xa6, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xd9, 0x9e, 0xfb, 0xff, 0x83, 0xf8, 0x3, 0xf, 0x8c, 0x7c, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x22, 0xa2, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x1a, 0xa3, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0xcc, 0xaa, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x3b, 0xec, 0x7, 0, 0x84, 0xc0, 0x74, 0x4e, 0x8d, 0x45, 0xe4, 0xe8, 0x5e, 0xa2, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x74, 0x20, 0x8d, 0x45, 0xe4, 0xe8, 0x47, 0xa2, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0x38, 0xa2, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x13, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x53, 0xa2, 0xfb, 0xff, 0xe8, 0xda, 0xce, 0xfe, 0xff, 0xeb, 0x9c, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x43, 0xe8, 0x6d, 0xee, 0, 0, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc9, 0xed, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0x4f, 0xaa, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xbe, 0xeb, 0x7, 0, 0x84, 0xc0, 0x74, 0x59, 0x8d, 0x45, 0xdc, 0xe8, 0x39, 0xdf, 0xfc, 0xff, 0xe8, 0xac, 0xe1, 0xfc, 0xff, 0x89, 0x85, 0xbc, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xbc, 0xfe, 0xff, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xbc, 0xee, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2f, 0x8b, 0x85, 0xbc, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x79, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x17, 0xbb, 0, 0x1f, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x28, 0xdf, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x4f, 0xe9, 0xff, 0xff, 0xeb, 0x91, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0xe8, 0xf4, 0xea, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x2e, 0x1, 0, 0, 0xc6, 0x85, 0xb8, 0xfe, 0xff, 0xff, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x9, 0x80, 0xbd, 0xb8, 0xfe, 0xff, 0xff, 0, 0x74, 0x2, 0xeb, 0x5e, 0xc7, 0x85, 0x44, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0xff, 0x85, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x9, 0x80, 0xbd, 0xb8, 0xfe, 0xff, 0xff, 0, 0x74, 0x2, 0xeb, 0x2a, 0xf, 0xbf, 0x55, 0xf0, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x67, 0x1, 0xd0, 0xf, 0xbf, 0x95, 0x44, 0xff, 0xff, 0xff, 0x8b, 0, 0x1, 0xd0, 0xf, 0xbe, 0, 0x85, 0xc0, 0x7e, 0x7, 0xc6, 0x85, 0xb8, 0xfe, 0xff, 0xff, 0x1, 0xeb, 0xb0, 0xeb, 0x85, 0x80, 0xbd, 0xb8, 0xfe, 0xff, 0xff, 0, 0xf, 0x84, 0x96, 0, 0, 0, 0xb8, 0x23, 0, 0, 0, 0xe8, 0x39, 0x9b, 0xa, 0, 0x89, 0x85, 0xb4, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xb4, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xb0, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0xb0, 0xfe, 0xff, 0xff, 0, 0x74, 0x3d, 0xf, 0xbf, 0x9d, 0x44, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xf0, 0x8d, 0x85, 0xac, 0xfe, 0xff, 0xff, 0xe8, 0xb4, 0xa7, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0xb4, 0xfe, 0xff, 0xff, 0xe8, 0x8, 0x2c, 0xfe, 0xff, 0x89, 0x85, 0xa8, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xa8, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0xb0, 0xfe, 0xff, 0xff, 0x89, 0x85, 0xa4, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0xa4, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0xe8, 0xa8, 0xec, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0xe8, 0x3d, 0xec, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xfd, 0x89, 0xfe, 0xff, 0xb8, 0x13, 0, 0, 0, 0xe8, 0xa3, 0x9a, 0xa, 0, 0x89, 0x85, 0xa0, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0xa0, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x9c, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0x9c, 0xfe, 0xff, 0xff, 0, 0x74, 0x25, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0xa0, 0xfe, 0xff, 0xff, 0xe8, 0xbd, 0xc3, 0, 0, 0x89, 0x85, 0x98, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x98, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x94, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x9c, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x94, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0x94, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x97, 0x89, 0xfe, 0xff, 0xb8, 0x17, 0, 0, 0, 0xe8, 0x3d, 0x9a, 0xa, 0, 0x89, 0x85, 0x90, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x90, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x8c, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0x8c, 0xfe, 0xff, 0xff, 0, 0x74, 0x25, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0x90, 0xfe, 0xff, 0xff, 0xe8, 0x88, 0xd2, 0, 0, 0x89, 0x85, 0x88, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x88, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x84, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x8c, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x84, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0x84, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x31, 0x89, 0xfe, 0xff, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xb3, 0x9b, 0xfb, 0xff, 0x83, 0xf8, 0x1, 0xf, 0x8c, 0xcc, 0, 0, 0, 0xb8, 0x1e, 0, 0, 0, 0xe8, 0xc4, 0x99, 0xa, 0, 0x89, 0x85, 0x80, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x80, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x7c, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0x7c, 0xfe, 0xff, 0xff, 0, 0x74, 0x25, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0x80, 0xfe, 0xff, 0xff, 0xe8, 0x91, 0xeb, 0xfd, 0xff, 0x89, 0x85, 0x78, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x78, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x74, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x7c, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x74, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0x74, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xb8, 0x88, 0xfe, 0xff, 0xb8, 0x1d, 0, 0, 0, 0xe8, 0x5e, 0x99, 0xa, 0, 0x89, 0x85, 0x70, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x6c, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0x6c, 0xfe, 0xff, 0xff, 0, 0x74, 0x25, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0x70, 0xfe, 0xff, 0xff, 0xe8, 0xb7, 0x98, 0xff, 0xff, 0x89, 0x85, 0x68, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x64, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x6c, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x64, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0x64, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x52, 0x88, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0xe, 0, 0x8d, 0x95, 0x5c, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xe8, 0x21, 0xbc, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x43, 0xe8, 0xdf, 0xea, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x3d, 0xea, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0xc3, 0xa6, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x32, 0xe8, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xfd, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xa9, 0xdb, 0xfc, 0xff, 0xe8, 0xa7, 0xc8, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x85, 0xe3, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x94, 0xdb, 0xfc, 0xff, 0xe8, 0x7, 0xde, 0xfc, 0xff, 0x89, 0x85, 0x58, 0xfe, 0xff, 0xff, 0x8d, 0x9d, 0x5c, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0x58, 0xfe, 0xff, 0xff, 0xe8, 0x6d, 0xb1, 0xfb, 0xff, 0x84, 0xc0, 0x74, 0x1c, 0xbb, 0, 0x10, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x95, 0xdb, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xbc, 0xe5, 0xff, 0xff, 0xe9, 0x99, 0, 0, 0, 0x8b, 0x85, 0x58, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x79, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x17, 0x8b, 0x85, 0x58, 0xfe, 0xff, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0xf, 0x85, 0x6a, 0, 0, 0, 0x8b, 0x85, 0x58, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x31, 0x75, 0xc, 0x8b, 0x85, 0x58, 0xfe, 0xff, 0xff, 0x80, 0x78, 0x3d, 0x4, 0x74, 0x15, 0x8b, 0x85, 0x58, 0xfe, 0xff, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x98, 0xea, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x23, 0x8b, 0x85, 0x58, 0xfe, 0xff, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0xe, 0x8b, 0x85, 0x58, 0xfe, 0xff, 0xff, 0x66, 0xf7, 0x40, 0x12, 0xc0, 0x1, 0x75, 0x2, 0xeb, 0x17, 0xbb, 0, 0x1f, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xf7, 0xda, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x1e, 0xe5, 0xff, 0xff, 0xe9, 0xe9, 0xfe, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xe3, 0x9c, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xdb, 0x9d, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x8d, 0xa5, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xfc, 0xe6, 0x7, 0, 0x84, 0xc0, 0x74, 0x39, 0x8d, 0x45, 0xe4, 0xe8, 0x1f, 0x9d, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0x8, 0x9d, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x7, 0x74, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xf7, 0x9c, 0xfb, 0xff, 0x66, 0x8b, 0x40, 0x52, 0x1, 0x45, 0xe8, 0xeb, 0xb1, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x7c, 0x9c, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x74, 0x9d, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x26, 0xa5, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x95, 0xe6, 0x7, 0, 0x84, 0xc0, 0x74, 0x5e, 0x8d, 0x45, 0xe4, 0xe8, 0xb8, 0x9c, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xa1, 0x9c, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe4, 0xe8, 0x90, 0x9c, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x7, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe4, 0xe8, 0x80, 0x9c, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x14, 0x31, 0xdb, 0xba, 0x7, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xd1, 0x9c, 0xfb, 0xff, 0xe8, 0x17, 0x69, 0xa, 0, 0xeb, 0x8c, 0xf, 0xbf, 0x45, 0xe8, 0x83, 0xf8, 0xa, 0xf, 0x8c, 0xb5, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xe3, 0x9b, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xdb, 0x9c, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x8d, 0xa4, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xfc, 0xe5, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x83, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x1b, 0x9c, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x31, 0x8d, 0x45, 0xe4, 0xe8, 0x4, 0x9c, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0, 0x74, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xf5, 0x9b, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xe4, 0xe8, 0xe4, 0x9b, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x1d, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe4, 0xe8, 0xd1, 0x9b, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x7, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xe4, 0xe8, 0xc1, 0x9b, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x14, 0x31, 0xdb, 0xba, 0x7, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x12, 0x9c, 0xfb, 0xff, 0xe8, 0x58, 0x68, 0xa, 0, 0xe9, 0x63, 0xff, 0xff, 0xff, 0x31, 0xdb, 0x8d, 0x95, 0x54, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x67, 0x9e, 0, 0, 0x8d, 0x95, 0x50, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x3f, 0xab, 0, 0, 0xe8, 0xd1, 0xe6, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x95, 0x50, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x4c, 0xfe, 0xff, 0xff, 0xe8, 0x2c, 0xe6, 0, 0, 0x89, 0xc1, 0xe8, 0xb5, 0xe6, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x95, 0x54, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x48, 0xfe, 0xff, 0xff, 0xe8, 0x10, 0xe6, 0, 0, 0x8b, 0x75, 0xfc, 0x89, 0xcb, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x4d, 0x9b, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x48, 0xfe, 0xff, 0xff, 0xe8, 0x31, 0xde, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x4c, 0xfe, 0xff, 0xff, 0xe8, 0x24, 0xde, 0, 0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xe9, 0xed, 0, 0, 0x89, 0x85, 0x44, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0xa, 0xff, 0x74, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xc, 0x66, 0x3b, 0x85, 0x44, 0xfe, 0xff, 0xff, 0x7e, 0x5, 0xe9, 0xc4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0xc, 0x29, 0x85, 0x44, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x44, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0x29, 0xed, 0, 0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x55, 0xfc, 0x66, 0x8b, 0x52, 0xc, 0x66, 0x1, 0x90, 0x83, 0xa5, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x9b, 0xb0, 0, 0, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0xb, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xe8, 0x33, 0xc0, 0x6, 0, 0xe8, 0xd6, 0xe5, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x95, 0x50, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x40, 0xfe, 0xff, 0xff, 0xe8, 0x31, 0xe5, 0, 0, 0x89, 0xc6, 0xe8, 0xba, 0xe5, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x95, 0x54, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x3c, 0xfe, 0xff, 0xff, 0xe8, 0x15, 0xe5, 0, 0, 0x8b, 0x4d, 0xfc, 0x89, 0xf3, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x52, 0x9a, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x3c, 0xfe, 0xff, 0xff, 0xe8, 0x36, 0xdd, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x40, 0xfe, 0xff, 0xff, 0xe8, 0x29, 0xdd, 0, 0, 0xe9, 0x1d, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x50, 0xfe, 0xff, 0xff, 0xe8, 0x17, 0xdd, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x54, 0xfe, 0xff, 0xff, 0xe8, 0xa, 0xdd, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x7c, 0x18, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x5a, 0xe7, 0xff, 0xff, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x88, 0x99, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x80, 0x9a, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x32, 0xa2, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xa1, 0xe3, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xd9, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xc0, 0x99, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0xf, 0x85, 0xb9, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xa5, 0x99, 0xfb, 0xff, 0xe8, 0xac, 0x5c, 0x9, 0, 0x85, 0xc0, 0x74, 0x16, 0xe8, 0xdb, 0xe6, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xbf, 0x99, 0xfb, 0xff, 0xe8, 0x63, 0x5f, 0xfe, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x7e, 0x99, 0xfb, 0xff, 0x8a, 0x40, 0x50, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x8e, 0x7a, 0, 0, 0, 0xc7, 0x85, 0x38, 0xfe, 0xff, 0xff, 0x1, 0, 0, 0, 0xb8, 0xa, 0, 0, 0, 0xe8, 0xba, 0x93, 0xa, 0, 0x89, 0x85, 0x34, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x34, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x30, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0x30, 0xfe, 0xff, 0xff, 0, 0x74, 0x29, 0x8d, 0x45, 0xe4, 0xe8, 0x6b, 0x99, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x85, 0x34, 0xfe, 0xff, 0xff, 0xe8, 0xc4, 0x72, 0xfe, 0xff, 0x89, 0x85, 0x2c, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x2c, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x28, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x30, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x28, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0x28, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x9d, 0x38, 0xfe, 0xff, 0xff, 0xe8, 0xa, 0x83, 0xfe, 0xff, 0xe9, 0xd, 0xff, 0xff, 0xff, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x7d, 0x98, 0xfb, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x75, 0x99, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x27, 0xa1, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x96, 0xe2, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xd9, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xb5, 0x98, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0xf, 0x85, 0xb9, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x9a, 0x98, 0xfb, 0xff, 0xe8, 0xa1, 0x5b, 0x9, 0, 0x85, 0xc0, 0x74, 0x16, 0xe8, 0xd0, 0xe5, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xb4, 0x98, 0xfb, 0xff, 0xe8, 0x58, 0x5e, 0xfe, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x73, 0x98, 0xfb, 0xff, 0x8a, 0x40, 0x50, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x8e, 0x7a, 0, 0, 0, 0xc7, 0x85, 0x24, 0xfe, 0xff, 0xff, 0x1, 0, 0, 0, 0xb8, 0xa, 0, 0, 0, 0xe8, 0xaf, 0x92, 0xa, 0, 0x89, 0x85, 0x20, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x20, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x1c, 0xfe, 0xff, 0xff, 0x83, 0xbd, 0x1c, 0xfe, 0xff, 0xff, 0, 0x74, 0x29, 0x8d, 0x45, 0xe4, 0xe8, 0x60, 0x98, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x85, 0x20, 0xfe, 0xff, 0xff, 0xe8, 0xb9, 0x71, 0xfe, 0xff, 0x89, 0x85, 0x18, 0xfe, 0xff, 0xff, 0x8b, 0x85, 0x18, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x14, 0xfe, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x1c, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x14, 0xfe, 0xff, 0xff, 0x8b, 0x95, 0x14, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x9d, 0x24, 0xfe, 0xff, 0xff, 0xe8, 0xff, 0x81, 0xfe, 0xff, 0xe9, 0xd, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xe9, 0x83, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x76, 0xc2, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x8c, 0x93, 0xfb, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100bb2ef, 0x5)   pushd(0x214);                         /* push dword 0x214 */
    II(0x100bb2f4, 0x5)   calld(sys_check_available_stack_size, 0xaaa59); /* call 0x10165d52 */
    II(0x100bb2f9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100bb2fa, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100bb2fb, 0x1)   pushd(edx);                           /* push edx */
    II(0x100bb2fc, 0x1)   pushd(esi);                           /* push esi */
    II(0x100bb2fd, 0x1)   pushd(edi);                           /* push edi */
    II(0x100bb2fe, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100bb2ff, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100bb301, 0x6)   sub(esp, 0x1ec);                      /* sub esp, 0x1ec */
    II(0x100bb307, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100bb30a, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100bb30e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bb311, 0x5)   calld(0x100764fc, -0x44e1a);          /* call 0x100764fc */
    II(0x100bb316, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100bb319, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100bb31d, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100bb321, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bb324, 0x5)   calld(0x1008a1e8, -0x31141);          /* call 0x1008a1e8 */
    II(0x100bb329, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100bb32c, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100bb330, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb333, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bb336, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bb33c, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100bb342, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bb347, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100bb34a, 0x2)   jzd(0x100bb365, 0x19);                /* jz 0x100bb365 */
    II(0x100bb34c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bb34e, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bb351, 0x5)   calld(0x10088e4c, -0x3250a);          /* call 0x10088e4c */
    II(0x100bb356, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bb358, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bb35b, 0x5)   calld(0x10075f6c, -0x453f4);          /* call 0x10075f6c */
    II(0x100bb360, 0x5)   jmpd(0x100bcbe0, 0x187b);             /* jmp 0x100bcbe0 */
l_0x100bb365:
    II(0x100bb365, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100bb36c, 0x2)   jmpd(0x100bb374, 0x6);                /* jmp 0x100bb374 */
l_0x100bb36e:
    II(0x100bb36e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb371, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100bb374:
    II(0x100bb374, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb378, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100bb37b, 0x2)   jged(0x100bb38d, 0x10);               /* jge 0x100bb38d */
    II(0x100bb37d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb381, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100bb384, 0x7)   mov(memb_a32(ds, eax + 0x101c34f4), 0); /* mov byte [eax+0x101c34f4], 0x0 */
    II(0x100bb38b, 0x2)   jmpd(0x100bb36e, -0x1f);              /* jmp 0x100bb36e */
l_0x100bb38d:
    II(0x100bb38d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb390, 0x4)   mov(memb_a32(ds, eax + 0x10), 0);     /* mov byte [eax+0x10], 0x0 */
    II(0x100bb394, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb397, 0x3)   add(eax, 0x6d);                       /* add eax, 0x6d */
    II(0x100bb39a, 0x5)   calld(0x1013a6f4, 0x7f355);           /* call 0x1013a6f4 */
    II(0x100bb39f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100bb3a1, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100bb3a6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb3a8, 0x2)   jnzd(0x100bb3fb, 0x51);               /* jnz 0x100bb3fb */
    II(0x100bb3aa, 0x3)   lea(edi, ebp - 0x38);                 /* lea edi, [ebp-0x38] */
    II(0x100bb3ad, 0x5)   mov(esi, 0x101b77cc);                 /* mov esi, 0x101b77cc */
    II(0x100bb3b2, 0x1)   movsd_a32();                          /* movsd */
    II(0x100bb3b3, 0x1)   movsd_a32();                          /* movsd */
    II(0x100bb3b4, 0x1)   movsd_a32();                          /* movsd */
    II(0x100bb3b5, 0x1)   movsd_a32();                          /* movsd */
    II(0x100bb3b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb3b9, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bb3bc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bb3bf, 0x4)   pushd(memd_a32(ds, eax + ebp - 0x38)); /* push dword [eax+ebp-0x38] */
    II(0x100bb3c3, 0x5)   mov(eax, 0x101a12c6);                 /* mov eax, 0x101a12c6 */ /* "%s Computer Turn." */
    II(0x100bb3c8, 0x1)   pushd(eax);                           /* push eax */
    II(0x100bb3c9, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x100bb3cf, 0x1)   pushd(eax);                           /* push eax */
    II(0x100bb3d0, 0x5)   calld(sys_sprintf, 0xaab2c);          /* call 0x10165f01 */
    II(0x100bb3d5, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100bb3d8, 0x5)   calld(0x100caa00, 0xf623);            /* call 0x100caa00 */
    II(0x100bb3dd, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bb3e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100bb3e3, 0x5)   calld(0x100caa20, 0xf638);            /* call 0x100caa20 */
    II(0x100bb3e8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100bb3ea, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bb3ec, 0x6)   lea(esi, ebp - 0x88);                 /* lea esi, [ebp+0xffffff78] */
    II(0x100bb3f2, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100bb3f4, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100bb3f6, 0x5)   calld(0x10115d23, 0x5a928);           /* call 0x10115d23 */
l_0x100bb3fb:
    II(0x100bb3fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb3fe, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bb401, 0x6)   lea(eax, ebp - 0x8c);                 /* lea eax, [ebp+0xffffff74] */
    II(0x100bb407, 0x5)   calld(0x100baaec, -0x920);            /* call 0x100baaec */
    II(0x100bb40c, 0x6)   lea(edx, ebp - 0x8c);                 /* lea edx, [ebp+0xffffff74] */
    II(0x100bb412, 0x6)   lea(eax, ebp - 0x90);                 /* lea eax, [ebp+0xffffff70] */
    II(0x100bb418, 0x5)   calld(0x10075e64, -0x455b9);          /* call 0x10075e64 */
    II(0x100bb41d, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100bb420, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bb422, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bb424, 0x5)   calld(0x100baf35, -0x4f4);            /* call 0x100baf35 */
    II(0x100bb429, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb42c, 0x5)   calld(0x100bad49, -0x6e8);            /* call 0x100bad49 */
    II(0x100bb431, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb434, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bb437, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bb43d, 0x7)   mov(ax, memw_a32(ds, eax + 0x101ca550)); /* mov ax, [eax+0x101ca550] */
    II(0x100bb444, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100bb447, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x100bb44c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bb44e, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x100bb454, 0x5)   calld(sys_memset, 0xaa987);           /* call 0x10165de0 */
    II(0x100bb459, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bb45e, 0x5)   calld(0x10076338, -0x4512b);          /* call 0x10076338 */
    II(0x100bb463, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bb465, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bb468, 0x5)   calld(0x1007643c, -0x45031);          /* call 0x1007643c */
    II(0x100bb46d, 0x2)   jmpd(0x100bb477, 0x8);                /* jmp 0x100bb477 */
l_0x100bb46f:
    II(0x100bb46f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bb472, 0x5)   calld(0x10076bf8, -0x4487f);          /* call 0x10076bf8 */
l_0x100bb477:
    II(0x100bb477, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bb479, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bb47c, 0x5)   calld(0x1013ad71, 0x7f8f0);           /* call 0x1013ad71 */
    II(0x100bb481, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bb483, 0x2)   jzd(0x100bb4a1, 0x1c);                /* jz 0x100bb4a1 */
    II(0x100bb485, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bb488, 0x5)   calld(0x100763a0, -0x450ed);          /* call 0x100763a0 */
    II(0x100bb48d, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100bb490, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bb495, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100bb497, 0x8)   inc(memw_a32(ds, eax + ebp - 0x9c));  /* inc word [eax+ebp+0xffffff64] */
    II(0x100bb49f, 0x2)   jmpd(0x100bb46f, -0x32);              /* jmp 0x100bb46f */
l_0x100bb4a1:
    II(0x100bb4a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb4a4, 0x3)   mov(eax, memd_a32(ds, eax + 0x79));   /* mov eax, [eax+0x79] */
    II(0x100bb4a7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb4aa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb4ac, 0x2)   jged(0x100bb4b7, 0x9);                /* jge 0x100bb4b7 */
    II(0x100bb4ae, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xffffffff); /* mov dword [ebp-0xc], 0xffffffff */
    II(0x100bb4b5, 0x2)   jmpd(0x100bb507, 0x50);               /* jmp 0x100bb507 */
l_0x100bb4b7:
    II(0x100bb4b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb4ba, 0x3)   mov(eax, memd_a32(ds, eax + 0x79));   /* mov eax, [eax+0x79] */
    II(0x100bb4bd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb4c0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bb4c6, 0x7)   mov(ax, memw_a32(ds, eax + 0x101ca550)); /* mov ax, [eax+0x101ca550] */
    II(0x100bb4cd, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100bb4d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb4d3, 0x3)   mov(eax, memd_a32(ds, eax + 0x79));   /* mov eax, [eax+0x79] */
    II(0x100bb4d6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb4d9, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bb4df, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100bb4e5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bb4ea, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100bb4ed, 0x2)   jzd(0x100bb507, 0x18);                /* jz 0x100bb507 */
    II(0x100bb4ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bb4f2, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100bb4f6, 0x2)   jld(0x100bb501, 0x9);                 /* jl 0x100bb501 */
    II(0x100bb4f8, 0x7)   add(memd_a32(ss, ebp - 0xc), 0x3e8);  /* add dword [ebp-0xc], 0x3e8 */
    II(0x100bb4ff, 0x2)   jmpd(0x100bb507, 0x6);                /* jmp 0x100bb507 */
l_0x100bb501:
    II(0x100bb501, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bb504, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100bb507:
    II(0x100bb507, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100bb50e, 0x2)   jmpd(0x100bb516, 0x6);                /* jmp 0x100bb516 */
l_0x100bb510:
    II(0x100bb510, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb513, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100bb516:
    II(0x100bb516, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb51a, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100bb51d, 0x6)   jged(0x100bb613, 0xf0);               /* jge dword 0x100bb613 */
    II(0x100bb523, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb527, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bb52d, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100bb533, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bb538, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb53a, 0x2)   jzd(0x100bb547, 0xb);                 /* jz 0x100bb547 */
    II(0x100bb53c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb53f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100bb542, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100bb545, 0x2)   jnzd(0x100bb549, 0x2);                /* jnz 0x100bb549 */
l_0x100bb547:
    II(0x100bb547, 0x2)   jmpd(0x100bb555, 0xc);                /* jmp 0x100bb555 */
l_0x100bb549:
    II(0x100bb549, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb54c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100bb54f, 0x4)   cmp(ax, memw_a32(ds, edx + 0x7b));    /* cmp ax, [edx+0x7b] */
    II(0x100bb553, 0x2)   jnzd(0x100bb55a, 0x5);                /* jnz 0x100bb55a */
l_0x100bb555:
    II(0x100bb555, 0x5)   jmpd(0x100bb60e, 0xb4);               /* jmp 0x100bb60e */
l_0x100bb55a:
    II(0x100bb55a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb55e, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bb564, 0x7)   mov(ax, memw_a32(ds, eax + 0x101ca550)); /* mov ax, [eax+0x101ca550] */
    II(0x100bb56b, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
    II(0x100bb571, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb575, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bb57b, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100bb581, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bb586, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100bb589, 0x2)   jzd(0x100bb5af, 0x24);                /* jz 0x100bb5af */
    II(0x100bb58b, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x100bb591, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100bb595, 0x2)   jld(0x100bb5a3, 0xc);                 /* jl 0x100bb5a3 */
    II(0x100bb597, 0xa)   add(memd_a32(ss, ebp - 0xa0), 0x3e8); /* add dword [ebp+0xffffff60], 0x3e8 */
    II(0x100bb5a1, 0x2)   jmpd(0x100bb5af, 0xc);                /* jmp 0x100bb5af */
l_0x100bb5a3:
    II(0x100bb5a3, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x100bb5a9, 0x6)   inc(memd_a32(ss, ebp - 0xa0));        /* inc dword [ebp+0xffffff60] */
l_0x100bb5af:
    II(0x100bb5af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb5b2, 0x3)   mov(eax, memd_a32(ds, eax + 0x79));   /* mov eax, [eax+0x79] */
    II(0x100bb5b5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb5b8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb5ba, 0x2)   jld(0x100bb5c8, 0xc);                 /* jl 0x100bb5c8 */
    II(0x100bb5bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bb5bf, 0x7)   cmp(ax, memw_a32(ss, ebp - 0xa0));    /* cmp ax, [ebp+0xffffff60] */
    II(0x100bb5c6, 0x2)   jged(0x100bb5ca, 0x2);                /* jge 0x100bb5ca */
l_0x100bb5c8:
    II(0x100bb5c8, 0x2)   jmpd(0x100bb5fb, 0x31);               /* jmp 0x100bb5fb */
l_0x100bb5ca:
    II(0x100bb5ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bb5cd, 0x7)   cmp(ax, memw_a32(ss, ebp - 0xa0));    /* cmp ax, [ebp+0xffffff60] */
    II(0x100bb5d4, 0x2)   jnzd(0x100bb5f9, 0x23);               /* jnz 0x100bb5f9 */
    II(0x100bb5d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb5d9, 0x3)   mov(edx, memd_a32(ds, eax + 0x79));   /* mov edx, [eax+0x79] */
    II(0x100bb5dc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bb5df, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100bb5e1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb5e5, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100bb5e7, 0x8)   mov(dx, memw_a32(ds, edx + ebp - 0x9c)); /* mov dx, [edx+ebp+0xffffff64] */
    II(0x100bb5ef, 0x8)   cmp(dx, memw_a32(ds, eax + ebp - 0x9c)); /* cmp dx, [eax+ebp+0xffffff64] */
    II(0x100bb5f7, 0x2)   jld(0x100bb5fb, 0x2);                 /* jl 0x100bb5fb */
l_0x100bb5f9:
    II(0x100bb5f9, 0x2)   jmpd(0x100bb60e, 0x13);               /* jmp 0x100bb60e */
l_0x100bb5fb:
    II(0x100bb5fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb5fe, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100bb601, 0x4)   mov(memw_a32(ds, edx + 0x7b), ax);    /* mov [edx+0x7b], ax */
    II(0x100bb605, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x100bb60b, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x100bb60e:
    II(0x100bb60e, 0x5)   jmpd(0x100bb510, -0x103);             /* jmp 0x100bb510 */
l_0x100bb613:
    II(0x100bb613, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb616, 0x4)   cmp(memb_a32(ds, eax + 0xe), 0);      /* cmp byte [eax+0xe], 0x0 */
    II(0x100bb61a, 0x6)   jzd(0x100bc505, 0xee5);               /* jz dword 0x100bc505 */
    II(0x100bb620, 0x5)   mov(eax, 0x17);                       /* mov eax, 0x17 */
    II(0x100bb625, 0x5)   calld(sys_new, 0xaa7d6);              /* call 0x10165e00 */
    II(0x100bb62a, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
//    II(0x100bb630, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x100bb636, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x100bb63c, 0x7)   cmp(memd_a32(ss, ebp - 0xa8), 0);     /* cmp dword [ebp+0xffffff58], 0x0 */
    II(0x100bb643, 0x2)   jzd(0x100bb66a, 0x25);                /* jz 0x100bb66a */
    II(0x100bb645, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb648, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bb64b, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x100bb651, 0x5)   calld(0x1007c9c6, -0x3ec90);          /* call 0x1007c9c6 */
    II(0x100bb656, 0x6)   mov(memd_a32(ss, ebp - 0xac), eax);   /* mov [ebp+0xffffff54], eax */
//    II(0x100bb65c, 0x6)   mov(eax, memd_a32(ss, ebp - 0xac));   /* mov eax, [ebp+0xffffff54] */
    II(0x100bb662, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
    II(0x100bb668, 0x2)   jmpd(0x100bb676, 0xc);                /* jmp 0x100bb676 */
l_0x100bb66a:
    II(0x100bb66a, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x100bb670, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
l_0x100bb676:
    II(0x100bb676, 0x6)   mov(edx, memd_a32(ss, ebp - 0xb0));   /* mov edx, [ebp+0xffffff50] */
    II(0x100bb67c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb67f, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100bb682, 0x5)   calld(0x1008afe4, -0x306a3);          /* call 0x1008afe4 */
    II(0x100bb687, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb68a, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100bb68d, 0x5)   calld(0x1008af84, -0x3070e);          /* call 0x1008af84 */
    II(0x100bb692, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bb694, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bb699, 0x5)   calld(0x100a4d50, -0x1694e);          /* call 0x100a4d50 */
    II(0x100bb69e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb6a1, 0x4)   cmp(memb_a32(ds, eax + 0x2), 0);      /* cmp byte [eax+0x2], 0x0 */
    II(0x100bb6a5, 0x6)   jnzd(0x100bb745, 0x9a);               /* jnz dword 0x100bb745 */
    II(0x100bb6ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb6ae, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bb6b1, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bb6b7, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca4ef)); /* mov al, [eax+0x101ca4ef] */
    II(0x100bb6bd, 0x6)   mov(memb_a32(ss, ebp - 0xb4), al);    /* mov [ebp+0xffffff4c], al */
    II(0x100bb6c3, 0x2)   jmpd(0x100bb71c, 0x57);               /* jmp 0x100bb71c */
l_0x100bb6c5:
    II(0x100bb6c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb6c8, 0x4)   mov(memb_a32(ds, eax + 0x2), 0x3);    /* mov byte [eax+0x2], 0x3 */
    II(0x100bb6cc, 0x5)   jmpd(0x100bb745, 0x74);               /* jmp 0x100bb745 */
l_0x100bb6d1:
    II(0x100bb6d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb6d4, 0x4)   mov(memb_a32(ds, eax + 0x2), 0x4);    /* mov byte [eax+0x2], 0x4 */
    II(0x100bb6d8, 0x2)   jmpd(0x100bb745, 0x6b);               /* jmp 0x100bb745 */
l_0x100bb6da:
    II(0x100bb6da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb6dd, 0x4)   mov(memb_a32(ds, eax + 0x2), 0x2);    /* mov byte [eax+0x2], 0x2 */
    II(0x100bb6e1, 0x2)   jmpd(0x100bb745, 0x62);               /* jmp 0x100bb745 */
l_0x100bb6e3:
    II(0x100bb6e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb6e6, 0x4)   mov(memb_a32(ds, eax + 0x2), 0x7);    /* mov byte [eax+0x2], 0x7 */
    II(0x100bb6ea, 0x2)   jmpd(0x100bb745, 0x59);               /* jmp 0x100bb745 */
l_0x100bb6ec:
    II(0x100bb6ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb6ef, 0x4)   mov(memb_a32(ds, eax + 0x2), 0x1);    /* mov byte [eax+0x2], 0x1 */
    II(0x100bb6f3, 0x2)   jmpd(0x100bb745, 0x50);               /* jmp 0x100bb745 */
l_0x100bb6f5:
    II(0x100bb6f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb6f8, 0x4)   mov(memb_a32(ds, eax + 0x2), 0x8);    /* mov byte [eax+0x2], 0x8 */
    II(0x100bb6fc, 0x2)   jmpd(0x100bb745, 0x47);               /* jmp 0x100bb745 */
//    II(0x100bb6fe, 0x2)   /* Выравнивание. */
//    II(0x100bb700, 0x1c)  /* Служебная область с абсолютными адресами переходов. {0x100bb6c5, 0x100bb6d1, 0x100bb6f5, 0x100bb6da, 0x100bb6f5, 0x100bb6e3, 0x100bb6ec}. */
l_0x100bb71c:
    II(0x100bb71c, 0x6)   mov(al, memb_a32(ss, ebp - 0xb4));    /* mov al, [ebp+0xffffff4c] */
    II(0x100bb722, 0x2)   dec(al);                              /* dec al */
    II(0x100bb724, 0x6)   mov(memb_a32(ss, ebp - 0xb8), al);    /* mov [ebp+0xffffff48], al */
    II(0x100bb72a, 0x7)   cmp(memb_a32(ss, ebp - 0xb8), 0x6);   /* cmp byte [ebp+0xffffff48], 0x6 */
    II(0x100bb731, 0x2)   jad(0x100bb6f5, -0x3e);               /* ja 0x100bb6f5 */
    II(0x100bb733, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100bb735, 0x6)   mov(al, memb_a32(ss, ebp - 0xb8));    /* mov al, [ebp+0xffffff48] */
    II(0x100bb73b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bb73e, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x100bb700), (0x100bb6c5)(0x100bb6d1)(0x100bb6da)(0x100bb6e3)(0x100bb6ec)(0x100bb6f5)); /* jmp dword near [cs:eax+0x100bb700] */
l_0x100bb745:
    II(0x100bb745, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb748, 0x3)   mov(eax, memd_a32(ds, eax + 0x1));    /* mov eax, [eax+0x1] */
    II(0x100bb74b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb74e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb750, 0x2)   jnzd(0x100bb75a, 0x8);                /* jnz 0x100bb75a */
    II(0x100bb752, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb755, 0x5)   calld(0x100c4051, 0x88f7);            /* call 0x100c4051 */
l_0x100bb75a:
    II(0x100bb75a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb75d, 0x3)   mov(eax, memd_a32(ds, eax + 0x3));    /* mov eax, [eax+0x3] */
    II(0x100bb760, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb763, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb765, 0x2)   jged(0x100bb76f, 0x8);                /* jge 0x100bb76f */
    II(0x100bb767, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb76a, 0x5)   calld(0x100c409c, 0x892d);            /* call 0x100c409c */
l_0x100bb76f:
    II(0x100bb76f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb772, 0x3)   mov(eax, memd_a32(ds, eax + 0x5));    /* mov eax, [eax+0x5] */
    II(0x100bb775, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb778, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb77a, 0x2)   jged(0x100bb784, 0x8);                /* jge 0x100bb784 */
    II(0x100bb77c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb77f, 0x5)   calld(0x100c4162, 0x89de);            /* call 0x100c4162 */
l_0x100bb784:
    II(0x100bb784, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb787, 0x5)   calld(0x100ba6d6, -0x10b6);           /* call 0x100ba6d6 */
    II(0x100bb78c, 0x7)   mov(dx, memw_a32(ds, 0x101c8172));    /* mov dx, [0x101c8172] */
    II(0x100bb793, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb796, 0x4)   mov(memw_a32(ds, eax + 0x61), dx);    /* mov [eax+0x61], dx */
    II(0x100bb79a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb79d, 0x4)   cmp(memd_a32(ds, eax + 0x63), 0);     /* cmp dword [eax+0x63], 0x0 */
    II(0x100bb7a1, 0x6)   jnzd(0x100bb821, 0x7a);               /* jnz dword 0x100bb821 */
    II(0x100bb7a7, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100bb7ac, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb7af, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bb7b2, 0x5)   calld(sys_new_arr, 0xaa859);          /* call 0x10166010 */
    II(0x100bb7b7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bb7b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb7bc, 0x3)   mov(memd_a32(ds, eax + 0x63), edx);   /* mov [eax+0x63], edx */
    II(0x100bb7bf, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100bb7c6, 0x2)   jmpd(0x100bb7ce, 0x6);                /* jmp 0x100bb7ce */
l_0x100bb7c8:
    II(0x100bb7c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb7cb, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100bb7ce:
    II(0x100bb7ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb7d1, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100bb7d8, 0x2)   jged(0x100bb821, 0x47);               /* jge 0x100bb821 */
    II(0x100bb7da, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100bb7df, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb7e2, 0x5)   calld(sys_new_arr, 0xaa829);          /* call 0x10166010 */
    II(0x100bb7e7, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100bb7e9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb7ed, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bb7f0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bb7f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb7f5, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bb7f8, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bb7fa, 0x2)   mov(memd_a32(ds, eax), ebx);          /* mov [eax], ebx */
    II(0x100bb7fc, 0x6)   mov(ebx, memd_a32(ds, 0x101c8172));   /* mov ebx, [0x101c8172] */
    II(0x100bb802, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bb805, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bb807, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb80b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bb80e, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100bb810, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb813, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bb816, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x100bb818, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bb81a, 0x5)   calld(sys_memset, 0xaa5c1);           /* call 0x10165de0 */
    II(0x100bb81f, 0x2)   jmpd(0x100bb7c8, -0x59);              /* jmp 0x100bb7c8 */
l_0x100bb821:
    II(0x100bb821, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb824, 0x4)   cmp(memd_a32(ds, eax + 0x67), 0);     /* cmp dword [eax+0x67], 0x0 */
    II(0x100bb828, 0x6)   jnzd(0x100bb8a8, 0x7a);               /* jnz dword 0x100bb8a8 */
    II(0x100bb82e, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100bb833, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb836, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bb839, 0x5)   calld(sys_new_arr, 0xaa7d2);          /* call 0x10166010 */
    II(0x100bb83e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bb840, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb843, 0x3)   mov(memd_a32(ds, eax + 0x67), edx);   /* mov [eax+0x67], edx */
    II(0x100bb846, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100bb84d, 0x2)   jmpd(0x100bb855, 0x6);                /* jmp 0x100bb855 */
l_0x100bb84f:
    II(0x100bb84f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb852, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100bb855:
    II(0x100bb855, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb858, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100bb85f, 0x2)   jged(0x100bb8a8, 0x47);               /* jge 0x100bb8a8 */
    II(0x100bb861, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100bb866, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bb869, 0x5)   calld(sys_new_arr, 0xaa7a2);          /* call 0x10166010 */
    II(0x100bb86e, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100bb870, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb874, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bb877, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bb879, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb87c, 0x3)   mov(eax, memd_a32(ds, eax + 0x67));   /* mov eax, [eax+0x67] */
    II(0x100bb87f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bb881, 0x2)   mov(memd_a32(ds, eax), ebx);          /* mov [eax], ebx */
    II(0x100bb883, 0x6)   mov(ebx, memd_a32(ds, 0x101c8172));   /* mov ebx, [0x101c8172] */
    II(0x100bb889, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bb88c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bb88e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bb892, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bb895, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100bb897, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb89a, 0x3)   mov(eax, memd_a32(ds, eax + 0x67));   /* mov eax, [eax+0x67] */
    II(0x100bb89d, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x100bb89f, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bb8a1, 0x5)   calld(sys_memset, 0xaa53a);           /* call 0x10165de0 */
    II(0x100bb8a6, 0x2)   jmpd(0x100bb84f, -0x59);              /* jmp 0x100bb84f */
l_0x100bb8a8:
    II(0x100bb8a8, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100bb8af, 0x2)   jmpd(0x100bb8b7, 0x6);                /* jmp 0x100bb8b7 */
l_0x100bb8b1:
    II(0x100bb8b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb8b4, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100bb8b7:
    II(0x100bb8b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bb8ba, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100bb8c1, 0x6)   jged(0x100bb94a, 0x83);               /* jge dword 0x100bb94a */
    II(0x100bb8c7, 0xa)   mov(memd_a32(ss, ebp - 0xbc), 0);     /* mov dword [ebp+0xffffff44], 0x0 */
    II(0x100bb8d1, 0x2)   jmpd(0x100bb8df, 0xc);                /* jmp 0x100bb8df */
l_0x100bb8d3:
    II(0x100bb8d3, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x100bb8d9, 0x6)   inc(memd_a32(ss, ebp - 0xbc));        /* inc dword [ebp+0xffffff44] */
l_0x100bb8df:
    II(0x100bb8df, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x100bb8e5, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100bb8ec, 0x2)   jged(0x100bb945, 0x57);               /* jge 0x100bb945 */
    II(0x100bb8ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb8f1, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bb8f4, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bb8fa, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0xbc)); /* movsx ebx, word [ebp+0xffffff44] */
    II(0x100bb901, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x100bb907, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bb90a, 0x3)   imul(ebx, edx);                       /* imul ebx, edx */
    II(0x100bb90d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100bb911, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x100bb913, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x100bb919, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bb91b, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100bb91d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bb922, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb924, 0x2)   jzd(0x100bb943, 0x1d);                /* jz 0x100bb943 */
    II(0x100bb926, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100bb92a, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100bb92d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb930, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bb933, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bb935, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xbc)); /* movsx edx, word [ebp+0xffffff44] */
    II(0x100bb93c, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bb93e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bb940, 0x3)   mov(memb_a32(ds, eax), 0x1);          /* mov byte [eax], 0x1 */
l_0x100bb943:
    II(0x100bb943, 0x2)   jmpd(0x100bb8d3, -0x72);              /* jmp 0x100bb8d3 */
l_0x100bb945:
    II(0x100bb945, 0x5)   jmpd(0x100bb8b1, -0x99);              /* jmp 0x100bb8b1 */
l_0x100bb94a:
    II(0x100bb94a, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x8c)); /* movsx eax, word [ebp+0xffffff74] */
    II(0x100bb951, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb953, 0x2)   jnzd(0x100bb964, 0xf);                /* jnz 0x100bb964 */
    II(0x100bb955, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x8a)); /* movsx eax, word [ebp+0xffffff76] */
    II(0x100bb95c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bb95e, 0x6)   jzd(0x100bbb37, 0x1d3);               /* jz dword 0x100bbb37 */
l_0x100bb964:
    II(0x100bb964, 0x5)   mov(eax, 0x23);                       /* mov eax, 0x23 */
    II(0x100bb969, 0x5)   calld(sys_new, 0xaa492);              /* call 0x10165e00 */
    II(0x100bb96e, 0x6)   mov(memd_a32(ss, ebp - 0xc0), eax);   /* mov [ebp+0xffffff40], eax */
//    II(0x100bb974, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc0));   /* mov eax, [ebp+0xffffff40] */
    II(0x100bb97a, 0x6)   mov(memd_a32(ss, ebp - 0xc4), eax);   /* mov [ebp+0xffffff3c], eax */
    II(0x100bb980, 0x7)   cmp(memd_a32(ss, ebp - 0xc4), 0);     /* cmp dword [ebp+0xffffff3c], 0x0 */
    II(0x100bb987, 0x2)   jzd(0x100bb9c1, 0x38);                /* jz 0x100bb9c1 */
    II(0x100bb989, 0x6)   lea(edx, ebp - 0x8c);                 /* lea edx, [ebp+0xffffff74] */
    II(0x100bb98f, 0x6)   lea(eax, ebp - 0xc8);                 /* lea eax, [ebp+0xffffff38] */
    II(0x100bb995, 0x5)   calld(0x10075e64, -0x45b36);          /* call 0x10075e64 */
    II(0x100bb99a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100bb99c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bb99f, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bb9a2, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc0));   /* mov eax, [ebp+0xffffff40] */
    II(0x100bb9a8, 0x5)   calld(0x1009e3ec, -0x1d5c1);          /* call 0x1009e3ec */
    II(0x100bb9ad, 0x6)   mov(memd_a32(ss, ebp - 0xcc), eax);   /* mov [ebp+0xffffff34], eax */
//    II(0x100bb9b3, 0x6)   mov(eax, memd_a32(ss, ebp - 0xcc));   /* mov eax, [ebp+0xffffff34] */
    II(0x100bb9b9, 0x6)   mov(memd_a32(ss, ebp - 0xd0), eax);   /* mov [ebp+0xffffff30], eax */
    II(0x100bb9bf, 0x2)   jmpd(0x100bb9cd, 0xc);                /* jmp 0x100bb9cd */
l_0x100bb9c1:
    II(0x100bb9c1, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc4));   /* mov eax, [ebp+0xffffff3c] */
    II(0x100bb9c7, 0x6)   mov(memd_a32(ss, ebp - 0xd0), eax);   /* mov [ebp+0xffffff30], eax */
l_0x100bb9cd:
    II(0x100bb9cd, 0x6)   mov(edx, memd_a32(ss, ebp - 0xd0));   /* mov edx, [ebp+0xffffff30] */
    II(0x100bb9d3, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100bb9d9, 0x5)   calld(0x1008b060, -0x3097e);          /* call 0x1008b060 */
    II(0x100bb9de, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100bb9e3, 0x5)   calld(0x10076338, -0x456b0);          /* call 0x10076338 */
    II(0x100bb9e8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bb9ea, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x100bb9f0, 0x5)   calld(0x100764b8, -0x4553d);          /* call 0x100764b8 */
    II(0x100bb9f5, 0x2)   jmpd(0x100bba02, 0xb);                /* jmp 0x100bba02 */
l_0x100bb9f7:
    II(0x100bb9f7, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x100bb9fd, 0x5)   calld(0x10076bf8, -0x44e0a);          /* call 0x10076bf8 */
l_0x100bba02:
    II(0x100bba02, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bba04, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x100bba0a, 0x5)   calld(0x1013ad71, 0x7f362);           /* call 0x1013ad71 */
    II(0x100bba0f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bba11, 0x2)   jzd(0x100bba75, 0x62);                /* jz 0x100bba75 */
    II(0x100bba13, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x100bba19, 0x5)   calld(0x100763a0, -0x4567e);          /* call 0x100763a0 */
    II(0x100bba1e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bba20, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bba23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bba26, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bba29, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bba2b, 0x2)   jnzd(0x100bba3f, 0x12);               /* jnz 0x100bba3f */
    II(0x100bba2d, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x100bba33, 0x5)   calld(0x100763a0, -0x45698);          /* call 0x100763a0 */
    II(0x100bba38, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x39);   /* cmp word [eax+0x8], 0x39 */
    II(0x100bba3d, 0x2)   jzd(0x100bba41, 0x2);                 /* jz 0x100bba41 */
l_0x100bba3f:
    II(0x100bba3f, 0x2)   jmpd(0x100bba73, 0x32);               /* jmp 0x100bba73 */
l_0x100bba41:
    II(0x100bba41, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100bba47, 0x5)   calld(0x1008af28, -0x30b24);          /* call 0x1008af28 */
    II(0x100bba4c, 0x6)   mov(memd_a32(ss, ebp - 0xdc), eax);   /* mov [ebp+0xffffff24], eax */
//    II(0x100bba52, 0x6)   mov(eax, memd_a32(ss, ebp - 0xdc));   /* mov eax, [ebp+0xffffff24] */
    II(0x100bba58, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100bba5b, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x100bba61, 0x5)   calld(0x10076408, -0x4565e);          /* call 0x10076408 */
    II(0x100bba66, 0x6)   mov(ecx, memd_a32(ss, ebp - 0xdc));   /* mov ecx, [ebp+0xffffff24] */
    II(0x100bba6c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bba6e, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bba70, 0x3)   calld_abs(memd_a32(ds, ebx + 0x2c));  /* call dword near [ebx+0x2c] */
l_0x100bba73:
    II(0x100bba73, 0x2)   jmpd(0x100bb9f7, -0x7e);              /* jmp 0x100bb9f7 */
l_0x100bba75:
    II(0x100bba75, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100bba7b, 0x5)   calld(0x1008af84, -0x30afc);          /* call 0x1008af84 */
    II(0x100bba80, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bba82, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bba87, 0x5)   calld(0x100a4d50, -0x16d3c);          /* call 0x100a4d50 */
    II(0x100bba8c, 0x5)   mov(eax, 0x85);                       /* mov eax, 0x85 */
    II(0x100bba91, 0x5)   calld(sys_new, 0xaa36a);              /* call 0x10165e00 */
    II(0x100bba96, 0x6)   mov(memd_a32(ss, ebp - 0xe0), eax);   /* mov [ebp+0xffffff20], eax */
//    II(0x100bba9c, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe0));   /* mov eax, [ebp+0xffffff20] */
    II(0x100bbaa2, 0x6)   mov(memd_a32(ss, ebp - 0xe4), eax);   /* mov [ebp+0xffffff1c], eax */
    II(0x100bbaa8, 0x7)   cmp(memd_a32(ss, ebp - 0xe4), 0);     /* cmp dword [ebp+0xffffff1c], 0x0 */
    II(0x100bbaaf, 0x2)   jzd(0x100bbae9, 0x38);                /* jz 0x100bbae9 */
    II(0x100bbab1, 0x6)   lea(edx, ebp - 0x8c);                 /* lea edx, [ebp+0xffffff74] */
    II(0x100bbab7, 0x6)   lea(eax, ebp - 0xe8);                 /* lea eax, [ebp+0xffffff18] */
    II(0x100bbabd, 0x5)   calld(0x10075e64, -0x45c5e);          /* call 0x10075e64 */
    II(0x100bbac2, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100bbac4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbac7, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bbaca, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe0));   /* mov eax, [ebp+0xffffff20] */
    II(0x100bbad0, 0x5)   calld(0x1009e9be, -0x1d117);          /* call 0x1009e9be */
    II(0x100bbad5, 0x6)   mov(memd_a32(ss, ebp - 0xec), eax);   /* mov [ebp+0xffffff14], eax */
//    II(0x100bbadb, 0x6)   mov(eax, memd_a32(ss, ebp - 0xec));   /* mov eax, [ebp+0xffffff14] */
    II(0x100bbae1, 0x6)   mov(memd_a32(ss, ebp - 0xf0), eax);   /* mov [ebp+0xffffff10], eax */
    II(0x100bbae7, 0x2)   jmpd(0x100bbaf5, 0xc);                /* jmp 0x100bbaf5 */
l_0x100bbae9:
    II(0x100bbae9, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe4));   /* mov eax, [ebp+0xffffff1c] */
    II(0x100bbaef, 0x6)   mov(memd_a32(ss, ebp - 0xf0), eax);   /* mov [ebp+0xffffff10], eax */
l_0x100bbaf5:
    II(0x100bbaf5, 0x6)   mov(edx, memd_a32(ss, ebp - 0xf0));   /* mov edx, [ebp+0xffffff10] */
    II(0x100bbafb, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100bbb01, 0x5)   calld(0x1008afe4, -0x30b22);          /* call 0x1008afe4 */
    II(0x100bbb06, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100bbb0c, 0x5)   calld(0x1008af84, -0x30b8d);          /* call 0x1008af84 */
    II(0x100bbb11, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbb13, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bbb18, 0x5)   calld(0x100a4d50, -0x16dcd);          /* call 0x100a4d50 */
    II(0x100bbb1d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbb1f, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x100bbb25, 0x5)   calld(0x10075f6c, -0x45bbe);          /* call 0x10075f6c */
    II(0x100bbb2a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbb2c, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100bbb32, 0x5)   calld(0x10088b7c, -0x32fbb);          /* call 0x10088b7c */
l_0x100bbb37:
    II(0x100bbb37, 0x5)   mov(eax, 0x101c8178);                 /* mov eax, 0x101c8178 */
    II(0x100bbb3c, 0x5)   calld(0x10076338, -0x45809);          /* call 0x10076338 */
    II(0x100bbb41, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bbb44, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbb46, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bbb48, 0x5)   calld(0x1007643c, -0x45711);          /* call 0x1007643c */
    II(0x100bbb4d, 0x2)   jmpd(0x100bbb57, 0x8);                /* jmp 0x100bbb57 */
l_0x100bbb4f:
    II(0x100bbb4f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbb52, 0x5)   calld(0x10076bf8, -0x44f5f);          /* call 0x10076bf8 */
l_0x100bbb57:
    II(0x100bbb57, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbb59, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbb5c, 0x5)   calld(0x1013ad71, 0x7f210);           /* call 0x1013ad71 */
    II(0x100bbb61, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bbb63, 0x2)   jzd(0x100bbbc2, 0x5d);                /* jz 0x100bbbc2 */
    II(0x100bbb65, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbb68, 0x5)   calld(0x100763a0, -0x457cd);          /* call 0x100763a0 */
    II(0x100bbb6d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbb6f, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bbb72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbb75, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bbb78, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bbb7a, 0x2)   jnzd(0x100bbb8a, 0xe);                /* jnz 0x100bbb8a */
    II(0x100bbb7c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbb7f, 0x5)   calld(0x100763a0, -0x457e4);          /* call 0x100763a0 */
    II(0x100bbb84, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100bbb88, 0x2)   jnzd(0x100bbb8c, 0x2);                /* jnz 0x100bbb8c */
l_0x100bbb8a:
    II(0x100bbb8a, 0x2)   jmpd(0x100bbbac, 0x20);               /* jmp 0x100bbbac */
l_0x100bbb8c:
    II(0x100bbb8c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbb8f, 0x5)   calld(0x100763a0, -0x457f4);          /* call 0x100763a0 */
    II(0x100bbb94, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x21);   /* cmp word [eax+0x8], 0x21 */
    II(0x100bbb99, 0x2)   jzd(0x100bbbaa, 0xf);                 /* jz 0x100bbbaa */
    II(0x100bbb9b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbb9e, 0x5)   calld(0x100763a0, -0x45803);          /* call 0x100763a0 */
    II(0x100bbba3, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x27);   /* cmp word [eax+0x8], 0x27 */
    II(0x100bbba8, 0x2)   jnzd(0x100bbbac, 0x2);                /* jnz 0x100bbbac */
l_0x100bbbaa:
    II(0x100bbbaa, 0x2)   jmpd(0x100bbbae, 0x2);                /* jmp 0x100bbbae */
l_0x100bbbac:
    II(0x100bbbac, 0x2)   jmpd(0x100bbbc0, 0x12);               /* jmp 0x100bbbc0 */
l_0x100bbbae:
    II(0x100bbbae, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbbb1, 0x5)   calld(0x10076408, -0x457ae);          /* call 0x10076408 */
    II(0x100bbbb6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbbb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbbbb, 0x5)   calld(0x100ba131, -0x1a8f);           /* call 0x100ba131 */
l_0x100bbbc0:
    II(0x100bbbc0, 0x2)   jmpd(0x100bbb4f, -0x73);              /* jmp 0x100bbb4f */
l_0x100bbbc2:
    II(0x100bbbc2, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bbbc7, 0x5)   calld(0x10076338, -0x45894);          /* call 0x10076338 */
    II(0x100bbbcc, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bbbcf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbbd1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bbbd3, 0x5)   calld(0x1007643c, -0x4579c);          /* call 0x1007643c */
    II(0x100bbbd8, 0x2)   jmpd(0x100bbbe2, 0x8);                /* jmp 0x100bbbe2 */
l_0x100bbbda:
    II(0x100bbbda, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbbdd, 0x5)   calld(0x10076bf8, -0x44fea);          /* call 0x10076bf8 */
l_0x100bbbe2:
    II(0x100bbbe2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbbe4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbbe7, 0x5)   calld(0x1013ad71, 0x7f185);           /* call 0x1013ad71 */
    II(0x100bbbec, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bbbee, 0x2)   jzd(0x100bbc2b, 0x3b);                /* jz 0x100bbc2b */
    II(0x100bbbf0, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbbf3, 0x5)   calld(0x100763a0, -0x45858);          /* call 0x100763a0 */
    II(0x100bbbf8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbbfa, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bbbfd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbc00, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bbc03, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bbc05, 0x2)   jnzd(0x100bbc15, 0xe);                /* jnz 0x100bbc15 */
    II(0x100bbc07, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbc0a, 0x5)   calld(0x100763a0, -0x4586f);          /* call 0x100763a0 */
    II(0x100bbc0f, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100bbc13, 0x2)   jnzd(0x100bbc17, 0x2);                /* jnz 0x100bbc17 */
l_0x100bbc15:
    II(0x100bbc15, 0x2)   jmpd(0x100bbc29, 0x12);               /* jmp 0x100bbc29 */
l_0x100bbc17:
    II(0x100bbc17, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbc1a, 0x5)   calld(0x10076408, -0x45817);          /* call 0x10076408 */
    II(0x100bbc1f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbc21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbc24, 0x5)   calld(0x100ba131, -0x1af8);           /* call 0x100ba131 */
l_0x100bbc29:
    II(0x100bbc29, 0x2)   jmpd(0x100bbbda, -0x51);              /* jmp 0x100bbbda */
l_0x100bbc2b:
    II(0x100bbc2b, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100bbc30, 0x5)   calld(0x10076338, -0x458fd);          /* call 0x10076338 */
    II(0x100bbc35, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bbc38, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbc3a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bbc3c, 0x5)   calld(0x1007643c, -0x45805);          /* call 0x1007643c */
    II(0x100bbc41, 0x2)   jmpd(0x100bbc4b, 0x8);                /* jmp 0x100bbc4b */
l_0x100bbc43:
    II(0x100bbc43, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbc46, 0x5)   calld(0x10076bf8, -0x45053);          /* call 0x10076bf8 */
l_0x100bbc4b:
    II(0x100bbc4b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbc4d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbc50, 0x5)   calld(0x1013ad71, 0x7f11c);           /* call 0x1013ad71 */
    II(0x100bbc55, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bbc57, 0x2)   jzd(0x100bbc92, 0x39);                /* jz 0x100bbc92 */
    II(0x100bbc59, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbc5c, 0x5)   calld(0x100763a0, -0x458c1);          /* call 0x100763a0 */
    II(0x100bbc61, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbc63, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bbc66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbc69, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bbc6c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bbc6e, 0x2)   jnzd(0x100bbc90, 0x20);               /* jnz 0x100bbc90 */
    II(0x100bbc70, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbc73, 0x5)   calld(0x100763a0, -0x458d8);          /* call 0x100763a0 */
    II(0x100bbc78, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x100bbc7c, 0x2)   jnzd(0x100bbc90, 0x12);               /* jnz 0x100bbc90 */
    II(0x100bbc7e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbc81, 0x5)   calld(0x10076408, -0x4587e);          /* call 0x10076408 */
    II(0x100bbc86, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbc88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbc8b, 0x5)   calld(0x100ba131, -0x1b5f);           /* call 0x100ba131 */
l_0x100bbc90:
    II(0x100bbc90, 0x2)   jmpd(0x100bbc43, -0x4f);              /* jmp 0x100bbc43 */
l_0x100bbc92:
    II(0x100bbc92, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100bbc97, 0x5)   calld(0x10076338, -0x45964);          /* call 0x10076338 */
    II(0x100bbc9c, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bbc9f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbca1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bbca3, 0x5)   calld(0x1007643c, -0x4586c);          /* call 0x1007643c */
    II(0x100bbca8, 0x2)   jmpd(0x100bbcb2, 0x8);                /* jmp 0x100bbcb2 */
l_0x100bbcaa:
    II(0x100bbcaa, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbcad, 0x5)   calld(0x10076bf8, -0x450ba);          /* call 0x10076bf8 */
l_0x100bbcb2:
    II(0x100bbcb2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbcb4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbcb7, 0x5)   calld(0x1013ad71, 0x7f0b5);           /* call 0x1013ad71 */
    II(0x100bbcbc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bbcbe, 0x6)   jzd(0x100bbd6f, 0xab);                /* jz dword 0x100bbd6f */
    II(0x100bbcc4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbcc7, 0x5)   calld(0x100763a0, -0x4592c);          /* call 0x100763a0 */
    II(0x100bbccc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbcce, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bbcd1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbcd4, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bbcd7, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bbcd9, 0x2)   jnzd(0x100bbce9, 0xe);                /* jnz 0x100bbce9 */
    II(0x100bbcdb, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbcde, 0x5)   calld(0x100763a0, -0x45943);          /* call 0x100763a0 */
    II(0x100bbce3, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100bbce7, 0x2)   jzd(0x100bbceb, 0x2);                 /* jz 0x100bbceb */
l_0x100bbce9:
    II(0x100bbce9, 0x2)   jmpd(0x100bbcf9, 0xe);                /* jmp 0x100bbcf9 */
l_0x100bbceb:
    II(0x100bbceb, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbcee, 0x5)   calld(0x100763a0, -0x45953);          /* call 0x100763a0 */
    II(0x100bbcf3, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x4);   /* cmp byte [eax+0x3e], 0x4 */
    II(0x100bbcf7, 0x2)   jzd(0x100bbcfb, 0x2);                 /* jz 0x100bbcfb */
l_0x100bbcf9:
    II(0x100bbcf9, 0x2)   jmpd(0x100bbd6a, 0x6f);               /* jmp 0x100bbd6a */
l_0x100bbcfb:
    II(0x100bbcfb, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100bbd00, 0x5)   calld(sys_new, 0xaa0fb);              /* call 0x10165e00 */
    II(0x100bbd05, 0x6)   mov(memd_a32(ss, ebp - 0xf4), eax);   /* mov [ebp+0xffffff0c], eax */
//    II(0x100bbd0b, 0x6)   mov(eax, memd_a32(ss, ebp - 0xf4));   /* mov eax, [ebp+0xffffff0c] */
    II(0x100bbd11, 0x6)   mov(memd_a32(ss, ebp - 0xf8), eax);   /* mov [ebp+0xffffff08], eax */
    II(0x100bbd17, 0x7)   cmp(memd_a32(ss, ebp - 0xf8), 0);     /* cmp dword [ebp+0xffffff08], 0x0 */
    II(0x100bbd1e, 0x2)   jzd(0x100bbd4e, 0x2e);                /* jz 0x100bbd4e */
    II(0x100bbd20, 0x5)   mov(ebx, 0x100ba9c2);                 /* mov ebx, 0x100ba9c2 */
    II(0x100bbd25, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbd28, 0x5)   calld(0x100763d4, -0x45959);          /* call 0x100763d4 */
    II(0x100bbd2d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbd2f, 0x6)   mov(eax, memd_a32(ss, ebp - 0xf4));   /* mov eax, [ebp+0xffffff0c] */
    II(0x100bbd35, 0x5)   calld(0x100ac45d, -0xf8dd);           /* call 0x100ac45d */
    II(0x100bbd3a, 0x6)   mov(memd_a32(ss, ebp - 0xfc), eax);   /* mov [ebp+0xffffff04], eax */
//    II(0x100bbd40, 0x6)   mov(eax, memd_a32(ss, ebp - 0xfc));   /* mov eax, [ebp+0xffffff04] */
    II(0x100bbd46, 0x6)   mov(memd_a32(ss, ebp - 0x100), eax);  /* mov [ebp+0xffffff00], eax */
    II(0x100bbd4c, 0x2)   jmpd(0x100bbd5a, 0xc);                /* jmp 0x100bbd5a */
l_0x100bbd4e:
    II(0x100bbd4e, 0x6)   mov(eax, memd_a32(ss, ebp - 0xf8));   /* mov eax, [ebp+0xffffff08] */
    II(0x100bbd54, 0x6)   mov(memd_a32(ss, ebp - 0x100), eax);  /* mov [ebp+0xffffff00], eax */
l_0x100bbd5a:
    II(0x100bbd5a, 0x6)   mov(edx, memd_a32(ss, ebp - 0x100));  /* mov edx, [ebp+0xffffff00] */
    II(0x100bbd60, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bbd65, 0x5)   calld(0x100a4d50, -0x1701a);          /* call 0x100a4d50 */
l_0x100bbd6a:
    II(0x100bbd6a, 0x5)   jmpd(0x100bbcaa, -0xc5);              /* jmp 0x100bbcaa */
l_0x100bbd6f:
    II(0x100bbd6f, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100bbd74, 0x5)   calld(0x10076338, -0x45a41);          /* call 0x10076338 */
    II(0x100bbd79, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bbd7c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbd7e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bbd80, 0x5)   calld(0x1007643c, -0x45949);          /* call 0x1007643c */
    II(0x100bbd85, 0x2)   jmpd(0x100bbd8f, 0x8);                /* jmp 0x100bbd8f */
l_0x100bbd87:
    II(0x100bbd87, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbd8a, 0x5)   calld(0x10076bf8, -0x45197);          /* call 0x10076bf8 */
l_0x100bbd8f:
    II(0x100bbd8f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbd91, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbd94, 0x5)   calld(0x1013ad71, 0x7efd8);           /* call 0x1013ad71 */
    II(0x100bbd99, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bbd9b, 0x6)   jzd(0x100bbe79, 0xd8);                /* jz dword 0x100bbe79 */
    II(0x100bbda1, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbda4, 0x5)   calld(0x100763a0, -0x45a09);          /* call 0x100763a0 */
    II(0x100bbda9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbdab, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bbdae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbdb1, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bbdb4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bbdb6, 0x6)   jnzd(0x100bbe74, 0xb8);               /* jnz dword 0x100bbe74 */
    II(0x100bbdbc, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbdbf, 0x5)   calld(0x100763a0, -0x45a24);          /* call 0x100763a0 */
    II(0x100bbdc4, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4f);   /* cmp word [eax+0x8], 0x4f */
    II(0x100bbdc9, 0x2)   jzd(0x100bbdda, 0xf);                 /* jz 0x100bbdda */
    II(0x100bbdcb, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbdce, 0x5)   calld(0x100763a0, -0x45a33);          /* call 0x100763a0 */
    II(0x100bbdd3, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4d);   /* cmp word [eax+0x8], 0x4d */
    II(0x100bbdd8, 0x2)   jnzd(0x100bbe4b, 0x71);               /* jnz 0x100bbe4b */
l_0x100bbdda:
    II(0x100bbdda, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x100bbddf, 0x5)   calld(sys_new, 0xaa01c);              /* call 0x10165e00 */
    II(0x100bbde4, 0x6)   mov(memd_a32(ss, ebp - 0x104), eax);  /* mov [ebp+0xfffffefc], eax */
//    II(0x100bbdea, 0x6)   mov(eax, memd_a32(ss, ebp - 0x104));  /* mov eax, [ebp+0xfffffefc] */
    II(0x100bbdf0, 0x6)   mov(memd_a32(ss, ebp - 0x108), eax);  /* mov [ebp+0xfffffef8], eax */
    II(0x100bbdf6, 0x7)   cmp(memd_a32(ss, ebp - 0x108), 0);    /* cmp dword [ebp+0xfffffef8], 0x0 */
    II(0x100bbdfd, 0x2)   jzd(0x100bbe2f, 0x30);                /* jz 0x100bbe2f */
    II(0x100bbdff, 0x5)   mov(ebx, 0x4c);                       /* mov ebx, 0x4c */
    II(0x100bbe04, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbe07, 0x5)   calld(0x100763d4, -0x45a38);          /* call 0x100763d4 */
    II(0x100bbe0c, 0x6)   mov(ecx, memd_a32(ss, ebp - 0x104));  /* mov ecx, [ebp+0xfffffefc] */
    II(0x100bbe12, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbe14, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bbe16, 0x5)   calld(0x10087abb, -0x34360);          /* call 0x10087abb */
    II(0x100bbe1b, 0x6)   mov(memd_a32(ss, ebp - 0x10c), eax);  /* mov [ebp+0xfffffef4], eax */
//    II(0x100bbe21, 0x6)   mov(eax, memd_a32(ss, ebp - 0x10c));  /* mov eax, [ebp+0xfffffef4] */
    II(0x100bbe27, 0x6)   mov(memd_a32(ss, ebp - 0x110), eax);  /* mov [ebp+0xfffffef0], eax */
    II(0x100bbe2d, 0x2)   jmpd(0x100bbe3b, 0xc);                /* jmp 0x100bbe3b */
l_0x100bbe2f:
    II(0x100bbe2f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x108));  /* mov eax, [ebp+0xfffffef8] */
    II(0x100bbe35, 0x6)   mov(memd_a32(ss, ebp - 0x110), eax);  /* mov [ebp+0xfffffef0], eax */
l_0x100bbe3b:
    II(0x100bbe3b, 0x6)   mov(edx, memd_a32(ss, ebp - 0x110));  /* mov edx, [ebp+0xfffffef0] */
    II(0x100bbe41, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bbe46, 0x5)   calld(0x100a4d50, -0x170fb);          /* call 0x100a4d50 */
l_0x100bbe4b:
    II(0x100bbe4b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbe4e, 0x5)   calld(0x100763a0, -0x45ab3);          /* call 0x100763a0 */
    II(0x100bbe53, 0x5)   calld(0x1007623c, -0x45c1c);          /* call 0x1007623c */
    II(0x100bbe58, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x100bbe5b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bbe5e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bbe60, 0x2)   jled(0x100bbe74, 0x12);               /* jle 0x100bbe74 */
    II(0x100bbe62, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbe65, 0x5)   calld(0x100763d4, -0x45a96);          /* call 0x100763d4 */
    II(0x100bbe6a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbe6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbe6f, 0x5)   calld(0x100ba18e, -0x1ce6);           /* call 0x100ba18e */
l_0x100bbe74:
    II(0x100bbe74, 0x5)   jmpd(0x100bbd87, -0xf2);              /* jmp 0x100bbd87 */
l_0x100bbe79:
    II(0x100bbe79, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100bbe7e, 0x5)   calld(0x10076338, -0x45b4b);          /* call 0x10076338 */
    II(0x100bbe83, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bbe86, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbe88, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bbe8a, 0x5)   calld(0x1007643c, -0x45a53);          /* call 0x1007643c */
    II(0x100bbe8f, 0x2)   jmpd(0x100bbe99, 0x8);                /* jmp 0x100bbe99 */
l_0x100bbe91:
    II(0x100bbe91, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbe94, 0x5)   calld(0x10076bf8, -0x452a1);          /* call 0x10076bf8 */
l_0x100bbe99:
    II(0x100bbe99, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbe9b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbe9e, 0x5)   calld(0x1013ad71, 0x7eece);           /* call 0x1013ad71 */
    II(0x100bbea3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bbea5, 0x6)   jzd(0x100bc087, 0x1dc);               /* jz dword 0x100bc087 */
    II(0x100bbeab, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbeae, 0x5)   calld(0x100763a0, -0x45b13);          /* call 0x100763a0 */
    II(0x100bbeb3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bbeb5, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bbeb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bbebb, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bbebe, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bbec0, 0x6)   jnzd(0x100bc082, 0x1bc);              /* jnz dword 0x100bc082 */
    II(0x100bbec6, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbec9, 0x5)   calld(0x100763a0, -0x45b2e);          /* call 0x100763a0 */
    II(0x100bbece, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x36);   /* cmp word [eax+0x8], 0x36 */
    II(0x100bbed3, 0x2)   jzd(0x100bbee8, 0x13);                /* jz 0x100bbee8 */
    II(0x100bbed5, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbed8, 0x5)   calld(0x100763a0, -0x45b3d);          /* call 0x100763a0 */
    II(0x100bbedd, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3a);   /* cmp word [eax+0x8], 0x3a */
    II(0x100bbee2, 0x6)   jnzd(0x100bbfca, 0xe2);               /* jnz dword 0x100bbfca */
l_0x100bbee8:
    II(0x100bbee8, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x100bbeed, 0x5)   calld(sys_new, 0xa9f0e);              /* call 0x10165e00 */
    II(0x100bbef2, 0x6)   mov(memd_a32(ss, ebp - 0x114), eax);  /* mov [ebp+0xfffffeec], eax */
//    II(0x100bbef8, 0x6)   mov(eax, memd_a32(ss, ebp - 0x114));  /* mov eax, [ebp+0xfffffeec] */
    II(0x100bbefe, 0x6)   mov(memd_a32(ss, ebp - 0x118), eax);  /* mov [ebp+0xfffffee8], eax */
    II(0x100bbf04, 0x7)   cmp(memd_a32(ss, ebp - 0x118), 0);    /* cmp dword [ebp+0xfffffee8], 0x0 */
    II(0x100bbf0b, 0x2)   jzd(0x100bbf3d, 0x30);                /* jz 0x100bbf3d */
    II(0x100bbf0d, 0x5)   mov(ebx, 0x33);                       /* mov ebx, 0x33 */
    II(0x100bbf12, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbf15, 0x5)   calld(0x100763d4, -0x45b46);          /* call 0x100763d4 */
    II(0x100bbf1a, 0x6)   mov(ecx, memd_a32(ss, ebp - 0x114));  /* mov ecx, [ebp+0xfffffeec] */
    II(0x100bbf20, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbf22, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bbf24, 0x5)   calld(0x10087abb, -0x3446e);          /* call 0x10087abb */
    II(0x100bbf29, 0x6)   mov(memd_a32(ss, ebp - 0x11c), eax);  /* mov [ebp+0xfffffee4], eax */
//    II(0x100bbf2f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x11c));  /* mov eax, [ebp+0xfffffee4] */
    II(0x100bbf35, 0x6)   mov(memd_a32(ss, ebp - 0x120), eax);  /* mov [ebp+0xfffffee0], eax */
    II(0x100bbf3b, 0x2)   jmpd(0x100bbf49, 0xc);                /* jmp 0x100bbf49 */
l_0x100bbf3d:
    II(0x100bbf3d, 0x6)   mov(eax, memd_a32(ss, ebp - 0x118));  /* mov eax, [ebp+0xfffffee8] */
    II(0x100bbf43, 0x6)   mov(memd_a32(ss, ebp - 0x120), eax);  /* mov [ebp+0xfffffee0], eax */
l_0x100bbf49:
    II(0x100bbf49, 0x6)   mov(edx, memd_a32(ss, ebp - 0x120));  /* mov edx, [ebp+0xfffffee0] */
    II(0x100bbf4f, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bbf54, 0x5)   calld(0x100a4d50, -0x17209);          /* call 0x100a4d50 */
    II(0x100bbf59, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x100bbf5e, 0x5)   calld(sys_new, 0xa9e9d);              /* call 0x10165e00 */
    II(0x100bbf63, 0x6)   mov(memd_a32(ss, ebp - 0x124), eax);  /* mov [ebp+0xfffffedc], eax */
//    II(0x100bbf69, 0x6)   mov(eax, memd_a32(ss, ebp - 0x124));  /* mov eax, [ebp+0xfffffedc] */
    II(0x100bbf6f, 0x6)   mov(memd_a32(ss, ebp - 0x128), eax);  /* mov [ebp+0xfffffed8], eax */
    II(0x100bbf75, 0x7)   cmp(memd_a32(ss, ebp - 0x128), 0);    /* cmp dword [ebp+0xfffffed8], 0x0 */
    II(0x100bbf7c, 0x2)   jzd(0x100bbfae, 0x30);                /* jz 0x100bbfae */
    II(0x100bbf7e, 0x5)   mov(ebx, 0x37);                       /* mov ebx, 0x37 */
    II(0x100bbf83, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbf86, 0x5)   calld(0x100763d4, -0x45bb7);          /* call 0x100763d4 */
    II(0x100bbf8b, 0x6)   mov(ecx, memd_a32(ss, ebp - 0x124));  /* mov ecx, [ebp+0xfffffedc] */
    II(0x100bbf91, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bbf93, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bbf95, 0x5)   calld(0x10087abb, -0x344df);          /* call 0x10087abb */
    II(0x100bbf9a, 0x6)   mov(memd_a32(ss, ebp - 0x12c), eax);  /* mov [ebp+0xfffffed4], eax */
//    II(0x100bbfa0, 0x6)   mov(eax, memd_a32(ss, ebp - 0x12c));  /* mov eax, [ebp+0xfffffed4] */
    II(0x100bbfa6, 0x6)   mov(memd_a32(ss, ebp - 0x130), eax);  /* mov [ebp+0xfffffed0], eax */
    II(0x100bbfac, 0x2)   jmpd(0x100bbfba, 0xc);                /* jmp 0x100bbfba */
l_0x100bbfae:
    II(0x100bbfae, 0x6)   mov(eax, memd_a32(ss, ebp - 0x128));  /* mov eax, [ebp+0xfffffed8] */
    II(0x100bbfb4, 0x6)   mov(memd_a32(ss, ebp - 0x130), eax);  /* mov [ebp+0xfffffed0], eax */
l_0x100bbfba:
    II(0x100bbfba, 0x6)   mov(edx, memd_a32(ss, ebp - 0x130));  /* mov edx, [ebp+0xfffffed0] */
    II(0x100bbfc0, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bbfc5, 0x5)   calld(0x100a4d50, -0x1727a);          /* call 0x100a4d50 */
l_0x100bbfca:
    II(0x100bbfca, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbfcd, 0x5)   calld(0x100763a0, -0x45c32);          /* call 0x100763a0 */
    II(0x100bbfd2, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x37);   /* cmp word [eax+0x8], 0x37 */
    II(0x100bbfd7, 0x2)   jzd(0x100bbfe8, 0xf);                 /* jz 0x100bbfe8 */
    II(0x100bbfd9, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bbfdc, 0x5)   calld(0x100763a0, -0x45c41);          /* call 0x100763a0 */
    II(0x100bbfe1, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x44);   /* cmp word [eax+0x8], 0x44 */
    II(0x100bbfe6, 0x2)   jnzd(0x100bc059, 0x71);               /* jnz 0x100bc059 */
l_0x100bbfe8:
    II(0x100bbfe8, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x100bbfed, 0x5)   calld(sys_new, 0xa9e0e);              /* call 0x10165e00 */
    II(0x100bbff2, 0x6)   mov(memd_a32(ss, ebp - 0x134), eax);  /* mov [ebp+0xfffffecc], eax */
//    II(0x100bbff8, 0x6)   mov(eax, memd_a32(ss, ebp - 0x134));  /* mov eax, [ebp+0xfffffecc] */
    II(0x100bbffe, 0x6)   mov(memd_a32(ss, ebp - 0x138), eax);  /* mov [ebp+0xfffffec8], eax */
    II(0x100bc004, 0x7)   cmp(memd_a32(ss, ebp - 0x138), 0);    /* cmp dword [ebp+0xfffffec8], 0x0 */
    II(0x100bc00b, 0x2)   jzd(0x100bc03d, 0x30);                /* jz 0x100bc03d */
    II(0x100bc00d, 0x5)   mov(ebx, 0x4c);                       /* mov ebx, 0x4c */
    II(0x100bc012, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc015, 0x5)   calld(0x100763d4, -0x45c46);          /* call 0x100763d4 */
    II(0x100bc01a, 0x6)   mov(ecx, memd_a32(ss, ebp - 0x134));  /* mov ecx, [ebp+0xfffffecc] */
    II(0x100bc020, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc022, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bc024, 0x5)   calld(0x10087abb, -0x3456e);          /* call 0x10087abb */
    II(0x100bc029, 0x6)   mov(memd_a32(ss, ebp - 0x13c), eax);  /* mov [ebp+0xfffffec4], eax */
//    II(0x100bc02f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x13c));  /* mov eax, [ebp+0xfffffec4] */
    II(0x100bc035, 0x6)   mov(memd_a32(ss, ebp - 0x140), eax);  /* mov [ebp+0xfffffec0], eax */
    II(0x100bc03b, 0x2)   jmpd(0x100bc049, 0xc);                /* jmp 0x100bc049 */
l_0x100bc03d:
    II(0x100bc03d, 0x6)   mov(eax, memd_a32(ss, ebp - 0x138));  /* mov eax, [ebp+0xfffffec8] */
    II(0x100bc043, 0x6)   mov(memd_a32(ss, ebp - 0x140), eax);  /* mov [ebp+0xfffffec0], eax */
l_0x100bc049:
    II(0x100bc049, 0x6)   mov(edx, memd_a32(ss, ebp - 0x140));  /* mov edx, [ebp+0xfffffec0] */
    II(0x100bc04f, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bc054, 0x5)   calld(0x100a4d50, -0x17309);          /* call 0x100a4d50 */
l_0x100bc059:
    II(0x100bc059, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc05c, 0x5)   calld(0x100763a0, -0x45cc1);          /* call 0x100763a0 */
    II(0x100bc061, 0x5)   calld(0x1007623c, -0x45e2a);          /* call 0x1007623c */
    II(0x100bc066, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x100bc069, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bc06c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bc06e, 0x2)   jled(0x100bc082, 0x12);               /* jle 0x100bc082 */
    II(0x100bc070, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc073, 0x5)   calld(0x100763d4, -0x45ca4);          /* call 0x100763d4 */
    II(0x100bc078, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc07a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc07d, 0x5)   calld(0x100ba18e, -0x1ef4);           /* call 0x100ba18e */
l_0x100bc082:
    II(0x100bc082, 0x5)   jmpd(0x100bbe91, -0x1f6);             /* jmp 0x100bbe91 */
l_0x100bc087:
    II(0x100bc087, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bc08c, 0x5)   calld(0x10076338, -0x45d59);          /* call 0x10076338 */
    II(0x100bc091, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bc094, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc096, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bc098, 0x5)   calld(0x1007643c, -0x45c61);          /* call 0x1007643c */
    II(0x100bc09d, 0x2)   jmpd(0x100bc0a7, 0x8);                /* jmp 0x100bc0a7 */
l_0x100bc09f:
    II(0x100bc09f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc0a2, 0x5)   calld(0x10076bf8, -0x454af);          /* call 0x10076bf8 */
l_0x100bc0a7:
    II(0x100bc0a7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc0a9, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc0ac, 0x5)   calld(0x1013ad71, 0x7ecc0);           /* call 0x1013ad71 */
    II(0x100bc0b1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc0b3, 0x2)   jzd(0x100bc0f9, 0x44);                /* jz 0x100bc0f9 */
    II(0x100bc0b5, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc0b8, 0x5)   calld(0x100763a0, -0x45d1d);          /* call 0x100763a0 */
    II(0x100bc0bd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc0bf, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bc0c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc0c5, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc0c8, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bc0ca, 0x2)   jnzd(0x100bc0e3, 0x17);               /* jnz 0x100bc0e3 */
    II(0x100bc0cc, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc0cf, 0x5)   calld(0x100763a0, -0x45d34);          /* call 0x100763a0 */
    II(0x100bc0d4, 0x5)   calld(0x1007623c, -0x45e9d);          /* call 0x1007623c */
    II(0x100bc0d9, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x100bc0dc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bc0df, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bc0e1, 0x2)   jgd(0x100bc0e5, 0x2);                 /* jg 0x100bc0e5 */
l_0x100bc0e3:
    II(0x100bc0e3, 0x2)   jmpd(0x100bc0f7, 0x12);               /* jmp 0x100bc0f7 */
l_0x100bc0e5:
    II(0x100bc0e5, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc0e8, 0x5)   calld(0x100763d4, -0x45d19);          /* call 0x100763d4 */
    II(0x100bc0ed, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc0ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc0f2, 0x5)   calld(0x100ba18e, -0x1f69);           /* call 0x100ba18e */
l_0x100bc0f7:
    II(0x100bc0f7, 0x2)   jmpd(0x100bc09f, -0x5a);              /* jmp 0x100bc09f */
l_0x100bc0f9:
    II(0x100bc0f9, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x100bc0fe, 0x5)   calld(0x10075fdc, -0x46127);          /* call 0x10075fdc */
    II(0x100bc103, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100bc106, 0x6)   jld(0x100bc188, 0x7c);                /* jl dword 0x100bc188 */
    II(0x100bc10c, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bc111, 0x5)   calld(0x10076338, -0x45dde);          /* call 0x10076338 */
    II(0x100bc116, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bc119, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc11b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bc11d, 0x5)   calld(0x1007643c, -0x45ce6);          /* call 0x1007643c */
    II(0x100bc122, 0x2)   jmpd(0x100bc12c, 0x8);                /* jmp 0x100bc12c */
l_0x100bc124:
    II(0x100bc124, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc127, 0x5)   calld(0x10076bf8, -0x45534);          /* call 0x10076bf8 */
l_0x100bc12c:
    II(0x100bc12c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc12e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc131, 0x5)   calld(0x1013ad71, 0x7ec3b);           /* call 0x1013ad71 */
    II(0x100bc136, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc138, 0x2)   jzd(0x100bc188, 0x4e);                /* jz 0x100bc188 */
    II(0x100bc13a, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc13d, 0x5)   calld(0x100763a0, -0x45da2);          /* call 0x100763a0 */
    II(0x100bc142, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc144, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bc147, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc14a, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc14d, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bc14f, 0x2)   jzd(0x100bc171, 0x20);                /* jz 0x100bc171 */
    II(0x100bc151, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc154, 0x5)   calld(0x100763a0, -0x45db9);          /* call 0x100763a0 */
    II(0x100bc159, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x100bc15e, 0x2)   jzd(0x100bc16f, 0xf);                 /* jz 0x100bc16f */
    II(0x100bc160, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc163, 0x5)   calld(0x100763a0, -0x45dc8);          /* call 0x100763a0 */
    II(0x100bc168, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x100bc16d, 0x2)   jnzd(0x100bc171, 0x2);                /* jnz 0x100bc171 */
l_0x100bc16f:
    II(0x100bc16f, 0x2)   jmpd(0x100bc173, 0x2);                /* jmp 0x100bc173 */
l_0x100bc171:
    II(0x100bc171, 0x2)   jmpd(0x100bc186, 0x13);               /* jmp 0x100bc186 */
l_0x100bc173:
    II(0x100bc173, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc176, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bc179, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc17c, 0x5)   calld(0x100763d4, -0x45dad);          /* call 0x100763d4 */
    II(0x100bc181, 0x5)   calld(0x100a9060, -0x13126);          /* call 0x100a9060 */
l_0x100bc186:
    II(0x100bc186, 0x2)   jmpd(0x100bc124, -0x64);              /* jmp 0x100bc124 */
l_0x100bc188:
    II(0x100bc188, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc18b, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100bc18e, 0x5)   calld(0x100cb000, 0xee6d);            /* call 0x100cb000 */
    II(0x100bc193, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100bc196, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc198, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bc19a, 0x5)   calld(0x100caf68, 0xedc9);            /* call 0x100caf68 */
    II(0x100bc19f, 0x2)   jmpd(0x100bc1a9, 0x8);                /* jmp 0x100bc1a9 */
l_0x100bc1a1:
    II(0x100bc1a1, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc1a4, 0x5)   calld(0x10076bf8, -0x455b1);          /* call 0x10076bf8 */
l_0x100bc1a9:
    II(0x100bc1a9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc1ab, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc1ae, 0x5)   calld(0x1013ad71, 0x7ebbe);           /* call 0x1013ad71 */
    II(0x100bc1b3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc1b5, 0x2)   jzd(0x100bc210, 0x59);                /* jz 0x100bc210 */
    II(0x100bc1b7, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc1ba, 0x5)   calld(0x1008a0f8, -0x320c7);          /* call 0x1008a0f8 */
    II(0x100bc1bf, 0x5)   calld(0x1008a370, -0x31e54);          /* call 0x1008a370 */
    II(0x100bc1c4, 0x6)   mov(memd_a32(ss, ebp - 0x144), eax);  /* mov [ebp+0xfffffebc], eax */
//    II(0x100bc1ca, 0x6)   mov(eax, memd_a32(ss, ebp - 0x144));  /* mov eax, [ebp+0xfffffebc] */
    II(0x100bc1d0, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100bc1d3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bc1d6, 0x5)   calld(0x100bb097, -0x1144);           /* call 0x100bb097 */
    II(0x100bc1db, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc1dd, 0x2)   jzd(0x100bc20e, 0x2f);                /* jz 0x100bc20e */
    II(0x100bc1df, 0x6)   mov(eax, memd_a32(ss, ebp - 0x144));  /* mov eax, [ebp+0xfffffebc] */
    II(0x100bc1e5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc1e7, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bc1ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc1ed, 0x3)   mov(eax, memd_a32(ds, eax + 0x79));   /* mov eax, [eax+0x79] */
    II(0x100bc1f0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bc1f3, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bc1f5, 0x2)   jnzd(0x100bc20e, 0x17);               /* jnz 0x100bc20e */
    II(0x100bc1f7, 0x5)   mov(ebx, 0x1f00);                     /* mov ebx, 0x1f00 */
    II(0x100bc1fc, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc1ff, 0x5)   calld(0x1008a12c, -0x320d8);          /* call 0x1008a12c */
    II(0x100bc204, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc206, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc209, 0x5)   calld(0x100bab5d, -0x16b1);           /* call 0x100bab5d */
l_0x100bc20e:
    II(0x100bc20e, 0x2)   jmpd(0x100bc1a1, -0x6f);              /* jmp 0x100bc1a1 */
l_0x100bc210:
    II(0x100bc210, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc212, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc215, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x100bc218, 0x5)   calld(0x1013ad11, 0x7eaf4);           /* call 0x1013ad11 */
    II(0x100bc21d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc21f, 0x6)   jzd(0x100bc353, 0x12e);               /* jz dword 0x100bc353 */
    II(0x100bc225, 0x7)   mov(memb_a32(ss, ebp - 0x148), 0);    /* mov byte [ebp+0xfffffeb8], 0x0 */
    II(0x100bc22c, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100bc233, 0x2)   jmpd(0x100bc23b, 0x6);                /* jmp 0x100bc23b */
l_0x100bc235:
    II(0x100bc235, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bc238, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100bc23b:
    II(0x100bc23b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bc23e, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100bc245, 0x2)   jged(0x100bc250, 0x9);                /* jge 0x100bc250 */
    II(0x100bc247, 0x7)   cmp(memb_a32(ss, ebp - 0x148), 0);    /* cmp byte [ebp+0xfffffeb8], 0x0 */
    II(0x100bc24e, 0x2)   jzd(0x100bc252, 0x2);                 /* jz 0x100bc252 */
l_0x100bc250:
    II(0x100bc250, 0x2)   jmpd(0x100bc2b0, 0x5e);               /* jmp 0x100bc2b0 */
l_0x100bc252:
    II(0x100bc252, 0xa)   mov(memd_a32(ss, ebp - 0xbc), 0);     /* mov dword [ebp+0xffffff44], 0x0 */
    II(0x100bc25c, 0x2)   jmpd(0x100bc26a, 0xc);                /* jmp 0x100bc26a */
l_0x100bc25e:
    II(0x100bc25e, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x100bc264, 0x6)   inc(memd_a32(ss, ebp - 0xbc));        /* inc dword [ebp+0xffffff44] */
l_0x100bc26a:
    II(0x100bc26a, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x100bc270, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100bc277, 0x2)   jged(0x100bc282, 0x9);                /* jge 0x100bc282 */
    II(0x100bc279, 0x7)   cmp(memb_a32(ss, ebp - 0x148), 0);    /* cmp byte [ebp+0xfffffeb8], 0x0 */
    II(0x100bc280, 0x2)   jzd(0x100bc284, 0x2);                 /* jz 0x100bc284 */
l_0x100bc282:
    II(0x100bc282, 0x2)   jmpd(0x100bc2ae, 0x2a);               /* jmp 0x100bc2ae */
l_0x100bc284:
    II(0x100bc284, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100bc288, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100bc28b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc28e, 0x3)   mov(eax, memd_a32(ds, eax + 0x67));   /* mov eax, [eax+0x67] */
    II(0x100bc291, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bc293, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xbc)); /* movsx edx, word [ebp+0xffffff44] */
    II(0x100bc29a, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bc29c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bc29e, 0x3)   movsx(eax, memb_a32(ds, eax));        /* movsx eax, byte [eax] */
    II(0x100bc2a1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bc2a3, 0x2)   jled(0x100bc2ac, 0x7);                /* jle 0x100bc2ac */
    II(0x100bc2a5, 0x7)   mov(memb_a32(ss, ebp - 0x148), 0x1);  /* mov byte [ebp+0xfffffeb8], 0x1 */
l_0x100bc2ac:
    II(0x100bc2ac, 0x2)   jmpd(0x100bc25e, -0x50);              /* jmp 0x100bc25e */
l_0x100bc2ae:
    II(0x100bc2ae, 0x2)   jmpd(0x100bc235, -0x7b);              /* jmp 0x100bc235 */
l_0x100bc2b0:
    II(0x100bc2b0, 0x7)   cmp(memb_a32(ss, ebp - 0x148), 0);    /* cmp byte [ebp+0xfffffeb8], 0x0 */
    II(0x100bc2b7, 0x6)   jzd(0x100bc353, 0x96);                /* jz dword 0x100bc353 */
    II(0x100bc2bd, 0x5)   mov(eax, 0x23);                       /* mov eax, 0x23 */
    II(0x100bc2c2, 0x5)   calld(sys_new, 0xa9b39);              /* call 0x10165e00 */
    II(0x100bc2c7, 0x6)   mov(memd_a32(ss, ebp - 0x14c), eax);  /* mov [ebp+0xfffffeb4], eax */
//    II(0x100bc2cd, 0x6)   mov(eax, memd_a32(ss, ebp - 0x14c));  /* mov eax, [ebp+0xfffffeb4] */
    II(0x100bc2d3, 0x6)   mov(memd_a32(ss, ebp - 0x150), eax);  /* mov [ebp+0xfffffeb0], eax */
    II(0x100bc2d9, 0x7)   cmp(memd_a32(ss, ebp - 0x150), 0);    /* cmp dword [ebp+0xfffffeb0], 0x0 */
    II(0x100bc2e0, 0x2)   jzd(0x100bc31f, 0x3d);                /* jz 0x100bc31f */
    II(0x100bc2e2, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0xbc)); /* movsx ebx, word [ebp+0xffffff44] */
    II(0x100bc2e9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100bc2ed, 0x6)   lea(eax, ebp - 0x154);                /* lea eax, [ebp+0xfffffeac] */
    II(0x100bc2f3, 0x5)   calld(0x10076aac, -0x4584c);          /* call 0x10076aac */
    II(0x100bc2f8, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100bc2fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc2fd, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bc300, 0x6)   mov(eax, memd_a32(ss, ebp - 0x14c));  /* mov eax, [ebp+0xfffffeb4] */
    II(0x100bc306, 0x5)   calld(0x1009ef13, -0x1d3f8);          /* call 0x1009ef13 */
    II(0x100bc30b, 0x6)   mov(memd_a32(ss, ebp - 0x158), eax);  /* mov [ebp+0xfffffea8], eax */
//    II(0x100bc311, 0x6)   mov(eax, memd_a32(ss, ebp - 0x158));  /* mov eax, [ebp+0xfffffea8] */
    II(0x100bc317, 0x6)   mov(memd_a32(ss, ebp - 0x15c), eax);  /* mov [ebp+0xfffffea4], eax */
    II(0x100bc31d, 0x2)   jmpd(0x100bc32b, 0xc);                /* jmp 0x100bc32b */
l_0x100bc31f:
    II(0x100bc31f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x150));  /* mov eax, [ebp+0xfffffeb0] */
    II(0x100bc325, 0x6)   mov(memd_a32(ss, ebp - 0x15c), eax);  /* mov [ebp+0xfffffea4], eax */
l_0x100bc32b:
    II(0x100bc32b, 0x6)   mov(edx, memd_a32(ss, ebp - 0x15c));  /* mov edx, [ebp+0xfffffea4] */
    II(0x100bc331, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc334, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x100bc337, 0x5)   calld(0x1008afe4, -0x31358);          /* call 0x1008afe4 */
    II(0x100bc33c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc33f, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x100bc342, 0x5)   calld(0x1008af84, -0x313c3);          /* call 0x1008af84 */
    II(0x100bc347, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc349, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bc34e, 0x5)   calld(0x100a4d50, -0x17603);          /* call 0x100a4d50 */
l_0x100bc353:
    II(0x100bc353, 0x5)   mov(eax, 0x13);                       /* mov eax, 0x13 */
    II(0x100bc358, 0x5)   calld(sys_new, 0xa9aa3);              /* call 0x10165e00 */
    II(0x100bc35d, 0x6)   mov(memd_a32(ss, ebp - 0x160), eax);  /* mov [ebp+0xfffffea0], eax */
//    II(0x100bc363, 0x6)   mov(eax, memd_a32(ss, ebp - 0x160));  /* mov eax, [ebp+0xfffffea0] */
    II(0x100bc369, 0x6)   mov(memd_a32(ss, ebp - 0x164), eax);  /* mov [ebp+0xfffffe9c], eax */
    II(0x100bc36f, 0x7)   cmp(memd_a32(ss, ebp - 0x164), 0);    /* cmp dword [ebp+0xfffffe9c], 0x0 */
    II(0x100bc376, 0x2)   jzd(0x100bc39d, 0x25);                /* jz 0x100bc39d */
    II(0x100bc378, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc37b, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bc37e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x160));  /* mov eax, [ebp+0xfffffea0] */
    II(0x100bc384, 0x5)   calld(0x100c8746, 0xc3bd);            /* call 0x100c8746 */
    II(0x100bc389, 0x6)   mov(memd_a32(ss, ebp - 0x168), eax);  /* mov [ebp+0xfffffe98], eax */
//    II(0x100bc38f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x168));  /* mov eax, [ebp+0xfffffe98] */
    II(0x100bc395, 0x6)   mov(memd_a32(ss, ebp - 0x16c), eax);  /* mov [ebp+0xfffffe94], eax */
    II(0x100bc39b, 0x2)   jmpd(0x100bc3a9, 0xc);                /* jmp 0x100bc3a9 */
l_0x100bc39d:
    II(0x100bc39d, 0x6)   mov(eax, memd_a32(ss, ebp - 0x164));  /* mov eax, [ebp+0xfffffe9c] */
    II(0x100bc3a3, 0x6)   mov(memd_a32(ss, ebp - 0x16c), eax);  /* mov [ebp+0xfffffe94], eax */
l_0x100bc3a9:
    II(0x100bc3a9, 0x6)   mov(edx, memd_a32(ss, ebp - 0x16c));  /* mov edx, [ebp+0xfffffe94] */
    II(0x100bc3af, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bc3b4, 0x5)   calld(0x100a4d50, -0x17669);          /* call 0x100a4d50 */
    II(0x100bc3b9, 0x5)   mov(eax, 0x17);                       /* mov eax, 0x17 */
    II(0x100bc3be, 0x5)   calld(sys_new, 0xa9a3d);              /* call 0x10165e00 */
    II(0x100bc3c3, 0x6)   mov(memd_a32(ss, ebp - 0x170), eax);  /* mov [ebp+0xfffffe90], eax */
//    II(0x100bc3c9, 0x6)   mov(eax, memd_a32(ss, ebp - 0x170));  /* mov eax, [ebp+0xfffffe90] */
    II(0x100bc3cf, 0x6)   mov(memd_a32(ss, ebp - 0x174), eax);  /* mov [ebp+0xfffffe8c], eax */
    II(0x100bc3d5, 0x7)   cmp(memd_a32(ss, ebp - 0x174), 0);    /* cmp dword [ebp+0xfffffe8c], 0x0 */
    II(0x100bc3dc, 0x2)   jzd(0x100bc403, 0x25);                /* jz 0x100bc403 */
    II(0x100bc3de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc3e1, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bc3e4, 0x6)   mov(eax, memd_a32(ss, ebp - 0x170));  /* mov eax, [ebp+0xfffffe90] */
    II(0x100bc3ea, 0x5)   calld(0x100c9677, 0xd288);            /* call 0x100c9677 */
    II(0x100bc3ef, 0x6)   mov(memd_a32(ss, ebp - 0x178), eax);  /* mov [ebp+0xfffffe88], eax */
//    II(0x100bc3f5, 0x6)   mov(eax, memd_a32(ss, ebp - 0x178));  /* mov eax, [ebp+0xfffffe88] */
    II(0x100bc3fb, 0x6)   mov(memd_a32(ss, ebp - 0x17c), eax);  /* mov [ebp+0xfffffe84], eax */
    II(0x100bc401, 0x2)   jmpd(0x100bc40f, 0xc);                /* jmp 0x100bc40f */
l_0x100bc403:
    II(0x100bc403, 0x6)   mov(eax, memd_a32(ss, ebp - 0x174));  /* mov eax, [ebp+0xfffffe8c] */
    II(0x100bc409, 0x6)   mov(memd_a32(ss, ebp - 0x17c), eax);  /* mov [ebp+0xfffffe84], eax */
l_0x100bc40f:
    II(0x100bc40f, 0x6)   mov(edx, memd_a32(ss, ebp - 0x17c));  /* mov edx, [ebp+0xfffffe84] */
    II(0x100bc415, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bc41a, 0x5)   calld(0x100a4d50, -0x176cf);          /* call 0x100a4d50 */
    II(0x100bc41f, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x100bc424, 0x5)   calld(0x10075fdc, -0x4644d);          /* call 0x10075fdc */
    II(0x100bc429, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100bc42c, 0x6)   jld(0x100bc4fe, 0xcc);                /* jl dword 0x100bc4fe */
    II(0x100bc432, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x100bc437, 0x5)   calld(sys_new, 0xa99c4);              /* call 0x10165e00 */
    II(0x100bc43c, 0x6)   mov(memd_a32(ss, ebp - 0x180), eax);  /* mov [ebp+0xfffffe80], eax */
//    II(0x100bc442, 0x6)   mov(eax, memd_a32(ss, ebp - 0x180));  /* mov eax, [ebp+0xfffffe80] */
    II(0x100bc448, 0x6)   mov(memd_a32(ss, ebp - 0x184), eax);  /* mov [ebp+0xfffffe7c], eax */
    II(0x100bc44e, 0x7)   cmp(memd_a32(ss, ebp - 0x184), 0);    /* cmp dword [ebp+0xfffffe7c], 0x0 */
    II(0x100bc455, 0x2)   jzd(0x100bc47c, 0x25);                /* jz 0x100bc47c */
    II(0x100bc457, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc45a, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bc45d, 0x6)   mov(eax, memd_a32(ss, ebp - 0x180));  /* mov eax, [ebp+0xfffffe80] */
    II(0x100bc463, 0x5)   calld(0x1009aff9, -0x2146f);          /* call 0x1009aff9 */
    II(0x100bc468, 0x6)   mov(memd_a32(ss, ebp - 0x188), eax);  /* mov [ebp+0xfffffe78], eax */
//    II(0x100bc46e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x188));  /* mov eax, [ebp+0xfffffe78] */
    II(0x100bc474, 0x6)   mov(memd_a32(ss, ebp - 0x18c), eax);  /* mov [ebp+0xfffffe74], eax */
    II(0x100bc47a, 0x2)   jmpd(0x100bc488, 0xc);                /* jmp 0x100bc488 */
l_0x100bc47c:
    II(0x100bc47c, 0x6)   mov(eax, memd_a32(ss, ebp - 0x184));  /* mov eax, [ebp+0xfffffe7c] */
    II(0x100bc482, 0x6)   mov(memd_a32(ss, ebp - 0x18c), eax);  /* mov [ebp+0xfffffe74], eax */
l_0x100bc488:
    II(0x100bc488, 0x6)   mov(edx, memd_a32(ss, ebp - 0x18c));  /* mov edx, [ebp+0xfffffe74] */
    II(0x100bc48e, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bc493, 0x5)   calld(0x100a4d50, -0x17748);          /* call 0x100a4d50 */
    II(0x100bc498, 0x5)   mov(eax, 0x1d);                       /* mov eax, 0x1d */
    II(0x100bc49d, 0x5)   calld(sys_new, 0xa995e);              /* call 0x10165e00 */
    II(0x100bc4a2, 0x6)   mov(memd_a32(ss, ebp - 0x190), eax);  /* mov [ebp+0xfffffe70], eax */
//    II(0x100bc4a8, 0x6)   mov(eax, memd_a32(ss, ebp - 0x190));  /* mov eax, [ebp+0xfffffe70] */
    II(0x100bc4ae, 0x6)   mov(memd_a32(ss, ebp - 0x194), eax);  /* mov [ebp+0xfffffe6c], eax */
    II(0x100bc4b4, 0x7)   cmp(memd_a32(ss, ebp - 0x194), 0);    /* cmp dword [ebp+0xfffffe6c], 0x0 */
    II(0x100bc4bb, 0x2)   jzd(0x100bc4e2, 0x25);                /* jz 0x100bc4e2 */
    II(0x100bc4bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc4c0, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bc4c3, 0x6)   mov(eax, memd_a32(ss, ebp - 0x190));  /* mov eax, [ebp+0xfffffe70] */
    II(0x100bc4c9, 0x5)   calld(0x100b5d85, -0x6749);           /* call 0x100b5d85 */
    II(0x100bc4ce, 0x6)   mov(memd_a32(ss, ebp - 0x198), eax);  /* mov [ebp+0xfffffe68], eax */
//    II(0x100bc4d4, 0x6)   mov(eax, memd_a32(ss, ebp - 0x198));  /* mov eax, [ebp+0xfffffe68] */
    II(0x100bc4da, 0x6)   mov(memd_a32(ss, ebp - 0x19c), eax);  /* mov [ebp+0xfffffe64], eax */
    II(0x100bc4e0, 0x2)   jmpd(0x100bc4ee, 0xc);                /* jmp 0x100bc4ee */
l_0x100bc4e2:
    II(0x100bc4e2, 0x6)   mov(eax, memd_a32(ss, ebp - 0x194));  /* mov eax, [ebp+0xfffffe6c] */
    II(0x100bc4e8, 0x6)   mov(memd_a32(ss, ebp - 0x19c), eax);  /* mov [ebp+0xfffffe64], eax */
l_0x100bc4ee:
    II(0x100bc4ee, 0x6)   mov(edx, memd_a32(ss, ebp - 0x19c));  /* mov edx, [ebp+0xfffffe64] */
    II(0x100bc4f4, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bc4f9, 0x5)   calld(0x100a4d50, -0x177ae);          /* call 0x100a4d50 */
l_0x100bc4fe:
    II(0x100bc4fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc501, 0x4)   mov(memb_a32(ds, eax + 0xe), 0);      /* mov byte [eax+0xe], 0x0 */
l_0x100bc505:
    II(0x100bc505, 0x6)   lea(edx, ebp - 0x1a4);                /* lea edx, [ebp+0xfffffe5c] */
    II(0x100bc50b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc50e, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc511, 0x5)   calld(0x10078137, -0x443df);          /* call 0x10078137 */
    II(0x100bc516, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc519, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100bc51c, 0x5)   calld(0x100cb000, 0xeadf);            /* call 0x100cb000 */
    II(0x100bc521, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc523, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc526, 0x5)   calld(0x100caf68, 0xea3d);            /* call 0x100caf68 */
    II(0x100bc52b, 0x2)   jmpd(0x100bc535, 0x8);                /* jmp 0x100bc535 */
l_0x100bc52d:
    II(0x100bc52d, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc530, 0x5)   calld(0x10076bf8, -0x4593d);          /* call 0x10076bf8 */
l_0x100bc535:
    II(0x100bc535, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc537, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc53a, 0x5)   calld(0x1013ad71, 0x7e832);           /* call 0x1013ad71 */
    II(0x100bc53f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc541, 0x6)   jzd(0x100bc644, 0xfd);                /* jz dword 0x100bc644 */
    II(0x100bc547, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc54a, 0x5)   calld(0x1008a0f8, -0x32457);          /* call 0x1008a0f8 */
    II(0x100bc54f, 0x5)   calld(0x100b8dfb, -0x3759);           /* call 0x100b8dfb */
    II(0x100bc554, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bc556, 0x6)   jnzd(0x100bc63f, 0xe3);               /* jnz dword 0x100bc63f */
    II(0x100bc55c, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc55f, 0x5)   calld(0x1008a0f8, -0x3246c);          /* call 0x1008a0f8 */
    II(0x100bc564, 0x5)   calld(0x1008a370, -0x321f9);          /* call 0x1008a370 */
    II(0x100bc569, 0x6)   mov(memd_a32(ss, ebp - 0x1a8), eax);  /* mov [ebp+0xfffffe58], eax */
    II(0x100bc56f, 0x6)   lea(ebx, ebp - 0x1a4);                /* lea ebx, [ebp+0xfffffe5c] */
    II(0x100bc575, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc578, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bc57b, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1a8));  /* mov eax, [ebp+0xfffffe58] */
    II(0x100bc581, 0x5)   calld(0x100776f3, -0x44e93);          /* call 0x100776f3 */
    II(0x100bc586, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc588, 0x2)   jzd(0x100bc5a6, 0x1c);                /* jz 0x100bc5a6 */
    II(0x100bc58a, 0x5)   mov(ebx, 0x1000);                     /* mov ebx, 0x1000 */
    II(0x100bc58f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc592, 0x5)   calld(0x1008a12c, -0x3246b);          /* call 0x1008a12c */
    II(0x100bc597, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc599, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc59c, 0x5)   calld(0x100bab5d, -0x1a44);           /* call 0x100bab5d */
    II(0x100bc5a1, 0x5)   jmpd(0x100bc63f, 0x99);               /* jmp 0x100bc63f */
l_0x100bc5a6:
    II(0x100bc5a6, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1a8));  /* mov eax, [ebp+0xfffffe58] */
    II(0x100bc5ac, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc5ae, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bc5b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc5b4, 0x3)   mov(eax, memd_a32(ds, eax + 0x79));   /* mov eax, [eax+0x79] */
    II(0x100bc5b7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bc5ba, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bc5bc, 0x2)   jzd(0x100bc5d5, 0x17);                /* jz 0x100bc5d5 */
    II(0x100bc5be, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1a8));  /* mov eax, [ebp+0xfffffe58] */
    II(0x100bc5c4, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100bc5c7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bc5cc, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100bc5cf, 0x6)   jnzd(0x100bc63f, 0x6a);               /* jnz dword 0x100bc63f */
l_0x100bc5d5:
    II(0x100bc5d5, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1a8));  /* mov eax, [ebp+0xfffffe58] */
    II(0x100bc5db, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x100bc5e0, 0x2)   jnzd(0x100bc5ee, 0xc);                /* jnz 0x100bc5ee */
    II(0x100bc5e2, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1a8));  /* mov eax, [ebp+0xfffffe58] */
    II(0x100bc5e8, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x100bc5ec, 0x2)   jzd(0x100bc603, 0x15);                /* jz 0x100bc603 */
l_0x100bc5ee:
    II(0x100bc5ee, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1a8));  /* mov eax, [ebp+0xfffffe58] */
    II(0x100bc5f4, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100bc5f7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bc5fa, 0x5)   calld(0x100bb097, -0x1568);           /* call 0x100bb097 */
    II(0x100bc5ff, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc601, 0x2)   jzd(0x100bc605, 0x2);                 /* jz 0x100bc605 */
l_0x100bc603:
    II(0x100bc603, 0x2)   jmpd(0x100bc628, 0x23);               /* jmp 0x100bc628 */
l_0x100bc605:
    II(0x100bc605, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1a8));  /* mov eax, [ebp+0xfffffe58] */
    II(0x100bc60b, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100bc60e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bc613, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100bc616, 0x2)   jnzd(0x100bc626, 0xe);                /* jnz 0x100bc626 */
    II(0x100bc618, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1a8));  /* mov eax, [ebp+0xfffffe58] */
    II(0x100bc61e, 0x6)   test(memw_a32(ds, eax + 0x12), 0x1c0); /* test word [eax+0x12], 0x1c0 */
    II(0x100bc624, 0x2)   jnzd(0x100bc628, 0x2);                /* jnz 0x100bc628 */
l_0x100bc626:
    II(0x100bc626, 0x2)   jmpd(0x100bc63f, 0x17);               /* jmp 0x100bc63f */
l_0x100bc628:
    II(0x100bc628, 0x5)   mov(ebx, 0x1f00);                     /* mov ebx, 0x1f00 */
    II(0x100bc62d, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bc630, 0x5)   calld(0x1008a12c, -0x32509);          /* call 0x1008a12c */
    II(0x100bc635, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc637, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc63a, 0x5)   calld(0x100bab5d, -0x1ae2);           /* call 0x100bab5d */
l_0x100bc63f:
    II(0x100bc63f, 0x5)   jmpd(0x100bc52d, -0x117);             /* jmp 0x100bc52d */
l_0x100bc644:
    II(0x100bc644, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100bc64b, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bc650, 0x5)   calld(0x10076338, -0x4631d);          /* call 0x10076338 */
    II(0x100bc655, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bc658, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc65a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bc65c, 0x5)   calld(0x1007643c, -0x46225);          /* call 0x1007643c */
    II(0x100bc661, 0x2)   jmpd(0x100bc66b, 0x8);                /* jmp 0x100bc66b */
l_0x100bc663:
    II(0x100bc663, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc666, 0x5)   calld(0x10076bf8, -0x45a73);          /* call 0x10076bf8 */
l_0x100bc66b:
    II(0x100bc66b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc66d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc670, 0x5)   calld(0x1013ad71, 0x7e6fc);           /* call 0x1013ad71 */
    II(0x100bc675, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc677, 0x2)   jzd(0x100bc6b2, 0x39);                /* jz 0x100bc6b2 */
    II(0x100bc679, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc67c, 0x5)   calld(0x100763a0, -0x462e1);          /* call 0x100763a0 */
    II(0x100bc681, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc683, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bc686, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc689, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc68c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bc68e, 0x2)   jnzd(0x100bc69f, 0xf);                /* jnz 0x100bc69f */
    II(0x100bc690, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc693, 0x5)   calld(0x100763a0, -0x462f8);          /* call 0x100763a0 */
    II(0x100bc698, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x7);    /* cmp word [eax+0x8], 0x7 */
    II(0x100bc69d, 0x2)   jzd(0x100bc6a1, 0x2);                 /* jz 0x100bc6a1 */
l_0x100bc69f:
    II(0x100bc69f, 0x2)   jmpd(0x100bc6b0, 0xf);                /* jmp 0x100bc6b0 */
l_0x100bc6a1:
    II(0x100bc6a1, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc6a4, 0x5)   calld(0x100763a0, -0x46309);          /* call 0x100763a0 */
    II(0x100bc6a9, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x100bc6ad, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
l_0x100bc6b0:
    II(0x100bc6b0, 0x2)   jmpd(0x100bc663, -0x4f);              /* jmp 0x100bc663 */
l_0x100bc6b2:
    II(0x100bc6b2, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bc6b7, 0x5)   calld(0x10076338, -0x46384);          /* call 0x10076338 */
    II(0x100bc6bc, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bc6bf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc6c1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bc6c3, 0x5)   calld(0x1007643c, -0x4628c);          /* call 0x1007643c */
    II(0x100bc6c8, 0x2)   jmpd(0x100bc6d2, 0x8);                /* jmp 0x100bc6d2 */
l_0x100bc6ca:
    II(0x100bc6ca, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc6cd, 0x5)   calld(0x10076bf8, -0x45ada);          /* call 0x10076bf8 */
l_0x100bc6d2:
    II(0x100bc6d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc6d4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc6d7, 0x5)   calld(0x1013ad71, 0x7e695);           /* call 0x1013ad71 */
    II(0x100bc6dc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc6de, 0x2)   jzd(0x100bc73e, 0x5e);                /* jz 0x100bc73e */
    II(0x100bc6e0, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc6e3, 0x5)   calld(0x100763a0, -0x46348);          /* call 0x100763a0 */
    II(0x100bc6e8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc6ea, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bc6ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc6f0, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc6f3, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bc6f5, 0x2)   jnzd(0x100bc706, 0xf);                /* jnz 0x100bc706 */
    II(0x100bc6f7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc6fa, 0x5)   calld(0x100763a0, -0x4635f);          /* call 0x100763a0 */
    II(0x100bc6ff, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x100bc704, 0x2)   jzd(0x100bc708, 0x2);                 /* jz 0x100bc708 */
l_0x100bc706:
    II(0x100bc706, 0x2)   jmpd(0x100bc716, 0xe);                /* jmp 0x100bc716 */
l_0x100bc708:
    II(0x100bc708, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc70b, 0x5)   calld(0x100763a0, -0x46370);          /* call 0x100763a0 */
    II(0x100bc710, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x100bc714, 0x2)   jnzd(0x100bc718, 0x2);                /* jnz 0x100bc718 */
l_0x100bc716:
    II(0x100bc716, 0x2)   jmpd(0x100bc726, 0xe);                /* jmp 0x100bc726 */
l_0x100bc718:
    II(0x100bc718, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc71b, 0x5)   calld(0x100763a0, -0x46380);          /* call 0x100763a0 */
    II(0x100bc720, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100bc724, 0x2)   jnzd(0x100bc728, 0x2);                /* jnz 0x100bc728 */
l_0x100bc726:
    II(0x100bc726, 0x2)   jmpd(0x100bc73c, 0x14);               /* jmp 0x100bc73c */
l_0x100bc728:
    II(0x100bc728, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100bc72a, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x100bc72f, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc732, 0x5)   calld(0x10076408, -0x4632f);          /* call 0x10076408 */
    II(0x100bc737, 0x5)   calld(0x10163053, 0xa6917);           /* call 0x10163053 */
l_0x100bc73c:
    II(0x100bc73c, 0x2)   jmpd(0x100bc6ca, -0x74);              /* jmp 0x100bc6ca */
l_0x100bc73e:
    II(0x100bc73e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100bc742, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100bc745, 0x6)   jld(0x100bc800, 0xb5);                /* jl dword 0x100bc800 */
    II(0x100bc74b, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bc750, 0x5)   calld(0x10076338, -0x4641d);          /* call 0x10076338 */
    II(0x100bc755, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bc758, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc75a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bc75c, 0x5)   calld(0x1007643c, -0x46325);          /* call 0x1007643c */
    II(0x100bc761, 0x2)   jmpd(0x100bc76b, 0x8);                /* jmp 0x100bc76b */
l_0x100bc763:
    II(0x100bc763, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc766, 0x5)   calld(0x10076bf8, -0x45b73);          /* call 0x10076bf8 */
l_0x100bc76b:
    II(0x100bc76b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc76d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc770, 0x5)   calld(0x1013ad71, 0x7e5fc);           /* call 0x1013ad71 */
    II(0x100bc775, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc777, 0x6)   jzd(0x100bc800, 0x83);                /* jz dword 0x100bc800 */
    II(0x100bc77d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc780, 0x5)   calld(0x100763a0, -0x463e5);          /* call 0x100763a0 */
    II(0x100bc785, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc787, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bc78a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc78d, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc790, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bc792, 0x2)   jnzd(0x100bc7c5, 0x31);               /* jnz 0x100bc7c5 */
    II(0x100bc794, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc797, 0x5)   calld(0x100763a0, -0x463fc);          /* call 0x100763a0 */
    II(0x100bc79c, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0);      /* cmp word [eax+0x8], 0x0 */
    II(0x100bc7a1, 0x2)   jzd(0x100bc7b2, 0xf);                 /* jz 0x100bc7b2 */
    II(0x100bc7a3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc7a6, 0x5)   calld(0x100763a0, -0x4640b);          /* call 0x100763a0 */
    II(0x100bc7ab, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x100bc7b0, 0x2)   jnzd(0x100bc7b4, 0x2);                /* jnz 0x100bc7b4 */
l_0x100bc7b2:
    II(0x100bc7b2, 0x2)   jmpd(0x100bc7c3, 0xf);                /* jmp 0x100bc7c3 */
l_0x100bc7b4:
    II(0x100bc7b4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc7b7, 0x5)   calld(0x100763a0, -0x4641c);          /* call 0x100763a0 */
    II(0x100bc7bc, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1d);   /* cmp word [eax+0x8], 0x1d */
    II(0x100bc7c1, 0x2)   jnzd(0x100bc7c5, 0x2);                /* jnz 0x100bc7c5 */
l_0x100bc7c3:
    II(0x100bc7c3, 0x2)   jmpd(0x100bc7c7, 0x2);                /* jmp 0x100bc7c7 */
l_0x100bc7c5:
    II(0x100bc7c5, 0x2)   jmpd(0x100bc7d5, 0xe);                /* jmp 0x100bc7d5 */
l_0x100bc7c7:
    II(0x100bc7c7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc7ca, 0x5)   calld(0x100763a0, -0x4642f);          /* call 0x100763a0 */
    II(0x100bc7cf, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x100bc7d3, 0x2)   jnzd(0x100bc7d7, 0x2);                /* jnz 0x100bc7d7 */
l_0x100bc7d5:
    II(0x100bc7d5, 0x2)   jmpd(0x100bc7e5, 0xe);                /* jmp 0x100bc7e5 */
l_0x100bc7d7:
    II(0x100bc7d7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc7da, 0x5)   calld(0x100763a0, -0x4643f);          /* call 0x100763a0 */
    II(0x100bc7df, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100bc7e3, 0x2)   jnzd(0x100bc7e7, 0x2);                /* jnz 0x100bc7e7 */
l_0x100bc7e5:
    II(0x100bc7e5, 0x2)   jmpd(0x100bc7fb, 0x14);               /* jmp 0x100bc7fb */
l_0x100bc7e7:
    II(0x100bc7e7, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100bc7e9, 0x5)   mov(edx, 0x7);                        /* mov edx, 0x7 */
    II(0x100bc7ee, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc7f1, 0x5)   calld(0x10076408, -0x463ee);          /* call 0x10076408 */
    II(0x100bc7f6, 0x5)   calld(0x10163053, 0xa6858);           /* call 0x10163053 */
l_0x100bc7fb:
    II(0x100bc7fb, 0x5)   jmpd(0x100bc763, -0x9d);              /* jmp 0x100bc763 */
l_0x100bc800:
    II(0x100bc800, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100bc802, 0x6)   lea(edx, ebp - 0x1ac);                /* lea edx, [ebp+0xfffffe54] */
    II(0x100bc808, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc80b, 0x5)   calld(0x100c6677, 0x9e67);            /* call 0x100c6677 */
    II(0x100bc810, 0x6)   lea(edx, ebp - 0x1b0);                /* lea edx, [ebp+0xfffffe50] */
    II(0x100bc816, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc819, 0x5)   calld(0x100c735d, 0xab3f);            /* call 0x100c735d */
    II(0x100bc81e, 0x5)   calld(0x100caef4, 0xe6d1);            /* call 0x100caef4 */
    II(0x100bc823, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100bc825, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100bc827, 0x6)   lea(edx, ebp - 0x1b0);                /* lea edx, [ebp+0xfffffe50] */
    II(0x100bc82d, 0x6)   lea(eax, ebp - 0x1b4);                /* lea eax, [ebp+0xfffffe4c] */
    II(0x100bc833, 0x5)   calld(0x100cae64, 0xe62c);            /* call 0x100cae64 */
    II(0x100bc838, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100bc83a, 0x5)   calld(0x100caef4, 0xe6b5);            /* call 0x100caef4 */
    II(0x100bc83f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100bc841, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100bc843, 0x6)   lea(edx, ebp - 0x1ac);                /* lea edx, [ebp+0xfffffe54] */
    II(0x100bc849, 0x6)   lea(eax, ebp - 0x1b8);                /* lea eax, [ebp+0xfffffe48] */
    II(0x100bc84f, 0x5)   calld(0x100cae64, 0xe610);            /* call 0x100cae64 */
    II(0x100bc854, 0x3)   mov(esi, memd_a32(ss, ebp - 0x4));    /* mov esi, [ebp-0x4] */
    II(0x100bc857, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x100bc859, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc85b, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100bc85d, 0x5)   calld(0x100c63af, 0x9b4d);            /* call 0x100c63af */
    II(0x100bc862, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc864, 0x6)   lea(eax, ebp - 0x1b8);                /* lea eax, [ebp+0xfffffe48] */
    II(0x100bc86a, 0x5)   calld(0x100ca6a0, 0xde31);            /* call 0x100ca6a0 */
    II(0x100bc86f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc871, 0x6)   lea(eax, ebp - 0x1b4);                /* lea eax, [ebp+0xfffffe4c] */
    II(0x100bc877, 0x5)   calld(0x100ca6a0, 0xde24);            /* call 0x100ca6a0 */
    II(0x100bc87c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc87f, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc882, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bc888, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x100bc88e, 0x5)   calld(0x100cb67c, 0xede9);            /* call 0x100cb67c */
    II(0x100bc893, 0x6)   mov(memd_a32(ss, ebp - 0x1bc), eax);  /* mov [ebp+0xfffffe44], eax */
l_0x100bc899:
    II(0x100bc899, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc89c, 0x5)   cmp(memw_a32(ds, eax + 0xa), -0x1 /* 0xff */); /* cmp word [eax+0xa], 0xff */
    II(0x100bc8a1, 0x2)   jzd(0x100bc8b3, 0x10);                /* jz 0x100bc8b3 */
    II(0x100bc8a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc8a6, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x100bc8aa, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x1bc));   /* cmp ax, [ebp+0xfffffe44] */
    II(0x100bc8b1, 0x2)   jled(0x100bc8b8, 0x5);                /* jle 0x100bc8b8 */
l_0x100bc8b3:
    II(0x100bc8b3, 0x5)   jmpd(0x100bc97c, 0xc4);               /* jmp 0x100bc97c */
l_0x100bc8b8:
    II(0x100bc8b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc8bb, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x100bc8bf, 0x6)   sub(memd_a32(ss, ebp - 0x1bc), eax);  /* sub [ebp+0xfffffe44], eax */
    II(0x100bc8c5, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x1bc)); /* movsx edx, word [ebp+0xfffffe44] */
    II(0x100bc8cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc8cf, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc8d2, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bc8d8, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x100bc8de, 0x5)   calld(0x100cb60c, 0xed29);            /* call 0x100cb60c */
    II(0x100bc8e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc8e6, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc8e9, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bc8ef, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100bc8f2, 0x4)   mov(dx, memw_a32(ds, edx + 0xc));     /* mov dx, [edx+0xc] */
    II(0x100bc8f6, 0x7)   add(memw_a32(ds, eax + 0x101ca583), dx); /* add [eax+0x101ca583], dx */
    II(0x100bc8fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc900, 0x5)   calld(0x100c79a0, 0xb09b);            /* call 0x100c79a0 */
    II(0x100bc905, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100bc90c, 0x2)   jzd(0x100bc919, 0xb);                 /* jz 0x100bc919 */
    II(0x100bc90e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc911, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc914, 0x5)   calld(0x1012894c, 0x6c033);           /* call 0x1012894c */
l_0x100bc919:
    II(0x100bc919, 0x5)   calld(0x100caef4, 0xe5d6);            /* call 0x100caef4 */
    II(0x100bc91e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100bc920, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100bc922, 0x6)   lea(edx, ebp - 0x1b0);                /* lea edx, [ebp+0xfffffe50] */
    II(0x100bc928, 0x6)   lea(eax, ebp - 0x1c0);                /* lea eax, [ebp+0xfffffe40] */
    II(0x100bc92e, 0x5)   calld(0x100cae64, 0xe531);            /* call 0x100cae64 */
    II(0x100bc933, 0x2)   mov(esi, eax);                        /* mov esi, eax */
    II(0x100bc935, 0x5)   calld(0x100caef4, 0xe5ba);            /* call 0x100caef4 */
    II(0x100bc93a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100bc93c, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100bc93e, 0x6)   lea(edx, ebp - 0x1ac);                /* lea edx, [ebp+0xfffffe54] */
    II(0x100bc944, 0x6)   lea(eax, ebp - 0x1c4);                /* lea eax, [ebp+0xfffffe3c] */
    II(0x100bc94a, 0x5)   calld(0x100cae64, 0xe515);            /* call 0x100cae64 */
    II(0x100bc94f, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x100bc952, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100bc954, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc956, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bc958, 0x5)   calld(0x100c63af, 0x9a52);            /* call 0x100c63af */
    II(0x100bc95d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc95f, 0x6)   lea(eax, ebp - 0x1c4);                /* lea eax, [ebp+0xfffffe3c] */
    II(0x100bc965, 0x5)   calld(0x100ca6a0, 0xdd36);            /* call 0x100ca6a0 */
    II(0x100bc96a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc96c, 0x6)   lea(eax, ebp - 0x1c0);                /* lea eax, [ebp+0xfffffe40] */
    II(0x100bc972, 0x5)   calld(0x100ca6a0, 0xdd29);            /* call 0x100ca6a0 */
    II(0x100bc977, 0x5)   jmpd(0x100bc899, -0xe3);              /* jmp 0x100bc899 */
l_0x100bc97c:
    II(0x100bc97c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc97e, 0x6)   lea(eax, ebp - 0x1b0);                /* lea eax, [ebp+0xfffffe50] */
    II(0x100bc984, 0x5)   calld(0x100ca6a0, 0xdd17);            /* call 0x100ca6a0 */
    II(0x100bc989, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc98b, 0x6)   lea(eax, ebp - 0x1ac);                /* lea eax, [ebp+0xfffffe54] */
    II(0x100bc991, 0x5)   calld(0x100ca6a0, 0xdd0a);            /* call 0x100ca6a0 */
    II(0x100bc996, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc999, 0x5)   calld(0x100be21a, 0x187c);            /* call 0x100be21a */
    II(0x100bc99e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc9a1, 0x5)   calld(0x100bb100, -0x18a6);           /* call 0x100bb100 */
    II(0x100bc9a6, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100bc9ab, 0x5)   calld(0x10076338, -0x46678);          /* call 0x10076338 */
    II(0x100bc9b0, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bc9b3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bc9b5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bc9b7, 0x5)   calld(0x1007643c, -0x46580);          /* call 0x1007643c */
    II(0x100bc9bc, 0x2)   jmpd(0x100bc9c6, 0x8);                /* jmp 0x100bc9c6 */
l_0x100bc9be:
    II(0x100bc9be, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc9c1, 0x5)   calld(0x10076bf8, -0x45dce);          /* call 0x10076bf8 */
l_0x100bc9c6:
    II(0x100bc9c6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc9c8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc9cb, 0x5)   calld(0x1013ad71, 0x7e3a1);           /* call 0x1013ad71 */
    II(0x100bc9d0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bc9d2, 0x6)   jzd(0x100bcab1, 0xd9);                /* jz dword 0x100bcab1 */
    II(0x100bc9d8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc9db, 0x5)   calld(0x100763a0, -0x46640);          /* call 0x100763a0 */
    II(0x100bc9e0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bc9e2, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bc9e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bc9e8, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bc9eb, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bc9ed, 0x6)   jnzd(0x100bcaac, 0xb9);               /* jnz dword 0x100bcaac */
    II(0x100bc9f3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bc9f6, 0x5)   calld(0x100763a0, -0x4665b);          /* call 0x100763a0 */
    II(0x100bc9fb, 0x5)   calld(0x101526ac, 0x95cac);           /* call 0x101526ac */
    II(0x100bca00, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bca02, 0x2)   jzd(0x100bca1a, 0x16);                /* jz 0x100bca1a */
    II(0x100bca04, 0x5)   calld(0x1008b0e4, -0x31925);          /* call 0x1008b0e4 */
    II(0x100bca09, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bca0b, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100bca0d, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bca10, 0x5)   calld(0x100763d4, -0x46641);          /* call 0x100763d4 */
    II(0x100bca15, 0x5)   calld(0x100a297d, -0x1a09d);          /* call 0x100a297d */
l_0x100bca1a:
    II(0x100bca1a, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bca1d, 0x5)   calld(0x100763a0, -0x46682);          /* call 0x100763a0 */
    II(0x100bca22, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100bca25, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bca2a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bca2c, 0x6)   jled(0x100bcaac, 0x7a);               /* jle dword 0x100bcaac */
    II(0x100bca32, 0xa)   mov(memd_a32(ss, ebp - 0x1c8), 0x1);  /* mov dword [ebp+0xfffffe38], 0x1 */
    II(0x100bca3c, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x100bca41, 0x5)   calld(sys_new, 0xa93ba);              /* call 0x10165e00 */
    II(0x100bca46, 0x6)   mov(memd_a32(ss, ebp - 0x1cc), eax);  /* mov [ebp+0xfffffe34], eax */
//    II(0x100bca4c, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1cc));  /* mov eax, [ebp+0xfffffe34] */
    II(0x100bca52, 0x6)   mov(memd_a32(ss, ebp - 0x1d0), eax);  /* mov [ebp+0xfffffe30], eax */
    II(0x100bca58, 0x7)   cmp(memd_a32(ss, ebp - 0x1d0), 0);    /* cmp dword [ebp+0xfffffe30], 0x0 */
    II(0x100bca5f, 0x2)   jzd(0x100bca8a, 0x29);                /* jz 0x100bca8a */
    II(0x100bca61, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bca64, 0x5)   calld(0x100763d4, -0x46695);          /* call 0x100763d4 */
    II(0x100bca69, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bca6b, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1cc));  /* mov eax, [ebp+0xfffffe34] */
    II(0x100bca71, 0x5)   calld(0x100a3d3a, -0x18d3c);          /* call 0x100a3d3a */
    II(0x100bca76, 0x6)   mov(memd_a32(ss, ebp - 0x1d4), eax);  /* mov [ebp+0xfffffe2c], eax */
//    II(0x100bca7c, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1d4));  /* mov eax, [ebp+0xfffffe2c] */
    II(0x100bca82, 0x6)   mov(memd_a32(ss, ebp - 0x1d8), eax);  /* mov [ebp+0xfffffe28], eax */
    II(0x100bca88, 0x2)   jmpd(0x100bca96, 0xc);                /* jmp 0x100bca96 */
l_0x100bca8a:
    II(0x100bca8a, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1d0));  /* mov eax, [ebp+0xfffffe30] */
    II(0x100bca90, 0x6)   mov(memd_a32(ss, ebp - 0x1d8), eax);  /* mov [ebp+0xfffffe28], eax */
l_0x100bca96:
    II(0x100bca96, 0x6)   mov(edx, memd_a32(ss, ebp - 0x1d8));  /* mov edx, [ebp+0xfffffe28] */
    II(0x100bca9c, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bcaa1, 0x6)   mov(ebx, memd_a32(ss, ebp - 0x1c8));  /* mov ebx, [ebp+0xfffffe38] */
    II(0x100bcaa7, 0x5)   calld(0x100a4db6, -0x17cf6);          /* call 0x100a4db6 */
l_0x100bcaac:
    II(0x100bcaac, 0x5)   jmpd(0x100bc9be, -0xf3);              /* jmp 0x100bc9be */
l_0x100bcab1:
    II(0x100bcab1, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100bcab6, 0x5)   calld(0x10076338, -0x46783);          /* call 0x10076338 */
    II(0x100bcabb, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x100bcabe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bcac0, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bcac2, 0x5)   calld(0x1007643c, -0x4668b);          /* call 0x1007643c */
    II(0x100bcac7, 0x2)   jmpd(0x100bcad1, 0x8);                /* jmp 0x100bcad1 */
l_0x100bcac9:
    II(0x100bcac9, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bcacc, 0x5)   calld(0x10076bf8, -0x45ed9);          /* call 0x10076bf8 */
l_0x100bcad1:
    II(0x100bcad1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bcad3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bcad6, 0x5)   calld(0x1013ad71, 0x7e296);           /* call 0x1013ad71 */
    II(0x100bcadb, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bcadd, 0x6)   jzd(0x100bcbbc, 0xd9);                /* jz dword 0x100bcbbc */
    II(0x100bcae3, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bcae6, 0x5)   calld(0x100763a0, -0x4674b);          /* call 0x100763a0 */
    II(0x100bcaeb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bcaed, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bcaf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bcaf3, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bcaf6, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bcaf8, 0x6)   jnzd(0x100bcbb7, 0xb9);               /* jnz dword 0x100bcbb7 */
    II(0x100bcafe, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bcb01, 0x5)   calld(0x100763a0, -0x46766);          /* call 0x100763a0 */
    II(0x100bcb06, 0x5)   calld(0x101526ac, 0x95ba1);           /* call 0x101526ac */
    II(0x100bcb0b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bcb0d, 0x2)   jzd(0x100bcb25, 0x16);                /* jz 0x100bcb25 */
    II(0x100bcb0f, 0x5)   calld(0x1008b0e4, -0x31a30);          /* call 0x1008b0e4 */
    II(0x100bcb14, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bcb16, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100bcb18, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bcb1b, 0x5)   calld(0x100763d4, -0x4674c);          /* call 0x100763d4 */
    II(0x100bcb20, 0x5)   calld(0x100a297d, -0x1a1a8);          /* call 0x100a297d */
l_0x100bcb25:
    II(0x100bcb25, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bcb28, 0x5)   calld(0x100763a0, -0x4678d);          /* call 0x100763a0 */
    II(0x100bcb2d, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100bcb30, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bcb35, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bcb37, 0x6)   jled(0x100bcbb7, 0x7a);               /* jle dword 0x100bcbb7 */
    II(0x100bcb3d, 0xa)   mov(memd_a32(ss, ebp - 0x1dc), 0x1);  /* mov dword [ebp+0xfffffe24], 0x1 */
    II(0x100bcb47, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x100bcb4c, 0x5)   calld(sys_new, 0xa92af);              /* call 0x10165e00 */
    II(0x100bcb51, 0x6)   mov(memd_a32(ss, ebp - 0x1e0), eax);  /* mov [ebp+0xfffffe20], eax */
//    II(0x100bcb57, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1e0));  /* mov eax, [ebp+0xfffffe20] */
    II(0x100bcb5d, 0x6)   mov(memd_a32(ss, ebp - 0x1e4), eax);  /* mov [ebp+0xfffffe1c], eax */
    II(0x100bcb63, 0x7)   cmp(memd_a32(ss, ebp - 0x1e4), 0);    /* cmp dword [ebp+0xfffffe1c], 0x0 */
    II(0x100bcb6a, 0x2)   jzd(0x100bcb95, 0x29);                /* jz 0x100bcb95 */
    II(0x100bcb6c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bcb6f, 0x5)   calld(0x100763d4, -0x467a0);          /* call 0x100763d4 */
    II(0x100bcb74, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bcb76, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1e0));  /* mov eax, [ebp+0xfffffe20] */
    II(0x100bcb7c, 0x5)   calld(0x100a3d3a, -0x18e47);          /* call 0x100a3d3a */
    II(0x100bcb81, 0x6)   mov(memd_a32(ss, ebp - 0x1e8), eax);  /* mov [ebp+0xfffffe18], eax */
//    II(0x100bcb87, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1e8));  /* mov eax, [ebp+0xfffffe18] */
    II(0x100bcb8d, 0x6)   mov(memd_a32(ss, ebp - 0x1ec), eax);  /* mov [ebp+0xfffffe14], eax */
    II(0x100bcb93, 0x2)   jmpd(0x100bcba1, 0xc);                /* jmp 0x100bcba1 */
l_0x100bcb95:
    II(0x100bcb95, 0x6)   mov(eax, memd_a32(ss, ebp - 0x1e4));  /* mov eax, [ebp+0xfffffe1c] */
    II(0x100bcb9b, 0x6)   mov(memd_a32(ss, ebp - 0x1ec), eax);  /* mov [ebp+0xfffffe14], eax */
l_0x100bcba1:
    II(0x100bcba1, 0x6)   mov(edx, memd_a32(ss, ebp - 0x1ec));  /* mov edx, [ebp+0xfffffe14] */
    II(0x100bcba7, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bcbac, 0x6)   mov(ebx, memd_a32(ss, ebp - 0x1dc));  /* mov ebx, [ebp+0xfffffe24] */
    II(0x100bcbb2, 0x5)   calld(0x100a4db6, -0x17e01);          /* call 0x100a4db6 */
l_0x100bcbb7:
    II(0x100bcbb7, 0x5)   jmpd(0x100bcac9, -0xf3);              /* jmp 0x100bcac9 */
l_0x100bcbbc:
    II(0x100bcbbc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bcbbf, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bcbc2, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bcbc7, 0x5)   calld(0x100a4fb5, -0x17c17);          /* call 0x100a4fb5 */
    II(0x100bcbcc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bcbce, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100bcbd1, 0x5)   calld(0x10088e4c, -0x33d8a);          /* call 0x10088e4c */
    II(0x100bcbd6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bcbd8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100bcbdb, 0x5)   calld(0x10075f6c, -0x46c74);          /* call 0x10075f6c */
l_0x100bcbe0:
    II(0x100bcbe0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100bcbe2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100bcbe3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100bcbe4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100bcbe5, 0x1)   popd(edx);                            /* pop edx */
    II(0x100bcbe6, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100bcbe7, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100bcbe8, 0x1)   retd();                               /* ret */
FUNC_END

