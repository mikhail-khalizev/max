FUNC_BEGIN(0x100b9da4, 0xe46c3a84f024540, 0x20, ({0x68, 0x9c, 0, 0, 0, 0xe8, 0xa4, 0xbf, 0xa, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x84, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0xd7, 0x12, 0xfd, 0xff, 0x89, 0x45, 0xf0, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x29, 0xe8, 0xb1, 0xcd, 0xfb, 0xff, 0x98, 0x85, 0xc0, 0xf, 0x85, 0x52, 0x1, 0, 0, 0xb8, 0x37, 0, 0, 0, 0xe8, 0xe, 0xc0, 0xa, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x26, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xdc, 0xe8, 0x58, 0xc0, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xe4, 0xe8, 0x2, 0x91, 0xfd, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xd4, 0x8b, 0x55, 0xd4, 0x8d, 0x45, 0xec, 0xe8, 0xac, 0x11, 0xfd, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0x74, 0x11, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x29, 0xe8, 0xf3, 0x2b, 0xfe, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0x5f, 0x11, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xef, 0xae, 0xfe, 0xff, 0xb8, 0xd1, 0, 0, 0, 0xe8, 0x95, 0xbf, 0xa, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x26, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xc8, 0xe8, 0xdf, 0xbf, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xd0, 0xe8, 0xc5, 0x3e, 0xfc, 0xff, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc0, 0x8b, 0x55, 0xc0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1d, 0xe8, 0x30, 0x11, 0xfd, 0xff, 0xb8, 0x23, 0, 0, 0, 0xe8, 0x42, 0xbf, 0xa, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0x83, 0x7d, 0xb8, 0, 0x74, 0x26, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xb4, 0xe8, 0x8c, 0xbf, 0xfb, 0xff, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xbc, 0xe8, 0x53, 0xf7, 0xfb, 0xff, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xac, 0xeb, 0x6, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xac, 0x8b, 0x55, 0xac, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x33, 0xe8, 0xb1, 0xd, 0x1, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1d, 0xe8, 0xa2, 0x10, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x32, 0xae, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x33, 0xe8, 0x5f, 0xd, 0x1, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x1b, 0xae, 0xfe, 0xff, 0xe9, 0x32, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x29, 0xe8, 0xaf, 0xf, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa8, 0xe8, 0x21, 0xf, 0xfd, 0xff, 0x8d, 0x45, 0xa4, 0xe8, 0x99, 0xcb, 0xfb, 0xff, 0x8d, 0x45, 0xa8, 0xe8, 0x99, 0xe, 0xfd, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x7b, 0x10, 0xfd, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0xb7, 0xf, 0xfd, 0xff, 0x89, 0x45, 0xa0, 0x8b, 0x5d, 0xa0, 0x8b, 0x5b, 0x2, 0x8d, 0x55, 0x90, 0x8b, 0x45, 0xa0, 0xff, 0x53, 0x1c, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xa4, 0xe8, 0xb6, 0xeb, 0xfc, 0xff, 0xf, 0xbf, 0x5d, 0x94, 0xf, 0xbf, 0x55, 0x90, 0x8d, 0x45, 0x8c, 0xe8, 0xe, 0xcb, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa4, 0xe8, 0xc4, 0xca, 0xfb, 0xff, 0x8b, 0x55, 0xa6, 0xf, 0xaf, 0x55, 0xa6, 0x8b, 0x45, 0xa4, 0xf, 0xaf, 0x45, 0xa4, 0x1, 0xd0, 0x89, 0x45, 0x88, 0x8d, 0x45, 0xa8, 0xe8, 0x35, 0xcc, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xa8, 0xe8, 0x2b, 0xcc, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa8, 0xe8, 0x9a, 0xd, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x83, 0, 0, 0, 0x8d, 0x45, 0xa8, 0xe8, 0xdd, 0xd, 0xfd, 0xff, 0x89, 0x45, 0x84, 0x8b, 0x45, 0x84, 0x8b, 0x58, 0x2, 0x8d, 0x55, 0x90, 0x8b, 0x45, 0x84, 0xff, 0x53, 0x1c, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xa4, 0xe8, 0x40, 0xeb, 0xfc, 0xff, 0xf, 0xbf, 0x5d, 0x94, 0xf, 0xbf, 0x55, 0x90, 0x8d, 0x45, 0x80, 0xe8, 0x98, 0xca, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa4, 0xe8, 0x4e, 0xca, 0xfb, 0xff, 0x8b, 0x45, 0xa6, 0xf, 0xaf, 0x45, 0xa6, 0x8b, 0x55, 0xa4, 0xf, 0xaf, 0x55, 0xa4, 0x1, 0xc2, 0x89, 0x95, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x45, 0x88, 0x7d, 0x1d, 0x8d, 0x45, 0xa8, 0xe8, 0xb0, 0xd, 0xfd, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x90, 0xf, 0xfd, 0xff, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x89, 0x45, 0x88, 0xe9, 0x63, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa8, 0xe8, 0x50, 0xeb, 0xfc, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0x40, 0xf, 0xfd, 0xff, 0x89, 0x45, 0xe8, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xfb, 0xea, 0xfc, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xef, 0xea, 0xfc, 0xff, 0x8b, 0x45, 0xe8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b9da4, 0x5)   pushd(0x9c);                          /* push dword 0x9c */
    II(0x100b9da9, 0x5)   calld(sys_check_available_stack_size, 0xabfa4); /* call 0x10165d52 */
    II(0x100b9dae, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b9daf, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b9db0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b9db1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b9db2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b9db3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b9db5, 0x6)   sub(esp, 0x84);                       /* sub esp, 0x84 */
    II(0x100b9dbb, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b9dbe, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b9dc1, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100b9dc5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b9dc8, 0x5)   calld(my_ctor_0x101b3b58, -0x2ed29);  /* call 0x1008b0a4 */
    II(0x100b9dcd, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b9dd0, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100b9dd4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9dd7, 0x3)   add(eax, 0x29);                       /* add eax, 0x29 */
    II(0x100b9dda, 0x5)   calld(0x10076b90, -0x4324f);          /* call 0x10076b90 */
    II(0x100b9ddf, 0x1)   cwde();                               /* cwde */
    II(0x100b9de0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b9de2, 0x6)   jnzd(0x100b9f3a, 0x152);              /* jnz dword 0x100b9f3a */
    II(0x100b9de8, 0x5)   mov(eax, 0x37);                       /* mov eax, 0x37 */
    II(0x100b9ded, 0x5)   calld(sys_new, 0xac00e);              /* call 0x10165e00 */
    II(0x100b9df2, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100b9df5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b9df8, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100b9dfb, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x100b9dff, 0x2)   jzd(0x100b9e27, 0x26);                /* jz 0x100b9e27 */
    II(0x100b9e01, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b9e04, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b9e07, 0x5)   calld(0x10075e64, -0x43fa8);          /* call 0x10075e64 */
    II(0x100b9e0c, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b9e0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9e11, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100b9e14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b9e17, 0x5)   calld(0x10092f1e, -0x26efe);          /* call 0x10092f1e */
    II(0x100b9e1c, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100b9e1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100b9e22, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100b9e25, 0x2)   jmpd(0x100b9e2d, 0x6);                /* jmp 0x100b9e2d */
l_0x100b9e27:
    II(0x100b9e27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100b9e2a, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100b9e2d:
    II(0x100b9e2d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2c));   /* mov edx, [ebp-0x2c] */
    II(0x100b9e30, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b9e33, 0x5)   calld(0x1008afe4, -0x2ee54);          /* call 0x1008afe4 */
    II(0x100b9e38, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b9e3b, 0x5)   calld(0x1008afb4, -0x2ee8c);          /* call 0x1008afb4 */
    II(0x100b9e40, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b9e42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9e45, 0x3)   add(eax, 0x29);                       /* add eax, 0x29 */
    II(0x100b9e48, 0x5)   calld(0x1009ca40, -0x1d40d);          /* call 0x1009ca40 */
    II(0x100b9e4d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b9e50, 0x5)   calld(0x1008afb4, -0x2eea1);          /* call 0x1008afb4 */
    II(0x100b9e55, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b9e57, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b9e5c, 0x5)   calld(0x100a4d50, -0x15111);          /* call 0x100a4d50 */
    II(0x100b9e61, 0x5)   mov(eax, 0xd1);                       /* mov eax, 0xd1 */
    II(0x100b9e66, 0x5)   calld(sys_new, 0xabf95);              /* call 0x10165e00 */
    II(0x100b9e6b, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100b9e6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100b9e71, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100b9e74, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100b9e78, 0x2)   jzd(0x100b9ea0, 0x26);                /* jz 0x100b9ea0 */
    II(0x100b9e7a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b9e7d, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100b9e80, 0x5)   calld(0x10075e64, -0x44021);          /* call 0x10075e64 */
    II(0x100b9e85, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b9e87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9e8a, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100b9e8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100b9e90, 0x5)   calld(0x1007dd5a, -0x3c13b);          /* call 0x1007dd5a */
    II(0x100b9e95, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x100b9e98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100b9e9b, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100b9e9e, 0x2)   jmpd(0x100b9ea6, 0x6);                /* jmp 0x100b9ea6 */
l_0x100b9ea0:
    II(0x100b9ea0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100b9ea3, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x100b9ea6:
    II(0x100b9ea6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x100b9ea9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9eac, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x100b9eaf, 0x5)   calld(0x1008afe4, -0x2eed0);          /* call 0x1008afe4 */
    II(0x100b9eb4, 0x5)   mov(eax, 0x23);                       /* mov eax, 0x23 */
    II(0x100b9eb9, 0x5)   calld(sys_new, 0xabf42);              /* call 0x10165e00 */
    II(0x100b9ebe, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x100b9ec1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100b9ec4, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100b9ec7, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0);     /* cmp dword [ebp-0x48], 0x0 */
    II(0x100b9ecb, 0x2)   jzd(0x100b9ef3, 0x26);                /* jz 0x100b9ef3 */
    II(0x100b9ecd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b9ed0, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100b9ed3, 0x5)   calld(0x10075e64, -0x44074);          /* call 0x10075e64 */
    II(0x100b9ed8, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b9eda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9edd, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100b9ee0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100b9ee3, 0x5)   calld(0x1007963b, -0x408ad);          /* call 0x1007963b */
    II(0x100b9ee8, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
//    II(0x100b9eeb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100b9eee, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100b9ef1, 0x2)   jmpd(0x100b9ef9, 0x6);                /* jmp 0x100b9ef9 */
l_0x100b9ef3:
    II(0x100b9ef3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100b9ef6, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
l_0x100b9ef9:
    II(0x100b9ef9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x54));   /* mov edx, [ebp-0x54] */
    II(0x100b9efc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9eff, 0x3)   add(eax, 0x33);                       /* add eax, 0x33 */
    II(0x100b9f02, 0x5)   calld(0x100cacb8, 0x10db1);           /* call 0x100cacb8 */
    II(0x100b9f07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9f0a, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x100b9f0d, 0x5)   calld(0x1008afb4, -0x2ef5e);          /* call 0x1008afb4 */
    II(0x100b9f12, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b9f14, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b9f19, 0x5)   calld(0x100a4d50, -0x151ce);          /* call 0x100a4d50 */
    II(0x100b9f1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9f21, 0x3)   add(eax, 0x33);                       /* add eax, 0x33 */
    II(0x100b9f24, 0x5)   calld(0x100cac88, 0x10d5f);           /* call 0x100cac88 */
    II(0x100b9f29, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b9f2b, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b9f30, 0x5)   calld(0x100a4d50, -0x151e5);          /* call 0x100a4d50 */
    II(0x100b9f35, 0x5)   jmpd(0x100ba06c, 0x132);              /* jmp 0x100ba06c */
l_0x100b9f3a:
    II(0x100b9f3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b9f3d, 0x3)   add(eax, 0x29);                       /* add eax, 0x29 */
    II(0x100b9f40, 0x5)   calld(0x1008aef4, -0x2f051);          /* call 0x1008aef4 */
    II(0x100b9f45, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b9f47, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b9f4a, 0x5)   calld(0x1008ae70, -0x2f0df);          /* call 0x1008ae70 */
    II(0x100b9f4f, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100b9f52, 0x5)   calld(my_ctor_0x101b4184, -0x43467);  /* call 0x10076af0 */
    II(0x100b9f57, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b9f5a, 0x5)   calld(0x1008adf8, -0x2f167);          /* call 0x1008adf8 */
    II(0x100b9f5f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b9f61, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b9f64, 0x5)   calld(0x1008afe4, -0x2ef85);          /* call 0x1008afe4 */
    II(0x100b9f69, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b9f6c, 0x5)   calld(0x1008af28, -0x2f049);          /* call 0x1008af28 */
    II(0x100b9f71, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100b9f74, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x60));   /* mov ebx, [ebp-0x60] */
    II(0x100b9f77, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x2));    /* mov ebx, [ebx+0x2] */
    II(0x100b9f7a, 0x3)   lea(edx, ebp - 0x70);                 /* lea edx, [ebp-0x70] */
    II(0x100b9f7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100b9f80, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x100b9f83, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b9f86, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100b9f89, 0x5)   calld(0x10088b44, -0x3144a);          /* call 0x10088b44 */
    II(0x100b9f8e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x6c)); /* movsx ebx, word [ebp-0x6c] */
    II(0x100b9f92, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x70)); /* movsx edx, word [ebp-0x70] */
    II(0x100b9f96, 0x3)   lea(eax, ebp - 0x74);                 /* lea eax, [ebp-0x74] */
    II(0x100b9f99, 0x5)   calld(0x10076aac, -0x434f2);          /* call 0x10076aac */
    II(0x100b9f9e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b9fa0, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100b9fa3, 0x5)   calld(0x10076a6c, -0x4353c);          /* call 0x10076a6c */
    II(0x100b9fa8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x5a));   /* mov edx, [ebp-0x5a] */
    II(0x100b9fab, 0x4)   imul(edx, memd_a32(ss, ebp - 0x5a));  /* imul edx, [ebp-0x5a] */
    II(0x100b9faf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100b9fb2, 0x4)   imul(eax, memd_a32(ss, ebp - 0x5c));  /* imul eax, [ebp-0x5c] */
    II(0x100b9fb6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100b9fb8, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x100b9fbb, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b9fbe, 0x5)   calld(0x10076bf8, -0x433cb);          /* call 0x10076bf8 */
    II(0x100b9fc3, 0x2)   jmpd(0x100b9fcd, 0x8);                /* jmp 0x100b9fcd */
l_0x100b9fc5:
    II(0x100b9fc5, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b9fc8, 0x5)   calld(0x10076bf8, -0x433d5);          /* call 0x10076bf8 */
l_0x100b9fcd:
    II(0x100b9fcd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b9fcf, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b9fd2, 0x5)   calld(0x1013ad71, 0x80d9a);           /* call 0x1013ad71 */
    II(0x100b9fd7, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b9fd9, 0x6)   jzd(0x100ba062, 0x83);                /* jz dword 0x100ba062 */
    II(0x100b9fdf, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b9fe2, 0x5)   calld(0x1008adc4, -0x2f223);          /* call 0x1008adc4 */
    II(0x100b9fe7, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
//    II(0x100b9fea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100b9fed, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100b9ff0, 0x3)   lea(edx, ebp - 0x70);                 /* lea edx, [ebp-0x70] */
    II(0x100b9ff3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100b9ff6, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x100b9ff9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b9ffc, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100b9fff, 0x5)   calld(0x10088b44, -0x314c0);          /* call 0x10088b44 */
    II(0x100ba004, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x6c)); /* movsx ebx, word [ebp-0x6c] */
    II(0x100ba008, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x70)); /* movsx edx, word [ebp-0x70] */
    II(0x100ba00c, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x100ba00f, 0x5)   calld(0x10076aac, -0x43568);          /* call 0x10076aac */
    II(0x100ba014, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba016, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100ba019, 0x5)   calld(0x10076a6c, -0x435b2);          /* call 0x10076a6c */
    II(0x100ba01e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5a));   /* mov eax, [ebp-0x5a] */
    II(0x100ba021, 0x4)   imul(eax, memd_a32(ss, ebp - 0x5a));  /* imul eax, [ebp-0x5a] */
    II(0x100ba025, 0x3)   mov(edx, memd_a32(ss, ebp - 0x5c));   /* mov edx, [ebp-0x5c] */
    II(0x100ba028, 0x4)   imul(edx, memd_a32(ss, ebp - 0x5c));  /* imul edx, [ebp-0x5c] */
    II(0x100ba02c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100ba02e, 0x6)   mov(memd_a32(ss, ebp - 0x84), edx);   /* mov [ebp+0xffffff7c], edx */
    II(0x100ba034, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x100ba03a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x78));    /* cmp ax, [ebp-0x78] */
    II(0x100ba03e, 0x2)   jged(0x100ba05d, 0x1d);               /* jge 0x100ba05d */
    II(0x100ba040, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100ba043, 0x5)   calld(0x1008adf8, -0x2f250);          /* call 0x1008adf8 */
    II(0x100ba048, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100ba04b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ba04d, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ba04f, 0x5)   calld(0x1008afe4, -0x2f070);          /* call 0x1008afe4 */
    II(0x100ba054, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x100ba05a, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
l_0x100ba05d:
    II(0x100ba05d, 0x5)   jmpd(0x100b9fc5, -0x9d);              /* jmp 0x100b9fc5 */
l_0x100ba062:
    II(0x100ba062, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba064, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100ba067, 0x5)   calld(0x10088bbc, -0x314b0);          /* call 0x10088bbc */
l_0x100ba06c:
    II(0x100ba06c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ba06f, 0x5)   calld(0x1008afb4, -0x2f0c0);          /* call 0x1008afb4 */
    II(0x100ba074, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100ba077, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ba079, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100ba07c, 0x5)   calld(0x10088b7c, -0x31505);          /* call 0x10088b7c */
    II(0x100ba081, 0x2)   jmpd(0x100ba08d, 0xa);                /* jmp 0x100ba08d */
//  II(0x100ba083, 0xa)   /* Недостижимый код. */
l_0x100ba08d:
    II(0x100ba08d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ba090, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ba092, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ba093, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ba094, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ba095, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ba096, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ba097, 0x1)   retd();                               /* ret */
FUNC_END

