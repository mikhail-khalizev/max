FUNC_BEGIN(0x100a3711, 0xc0962fcb22b2e66d, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x37, 0x26, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x7a, 0x69, 0, 0, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6, 0xe8, 0x5a, 0x79, 0xfe, 0xff, 0x83, 0xe8, 0x6, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0x34, 0x4f, 0x1b, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6, 0xe8, 0x76, 0x78, 0xfe, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6, 0xe8, 0xaa, 0x77, 0xfe, 0xff, 0xe8, 0x15, 0x7a, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a3711, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100a3716, 0x5)   calld(sys_check_available_stack_size, 0xc2637); /* call 0x10165d52 */
    II(0x100a371b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a371c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a371d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a371e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a371f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a3720, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a3722, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100a3728, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a372b, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100a372e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3731, 0x5)   calld(0x100aa0b0, 0x697a);            /* call 0x100aa0b0 */
    II(0x100a3736, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a3739, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a373c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a373f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3742, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a3745, 0x5)   calld(my_ctor_0x101b3b58, -0x186a6);  /* call 0x1008b0a4 */
    II(0x100a374a, 0x3)   sub(eax, 0x6);                        /* sub eax, 0x6 */
    II(0x100a374d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a3750, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a3753, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a3756, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3759, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b4f34); /* mov dword [eax+0x2], 0x101b4f34 */
    II(0x100a3760, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a3763, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3766, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a3769, 0x5)   calld(0x1008afe4, -0x1878a);          /* call 0x1008afe4 */
    II(0x100a376e, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100a3773, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3776, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a3779, 0x5)   calld(0x1008af28, -0x18856);          /* call 0x1008af28 */
    II(0x100a377e, 0x5)   calld(0x100ab198, 0x7a15);            /* call 0x100ab198 */
    II(0x100a3783, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3786, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100a3789, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a378c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a378e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a378f, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a3790, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a3791, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a3792, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a3793, 0x1)   retd();                               /* ret */
FUNC_END

