FUNC_BEGIN(0x10142e31, 0x6f4264522e698bd4, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x17, 0x2f, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x7e, 0x35, 0xf, 0xbf, 0x45, 0x10, 0xe8, 0x75, 0x11, 0xff, 0xff, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0x8b, 0x45, 0xf0, 0x50, 0x8b, 0x45, 0xec, 0xf, 0xbf, 0, 0x50, 0xf, 0xbf, 0x45, 0xfc, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x50, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x8, 0x50, 0xe8, 0x30, 0x7d, 0x2, 0, 0x83, 0xc4, 0x18, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x10142e31, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x10142e36, 0x5)   calld(sys_check_available_stack_size, 0x22f17); /* call 0x10165d52 */
    II(0x10142e3b, 0x1)   pushd(esi);                           /* push esi */
    II(0x10142e3c, 0x1)   pushd(edi);                           /* push edi */
    II(0x10142e3d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10142e3e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10142e40, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10142e46, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10142e49, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10142e4c, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10142e4f, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x10142e52, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10142e56, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10142e58, 0x2)   jled(0x10142e8f, 0x35);               /* jle 0x10142e8f */
    II(0x10142e5a, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x10142e5e, 0x5)   calld(my_get_res_data_by_id, -0xee8b); /* call 0x10133fd8 */
    II(0x10142e63, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10142e66, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10142e6a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142e6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10142e6e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142e6f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10142e72, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10142e75, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142e76, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10142e7a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142e7b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10142e7f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142e80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10142e83, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x10142e86, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142e87, 0x5)   calld(/* sys */ 0x1016abbc, 0x27d30); /* call 0x1016abbc */
    II(0x10142e8c, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
l_0x10142e8f:
    II(0x10142e8f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10142e91, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10142e92, 0x1)   popd(edi);                            /* pop edi */
    II(0x10142e93, 0x1)   popd(esi);                            /* pop esi */
    II(0x10142e94, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

