FUNC_BEGIN(0x100a432c, 0x923eddb0841d810a, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x1c, 0x1a, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xa7, 0x21, 0xfd, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xf7, 0x1b, 0xfd, 0xff, 0xe9, 0xce, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xba, 0x1e, 0xfd, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0xf, 0xaf, 0x45, 0xf0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x64, 0x3, 0xfd, 0xff, 0xf6, 0xc4, 0x1, 0xf, 0x84, 0xbf, 0, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x84, 0x1f, 0xfd, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x7c, 0x20, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x2e, 0x28, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x9d, 0x69, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0x8d, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xbc, 0x1f, 0xfd, 0xff, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x3a, 0x50, 0x26, 0x74, 0x1c, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe8, 0xe8, 0x9e, 0x1f, 0xfd, 0xff, 0xe8, 0x6d, 0x1c, 0xfd, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x26, 0x8d, 0x45, 0xe8, 0xe8, 0x8b, 0x1f, 0xfd, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x16, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x94, 0x1f, 0xfd, 0xff, 0xe8, 0xbc, 0xc8, 0xfc, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xe8, 0xe8, 0x7f, 0x1f, 0xfd, 0xff, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x28, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb8, 0x66, 0xfe, 0xff, 0xe9, 0x59, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x8e, 0x2, 0xfd, 0xff, 0xa8, 0x40, 0xf, 0x84, 0xbf, 0, 0, 0, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xaf, 0x1e, 0xfd, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xa7, 0x1f, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x59, 0x27, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xc8, 0x68, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0x8d, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xe7, 0x1e, 0xfd, 0xff, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x3a, 0x50, 0x26, 0x74, 0x1c, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe8, 0xe8, 0xc9, 0x1e, 0xfd, 0xff, 0xe8, 0x98, 0x1b, 0xfd, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x26, 0x8d, 0x45, 0xe8, 0xe8, 0xb6, 0x1e, 0xfd, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x16, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0xbf, 0x1e, 0xfd, 0xff, 0xe8, 0xe7, 0xc7, 0xfc, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xe8, 0xe8, 0xaa, 0x1e, 0xfd, 0xff, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x28, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xe3, 0x65, 0xfe, 0xff, 0xe9, 0x59, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x24, 0x1a, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a432c, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100a4331, 0x5)   calld(sys_check_available_stack_size, 0xc1a1c); /* call 0x10165d52 */
    II(0x100a4336, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a4337, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a4338, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a4339, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a433a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a433b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a433d, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100a4343, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a4346, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100a4349, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100a434d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4350, 0x5)   calld(0x100764fc, -0x2de59);          /* call 0x100764fc */
    II(0x100a4355, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100a4358, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100a435c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a435f, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x100a4362, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a4367, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4369, 0x2)   jnzd(0x100a437a, 0xf);                /* jnz 0x100a437a */
    II(0x100a436b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a436d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4370, 0x5)   calld(0x10075f6c, -0x2e409);          /* call 0x10075f6c */
    II(0x100a4375, 0x5)   jmpd(0x100a4548, 0x1ce);              /* jmp 0x100a4548 */
l_0x100a437a:
    II(0x100a437a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a437d, 0x5)   calld(0x1007623c, -0x2e146);          /* call 0x1007623c */
    II(0x100a4382, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x100a4386, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100a4389, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a438c, 0x4)   imul(eax, memd_a32(ss, ebp - 0x10));  /* imul eax, [ebp-0x10] */
    II(0x100a4390, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a4393, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4396, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a4399, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a439c, 0x5)   calld(0x10074705, -0x2fc9c);          /* call 0x10074705 */
    II(0x100a43a1, 0x3)   test(ah, 0x1);                        /* test ah, 0x1 */
    II(0x100a43a4, 0x6)   jzd(0x100a4469, 0xbf);                /* jz dword 0x100a4469 */
    II(0x100a43aa, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100a43af, 0x5)   calld(0x10076338, -0x2e07c);          /* call 0x10076338 */
    II(0x100a43b4, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100a43b7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a43b9, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a43bb, 0x5)   calld(0x1007643c, -0x2df84);          /* call 0x1007643c */
    II(0x100a43c0, 0x2)   jmpd(0x100a43ca, 0x8);                /* jmp 0x100a43ca */
l_0x100a43c2:
    II(0x100a43c2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a43c5, 0x5)   calld(0x10076bf8, -0x2d7d2);          /* call 0x10076bf8 */
l_0x100a43ca:
    II(0x100a43ca, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a43cc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a43cf, 0x5)   calld(0x1013ad71, 0x9699d);           /* call 0x1013ad71 */
    II(0x100a43d4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a43d6, 0x6)   jzd(0x100a4469, 0x8d);                /* jz dword 0x100a4469 */
    II(0x100a43dc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a43df, 0x5)   calld(0x100763a0, -0x2e044);          /* call 0x100763a0 */
    II(0x100a43e4, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100a43e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a43ea, 0x3)   cmp(dl, memb_a32(ds, eax + 0x26));    /* cmp dl, [eax+0x26] */
    II(0x100a43ed, 0x2)   jzd(0x100a440b, 0x1c);                /* jz 0x100a440b */
    II(0x100a43ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a43f2, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100a43f5, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100a43f7, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a43fa, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a43fd, 0x5)   calld(0x100763a0, -0x2e062);          /* call 0x100763a0 */
    II(0x100a4402, 0x5)   calld(0x10076074, -0x2e393);          /* call 0x10076074 */
    II(0x100a4407, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a4409, 0x2)   jnzd(0x100a440d, 0x2);                /* jnz 0x100a440d */
l_0x100a440b:
    II(0x100a440b, 0x2)   jmpd(0x100a4433, 0x26);               /* jmp 0x100a4433 */
l_0x100a440d:
    II(0x100a440d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4410, 0x5)   calld(0x100763a0, -0x2e075);          /* call 0x100763a0 */
    II(0x100a4415, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100a4418, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a441d, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100a4423, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100a4429, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a442e, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100a4431, 0x2)   jzd(0x100a4435, 0x2);                 /* jz 0x100a4435 */
l_0x100a4433:
    II(0x100a4433, 0x2)   jmpd(0x100a444b, 0x16);               /* jmp 0x100a444b */
l_0x100a4435:
    II(0x100a4435, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a4438, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a443b, 0x5)   calld(0x100763d4, -0x2e06c);          /* call 0x100763d4 */
    II(0x100a4440, 0x5)   calld(0x10070d01, -0x33744);          /* call 0x10070d01 */
    II(0x100a4445, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100a4449, 0x2)   jled(0x100a444d, 0x2);                /* jle 0x100a444d */
l_0x100a444b:
    II(0x100a444b, 0x2)   jmpd(0x100a4464, 0x17);               /* jmp 0x100a4464 */
l_0x100a444d:
    II(0x100a444d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4450, 0x5)   calld(0x100763d4, -0x2e081);          /* call 0x100763d4 */
    II(0x100a4455, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100a4458, 0x3)   add(ebx, 0x28);                       /* add ebx, 0x28 */
    II(0x100a445b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a445d, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a445f, 0x5)   calld(0x1008ab1c, -0x19948);          /* call 0x1008ab1c */
l_0x100a4464:
    II(0x100a4464, 0x5)   jmpd(0x100a43c2, -0xa7);              /* jmp 0x100a43c2 */
l_0x100a4469:
    II(0x100a4469, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a446c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a446f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a4472, 0x5)   calld(0x10074705, -0x2fd72);          /* call 0x10074705 */
    II(0x100a4477, 0x2)   test(al, 0x40);                       /* test al, 0x40 */
    II(0x100a4479, 0x6)   jzd(0x100a453e, 0xbf);                /* jz dword 0x100a453e */
    II(0x100a447f, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100a4484, 0x5)   calld(0x10076338, -0x2e151);          /* call 0x10076338 */
    II(0x100a4489, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100a448c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a448e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a4490, 0x5)   calld(0x1007643c, -0x2e059);          /* call 0x1007643c */
    II(0x100a4495, 0x2)   jmpd(0x100a449f, 0x8);                /* jmp 0x100a449f */
l_0x100a4497:
    II(0x100a4497, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a449a, 0x5)   calld(0x10076bf8, -0x2d8a7);          /* call 0x10076bf8 */
l_0x100a449f:
    II(0x100a449f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a44a1, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a44a4, 0x5)   calld(0x1013ad71, 0x968c8);           /* call 0x1013ad71 */
    II(0x100a44a9, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a44ab, 0x6)   jzd(0x100a453e, 0x8d);                /* jz dword 0x100a453e */
    II(0x100a44b1, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a44b4, 0x5)   calld(0x100763a0, -0x2e119);          /* call 0x100763a0 */
    II(0x100a44b9, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100a44bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a44bf, 0x3)   cmp(dl, memb_a32(ds, eax + 0x26));    /* cmp dl, [eax+0x26] */
    II(0x100a44c2, 0x2)   jzd(0x100a44e0, 0x1c);                /* jz 0x100a44e0 */
    II(0x100a44c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a44c7, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100a44ca, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100a44cc, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a44cf, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a44d2, 0x5)   calld(0x100763a0, -0x2e137);          /* call 0x100763a0 */
    II(0x100a44d7, 0x5)   calld(0x10076074, -0x2e468);          /* call 0x10076074 */
    II(0x100a44dc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a44de, 0x2)   jnzd(0x100a44e2, 0x2);                /* jnz 0x100a44e2 */
l_0x100a44e0:
    II(0x100a44e0, 0x2)   jmpd(0x100a4508, 0x26);               /* jmp 0x100a4508 */
l_0x100a44e2:
    II(0x100a44e2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a44e5, 0x5)   calld(0x100763a0, -0x2e14a);          /* call 0x100763a0 */
    II(0x100a44ea, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100a44ed, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a44f2, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100a44f8, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100a44fe, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100a4503, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100a4506, 0x2)   jzd(0x100a450a, 0x2);                 /* jz 0x100a450a */
l_0x100a4508:
    II(0x100a4508, 0x2)   jmpd(0x100a4520, 0x16);               /* jmp 0x100a4520 */
l_0x100a450a:
    II(0x100a450a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a450d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4510, 0x5)   calld(0x100763d4, -0x2e141);          /* call 0x100763d4 */
    II(0x100a4515, 0x5)   calld(0x10070d01, -0x33819);          /* call 0x10070d01 */
    II(0x100a451a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100a451e, 0x2)   jled(0x100a4522, 0x2);                /* jle 0x100a4522 */
l_0x100a4520:
    II(0x100a4520, 0x2)   jmpd(0x100a4539, 0x17);               /* jmp 0x100a4539 */
l_0x100a4522:
    II(0x100a4522, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4525, 0x5)   calld(0x100763d4, -0x2e156);          /* call 0x100763d4 */
    II(0x100a452a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100a452d, 0x3)   add(ebx, 0x28);                       /* add ebx, 0x28 */
    II(0x100a4530, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4532, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a4534, 0x5)   calld(0x1008ab1c, -0x19a1d);          /* call 0x1008ab1c */
l_0x100a4539:
    II(0x100a4539, 0x5)   jmpd(0x100a4497, -0xa7);              /* jmp 0x100a4497 */
l_0x100a453e:
    II(0x100a453e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4540, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4543, 0x5)   calld(0x10075f6c, -0x2e5dc);          /* call 0x10075f6c */
l_0x100a4548:
    II(0x100a4548, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a454a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a454b, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a454c, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a454d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a454e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a454f, 0x1)   retd();                               /* ret */
FUNC_END

