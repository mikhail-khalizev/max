FUNC_BEGIN(0x1008f76b, 0xf96474f8020f7754, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0xdd, 0x65, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8d, 0x45, 0xf0, 0xe8, 0x62, 0x73, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xdb, 0x6d, 0xfe, 0xff, 0xe8, 0xe, 0x2f, 0xc, 0, 0x3b, 0x45, 0xfc, 0xf, 0x85, 0x97, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x25, 0x5, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1d, 0xe8, 0x56, 0xb5, 0xa, 0, 0x84, 0xc0, 0x75, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x13, 0xc, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x13, 0x21, 0x75, 0xd, 0x8b, 0x45, 0xfc, 0xe8, 0x61, 0xe7, 0xff, 0xff, 0xe9, 0x5c, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1d, 0xe8, 0x3b, 0xb7, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0xff, 0x52, 0x20, 0x3c, 0x15, 0x75, 0x9, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x2f, 0x6, 0, 0, 0xbb, 0x89, 0x5, 0x1a, 0x10, 0xba, 0x96, 0x5, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x73, 0x65, 0xd, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1d, 0xe8, 0x87, 0xb7, 0xff, 0xff, 0x89, 0x45, 0xf8, 0x8d, 0x5d, 0xf0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x4c, 0x73, 0, 0, 0x84, 0xc0, 0xf, 0x84, 0xf0, 0, 0, 0, 0x8d, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0xe8, 0xf0, 0x92, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1f, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0xd, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x21, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x3b, 0x6, 0, 0, 0xbb, 0xcb, 0x5, 0x1a, 0x10, 0xba, 0xd8, 0x5, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x3, 0x65, 0xd, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x25, 0x7, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x6b, 0xb4, 0xa, 0, 0x84, 0xc0, 0xf, 0x85, 0x90, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x76, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x75, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0xf3, 0xe8, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0xcc, 0xea, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x68, 0x8b, 0x45, 0xfc, 0xe8, 0x4a, 0xb4, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x52, 0xe8, 0xd5, 0xae, 0xff, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xe4, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x7, 0x65, 0xd, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x16, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xe0, 0xe8, 0xb6, 0x3f, 0x1, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd4, 0x8b, 0x55, 0xd4, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x5d, 0xe4, 0xe8, 0x82, 0x54, 0x1, 0, 0xeb, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0, 0xe6, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008f76b, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x1008f770, 0x5)   calld(sys_check_available_stack_size, 0xd65dd); /* call 0x10165d52 */
    II(0x1008f775, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008f776, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008f777, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008f778, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008f779, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008f77a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008f77b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008f77d, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x1008f783, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1008f786, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1008f789, 0x5)   calld(my_ctor_0x101b4184, -0x18c9e);  /* call 0x10076af0 */
    II(0x1008f78e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f791, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008f794, 0x5)   calld(0x10076574, -0x19225);          /* call 0x10076574 */
    II(0x1008f799, 0x5)   calld(0x101526ac, 0xc2f0e);           /* call 0x101526ac */
    II(0x1008f79e, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x1008f7a1, 0x6)   jnzd(0x1008f93e, 0x197);              /* jnz dword 0x1008f93e */
    II(0x1008f7a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f7aa, 0x4)   mov(memb_a32(ds, eax + 0x25), 0x5);   /* mov byte [eax+0x25], 0x5 */
    II(0x1008f7ae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f7b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f7b3, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x1008f7b6, 0x5)   calld(0x1013ad11, 0xab556);           /* call 0x1013ad11 */
    II(0x1008f7bb, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f7bd, 0x2)   jnzd(0x1008f7c9, 0xa);                /* jnz 0x1008f7c9 */
    II(0x1008f7bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f7c2, 0x5)   cmp(memw_a32(ds, eax + 0x13), 0xc);   /* cmp word [eax+0x13], 0xc */
    II(0x1008f7c7, 0x2)   jnzd(0x1008f7cb, 0x2);                /* jnz 0x1008f7cb */
l_0x1008f7c9:
    II(0x1008f7c9, 0x2)   jmpd(0x1008f7d5, 0xa);                /* jmp 0x1008f7d5 */
l_0x1008f7cb:
    II(0x1008f7cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f7ce, 0x5)   cmp(memw_a32(ds, eax + 0x13), 0x21);  /* cmp word [eax+0x13], 0x21 */
    II(0x1008f7d3, 0x2)   jnzd(0x1008f7e2, 0xd);                /* jnz 0x1008f7e2 */
l_0x1008f7d5:
    II(0x1008f7d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f7d8, 0x5)   calld(0x1008df3e, -0x189f);           /* call 0x1008df3e */
    II(0x1008f7dd, 0x5)   jmpd(0x1008f93e, 0x15c);              /* jmp 0x1008f93e */
l_0x1008f7e2:
    II(0x1008f7e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f7e5, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x1008f7e8, 0x5)   calld(0x1008af28, -0x48c5);           /* call 0x1008af28 */
    II(0x1008f7ed, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x1008f7f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1008f7f3, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x1008f7f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1008f7f9, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x1008f7fc, 0x2)   cmp(al, 0x15);                        /* cmp al, 0x15 */
    II(0x1008f7fe, 0x2)   jnzd(0x1008f809, 0x9);                /* jnz 0x1008f809 */
    II(0x1008f800, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1008f807, 0x2)   jmpd(0x1008f822, 0x19);               /* jmp 0x1008f822 */
l_0x1008f809:
    II(0x1008f809, 0x5)   mov(ecx, 0x62f);                      /* mov ecx, 0x62f */
    II(0x1008f80e, 0x5)   mov(ebx, 0x101a0589);                 /* mov ebx, 0x101a0589 */ /* "ai_build.cpp" */
    II(0x1008f813, 0x5)   mov(edx, 0x101a0596);                 /* mov edx, 0x101a0596 */ /* "building_manager->GetType() == task_manage_buildings" */
    II(0x1008f818, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008f81a, 0x5)   calld(sys_assert, 0xd6573);           /* call 0x10165d92 */
    II(0x1008f81f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x1008f822:
    II(0x1008f822, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f825, 0x3)   add(eax, 0x1d);                       /* add eax, 0x1d */
    II(0x1008f828, 0x5)   calld(0x1008afb4, -0x4879);           /* call 0x1008afb4 */
    II(0x1008f82d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1008f830, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x1008f833, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008f836, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008f839, 0x5)   calld(0x10096b8a, 0x734c);            /* call 0x10096b8a */
    II(0x1008f83e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f840, 0x6)   jzd(0x1008f936, 0xf0);                /* jz dword 0x1008f936 */
    II(0x1008f846, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1008f849, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f84c, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x1008f84f, 0x5)   calld(0x10088b44, -0x6d10);           /* call 0x10088b44 */
    II(0x1008f854, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f857, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x1008f85a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008f85d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008f85f, 0x2)   jled(0x1008f86e, 0xd);                /* jle 0x1008f86e */
    II(0x1008f861, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f864, 0x3)   mov(eax, memd_a32(ds, eax + 0x21));   /* mov eax, [eax+0x21] */
    II(0x1008f867, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008f86a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008f86c, 0x2)   jgd(0x1008f870, 0x2);                 /* jg 0x1008f870 */
l_0x1008f86e:
    II(0x1008f86e, 0x2)   jmpd(0x1008f879, 0x9);                /* jmp 0x1008f879 */
l_0x1008f870:
    II(0x1008f870, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1008f877, 0x2)   jmpd(0x1008f892, 0x19);               /* jmp 0x1008f892 */
l_0x1008f879:
    II(0x1008f879, 0x5)   mov(ecx, 0x63b);                      /* mov ecx, 0x63b */
    II(0x1008f87e, 0x5)   mov(ebx, 0x101a05cb);                 /* mov ebx, 0x101a05cb */ /* "ai_build.cpp" */
    II(0x1008f883, 0x5)   mov(edx, 0x101a05d8);                 /* mov edx, 0x101a05d8 */ /* "site.x > 0 && site.y > 0" */
    II(0x1008f888, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008f88a, 0x5)   calld(sys_assert, 0xd6503);           /* call 0x10165d92 */
    II(0x1008f88f, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x1008f892:
    II(0x1008f892, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f895, 0x4)   mov(memb_a32(ds, eax + 0x25), 0x7);   /* mov byte [eax+0x25], 0x7 */
    II(0x1008f899, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008f89b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f89e, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008f8a1, 0x5)   calld(0x1013ad11, 0xab46b);           /* call 0x1013ad11 */
    II(0x1008f8a6, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f8a8, 0x6)   jnzd(0x1008f93e, 0x90);               /* jnz dword 0x1008f93e */
    II(0x1008f8ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f8b1, 0x5)   calld(0x1008f52c, -0x38a);            /* call 0x1008f52c */
    II(0x1008f8b6, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f8b8, 0x2)   jnzd(0x1008f8c6, 0xc);                /* jnz 0x1008f8c6 */
    II(0x1008f8ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f8bd, 0x5)   calld(0x1008e1b5, -0x170d);           /* call 0x1008e1b5 */
    II(0x1008f8c2, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f8c4, 0x2)   jzd(0x1008f8c8, 0x2);                 /* jz 0x1008f8c8 */
l_0x1008f8c6:
    II(0x1008f8c6, 0x2)   jmpd(0x1008f8d4, 0xc);                /* jmp 0x1008f8d4 */
l_0x1008f8c8:
    II(0x1008f8c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f8cb, 0x5)   calld(0x1008e39c, -0x1534);           /* call 0x1008e39c */
    II(0x1008f8d0, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f8d2, 0x2)   jzd(0x1008f8d6, 0x2);                 /* jz 0x1008f8d6 */
l_0x1008f8d4:
    II(0x1008f8d4, 0x2)   jmpd(0x1008f93e, 0x68);               /* jmp 0x1008f93e */
l_0x1008f8d6:
    II(0x1008f8d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f8d9, 0x5)   calld(0x1008ad28, -0x4bb6);           /* call 0x1008ad28 */
    II(0x1008f8de, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008f8e0, 0x2)   jnzd(0x1008f934, 0x52);               /* jnz 0x1008f934 */
    II(0x1008f8e2, 0x5)   calld(0x1008a7bc, -0x512b);           /* call 0x1008a7bc */
    II(0x1008f8e7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1008f8ec, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1008f8ef, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x1008f8f4, 0x5)   calld(sys_new, 0xd6507);              /* call 0x10165e00 */
    II(0x1008f8f9, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1008f8fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008f8ff, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1008f902, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x1008f906, 0x2)   jzd(0x1008f91e, 0x16);                /* jz 0x1008f91e */
    II(0x1008f908, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008f90b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1008f90e, 0x5)   calld(my_ctor_c11, 0x13fb6);          /* call 0x100a38c9 */
    II(0x1008f913, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x1008f916, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1008f919, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1008f91c, 0x2)   jmpd(0x1008f924, 0x6);                /* jmp 0x1008f924 */
l_0x1008f91e:
    II(0x1008f91e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1008f921, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x1008f924:
    II(0x1008f924, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2c));   /* mov edx, [ebp-0x2c] */
    II(0x1008f927, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1008f92c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x1c));   /* mov ebx, [ebp-0x1c] */
    II(0x1008f92f, 0x5)   calld(0x100a4db6, 0x15482);           /* call 0x100a4db6 */
l_0x1008f934:
    II(0x1008f934, 0x2)   jmpd(0x1008f93e, 0x8);                /* jmp 0x1008f93e */
l_0x1008f936:
    II(0x1008f936, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008f939, 0x5)   calld(0x1008df3e, -0x1a00);           /* call 0x1008df3e */
l_0x1008f93e:
    II(0x1008f93e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008f940, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008f941, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008f942, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008f943, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008f944, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008f945, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008f946, 0x1)   retd();                               /* ret */
FUNC_END

