FUNC_BEGIN(0x100e0e82, 0x96051f09338e11ab, 0x20, ({0x68, 0, 0x1, 0, 0, 0xe8, 0xc6, 0x4e, 0x8, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xe4, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4, 0xe8, 0x42, 0x58, 0xf9, 0xff, 0x83, 0xe8, 0x4, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xf0, 0x89, 0x2, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xe8, 0x42, 0x5b, 0xff, 0xff, 0xb8, 0xd, 0, 0, 0, 0xe8, 0x27, 0x4f, 0x8, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x37, 0x8b, 0x45, 0xf8, 0xe8, 0x14, 0x34, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xf8, 0xe8, 0x42, 0x34, 0, 0, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x2, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xcc, 0xe8, 0xc8, 0x6c, 0xff, 0xff, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x8, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x8, 0xe8, 0x38, 0x6e, 0xff, 0xff, 0xb8, 0xd, 0, 0, 0, 0xe8, 0xba, 0x4e, 0x8, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0x83, 0x7d, 0xb8, 0, 0x74, 0x37, 0x8b, 0x45, 0xfc, 0xe8, 0xa7, 0x33, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xfc, 0xe8, 0xd5, 0x33, 0, 0, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x2, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xbc, 0xe8, 0x5b, 0x6c, 0xff, 0xff, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0xeb, 0x6, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb0, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0xc, 0x8d, 0x55, 0xd0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0xc, 0xe8, 0xcb, 0x6d, 0xff, 0xff, 0xb8, 0x15, 0, 0, 0, 0x50, 0xb9, 0x46, 0, 0, 0, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xa0, 0xe8, 0x88, 0xa1, 0xfa, 0xff, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x82, 0x92, 0x8, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x2c, 0x4e, 0x8, 0, 0x89, 0x45, 0x9c, 0x8b, 0x45, 0x9c, 0x89, 0x45, 0x98, 0x83, 0x7d, 0x98, 0, 0x74, 0x37, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x4, 0x5, 0x2a, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0, 0x83, 0xe8, 0xc, 0xf, 0xbf, 0xc8, 0xbb, 0x8f, 0x1, 0, 0, 0xba, 0x8e, 0x1, 0, 0, 0x8b, 0x45, 0x9c, 0xe8, 0, 0xd4, 0xfe, 0xff, 0x89, 0x45, 0x94, 0x8b, 0x45, 0x94, 0x89, 0x45, 0x90, 0xeb, 0x6, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x90, 0x8b, 0x45, 0x90, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x10, 0xba, 0x8f, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x10, 0xe8, 0x81, 0xe2, 0xfe, 0xff, 0x8b, 0x55, 0xe2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x10, 0xe8, 0xe6, 0xd8, 0xfe, 0xff, 0x8d, 0x45, 0x8c, 0xe8, 0x55, 0xfb, 0xff, 0xff, 0x50, 0x8d, 0x45, 0x88, 0xe8, 0x78, 0xfb, 0xff, 0xff, 0x50, 0x8d, 0x45, 0x84, 0xe8, 0x9b, 0xfb, 0xff, 0xff, 0x50, 0x8d, 0x45, 0x80, 0xe8, 0xbe, 0xfb, 0xff, 0xff, 0x89, 0xc1, 0x8d, 0x5d, 0xa0, 0xba, 0x70, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x10, 0xe8, 0x4e, 0xdd, 0xfe, 0xff, 0x8b, 0x5d, 0xf0, 0xba, 0x98, 0x1c, 0xe, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x10, 0xe8, 0x92, 0xe7, 0xfe, 0xff, 0xba, 0xdd, 0x4, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x10, 0xe8, 0x32, 0x40, 0xff, 0xff, 0x80, 0x7d, 0x10, 0, 0xf, 0x84, 0x19, 0x3, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x4a, 0x4d, 0x8, 0, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x78, 0xff, 0xff, 0xff, 0, 0x74, 0x43, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x4, 0x5, 0x43, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0, 0x83, 0xe8, 0xc, 0xf, 0xbf, 0xc8, 0xbb, 0x8f, 0x1, 0, 0, 0xba, 0x8e, 0x1, 0, 0, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0xf, 0xd3, 0xfe, 0xff, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x14, 0xba, 0x8f, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x14, 0xe8, 0x7e, 0xe1, 0xfe, 0xff, 0x8b, 0x55, 0xe2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x14, 0xe8, 0xe3, 0xd7, 0xfe, 0xff, 0x8d, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0x4f, 0xfa, 0xff, 0xff, 0x50, 0x8d, 0x85, 0x68, 0xff, 0xff, 0xff, 0xe8, 0x6f, 0xfa, 0xff, 0xff, 0x50, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0x8f, 0xfa, 0xff, 0xff, 0x50, 0x8d, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0xaf, 0xfa, 0xff, 0xff, 0x8d, 0x5d, 0xa0, 0xba, 0x79, 0x1b, 0x1a, 0x10, 0x8b, 0x75, 0xf0, 0x8b, 0x76, 0x14, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0x3d, 0xdc, 0xfe, 0xff, 0x8b, 0x5d, 0xf0, 0xba, 0xeb, 0x1c, 0xe, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x14, 0xe8, 0x81, 0xe6, 0xfe, 0xff, 0xba, 0xdd, 0x4, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x14, 0xe8, 0x21, 0x3f, 0xff, 0xff, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x43, 0x4c, 0x8, 0, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x58, 0xff, 0xff, 0xff, 0, 0x74, 0x45, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x4, 0x5, 0x2a, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0, 0x5, 0x3f, 0, 0, 0, 0xf, 0xbf, 0xc8, 0xbb, 0x8f, 0x1, 0, 0, 0xba, 0x8e, 0x1, 0, 0, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x6, 0xd2, 0xfe, 0xff, 0x89, 0x85, 0x54, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x54, 0xff, 0xff, 0xff, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x18, 0xba, 0x8f, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x18, 0xe8, 0x75, 0xe0, 0xfe, 0xff, 0x8b, 0x55, 0xe2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x18, 0xe8, 0xda, 0xd6, 0xfe, 0xff, 0x8d, 0x85, 0x4c, 0xff, 0xff, 0xff, 0xe8, 0x46, 0xf9, 0xff, 0xff, 0x50, 0x8d, 0x85, 0x48, 0xff, 0xff, 0xff, 0xe8, 0x66, 0xf9, 0xff, 0xff, 0x50, 0x8d, 0x85, 0x44, 0xff, 0xff, 0xff, 0xe8, 0x86, 0xf9, 0xff, 0xff, 0x50, 0x8d, 0x85, 0x40, 0xff, 0xff, 0xff, 0xe8, 0xa6, 0xf9, 0xff, 0xff, 0x8d, 0x5d, 0xa0, 0xba, 0x80, 0x1b, 0x1a, 0x10, 0x8b, 0x75, 0xf0, 0x8b, 0x76, 0x18, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0x34, 0xdb, 0xfe, 0xff, 0x8b, 0x5d, 0xf0, 0xba, 0xa5, 0x1d, 0xe, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x18, 0xe8, 0x78, 0xe5, 0xfe, 0xff, 0xba, 0xdd, 0x4, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x18, 0xe8, 0x18, 0x3e, 0xff, 0xff, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x3a, 0x4b, 0x8, 0, 0x89, 0x85, 0x3c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x3c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x38, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x38, 0xff, 0xff, 0xff, 0, 0x74, 0x45, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x4, 0x5, 0x43, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0, 0x5, 0x3f, 0, 0, 0, 0xf, 0xbf, 0xc8, 0xbb, 0x8f, 0x1, 0, 0, 0xba, 0x8e, 0x1, 0, 0, 0x8b, 0x85, 0x3c, 0xff, 0xff, 0xff, 0xe8, 0xfd, 0xd0, 0xfe, 0xff, 0x89, 0x85, 0x34, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x34, 0xff, 0xff, 0xff, 0x89, 0x85, 0x30, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x38, 0xff, 0xff, 0xff, 0x89, 0x85, 0x30, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x30, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x1c, 0xba, 0x8f, 0x1, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1c, 0xe8, 0x6c, 0xdf, 0xfe, 0xff, 0x8b, 0x55, 0xe2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1c, 0xe8, 0xd1, 0xd5, 0xfe, 0xff, 0x8d, 0x85, 0x2c, 0xff, 0xff, 0xff, 0xe8, 0x3d, 0xf8, 0xff, 0xff, 0x50, 0x8d, 0x85, 0x28, 0xff, 0xff, 0xff, 0xe8, 0x5d, 0xf8, 0xff, 0xff, 0x50, 0x8d, 0x85, 0x24, 0xff, 0xff, 0xff, 0xe8, 0x7d, 0xf8, 0xff, 0xff, 0x50, 0x8d, 0x85, 0x20, 0xff, 0xff, 0xff, 0xe8, 0x9d, 0xf8, 0xff, 0xff, 0x89, 0xc1, 0x8d, 0x5d, 0xa0, 0xba, 0x87, 0x1b, 0x1a, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1c, 0xe8, 0x2d, 0xda, 0xfe, 0xff, 0x8b, 0x5d, 0xf0, 0xba, 0x5f, 0x1e, 0xe, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1c, 0xe8, 0x71, 0xe4, 0xfe, 0xff, 0xba, 0xdd, 0x4, 0, 0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1c, 0xe8, 0x11, 0x3d, 0xff, 0xff, 0xeb, 0x1e, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x14, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x18, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x1c, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x1c, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100e0e82, 0x5)   pushd(0x100);                         /* push dword 0x100 */
    II(0x100e0e87, 0x5)   calld(sys_check_available_stack_size, 0x84ec6); /* call 0x10165d52 */
    II(0x100e0e8c, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e0e8d, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e0e8e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e0e8f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e0e91, 0x6)   sub(esp, 0xe4);                       /* sub esp, 0xe4 */
    II(0x100e0e97, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e0e9a, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100e0e9d, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100e0ea0, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
//    II(0x100e0ea3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e0ea6, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e0ea9, 0x5)   calld(my_ctor_0x101b38f8, -0x6a7be);  /* call 0x100766f0 */
    II(0x100e0eae, 0x3)   sub(eax, 0x4);                        /* sub eax, 0x4 */
    II(0x100e0eb1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e0eb4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100e0eb7, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100e0eba, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e0ebd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100e0ec0, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x100e0ec2, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100e0ec5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e0ec8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100e0eca, 0x5)   calld(0x100d6a11, -0xa4be);           /* call 0x100d6a11 */
    II(0x100e0ecf, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x100e0ed4, 0x5)   calld(sys_new, 0x84f27);              /* call 0x10165e00 */
    II(0x100e0ed9, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x100e0edc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100e0edf, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100e0ee2, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x100e0ee6, 0x2)   jzd(0x100e0f1f, 0x37);                /* jz 0x100e0f1f */
    II(0x100e0ee8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e0eeb, 0x5)   calld(0x100e4304, 0x3414);            /* call 0x100e4304 */
    II(0x100e0ef0, 0x1)   cwde();                               /* cwde */
    II(0x100e0ef1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e0ef2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e0ef5, 0x5)   calld(0x100e433c, 0x3442);            /* call 0x100e433c */
    II(0x100e0efa, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e0efd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e0f00, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100e0f03, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100e0f06, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e0f09, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100e0f0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100e0f0f, 0x5)   calld(0x100d7bdc, -0x9338);           /* call 0x100d7bdc */
    II(0x100e0f14, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x100e0f17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100e0f1a, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100e0f1d, 0x2)   jmpd(0x100e0f25, 0x6);                /* jmp 0x100e0f25 */
l_0x100e0f1f:
    II(0x100e0f1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100e0f22, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
l_0x100e0f25:
    II(0x100e0f25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100e0f28, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100e0f2b, 0x3)   mov(memd_a32(ds, edx + 0x8), eax);    /* mov [edx+0x8], eax */
    II(0x100e0f2e, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100e0f31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e0f34, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100e0f37, 0x5)   calld(0x100d7d74, -0x91c8);           /* call 0x100d7d74 */
    II(0x100e0f3c, 0x5)   mov(eax, 0xd);                        /* mov eax, 0xd */
    II(0x100e0f41, 0x5)   calld(sys_new, 0x84eba);              /* call 0x10165e00 */
    II(0x100e0f46, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x100e0f49, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100e0f4c, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100e0f4f, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0);     /* cmp dword [ebp-0x48], 0x0 */
    II(0x100e0f53, 0x2)   jzd(0x100e0f8c, 0x37);                /* jz 0x100e0f8c */
    II(0x100e0f55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e0f58, 0x5)   calld(0x100e4304, 0x33a7);            /* call 0x100e4304 */
    II(0x100e0f5d, 0x1)   cwde();                               /* cwde */
    II(0x100e0f5e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e0f5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e0f62, 0x5)   calld(0x100e433c, 0x33d5);            /* call 0x100e433c */
    II(0x100e0f67, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e0f6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e0f6d, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100e0f70, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100e0f73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e0f76, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100e0f79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100e0f7c, 0x5)   calld(0x100d7bdc, -0x93a5);           /* call 0x100d7bdc */
    II(0x100e0f81, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x100e0f84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100e0f87, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100e0f8a, 0x2)   jmpd(0x100e0f92, 0x6);                /* jmp 0x100e0f92 */
l_0x100e0f8c:
    II(0x100e0f8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100e0f8f, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
l_0x100e0f92:
    II(0x100e0f92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100e0f95, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100e0f98, 0x3)   mov(memd_a32(ds, edx + 0xc), eax);    /* mov [edx+0xc], eax */
    II(0x100e0f9b, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100e0f9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e0fa1, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100e0fa4, 0x5)   calld(0x100d7d74, -0x9235);           /* call 0x100d7d74 */
    II(0x100e0fa9, 0x5)   mov(eax, 0x15);                       /* mov eax, 0x15 */
    II(0x100e0fae, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e0faf, 0x5)   mov(ecx, 0x46);                       /* mov ecx, 0x46 */
    II(0x100e0fb4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100e0fb6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e0fb8, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100e0fbb, 0x5)   calld(0x1008b148, -0x55e78);          /* call 0x1008b148 */
    II(0x100e0fc0, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100e0fc5, 0x5)   calld(/* sys */ 0x1016a24c, 0x89282); /* call 0x1016a24c */
    II(0x100e0fca, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x100e0fcf, 0x5)   calld(sys_new, 0x84e2c);              /* call 0x10165e00 */
    II(0x100e0fd4, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
//    II(0x100e0fd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x100e0fda, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x100e0fdd, 0x4)   cmp(memd_a32(ss, ebp - 0x68), 0);     /* cmp dword [ebp-0x68], 0x0 */
    II(0x100e0fe1, 0x2)   jzd(0x100e101a, 0x37);                /* jz 0x100e101a */
    II(0x100e0fe3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e0fe6, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100e0fea, 0x5)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x100e0fef, 0x1)   cwde();                               /* cwde */
    II(0x100e0ff0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e0ff1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e0ff4, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100e0ff7, 0x3)   sub(eax, 0xc);                        /* sub eax, 0xc */
    II(0x100e0ffa, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e0ffd, 0x5)   mov(ebx, 0x18f);                      /* mov ebx, 0x18f */
    II(0x100e1002, 0x5)   mov(edx, 0x18e);                      /* mov edx, 0x18e */
    II(0x100e1007, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x100e100a, 0x5)   calld(my_ctor_c17, -0x12c00);         /* call 0x100ce40f */
    II(0x100e100f, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
//    II(0x100e1012, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100e1015, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x100e1018, 0x2)   jmpd(0x100e1020, 0x6);                /* jmp 0x100e1020 */
l_0x100e101a:
    II(0x100e101a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100e101d, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
l_0x100e1020:
    II(0x100e1020, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100e1023, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100e1026, 0x3)   mov(memd_a32(ds, edx + 0x10), eax);   /* mov [edx+0x10], eax */
    II(0x100e1029, 0x5)   mov(edx, 0x18f);                      /* mov edx, 0x18f */
    II(0x100e102e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e1031, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x100e1034, 0x5)   calld(0x100cf2ba, -0x11d7f);          /* call 0x100cf2ba */
    II(0x100e1039, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1e));   /* mov edx, [ebp-0x1e] */
    II(0x100e103c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e103f, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x100e1042, 0x5)   calld(0x100ce92d, -0x1271a);          /* call 0x100ce92d */
    II(0x100e1047, 0x3)   lea(eax, ebp - 0x74);                 /* lea eax, [ebp-0x74] */
    II(0x100e104a, 0x5)   calld(0x100e0ba4, -0x4ab);            /* call 0x100e0ba4 */
    II(0x100e104f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1050, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x100e1053, 0x5)   calld(0x100e0bd0, -0x488);            /* call 0x100e0bd0 */
    II(0x100e1058, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1059, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x100e105c, 0x5)   calld(0x100e0bfc, -0x465);            /* call 0x100e0bfc */
    II(0x100e1061, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1062, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x100e1065, 0x5)   calld(0x100e0c28, -0x442);            /* call 0x100e0c28 */
    II(0x100e106a, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100e106c, 0x3)   lea(ebx, ebp - 0x60);                 /* lea ebx, [ebp-0x60] */
    II(0x100e106f, 0x5)   mov(edx, 0x101a1b70);                 /* mov edx, 0x101a1b70 */ /* "Activate" */
    II(0x100e1074, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e1077, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x100e107a, 0x5)   calld(0x100cedcd, -0x122b2);          /* call 0x100cedcd */
    II(0x100e107f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x100e1082, 0x5)   mov(edx, 0x100e1c98);                 /* mov edx, 0x100e1c98 */
    II(0x100e1087, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e108a, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x100e108d, 0x5)   calld(0x100cf824, -0x1186e);          /* call 0x100cf824 */
    II(0x100e1092, 0x5)   mov(edx, 0x4dd);                      /* mov edx, 0x4dd */
    II(0x100e1097, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e109a, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x100e109d, 0x5)   calld(0x100d50d4, -0xbfce);           /* call 0x100d50d4 */
    II(0x100e10a2, 0x4)   cmp(memb_a32(ss, ebp + 0x10), 0);     /* cmp byte [ebp+0x10], 0x0 */
    II(0x100e10a6, 0x6)   jzd(0x100e13c5, 0x319);               /* jz dword 0x100e13c5 */
    II(0x100e10ac, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x100e10b1, 0x5)   calld(sys_new, 0x84d4a);              /* call 0x10165e00 */
    II(0x100e10b6, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
//    II(0x100e10bc, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x100e10c2, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
    II(0x100e10c8, 0x7)   cmp(memd_a32(ss, ebp - 0x88), 0);     /* cmp dword [ebp+0xffffff78], 0x0 */
    II(0x100e10cf, 0x2)   jzd(0x100e1114, 0x43);                /* jz 0x100e1114 */
    II(0x100e10d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e10d4, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100e10d8, 0x5)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100e10dd, 0x1)   cwde();                               /* cwde */
    II(0x100e10de, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e10df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e10e2, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100e10e5, 0x3)   sub(eax, 0xc);                        /* sub eax, 0xc */
    II(0x100e10e8, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e10eb, 0x5)   mov(ebx, 0x18f);                      /* mov ebx, 0x18f */
    II(0x100e10f0, 0x5)   mov(edx, 0x18e);                      /* mov edx, 0x18e */
    II(0x100e10f5, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x100e10fb, 0x5)   calld(my_ctor_c17, -0x12cf1);         /* call 0x100ce40f */
    II(0x100e1100, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
//    II(0x100e1106, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x100e110c, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
    II(0x100e1112, 0x2)   jmpd(0x100e1120, 0xc);                /* jmp 0x100e1120 */
l_0x100e1114:
    II(0x100e1114, 0x6)   mov(eax, memd_a32(ss, ebp - 0x88));   /* mov eax, [ebp+0xffffff78] */
    II(0x100e111a, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
l_0x100e1120:
    II(0x100e1120, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100e1126, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100e1129, 0x3)   mov(memd_a32(ds, edx + 0x14), eax);   /* mov [edx+0x14], eax */
    II(0x100e112c, 0x5)   mov(edx, 0x18f);                      /* mov edx, 0x18f */
    II(0x100e1131, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e1134, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x100e1137, 0x5)   calld(0x100cf2ba, -0x11e82);          /* call 0x100cf2ba */
    II(0x100e113c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1e));   /* mov edx, [ebp-0x1e] */
    II(0x100e113f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e1142, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x100e1145, 0x5)   calld(0x100ce92d, -0x1281d);          /* call 0x100ce92d */
    II(0x100e114a, 0x6)   lea(eax, ebp - 0x94);                 /* lea eax, [ebp+0xffffff6c] */
    II(0x100e1150, 0x5)   calld(0x100e0ba4, -0x5b1);            /* call 0x100e0ba4 */
    II(0x100e1155, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1156, 0x6)   lea(eax, ebp - 0x98);                 /* lea eax, [ebp+0xffffff68] */
    II(0x100e115c, 0x5)   calld(0x100e0bd0, -0x591);            /* call 0x100e0bd0 */
    II(0x100e1161, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1162, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x100e1168, 0x5)   calld(0x100e0bfc, -0x571);            /* call 0x100e0bfc */
    II(0x100e116d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e116e, 0x6)   lea(eax, ebp - 0xa0);                 /* lea eax, [ebp+0xffffff60] */
    II(0x100e1174, 0x5)   calld(0x100e0c28, -0x551);            /* call 0x100e0c28 */
    II(0x100e1179, 0x3)   lea(ebx, ebp - 0x60);                 /* lea ebx, [ebp-0x60] */
    II(0x100e117c, 0x5)   mov(edx, 0x101a1b79);                 /* mov edx, 0x101a1b79 */ /* "Reload" */
    II(0x100e1181, 0x3)   mov(esi, memd_a32(ss, ebp - 0x10));   /* mov esi, [ebp-0x10] */
    II(0x100e1184, 0x3)   mov(esi, memd_a32(ds, esi + 0x14));   /* mov esi, [esi+0x14] */
    II(0x100e1187, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100e1189, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100e118b, 0x5)   calld(0x100cedcd, -0x123c3);          /* call 0x100cedcd */
    II(0x100e1190, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x100e1193, 0x5)   mov(edx, 0x100e1ceb);                 /* mov edx, 0x100e1ceb */
    II(0x100e1198, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e119b, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x100e119e, 0x5)   calld(0x100cf824, -0x1197f);          /* call 0x100cf824 */
    II(0x100e11a3, 0x5)   mov(edx, 0x4dd);                      /* mov edx, 0x4dd */
    II(0x100e11a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e11ab, 0x3)   mov(eax, memd_a32(ds, eax + 0x14));   /* mov eax, [eax+0x14] */
    II(0x100e11ae, 0x5)   calld(0x100d50d4, -0xc0df);           /* call 0x100d50d4 */
    II(0x100e11b3, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x100e11b8, 0x5)   calld(sys_new, 0x84c43);              /* call 0x10165e00 */
    II(0x100e11bd, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
//    II(0x100e11c3, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x100e11c9, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x100e11cf, 0x7)   cmp(memd_a32(ss, ebp - 0xa8), 0);     /* cmp dword [ebp+0xffffff58], 0x0 */
    II(0x100e11d6, 0x2)   jzd(0x100e121d, 0x45);                /* jz 0x100e121d */
    II(0x100e11d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e11db, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100e11df, 0x5)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x100e11e4, 0x1)   cwde();                               /* cwde */
    II(0x100e11e5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e11e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e11e9, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100e11ec, 0x5)   add(eax, 0x3f);                       /* add eax, 0x3f */
    II(0x100e11f1, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e11f4, 0x5)   mov(ebx, 0x18f);                      /* mov ebx, 0x18f */
    II(0x100e11f9, 0x5)   mov(edx, 0x18e);                      /* mov edx, 0x18e */
    II(0x100e11fe, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x100e1204, 0x5)   calld(my_ctor_c17, -0x12dfa);         /* call 0x100ce40f */
    II(0x100e1209, 0x6)   mov(memd_a32(ss, ebp - 0xac), eax);   /* mov [ebp+0xffffff54], eax */
//    II(0x100e120f, 0x6)   mov(eax, memd_a32(ss, ebp - 0xac));   /* mov eax, [ebp+0xffffff54] */
    II(0x100e1215, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
    II(0x100e121b, 0x2)   jmpd(0x100e1229, 0xc);                /* jmp 0x100e1229 */
l_0x100e121d:
    II(0x100e121d, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x100e1223, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
l_0x100e1229:
    II(0x100e1229, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb0));   /* mov eax, [ebp+0xffffff50] */
    II(0x100e122f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100e1232, 0x3)   mov(memd_a32(ds, edx + 0x18), eax);   /* mov [edx+0x18], eax */
    II(0x100e1235, 0x5)   mov(edx, 0x18f);                      /* mov edx, 0x18f */
    II(0x100e123a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e123d, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100e1240, 0x5)   calld(0x100cf2ba, -0x11f8b);          /* call 0x100cf2ba */
    II(0x100e1245, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1e));   /* mov edx, [ebp-0x1e] */
    II(0x100e1248, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e124b, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100e124e, 0x5)   calld(0x100ce92d, -0x12926);          /* call 0x100ce92d */
    II(0x100e1253, 0x6)   lea(eax, ebp - 0xb4);                 /* lea eax, [ebp+0xffffff4c] */
    II(0x100e1259, 0x5)   calld(0x100e0ba4, -0x6ba);            /* call 0x100e0ba4 */
    II(0x100e125e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e125f, 0x6)   lea(eax, ebp - 0xb8);                 /* lea eax, [ebp+0xffffff48] */
    II(0x100e1265, 0x5)   calld(0x100e0bd0, -0x69a);            /* call 0x100e0bd0 */
    II(0x100e126a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e126b, 0x6)   lea(eax, ebp - 0xbc);                 /* lea eax, [ebp+0xffffff44] */
    II(0x100e1271, 0x5)   calld(0x100e0bfc, -0x67a);            /* call 0x100e0bfc */
    II(0x100e1276, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1277, 0x6)   lea(eax, ebp - 0xc0);                 /* lea eax, [ebp+0xffffff40] */
    II(0x100e127d, 0x5)   calld(0x100e0c28, -0x65a);            /* call 0x100e0c28 */
    II(0x100e1282, 0x3)   lea(ebx, ebp - 0x60);                 /* lea ebx, [ebp-0x60] */
    II(0x100e1285, 0x5)   mov(edx, 0x101a1b80);                 /* mov edx, 0x101a1b80 */ /* "Repair" */
    II(0x100e128a, 0x3)   mov(esi, memd_a32(ss, ebp - 0x10));   /* mov esi, [ebp-0x10] */
    II(0x100e128d, 0x3)   mov(esi, memd_a32(ds, esi + 0x18));   /* mov esi, [esi+0x18] */
    II(0x100e1290, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100e1292, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100e1294, 0x5)   calld(0x100cedcd, -0x124cc);          /* call 0x100cedcd */
    II(0x100e1299, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x100e129c, 0x5)   mov(edx, 0x100e1da5);                 /* mov edx, 0x100e1da5 */
    II(0x100e12a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e12a4, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100e12a7, 0x5)   calld(0x100cf824, -0x11a88);          /* call 0x100cf824 */
    II(0x100e12ac, 0x5)   mov(edx, 0x4dd);                      /* mov edx, 0x4dd */
    II(0x100e12b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e12b4, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100e12b7, 0x5)   calld(0x100d50d4, -0xc1e8);           /* call 0x100d50d4 */
    II(0x100e12bc, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x100e12c1, 0x5)   calld(sys_new, 0x84b3a);              /* call 0x10165e00 */
    II(0x100e12c6, 0x6)   mov(memd_a32(ss, ebp - 0xc4), eax);   /* mov [ebp+0xffffff3c], eax */
//    II(0x100e12cc, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc4));   /* mov eax, [ebp+0xffffff3c] */
    II(0x100e12d2, 0x6)   mov(memd_a32(ss, ebp - 0xc8), eax);   /* mov [ebp+0xffffff38], eax */
    II(0x100e12d8, 0x7)   cmp(memd_a32(ss, ebp - 0xc8), 0);     /* cmp dword [ebp+0xffffff38], 0x0 */
    II(0x100e12df, 0x2)   jzd(0x100e1326, 0x45);                /* jz 0x100e1326 */
    II(0x100e12e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e12e4, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100e12e8, 0x5)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100e12ed, 0x1)   cwde();                               /* cwde */
    II(0x100e12ee, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e12ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e12f2, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100e12f5, 0x5)   add(eax, 0x3f);                       /* add eax, 0x3f */
    II(0x100e12fa, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e12fd, 0x5)   mov(ebx, 0x18f);                      /* mov ebx, 0x18f */
    II(0x100e1302, 0x5)   mov(edx, 0x18e);                      /* mov edx, 0x18e */
    II(0x100e1307, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc4));   /* mov eax, [ebp+0xffffff3c] */
    II(0x100e130d, 0x5)   calld(my_ctor_c17, -0x12f03);         /* call 0x100ce40f */
    II(0x100e1312, 0x6)   mov(memd_a32(ss, ebp - 0xcc), eax);   /* mov [ebp+0xffffff34], eax */
//    II(0x100e1318, 0x6)   mov(eax, memd_a32(ss, ebp - 0xcc));   /* mov eax, [ebp+0xffffff34] */
    II(0x100e131e, 0x6)   mov(memd_a32(ss, ebp - 0xd0), eax);   /* mov [ebp+0xffffff30], eax */
    II(0x100e1324, 0x2)   jmpd(0x100e1332, 0xc);                /* jmp 0x100e1332 */
l_0x100e1326:
    II(0x100e1326, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc8));   /* mov eax, [ebp+0xffffff38] */
    II(0x100e132c, 0x6)   mov(memd_a32(ss, ebp - 0xd0), eax);   /* mov [ebp+0xffffff30], eax */
l_0x100e1332:
    II(0x100e1332, 0x6)   mov(eax, memd_a32(ss, ebp - 0xd0));   /* mov eax, [ebp+0xffffff30] */
    II(0x100e1338, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100e133b, 0x3)   mov(memd_a32(ds, edx + 0x1c), eax);   /* mov [edx+0x1c], eax */
    II(0x100e133e, 0x5)   mov(edx, 0x18f);                      /* mov edx, 0x18f */
    II(0x100e1343, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e1346, 0x3)   mov(eax, memd_a32(ds, eax + 0x1c));   /* mov eax, [eax+0x1c] */
    II(0x100e1349, 0x5)   calld(0x100cf2ba, -0x12094);          /* call 0x100cf2ba */
    II(0x100e134e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1e));   /* mov edx, [ebp-0x1e] */
    II(0x100e1351, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e1354, 0x3)   mov(eax, memd_a32(ds, eax + 0x1c));   /* mov eax, [eax+0x1c] */
    II(0x100e1357, 0x5)   calld(0x100ce92d, -0x12a2f);          /* call 0x100ce92d */
    II(0x100e135c, 0x6)   lea(eax, ebp - 0xd4);                 /* lea eax, [ebp+0xffffff2c] */
    II(0x100e1362, 0x5)   calld(0x100e0ba4, -0x7c3);            /* call 0x100e0ba4 */
    II(0x100e1367, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1368, 0x6)   lea(eax, ebp - 0xd8);                 /* lea eax, [ebp+0xffffff28] */
    II(0x100e136e, 0x5)   calld(0x100e0bd0, -0x7a3);            /* call 0x100e0bd0 */
    II(0x100e1373, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1374, 0x6)   lea(eax, ebp - 0xdc);                 /* lea eax, [ebp+0xffffff24] */
    II(0x100e137a, 0x5)   calld(0x100e0bfc, -0x783);            /* call 0x100e0bfc */
    II(0x100e137f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e1380, 0x6)   lea(eax, ebp - 0xe0);                 /* lea eax, [ebp+0xffffff20] */
    II(0x100e1386, 0x5)   calld(0x100e0c28, -0x763);            /* call 0x100e0c28 */
    II(0x100e138b, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100e138d, 0x3)   lea(ebx, ebp - 0x60);                 /* lea ebx, [ebp-0x60] */
    II(0x100e1390, 0x5)   mov(edx, 0x101a1b87);                 /* mov edx, 0x101a1b87 */ /* "Upgrade" */
    II(0x100e1395, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e1398, 0x3)   mov(eax, memd_a32(ds, eax + 0x1c));   /* mov eax, [eax+0x1c] */
    II(0x100e139b, 0x5)   calld(0x100cedcd, -0x125d3);          /* call 0x100cedcd */
    II(0x100e13a0, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x100e13a3, 0x5)   mov(edx, 0x100e1e5f);                 /* mov edx, 0x100e1e5f */
    II(0x100e13a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e13ab, 0x3)   mov(eax, memd_a32(ds, eax + 0x1c));   /* mov eax, [eax+0x1c] */
    II(0x100e13ae, 0x5)   calld(0x100cf824, -0x11b8f);          /* call 0x100cf824 */
    II(0x100e13b3, 0x5)   mov(edx, 0x4dd);                      /* mov edx, 0x4dd */
    II(0x100e13b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e13bb, 0x3)   mov(eax, memd_a32(ds, eax + 0x1c));   /* mov eax, [eax+0x1c] */
    II(0x100e13be, 0x5)   calld(0x100d50d4, -0xc2ef);           /* call 0x100d50d4 */
    II(0x100e13c3, 0x2)   jmpd(0x100e13e3, 0x1e);               /* jmp 0x100e13e3 */
l_0x100e13c5:
    II(0x100e13c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e13c8, 0x7)   mov(memd_a32(ds, eax + 0x14), 0);     /* mov dword [eax+0x14], 0x0 */
    II(0x100e13cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e13d2, 0x7)   mov(memd_a32(ds, eax + 0x18), 0);     /* mov dword [eax+0x18], 0x0 */
    II(0x100e13d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e13dc, 0x7)   mov(memd_a32(ds, eax + 0x1c), 0);     /* mov dword [eax+0x1c], 0x0 */
l_0x100e13e3:
    II(0x100e13e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e13e6, 0x6)   mov(memd_a32(ss, ebp - 0xe4), eax);   /* mov [ebp+0xffffff1c], eax */
//    II(0x100e13ec, 0x6)   mov(eax, memd_a32(ss, ebp - 0xe4));   /* mov eax, [ebp+0xffffff1c] */
    II(0x100e13f2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e13f4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e13f5, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e13f6, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e13f7, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

