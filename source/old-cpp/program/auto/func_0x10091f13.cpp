FUNC_BEGIN(0x10091f13, 0xe8a70011cc27b64d, 0x20, ({0x68, 0x5c, 0, 0, 0, 0xe8, 0x35, 0x3e, 0xd, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x40, 0, 0, 0, 0x89, 0x45, 0xfc, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x8d, 0x45, 0xec, 0xe8, 0xb6, 0x4b, 0xfe, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0xf, 0xbf, 0x55, 0x28, 0x8b, 0x45, 0x14, 0x29, 0xd0, 0x89, 0xc2, 0x31, 0xc0, 0xe8, 0x2c, 0x4f, 0xfe, 0xff, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0x28, 0x8b, 0x45, 0x18, 0x29, 0xd0, 0x89, 0xc2, 0x31, 0xc0, 0xe8, 0x17, 0x4f, 0xfe, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0x1c, 0x40, 0xe8, 0xa, 0x78, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0x20, 0x40, 0xe8, 0xf5, 0x77, 0xff, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x3b, 0x45, 0xe4, 0xf, 0x8d, 0x83, 0x1, 0, 0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0xf, 0xbf, 0x45, 0xd4, 0x3b, 0x45, 0xe8, 0xf, 0x8d, 0x63, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xd4, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0xf, 0xbf, 0, 0x85, 0xc0, 0xf, 0x85, 0x3f, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xd8, 0x4a, 0x31, 0xc0, 0xe8, 0x89, 0x4e, 0xfe, 0xff, 0x89, 0x45, 0xc4, 0xf, 0xbf, 0x55, 0xd4, 0x4a, 0x31, 0xc0, 0xe8, 0x7a, 0x4e, 0xfe, 0xff, 0x89, 0x45, 0xc8, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x5d, 0xd8, 0xf, 0xbf, 0x45, 0x28, 0x1, 0xd8, 0x40, 0xe8, 0x66, 0x77, 0xff, 0xff, 0x89, 0x45, 0xcc, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x5d, 0xd4, 0xf, 0xbf, 0x45, 0x28, 0x1, 0xd8, 0x40, 0xe8, 0x4a, 0x77, 0xff, 0xff, 0x89, 0x45, 0xd0, 0xc6, 0x45, 0xf0, 0, 0x8b, 0x45, 0xc4, 0x66, 0x89, 0x45, 0xec, 0xeb, 0x7, 0x8b, 0x45, 0xec, 0x66, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xec, 0x3b, 0x45, 0xcc, 0x7d, 0x3e, 0x8b, 0x45, 0xc8, 0x66, 0x89, 0x45, 0xee, 0xeb, 0x7, 0x8b, 0x45, 0xee, 0x66, 0xff, 0x45, 0xee, 0xf, 0xbf, 0x45, 0xee, 0x3b, 0x45, 0xd0, 0x7d, 0x23, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xee, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0x24, 0x75, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0xcd, 0xeb, 0xb2, 0x80, 0x7d, 0xf0, 0, 0xf, 0x84, 0x84, 0, 0, 0, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0xf, 0xbf, 0x55, 0xd4, 0xc1, 0xe2, 0x2, 0x8b, 0, 0x1, 0xd0, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x40, 0x50, 0x8b, 0x45, 0xc0, 0x50, 0xf, 0xbf, 0x4d, 0x1c, 0xf, 0xbf, 0x5d, 0x14, 0x8b, 0x45, 0xd8, 0x3, 0x45, 0x28, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xd8, 0xe8, 0x7d, 0xfd, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2c, 0x8b, 0x45, 0xc0, 0x83, 0xc0, 0x3, 0x50, 0x8b, 0x45, 0xc0, 0x83, 0xc0, 0x2, 0x50, 0xf, 0xbf, 0x4d, 0x20, 0xf, 0xbf, 0x5d, 0x18, 0x8b, 0x45, 0xd4, 0x3, 0x45, 0x28, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xd4, 0xe8, 0x51, 0xfd, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x19, 0xf, 0xbf, 0x45, 0xd8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xd4, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x66, 0xc7, 0, 0x5, 0, 0xe9, 0x8a, 0xfe, 0xff, 0xff, 0xe9, 0x6a, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc2, 0x18, 0}))
    II(0x10091f13, 0x5)   pushd(0x5c);                          /* push dword 0x5c */
    II(0x10091f18, 0x5)   calld(sys_check_available_stack_size, 0xd3e35); /* call 0x10165d52 */
    II(0x10091f1d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10091f1e, 0x1)   pushd(esi);                           /* push esi */
    II(0x10091f1f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10091f20, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10091f21, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10091f23, 0x6)   sub(esp, 0x40);                       /* sub esp, 0x40 */
    II(0x10091f29, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10091f2c, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10091f2f, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10091f32, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10091f35, 0x5)   calld(my_ctor_0x101b4184, -0x1b44a);  /* call 0x10076af0 */
    II(0x10091f3a, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x10091f3e, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x28)); /* movsx edx, word [ebp+0x28] */
    II(0x10091f42, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x10091f45, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10091f47, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10091f49, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10091f4b, 0x5)   calld(0x10076e7c, -0x1b0d4);          /* call 0x10076e7c */
    II(0x10091f50, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10091f53, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x28)); /* movsx edx, word [ebp+0x28] */
    II(0x10091f57, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x10091f5a, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10091f5c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10091f5e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10091f60, 0x5)   calld(0x10076e7c, -0x1b0e9);          /* call 0x10076e7c */
    II(0x10091f65, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10091f68, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x10091f6e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10091f71, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x10091f74, 0x1)   inc(eax);                             /* inc eax */
    II(0x10091f75, 0x5)   calld(my_min, -0x87f6);               /* call 0x10089784 */
    II(0x10091f7a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10091f7d, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x10091f83, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10091f86, 0x3)   mov(eax, memd_a32(ss, ebp + 0x20));   /* mov eax, [ebp+0x20] */
    II(0x10091f89, 0x1)   inc(eax);                             /* inc eax */
    II(0x10091f8a, 0x5)   calld(my_min, -0x880b);               /* call 0x10089784 */
    II(0x10091f8f, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10091f92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10091f95, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10091f98, 0x2)   jmpd(0x10091fa0, 0x6);                /* jmp 0x10091fa0 */
l_0x10091f9a:
    II(0x10091f9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10091f9d, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x10091fa0:
    II(0x10091fa0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10091fa4, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x1c));   /* cmp eax, [ebp-0x1c] */
    II(0x10091fa7, 0x6)   jged(0x10092130, 0x183);              /* jge dword 0x10092130 */
    II(0x10091fad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10091fb0, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10091fb3, 0x2)   jmpd(0x10091fbb, 0x6);                /* jmp 0x10091fbb */
l_0x10091fb5:
    II(0x10091fb5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10091fb8, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
l_0x10091fbb:
    II(0x10091fbb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x10091fbf, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x18));   /* cmp eax, [ebp-0x18] */
    II(0x10091fc2, 0x6)   jged(0x1009212b, 0x163);              /* jge dword 0x1009212b */
    II(0x10091fc8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10091fcc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10091fcf, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10091fd2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x10091fd6, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10091fd8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10091fda, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10091fdc, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10091fdf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10091fe1, 0x6)   jnzd(0x10092126, 0x13f);              /* jnz dword 0x10092126 */
    II(0x10091fe7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x10091feb, 0x1)   dec(edx);                             /* dec edx */
    II(0x10091fec, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10091fee, 0x5)   calld(0x10076e7c, -0x1b177);          /* call 0x10076e7c */
    II(0x10091ff3, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x10091ff6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x10091ffa, 0x1)   dec(edx);                             /* dec edx */
    II(0x10091ffb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10091ffd, 0x5)   calld(0x10076e7c, -0x1b186);          /* call 0x10076e7c */
    II(0x10092002, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10092005, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x1009200b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009200e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x28)); /* movsx ebx, word [ebp-0x28] */
    II(0x10092012, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x28)); /* movsx eax, word [ebp+0x28] */
    II(0x10092016, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10092018, 0x1)   inc(eax);                             /* inc eax */
    II(0x10092019, 0x5)   calld(my_min, -0x889a);               /* call 0x10089784 */
    II(0x1009201e, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10092021, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x10092027, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009202a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x2c)); /* movsx ebx, word [ebp-0x2c] */
    II(0x1009202e, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x28)); /* movsx eax, word [ebp+0x28] */
    II(0x10092032, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10092034, 0x1)   inc(eax);                             /* inc eax */
    II(0x10092035, 0x5)   calld(my_min, -0x88b6);               /* call 0x10089784 */
    II(0x1009203a, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1009203d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x10092041, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10092044, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x10092048, 0x2)   jmpd(0x10092051, 0x7);                /* jmp 0x10092051 */
l_0x1009204a:
    II(0x1009204a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1009204d, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
l_0x10092051:
    II(0x10092051, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10092055, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x34));   /* cmp eax, [ebp-0x34] */
    II(0x10092058, 0x2)   jged(0x10092098, 0x3e);               /* jge 0x10092098 */
    II(0x1009205a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1009205d, 0x4)   mov(memw_a32(ss, ebp - 0x12), ax);    /* mov [ebp-0x12], ax */
    II(0x10092061, 0x2)   jmpd(0x1009206a, 0x7);                /* jmp 0x1009206a */
l_0x10092063:
    II(0x10092063, 0x3)   mov(eax, memd_a32(ss, ebp - 0x12));   /* mov eax, [ebp-0x12] */
    II(0x10092066, 0x4)   inc(memw_a32(ss, ebp - 0x12));        /* inc word [ebp-0x12] */
l_0x1009206a:
    II(0x1009206a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x1009206e, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x30));   /* cmp eax, [ebp-0x30] */
    II(0x10092071, 0x2)   jged(0x10092096, 0x23);               /* jge 0x10092096 */
    II(0x10092073, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10092077, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1009207a, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x1009207d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x12)); /* movsx edx, word [ebp-0x12] */
    II(0x10092081, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10092083, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10092085, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10092087, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x1009208a, 0x4)   cmp(ax, memw_a32(ss, ebp + 0x24));    /* cmp ax, [ebp+0x24] */
    II(0x1009208e, 0x2)   jnzd(0x10092094, 0x4);                /* jnz 0x10092094 */
    II(0x10092090, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x10092094:
    II(0x10092094, 0x2)   jmpd(0x10092063, -0x33);              /* jmp 0x10092063 */
l_0x10092096:
    II(0x10092096, 0x2)   jmpd(0x1009204a, -0x4e);              /* jmp 0x1009204a */
l_0x10092098:
    II(0x10092098, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x1009209c, 0x6)   jzd(0x10092126, 0x84);                /* jz dword 0x10092126 */
    II(0x100920a2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100920a6, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100920a9, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100920ac, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x100920b0, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100920b3, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100920b5, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100920b7, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100920ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100920bd, 0x1)   inc(eax);                             /* inc eax */
    II(0x100920be, 0x1)   pushd(eax);                           /* push eax */
    II(0x100920bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100920c2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100920c3, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x1c)); /* movsx ecx, word [ebp+0x1c] */
    II(0x100920c7, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x14)); /* movsx ebx, word [ebp+0x14] */
    II(0x100920cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100920ce, 0x3)   add(eax, memd_a32(ss, ebp + 0x28));   /* add eax, [ebp+0x28] */
    II(0x100920d1, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100920d4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100920d8, 0x5)   calld(0x10091e5a, -0x283);            /* call 0x10091e5a */
    II(0x100920dd, 0x2)   test(al, al);                         /* test al, al */
    II(0x100920df, 0x2)   jzd(0x1009210d, 0x2c);                /* jz 0x1009210d */
    II(0x100920e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100920e4, 0x3)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x100920e7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100920e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100920eb, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100920ee, 0x1)   pushd(eax);                           /* push eax */
    II(0x100920ef, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x20)); /* movsx ecx, word [ebp+0x20] */
    II(0x100920f3, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x18)); /* movsx ebx, word [ebp+0x18] */
    II(0x100920f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100920fa, 0x3)   add(eax, memd_a32(ss, ebp + 0x28));   /* add eax, [ebp+0x28] */
    II(0x100920fd, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10092100, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x10092104, 0x5)   calld(0x10091e5a, -0x2af);            /* call 0x10091e5a */
    II(0x10092109, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009210b, 0x2)   jnzd(0x10092126, 0x19);               /* jnz 0x10092126 */
l_0x1009210d:
    II(0x1009210d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x10092111, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10092114, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x10092117, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2c)); /* movsx edx, word [ebp-0x2c] */
    II(0x1009211b, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x1009211d, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1009211f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10092121, 0x5)   mov(memw_a32(ds, eax), 0x5);          /* mov word [eax], 0x5 */
l_0x10092126:
    II(0x10092126, 0x5)   jmpd(0x10091fb5, -0x176);             /* jmp 0x10091fb5 */
l_0x1009212b:
    II(0x1009212b, 0x5)   jmpd(0x10091f9a, -0x196);             /* jmp 0x10091f9a */
l_0x10092130:
    II(0x10092130, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10092132, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10092133, 0x1)   popd(edi);                            /* pop edi */
    II(0x10092134, 0x1)   popd(esi);                            /* pop esi */
    II(0x10092135, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10092136, 0x3)   retd(0x18);                           /* ret 0x18 */
FUNC_END

