FUNC_BEGIN(0x100af587, 0x9b40ab658cbcbf96, 0x20, ({0x68, 0x5c, 0, 0, 0, 0xe8, 0xc1, 0x67, 0xb, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xec, 0xe8, 0x3d, 0xb0, 0xfd, 0xff, 0x8d, 0x55, 0xec, 0x8d, 0x45, 0xec, 0xe8, 0x62, 0xaf, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0xae, 0x6f, 0xfc, 0xff, 0xe8, 0xe1, 0x30, 0xa, 0, 0xe8, 0xe4, 0xbe, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x6e, 0x97, 0xfd, 0xff, 0xe9, 0xea, 0x2, 0, 0, 0x83, 0x7d, 0xfc, 0, 0x75, 0x1c, 0x8d, 0x45, 0xec, 0xe8, 0x2f, 0xaf, 0xfd, 0xff, 0xe8, 0x56, 0xea, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x4c, 0x97, 0xfd, 0xff, 0xe9, 0xc8, 0x2, 0, 0, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0xf4, 0x8b, 0, 0, 0x80, 0x4d, 0xe4, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0xd4, 0x70, 0xfc, 0xff, 0x89, 0x45, 0xdc, 0x80, 0x65, 0xe4, 0xfe, 0xc6, 0x45, 0xd8, 0, 0x8d, 0x45, 0xd4, 0xe8, 0xc1, 0x74, 0xfc, 0xff, 0x80, 0x4d, 0xe4, 0x1, 0x8d, 0x45, 0xd0, 0xe8, 0xf5, 0xd2, 0xfe, 0xff, 0x89, 0x45, 0xcc, 0x80, 0x65, 0xe4, 0xfe, 0xb8, 0x1f, 0, 0, 0, 0xe8, 0xb4, 0x67, 0xb, 0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x2f, 0x8d, 0x45, 0xec, 0xe8, 0x19, 0xaf, 0xfd, 0xff, 0x89, 0xc3, 0x8d, 0x45, 0xec, 0xe8, 0xb3, 0xae, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0x5b, 0x6f, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xc8, 0xe8, 0x58, 0x7d, 0xff, 0xff, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0xeb, 0x6, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xbc, 0x8b, 0x55, 0xbc, 0x8d, 0x45, 0xd0, 0xe8, 0x5d, 0xd2, 0xfe, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0x7d, 0xae, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0xc9, 0x6e, 0xfc, 0xff, 0xf6, 0x40, 0x12, 0x40, 0x74, 0x9, 0xc7, 0x45, 0xb8, 0x40, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xb8, 0x80, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x57, 0xae, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0xa3, 0x6e, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x45, 0xd4, 0x8d, 0x45, 0xec, 0xe8, 0x3f, 0xae, 0xfd, 0xff, 0x83, 0xc0, 0x13, 0xe8, 0x8b, 0x6e, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x45, 0xd6, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xd0, 0xe8, 0x28, 0xb1, 0xff, 0xff, 0xe8, 0x56, 0x7e, 0xff, 0xff, 0xc7, 0x45, 0xb4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xb4, 0xff, 0x45, 0xb4, 0x8d, 0x45, 0xe8, 0xe8, 0xa4, 0x8b, 0, 0, 0x66, 0x3b, 0x45, 0xb4, 0xf, 0x8e, 0xce, 0, 0, 0, 0xf, 0xbf, 0x55, 0xb4, 0x8d, 0x45, 0xe8, 0xe8, 0x4e, 0x8b, 0, 0, 0x66, 0xf, 0xbe, 0, 0x66, 0x1, 0x45, 0xd4, 0xf, 0xbf, 0x55, 0xb4, 0x8d, 0x45, 0xe8, 0xe8, 0x3a, 0x8b, 0, 0, 0x66, 0xf, 0xbe, 0x40, 0x1, 0x66, 0x1, 0x45, 0xd6, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xd0, 0xe8, 0xce, 0xb0, 0xff, 0xff, 0xe8, 0xfc, 0x7d, 0xff, 0xff, 0x8b, 0x4d, 0xb8, 0x8d, 0x45, 0xec, 0xe8, 0xba, 0xad, 0xfd, 0xff, 0x8b, 0x58, 0x7, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xd6, 0xf, 0xbf, 0x45, 0xd4, 0xe8, 0x12, 0x41, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0xad, 0x6e, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xe4, 0xb5, 0x8, 0, 0x84, 0xc0, 0x74, 0x5a, 0xc6, 0x45, 0xd8, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0x83, 0xad, 0xfd, 0xff, 0x8d, 0x50, 0x13, 0x8d, 0x45, 0xe0, 0xe8, 0x88, 0xbd, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x3f, 0xba, 0x2, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x67, 0xad, 0xfd, 0xff, 0xe8, 0x6f, 0xd8, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x24, 0xc1, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x5a, 0x67, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xb8, 0x7a, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x66, 0x95, 0xfd, 0xff, 0xe9, 0xe2, 0, 0, 0, 0xe9, 0x1a, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xd8, 0, 0x75, 0x50, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xec, 0xe8, 0x1f, 0xad, 0xfd, 0xff, 0x83, 0xc0, 0x1a, 0xe8, 0x3b, 0x93, 0xfd, 0xff, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xec, 0xe8, 0xc, 0xad, 0xfd, 0xff, 0xe8, 0x9e, 0x3, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xc9, 0xc0, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xff, 0x66, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x5d, 0x7a, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb, 0x95, 0xfd, 0xff, 0xe9, 0x87, 0, 0, 0, 0x8d, 0x55, 0xd0, 0x8d, 0x45, 0xec, 0xe8, 0xcf, 0xac, 0xfd, 0xff, 0x83, 0xc0, 0x3c, 0xe8, 0xcb, 0x88, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xbf, 0xac, 0xfd, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x45, 0x8d, 0x45, 0xec, 0xe8, 0xb2, 0xac, 0xfd, 0xff, 0x83, 0xc0, 0x3c, 0xe8, 0xae, 0xaf, 0xff, 0xff, 0xe8, 0x25, 0x89, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x71, 0x88, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x93, 0xac, 0xfd, 0xff, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbb, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xd, 0x29, 0x1, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x3d, 0xc0, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x73, 0x66, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd1, 0x79, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x7f, 0x94, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x100af587, 0x5)   pushd(0x5c);                          /* push dword 0x5c */
    II(0x100af58c, 0x5)   calld(sys_check_available_stack_size, 0xb67c1); /* call 0x10165d52 */
    II(0x100af591, 0x1)   pushd(esi);                           /* push esi */
    II(0x100af592, 0x1)   pushd(edi);                           /* push edi */
    II(0x100af593, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100af594, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100af596, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x100af59c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100af59f, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100af5a2, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100af5a5, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100af5a8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100af5ab, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af5ae, 0x5)   calld(0x1008a5f0, -0x24fc3);          /* call 0x1008a5f0 */
    II(0x100af5b3, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100af5b6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af5b9, 0x5)   calld(0x1008a520, -0x2509e);          /* call 0x1008a520 */
    II(0x100af5be, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af5c1, 0x5)   calld(0x10076574, -0x39052);          /* call 0x10076574 */
    II(0x100af5c6, 0x5)   calld(0x101526ac, 0xa30e1);           /* call 0x101526ac */
    II(0x100af5cb, 0x5)   calld(0x1008b4b4, -0x2411c);          /* call 0x1008b4b4 */
    II(0x100af5d0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100af5d2, 0x2)   jzd(0x100af5e3, 0xf);                 /* jz 0x100af5e3 */
    II(0x100af5d4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af5d6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af5d9, 0x5)   calld(0x10088d4c, -0x26892);          /* call 0x10088d4c */
    II(0x100af5de, 0x5)   jmpd(0x100af8cd, 0x2ea);              /* jmp 0x100af8cd */
l_0x100af5e3:
    II(0x100af5e3, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100af5e7, 0x2)   jnzd(0x100af605, 0x1c);               /* jnz 0x100af605 */
    II(0x100af5e9, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af5ec, 0x5)   calld(0x1008a520, -0x250d1);          /* call 0x1008a520 */
    II(0x100af5f1, 0x5)   calld(0x100ae04c, -0x15aa);           /* call 0x100ae04c */
    II(0x100af5f6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af5f8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af5fb, 0x5)   calld(0x10088d4c, -0x268b4);          /* call 0x10088d4c */
    II(0x100af600, 0x5)   jmpd(0x100af8cd, 0x2c8);              /* jmp 0x100af8cd */
l_0x100af605:
    II(0x100af605, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100af608, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100af60b, 0x5)   calld(0x100b8204, 0x8bf4);            /* call 0x100b8204 */
    II(0x100af610, 0x4)   or_(memb_a32(ss, ebp - 0x1c), 0x1);   /* or byte [ebp-0x1c], 0x1 */
    II(0x100af614, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100af617, 0x5)   calld(my_ctor_0x101b38f8, -0x38f2c);  /* call 0x100766f0 */
    II(0x100af61c, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100af61f, 0x4)   and_(memb_a32(ss, ebp - 0x1c), -0x2 /* 0xfe */); /* and byte [ebp-0x1c], 0xfe */
    II(0x100af623, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0);     /* mov byte [ebp-0x28], 0x0 */
    II(0x100af627, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100af62a, 0x5)   calld(my_ctor_0x101b4184, -0x38b3f);  /* call 0x10076af0 */
    II(0x100af62f, 0x4)   or_(memb_a32(ss, ebp - 0x1c), 0x1);   /* or byte [ebp-0x1c], 0x1 */
    II(0x100af633, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100af636, 0x5)   calld(0x1009c930, -0x12d0b);          /* call 0x1009c930 */
    II(0x100af63b, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100af63e, 0x4)   and_(memb_a32(ss, ebp - 0x1c), -0x2 /* 0xfe */); /* and byte [ebp-0x1c], 0xfe */
    II(0x100af642, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x100af647, 0x5)   calld(sys_new, 0xb67b4);              /* call 0x10165e00 */
    II(0x100af64c, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x100af64f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100af652, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100af655, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x100af659, 0x2)   jzd(0x100af68a, 0x2f);                /* jz 0x100af68a */
    II(0x100af65b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af65e, 0x5)   calld(0x1008a57c, -0x250e7);          /* call 0x1008a57c */
    II(0x100af663, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100af665, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af668, 0x5)   calld(0x1008a520, -0x2514d);          /* call 0x1008a520 */
    II(0x100af66d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af670, 0x5)   calld(0x100765d0, -0x390a5);          /* call 0x100765d0 */
    II(0x100af675, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af677, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100af67a, 0x5)   calld(0x100a73d7, -0x82a8);           /* call 0x100a73d7 */
    II(0x100af67f, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100af682, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100af685, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100af688, 0x2)   jmpd(0x100af690, 0x6);                /* jmp 0x100af690 */
l_0x100af68a:
    II(0x100af68a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100af68d, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x100af690:
    II(0x100af690, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x100af693, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100af696, 0x5)   calld(0x1009c8f8, -0x12da3);          /* call 0x1009c8f8 */
    II(0x100af69b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af69e, 0x5)   calld(0x1008a520, -0x25183);          /* call 0x1008a520 */
    II(0x100af6a3, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af6a6, 0x5)   calld(0x10076574, -0x39137);          /* call 0x10076574 */
    II(0x100af6ab, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x100af6af, 0x2)   jzd(0x100af6ba, 0x9);                 /* jz 0x100af6ba */
    II(0x100af6b1, 0x7)   mov(memd_a32(ss, ebp - 0x48), 0x40);  /* mov dword [ebp-0x48], 0x40 */
    II(0x100af6b8, 0x2)   jmpd(0x100af6c1, 0x7);                /* jmp 0x100af6c1 */
l_0x100af6ba:
    II(0x100af6ba, 0x7)   mov(memd_a32(ss, ebp - 0x48), 0x180); /* mov dword [ebp-0x48], 0x180 */
l_0x100af6c1:
    II(0x100af6c1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af6c4, 0x5)   calld(0x1008a520, -0x251a9);          /* call 0x1008a520 */
    II(0x100af6c9, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af6cc, 0x5)   calld(0x10076574, -0x3915d);          /* call 0x10076574 */
    II(0x100af6d1, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100af6d5, 0x4)   mov(memw_a32(ss, ebp - 0x2c), ax);    /* mov [ebp-0x2c], ax */
    II(0x100af6d9, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af6dc, 0x5)   calld(0x1008a520, -0x251c1);          /* call 0x1008a520 */
    II(0x100af6e1, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100af6e4, 0x5)   calld(0x10076574, -0x39175);          /* call 0x10076574 */
    II(0x100af6e9, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100af6ed, 0x4)   mov(memw_a32(ss, ebp - 0x2a), ax);    /* mov [ebp-0x2a], ax */
    II(0x100af6f1, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100af6f4, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100af6f7, 0x5)   calld(0x100aa824, -0x4ed8);           /* call 0x100aa824 */
    II(0x100af6fc, 0x5)   calld(0x100a7557, -0x81aa);           /* call 0x100a7557 */
    II(0x100af701, 0x7)   mov(memd_a32(ss, ebp - 0x4c), 0);     /* mov dword [ebp-0x4c], 0x0 */
    II(0x100af708, 0x2)   jmpd(0x100af710, 0x6);                /* jmp 0x100af710 */
l_0x100af70a:
    II(0x100af70a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100af70d, 0x3)   inc(memd_a32(ss, ebp - 0x4c));        /* inc dword [ebp-0x4c] */
l_0x100af710:
    II(0x100af710, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af713, 0x5)   calld(0x100b82bc, 0x8ba4);            /* call 0x100b82bc */
    II(0x100af718, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4c));    /* cmp ax, [ebp-0x4c] */
    II(0x100af71c, 0x6)   jled(0x100af7f0, 0xce);               /* jle dword 0x100af7f0 */
    II(0x100af722, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4c)); /* movsx edx, word [ebp-0x4c] */
    II(0x100af726, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af729, 0x5)   calld(0x100b827c, 0x8b4e);            /* call 0x100b827c */
    II(0x100af72e, 0x4)   movsx(ax, memb_a32(ds, eax));         /* movsx ax, byte [eax] */
    II(0x100af732, 0x4)   add(memw_a32(ss, ebp - 0x2c), ax);    /* add [ebp-0x2c], ax */
    II(0x100af736, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4c)); /* movsx edx, word [ebp-0x4c] */
    II(0x100af73a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af73d, 0x5)   calld(0x100b827c, 0x8b3a);            /* call 0x100b827c */
    II(0x100af742, 0x5)   movsx(ax, memb_a32(ds, eax + 0x1));   /* movsx ax, byte [eax+0x1] */
    II(0x100af747, 0x4)   add(memw_a32(ss, ebp - 0x2a), ax);    /* add [ebp-0x2a], ax */
    II(0x100af74b, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100af74e, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100af751, 0x5)   calld(0x100aa824, -0x4f32);           /* call 0x100aa824 */
    II(0x100af756, 0x5)   calld(0x100a7557, -0x8204);           /* call 0x100a7557 */
    II(0x100af75b, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x48));   /* mov ecx, [ebp-0x48] */
    II(0x100af75e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af761, 0x5)   calld(0x1008a520, -0x25246);          /* call 0x1008a520 */
    II(0x100af766, 0x3)   mov(ebx, memd_a32(ds, eax + 0x7));    /* mov ebx, [eax+0x7] */
    II(0x100af769, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100af76c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x2a)); /* movsx edx, word [ebp-0x2a] */
    II(0x100af770, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x2c)); /* movsx eax, word [ebp-0x2c] */
    II(0x100af774, 0x5)   calld(0x1007388b, -0x3beee);          /* call 0x1007388b */
    II(0x100af779, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af77b, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100af77e, 0x5)   calld(0x10076630, -0x39153);          /* call 0x10076630 */
    II(0x100af783, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af785, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100af788, 0x5)   calld(0x1013ad71, 0x8b5e4);           /* call 0x1013ad71 */
    II(0x100af78d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100af78f, 0x2)   jzd(0x100af7eb, 0x5a);                /* jz 0x100af7eb */
    II(0x100af791, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0x1);   /* mov byte [ebp-0x28], 0x1 */
    II(0x100af795, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af798, 0x5)   calld(0x1008a520, -0x2527d);          /* call 0x1008a520 */
    II(0x100af79d, 0x3)   lea(edx, eax + 0x13);                 /* lea edx, [eax+0x13] */
    II(0x100af7a0, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100af7a3, 0x5)   calld(0x1008b530, -0x24278);          /* call 0x1008b530 */
    II(0x100af7a8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100af7aa, 0x2)   jzd(0x100af7eb, 0x3f);                /* jz 0x100af7eb */
    II(0x100af7ac, 0x5)   mov(edx, 0x2);                        /* mov edx, 0x2 */
    II(0x100af7b1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af7b4, 0x5)   calld(0x1008a520, -0x25299);          /* call 0x1008a520 */
    II(0x100af7b9, 0x5)   calld(0x100ad02d, -0x2791);           /* call 0x100ad02d */
    II(0x100af7be, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af7c0, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100af7c3, 0x5)   calld(0x1009b8ec, -0x13edc);          /* call 0x1009b8ec */
    II(0x100af7c8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af7ca, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100af7cd, 0x5)   calld(0x10075f2c, -0x398a6);          /* call 0x10075f2c */
    II(0x100af7d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af7d4, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af7d7, 0x5)   calld(0x100b7294, 0x7ab8);            /* call 0x100b7294 */
    II(0x100af7dc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af7de, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af7e1, 0x5)   calld(0x10088d4c, -0x26a9a);          /* call 0x10088d4c */
    II(0x100af7e6, 0x5)   jmpd(0x100af8cd, 0xe2);               /* jmp 0x100af8cd */
l_0x100af7eb:
    II(0x100af7eb, 0x5)   jmpd(0x100af70a, -0xe6);              /* jmp 0x100af70a */
l_0x100af7f0:
    II(0x100af7f0, 0x4)   cmp(memb_a32(ss, ebp - 0x28), 0);     /* cmp byte [ebp-0x28], 0x0 */
    II(0x100af7f4, 0x2)   jnzd(0x100af846, 0x50);               /* jnz 0x100af846 */
    II(0x100af7f6, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100af7f9, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af7fc, 0x5)   calld(0x1008a520, -0x252e1);          /* call 0x1008a520 */
    II(0x100af801, 0x3)   add(eax, 0x1a);                       /* add eax, 0x1a */
    II(0x100af804, 0x5)   calld(0x10088b44, -0x26cc5);          /* call 0x10088b44 */
    II(0x100af809, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100af80c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af80f, 0x5)   calld(0x1008a520, -0x252f4);          /* call 0x1008a520 */
    II(0x100af814, 0x5)   calld(0x100afbb7, 0x39e);             /* call 0x100afbb7 */
    II(0x100af819, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af81b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100af81e, 0x5)   calld(0x1009b8ec, -0x13f37);          /* call 0x1009b8ec */
    II(0x100af823, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af825, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100af828, 0x5)   calld(0x10075f2c, -0x39901);          /* call 0x10075f2c */
    II(0x100af82d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af82f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af832, 0x5)   calld(0x100b7294, 0x7a5d);            /* call 0x100b7294 */
    II(0x100af837, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af839, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af83c, 0x5)   calld(0x10088d4c, -0x26af5);          /* call 0x10088d4c */
    II(0x100af841, 0x5)   jmpd(0x100af8cd, 0x87);               /* jmp 0x100af8cd */
l_0x100af846:
    II(0x100af846, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100af849, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af84c, 0x5)   calld(0x1008a520, -0x25331);          /* call 0x1008a520 */
    II(0x100af851, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100af854, 0x5)   calld(0x100b8124, 0x88cb);            /* call 0x100b8124 */
    II(0x100af859, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af85c, 0x5)   calld(0x1008a520, -0x25341);          /* call 0x1008a520 */
    II(0x100af861, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af863, 0x3)   mov(dl, memb_a32(ds, eax + 0x45));    /* mov dl, [eax+0x45] */
    II(0x100af866, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af869, 0x5)   calld(0x1008a520, -0x2534e);          /* call 0x1008a520 */
    II(0x100af86e, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100af871, 0x5)   calld(0x100aa824, -0x5052);           /* call 0x100aa824 */
    II(0x100af876, 0x5)   calld(0x100b81a0, 0x8925);            /* call 0x100b81a0 */
    II(0x100af87b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100af87e, 0x5)   calld(0x100b80f4, 0x8871);            /* call 0x100b80f4 */
    II(0x100af883, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100af885, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af888, 0x5)   calld(0x1008a520, -0x2536d);          /* call 0x1008a520 */
    II(0x100af88d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100af890, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100af893, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100af899, 0x5)   mov(ebx, 0x101c31c4);                 /* mov ebx, 0x101c31c4 */
    II(0x100af89e, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100af8a0, 0x5)   calld(0x100c21b2, 0x1290d);           /* call 0x100c21b2 */
    II(0x100af8a5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af8a7, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100af8aa, 0x5)   calld(0x1009b8ec, -0x13fc3);          /* call 0x1009b8ec */
    II(0x100af8af, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af8b1, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100af8b4, 0x5)   calld(0x10075f2c, -0x3998d);          /* call 0x10075f2c */
    II(0x100af8b9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af8bb, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100af8be, 0x5)   calld(0x100b7294, 0x79d1);            /* call 0x100b7294 */
    II(0x100af8c3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100af8c5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100af8c8, 0x5)   calld(0x10088d4c, -0x26b81);          /* call 0x10088d4c */
l_0x100af8cd:
    II(0x100af8cd, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100af8cf, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100af8d0, 0x1)   popd(edi);                            /* pop edi */
    II(0x100af8d1, 0x1)   popd(esi);                            /* pop esi */
    II(0x100af8d2, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

