FUNC_BEGIN(0x1013fa8c, 0x2c334ef1cb87ce95, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0xbc, 0x62, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xec, 0xeb, 0x2f, 0xc7, 0x45, 0xe8, 0x70, 0x2, 0, 0, 0xe9, 0x91, 0, 0, 0, 0xc7, 0x45, 0xe8, 0x6f, 0x2, 0, 0, 0xe9, 0x85, 0, 0, 0, 0xc7, 0x45, 0xe8, 0x72, 0x2, 0, 0, 0xe9, 0x79, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0xe9, 0xd, 0x1, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe0, 0x66, 0x83, 0x7d, 0xe0, 0x3b, 0x72, 0x30, 0x66, 0x83, 0x7d, 0xe0, 0x3b, 0x76, 0xbd, 0x66, 0x83, 0x7d, 0xe0, 0x3d, 0x72, 0x20, 0x66, 0x83, 0x7d, 0xe0, 0x3d, 0x76, 0xaf, 0x66, 0x83, 0x7d, 0xe0, 0x40, 0x72, 0x10, 0x66, 0x83, 0x7d, 0xe0, 0x40, 0x76, 0xad, 0x66, 0x83, 0x7d, 0xe0, 0x4b, 0x74, 0x9a, 0xeb, 0xbc, 0xeb, 0xba, 0xeb, 0xac, 0x66, 0x83, 0x7d, 0xe0, 0x7, 0x72, 0x1d, 0x66, 0x83, 0x7d, 0xe0, 0x7, 0x76, 0x92, 0x66, 0x83, 0x7d, 0xe0, 0x8, 0x76, 0x97, 0x66, 0x83, 0x7d, 0xe0, 0x31, 0xf, 0x84, 0x74, 0xff, 0xff, 0xff, 0xeb, 0x96, 0xeb, 0x94, 0x66, 0x83, 0x7d, 0xe0, 0x6, 0xf, 0x84, 0x65, 0xff, 0xff, 0xff, 0xeb, 0x87, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0x45, 0xbb, 0xf8, 0xff, 0x89, 0x45, 0xdc, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0x10, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0x14, 0xbb, 0xdc, 0xcd, 0x1a, 0x10, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0xe8, 0x1d, 0xf9, 0xff, 0xff, 0x8b, 0x55, 0x10, 0x8b, 0x52, 0x17, 0xc1, 0xfa, 0x10, 0xbb, 0xa, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x98, 0x50, 0x8b, 0x55, 0xdc, 0x8b, 0x52, 0x17, 0xc1, 0xfa, 0x10, 0xbb, 0xa, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xf, 0xbf, 0x4d, 0xe8, 0x8b, 0x45, 0x14, 0x83, 0xe8, 0x4c, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4c, 0xe8, 0x47, 0xfa, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x13, 0x8b, 0x55, 0xf0, 0x1, 0xc2, 0x89, 0x55, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x8, 0}))
    II(0x1013fa8c, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x1013fa91, 0x5)   calld(sys_check_available_stack_size, 0x262bc); /* call 0x10165d52 */
    II(0x1013fa96, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013fa97, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013fa98, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013fa99, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013fa9b, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1013faa1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1013faa4, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1013faa7, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x1013faaa, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1013faad, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013fab0, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1013fab3, 0x2)   jmpd(0x1013fae4, 0x2f);               /* jmp 0x1013fae4 */
l_0x1013fab5:
    II(0x1013fab5, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x270); /* mov dword [ebp-0x18], 0x270 */
    II(0x1013fabc, 0x5)   jmpd(0x1013fb52, 0x91);               /* jmp 0x1013fb52 */
l_0x1013fac1:
    II(0x1013fac1, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x26f); /* mov dword [ebp-0x18], 0x26f */
    II(0x1013fac8, 0x5)   jmpd(0x1013fb52, 0x85);               /* jmp 0x1013fb52 */
l_0x1013facd:
    II(0x1013facd, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x272); /* mov dword [ebp-0x18], 0x272 */
    II(0x1013fad4, 0x5)   jmpd(0x1013fb52, 0x79);               /* jmp 0x1013fb52 */
l_0x1013fad9:
    II(0x1013fad9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013fadc, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1013fadf, 0x5)   jmpd(0x1013fbf1, 0x10d);              /* jmp 0x1013fbf1 */
l_0x1013fae4:
    II(0x1013fae4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013fae7, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1013faea, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x3b);  /* cmp word [ebp-0x20], 0x3b */
    II(0x1013faef, 0x2)   jbd(0x1013fb21, 0x30);                /* jb 0x1013fb21 */
    II(0x1013faf1, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x3b);  /* cmp word [ebp-0x20], 0x3b */
    II(0x1013faf6, 0x2)   jbed(0x1013fab5, -0x43);              /* jbe 0x1013fab5 */
    II(0x1013faf8, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x3d);  /* cmp word [ebp-0x20], 0x3d */
    II(0x1013fafd, 0x2)   jbd(0x1013fb1f, 0x20);                /* jb 0x1013fb1f */
    II(0x1013faff, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x3d);  /* cmp word [ebp-0x20], 0x3d */
    II(0x1013fb04, 0x2)   jbed(0x1013fab5, -0x51);              /* jbe 0x1013fab5 */
    II(0x1013fb06, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x40);  /* cmp word [ebp-0x20], 0x40 */
    II(0x1013fb0b, 0x2)   jbd(0x1013fb1d, 0x10);                /* jb 0x1013fb1d */
    II(0x1013fb0d, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x40);  /* cmp word [ebp-0x20], 0x40 */
    II(0x1013fb12, 0x2)   jbed(0x1013fac1, -0x53);              /* jbe 0x1013fac1 */
    II(0x1013fb14, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x4b);  /* cmp word [ebp-0x20], 0x4b */
    II(0x1013fb19, 0x2)   jzd(0x1013fab5, -0x66);               /* jz 0x1013fab5 */
    II(0x1013fb1b, 0x2)   jmpd(0x1013fad9, -0x44);              /* jmp 0x1013fad9 */
l_0x1013fb1d:
    II(0x1013fb1d, 0x2)   jmpd(0x1013fad9, -0x46);              /* jmp 0x1013fad9 */
l_0x1013fb1f:
    II(0x1013fb1f, 0x2)   jmpd(0x1013facd, -0x54);              /* jmp 0x1013facd */
l_0x1013fb21:
    II(0x1013fb21, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x7);   /* cmp word [ebp-0x20], 0x7 */
    II(0x1013fb26, 0x2)   jbd(0x1013fb45, 0x1d);                /* jb 0x1013fb45 */
    II(0x1013fb28, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x7);   /* cmp word [ebp-0x20], 0x7 */
    II(0x1013fb2d, 0x2)   jbed(0x1013fac1, -0x6e);              /* jbe 0x1013fac1 */
    II(0x1013fb2f, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x8);   /* cmp word [ebp-0x20], 0x8 */
    II(0x1013fb34, 0x2)   jbed(0x1013facd, -0x69);              /* jbe 0x1013facd */
    II(0x1013fb36, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x31);  /* cmp word [ebp-0x20], 0x31 */
    II(0x1013fb3b, 0x6)   jzd(0x1013fab5, -0x8c);               /* jz dword 0x1013fab5 */
    II(0x1013fb41, 0x2)   jmpd(0x1013fad9, -0x6a);              /* jmp 0x1013fad9 */
//  II(0x1013fb43, 0x2)   /* Недостижимый код. */
l_0x1013fb45:
    II(0x1013fb45, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0x6);   /* cmp word [ebp-0x20], 0x6 */
    II(0x1013fb4a, 0x6)   jzd(0x1013fab5, -0x9b);               /* jz dword 0x1013fab5 */
    II(0x1013fb50, 0x2)   jmpd(0x1013fad9, -0x79);              /* jmp 0x1013fad9 */
l_0x1013fb52:
    II(0x1013fb52, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1013fb56, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013fb5a, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1013fb60, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x1013fb66, 0x5)   calld(0x100cb6b0, -0x744bb);          /* call 0x100cb6b0 */
    II(0x1013fb6b, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1013fb6e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1013fb73, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fb74, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1013fb77, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x1013fb7a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1013fb7d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fb7e, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x14)); /* movsx ecx, word [ebp+0x14] */
    II(0x1013fb82, 0x5)   mov(ebx, 0x101acddc);                 /* mov ebx, 0x101acddc */ /* "Cargo" */
    II(0x1013fb87, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1013fb8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013fb8e, 0x5)   calld(0x1013f4b0, -0x6e3);            /* call 0x1013f4b0 */
    II(0x1013fb93, 0x3)   mov(edx, memd_a32(ss, ebp + 0x10));   /* mov edx, [ebp+0x10] */
    II(0x1013fb96, 0x3)   mov(edx, memd_a32(ds, edx + 0x17));   /* mov edx, [edx+0x17] */
    II(0x1013fb99, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1013fb9c, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x1013fba1, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013fba3, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013fba6, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1013fba8, 0x1)   cwde();                               /* cwde */
    II(0x1013fba9, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fbaa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x1013fbad, 0x3)   mov(edx, memd_a32(ds, edx + 0x17));   /* mov edx, [edx+0x17] */
    II(0x1013fbb0, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1013fbb3, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x1013fbb8, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1013fbba, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1013fbbd, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1013fbbf, 0x1)   cwde();                               /* cwde */
    II(0x1013fbc0, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fbc1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1013fbc5, 0x1)   pushd(eax);                           /* push eax */
    II(0x1013fbc6, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x18)); /* movsx ecx, word [ebp-0x18] */
    II(0x1013fbca, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1013fbcd, 0x3)   sub(eax, 0x4c);                       /* sub eax, 0x4c */
    II(0x1013fbd0, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1013fbd3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1013fbd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1013fbda, 0x3)   add(eax, 0x4c);                       /* add eax, 0x4c */
    II(0x1013fbdd, 0x5)   calld(0x1013f629, -0x5b9);            /* call 0x1013f629 */
    II(0x1013fbe2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013fbe6, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x1013fbe9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1013fbec, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013fbee, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
l_0x1013fbf1:
    II(0x1013fbf1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1013fbf4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013fbf6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013fbf7, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013fbf8, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013fbf9, 0x3)   retd(0x8);                            /* ret 0x8 */
FUNC_END

