FUNC_BEGIN(0x1009b51c, 0xaccb5cc1d223901d, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x2c, 0xa8, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xf6, 0xad, 0xfd, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x6a, 0xaf, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0xa0, 0xb6, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xf, 0xf8, 0x9, 0, 0x84, 0xc0, 0x74, 0x2e, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x58, 0x2, 0x8d, 0x45, 0xf8, 0xe8, 0x5a, 0xae, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0xff, 0x53, 0x44, 0x84, 0xc0, 0x74, 0xc, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xdc, 0xa9, 0xfd, 0xff, 0xeb, 0xc, 0xeb, 0xbc, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xce, 0xa9, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1009b51c, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1009b521, 0x5)   calld(sys_check_available_stack_size, 0xca82c); /* call 0x10165d52 */
    II(0x1009b526, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009b527, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009b528, 0x1)   pushd(edx);                           /* push edx */
    II(0x1009b529, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009b52a, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009b52b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009b52c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009b52e, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x1009b534, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1009b537, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009b53a, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009b53d, 0x5)   calld(0x10076338, -0x2520a);          /* call 0x10076338 */
    II(0x1009b542, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x1009b545, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009b547, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009b549, 0x5)   calld(0x100764b8, -0x25096);          /* call 0x100764b8 */
    II(0x1009b54e, 0x2)   jmpd(0x1009b558, 0x8);                /* jmp 0x1009b558 */
l_0x1009b550:
    II(0x1009b550, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b553, 0x5)   calld(0x10076bf8, -0x24960);          /* call 0x10076bf8 */
l_0x1009b558:
    II(0x1009b558, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009b55a, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b55d, 0x5)   calld(0x1013ad71, 0x9f80f);           /* call 0x1013ad71 */
    II(0x1009b562, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009b564, 0x2)   jzd(0x1009b594, 0x2e);                /* jz 0x1009b594 */
    II(0x1009b566, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009b569, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x1009b56c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1009b56f, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x1009b572, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b575, 0x5)   calld(0x100763d4, -0x251a6);          /* call 0x100763d4 */
    II(0x1009b57a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009b57c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1009b57f, 0x3)   calld_abs(memd_a32(ds, ebx + 0x44));  /* call dword near [ebx+0x44] */
    II(0x1009b582, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009b584, 0x2)   jzd(0x1009b592, 0xc);                 /* jz 0x1009b592 */
    II(0x1009b586, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009b588, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b58b, 0x5)   calld(0x10075f6c, -0x25624);          /* call 0x10075f6c */
    II(0x1009b590, 0x2)   jmpd(0x1009b59e, 0xc);                /* jmp 0x1009b59e */
l_0x1009b592:
    II(0x1009b592, 0x2)   jmpd(0x1009b550, -0x44);              /* jmp 0x1009b550 */
l_0x1009b594:
    II(0x1009b594, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009b596, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b599, 0x5)   calld(0x10075f6c, -0x25632);          /* call 0x10075f6c */
l_0x1009b59e:
    II(0x1009b59e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009b5a0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009b5a1, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009b5a2, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009b5a3, 0x1)   popd(edx);                            /* pop edx */
    II(0x1009b5a4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009b5a5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009b5a6, 0x1)   retd();                               /* ret */
FUNC_END

