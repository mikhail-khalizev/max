FUNC_BEGIN(0x100cfd07, 0xb2acc03dc93d873e, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x41, 0x60, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x3c, 0xb6, 0xfb, 0xff, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0xbf, 0xc3, 0x6, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0xe8, 0x16, 0xb6, 0xfb, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0x24, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xf8, 0xe8, 0xc4, 0xb4, 0xfb, 0xff, 0x66, 0x8b, 0, 0x89, 0x45, 0xf4, 0xbb, 0x2, 0, 0, 0, 0x8d, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0xdb, 0xc2, 0x6, 0, 0xeb, 0xc8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100cfd07, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100cfd0c, 0x5)   calld(sys_check_available_stack_size, 0x96041); /* call 0x10165d52 */
    II(0x100cfd11, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100cfd12, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100cfd13, 0x1)   pushd(esi);                           /* push esi */
    II(0x100cfd14, 0x1)   pushd(edi);                           /* push edi */
    II(0x100cfd15, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100cfd16, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100cfd18, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100cfd1e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100cfd21, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100cfd24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cfd27, 0x5)   calld(my_2_get_count, -0x449c4);      /* call 0x1008b368 */
    II(0x100cfd2c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100cfd2f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100cfd33, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cfd36, 0x5)   calld(0x1013c0fa, 0x6c3bf);           /* call 0x1013c0fa */
    II(0x100cfd3b, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100cfd42, 0x2)   jmpd(0x100cfd4a, 0x6);                /* jmp 0x100cfd4a */
l_0x100cfd44:
    II(0x100cfd44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100cfd47, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100cfd4a:
    II(0x100cfd4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cfd4d, 0x5)   calld(my_2_get_count, -0x449ea);      /* call 0x1008b368 */
    II(0x100cfd52, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100cfd56, 0x2)   jled(0x100cfd7c, 0x24);               /* jle 0x100cfd7c */
    II(0x100cfd58, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100cfd5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100cfd5f, 0x5)   calld(0x1008b228, -0x44b3c);          /* call 0x1008b228 */
    II(0x100cfd64, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100cfd67, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100cfd6a, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100cfd6f, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x100cfd72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cfd75, 0x5)   calld(0x1013c055, 0x6c2db);           /* call 0x1013c055 */
    II(0x100cfd7a, 0x2)   jmpd(0x100cfd44, -0x38);              /* jmp 0x100cfd44 */
l_0x100cfd7c:
    II(0x100cfd7c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100cfd7e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100cfd7f, 0x1)   popd(edi);                            /* pop edi */
    II(0x100cfd80, 0x1)   popd(esi);                            /* pop esi */
    II(0x100cfd81, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100cfd82, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100cfd83, 0x1)   retd();                               /* ret */
FUNC_END

