FUNC_BEGIN(0x100a3794, 0x8d4f1ba9ced2c313, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xb4, 0x25, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf7, 0x45, 0xfc, 0x4, 0, 0, 0, 0x74, 0x14, 0xba, 0x58, 0x4d, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xf1, 0x27, 0xc, 0, 0xe8, 0xc, 0x28, 0xc, 0, 0xeb, 0x3e, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0x34, 0x4f, 0x1b, 0x10, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6, 0xe8, 0x97, 0x53, 0xfe, 0xff, 0x83, 0xe8, 0x6, 0x89, 0x45, 0xf8, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xd1, 0xfe, 0xff, 0xff, 0x89, 0x45, 0xf8, 0xf7, 0x45, 0xfc, 0x2, 0, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x58, 0x27, 0xc, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a3794, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100a3799, 0x5)   calld(sys_check_available_stack_size, 0xc25b4); /* call 0x10165d52 */
    II(0x100a379e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a379f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a37a0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a37a1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a37a2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a37a3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a37a5, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100a37ab, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a37ae, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100a37b1, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x4);   /* test dword [ebp-0x4], 0x4 */
    II(0x100a37b8, 0x2)   jzd(0x100a37ce, 0x14);                /* jz 0x100a37ce */
    II(0x100a37ba, 0x5)   mov(edx, 0x101b4d58);                 /* mov edx, 0x101b4d58 */
    II(0x100a37bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a37c2, 0x5)   calld(sys_call_dtor_arr, 0xc27f1);    /* call 0x10165fb8 */
    II(0x100a37c7, 0x5)   calld(sys_delete_arr, 0xc280c);       /* call 0x10165fd8 */
    II(0x100a37cc, 0x2)   jmpd(0x100a380c, 0x3e);               /* jmp 0x100a380c */
l_0x100a37ce:
    II(0x100a37ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a37d1, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b4f34); /* mov dword [eax+0x2], 0x101b4f34 */
    II(0x100a37d8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a37da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a37dd, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a37e0, 0x5)   calld(0x10088b7c, -0x1ac69);          /* call 0x10088b7c */
    II(0x100a37e5, 0x3)   sub(eax, 0x6);                        /* sub eax, 0x6 */
    II(0x100a37e8, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a37eb, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
//    II(0x100a37f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a37f3, 0x5)   calld(0x100a36c9, -0x12f);            /* call 0x100a36c9 */
    II(0x100a37f8, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a37fb, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x2);   /* test dword [ebp-0x4], 0x2 */
    II(0x100a3802, 0x2)   jzd(0x100a380c, 0x8);                 /* jz 0x100a380c */
    II(0x100a3804, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3807, 0x5)   calld(sys_delete, 0xc2758);           /* call 0x10165f64 */
l_0x100a380c:
    II(0x100a380c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a380f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a3812, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a3815, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a3817, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a3818, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a3819, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a381a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a381b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a381c, 0x1)   retd();                               /* ret */
FUNC_END

