FUNC_BEGIN(0x100b01a2, 0xaab5e65648c3a4fc, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xa6, 0x5b, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x45, 0xab, 0x8, 0, 0x84, 0xc0, 0x74, 0xf, 0xba, 0xd, 0xf, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf2, 0x5c, 0xb, 0, 0xeb, 0x57, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x36, 0xa3, 0xfd, 0xff, 0xe8, 0x79, 0x7b, 0, 0, 0x85, 0xc0, 0x75, 0xf, 0xba, 0x28, 0xf, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xcf, 0x5c, 0xb, 0, 0xeb, 0x34, 0xba, 0x43, 0xf, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc0, 0x5c, 0xb, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x6, 0xa3, 0xfd, 0xff, 0xe8, 0x49, 0x7b, 0, 0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8b, 0x90, 0xd7, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfb, 0x5c, 0xb, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b01a2, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100b01a7, 0x5)   calld(sys_check_available_stack_size, 0xb5ba6); /* call 0x10165d52 */
    II(0x100b01ac, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b01ad, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b01ae, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b01af, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b01b0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b01b1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b01b3, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100b01b9, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b01bc, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b01bf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b01c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b01c4, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b01c7, 0x5)   calld(0x1013ad11, 0x8ab45);           /* call 0x1013ad11 */
    II(0x100b01cc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b01ce, 0x2)   jzd(0x100b01df, 0xf);                 /* jz 0x100b01df */
    II(0x100b01d0, 0x5)   mov(edx, 0x101a0f0d);                 /* mov edx, 0x101a0f0d */ /* "Dump unit task, null move." */
    II(0x100b01d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b01d8, 0x5)   calld(sys_strcpy, 0xb5cf2);           /* call 0x10165ecf */
    II(0x100b01dd, 0x2)   jmpd(0x100b0236, 0x57);               /* jmp 0x100b0236 */
l_0x100b01df:
    II(0x100b01df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b01e2, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b01e5, 0x5)   calld(0x1008a520, -0x25cca);          /* call 0x1008a520 */
    II(0x100b01ea, 0x5)   calld(0x100b7d68, 0x7b79);            /* call 0x100b7d68 */
    II(0x100b01ef, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b01f1, 0x2)   jnzd(0x100b0202, 0xf);                /* jnz 0x100b0202 */
    II(0x100b01f3, 0x5)   mov(edx, 0x101a0f28);                 /* mov edx, 0x101a0f28 */ /* "Dump unit task, null unit." */
    II(0x100b01f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b01fb, 0x5)   calld(sys_strcpy, 0xb5ccf);           /* call 0x10165ecf */
    II(0x100b0200, 0x2)   jmpd(0x100b0236, 0x34);               /* jmp 0x100b0236 */
l_0x100b0202:
    II(0x100b0202, 0x5)   mov(edx, 0x101a0f43);                 /* mov edx, 0x101a0f43 */ /* "Find a place to unload " */
    II(0x100b0207, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b020a, 0x5)   calld(sys_strcpy, 0xb5cc0);           /* call 0x10165ecf */
    II(0x100b020f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b0212, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b0215, 0x5)   calld(0x1008a520, -0x25cfa);          /* call 0x1008a520 */
    II(0x100b021a, 0x5)   calld(0x100b7d68, 0x7b49);            /* call 0x100b7d68 */
    II(0x100b021f, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100b0222, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b0225, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100b0228, 0x6)   mov(edx, memd_a32(ds, eax + 0x101c81d7)); /* mov edx, [eax+0x101c81d7] */
    II(0x100b022e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0231, 0x5)   calld(sys_strcat, 0xb5cfb);           /* call 0x10165f31 */
l_0x100b0236:
    II(0x100b0236, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0239, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100b023c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b023f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b0241, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b0242, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b0243, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b0244, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b0245, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b0246, 0x1)   retd();                               /* ret */
FUNC_END

