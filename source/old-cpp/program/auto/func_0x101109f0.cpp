FUNC_BEGIN(0x101109f0, 0x682d014b38172c07, 0x20, ({0x68, 0xb4, 0, 0, 0, 0xe8, 0x58, 0x53, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x84, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xb8, 0x44, 0x1, 0, 0, 0, 0x74, 0x31, 0xba, 0x10, 0x5c, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x44, 0x1, 0, 0, 0xe8, 0x8e, 0x55, 0x5, 0, 0xe8, 0xa9, 0x55, 0x5, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x80, 0x44, 0x1, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x80, 0x4a, 0x1, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8a, 0x80, 0x41, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0x54, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0xb8, 0x43, 0x1, 0, 0, 0x2, 0x75, 0x26, 0x8b, 0x45, 0xfc, 0x8a, 0x90, 0x42, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x3a, 0x90, 0x41, 0x1, 0, 0, 0x76, 0x12, 0x8b, 0x45, 0xfc, 0x8a, 0x90, 0x41, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x88, 0x90, 0x42, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x40, 0x1, 0, 0, 0xc1, 0xf8, 0x18, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x2c, 0xd4, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x80, 0x42, 0x1, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0, 0x3f, 0x1c, 0x10, 0x50, 0xb8, 0x72, 0x46, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x80, 0x50, 0xe8, 0x38, 0x54, 0x5, 0, 0x83, 0xc4, 0x14, 0xba, 0x7f, 0x46, 0x1a, 0x10, 0x8d, 0x45, 0x80, 0xe8, 0x46, 0xe9, 0xfd, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0, 0x10, 0x3, 0, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf8, 0xfe, 0x83, 0x7d, 0xe8, 0, 0x74, 0x31, 0x8b, 0x45, 0xe8, 0xe8, 0x8, 0x14, 0x6, 0, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x7c, 0xff, 0xff, 0xff, 0xff, 0x74, 0x12, 0x31, 0xd2, 0x8a, 0x95, 0x7c, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0xce, 0x12, 0x3, 0, 0xeb, 0xd7, 0x8b, 0x45, 0xe8, 0xe8, 0x43, 0x15, 0x6, 0, 0xb8, 0x5, 0, 0, 0, 0xe8, 0x1c, 0x97, 0x5, 0, 0x66, 0x8b, 0x15, 0x88, 0xad, 0x1b, 0x10, 0x66, 0x2b, 0x15, 0x80, 0xad, 0x1b, 0x10, 0x89, 0x55, 0xf0, 0x66, 0x8b, 0x15, 0x8c, 0xad, 0x1b, 0x10, 0x66, 0x2b, 0x15, 0x84, 0xad, 0x1b, 0x10, 0x89, 0x55, 0xf4, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xf4, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x82, 0x4c, 0x1, 0, 0, 0x83, 0x7d, 0xe8, 0, 0x74, 0x33, 0x8b, 0x4d, 0xfc, 0x81, 0xc1, 0x48, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xf0, 0x8b, 0x45, 0xfc, 0x66, 0x6b, 0x80, 0x4c, 0x1, 0, 0, 0x3, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xec, 0xe8, 0x30, 0x8c, 0xf7, 0xff, 0xe8, 0, 0x8b, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x89, 0x90, 0x44, 0x1, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x78, 0xf, 0x3, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101109f0, 0x5)   pushd(0xb4);                          /* push dword 0xb4 */
    II(0x101109f5, 0x5)   calld(sys_check_available_stack_size, 0x55358); /* call 0x10165d52 */
    II(0x101109fa, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101109fb, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101109fc, 0x1)   pushd(edx);                           /* push edx */
    II(0x101109fd, 0x1)   pushd(esi);                           /* push esi */
    II(0x101109fe, 0x1)   pushd(edi);                           /* push edi */
    II(0x101109ff, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10110a00, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10110a02, 0x6)   sub(esp, 0x84);                       /* sub esp, 0x84 */
    II(0x10110a08, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10110a0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a0e, 0x7)   cmp(memd_a32(ds, eax + 0x144), 0);    /* cmp dword [eax+0x144], 0x0 */
    II(0x10110a15, 0x2)   jzd(0x10110a48, 0x31);                /* jz 0x10110a48 */
    II(0x10110a17, 0x5)   mov(edx, 0x101b5c10);                 /* mov edx, 0x101b5c10 */
    II(0x10110a1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a1f, 0x6)   mov(eax, memd_a32(ds, eax + 0x144));  /* mov eax, [eax+0x144] */
    II(0x10110a25, 0x5)   calld(sys_call_dtor_arr, 0x5558e);    /* call 0x10165fb8 */
    II(0x10110a2a, 0x5)   calld(sys_delete_arr, 0x555a9);       /* call 0x10165fd8 */
    II(0x10110a2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a32, 0xa)   mov(memd_a32(ds, eax + 0x144), 0);    /* mov dword [eax+0x144], 0x0 */
    II(0x10110a3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a3f, 0x9)   mov(memw_a32(ds, eax + 0x14a), 0);    /* mov word [eax+0x14a], 0x0 */
l_0x10110a48:
    II(0x10110a48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a4b, 0x6)   mov(al, memb_a32(ds, eax + 0x141));   /* mov al, [eax+0x141] */
    II(0x10110a51, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10110a56, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10110a58, 0x6)   jzd(0x10110bb2, 0x154);               /* jz dword 0x10110bb2 */
    II(0x10110a5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a61, 0x7)   cmp(memb_a32(ds, eax + 0x143), 0x2);  /* cmp byte [eax+0x143], 0x2 */
    II(0x10110a68, 0x2)   jnzd(0x10110a90, 0x26);               /* jnz 0x10110a90 */
    II(0x10110a6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a6d, 0x6)   mov(dl, memb_a32(ds, eax + 0x142));   /* mov dl, [eax+0x142] */
//    II(0x10110a73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a76, 0x6)   cmp(dl, memb_a32(ds, eax + 0x141));   /* cmp dl, [eax+0x141] */
    II(0x10110a7c, 0x2)   jbed(0x10110a90, 0x12);               /* jbe 0x10110a90 */
    II(0x10110a7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a81, 0x6)   mov(dl, memb_a32(ds, eax + 0x141));   /* mov dl, [eax+0x141] */
//    II(0x10110a87, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a8a, 0x6)   mov(memb_a32(ds, eax + 0x142), dl);   /* mov [eax+0x142], dl */
l_0x10110a90:
    II(0x10110a90, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110a93, 0x6)   mov(eax, memd_a32(ds, eax + 0x140));  /* mov eax, [eax+0x140] */
    II(0x10110a99, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x10110a9c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110a9f, 0x6)   pushd(memd_a32(ds, eax + 0x101bd42c)); /* push dword [eax+0x101bd42c] */
    II(0x10110aa5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110aa8, 0x6)   mov(al, memb_a32(ds, eax + 0x142));   /* mov al, [eax+0x142] */
    II(0x10110aae, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10110ab3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110ab4, 0x5)   mov(eax, 0x101c3f00);                 /* mov eax, 0x101c3f00 */
    II(0x10110ab9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110aba, 0x5)   mov(eax, 0x101a4672);                 /* mov eax, 0x101a4672 */ /* "%sdescr%i.%s" */
    II(0x10110abf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110ac0, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x10110ac3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110ac4, 0x5)   calld(sys_sprintf, 0x55438);          /* call 0x10165f01 */
    II(0x10110ac9, 0x3)   add(esp, 0x14);                       /* add esp, 0x14 */
    II(0x10110acc, 0x5)   mov(edx, 0x101a467f);                 /* mov edx, 0x101a467f */ /* "rt" */
    II(0x10110ad1, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x10110ad4, 0x5)   calld(my_fopen, -0x216ba);            /* call 0x100ef41f */
    II(0x10110ad9, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10110adc, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x10110ae0, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10110ae3, 0x5)   calld(my_string_ctor, 0x31000);       /* call 0x10141ae8 */
    II(0x10110ae8, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10110aeb, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x10110aef, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x10110af3, 0x2)   jzd(0x10110b26, 0x31);                /* jz 0x10110b26 */
l_0x10110af5:
    II(0x10110af5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10110af8, 0x5)   calld(/* sys */ 0x10171f05, 0x61408); /* call 0x10171f05 */
    II(0x10110afd, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
    II(0x10110b03, 0x7)   cmp(memd_a32(ss, ebp - 0x84), -0x1 /* 0xff */); /* cmp dword [ebp+0xffffff7c], 0xff */
    II(0x10110b0a, 0x2)   jzd(0x10110b1e, 0x12);                /* jz 0x10110b1e */
    II(0x10110b0c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10110b0e, 0x6)   mov(dl, memb_a32(ss, ebp - 0x84));    /* mov dl, [ebp+0xffffff7c] */
    II(0x10110b14, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10110b17, 0x5)   calld(my_string_append_char, 0x312ce); /* call 0x10141dea */
    II(0x10110b1c, 0x2)   jmpd(0x10110af5, -0x29);              /* jmp 0x10110af5 */
l_0x10110b1e:
    II(0x10110b1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10110b21, 0x5)   calld(sys_fclose, 0x61543);           /* call 0x10172069 */
l_0x10110b26:
    II(0x10110b26, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10110b2b, 0x5)   calld(/* sys */ 0x1016a24c, 0x5971c); /* call 0x1016a24c */
    II(0x10110b30, 0x7)   mov(dx, memw_a32(ds, 0x101bad88));    /* mov dx, [0x101bad88] */
    II(0x10110b37, 0x7)   sub(dx, memw_a32(ds, 0x101bad80));    /* sub dx, [0x101bad80] */
    II(0x10110b3e, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x10110b41, 0x7)   mov(dx, memw_a32(ds, 0x101bad8c));    /* mov dx, [0x101bad8c] */
    II(0x10110b48, 0x7)   sub(dx, memw_a32(ds, 0x101bad84));    /* sub dx, [0x101bad84] */
    II(0x10110b4f, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10110b52, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x10110b58, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10110b5a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10110b5e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10110b60, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10110b63, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10110b65, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10110b68, 0x7)   mov(memw_a32(ds, edx + 0x14c), ax);   /* mov [edx+0x14c], ax */
    II(0x10110b6f, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x10110b73, 0x2)   jzd(0x10110ba8, 0x33);                /* jz 0x10110ba8 */
    II(0x10110b75, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x10110b78, 0x6)   add(ecx, 0x148);                      /* add ecx, 0x148 */
    II(0x10110b7e, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x10110b82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110b85, 0x8)   imul(ax, memw_a32(ds, eax + 0x14c), 0x3); /* imul ax, [eax+0x14c], 0x3 */
    II(0x10110b8d, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10110b90, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10110b93, 0x5)   calld(my_strobj_c_str_v2, -0x873d0);  /* call 0x100897c8 */
    II(0x10110b98, 0x5)   calld(0x100e969d, -0x27500);          /* call 0x100e969d */
    II(0x10110b9d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10110b9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10110ba2, 0x6)   mov(memd_a32(ds, eax + 0x144), edx);  /* mov [eax+0x144], edx */
l_0x10110ba8:
    II(0x10110ba8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10110baa, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10110bad, 0x5)   calld(my_string_dtor, 0x30f78);       /* call 0x10141b2a */
l_0x10110bb2:
    II(0x10110bb2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10110bb4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10110bb5, 0x1)   popd(edi);                            /* pop edi */
    II(0x10110bb6, 0x1)   popd(esi);                            /* pop esi */
    II(0x10110bb7, 0x1)   popd(edx);                            /* pop edx */
    II(0x10110bb8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10110bb9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10110bba, 0x1)   retd();                               /* ret */
FUNC_END

