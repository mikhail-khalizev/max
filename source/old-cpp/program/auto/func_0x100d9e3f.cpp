FUNC_BEGIN(0x100d9e3f, 0x4fc1d50452dd893a, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x9, 0xbf, 0x8, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf0, 0x88, 0x55, 0xfc, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xf8, 0xb8, 0x21, 0, 0, 0, 0xe8, 0x96, 0xbf, 0x8, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x59, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4f, 0x50, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x51, 0x5, 0x1, 0x4, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x51, 0x5, 0xf7, 0x3, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xf0, 0x8b, 0x48, 0x51, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x80, 0xa3, 0x3, 0, 0, 0xe8, 0x3d, 0xb0, 0xff, 0xff, 0x83, 0xe8, 0x26, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x29, 0x8b, 0x45, 0xec, 0xe8, 0x36, 0xe4, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x4f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xf0, 0x1, 0xc3, 0x8b, 0x45, 0xe0, 0x89, 0x83, 0x75, 0x3, 0, 0, 0xf, 0xbf, 0x45, 0x14, 0x50, 0x8b, 0x45, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0xf8, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbe, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x4f, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf0, 0x8b, 0x80, 0x75, 0x3, 0, 0, 0xe8, 0xe2, 0xe9, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x66, 0xff, 0x40, 0x51, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x40, 0x53, 0x13, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x8, 0}))
    II(0x100d9e3f, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100d9e44, 0x5)   calld(sys_check_available_stack_size, 0x8bf09); /* call 0x10165d52 */
    II(0x100d9e49, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d9e4a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d9e4b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d9e4c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d9e4e, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100d9e54, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d9e57, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100d9e5a, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x100d9e5d, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x100d9e60, 0x5)   mov(eax, 0x21);                       /* mov eax, 0x21 */
    II(0x100d9e65, 0x5)   calld(sys_new, 0x8bf96);              /* call 0x10165e00 */
    II(0x100d9e6a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100d9e6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d9e70, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100d9e73, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x100d9e77, 0x2)   jzd(0x100d9ed2, 0x59);                /* jz 0x100d9ed2 */
    II(0x100d9e79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9e7c, 0x3)   add(eax, 0x4f);                       /* add eax, 0x4f */
    II(0x100d9e7f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d9e80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9e83, 0x4)   mov(ax, memw_a32(ds, eax + 0x51));    /* mov ax, [eax+0x51] */
    II(0x100d9e87, 0x5)   add(eax, 0x401);                      /* add eax, 0x401 */
    II(0x100d9e8c, 0x1)   cwde();                               /* cwde */
    II(0x100d9e8d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d9e8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9e91, 0x4)   mov(ax, memw_a32(ds, eax + 0x51));    /* mov ax, [eax+0x51] */
    II(0x100d9e95, 0x5)   add(eax, 0x3f7);                      /* add eax, 0x3f7 */
    II(0x100d9e9a, 0x1)   cwde();                               /* cwde */
    II(0x100d9e9b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d9e9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9e9f, 0x3)   mov(ecx, memd_a32(ds, eax + 0x51));   /* mov ecx, [eax+0x51] */
    II(0x100d9ea2, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100d9ea5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9ea8, 0x6)   mov(eax, memd_a32(ds, eax + 0x3a3));  /* mov eax, [eax+0x3a3] */
    II(0x100d9eae, 0x5)   calld(0x100d4ef0, -0x4fc3);           /* call 0x100d4ef0 */
    II(0x100d9eb3, 0x3)   sub(eax, 0x26);                       /* sub eax, 0x26 */
    II(0x100d9eb6, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100d9eb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9ebc, 0x3)   mov(edx, memd_a32(ds, eax + 0x29));   /* mov edx, [eax+0x29] */
    II(0x100d9ebf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d9ec2, 0x5)   calld(0x100d82fd, -0x1bca);           /* call 0x100d82fd */
    II(0x100d9ec7, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100d9eca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d9ecd, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100d9ed0, 0x2)   jmpd(0x100d9ed8, 0x6);                /* jmp 0x100d9ed8 */
l_0x100d9ed2:
    II(0x100d9ed2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d9ed5, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100d9ed8:
    II(0x100d9ed8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9edb, 0x3)   mov(eax, memd_a32(ds, eax + 0x4f));   /* mov eax, [eax+0x4f] */
    II(0x100d9ede, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d9ee1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d9ee4, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x100d9ee7, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x100d9ee9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100d9eec, 0x6)   mov(memd_a32(ds, ebx + 0x375), eax);  /* mov [ebx+0x375], eax */
    II(0x100d9ef2, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100d9ef6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d9ef7, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d9efa, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d9efb, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x8));  /* movsx ecx, word [ebp-0x8] */
    II(0x100d9eff, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x100d9f03, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x100d9f07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9f0a, 0x3)   mov(eax, memd_a32(ds, eax + 0x4f));   /* mov eax, [eax+0x4f] */
    II(0x100d9f0d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d9f10, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d9f13, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100d9f16, 0x6)   mov(eax, memd_a32(ds, eax + 0x375));  /* mov eax, [eax+0x375] */
    II(0x100d9f1c, 0x5)   calld(0x100d8903, -0x161e);           /* call 0x100d8903 */
    II(0x100d9f21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9f24, 0x4)   inc(memw_a32(ds, eax + 0x51));        /* inc word [eax+0x51] */
    II(0x100d9f28, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9f2b, 0x5)   add(memw_a32(ds, eax + 0x53), 0x13);  /* add word [eax+0x53], 0x13 */
    II(0x100d9f30, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d9f32, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d9f33, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d9f34, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d9f35, 0x3)   retd(0x8);                            /* ret 0x8 */
FUNC_END

