FUNC_BEGIN(0x1009b06b, 0x5015e53649ffc1c8, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xdd, 0xac, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xa7, 0xb2, 0xfd, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x1b, 0xb4, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0x51, 0xbb, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xc0, 0xfc, 0x9, 0, 0x84, 0xc0, 0x74, 0x1f, 0xe8, 0xe2, 0xf6, 0xfe, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x45, 0xf8, 0xe8, 0xe, 0xb3, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xda, 0xa2, 0, 0, 0xeb, 0xcb, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x15, 0xf6, 0x9, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xf8, 0xfe, 0xfe, 0xff, 0x8b, 0x55, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x2e, 0xad, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x69, 0xae, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1009b06b, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x1009b070, 0x5)   calld(sys_check_available_stack_size, 0xcacdd); /* call 0x10165d52 */
    II(0x1009b075, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009b076, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009b077, 0x1)   pushd(edx);                           /* push edx */
    II(0x1009b078, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009b079, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009b07a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009b07b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009b07d, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x1009b083, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1009b086, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009b089, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009b08c, 0x5)   calld(0x10076338, -0x24d59);          /* call 0x10076338 */
    II(0x1009b091, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x1009b094, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009b096, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009b098, 0x5)   calld(0x100764b8, -0x24be5);          /* call 0x100764b8 */
    II(0x1009b09d, 0x2)   jmpd(0x1009b0a7, 0x8);                /* jmp 0x1009b0a7 */
l_0x1009b09f:
    II(0x1009b09f, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b0a2, 0x5)   calld(0x10076bf8, -0x244af);          /* call 0x10076bf8 */
l_0x1009b0a7:
    II(0x1009b0a7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009b0a9, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b0ac, 0x5)   calld(0x1013ad71, 0x9fcc0);           /* call 0x1013ad71 */
    II(0x1009b0b1, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009b0b3, 0x2)   jzd(0x1009b0d4, 0x1f);                /* jz 0x1009b0d4 */
    II(0x1009b0b5, 0x5)   calld(0x1008a79c, -0x1091e);          /* call 0x1008a79c */
    II(0x1009b0ba, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1009b0bc, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1009b0be, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b0c1, 0x5)   calld(0x100763d4, -0x24cf2);          /* call 0x100763d4 */
    II(0x1009b0c6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009b0c8, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1009b0cd, 0x5)   calld(0x100a53ac, 0xa2da);            /* call 0x100a53ac */
    II(0x1009b0d2, 0x2)   jmpd(0x1009b09f, -0x35);              /* jmp 0x1009b09f */
l_0x1009b0d4:
    II(0x1009b0d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009b0d7, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1009b0da, 0x5)   calld(0x1013a6f4, 0x9f615);           /* call 0x1013a6f4 */
    II(0x1009b0df, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009b0e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009b0e4, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1009b0e7, 0x5)   calld(0x1008afe4, -0x10108);          /* call 0x1008afe4 */
    II(0x1009b0ec, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1009b0ef, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1009b0f4, 0x5)   calld(0x100a5e27, 0xad2e);            /* call 0x100a5e27 */
    II(0x1009b0f9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009b0fb, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1009b0fe, 0x5)   calld(0x10075f6c, -0x25197);          /* call 0x10075f6c */
    II(0x1009b103, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009b105, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009b106, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009b107, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009b108, 0x1)   popd(edx);                            /* pop edx */
    II(0x1009b109, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009b10a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009b10b, 0x1)   retd();                               /* ret */
FUNC_END

