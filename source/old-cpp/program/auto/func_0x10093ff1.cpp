FUNC_BEGIN(0x10093ff1, 0xc0c15533154ac810, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x57, 0x1d, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x22, 0x23, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x98, 0x24, 0xfe, 0xff, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xbb, 0xa, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xaa, 0x1d, 0xd, 0, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xb8, 0x2b, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x27, 0x6d, 0xa, 0, 0x84, 0xc0, 0x74, 0x28, 0x8d, 0x45, 0xec, 0xe8, 0x4a, 0x23, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x75, 0x17, 0x8d, 0x45, 0xec, 0xe8, 0x3b, 0x23, 0xfe, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x1, 0xc0, 0x66, 0xff, 0x44, 0x28, 0xe0, 0xeb, 0xc2, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xb8, 0x22, 0xfe, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb0, 0x23, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x62, 0x2b, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xd1, 0x6c, 0xa, 0, 0x84, 0xc0, 0x74, 0x5d, 0x8d, 0x45, 0xec, 0xe8, 0xf4, 0x22, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x31, 0x75, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0xe5, 0x22, 0xfe, 0xff, 0x80, 0x78, 0x3d, 0x4, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0xd5, 0x22, 0xfe, 0xff, 0x80, 0x78, 0x3e, 0xb, 0x74, 0x2, 0xeb, 0x13, 0x8d, 0x45, 0xec, 0xe8, 0xc5, 0x22, 0xfe, 0xff, 0xe8, 0xbe, 0xc9, 0xb, 0, 0x66, 0x3d, 0x1e, 0, 0x74, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xec, 0xe8, 0xb0, 0x22, 0xfe, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x1, 0xc0, 0x66, 0xff, 0x44, 0x28, 0xe0, 0xeb, 0x8d, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x4, 0x7d, 0x24, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x19, 0xf, 0xbf, 0x55, 0xf4, 0x1, 0xd2, 0x8b, 0x54, 0x2a, 0xde, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xf0, 0xe8, 0x44, 0x2d, 0xfe, 0xff, 0x89, 0x45, 0xf0, 0xeb, 0xcd, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x1f, 0x1e, 0xfe, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x13, 0x1e, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10093ff1, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x10093ff6, 0x5)   calld(sys_check_available_stack_size, 0xd1d57); /* call 0x10165d52 */
    II(0x10093ffb, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10093ffc, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10093ffd, 0x1)   pushd(edx);                           /* push edx */
    II(0x10093ffe, 0x1)   pushd(esi);                           /* push esi */
    II(0x10093fff, 0x1)   pushd(edi);                           /* push edi */
    II(0x10094000, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10094001, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10094003, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10094009, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1009400c, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10094011, 0x5)   calld(0x10076338, -0x1dcde);          /* call 0x10076338 */
    II(0x10094016, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10094018, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009401b, 0x5)   calld(0x100764b8, -0x1db68);          /* call 0x100764b8 */
    II(0x10094020, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10094027, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x1009402c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009402e, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10094031, 0x5)   calld(sys_memset, 0xd1daa);           /* call 0x10165de0 */
    II(0x10094036, 0x2)   jmpd(0x10094040, 0x8);                /* jmp 0x10094040 */
l_0x10094038:
    II(0x10094038, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009403b, 0x5)   calld(0x10076bf8, -0x1d448);          /* call 0x10076bf8 */
l_0x10094040:
    II(0x10094040, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10094042, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10094045, 0x5)   calld(0x1013ad71, 0xa6d27);           /* call 0x1013ad71 */
    II(0x1009404a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009404c, 0x2)   jzd(0x10094076, 0x28);                /* jz 0x10094076 */
    II(0x1009404e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10094051, 0x5)   calld(0x100763a0, -0x1dcb6);          /* call 0x100763a0 */
    II(0x10094056, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x1009405b, 0x2)   jnzd(0x10094074, 0x17);               /* jnz 0x10094074 */
    II(0x1009405d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10094060, 0x5)   calld(0x100763a0, -0x1dcc5);          /* call 0x100763a0 */
    II(0x10094065, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10094068, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1009406d, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1009406f, 0x5)   inc(memw_a32(ds, eax + ebp - 0x20));  /* inc word [eax+ebp-0x20] */
l_0x10094074:
    II(0x10094074, 0x2)   jmpd(0x10094038, -0x3e);              /* jmp 0x10094038 */
l_0x10094076:
    II(0x10094076, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x1009407b, 0x5)   calld(0x10076338, -0x1dd48);          /* call 0x10076338 */
    II(0x10094080, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x10094083, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10094085, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10094087, 0x5)   calld(0x1007643c, -0x1dc50);          /* call 0x1007643c */
    II(0x1009408c, 0x2)   jmpd(0x10094096, 0x8);                /* jmp 0x10094096 */
l_0x1009408e:
    II(0x1009408e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10094091, 0x5)   calld(0x10076bf8, -0x1d49e);          /* call 0x10076bf8 */
l_0x10094096:
    II(0x10094096, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10094098, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009409b, 0x5)   calld(0x1013ad71, 0xa6cd1);           /* call 0x1013ad71 */
    II(0x100940a0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100940a2, 0x2)   jzd(0x10094101, 0x5d);                /* jz 0x10094101 */
    II(0x100940a4, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100940a7, 0x5)   calld(0x100763a0, -0x1dd0c);          /* call 0x100763a0 */
    II(0x100940ac, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x100940b1, 0x2)   jnzd(0x100940c1, 0xe);                /* jnz 0x100940c1 */
    II(0x100940b3, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100940b6, 0x5)   calld(0x100763a0, -0x1dd1b);          /* call 0x100763a0 */
    II(0x100940bb, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x100940bf, 0x2)   jzd(0x100940c3, 0x2);                 /* jz 0x100940c3 */
l_0x100940c1:
    II(0x100940c1, 0x2)   jmpd(0x100940d1, 0xe);                /* jmp 0x100940d1 */
l_0x100940c3:
    II(0x100940c3, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100940c6, 0x5)   calld(0x100763a0, -0x1dd2b);          /* call 0x100763a0 */
    II(0x100940cb, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0xb);   /* cmp byte [eax+0x3e], 0xb */
    II(0x100940cf, 0x2)   jzd(0x100940d3, 0x2);                 /* jz 0x100940d3 */
l_0x100940d1:
    II(0x100940d1, 0x2)   jmpd(0x100940e6, 0x13);               /* jmp 0x100940e6 */
l_0x100940d3:
    II(0x100940d3, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100940d6, 0x5)   calld(0x100763a0, -0x1dd3b);          /* call 0x100763a0 */
    II(0x100940db, 0x5)   calld(0x10150a9e, 0xbc9be);           /* call 0x10150a9e */
    II(0x100940e0, 0x4)   cmp(ax, 0x1e);                        /* cmp ax, 0x1e */
    II(0x100940e4, 0x2)   jzd(0x100940e8, 0x2);                 /* jz 0x100940e8 */
l_0x100940e6:
    II(0x100940e6, 0x2)   jmpd(0x100940ff, 0x17);               /* jmp 0x100940ff */
l_0x100940e8:
    II(0x100940e8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100940eb, 0x5)   calld(0x100763a0, -0x1dd50);          /* call 0x100763a0 */
    II(0x100940f0, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100940f3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100940f8, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100940fa, 0x5)   inc(memw_a32(ds, eax + ebp - 0x20));  /* inc word [eax+ebp-0x20] */
l_0x100940ff:
    II(0x100940ff, 0x2)   jmpd(0x1009408e, -0x73);              /* jmp 0x1009408e */
l_0x10094101:
    II(0x10094101, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10094108, 0x2)   jmpd(0x10094110, 0x6);                /* jmp 0x10094110 */
l_0x1009410a:
    II(0x1009410a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1009410d, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x10094110:
    II(0x10094110, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10094114, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10094117, 0x2)   jged(0x1009413d, 0x24);               /* jge 0x1009413d */
    II(0x10094119, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1009411c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x10094120, 0x2)   jzd(0x1009413b, 0x19);                /* jz 0x1009413b */
    II(0x10094122, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10094126, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x10094128, 0x4)   mov(edx, memd_a32(ds, edx + ebp - 0x22)); /* mov edx, [edx+ebp-0x22] */
    II(0x1009412c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1009412f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10094133, 0x5)   calld(0x10076e7c, -0x1d2bc);          /* call 0x10076e7c */
    II(0x10094138, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x1009413b:
    II(0x1009413b, 0x2)   jmpd(0x1009410a, -0x33);              /* jmp 0x1009410a */
l_0x1009413d:
    II(0x1009413d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10094140, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10094143, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10094145, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10094148, 0x5)   calld(0x10075f6c, -0x1e1e1);          /* call 0x10075f6c */
    II(0x1009414d, 0x2)   jmpd(0x10094159, 0xa);                /* jmp 0x10094159 */
//  II(0x1009414f, 0xa)   /* Недостижимый код. */
l_0x10094159:
    II(0x10094159, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009415c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009415e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009415f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10094160, 0x1)   popd(esi);                            /* pop esi */
    II(0x10094161, 0x1)   popd(edx);                            /* pop edx */
    II(0x10094162, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10094163, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10094164, 0x1)   retd();                               /* ret */
FUNC_END

