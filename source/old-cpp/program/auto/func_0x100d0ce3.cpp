FUNC_BEGIN(0x100d0ce3, 0xcb09284d7b9bb4fc, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0x65, 0x50, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xfd, 0xfa, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0x83, 0xc0, 0x73, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0xf, 0xbf, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0xf, 0xbf, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0x83, 0xc0, 0x8, 0x50, 0xe8, 0x73, 0x9e, 0x9, 0, 0x83, 0xc4, 0x18, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xf6, 0x94, 0x9, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x48, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x94, 0x10, 0xfa, 0xff, 0x89, 0x45, 0xf4, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x28, 0x7d, 0x11, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xd3, 0xa5, 0xfb, 0xff, 0x66, 0x3b, 0x45, 0xf8, 0x7f, 0x5, 0xe9, 0xd5, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x24, 0x3, 0x45, 0xf8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x70, 0xa4, 0xfb, 0xff, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x48, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xd8, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x51, 0xef, 0, 0, 0x66, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x48, 0xf6, 0x40, 0x13, 0x2, 0x75, 0x1b, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x48, 0x8b, 0x58, 0x50, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xf4, 0xf, 0xaf, 0xc2, 0x39, 0xc3, 0x7c, 0x9, 0xc7, 0x45, 0xec, 0xa2, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x8b, 0x45, 0xec, 0x50, 0x8b, 0x55, 0xfc, 0x8b, 0x4a, 0x12, 0xc1, 0xf9, 0x10, 0xbb, 0x14, 0, 0, 0, 0xf, 0xbf, 0x75, 0xf0, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x5, 0x89, 0xc7, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x89, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x83, 0xc7, 0x10, 0x29, 0xc7, 0x89, 0xf8, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x12, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0x5, 0x87, 0, 0, 0, 0x1, 0xd0, 0x89, 0xf2, 0xe8, 0xe8, 0xa7, 0x5, 0, 0xe9, 0x3, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4, 0x83, 0xc0, 0x73, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xdc, 0x83, 0xc0, 0x14, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x8b, 0x55, 0xe0, 0x1, 0xc2, 0x89, 0x55, 0xe8, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0xf4, 0x65, 0x9, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100d0ce3, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x100d0ce8, 0x5)   calld(sys_check_available_stack_size, 0x95065); /* call 0x10165d52 */
    II(0x100d0ced, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d0cee, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d0cef, 0x1)   pushd(edx);                           /* push edx */
    II(0x100d0cf0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d0cf1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d0cf2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d0cf3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d0cf5, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100d0cfb, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100d0cfe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0d01, 0x5)   calld(0x100d0803, -0x503);            /* call 0x100d0803 */
    II(0x100d0d06, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0d09, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100d0d0c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0d0f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0d10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0d13, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100d0d16, 0x3)   add(eax, 0x73);                       /* add eax, 0x73 */
    II(0x100d0d19, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0d1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0d1d, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100d0d20, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100d0d23, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0d24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0d27, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100d0d2a, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100d0d2c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0d2f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0d30, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0d33, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100d0d36, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100d0d39, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0d3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0d3d, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100d0d40, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100d0d43, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0d44, 0x5)   calld(/* sys */ 0x1016abbc, 0x99e73); /* call 0x1016abbc */
    II(0x100d0d49, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100d0d4c, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100d0d51, 0x5)   calld(/* sys */ 0x1016a24c, 0x994f6); /* call 0x1016a24c */
    II(0x100d0d56, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d0d5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0d5e, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100d0d61, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100d0d64, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0d67, 0x5)   calld(0x10071e00, -0x5ef6c);          /* call 0x10071e00 */
    II(0x100d0d6c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d0d6f, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100d0d76, 0x2)   jmpd(0x100d0d7e, 0x6);                /* jmp 0x100d0d7e */
l_0x100d0d78:
    II(0x100d0d78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0d7b, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100d0d7e:
    II(0x100d0d7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0d81, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d0d84, 0x4)   cmp(ax, memw_a32(ds, edx + 0x28));    /* cmp ax, [edx+0x28] */
    II(0x100d0d88, 0x2)   jged(0x100d0d9b, 0x11);               /* jge 0x100d0d9b */
    II(0x100d0d8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0d8d, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d0d90, 0x5)   calld(my_2_get_count, -0x45a2d);      /* call 0x1008b368 */
    II(0x100d0d95, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100d0d99, 0x2)   jgd(0x100d0da0, 0x5);                 /* jg 0x100d0da0 */
l_0x100d0d9b:
    II(0x100d0d9b, 0x5)   jmpd(0x100d0e75, 0xd5);               /* jmp 0x100d0e75 */
l_0x100d0da0:
    II(0x100d0da0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0da3, 0x4)   mov(ax, memw_a32(ds, eax + 0x24));    /* mov ax, [eax+0x24] */
    II(0x100d0da7, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x100d0daa, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100d0dad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0db0, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d0db3, 0x5)   calld(0x1008b228, -0x45b90);          /* call 0x1008b228 */
    II(0x100d0db8, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100d0dbb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0dbe, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100d0dc1, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100d0dc4, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100d0dc9, 0x6)   imul(ebx, eax, 0x247);                /* imul ebx, eax, 0x247 */
    II(0x100d0dcf, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x100d0dd4, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100d0dd6, 0x5)   calld(0x100dfd2c, 0xef51);            /* call 0x100dfd2c */
    II(0x100d0ddb, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x100d0ddf, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d0de2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0de5, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100d0de8, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x100d0dec, 0x2)   jnzd(0x100d0e09, 0x1b);               /* jnz 0x100d0e09 */
    II(0x100d0dee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0df1, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100d0df4, 0x3)   mov(ebx, memd_a32(ds, eax + 0x50));   /* mov ebx, [eax+0x50] */
    II(0x100d0df7, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100d0dfa, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100d0dfe, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100d0e02, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100d0e05, 0x2)   cmp(ebx, eax);                        /* cmp ebx, eax */
    II(0x100d0e07, 0x2)   jld(0x100d0e12, 0x9);                 /* jl 0x100d0e12 */
l_0x100d0e09:
    II(0x100d0e09, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0xa2);  /* mov dword [ebp-0x14], 0xa2 */
    II(0x100d0e10, 0x2)   jmpd(0x100d0e19, 0x7);                /* jmp 0x100d0e19 */
l_0x100d0e12:
    II(0x100d0e12, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
l_0x100d0e19:
    II(0x100d0e19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d0e1c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0e1d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d0e20, 0x3)   mov(ecx, memd_a32(ds, edx + 0x12));   /* mov ecx, [edx+0x12] */
    II(0x100d0e23, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100d0e26, 0x5)   mov(ebx, 0x14);                       /* mov ebx, 0x14 */
    II(0x100d0e2b, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x10)); /* movsx esi, word [ebp-0x10] */
    II(0x100d0e2f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d0e33, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x100d0e36, 0x2)   mov(edi, eax);                        /* mov edi, eax */
    II(0x100d0e38, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x100d0e3e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
//    II(0x100d0e40, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100d0e42, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100d0e45, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100d0e47, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100d0e49, 0x3)   add(edi, 0x10);                       /* add edi, 0x10 */
    II(0x100d0e4c, 0x2)   sub(edi, eax);                        /* sub edi, eax */
    II(0x100d0e4e, 0x2)   mov(eax, edi);                        /* mov eax, edi */
    II(0x100d0e50, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100d0e53, 0x3)   mov(edx, memd_a32(ds, edx + 0x12));   /* mov edx, [edx+0x12] */
    II(0x100d0e56, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d0e59, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100d0e5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0e5f, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x100d0e62, 0x5)   add(eax, 0x87);                       /* add eax, 0x87 */
    II(0x100d0e67, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d0e69, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x100d0e6b, 0x5)   calld(0x1012b658, 0x5a7e8);           /* call 0x1012b658 */
    II(0x100d0e70, 0x5)   jmpd(0x100d0d78, -0xfd);              /* jmp 0x100d0d78 */
l_0x100d0e75:
    II(0x100d0e75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0e78, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x100d0e7b, 0x3)   add(eax, 0x73);                       /* add eax, 0x73 */
    II(0x100d0e7e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100d0e81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0e84, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100d0e87, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100d0e8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100d0e8d, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100d0e90, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d0e93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0e96, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100d0e99, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100d0e9b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0e9e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x100d0ea1, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d0ea3, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x100d0ea6, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100d0ea9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d0eac, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100d0eaf, 0x5)   calld(sys_display_draw_1, 0x965f4);   /* call 0x101674a8 */
    II(0x100d0eb4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d0eb6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d0eb7, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d0eb8, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d0eb9, 0x1)   popd(edx);                            /* pop edx */
    II(0x100d0eba, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d0ebb, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d0ebc, 0x1)   retd();                               /* ret */
FUNC_END

