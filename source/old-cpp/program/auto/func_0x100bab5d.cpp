FUNC_BEGIN(0x100bab5d, 0x88f54d226fcd9b05, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xeb, 0xb1, 0xa, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x77, 0xe2, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x85, 0xb6, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x3d, 0, 0x10, 0, 0, 0x7e, 0x30, 0x8b, 0x45, 0xf8, 0xe8, 0xd1, 0xf7, 0xfc, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x55, 0xf4, 0xf, 0xbf, 0x12, 0x69, 0xd2, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x50, 0xa5, 0x1c, 0x10, 0x3b, 0x82, 0x50, 0xa5, 0x1c, 0x10, 0x7f, 0x2, 0xeb, 0x20, 0x8b, 0x45, 0xf8, 0xe8, 0x9f, 0xf7, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x74, 0xf, 0x8b, 0x45, 0xf8, 0xe8, 0x90, 0xf7, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x7, 0xc7, 0x45, 0xfc, 0, 0x17, 0, 0, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0x8b, 0x45, 0xf8, 0xe8, 0x70, 0xf7, 0xfc, 0xff, 0x31, 0xc9, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xb7, 0x23, 0xfc, 0xff, 0x3, 0x45, 0xfc, 0x5, 0xfa, 0, 0, 0, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x3, 0x7d, 0x1a, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xf4, 0x83, 0xc3, 0x37, 0x1, 0xd8, 0xe8, 0x35, 0x1, 0x8, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xeb, 0xd3, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x3, 0x75, 0x30, 0xff, 0x4d, 0xec, 0x66, 0x83, 0x7d, 0xec, 0xff, 0x74, 0x22, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xf4, 0x83, 0xc3, 0x37, 0x1, 0xd8, 0xe8, 0xb3, 0x2, 0xfd, 0xff, 0xe8, 0x4a, 0x7f, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x2, 0xeb, 0x2, 0xeb, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0xf, 0x8c, 0xb3, 0, 0, 0, 0x31, 0xd2, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xf4, 0x83, 0xc3, 0x37, 0x1, 0xd8, 0xe8, 0xcc, 0, 0x8, 0, 0x84, 0xc0, 0x74, 0x23, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x37, 0x1, 0xd0, 0xe8, 0x6b, 0x2, 0xfd, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x48, 0xb8, 0x47, 0, 0, 0, 0xe8, 0x2a, 0xb1, 0xa, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x1c, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xe4, 0xe8, 0x20, 0x64, 0xfc, 0xff, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xd8, 0x8b, 0x55, 0xd8, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x37, 0x1, 0xd8, 0xe8, 0xc4, 0x2, 0xfd, 0xff, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x37, 0x1, 0xd0, 0xe8, 0x4e, 0x2, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xe, 0xa0, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100bab5d, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100bab62, 0x5)   calld(sys_check_available_stack_size, 0xab1eb); /* call 0x10165d52 */
    II(0x100bab67, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100bab68, 0x1)   pushd(esi);                           /* push esi */
    II(0x100bab69, 0x1)   pushd(edi);                           /* push edi */
    II(0x100bab6a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100bab6b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100bab6d, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100bab73, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100bab76, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100bab79, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100bab7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bab7f, 0x5)   calld(0x100b8dfb, -0x1d89);           /* call 0x100b8dfb */
    II(0x100bab84, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bab86, 0x6)   jnzd(0x100bad42, 0x1b6);              /* jnz dword 0x100bad42 */
    II(0x100bab8c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100bab90, 0x5)   cmp(eax, 0x1000);                     /* cmp eax, 0x1000 */
    II(0x100bab95, 0x2)   jled(0x100babc7, 0x30);               /* jle 0x100babc7 */
    II(0x100bab97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100bab9a, 0x5)   calld(0x1008a370, -0x3082f);          /* call 0x1008a370 */
    II(0x100bab9f, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100baba2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100baba7, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100babad, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100babb0, 0x3)   movsx(edx, memw_a32(ds, edx));        /* movsx edx, word [edx] */
    II(0x100babb3, 0x6)   imul(edx, edx, 0x247);                /* imul edx, edx, 0x247 */
    II(0x100babb9, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca550)); /* mov eax, [eax+0x101ca550] */
    II(0x100babbf, 0x6)   cmp(eax, memd_a32(ds, edx + 0x101ca550)); /* cmp eax, [edx+0x101ca550] */
    II(0x100babc5, 0x2)   jgd(0x100babc9, 0x2);                 /* jg 0x100babc9 */
l_0x100babc7:
    II(0x100babc7, 0x2)   jmpd(0x100babe9, 0x20);               /* jmp 0x100babe9 */
l_0x100babc9:
    II(0x100babc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100babcc, 0x5)   calld(0x1008a370, -0x30861);          /* call 0x1008a370 */
    II(0x100babd1, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x100babd6, 0x2)   jzd(0x100babe7, 0xf);                 /* jz 0x100babe7 */
    II(0x100babd8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100babdb, 0x5)   calld(0x1008a370, -0x30870);          /* call 0x1008a370 */
    II(0x100babe0, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x100babe5, 0x2)   jnzd(0x100babe9, 0x2);                /* jnz 0x100babe9 */
l_0x100babe7:
    II(0x100babe7, 0x2)   jmpd(0x100babeb, 0x2);                /* jmp 0x100babeb */
l_0x100babe9:
    II(0x100babe9, 0x2)   jmpd(0x100babf2, 0x7);                /* jmp 0x100babf2 */
l_0x100babeb:
    II(0x100babeb, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x1700); /* mov dword [ebp-0x4], 0x1700 */
l_0x100babf2:
    II(0x100babf2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100babf5, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100babf8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100babfb, 0x5)   calld(0x1008a370, -0x30890);          /* call 0x1008a370 */
    II(0x100bac00, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100bac02, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bac04, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bac06, 0x5)   calld(0x1007cfc2, -0x3dc49);          /* call 0x1007cfc2 */
    II(0x100bac0b, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100bac0e, 0x5)   add(eax, 0xfa);                       /* add eax, 0xfa */
    II(0x100bac13, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100bac16, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x100bac1d:
    II(0x100bac1d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bac21, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100bac24, 0x2)   jged(0x100bac40, 0x1a);               /* jge 0x100bac40 */
    II(0x100bac26, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bac28, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bac2c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bac2f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100bac32, 0x3)   add(ebx, 0x37);                       /* add ebx, 0x37 */
    II(0x100bac35, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bac37, 0x5)   calld(0x1013ad71, 0x80135);           /* call 0x1013ad71 */
    II(0x100bac3c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bac3e, 0x2)   jnzd(0x100bac42, 0x2);                /* jnz 0x100bac42 */
l_0x100bac40:
    II(0x100bac40, 0x2)   jmpd(0x100bac4a, 0x8);                /* jmp 0x100bac4a */
l_0x100bac42:
    II(0x100bac42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100bac45, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
    II(0x100bac48, 0x2)   jmpd(0x100bac1d, -0x2d);              /* jmp 0x100bac1d */
l_0x100bac4a:
    II(0x100bac4a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bac4e, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100bac51, 0x2)   jnzd(0x100bac83, 0x30);               /* jnz 0x100bac83 */
l_0x100bac53:
    II(0x100bac53, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
    II(0x100bac56, 0x5)   cmp(memw_a32(ss, ebp - 0x14), -0x1 /* 0xff */); /* cmp word [ebp-0x14], 0xff */
    II(0x100bac5b, 0x2)   jzd(0x100bac7f, 0x22);                /* jz 0x100bac7f */
    II(0x100bac5d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100bac61, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bac65, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bac68, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100bac6b, 0x3)   add(ebx, 0x37);                       /* add ebx, 0x37 */
    II(0x100bac6e, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bac70, 0x5)   calld(0x1008af28, -0x2fd4d);          /* call 0x1008af28 */
    II(0x100bac75, 0x5)   calld(0x100a2bc4, -0x180b6);          /* call 0x100a2bc4 */
    II(0x100bac7a, 0x1)   cwde();                               /* cwde */
    II(0x100bac7b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bac7d, 0x2)   jled(0x100bac81, 0x2);                /* jle 0x100bac81 */
l_0x100bac7f:
    II(0x100bac7f, 0x2)   jmpd(0x100bac83, 0x2);                /* jmp 0x100bac83 */
l_0x100bac81:
    II(0x100bac81, 0x2)   jmpd(0x100bac53, -0x30);              /* jmp 0x100bac53 */
l_0x100bac83:
    II(0x100bac83, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bac87, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bac89, 0x6)   jld(0x100bad42, 0xb3);                /* jl dword 0x100bad42 */
    II(0x100bac8f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bac91, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bac95, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bac98, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100bac9b, 0x3)   add(ebx, 0x37);                       /* add ebx, 0x37 */
    II(0x100bac9e, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100baca0, 0x5)   calld(0x1013ad71, 0x800cc);           /* call 0x1013ad71 */
    II(0x100baca5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100baca7, 0x2)   jzd(0x100baccc, 0x23);                /* jz 0x100baccc */
    II(0x100baca9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bacad, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bacb0, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100bacb3, 0x3)   add(edx, 0x37);                       /* add edx, 0x37 */
    II(0x100bacb6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bacb8, 0x5)   calld(0x1008af28, -0x2fd95);          /* call 0x1008af28 */
    II(0x100bacbd, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100bacc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100bacc3, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100bacc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100bacc9, 0x3)   calld_abs(memd_a32(ds, edx + 0x48));  /* call dword near [edx+0x48] */
l_0x100baccc:
    II(0x100baccc, 0x5)   mov(eax, 0x47);                       /* mov eax, 0x47 */
    II(0x100bacd1, 0x5)   calld(sys_new, 0xab12a);              /* call 0x10165e00 */
    II(0x100bacd6, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100bacd9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bacdc, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100bacdf, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x100bace3, 0x2)   jzd(0x100bad01, 0x1c);                /* jz 0x100bad01 */
    II(0x100bace5, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100bace7, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x100baceb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100bacee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bacf1, 0x5)   calld(0x10081116, -0x39be0);          /* call 0x10081116 */
    II(0x100bacf6, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100bacf9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100bacfc, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100bacff, 0x2)   jmpd(0x100bad07, 0x6);                /* jmp 0x100bad07 */
l_0x100bad01:
    II(0x100bad01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100bad04, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100bad07:
    II(0x100bad07, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x100bad0a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bad0e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bad11, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100bad13, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bad16, 0x3)   add(eax, 0x37);                       /* add eax, 0x37 */
    II(0x100bad19, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bad1b, 0x5)   calld(0x1008afe4, -0x2fd3c);          /* call 0x1008afe4 */
    II(0x100bad20, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bad24, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bad27, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bad29, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bad2c, 0x3)   add(eax, 0x37);                       /* add eax, 0x37 */
    II(0x100bad2f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bad31, 0x5)   calld(0x1008af84, -0x2fdb2);          /* call 0x1008af84 */
    II(0x100bad36, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bad38, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bad3d, 0x5)   calld(0x100a4d50, -0x15ff2);          /* call 0x100a4d50 */
l_0x100bad42:
    II(0x100bad42, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100bad44, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100bad45, 0x1)   popd(edi);                            /* pop edi */
    II(0x100bad46, 0x1)   popd(esi);                            /* pop esi */
    II(0x100bad47, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100bad48, 0x1)   retd();                               /* ret */
FUNC_END

