FUNC_BEGIN(0x1014018f, 0x5c2a4cc89f70ec9d, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xb9, 0x5b, 0x2, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xf8, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xe7, 0xb4, 0xf8, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x1a, 0xf, 0xbf, 0x45, 0x14, 0x50, 0x8b, 0x4d, 0x10, 0x8b, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xb4, 0xf6, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x17, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x20, 0xf, 0xbf, 0x45, 0x14, 0x50, 0x8b, 0x45, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0xf8, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0x6f, 0xf8, 0xff, 0xff, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x4d, 0x14, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xc8, 0xf9, 0xff, 0xff, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0x14, 0x50, 0x8b, 0x4d, 0x10, 0x8b, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0x5d, 0xfc, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x1a, 0xf, 0xbf, 0x45, 0x14, 0x50, 0x8b, 0x4d, 0x10, 0x8b, 0x5d, 0xec, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xb8, 0xfd, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xec, 0x66, 0x83, 0x78, 0x8, 0, 0x74, 0x32, 0xf, 0xbf, 0x45, 0x14, 0x50, 0xf, 0xbf, 0x45, 0x1c, 0x50, 0xf, 0xbf, 0x45, 0x18, 0x50, 0x8b, 0x45, 0x10, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xec, 0x8b, 0x48, 0x6, 0xc1, 0xf9, 0x10, 0xf, 0xbf, 0x5d, 0xf4, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0x10, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x10, 0}))
    II(0x1014018f, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10140194, 0x5)   calld(sys_check_available_stack_size, 0x25bb9); /* call 0x10165d52 */
    II(0x10140199, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014019a, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014019b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014019c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014019e, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x101401a4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101401a7, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101401aa, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x101401ad, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x101401b0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x101401b4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101401b8, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101401be, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x101401c4, 0x5)   calld(0x100cb6b0, -0x74b19);          /* call 0x100cb6b0 */
    II(0x101401c9, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x101401cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101401cf, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x101401d2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101401d5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101401d7, 0x2)   jled(0x101401f3, 0x1a);               /* jle 0x101401f3 */
    II(0x101401d9, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x101401dd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101401de, 0x3)   mov(ecx, memd_a32(ss, ebp + 0x10));   /* mov ecx, [ebp+0x10] */
    II(0x101401e1, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x14));   /* mov ebx, [ebp-0x14] */
    II(0x101401e4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x101401e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101401eb, 0x5)   calld(0x1013f8a4, -0x94c);            /* call 0x1013f8a4 */
    II(0x101401f0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x101401f3:
    II(0x101401f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101401f6, 0x3)   mov(eax, memd_a32(ds, eax + 0x17));   /* mov eax, [eax+0x17] */
    II(0x101401f9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101401fc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101401fe, 0x2)   jled(0x10140220, 0x20);               /* jle 0x10140220 */
    II(0x10140200, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x10140204, 0x1)   pushd(eax);                           /* push eax */
    II(0x10140205, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10140208, 0x1)   pushd(eax);                           /* push eax */
    II(0x10140209, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x8));  /* movsx ecx, word [ebp-0x8] */
    II(0x1014020d, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x10140211, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10140215, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10140218, 0x5)   calld(0x1013fa8c, -0x791);            /* call 0x1013fa8c */
    II(0x1014021d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x10140220:
    II(0x10140220, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x14)); /* movsx ecx, word [ebp+0x14] */
    II(0x10140224, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x10140228, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1014022c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1014022f, 0x5)   calld(0x1013fbfc, -0x638);            /* call 0x1013fbfc */
    II(0x10140234, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10140237, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x1014023b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014023c, 0x3)   mov(ecx, memd_a32(ss, ebp + 0x10));   /* mov ecx, [ebp+0x10] */
    II(0x1014023f, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x14));   /* mov ebx, [ebp-0x14] */
    II(0x10140242, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10140246, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10140249, 0x5)   calld(0x1013feab, -0x3a3);            /* call 0x1013feab */
    II(0x1014024e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10140251, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10140254, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x10140257, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014025a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014025c, 0x2)   jled(0x10140278, 0x1a);               /* jle 0x10140278 */
    II(0x1014025e, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x10140262, 0x1)   pushd(eax);                           /* push eax */
    II(0x10140263, 0x3)   mov(ecx, memd_a32(ss, ebp + 0x10));   /* mov ecx, [ebp+0x10] */
    II(0x10140266, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x14));   /* mov ebx, [ebp-0x14] */
    II(0x10140269, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1014026d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10140270, 0x5)   calld(0x1014002d, -0x248);            /* call 0x1014002d */
    II(0x10140275, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x10140278:
    II(0x10140278, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1014027b, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0);      /* cmp word [eax+0x8], 0x0 */
    II(0x10140280, 0x2)   jzd(0x101402b4, 0x32);                /* jz 0x101402b4 */
    II(0x10140282, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x10140286, 0x1)   pushd(eax);                           /* push eax */
    II(0x10140287, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x1c)); /* movsx eax, word [ebp+0x1c] */
    II(0x1014028b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014028c, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x10140290, 0x1)   pushd(eax);                           /* push eax */
    II(0x10140291, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x10140294, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10140297, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014029a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1014029b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1014029e, 0x3)   mov(ecx, memd_a32(ds, eax + 0x6));    /* mov ecx, [eax+0x6] */
    II(0x101402a1, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x101402a4, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x101402a8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x101402ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101402af, 0x5)   calld(0x101400c4, -0x1f0);            /* call 0x101400c4 */
l_0x101402b4:
    II(0x101402b4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101402b6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101402b7, 0x1)   popd(edi);                            /* pop edi */
    II(0x101402b8, 0x1)   popd(esi);                            /* pop esi */
    II(0x101402b9, 0x3)   retd(0x10);                           /* ret 0x10 */
FUNC_END

