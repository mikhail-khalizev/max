FUNC_BEGIN(0x100b11f7, 0xbda736f31ae252f1, 0x20, ({0x68, 0x80, 0, 0, 0, 0xe8, 0x51, 0x4b, 0xb, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x70, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8d, 0x55, 0xe0, 0x8b, 0x45, 0xf0, 0xe8, 0x13, 0x1b, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xe8, 0x5e, 0x59, 0xfc, 0xff, 0x98, 0x85, 0xc0, 0xf, 0x84, 0xfa, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0x1, 0x6a, 0, 0, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd9, 0x68, 0, 0, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xd8, 0xe8, 0xd9, 0x93, 0xfd, 0xff, 0x89, 0x45, 0xd4, 0x80, 0x65, 0xec, 0xfe, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0x8c, 0x59, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xfb, 0x9a, 0x8, 0, 0x84, 0xc0, 0x74, 0x5a, 0x8d, 0x55, 0xd0, 0x8d, 0x45, 0xdc, 0xe8, 0x8f, 0x67, 0, 0, 0xe8, 0xaa, 0xb7, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xcc, 0xe8, 0xcd, 0x4b, 0xfc, 0xff, 0x89, 0xda, 0xe8, 0x2c, 0x4d, 0xff, 0xff, 0x89, 0x45, 0xc8, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x66, 0x9a, 0x8, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xc8, 0x66, 0x3b, 0x45, 0xc4, 0x7d, 0x1a, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0x8d, 0x45, 0xdc, 0xe8, 0x82, 0x67, 0, 0, 0x8d, 0x5d, 0xd8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2a, 0x6a, 0, 0, 0xeb, 0x90, 0x8b, 0x45, 0xc4, 0x1, 0x45, 0xe8, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0xd8, 0xe8, 0x3b, 0x92, 0xfd, 0xff, 0xe8, 0x4a, 0xb7, 0xff, 0xff, 0x8d, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x4e, 0x78, 0xfd, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0x7e, 0x92, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf4, 0xe8, 0xa4, 0x68, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x6c, 0x92, 0xfd, 0xff, 0x8b, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf8, 0x68, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x26, 0x7a, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x20, 0x63, 0, 0, 0xe9, 0xf5, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x53, 0x58, 0xfc, 0xff, 0x98, 0x85, 0xc0, 0xf, 0x84, 0xe4, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xf6, 0x68, 0, 0, 0x8d, 0x5d, 0xbc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xce, 0x67, 0, 0, 0x80, 0x4d, 0xec, 0x1, 0x8d, 0x45, 0xb8, 0xe8, 0xce, 0x92, 0xfd, 0xff, 0x89, 0x45, 0xb4, 0x80, 0x65, 0xec, 0xfe, 0xeb, 0x8, 0x8d, 0x45, 0xbc, 0xe8, 0x81, 0x58, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0xf0, 0x99, 0x8, 0, 0x84, 0xc0, 0x74, 0x5a, 0x8d, 0x55, 0xb0, 0x8d, 0x45, 0xbc, 0xe8, 0x84, 0x66, 0, 0, 0xe8, 0xb, 0x6a, 0, 0, 0x89, 0xc3, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xac, 0xe8, 0xc2, 0x4a, 0xfc, 0xff, 0x89, 0xda, 0xe8, 0x21, 0x4c, 0xff, 0xff, 0x89, 0x45, 0xa8, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x5b, 0x99, 0x8, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xa8, 0x66, 0x3b, 0x45, 0xa4, 0x7d, 0x1a, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xa4, 0x8d, 0x45, 0xbc, 0xe8, 0x77, 0x66, 0, 0, 0x8d, 0x5d, 0xb8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x1f, 0x69, 0, 0, 0xeb, 0x90, 0x8b, 0x45, 0xa4, 0x1, 0x45, 0xe8, 0x8d, 0x55, 0xa0, 0x8d, 0x45, 0xb8, 0xe8, 0x30, 0x91, 0xfd, 0xff, 0xe8, 0xab, 0x69, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe0, 0xe8, 0x45, 0x77, 0xfd, 0xff, 0x8d, 0x45, 0xb8, 0xe8, 0x75, 0x91, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x9b, 0x67, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x31, 0x79, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xbc, 0xe8, 0x2b, 0x62, 0, 0, 0xe9, 0xb, 0xff, 0xff, 0xff, 0x83, 0x7d, 0xfc, 0, 0x74, 0x45, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xfc, 0xe8, 0xf9, 0xb5, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0x98, 0xe8, 0x1c, 0x4a, 0xfc, 0xff, 0x89, 0xda, 0xe8, 0x7b, 0x4b, 0xff, 0xff, 0x89, 0xc1, 0x8d, 0x55, 0x94, 0x8b, 0x45, 0xfc, 0xe8, 0x44, 0x69, 0, 0, 0x89, 0xc3, 0x8d, 0x55, 0x90, 0x8b, 0x45, 0xfc, 0xe8, 0xcb, 0xb5, 0xff, 0xff, 0x89, 0xda, 0xe8, 0x5a, 0x4b, 0xff, 0xff, 0x1, 0xc8, 0x1, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100b11f7, 0x5)   pushd(0x80);                          /* push dword 0x80 */
    II(0x100b11fc, 0x5)   calld(sys_check_available_stack_size, 0xb4b51); /* call 0x10165d52 */
    II(0x100b1201, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b1202, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b1203, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b1204, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b1206, 0x6)   sub(esp, 0x70);                       /* sub esp, 0x70 */
    II(0x100b120c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b120f, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100b1212, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100b1215, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100b1218, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100b121f, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100b1222, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b1225, 0x5)   calld(0x100a2d3d, -0xe4ed);           /* call 0x100a2d3d */
l_0x100b122a:
    II(0x100b122a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b122d, 0x5)   calld(0x10076b90, -0x3a6a2);          /* call 0x10076b90 */
    II(0x100b1232, 0x1)   cwde();                               /* cwde */
    II(0x100b1233, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b1235, 0x6)   jzd(0x100b1335, 0xfa);                /* jz dword 0x100b1335 */
    II(0x100b123b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b123e, 0x5)   calld(0x100b7c44, 0x6a01);            /* call 0x100b7c44 */
    II(0x100b1243, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100b1246, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1248, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b124a, 0x5)   calld(0x100b7b28, 0x68d9);            /* call 0x100b7b28 */
    II(0x100b124f, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x100b1253, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b1256, 0x5)   calld(0x1008a634, -0x26c27);          /* call 0x1008a634 */
    II(0x100b125b, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100b125e, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x100b1262, 0x2)   jmpd(0x100b126c, 0x8);                /* jmp 0x100b126c */
l_0x100b1264:
    II(0x100b1264, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b1267, 0x5)   calld(0x10076bf8, -0x3a674);          /* call 0x10076bf8 */
l_0x100b126c:
    II(0x100b126c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b126e, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b1271, 0x5)   calld(0x1013ad71, 0x89afb);           /* call 0x1013ad71 */
    II(0x100b1276, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b1278, 0x2)   jzd(0x100b12d4, 0x5a);                /* jz 0x100b12d4 */
    II(0x100b127a, 0x3)   lea(edx, ebp - 0x30);                 /* lea edx, [ebp-0x30] */
    II(0x100b127d, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b1280, 0x5)   calld(0x100b7a14, 0x678f);            /* call 0x100b7a14 */
    II(0x100b1285, 0x5)   calld(0x100aca34, -0x4856);           /* call 0x100aca34 */
    II(0x100b128a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b128c, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100b128f, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100b1292, 0x5)   calld(0x10075e64, -0x3b433);          /* call 0x10075e64 */
    II(0x100b1297, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100b1299, 0x5)   calld(0x100a5fca, -0xb2d4);           /* call 0x100a5fca */
    II(0x100b129e, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100b12a1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b12a3, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b12a6, 0x5)   calld(0x1013ad11, 0x89a66);           /* call 0x1013ad11 */
    II(0x100b12ab, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b12ad, 0x2)   jnzd(0x100b12b8, 0x9);                /* jnz 0x100b12b8 */
    II(0x100b12af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100b12b2, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x3c));    /* cmp ax, [ebp-0x3c] */
    II(0x100b12b6, 0x2)   jged(0x100b12d2, 0x1a);               /* jge 0x100b12d2 */
l_0x100b12b8:
    II(0x100b12b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100b12bb, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100b12be, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b12c1, 0x5)   calld(0x100b7a48, 0x6782);            /* call 0x100b7a48 */
    II(0x100b12c6, 0x3)   lea(ebx, ebp - 0x28);                 /* lea ebx, [ebp-0x28] */
    II(0x100b12c9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b12cb, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b12cd, 0x5)   calld(0x100b7cfc, 0x6a2a);            /* call 0x100b7cfc */
l_0x100b12d2:
    II(0x100b12d2, 0x2)   jmpd(0x100b1264, -0x70);              /* jmp 0x100b1264 */
l_0x100b12d4:
    II(0x100b12d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100b12d7, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
    II(0x100b12da, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x100b12dd, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b12e0, 0x5)   calld(0x1008a520, -0x26dc5);          /* call 0x1008a520 */
    II(0x100b12e5, 0x5)   calld(0x100aca34, -0x48b6);           /* call 0x100aca34 */
    II(0x100b12ea, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x100b12ed, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b12ef, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b12f1, 0x5)   calld(0x10088b44, -0x287b2);          /* call 0x10088b44 */
    II(0x100b12f6, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b12f9, 0x5)   calld(0x1008a57c, -0x26d82);          /* call 0x1008a57c */
    II(0x100b12fe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1300, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b1303, 0x5)   calld(0x100b7bac, 0x68a4);            /* call 0x100b7bac */
    II(0x100b1308, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b130b, 0x5)   calld(0x1008a57c, -0x26d94);          /* call 0x1008a57c */
    II(0x100b1310, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100b1313, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1315, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b1317, 0x5)   calld(0x100b7c14, 0x68f8);            /* call 0x100b7c14 */
    II(0x100b131c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b131e, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b1321, 0x5)   calld(0x10088d4c, -0x285da);          /* call 0x10088d4c */
    II(0x100b1326, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b1328, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b132b, 0x5)   calld(0x100b7650, 0x6320);            /* call 0x100b7650 */
    II(0x100b1330, 0x5)   jmpd(0x100b122a, -0x10b);             /* jmp 0x100b122a */
l_0x100b1335:
    II(0x100b1335, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b1338, 0x5)   calld(0x10076b90, -0x3a7ad);          /* call 0x10076b90 */
    II(0x100b133d, 0x1)   cwde();                               /* cwde */
    II(0x100b133e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b1340, 0x6)   jzd(0x100b142a, 0xe4);                /* jz dword 0x100b142a */
    II(0x100b1346, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b1349, 0x5)   calld(0x100b7c44, 0x68f6);            /* call 0x100b7c44 */
    II(0x100b134e, 0x3)   lea(ebx, ebp - 0x44);                 /* lea ebx, [ebp-0x44] */
    II(0x100b1351, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1353, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b1355, 0x5)   calld(0x100b7b28, 0x67ce);            /* call 0x100b7b28 */
    II(0x100b135a, 0x4)   or_(memb_a32(ss, ebp - 0x14), 0x1);   /* or byte [ebp-0x14], 0x1 */
    II(0x100b135e, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1361, 0x5)   calld(0x1008a634, -0x26d32);          /* call 0x1008a634 */
    II(0x100b1366, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100b1369, 0x4)   and_(memb_a32(ss, ebp - 0x14), -0x2 /* 0xfe */); /* and byte [ebp-0x14], 0xfe */
    II(0x100b136d, 0x2)   jmpd(0x100b1377, 0x8);                /* jmp 0x100b1377 */
l_0x100b136f:
    II(0x100b136f, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100b1372, 0x5)   calld(0x10076bf8, -0x3a77f);          /* call 0x10076bf8 */
l_0x100b1377:
    II(0x100b1377, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b1379, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100b137c, 0x5)   calld(0x1013ad71, 0x899f0);           /* call 0x1013ad71 */
    II(0x100b1381, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b1383, 0x2)   jzd(0x100b13df, 0x5a);                /* jz 0x100b13df */
    II(0x100b1385, 0x3)   lea(edx, ebp - 0x50);                 /* lea edx, [ebp-0x50] */
    II(0x100b1388, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100b138b, 0x5)   calld(0x100b7a14, 0x6684);            /* call 0x100b7a14 */
    II(0x100b1390, 0x5)   calld(0x100b7da0, 0x6a0b);            /* call 0x100b7da0 */
    II(0x100b1395, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b1397, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100b139a, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100b139d, 0x5)   calld(0x10075e64, -0x3b53e);          /* call 0x10075e64 */
    II(0x100b13a2, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100b13a4, 0x5)   calld(0x100a5fca, -0xb3df);           /* call 0x100a5fca */
    II(0x100b13a9, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100b13ac, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b13ae, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b13b1, 0x5)   calld(0x1013ad11, 0x8995b);           /* call 0x1013ad11 */
    II(0x100b13b6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b13b8, 0x2)   jnzd(0x100b13c3, 0x9);                /* jnz 0x100b13c3 */
    II(0x100b13ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100b13bd, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x5c));    /* cmp ax, [ebp-0x5c] */
    II(0x100b13c1, 0x2)   jged(0x100b13dd, 0x1a);               /* jge 0x100b13dd */
l_0x100b13c3:
    II(0x100b13c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100b13c6, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100b13c9, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100b13cc, 0x5)   calld(0x100b7a48, 0x6677);            /* call 0x100b7a48 */
    II(0x100b13d1, 0x3)   lea(ebx, ebp - 0x48);                 /* lea ebx, [ebp-0x48] */
    II(0x100b13d4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b13d6, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b13d8, 0x5)   calld(0x100b7cfc, 0x691f);            /* call 0x100b7cfc */
l_0x100b13dd:
    II(0x100b13dd, 0x2)   jmpd(0x100b136f, -0x70);              /* jmp 0x100b136f */
l_0x100b13df:
    II(0x100b13df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100b13e2, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
    II(0x100b13e5, 0x3)   lea(edx, ebp - 0x60);                 /* lea edx, [ebp-0x60] */
    II(0x100b13e8, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b13eb, 0x5)   calld(0x1008a520, -0x26ed0);          /* call 0x1008a520 */
    II(0x100b13f0, 0x5)   calld(0x100b7da0, 0x69ab);            /* call 0x100b7da0 */
    II(0x100b13f5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b13f7, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b13fa, 0x5)   calld(0x10088b44, -0x288bb);          /* call 0x10088b44 */
    II(0x100b13ff, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1402, 0x5)   calld(0x1008a57c, -0x26e8b);          /* call 0x1008a57c */
    II(0x100b1407, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1409, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b140c, 0x5)   calld(0x100b7bac, 0x679b);            /* call 0x100b7bac */
    II(0x100b1411, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b1413, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1416, 0x5)   calld(0x10088d4c, -0x286cf);          /* call 0x10088d4c */
    II(0x100b141b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b141d, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x100b1420, 0x5)   calld(0x100b7650, 0x622b);            /* call 0x100b7650 */
    II(0x100b1425, 0x5)   jmpd(0x100b1335, -0xf5);              /* jmp 0x100b1335 */
l_0x100b142a:
    II(0x100b142a, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100b142e, 0x2)   jzd(0x100b1475, 0x45);                /* jz 0x100b1475 */
    II(0x100b1430, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100b1433, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1436, 0x5)   calld(0x100aca34, -0x4a07);           /* call 0x100aca34 */
    II(0x100b143b, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b143d, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100b1440, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100b1443, 0x5)   calld(0x10075e64, -0x3b5e4);          /* call 0x10075e64 */
    II(0x100b1448, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100b144a, 0x5)   calld(0x100a5fca, -0xb485);           /* call 0x100a5fca */
    II(0x100b144f, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100b1451, 0x3)   lea(edx, ebp - 0x6c);                 /* lea edx, [ebp-0x6c] */
    II(0x100b1454, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1457, 0x5)   calld(0x100b7da0, 0x6944);            /* call 0x100b7da0 */
    II(0x100b145c, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b145e, 0x3)   lea(edx, ebp - 0x70);                 /* lea edx, [ebp-0x70] */
    II(0x100b1461, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1464, 0x5)   calld(0x100aca34, -0x4a35);           /* call 0x100aca34 */
    II(0x100b1469, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100b146b, 0x5)   calld(0x100a5fca, -0xb4a6);           /* call 0x100a5fca */
    II(0x100b1470, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x100b1472, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
l_0x100b1475:
    II(0x100b1475, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b1478, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100b147b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b147e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b1480, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b1481, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b1482, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b1483, 0x1)   retd();                               /* ret */
FUNC_END

