FUNC_BEGIN(0x100abe6c, 0x1d052d8a2bd1234b, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xdc, 0x9e, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0xdb, 0xee, 0x8, 0, 0x84, 0xc0, 0x74, 0x49, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x73, 0xc0, 0, 0, 0xe8, 0x72, 0xc1, 0, 0, 0x3b, 0x45, 0xfc, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x14, 0x1, 0, 0, 0xbb, 0xcf, 0xd, 0x1a, 0x10, 0xba, 0xdb, 0xd, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xc4, 0x9e, 0xb, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf0, 0xff, 0x52, 0x48, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100abe6c, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100abe71, 0x5)   calld(sys_check_available_stack_size, 0xb9edc); /* call 0x10165d52 */
    II(0x100abe76, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100abe77, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100abe78, 0x1)   pushd(esi);                           /* push esi */
    II(0x100abe79, 0x1)   pushd(edi);                           /* push edi */
    II(0x100abe7a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100abe7b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100abe7d, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100abe83, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100abe86, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100abe89, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100abe8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100abe8e, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100abe91, 0x5)   calld(0x1013ad71, 0x8eedb);           /* call 0x1013ad71 */
    II(0x100abe96, 0x2)   test(al, al);                         /* test al, al */
    II(0x100abe98, 0x2)   jzd(0x100abee3, 0x49);                /* jz 0x100abee3 */
    II(0x100abe9a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100abe9d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100abea0, 0x5)   calld(0x100b7f18, 0xc073);            /* call 0x100b7f18 */
    II(0x100abea5, 0x5)   calld(my__get_unit, 0xc172);          /* call 0x100b801c */
    II(0x100abeaa, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100abead, 0x2)   jnzd(0x100abeb8, 0x9);                /* jnz 0x100abeb8 */
    II(0x100abeaf, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100abeb6, 0x2)   jmpd(0x100abed1, 0x19);               /* jmp 0x100abed1 */
l_0x100abeb8:
    II(0x100abeb8, 0x5)   mov(ecx, 0x114);                      /* mov ecx, 0x114 */
    II(0x100abebd, 0x5)   mov(ebx, 0x101a0dcf);                 /* mov ebx, 0x101a0dcf */ /* "ai_move.cpp" */
    II(0x100abec2, 0x5)   mov(edx, 0x101a0ddb);                 /* mov edx, 0x101a0ddb */ /* "path_request->GetUnit() == unit" */
    II(0x100abec7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100abec9, 0x5)   calld(sys_assert, 0xb9ec4);           /* call 0x10165d92 */
    II(0x100abece, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x100abed1:
    II(0x100abed1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100abed4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100abed7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100abeda, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100abedd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100abee0, 0x3)   calld_abs(memd_a32(ds, edx + 0x48));  /* call dword near [edx+0x48] */
l_0x100abee3:
    II(0x100abee3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100abee5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100abee6, 0x1)   popd(edi);                            /* pop edi */
    II(0x100abee7, 0x1)   popd(esi);                            /* pop esi */
    II(0x100abee8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100abee9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100abeea, 0x1)   retd();                               /* ret */
FUNC_END

