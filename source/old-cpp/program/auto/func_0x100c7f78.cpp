FUNC_BEGIN(0x100c7f78, 0x92259b3e53984bc, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xd0, 0xdd, 0x9, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x88, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xf4, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x18, 0xc1, 0xe3, 0x2, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x1f, 0x1, 0xda, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x8b, 0x12, 0x1, 0xd0, 0x31, 0xd2, 0x8a, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x5, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x9, 0xc6, 0x45, 0xec, 0, 0xe9, 0xbd, 0, 0, 0, 0x80, 0x7d, 0xfc, 0, 0x74, 0x2d, 0xb8, 0x7, 0, 0, 0, 0xe8, 0xfc, 0xdf, 0xfa, 0xff, 0x5, 0x4, 0, 0, 0, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xf8, 0x8b, 0x45, 0xf4, 0x8b, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0xe8, 0xab, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x9, 0xc6, 0x45, 0xec, 0, 0xe9, 0x7f, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0, 0x89, 0x45, 0xe8, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0xf, 0xbf, 0x55, 0xe8, 0x83, 0xc0, 0x4, 0x39, 0xc2, 0x7d, 0x59, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x2, 0x89, 0x45, 0xe4, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xe4, 0x83, 0xc0, 0x4, 0x39, 0xc2, 0x7d, 0x32, 0xf, 0xbf, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x1f, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xe4, 0x8b, 0, 0x1, 0xd0, 0x31, 0xd2, 0x8a, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x5, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x6, 0xc6, 0x45, 0xec, 0, 0xeb, 0x8, 0xeb, 0xb5, 0xeb, 0x90, 0xc6, 0x45, 0xec, 0x1, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100c7f78, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100c7f7d, 0x5)   calld(sys_check_available_stack_size, 0x9ddd0); /* call 0x10165d52 */
    II(0x100c7f82, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c7f83, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c7f84, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c7f85, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c7f87, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100c7f8d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c7f90, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100c7f93, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100c7f96, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x100c7f99, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c7f9c, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c7f9f, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x100c7fa2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7fa5, 0x3)   mov(edx, memd_a32(ds, eax + 0x1f));   /* mov edx, [eax+0x1f] */
    II(0x100c7fa8, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x100c7faa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c7fad, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c7faf, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c7fb2, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100c7fb4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c7fb6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c7fb8, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x100c7fba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c7fbd, 0x3)   mov(eax, memd_a32(ds, eax + 0x5));    /* mov eax, [eax+0x5] */
    II(0x100c7fc0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c7fc3, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c7fc5, 0x2)   jzd(0x100c7fd0, 0x9);                 /* jz 0x100c7fd0 */
    II(0x100c7fc7, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x100c7fcb, 0x5)   jmpd(0x100c808d, 0xbd);               /* jmp 0x100c808d */
l_0x100c7fd0:
    II(0x100c7fd0, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100c7fd4, 0x2)   jzd(0x100c8003, 0x2d);                /* jz 0x100c8003 */
    II(0x100c7fd6, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x100c7fdb, 0x5)   calld(0x10075fdc, -0x52004);          /* call 0x10075fdc */
    II(0x100c7fe0, 0x5)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100c7fe5, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100c7fe8, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100c7fec, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c7fef, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x100c7ff1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c7ff4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c7ff7, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c7ffa, 0x5)   calld(0x100c7eaa, -0x155);            /* call 0x100c7eaa */
    II(0x100c7fff, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c8001, 0x2)   jnzd(0x100c8005, 0x2);                /* jnz 0x100c8005 */
l_0x100c8003:
    II(0x100c8003, 0x2)   jmpd(0x100c800e, 0x9);                /* jmp 0x100c800e */
l_0x100c8005:
    II(0x100c8005, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x100c8009, 0x5)   jmpd(0x100c808d, 0x7f);               /* jmp 0x100c808d */
l_0x100c800e:
    II(0x100c800e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c8011, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100c8014, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100c8017, 0x2)   jmpd(0x100c801f, 0x6);                /* jmp 0x100c801f */
l_0x100c8019:
    II(0x100c8019, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c801c, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100c801f:
    II(0x100c801f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c8022, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c8025, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c8029, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100c802c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c802e, 0x2)   jged(0x100c8089, 0x59);               /* jge 0x100c8089 */
    II(0x100c8030, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c8033, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x100c8037, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100c803a, 0x2)   jmpd(0x100c8042, 0x6);                /* jmp 0x100c8042 */
l_0x100c803c:
    II(0x100c803c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100c803f, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100c8042:
    II(0x100c8042, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c8045, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c8047, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c804a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100c804e, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100c8051, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c8053, 0x2)   jged(0x100c8087, 0x32);               /* jge 0x100c8087 */
    II(0x100c8055, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c8059, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c805c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c805e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c8061, 0x3)   mov(eax, memd_a32(ds, eax + 0x1f));   /* mov eax, [eax+0x1f] */
    II(0x100c8064, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c8066, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100c806a, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c806c, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c806e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c8070, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x100c8072, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c8075, 0x3)   mov(eax, memd_a32(ds, eax + 0x5));    /* mov eax, [eax+0x5] */
    II(0x100c8078, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c807b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c807d, 0x2)   jzd(0x100c8085, 0x6);                 /* jz 0x100c8085 */
    II(0x100c807f, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
    II(0x100c8083, 0x2)   jmpd(0x100c808d, 0x8);                /* jmp 0x100c808d */
l_0x100c8085:
    II(0x100c8085, 0x2)   jmpd(0x100c803c, -0x4b);              /* jmp 0x100c803c */
l_0x100c8087:
    II(0x100c8087, 0x2)   jmpd(0x100c8019, -0x70);              /* jmp 0x100c8019 */
l_0x100c8089:
    II(0x100c8089, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
l_0x100c808d:
    II(0x100c808d, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100c8090, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c8092, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c8093, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c8094, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c8095, 0x1)   retd();                               /* ret */
FUNC_END

