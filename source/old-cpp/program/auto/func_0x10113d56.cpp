FUNC_BEGIN(0x10113d56, 0xb1848d79e479239e, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xf2, 0x1f, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xe8, 0x1c, 0x6f, 0x1, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x11, 0x25, 0xff, 0, 0, 0, 0x3d, 0xff, 0, 0, 0, 0x74, 0x20, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x11, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0x8c, 0xf3, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x11, 0xff, 0x8b, 0x45, 0xf8, 0xfe, 0x48, 0xf, 0xc6, 0x45, 0xf4, 0x4, 0xf, 0xbf, 0x55, 0xfc, 0x31, 0xc0, 0x8a, 0x45, 0xf4, 0x39, 0xc2, 0x7c, 0x9, 0x31, 0xc0, 0x8a, 0x45, 0xf4, 0x48, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x8, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x63, 0xc6, 0x45, 0xe8, 0x1, 0x80, 0x7d, 0xe8, 0, 0x74, 0x4f, 0xe8, 0xb2, 0x6e, 0x1, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x74, 0x3d, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xec, 0x31, 0xc0, 0x8a, 0x45, 0xf4, 0x39, 0xc2, 0x74, 0x1f, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x66, 0x8b, 0x90, 0xdc, 0x4, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x50, 0xc, 0x75, 0x4, 0xc6, 0x45, 0xe8, 0, 0xeb, 0xce, 0xeb, 0xab, 0x80, 0x7d, 0xe8, 0, 0xf, 0x85, 0x53, 0x1, 0, 0, 0xc6, 0x45, 0xf0, 0x4, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x1f, 0x5, 0, 0, 0, 0x74, 0x5f, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xec, 0x31, 0xc0, 0x8a, 0x45, 0xf4, 0x39, 0xc2, 0x74, 0x43, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x1e, 0x8b, 0x55, 0xf8, 0x81, 0xc2, 0x20, 0x5, 0, 0, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0x5, 0x1a, 0x2, 0, 0, 0xe8, 0xaf, 0x22, 0x5, 0, 0x85, 0xc0, 0x75, 0x1e, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x8, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xf0, 0xeb, 0x2, 0xeb, 0xaa, 0x31, 0xc0, 0x8a, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0x75, 0x47, 0xf, 0xbf, 0x45, 0xfc, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x31, 0x8b, 0x45, 0xf8, 0x8a, 0x80, 0x1f, 0x5, 0, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x19, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x1e, 0x3, 0x45, 0xf8, 0x8a, 0x80, 0x20, 0x5, 0, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x6, 0x8a, 0x45, 0xfc, 0x88, 0x45, 0xf0, 0x31, 0xc0, 0x8a, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0xf, 0x85, 0x65, 0, 0, 0, 0x66, 0xc7, 0x45, 0xec, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xec, 0x66, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xec, 0x31, 0xc0, 0x8a, 0x45, 0xf4, 0x39, 0xc2, 0x74, 0x49, 0xf, 0xbf, 0x45, 0xec, 0x1, 0xc0, 0x3, 0x45, 0xf8, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x31, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x1f, 0x5, 0, 0, 0, 0x74, 0x19, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x1e, 0x3, 0x45, 0xf8, 0x8a, 0x80, 0x20, 0x5, 0, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x8, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xf0, 0xeb, 0x2, 0xeb, 0xa3, 0x31, 0xc0, 0x8a, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0x74, 0x16, 0x31, 0xd2, 0x8a, 0x55, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc2, 0xd, 0x89, 0x50, 0x4, 0x8b, 0x45, 0xf8, 0xe8, 0x63, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10113d56, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10113d5b, 0x5)   calld(sys_check_available_stack_size, 0x51ff2); /* call 0x10165d52 */
    II(0x10113d60, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10113d61, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10113d62, 0x1)   pushd(esi);                           /* push esi */
    II(0x10113d63, 0x1)   pushd(edi);                           /* push edi */
    II(0x10113d64, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10113d65, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10113d67, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x10113d6d, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10113d70, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10113d73, 0x5)   calld(0x1012ac94, 0x16f1c);           /* call 0x1012ac94 */
    II(0x10113d78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113d7b, 0x3)   mov(al, memb_a32(ds, eax + 0x11));    /* mov al, [eax+0x11] */
    II(0x10113d7e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10113d83, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x10113d88, 0x2)   jzd(0x10113daa, 0x20);                /* jz 0x10113daa */
    II(0x10113d8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113d8d, 0x3)   mov(al, memb_a32(ds, eax + 0x11));    /* mov al, [eax+0x11] */
    II(0x10113d90, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10113d92, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10113d95, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113d98, 0x5)   calld(0x10113129, -0xc74);            /* call 0x10113129 */
    II(0x10113d9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113da0, 0x4)   mov(memb_a32(ds, eax + 0x11), 0xff);  /* mov byte [eax+0x11], 0xff */
    II(0x10113da4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113da7, 0x3)   dec(memb_a32(ds, eax + 0xf));         /* dec byte [eax+0xf] */
l_0x10113daa:
    II(0x10113daa, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x4);    /* mov byte [ebp-0xc], 0x4 */
    II(0x10113dae, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10113db2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113db4, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10113db7, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10113db9, 0x2)   jld(0x10113dc4, 0x9);                 /* jl 0x10113dc4 */
    II(0x10113dbb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113dbd, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10113dc0, 0x1)   dec(eax);                             /* dec eax */
    II(0x10113dc1, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x10113dc4:
    II(0x10113dc4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113dc7, 0x3)   mov(al, memb_a32(ds, eax + 0x8));     /* mov al, [eax+0x8] */
    II(0x10113dca, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10113dcf, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113dd1, 0x2)   jnzd(0x10113e36, 0x63);               /* jnz 0x10113e36 */
    II(0x10113dd3, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
l_0x10113dd7:
    II(0x10113dd7, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x10113ddb, 0x2)   jzd(0x10113e2c, 0x4f);                /* jz 0x10113e2c */
    II(0x10113ddd, 0x5)   calld(0x1012ac94, 0x16eb2);           /* call 0x1012ac94 */
    II(0x10113de2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113de5, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x10113de8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10113deb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113ded, 0x2)   jzd(0x10113e2c, 0x3d);                /* jz 0x10113e2c */
    II(0x10113def, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10113df6, 0x2)   jmpd(0x10113dfe, 0x6);                /* jmp 0x10113dfe */
l_0x10113df8:
    II(0x10113df8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10113dfb, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x10113dfe:
    II(0x10113dfe, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10113e02, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113e04, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10113e07, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10113e09, 0x2)   jzd(0x10113e2a, 0x1f);                /* jz 0x10113e2a */
    II(0x10113e0b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10113e0f, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10113e11, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10113e14, 0x7)   mov(dx, memw_a32(ds, eax + 0x4dc));   /* mov dx, [eax+0x4dc] */
    II(0x10113e1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113e1e, 0x4)   cmp(dx, memw_a32(ds, eax + 0xc));     /* cmp dx, [eax+0xc] */
    II(0x10113e22, 0x2)   jnzd(0x10113e28, 0x4);                /* jnz 0x10113e28 */
    II(0x10113e24, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x10113e28:
    II(0x10113e28, 0x2)   jmpd(0x10113df8, -0x32);              /* jmp 0x10113df8 */
l_0x10113e2a:
    II(0x10113e2a, 0x2)   jmpd(0x10113dd7, -0x55);              /* jmp 0x10113dd7 */
l_0x10113e2c:
    II(0x10113e2c, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0);     /* cmp byte [ebp-0x18], 0x0 */
    II(0x10113e30, 0x6)   jnzd(0x10113f89, 0x153);              /* jnz dword 0x10113f89 */
l_0x10113e36:
    II(0x10113e36, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x4);   /* mov byte [ebp-0x10], 0x4 */
    II(0x10113e3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113e3d, 0x7)   cmp(memb_a32(ds, eax + 0x51f), 0);    /* cmp byte [eax+0x51f], 0x0 */
    II(0x10113e44, 0x2)   jzd(0x10113ea5, 0x5f);                /* jz 0x10113ea5 */
    II(0x10113e46, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10113e4d, 0x2)   jmpd(0x10113e55, 0x6);                /* jmp 0x10113e55 */
l_0x10113e4f:
    II(0x10113e4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10113e52, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x10113e55:
    II(0x10113e55, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10113e59, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113e5b, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10113e5e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10113e60, 0x2)   jzd(0x10113ea5, 0x43);                /* jz 0x10113ea5 */
    II(0x10113e62, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10113e66, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x10113e69, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10113e6c, 0x6)   add(edx, 0x520);                      /* add edx, 0x520 */
    II(0x10113e72, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10113e74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113e77, 0x5)   add(eax, 0x21a);                      /* add eax, 0x21a */
    II(0x10113e7c, 0x5)   calld(sys_strcasecmp, 0x522af);       /* call 0x10166130 */
    II(0x10113e81, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113e83, 0x2)   jnzd(0x10113ea3, 0x1e);               /* jnz 0x10113ea3 */
    II(0x10113e85, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10113e89, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10113e8b, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10113e8e, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x10113e94, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10113e97, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113e99, 0x2)   jnzd(0x10113ea3, 0x8);                /* jnz 0x10113ea3 */
    II(0x10113e9b, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10113e9e, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x10113ea1, 0x2)   jmpd(0x10113ea5, 0x2);                /* jmp 0x10113ea5 */
l_0x10113ea3:
    II(0x10113ea3, 0x2)   jmpd(0x10113e4f, -0x56);              /* jmp 0x10113e4f */
l_0x10113ea5:
    II(0x10113ea5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113ea7, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10113eaa, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10113ead, 0x2)   jnzd(0x10113ef6, 0x47);               /* jnz 0x10113ef6 */
    II(0x10113eaf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10113eb3, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10113eb5, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10113eb8, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x10113ebe, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10113ec1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113ec3, 0x2)   jnzd(0x10113ef6, 0x31);               /* jnz 0x10113ef6 */
    II(0x10113ec5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113ec8, 0x6)   mov(al, memb_a32(ds, eax + 0x51f));   /* mov al, [eax+0x51f] */
    II(0x10113ece, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10113ed3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113ed5, 0x2)   jzd(0x10113ef0, 0x19);                /* jz 0x10113ef0 */
    II(0x10113ed7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10113edb, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x10113ede, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10113ee1, 0x6)   mov(al, memb_a32(ds, eax + 0x520));   /* mov al, [eax+0x520] */
    II(0x10113ee7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10113eec, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113eee, 0x2)   jzd(0x10113ef6, 0x6);                 /* jz 0x10113ef6 */
l_0x10113ef0:
    II(0x10113ef0, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10113ef3, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
l_0x10113ef6:
    II(0x10113ef6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113ef8, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10113efb, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10113efe, 0x6)   jnzd(0x10113f69, 0x65);               /* jnz dword 0x10113f69 */
    II(0x10113f04, 0x6)   mov(memw_a32(ss, ebp - 0x14), 0);     /* mov word [ebp-0x14], 0x0 */
    II(0x10113f0a, 0x2)   jmpd(0x10113f13, 0x7);                /* jmp 0x10113f13 */
l_0x10113f0c:
    II(0x10113f0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10113f0f, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
l_0x10113f13:
    II(0x10113f13, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10113f17, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113f19, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10113f1c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10113f1e, 0x2)   jzd(0x10113f69, 0x49);                /* jz 0x10113f69 */
    II(0x10113f20, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10113f24, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10113f26, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10113f29, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x10113f2f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10113f32, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113f34, 0x2)   jnzd(0x10113f67, 0x31);               /* jnz 0x10113f67 */
    II(0x10113f36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113f39, 0x7)   cmp(memb_a32(ds, eax + 0x51f), 0);    /* cmp byte [eax+0x51f], 0x0 */
    II(0x10113f40, 0x2)   jzd(0x10113f5b, 0x19);                /* jz 0x10113f5b */
    II(0x10113f42, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10113f46, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x10113f49, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10113f4c, 0x6)   mov(al, memb_a32(ds, eax + 0x520));   /* mov al, [eax+0x520] */
    II(0x10113f52, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10113f57, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10113f59, 0x2)   jzd(0x10113f5d, 0x2);                 /* jz 0x10113f5d */
l_0x10113f5b:
    II(0x10113f5b, 0x2)   jmpd(0x10113f5f, 0x2);                /* jmp 0x10113f5f */
l_0x10113f5d:
    II(0x10113f5d, 0x2)   jmpd(0x10113f67, 0x8);                /* jmp 0x10113f67 */
l_0x10113f5f:
    II(0x10113f5f, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10113f62, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x10113f65, 0x2)   jmpd(0x10113f69, 0x2);                /* jmp 0x10113f69 */
l_0x10113f67:
    II(0x10113f67, 0x2)   jmpd(0x10113f0c, -0x5d);              /* jmp 0x10113f0c */
l_0x10113f69:
    II(0x10113f69, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10113f6b, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10113f6e, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10113f71, 0x2)   jzd(0x10113f89, 0x16);                /* jz 0x10113f89 */
    II(0x10113f73, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10113f75, 0x3)   mov(dl, memb_a32(ss, ebp - 0x10));    /* mov dl, [ebp-0x10] */
    II(0x10113f78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113f7b, 0x3)   add(edx, 0xd);                        /* add edx, 0xd */
    II(0x10113f7e, 0x3)   mov(memd_a32(ds, eax + 0x4), edx);    /* mov [eax+0x4], edx */
    II(0x10113f81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10113f84, 0x5)   calld(0x10113fec, 0x63);              /* call 0x10113fec */
l_0x10113f89:
    II(0x10113f89, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10113f8b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10113f8c, 0x1)   popd(edi);                            /* pop edi */
    II(0x10113f8d, 0x1)   popd(esi);                            /* pop esi */
    II(0x10113f8e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10113f8f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10113f90, 0x1)   retd();                               /* ret */
FUNC_END

