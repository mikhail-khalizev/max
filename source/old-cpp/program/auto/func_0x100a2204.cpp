FUNC_BEGIN(0x100a2204, 0x51368cf70d6fd60b, 0x20, ({0x68, 0xb0, 0x3, 0, 0, 0xe8, 0x44, 0x3b, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x98, 0x3, 0, 0, 0x89, 0x45, 0xfc, 0x89, 0x55, 0xf8, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xcf, 0x42, 0xfd, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf0, 0xfe, 0x80, 0x4d, 0xf0, 0x1, 0x8b, 0x5d, 0xf8, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0xe8, 0xba, 0xde, 0xff, 0xff, 0x89, 0x85, 0x68, 0xfc, 0xff, 0xff, 0x80, 0x65, 0xf0, 0xfe, 0xc6, 0x45, 0xf4, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xd6, 0x40, 0xfd, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xce, 0x41, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xf9, 0x8a, 0x9, 0, 0x84, 0xc0, 0x74, 0xb, 0xf, 0xbf, 0x85, 0x98, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0xc, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xc, 0x41, 0xfd, 0xff, 0xe8, 0x6b, 0x3f, 0xfd, 0xff, 0x3b, 0x45, 0xf8, 0x75, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0xfa, 0x40, 0xfd, 0xff, 0x80, 0x78, 0x3d, 0x1f, 0x74, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xe8, 0xe8, 0xea, 0x40, 0xfd, 0xff, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x2c, 0x8d, 0x45, 0xe8, 0xe8, 0xd6, 0x40, 0xfd, 0xff, 0xe8, 0x20, 0xf2, 0xa, 0, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe8, 0xe8, 0xc6, 0x40, 0xfd, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x1b, 0xfb, 0xfc, 0xff, 0x66, 0x3b, 0x85, 0x98, 0xfc, 0xff, 0xff, 0x7e, 0x2, 0xeb, 0x1c, 0x8d, 0x45, 0xe8, 0xe8, 0xa8, 0x40, 0xfd, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xf2, 0xfc, 0xfc, 0xff, 0x66, 0x3b, 0x85, 0x9e, 0xfc, 0xff, 0xff, 0x7e, 0x5, 0xe9, 0x7a, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x87, 0x40, 0xfd, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xa, 0xfc, 0xfc, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0xe8, 0x92, 0xee, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x55, 0x8d, 0x45, 0xe8, 0xe8, 0x62, 0x40, 0xfd, 0xff, 0xe8, 0xac, 0xf1, 0xa, 0, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe8, 0xe8, 0x52, 0x40, 0xfd, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xa7, 0xfa, 0xfc, 0xff, 0x66, 0x29, 0x85, 0x98, 0xfc, 0xff, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x38, 0x40, 0xfd, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x82, 0xfc, 0xfc, 0xff, 0x66, 0x29, 0x85, 0x9e, 0xfc, 0xff, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x1e, 0x40, 0xfd, 0xff, 0xe8, 0, 0, 0xb, 0, 0xc6, 0x45, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x65, 0x48, 0xfd, 0xff, 0xe9, 0xd6, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0xe8, 0x2b, 0xe5, 0xff, 0xff, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xec, 0x31, 0xd2, 0x8d, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0xe8, 0xe2, 0x82, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xac, 0x3b, 0xfd, 0xff, 0xeb, 0x17, 0x31, 0xd2, 0x8d, 0x85, 0x6c, 0xfc, 0xff, 0xff, 0xe8, 0xc9, 0x82, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x93, 0x3b, 0xfd, 0xff, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a2204, 0x5)   pushd(0x3b0);                         /* push dword 0x3b0 */
    II(0x100a2209, 0x5)   calld(sys_check_available_stack_size, 0xc3b44); /* call 0x10165d52 */
    II(0x100a220e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a220f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a2210, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a2211, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a2212, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a2213, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a2215, 0x6)   sub(esp, 0x398);                      /* sub esp, 0x398 */
    II(0x100a221b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a221e, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100a2221, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x100a2225, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a2228, 0x5)   calld(0x100764fc, -0x2bd31);          /* call 0x100764fc */
    II(0x100a222d, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100a2230, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x100a2234, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x100a2238, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100a223b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100a223f, 0x6)   lea(eax, ebp - 0x394);                /* lea eax, [ebp+0xfffffc6c] */
    II(0x100a2245, 0x5)   calld(0x100a0104, -0x2146);           /* call 0x100a0104 */
    II(0x100a224a, 0x6)   mov(memd_a32(ss, ebp - 0x398), eax);  /* mov [ebp+0xfffffc68], eax */
    II(0x100a2250, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x100a2254, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100a2258, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100a225d, 0x5)   calld(0x10076338, -0x2bf2a);          /* call 0x10076338 */
    II(0x100a2262, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100a2265, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a2267, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a2269, 0x5)   calld(0x1007643c, -0x2be32);          /* call 0x1007643c */
l_0x100a226e:
    II(0x100a226e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a2270, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a2273, 0x5)   calld(0x1013ad71, 0x98af9);           /* call 0x1013ad71 */
    II(0x100a2278, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a227a, 0x2)   jzd(0x100a2287, 0xb);                 /* jz 0x100a2287 */
    II(0x100a227c, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x368)); /* movsx eax, word [ebp+0xfffffc98] */
    II(0x100a2283, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a2285, 0x2)   jgd(0x100a228c, 0x5);                 /* jg 0x100a228c */
l_0x100a2287:
    II(0x100a2287, 0x5)   jmpd(0x100a2398, 0x10c);              /* jmp 0x100a2398 */
l_0x100a228c:
    II(0x100a228c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a228f, 0x5)   calld(0x100763a0, -0x2bef4);          /* call 0x100763a0 */
    II(0x100a2294, 0x5)   calld(0x10076204, -0x2c095);          /* call 0x10076204 */
    II(0x100a2299, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x8));    /* cmp eax, [ebp-0x8] */
    II(0x100a229c, 0x2)   jnzd(0x100a22ac, 0xe);                /* jnz 0x100a22ac */
    II(0x100a229e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a22a1, 0x5)   calld(0x100763a0, -0x2bf06);          /* call 0x100763a0 */
    II(0x100a22a6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1f);  /* cmp byte [eax+0x3d], 0x1f */
    II(0x100a22aa, 0x2)   jzd(0x100a22ae, 0x2);                 /* jz 0x100a22ae */
l_0x100a22ac:
    II(0x100a22ac, 0x2)   jmpd(0x100a22c0, 0x12);               /* jmp 0x100a22c0 */
l_0x100a22ae:
    II(0x100a22ae, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a22b1, 0x5)   calld(0x100763a0, -0x2bf16);          /* call 0x100763a0 */
    II(0x100a22b6, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100a22b9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a22bc, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a22be, 0x2)   jzd(0x100a22c2, 0x2);                 /* jz 0x100a22c2 */
l_0x100a22c0:
    II(0x100a22c0, 0x2)   jmpd(0x100a22ee, 0x2c);               /* jmp 0x100a22ee */
l_0x100a22c2:
    II(0x100a22c2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a22c5, 0x5)   calld(0x100763a0, -0x2bf2a);          /* call 0x100763a0 */
    II(0x100a22ca, 0x5)   calld(0x101514ef, 0xaf220);           /* call 0x101514ef */
    II(0x100a22cf, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a22d2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a22d5, 0x5)   calld(0x100763a0, -0x2bf3a);          /* call 0x100763a0 */
    II(0x100a22da, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a22dd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a22e0, 0x5)   calld(0x10071e00, -0x304e5);          /* call 0x10071e00 */
    II(0x100a22e5, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x368));   /* cmp ax, [ebp+0xfffffc98] */
    II(0x100a22ec, 0x2)   jled(0x100a22f0, 0x2);                /* jle 0x100a22f0 */
l_0x100a22ee:
    II(0x100a22ee, 0x2)   jmpd(0x100a230c, 0x1c);               /* jmp 0x100a230c */
l_0x100a22f0:
    II(0x100a22f0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a22f3, 0x5)   calld(0x100763a0, -0x2bf58);          /* call 0x100763a0 */
    II(0x100a22f8, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a22fb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a22fe, 0x5)   calld(0x10071ff5, -0x3030e);          /* call 0x10071ff5 */
    II(0x100a2303, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x362));   /* cmp ax, [ebp+0xfffffc9e] */
    II(0x100a230a, 0x2)   jled(0x100a2311, 0x5);                /* jle 0x100a2311 */
l_0x100a230c:
    II(0x100a230c, 0x5)   jmpd(0x100a238b, 0x7a);               /* jmp 0x100a238b */
l_0x100a2311:
    II(0x100a2311, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a2314, 0x5)   calld(0x100763a0, -0x2bf79);          /* call 0x100763a0 */
    II(0x100a2319, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a231c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a231f, 0x5)   calld(0x10071f2e, -0x303f6);          /* call 0x10071f2e */
    II(0x100a2324, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a2327, 0x6)   lea(eax, ebp - 0x394);                /* lea eax, [ebp+0xfffffc6c] */
    II(0x100a232d, 0x5)   calld(0x100a11c4, -0x116e);           /* call 0x100a11c4 */
    II(0x100a2332, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a2334, 0x2)   jzd(0x100a238b, 0x55);                /* jz 0x100a238b */
    II(0x100a2336, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a2339, 0x5)   calld(0x100763a0, -0x2bf9e);          /* call 0x100763a0 */
    II(0x100a233e, 0x5)   calld(0x101514ef, 0xaf1ac);           /* call 0x101514ef */
    II(0x100a2343, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a2346, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a2349, 0x5)   calld(0x100763a0, -0x2bfae);          /* call 0x100763a0 */
    II(0x100a234e, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a2351, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a2354, 0x5)   calld(0x10071e00, -0x30559);          /* call 0x10071e00 */
    II(0x100a2359, 0x7)   sub(memw_a32(ss, ebp - 0x368), ax);   /* sub [ebp+0xfffffc98], ax */
    II(0x100a2360, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a2363, 0x5)   calld(0x100763a0, -0x2bfc8);          /* call 0x100763a0 */
    II(0x100a2368, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100a236b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a236e, 0x5)   calld(0x10071ff5, -0x3037e);          /* call 0x10071ff5 */
    II(0x100a2373, 0x7)   sub(memw_a32(ss, ebp - 0x362), ax);   /* sub [ebp+0xfffffc9e], ax */
    II(0x100a237a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a237d, 0x5)   calld(0x100763a0, -0x2bfe2);          /* call 0x100763a0 */
    II(0x100a2382, 0x5)   calld(0x10152387, 0xb0000);           /* call 0x10152387 */
    II(0x100a2387, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x100a238b:
    II(0x100a238b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a238e, 0x5)   calld(0x10076bf8, -0x2b79b);          /* call 0x10076bf8 */
    II(0x100a2393, 0x5)   jmpd(0x100a226e, -0x12a);             /* jmp 0x100a226e */
l_0x100a2398:
    II(0x100a2398, 0x6)   lea(eax, ebp - 0x394);                /* lea eax, [ebp+0xfffffc6c] */
    II(0x100a239e, 0x5)   calld(0x100a08ce, -0x1ad5);           /* call 0x100a08ce */
    II(0x100a23a3, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100a23a6, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100a23a9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a23ab, 0x6)   lea(eax, ebp - 0x394);                /* lea eax, [ebp+0xfffffc6c] */
    II(0x100a23b1, 0x5)   calld(0x100aa698, 0x82e2);            /* call 0x100aa698 */
    II(0x100a23b6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a23b8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a23bb, 0x5)   calld(0x10075f6c, -0x2c454);          /* call 0x10075f6c */
    II(0x100a23c0, 0x2)   jmpd(0x100a23d9, 0x17);               /* jmp 0x100a23d9 */
//  II(0x100a23c2, 0x17)  /* Недостижимый код. */
l_0x100a23d9:
    II(0x100a23d9, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100a23dc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a23de, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a23df, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a23e0, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a23e1, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a23e2, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a23e3, 0x1)   retd();                               /* ret */
FUNC_END

