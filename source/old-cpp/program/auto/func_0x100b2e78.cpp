FUNC_BEGIN(0x100b2e78, 0x20a669b9a928393, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xd0, 0x2e, 0xb, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xf0, 0x80, 0x7d, 0xfc, 0, 0x75, 0x2b, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7e, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x31, 0xd2, 0x8a, 0x55, 0xec, 0x8b, 0x45, 0xf8, 0xe8, 0xb4, 0xfa, 0xfe, 0xff, 0xe9, 0x84, 0, 0, 0, 0x80, 0x7d, 0xfc, 0x2, 0xf, 0x85, 0x7a, 0, 0, 0, 0xb8, 0x26, 0, 0, 0, 0xe8, 0x1e, 0x2f, 0xb, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x32, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x15, 0xe8, 0xd4, 0x36, 0xfc, 0xff, 0x89, 0xc1, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x23, 0xe8, 0x73, 0x76, 0xfd, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x75, 0xe8, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x38, 0xd1, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xdc, 0x8b, 0x55, 0xdc, 0x8d, 0x45, 0xd8, 0xe8, 0x2c, 0x81, 0xfd, 0xff, 0x8d, 0x45, 0xd8, 0xe8, 0x48, 0x80, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x8, 0x1e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x2a, 0x5c, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100b2e78, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100b2e7d, 0x5)   calld(sys_check_available_stack_size, 0xb2ed0); /* call 0x10165d52 */
    II(0x100b2e82, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b2e83, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b2e84, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b2e85, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b2e86, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b2e88, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x100b2e8e, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100b2e91, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100b2e94, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100b2e97, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b2e9a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b2e9d, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100b2ea1, 0x2)   jnzd(0x100b2ece, 0x2b);               /* jnz 0x100b2ece */
    II(0x100b2ea3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2ea6, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100b2ea9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b2eae, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b2eb0, 0x2)   jled(0x100b2eb8, 0x6);                /* jle 0x100b2eb8 */
    II(0x100b2eb2, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x100b2eb6, 0x2)   jmpd(0x100b2ebc, 0x4);                /* jmp 0x100b2ebc */
l_0x100b2eb8:
    II(0x100b2eb8, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x100b2ebc:
    II(0x100b2ebc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2ebe, 0x3)   mov(dl, memb_a32(ss, ebp - 0x14));    /* mov dl, [ebp-0x14] */
    II(0x100b2ec1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2ec4, 0x5)   calld(0x100a297d, -0x1054c);          /* call 0x100a297d */
    II(0x100b2ec9, 0x5)   jmpd(0x100b2f52, 0x84);               /* jmp 0x100b2f52 */
l_0x100b2ece:
    II(0x100b2ece, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x2);    /* cmp byte [ebp-0x4], 0x2 */
    II(0x100b2ed2, 0x6)   jnzd(0x100b2f52, 0x7a);               /* jnz dword 0x100b2f52 */
    II(0x100b2ed8, 0x5)   mov(eax, 0x26);                       /* mov eax, 0x26 */
    II(0x100b2edd, 0x5)   calld(sys_new, 0xb2f1e);              /* call 0x10165e00 */
    II(0x100b2ee2, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100b2ee5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b2ee8, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100b2eeb, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x100b2eef, 0x2)   jzd(0x100b2f23, 0x32);                /* jz 0x100b2f23 */
    II(0x100b2ef1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b2ef4, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2ef7, 0x5)   calld(0x100765d0, -0x3c92c);          /* call 0x100765d0 */
    II(0x100b2efc, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100b2efe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b2f01, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2f04, 0x5)   calld(0x1008a57c, -0x2898d);          /* call 0x1008a57c */
    II(0x100b2f09, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100b2f0c, 0x3)   mov(esi, memd_a32(ss, ebp - 0x18));   /* mov esi, [ebp-0x18] */
    II(0x100b2f0f, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b2f11, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100b2f13, 0x5)   calld(0x100b0050, -0x2ec8);           /* call 0x100b0050 */
    II(0x100b2f18, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100b2f1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100b2f1e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100b2f21, 0x2)   jmpd(0x100b2f29, 0x6);                /* jmp 0x100b2f29 */
l_0x100b2f23:
    II(0x100b2f23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b2f26, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100b2f29:
    II(0x100b2f29, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x100b2f2c, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b2f2f, 0x5)   calld(0x1008b060, -0x27ed4);          /* call 0x1008b060 */
    II(0x100b2f34, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b2f37, 0x5)   calld(0x1008af84, -0x27fb8);          /* call 0x1008af84 */
    II(0x100b2f3c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2f3e, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b2f43, 0x5)   calld(0x100a4d50, -0xe1f8);           /* call 0x100a4d50 */
    II(0x100b2f48, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2f4a, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b2f4d, 0x5)   calld(0x10088b7c, -0x2a3d6);          /* call 0x10088b7c */
l_0x100b2f52:
    II(0x100b2f52, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b2f54, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b2f55, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b2f56, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b2f57, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b2f58, 0x1)   retd();                               /* ret */
FUNC_END

