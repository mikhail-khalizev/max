FUNC_BEGIN(my_ctor_c1, 0x39e10b403f654ce0, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x6d, 0xb1, 0xe, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x4d, 0xfc, 0x8b, 0x5d, 0xf4, 0x8b, 0x45, 0xf8, 0xe8, 0x9d, 0xf7, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0xe8, 0xbb, 0x7a, 0x2, 0, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x15, 0xe8, 0x6, 0xf7, 0, 0, 0x83, 0xe8, 0x15, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x19, 0xe8, 0x3b, 0xe0, 0, 0, 0x83, 0xe8, 0x19, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x29, 0xe8, 0x98, 0xba, 0xff, 0xff, 0x83, 0xe8, 0x29, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0xe8, 0x93, 0xf8, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x2d, 0xe8, 0x4b, 0xd8, 0x3, 0, 0x83, 0xe8, 0x2d, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x2, 0, 0x3f, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xdb, 0xf6, 0, 0, 0x89, 0x45, 0xd8, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x15, 0xe8, 0xe, 0xf6, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x13, 0, 0, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0x31, 0x1, 0x8b, 0x55, 0xd8, 0x31, 0xc0, 0x8a, 0x42, 0x4d, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x27, 0x8b, 0x45, 0xd8, 0xe8, 0x6f, 0xb5, 0xff, 0xff, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x74, 0x10, 0x8b, 0x45, 0xd8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0xb, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x23, 0x1, 0, 0xeb, 0x15, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x50, 0x27, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x23, 0x8b, 0x45, 0xf0, 0x66, 0xd1, 0x60, 0x27, 0x8b, 0x45, 0xf0, 0x66, 0xc7, 0x40, 0x25, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x1007abdb, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1007abe0, 0x5)   calld(sys_check_available_stack_size, 0xeb16d); /* call 0x10165d52 */
    II(0x1007abe5, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007abe6, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007abe7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007abe8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007abea, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x1007abf0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007abf3, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1007abf6, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1007abf9, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1007abfc, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x1007ac00, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x1007ac03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007ac06, 0x5)   calld(0x1008a3a8, 0xf79d);            /* call 0x1008a3a8 */
    II(0x1007ac0b, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007ac0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ac11, 0x5)   calld(0x100a26d1, 0x27abb);           /* call 0x100a26d1 */
    II(0x1007ac16, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007ac19, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007ac1c, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1007ac1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ac22, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1007ac25, 0x5)   calld(0x1008a330, 0xf706);            /* call 0x1008a330 */
    II(0x1007ac2a, 0x3)   sub(eax, 0x15);                       /* sub eax, 0x15 */
    II(0x1007ac2d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007ac30, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007ac33, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1007ac36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ac39, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x1007ac3c, 0x5)   calld(my_ctor_0x101b56fc, 0xe03b);    /* call 0x10088c7c */
    II(0x1007ac41, 0x3)   sub(eax, 0x19);                       /* sub eax, 0x19 */
    II(0x1007ac44, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007ac47, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007ac4a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1007ac4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ac50, 0x3)   add(eax, 0x29);                       /* add eax, 0x29 */
    II(0x1007ac53, 0x5)   calld(my_ctor_0x101b38f8, -0x4568);   /* call 0x100766f0 */
    II(0x1007ac58, 0x3)   sub(eax, 0x29);                       /* sub eax, 0x29 */
    II(0x1007ac5b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007ac5e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007ac61, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1007ac64, 0x5)   calld(0x1008a4fc, 0xf893);            /* call 0x1008a4fc */
    II(0x1007ac69, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007ac6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ac6f, 0x3)   add(eax, 0x2d);                       /* add eax, 0x2d */
    II(0x1007ac72, 0x5)   calld(0x100b84c2, 0x3d84b);           /* call 0x100b84c2 */
    II(0x1007ac77, 0x3)   sub(eax, 0x2d);                       /* sub eax, 0x2d */
    II(0x1007ac7a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007ac7d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1007ac80, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1007ac83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ac86, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b3f00); /* mov dword [eax+0x2], 0x101b3f00 */
    II(0x1007ac8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007ac90, 0x5)   calld(0x1008a370, 0xf6db);            /* call 0x1008a370 */
    II(0x1007ac95, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1007ac98, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1007ac9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ac9e, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1007aca1, 0x5)   calld(0x1008a2b4, 0xf60e);            /* call 0x1008a2b4 */
    II(0x1007aca6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007aca9, 0x6)   mov(memw_a32(ds, eax + 0x13), 0);     /* mov word [eax+0x13], 0x0 */
    II(0x1007acaf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007acb2, 0x4)   mov(memb_a32(ds, eax + 0x31), 0x1);   /* mov byte [eax+0x31], 0x1 */
    II(0x1007acb6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x1007acb9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1007acbb, 0x3)   mov(al, memb_a32(ds, edx + 0x4d));    /* mov al, [edx+0x4d] */
    II(0x1007acbe, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1007acc1, 0x4)   mov(memw_a32(ds, edx + 0x27), ax);    /* mov [edx+0x27], ax */
    II(0x1007acc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1007acc8, 0x5)   calld(0x1007623c, -0x4a91);           /* call 0x1007623c */
    II(0x1007accd, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x1007acd0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007acd3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007acd5, 0x2)   jzd(0x1007ace7, 0x10);                /* jz 0x1007ace7 */
    II(0x1007acd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1007acda, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1007acdd, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007ace2, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1007ace5, 0x2)   jnzd(0x1007acf2, 0xb);                /* jnz 0x1007acf2 */
l_0x1007ace7:
    II(0x1007ace7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007acea, 0x6)   mov(memw_a32(ds, eax + 0x23), 0x1);   /* mov word [eax+0x23], 0x1 */
    II(0x1007acf0, 0x2)   jmpd(0x1007ad07, 0x15);               /* jmp 0x1007ad07 */
l_0x1007acf2:
    II(0x1007acf2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007acf5, 0x4)   mov(dx, memw_a32(ds, eax + 0x27));    /* mov dx, [eax+0x27] */
//    II(0x1007acf9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007acfc, 0x4)   mov(memw_a32(ds, eax + 0x23), dx);    /* mov [eax+0x23], dx */
    II(0x1007ad00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ad03, 0x4)   shl(memw_a32(ds, eax + 0x27), 0x1);   /* shl word [eax+0x27], 1 */
l_0x1007ad07:
    II(0x1007ad07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ad0a, 0x6)   mov(memw_a32(ds, eax + 0x25), 0);     /* mov word [eax+0x25], 0x0 */
    II(0x1007ad10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007ad13, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x1007ad16, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1007ad19, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007ad1b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007ad1c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007ad1d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007ad1e, 0x1)   retd();                               /* ret */
FUNC_END

