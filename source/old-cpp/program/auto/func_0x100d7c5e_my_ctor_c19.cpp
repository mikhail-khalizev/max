FUNC_BEGIN(my_ctor_c19, 0x2c33f5e57f6e2c34, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xea, 0xe0, 0x8, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x50, 0xc3, 0x5, 0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x9, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x45, 0x2, 0, 0, 0xbb, 0xf4, 0x17, 0x1a, 0x10, 0xba, 0xfe, 0x17, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xe2, 0xe0, 0x8, 0, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x4, 0xeb, 0xe, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x50, 0x4, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x4, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf0, 0x66, 0x89, 0x42, 0x6, 0xeb, 0xe, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x50, 0x6, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x6, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x10, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0x8, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x50, 0xa, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x8, 0x8b, 0x55, 0xf0, 0x89, 0x2, 0x8b, 0x45, 0xf0, 0xc6, 0x40, 0xc, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100d7c5e, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100d7c63, 0x5)   calld(sys_check_available_stack_size, 0x8e0ea); /* call 0x10165d52 */
    II(0x100d7c68, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d7c69, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d7c6a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d7c6b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d7c6d, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100d7c73, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d7c76, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100d7c79, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100d7c7c, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100d7c7f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100d7c83, 0x5)   calld(my_get_res_data_by_id, 0x5c350); /* call 0x10133fd8 */
    II(0x100d7c88, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100d7c8b, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100d7c8f, 0x2)   jzd(0x100d7c9a, 0x9);                 /* jz 0x100d7c9a */
    II(0x100d7c91, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100d7c98, 0x2)   jmpd(0x100d7cb3, 0x19);               /* jmp 0x100d7cb3 */
l_0x100d7c9a:
    II(0x100d7c9a, 0x5)   mov(ecx, 0x245);                      /* mov ecx, 0x245 */
    II(0x100d7c9f, 0x5)   mov(ebx, 0x101a17f4);                 /* mov ebx, 0x101a17f4 */ /* "commo.cpp" */
    II(0x100d7ca4, 0x5)   mov(edx, 0x101a17fe);                 /* mov edx, 0x101a17fe */ /* "sprite != 0" */
    II(0x100d7ca9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d7cab, 0x5)   calld(sys_assert, 0x8e0e2);           /* call 0x10165d92 */
    II(0x100d7cb0, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x100d7cb3:
    II(0x100d7cb3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d7cb7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d7cb9, 0x2)   jld(0x100d7cc7, 0xc);                 /* jl 0x100d7cc7 */
    II(0x100d7cbb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d7cbe, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d7cc1, 0x4)   mov(memw_a32(ds, edx + 0x4), ax);     /* mov [edx+0x4], ax */
    II(0x100d7cc5, 0x2)   jmpd(0x100d7cd5, 0xe);                /* jmp 0x100d7cd5 */
l_0x100d7cc7:
    II(0x100d7cc7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d7cca, 0x4)   mov(dx, memw_a32(ds, eax + 0x4));     /* mov dx, [eax+0x4] */
    II(0x100d7cce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d7cd1, 0x4)   mov(memw_a32(ds, eax + 0x4), dx);     /* mov [eax+0x4], dx */
l_0x100d7cd5:
    II(0x100d7cd5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100d7cd9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d7cdb, 0x2)   jld(0x100d7ce9, 0xc);                 /* jl 0x100d7ce9 */
    II(0x100d7cdd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d7ce0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d7ce3, 0x4)   mov(memw_a32(ds, edx + 0x6), ax);     /* mov [edx+0x6], ax */
    II(0x100d7ce7, 0x2)   jmpd(0x100d7cf7, 0xe);                /* jmp 0x100d7cf7 */
l_0x100d7ce9:
    II(0x100d7ce9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d7cec, 0x4)   mov(dx, memw_a32(ds, eax + 0x6));     /* mov dx, [eax+0x6] */
    II(0x100d7cf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d7cf3, 0x4)   mov(memw_a32(ds, eax + 0x6), dx);     /* mov [eax+0x6], dx */
l_0x100d7cf7:
    II(0x100d7cf7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d7cfa, 0x3)   mov(dx, memw_a32(ds, eax));           /* mov dx, [eax] */
    II(0x100d7cfd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d7d00, 0x4)   mov(memw_a32(ds, eax + 0x8), dx);     /* mov [eax+0x8], dx */
    II(0x100d7d04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d7d07, 0x4)   mov(dx, memw_a32(ds, eax + 0x2));     /* mov dx, [eax+0x2] */
    II(0x100d7d0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d7d0e, 0x4)   mov(memw_a32(ds, eax + 0xa), dx);     /* mov [eax+0xa], dx */
    II(0x100d7d12, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d7d15, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100d7d18, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d7d1b, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x100d7d1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d7d20, 0x4)   mov(memb_a32(ds, eax + 0xc), 0);      /* mov byte [eax+0xc], 0x0 */
    II(0x100d7d24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d7d27, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100d7d2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d7d2d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d7d2f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d7d30, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d7d31, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d7d32, 0x1)   retd();                               /* ret */
FUNC_END

