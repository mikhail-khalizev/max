FUNC_BEGIN(0x100d0b0a, 0x57148c59e16001ba, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x3e, 0x52, 0x9, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0x1c, 0x50, 0x8b, 0x45, 0x18, 0x50, 0xf, 0xbf, 0x45, 0x14, 0x50, 0x8b, 0x45, 0x10, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0x50, 0x8b, 0x4d, 0xfc, 0x8b, 0x5d, 0xf8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0xfa, 0xf2, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xf0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0x10, 0x8b, 0x55, 0xf0, 0x89, 0x42, 0x48, 0x8b, 0x45, 0xf0, 0xc7, 0x40, 0x40, 0xa4, 0x5c, 0x1b, 0x10, 0xc7, 0x45, 0xec, 0x14, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x28, 0xc1, 0xe0, 0x5, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xaf, 0xc2, 0x83, 0xc0, 0x8, 0xe8, 0x48, 0xa4, 0x9, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0x89, 0x50, 0x44, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x44, 0x8b, 0x45, 0xec, 0x66, 0x89, 0x2, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x44, 0x8b, 0x45, 0xe8, 0x66, 0x89, 0x42, 0x2, 0xf, 0xbf, 0x45, 0xec, 0x50, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x44, 0x83, 0xc0, 0x8, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0x83, 0xc0, 0x73, 0x50, 0xe8, 0xd3, 0x9f, 0x9, 0, 0x83, 0xc4, 0x18, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x10, 0}))
    II(0x100d0b0a, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x100d0b0f, 0x5)   calld(sys_check_available_stack_size, 0x9523e); /* call 0x10165d52 */
    II(0x100d0b14, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d0b15, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d0b16, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d0b17, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d0b19, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100d0b1f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d0b22, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100d0b25, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100d0b28, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x100d0b2b, 0x3)   mov(eax, memd_a32(ss, ebp + 0x1c));   /* mov eax, [ebp+0x1c] */
    II(0x100d0b2e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0b2f, 0x3)   mov(eax, memd_a32(ss, ebp + 0x18));   /* mov eax, [ebp+0x18] */
    II(0x100d0b32, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0b33, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100d0b37, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0b38, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d0b3b, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100d0b3e, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100d0b40, 0x1)   cwde();                               /* cwde */
    II(0x100d0b41, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0b42, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x100d0b45, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100d0b48, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100d0b4b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d0b4e, 0x5)   calld(0x100cfe4d, -0xd06);            /* call 0x100cfe4d */
    II(0x100d0b53, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d0b56, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100d0b59, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d0b5c, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d0b5f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d0b62, 0x3)   mov(memd_a32(ds, edx + 0x48), eax);   /* mov [edx+0x48], eax */
    II(0x100d0b65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d0b68, 0x7)   mov(memd_a32(ds, eax + 0x40), 0x101b5ca4); /* mov dword [eax+0x40], 0x101b5ca4 */
    II(0x100d0b6f, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x14);  /* mov dword [ebp-0x14], 0x14 */
    II(0x100d0b76, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d0b79, 0x4)   mov(ax, memw_a32(ds, eax + 0x28));    /* mov ax, [eax+0x28] */
    II(0x100d0b7d, 0x3)   shl(eax, 0x5);                        /* shl eax, 0x5 */
    II(0x100d0b80, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100d0b83, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100d0b87, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100d0b8b, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100d0b8e, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100d0b91, 0x5)   calld(sys_malloc, 0x9a448);           /* call 0x1016afde */
    II(0x100d0b96, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d0b98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d0b9b, 0x3)   mov(memd_a32(ds, eax + 0x44), edx);   /* mov [eax+0x44], edx */
    II(0x100d0b9e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d0ba1, 0x3)   mov(edx, memd_a32(ds, edx + 0x44));   /* mov edx, [edx+0x44] */
    II(0x100d0ba4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d0ba7, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x100d0baa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d0bad, 0x3)   mov(edx, memd_a32(ds, edx + 0x44));   /* mov edx, [edx+0x44] */
    II(0x100d0bb0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d0bb3, 0x4)   mov(memw_a32(ds, edx + 0x2), ax);     /* mov [edx+0x2], ax */
    II(0x100d0bb7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100d0bbb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0bbc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d0bbf, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100d0bc2, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x100d0bc5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0bc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0bc9, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100d0bcc, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d0bcf, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0bd0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100d0bd4, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0bd5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100d0bd9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0bda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0bdd, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100d0be0, 0x3)   add(eax, 0x73);                       /* add eax, 0x73 */
    II(0x100d0be3, 0x1)   pushd(eax);                           /* push eax */
    II(0x100d0be4, 0x5)   calld(/* sys */ 0x1016abbc, 0x99fd3); /* call 0x1016abbc */
    II(0x100d0be9, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x100d0bec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d0bef, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100d0bf2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100d0bf5, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d0bf7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d0bf8, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d0bf9, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d0bfa, 0x3)   retd(0x10);                           /* ret 0x10 */
FUNC_END

