FUNC_BEGIN(0x100acf56, 0x603f7c7ff022afa4, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xf2, 0x8d, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xf3, 0xdd, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x9e, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xe0, 0x95, 0xfc, 0xff, 0xe8, 0xb9, 0x5a, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x83, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x44, 0, 0x74, 0x17, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xbf, 0x95, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x26, 0xff, 0x74, 0x2, 0xeb, 0xc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0x54, 0, 0, 0, 0xeb, 0x49, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x8e, 0x95, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x11, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3c, 0xe8, 0x12, 0xdd, 0x8, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x1f, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xb4, 0x95, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xff, 0x53, 0x44, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100acf56, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100acf5b, 0x5)   calld(sys_check_available_stack_size, 0xb8df2); /* call 0x10165d52 */
    II(0x100acf60, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100acf61, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100acf62, 0x1)   pushd(edx);                           /* push edx */
    II(0x100acf63, 0x1)   pushd(esi);                           /* push esi */
    II(0x100acf64, 0x1)   pushd(edi);                           /* push edi */
    II(0x100acf65, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100acf66, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100acf68, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100acf6e, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100acf71, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100acf73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100acf76, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100acf79, 0x5)   calld(0x1013ad71, 0x8ddf3);           /* call 0x1013ad71 */
    II(0x100acf7e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100acf80, 0x6)   jzd(0x100ad024, 0x9e);                /* jz dword 0x100ad024 */
    II(0x100acf86, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100acf89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100acf8c, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100acf8f, 0x5)   calld(0x10076574, -0x36a20);          /* call 0x10076574 */
    II(0x100acf94, 0x5)   calld(0x10152a52, 0xa5ab9);           /* call 0x10152a52 */
    II(0x100acf99, 0x2)   test(al, al);                         /* test al, al */
    II(0x100acf9b, 0x6)   jzd(0x100ad024, 0x83);                /* jz dword 0x100ad024 */
    II(0x100acfa1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100acfa4, 0x4)   cmp(memb_a32(ds, eax + 0x44), 0);     /* cmp byte [eax+0x44], 0x0 */
    II(0x100acfa8, 0x2)   jzd(0x100acfc1, 0x17);                /* jz 0x100acfc1 */
    II(0x100acfaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100acfad, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100acfb0, 0x5)   calld(0x10076574, -0x36a41);          /* call 0x10076574 */
    II(0x100acfb5, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100acfb8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100acfbd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100acfbf, 0x2)   jzd(0x100acfc3, 0x2);                 /* jz 0x100acfc3 */
l_0x100acfc1:
    II(0x100acfc1, 0x2)   jmpd(0x100acfcd, 0xa);                /* jmp 0x100acfcd */
l_0x100acfc3:
    II(0x100acfc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100acfc6, 0x5)   cmp(memw_a32(ds, eax + 0x26), -0x1 /* 0xff */); /* cmp word [eax+0x26], 0xff */
    II(0x100acfcb, 0x2)   jzd(0x100acfcf, 0x2);                 /* jz 0x100acfcf */
l_0x100acfcd:
    II(0x100acfcd, 0x2)   jmpd(0x100acfdb, 0xc);                /* jmp 0x100acfdb */
l_0x100acfcf:
    II(0x100acfcf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100acfd1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100acfd4, 0x5)   calld(0x100ad02d, 0x54);              /* call 0x100ad02d */
    II(0x100acfd9, 0x2)   jmpd(0x100ad024, 0x49);               /* jmp 0x100ad024 */
l_0x100acfdb:
    II(0x100acfdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100acfde, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100acfe1, 0x5)   calld(0x10076574, -0x36a72);          /* call 0x10076574 */
    II(0x100acfe6, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100acfe9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100acfee, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100acff0, 0x2)   jzd(0x100ad003, 0x11);                /* jz 0x100ad003 */
    II(0x100acff2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100acff4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100acff7, 0x3)   add(eax, 0x3c);                       /* add eax, 0x3c */
    II(0x100acffa, 0x5)   calld(0x1013ad11, 0x8dd12);           /* call 0x1013ad11 */
    II(0x100acfff, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ad001, 0x2)   jnzd(0x100ad005, 0x2);                /* jnz 0x100ad005 */
l_0x100ad003:
    II(0x100ad003, 0x2)   jmpd(0x100ad024, 0x1f);               /* jmp 0x100ad024 */
l_0x100ad005:
    II(0x100ad005, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad008, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x100ad00b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad00e, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
//    II(0x100ad011, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ad014, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100ad017, 0x5)   calld(0x100765d0, -0x36a4c);          /* call 0x100765d0 */
    II(0x100ad01c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ad01e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ad021, 0x3)   calld_abs(memd_a32(ds, ebx + 0x44));  /* call dword near [ebx+0x44] */
l_0x100ad024:
    II(0x100ad024, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ad026, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ad027, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ad028, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ad029, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ad02a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ad02b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ad02c, 0x1)   retd();                               /* ret */
FUNC_END

